// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace rsh {
namespace server {
namespace protocol {
PROTOBUF_CONSTEXPR Request::Request(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestDefaultTypeInternal() {}
  union {
    Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestDefaultTypeInternal _Request_default_instance_;
PROTOBUF_CONSTEXPR HandshakeRequest::HandshakeRequest(
    ::_pbi::ConstantInitialized)
  : packages_()
  , rsh_version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , r_version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , platform_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct HandshakeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeRequestDefaultTypeInternal() {}
  union {
    HandshakeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeRequestDefaultTypeInternal _HandshakeRequest_default_instance_;
PROTOBUF_CONSTEXPR CompileRequest::CompileRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , closure_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , bc_optimization_(0u)
  , cc_optimization_(0u){}
struct CompileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompileRequestDefaultTypeInternal() {}
  union {
    CompileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompileRequestDefaultTypeInternal _CompileRequest_default_instance_;
PROTOBUF_CONSTEXPR BcCompileRequest::BcCompileRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , closure_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , bc_optimization_(0u){}
struct BcCompileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BcCompileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BcCompileRequestDefaultTypeInternal() {}
  union {
    BcCompileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BcCompileRequestDefaultTypeInternal _BcCompileRequest_default_instance_;
PROTOBUF_CONSTEXPR CompiledFunction::CompiledFunction(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , native_code_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , constants_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CompiledFunctionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompiledFunctionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompiledFunctionDefaultTypeInternal() {}
  union {
    CompiledFunction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompiledFunctionDefaultTypeInternal _CompiledFunction_default_instance_;
PROTOBUF_CONSTEXPR BcCompiledFunction::BcCompiledFunction(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , bcode_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct BcCompiledFunctionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BcCompiledFunctionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BcCompiledFunctionDefaultTypeInternal() {}
  union {
    BcCompiledFunction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BcCompiledFunctionDefaultTypeInternal _BcCompiledFunction_default_instance_;
PROTOBUF_CONSTEXPR CompileResponse::CompileResponse(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct CompileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompileResponseDefaultTypeInternal() {}
  union {
    CompileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompileResponseDefaultTypeInternal _CompileResponse_default_instance_;
PROTOBUF_CONSTEXPR BcCompileResponse::BcCompileResponse(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct BcCompileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BcCompileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BcCompileResponseDefaultTypeInternal() {}
  union {
    BcCompileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BcCompileResponseDefaultTypeInternal _BcCompileResponse_default_instance_;
}  // namespace protocol
}  // namespace server
}  // namespace rsh
static ::_pb::Metadata file_level_metadata_protocol_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_protocol_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_protocol_2eproto = nullptr;

const uint32_t TableStruct_protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::Request, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::HandshakeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::HandshakeRequest, rsh_version_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::HandshakeRequest, r_version_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::HandshakeRequest, platform_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::HandshakeRequest, packages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompileRequest, name_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompileRequest, closure_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompileRequest, bc_optimization_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompileRequest, cc_optimization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompileRequest, name_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompileRequest, closure_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompileRequest, bc_optimization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompiledFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompiledFunction, name_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompiledFunction, native_code_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompiledFunction, constants_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompiledFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompiledFunction, name_),
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompiledFunction, bcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompileResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::CompileResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompileResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::rsh::server::protocol::BcCompileResponse, data_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::rsh::server::protocol::Request)},
  { 10, -1, -1, sizeof(::rsh::server::protocol::HandshakeRequest)},
  { 20, -1, -1, sizeof(::rsh::server::protocol::CompileRequest)},
  { 30, -1, -1, sizeof(::rsh::server::protocol::BcCompileRequest)},
  { 39, -1, -1, sizeof(::rsh::server::protocol::CompiledFunction)},
  { 48, -1, -1, sizeof(::rsh::server::protocol::BcCompiledFunction)},
  { 56, -1, -1, sizeof(::rsh::server::protocol::CompileResponse)},
  { 65, -1, -1, sizeof(::rsh::server::protocol::BcCompileResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::rsh::server::protocol::_Request_default_instance_._instance,
  &::rsh::server::protocol::_HandshakeRequest_default_instance_._instance,
  &::rsh::server::protocol::_CompileRequest_default_instance_._instance,
  &::rsh::server::protocol::_BcCompileRequest_default_instance_._instance,
  &::rsh::server::protocol::_CompiledFunction_default_instance_._instance,
  &::rsh::server::protocol::_BcCompiledFunction_default_instance_._instance,
  &::rsh::server::protocol::_CompileResponse_default_instance_._instance,
  &::rsh::server::protocol::_BcCompileResponse_default_instance_._instance,
};

const char descriptor_table_protodef_protocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016protocol.proto\022\023rsh.server.protocol\"\305\001"
  "\n\007Request\022:\n\thandshake\030\001 \001(\0132%.rsh.serve"
  "r.protocol.HandshakeRequestH\000\0226\n\007compile"
  "\030\002 \001(\0132#.rsh.server.protocol.CompileRequ"
  "estH\000\022;\n\nbc_compile\030\003 \001(\0132%.rsh.server.p"
  "rotocol.BcCompileRequestH\000B\t\n\007payload\"^\n"
  "\020HandshakeRequest\022\023\n\013Rsh_version\030\001 \001(\t\022\021"
  "\n\tR_version\030\002 \001(\t\022\020\n\010platform\030\003 \001(\t\022\020\n\010p"
  "ackages\030\004 \003(\t\"a\n\016CompileRequest\022\014\n\004name\030"
  "\002 \001(\t\022\017\n\007closure\030\003 \001(\014\022\027\n\017bc_optimizatio"
  "n\030\004 \001(\r\022\027\n\017cc_optimization\030\005 \001(\r\"J\n\020BcCo"
  "mpileRequest\022\014\n\004name\030\002 \001(\t\022\017\n\007closure\030\003 "
  "\001(\014\022\027\n\017bc_optimization\030\004 \001(\r\"H\n\020Compiled"
  "Function\022\014\n\004name\030\002 \001(\t\022\023\n\013native_code\030\003 "
  "\001(\014\022\021\n\tconstants\030\004 \001(\014\"1\n\022BcCompiledFunc"
  "tion\022\014\n\004name\030\002 \001(\t\022\r\n\005bcode\030\003 \001(\014\"e\n\017Com"
  "pileResponse\022\021\n\007failure\030\002 \001(\tH\000\0227\n\006resul"
  "t\030\003 \001(\0132%.rsh.server.protocol.CompiledFu"
  "nctionH\000B\006\n\004data\"i\n\021BcCompileResponse\022\021\n"
  "\007failure\030\002 \001(\tH\000\0229\n\006result\030\003 \001(\0132\'.rsh.s"
  "erver.protocol.BcCompiledFunctionH\000B\006\n\004d"
  "ataB\036\n\032org.prlprg.server.protocolP\001b\006pro"
  "to3"
  ;
static ::_pbi::once_flag descriptor_table_protocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protocol_2eproto = {
    false, false, 883, descriptor_table_protodef_protocol_2eproto,
    "protocol.proto",
    &descriptor_table_protocol_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_protocol_2eproto::offsets,
    file_level_metadata_protocol_2eproto, file_level_enum_descriptors_protocol_2eproto,
    file_level_service_descriptors_protocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protocol_2eproto_getter() {
  return &descriptor_table_protocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protocol_2eproto(&descriptor_table_protocol_2eproto);
namespace rsh {
namespace server {
namespace protocol {

// ===================================================================

class Request::_Internal {
 public:
  static const ::rsh::server::protocol::HandshakeRequest& handshake(const Request* msg);
  static const ::rsh::server::protocol::CompileRequest& compile(const Request* msg);
  static const ::rsh::server::protocol::BcCompileRequest& bc_compile(const Request* msg);
};

const ::rsh::server::protocol::HandshakeRequest&
Request::_Internal::handshake(const Request* msg) {
  return *msg->payload_.handshake_;
}
const ::rsh::server::protocol::CompileRequest&
Request::_Internal::compile(const Request* msg) {
  return *msg->payload_.compile_;
}
const ::rsh::server::protocol::BcCompileRequest&
Request::_Internal::bc_compile(const Request* msg) {
  return *msg->payload_.bc_compile_;
}
void Request::set_allocated_handshake(::rsh::server::protocol::HandshakeRequest* handshake) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (handshake) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(handshake);
    if (message_arena != submessage_arena) {
      handshake = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handshake, submessage_arena);
    }
    set_has_handshake();
    payload_.handshake_ = handshake;
  }
  // @@protoc_insertion_point(field_set_allocated:rsh.server.protocol.Request.handshake)
}
void Request::set_allocated_compile(::rsh::server::protocol::CompileRequest* compile) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (compile) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(compile);
    if (message_arena != submessage_arena) {
      compile = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, compile, submessage_arena);
    }
    set_has_compile();
    payload_.compile_ = compile;
  }
  // @@protoc_insertion_point(field_set_allocated:rsh.server.protocol.Request.compile)
}
void Request::set_allocated_bc_compile(::rsh::server::protocol::BcCompileRequest* bc_compile) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (bc_compile) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bc_compile);
    if (message_arena != submessage_arena) {
      bc_compile = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bc_compile, submessage_arena);
    }
    set_has_bc_compile();
    payload_.bc_compile_ = bc_compile;
  }
  // @@protoc_insertion_point(field_set_allocated:rsh.server.protocol.Request.bc_compile)
}
Request::Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rsh.server.protocol.Request)
}
Request::Request(const Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kHandshake: {
      _internal_mutable_handshake()->::rsh::server::protocol::HandshakeRequest::MergeFrom(from._internal_handshake());
      break;
    }
    case kCompile: {
      _internal_mutable_compile()->::rsh::server::protocol::CompileRequest::MergeFrom(from._internal_compile());
      break;
    }
    case kBcCompile: {
      _internal_mutable_bc_compile()->::rsh::server::protocol::BcCompileRequest::MergeFrom(from._internal_bc_compile());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:rsh.server.protocol.Request)
}

inline void Request::SharedCtor() {
clear_has_payload();
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:rsh.server.protocol.Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Request::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:rsh.server.protocol.Request)
  switch (payload_case()) {
    case kHandshake: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.handshake_;
      }
      break;
    }
    case kCompile: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.compile_;
      }
      break;
    }
    case kBcCompile: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.bc_compile_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:rsh.server.protocol.Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .rsh.server.protocol.HandshakeRequest handshake = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handshake(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .rsh.server.protocol.CompileRequest compile = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_compile(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .rsh.server.protocol.BcCompileRequest bc_compile = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_bc_compile(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rsh.server.protocol.Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .rsh.server.protocol.HandshakeRequest handshake = 1;
  if (_internal_has_handshake()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::handshake(this),
        _Internal::handshake(this).GetCachedSize(), target, stream);
  }

  // .rsh.server.protocol.CompileRequest compile = 2;
  if (_internal_has_compile()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::compile(this),
        _Internal::compile(this).GetCachedSize(), target, stream);
  }

  // .rsh.server.protocol.BcCompileRequest bc_compile = 3;
  if (_internal_has_bc_compile()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::bc_compile(this),
        _Internal::bc_compile(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rsh.server.protocol.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rsh.server.protocol.Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .rsh.server.protocol.HandshakeRequest handshake = 1;
    case kHandshake: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.handshake_);
      break;
    }
    // .rsh.server.protocol.CompileRequest compile = 2;
    case kCompile: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.compile_);
      break;
    }
    // .rsh.server.protocol.BcCompileRequest bc_compile = 3;
    case kBcCompile: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.bc_compile_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Request::GetClassData() const { return &_class_data_; }

void Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Request *>(to)->MergeFrom(
      static_cast<const Request &>(from));
}


void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rsh.server.protocol.Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kHandshake: {
      _internal_mutable_handshake()->::rsh::server::protocol::HandshakeRequest::MergeFrom(from._internal_handshake());
      break;
    }
    case kCompile: {
      _internal_mutable_compile()->::rsh::server::protocol::CompileRequest::MergeFrom(from._internal_compile());
      break;
    }
    case kBcCompile: {
      _internal_mutable_bc_compile()->::rsh::server::protocol::BcCompileRequest::MergeFrom(from._internal_bc_compile());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rsh.server.protocol.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::InternalSwap(Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protocol_2eproto_getter, &descriptor_table_protocol_2eproto_once,
      file_level_metadata_protocol_2eproto[0]);
}

// ===================================================================

class HandshakeRequest::_Internal {
 public:
};

HandshakeRequest::HandshakeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  packages_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rsh.server.protocol.HandshakeRequest)
}
HandshakeRequest::HandshakeRequest(const HandshakeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      packages_(from.packages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rsh_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rsh_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rsh_version().empty()) {
    rsh_version_.Set(from._internal_rsh_version(), 
      GetArenaForAllocation());
  }
  r_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    r_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_r_version().empty()) {
    r_version_.Set(from._internal_r_version(), 
      GetArenaForAllocation());
  }
  platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    platform_.Set(from._internal_platform(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rsh.server.protocol.HandshakeRequest)
}

inline void HandshakeRequest::SharedCtor() {
rsh_version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rsh_version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
r_version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  r_version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
platform_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  platform_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HandshakeRequest::~HandshakeRequest() {
  // @@protoc_insertion_point(destructor:rsh.server.protocol.HandshakeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HandshakeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rsh_version_.Destroy();
  r_version_.Destroy();
  platform_.Destroy();
}

void HandshakeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HandshakeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rsh.server.protocol.HandshakeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  rsh_version_.ClearToEmpty();
  r_version_.ClearToEmpty();
  platform_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandshakeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Rsh_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_rsh_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.HandshakeRequest.Rsh_version"));
        } else
          goto handle_unusual;
        continue;
      // string R_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_r_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.HandshakeRequest.R_version"));
        } else
          goto handle_unusual;
        continue;
      // string platform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.HandshakeRequest.platform"));
        } else
          goto handle_unusual;
        continue;
      // repeated string packages = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_packages();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.HandshakeRequest.packages"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HandshakeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rsh.server.protocol.HandshakeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string Rsh_version = 1;
  if (!this->_internal_rsh_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rsh_version().data(), static_cast<int>(this->_internal_rsh_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.HandshakeRequest.Rsh_version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rsh_version(), target);
  }

  // string R_version = 2;
  if (!this->_internal_r_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_r_version().data(), static_cast<int>(this->_internal_r_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.HandshakeRequest.R_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_r_version(), target);
  }

  // string platform = 3;
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.HandshakeRequest.platform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_platform(), target);
  }

  // repeated string packages = 4;
  for (int i = 0, n = this->_internal_packages_size(); i < n; i++) {
    const auto& s = this->_internal_packages(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.HandshakeRequest.packages");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rsh.server.protocol.HandshakeRequest)
  return target;
}

size_t HandshakeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rsh.server.protocol.HandshakeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string packages = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(packages_.size());
  for (int i = 0, n = packages_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      packages_.Get(i));
  }

  // string Rsh_version = 1;
  if (!this->_internal_rsh_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rsh_version());
  }

  // string R_version = 2;
  if (!this->_internal_r_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_r_version());
  }

  // string platform = 3;
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HandshakeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HandshakeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HandshakeRequest::GetClassData() const { return &_class_data_; }

void HandshakeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HandshakeRequest *>(to)->MergeFrom(
      static_cast<const HandshakeRequest &>(from));
}


void HandshakeRequest::MergeFrom(const HandshakeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rsh.server.protocol.HandshakeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  if (!from._internal_rsh_version().empty()) {
    _internal_set_rsh_version(from._internal_rsh_version());
  }
  if (!from._internal_r_version().empty()) {
    _internal_set_r_version(from._internal_r_version());
  }
  if (!from._internal_platform().empty()) {
    _internal_set_platform(from._internal_platform());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeRequest::CopyFrom(const HandshakeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rsh.server.protocol.HandshakeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandshakeRequest::IsInitialized() const {
  return true;
}

void HandshakeRequest::InternalSwap(HandshakeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  packages_.InternalSwap(&other->packages_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &rsh_version_, lhs_arena,
      &other->rsh_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &r_version_, lhs_arena,
      &other->r_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &platform_, lhs_arena,
      &other->platform_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HandshakeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protocol_2eproto_getter, &descriptor_table_protocol_2eproto_once,
      file_level_metadata_protocol_2eproto[1]);
}

// ===================================================================

class CompileRequest::_Internal {
 public:
};

CompileRequest::CompileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rsh.server.protocol.CompileRequest)
}
CompileRequest::CompileRequest(const CompileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  closure_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    closure_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_closure().empty()) {
    closure_.Set(from._internal_closure(), 
      GetArenaForAllocation());
  }
  ::memcpy(&bc_optimization_, &from.bc_optimization_,
    static_cast<size_t>(reinterpret_cast<char*>(&cc_optimization_) -
    reinterpret_cast<char*>(&bc_optimization_)) + sizeof(cc_optimization_));
  // @@protoc_insertion_point(copy_constructor:rsh.server.protocol.CompileRequest)
}

inline void CompileRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
closure_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  closure_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bc_optimization_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cc_optimization_) -
    reinterpret_cast<char*>(&bc_optimization_)) + sizeof(cc_optimization_));
}

CompileRequest::~CompileRequest() {
  // @@protoc_insertion_point(destructor:rsh.server.protocol.CompileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CompileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  closure_.Destroy();
}

void CompileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CompileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rsh.server.protocol.CompileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  closure_.ClearToEmpty();
  ::memset(&bc_optimization_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cc_optimization_) -
      reinterpret_cast<char*>(&bc_optimization_)) + sizeof(cc_optimization_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.CompileRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes closure = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_closure();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 bc_optimization = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          bc_optimization_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 cc_optimization = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          cc_optimization_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CompileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rsh.server.protocol.CompileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.CompileRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bytes closure = 3;
  if (!this->_internal_closure().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_closure(), target);
  }

  // uint32 bc_optimization = 4;
  if (this->_internal_bc_optimization() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_bc_optimization(), target);
  }

  // uint32 cc_optimization = 5;
  if (this->_internal_cc_optimization() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_cc_optimization(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rsh.server.protocol.CompileRequest)
  return target;
}

size_t CompileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rsh.server.protocol.CompileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes closure = 3;
  if (!this->_internal_closure().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_closure());
  }

  // uint32 bc_optimization = 4;
  if (this->_internal_bc_optimization() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_bc_optimization());
  }

  // uint32 cc_optimization = 5;
  if (this->_internal_cc_optimization() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cc_optimization());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CompileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompileRequest::GetClassData() const { return &_class_data_; }

void CompileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CompileRequest *>(to)->MergeFrom(
      static_cast<const CompileRequest &>(from));
}


void CompileRequest::MergeFrom(const CompileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rsh.server.protocol.CompileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_closure().empty()) {
    _internal_set_closure(from._internal_closure());
  }
  if (from._internal_bc_optimization() != 0) {
    _internal_set_bc_optimization(from._internal_bc_optimization());
  }
  if (from._internal_cc_optimization() != 0) {
    _internal_set_cc_optimization(from._internal_cc_optimization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CompileRequest::CopyFrom(const CompileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rsh.server.protocol.CompileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompileRequest::IsInitialized() const {
  return true;
}

void CompileRequest::InternalSwap(CompileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &closure_, lhs_arena,
      &other->closure_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompileRequest, cc_optimization_)
      + sizeof(CompileRequest::cc_optimization_)
      - PROTOBUF_FIELD_OFFSET(CompileRequest, bc_optimization_)>(
          reinterpret_cast<char*>(&bc_optimization_),
          reinterpret_cast<char*>(&other->bc_optimization_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CompileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protocol_2eproto_getter, &descriptor_table_protocol_2eproto_once,
      file_level_metadata_protocol_2eproto[2]);
}

// ===================================================================

class BcCompileRequest::_Internal {
 public:
};

BcCompileRequest::BcCompileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rsh.server.protocol.BcCompileRequest)
}
BcCompileRequest::BcCompileRequest(const BcCompileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  closure_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    closure_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_closure().empty()) {
    closure_.Set(from._internal_closure(), 
      GetArenaForAllocation());
  }
  bc_optimization_ = from.bc_optimization_;
  // @@protoc_insertion_point(copy_constructor:rsh.server.protocol.BcCompileRequest)
}

inline void BcCompileRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
closure_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  closure_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bc_optimization_ = 0u;
}

BcCompileRequest::~BcCompileRequest() {
  // @@protoc_insertion_point(destructor:rsh.server.protocol.BcCompileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BcCompileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  closure_.Destroy();
}

void BcCompileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BcCompileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rsh.server.protocol.BcCompileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  closure_.ClearToEmpty();
  bc_optimization_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BcCompileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.BcCompileRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes closure = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_closure();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 bc_optimization = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          bc_optimization_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BcCompileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rsh.server.protocol.BcCompileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.BcCompileRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bytes closure = 3;
  if (!this->_internal_closure().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_closure(), target);
  }

  // uint32 bc_optimization = 4;
  if (this->_internal_bc_optimization() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_bc_optimization(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rsh.server.protocol.BcCompileRequest)
  return target;
}

size_t BcCompileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rsh.server.protocol.BcCompileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes closure = 3;
  if (!this->_internal_closure().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_closure());
  }

  // uint32 bc_optimization = 4;
  if (this->_internal_bc_optimization() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_bc_optimization());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BcCompileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BcCompileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BcCompileRequest::GetClassData() const { return &_class_data_; }

void BcCompileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BcCompileRequest *>(to)->MergeFrom(
      static_cast<const BcCompileRequest &>(from));
}


void BcCompileRequest::MergeFrom(const BcCompileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rsh.server.protocol.BcCompileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_closure().empty()) {
    _internal_set_closure(from._internal_closure());
  }
  if (from._internal_bc_optimization() != 0) {
    _internal_set_bc_optimization(from._internal_bc_optimization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BcCompileRequest::CopyFrom(const BcCompileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rsh.server.protocol.BcCompileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BcCompileRequest::IsInitialized() const {
  return true;
}

void BcCompileRequest::InternalSwap(BcCompileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &closure_, lhs_arena,
      &other->closure_, rhs_arena
  );
  swap(bc_optimization_, other->bc_optimization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BcCompileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protocol_2eproto_getter, &descriptor_table_protocol_2eproto_once,
      file_level_metadata_protocol_2eproto[3]);
}

// ===================================================================

class CompiledFunction::_Internal {
 public:
};

CompiledFunction::CompiledFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rsh.server.protocol.CompiledFunction)
}
CompiledFunction::CompiledFunction(const CompiledFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  native_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    native_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_native_code().empty()) {
    native_code_.Set(from._internal_native_code(), 
      GetArenaForAllocation());
  }
  constants_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    constants_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_constants().empty()) {
    constants_.Set(from._internal_constants(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rsh.server.protocol.CompiledFunction)
}

inline void CompiledFunction::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
native_code_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  native_code_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
constants_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  constants_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CompiledFunction::~CompiledFunction() {
  // @@protoc_insertion_point(destructor:rsh.server.protocol.CompiledFunction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CompiledFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  native_code_.Destroy();
  constants_.Destroy();
}

void CompiledFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CompiledFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:rsh.server.protocol.CompiledFunction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  native_code_.ClearToEmpty();
  constants_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompiledFunction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.CompiledFunction.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes native_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_native_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes constants = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_constants();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CompiledFunction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rsh.server.protocol.CompiledFunction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.CompiledFunction.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bytes native_code = 3;
  if (!this->_internal_native_code().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_native_code(), target);
  }

  // bytes constants = 4;
  if (!this->_internal_constants().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_constants(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rsh.server.protocol.CompiledFunction)
  return target;
}

size_t CompiledFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rsh.server.protocol.CompiledFunction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes native_code = 3;
  if (!this->_internal_native_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_native_code());
  }

  // bytes constants = 4;
  if (!this->_internal_constants().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_constants());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompiledFunction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CompiledFunction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompiledFunction::GetClassData() const { return &_class_data_; }

void CompiledFunction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CompiledFunction *>(to)->MergeFrom(
      static_cast<const CompiledFunction &>(from));
}


void CompiledFunction::MergeFrom(const CompiledFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rsh.server.protocol.CompiledFunction)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_native_code().empty()) {
    _internal_set_native_code(from._internal_native_code());
  }
  if (!from._internal_constants().empty()) {
    _internal_set_constants(from._internal_constants());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CompiledFunction::CopyFrom(const CompiledFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rsh.server.protocol.CompiledFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompiledFunction::IsInitialized() const {
  return true;
}

void CompiledFunction::InternalSwap(CompiledFunction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &native_code_, lhs_arena,
      &other->native_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &constants_, lhs_arena,
      &other->constants_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CompiledFunction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protocol_2eproto_getter, &descriptor_table_protocol_2eproto_once,
      file_level_metadata_protocol_2eproto[4]);
}

// ===================================================================

class BcCompiledFunction::_Internal {
 public:
};

BcCompiledFunction::BcCompiledFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rsh.server.protocol.BcCompiledFunction)
}
BcCompiledFunction::BcCompiledFunction(const BcCompiledFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  bcode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bcode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bcode().empty()) {
    bcode_.Set(from._internal_bcode(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rsh.server.protocol.BcCompiledFunction)
}

inline void BcCompiledFunction::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bcode_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bcode_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BcCompiledFunction::~BcCompiledFunction() {
  // @@protoc_insertion_point(destructor:rsh.server.protocol.BcCompiledFunction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BcCompiledFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  bcode_.Destroy();
}

void BcCompiledFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BcCompiledFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:rsh.server.protocol.BcCompiledFunction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  bcode_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BcCompiledFunction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.BcCompiledFunction.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes bcode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_bcode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BcCompiledFunction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rsh.server.protocol.BcCompiledFunction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.BcCompiledFunction.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bytes bcode = 3;
  if (!this->_internal_bcode().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_bcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rsh.server.protocol.BcCompiledFunction)
  return target;
}

size_t BcCompiledFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rsh.server.protocol.BcCompiledFunction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes bcode = 3;
  if (!this->_internal_bcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BcCompiledFunction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BcCompiledFunction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BcCompiledFunction::GetClassData() const { return &_class_data_; }

void BcCompiledFunction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BcCompiledFunction *>(to)->MergeFrom(
      static_cast<const BcCompiledFunction &>(from));
}


void BcCompiledFunction::MergeFrom(const BcCompiledFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rsh.server.protocol.BcCompiledFunction)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_bcode().empty()) {
    _internal_set_bcode(from._internal_bcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BcCompiledFunction::CopyFrom(const BcCompiledFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rsh.server.protocol.BcCompiledFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BcCompiledFunction::IsInitialized() const {
  return true;
}

void BcCompiledFunction::InternalSwap(BcCompiledFunction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &bcode_, lhs_arena,
      &other->bcode_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BcCompiledFunction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protocol_2eproto_getter, &descriptor_table_protocol_2eproto_once,
      file_level_metadata_protocol_2eproto[5]);
}

// ===================================================================

class CompileResponse::_Internal {
 public:
  static const ::rsh::server::protocol::CompiledFunction& result(const CompileResponse* msg);
};

const ::rsh::server::protocol::CompiledFunction&
CompileResponse::_Internal::result(const CompileResponse* msg) {
  return *msg->data_.result_;
}
void CompileResponse::set_allocated_result(::rsh::server::protocol::CompiledFunction* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_data();
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    set_has_result();
    data_.result_ = result;
  }
  // @@protoc_insertion_point(field_set_allocated:rsh.server.protocol.CompileResponse.result)
}
CompileResponse::CompileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rsh.server.protocol.CompileResponse)
}
CompileResponse::CompileResponse(const CompileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kFailure: {
      _internal_set_failure(from._internal_failure());
      break;
    }
    case kResult: {
      _internal_mutable_result()->::rsh::server::protocol::CompiledFunction::MergeFrom(from._internal_result());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:rsh.server.protocol.CompileResponse)
}

inline void CompileResponse::SharedCtor() {
clear_has_data();
}

CompileResponse::~CompileResponse() {
  // @@protoc_insertion_point(destructor:rsh.server.protocol.CompileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CompileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void CompileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CompileResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:rsh.server.protocol.CompileResponse)
  switch (data_case()) {
    case kFailure: {
      data_.failure_.Destroy();
      break;
    }
    case kResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete data_.result_;
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void CompileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rsh.server.protocol.CompileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string failure = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_failure();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.CompileResponse.failure"));
        } else
          goto handle_unusual;
        continue;
      // .rsh.server.protocol.CompiledFunction result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CompileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rsh.server.protocol.CompileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string failure = 2;
  if (_internal_has_failure()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_failure().data(), static_cast<int>(this->_internal_failure().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.CompileResponse.failure");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_failure(), target);
  }

  // .rsh.server.protocol.CompiledFunction result = 3;
  if (_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rsh.server.protocol.CompileResponse)
  return target;
}

size_t CompileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rsh.server.protocol.CompileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // string failure = 2;
    case kFailure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_failure());
      break;
    }
    // .rsh.server.protocol.CompiledFunction result = 3;
    case kResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.result_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CompileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompileResponse::GetClassData() const { return &_class_data_; }

void CompileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CompileResponse *>(to)->MergeFrom(
      static_cast<const CompileResponse &>(from));
}


void CompileResponse::MergeFrom(const CompileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rsh.server.protocol.CompileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kFailure: {
      _internal_set_failure(from._internal_failure());
      break;
    }
    case kResult: {
      _internal_mutable_result()->::rsh::server::protocol::CompiledFunction::MergeFrom(from._internal_result());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CompileResponse::CopyFrom(const CompileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rsh.server.protocol.CompileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompileResponse::IsInitialized() const {
  return true;
}

void CompileResponse::InternalSwap(CompileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CompileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protocol_2eproto_getter, &descriptor_table_protocol_2eproto_once,
      file_level_metadata_protocol_2eproto[6]);
}

// ===================================================================

class BcCompileResponse::_Internal {
 public:
  static const ::rsh::server::protocol::BcCompiledFunction& result(const BcCompileResponse* msg);
};

const ::rsh::server::protocol::BcCompiledFunction&
BcCompileResponse::_Internal::result(const BcCompileResponse* msg) {
  return *msg->data_.result_;
}
void BcCompileResponse::set_allocated_result(::rsh::server::protocol::BcCompiledFunction* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_data();
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    set_has_result();
    data_.result_ = result;
  }
  // @@protoc_insertion_point(field_set_allocated:rsh.server.protocol.BcCompileResponse.result)
}
BcCompileResponse::BcCompileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rsh.server.protocol.BcCompileResponse)
}
BcCompileResponse::BcCompileResponse(const BcCompileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kFailure: {
      _internal_set_failure(from._internal_failure());
      break;
    }
    case kResult: {
      _internal_mutable_result()->::rsh::server::protocol::BcCompiledFunction::MergeFrom(from._internal_result());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:rsh.server.protocol.BcCompileResponse)
}

inline void BcCompileResponse::SharedCtor() {
clear_has_data();
}

BcCompileResponse::~BcCompileResponse() {
  // @@protoc_insertion_point(destructor:rsh.server.protocol.BcCompileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BcCompileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void BcCompileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BcCompileResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:rsh.server.protocol.BcCompileResponse)
  switch (data_case()) {
    case kFailure: {
      data_.failure_.Destroy();
      break;
    }
    case kResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete data_.result_;
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void BcCompileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rsh.server.protocol.BcCompileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BcCompileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string failure = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_failure();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rsh.server.protocol.BcCompileResponse.failure"));
        } else
          goto handle_unusual;
        continue;
      // .rsh.server.protocol.BcCompiledFunction result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BcCompileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rsh.server.protocol.BcCompileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string failure = 2;
  if (_internal_has_failure()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_failure().data(), static_cast<int>(this->_internal_failure().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "rsh.server.protocol.BcCompileResponse.failure");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_failure(), target);
  }

  // .rsh.server.protocol.BcCompiledFunction result = 3;
  if (_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rsh.server.protocol.BcCompileResponse)
  return target;
}

size_t BcCompileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rsh.server.protocol.BcCompileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // string failure = 2;
    case kFailure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_failure());
      break;
    }
    // .rsh.server.protocol.BcCompiledFunction result = 3;
    case kResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.result_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BcCompileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BcCompileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BcCompileResponse::GetClassData() const { return &_class_data_; }

void BcCompileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BcCompileResponse *>(to)->MergeFrom(
      static_cast<const BcCompileResponse &>(from));
}


void BcCompileResponse::MergeFrom(const BcCompileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rsh.server.protocol.BcCompileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kFailure: {
      _internal_set_failure(from._internal_failure());
      break;
    }
    case kResult: {
      _internal_mutable_result()->::rsh::server::protocol::BcCompiledFunction::MergeFrom(from._internal_result());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BcCompileResponse::CopyFrom(const BcCompileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rsh.server.protocol.BcCompileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BcCompileResponse::IsInitialized() const {
  return true;
}

void BcCompileResponse::InternalSwap(BcCompileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BcCompileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protocol_2eproto_getter, &descriptor_table_protocol_2eproto_once,
      file_level_metadata_protocol_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace server
}  // namespace rsh
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::rsh::server::protocol::Request*
Arena::CreateMaybeMessage< ::rsh::server::protocol::Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rsh::server::protocol::Request >(arena);
}
template<> PROTOBUF_NOINLINE ::rsh::server::protocol::HandshakeRequest*
Arena::CreateMaybeMessage< ::rsh::server::protocol::HandshakeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rsh::server::protocol::HandshakeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rsh::server::protocol::CompileRequest*
Arena::CreateMaybeMessage< ::rsh::server::protocol::CompileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rsh::server::protocol::CompileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rsh::server::protocol::BcCompileRequest*
Arena::CreateMaybeMessage< ::rsh::server::protocol::BcCompileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rsh::server::protocol::BcCompileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rsh::server::protocol::CompiledFunction*
Arena::CreateMaybeMessage< ::rsh::server::protocol::CompiledFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rsh::server::protocol::CompiledFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::rsh::server::protocol::BcCompiledFunction*
Arena::CreateMaybeMessage< ::rsh::server::protocol::BcCompiledFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rsh::server::protocol::BcCompiledFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::rsh::server::protocol::CompileResponse*
Arena::CreateMaybeMessage< ::rsh::server::protocol::CompileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rsh::server::protocol::CompileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::rsh::server::protocol::BcCompileResponse*
Arena::CreateMaybeMessage< ::rsh::server::protocol::BcCompileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rsh::server::protocol::BcCompileResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
