
┌──────────────────────────────────────────────────────────────────────────────┐
│ mostattributes<-[0x56034aa92a80]                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1│
│ Properties:  ForceOrd: 1                                                     │
├────── Final PIR Version
mostattributes<-[0x56034aa92a80]
BB0
  val?~+          %0.0  = LdArg                    1
  val?~+          %0.1  = LdArg                    0
  val+            %0.2  = Force<wrapped>           %0.0,    <vec$+>
  (int|real)$-    %0.3  = CallSafeBuiltin    wed   length(%0.2)    <int$->
  lgl$#-          %0.4  = IsType                   %0.3 isA int$-
  lgl$-           %0.5  = Is                       %0.2, list
  void                    Branch                   %0.4 -> BB89 (if true) | BB90 (if false)
BB89   <- [0]
  int$-           %89.0 = CastType           d     dn %0.3
  lgl$#-          %89.1 = CheckTrueFalse     e     %89.0
  env             e89.2 = MkEnv              l     x=%0.1, value=%0.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %89.1 -> BB5 (if true) | BB3 (if false)
BB90   <- [0]
  env             e90.0 = (MkEnv)            l     x=%0.1, value=%0.0, parent=R_BaseNamespace, context 1
  fs              %90.1 = FrameState         R     0x56034c33e160+91: [%0.3], env=e90.0
  void                    Deopt              !v    %90.1, Typecheck@0x56034c36d618[Type#2], %0.3
BB5   <- [89]
  lgl$-           %5.0  = Not                d     %0.5, elided
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB87 (if true) | BB6 (if false)
BB3   <- [89]
  void                    Nop                !     
  goto BB4
BB87   <- [5]
  (cls|spec|blt)  %87.0 = LdFun              !v    stop, R_BaseNamespace
  fs              %87.1 = FrameState         R     0x56034c33e160+143: [%87.0], env=e89.2
  void                    Deopt              !v    %87.1, DeadCall@0x56034c36d618[Call#1], %87.0
BB6   <- [5]
  val+            %6.0  = CallSafeBuiltin    wed   names(%0.2)    <str$->
  lgl$#-          %6.1  = IsType                   %6.0 isA val?-
  void                    Branch                   %6.1 -> BB91 (if true) | BB92 (if false)
BB4   <- [3, 61, 123]
  val?^ | miss    %4.0  = LdVar              eR    x, e89.2
  void                    Visible            v     
  val?            %4.2  = Force!<value>      !     %4.0, e89.2   <real+>
  void                    Return             l     %4.2
BB91   <- [6]
  val-            %91.0 = CastType           d     dn %6.0   <str$->
  val+            %91.1 = CallSafeBuiltin    wed   match("names", %91.0, NA, nil)    <int$->
  lgl$#-          %91.2 = IsType                   %91.1 isA int$-
  void                    Branch                   %91.2 -> BB93 (if true) | BB94 (if false)
BB92   <- [6]
  prom-           %92.0 = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p0, e89.2
  val?^           %92.1 = CastType                 up %92.0
  fs              %92.2 = FrameState         R     0x56034c33e160+268: [<blt is.na>], env=e89.2
  env             e92.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%92.1, x="names", parent=R_BaseNamespace, context 0
  fs              %92.4 = FrameState         R     0x560349290d40+23: ["names"], env=e92.3, next=%92.2
  fs              %92.5 = FrameState         R     0x56034c1be4a0+32(pr): [%6.0], env=e89.2, next=%92.4
  void                    Deopt              !v    %92.5, Typecheck@0x5603492e3cb0[Type#1], %6.0
BB93   <- [91]
  int$-           %93.0 = CastType           d     dn %91.1
  void                    StVar              lW    inam, %93.0, e89.2
  lgl$-           %93.2 = CallSafeBuiltin    wed   is.na(%93.0)    <lgl$->
  lgl$-           %93.3 = Not                d     %93.2, elided
  void                    StVar              lW    h.nam, %93.3, e89.2
  lgl$#-          %93.5 = CheckTrueFalse     e     %93.3
  void                    Branch                   %93.5 -> BB86 (if true) | BB11 (if false)
BB94   <- [91]
  prom-           %94.0 = MkArg                    %6.0, mostattributes<-[0x56034aa92a80]_p0 (!refl), e89.2
  val?~           %94.1 = CastType                 up %94.0
  fs              %94.2 = FrameState         R     0x56034c33e160+268: [<blt is.na>], env=e89.2
  env             e94.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%94.1, x="names", parent=R_BaseNamespace, context 0
  fs              %94.4 = FrameState         R     0x560349290d40+69: [%91.1], env=e94.3, next=%94.2
  void                    Deopt              !v    %94.4, Typecheck@0x56034c36d618[Type#9], %91.1
BB86   <- [93]
  val?            %86.0 = Extract2_1D        wed   %0.2, %93.0, elided   <str->
  void                    StVar              lW    n1, %86.0, e89.2
  int$-           %86.2 = Minus              d     %93.0, elided
  val?            %86.3 = Extract1_1D        wed   %0.2, %86.2, elided   <vec+>
  void                    StVar              lW    value, %86.3, e89.2
  val?            %86.5 = %86.3
  goto BB12
BB11   <- [93]
  void                    Nop                !     
  val?~+          %11.1 = %0.0
  goto BB12
BB12   <- [11, 86]
  val?~ | miss    %12.0 = Phi                      %86.5:BB86, %11.1:BB11
  val?~ | miss    %12.1 = %12.0
  val?~           %12.2 = ChkMissing         e     %12.1
  val?            %12.3 = Force!<value>            %12.2,    <vec+>
  lgl$#-          %12.4 = IsType                   %12.3 isA val?+
  void                    Branch                   %12.4 -> BB95 (if true) | BB96 (if false)
BB95   <- [12]
  val?+           %95.0 = CastType           d     dn %12.3   <vec+>
  val+            %95.1 = CallSafeBuiltin    wed   names(%95.0)    <str->
  lgl$#-          %95.2 = IsType                   %95.1 isA val?-
  void                    Branch                   %95.2 -> BB97 (if true) | BB98 (if false)
BB96   <- [12]
  fs              %96.0 = FrameState         R     0x56034c33e160+480: [], env=e89.2
  void                    Deopt              !v    %96.0, Typecheck@0x56034c36d618[Type#22], %12.3
BB97   <- [95]
  val-            %97.0 = CastType           d     dn %95.1   <str->
  val+            %97.1 = CallSafeBuiltin    wed   match("dim", %97.0, NA, nil)    <int$->
  lgl$#-          %97.2 = IsType                   %97.1 isA int$-
  void                    Branch                   %97.2 -> BB99 (if true) | BB100 (if false)
BB98   <- [95]
  prom-           %98.0 = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p2, e89.2
  val?^           %98.1 = CastType                 up %98.0
  fs              %98.2 = FrameState         R     0x56034c33e160+577: [<blt is.na>], env=e89.2
  env             e98.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%98.1, x="dim", parent=R_BaseNamespace, context 0
  fs              %98.4 = FrameState         R     0x560349290d40+23: ["dim"], env=e98.3, next=%98.2
  fs              %98.5 = FrameState         R     0x56034b800540+32(pr): [%95.1], env=e89.2, next=%98.4
  void                    Deopt              !v    %98.5, Typecheck@0x5603492e3cb0[Type#1], %95.1
BB99   <- [97]
  int$-           %99.0 = CastType           d     dn %97.1
  void                    StVar              lW    idin, %99.0, e89.2
  lgl$-           %99.2 = CallSafeBuiltin    wed   is.na(%99.0)    <lgl$->
  lgl$-           %99.3 = Not                d     %99.2, elided
  void                    StVar              lW    h.dim, %99.3, e89.2
  lgl$#-          %99.5 = CheckTrueFalse     e     %99.3
  void                    Branch                   %99.5 -> BB79 (if true) | BB19 (if false)
BB100   <- [97]
  prom-           %100.0 = MkArg                    %97.0, mostattributes<-[0x56034aa92a80]_p2 (!refl), e89.2
  val?~           %100.1 = CastType                 up %100.0
  fs              %100.2 = FrameState         R     0x56034c33e160+577: [<blt is.na>], env=e89.2
  env             e100.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%100.1, x="dim", parent=R_BaseNamespace, context 0
  fs              %100.4 = FrameState         R     0x560349290d40+69: [%97.1], env=e100.3, next=%100.2
  void                    Deopt              !v    %100.4, Typecheck@0x56034c36d618[Type#24], %97.1
BB79   <- [99]
  lgl$#-          %79.0 = IsType                   %95.0 isA val+   <@?>
  void                    Branch                   %79.0 -> BB85 (if true) | BB80 (if false)
BB19   <- [99]
  void                    Nop                !     
  val?~ | miss    %19.1 = %12.1
  goto BB20
BB85   <- [79]
  void                    Nop                !     
  lgl$#-          %85.1 = true
  int$-           %85.2 = %99.0
  goto BB81
BB80   <- [79]
  prom-           %80.0 = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p11 (!refl), e89.2
  lgl$#-          %80.1 = false
  prom-           %80.2 = %80.0
  goto BB81
BB20   <- [19, 83]
  val?~ | miss    %20.0 = Phi                      %83.4:BB83, %19.1:BB19
  val?~ | miss    %20.1 = %20.0
  val?~           %20.2 = ChkMissing         e     %20.1
  val?            %20.3 = Force!<value>            %20.2,    <vec+>
  lgl$#-          %20.4 = IsType                   %20.3 isA val?+
  void                    Branch                   %20.4 -> BB101 (if true) | BB102 (if false)
BB81   <- [80, 85]
  lgl$#-          %81.0 = Phi                      %85.1:BB85, %80.1:BB80
  lgl$#-          %81.1 = %81.0
  (int|prom)-     %81.2 = Phi                      %85.2:BB85, %80.2:BB80
  (int|prom)-     %81.3 = %81.2
  val?            %81.4 = Extract2_1D        wed   %95.0, %81.3, elided   <val?_>
  void                    StVar              lW    d1, %81.4, e89.2
  void                    Branch                   %81.1 -> BB84 (if true) | BB82 (if false)
BB101   <- [20]
  val?+           %101.0 = CastType           d     dn %20.3   <vec+>
  val+            %101.1 = CallSafeBuiltin    wed   names(%101.0)    <str->
  lgl$#-          %101.2 = IsType                   %101.1 isA val?-
  void                    Branch                   %101.2 -> BB103 (if true) | BB104 (if false)
BB102   <- [20]
  fs              %102.0 = FrameState         R     0x56034c33e160+789: [], env=e89.2
  void                    Deopt              !v    %102.0, Typecheck@0x56034c36d618[Type#37], %20.3
BB84   <- [81]
  int$-           %84.0 = Minus              d     %99.0, elided
  int$-           %84.1 = %84.0
  goto BB83
BB82   <- [81]
  prom-           %82.0 = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p10, e89.2
  prom-           %82.1 = %82.0
  goto BB83
BB103   <- [101]
  val-            %103.0 = CastType           d     dn %101.1   <str->
  val+            %103.1 = CallSafeBuiltin    wed   match("dimnames", %103.0, NA, nil)    <int$->
  lgl$#-          %103.2 = IsType                   %103.1 isA int$-
  void                    Branch                   %103.2 -> BB105 (if true) | BB106 (if false)
BB104   <- [101]
  prom-           %104.0 = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p4, e89.2
  val?^           %104.1 = CastType                 up %104.0
  fs              %104.2 = FrameState         R     0x56034c33e160+886: [<blt is.na>], env=e89.2
  env             e104.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%104.1, x="dimnames", parent=R_BaseNamespace, context 0
  fs              %104.4 = FrameState         R     0x560349290d40+23: ["dimnames"], env=e104.3, next=%104.2
  fs              %104.5 = FrameState         R     0x56034c01a590+32(pr): [%101.1], env=e89.2, next=%104.4
  void                    Deopt              !v    %104.5, Typecheck@0x5603492e3cb0[Type#1], %101.1
BB83   <- [82, 84]
  (int|prom)-     %83.0 = Phi                      %84.1:BB84, %82.1:BB82
  (int|prom)-     %83.1 = %83.0
  val?            %83.2 = Extract1_1D        wed   %95.0, %83.1, elided   <val?_>
  void                    StVar              lW    value, %83.2, e89.2
  val?            %83.4 = %83.2
  goto BB20
BB105   <- [103]
  int$-           %105.0 = CastType           d     dn %103.1
  void                    StVar              lW    idmn, %105.0, e89.2
  lgl$-           %105.2 = CallSafeBuiltin    wed   is.na(%105.0)    <lgl$->
  lgl$-           %105.3 = Not                d     %105.2, elided
  void                    StVar              lW    h.dmn, %105.3, e89.2
  lgl$#-          %105.5 = CheckTrueFalse     e     %105.3
  void                    Branch                   %105.5 -> BB72 (if true) | BB27 (if false)
BB106   <- [103]
  prom-           %106.0 = MkArg                    %103.0, mostattributes<-[0x56034aa92a80]_p4 (!refl), e89.2
  val?~           %106.1 = CastType                 up %106.0
  fs              %106.2 = FrameState         R     0x56034c33e160+886: [<blt is.na>], env=e89.2
  env             e106.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%106.1, x="dimnames", parent=R_BaseNamespace, context 0
  fs              %106.4 = FrameState         R     0x560349290d40+69: [%103.1], env=e106.3, next=%106.2
  void                    Deopt              !v    %106.4, Typecheck@0x56034c36d618[Type#39], %103.1
BB72   <- [105]
  lgl$#-          %72.0 = IsType                   %101.0 isA val+   <@?>
  void                    Branch                   %72.0 -> BB78 (if true) | BB73 (if false)
BB27   <- [105]
  void                    Nop                !     
  val?~ | miss    %27.1 = %20.1
  goto BB28
BB78   <- [72]
  void                    Nop                !     
  lgl$#-          %78.1 = true
  int$-           %78.2 = %105.0
  goto BB74
BB73   <- [72]
  prom-           %73.0 = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p9 (!refl), e89.2
  lgl$#-          %73.1 = false
  prom-           %73.2 = %73.0
  goto BB74
BB28   <- [27, 76]
  val?~ | miss    %28.0 = Phi                      %76.4:BB76, %27.1:BB27
  val?~ | miss    %28.1 = %28.0
  val?~           %28.2 = ChkMissing         e     %28.1
  val?            %28.3 = Force!<value>            %28.2,    <vec+>
  val+            %28.4 = Force!<wrapped>          %0.1,    <real->
  val?            %28.5 = NamedCall          !v    <blt attributes<->(%28.4, value=%28.3) e89.2   <real->
  void                    StVar              lW    x, %28.5, e89.2
  val?^ | miss    %28.7 = LdVar              eR    attr, e89.2
  lgl$#-          %28.8 = Identical                <blt attr>, %28.7   <true>
  void                    Branch                   %28.8 -> BB107 (if true) | BB108 (if false)
BB74   <- [73, 78]
  lgl$#-          %74.0 = Phi                      %78.1:BB78, %73.1:BB73
  lgl$#-          %74.1 = %74.0
  (int|prom)-     %74.2 = Phi                      %78.2:BB78, %73.2:BB73
  (int|prom)-     %74.3 = %74.2
  val?            %74.4 = Extract2_1D        wed   %101.0, %74.3, elided   <val?_>
  void                    StVar              lW    dn1, %74.4, e89.2
  void                    Branch                   %74.1 -> BB77 (if true) | BB75 (if false)
BB107   <- [28]
  val             %107.0 = ChkMissing         e     %28.5
  val?            %107.1 = CallBuiltin        !v    attr(%28.5, "dim") e89.2   <nil->
  void                    StVar              lW    dm, %107.1, e89.2
  val?^ | miss    %107.3 = LdVar              eR    length, e89.2
  lgl$#-          %107.4 = Identical                <blt length>, %107.3   <true>
  void                    Branch                   %107.4 -> BB109 (if true) | BB110 (if false)
BB108   <- [28]
  fs              %108.0 = FrameState         R     0x56034c33e160+1180: [], env=e89.2
  void                    Deopt              !v    %108.0, DeadBranchReached@0x56034c36d618[Test#10], %28.8   !
BB77   <- [74]
  int$-           %77.0 = Minus              d     %105.0, elided
  int$-           %77.1 = %77.0
  goto BB76
BB75   <- [74]
  prom-           %75.0 = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p8, e89.2
  prom-           %75.1 = %75.0
  goto BB76
BB109   <- [107]
  val?^ | miss    %109.0 = LdVar              eR    x, e89.2
  val?            %109.1 = Force!<value>      !v    %109.0, e89.2   <real->
  lgl$-           %109.2 = Is                       %109.1, list
  lgl$#-          %109.3 = CheckTrueFalse     e     %109.2
  void                    Branch                   %109.3 -> BB69 (if true) | BB33 (if false)
BB110   <- [107]
  fs              %110.0 = FrameState         R     0x56034c33e160+1296: [], env=e89.2
  void                    Deopt              !v    %110.0, DeadBranchReached@0x56034c36d618[Test#11], %107.4   !
BB76   <- [75, 77]
  (int|prom)-     %76.0 = Phi                      %77.1:BB77, %75.1:BB75
  (int|prom)-     %76.1 = %76.0
  val?            %76.2 = Extract1_1D        wed   %101.0, %76.1, elided   <val?_>
  void                    StVar              lW    value, %76.2, e89.2
  val?            %76.4 = %76.2
  goto BB28
BB69   <- [109]
  val?^ | miss    %69.0 = LdVar              eR    unclass, e89.2
  lgl$#-          %69.1 = Identical                <blt unclass>, %69.0   <@?>
  void                    Branch                   %69.1 -> BB71 (if true) | BB70 (if false)
BB33   <- [109]
  val?^ | miss    %33.0 = LdVar              eR    x, e89.2
  val?            %33.1 = Force!<value>      !v    %33.0, e89.2   <real->
  val?            %33.2 = %33.1
  goto BB34
BB71   <- [69]
  val?^ | miss    %71.0 = LdVar              eR    x, e89.2
  val?            %71.1 = Force!             !v    %71.0, e89.2   <val?_>
  val?            %71.2 = CallBuiltin        !v    unclass(%71.1) e89.2   <val?_>
  val?            %71.3 = %71.2
  goto BB34
BB70   <- [69]
  (cls|spec|blt)  %70.0 = LdFun              !v    unclass, e89.2
  fs              %70.1 = FrameState         R     0x56034c33e160+1428: [<blt length>, %70.0], env=e89.2
  void                    Deopt              !v    %70.1, DeadCall@0x56034c36d618[Call#21], %70.0   !
BB34   <- [33, 71]
  val?            %34.0 = Phi                      %33.2:BB33, %71.3:BB71
  val?            %34.1 = %34.0
  val?            %34.2 = CallBuiltin        !v    length(%34.1) e89.2   <int$->
  lgl$#-          %34.3 = IsType                   %34.2 isA int$-
  void                    Branch                   %34.3 -> BB111 (if true) | BB112 (if false)
BB111   <- [34]
  int$-           %111.0 = CastType           d     dn %34.2
  void                    StVar              lW    L, %111.0, e89.2
  val?^ | miss    %111.2 = LdVar              eR    h.dim, e89.2
  lgl$#-          %111.3 = IsType                   %111.2 isA lgl$-
  void                    Branch                   %111.3 -> BB113 (if true) | BB114 (if false)
BB112   <- [34]
  fs              %112.0 = FrameState         R     0x56034c33e160+1513: [%34.2], env=e89.2
  void                    Deopt              !v    %112.0, Typecheck@0x56034c36d618[Type#63], %34.2   !
BB113   <- [111]
  lgl$-           %113.0 = CastType           d     dn %111.2
  lgl$-           %113.1 = AsLogical                %113.0
  lgl$#-          %113.2 = Identical                %113.1, false
  void                    Branch                   %113.2 -> BB68 (if true) | BB39 (if false)
BB114   <- [111]
  fs              %114.0 = FrameState         R     0x56034c33e160+1527: [], env=e89.2
  void                    Deopt              !v    %114.0, Typecheck@0x56034c36d618[Type#64], %111.2   !
BB68   <- [113]
  void                    Nop                !     
  lgl$-           %68.1 = %113.1
  goto BB44
BB39   <- [113]
  val?^ | miss    %39.0 = LdVar              eR    prod, e89.2
  lgl$#-          %39.1 = Identical                <blt prod>, %39.0   <@?>
  void                    Branch                   %39.1 -> BB41 (if true) | BB40 (if false)
BB44   <- [68, 115]
  lgl$-           %44.0 = Phi                      %115.5:BB115, %68.1:BB68
  lgl$-           %44.1 = %44.0
  lgl$#-          %44.2 = CheckTrueFalse     e     %44.1
  void                    Branch                   %44.2 -> BB67 (if true) | BB47 (if false)
BB41   <- [39]
  val?^ | miss    %41.0 = LdVar              eR    d1, e89.2
  val?            %41.1 = Force!             !v    %41.0, e89.2   <val?_>
  lgl$#-          %41.2 = IsType                   %41.1 isA val?+
  void                    Branch                   %41.2 -> BB115 (if true) | BB116 (if false)
BB40   <- [39]
  (cls|spec|blt)  %40.0 = LdFun              !v    prod, e89.2
  fs              %40.1 = FrameState         R     0x56034c33e160+1590: [%113.1, %111.0, %40.0], env=e89.2
  void                    Deopt              !v    %40.1, DeadCall@0x56034c36d618[Call#22], %40.0   !
BB67   <- [44]
  val?^ | miss    %67.0 = LdVar              eR    d1, e89.2
  val?            %67.1 = Force!             !v    %67.0, e89.2   <val?_>
  void                    StVar              lW    dm, %67.1, e89.2
  (cls|spec|blt)  %67.3 = LdFun              !v    attr<-, e89.2
  fs              %67.4 = FrameState         R     0x56034c33e160+1707: [%67.1, %67.3], env=e89.2
  void                    Deopt              !v    %67.4, DeadCall@0x56034c36d618[Call#23], %67.3   !
BB47   <- [44]
  val?^ | miss    %47.0 = LdVar              eR    h.dmn, e89.2
  lgl$#-          %47.1 = IsType                   %47.0 isA lgl$-
  void                    Branch                   %47.1 -> BB117 (if true) | BB118 (if false)
BB115   <- [41]
  val?+           %115.0 = CastType           d     dn %41.1   <val?_>
  (real|complex)$- %115.1 = CallSafeBuiltin    wed   prod(%115.0)    <val?_>
  lgl$-           %115.2 = Eq                 d     %111.0, %115.1, elided   <val?_>
  lgl$-           %115.3 = AsLogical                %115.2
  lgl$-           %115.4 = LAnd                     %113.1, %115.3
  lgl$-           %115.5 = %115.4
  goto BB44
BB116   <- [41]
  fs              %116.0 = FrameState         R     0x56034c33e160+1631: [%113.1, %111.0, <blt prod>, %41.1], env=e89.2
  void                    Deopt              !v    %116.0, Typecheck@0x56034c36d618[Type#67], %41.1   !
BB117   <- [47]
  lgl$-           %117.0 = CastType           d     dn %47.0
  lgl$-           %117.1 = AsLogical                %117.0
  lgl$#-          %117.2 = Identical                %117.1, false
  void                    Branch                   %117.2 -> BB66 (if true) | BB48 (if false)
BB118   <- [47]
  fs              %118.0 = FrameState         R     0x56034c33e160+1666: [%44.1], env=e89.2
  void                    Deopt              !v    %118.0, Typecheck@0x56034c36d618[Type#72], %47.0   !
BB66   <- [117]
  void                    Nop                !     
  lgl$-           %66.1 = %117.1
  goto BB49
BB48   <- [117]
  val?^ | miss    %48.0 = LdVar              eR    dm, e89.2
  val?            %48.1 = Force!             !v    %48.0, e89.2   <val?_>
  lgl$-           %48.2 = Is                       %48.1, NULL
  lgl$-           %48.3 = Not                d     %48.2, elided
  lgl$-           %48.4 = AsLogical                %48.3
  lgl$-           %48.5 = LAnd                     %117.1, %48.4
  lgl$-           %48.6 = %48.5
  goto BB49
BB49   <- [66, 48]
  lgl$-           %49.0 = Phi                      %48.6:BB48, %66.1:BB66
  lgl$-           %49.1 = %49.0
  lgl$#-          %49.2 = CheckTrueFalse     e     %49.1
  void                    Branch                   %49.2 -> BB65 (if true) | BB52 (if false)
BB65   <- [49]
  (cls|spec|blt)  %65.0 = LdFun              !v    vapply, e89.2
  fs              %65.1 = FrameState         R     0x56034c33e160+1838: [%65.0], env=e89.2
  void                    Deopt              !v    %65.1, DeadCall@0x56034c36d618[Call#24], %65.0   !
BB52   <- [49]
  val?^ | miss    %52.0 = LdVar              eR    h.nam, e89.2
  lgl$#-          %52.1 = IsType                   %52.0 isA lgl$-
  void                    Branch                   %52.1 -> BB119 (if true) | BB120 (if false)
BB119   <- [52]
  lgl$-           %119.0 = CastType           d     dn %52.0
  lgl$-           %119.1 = AsLogical                %119.0
  lgl$#-          %119.2 = Identical                %119.1, false
  void                    Branch                   %119.2 -> BB64 (if true) | BB53 (if false)
BB120   <- [52]
  void                    Nop                !     
  val?^ | miss    %120.1 = %52.0
  dr              %120.2 = Typecheck@0x56034c36d618[Type#96]
  goto BB50
BB64   <- [119]
  void                    Nop                !     
  lgl$-           %64.1 = %119.1
  goto BB54
BB53   <- [119]
  val?^ | miss    %53.0 = LdVar              eR    dm, e89.2
  lgl$#-          %53.1 = IsType                   %53.0 isA val?~- | miss
  void                    Branch                   %53.1 -> BB121 (if true) | BB122 (if false)
BB50   <- [120, 122, 126, 128, 130]
  val?^ | miss    %50.0 = Phi                      %120.1:BB120, %122.1:BB122, %126.1:BB126, %128.1:BB128, %130.1:BB130
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %120.2:BB120, %122.2:BB122, %126.2:BB126, %128.2:BB128, %130.2:BB130
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x56034c33e160+1822: [%49.1], env=e89.2
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB54   <- [64, 121]
  lgl$-           %54.0 = Phi                      %121.5:BB121, %64.1:BB64
  lgl$-           %54.1 = %54.0
  lgl$-           %54.2 = AsLogical                %54.1
  lgl$#-          %54.3 = Identical                %54.2, false
  void                    Branch                   %54.3 -> BB63 (if true) | BB55 (if false)
BB121   <- [53]
  val?~- | miss   %121.0 = CastType           d     dn %53.0
  val?-           %121.1 = Force!<value>            %121.0,    <nil->
  lgl$-           %121.2 = Is                       %121.1, NULL
  lgl$-           %121.3 = AsLogical                %121.2
  lgl$-           %121.4 = LAnd                     %119.1, %121.3
  lgl$-           %121.5 = %121.4
  goto BB54
BB122   <- [53]
  void                    Nop                !     
  val?^ | miss    %122.1 = %53.0
  dr              %122.2 = Typecheck@0x56034c36d618[Type#97]
  goto BB50
BB63   <- [54]
  void                    Nop                !     
  lgl$-           %63.1 = %54.2
  goto BB58
BB55   <- [54]
  val?^ | miss    %55.0 = LdVar              eR    L, e89.2
  lgl$#-          %55.1 = IsType                   %55.0 isA int$-
  void                    Branch                   %55.1 -> BB125 (if true) | BB126 (if false)
BB58   <- [63, 131]
  lgl$-           %58.0 = Phi                      %131.4:BB131, %63.1:BB63
  lgl$-           %58.1 = %58.0
  lgl$#-          %58.2 = CheckTrueFalse     e     %58.1
  void                    Branch                   %58.2 -> BB62 (if true) | BB61 (if false)
BB125   <- [55]
  int$-           %125.0 = CastType           d     dn %55.0
  val?^ | miss    %125.1 = LdVar              eR    length, e89.2
  lgl$#-          %125.2 = Identical                <blt length>, %125.1   <true>
  void                    Branch                   %125.2 -> BB127 (if true) | BB128 (if false)
BB126   <- [55]
  void                    Nop                !     
  val?^ | miss    %126.1 = %55.0
  dr              %126.2 = Typecheck@0x56034c36d618[Type#98]
  goto BB50
BB62   <- [58]
  val?^ | miss    %62.0 = LdVar              eR    n1, e89.2
  lgl$#-          %62.1 = IsType                   %62.0 isA val?~- | miss
  void                    Branch                   %62.1 -> BB123 (if true) | BB124 (if false)
BB61   <- [58]
  void                    Nop                !     
  goto BB4
BB127   <- [125]
  val?^ | miss    %127.0 = LdVar              eR    n1, e89.2
  lgl$#-          %127.1 = IsType                   %127.0 isA val?~- | miss
  void                    Branch                   %127.1 -> BB129 (if true) | BB130 (if false)
BB128   <- [125]
  void                    Nop                !     
  lgl$#-          %128.1 = %125.2
  dr              %128.2 = DeadBranchReached@0x56034c36d618[Test#17]
  goto BB50
BB123   <- [62]
  val?~- | miss   %123.0 = CastType           d     dn %62.0
  val?-           %123.1 = Force!<value>            %123.0,    <str->
  (cls|spec|blt)  %123.2 = LdFun              !v    attr<-, <0x560348a7fe08>, e89.2
  val?^ | miss    %123.3 = LdVar              eR    x, e89.2
  val?            %123.4 = Force!<value>      !v    %123.3, e89.2   <real->
  val?            %123.5 = NamedCall          !v    %123.2(%123.4, "names", value=%123.1) e89.2
  void                    StVar              lW    x, %123.5, e89.2
  goto BB4
BB124   <- [62]
  fs              %124.0 = FrameState         R     0x56034c33e160+2360: [%58.1], env=e89.2
  void                    Deopt              !v    %124.0, Typecheck@0x56034c36d618[Type#103], %62.0   !
BB129   <- [127]
  val?~- | miss   %129.0 = CastType           d     dn %127.0
  val?-           %129.1 = Force!<value>            %129.0,    <str->
  (int|real)$-    %129.2 = CallSafeBuiltin    wed   length(%129.1)    <int$->
  lgl$#-          %129.3 = IsType                   %129.2 isA int$-
  void                    Branch                   %129.3 -> BB131 (if true) | BB132 (if false)
BB130   <- [127]
  void                    Nop                !     
  val?^ | miss    %130.1 = %127.0
  dr              %130.2 = Typecheck@0x56034c36d618[Type#100]
  goto BB50
BB131   <- [129]
  int$-           %131.0 = CastType           d     dn %129.2
  lgl$-           %131.1 = Eq                 d     %125.0, %131.0, elided   <lgl$->
  lgl$-           %131.2 = AsLogical                %131.1
  lgl$-           %131.3 = LAnd                     %54.2, %131.2
  lgl$-           %131.4 = %131.3
  goto BB58
BB132   <- [129]
  fs              %132.0 = FrameState         R     0x56034c33e160+2347: [%54.2, %125.0, %129.2], env=e89.2
  void                    Deopt              !v    %132.0, Typecheck@0x56034c36d618[Type#101], %129.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x560348a7c470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x560348a7c470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x560348a7c470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mostattributes<-[0x56034aa92a80]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    idmn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Minus              !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    idmn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    idin, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Minus              !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    idin, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ mostattributes<-[0x56034aa92a80]                                             │
└──────────────────────────────────────────────────────────────────────────────┘
