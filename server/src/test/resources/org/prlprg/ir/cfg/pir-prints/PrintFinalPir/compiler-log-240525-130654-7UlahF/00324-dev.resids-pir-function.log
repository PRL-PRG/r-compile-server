
┌──────────────────────────────────────────────────────────────────────────────┐
│ dev.resids[0x56034c631620]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2│
│ Properties:  ForceOrd: 2                                                     │
├────── Final PIR Version
dev.resids[0x56034c631620]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     y=%0.2, mu=%0.1, wt=%0.0, parent=?, context 1
  val+            %0.4  = Force!<lazy>       !vr   %0.0,    <real+>
  lgl$#-          %0.5  = IsType                   %0.4 isA real+
  void                    Branch                   %0.5 -> BB10 (if true) | BB11 (if false)
BB10   <- [0]
  real+           %10.0 = CastType           d     dn %0.4
  real+           %10.1 = Mul                wed   -2, %10.0, elided   <real+>
  (cls|spec|blt)  %10.2 = LdFun              !v    log, <0x560348a81cf0>, ?
  prom-           %10.3 = MkArg                    unboundValue, dev.resids[0x56034c631620]_p0, e0.3
  val?            %10.4 = Call               !v    %10.2(%10.3) e0.3   <real+>
  val?^ | miss    %10.5 = LdVar              eR    y, e0.3
  val?            %10.6 = Force!<wrapped>    !v    %10.5, e0.3   <real+>
  val?^ | miss    %10.7 = LdVar              eR    mu, e0.3
  val?            %10.8 = Force!<wrapped>    !v    %10.7, e0.3   <real+>
  lgl$#-          %10.9 = IsType                   %10.8 isA real+
  lgl$#-          %10.10 = IsType                   %10.6 isA real+
  void                    Branch                   %10.10 -> BB12 (if true) | BB13 (if false)
BB11   <- [0]
  fs              %11.0 = FrameState         R     0x56034c746d30+16: [-2, %0.4], env=e0.3
  void                    Deopt              !v    %11.0, Typecheck@0x56034c198030[Type#0], %0.4   !
BB12   <- [10]
  real+           %12.0 = CastType           d     dn %10.6
  void                    Branch                   %10.9 -> BB14 (if true) | BB15 (if false)
BB13   <- [10]
  void                    Nop                !     
  val?            %13.1 = %10.6
  dr              %13.2 = Typecheck@0x56034c198030[Type#9]
  goto BB3
BB14   <- [12]
  real+           %14.0 = CastType           d     dn %10.8
  real+           %14.1 = Sub                wed   %12.0, %14.0, elided   <real+>
  val?^ | miss    %14.2 = LdVar              eR    mu, e0.3
  val?            %14.3 = Force!<wrapped>    !v    %14.2, e0.3   <real+>
  lgl$#-          %14.4 = IsType                   %14.3 isA real+
  void                    Branch                   %14.4 -> BB16 (if true) | BB17 (if false)
BB15   <- [12]
  void                    Nop                !     
  val?            %15.1 = %10.8
  dr              %15.2 = Typecheck@0x56034c198030[Type#10]
  goto BB3
BB3   <- [13, 15]
  val?^ | miss    %3.0  = Phi                      %13.1:BB13, %15.1:BB15
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %13.2:BB13, %15.2:BB15
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x56034c746d30+87: [%10.1, %10.4, %10.6, %10.8], env=e0.3
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB16   <- [14]
  real+           %16.0 = CastType           d     dn %14.3
  real+           %16.1 = Div                wed   %14.1, %16.0, elided   <real+>
  lgl$#-          %16.2 = IsType                   %10.4 isA real+
  void                    Branch                   %16.2 -> BB18 (if true) | BB19 (if false)
BB17   <- [14]
  fs              %17.0 = FrameState         R     0x56034c746d30+108: [%10.1, %10.4, %14.1, %14.3], env=e0.3
  void                    Deopt              !v    %17.0, Typecheck@0x56034c198030[Type#12], %14.3   !
BB18   <- [16]
  real+           %18.0 = CastType           d     dn %10.4
  real+           %18.1 = Sub                wed   %18.0, %16.1, elided   <real+>
  void                    Visible            v     
  real+           %18.3 = Mul                vwed  %10.1, %18.1, elided   <real+>
  void                    Return             l     %18.3
BB19   <- [16]
  fs              %19.0 = FrameState         R     0x56034c746d30+114: [%10.1, %10.4, %16.1], env=e0.3
  void                    Deopt              !v    %19.0, Typecheck@0x56034c198030[Type#8], %10.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     ifelse, e0.0
  prom-           %0.2  = MkArg                    unboundValue, dev.resids[0x56034c631620]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, dev.resids[0x56034c631620]_p2, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, 1, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  void                    Visible            v     
  val?            %0.4  = Eq                 !     %0.2, 0, e0.0   <val?_>
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?^ | miss    %0.3  = LdVar              eR    mu, e0.0
  void                    Visible            v     
  val?            %0.5  = Force              !     %0.3, e0.0   <val?_>
  val?            %0.6  = Div                !     %0.2, %0.5, e0.0   <val?_>
  void                    Return             l     %0.6

│ dev.resids[0x56034c631620]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
