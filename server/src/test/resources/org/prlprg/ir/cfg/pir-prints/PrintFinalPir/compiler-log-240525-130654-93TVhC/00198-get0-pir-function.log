
┌──────────────────────────────────────────────────────────────────────────────┐
│ get0[0x563fa8a3cdf0]                                                         │
│ Context: CorrOrd,!TMany,Argmatch;Eager2,Eager3,NonRefl2,NonRefl3,!Obj3 miss: 1│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
get0[0x563fa8a3cdf0]
BB0
  val?~+          %0.0  = LdArg                    3
  val?~ | miss    %0.1  = LdArg                    2
  val?^ | miss    %0.2  = LdArg                    1
  val?^ | miss    %0.3  = LdArg                    0
  lgl$#-          %0.4  = Identical                %0.2, missingArg
  lgl$#-          %0.5  = Identical                %0.1, missingArg
  env             e0.6  = MkEnv              l     x=%0.3, envir=%0.2, mode=%0.1, inherits=%0.0, ifnotfound(miss)=missingArg, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.4 -> BB2 (if true) | BB9 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, get0[0x563fa8a3cdf0]_p0, e0.6
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    envir, %2.1, e0.6
  goto BB3
BB9   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 9]
  void                    Branch                   %0.5 -> BB8 (if true) | BB4 (if false)
BB8   <- [3]
  void                    StArg              lW    mode, "any", e0.6
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [4, 8]
  void                    StArg              lW    ifnotfound, nil, e0.6
  val?^           %5.1  = ChkMissing         e     %0.3
  val?            %5.2  = Force!<lazy>       !v    %5.1, e0.6   <str$+>
  lgl$#-          %5.3  = IsType                   %5.2 isA val?+
  void                    Branch                   %5.3 -> BB10 (if true) | BB11 (if false)
BB10   <- [5]
  val?+           %10.0 = CastType           d     dn %5.2   <str$+>
  val?^ | miss    %10.1 = LdVar              eR    envir, e0.6
  val?            %10.2 = Force!<lazy>       !v    %10.1, e0.6   <env+>
  val?^ | miss    %10.3 = LdVar              eR    mode, e0.6
  val?            %10.4 = Force!<lazy>       !v    %10.3, e0.6   <str$->
  val?^ | miss    %10.5 = LdVar              eR    inherits, e0.6
  val?            %10.6 = Force!<lazy>       !v    %10.5, e0.6   <lgl$->
  val?^ | miss    %10.7 = LdVar              eR    ifnotfound, e0.6
  val?            %10.8 = Force!<lazy>       !v    %10.7, e0.6   <(nil|vec)+>
  val?            %10.9 = CallBuiltin        !     get0(%10.0, %10.2, %10.4, %10.6, %10.8) e0.6
  void                    Return             l     %10.9
BB11   <- [5]
  fs              %11.0 = FrameState         R     0x563fa79e43e0+9: [%5.2], env=e0.6
  void                    Deopt              !v    %11.0, Typecheck@0x563fa7993ff0[Type#1], %5.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     pos.to.env, e0.0
  prom-           %0.2  = MkArg                    unboundValue, get0[0x563fa8a3cdf0]_p1, 
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  void                    Visible            v     
  void                    Return             l     -1L

│ get0[0x563fa8a3cdf0]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
