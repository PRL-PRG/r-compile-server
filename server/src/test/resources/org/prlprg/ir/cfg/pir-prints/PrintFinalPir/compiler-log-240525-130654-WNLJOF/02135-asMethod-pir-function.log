
┌──────────────────────────────────────────────────────────────────────────────┐
│ asMethod[0x55fa11a99350]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj1     │
│ Properties:                                                                  │
├────── Final PIR Version
asMethod[0x55fa11a99350]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  int$-           %0.3  = Length                   <str [1] ".Data" "target" "defined" "generic">
  int$-           %0.4  = Inc                      0L
  lgl$-           %0.5  = Lt                 d     %0.3, %0.4, elided   <false>
  lgl$#-          %0.6  = Identical                %0.5, true
  void                    Branch                   %0.6 -> BB8 (if true) | BB7 (if false)
BB8   <- [0]
  env             e8.0  = (MkEnv)            l     from=%0.2, to=%0.1, value=%0.0, parent=<env 0x55fa0b35b378>, context 1
  fs              %8.1  = FrameState         R     0x55fa105743b0+15: [<str [1] ".Data" "target" "defined" "generic">, %0.3, %0.4, %0.3, %0.4], env=e8.0
  void                    Deopt              !v    %8.1, DeadBranchReached@0x55fa16bad3a0[Test#0], %0.6
BB7   <- [0]
  str$-           %7.0  = Extract2_1D        wed   <str [1] ".Data" "target" "defined" "generic">, %0.4, elided
  env             e7.1  = MkEnv              l     from=%0.2, to=%0.1, value=%0.0, what=%7.0, parent=<env 0x55fa0b35b378>, context 1
  (cls|spec|blt)  %7.2  = LdFun              !v    <-, <0x55fa0ad48da8>, <env 0x55fa0b35b378>
  prom-           %7.3  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p0, e7.1
  prom-           %7.4  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p3, e7.1
  val?            %7.5  = Call               !v    %7.2(%7.3, %7.4) e7.1
  int$-           %7.6  = %0.4
  goto BB3
BB3   <- [4, 7]
  int$-           %3.0  = Phi                      %7.6:BB7, %4.6:BB4
  int$-           %3.1  = %3.0
  int$-           %3.2  = Inc                      %3.1
  lgl$-           %3.3  = Lt                 d     %0.3, %3.2, elided
  lgl$#-          %3.4  = Identical                %3.3, true
  void                    Branch                   %3.4 -> BB5 (if true) | BB4 (if false)
BB5   <- [3]
  val?^ | miss    %5.0  = LdVar              eR    from, e7.1
  void                    Visible            v     
  val?            %5.2  = Force!<value>      !     %5.0, e7.1   <cls>
  void                    Return             l     %5.2
BB4   <- [3]
  str$-           %4.0  = Extract2_1D        wed   <str [1] ".Data" "target" "defined" "generic">, %3.2, elided
  void                    StVar              lW    what, %4.0, e7.1
  (cls|spec|blt)  %4.2  = LdFun              !v    <-, <0x55fa0ad48da8>, e7.1
  prom-           %4.3  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p6, e7.1
  prom-           %4.4  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p9, e7.1
  val?            %4.5  = Call               !v    %4.2(%4.3, %4.4) e7.1
  int$-           %4.6  = %3.2
  goto BB3
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     slot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p2, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     slot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p4, e0.0
  prom-           %0.3  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p5, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     slot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p7, e0.0
  prom-           %0.3  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p8, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     slot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p10, e0.0
  prom-           %0.3  = MkArg                    unboundValue, asMethod[0x55fa11a99350]_p11, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ asMethod[0x55fa11a99350]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
