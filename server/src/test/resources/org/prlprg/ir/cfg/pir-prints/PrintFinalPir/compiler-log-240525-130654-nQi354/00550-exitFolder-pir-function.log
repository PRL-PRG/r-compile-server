
┌──────────────────────────────────────────────────────────────────────────────┐
│ exitFolder[0x55804ea10060]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
exitFolder[0x55804ea10060]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  (cls|spec|blt)  %0.3  = LdFun              !v    $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %0.4  = MkArg                    unboundValue, exitFolder[0x55804ea10060]_p0, e0.2
  prom-           %0.5  = MkArg                    unboundValue, exitFolder[0x55804ea10060]_p1, e0.2
  val?            %0.6  = Call               !v    %0.3(%0.4, %0.5) e0.2   <cls->
  (cls|spec|blt)  %0.7  = ChkFunction        e     %0.6
  prom-           %0.8  = MkArg                    unboundValue, exitFolder[0x55804ea10060]_p2, e0.2
  prom-           %0.9  = MkArg                    unboundValue, exitFolder[0x55804ea10060]_p3, e0.2
  val+            %0.10 = CallSafeBuiltin          bodyCode(%0.7) 
  lgl$#-          %0.11 = Identical                %0.10, <(rir::DispatchTable*)0x55804f219160>
  void                    Branch                   %0.11 -> BB8 (if true) | BB9 (if false)
BB8   <- [0]
  env             e8.0  = CallSafeBuiltin          environment(%0.7) 
  val?^           %8.1  = CastType                 up %0.9
  val?^           %8.2  = CastType                 up %0.8
  val?^ | miss    %8.3  = LdVar              eR    exit, e8.0
  (cls|spec|blt)  %8.4  = CastType                 dn %8.3
  val+            %8.5  = CallSafeBuiltin          bodyCode(%8.4) 
  lgl$#-          %8.6  = Identical                %8.5, <(rir::DispatchTable*)0x55804f453070>
  void                    Branch                   %8.6 -> BB10 (if true) | BB11 (if false)
BB9   <- [0]
  void                    Nop                !     
  val+            %9.1  = %0.10
  dr              %9.2  = CallTarget@0x55804f4ab168[Call#1]
  goto BB7
BB10   <- [8]
  val?            %10.0 = Force!             d     %8.3, 
  env             e10.1 = MkEnv              l     e=%8.2, w=%8.1, parent=e8.0, context 0
  prom-           %10.2 = MkArg                    unboundValue, exitFolder[0x55804ea10060]_p4, e10.1
  (cls|spec|blt)  %10.3 = ChkFunction        e     %10.0
  env             e10.4 = CallSafeBuiltin          environment(%10.3) 
  val?^           %10.5 = CastType                 up %10.2
  val?^ | miss    %10.6 = LdVar              eR    fail, e8.0
  env             e10.7 = (MkEnv)            l     v=%10.5, parent=e10.4, context -1
  val?            %10.8 = Force!<lazy>       !vL   %10.6, e10.7   <nil->
  lgl$#-          %10.9 = IsEnvStub          R     , e10.7
  void                    Branch                   %10.9 -> BB12 (if true) | BB13 (if false)
BB11   <- [8]
  void                    Nop                !     
  val+            %11.1 = %8.5
  dr              %11.2 = CallTarget@0x55804e398a38[Call#0]
  goto BB7
BB7   <- [9, 11]
  val?^ | miss    %7.0  = Phi                      %9.1:BB9, %11.1:BB11
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %9.2:BB9, %11.2:BB11
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55804e2fc150+37: [%0.6], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB12   <- [10]
  prom-           %12.0 = MkArg                    %10.8, exitFolder[0x55804ea10060]_p4 (!refl), e10.1
  val?~           %12.1 = CastType                 up %12.0
  void                    StArg              lWd   v, %12.1, e10.7
  void                    StVarSuper         lRW   value, %10.8, e10.7
  val?^ | miss    %12.4 = LdVar              eRd   throw, e10.4
  val?            %12.5 = Force!             !vL   %12.4, e10.7   <val?_>
  lgl$#-          %12.6 = IsEnvStub          R     , e10.7
  void                    Branch                   %12.6 -> BB14 (if true) | BB15 (if false)
BB13   <- [10]
  fs              %13.0 = FrameState         R     0x55804e2fc150+75: [], env=e0.2
  fs              %13.1 = FrameState         R     0x55804edd7dd0+32: [], env=e10.1, next=%13.0
  fs              %13.2 = FrameState         R     0x55804ecb5530+9: [], env=e10.7, next=%13.1
  fs              %13.3 = FrameState         R     0x55804e280660+5(pr): [%10.8], env=e10.1, next=%13.2
  void                    Deopt              !v    %13.3, EnvStubMaterialized@0x55804e398358[Call#unknown], e10.7   !
BB14   <- [12]
  (cls|spec|blt)  %14.0 = LdFun              !v    stop0, e0.2
  fs              %14.1 = FrameState         R     0x55804e2fc150+81: [%14.0], env=e0.2
  void                    Deopt              !v    %14.1, DeadCall@0x55804f4ab168[Call#2], %14.0   !
BB15   <- [12]
  fs              %15.0 = FrameState         R     0x55804e2fc150+75: [], env=e0.2
  fs              %15.1 = FrameState         R     0x55804edd7dd0+32: [], env=e10.1, next=%15.0
  fs              %15.2 = FrameState         R     0x55804ecb5530+28: [%12.5], env=e10.7, next=%15.1
  void                    Deopt              !v    %15.2, EnvStubMaterialized@0x55804e398358[Call#unknown], e10.7   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fail, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3

│ exitFolder[0x55804ea10060]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
