
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.call[0x55804f043f90]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
match.call[0x55804f043f90]
BB0
  val?~+          %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     definition=%0.2, call=%0.1, expand.dots=%0.0, envir(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %0.4  = MkArg                    unboundValue, match.call[0x55804f043f90]_p0, e0.3
  val?^ | miss    %0.5  = CastType                 up %0.4
  void                    StArg              lW    envir, %0.5, e0.3
  lgl$-           %0.7  = Missing            eR    definition, e0.3
  lgl$-           %0.8  = Not                d     %0.7, elided
  lgl$-           %0.9  = AsLogical                %0.8
  lgl$#-          %0.10 = Identical                %0.9, false
  void                    Branch                   %0.10 -> BB2 (if true) | BB6 (if false)
BB2   <- [0]
  void                    Nop                !     
  lgl$-           %2.1  = %0.9
  goto BB3
BB6   <- [0]
  val?            %6.0  = Force<lazy>        !v    %0.2, e0.3   <cls->
  lgl$-           %6.1  = Is                       %6.0, NULL
  lgl$-           %6.2  = AsLogical                %6.1
  lgl$-           %6.3  = LAnd                     %0.9, %6.2
  lgl$#-          %6.4  = IsType                   %6.0 isA val?-
  void                    Branch                   %6.4 -> BB9 (if true) | BB10 (if false)
BB3   <- [2, 9]
  lgl$-           %3.0  = Phi                      %9.1:BB9, %2.1:BB2
  lgl$-           %3.1  = %3.0
  lgl$#-          %3.2  = CheckTrueFalse     e     %3.1
  void                    Branch                   %3.2 -> BB5 (if true) | BB4 (if false)
BB9   <- [6]
  void                    Nop                !     
  lgl$-           %9.1  = %6.3
  goto BB3
BB10   <- [6]
  fs              %10.0 = FrameState         R     0x55804eddd5e0+23: [%0.9, %6.0], env=e0.3
  void                    Deopt              !v    %10.0, Typecheck@0x55804eddc800[Type#5], %6.0   !
BB5   <- [3]
  (cls|spec|blt)  %5.0  = LdFun              !v    sys.function, e0.3
  fs              %5.1  = FrameState         R     0x55804eddd5e0+51: [%5.0], env=e0.3
  void                    Deopt              !v    %5.1, DeadCall@0x55804eddc800[Call#5], %5.0   !
BB4   <- [3]
  val?^ | miss    %4.0  = LdVar              eR    definition, e0.3
  val?            %4.1  = Force!<wrapped>    !v    %4.0, e0.3   <cls->
  val?^ | miss    %4.2  = LdVar              eR    call, e0.3
  val?            %4.3  = Force!<lazy>       !v    %4.2, e0.3   <code->
  val?^ | miss    %4.4  = LdVar              eR    expand.dots, e0.3
  val?            %4.5  = Force!<value>      !v    %4.4, e0.3   <lgl$->
  val?^ | miss    %4.6  = LdVar              eR    envir, e0.3
  val?            %4.7  = Force!<lazy>       !v    %4.6, e0.3   <env->
  val?            %4.8  = CallBuiltin        !     match.call(%4.1, %4.3, %4.5, %4.7) e0.3
  void                    Return             l     %4.8
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, <0x55804bff5170>, e0.0
  val?            %0.2  = Call               !     %0.1(2L) e0.0   <env->
  void                    Return             l     %0.2

│ match.call[0x55804f043f90]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
