
┌──────────────────────────────────────────────────────────────────────────────┐
│ dimnamesGets[0x5614fb733990]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj1              │
│ Properties:                                                                  │
├────── Final PIR Version
dimnamesGets[0x5614fb733990]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    dim, <env 0x5614fad267d8>
  lgl$#-          %0.3  = Identical                <blt dim>, %0.2   <true>
  void                    Branch                   %0.3 -> BB39 (if true) | BB40 (if false)
BB39   <- [0]
  env             e39.0 = MkEnv              l     x=%0.1, value=%0.0, parent=<env 0x5614fad267d8>, context 1
  val?            %39.1 = Force!<lazy>       !vr   %0.1,    <other>
  val?            %39.2 = CallBuiltin        !v    dim(%39.1) e39.0   <int->
  void                    StVar              lW    d, %39.2, e39.0
  val?^ | miss    %39.4 = LdVar              eR    value, e39.0
  val?            %39.5 = Force!<lazy>       !v    %39.4, e39.0   <vec->
  lgl$-           %39.6 = Is                       %39.5, list
  lgl$-           %39.7 = Not                d     %39.6, elided
  lgl$-           %39.8 = AsLogical                %39.7
  lgl$#-          %39.9 = Identical                %39.8, true
  void                    Branch                   %39.9 -> BB37 (if true) | BB5 (if false)
BB40   <- [0]
  env             e40.0 = (MkEnv)            l     x=%0.1, value=%0.0, parent=<env 0x5614fad267d8>, context 1
  fs              %40.1 = FrameState         R     0x5614fe3cba40+17: [<blt dim>, %0.3], env=e40.0
  void                    Deopt              !v    %40.1, DeadBranchReached@0x56150028b628[Test#0], %0.3
BB37   <- [39]
  void                    Nop                !     
  lgl$-           %37.1 = %39.8
  goto BB10
BB5   <- [39]
  val?^ | miss    %5.0  = LdVar              eR    length, e39.0
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <true>
  void                    Branch                   %5.1 -> BB41 (if true) | BB42 (if false)
BB10   <- [37, 51]
  lgl$-           %10.0 = Phi                      %51.4:BB51, %37.1:BB37
  lgl$-           %10.1 = %10.0
  lgl$-           %10.2 = AsLogical                %10.1
  lgl$#-          %10.3 = Identical                %10.2, true
  void                    Branch                   %10.3 -> BB36 (if true) | BB11 (if false)
BB41   <- [5]
  val?^ | miss    %41.0 = LdVar              eR    value, e39.0
  val?            %41.1 = Force!<wrapped>    !v    %41.0, e39.0   <vec->
  lgl$#-          %41.2 = IsType                   %41.1 isA val?-
  void                    Branch                   %41.2 -> BB45 (if true) | BB46 (if false)
BB42   <- [5]
  fs              %42.0 = FrameState         R     0x5614fe3cba40+114: [%39.5], env=e39.0
  void                    Deopt              !v    %42.0, DeadBranchReached@0x56150028b628[Test#1], %5.1   !
BB36   <- [10]
  void                    Nop                !     
  lgl$-           %36.1 = %10.2
  goto BB20
BB11   <- [10]
  val?^ | miss    %11.0 = LdVar              eR    value, e39.0
  val?            %11.1 = Force!<wrapped>    !v    %11.0, e39.0   <vec->
  lgl$#-          %11.2 = IsType                   %11.1 isA val+   <true>
  lgl$#-          %11.3 = IsType                   %11.1 isA val?-
  void                    Branch                   %11.2 -> BB43 (if true) | BB44 (if false)
BB45   <- [41]
  val?-           %45.0 = CastType           d     dn %41.1   <vec->
  (int|real)$-    %45.1 = CallSafeBuiltin    wed   length(%45.0)    <int$->
  lgl$#-          %45.2 = IsType                   %45.1 isA int$-
  void                    Branch                   %45.2 -> BB51 (if true) | BB52 (if false)
BB46   <- [41]
  fs              %46.0 = FrameState         R     0x5614fe3cba40+201: [%39.8, <blt length>, %41.1], env=e39.0
  void                    Deopt              !v    %46.0, Typecheck@0x56150028b628[Type#5], %41.1   !
BB20   <- [36, 19]
  lgl$-           %20.0 = Phi                      %19.5:BB19, %36.1:BB36
  lgl$-           %20.1 = %20.0
  lgl$-           %20.2 = AsLogical                %20.1
  lgl$#-          %20.3 = Identical                %20.2, true
  void                    Branch                   %20.3 -> BB34 (if true) | BB21 (if false)
BB43   <- [11]
  void                    Branch                   %11.3 -> BB47 (if true) | BB48 (if false)
BB44   <- [11]
  void                    Nop                !     
  lgl$#-          %44.1 = %11.2
  dr              %44.2 = DeadBranchReached@0x56150028b628[Test#2]
  goto BB12
BB51   <- [45]
  int$-           %51.0 = CastType           d     dn %45.1
  lgl$-           %51.1 = Neq                d     %51.0, 2, elided   <lgl$->
  lgl$-           %51.2 = AsLogical                %51.1
  lgl$-           %51.3 = LOr                      %39.8, %51.2
  lgl$-           %51.4 = %51.3
  goto BB10
BB52   <- [45]
  fs              %52.0 = FrameState         R     0x5614fe3cba40+223: [%39.8, %45.1], env=e39.0
  void                    Deopt              !v    %52.0, Typecheck@0x56150028b628[Type#6], %45.1   !
BB34   <- [20]
  void                    Nop                !     
  lgl$-           %34.1 = %20.2
  goto BB30
BB21   <- [20]
  val?^ | miss    %21.0 = LdVar              eR    value, e39.0
  val?            %21.1 = Force!<wrapped>    !v    %21.0, e39.0   <vec->
  lgl$#-          %21.2 = IsType                   %21.1 isA val+   <true>
  lgl$#-          %21.3 = IsType                   %21.1 isA val?-
  void                    Branch                   %21.2 -> BB49 (if true) | BB50 (if false)
BB47   <- [43]
  val?-           %47.0 = CastType           d     dn %11.1   <vec->
  val?            %47.1 = Extract2_1D        wed   %47.0, 1, elided   <str->
  lgl$-           %47.2 = Is                       %47.1, NULL
  lgl$-           %47.3 = AsLogical                %47.2
  lgl$#-          %47.4 = Identical                %47.3, true
  void                    StVar              lW    v1, %47.1, e39.0
  void                    Branch                   %47.4 -> BB35 (if true) | BB16 (if false)
BB48   <- [43]
  void                    Nop                !     
  val?            %48.1 = %11.1
  dr              %48.2 = Typecheck@0x56150028b628[Type#8]
  goto BB12
BB12   <- [44, 48]
  val?^ | miss    %12.0 = Phi                      %44.1:BB44, %48.1:BB48
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %44.2:BB44, %48.2:BB48
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x5614fe3cba40+258: [%10.2, %11.1], env=e39.0
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB30   <- [34, 29]
  lgl$-           %30.0 = Phi                      %29.5:BB29, %34.1:BB34
  lgl$-           %30.1 = %30.0
  lgl$#-          %30.2 = CheckTrueFalse     e     %30.1
  void                    Branch                   %30.2 -> BB32 (if true) | BB31 (if false)
BB49   <- [21]
  void                    Branch                   %21.3 -> BB53 (if true) | BB54 (if false)
BB50   <- [21]
  void                    Nop                !     
  lgl$#-          %50.1 = %21.2
  dr              %50.2 = DeadBranchReached@0x56150028b628[Test#5]
  goto BB22
BB35   <- [47]
  void                    Nop                !     
  lgl$-           %35.1 = %47.3
  goto BB19
BB16   <- [47]
  val?^ | miss    %16.0 = LdVar              eR    length, e39.0
  lgl$#-          %16.1 = Identical                <blt length>, %16.0   <true>
  void                    Branch                   %16.1 -> BB55 (if true) | BB56 (if false)
BB32   <- [30]
  (cls|spec|blt)  %32.0 = LdFun              !v    stop, e39.0
  fs              %32.1 = FrameState         R     0x5614fe3cba40+766: [%32.0], env=e39.0
  void                    Deopt              !v    %32.1, DeadCall@0x56150028b628[Call#4], %32.0   !
BB31   <- [30]
  (cls|spec|blt)  %31.0 = LdFun              !v    <-, <0x5614f889bda8>, e39.0
  prom-           %31.1 = MkArg                    unboundValue, dimnamesGets[0x5614fb733990]_p0, e39.0
  prom-           %31.2 = MkArg                    unboundValue, dimnamesGets[0x5614fb733990]_p3, e39.0
  val?            %31.3 = Call               !v    %31.0(%31.1, %31.2) e39.0
  val?^ | miss    %31.4 = LdVar              eR    x, e39.0
  void                    Visible            v     
  val?            %31.6 = Force!<value>      !     %31.4, e39.0   <other>
  void                    Return             l     %31.6
BB53   <- [49]
  val?-           %53.0 = CastType           d     dn %21.1   <vec->
  val?            %53.1 = Extract2_1D        wed   %53.0, 2, elided   <(nil|str)->
  lgl$-           %53.2 = Is                       %53.1, NULL
  lgl$-           %53.3 = AsLogical                %53.2
  lgl$#-          %53.4 = Identical                %53.3, true
  void                    StVar              lW    v2, %53.1, e39.0
  void                    Branch                   %53.4 -> BB33 (if true) | BB26 (if false)
BB54   <- [49]
  void                    Nop                !     
  val?            %54.1 = %21.1
  dr              %54.2 = Typecheck@0x56150028b628[Type#16]
  goto BB22
BB22   <- [50, 54]
  val?^ | miss    %22.0 = Phi                      %50.1:BB50, %54.1:BB54
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %50.2:BB50, %54.2:BB54
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x5614fe3cba40+512: [%20.2, %21.1], env=e39.0
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB19   <- [35, 63]
  lgl$-           %19.0 = Phi                      %63.5:BB63, %35.1:BB35
  lgl$-           %19.1 = %19.0
  lgl$-           %19.2 = Not                d     %19.1, elided
  lgl$-           %19.3 = AsLogical                %19.2
  lgl$-           %19.4 = LOr                      %10.2, %19.3
  lgl$-           %19.5 = %19.4
  goto BB20
BB55   <- [16]
  val             %55.0 = ChkMissing         e     %47.1
  lgl$#-          %55.1 = IsType                   %47.1 isA val?-
  void                    Branch                   %55.1 -> BB59 (if true) | BB60 (if false)
BB56   <- [16]
  void                    Nop                !     
  lgl$#-          %56.1 = %16.1
  dr              %56.2 = DeadBranchReached@0x56150028b628[Test#3]
  goto BB14
BB33   <- [53]
  void                    Nop                !     
  lgl$-           %33.1 = %53.3
  goto BB29
BB26   <- [53]
  val?^ | miss    %26.0 = LdVar              eR    length, e39.0
  lgl$#-          %26.1 = Identical                <blt length>, %26.0   <true>
  void                    Branch                   %26.1 -> BB57 (if true) | BB58 (if false)
BB59   <- [55]
  val?-           %59.0 = CastType           d     dn %47.1   <str->
  (int|real)$-    %59.1 = CallSafeBuiltin    wed   length(%59.0)    <int$->
  lgl$#-          %59.2 = IsType                   %59.1 isA int$-
  void                    Branch                   %59.2 -> BB61 (if true) | BB62 (if false)
BB60   <- [55]
  void                    Nop                !     
  val?            %60.1 = %47.1
  dr              %60.2 = Typecheck@0x56150028b628[Type#9]
  goto BB14
BB14   <- [56, 60]
  val?^ | miss    %14.0 = Phi                      %56.1:BB56, %60.1:BB60
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %56.2:BB56, %60.2:BB60
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x5614fe3cba40+318: [%10.2, %47.1], env=e39.0
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB29   <- [33, 69]
  lgl$-           %29.0 = Phi                      %69.5:BB69, %33.1:BB33
  lgl$-           %29.1 = %29.0
  lgl$-           %29.2 = Not                d     %29.1, elided
  lgl$-           %29.3 = AsLogical                %29.2
  lgl$-           %29.4 = LOr                      %20.2, %29.3
  lgl$-           %29.5 = %29.4
  goto BB30
BB57   <- [26]
  val             %57.0 = ChkMissing         e     %53.1
  lgl$#-          %57.1 = IsType                   %53.1 isA val?-
  void                    Branch                   %57.1 -> BB65 (if true) | BB66 (if false)
BB58   <- [26]
  void                    Nop                !     
  lgl$#-          %58.1 = %26.1
  dr              %58.2 = DeadBranchReached@0x56150028b628[Test#6]
  goto BB24
BB61   <- [59]
  int$-           %61.0 = CastType           d     dn %59.1
  val?^ | miss    %61.1 = LdVar              eR    d, e39.0
  lgl$#-          %61.2 = IsType                   %61.1 isA int-
  void                    Branch                   %61.2 -> BB63 (if true) | BB64 (if false)
BB62   <- [59]
  void                    Nop                !     
  (int|real)$-    %62.1 = %59.1
  dr              %62.2 = Typecheck@0x56150028b628[Type#12]
  goto BB17
BB65   <- [57]
  val?-           %65.0 = CastType           d     dn %53.1   <(nil|str)->
  (int|real)$-    %65.1 = CallSafeBuiltin    wed   length(%65.0)    <int$->
  lgl$#-          %65.2 = IsType                   %65.1 isA int$-
  void                    Branch                   %65.2 -> BB67 (if true) | BB68 (if false)
BB66   <- [57]
  void                    Nop                !     
  val?            %66.1 = %53.1
  dr              %66.2 = Typecheck@0x56150028b628[Type#17]
  goto BB24
BB24   <- [58, 66]
  val?^ | miss    %24.0 = Phi                      %58.1:BB58, %66.1:BB66
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %58.2:BB58, %66.2:BB66
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x5614fe3cba40+572: [%20.2, %53.1], env=e39.0
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB63   <- [61]
  int-            %63.0 = CastType           d     dn %61.1
  int$-           %63.1 = Extract1_1D        wed   %63.0, 1, elided   <int$->
  lgl$-           %63.2 = Eq                 d     %61.0, %63.1, elided   <lgl$->
  lgl$-           %63.3 = AsLogical                %63.2
  lgl$-           %63.4 = LOr                      %47.3, %63.3
  lgl$-           %63.5 = %63.4
  goto BB19
BB64   <- [61]
  void                    Nop                !     
  val?^ | miss    %64.1 = %61.1
  dr              %64.2 = Typecheck@0x56150028b628[Type#13]
  goto BB17
BB17   <- [62, 64]
  val?^ | miss    %17.0 = Phi                      %62.1:BB62, %64.1:BB64
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %62.2:BB62, %64.2:BB64
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x5614fe3cba40+421: [%10.2, %47.3, %59.1], env=e39.0
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB67   <- [65]
  int$-           %67.0 = CastType           d     dn %65.1
  val?^ | miss    %67.1 = LdVar              eR    d, e39.0
  lgl$#-          %67.2 = IsType                   %67.1 isA int-
  void                    Branch                   %67.2 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  void                    Nop                !     
  (int|real)$-    %68.1 = %65.1
  dr              %68.2 = Typecheck@0x56150028b628[Type#20]
  goto BB27
BB69   <- [67]
  int-            %69.0 = CastType           d     dn %67.1
  int$-           %69.1 = Extract1_1D        wed   %69.0, 2, elided   <int$->
  lgl$-           %69.2 = Eq                 d     %67.0, %69.1, elided   <lgl$->
  lgl$-           %69.3 = AsLogical                %69.2
  lgl$-           %69.4 = LOr                      %53.3, %69.3
  lgl$-           %69.5 = %69.4
  goto BB29
BB70   <- [67]
  void                    Nop                !     
  val?^ | miss    %70.1 = %67.1
  dr              %70.2 = Typecheck@0x56150028b628[Type#21]
  goto BB27
BB27   <- [68, 70]
  val?^ | miss    %27.0 = Phi                      %68.1:BB68, %70.1:BB70
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %68.2:BB68, %70.2:BB70
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x5614fe3cba40+675: [%20.2, %53.3, %65.1], env=e39.0
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, dimnamesGets[0x5614fb733990]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, dimnamesGets[0x5614fb733990]_p2, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dimnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .fixupDimnames, e0.0
  prom-           %0.2  = MkArg                    unboundValue, dimnamesGets[0x5614fb733990]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ dimnamesGets[0x5614fb733990]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
