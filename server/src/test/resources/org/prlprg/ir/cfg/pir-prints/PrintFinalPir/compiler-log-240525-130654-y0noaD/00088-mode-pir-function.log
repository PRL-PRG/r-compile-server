
┌──────────────────────────────────────────────────────────────────────────────┐
│ mode[0x5649852d4490]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
mode[0x5649852d4490]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.2  = Force!<lazy>       !vr   %0.0,    <val?->
  lgl$#-          %0.3  = CallSafeBuiltin    wed   is.expression(%0.2)    <lgl$->
  void                    Branch                   %0.3 -> BB22 (if true) | BB3 (if false)
BB22   <- [0]
  void                    Visible            v     
  str$#-          %22.1 = "expression"
  goto BB11
BB3   <- [0]
  lgl$#-          %3.0  = IsType                   %0.0 isA val?~-
  void                    Branch                   %3.0 -> BB24 (if true) | BB25 (if false)
BB11   <- [22, 10, 46]
  str$-           %11.0 = Phi                      %10.2:BB10, %46.1:BB46, %22.1:BB22
  str$-           %11.1 = %11.0
  void                    Return             l     %11.1
BB24   <- [3]
  lgl$#-          %24.0 = CallSafeBuiltin    wed   is.call(%0.2)    <lgl$->
  void                    Branch                   %24.0 -> BB13 (if true) | BB4 (if false)
BB25   <- [3]
  fs              %25.0 = FrameState         R     0x564985584090+91: [%0.3], env=e0.1
  void                    Deopt              !v    %25.0, Typecheck@0x564986bd7808[Type#4], %0.0
BB13   <- [24]
  prom-           %13.0 = MkArg                    unboundValue, mode[0x5649852d4490]_p1, e0.1
  val?            %13.1 = StaticCall         !v    deparse[0x564985f68de0](%13.0) e0.1   <str$->
  lgl$#-          %13.2 = IsType                   %13.1 isA val+   <true>
  lgl$#-          %13.3 = IsType                   %13.1 isA val?-
  void                    Branch                   %13.2 -> BB26 (if true) | BB27 (if false)
BB4   <- [24]
  lgl$#-          %4.0  = CallSafeBuiltin    wed   is.symbol(%0.2)    <lgl$->
  void                    Branch                   %4.0 -> BB12 (if true) | BB5 (if false)
BB26   <- [13]
  void                    Branch                   %13.3 -> BB28 (if true) | BB29 (if false)
BB27   <- [13]
  void                    Nop                !     
  lgl$#-          %27.1 = %13.2
  dr              %27.2 = DeadBranchReached@0x564986bd7808[Test#3]
  goto BB14
BB12   <- [4]
  void                    Visible            v     
  str$#-          %12.1 = "name"
  goto BB10
BB5   <- [4]
  str$-           %5.0  = CallSafeBuiltin    wed   typeof(%0.2)    <str$->
  int$-           %5.1  = Length                   %5.0
  void                    StVar              lW    tx, %5.0, e0.1
  lgl$-           %5.3  = Eq                 d     %5.1, 1L, elided   <true>
  lgl$#-          %5.4  = Identical                %5.3, true
  void                    Branch                   %5.4 -> BB30 (if true) | BB31 (if false)
BB28   <- [26]
  val?-           %28.0 = CastType           d     dn %13.1   <str$->
  val?            %28.1 = Extract1_1D        wed   %28.0, 1L, elided   <str$->
  lgl$-           %28.2 = Is                       %28.1, logical
  lgl$-           %28.3 = Is                       %28.1, integer
  lgl$-           %28.4 = Is                       %28.1, double
  lgl$-           %28.5 = Is                       %28.1, complex
  lgl$-           %28.6 = Is                       %28.1, character   <true>
  lgl$-           %28.7 = Is                       %28.1, raw
  lgl$-           %28.8 = Is                       %28.1, list
  lgl$-           %28.9 = Is                       %28.1, expression
  lgl$-           %28.10 = LOr                      %28.9, %28.8
  lgl$-           %28.11 = LOr                      %28.10, %28.7
  lgl$-           %28.12 = LOr                      %28.11, %28.6
  lgl$-           %28.13 = LOr                      %28.12, %28.5
  lgl$-           %28.14 = LOr                      %28.13, %28.4
  lgl$-           %28.15 = LOr                      %28.14, %28.3
  lgl$-           %28.16 = LOr                      %28.15, %28.2   <true>
  lgl$#-          %28.17 = Identical                %28.16, true
  int$-           %28.18 = Length                   %28.1
  lgl$-           %28.19 = Is                       %28.1, Factor   <false>
  lgl$#-          %28.20 = Identical                %28.19, false
  lgl$#-          %28.21 = Identical                %28.6, true
  lgl$#-          %28.22 = IsType                   %28.1 isA val?-
  void                    Branch                   %28.17 -> BB32 (if true) | BB33 (if false)
BB29   <- [26]
  void                    Nop                !     
  val?            %29.1 = %13.1
  dr              %29.2 = Typecheck@0x564986bd7808[Type#8]
  goto BB14
BB14   <- [27, 29]
  val?^ | miss    %14.0 = Phi                      %27.1:BB27, %29.1:BB29
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %27.2:BB27, %29.2:BB29
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x564985584090+253: [%13.1], env=e0.1
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB10   <- [12, 56]
  str$-           %10.0 = Phi                      %56.1:BB56, %12.1:BB12
  str$-           %10.1 = %10.0
  str$-           %10.2 = %10.1
  goto BB11
BB30   <- [5]
  lgl$-           %30.0 = CallSafeBuiltin    wed   is.na(%5.0) 
  lgl$#-          %30.1 = CheckTrueFalse     e     %30.0   <false>
  void                    Branch                   %30.1 -> BB45 (if true) | BB44 (if false)
BB31   <- [5]
  fs              %31.0 = FrameState         R     0x564985584090+708: [%5.0], env=e0.1
  void                    Deopt              !v    %31.0, DeadBranchReached@0x564986bd7808[Test#14], %5.4
BB32   <- [28]
  lgl$-           %32.0 = Eq                 d     %28.18, 1L, elided   <true>
  lgl$#-          %32.1 = Identical                %32.0, true
  void                    Branch                   %32.1 -> BB34 (if true) | BB35 (if false)
BB33   <- [28]
  void                    Nop                !     
  lgl$#-          %33.1 = %28.17
  dr              %33.2 = DeadBranchReached@0x564986bd7808[Test#4]
  goto BB16
BB45   <- [30]
  void                    Nop                !     
  lgl$#-          %45.1 = %30.1
  dr              %45.2 = DeadBranchReached@0x564986bd7808[Test#23]
  goto BB8
BB44   <- [30]
  lgl$-           %44.0 = Eq                 d     %5.0, double, elided
  lgl$#-          %44.1 = CheckTrueFalse     e     %44.0   <false>
  void                    Branch                   %44.1 -> BB49 (if true) | BB48 (if false)
BB34   <- [32]
  void                    Branch                   %28.20 -> BB36 (if true) | BB37 (if false)
BB35   <- [32]
  void                    Nop                !     
  lgl$#-          %35.1 = %32.1
  dr              %35.2 = DeadBranchReached@0x564986bd7808[Test#5]
  goto BB16
BB16   <- [33, 35, 37, 39, 41]
  val?^ | miss    %16.0 = Phi                      %33.1:BB33, %35.1:BB35, %37.1:BB37, %39.1:BB39, %41.1:BB41
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %33.2:BB33, %35.2:BB35, %37.2:BB37, %39.2:BB39, %41.2:BB41
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x564985584090+296: [%28.1], env=e0.1
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB8   <- [45, 49, 51, 53, 55, 57]
  val?^ | miss    %8.0  = Phi                      %45.1:BB45, %49.1:BB49, %51.1:BB51, %53.1:BB53, %55.1:BB55, %57.1:BB57
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %45.2:BB45, %49.2:BB49, %51.2:BB51, %53.2:BB53, %55.2:BB55, %57.2:BB57
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x564985584090+965: [%5.0, %30.0], env=e0.1
  void                    Deopt              !v    %8.4, %8.3, %8.1
BB49   <- [44]
  void                    Nop                !     
  lgl$#-          %49.1 = %44.1
  dr              %49.2 = DeadBranchReached@0x564986bd7808[Test#24]
  goto BB8
BB48   <- [44]
  lgl$-           %48.0 = Eq                 d     %5.0, integer, elided
  lgl$#-          %48.1 = CheckTrueFalse     e     %48.0   <false>
  void                    Branch                   %48.1 -> BB51 (if true) | BB50 (if false)
BB36   <- [34]
  void                    Branch                   %28.21 -> BB38 (if true) | BB39 (if false)
BB37   <- [34]
  void                    Nop                !     
  lgl$#-          %37.1 = %28.20
  dr              %37.2 = DeadBranchReached@0x564986bd7808[Test#6]
  goto BB16
BB51   <- [48]
  void                    Nop                !     
  lgl$#-          %51.1 = %48.1
  dr              %51.2 = DeadBranchReached@0x564986bd7808[Test#25]
  goto BB8
BB50   <- [48]
  lgl$-           %50.0 = Eq                 d     %5.0, closure, elided
  lgl$#-          %50.1 = CheckTrueFalse     e     %50.0   <false>
  void                    Branch                   %50.1 -> BB53 (if true) | BB52 (if false)
BB38   <- [36]
  void                    Branch                   %28.22 -> BB40 (if true) | BB41 (if false)
BB39   <- [36]
  void                    Nop                !     
  lgl$#-          %39.1 = %28.21
  dr              %39.2 = DeadBranchReached@0x564986bd7808[Test#7]
  goto BB16
BB53   <- [50]
  void                    Nop                !     
  lgl$#-          %53.1 = %50.1
  dr              %53.2 = DeadBranchReached@0x564986bd7808[Test#26]
  goto BB8
BB52   <- [50]
  lgl$-           %52.0 = Eq                 d     %5.0, builtin, elided
  lgl$#-          %52.1 = CheckTrueFalse     e     %52.0   <false>
  void                    Branch                   %52.1 -> BB55 (if true) | BB54 (if false)
BB40   <- [38]
  val?-           %40.0 = CastType           d     dn %28.1   <str$->
  lgl-            %40.1 = CallSafeBuiltin    wed   is.na(%40.0) 
  lgl$#-          %40.2 = CheckTrueFalse     we    %40.1   <false>
  void                    Branch                   %40.2 -> BB43 (if true) | BB42 (if false)
BB41   <- [38]
  void                    Nop                !     
  val?            %41.1 = %28.1
  dr              %41.2 = Typecheck@0x564986bd7808[Type#9]
  goto BB16
BB55   <- [52]
  void                    Nop                !     
  lgl$#-          %55.1 = %52.1
  dr              %55.2 = DeadBranchReached@0x564986bd7808[Test#27]
  goto BB8
BB54   <- [52]
  lgl$-           %54.0 = Eq                 d     %5.0, special, elided
  lgl$#-          %54.1 = CheckTrueFalse     e     %54.0   <false>
  void                    Branch                   %54.1 -> BB57 (if true) | BB56 (if false)
BB43   <- [40]
  fs              %43.0 = FrameState         R     0x564985584090+488: [%40.0, %40.2], env=e0.1
  void                    Deopt              !v    %43.0, DeadBranchReached@0x564986bd7808[Test#10], %40.2   !
BB42   <- [40]
  lgl-            %42.0 = Eq                 wed   %40.0, (, elided
  lgl$#-          %42.1 = CheckTrueFalse     we    %42.0   <false>
  void                    Branch                   %42.1 -> BB47 (if true) | BB46 (if false)
BB57   <- [54]
  void                    Nop                !     
  lgl$#-          %57.1 = %54.1
  dr              %57.2 = DeadBranchReached@0x564986bd7808[Test#28]
  goto BB8
BB56   <- [54]
  void                    Visible            v     
  str$-           %56.1 = %5.0
  goto BB10
BB47   <- [42]
  fs              %47.0 = FrameState         R     0x564985584090+512: [%40.0, %42.1], env=e0.1
  void                    Deopt              !v    %47.0, DeadBranchReached@0x564986bd7808[Test#11], %42.1   !
BB46   <- [42]
  void                    Visible            v     
  str$#-          %46.1 = "call"
  goto BB11
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3

│ mode[0x5649852d4490]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
