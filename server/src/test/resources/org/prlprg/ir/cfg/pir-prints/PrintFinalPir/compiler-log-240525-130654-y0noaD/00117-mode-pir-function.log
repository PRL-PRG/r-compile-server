
┌──────────────────────────────────────────────────────────────────────────────┐
│ mode[0x564985349990]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
mode[0x564985349990]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.2  = Force!<lazy>       !vr   %0.0,    <val?->
  lgl$#-          %0.3  = CallSafeBuiltin    wed   is.expression(%0.2)    <lgl$->
  void                    Branch                   %0.3 -> BB25 (if true) | BB3 (if false)
BB25   <- [0]
  void                    Visible            v     
  str$#-          %25.1 = "expression"
  goto BB13
BB3   <- [0]
  lgl$#-          %3.0  = IsType                   %0.0 isA val?~-
  void                    Branch                   %3.0 -> BB27 (if true) | BB28 (if false)
BB13   <- [25, 12, 49]
  str$-           %13.0 = Phi                      %12.2:BB12, %49.1:BB49, %25.1:BB25
  str$-           %13.1 = %13.0
  void                    Return             l     %13.1
BB27   <- [3]
  lgl$#-          %27.0 = CallSafeBuiltin    wed   is.call(%0.2)    <lgl$->
  void                    Branch                   %27.0 -> BB16 (if true) | BB4 (if false)
BB28   <- [3]
  fs              %28.0 = FrameState         R     0x564985584090+91: [%0.3], env=e0.1
  void                    Deopt              !v    %28.0, Typecheck@0x564986bd7808[Type#4], %0.0
BB16   <- [27]
  prom-           %16.0 = MkArg                    unboundValue, mode[0x564985349990]_p1, e0.1
  val?            %16.1 = StaticCall         !v    deparse[0x564986824840](%16.0) e0.1   <str$->
  lgl$#-          %16.2 = IsType                   %16.1 isA val+   <true>
  lgl$#-          %16.3 = IsType                   %16.1 isA val?-
  void                    Branch                   %16.2 -> BB29 (if true) | BB30 (if false)
BB4   <- [27]
  lgl$#-          %4.0  = CallSafeBuiltin    wed   is.symbol(%0.2)    <lgl$->
  void                    Branch                   %4.0 -> BB15 (if true) | BB5 (if false)
BB29   <- [16]
  void                    Branch                   %16.3 -> BB31 (if true) | BB32 (if false)
BB30   <- [16]
  void                    Nop                !     
  lgl$#-          %30.1 = %16.2
  dr              %30.2 = DeadBranchReached@0x564986bd7808[Test#3]
  goto BB17
BB15   <- [4]
  void                    Visible            v     
  str$#-          %15.1 = "name"
  goto BB12
BB5   <- [4]
  str$-           %5.0  = CallSafeBuiltin    wed   typeof(%0.2)    <str$->
  int$-           %5.1  = Length                   %5.0
  void                    StVar              lW    tx, %5.0, e0.1
  lgl$-           %5.3  = Eq                 d     %5.1, 1L, elided   <true>
  lgl$#-          %5.4  = Identical                %5.3, true
  void                    Branch                   %5.4 -> BB33 (if true) | BB34 (if false)
BB31   <- [29]
  val?-           %31.0 = CastType           d     dn %16.1   <str$->
  val?            %31.1 = Extract1_1D        wed   %31.0, 1L, elided   <str$->
  lgl$-           %31.2 = Is                       %31.1, logical
  lgl$-           %31.3 = Is                       %31.1, integer
  lgl$-           %31.4 = Is                       %31.1, double
  lgl$-           %31.5 = Is                       %31.1, complex
  lgl$-           %31.6 = Is                       %31.1, character   <true>
  lgl$-           %31.7 = Is                       %31.1, raw
  lgl$-           %31.8 = Is                       %31.1, list
  lgl$-           %31.9 = Is                       %31.1, expression
  lgl$-           %31.10 = LOr                      %31.9, %31.8
  lgl$-           %31.11 = LOr                      %31.10, %31.7
  lgl$-           %31.12 = LOr                      %31.11, %31.6
  lgl$-           %31.13 = LOr                      %31.12, %31.5
  lgl$-           %31.14 = LOr                      %31.13, %31.4
  lgl$-           %31.15 = LOr                      %31.14, %31.3
  lgl$-           %31.16 = LOr                      %31.15, %31.2   <true>
  lgl$#-          %31.17 = Identical                %31.16, true
  int$-           %31.18 = Length                   %31.1
  lgl$-           %31.19 = Is                       %31.1, Factor   <false>
  lgl$#-          %31.20 = Identical                %31.19, false
  lgl$#-          %31.21 = Identical                %31.6, true
  lgl$#-          %31.22 = IsType                   %31.1 isA val?-
  void                    Branch                   %31.17 -> BB35 (if true) | BB36 (if false)
BB32   <- [29]
  void                    Nop                !     
  val?            %32.1 = %16.1
  dr              %32.2 = Typecheck@0x564986bd7808[Type#8]
  goto BB17
BB17   <- [30, 32]
  val?^ | miss    %17.0 = Phi                      %30.1:BB30, %32.1:BB32
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %30.2:BB30, %32.2:BB32
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x564985584090+253: [%16.1], env=e0.1
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB12   <- [15, 11]
  str$-           %12.0 = Phi                      %11.2:BB11, %15.1:BB15
  str$-           %12.1 = %12.0
  str$-           %12.2 = %12.1
  goto BB13
BB33   <- [5]
  lgl$-           %33.0 = CallSafeBuiltin    wed   is.na(%5.0) 
  lgl$#-          %33.1 = CheckTrueFalse     e     %33.0   <false>
  void                    Branch                   %33.1 -> BB48 (if true) | BB47 (if false)
BB34   <- [5]
  fs              %34.0 = FrameState         R     0x564985584090+708: [%5.0], env=e0.1
  void                    Deopt              !v    %34.0, DeadBranchReached@0x564986bd7808[Test#14], %5.4
BB35   <- [31]
  lgl$-           %35.0 = Eq                 d     %31.18, 1L, elided   <true>
  lgl$#-          %35.1 = Identical                %35.0, true
  void                    Branch                   %35.1 -> BB37 (if true) | BB38 (if false)
BB36   <- [31]
  void                    Nop                !     
  lgl$#-          %36.1 = %31.17
  dr              %36.2 = DeadBranchReached@0x564986bd7808[Test#4]
  goto BB19
BB48   <- [33]
  void                    Nop                !     
  lgl$#-          %48.1 = %33.1
  dr              %48.2 = DeadBranchReached@0x564986bd7808[Test#23]
  goto BB8
BB47   <- [33]
  lgl$-           %47.0 = Eq                 d     %5.0, double, elided
  lgl$#-          %47.1 = CheckTrueFalse     e     %47.0
  void                    Branch                   %47.1 -> BB14 (if true) | BB10 (if false)
BB37   <- [35]
  void                    Branch                   %31.20 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  void                    Nop                !     
  lgl$#-          %38.1 = %35.1
  dr              %38.2 = DeadBranchReached@0x564986bd7808[Test#5]
  goto BB19
BB19   <- [36, 38, 40, 42, 44]
  val?^ | miss    %19.0 = Phi                      %36.1:BB36, %38.1:BB38, %40.1:BB40, %42.1:BB42, %44.1:BB44
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %36.2:BB36, %38.2:BB38, %40.2:BB40, %42.2:BB42, %44.2:BB44
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x564985584090+296: [%31.1], env=e0.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB8   <- [48, 52, 54, 56, 58]
  val?^ | miss    %8.0  = Phi                      %48.1:BB48, %52.1:BB52, %54.1:BB54, %56.1:BB56, %58.1:BB58
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %48.2:BB48, %52.2:BB52, %54.2:BB54, %56.2:BB56, %58.2:BB58
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x564985584090+965: [%5.0, %33.0], env=e0.1
  void                    Deopt              !v    %8.4, %8.3, %8.1
BB14   <- [47]
  void                    Visible            v     
  str$#-          %14.1 = "numeric"
  goto BB11
BB10   <- [47]
  lgl$-           %10.0 = Eq                 d     %5.0, integer, elided
  lgl$#-          %10.1 = CheckTrueFalse     e     %10.0   <false>
  void                    Branch                   %10.1 -> BB52 (if true) | BB51 (if false)
BB39   <- [37]
  void                    Branch                   %31.21 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  void                    Nop                !     
  lgl$#-          %40.1 = %31.20
  dr              %40.2 = DeadBranchReached@0x564986bd7808[Test#6]
  goto BB19
BB11   <- [14, 57]
  str$-           %11.0 = Phi                      %57.1:BB57, %14.1:BB14
  str$-           %11.1 = %11.0
  str$-           %11.2 = %11.1
  goto BB12
BB52   <- [10]
  void                    Nop                !     
  lgl$#-          %52.1 = %10.1
  dr              %52.2 = DeadBranchReached@0x564986bd7808[Test#25]
  goto BB8
BB51   <- [10]
  lgl$-           %51.0 = Eq                 d     %5.0, closure, elided
  lgl$#-          %51.1 = CheckTrueFalse     e     %51.0   <false>
  void                    Branch                   %51.1 -> BB54 (if true) | BB53 (if false)
BB41   <- [39]
  void                    Branch                   %31.22 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  void                    Nop                !     
  lgl$#-          %42.1 = %31.21
  dr              %42.2 = DeadBranchReached@0x564986bd7808[Test#7]
  goto BB19
BB54   <- [51]
  void                    Nop                !     
  lgl$#-          %54.1 = %51.1
  dr              %54.2 = DeadBranchReached@0x564986bd7808[Test#26]
  goto BB8
BB53   <- [51]
  lgl$-           %53.0 = Eq                 d     %5.0, builtin, elided
  lgl$#-          %53.1 = CheckTrueFalse     e     %53.0   <false>
  void                    Branch                   %53.1 -> BB56 (if true) | BB55 (if false)
BB43   <- [41]
  val?-           %43.0 = CastType           d     dn %31.1   <str$->
  lgl-            %43.1 = CallSafeBuiltin    wed   is.na(%43.0) 
  lgl$#-          %43.2 = CheckTrueFalse     we    %43.1   <false>
  void                    Branch                   %43.2 -> BB46 (if true) | BB45 (if false)
BB44   <- [41]
  void                    Nop                !     
  val?            %44.1 = %31.1
  dr              %44.2 = Typecheck@0x564986bd7808[Type#9]
  goto BB19
BB56   <- [53]
  void                    Nop                !     
  lgl$#-          %56.1 = %53.1
  dr              %56.2 = DeadBranchReached@0x564986bd7808[Test#27]
  goto BB8
BB55   <- [53]
  lgl$-           %55.0 = Eq                 d     %5.0, special, elided
  lgl$#-          %55.1 = CheckTrueFalse     e     %55.0   <false>
  void                    Branch                   %55.1 -> BB58 (if true) | BB57 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x564985584090+488: [%43.0, %43.2], env=e0.1
  void                    Deopt              !v    %46.0, DeadBranchReached@0x564986bd7808[Test#10], %43.2   !
BB45   <- [43]
  lgl-            %45.0 = Eq                 wed   %43.0, (, elided
  lgl$#-          %45.1 = CheckTrueFalse     we    %45.0   <false>
  void                    Branch                   %45.1 -> BB50 (if true) | BB49 (if false)
BB58   <- [55]
  void                    Nop                !     
  lgl$#-          %58.1 = %55.1
  dr              %58.2 = DeadBranchReached@0x564986bd7808[Test#28]
  goto BB8
BB57   <- [55]
  void                    Visible            v     
  str$-           %57.1 = %5.0
  goto BB11
BB50   <- [45]
  fs              %50.0 = FrameState         R     0x564985584090+512: [%43.0, %45.1], env=e0.1
  void                    Deopt              !v    %50.0, DeadBranchReached@0x564986bd7808[Test#11], %45.1   !
BB49   <- [45]
  void                    Visible            v     
  str$#-          %49.1 = "call"
  goto BB13
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3

│ mode[0x564985349990]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
