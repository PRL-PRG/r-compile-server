
┌──────────────────────────────────────────────────────────────────────────────┐
│ formObj[0x55b0cb3e5c30]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
formObj[0x55b0cb3e5c30]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB26 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    maybe_truncate, ?
  (cls|spec|blt)  %2.1  = CastType                 dn %2.0
  val+            %2.2  = CallSafeBuiltin          bodyCode(%2.1) 
  lgl$#-          %2.3  = Identical                %2.2, <(rir::DispatchTable*)0x55b0cc277250>
  void                    Assume             D     %2.3, %1.1 (CallTarget@0x55b0cc59b268[Call#0])
  val?            %2.5  = Force!             d     %2.0, 
  env             e2.6  = MkEnv              l     x=%1.0, parent=?, context 1
  prom-           %2.7  = MkArg                    unboundValue, formObj[0x55b0cb3e5c30]_p0, e2.6
  (cls|spec|blt)  %2.8  = ChkFunction        e     %2.5
  env             e2.9  = CallSafeBuiltin          environment(%2.8) 
  ct              %2.10 = PushContext        lCL   %2.7, missingArg, "", maybe_truncate(paste(format.fun(x), collapse="|..., %2.8, e2.6
  val?^           %2.11 = CastType                 up %2.7
  env             e2.12 = MkEnv              l     x=%2.11, nx(miss)=missingArg, S="", ch(miss)=missingArg, parent=e2.9, context 1
  prom-           %2.13 = MkArg                    unboundValue, formObj[0x55b0cb3e5c30]_p3, e2.12
  val?^ | miss    %2.14 = CastType                 up %2.13
  void                    StArg              lW    nx, %2.14, e2.12
  void                    StArg              lW    ch, "| __truncated__", e2.12
  cp              %2.17 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB26   <- [1]
  env             e26.0 = (MkEnv)            l     x=%1.0, parent=?, context 1
  fs              %26.1 = FrameState         R     0x55b0c92c0d70+0: [], env=e26.0
  void                    Deopt              !v    %26.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    anyNA, e2.9
  lgl$#-          %4.1  = Identical                <blt anyNA>, %4.0   <true>
  void                    Assume             D     %4.1, %2.17 (DeadBranchReached@0x55b0ca5365f0[Test#0])
  val?            %4.3  = Force!<lazy>       !vr   %2.14,    <int$->
  lgl$#-          %4.4  = IsType                   %4.3 isA int$-
  cp              %4.5  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  fs              %3.1  = FrameState         R     0x55b0c9655cb0+0: [], env=e2.12, next=%3.0
  void                    Deopt              !v    %3.1   !
BB6   <- [4]
  void                    Assume             D     %4.4, %4.5 (Typecheck@0x55b0ca5365f0[Type#3])
  int$-           %6.1  = CastType           d     dn %4.3
  val+            %6.2  = CallSafeBuiltin    wed   anyNA(%6.1)    <lgl$->
  lgl$#-          %6.3  = IsType                   %6.2 isA lgl$-
  cp              %6.4  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  fs              %5.1  = FrameState         R     0x55b0c9655cb0+69: [<blt anyNA>, %4.3], env=e2.12, next=%5.0
  void                    Deopt              !v    %5.1   !
BB8   <- [6]
  void                    Assume             D     %6.3, %6.4 (Typecheck@0x55b0ca5365f0[Type#4])
  lgl$-           %8.1  = CastType           d     dn %6.2
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1
  void                    Branch                   %8.2 -> BB21 (if true) | BB9 (if false)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  fs              %7.1  = FrameState         R     0x55b0c9655cb0+91: [%6.2], env=e2.12, next=%7.0
  void                    Deopt              !v    %7.1   !
BB21   <- [8]
  val?^ | miss    %21.0 = LdVar              eR    is.na, e2.12
  lgl$#-          %21.1 = Identical                <blt is.na>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB9   <- [8]
  goto BB10
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    nx, e2.12
  val?            %23.1 = Force!             !v    %23.0, e2.12   <val?_>
  lgl$#-          %23.2 = IsType                   %23.1 isA val?+
  cp              %23.3 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  (cls|spec|blt)  %22.1 = LdFun              !v    is.na, e2.12
  fs              %22.2 = FrameState         R     0x55b0c9655cb0+141: [%22.1], env=e2.12, next=%22.0
  void                    Deopt              !v    %22.2, DeadCall@0x55b0ca5365f0[Call#2], %22.1   !
BB10   <- [9, 25]
  lgl             %10.0 = Phi                      true:BB9, %25.3:BB25   <lgl$->
  lgl$#-          %10.1 = IsType                   %10.0 isA lgl$-
  cp              %10.2 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB25   <- [23]
  void                    Assume             D     %23.2, %23.3 (Typecheck@0x55b0ca5365f0[Type#6])
  val?+           %25.1 = CastType           d     dn %23.1   <val?_>
  lgl+            %25.2 = CallSafeBuiltin    wed   is.na(%25.1)    <val?_>
  lgl             %25.3 = Not                wed   %25.2, elided
  goto BB10
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  fs              %24.1 = FrameState         R     0x55b0c9655cb0+182: [<blt is.na>, %23.1], env=e2.12, next=%24.0
  void                    Deopt              !v    %24.1   !
BB12   <- [10]
  void                    Assume             D     %10.1, %10.2 (Typecheck@0x55b0ca5365f0[Type#17])
  lgl$-           %12.1 = CastType           d     dn %10.0
  void                    StVar              lW    ok, %12.1, e2.12
  cp              %12.3 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  fs              %11.1 = FrameState         R     0x55b0c9655cb0+210: [%10.0], env=e2.12, next=%11.0
  void                    Deopt              !v    %11.1   !
BB14   <- [12]
  val?^ | miss    %14.0 = LdVar              eR    any, e2.12
  lgl$#-          %14.1 = Identical                <blt any>, %14.0   <true>
  void                    Assume             D     %14.1, %12.3 (DeadBranchReached@0x55b0ca5365f0[Test#2])
  val?^ | miss    %14.3 = LdVar              eR    &, e2.12
  lgl$#-          %14.4 = Identical                <blt &>, %14.3   <true>
  void                    Assume             D     %14.4, %12.3 (DeadBranchReached@0x55b0ca5365f0[Test#3])
  val?^ | miss    %14.6 = LdVar              eR    nx, e2.12
  lgl$#-          %14.7 = IsType                   %14.6 isA int$~-
  void                    Assume             D     %14.7, %12.3 (Typecheck@0x55b0ca5365f0[Type#18])
  int$~-          %14.9 = CastType           d     dn %14.6
  int$-           %14.10 = Force!<wrapped>          %14.9,    <int$->
  val?^ | miss    %14.11 = LdVar              eR    nchar.max, e2.12
  lgl$#-          %14.12 = IsType                   %14.11 isA real$~-
  void                    Assume             D     %14.12, %12.3 (Typecheck@0x55b0ca5365f0[Type#19])
  real$~-         %14.14 = CastType           d     dn %14.11
  real$-          %14.15 = Force!<wrapped>          %14.14,    <real$->
  lgl$-           %14.16 = Gt                 d     %14.10, %14.15, elided   <lgl$->
  val+            %14.17 = CallSafeBuiltin    wed   &(%12.1, %14.16)    <lgl$->
  lgl$#-          %14.18 = IsType                   %14.17 isA lgl$-
  cp              %14.19 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  fs              %13.1 = FrameState         R     0x55b0c9655cb0+219: [], env=e2.12, next=%13.0
  void                    Deopt              !v    %13.1   !
BB16   <- [14]
  void                    Assume             D     %14.18, %14.19 (Typecheck@0x55b0ca5365f0[Type#21])
  lgl$-           %16.1 = CastType           d     dn %14.17
  void                    StVar              lW    lrg, %16.1, e2.12
  val?            %16.3 = CallBuiltin        !v    any(%16.1) e2.12   <lgl$->
  lgl$#-          %16.4 = IsType                   %16.3 isA lgl$-
  cp              %16.5 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  fs              %15.1 = FrameState         R     0x55b0c9655cb0+409: [<blt any>, %14.17], env=e2.12, next=%15.0
  void                    Deopt              !v    %15.1   !
BB18   <- [16]
  void                    Assume             D     %16.4, %16.5 (Typecheck@0x55b0ca5365f0[Type#22])
  lgl$-           %18.1 = CastType           d     dn %16.3
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB20 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  fs              %17.1 = FrameState         R     0x55b0c9655cb0+442: [%16.3], env=e2.12, next=%17.0
  void                    Deopt              !v    %17.1   !
BB20   <- [18]
  fs              %20.0 = FrameState         R     0x55b0c92c0d70+45: [], env=e2.6
  (cls|spec|blt)  %20.1 = LdFun              !v    nchar, e2.12
  fs              %20.2 = FrameState         R     0x55b0c9655cb0+463: [%20.1], env=e2.12, next=%20.0
  void                    Deopt              !v    %20.2, DeadCall@0x55b0ca5365f0[Call#6], %20.1   !
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    x, e2.12
  void                    Visible            v     
  val?            %19.2 = Force!<wrapped>    !     %19.0, e2.12   <str$->
  val?            %19.3 = PopContext         C     %19.2, %2.10   <str$->
  void                    Return             l     %19.3
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     paste, <0x55b0c8f95da8>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, formObj[0x55b0cb3e5c30]_p1, e1.0
  val?            %1.3  = NamedCall          !     %1.1(%1.2, collapse=" ") e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     format.fun, e1.0
  prom-           %1.2  = MkArg                    unboundValue, formObj[0x55b0cb3e5c30]_p2, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     nchar.w, <0x55b0c8db19c0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, formObj[0x55b0cb3e5c30]_p4, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <int$->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3

│ formObj[0x55b0cb3e5c30]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
