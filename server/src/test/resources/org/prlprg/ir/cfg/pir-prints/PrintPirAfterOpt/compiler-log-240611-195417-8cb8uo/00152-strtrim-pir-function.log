
┌──────────────────────────────────────────────────────────────────────────────┐
│ strtrim[0x55b0cb263fe0]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1│
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
strtrim[0x55b0cb263fe0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  env             e1.2  = MkEnv              l     x=%1.1, width=%1.0, parent=R_BaseNamespace, context 1
  val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str$->
  lgl$#-          %1.4  = CallSafeBuiltin    wed   is.character(%1.3)    <lgl$->
  void                    Branch                   %1.4 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  goto BB3
BB4   <- [1]
  val+            %4.0  = CallSafeBuiltin    wed   as.character(%1.3)    <val?_>
  void                    StVar              lW    x, %4.0, e1.2
  goto BB3
BB3   <- [2, 4]
  val?^           %3.0  = Phi                      %1.1:BB2, %4.0:BB4
  val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.2   <str$->
  val?^ | miss    %3.2  = LdVar              eR    width, e1.2
  val?            %3.3  = Force!<lazy>       !v    %3.2, e1.2   <int$->
  val?            %3.4  = CallBuiltin        !     strtrim(%3.1, %3.3) e1.2
  void                    Return             l     %3.4

│ strtrim[0x55b0cb263fe0]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
