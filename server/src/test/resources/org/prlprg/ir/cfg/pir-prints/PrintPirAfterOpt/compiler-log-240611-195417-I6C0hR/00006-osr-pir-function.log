
┌──────────────────────────────────────────────────────────────────────────────┐
│ osr[0x55cfaa4c7090]                                                          │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
osr[0x55cfaa4c7090]
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  vec#-           %1.1  = LdArg                    0
  int$#-          %1.2  = LdArg                    1
  int$#-          %1.3  = LdArg                    2
  goto BB2
BB2   <- [1, 5]
  int$-           %2.0  = Phi                      %1.3:BB1, %2.2:BB5
  val?            %2.1  = Phi                      %1.1:BB1, %5.11:BB5
  int$-           %2.2  = Inc                      %2.0
  lgl$-           %2.3  = Lt                 d     %1.2, %2.2, elided
  lgl$#-          %2.4  = Identical                %2.3, true
  void                    Branch                   %2.4 -> BB3 (if true) | BB4 (if false)
BB3   <- [2]
  void                    Visible            v     
  void                    Return             l     %2.1
BB4   <- [2]
  void                    StVar              lW    i, %2.2, e1.0
  cp              %4.1  = Checkpoint                -> BB5 (default) | BB6 (if assume failed)
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    FUN, e1.0
  (cls|spec|blt)  %5.1  = CastType                 dn %5.0
  val+            %5.2  = CallSafeBuiltin          bodyCode(%5.1) 
  lgl$#-          %5.3  = Identical                %5.2, <(rir::DispatchTable*)0x55cfa871f2a0>
  void                    Assume             D     %5.3, %4.1 (CallTarget@0x55cfaa312e30[Call#4])
  val?            %5.5  = Force!             d     %5.0, 
  prom-           %5.6  = MkArg                    unboundValue, osr[0x55cfaa4c7090]_p0, e1.0
  (miss|dots)     %5.7  = LdDots             R     , e1.0
  *dots-          %5.8  = ExpandDots               %5.7
  (cls|spec|blt)  %5.9  = ChkFunction        e     %5.5
  val?            %5.10 = NamedCall          !v    %5.9(%5.6, .xpandDotsTrigger=%5.8) e1.0   <real->
  val?            %5.11 = SetVecElt          e     %5.10, %2.1, %2.2
  goto BB2
BB6   <- [4]
  fs              %6.0  = FrameState         R     0x55cfaa49ef80+310: [%2.1, %1.2, %2.2], env=e1.0
  void                    Deopt              !v    %6.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    X, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <vec->
  lgl$#-          %1.3  = IsType                   %1.2 isA val+   <true>
  void                    Branch                   %1.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    i, e1.0
  val?            %2.1  = Force<value>       !v    %2.0, e1.0   <int$->
  goto BB3
BB4   <- [1]
  prom-           %4.0  = MkArg                    unboundValue, osr[0x55cfaa4c7090]_p1, e1.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.1:BB2, %4.0:BB4
  val?            %3.1  = Extract2_1D        !v    %1.2, %3.0, e1.0   <real->
  void                    Visible            v     
  void                    Return             l     %3.1
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ osr[0x55cfaa4c7090]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
