
┌──────────────────────────────────────────────────────────────────────────────┐
│ setPrimitiveMethods[0x55ccabb1c8e0]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2│
│ Properties:                                                                  │
├────── PIR Version After Optimizations
setPrimitiveMethods[0x55ccabb1c8e0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    4
  val?^           %1.1  = LdArg                    3
  val?~+          %1.2  = LdArg                    2
  val?^           %1.3  = LdArg                    1
  val?^           %1.4  = LdArg                    0
  cp              %1.5  = Checkpoint                -> BB2 (default) | BB3 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    .Call, <env 0x55cca7705378>
  lgl$#-          %2.1  = Identical                <blt .Call>, %2.0   <true>
  void                    Assume             D     %2.1, %1.5 (DeadBranchReached@0x55cca9b534d0[Test#0])
  val?^ | miss    %2.3  = LdVar              eR    C_R_M_setPrimitiveMethods, <env 0x55cca7705378>
  env             e2.4  = MkEnv              l     f=%1.4, fdef=%1.3, code=%1.2, generic=%1.1, mlist=%1.0, parent=<env 0x55cca7705378>, context 1
  val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
  val?^ | miss    %2.6  = LdVar              eR    f, e2.4
  val?            %2.7  = Force!<lazy>       !v    %2.6, e2.4   <str$->
  val?^ | miss    %2.8  = LdVar              eR    fdef, e2.4
  val?            %2.9  = Force!<lazy>       !v    %2.8, e2.4   <val?>
  val?^ | miss    %2.10 = LdVar              eR    code, e2.4
  val?            %2.11 = Force!<value>      !v    %2.10, e2.4   <str$->
  val?^ | miss    %2.12 = LdVar              eR    generic, e2.4
  val?            %2.13 = Force!<lazy>       !v    %2.12, e2.4   <cls>
  val?^ | miss    %2.14 = LdVar              eR    mlist, e2.4
  val?            %2.15 = Force!<lazy>       !v    %2.14, e2.4   <env->
  val?            %2.16 = CallBuiltin        !     .Call(%2.5, %2.7, %2.9, %2.11, %2.13, %2.15) e2.4   <str$->
  void                    Return             l     %2.16
BB3   <- [1]
  env             e3.0  = (MkEnv)            l     f=%1.4, fdef=%1.3, code=%1.2, generic=%1.1, mlist=%1.0, parent=<env 0x55cca7705378>, context 1
  fs              %3.1  = FrameState         R     0x55cca8b3d000+0: [], env=e3.0
  void                    Deopt              !v    %3.1   !

│ setPrimitiveMethods[0x55ccabb1c8e0]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
