
┌──────────────────────────────────────────────────────────────────────────────┐
│ pirCheck[0x55cbf4724dc0]                                                     │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
pirCheck[0x55cbf4724dc0]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    1
  val?^ | miss    %1.1  = LdArg                    0
  val?^           %1.2  = ChkMissing         e     %1.1
  env             e1.3  = MkEnv              l     a=%1.1, b=%1.0, x=0, parent=R_GlobalEnv, context 1
  val?            %1.4  = Force!<lazy>       !v    %1.2, e1.3   <int$>
  val?^ | miss    %1.5  = LdVar              eR    b, e1.3
  val?            %1.6  = Force!<lazy>       !v    %1.5, e1.3   <int$>
  lgl$#-          %1.7  = ColonInputEffects  we    %1.4, %1.6   <false>
  cp              %1.8  = Checkpoint                -> BB2 (default) | BB3 (if assume failed)
BB2   <- [1]
  void                    AssumeNot          D     %1.7, %1.8 (DeadBranchReached@0x55cbf3ace388[Test#0])
  val?            %2.1  = Colon              !v    %1.4, %1.6, e1.3
  (cls|spec|blt)  %2.2  = LdFun              !v    for, e1.3
  prom-           %2.3  = MkArg                    %2.1, pirCheck[0x55cbf4724dc0]_p0 (!refl), e1.3
  prom-           %2.4  = MkArg                    unboundValue, pirCheck[0x55cbf4724dc0]_p1, e1.3
  val?            %2.5  = Call               !v    %2.2(%2.3, %2.4) e1.3
  val?^ | miss    %2.6  = LdVar              eR    x, e1.3
  void                    Visible            v     
  val?            %2.8  = Force!<value>      !     %2.6, e1.3   <str$->
  void                    Return             l     %2.8
BB3   <- [1]
  fs              %3.0  = FrameState         R     0x55cbf4bb3790+46: [%1.4, %1.6, %1.7], env=e1.3
  void                    Deopt              !v    %3.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    a, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <val?_>
  val?^ | miss    %1.3  = LdVar              eR    b, e1.0
  void                    Visible            v     
  val?            %1.5  = Force              !     %1.3, e1.0   <val?_>
  val?            %1.6  = Colon              !     %1.2, %1.5, e1.0   <val?_>
  void                    Return             l     %1.6
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <val?_>
  void                    Invisible          v     
  void                    StVar              lW    x, %1.2, e1.0
  void                    Return             l     %1.2

│ pirCheck[0x55cbf4724dc0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
