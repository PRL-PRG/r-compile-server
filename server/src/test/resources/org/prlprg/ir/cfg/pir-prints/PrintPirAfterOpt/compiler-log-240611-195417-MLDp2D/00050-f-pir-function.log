
┌──────────────────────────────────────────────────────────────────────────────┐
│ f[0x562e921e89a0]                                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
f[0x562e921e89a0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  cp              %1.2  = Checkpoint                -> BB2 (default) | BB22 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    list, R_GlobalEnv
  lgl$#-          %2.1  = Identical                <blt list>, %2.0   <true>
  void                    Assume             D     %2.1, %1.2 (DeadBranchReached@0x562e9139a7f8[Test#0])
  env             e2.3  = MkEnv              l     lhs=%1.1, rhs=%1.0, x=<vec [1] 10>, i=1, parent=R_GlobalEnv, context 1
  val?            %2.4  = Force!<lazy>       !v    %1.1, e2.3   <val?>
  val?^ | miss    %2.5  = LdVar              eR    rhs, e2.3
  val?            %2.6  = Force!<lazy>       !v    %2.5, e2.3   <val?>
  lgl$#-          %2.7  = ColonInputEffects  we    %2.4, %2.6
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB22   <- [1]
  env             e22.0 = (MkEnv)            l     lhs=%1.1, rhs=%1.0, parent=R_GlobalEnv, context 1
  fs              %22.1 = FrameState         R     0x562e90291df0+0: [], env=e22.0
  void                    Deopt              !v    %22.1
BB4   <- [2]
  void                    Branch                   %2.7 -> BB7 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x562e90291df0+143: [%2.4, %2.6, %2.7], env=e2.3
  void                    Deopt              !v    %3.0   !
BB7   <- [4]
  (int|real)$#-   %7.0  = ColonCastLhs       e     %2.4   <int$->
  (int|real)$#-   %7.1  = ColonCastRhs       e     %7.0, %2.6   <int$->
  lgl$#-          %7.2  = Lte                d     %7.0, %7.1, elided
  lgl$#-          %7.3  = IsType                   %7.0 isA int$#-
  lgl$#-          %7.4  = IsType                   %7.1 isA int$#-
  void                    Branch                   %7.2 -> BB21 (if true) | BB8 (if false)
BB5   <- [4]
  val?            %5.0  = Colon              !v    %2.4, %2.6, e2.3
  (cls|spec|blt)  %5.1  = LdFun              !v    for, e2.3
  prom-           %5.2  = MkArg                    %5.0, f[0x562e921e89a0]_p0 (!refl), e2.3
  prom-           %5.3  = MkArg                    unboundValue, f[0x562e921e89a0]_p1, e2.3
  val?            %5.4  = Call               !v    %5.1(%5.2, %5.3) e2.3
  goto BB6
BB21   <- [7]
  goto BB9
BB8   <- [7]
  goto BB9
BB6   <- [15, 5]
  val?^ | miss    %6.0  = LdVar              eR    x, e2.3
  void                    Visible            v     
  val?            %6.2  = Force!<value>      !     %6.0, e2.3   <vec->
  void                    Return             l     %6.2
BB9   <- [21, 8]
  int$#-          %9.0  = Phi                      1L:BB21, -1L:BB8
  lgl$#-          %9.1  = Neq                d     %7.1, %7.0, elided   <true>
  void                    Assume             D     %7.3, %2.8 (Typecheck@0x562e9139a7f8[Type#11])
  int$#-          %9.3  = CastType           d     dn %7.0
  void                    Assume             D     %7.4, %2.8 (Typecheck@0x562e9139a7f8[Type#12])
  int$#-          %9.5  = CastType           d     dn %7.1
  void                    Assume             D     %9.1, %2.8 (DeadBranchReached@0x562e9139a7f8[Test#3])
  void                    StVar              lW    elem, %9.3, e2.3
  int$#-          %9.8  = Add                d     %9.3, %9.0, elided
  val?^ | miss    %9.9  = LdVar              eR    x !upd, e2.3
  val?            %9.10 = Force!<value>      !v    %9.9, e2.3   <vec$->
  val?^ | miss    %9.11 = LdVar              eR    i, e2.3
  val?            %9.12 = Force!<value>      !v    %9.11, e2.3   <real$->
  lgl$#-          %9.13 = IsType                   %9.12 isA real$-
  lgl$#-          %9.14 = IsType                   %9.10 isA val?-
  cp              %9.15 = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB11   <- [9]
  void                    Assume             D     %9.14, %9.15 (Typecheck@0x562e9139a7f8[Type#14])
  val?-           %11.1 = CastType           d     dn %9.10   <vec$->
  void                    Assume             D     %9.13, %9.15 (Typecheck@0x562e9139a7f8[Type#15])
  real$-          %11.3 = CastType           d     dn %9.12
  val?-           %11.4 = Subassign2_1D      wed   %9.3, %11.1, %11.3, elided
  void                    StVar              lW    x, %11.4, e2.3
  val?^ | miss    %11.6 = LdVar              eR    i, e2.3
  val?            %11.7 = Force!<value>      !v    %11.6, e2.3   <real$->
  lgl$#-          %11.8 = IsType                   %11.7 isA real$-
  cp              %11.9 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x562e90291df0+308: [%9.0, %9.5, %9.8, %9.3, %9.10, %9.12], env=e2.3
  void                    Deopt              !v    %10.0   !
BB13   <- [11]
  void                    Assume             D     %11.8, %11.9 (Typecheck@0x562e9139a7f8[Type#16])
  real$-          %13.1 = CastType           d     dn %11.7
  real$-          %13.2 = Add                d     %13.1, 1, elided   <real$->
  void                    StVar              lW    i, %13.2, e2.3
  goto BB14
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x562e90291df0+332: [%9.0, %9.5, %9.8, %11.7], env=e2.3
  void                    Deopt              !v    %12.0   !
BB14   <- [13, 20]
  int$#-          %14.0 = Phi                      %9.8:BB13, %16.1:BB20   <int$->
  lgl$#-          %14.1 = Neq                d     %9.5, %14.0, elided
  void                    Branch                   %14.1 -> BB16 (if true) | BB15 (if false)
BB16   <- [14]
  void                    StVar              lW    elem, %14.0, e2.3
  int$#-          %16.1 = Add                d     %14.0, %9.0, elided
  val?^ | miss    %16.2 = LdVar              eR    x !upd, e2.3
  val?            %16.3 = Force!<value>      !v    %16.2, e2.3   <vec->
  val?^ | miss    %16.4 = LdVar              eR    i, e2.3
  val?            %16.5 = Force!<value>      !v    %16.4, e2.3   <real$->
  lgl$#-          %16.6 = IsType                   %16.5 isA real$-
  lgl$#-          %16.7 = IsType                   %16.3 isA val?-
  cp              %16.8 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB15   <- [14]
  goto BB6
BB18   <- [16]
  void                    Assume             D     %16.7, %16.8 (Typecheck@0x562e9139a7f8[Type#19])
  val?-           %18.1 = CastType           d     dn %16.3   <vec->
  void                    Assume             D     %16.6, %16.8 (Typecheck@0x562e9139a7f8[Type#20])
  real$-          %18.3 = CastType           d     dn %16.5
  val?-           %18.4 = Subassign2_1D      wed   %14.0, %18.1, %18.3, elided
  void                    StVar              lW    x, %18.4, e2.3
  val?^ | miss    %18.6 = LdVar              eR    i, e2.3
  val?            %18.7 = Force!<value>      !v    %18.6, e2.3   <real$->
  lgl$#-          %18.8 = IsType                   %18.7 isA real$-
  cp              %18.9 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x562e90291df0+419: [%9.0, %9.5, %16.1, %14.0, %16.3, %16.5], env=e2.3
  void                    Deopt              !v    %17.0   !
BB20   <- [18]
  void                    Assume             D     %18.8, %18.9 (Typecheck@0x562e9139a7f8[Type#21])
  real$-          %20.1 = CastType           d     dn %18.7
  real$-          %20.2 = Add                d     %20.1, 1, elided   <real$->
  void                    StVar              lW    i, %20.2, e2.3
  goto BB14
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x562e90291df0+443: [%9.0, %9.5, %16.1, %18.7], env=e2.3
  void                    Deopt              !v    %19.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    lhs, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <val?_>
  val?^ | miss    %1.3  = LdVar              eR    rhs, e1.0
  void                    Visible            v     
  val?            %1.5  = Force              !     %1.3, e1.0   <val?_>
  val?            %1.6  = Colon              !     %1.2, %1.5, e1.0   <val?_>
  void                    Return             l     %1.6
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    elem, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <val?_>
  val?^ | miss    %1.3  = LdVar              eR    x !upd, e1.0
  val?            %1.4  = Force              !v    %1.3, e1.0   <val?_>
  val?^ | miss    %1.5  = LdVar              eR    i, e1.0
  val?            %1.6  = Force              !v    %1.5, e1.0   <val?_>
  val?            %1.7  = Subassign2_1D      !v    %1.2, %1.4, %1.6, e1.0
  void                    StVar              lW    x, %1.7, e1.0
  val?^ | miss    %1.9  = LdVar              eR    i, e1.0
  val?            %1.10 = Force              !v    %1.9, e1.0   <val?_>
  val?            %1.11 = Add                !v    %1.10, 1, e1.0   <val?_>
  void                    Invisible          v     
  void                    StVar              lW    i, %1.11, e1.0
  void                    Return             l     %1.11

│ f[0x562e921e89a0]                                                            │
└──────────────────────────────────────────────────────────────────────────────┘
