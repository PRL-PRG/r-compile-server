
┌──────────────────────────────────────────────────────────────────────────────┐
│ mode[0x5629e5b43a50]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
mode[0x5629e5b43a50]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  val+            %1.1  = Force!<lazy>       !vr   %1.0,    <val?+>
  lgl$#-          %1.2  = CallSafeBuiltin    wed   is.expression(%1.1)    <lgl$->
  cp              %1.3  = Checkpoint                -> BB2 (default) | BB21 (if assume failed)
BB2   <- [1]
  void                    Branch                   %1.2 -> BB20 (if true) | BB3 (if false)
BB21   <- [1]
  env             e21.0 = (MkEnv)            l     tx=unboundValue, x=%1.0, parent=R_BaseNamespace, context 1
  fs              %21.1 = FrameState         R     0x5629ea44d2b0+91: [%1.2], env=e21.0
  void                    Deopt              !v    %21.1
BB20   <- [2]
  void                    Visible            v     
  goto BB14
BB3   <- [2]
  lgl$#-          %3.0  = IsType                   %1.0 isA val?~+
  void                    Assume             D     %3.0, %1.3 (Typecheck@0x5629e893b378[Type#4])
  lgl$#-          %3.2  = CallSafeBuiltin    wed   is.call(%1.1)    <lgl$->
  void                    Branch                   %3.2 -> BB19 (if true) | BB4 (if false)
BB14   <- [20, 13]
  str$-           %14.0 = Phi                      %13.0:BB13, "expression":BB20
  void                    Return             l     %14.0
BB19   <- [3]
  (cls|spec|blt)  %19.0 = LdFun              !v    deparse, R_BaseNamespace
  env             e19.1 = (MkEnv)            l     tx=unboundValue, x=%1.0, parent=R_BaseNamespace, context 1
  fs              %19.2 = FrameState         R     0x5629ea44d2b0+226: [%19.0], env=e19.1
  void                    Deopt              !v    %19.2, DeadCall@0x5629e893b378[Call#2], %19.0
BB4   <- [3]
  lgl$#-          %4.0  = CallSafeBuiltin    wed   is.symbol(%1.1)    <lgl$->
  void                    Branch                   %4.0 -> BB18 (if true) | BB5 (if false)
BB18   <- [4]
  void                    Visible            v     
  goto BB13
BB5   <- [4]
  str$-           %5.0  = CallSafeBuiltin    wed   typeof(%1.1)    <str$->
  int$-           %5.1  = Length                   %5.0
  cp              %5.2  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB13   <- [18, 12]
  str$-           %13.0 = Phi                      %12.0:BB12, "name":BB18
  goto BB14
BB7   <- [5]
  lgl$-           %7.0  = Eq                 d     %5.1, 1L, elided   <true>
  lgl$#-          %7.1  = Identical                %7.0, true
  void                    Assume             D     %7.1, %5.2 (DeadBranchReached@0x5629e893b378[Test#14])
  lgl$-           %7.3  = CallSafeBuiltin    wed   is.na(%5.0) 
  cp              %7.4  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  env             e6.0  = (MkEnv)            l     tx=%5.0, x=%1.0, parent=R_BaseNamespace, context 1
  fs              %6.1  = FrameState         R     0x5629ea44d2b0+708: [%5.0], env=e6.0
  void                    Deopt              !v    %6.1
BB9   <- [7]
  lgl$#-          %9.0  = CheckTrueFalse     e     %7.3   <false>
  void                    AssumeNot          D     %9.0, %7.4 (DeadBranchReached@0x5629e893b378[Test#23])
  lgl$-           %9.2  = Eq                 d     %5.0, double, elided
  lgl$#-          %9.3  = CheckTrueFalse     e     %9.2
  void                    Branch                   %9.3 -> BB17 (if true) | BB10 (if false)
BB8   <- [7]
  env             e8.0  = (MkEnv)            l     tx=%5.0, x=%1.0, parent=R_BaseNamespace, context 1
  fs              %8.1  = FrameState         R     0x5629ea44d2b0+965: [%5.0, %7.3], env=e8.0
  void                    Deopt              !v    %8.1
BB17   <- [9]
  goto BB16
BB10   <- [9]
  lgl$-           %10.0 = Eq                 d     %5.0, integer, elided
  lgl$#-          %10.1 = CheckTrueFalse     e     %10.0
  void                    Branch                   %10.1 -> BB15 (if true) | BB11 (if false)
BB16   <- [15, 17]
  void                    Visible            v     
  goto BB12
BB15   <- [10]
  goto BB16
BB11   <- [10]
  lgl$-           %11.0 = Eq                 d     %5.0, closure, elided
  lgl$#-          %11.1 = CheckTrueFalse     e     %11.0   <false>
  void                    AssumeNot          D     %11.1, %7.4 (DeadBranchReached@0x5629e893b378[Test#26])
  lgl$-           %11.3 = Eq                 d     %5.0, builtin, elided
  lgl$#-          %11.4 = CheckTrueFalse     e     %11.3   <false>
  void                    AssumeNot          D     %11.4, %7.4 (DeadBranchReached@0x5629e893b378[Test#27])
  lgl$-           %11.6 = Eq                 d     %5.0, special, elided
  lgl$#-          %11.7 = CheckTrueFalse     e     %11.6   <false>
  void                    AssumeNot          D     %11.7, %7.4 (DeadBranchReached@0x5629e893b378[Test#28])
  void                    Visible            v     
  goto BB12
BB12   <- [11, 16]
  str$-           %12.0 = Phi                      %5.0:BB11, "numeric":BB16
  goto BB13

│ mode[0x5629e5b43a50]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
