
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.call[0x5616634e7060]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2 miss: 1        │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
match.call[0x5616634e7060]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  env             e1.3  = MkEnv              l     definition=%1.2, call=%1.1, expand.dots=%1.0, envir(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %1.4  = MkArg                    unboundValue, match.call[0x5616634e7060]_p0, e1.3
  val?^ | miss    %1.5  = CastType                 up %1.4
  void                    StArg              lW    envir, %1.5, e1.3
  lgl$-           %1.7  = Missing            eR    definition, e1.3
  lgl$-           %1.8  = Not                d     %1.7, elided
  lgl$-           %1.9  = AsLogical                %1.8
  lgl$#-          %1.10 = Identical                %1.9, false
  void                    Branch                   %1.10 -> BB2 (if true) | BB6 (if false)
BB2   <- [1]
  goto BB3
BB6   <- [1]
  val?            %6.0  = Force<lazy>        !v    %1.2, e1.3   <cls->
  lgl$-           %6.1  = Is                       %6.0, NULL
  lgl$-           %6.2  = AsLogical                %6.1
  lgl$-           %6.3  = LAnd                     %1.9, %6.2
  lgl$#-          %6.4  = IsType                   %6.0 isA val?-
  cp              %6.5  = Checkpoint                -> BB7 (default) | BB8 (if assume failed)
BB3   <- [7, 2]
  lgl$-           %3.0  = Phi                      %6.3:BB7, %1.9:BB2
  lgl$#-          %3.1  = CheckTrueFalse     e     %3.0
  void                    Branch                   %3.1 -> BB5 (if true) | BB4 (if false)
BB7   <- [6]
  void                    Assume             D     %6.4, %6.5 (Typecheck@0x561663721960[Type#5])
  goto BB3
BB8   <- [6]
  fs              %8.0  = FrameState         R     0x5616636a0f90+23: [%1.9, %6.0], env=e1.3
  void                    Deopt              !v    %8.0   !
BB5   <- [3]
  (cls|spec|blt)  %5.0  = LdFun              !v    sys.function, e1.3
  fs              %5.1  = FrameState         R     0x5616636a0f90+51: [%5.0], env=e1.3
  void                    Deopt              !v    %5.1, DeadCall@0x561663721960[Call#5], %5.0   !
BB4   <- [3]
  val?^ | miss    %4.0  = LdVar              eR    definition, e1.3
  val?            %4.1  = Force!<wrapped>    !v    %4.0, e1.3   <cls->
  val?^ | miss    %4.2  = LdVar              eR    call, e1.3
  val?            %4.3  = Force!<lazy>       !v    %4.2, e1.3   <code->
  val?^ | miss    %4.4  = LdVar              eR    expand.dots, e1.3
  val?            %4.5  = Force!<value>      !v    %4.4, e1.3   <lgl$->
  val?^ | miss    %4.6  = LdVar              eR    envir, e1.3
  val?            %4.7  = Force!<lazy>       !v    %4.6, e1.3   <env->
  val?            %4.8  = CallBuiltin        !     match.call(%4.1, %4.3, %4.5, %4.7) e1.3
  void                    Return             l     %4.8
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     parent.frame, <0x561660dd1170>, e1.0
  val?            %1.2  = Call               !     %1.1(2L) e1.0   <env->
  void                    Return             l     %1.2

│ match.call[0x5616634e7060]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
