
┌──────────────────────────────────────────────────────────────────────────────┐
│ rir.compile>numnotnull@0[0x5587cf509a30]                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
rir.compile>numnotnull@0[0x5587cf509a30]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     gparname=%1.0, parent=?, context 1
  (cls|spec|blt)  %1.2  = LdFun              !v    match, ?
  prom-           %1.3  = MkArg                    unboundValue, rir.compile>numnotnull@0[0x5587cf509a30]_p0 (!refl), e1.1
  prom-           %1.4  = MkArg                    unboundValue, rir.compile>numnotnull@0[0x5587cf509a30]_p1, e1.1
  val?            %1.5  = Call               !v    %1.2(%1.3, %1.4) e1.1
  val?^ | miss    %1.6  = LdVar              eR    gpars, e1.1
  val?            %1.7  = Force!             !v    %1.6, e1.1   <val?_>
  lgl$#-          %1.8  = IsType                   %1.7 isA val+   <@?>
  void                    Branch                   %1.8 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    gparname, e1.1
  val?            %2.1  = Force!             !v    %2.0, e1.1   <val?_>
  goto BB3
BB4   <- [1]
  prom-           %4.0  = MkArg                    unboundValue, rir.compile>numnotnull@0[0x5587cf509a30]_p3, e1.1
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.1:BB2, %4.0:BB4
  val?            %3.1  = Extract2_1D        !v    %1.7, %3.0, e1.1   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.1
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    gparname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     names, e1.0
  prom-           %1.2  = MkArg                    unboundValue, rir.compile>numnotnull@0[0x5587cf509a30]_p2, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    gpars, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    gparname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ rir.compile>numnotnull@0[0x5587cf509a30]                                     │
└──────────────────────────────────────────────────────────────────────────────┘
