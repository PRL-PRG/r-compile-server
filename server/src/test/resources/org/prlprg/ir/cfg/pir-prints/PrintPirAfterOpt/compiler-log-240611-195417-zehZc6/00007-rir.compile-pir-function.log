
┌──────────────────────────────────────────────────────────────────────────────┐
│ rir.compile[0x559d60d6f3d0]                                                  │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
rir.compile[0x559d60d6f3d0]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     q=%1.0, parent=R_GlobalEnv, context 1
  (cls|spec|blt)  %1.2  = LdFun              !     stopifnot, R_GlobalEnv
  prom-           %1.3  = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p0, e1.1
  val?            %1.4  = Call               !     %1.2(%1.3) e1.1
  (cls|spec|blt)  %1.5  = LdFun              !     print, e1.1
  prom-           %1.6  = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p2, e1.1
  val?            %1.7  = Call               !     %1.5(%1.6) e1.1
  (cls|spec|blt)  %1.8  = LdFun              !     stopifnot, e1.1
  prom-           %1.9  = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p4, e1.1
  val?            %1.10 = Call               !     %1.8(%1.9) e1.1
  (cls|spec|blt)  %1.11 = LdFun              !     stopifnot, e1.1
  prom-           %1.12 = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p6, e1.1
  val?            %1.13 = Call               !     %1.11(%1.12) e1.1
  (cls|spec|blt)  %1.14 = LdFun              !     f, e1.1
  prom-           %1.15 = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p8, e1.1
  val?            %1.16 = Call               !     %1.14(%1.15, 2) e1.1   <val?_>
  void                    Return             l     %1.16
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    f, e1.0
  prom-           %1.2  = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p1, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2) e1.0   <val?_>
  void                    Visible            v     
  val?            %1.5  = Eq                 !     %1.3, 2, e1.0   <val?_>
  void                    Return             l     %1.5
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    q, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     f, e1.0
  prom-           %1.2  = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p3, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2, 2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    q, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    f, e1.0
  prom-           %1.2  = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p5, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2, 2) e1.0   <val?_>
  void                    Visible            v     
  val?            %1.5  = Eq                 !     %1.3, 3, e1.0   <val?_>
  void                    Return             l     %1.5
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    q, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    f, e1.0
  prom-           %1.2  = MkArg                    unboundValue, rir.compile[0x559d60d6f3d0]_p7, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2, 2, 3) e1.0   <val?_>
  void                    Visible            v     
  val?            %1.5  = Eq                 !     %1.3, 4, e1.0   <val?_>
  void                    Return             l     %1.5
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    q, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    q, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ rir.compile[0x559d60d6f3d0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
