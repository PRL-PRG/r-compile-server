
┌──────────────────────────────────────────────────────────────────────────────┐
│ repeat_fasta[0x56267fb89120]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
repeat_fasta[0x56267fb89120]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    strsplit, R_GlobalEnv
  lgl$#-          %0.3  = Identical                %0.2, function(x, split, fixed=FALSE, perl=FALSE, us|...
  void                    Branch                   %0.3 -> BB49 (if true) | BB50 (if false)
BB49   <- [0]
  env             e49.0 = MkEnv              l     s=%0.1, count=%0.0, parent=R_GlobalEnv, context 1
  val?            %49.1 = Force!<lazy>       !v    %0.1, e49.0   <str$->
  lgl$#-          %49.2 = IsType                   %49.1 isA val?-
  void                    Branch                   %49.2 -> BB51 (if true) | BB52 (if false)
BB50   <- [0]
  env             e50.0 = (MkEnv)            l     s=%0.1, count=%0.0, parent=R_GlobalEnv, context 1
  fs              %50.1 = FrameState         R     0x56267da4f470+0: [], env=e50.0
  void                    Deopt              !v    %50.1, CallTarget@0x56267ed7c9f8[Call#0], %0.2
BB51   <- [49]
  val?-           %51.0 = CastType           d     dn %49.1   <str$->
  vec+            %51.1 = CallSafeBuiltin    wed   strsplit(%51.0, "", false, false, false)    <vec$->
  lgl$#-          %51.2 = IsType                   %51.1 isA val?-
  void                    Branch                   %51.2 -> BB53 (if true) | BB54 (if false)
BB52   <- [49]
  prom-           %52.0 = MkArg                    unboundValue, repeat_fasta[0x56267fb89120]_p0, e49.0
  val?^           %52.1 = CastType                 up %52.0
  fs              %52.2 = FrameState         R     0x56267da4f470+45: [], env=e49.0
  env             e52.3 = (MkEnv)            l     useBytes(miss)=false, perl(miss)=false, fixed(miss)=false, split="", x=%52.1, parent=R_BaseNamespace, context 0
  fs              %52.4 = FrameState         R     0x56267e907b80+9: [], env=e52.3, next=%52.2
  fs              %52.5 = FrameState         R     0x56267dfc1ad0+5(pr): [%49.1], env=e49.0, next=%52.4
  void                    Deopt              !v    %52.5, Typecheck@0x56267ed7c9f8[Type#0], %49.1   !
BB53   <- [51]
  vec-            %53.0 = CastType           d     dn %51.1   <vec$->
  val             %53.1 = Extract2_1D        wed   %53.0, 1, elided   <str->
  void                    StVar              lW    chars, %53.1, e49.0
  val?^ | miss    %53.3 = LdVar              eR    nchar, e49.0
  lgl$#-          %53.4 = Identical                %53.3, function(x, type="chars", allowNA=FALSE, keepN|...
  void                    Branch                   %53.4 -> BB55 (if true) | BB56 (if false)
BB54   <- [51]
  fs              %54.0 = FrameState         R     0x56267da4f470+45: [], env=e49.0
  prom-           %54.1 = MkArg                    %51.0, repeat_fasta[0x56267fb89120]_p0 (!refl), e49.0
  val?~           %54.2 = CastType                 up %54.1
  env             e54.3 = (MkEnv)            l     useBytes(miss)=false, perl(miss)=false, fixed(miss)=false, split="", x=%54.2, parent=R_BaseNamespace, context 0
  fs              %54.4 = FrameState         R     0x56267e907b80+165: [%51.1], env=e54.3, next=%54.0
  void                    Deopt              !v    %54.4, Typecheck@0x56267ed7c9f8[Type#1], %51.1   !
BB55   <- [53]
  val?^ | miss    %55.0 = LdVar              eR    s, e49.0
  val?            %55.1 = Force!<wrapped>    !v    %55.0, e49.0   <str$->
  lgl$#-          %55.2 = IsType                   %55.1 isA val?-
  void                    Branch                   %55.2 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x56267da4f470+103: [], env=e49.0
  void                    Deopt              !v    %56.0, CallTarget@0x56267ed7c9f8[Call#1], %53.3   !
BB57   <- [55]
  val?-           %57.0 = CastType           d     dn %55.1   <str$->
  val+            %57.1 = CallSafeBuiltin    wed   nchar(%57.0, "chars", false, na-lgl)    <int$->
  lgl$#-          %57.2 = IsType                   %57.1 isA int$-
  void                    Branch                   %57.2 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  prom-           %58.0 = MkArg                    unboundValue, repeat_fasta[0x56267fb89120]_p1, e49.0
  val?^           %58.1 = CastType                 up %58.0
  fs              %58.2 = FrameState         R     0x56267da4f470+135: [], env=e49.0
  env             e58.3 = (MkEnv)            l     keepNA(miss)=na-lgl, allowNA(miss)=false, type(miss)="chars", x=%58.1, parent=R_BaseNamespace, context 0
  fs              %58.4 = FrameState         R     0x56267e6a06e0+9: [], env=e58.3, next=%58.2
  fs              %58.5 = FrameState         R     0x56267dfc1da0+5(pr): [%55.1], env=e49.0, next=%58.4
  void                    Deopt              !v    %58.5, Typecheck@0x56267dd89510[Type#0], %55.1   !
BB59   <- [57]
  int$-           %59.0 = CastType           d     dn %57.1
  void                    StVar              lW    len, %59.0, e49.0
  lgl$#-          %59.2 = ColonInputEffects        1, %59.0   <true>
  val?^ | miss    %59.3 = LdVar              eR    character, e49.0
  lgl$#-          %59.4 = Identical                %59.3, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %59.4 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x56267da4f470+135: [], env=e49.0
  prom-           %60.1 = MkArg                    %57.0, repeat_fasta[0x56267fb89120]_p1 (!refl), e49.0
  val?~           %60.2 = CastType                 up %60.1
  env             e60.3 = (MkEnv)            l     keepNA(miss)=na-lgl, allowNA(miss)=false, type(miss)="chars", x=%60.2, parent=R_BaseNamespace, context 0
  fs              %60.4 = FrameState         R     0x56267e6a06e0+69: [%57.1], env=e60.3, next=%60.0
  void                    Deopt              !v    %60.4, Typecheck@0x56267ed7c9f8[Type#4], %57.1   !
BB61   <- [59]
  val?^ | miss    %61.0 = LdVar              eR    width, e49.0
  lgl$#-          %61.1 = IsType                   %61.0 isA int$-
  void                    Branch                   %61.1 -> BB63 (if true) | BB64 (if false)
BB62   <- [59]
  void                    Nop                !     
  val?^ | miss    %62.1 = %59.3
  dr              %62.2 = CallTarget@0x56267ed7c9f8[Call#2]
  goto BB13
BB63   <- [61]
  int$-           %63.0 = CastType           d     dn %61.0
  int$-           %63.1 = Add                d     %59.0, %63.0, elided   <int$->
  str-            %63.2 = CallSafeBuiltin    wed   vector("character", %63.1)    <str->
  void                    StVar              lW    s2, %63.2, e49.0
  void                    Branch                   %59.2 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  void                    Nop                !     
  val?^ | miss    %64.1 = %61.0
  dr              %64.2 = Typecheck@0x56267ed7c9f8[Type#6]
  goto BB13
BB13   <- [62, 64]
  val?^ | miss    %13.0 = Phi                      %62.1:BB62, %64.1:BB64
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %62.2:BB62, %64.2:BB64
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x56267da4f470+149: [], env=e49.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB65   <- [63]
  int$#-          %65.0 = ColonCastRhs       e     1L, %59.0   <int$->
  lgl$#-          %65.1 = Lte                d     1L, %65.0, elided   <true>
  void                    Branch                   %65.1 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  void                    Nop                !     
  lgl$#-          %66.1 = %59.2
  dr              %66.2 = DeadBranchReached@0x56267ed7c9f8[Test#1]
  goto BB15
BB67   <- [65]
  lgl$#-          %67.0 = Neq                d     %65.0, 1L, elided   <true>
  void                    Branch                   %67.0 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  void                    Nop                !     
  lgl$#-          %68.1 = %65.1
  dr              %68.2 = DeadBranchReached@0x56267ed7c9f8[Test#3]
  goto BB15
BB15   <- [66, 68, 70]
  val?^ | miss    %15.0 = Phi                      %66.1:BB66, %68.1:BB68, %70.1:BB70
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %66.2:BB66, %68.2:BB68, %70.2:BB70
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x56267da4f470+195: [], env=e49.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB69   <- [67]
  void                    StVar              lW    i, 1L, e49.0
  val?^ | miss    %69.1 = LdVar              eR    chars, e49.0
  lgl$#-          %69.2 = IsType                   %69.1 isA val?~- | miss
  void                    Branch                   %69.2 -> BB71 (if true) | BB72 (if false)
BB70   <- [67]
  void                    Nop                !     
  lgl$#-          %70.1 = %67.0
  dr              %70.2 = DeadBranchReached@0x56267ed7c9f8[Test#4]
  goto BB15
BB71   <- [69]
  val?~- | miss   %71.0 = CastType           d     dn %69.1
  val?-           %71.1 = Force!<value>            %71.0,    <str->
  lgl$#-          %71.2 = IsType                   %71.1 isA val+   <true>
  void                    Branch                   %71.2 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  void                    Nop                !     
  val?^ | miss    %72.1 = %69.1
  dr              %72.2 = Typecheck@0x56267ed7c9f8[Type#20]
  goto BB17
BB73   <- [71]
  val?            %73.0 = Extract2_1D        wed   %71.1, 1L, elided   <str$->
  lgl$#-          %73.1 = IsType                   %73.0 isA val?-
  void                    Branch                   %73.1 -> BB75 (if true) | BB76 (if false)
BB74   <- [71]
  void                    Nop                !     
  lgl$#-          %74.1 = %71.2
  dr              %74.2 = DeadBranchReached@0x56267ed7c9f8[Test#5]
  goto BB17
BB17   <- [72, 74]
  val?^ | miss    %17.0 = Phi                      %72.1:BB72, %74.1:BB74
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %72.2:BB72, %74.2:BB74
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x56267da4f470+339: [1L, %65.0, 1L], env=e49.0
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB75   <- [73]
  val?-           %75.0 = CastType           d     dn %73.0   <str$->
  val?-           %75.1 = Subassign2_1D      wed   %75.0, %63.2, 1L, elided
  void                    StVar              lW    s2, %75.1, e49.0
  val?-           %75.3 = %75.1
  int$#-          %75.4 = 2L
  goto BB21
BB76   <- [73]
  fs              %76.0 = FrameState         R     0x56267da4f470+406: [1L, %65.0, 2L, %73.0], env=e49.0
  void                    Deopt              !v    %76.0, Typecheck@0x56267ed7c9f8[Type#23], %73.0   !
BB21   <- [75, 77]
  val?-           %21.0 = Phi                      %75.3:BB75, %77.3:BB77
  val?-           %21.1 = %21.0
  int$#-          %21.2 = Phi                      %75.4:BB75, %77.4:BB77
  int$#-          %21.3 = %21.2
  lgl$#-          %21.4 = Neq                d     %65.0, %21.3, elided
  void                    Branch                   %21.4 -> BB45 (if true) | BB24 (if false)
BB45   <- [21]
  void                    StVar              lW    i, %21.3, e49.0
  int$#-          %45.1 = Add                d     %21.3, 1L, elided
  val?            %45.2 = Extract2_1D        wed   %71.1, %21.3, elided   <str$->
  lgl$#-          %45.3 = IsType                   %45.2 isA val?-
  val-            %45.4 = ChkMissing         e     %21.1   <str->
  void                    Branch                   %45.3 -> BB77 (if true) | BB78 (if false)
BB24   <- [21]
  lgl$#-          %24.0 = ColonInputEffects        1, %63.0   <true>
  void                    Branch                   %24.0 -> BB79 (if true) | BB80 (if false)
BB77   <- [45]
  val?-           %77.0 = CastType           d     dn %45.2   <str$->
  val?-           %77.1 = Subassign2_1D      wed   %77.0, %45.4, %21.3, elided
  void                    StVar              lW    s2, %77.1, e49.0
  val?-           %77.3 = %77.1
  int$#-          %77.4 = %45.1
  goto BB21
BB78   <- [45]
  fs              %78.0 = FrameState         R     0x56267da4f470+534: [1L, %65.0, %45.1, %45.2], env=e49.0
  void                    Deopt              !v    %78.0, Typecheck@0x56267ed7c9f8[Type#29], %45.2   !
BB79   <- [24]
  int$#-          %79.0 = ColonCastRhs       e     1L, %63.0   <int$->
  lgl$#-          %79.1 = Lte                d     1L, %79.0, elided   <true>
  void                    Branch                   %79.1 -> BB81 (if true) | BB82 (if false)
BB80   <- [24]
  void                    Nop                !     
  lgl$#-          %80.1 = %24.0
  dr              %80.2 = DeadBranchReached@0x56267ed7c9f8[Test#7]
  goto BB22
BB81   <- [79]
  lgl$#-          %81.0 = Neq                d     %79.0, 1L, elided   <true>
  void                    Branch                   %81.0 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  void                    Nop                !     
  lgl$#-          %82.1 = %79.1
  dr              %82.2 = DeadBranchReached@0x56267ed7c9f8[Test#9]
  goto BB22
BB22   <- [80, 82, 84]
  val?^ | miss    %22.0 = Phi                      %80.1:BB80, %82.1:BB82, %84.1:BB84
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %80.2:BB80, %82.2:BB82, %84.2:BB84
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x56267da4f470+450: [1L, %65.0, %21.3], env=e49.0
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB83   <- [81]
  void                    StVar              lW    i, 1L, e49.0
  val-            %83.1 = ChkMissing         e     %21.1   <str->
  int$-           %83.2 = Add                d     %59.0, 1L, elided   <int$->
  val?-           %83.3 = Subassign2_1D      wed   %75.0, %83.1, %83.2, elided
  void                    StVar              lW    s2, %83.3, e49.0
  val?-           %83.5 = %83.3
  int$#-          %83.6 = 2L
  goto BB25
BB84   <- [81]
  void                    Nop                !     
  lgl$#-          %84.1 = %81.0
  dr              %84.2 = DeadBranchReached@0x56267ed7c9f8[Test#10]
  goto BB22
BB25   <- [83, 85]
  val?-           %25.0 = Phi                      %83.5:BB83, %85.3:BB85
  val?-           %25.1 = %25.0
  int$#-          %25.2 = Phi                      %83.6:BB83, %85.4:BB85
  int$#-          %25.3 = %25.2
  lgl$#-          %25.4 = Neq                d     %79.0, %25.3, elided
  void                    Branch                   %25.4 -> BB42 (if true) | BB26 (if false)
BB42   <- [25]
  void                    StVar              lW    i, %25.3, e49.0
  int$#-          %42.1 = Add                d     %25.3, 1L, elided
  val?            %42.2 = Extract2_1D        wed   %71.1, %25.3, elided   <str$->
  lgl$#-          %42.3 = IsType                   %42.2 isA val?-
  val-            %42.4 = ChkMissing         e     %25.1   <str->
  int$-           %42.5 = Add                d     %59.0, %25.3, elided   <int$->
  void                    Branch                   %42.3 -> BB85 (if true) | BB86 (if false)
BB26   <- [25]
  void                    StVar              lW    pos, 1L, e49.0
  val?^ | miss    %26.1 = LdVar              eR    count, e49.0
  val?            %26.2 = Force!<lazy>       !v    %26.1, e49.0   <real$->
  lgl$#-          %26.3 = CheckTrueFalse     we    %26.2   <true>
  void                    Branch                   %26.3 -> BB87 (if true) | BB88 (if false)
BB85   <- [42]
  val?-           %85.0 = CastType           d     dn %42.2   <str$->
  val?-           %85.1 = Subassign2_1D      wed   %85.0, %42.4, %42.5, elided
  void                    StVar              lW    s2, %85.1, e49.0
  val?-           %85.3 = %85.1
  int$#-          %85.4 = %42.1
  goto BB25
BB86   <- [42]
  fs              %86.0 = FrameState         R     0x56267da4f470+947: [1L, %79.0, %42.1, %42.2], env=e49.0
  void                    Deopt              !v    %86.0, Typecheck@0x56267ed7c9f8[Type#56], %42.2   !
BB87   <- [26]
  val?^ | miss    %87.0 = LdVar              eR    min, e49.0
  lgl$#-          %87.1 = Identical                <blt min>, %87.0   <true>
  void                    Branch                   %87.1 -> BB89 (if true) | BB90 (if false)
BB88   <- [26]
  void                    Nop                !     
  lgl$#-          %88.1 = %26.3
  dr              %88.2 = DeadBranchReached@0x56267ed7c9f8[Test#13]
  goto BB27
BB89   <- [87]
  val?^ | miss    %89.0 = LdVar              eR    width, e49.0
  lgl$#-          %89.1 = IsType                   %89.0 isA int$-
  void                    Branch                   %89.1 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  void                    Nop                !     
  lgl$#-          %90.1 = %87.1
  dr              %90.2 = DeadBranchReached@0x56267ed7c9f8[Test#14]
  goto BB27
BB27   <- [88, 90, 92, 94]
  val?^ | miss    %27.0 = Phi                      %88.1:BB88, %90.1:BB90, %92.1:BB92, %94.1:BB94
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %88.2:BB88, %90.2:BB90, %92.2:BB92, %94.2:BB94
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x56267da4f470+1051: [%26.3], env=e49.0
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
BB91   <- [89]
  int$-           %91.0 = CastType           d     dn %89.0
  val?^ | miss    %91.1 = LdVar              eR    count, e49.0
  lgl$#-          %91.2 = IsType                   %91.1 isA real$~-
  void                    Branch                   %91.2 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  void                    Nop                !     
  val?^ | miss    %92.1 = %89.0
  dr              %92.2 = Typecheck@0x56267ed7c9f8[Type#64]
  goto BB27
BB93   <- [91]
  real$~-         %93.0 = CastType           d     dn %91.1
  real$-          %93.1 = Force!<wrapped>          %93.0,    <real$->
  real$-          %93.2 = CallSafeBuiltin    wed   min(%91.0, %93.1)    <real$->
  void                    StVar              lW    line, %93.2, e49.0
  val?^ | miss    %93.4 = LdVar              eR    pos, e49.0
  lgl$#-          %93.5 = IsType                   %93.4 isA int$-
  void                    Branch                   %93.5 -> BB95 (if true) | BB96 (if false)
BB94   <- [91]
  void                    Nop                !     
  val?^ | miss    %94.1 = %91.1
  dr              %94.2 = Typecheck@0x56267ed7c9f8[Type#65]
  goto BB27
BB95   <- [93]
  int$-           %95.0 = CastType           d     dn %93.4
  real$-          %95.1 = Add                d     %95.0, %93.2, elided   <real$->
  void                    StVar              lW    next_pos, %95.1, e49.0
  void                    StVar              lW    pos, %95.1, e49.0
  val?^ | miss    %95.4 = LdVar              eR    len, e49.0
  lgl$#-          %95.5 = IsType                   %95.4 isA int$-
  void                    Branch                   %95.5 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  fs              %96.0 = FrameState         R     0x56267da4f470+1185: [], env=e49.0
  void                    Deopt              !v    %96.0, Typecheck@0x56267ed7c9f8[Type#67], %93.4   !
BB97   <- [95]
  int$-           %97.0 = CastType           d     dn %95.4
  lgl$-           %97.1 = Gt                 d     %95.1, %97.0, elided   <lgl$->
  lgl$#-          %97.2 = CheckTrueFalse     e     %97.1
  void                    Branch                   %97.2 -> BB41 (if true) | BB33 (if false)
BB98   <- [95]
  fs              %98.0 = FrameState         R     0x56267da4f470+1251: [], env=e49.0
  void                    Deopt              !v    %98.0, Typecheck@0x56267ed7c9f8[Type#72], %95.4   !
BB41   <- [97]
  real$-          %41.0 = Sub                d     %95.1, %97.0, elided   <val?_>
  void                    StVar              lW    pos, %41.0, e49.0
  goto BB34
BB33   <- [97]
  void                    Nop                !     
  goto BB34
BB34   <- [33, 41]
  real$-          %34.0 = Sub                d     %93.1, %93.2, elided   <real$->
  void                    StVar              lW    count, %34.0, e49.0
  real$-          %34.2 = %34.0
  goto BB35
BB35   <- [39, 34]
  real$-          %35.0 = Phi                      %34.2:BB34, %39.2:BB39
  real$-          %35.1 = %35.0
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB37 (if true) | BB36 (if false)
BB37   <- [35]
  real$-          %37.0 = CallSafeBuiltin    wed   min(%91.0, %35.1)    <real$->
  void                    StVar              lW    line, %37.0, e49.0
  real$-          %37.2 = LdVar              eR    pos, e49.0
  real$-          %37.3 = Add                d     %37.2, %37.0, elided   <real$->
  void                    StVar              lW    next_pos, %37.3, e49.0
  void                    StVar              lW    pos, %37.3, e49.0
  lgl$-           %37.6 = Gt                 d     %37.3, %97.0, elided   <lgl$->
  lgl$#-          %37.7 = CheckTrueFalse     e     %37.6
  void                    Branch                   %37.7 -> BB40 (if true) | BB38 (if false)
BB36   <- [35]
  void                    Invisible          v     
  void                    Return             l     nil
BB40   <- [37]
  real$-          %40.0 = Sub                d     %37.3, %97.0, elided   <real$->
  void                    StVar              lW    pos, %40.0, e49.0
  goto BB39
BB38   <- [37]
  void                    Nop                !     
  goto BB39
BB39   <- [38, 40]
  real$-          %39.0 = Sub                d     %35.1, %37.0, elided   <real$->
  void                    StVar              lW    count, %39.0, e49.0
  real$-          %39.2 = %39.0
  goto BB35
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3

│ repeat_fasta[0x56267fb89120]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
