
┌──────────────────────────────────────────────────────────────────────────────┐
│ as[0x560a3627d5c0]                                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1 miss: 2│
│ Properties:                                                                  │
├────── Final PIR Version
as[0x560a3627d5c0]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     object=%0.1, Class=%0.0, strict(miss)=true, ext(miss)=missingArg, parent=<env 0x560a342f8378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, as[0x560a3627d5c0]_p1, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    ext, %0.4, e0.2
  val?^ | miss    %0.6  = LdVar              eR    .class1, <env 0x560a342f8378>
  lgl$#-          %0.7  = Identical                %0.6, function(x) <(rir::DispatchTable*)0x560a35cf88|...
  void                    Branch                   %0.7 -> BB64 (if true) | BB65 (if false)
BB64   <- [0]
  prom-           %64.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p4 (!refl), e0.2
  ct              %64.1 = PushContext        lCL   %64.0, .class1(object), function(x) <(rir::DispatchTable*)0x560a35cf88|..., e0.2
  val?^           %64.2 = CastType                 up %64.0
  val?^ | miss    %64.3 = LdVar              eR    class, <env 0x560a342f8378>
  lgl$#-          %64.4 = Identical                <blt class>, %64.3   <true>
  void                    Branch                   %64.4 -> BB66 (if true) | BB67 (if false)
BB65   <- [0]
  fs              %65.0 = FrameState         R     0x560a35d58690+0: [], env=e0.2
  void                    Deopt              !v    %65.0, CallTarget@0x560a35cf6000[Call#1], %0.6
BB66   <- [64]
  env             e66.0 = MkEnv              l     x=%64.2, parent=<env 0x560a342f8378>, context 1
  val?            %66.1 = Force!<lazy>       !vr   %64.2,    <(nil|cls)>
  val?            %66.2 = CallBuiltin        !v    class(%66.1) e66.0   <str$+>
  void                    StVar              lW    cl, %66.2, e66.0
  lgl$#-          %66.4 = IsType                   %66.2 isA val?+
  val?^ | miss    %66.5 = LdVar              eR    length, e66.0
  lgl$#-          %66.6 = Identical                <blt length>, %66.5   <true>
  void                    Branch                   %66.6 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  fs              %67.0 = FrameState         R     0x560a35d58690+32: [], env=e0.2
  env             e67.1 = (MkEnv)            l     x=%64.2, parent=<env 0x560a342f8378>, context 1
  fs              %67.2 = FrameState         R     0x560a35d56100+17: [<blt class>, %64.4], env=e67.1, next=%67.0
  void                    Deopt              !v    %67.2, DeadBranchReached@0x560a3510fd58[Test#0], %64.4   !
BB68   <- [66]
  val             %68.0 = ChkMissing         e     %66.2
  void                    Branch                   %66.4 -> BB70 (if true) | BB71 (if false)
BB69   <- [66]
  void                    Nop                !     
  lgl$#-          %69.1 = %66.6
  dr              %69.2 = DeadBranchReached@0x560a3510fd58[Test#1]
  goto BB5
BB70   <- [68]
  val?+           %70.0 = CastType           d     dn %66.2   <str$+>
  (int|real)$-    %70.1 = CallSafeBuiltin    wed   length(%70.0)    <int$->
  lgl$#-          %70.2 = IsType                   %70.1 isA int$-
  void                    Branch                   %70.2 -> BB72 (if true) | BB73 (if false)
BB71   <- [68]
  void                    Nop                !     
  val?            %71.1 = %66.2
  dr              %71.2 = Typecheck@0x560a3510fd58[Type#2]
  goto BB5
BB5   <- [69, 71]
  val?^ | miss    %5.0  = Phi                      %69.1:BB69, %71.1:BB71
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %69.2:BB69, %71.2:BB71
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x560a35d58690+32: [], env=e0.2
  fs              %5.5  = FrameState         R     0x560a35d56100+105: [], env=e66.0, next=%5.4
  void                    Deopt              !v    %5.5, %5.3, %5.1   !
BB72   <- [70]
  int$-           %72.0 = CastType           d     dn %70.1
  lgl$-           %72.1 = Gt                 d     %72.0, 1L, elided   <lgl$->
  lgl$#-          %72.2 = CheckTrueFalse     e     %72.1
  void                    Branch                   %72.2 -> BB62 (if true) | BB9 (if false)
BB73   <- [70]
  fs              %73.0 = FrameState         R     0x560a35d58690+32: [], env=e0.2
  fs              %73.1 = FrameState         R     0x560a35d56100+196: [%70.1], env=e66.0, next=%73.0
  void                    Deopt              !v    %73.1, Typecheck@0x560a3510fd58[Type#5], %70.1   !
BB62   <- [72]
  val?            %62.0 = Extract2_1D        wed   %70.0, 1L, elided   <val?_>
  val?            %62.1 = %62.0
  goto BB10
BB9   <- [72]
  void                    Nop                !     
  val?+           %9.1  = %70.0
  goto BB10
BB10   <- [9, 62]
  val?            %10.0 = Phi                      %9.1:BB9, %62.1:BB62
  val?            %10.1 = %10.0
  val?            %10.2 = PopContext         C     %10.1, %64.1   <str$->
  void                    StVar              lW    thisClass, %10.2, e0.2
  val?^ | miss    %10.4 = LdVar              eR    .identC, e0.2
  lgl$#-          %10.5 = Identical                %10.4, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %10.5 -> BB74 (if true) | BB75 (if false)
BB74   <- [10]
  prom-           %74.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p5 (!refl), e0.2
  prom-           %74.1 = MkArg                    unboundValue, as[0x560a3627d5c0]_p6, e0.2
  ct              %74.2 = PushContext        lCL   %74.0, %74.1, .identC(thisClass, Class), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|..., e0.2
  val?^           %74.3 = CastType                 up %74.1
  val?^           %74.4 = CastType                 up %74.0
  val?^ | miss    %74.5 = LdVar              eR    .Call, <env 0x560a342f8378>
  lgl$#-          %74.6 = Identical                <blt .Call>, %74.5   <true>
  void                    Branch                   %74.6 -> BB76 (if true) | BB77 (if false)
BB75   <- [10]
  fs              %75.0 = FrameState         R     0x560a35d58690+46: [], env=e0.2
  void                    Deopt              !v    %75.0, CallTarget@0x560a35cf6000[Call#2], %10.4   !
BB76   <- [74]
  val?^ | miss    %76.0 = LdVar              eR    C_R_identC, <env 0x560a342f8378>
  env             e76.1 = MkEnv              l     c1=%74.4, c2=%74.3, parent=<env 0x560a342f8378>, context 1
  val?            %76.2 = Force!<value>      !v    %76.0, e76.1   <vec>
  val?^ | miss    %76.3 = LdVar              eR    c1, e76.1
  val?            %76.4 = Force!<lazy>       !v    %76.3, e76.1   <str$+>
  val?^ | miss    %76.5 = LdVar              eR    c2, e76.1
  val?            %76.6 = Force!<lazy>       !v    %76.5, e76.1   <str$+>
  val?            %76.7 = CallBuiltin        !v    .Call(%76.2, %76.4, %76.6) e76.1   <lgl$->
  lgl$#-          %76.8 = IsType                   %76.7 isA lgl$-
  void                    Branch                   %76.8 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  fs              %77.0 = FrameState         R     0x560a35d58690+83: [], env=e0.2
  env             e77.1 = (MkEnv)            l     c1=%74.4, c2=%74.3, parent=<env 0x560a342f8378>, context 1
  fs              %77.2 = FrameState         R     0x560a3414bf30+17: [<blt .Call>, %74.6], env=e77.1, next=%77.0
  void                    Deopt              !v    %77.2, DeadBranchReached@0x560a352d9b38[Test#0], %74.6   !
BB78   <- [76]
  lgl$-           %78.0 = CastType           d     dn %76.7
  val?            %78.1 = PopContext         C     %78.0, %74.2   <lgl$->
  lgl$#-          %78.2 = IsType                   %78.1 isA lgl$-
  void                    Branch                   %78.2 -> BB80 (if true) | BB81 (if false)
BB79   <- [76]
  fs              %79.0 = FrameState         R     0x560a35d58690+83: [], env=e0.2
  fs              %79.1 = FrameState         R     0x560a3414bf30+129: [%76.7], env=e76.1, next=%79.0
  void                    Deopt              !v    %79.1, Typecheck@0x560a352d9b38[Type#6], %76.7   !
BB80   <- [78]
  lgl$-           %80.0 = CastType           d     dn %78.1
  lgl$-           %80.1 = AsLogical                %80.0
  lgl$#-          %80.2 = Identical                %80.1, true
  void                    Branch                   %80.2 -> BB61 (if true) | BB19 (if false)
BB81   <- [78]
  void                    Nop                !     
  val?            %81.1 = %78.1
  dr              %81.2 = Typecheck@0x560a35cf6000[Type#7]
  goto BB17
BB61   <- [80]
  void                    Nop                !     
  lgl$-           %61.1 = %80.1
  goto BB26
BB19   <- [80]
  val?^ | miss    %19.0 = LdVar              eR    .identC, e0.2
  lgl$#-          %19.1 = Identical                %19.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %19.1 -> BB82 (if true) | BB83 (if false)
BB17   <- [81, 83]
  val?^ | miss    %17.0 = Phi                      %81.1:BB81, %83.1:BB83
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %81.2:BB81, %83.2:BB83
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x560a35d58690+83: [%78.1], env=e0.2
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB26   <- [61, 98]
  lgl$-           %26.0 = Phi                      %98.3:BB98, %61.1:BB61
  lgl$-           %26.1 = %26.0
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB60 (if true) | BB29 (if false)
BB82   <- [19]
  prom-           %82.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p7, e0.2
  ct              %82.1 = PushContext        lCL   %82.0, "ANY", .identC(Class, "ANY"), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|..., e0.2
  val?^           %82.2 = CastType                 up %82.0
  val?^ | miss    %82.3 = LdVar              eR    .Call, <env 0x560a342f8378>
  lgl$#-          %82.4 = Identical                <blt .Call>, %82.3   <true>
  void                    Branch                   %82.4 -> BB92 (if true) | BB93 (if false)
BB83   <- [19]
  void                    Nop                !     
  val?^ | miss    %83.1 = %19.0
  dr              %83.2 = CallTarget@0x560a35cf6000[Call#3]
  goto BB17
BB60   <- [26]
  val?^ | miss    %60.0 = LdVar              eR    object, e0.2
  void                    Visible            v     
  val?            %60.2 = Force!<wrapped>    !     %60.0, e0.2   <cls->
  val?            %60.3 = %60.2
  goto BB53
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    .classEnv, e0.2
  lgl$#-          %29.1 = Identical                %29.0, function(Class, default=.requirePackage("metho|...
  void                    Branch                   %29.1 -> BB84 (if true) | BB85 (if false)
BB92   <- [82]
  val?^ | miss    %92.0 = LdVar              eR    C_R_identC, <env 0x560a342f8378>
  env             e92.1 = MkEnv              l     c1=%82.2, c2="ANY", parent=<env 0x560a342f8378>, context 1
  val?            %92.2 = Force!<value>      !v    %92.0, e92.1   <vec>
  val?^ | miss    %92.3 = LdVar              eR    c1, e92.1
  val?            %92.4 = Force!<lazy>       !v    %92.3, e92.1   <str$+>
  val?^ | miss    %92.5 = LdVar              eR    c2, e92.1
  val?            %92.6 = Force!<lazy>       !v    %92.5, e92.1   <str$+>
  val?            %92.7 = CallBuiltin        !v    .Call(%92.2, %92.4, %92.6) e92.1   <lgl$->
  lgl$#-          %92.8 = IsType                   %92.7 isA lgl$-
  void                    Branch                   %92.8 -> BB96 (if true) | BB97 (if false)
BB93   <- [82]
  fs              %93.0 = FrameState         R     0x560a35d58690+132: [%80.1], env=e0.2
  env             e93.1 = (MkEnv)            l     c1=%82.2, c2="ANY", parent=<env 0x560a342f8378>, context 1
  fs              %93.2 = FrameState         R     0x560a3414bf30+17: [<blt .Call>, %82.4], env=e93.1, next=%93.0
  void                    Deopt              !v    %93.2, DeadBranchReached@0x560a352d9b38[Test#0], %82.4   !
BB53   <- [60, 52]
  val?            %53.0 = Phi                      %52.2:BB52, %60.3:BB60
  val?            %53.1 = %53.0
  void                    Return             l     %53.1
BB84   <- [29]
  prom-           %84.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p8, e0.2
  val?            %84.1 = StaticCall         !v    .classEnv[0x560a36638360](%84.0, missingArg, false) { 0 2n } e0.2   <env->
  void                    StVar              lW    where, %84.1, e0.2
  val?^ | miss    %84.3 = LdVar              eR    getGeneric, e0.2
  lgl$#-          %84.4 = Identical                %84.3, function(f, mustFind=FALSE, where, package="")|...
  void                    Branch                   %84.4 -> BB86 (if true) | BB87 (if false)
BB85   <- [29]
  fs              %85.0 = FrameState         R     0x560a35d58690+139: [%26.1], env=e0.2
  void                    Deopt              !v    %85.0, CallTarget@0x560a35cf6000[Call#4], %29.0   !
BB96   <- [92]
  lgl$-           %96.0 = CastType           d     dn %92.7
  val?            %96.1 = PopContext         C     %96.0, %82.1   <lgl$->
  lgl$#-          %96.2 = IsType                   %96.1 isA lgl$-
  void                    Branch                   %96.2 -> BB98 (if true) | BB99 (if false)
BB97   <- [92]
  fs              %97.0 = FrameState         R     0x560a35d58690+132: [%80.1], env=e0.2
  fs              %97.1 = FrameState         R     0x560a3414bf30+129: [%92.7], env=e92.1, next=%97.0
  void                    Deopt              !v    %97.1, Typecheck@0x560a352d9b38[Type#6], %92.7   !
BB86   <- [84]
  prom-           %86.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p9 (!refl), e0.2
  val?            %86.1 = StaticCall         !v    getGeneric[0x560a36474ce0]("coerce", missingArg, %86.0) { 0 2n } e0.2   <cls>
  void                    StVar              lW    coerceFun, %86.1, e0.2
  val?^ | miss    %86.3 = LdVar              eR    .getMethodsTable, e0.2
  lgl$#-          %86.4 = Identical                %86.3, function(fdef, env=environment(fdef), check=TR|...
  void                    Branch                   %86.4 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  fs              %87.0 = FrameState         R     0x560a35d58690+224: [], env=e0.2
  void                    Deopt              !v    %87.0, CallTarget@0x560a35cf6000[Call#5], %84.3   !
BB98   <- [96]
  lgl$-           %98.0 = CastType           d     dn %96.1
  lgl$-           %98.1 = AsLogical                %98.0
  lgl$-           %98.2 = LOr                      %80.1, %98.1
  lgl$-           %98.3 = %98.2
  goto BB26
BB99   <- [96]
  fs              %99.0 = FrameState         R     0x560a35d58690+132: [%80.1, %96.1], env=e0.2
  void                    Deopt              !v    %99.0, Typecheck@0x560a35cf6000[Type#9], %96.1   !
BB88   <- [86]
  prom-           %88.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p10 (!refl), e0.2
  prom-           %88.1 = MkArg                    unboundValue, as[0x560a3627d5c0]_p11, e0.2
  val?            %88.2 = StaticCall         !v    .getMethodsTable[0x560a35dc7740](%88.0, %88.1, missingArg, true) { 0 1 3n } e0.2   <env->
  void                    StVar              lW    coerceMethods, %88.2, e0.2
  val?^ | miss    %88.4 = LdVar              eR    .quickCoerceSelect, e0.2
  lgl$#-          %88.5 = Identical                %88.4, function(from, to, fdef, methods, where) <(rir|...
  void                    Branch                   %88.5 -> BB90 (if true) | BB91 (if false)
BB89   <- [86]
  fs              %89.0 = FrameState         R     0x560a35d58690+283: [], env=e0.2
  void                    Deopt              !v    %89.0, CallTarget@0x560a35cf6000[Call#6], %86.3   !
BB90   <- [88]
  prom-           %90.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p13, e0.2
  prom-           %90.1 = MkArg                    unboundValue, as[0x560a3627d5c0]_p14, e0.2
  prom-           %90.2 = MkArg                    unboundValue, as[0x560a3627d5c0]_p15, e0.2
  prom-           %90.3 = MkArg                    unboundValue, as[0x560a3627d5c0]_p16 (!refl), e0.2
  prom-           %90.4 = MkArg                    unboundValue, as[0x560a3627d5c0]_p17, e0.2
  ct              %90.5 = PushContext        lCL   %90.0, %90.1, %90.2, %90.3, %90.4, .quickCoerceSelect(thisClass, Class, coerceFun|..., function(from, to, fdef, methods, where) <(rir|..., e0.2
  val?^           %90.6 = CastType                 up %90.4
  val?^           %90.7 = CastType                 up %90.3
  val?^           %90.8 = CastType                 up %90.2
  val?^           %90.9 = CastType                 up %90.1
  val?^           %90.10 = CastType                 up %90.0
  env             e90.11 = MkEnv              l     from=%90.10, to=%90.9, fdef=%90.8, methods=%90.7, where=%90.6, parent=<env 0x560a342f8378>, context 1
  val?            %90.12 = Force!<lazy>       !vrL  %90.7, e90.11   <env->
  lgl$-           %90.13 = Is                       %90.12, NULL
  lgl$#-          %90.14 = IsType                   %90.12 isA val?-
  void                    Branch                   %90.14 -> BB94 (if true) | BB95 (if false)
BB91   <- [88]
  fs              %91.0 = FrameState         R     0x560a35d58690+351: [], env=e0.2
  void                    Deopt              !v    %91.0, CallTarget@0x560a35cf6000[Call#8], %88.4   !
BB94   <- [90]
  lgl$#-          %94.0 = CheckTrueFalse     e     %90.13
  void                    Branch                   %94.0 -> BB59 (if true) | BB38 (if false)
BB95   <- [90]
  void                    Nop                !     
  val?            %95.1 = %90.12
  dr              %95.2 = Typecheck@0x560a35d8b7e0[Type#0]
  goto BB36
BB59   <- [94]
  void                    Nop                !     
  nil-            %59.1 = nil
  goto BB47
BB38   <- [94]
  val?^ | miss    %38.0 = LdVar              eR    is.environment, <env 0x560a342f8378>
  lgl$#-          %38.1 = Identical                <blt is.environment>, %38.0   <true>
  void                    Branch                   %38.1 -> BB100 (if true) | BB101 (if false)
BB36   <- [95, 101]
  val?^ | miss    %36.0 = Phi                      %95.1:BB95, %101.1:BB101
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %95.2:BB95, %101.2:BB101
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x560a35d58690+403: [], env=e0.2
  fs              %36.5 = FrameState         R     0x560a35d89e80+9: [%90.12], env=e90.11, next=%36.4
  void                    Deopt              !v    %36.5, %36.3, %36.1   !
BB47   <- [59, 46]
  val?            %47.0 = Phi                      %46.2:BB46, %59.1:BB59
  val?            %47.1 = %47.0
  val?            %47.2 = PopContext         C     %47.1, %90.5   <cls>
  lgl$-           %47.3 = Is                       %47.2, NULL
  void                    StVar              lW    asMethod, %47.2, e0.2
  val             %47.5 = ChkMissing         e     %47.2
  lgl$#-          %47.6 = CheckTrueFalse     e     %47.3
  void                    Branch                   %47.6 -> BB55 (if true) | BB48 (if false)
BB100   <- [38]
  lgl$#-          %100.0 = CallSafeBuiltin    wed   is.environment(%90.12)    <lgl$->
  void                    Branch                   %100.0 -> BB42 (if true) | BB41 (if false)
BB101   <- [38]
  void                    Nop                !     
  lgl$#-          %101.1 = %38.1
  dr              %101.2 = DeadBranchReached@0x560a35d8b7e0[Test#0]
  goto BB36
BB55   <- [47]
  val?^ | miss    %55.0 = LdVar              eR    c, e0.2
  lgl$#-          %55.1 = Identical                <blt c>, %55.0   <@?>
  void                    Branch                   %55.1 -> BB57 (if true) | BB56 (if false)
BB48   <- [47]
  val?^ | miss    %48.0 = LdVar              eR    strict, e0.2
  void                    Visible            v     
  val?            %48.2 = Force!<lazy>       !     %48.0, e0.2   <lgl$->
  lgl$#-          %48.3 = CheckTrueFalse     we    %48.2
  void                    Branch                   %48.3 -> BB54 (if true) | BB51 (if false)
BB42   <- [100]
  val?^ | miss    %42.0 = LdVar              eR    .findMethodInTable, <env 0x560a342f8378>
  lgl$#-          %42.1 = Identical                %42.0, function(signature, table, fdef=NULL, expdSig=|...
  void                    Branch                   %42.1 -> BB102 (if true) | BB103 (if false)
BB41   <- [100]
  fs              %41.0 = FrameState         R     0x560a35d58690+403: [], env=e0.2
  (cls|spec|blt)  %41.1 = LdFun              !v    @, <env 0x560a342f8378>
  fs              %41.2 = FrameState         R     0x560a35d89e80+132: [%41.1], env=e90.11, next=%41.0
  void                    Deopt              !v    %41.2, DeadCall@0x560a35d8b7e0[Call#1], %41.1   !
BB57   <- [55]
  val?^ | miss    %57.0 = LdVar              eR    thisClass, e0.2
  val?            %57.1 = Force!             !v    %57.0, e0.2   <val?_>
  val?^ | miss    %57.2 = LdVar              eR    Class, e0.2
  val?            %57.3 = Force!             !v    %57.2, e0.2   <val?_>
  val?            %57.4 = NamedCall          !v    <blt c>(from=%57.1, to=%57.3) e0.2   <val?_>
  void                    StVar              lW    sig, %57.4, e0.2
  (cls|spec|blt)  %57.6 = LdFun              !v    selectMethod, e0.2
  fs              %57.7 = FrameState         R     0x560a35d58690+592: [%57.6], env=e0.2
  void                    Deopt              !v    %57.7, DeadCall@0x560a35cf6000[Call#10], %57.6   !
BB56   <- [55]
  (cls|spec|blt)  %56.0 = LdFun              !v    c, e0.2
  fs              %56.1 = FrameState         R     0x560a35d58690+475: [%56.0], env=e0.2
  void                    Deopt              !v    %56.1, DeadCall@0x560a35cf6000[Call#9], %56.0   !
BB54   <- [48]
  val?^ | miss    %54.0 = LdVar              eR    asMethod, e0.2
  lgl$#-          %54.1 = Identical                %54.0, function(from, to=<str |a|>, strict=TRUE) <(ri|...
  void                    Branch                   %54.1 -> BB106 (if true) | BB107 (if false)
BB51   <- [48]
  val?^ | miss    %51.0 = LdVar              eR    asMethod, e0.2
  lgl$#-          %51.1 = Identical                %51.0, function(from, to=<str |a|>, strict=TRUE) <(ri|...
  void                    Branch                   %51.1 -> BB104 (if true) | BB105 (if false)
BB102   <- [42]
  prom-           %102.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p22, e90.11
  prom-           %102.1 = MkArg                    unboundValue, as[0x560a3627d5c0]_p25, e90.11
  val?            %102.2 = StaticCall         !v    .findMethodInTable[0x560a3620b8b0](%102.0, %102.1) e90.11   <cls>
  void                    StVar              lW    method, %102.2, e90.11
  val?^ | miss    %102.4 = LdVar              eR    is.environment, e90.11
  lgl$#-          %102.5 = Identical                <blt is.environment>, %102.4   <true>
  void                    Branch                   %102.5 -> BB108 (if true) | BB109 (if false)
BB103   <- [42]
  fs              %103.0 = FrameState         R     0x560a35d58690+403: [], env=e0.2
  fs              %103.1 = FrameState         R     0x560a35d89e80+116: [%100.0], env=e90.11, next=%103.0
  void                    Deopt              !v    %103.1, CallTarget@0x560a35d8b7e0[Call#8], %42.0   !
BB106   <- [54]
  prom-           %106.0 = MkArg                    unboundValue, as[0x560a3627d5c0]_p19, e0.2
  val?            %106.1 = StaticCall         !     asMethod[0x560a367a62f0](%106.0) e0.2   <cls>
  val?            %106.2 = %106.1
  goto BB52
BB107   <- [54]
  void                    Nop                !     
  val?^ | miss    %107.1 = %54.0
  dr              %107.2 = CallTarget@0x560a35cf6000[Call#39]
  goto BB49
BB104   <- [51]
  val?^ | miss    %104.0 = LdVar              eR    object, e0.2
  void                    Visible            v     
  val?            %104.2 = Force!<wrapped>    !     %104.0, e0.2   <nil->
  val?            %104.3 = %104.2
  goto BB52
BB105   <- [51]
  void                    Nop                !     
  val?^ | miss    %105.1 = %51.0
  dr              %105.2 = CallTarget@0x560a35cf6000[Call#38]
  goto BB49
BB108   <- [102]
  val             %108.0 = ChkMissing         e     %102.2
  lgl$#-          %108.1 = CallSafeBuiltin    wed   is.environment(%102.2) 
  void                    Branch                   %108.1 -> BB58 (if true) | BB45 (if false)
BB109   <- [102]
  fs              %109.0 = FrameState         R     0x560a35d58690+403: [], env=e0.2
  fs              %109.1 = FrameState         R     0x560a35d89e80+703: [], env=e90.11, next=%109.0
  void                    Deopt              !v    %109.1, DeadBranchReached@0x560a35d8b7e0[Test#5], %102.5   !
BB52   <- [104, 106]
  val?            %52.0 = Phi                      %104.3:BB104, %106.2:BB106
  val?            %52.1 = %52.0
  val?            %52.2 = %52.1
  goto BB53
BB49   <- [105, 107]
  val?^ | miss    %49.0 = Phi                      %105.1:BB105, %107.1:BB107
  val?^ | miss    %49.1 = %49.0
  dr              %49.2 = Phi                      %105.2:BB105, %107.2:BB107
  dr              %49.3 = %49.2
  fs              %49.4 = FrameState         R     0x560a35d58690+1937: [%48.3], env=e0.2
  void                    Deopt              !v    %49.4, %49.3, %49.1   !
BB58   <- [108]
  void                    Nop                !     
  nil-            %58.1 = nil
  goto BB46
BB45   <- [108]
  void                    Nop                !     
  val?            %45.1 = %102.2
  goto BB46
BB46   <- [58, 45]
  val?            %46.0 = Phi                      %45.1:BB45, %58.1:BB58
  val?            %46.1 = %46.0
  val?            %46.2 = %46.1
  goto BB47
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     possibleExtends, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as[0x560a3627d5c0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, as[0x560a3627d5c0]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    thisClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|cls)->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    thisClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    thisClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    coerceFun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     environment, <0x560a34097b68>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as[0x560a3627d5c0]_p12, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    coerceFun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    thisClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    coerceFun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    coerceMethods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x560a33cf1940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as[0x560a3627d5c0]_p23, e0.0
  prom-           %0.3  = MkArg                    unboundValue, as[0x560a3627d5c0]_p24, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    to, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ as[0x560a3627d5c0]                                                           │
└──────────────────────────────────────────────────────────────────────────────┘
