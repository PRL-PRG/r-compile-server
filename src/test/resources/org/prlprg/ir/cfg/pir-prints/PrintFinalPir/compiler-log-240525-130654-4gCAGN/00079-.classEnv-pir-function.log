
┌──────────────────────────────────────────────────────────────────────────────┐
│ .classEnv[0x560a36638360]                                                    │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2       │
│ Properties:                                                                  │
├────── Final PIR Version
.classEnv[0x560a36638360]
BB0
  val?~+          %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  env             e0.4  = MkEnv              l     Class=%0.2, default=%0.1, mustFind=%0.0, parent=<env 0x560a342f8378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB37 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, .classEnv[0x560a36638360]_p0, e0.4
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    default, %2.1, e0.4
  goto BB3
BB37   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 37]
  val?^ | miss    %3.0  = LdVar              eR    is.character, <env 0x560a342f8378>
  lgl$#-          %3.1  = Identical                <blt is.character>, %3.0   <true>
  void                    Branch                   %3.1 -> BB38 (if true) | BB39 (if false)
BB38   <- [3]
  val?^           %38.0 = ChkMissing         e     %0.2
  val?            %38.1 = Force!<lazy>       !v    %38.0, e0.4   <(str|other)>
  lgl$#-          %38.2 = CallSafeBuiltin    wed   is.character(%38.1)    <lgl$->
  void                    Branch                   %38.2 -> BB34 (if true) | BB8 (if false)
BB39   <- [3]
  fs              %39.0 = FrameState         R     0x560a35d65060+0: [], env=e0.4
  void                    Deopt              !v    %39.0, DeadBranchReached@0x560a35d03630[Test#0], %3.1
BB34   <- [38]
  val?^ | miss    %34.0 = LdVar              eR    packageSlot, e0.4
  lgl$#-          %34.1 = Identical                %34.0, function(object) <(rir::DispatchTable*)0x560a3|...
  void                    Branch                   %34.1 -> BB40 (if true) | BB41 (if false)
BB8   <- [38]
  (cls|spec|blt)  %8.0  = LdFun              !v    @, <0x560a33cf0bd8>, e0.4
  prom-           %8.1  = MkArg                    unboundValue, .classEnv[0x560a36638360]_p2, e0.4
  prom-           %8.2  = MkArg                    unboundValue, .classEnv[0x560a36638360]_p3, e0.4
  val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e0.4   <str$->
  val?            %8.4  = %8.3
  goto BB9
BB40   <- [34]
  prom-           %40.0 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p16, e0.4
  ct              %40.1 = PushContext        lCL   %40.0, packageSlot(Class), function(object) <(rir::DispatchTable*)0x560a3|..., e0.4
  val?^           %40.2 = CastType                 up %40.0
  val?^ | miss    %40.3 = LdVar              eR    attr, <env 0x560a342f8378>
  lgl$#-          %40.4 = Identical                <blt attr>, %40.3   <true>
  void                    Branch                   %40.4 -> BB44 (if true) | BB45 (if false)
BB41   <- [34]
  fs              %41.0 = FrameState         R     0x560a35d65060+91: [%38.2], env=e0.4
  void                    Deopt              !v    %41.0, CallTarget@0x560a35d03630[Call#3], %34.0   !
BB9   <- [8, 44]
  val?            %9.0  = Phi                      %8.4:BB8, %44.4:BB44   <(nil|str)->
  val?            %9.1  = %9.0
  lgl$-           %9.2  = Is                       %9.1, NULL
  void                    StVar              lW    package, %9.1, e0.4
  val             %9.4  = ChkMissing         e     %9.1
  void                    Visible            v     
  lgl$#-          %9.6  = CheckTrueFalse     e     %9.2
  void                    Branch                   %9.6 -> BB14 (if true) | BB12 (if false)
BB44   <- [40]
  env             e44.0 = MkEnv              l     object=%40.2, parent=<env 0x560a342f8378>, context 1
  val?            %44.1 = Force!<lazy>       !vL   %40.2, e44.0   <(str|other)>
  val?            %44.2 = CallBuiltin        !v    attr(%44.1, "package") e44.0   <(nil|str)->
  val?            %44.3 = PopContext         C     %44.2, %40.1   <(nil|str)->
  val?            %44.4 = %44.3
  goto BB9
BB45   <- [40]
  fs              %45.0 = FrameState         R     0x560a35d65060+181: [], env=e0.4
  env             e45.1 = (MkEnv)            l     object=%40.2, parent=<env 0x560a342f8378>, context 1
  fs              %45.2 = FrameState         R     0x560a35d65640+17: [<blt attr>, %40.4], env=e45.1, next=%45.0
  void                    Deopt              !v    %45.2, DeadBranchReached@0x560a350d9f78[Test#0], %40.4   !
BB14   <- [9]
  val?^ | miss    %14.0 = LdVar              eR    default, e0.4
  val?            %14.1 = Force!<lazy>       !v    %14.0, e0.4   <env->
  void                    StVar              lW    value, %14.1, e0.4
  val?^ | miss    %14.3 = LdVar              eR    getClassDef, e0.4
  lgl$#-          %14.4 = Identical                %14.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %14.4 -> BB46 (if true) | BB47 (if false)
BB12   <- [9]
  val?^ | miss    %12.0 = LdVar              eR    .requirePackage, e0.4
  lgl$#-          %12.1 = Identical                %12.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Branch                   %12.1 -> BB42 (if true) | BB43 (if false)
BB46   <- [14]
  prom-           %46.0 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p5, e0.4
  prom-           %46.1 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p6, e0.4
  val?            %46.2 = StaticCall         !v    getClassDef[0x560a35e45890](%46.0, %46.1, nil) e0.4   <other>
  lgl$-           %46.3 = Is                       %46.2, NULL
  void                    StVar              lW    def, %46.2, e0.4
  val             %46.5 = ChkMissing         e     %46.2
  lgl$#-          %46.6 = CheckTrueFalse     e     %46.3
  void                    Branch                   %46.6 -> BB27 (if true) | BB17 (if false)
BB47   <- [14]
  fs              %47.0 = FrameState         R     0x560a35d65060+285: [], env=e0.4
  void                    Deopt              !v    %47.0, CallTarget@0x560a35d03630[Call#5], %14.3   !
BB42   <- [12]
  prom-           %42.0 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p4 (!refl), e0.4
  val?            %42.1 = StaticCall         !     .requirePackage[0x560a36a50bd0](%42.0) e0.4   <env->
  val?            %42.2 = %42.1
  goto BB13
BB43   <- [12]
  fs              %43.0 = FrameState         R     0x560a35d65060+195: [], env=e0.4
  void                    Deopt              !v    %43.0, CallTarget@0x560a35d03630[Call#4], %12.0   !
BB27   <- [46]
  val?^ | miss    %27.0 = LdVar              eR    .GlobalEnv, e0.4
  val?            %27.1 = Force!             !v    %27.0, e0.4   <val?_>
  void                    StVar              lW    value, %27.1, e0.4
  (cls|spec|blt)  %27.3 = LdFun              !v    getClassDef, e0.4
  prom-           %27.4 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p10, e0.4
  prom-           %27.5 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p11, e0.4
  val?            %27.6 = Call               !v    %27.3(%27.4, %27.5, nil) e0.4   <val?_>
  lgl$-           %27.7 = Is                       %27.6, NULL
  void                    StVar              lW    def, %27.6, e0.4
  val             %27.9 = ChkMissing         e     %27.6
  lgl$#-          %27.10 = CheckTrueFalse     e     %27.7
  void                    Branch                   %27.10 -> BB29 (if true) | BB28 (if false)
BB17   <- [46]
  void                    Nop                !     
  goto BB18
BB13   <- [42, 50]
  val?            %13.0 = Phi                      %42.2:BB42, %50.3:BB50
  val?            %13.1 = %13.0
  void                    Return             l     %13.1
BB29   <- [27]
  (cls|spec|blt)  %29.0 = LdFun              !v    .requirePackage, e0.4
  val?            %29.1 = Call               !v    %29.0("methods") e0.4   <val?_>
  void                    StVar              lW    value, %29.1, e0.4
  (cls|spec|blt)  %29.3 = LdFun              !v    identical, e0.4
  prom-           %29.4 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p12, e0.4
  prom-           %29.5 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p13, e0.4
  val?            %29.6 = Call               !v    %29.3(%29.4, %29.5) e0.4   <val?_>
  lgl$#-          %29.7 = IsType                   %29.6 isA val?+
  void                    Branch                   %29.7 -> BB48 (if true) | BB49 (if false)
BB28   <- [27]
  void                    Nop                !     
  goto BB18
BB18   <- [17, 28, 32, 33]
  val?^ | miss    %18.0 = LdVar              eR    def, e0.4
  val?            %18.1 = Force!<value>      !v    %18.0, e0.4   <other>
  lgl$-           %18.2 = Is                       %18.1, NULL
  lgl$-           %18.3 = AsLogical                %18.2
  lgl$#-          %18.4 = Identical                %18.3, false
  void                    Branch                   %18.4 -> BB26 (if true) | BB19 (if false)
BB48   <- [29]
  val?+           %48.0 = CastType           d     dn %29.6   <val?_>
  lgl             %48.1 = Not                wed   %48.0, elided
  lgl$#-          %48.2 = CheckTrueFalse     we    %48.1
  void                    Branch                   %48.2 -> BB33 (if true) | BB32 (if false)
BB49   <- [29]
  fs              %49.0 = FrameState         R     0x560a35d65060+563: [%29.6], env=e0.4
  void                    Deopt              !v    %49.0, Typecheck@0x560a35d03630[Type#25], %29.6   !
BB26   <- [18]
  void                    Nop                !     
  lgl$-           %26.1 = %18.3
  goto BB20
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    mustFind, e0.4
  val?            %19.1 = Force!             !v    %19.0, e0.4   <val?_>
  lgl$-           %19.2 = AsLogical          e     %19.1
  lgl$-           %19.3 = LAnd                     %18.3, %19.2
  lgl$-           %19.4 = %19.3
  goto BB20
BB33   <- [48]
  (cls|spec|blt)  %33.0 = LdFun              !v    getClassDef, e0.4
  prom-           %33.1 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p14, e0.4
  prom-           %33.2 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p15, e0.4
  val?            %33.3 = Call               !v    %33.0(%33.1, %33.2, nil) e0.4   <val?_>
  void                    StVar              lW    def, %33.3, e0.4
  goto BB18
BB32   <- [48]
  void                    Nop                !     
  goto BB18
BB20   <- [26, 19]
  lgl$-           %20.0 = Phi                      %19.4:BB19, %26.1:BB26
  lgl$-           %20.1 = %20.0
  lgl$#-          %20.2 = CheckTrueFalse     e     %20.1
  void                    Branch                   %20.2 -> BB25 (if true) | BB21 (if false)
BB25   <- [20]
  (cls|spec|blt)  %25.0 = LdFun              !v    stop, e0.4
  prom-           %25.1 = MkArg                    unboundValue, .classEnv[0x560a36638360]_p7, e0.4
  val?            %25.2 = NamedCall          !v    %25.0(%25.1, domain=na-lgl) e0.4
  goto BB22
BB21   <- [20]
  void                    Nop                !     
  goto BB22
BB22   <- [21, 25]
  val?^ | miss    %22.0 = LdVar              eR    value, e0.4
  lgl$#-          %22.1 = IsType                   %22.0 isA val?~- | miss
  void                    Branch                   %22.1 -> BB50 (if true) | BB51 (if false)
BB50   <- [22]
  val?~- | miss   %50.0 = CastType           d     dn %22.0
  void                    Visible            v     
  val?-           %50.2 = Force!<value>            %50.0,    <env->
  val?-           %50.3 = %50.2
  goto BB13
BB51   <- [22]
  fs              %51.0 = FrameState         R     0x560a35d65060+735: [], env=e0.4
  void                    Deopt              !v    %51.0, Typecheck@0x560a35d03630[Type#34], %22.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .requirePackage, <0x560a35d63a68>, e0.0
  val?            %0.2  = Call               !     %0.1("methods") e0.0   <env->
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     gettextf, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .classEnv[0x560a36638360]_p8, e0.0
  val?            %0.3  = Call               !     %0.1("unable to find an environment containing clas|..., %0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dQuote, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .classEnv[0x560a36638360]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ .classEnv[0x560a36638360]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
