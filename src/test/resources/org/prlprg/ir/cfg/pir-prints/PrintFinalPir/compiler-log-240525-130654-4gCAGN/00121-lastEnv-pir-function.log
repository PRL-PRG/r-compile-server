
┌──────────────────────────────────────────────────────────────────────────────┐
│ lastEnv[0x560a36000d20]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── Final PIR Version
lastEnv[0x560a36000d20]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    isBaseNamespace, ?
  lgl$#-          %0.2  = Identical                %0.1, function(ns) <(rir::DispatchTable*)0x560a36410|...
  void                    Branch                   %0.2 -> BB8 (if true) | BB9 (if false)
BB8   <- [0]
  env             e8.0  = MkEnv              l     where=%0.0, parent=?, context 1
  prom-           %8.1  = MkArg                    unboundValue, lastEnv[0x560a36000d20]_p0 (!refl), e8.0
  ct              %8.2  = PushContext        lCL   %8.1, isBaseNamespace(where), function(ns) <(rir::DispatchTable*)0x560a36410|..., e8.0
  val?^           %8.3  = CastType                 up %8.1
  env             e8.4  = MkEnv              l     ns=%8.3, parent=R_BaseNamespace, context 1
  prom-           %8.5  = MkArg                    unboundValue, lastEnv[0x560a36000d20]_p1, e8.4
  prom-           %8.6  = MkArg                    unboundValue, lastEnv[0x560a36000d20]_p2, e8.4
  ct              %8.7  = PushContext        lCL   %8.5, %8.6, identical(ns, .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e8.4
  val?^           %8.8  = CastType                 up %8.6
  val?^           %8.9  = CastType                 up %8.5
  env             e8.10 = MkEnv              l     x=%8.9, y=%8.8, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %8.11 = Force!<lazy>       !vr   %8.9,    <val?>
  val?            %8.12 = Force!<lazy>       !vL   %8.8, e8.10   <val?>
  val?            %8.13 = CallBuiltin        !     identical(%8.11, %8.12, true, true, true, true, false, true) e8.10
  val?            %8.14 = PopContext         C     %8.13, %8.7   <lgl$->
  lgl$#-          %8.15 = IsType                   %8.14 isA lgl$-
  void                    Branch                   %8.15 -> BB10 (if true) | BB11 (if false)
BB9   <- [0]
  env             e9.0  = (MkEnv)            l     where=%0.0, parent=?, context 1
  fs              %9.1  = FrameState         R     0x560a36a4db40+0: [], env=e9.0
  void                    Deopt              !v    %9.1, CallTarget@0x560a36b67cc8[Call#0], %0.1
BB10   <- [8]
  lgl$-           %10.0 = CastType           d     dn %8.14
  val?            %10.1 = PopContext         C     %10.0, %8.2   <lgl$->
  lgl$#-          %10.2 = IsType                   %10.1 isA lgl$-
  void                    Branch                   %10.2 -> BB12 (if true) | BB13 (if false)
BB11   <- [8]
  fs              %11.0 = FrameState         R     0x560a36a4db40+32: [], env=e8.0
  fs              %11.1 = FrameState         R     0x560a36ff0ac0+37: [%8.14], env=e8.4, next=%11.0
  void                    Deopt              !v    %11.1, Typecheck@0x560a36b67ab8[Type#2], %8.14   !
BB12   <- [10]
  lgl$-           %12.0 = CastType           d     dn %10.1
  void                    Return             l     %12.0
BB13   <- [10]
  fs              %13.0 = FrameState         R     0x560a36a4db40+32: [%10.1], env=e8.0
  void                    Deopt              !v    %13.0, Typecheck@0x560a36b67cc8[Type#1], %10.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseNamespaceEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ lastEnv[0x560a36000d20]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
