
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x560a36b782d0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x560a36b782d0]
BB0
  val?~+          %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    .getClassesFromCache, <env 0x560a342f8378>
  lgl$#-          %0.4  = Identical                %0.3, function(name) <(rir::DispatchTable*)0x560a35b|...
  void                    Branch                   %0.4 -> BB29 (if true) | BB30 (if false)
BB29   <- [0]
  env             e29.0 = MkEnv              l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=true, parent=<env 0x560a342f8378>, context 1
  prom-           %29.1 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p14, e29.0
  ct              %29.2 = PushContext        lCL   %29.1, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x560a35b|..., e29.0
  val?^           %29.3 = CastType                 up %29.1
  val?^ | miss    %29.4 = LdVar              eR    .Call, <env 0x560a342f8378>
  lgl$#-          %29.5 = Identical                <blt .Call>, %29.4   <true>
  void                    Branch                   %29.5 -> BB31 (if true) | BB32 (if false)
BB30   <- [0]
  env             e30.0 = (MkEnv)            l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=true, parent=<env 0x560a342f8378>, context 1
  fs              %30.1 = FrameState         R     0x560a3400b920+0: [], env=e30.0
  void                    Deopt              !v    %30.1, CallTarget@0x560a35b85a90[Call#3], %0.3
BB31   <- [29]
  val?^ | miss    %31.0 = LdVar              eR    C_R_getClassFromCache, <env 0x560a342f8378>
  env             e31.1 = MkEnv              l     name=%29.3, parent=<env 0x560a342f8378>, context 1
  val?            %31.2 = Force!<value>      !v    %31.0, e31.1   <vec>
  val?^ | miss    %31.3 = LdVar              eR    name, e31.1
  val?            %31.4 = Force!<lazy>       !v    %31.3, e31.1   <(str|other)>
  val?^ | miss    %31.5 = LdVar              eR    .classTable, e31.1
  val?            %31.6 = Force!<wrapped>    !v    %31.5, e31.1   <env->
  val?            %31.7 = CallBuiltin        !v    .Call(%31.2, %31.4, %31.6) e31.1   <other>
  val?            %31.8 = PopContext         C     %31.7, %29.2   <other>
  lgl$-           %31.9 = Is                       %31.8, list
  void                    StVar              lW    value, %31.8, e29.0
  val             %31.11 = ChkMissing         e     %31.8
  lgl$#-          %31.12 = CheckTrueFalse     e     %31.9
  void                    Branch                   %31.12 -> BB27 (if true) | BB5 (if false)
BB32   <- [29]
  fs              %32.0 = FrameState         R     0x560a3400b920+72: [], env=e29.0
  env             e32.1 = (MkEnv)            l     name=%29.3, parent=<env 0x560a342f8378>, context 1
  fs              %32.2 = FrameState         R     0x560a33fc7ec0+17: [<blt .Call>, %29.5], env=e32.1, next=%32.0
  void                    Deopt              !v    %32.2, DeadBranchReached@0x560a352d97c8[Test#0], %29.5   !
BB27   <- [31]
  (cls|spec|blt)  %27.0 = LdFun              !v    .resolveClassList, e29.0
  prom-           %27.1 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p15, e29.0
  prom-           %27.2 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p16, e29.0
  prom-           %27.3 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p17, e29.0
  val?            %27.4 = Call               !v    %27.0(%27.1, %27.2, %27.3) e29.0   <val?_>
  void                    StVar              lW    value, %27.4, e29.0
  val?            %27.6 = %27.4
  goto BB6
BB5   <- [31]
  void                    Nop                !     
  val?            %5.1  = %31.8
  goto BB6
BB6   <- [5, 27]
  val?            %6.0  = Phi                      %27.6:BB27, %5.1:BB5
  val?            %6.1  = %6.0
  val             %6.2  = ChkMissing         e     %6.1   <other>
  lgl$-           %6.3  = Is                       %6.2, NULL
  lgl$#-          %6.4  = CheckTrueFalse     e     %6.3
  void                    Branch                   %6.4 -> BB9 (if true) | BB7 (if false)
BB9   <- [6]
  (cls|spec|blt)  %9.0  = LdFun              !v    classMetaName, e29.0
  prom-           %9.1  = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p1, e29.0
  val?            %9.2  = Call               !v    %9.0(%9.1) e29.0   <val?_>
  void                    StVar              lW    cname, %9.2, e29.0
  val?^ | miss    %9.4  = LdVar              eR    is.character, e29.0
  lgl$#-          %9.5  = Identical                <blt is.character>, %9.4   <@?>
  void                    Branch                   %9.5 -> BB26 (if true) | BB10 (if false)
BB7   <- [6]
  void                    Nop                !     
  goto BB8
BB26   <- [9]
  val?^ | miss    %26.0 = LdVar              eR    where, e29.0
  val?            %26.1 = Force!             !v    %26.0, e29.0   <val?_>
  lgl$#-          %26.2 = CallSafeBuiltin    wed   is.character(%26.1) 
  lgl$#-          %26.3 = %26.2
  goto BB11
BB10   <- [9]
  val?^ | miss    %10.0 = LdVar              eR    where, e29.0
  val?            %10.1 = Force!             !v    %10.0, e29.0   <val?_>
  lgl$#-          %10.2 = CallSafeBuiltin    wed   is.character(%10.1) 
  lgl$#-          %10.3 = %10.2
  goto BB11
BB8   <- [7, 20, 21]
  val?^ | miss    %8.0  = LdVar              eR    value, e29.0
  void                    Visible            v     
  val?            %8.2  = Force!<value>      !     %8.0, e29.0   <other>
  void                    Return             l     %8.2
BB11   <- [26, 10]
  lgl$#-          %11.0 = Phi                      %10.3:BB10, %26.3:BB26   <val?_>
  lgl$#-          %11.1 = %11.0
  void                    Branch                   %11.1 -> BB25 (if true) | BB12 (if false)
BB25   <- [11]
  val?^ | miss    %25.0 = LdVar              eR    where, e29.0
  val?            %25.1 = Force!             !v    %25.0, e29.0   <val?_>
  void                    StVar              lW    package, %25.1, e29.0
  goto BB13
BB12   <- [11]
  void                    Nop                !     
  goto BB13
BB13   <- [12, 25]
  (cls|spec|blt)  %13.0 = LdFun              !v    isTRUE, e29.0
  prom-           %13.1 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p4, e29.0
  val?            %13.2 = Call               !v    %13.0(%13.1) e29.0   <val?_>
  lgl$#-          %13.3 = CheckTrueFalse     we    %13.2
  void                    Branch                   %13.3 -> BB24 (if true) | BB14 (if false)
BB24   <- [13]
  (cls|spec|blt)  %24.0 = LdFun              !v    .requirePackage, e29.0
  prom-           %24.1 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p13, e29.0
  val?            %24.2 = Call               !v    %24.0(%24.1) e29.0   <val?_>
  void                    StVar              lW    package, %24.2, e29.0
  goto BB15
BB14   <- [13]
  void                    Nop                !     
  goto BB15
BB15   <- [14, 24]
  val?^ | miss    %15.0 = LdVar              eR    is.environment, e29.0
  lgl$#-          %15.1 = Identical                <blt is.environment>, %15.0   <@?>
  void                    Branch                   %15.1 -> BB23 (if true) | BB16 (if false)
BB23   <- [15]
  val?^ | miss    %23.0 = LdVar              eR    package, e29.0
  val?            %23.1 = Force!             !v    %23.0, e29.0   <val?_>
  lgl$#-          %23.2 = CallSafeBuiltin    wed   is.environment(%23.1) 
  lgl$#-          %23.3 = %23.2
  goto BB17
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    package, e29.0
  val?            %16.1 = Force!             !v    %16.0, e29.0   <val?_>
  lgl$#-          %16.2 = CallSafeBuiltin    wed   is.environment(%16.1) 
  lgl$#-          %16.3 = %16.2
  goto BB17
BB17   <- [23, 16]
  lgl$#-          %17.0 = Phi                      %16.3:BB16, %23.3:BB23   <val?_>
  lgl$#-          %17.1 = %17.0
  void                    Branch                   %17.1 -> BB22 (if true) | BB18 (if false)
BB22   <- [17]
  (cls|spec|blt)  %22.0 = LdFun              !v    get0, e29.0
  prom-           %22.1 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p10, e29.0
  prom-           %22.2 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p11, e29.0
  prom-           %22.3 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p12, e29.0
  val?            %22.4 = NamedCall          !v    %22.0(%22.1, %22.2, inherits=%22.3) e29.0   <val?_>
  void                    StVar              lW    value, %22.4, e29.0
  goto BB19
BB18   <- [17]
  void                    Nop                !     
  goto BB19
BB19   <- [18, 22]
  val?^ | miss    %19.0 = LdVar              eR    value, e29.0
  val?            %19.1 = Force!             !v    %19.0, e29.0   <val?_>
  lgl$-           %19.2 = Is                       %19.1, NULL
  lgl$#-          %19.3 = CheckTrueFalse     e     %19.2
  void                    Branch                   %19.3 -> BB21 (if true) | BB20 (if false)
BB21   <- [19]
  (cls|spec|blt)  %21.0 = LdFun              !v    get0, e29.0
  prom-           %21.1 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p7, e29.0
  prom-           %21.2 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p8, e29.0
  prom-           %21.3 = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p9, e29.0
  val?            %21.4 = NamedCall          !v    %21.0(%21.1, %21.2, inherits=%21.3) e29.0   <val?_>
  void                    StVar              lW    value, %21.4, e29.0
  goto BB8
BB20   <- [19]
  void                    Nop                !     
  goto BB8
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p2, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <val?_>
  val?            %0.4  = Gt                 !v    %0.3, 1L, e0.0   <val?_>
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    Class, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e0.0   <val?_>
  void                    Visible            v     
  val?            %2.4  = %2.2
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %4.2  = Force              !     %4.0, e0.0   <val?_>
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.3:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nzchar, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x560a36b782d0]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|other)>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ getClassDef[0x560a36b782d0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
