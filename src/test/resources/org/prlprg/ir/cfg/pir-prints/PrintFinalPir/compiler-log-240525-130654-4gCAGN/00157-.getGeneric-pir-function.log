
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getGeneric[0x560a364c09d0]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1                             │
│ Properties:                                                                  │
├────── Final PIR Version
.getGeneric[0x560a364c09d0]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  lgl$#-          %0.4  = Identical                %0.0, missingArg
  env             e0.5  = MkEnv              l     f=%0.2, where=%0.1, package=%0.0, parent=<env 0x560a342f8378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB82 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p0, e0.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.5
  goto BB3
BB82   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 82]
  void                    Branch                   %0.4 -> BB81 (if true) | BB4 (if false)
BB81   <- [3]
  void                    StArg              lW    package, "", e0.5
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [4, 81]
  lgl$-           %5.0  = Missing            eR    where, e0.5
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB78 (if true) | BB8 (if false)
BB78   <- [5]
  val?^ | miss    %78.0 = LdVar              eR    .getGenericFromCache, <env 0x560a342f8378>
  lgl$#-          %78.1 = Identical                %78.0, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %78.1 -> BB83 (if true) | BB84 (if false)
BB8   <- [5]
  void                    Nop                !     
  nil-            %8.1  = nil
  goto BB9
BB83   <- [78]
  prom-           %83.0 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p7, e0.5
  prom-           %83.1 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p8, e0.5
  prom-           %83.2 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p9, e0.5
  ct              %83.3 = PushContext        lCL   %83.0, %83.1, %83.2, .getGenericFromCache(f, where, package), function(name, where, pkg="") <(rir::DispatchT|..., e0.5
  val?^           %83.4 = CastType                 up %83.2
  val?^           %83.5 = CastType                 up %83.1
  val?^           %83.6 = CastType                 up %83.0
  val?^ | miss    %83.7 = LdVar              eR    .getGenericFromCacheTable, <env 0x560a342f8378>
  lgl$#-          %83.8 = Identical                %83.7, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %83.8 -> BB85 (if true) | BB86 (if false)
BB84   <- [78]
  fs              %84.0 = FrameState         R     0x560a35d77450+0: [], env=e0.5
  void                    Deopt              !v    %84.0, CallTarget@0x560a33faf9f0[Call#0], %78.0
BB9   <- [8, 85]
  val?            %9.0  = Phi                      %8.1:BB8, %85.7:BB85   <(nil|cls)>
  val?            %9.1  = %9.0
  lgl$-           %9.2  = Is                       %9.1, NULL
  void                    StVar              lW    value, %9.1, e0.5
  val             %9.4  = ChkMissing         e     %9.1
  lgl$#-          %9.5  = CheckTrueFalse     e     %9.2
  void                    Branch                   %9.5 -> BB14 (if true) | BB12 (if false)
BB85   <- [83]
  env             e85.0 = MkEnv              l     name=%83.6, where=%83.5, pkg=%83.4, parent=<env 0x560a342f8378>, context 1
  prom-           %85.1 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p32, e85.0
  prom-           %85.2 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p33, e85.0
  prom-           %85.3 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p34, e85.0
  prom-           %85.4 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p35, e85.0
  val?            %85.5 = StaticCall         !v    .getGenericFromCacheTable[0x560a3620a1d0](%85.1, %85.2, %85.3, %85.4) e85.0   <cls>
  val?            %85.6 = PopContext         C     %85.5, %83.3   <cls>
  val?            %85.7 = %85.6
  goto BB9
BB86   <- [83]
  fs              %86.0 = FrameState         R     0x560a35d77450+65: [], env=e0.5
  env             e86.1 = (MkEnv)            l     name=%83.6, where=%83.5, pkg=%83.4, parent=<env 0x560a342f8378>, context 1
  fs              %86.2 = FrameState         R     0x560a35ea8090+0: [], env=e86.1, next=%86.0
  void                    Deopt              !v    %86.2, CallTarget@0x560a35de6b30[Call#0], %83.7   !
BB14   <- [9]
  val?^ | miss    %14.0 = LdVar              eR    is.character, e0.5
  lgl$#-          %14.1 = Identical                <blt is.character>, %14.0   <true>
  void                    Branch                   %14.1 -> BB87 (if true) | BB88 (if false)
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB87   <- [14]
  val?^ | miss    %87.0 = LdVar              eR    f, e0.5
  val?            %87.1 = Force!<lazy>       !v    %87.0, e0.5   <str$->
  lgl$#-          %87.2 = CallSafeBuiltin    wed   is.character(%87.1)    <lgl$->
  void                    Branch                   %87.2 -> BB73 (if true) | BB17 (if false)
BB88   <- [14]
  fs              %88.0 = FrameState         R     0x560a35d77450+79: [], env=e0.5
  void                    Deopt              !v    %88.0, DeadBranchReached@0x560a33faf9f0[Test#0], %14.1   !
BB13   <- [12, 46, 65]
  val?^ | miss    %13.0 = LdVar              eR    value, e0.5
  void                    Visible            v     
  val?            %13.2 = Force!<value>      !     %13.0, e0.5   <cls>
  void                    Return             l     %13.2
BB73   <- [87]
  val?^ | miss    %73.0 = LdVar              eR    %in%, e0.5
  lgl$#-          %73.1 = Identical                %73.0, function(x, table) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %73.1 -> BB89 (if true) | BB90 (if false)
BB17   <- [87]
  void                    Nop                !     
  lgl$#-          %17.1 = %87.2
  goto BB18
BB89   <- [73]
  val?^ | miss    %89.0 = LdVar              eR    f, e0.5
  val?            %89.1 = Force!<wrapped>    !v    %89.0, e0.5   <str$->
  lgl$#-          %89.2 = IsType                   %89.1 isA val?+
  void                    Branch                   %89.2 -> BB91 (if true) | BB92 (if false)
BB90   <- [73]
  fs              %90.0 = FrameState         R     0x560a35d77450+200: [%87.2], env=e0.5
  void                    Deopt              !v    %90.0, CallTarget@0x560a33faf9f0[Call#2], %73.0   !
BB18   <- [17, 93]
  lgl$-           %18.0 = Phi                      %93.4:BB93, %17.1:BB17
  lgl$-           %18.1 = %18.0
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB72 (if true) | BB19 (if false)
BB91   <- [89]
  val?+           %91.0 = CastType           d     dn %89.1   <(int|str)+>
  val+            %91.1 = CallSafeBuiltin    wed   match(%91.0, "as.double", 0L, nil)    <int->
  lgl$#-          %91.2 = IsType                   %91.1 isA int-
  void                    Branch                   %91.2 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  prom-           %92.0 = MkArg                    %89.1, .getGeneric[0x560a364c09d0]_p2 (!refl), e0.5
  val?~           %92.1 = CastType                 up %92.0
  env             e92.2 = (MkEnv)            l     x=%92.1, table="as.double", parent=R_BaseNamespace, context 0
  env             e92.3 = MaterializeEnv           , e92.2   <@?>
  prom-           %92.4 = MkArg                    %89.1, .getGeneric[0x560a364c09d0]_p10 (!refl), e92.3
  val?~           %92.5 = CastType                 up %92.4
  fs              %92.6 = FrameState         R     0x560a35d77450+249: [%87.2], env=e0.5
  fs              %92.7 = FrameState         R     0x560a3431e320+54: [], env=e92.3, next=%92.6
  prom-           %92.8 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p11 (!refl), e92.3
  val?^           %92.9 = CastType                 up %92.8
  env             e92.10 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%92.9, x=%92.5, parent=R_BaseNamespace, context -1
  fs              %92.11 = FrameState         R     0x560a34505d40+9: [%89.1], env=e92.10, next=%92.7
  void                    Deopt              !v    %92.11, Typecheck@0x560a34558cb0[Type#0], %89.1   !
BB72   <- [18]
  void                    StVar              lW    f, "as.numeric", e0.5
  goto BB20
BB19   <- [18]
  void                    Nop                !     
  goto BB20
BB93   <- [91]
  int-            %93.0 = CastType           d     dn %91.1
  lgl-            %93.1 = Gt                 wed   %93.0, 0L, elided   <lgl->
  lgl$-           %93.2 = AsLogical                %93.1
  lgl$-           %93.3 = LAnd                     %87.2, %93.2
  lgl$-           %93.4 = %93.3
  goto BB18
BB94   <- [91]
  prom-           %94.0 = MkArg                    %91.0, .getGeneric[0x560a364c09d0]_p2 (!refl), e0.5
  val?~           %94.1 = CastType                 up %94.0
  env             e94.2 = (MkEnv)            l     x=%94.1, table="as.double", parent=R_BaseNamespace, context 0
  env             e94.3 = MaterializeEnv           , e94.2   <@?>
  prom-           %94.4 = MkArg                    %91.0, .getGeneric[0x560a364c09d0]_p10 (!refl), e94.3
  val?~           %94.5 = CastType                 up %94.4
  fs              %94.6 = FrameState         R     0x560a35d77450+249: [%87.2], env=e0.5
  fs              %94.7 = FrameState         R     0x560a3431e320+54: [], env=e94.3, next=%94.6
  prom-           %94.8 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p11 (!refl), e94.3
  val?^           %94.9 = CastType                 up %94.8
  env             e94.10 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%94.9, x=%94.5, parent=R_BaseNamespace, context -1
  fs              %94.11 = FrameState         R     0x560a34505d40+69: [%91.1], env=e94.10, next=%94.7
  void                    Deopt              !v    %94.11, Typecheck@0x560a35350688[Type#2], %91.1   !
BB20   <- [19, 72]
  val?^ | miss    %20.0 = LdVar              eR    is.character, e0.5
  lgl$#-          %20.1 = Identical                <blt is.character>, %20.0   <true>
  void                    Branch                   %20.1 -> BB95 (if true) | BB96 (if false)
BB95   <- [20]
  val?^ | miss    %95.0 = LdVar              eR    f, e0.5
  val?            %95.1 = Force!<wrapped>    !v    %95.0, e0.5   <str$->
  lgl$#-          %95.2 = CallSafeBuiltin    wed   is.character(%95.1)    <lgl$->
  void                    Branch                   %95.2 -> BB69 (if true) | BB25 (if false)
BB96   <- [20]
  fs              %96.0 = FrameState         R     0x560a35d77450+282: [], env=e0.5
  void                    Deopt              !v    %96.0, DeadBranchReached@0x560a33faf9f0[Test#1], %20.1   !
BB69   <- [95]
  val?^ | miss    %69.0 = LdVar              eR    nzchar, e0.5
  lgl$#-          %69.1 = Identical                <blt nzchar>, %69.0   <true>
  void                    Branch                   %69.1 -> BB97 (if true) | BB98 (if false)
BB25   <- [95]
  void                    Nop                !     
  lgl$#-          %25.1 = %95.2
  goto BB26
BB97   <- [69]
  val?^ | miss    %97.0 = LdVar              eR    f, e0.5
  val?            %97.1 = Force!<wrapped>    !v    %97.0, e0.5   <str$->
  val?            %97.2 = CallBuiltin        !v    nzchar(%97.1) e0.5   <lgl$->
  lgl$#-          %97.3 = IsType                   %97.2 isA lgl$-
  void                    Branch                   %97.3 -> BB99 (if true) | BB100 (if false)
BB98   <- [69]
  fs              %98.0 = FrameState         R     0x560a35d77450+373: [%95.2], env=e0.5
  void                    Deopt              !v    %98.0, DeadBranchReached@0x560a33faf9f0[Test#2], %69.1   !
BB26   <- [25, 99]
  lgl$-           %26.0 = Phi                      %99.4:BB99, %25.1:BB25
  lgl$-           %26.1 = %26.0
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB68 (if true) | BB29 (if false)
BB99   <- [97]
  lgl$-           %99.0 = CastType           d     dn %97.2
  lgl$-           %99.1 = Not                d     %99.0, elided
  lgl$-           %99.2 = AsLogical                %99.1
  lgl$-           %99.3 = LAnd                     %95.2, %99.2
  lgl$-           %99.4 = %99.3
  goto BB26
BB100   <- [97]
  fs              %100.0 = FrameState         R     0x560a35d77450+476: [%95.2, %97.2], env=e0.5
  void                    Deopt              !v    %100.0, Typecheck@0x560a33faf9f0[Type#16], %97.2   !
BB68   <- [26]
  (cls|spec|blt)  %68.0 = LdFun              !v    message, e0.5
  fs              %68.1 = FrameState         R     0x560a35d77450+500: [%68.0], env=e0.5
  void                    Deopt              !v    %68.1, DeadCall@0x560a33faf9f0[Call#5], %68.0   !
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    .Call, e0.5
  lgl$#-          %29.1 = Identical                <blt .Call>, %29.0   <true>
  void                    Branch                   %29.1 -> BB101 (if true) | BB102 (if false)
BB101   <- [29]
  val?^ | miss    %101.0 = LdVar              eR    C_R_getGeneric, e0.5
  val?            %101.1 = Force!<value>      !v    %101.0, e0.5   <vec>
  val?^ | miss    %101.2 = LdVar              eR    f, e0.5
  val?            %101.3 = Force!<wrapped>    !v    %101.2, e0.5   <str$->
  val?^ | miss    %101.4 = LdVar              eR    as.environment, e0.5
  lgl$#-          %101.5 = Identical                <blt as.environment>, %101.4   <true>
  void                    Branch                   %101.5 -> BB103 (if true) | BB104 (if false)
BB102   <- [29]
  fs              %102.0 = FrameState         R     0x560a35d77450+484: [%26.1], env=e0.5
  void                    Deopt              !v    %102.0, DeadBranchReached@0x560a33faf9f0[Test#3], %29.1   !
BB103   <- [101]
  val?^ | miss    %103.0 = LdVar              eR    where, e0.5
  val?            %103.1 = Force!<lazy>       !v    %103.0, e0.5   <env->
  val?            %103.2 = CallBuiltin        !v    as.environment(%103.1) e0.5   <env->
  val?^ | miss    %103.3 = LdVar              eR    package, e0.5
  val?            %103.4 = Force!<lazy>       !v    %103.3, e0.5   <str$->
  val?            %103.5 = CallBuiltin        !v    .Call(%101.1, %101.3, false, %103.2, %103.4) e0.5   <cls>
  lgl$-           %103.6 = Is                       %103.5, NULL
  void                    StVar              lW    value, %103.5, e0.5
  val             %103.8 = ChkMissing         e     %103.5
  lgl$-           %103.9 = Not                d     %103.6, elided
  lgl$-           %103.10 = AsLogical                %103.9
  lgl$#-          %103.11 = Identical                %103.10, false
  void                    Branch                   %103.11 -> BB67 (if true) | BB34 (if false)
BB104   <- [101]
  fs              %104.0 = FrameState         R     0x560a35d77450+664: [<blt .Call>, %101.1, %101.3], env=e0.5
  void                    Deopt              !v    %104.0, DeadBranchReached@0x560a33faf9f0[Test#4], %101.5   !
BB67   <- [103]
  void                    Nop                !     
  lgl$-           %67.1 = %103.10
  goto BB37
BB34   <- [103]
  val?^ | miss    %34.0 = LdVar              eR    .GlobalEnv, e0.5
  lgl$#-          %34.1 = IsType                   %34.0 isA val?~- | miss
  void                    Branch                   %34.1 -> BB105 (if true) | BB106 (if false)
BB37   <- [67, 109]
  lgl$-           %37.0 = Phi                      %109.7:BB109, %67.1:BB67
  lgl$-           %37.1 = %37.0
  lgl$-           %37.2 = AsLogical                %37.1
  lgl$#-          %37.3 = Identical                %37.2, false
  void                    Branch                   %37.3 -> BB66 (if true) | BB40 (if false)
BB105   <- [34]
  val?~- | miss   %105.0 = CastType           d     dn %34.0
  val?-           %105.1 = Force!<value>            %105.0,    <env->
  lgl$#-          %105.2 = IsType                   %105.1 isA val+   <true>
  void                    Branch                   %105.2 -> BB107 (if true) | BB108 (if false)
BB106   <- [34]
  void                    Nop                !     
  val?^ | miss    %106.1 = %34.0
  dr              %106.2 = Typecheck@0x560a33faf9f0[Type#31]
  goto BB32
BB66   <- [37]
  void                    Nop                !     
  lgl$-           %66.1 = %37.2
  goto BB43
BB40   <- [37]
  val?^ | miss    %40.0 = LdVar              eR    identical, e0.5
  lgl$#-          %40.1 = Identical                %40.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %40.1 -> BB111 (if true) | BB112 (if false)
BB107   <- [105]
  val?^ | miss    %107.0 = LdVar              eR    f, e0.5
  val?            %107.1 = Force!<wrapped>    !v    %107.0, e0.5   <str$->
  lgl$#-          %107.2 = IsType                   %107.1 isA val?-
  void                    Branch                   %107.2 -> BB109 (if true) | BB110 (if false)
BB108   <- [105]
  void                    Nop                !     
  lgl$#-          %108.1 = %105.2
  dr              %108.2 = DeadBranchReached@0x560a33faf9f0[Test#5]
  goto BB32
BB32   <- [106, 108]
  val?^ | miss    %32.0 = Phi                      %106.1:BB106, %108.1:BB108
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %106.2:BB106, %108.2:BB108
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x560a35d77450+816: [], env=e0.5
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB43   <- [66, 113]
  lgl$-           %43.0 = Phi                      %113.3:BB113, %66.1:BB66
  lgl$-           %43.1 = %43.0
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB47 (if true) | BB46 (if false)
BB111   <- [40]
  prom-           %111.0 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p3, e0.5
  prom-           %111.1 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p4, e0.5
  ct              %111.2 = PushContext        lCL   %111.0, %111.1, identical(vv, value), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.5
  val?^           %111.3 = CastType                 up %111.1
  val?^           %111.4 = CastType                 up %111.0
  env             e111.5 = MkEnv              l     x=%111.4, y=%111.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %111.6 = Force!<lazy>       !vL   %111.4, e111.5   <val?>
  val?            %111.7 = Force!<lazy>       !vL   %111.3, e111.5   <val?>
  val?            %111.8 = CallBuiltin        !v    identical(%111.6, %111.7, true, true, true, true, false, true) e111.5
  val?            %111.9 = PopContext         C     %111.8, %111.2   <lgl$->
  lgl$#-          %111.10 = IsType                   %111.9 isA lgl$-
  void                    Branch                   %111.10 -> BB113 (if true) | BB114 (if false)
BB112   <- [40]
  fs              %112.0 = FrameState         R     0x560a35d77450+928: [%37.1], env=e0.5
  void                    Deopt              !v    %112.0, CallTarget@0x560a33faf9f0[Call#11], %40.0   !
BB109   <- [107]
  val?-           %109.0 = CastType           d     dn %107.1   <str$->
  val?            %109.1 = Extract2_1D        wed   %105.1, %109.0, elided   <(nil|cls)>
  lgl$-           %109.2 = Is                       %109.1, NULL
  void                    StVar              lW    vv, %109.1, e0.5
  lgl$-           %109.4 = Not                d     %109.2, elided
  lgl$-           %109.5 = AsLogical                %109.4
  lgl$-           %109.6 = LAnd                     %103.10, %109.5
  lgl$-           %109.7 = %109.6
  goto BB37
BB110   <- [107]
  fs              %110.0 = FrameState         R     0x560a35d77450+897: [%103.10, %105.1, %107.1], env=e0.5
  void                    Deopt              !v    %110.0, Typecheck@0x560a33faf9f0[Type#33], %107.1   !
BB47   <- [43]
  val?^ | miss    %47.0 = LdVar              eR    .cacheGeneric, e0.5
  lgl$#-          %47.1 = Identical                %47.0, function(name, def) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %47.1 -> BB115 (if true) | BB116 (if false)
BB46   <- [43]
  void                    Nop                !     
  goto BB13
BB113   <- [111]
  lgl$-           %113.0 = CastType           d     dn %111.9
  lgl$-           %113.1 = AsLogical                %113.0
  lgl$-           %113.2 = LAnd                     %37.2, %113.1
  lgl$-           %113.3 = %113.2
  goto BB43
BB114   <- [111]
  fs              %114.0 = FrameState         R     0x560a35d77450+972: [%37.2, %111.9], env=e0.5
  void                    Deopt              !v    %114.0, Typecheck@0x560a33faf9f0[Type#37], %111.9   !
BB115   <- [47]
  prom-           %115.0 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p5, e0.5
  prom-           %115.1 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p6, e0.5
  ct              %115.2 = PushContext        lCL   %115.0, %115.1, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x56|..., e0.5
  val?^           %115.3 = CastType                 up %115.1
  val?^           %115.4 = CastType                 up %115.0
  val?^ | miss    %115.5 = LdVar              eR    .cacheGenericTable, <env 0x560a342f8378>
  lgl$#-          %115.6 = Identical                %115.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %115.6 -> BB117 (if true) | BB118 (if false)
BB116   <- [47]
  fs              %116.0 = FrameState         R     0x560a35d77450+979: [%43.1], env=e0.5
  void                    Deopt              !v    %116.0, CallTarget@0x560a33faf9f0[Call#12], %47.0   !
BB117   <- [115]
  env             e117.0 = MkEnv              l     name=%115.4, def=%115.3, parent=<env 0x560a342f8378>, context 1
  prom-           %117.1 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p18, e117.0
  prom-           %117.2 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p19, e117.0
  prom-           %117.3 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p20, e117.0
  ct              %117.4 = PushContext        lCL   %117.1, %117.2, %117.3, .cacheGenericTable(name, def, .genericTable), function(name, def, table) <(rir::DispatchTabl|..., e117.0
  val?^           %117.5 = CastType                 up %117.3
  val?^           %117.6 = CastType                 up %117.2
  val?^           %117.7 = CastType                 up %117.1
  env             e117.8 = MkEnv              l     name=%117.7, def=%117.6, table=%117.5, parent=<env 0x560a342f8378>, context 1
  val?            %117.9 = Force!<lazy>       !vL   %117.6, e117.8   <cls>
  void                    StVar              lW    fdef, %117.9, e117.8
  val?            %117.11 = Force!<lazy>       !vL   %117.5, e117.8   <env->
  lgl$#-          %117.12 = IsType                   %117.11 isA val+   <true>
  void                    Branch                   %117.12 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  fs              %118.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  env             e118.1 = (MkEnv)            l     name=%115.4, def=%115.3, parent=<env 0x560a342f8378>, context 1
  fs              %118.2 = FrameState         R     0x560a36982fd0+0: [], env=e118.1, next=%118.0
  void                    Deopt              !v    %118.2, CallTarget@0x560a36fdf798[Call#0], %115.5   !
BB119   <- [117]
  val?            %119.0 = Force!<lazy>       !vL   %117.7, e117.8   <str$->
  lgl$#-          %119.1 = IsType                   %119.0 isA val?-
  lgl$#-          %119.2 = IsType                   %117.11 isA val?-
  void                    Branch                   %119.2 -> BB121 (if true) | BB122 (if false)
BB120   <- [117]
  fs              %120.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %120.1 = FrameState         R     0x560a36982fd0+42: [], env=e117.0, next=%120.0
  fs              %120.2 = FrameState         R     0x560a3614c3c0+32: [%117.11], env=e117.8, next=%120.1
  void                    Deopt              !v    %120.2, DeadBranchReached@0x560a35f35220[Test#0], %117.12   !
BB121   <- [119]
  val?-           %121.0 = CastType           d     dn %117.11   <env->
  void                    Branch                   %119.1 -> BB123 (if true) | BB124 (if false)
BB122   <- [119]
  void                    Nop                !     
  val?            %122.1 = %117.11
  dr              %122.2 = Typecheck@0x560a35f35220[Type#1]
  goto BB52
BB123   <- [121]
  val?-           %123.0 = CastType           d     dn %119.0   <str$->
  val?            %123.1 = Extract2_1D        wed   %121.0, %123.0, elided   <cls>
  lgl$-           %123.2 = Is                       %123.1, NULL
  void                    StVar              lW    prev, %123.1, e117.8
  lgl$-           %123.4 = Not                d     %123.2, elided
  lgl$#-          %123.5 = CheckTrueFalse     e     %123.4
  void                    Branch                   %123.5 -> BB55 (if true) | BB54 (if false)
BB124   <- [121]
  void                    Nop                !     
  val?            %124.1 = %119.0
  dr              %124.2 = Typecheck@0x560a35f35220[Type#3]
  goto BB52
BB52   <- [122, 124]
  val?^ | miss    %52.0 = Phi                      %122.1:BB122, %124.1:BB124
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %122.2:BB122, %124.2:BB124
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %52.5 = FrameState         R     0x560a36982fd0+42: [], env=e117.0, next=%52.4
  fs              %52.6 = FrameState         R     0x560a3614c3c0+77: [%117.11, %119.0], env=e117.8, next=%52.5
  void                    Deopt              !v    %52.6, %52.3, %52.1   !
BB55   <- [123]
  (cls|spec|blt)  %55.0 = LdFun              !v    @, <0x560a33cf0bd8>, <env 0x560a342f8378>
  prom-           %55.1 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p22, e117.8
  prom-           %55.2 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p23, e117.8
  val?            %55.3 = Call               !v    %55.0(%55.1, %55.2) e117.8   <str$->
  void                    StVar              lW    newpkg, %55.3, e117.8
  val?^ | miss    %55.5 = LdVar              eR    is.function, e117.8
  lgl$#-          %55.6 = Identical                <blt is.function>, %55.5   <true>
  void                    Branch                   %55.6 -> BB125 (if true) | BB126 (if false)
BB54   <- [123]
  fs              %54.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %54.1 = FrameState         R     0x560a36982fd0+42: [], env=e117.0, next=%54.0
  (cls|spec|blt)  %54.2 = LdFun              !v    .getMethodsTable, <env 0x560a342f8378>
  fs              %54.3 = FrameState         R     0x560a3614c3c0+1059: [%54.2], env=e117.8, next=%54.1
  void                    Deopt              !v    %54.3, DeadCall@0x560a35f35220[Call#11], %54.2   !
BB125   <- [55]
  val?^ | miss    %125.0 = LdVar              eR    prev, e117.8
  val?            %125.1 = Force!<value>      !v    %125.0, e117.8   <cls>
  val?            %125.2 = CallBuiltin        !v    is.function(%125.1) e117.8   <lgl$->
  lgl$#-          %125.3 = IsType                   %125.2 isA lgl$-
  void                    Branch                   %125.3 -> BB127 (if true) | BB128 (if false)
BB126   <- [55]
  fs              %126.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %126.1 = FrameState         R     0x560a36982fd0+42: [], env=e117.0, next=%126.0
  fs              %126.2 = FrameState         R     0x560a3614c3c0+168: [], env=e117.8, next=%126.1
  void                    Deopt              !v    %126.2, DeadBranchReached@0x560a35f35220[Test#1], %55.6   !
BB127   <- [125]
  lgl$-           %127.0 = CastType           d     dn %125.2
  lgl$#-          %127.1 = CheckTrueFalse     e     %127.0
  void                    Branch                   %127.1 -> BB61 (if true) | BB60 (if false)
BB128   <- [125]
  void                    Nop                !     
  val?            %128.1 = %125.2
  dr              %128.2 = Typecheck@0x560a35f35220[Type#10]
  goto BB58
BB61   <- [127]
  val?^ | miss    %61.0 = LdVar              eR    identical, e117.8
  lgl$#-          %61.1 = Identical                %61.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %61.1 -> BB129 (if true) | BB130 (if false)
BB60   <- [127]
  fs              %60.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %60.1 = FrameState         R     0x560a36982fd0+42: [], env=e117.0, next=%60.0
  (cls|spec|blt)  %60.2 = LdFun              !v    match, e117.8
  fs              %60.3 = FrameState         R     0x560a3614c3c0+706: [%60.2], env=e117.8, next=%60.1
  void                    Deopt              !v    %60.3, DeadCall@0x560a35f35220[Call#7], %60.2   !
BB58   <- [128, 130]
  val?^ | miss    %58.0 = Phi                      %128.1:BB128, %130.1:BB130
  val?^ | miss    %58.1 = %58.0
  dr              %58.2 = Phi                      %128.2:BB128, %130.2:BB130
  dr              %58.3 = %58.2
  fs              %58.4 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %58.5 = FrameState         R     0x560a36982fd0+42: [], env=e117.0, next=%58.4
  fs              %58.6 = FrameState         R     0x560a3614c3c0+259: [%125.2], env=e117.8, next=%58.5
  void                    Deopt              !v    %58.6, %58.3, %58.1   !
BB129   <- [61]
  prom-           %129.0 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p24, e117.8
  prom-           %129.1 = MkArg                    unboundValue, .getGeneric[0x560a364c09d0]_p25, e117.8
  ct              %129.2 = PushContext        lCL   %129.0, %129.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e117.8
  val?^           %129.3 = CastType                 up %129.1
  val?^           %129.4 = CastType                 up %129.0
  env             e129.5 = MkEnv              l     x=%129.4, y=%129.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %129.6 = Force!<lazy>       !vL   %129.4, e129.5   <val?>
  val?            %129.7 = Force!<lazy>       !vL   %129.3, e129.5   <val?>
  val?            %129.8 = CallBuiltin        !v    identical(%129.6, %129.7, true, true, true, true, false, true) e129.5
  val?            %129.9 = PopContext         C     %129.8, %129.2   <lgl$->
  lgl$#-          %129.10 = IsType                   %129.9 isA lgl$-
  void                    Branch                   %129.10 -> BB131 (if true) | BB132 (if false)
BB130   <- [61]
  void                    Nop                !     
  val?^ | miss    %130.1 = %61.0
  dr              %130.2 = CallTarget@0x560a35f35220[Call#2]
  goto BB58
BB131   <- [129]
  lgl$-           %131.0 = CastType           d     dn %129.9
  lgl$#-          %131.1 = CheckTrueFalse     e     %131.0
  void                    Branch                   %131.1 -> BB65 (if true) | BB64 (if false)
BB132   <- [129]
  fs              %132.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %132.1 = FrameState         R     0x560a36982fd0+42: [], env=e117.0, next=%132.0
  fs              %132.2 = FrameState         R     0x560a3614c3c0+312: [%129.9], env=e117.8, next=%132.1
  void                    Deopt              !v    %132.2, Typecheck@0x560a35f35220[Type#13], %129.9   !
BB65   <- [131]
  val?^ | miss    %65.0 = LdVar              eR    fdef, e117.8
  val?            %65.1 = Force!<value>      !v    %65.0, e117.8   <cls>
  val?            %65.2 = PopContext         C     %65.1, %117.4   <cls>
  val?            %65.3 = PopContext         C     %65.2, %115.2
  goto BB13
BB64   <- [131]
  fs              %64.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %64.1 = FrameState         R     0x560a36982fd0+42: [], env=e117.0, next=%64.0
  (cls|spec|blt)  %64.2 = LdFun              !v    @, e117.8
  fs              %64.3 = FrameState         R     0x560a3614c3c0+348: [%64.2], env=e117.8, next=%64.1
  void                    Deopt              !v    %64.3, DeadCall@0x560a35f35220[Call#3], %64.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .GlobalEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .getGeneric[0x560a364c09d0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
