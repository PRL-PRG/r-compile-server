
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getGeneric[0x560a36aebff0]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1                             │
│ Properties:                                                                  │
├────── Final PIR Version
.getGeneric[0x560a36aebff0]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  lgl$#-          %0.4  = Identical                %0.0, missingArg
  env             e0.5  = MkEnv              l     f=%0.2, where=%0.1, package=%0.0, parent=<env 0x560a342f8378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB83 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p0, e0.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.5
  goto BB3
BB83   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 83]
  void                    Branch                   %0.4 -> BB82 (if true) | BB4 (if false)
BB82   <- [3]
  void                    StArg              lW    package, "", e0.5
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [4, 82]
  lgl$-           %5.0  = Missing            eR    where, e0.5
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB79 (if true) | BB8 (if false)
BB79   <- [5]
  val?^ | miss    %79.0 = LdVar              eR    .getGenericFromCache, <env 0x560a342f8378>
  lgl$#-          %79.1 = Identical                %79.0, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %79.1 -> BB84 (if true) | BB85 (if false)
BB8   <- [5]
  void                    Nop                !     
  nil-            %8.1  = nil
  goto BB9
BB84   <- [79]
  prom-           %84.0 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p8, e0.5
  prom-           %84.1 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p9, e0.5
  prom-           %84.2 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p10, e0.5
  ct              %84.3 = PushContext        lCL   %84.0, %84.1, %84.2, .getGenericFromCache(f, where, package), function(name, where, pkg="") <(rir::DispatchT|..., e0.5
  val?^           %84.4 = CastType                 up %84.2
  val?^           %84.5 = CastType                 up %84.1
  val?^           %84.6 = CastType                 up %84.0
  val?^ | miss    %84.7 = LdVar              eR    .getGenericFromCacheTable, <env 0x560a342f8378>
  lgl$#-          %84.8 = Identical                %84.7, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %84.8 -> BB86 (if true) | BB87 (if false)
BB85   <- [79]
  fs              %85.0 = FrameState         R     0x560a35d77450+0: [], env=e0.5
  void                    Deopt              !v    %85.0, CallTarget@0x560a33faf9f0[Call#0], %79.0
BB9   <- [8, 86]
  val?            %9.0  = Phi                      %8.1:BB8, %86.7:BB86   <(nil|cls)>
  val?            %9.1  = %9.0
  lgl$-           %9.2  = Is                       %9.1, NULL
  void                    StVar              lW    value, %9.1, e0.5
  val             %9.4  = ChkMissing         e     %9.1
  lgl$#-          %9.5  = CheckTrueFalse     e     %9.2
  void                    Branch                   %9.5 -> BB14 (if true) | BB12 (if false)
BB86   <- [84]
  env             e86.0 = MkEnv              l     name=%84.6, where=%84.5, pkg=%84.4, parent=<env 0x560a342f8378>, context 1
  prom-           %86.1 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p11, e86.0
  prom-           %86.2 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p12, e86.0
  prom-           %86.3 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p13, e86.0
  prom-           %86.4 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p14, e86.0
  val?            %86.5 = StaticCall         !v    .getGenericFromCacheTable[0x560a36c30020](%86.1, %86.2, %86.3, %86.4) e86.0   <cls>
  val?            %86.6 = PopContext         C     %86.5, %84.3   <cls>
  val?            %86.7 = %86.6
  goto BB9
BB87   <- [84]
  fs              %87.0 = FrameState         R     0x560a35d77450+65: [], env=e0.5
  env             e87.1 = (MkEnv)            l     name=%84.6, where=%84.5, pkg=%84.4, parent=<env 0x560a342f8378>, context 1
  fs              %87.2 = FrameState         R     0x560a35ea8090+0: [], env=e87.1, next=%87.0
  void                    Deopt              !v    %87.2, CallTarget@0x560a35de6b30[Call#0], %84.7   !
BB14   <- [9]
  val?^ | miss    %14.0 = LdVar              eR    is.character, e0.5
  lgl$#-          %14.1 = Identical                <blt is.character>, %14.0   <true>
  void                    Branch                   %14.1 -> BB88 (if true) | BB89 (if false)
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB88   <- [14]
  val?^ | miss    %88.0 = LdVar              eR    f, e0.5
  val?            %88.1 = Force!<lazy>       !v    %88.0, e0.5   <str$->
  lgl$#-          %88.2 = CallSafeBuiltin    wed   is.character(%88.1)    <lgl$->
  void                    Branch                   %88.2 -> BB74 (if true) | BB17 (if false)
BB89   <- [14]
  fs              %89.0 = FrameState         R     0x560a35d77450+79: [], env=e0.5
  void                    Deopt              !v    %89.0, DeadBranchReached@0x560a33faf9f0[Test#0], %14.1   !
BB13   <- [12, 47, 66]
  val?^ | miss    %13.0 = LdVar              eR    value, e0.5
  void                    Visible            v     
  val?            %13.2 = Force!<value>      !     %13.0, e0.5   <cls>
  void                    Return             l     %13.2
BB74   <- [88]
  val?^ | miss    %74.0 = LdVar              eR    %in%, e0.5
  lgl$#-          %74.1 = Identical                %74.0, function(x, table) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %74.1 -> BB90 (if true) | BB91 (if false)
BB17   <- [88]
  void                    Nop                !     
  lgl$#-          %17.1 = %88.2
  goto BB18
BB90   <- [74]
  val?^ | miss    %90.0 = LdVar              eR    f, e0.5
  val?            %90.1 = Force!<wrapped>    !v    %90.0, e0.5   <str$->
  lgl$#-          %90.2 = IsType                   %90.1 isA val?+
  void                    Branch                   %90.2 -> BB92 (if true) | BB93 (if false)
BB91   <- [74]
  fs              %91.0 = FrameState         R     0x560a35d77450+200: [%88.2], env=e0.5
  void                    Deopt              !v    %91.0, CallTarget@0x560a33faf9f0[Call#2], %74.0   !
BB18   <- [17, 94]
  lgl$-           %18.0 = Phi                      %94.4:BB94, %17.1:BB17
  lgl$-           %18.1 = %18.0
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB73 (if true) | BB19 (if false)
BB92   <- [90]
  val?+           %92.0 = CastType           d     dn %90.1   <(int|str)+>
  val+            %92.1 = CallSafeBuiltin    wed   match(%92.0, "as.double", 0L, nil)    <int->
  lgl$#-          %92.2 = IsType                   %92.1 isA int-
  void                    Branch                   %92.2 -> BB94 (if true) | BB95 (if false)
BB93   <- [90]
  prom-           %93.0 = MkArg                    %90.1, .getGeneric[0x560a36aebff0]_p2 (!refl), e0.5
  val?~           %93.1 = CastType                 up %93.0
  env             e93.2 = (MkEnv)            l     x=%93.1, table="as.double", parent=R_BaseNamespace, context 0
  env             e93.3 = MaterializeEnv           , e93.2   <@?>
  prom-           %93.4 = MkArg                    %90.1, .getGeneric[0x560a36aebff0]_p15 (!refl), e93.3
  val?~           %93.5 = CastType                 up %93.4
  fs              %93.6 = FrameState         R     0x560a35d77450+249: [%88.2], env=e0.5
  fs              %93.7 = FrameState         R     0x560a3431e320+54: [], env=e93.3, next=%93.6
  prom-           %93.8 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p16 (!refl), e93.3
  val?^           %93.9 = CastType                 up %93.8
  env             e93.10 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%93.9, x=%93.5, parent=R_BaseNamespace, context -1
  fs              %93.11 = FrameState         R     0x560a34505d40+9: [%90.1], env=e93.10, next=%93.7
  void                    Deopt              !v    %93.11, Typecheck@0x560a34558cb0[Type#0], %90.1   !
BB73   <- [18]
  void                    StVar              lW    f, "as.numeric", e0.5
  goto BB20
BB19   <- [18]
  void                    Nop                !     
  goto BB20
BB94   <- [92]
  int-            %94.0 = CastType           d     dn %92.1
  lgl-            %94.1 = Gt                 wed   %94.0, 0L, elided   <lgl->
  lgl$-           %94.2 = AsLogical                %94.1
  lgl$-           %94.3 = LAnd                     %88.2, %94.2
  lgl$-           %94.4 = %94.3
  goto BB18
BB95   <- [92]
  prom-           %95.0 = MkArg                    %92.0, .getGeneric[0x560a36aebff0]_p2 (!refl), e0.5
  val?~           %95.1 = CastType                 up %95.0
  env             e95.2 = (MkEnv)            l     x=%95.1, table="as.double", parent=R_BaseNamespace, context 0
  env             e95.3 = MaterializeEnv           , e95.2   <@?>
  prom-           %95.4 = MkArg                    %92.0, .getGeneric[0x560a36aebff0]_p15 (!refl), e95.3
  val?~           %95.5 = CastType                 up %95.4
  fs              %95.6 = FrameState         R     0x560a35d77450+249: [%88.2], env=e0.5
  fs              %95.7 = FrameState         R     0x560a3431e320+54: [], env=e95.3, next=%95.6
  prom-           %95.8 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p16 (!refl), e95.3
  val?^           %95.9 = CastType                 up %95.8
  env             e95.10 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%95.9, x=%95.5, parent=R_BaseNamespace, context -1
  fs              %95.11 = FrameState         R     0x560a34505d40+69: [%92.1], env=e95.10, next=%95.7
  void                    Deopt              !v    %95.11, Typecheck@0x560a35350688[Type#2], %92.1   !
BB20   <- [19, 73]
  val?^ | miss    %20.0 = LdVar              eR    is.character, e0.5
  lgl$#-          %20.1 = Identical                <blt is.character>, %20.0   <true>
  void                    Branch                   %20.1 -> BB96 (if true) | BB97 (if false)
BB96   <- [20]
  val?^ | miss    %96.0 = LdVar              eR    f, e0.5
  val?            %96.1 = Force!<wrapped>    !v    %96.0, e0.5   <str$->
  lgl$#-          %96.2 = CallSafeBuiltin    wed   is.character(%96.1)    <lgl$->
  void                    Branch                   %96.2 -> BB70 (if true) | BB25 (if false)
BB97   <- [20]
  fs              %97.0 = FrameState         R     0x560a35d77450+282: [], env=e0.5
  void                    Deopt              !v    %97.0, DeadBranchReached@0x560a33faf9f0[Test#1], %20.1   !
BB70   <- [96]
  val?^ | miss    %70.0 = LdVar              eR    nzchar, e0.5
  lgl$#-          %70.1 = Identical                <blt nzchar>, %70.0   <true>
  void                    Branch                   %70.1 -> BB98 (if true) | BB99 (if false)
BB25   <- [96]
  void                    Nop                !     
  lgl$#-          %25.1 = %96.2
  goto BB26
BB98   <- [70]
  val?^ | miss    %98.0 = LdVar              eR    f, e0.5
  val?            %98.1 = Force!<wrapped>    !v    %98.0, e0.5   <str$->
  val?            %98.2 = CallBuiltin        !v    nzchar(%98.1) e0.5   <lgl$->
  lgl$#-          %98.3 = IsType                   %98.2 isA lgl$-
  void                    Branch                   %98.3 -> BB100 (if true) | BB101 (if false)
BB99   <- [70]
  fs              %99.0 = FrameState         R     0x560a35d77450+373: [%96.2], env=e0.5
  void                    Deopt              !v    %99.0, DeadBranchReached@0x560a33faf9f0[Test#2], %70.1   !
BB26   <- [25, 100]
  lgl$-           %26.0 = Phi                      %100.4:BB100, %25.1:BB25
  lgl$-           %26.1 = %26.0
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB69 (if true) | BB27 (if false)
BB100   <- [98]
  lgl$-           %100.0 = CastType           d     dn %98.2
  lgl$-           %100.1 = Not                d     %100.0, elided
  lgl$-           %100.2 = AsLogical                %100.1
  lgl$-           %100.3 = LAnd                     %96.2, %100.2
  lgl$-           %100.4 = %100.3
  goto BB26
BB101   <- [98]
  fs              %101.0 = FrameState         R     0x560a35d77450+476: [%96.2, %98.2], env=e0.5
  void                    Deopt              !v    %101.0, Typecheck@0x560a33faf9f0[Type#16], %98.2   !
BB69   <- [26]
  (cls|spec|blt)  %69.0 = LdFun              !v    message, e0.5
  val?            %69.1 = Call               !v    %69.0("Empty function name in .getGeneric") e0.5
  (cls|spec|blt)  %69.2 = LdFun              !v    dput, e0.5
  prom-           %69.3 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p7, e0.5
  val?            %69.4 = Call               !v    %69.2(%69.3) e0.5
  goto BB28
BB27   <- [26]
  void                    Nop                !     
  goto BB28
BB28   <- [27, 69]
  val?^ | miss    %28.0 = LdVar              eR    .Call, e0.5
  lgl$#-          %28.1 = Identical                <blt .Call>, %28.0   <true>
  void                    Branch                   %28.1 -> BB102 (if true) | BB103 (if false)
BB102   <- [28]
  val?^ | miss    %102.0 = LdVar              eR    C_R_getGeneric, e0.5
  val?            %102.1 = Force!<value>      !v    %102.0, e0.5   <vec>
  val?^ | miss    %102.2 = LdVar              eR    f, e0.5
  val?            %102.3 = Force!<wrapped>    !v    %102.2, e0.5   <str$->
  val?^ | miss    %102.4 = LdVar              eR    as.environment, e0.5
  lgl$#-          %102.5 = Identical                <blt as.environment>, %102.4   <true>
  void                    Branch                   %102.5 -> BB104 (if true) | BB105 (if false)
BB103   <- [28]
  fs              %103.0 = FrameState         R     0x560a35d77450+561: [], env=e0.5
  void                    Deopt              !v    %103.0, DeadBranchReached@0x560a33faf9f0[Test#3], %28.1   !
BB104   <- [102]
  val?^ | miss    %104.0 = LdVar              eR    where, e0.5
  val?            %104.1 = Force!<lazy>       !v    %104.0, e0.5   <env->
  val?            %104.2 = CallBuiltin        !v    as.environment(%104.1) e0.5   <env->
  val?^ | miss    %104.3 = LdVar              eR    package, e0.5
  val?            %104.4 = Force!<lazy>       !v    %104.3, e0.5   <str$->
  val?            %104.5 = CallBuiltin        !v    .Call(%102.1, %102.3, false, %104.2, %104.4) e0.5   <cls>
  lgl$-           %104.6 = Is                       %104.5, NULL
  void                    StVar              lW    value, %104.5, e0.5
  val             %104.8 = ChkMissing         e     %104.5
  lgl$-           %104.9 = Not                d     %104.6, elided
  lgl$-           %104.10 = AsLogical                %104.9
  lgl$#-          %104.11 = Identical                %104.10, false
  void                    Branch                   %104.11 -> BB68 (if true) | BB35 (if false)
BB105   <- [102]
  fs              %105.0 = FrameState         R     0x560a35d77450+664: [<blt .Call>, %102.1, %102.3], env=e0.5
  void                    Deopt              !v    %105.0, DeadBranchReached@0x560a33faf9f0[Test#4], %102.5   !
BB68   <- [104]
  void                    Nop                !     
  lgl$-           %68.1 = %104.10
  goto BB38
BB35   <- [104]
  val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e0.5
  lgl$#-          %35.1 = IsType                   %35.0 isA val?~- | miss
  void                    Branch                   %35.1 -> BB106 (if true) | BB107 (if false)
BB38   <- [68, 110]
  lgl$-           %38.0 = Phi                      %110.7:BB110, %68.1:BB68
  lgl$-           %38.1 = %38.0
  lgl$-           %38.2 = AsLogical                %38.1
  lgl$#-          %38.3 = Identical                %38.2, false
  void                    Branch                   %38.3 -> BB67 (if true) | BB41 (if false)
BB106   <- [35]
  val?~- | miss   %106.0 = CastType           d     dn %35.0
  val?-           %106.1 = Force!<value>            %106.0,    <env->
  lgl$#-          %106.2 = IsType                   %106.1 isA val+   <true>
  void                    Branch                   %106.2 -> BB108 (if true) | BB109 (if false)
BB107   <- [35]
  void                    Nop                !     
  val?^ | miss    %107.1 = %35.0
  dr              %107.2 = Typecheck@0x560a33faf9f0[Type#31]
  goto BB33
BB67   <- [38]
  void                    Nop                !     
  lgl$-           %67.1 = %38.2
  goto BB44
BB41   <- [38]
  val?^ | miss    %41.0 = LdVar              eR    identical, e0.5
  lgl$#-          %41.1 = Identical                %41.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %41.1 -> BB112 (if true) | BB113 (if false)
BB108   <- [106]
  val?^ | miss    %108.0 = LdVar              eR    f, e0.5
  val?            %108.1 = Force!<wrapped>    !v    %108.0, e0.5   <str$->
  lgl$#-          %108.2 = IsType                   %108.1 isA val?-
  void                    Branch                   %108.2 -> BB110 (if true) | BB111 (if false)
BB109   <- [106]
  void                    Nop                !     
  lgl$#-          %109.1 = %106.2
  dr              %109.2 = DeadBranchReached@0x560a33faf9f0[Test#5]
  goto BB33
BB33   <- [107, 109]
  val?^ | miss    %33.0 = Phi                      %107.1:BB107, %109.1:BB109
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %107.2:BB107, %109.2:BB109
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x560a35d77450+816: [], env=e0.5
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB44   <- [67, 114]
  lgl$-           %44.0 = Phi                      %114.3:BB114, %67.1:BB67
  lgl$-           %44.1 = %44.0
  lgl$#-          %44.2 = CheckTrueFalse     e     %44.1
  void                    Branch                   %44.2 -> BB48 (if true) | BB47 (if false)
BB112   <- [41]
  prom-           %112.0 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p3, e0.5
  prom-           %112.1 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p4, e0.5
  ct              %112.2 = PushContext        lCL   %112.0, %112.1, identical(vv, value), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.5
  val?^           %112.3 = CastType                 up %112.1
  val?^           %112.4 = CastType                 up %112.0
  env             e112.5 = MkEnv              l     x=%112.4, y=%112.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %112.6 = Force!<lazy>       !vL   %112.4, e112.5   <val?>
  val?            %112.7 = Force!<lazy>       !vL   %112.3, e112.5   <val?>
  val?            %112.8 = CallBuiltin        !v    identical(%112.6, %112.7, true, true, true, true, false, true) e112.5
  val?            %112.9 = PopContext         C     %112.8, %112.2   <lgl$->
  lgl$#-          %112.10 = IsType                   %112.9 isA lgl$-
  void                    Branch                   %112.10 -> BB114 (if true) | BB115 (if false)
BB113   <- [41]
  fs              %113.0 = FrameState         R     0x560a35d77450+928: [%38.1], env=e0.5
  void                    Deopt              !v    %113.0, CallTarget@0x560a33faf9f0[Call#11], %41.0   !
BB110   <- [108]
  val?-           %110.0 = CastType           d     dn %108.1   <str$->
  val?            %110.1 = Extract2_1D        wed   %106.1, %110.0, elided   <(nil|cls)>
  lgl$-           %110.2 = Is                       %110.1, NULL
  void                    StVar              lW    vv, %110.1, e0.5
  lgl$-           %110.4 = Not                d     %110.2, elided
  lgl$-           %110.5 = AsLogical                %110.4
  lgl$-           %110.6 = LAnd                     %104.10, %110.5
  lgl$-           %110.7 = %110.6
  goto BB38
BB111   <- [108]
  fs              %111.0 = FrameState         R     0x560a35d77450+897: [%104.10, %106.1, %108.1], env=e0.5
  void                    Deopt              !v    %111.0, Typecheck@0x560a33faf9f0[Type#33], %108.1   !
BB48   <- [44]
  val?^ | miss    %48.0 = LdVar              eR    .cacheGeneric, e0.5
  lgl$#-          %48.1 = Identical                %48.0, function(name, def) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %48.1 -> BB116 (if true) | BB117 (if false)
BB47   <- [44]
  void                    Nop                !     
  goto BB13
BB114   <- [112]
  lgl$-           %114.0 = CastType           d     dn %112.9
  lgl$-           %114.1 = AsLogical                %114.0
  lgl$-           %114.2 = LAnd                     %38.2, %114.1
  lgl$-           %114.3 = %114.2
  goto BB44
BB115   <- [112]
  fs              %115.0 = FrameState         R     0x560a35d77450+972: [%38.2, %112.9], env=e0.5
  void                    Deopt              !v    %115.0, Typecheck@0x560a33faf9f0[Type#37], %112.9   !
BB116   <- [48]
  prom-           %116.0 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p5, e0.5
  prom-           %116.1 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p6, e0.5
  ct              %116.2 = PushContext        lCL   %116.0, %116.1, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x56|..., e0.5
  val?^           %116.3 = CastType                 up %116.1
  val?^           %116.4 = CastType                 up %116.0
  val?^ | miss    %116.5 = LdVar              eR    .cacheGenericTable, <env 0x560a342f8378>
  lgl$#-          %116.6 = Identical                %116.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %116.6 -> BB118 (if true) | BB119 (if false)
BB117   <- [48]
  fs              %117.0 = FrameState         R     0x560a35d77450+979: [%44.1], env=e0.5
  void                    Deopt              !v    %117.0, CallTarget@0x560a33faf9f0[Call#12], %48.0   !
BB118   <- [116]
  env             e118.0 = MkEnv              l     name=%116.4, def=%116.3, parent=<env 0x560a342f8378>, context 1
  prom-           %118.1 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p23, e118.0
  prom-           %118.2 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p24, e118.0
  prom-           %118.3 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p25, e118.0
  ct              %118.4 = PushContext        lCL   %118.1, %118.2, %118.3, .cacheGenericTable(name, def, .genericTable), function(name, def, table) <(rir::DispatchTabl|..., e118.0
  val?^           %118.5 = CastType                 up %118.3
  val?^           %118.6 = CastType                 up %118.2
  val?^           %118.7 = CastType                 up %118.1
  env             e118.8 = MkEnv              l     name=%118.7, def=%118.6, table=%118.5, parent=<env 0x560a342f8378>, context 1
  val?            %118.9 = Force!<lazy>       !vL   %118.6, e118.8   <cls>
  void                    StVar              lW    fdef, %118.9, e118.8
  val?            %118.11 = Force!<lazy>       !vL   %118.5, e118.8   <env->
  lgl$#-          %118.12 = IsType                   %118.11 isA val+   <true>
  void                    Branch                   %118.12 -> BB120 (if true) | BB121 (if false)
BB119   <- [116]
  fs              %119.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  env             e119.1 = (MkEnv)            l     name=%116.4, def=%116.3, parent=<env 0x560a342f8378>, context 1
  fs              %119.2 = FrameState         R     0x560a36982fd0+0: [], env=e119.1, next=%119.0
  void                    Deopt              !v    %119.2, CallTarget@0x560a36fdf798[Call#0], %116.5   !
BB120   <- [118]
  val?            %120.0 = Force!<lazy>       !vL   %118.7, e118.8   <str$->
  lgl$#-          %120.1 = IsType                   %120.0 isA val?-
  lgl$#-          %120.2 = IsType                   %118.11 isA val?-
  void                    Branch                   %120.2 -> BB122 (if true) | BB123 (if false)
BB121   <- [118]
  fs              %121.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %121.1 = FrameState         R     0x560a36982fd0+42: [], env=e118.0, next=%121.0
  fs              %121.2 = FrameState         R     0x560a3614c3c0+32: [%118.11], env=e118.8, next=%121.1
  void                    Deopt              !v    %121.2, DeadBranchReached@0x560a35f35220[Test#0], %118.12   !
BB122   <- [120]
  val?-           %122.0 = CastType           d     dn %118.11   <env->
  void                    Branch                   %120.1 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?            %123.1 = %118.11
  dr              %123.2 = Typecheck@0x560a35f35220[Type#1]
  goto BB53
BB124   <- [122]
  val?-           %124.0 = CastType           d     dn %120.0   <str$->
  val?            %124.1 = Extract2_1D        wed   %122.0, %124.0, elided   <cls>
  lgl$-           %124.2 = Is                       %124.1, NULL
  void                    StVar              lW    prev, %124.1, e118.8
  lgl$-           %124.4 = Not                d     %124.2, elided
  lgl$#-          %124.5 = CheckTrueFalse     e     %124.4
  void                    Branch                   %124.5 -> BB56 (if true) | BB55 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?            %125.1 = %120.0
  dr              %125.2 = Typecheck@0x560a35f35220[Type#3]
  goto BB53
BB53   <- [123, 125]
  val?^ | miss    %53.0 = Phi                      %123.1:BB123, %125.1:BB125
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %123.2:BB123, %125.2:BB125
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %53.5 = FrameState         R     0x560a36982fd0+42: [], env=e118.0, next=%53.4
  fs              %53.6 = FrameState         R     0x560a3614c3c0+77: [%118.11, %120.0], env=e118.8, next=%53.5
  void                    Deopt              !v    %53.6, %53.3, %53.1   !
BB56   <- [124]
  (cls|spec|blt)  %56.0 = LdFun              !v    @, <0x560a33cf0bd8>, <env 0x560a342f8378>
  prom-           %56.1 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p27, e118.8
  prom-           %56.2 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p28, e118.8
  val?            %56.3 = Call               !v    %56.0(%56.1, %56.2) e118.8   <str$->
  void                    StVar              lW    newpkg, %56.3, e118.8
  val?^ | miss    %56.5 = LdVar              eR    is.function, e118.8
  lgl$#-          %56.6 = Identical                <blt is.function>, %56.5   <true>
  void                    Branch                   %56.6 -> BB126 (if true) | BB127 (if false)
BB55   <- [124]
  fs              %55.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %55.1 = FrameState         R     0x560a36982fd0+42: [], env=e118.0, next=%55.0
  (cls|spec|blt)  %55.2 = LdFun              !v    .getMethodsTable, <env 0x560a342f8378>
  fs              %55.3 = FrameState         R     0x560a3614c3c0+1059: [%55.2], env=e118.8, next=%55.1
  void                    Deopt              !v    %55.3, DeadCall@0x560a35f35220[Call#11], %55.2   !
BB126   <- [56]
  val?^ | miss    %126.0 = LdVar              eR    prev, e118.8
  val?            %126.1 = Force!<value>      !v    %126.0, e118.8   <cls>
  val?            %126.2 = CallBuiltin        !v    is.function(%126.1) e118.8   <lgl$->
  lgl$#-          %126.3 = IsType                   %126.2 isA lgl$-
  void                    Branch                   %126.3 -> BB128 (if true) | BB129 (if false)
BB127   <- [56]
  fs              %127.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %127.1 = FrameState         R     0x560a36982fd0+42: [], env=e118.0, next=%127.0
  fs              %127.2 = FrameState         R     0x560a3614c3c0+168: [], env=e118.8, next=%127.1
  void                    Deopt              !v    %127.2, DeadBranchReached@0x560a35f35220[Test#1], %56.6   !
BB128   <- [126]
  lgl$-           %128.0 = CastType           d     dn %126.2
  lgl$#-          %128.1 = CheckTrueFalse     e     %128.0
  void                    Branch                   %128.1 -> BB62 (if true) | BB61 (if false)
BB129   <- [126]
  void                    Nop                !     
  val?            %129.1 = %126.2
  dr              %129.2 = Typecheck@0x560a35f35220[Type#10]
  goto BB59
BB62   <- [128]
  val?^ | miss    %62.0 = LdVar              eR    identical, e118.8
  lgl$#-          %62.1 = Identical                %62.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %62.1 -> BB130 (if true) | BB131 (if false)
BB61   <- [128]
  fs              %61.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %61.1 = FrameState         R     0x560a36982fd0+42: [], env=e118.0, next=%61.0
  (cls|spec|blt)  %61.2 = LdFun              !v    match, e118.8
  fs              %61.3 = FrameState         R     0x560a3614c3c0+706: [%61.2], env=e118.8, next=%61.1
  void                    Deopt              !v    %61.3, DeadCall@0x560a35f35220[Call#7], %61.2   !
BB59   <- [129, 131]
  val?^ | miss    %59.0 = Phi                      %129.1:BB129, %131.1:BB131
  val?^ | miss    %59.1 = %59.0
  dr              %59.2 = Phi                      %129.2:BB129, %131.2:BB131
  dr              %59.3 = %59.2
  fs              %59.4 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %59.5 = FrameState         R     0x560a36982fd0+42: [], env=e118.0, next=%59.4
  fs              %59.6 = FrameState         R     0x560a3614c3c0+259: [%126.2], env=e118.8, next=%59.5
  void                    Deopt              !v    %59.6, %59.3, %59.1   !
BB130   <- [62]
  prom-           %130.0 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p29, e118.8
  prom-           %130.1 = MkArg                    unboundValue, .getGeneric[0x560a36aebff0]_p30, e118.8
  ct              %130.2 = PushContext        lCL   %130.0, %130.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e118.8
  val?^           %130.3 = CastType                 up %130.1
  val?^           %130.4 = CastType                 up %130.0
  env             e130.5 = MkEnv              l     x=%130.4, y=%130.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %130.6 = Force!<lazy>       !vL   %130.4, e130.5   <val?>
  val?            %130.7 = Force!<lazy>       !vL   %130.3, e130.5   <val?>
  val?            %130.8 = CallBuiltin        !v    identical(%130.6, %130.7, true, true, true, true, false, true) e130.5
  val?            %130.9 = PopContext         C     %130.8, %130.2   <lgl$->
  lgl$#-          %130.10 = IsType                   %130.9 isA lgl$-
  void                    Branch                   %130.10 -> BB132 (if true) | BB133 (if false)
BB131   <- [62]
  void                    Nop                !     
  val?^ | miss    %131.1 = %62.0
  dr              %131.2 = CallTarget@0x560a35f35220[Call#2]
  goto BB59
BB132   <- [130]
  lgl$-           %132.0 = CastType           d     dn %130.9
  lgl$#-          %132.1 = CheckTrueFalse     e     %132.0
  void                    Branch                   %132.1 -> BB66 (if true) | BB65 (if false)
BB133   <- [130]
  fs              %133.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %133.1 = FrameState         R     0x560a36982fd0+42: [], env=e118.0, next=%133.0
  fs              %133.2 = FrameState         R     0x560a3614c3c0+312: [%130.9], env=e118.8, next=%133.1
  void                    Deopt              !v    %133.2, Typecheck@0x560a35f35220[Type#13], %130.9   !
BB66   <- [132]
  val?^ | miss    %66.0 = LdVar              eR    fdef, e118.8
  val?            %66.1 = Force!<value>      !v    %66.0, e118.8   <cls>
  val?            %66.2 = PopContext         C     %66.1, %118.4   <cls>
  val?            %66.3 = PopContext         C     %66.2, %116.2
  goto BB13
BB65   <- [132]
  fs              %65.0 = FrameState         R     0x560a35d77450+1027: [], env=e0.5
  fs              %65.1 = FrameState         R     0x560a36982fd0+42: [], env=e118.0, next=%65.0
  (cls|spec|blt)  %65.2 = LdFun              !v    @, e118.8
  fs              %65.3 = FrameState         R     0x560a3614c3c0+348: [%65.2], env=e118.8, next=%65.1
  void                    Deopt              !v    %65.3, DeadCall@0x560a35f35220[Call#3], %65.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .GlobalEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sys.calls, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ .getGeneric[0x560a36aebff0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
