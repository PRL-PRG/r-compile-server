
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getMethodsTable[0x560a36e6bc90]                                             │
│ Context: CorrOrd,!TMany,Argmatch;Eager2,Eager3,NonRefl0,NonRefl2,NonRefl3,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
.getMethodsTable[0x560a36e6bc90]
BB0
  val?~+          %0.0  = LdArg                    3
  val?~ | miss    %0.1  = LdArg                    2
  val?^ | miss    %0.2  = LdArg                    1
  val?^ | miss    %0.3  = LdArg                    0
  lgl$#-          %0.4  = Identical                %0.2, missingArg
  lgl$#-          %0.5  = Identical                %0.1, missingArg
  env             e0.6  = MkEnv              l     fdef=%0.3, env=%0.2, check=%0.1, inherited=%0.0, parent=<env 0x560a342f8378>, context 1
  void                    Branch                   %0.4 -> BB2 (if true) | BB28 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p0, e0.6
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    env, %2.1, e0.6
  goto BB3
BB28   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 28]
  void                    Branch                   %0.5 -> BB27 (if true) | BB4 (if false)
BB27   <- [3]
  void                    StArg              lW    check, true, e0.6
  lgl$#-          %27.1 = true
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  val?~ | miss    %4.1  = %0.1
  goto BB5
BB5   <- [4, 27]
  val?~ | miss    %5.0  = Phi                      %27.1:BB27, %4.1:BB4
  val?~ | miss    %5.1  = %5.0
  val+            %5.2  = Force<lazy>              %0.0,    <lgl$->
  lgl$#-          %5.3  = IsType                   %5.2 isA lgl$-
  void                    Branch                   %5.3 -> BB29 (if true) | BB30 (if false)
BB29   <- [5]
  lgl$-           %29.0 = CastType           d     dn %5.2
  lgl$#-          %29.1 = CheckTrueFalse     e     %29.0
  void                    Branch                   %29.1 -> BB26 (if true) | BB8 (if false)
BB30   <- [5]
  fs              %30.0 = FrameState         R     0x560a35d80870+0: [], env=e0.6
  void                    Deopt              !v    %30.0, Typecheck@0x560a35d80bf0[Type#2], %5.2
BB26   <- [29]
  void                    Nop                !     
  str$#-          %26.1 = ".AllMTable"
  goto BB9
BB8   <- [29]
  void                    Nop                !     
  str$#-          %8.1  = ".MTable"
  goto BB9
BB9   <- [26, 8]
  str$#-          %9.0  = Phi                      %8.1:BB8, %26.1:BB26
  str$#-          %9.1  = %9.0
  void                    StVar              lW    name, %9.1, e0.6
  val?~           %9.3  = ChkMissing         e     %5.1
  void                    Visible            v     
  val?            %9.5  = Force!<lazy>             %9.3,    <lgl$->
  lgl$#-          %9.6  = IsType                   %9.5 isA lgl$-
  void                    Branch                   %9.6 -> BB31 (if true) | BB32 (if false)
BB31   <- [9]
  lgl$-           %31.0 = CastType           d     dn %9.5
  lgl$-           %31.1 = AsLogical                %31.0
  lgl$#-          %31.2 = Identical                %31.1, false
  void                    Branch                   %31.2 -> BB25 (if true) | BB12 (if false)
BB32   <- [9]
  void                    Nop                !     
  val?            %32.1 = %9.5
  dr              %32.2 = Typecheck@0x560a35d80bf0[Type#3]
  goto BB10
BB25   <- [31]
  void                    Nop                !     
  lgl$-           %25.1 = %31.1
  goto BB15
BB12   <- [31]
  val?^ | miss    %12.0 = LdVar              eR    exists, <env 0x560a342f8378>
  lgl$#-          %12.1 = Identical                %12.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %12.1 -> BB33 (if true) | BB34 (if false)
BB10   <- [32, 34]
  val?^ | miss    %10.0 = Phi                      %32.1:BB32, %34.1:BB34
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %32.2:BB32, %34.2:BB34
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x560a35d80870+46: [], env=e0.6
  void                    Deopt              !v    %10.4, %10.3, %10.1
BB15   <- [25, 35]
  lgl$-           %15.0 = Phi                      %35.4:BB35, %25.1:BB25
  lgl$-           %15.1 = %15.0
  lgl$#-          %15.2 = CheckTrueFalse     e     %15.1
  void                    Branch                   %15.2 -> BB20 (if true) | BB16 (if false)
BB33   <- [12]
  prom-           %33.0 = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p2 (!refl), e0.6
  prom-           %33.1 = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p3, e0.6
  val?            %33.2 = StaticCall         !     exists[0x560a377b2560](%33.0, missingArg, %33.1, missingArg, missingArg, false) { 0 2n 5n } e0.6   <lgl$->
  lgl$#-          %33.3 = IsType                   %33.2 isA lgl$-
  void                    Branch                   %33.3 -> BB35 (if true) | BB36 (if false)
BB34   <- [12]
  void                    Nop                !     
  val?^ | miss    %34.1 = %12.0
  dr              %34.2 = CallTarget@0x560a35d80bf0[Call#1]
  goto BB10
BB20   <- [15]
  (cls|spec|blt)  %20.0 = LdFun              !     .setupMethodsTables, e0.6
  prom-           %20.1 = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p4, e0.6
  val?            %20.2 = NamedCall          !     %20.0(%20.1, initialize=true) e0.6
  (cls|spec|blt)  %20.3 = LdFun              !     exists, e0.6
  prom-           %20.4 = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p5, e0.6
  prom-           %20.5 = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p6, e0.6
  val?            %20.6 = NamedCall          !     %20.3(%20.4, envir=%20.5, inherits=false) e0.6   <val?_>
  lgl$#-          %20.7 = IsType                   %20.6 isA val?+
  void                    Branch                   %20.7 -> BB37 (if true) | BB38 (if false)
BB16   <- [15]
  void                    Nop                !     
  goto BB17
BB35   <- [33]
  lgl$-           %35.0 = CastType           d     dn %33.2
  lgl$-           %35.1 = Not                vd    %35.0, elided
  lgl$-           %35.2 = AsLogical                %35.1
  lgl$-           %35.3 = LAnd                     %31.1, %35.2
  lgl$-           %35.4 = %35.3
  goto BB15
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x560a35d80870+121: [%31.1, %33.2], env=e0.6
  void                    Deopt              !v    %36.0, Typecheck@0x560a35d80bf0[Type#6], %33.2   !
BB37   <- [20]
  val?+           %37.0 = CastType           d     dn %20.6   <val?_>
  lgl             %37.1 = Not                vwed  %37.0, elided
  lgl$#-          %37.2 = CheckTrueFalse     we    %37.1
  void                    Branch                   %37.2 -> BB24 (if true) | BB23 (if false)
BB38   <- [20]
  fs              %38.0 = FrameState         R     0x560a35d80870+240: [%20.6], env=e0.6
  void                    Deopt              !v    %38.0, Typecheck@0x560a35d80bf0[Type#10], %20.6   !
BB17   <- [16, 24, 23]
  val?^ | miss    %17.0 = LdVar              eR    get, e0.6
  lgl$#-          %17.1 = Identical                %17.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %17.1 -> BB39 (if true) | BB40 (if false)
BB24   <- [37]
  (cls|spec|blt)  %24.0 = LdFun              !     stop, e0.6
  val?            %24.1 = Call               !     %24.0("invalid methods table request") e0.6
  goto BB17
BB23   <- [37]
  void                    Nop                !     
  goto BB17
BB39   <- [17]
  prom-           %39.0 = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p7, e0.6
  prom-           %39.1 = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p8, e0.6
  val?            %39.2 = StaticCall         !     get[0x560a362230e0](%39.0, missingArg, %39.1) { 0 2n } e0.6   <env->
  void                    Return             l     %39.2
BB40   <- [17]
  fs              %40.0 = FrameState         R     0x560a35d80870+290: [], env=e0.6
  void                    Deopt              !v    %40.0, CallTarget@0x560a35d80bf0[Call#5], %17.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     environment, <0x560a34097b68>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .getMethodsTable[0x560a36e6bc90]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .getMethodsTable[0x560a36e6bc90]                                             │
└──────────────────────────────────────────────────────────────────────────────┘
