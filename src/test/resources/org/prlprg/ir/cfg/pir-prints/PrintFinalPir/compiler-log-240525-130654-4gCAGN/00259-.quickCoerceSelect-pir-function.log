
┌──────────────────────────────────────────────────────────────────────────────┐
│ .quickCoerceSelect[0x560a374bd000]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl3                             │
│ Properties:  ForceOrd: 3                                                     │
├────── Final PIR Version
.quickCoerceSelect[0x560a374bd000]
BB0
  val?^           %0.0  = LdArg                    4
  val?^           %0.1  = LdArg                    3
  val?^           %0.2  = LdArg                    2
  val?^           %0.3  = LdArg                    1
  val?^           %0.4  = LdArg                    0
  env             e0.5  = MkEnv              l     from=%0.4, to=%0.3, fdef=%0.2, methods=%0.1, where=%0.0, parent=<env 0x560a342f8378>, context 1
  val?            %0.6  = Force!<lazy>       !vrd  %0.1,    <env->
  lgl$-           %0.7  = Is                       %0.6, NULL
  lgl$#-          %0.8  = IsType                   %0.6 isA val?-
  void                    Branch                   %0.8 -> BB16 (if true) | BB17 (if false)
BB16   <- [0]
  lgl$#-          %16.0 = CheckTrueFalse     e     %0.7
  void                    Branch                   %16.0 -> BB14 (if true) | BB3 (if false)
BB17   <- [0]
  void                    Nop                !     
  val?            %17.1 = %0.6
  dr              %17.2 = Typecheck@0x560a35d8b7e0[Type#0]
  goto BB15
BB14   <- [16]
  void                    Visible            v     
  nil-            %14.1 = nil
  goto BB12
BB3   <- [16]
  val?^ | miss    %3.0  = LdVar              eR    is.environment, <env 0x560a342f8378>
  lgl$#-          %3.1  = Identical                <blt is.environment>, %3.0   <true>
  void                    Branch                   %3.1 -> BB18 (if true) | BB19 (if false)
BB15   <- [17, 19]
  val?^ | miss    %15.0 = Phi                      %17.1:BB17, %19.1:BB19
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %17.2:BB17, %19.2:BB19
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x560a35d89e80+9: [%0.6], env=e0.5
  void                    Deopt              !v    %15.4, %15.3, %15.1
BB12   <- [14, 11]
  val?            %12.0 = Phi                      %11.2:BB11, %14.1:BB14
  val?            %12.1 = %12.0
  void                    Return             l     %12.1
BB18   <- [3]
  lgl$#-          %18.0 = CallSafeBuiltin    wed   is.environment(%0.6)    <lgl$->
  void                    Branch                   %18.0 -> BB7 (if true) | BB6 (if false)
BB19   <- [3]
  void                    Nop                !     
  lgl$#-          %19.1 = %3.1
  dr              %19.2 = DeadBranchReached@0x560a35d8b7e0[Test#0]
  goto BB15
BB7   <- [18]
  val?^ | miss    %7.0  = LdVar              eR    .findMethodInTable, <env 0x560a342f8378>
  lgl$#-          %7.1  = Identical                %7.0, function(signature, table, fdef=NULL, expdSig=|...
  void                    Branch                   %7.1 -> BB20 (if true) | BB21 (if false)
BB6   <- [18]
  (cls|spec|blt)  %6.0  = LdFun              !v    @, <env 0x560a342f8378>
  fs              %6.1  = FrameState         R     0x560a35d89e80+132: [%6.0], env=e0.5
  void                    Deopt              !v    %6.1, DeadCall@0x560a35d8b7e0[Call#1], %6.0
BB20   <- [7]
  prom-           %20.0 = MkArg                    unboundValue, .quickCoerceSelect[0x560a374bd000]_p0, e0.5
  prom-           %20.1 = MkArg                    unboundValue, .quickCoerceSelect[0x560a374bd000]_p3 (!refl), e0.5
  val?            %20.2 = StaticCall         !v    .findMethodInTable[0x560a36aec0b0](%20.0, %20.1) e0.5   <(nil|cls)>
  void                    StVar              lW    method, %20.2, e0.5
  val?^ | miss    %20.4 = LdVar              eR    is.environment, e0.5
  lgl$#-          %20.5 = Identical                <blt is.environment>, %20.4   <true>
  void                    Branch                   %20.5 -> BB22 (if true) | BB23 (if false)
BB21   <- [7]
  fs              %21.0 = FrameState         R     0x560a35d89e80+116: [%18.0], env=e0.5
  void                    Deopt              !v    %21.0, CallTarget@0x560a35d8b7e0[Call#8], %7.0
BB22   <- [20]
  val             %22.0 = ChkMissing         e     %20.2
  lgl$#-          %22.1 = CallSafeBuiltin    wed   is.environment(%20.2) 
  void                    Branch                   %22.1 -> BB13 (if true) | BB10 (if false)
BB23   <- [20]
  fs              %23.0 = FrameState         R     0x560a35d89e80+703: [], env=e0.5
  void                    Deopt              !v    %23.0, DeadBranchReached@0x560a35d8b7e0[Test#5], %20.5   !
BB13   <- [22]
  void                    Visible            v     
  nil-            %13.1 = nil
  goto BB11
BB10   <- [22]
  void                    Visible            v     
  val?            %10.1 = %20.2
  goto BB11
BB11   <- [13, 10]
  val?            %11.0 = Phi                      %10.1:BB10, %13.1:BB13
  val?            %11.1 = %11.0
  val?            %11.2 = %11.1
  goto BB12
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x560a33cf1940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .quickCoerceSelect[0x560a374bd000]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .quickCoerceSelect[0x560a374bd000]_p2, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    to, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .quickCoerceSelect[0x560a374bd000]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
