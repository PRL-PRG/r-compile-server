
┌──────────────────────────────────────────────────────────────────────────────┐
│ cacheMethod[0x560a36ac7110]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
cacheMethod[0x560a36ac7110]
BB0
  val?^           %0.0  = LdArg                    4
  val?^           %0.1  = LdArg                    3
  val?~+          %0.2  = LdArg                    2
  val?^           %0.3  = LdArg                    1
  val?^           %0.4  = LdArg                    0
  val?^ | miss    %0.5  = LdVar              eR    environment, <env 0x560a342f8378>
  lgl$#-          %0.6  = Identical                %0.5, function(fun=NULL) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %0.6 -> BB11 (if true) | BB12 (if false)
BB11   <- [0]
  env             e11.0 = MkEnv              l     f=%0.4, sig=%0.3, def=%0.2, args=%0.1, fdef=%0.0, inherited(miss)=false, parent=<env 0x560a342f8378>, context 1
  val?            %11.1 = Force!<lazy>       !v    %0.0, e11.0   <cls>
  prom-           %11.2 = MkArg                    %11.1, cacheMethod[0x560a36ac7110]_p1 (!refl), 
  val?            %11.3 = StaticCall         !v    environment[0x560a363a22b0](%11.2) e11.0   <env->
  void                    StVar              lW    ev, %11.3, e11.0
  val?^ | miss    %11.5 = LdVar              eR    .cacheMethodInTable, e11.0
  lgl$#-          %11.6 = Identical                %11.5, function(fdef, sig, def, table=get(".AllMTable|...
  void                    Branch                   %11.6 -> BB13 (if true) | BB14 (if false)
BB12   <- [0]
  env             e12.0 = (MkEnv)            l     f=%0.4, sig=%0.3, def=%0.2, args=%0.1, fdef=%0.0, inherited(miss)=false, parent=<env 0x560a342f8378>, context 1
  fs              %12.1 = FrameState         R     0x560a36354490+0: [], env=e12.0
  void                    Deopt              !v    %12.1, CallTarget@0x560a363062e0[Call#1], %0.5
BB13   <- [11]
  prom-           %13.0 = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p2, e11.0
  prom-           %13.1 = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p3, e11.0
  prom-           %13.2 = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p4, e11.0
  prom-           %13.3 = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p5, e11.0
  val?            %13.4 = StaticCall         !v    .cacheMethodInTable[0x560a37670de0](%13.0, %13.1, %13.2, %13.3) e11.0
  val?^ | miss    %13.5 = LdVar              eR    inherited, e11.0
  void                    Visible            v     
  val?            %13.7 = Force!<wrapped>    !     %13.5, e11.0   <lgl$->
  lgl$#-          %13.8 = IsType                   %13.7 isA lgl$-
  void                    Branch                   %13.8 -> BB15 (if true) | BB16 (if false)
BB14   <- [11]
  fs              %14.0 = FrameState         R     0x560a36354490+46: [], env=e11.0
  void                    Deopt              !v    %14.0, CallTarget@0x560a363062e0[Call#2], %11.5   !
BB15   <- [13]
  lgl$-           %15.0 = CastType           d     dn %13.7
  lgl$-           %15.1 = Not                vd    %15.0, elided
  lgl$#-          %15.2 = CheckTrueFalse     e     %15.1
  void                    Branch                   %15.2 -> BB9 (if true) | BB7 (if false)
BB16   <- [13]
  void                    Nop                !     
  val?            %16.1 = %13.7
  dr              %16.2 = Typecheck@0x560a363062e0[Type#11]
  goto BB5
BB9   <- [15]
  val?^ | miss    %9.0  = LdVar              eR    .cacheMethodInTable, e11.0
  lgl$#-          %9.1  = Identical                %9.0, function(fdef, sig, def, table=get(".AllMTable|...
  void                    Branch                   %9.1 -> BB17 (if true) | BB18 (if false)
BB7   <- [15]
  void                    Invisible          v     
  nil-            %7.1  = nil
  goto BB8
BB5   <- [16, 18]
  val?^ | miss    %5.0  = Phi                      %16.1:BB16, %18.1:BB18
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %16.2:BB16, %18.2:BB18
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x560a36354490+103: [%13.7], env=e11.0
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB17   <- [9]
  prom-           %17.0 = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p9, e11.0
  prom-           %17.1 = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p10, e11.0
  prom-           %17.2 = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p11, e11.0
  prom-           %17.3 = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p12, e11.0
  val?            %17.4 = StaticCall         !     .cacheMethodInTable[0x560a37670de0](%17.0, %17.1, %17.2, %17.3) e11.0   <(nil|cls)>
  val?            %17.5 = %17.4
  goto BB8
BB18   <- [9]
  void                    Nop                !     
  val?^ | miss    %18.1 = %9.0
  dr              %18.2 = CallTarget@0x560a363062e0[Call#4]
  goto BB5
BB8   <- [7, 17]
  val?            %8.0  = Phi                      %7.1:BB7, %17.5:BB17
  val?            %8.1  = %8.0
  void                    Return             l     %8.1
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|cls)>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .getMethodsTable, <0x560a35d7e2a8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p6, e0.0
  prom-           %0.3  = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p7, e0.0
  prom-           %0.4  = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p8, e0.0
  val?            %0.5  = NamedCall          !     %0.1(%0.2, %0.3, inherited=%0.4) e0.0   <env->
  void                    Return             l     %0.5
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherited, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(nil|cls)>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .getMethodsTable, <0x560a35d7e2a8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p13, e0.0
  prom-           %0.3  = MkArg                    unboundValue, cacheMethod[0x560a36ac7110]_p14, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, %0.3, inherited=true) e0.0   <env->
  void                    Return             l     %0.4
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ cacheMethod[0x560a36ac7110]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
