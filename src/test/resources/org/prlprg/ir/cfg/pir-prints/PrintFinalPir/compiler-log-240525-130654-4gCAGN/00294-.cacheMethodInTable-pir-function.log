
┌──────────────────────────────────────────────────────────────────────────────┐
│ .cacheMethodInTable[0x560a37670de0]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
.cacheMethodInTable[0x560a37670de0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    environment, <env 0x560a342f8378>
  lgl$#-          %0.5  = Identical                %0.4, function(fun=NULL) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %0.5 -> BB36 (if true) | BB37 (if false)
BB36   <- [0]
  env             e36.0 = MkEnv              l     fdef=%0.3, sig=%0.2, def=%0.1, table=%0.0, parent=<env 0x560a342f8378>, context 1
  val?            %36.1 = Force!<lazy>       !v    %0.3, e36.0   <cls>
  prom-           %36.2 = MkArg                    %36.1, .cacheMethodInTable[0x560a37670de0]_p0 (!refl), 
  val?            %36.3 = StaticCall         !v    environment[0x560a363a22b0](%36.2) e36.0   <env->
  void                    StVar              lW    fenv, %36.3, e36.0
  lgl$-           %36.5 = Missing            eR    table, e36.0
  lgl$-           %36.6 = AsLogical                %36.5
  lgl$#-          %36.7 = Identical                %36.6, false
  void                    Branch                   %36.7 -> BB34 (if true) | BB5 (if false)
BB37   <- [0]
  env             e37.0 = (MkEnv)            l     fdef=%0.3, sig=%0.2, def=%0.1, table=%0.0, parent=<env 0x560a342f8378>, context 1
  fs              %37.1 = FrameState         R     0x560a3656fb80+0: [], env=e37.0
  void                    Deopt              !v    %37.1, CallTarget@0x560a365c06a0[Call#1], %0.4
BB34   <- [36]
  void                    Nop                !     
  lgl$-           %34.1 = %36.6
  goto BB8
BB5   <- [36]
  val?^ | miss    %5.0  = LdVar              eR    exists, e36.0
  lgl$#-          %5.1  = Identical                %5.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %5.1 -> BB38 (if true) | BB39 (if false)
BB8   <- [34, 42]
  lgl$-           %8.0  = Phi                      %42.4:BB42, %34.1:BB34
  lgl$-           %8.1  = %8.0
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1
  void                    Branch                   %8.2 -> BB33 (if true) | BB11 (if false)
BB38   <- [5]
  prom-           %38.0 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p1 (!refl), e36.0
  val?            %38.1 = StaticCall         !v    exists[0x560a372c54a0](".AllMTable", missingArg, %38.0, missingArg, missingArg, false) { 0 2n 5n } e36.0   <lgl$->
  lgl$#-          %38.2 = IsType                   %38.1 isA lgl$-
  void                    Branch                   %38.2 -> BB42 (if true) | BB43 (if false)
BB39   <- [5]
  fs              %39.0 = FrameState         R     0x560a3656fb80+46: [], env=e36.0
  void                    Deopt              !v    %39.0, CallTarget@0x560a365c06a0[Call#2], %5.0   !
BB33   <- [8]
  (cls|spec|blt)  %33.0 = LdFun              !v    .setupMethodsTables, e36.0
  fs              %33.1 = FrameState         R     0x560a3656fb80+137: [%33.0], env=e36.0
  void                    Deopt              !v    %33.1, DeadCall@0x560a365c06a0[Call#3], %33.0   !
BB11   <- [8]
  val?^ | miss    %11.0 = LdVar              eR    .matchSigLength, e36.0
  lgl$#-          %11.1 = Identical                %11.0, function(sig, fdef, fenv, reset=FALSE) <(rir::|...
  void                    Branch                   %11.1 -> BB40 (if true) | BB41 (if false)
BB42   <- [38]
  lgl$-           %42.0 = CastType           d     dn %38.1
  lgl$-           %42.1 = Not                d     %42.0, elided
  lgl$-           %42.2 = AsLogical                %42.1
  lgl$-           %42.3 = LAnd                     %36.6, %42.2
  lgl$-           %42.4 = %42.3
  goto BB8
BB43   <- [38]
  fs              %43.0 = FrameState         R     0x560a3656fb80+113: [%36.6, %38.1], env=e36.0
  void                    Deopt              !v    %43.0, Typecheck@0x560a365c06a0[Type#5], %38.1   !
BB40   <- [11]
  prom-           %40.0 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p2, e36.0
  prom-           %40.1 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p3, e36.0
  prom-           %40.2 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p4, e36.0
  val?            %40.3 = StaticCall         !v    .matchSigLength[0x560a36ef5200](%40.0, %40.1, %40.2, true) e36.0   <str+>
  void                    StVar              lW    sig, %40.3, e36.0
  val?^ | miss    %40.5 = LdVar              eR    .sigLabel, e36.0
  lgl$#-          %40.6 = Identical                %40.5, function(sig) <(rir::DispatchTable*)0x560a35d9|...
  void                    Branch                   %40.6 -> BB44 (if true) | BB45 (if false)
BB41   <- [11]
  fs              %41.0 = FrameState         R     0x560a3656fb80+121: [%8.1], env=e36.0
  void                    Deopt              !v    %41.0, CallTarget@0x560a365c06a0[Call#4], %11.0   !
BB44   <- [40]
  prom-           %44.0 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p5 (!refl), e36.0
  val?^           %44.1 = CastType                 up %44.0
  val?^ | miss    %44.2 = LdVar              eR    paste, <env 0x560a342f8378>
  lgl$#-          %44.3 = Identical                %44.2, function(..., sep=" ", collapse=NULL, recycle0|...
  void                    Branch                   %44.3 -> BB46 (if true) | BB47 (if false)
BB45   <- [40]
  void                    Nop                !     
  val?^ | miss    %45.1 = %40.5
  dr              %45.2 = CallTarget@0x560a365c06a0[Call#5]
  goto BB12
BB46   <- [44]
  env             e46.0 = MkEnv              l     sig=%44.1, parent=<env 0x560a342f8378>, context 0
  prom-           %46.1 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p18, e46.0
  dots-           %46.2 = DotsList           l     %46.1
  val?^ | miss    %46.3 = CastType                 up %46.1
  env             e46.4 = MkEnv              l     ...=%46.2, sep(miss)=" ", collapse="#", recycle0(miss)=false, parent=R_BaseNamespace, context -1
  val?            %46.5 = Force!             !vL   %46.3, e46.4
  val+            %46.6 = CallSafeBuiltin    wed   list(%46.5)    <vec->
  val+            %46.7 = CallSafeBuiltin    wed   paste(%46.6, " ", "#", false)    <str$->
  void                    StVar              lW    label, %46.7, e36.0
  val?^ | miss    %46.9 = LdVar              eR    exists, e36.0
  lgl$#-          %46.10 = Identical                %46.9, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %46.10 -> BB48 (if true) | BB49 (if false)
BB47   <- [44]
  void                    Nop                !     
  val?^ | miss    %47.1 = %44.2
  dr              %47.2 = CallTarget@0x560a350db6d8[Call#0]
  goto BB12
BB12   <- [45, 47]
  val?^ | miss    %12.0 = Phi                      %45.1:BB45, %47.1:BB47
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %45.2:BB45, %47.2:BB47
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x560a3656fb80+226: [], env=e36.0
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB48   <- [46]
  prom-           %48.0 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p6 (!refl), e36.0
  prom-           %48.1 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p7, e36.0
  val?            %48.2 = StaticCall         !v    exists[0x560a36eb6620](%48.0, missingArg, %48.1, missingArg, missingArg, false) { 0 2n 5n } e36.0   <lgl$->
  lgl$#-          %48.3 = IsType                   %48.2 isA lgl$-
  void                    Branch                   %48.3 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  fs              %49.0 = FrameState         R     0x560a3656fb80+272: [], env=e36.0
  void                    Deopt              !v    %49.0, CallTarget@0x560a365c06a0[Call#6], %46.9   !
BB50   <- [48]
  lgl$-           %50.0 = CastType           d     dn %48.2
  void                    StVar              lW    isCurrent, %50.0, e36.0
  val?^ | miss    %50.2 = LdVar              eR    def, e36.0
  val?            %50.3 = Force!<lazy>       !v    %50.2, e36.0   <(nil|cls)>
  lgl$-           %50.4 = Is                       %50.3, NULL
  lgl$#-          %50.5 = CheckTrueFalse     e     %50.4
  void                    Branch                   %50.5 -> BB30 (if true) | BB20 (if false)
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x560a3656fb80+326: [%48.2], env=e36.0
  void                    Deopt              !v    %51.0, Typecheck@0x560a365c06a0[Type#15], %48.2   !
BB30   <- [50]
  val?^ | miss    %30.0 = LdVar              eR    isCurrent, e36.0
  lgl$#-          %30.1 = IsType                   %30.0 isA lgl$-
  void                    Branch                   %30.1 -> BB52 (if true) | BB53 (if false)
BB20   <- [50]
  val?^ | miss    %20.0 = LdVar              eR    .duplicateClassesExist, e36.0
  lgl$#-          %20.1 = Identical                %20.0, function(on) <(rir::DispatchTable*)0x560a35e81|...
  void                    Branch                   %20.1 -> BB54 (if true) | BB55 (if false)
BB52   <- [30]
  lgl$-           %52.0 = CastType           d     dn %30.0
  void                    Visible            v     
  lgl$#-          %52.2 = CheckTrueFalse     e     %52.0
  void                    Branch                   %52.2 -> BB32 (if true) | BB31 (if false)
BB53   <- [30]
  void                    Nop                !     
  val?^ | miss    %53.1 = %30.0
  dr              %53.2 = Typecheck@0x560a365c06a0[Type#28]
  goto BB18
BB54   <- [20]
  val?            %54.0 = StaticCall         !v    .duplicateClassesExist[0x560a360b8e40]() e36.0   <lgl$->
  lgl$#-          %54.1 = IsType                   %54.0 isA lgl$-
  void                    Branch                   %54.1 -> BB56 (if true) | BB57 (if false)
BB55   <- [20]
  void                    Nop                !     
  val?^ | miss    %55.1 = %20.0
  dr              %55.2 = CallTarget@0x560a365c06a0[Call#7]
  goto BB18
BB32   <- [52]
  val?^ | miss    %32.0 = LdVar              eR    remove, e36.0
  lgl$#-          %32.1 = Identical                %32.0, function(..., list=character(), pos=-(1), envi|...
  void                    Branch                   %32.1 -> BB58 (if true) | BB59 (if false)
BB31   <- [52]
  void                    Invisible          v     
  nil-            %31.1 = nil
  goto BB28
BB18   <- [53, 55, 59]
  val?^ | miss    %18.0 = Phi                      %53.1:BB53, %55.1:BB55, %59.1:BB59
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %53.2:BB53, %55.2:BB55, %59.2:BB59
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x560a3656fb80+349: [%50.3], env=e36.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB56   <- [54]
  lgl$-           %56.0 = CastType           d     dn %54.0
  void                    StVar              lW    dupl, %56.0, e36.0
  val?^ | miss    %56.2 = LdVar              eR    .methodPackageSlots, e36.0
  lgl$#-          %56.3 = Identical                %56.2, function(def, label, table, duplicatesExist, i|...
  void                    Branch                   %56.3 -> BB60 (if true) | BB61 (if false)
BB57   <- [54]
  fs              %57.0 = FrameState         R     0x560a3656fb80+392: [%54.0], env=e36.0
  void                    Deopt              !v    %57.0, Typecheck@0x560a365c06a0[Type#17], %54.0   !
BB58   <- [32]
  prom-           %58.0 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p16, e36.0
  prom-           %58.1 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p17, e36.0
  val?            %58.2 = StaticCall         !     remove[0x560a36af9430](missingArg, %58.0, missingArg, %58.1) { 1n 3n } e36.0   <nil->
  val?            %58.3 = %58.2
  goto BB28
BB59   <- [32]
  void                    Nop                !     
  val?^ | miss    %59.1 = %32.0
  dr              %59.2 = CallTarget@0x560a365c06a0[Call#10]
  goto BB18
BB28   <- [31, 58, 62]
  val?            %28.0 = Phi                      %62.4:BB62, %31.1:BB31, %58.3:BB58
  val?            %28.1 = %28.0
  void                    Return             l     %28.1
BB60   <- [56]
  prom-           %60.0 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p8, e36.0
  prom-           %60.1 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p9, e36.0
  prom-           %60.2 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p10, e36.0
  prom-           %60.3 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p11 (!refl), e36.0
  prom-           %60.4 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p12, e36.0
  ct              %60.5 = PushContext        lCL   %60.0, %60.1, %60.2, %60.3, %60.4, .methodPackageSlots(def, label, table, dupl, i|..., function(def, label, table, duplicatesExist, i|..., e36.0
  val?^           %60.6 = CastType                 up %60.4
  val?^           %60.7 = CastType                 up %60.3
  val?^           %60.8 = CastType                 up %60.2
  val?^           %60.9 = CastType                 up %60.1
  val?^           %60.10 = CastType                 up %60.0
  env             e60.11 = MkEnv              l     def=%60.10, label=%60.9, table=%60.8, duplicatesExist=%60.7, isCurrent=%60.6, parent=<env 0x560a342f8378>, context 1
  (cls|spec|blt)  %60.12 = LdFun              !v    @, <0x560a33cf0bd8>, <env 0x560a342f8378>
  prom-           %60.13 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p22, e60.11
  prom-           %60.14 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p23, e60.11
  val?            %60.15 = Call               !v    %60.12(%60.13, %60.14) e60.11   <str>
  void                    StVar              lW    sig, %60.15, e60.11
  void                    StVar              lW    dups, false, e60.11
  val?^ | miss    %60.18 = LdVar              eR    duplicatesExist, e60.11
  val?            %60.19 = Force!<lazy>       !v    %60.18, e60.11   <lgl$->
  lgl$#-          %60.20 = CheckTrueFalse     we    %60.19
  void                    Branch                   %60.20 -> BB29 (if true) | BB25 (if false)
BB61   <- [56]
  fs              %61.0 = FrameState         R     0x560a3656fb80+406: [], env=e36.0
  void                    Deopt              !v    %61.0, CallTarget@0x560a365c06a0[Call#8], %56.2   !
BB29   <- [60]
  fs              %29.0 = FrameState         R     0x560a3656fb80+458: [], env=e36.0
  (cls|spec|blt)  %29.1 = LdFun              !v    .fixPackageSlot, e60.11
  fs              %29.2 = FrameState         R     0x560a364d83f0+110: [%29.1], env=e60.11, next=%29.0
  void                    Deopt              !v    %29.2, DeadCall@0x560a36119750[Call#1], %29.1   !
BB25   <- [60]
  val?^ | miss    %25.0 = LdVar              eR    def, e60.11
  void                    Visible            v     
  val?            %25.2 = Force!<wrapped>    !     %25.0, e60.11   <cls>
  val?            %25.3 = PopContext         C     %25.2, %60.5   <cls>
  void                    StVar              lW    def, %25.3, e36.0
  val?^ | miss    %25.5 = LdVar              eR    assign, e36.0
  lgl$#-          %25.6 = Identical                %25.5, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %25.6 -> BB62 (if true) | BB63 (if false)
BB62   <- [25]
  prom-           %62.0 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p13, e36.0
  prom-           %62.1 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p14 (!refl), e36.0
  prom-           %62.2 = MkArg                    unboundValue, .cacheMethodInTable[0x560a37670de0]_p15, e36.0
  val?            %62.3 = StaticCall         !     assign[0x560a36223ec0](%62.0, %62.1, missingArg, %62.2) { 0 1 3n } e36.0   <cls>
  val?            %62.4 = %62.3
  goto BB28
BB63   <- [25]
  fs              %63.0 = FrameState         R     0x560a3656fb80+472: [], env=e36.0
  void                    Deopt              !v    %63.0, CallTarget@0x560a365c06a0[Call#9], %25.5   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dupl, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isCurrent, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|vec)+>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    target, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ .cacheMethodInTable[0x560a37670de0]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
