
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGeneric[0x560a3743f8d0]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3               │
│ Properties:                                                                  │
├────── Final PIR Version
getGeneric[0x560a3743f8d0]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.function, <env 0x560a342f8378>
  lgl$#-          %0.2  = Identical                <blt is.function>, %0.1   <true>
  void                    Branch                   %0.2 -> BB49 (if true) | BB50 (if false)
BB49   <- [0]
  env             e49.0 = MkEnv              l     f=%0.0, mustFind(miss)=false, where(miss)=missingArg, package(miss)="", parent=<env 0x560a342f8378>, context 1
  val+            %49.1 = Force!<lazy>       !vr   %0.0,    <str$->
  lgl$#-          %49.2 = CallSafeBuiltin    wed   is.function(%49.1)    <lgl$->
  void                    Branch                   %49.2 -> BB47 (if true) | BB5 (if false)
BB50   <- [0]
  env             e50.0 = (MkEnv)            l     f=%0.0, mustFind(miss)=false, where(miss)=missingArg, package(miss)="", parent=<env 0x560a342f8378>, context 1
  fs              %50.1 = FrameState         R     0x560a35d75990+0: [], env=e50.0
  void                    Deopt              !v    %50.1, DeadBranchReached@0x560a35d78c90[Test#0], %0.2
BB47   <- [49]
  (cls|spec|blt)  %47.0 = LdFun              !v    is, <env 0x560a342f8378>
  fs              %47.1 = FrameState         R     0x560a35d75990+112: [%47.0], env=e49.0
  void                    Deopt              !v    %47.1, DeadCall@0x560a35d78c90[Call#1], %47.0
BB5   <- [49]
  val?^ | miss    %5.0  = LdVar              eR    .getGeneric, <env 0x560a342f8378>
  lgl$#-          %5.1  = Identical                %5.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %5.1 -> BB51 (if true) | BB52 (if false)
BB51   <- [5]
  prom-           %51.0 = MkArg                    unboundValue, getGeneric[0x560a3743f8d0]_p6 (!refl), e49.0
  prom-           %51.1 = MkArg                    unboundValue, getGeneric[0x560a3743f8d0]_p7 (!refl), e49.0
  val?            %51.2 = StaticCall         !v    .getGeneric[0x560a36806550](%51.0, missingArg, %51.1) e49.0   <cls>
  lgl$-           %51.3 = Is                       %51.2, NULL
  lgl$-           %51.4 = AsLogical                %51.3
  lgl$#-          %51.5 = Identical                %51.4, false
  void                    StVar              lW    value, %51.2, e49.0
  val             %51.7 = ChkMissing         e     %51.2
  void                    Branch                   %51.5 -> BB46 (if true) | BB6 (if false)
BB52   <- [5]
  fs              %52.0 = FrameState         R     0x560a35d75990+91: [%49.2], env=e49.0
  void                    Deopt              !v    %52.0, CallTarget@0x560a35d78c90[Call#7], %5.0
BB46   <- [51]
  void                    Nop                !     
  lgl$-           %46.1 = %51.4
  goto BB11
BB6   <- [51]
  val?^ | miss    %6.0  = LdVar              eR    baseenv, e49.0
  lgl$#-          %6.1  = Identical                <blt baseenv>, %6.0   <@?>
  void                    Branch                   %6.1 -> BB8 (if true) | BB7 (if false)
BB11   <- [46, 10]
  lgl$-           %11.0 = Phi                      %10.8:BB10, %46.1:BB46
  lgl$-           %11.1 = %11.0
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB38 (if true) | BB12 (if false)
BB8   <- [6]
  val?            %8.0  = CallBuiltin        !v    baseenv() e49.0   <val?_>
  lgl$#-          %8.1  = IsType                   %8.0 isA val+   <@?>
  void                    Branch                   %8.1 -> BB45 (if true) | BB9 (if false)
BB7   <- [6]
  (cls|spec|blt)  %7.0  = LdFun              !v    baseenv, e49.0
  fs              %7.1  = FrameState         R     0x560a35d75990+481: [%51.4, %7.0], env=e49.0
  void                    Deopt              !v    %7.1, DeadCall@0x560a35d78c90[Call#8], %7.0   !
BB38   <- [11]
  val?^ | miss    %38.0 = LdVar              eR    is.function, e49.0
  lgl$#-          %38.1 = Identical                <blt is.function>, %38.0   <@?>
  void                    Branch                   %38.1 -> BB40 (if true) | BB39 (if false)
BB12   <- [11]
  void                    Nop                !     
  goto BB13
BB45   <- [8]
  val?^ | miss    %45.0 = LdVar              eR    f, e49.0
  val?            %45.1 = Force!             !v    %45.0, e49.0   <val?_>
  val?            %45.2 = %45.1
  goto BB10
BB9   <- [8]
  prom-           %9.0  = MkArg                    unboundValue, getGeneric[0x560a3743f8d0]_p5, e49.0
  prom-           %9.1  = %9.0
  goto BB10
BB40   <- [38]
  val?^ | miss    %40.0 = LdVar              eR    baseDef, e49.0
  val?            %40.1 = Force!             !v    %40.0, e49.0   <val?_>
  lgl$#-          %40.2 = IsType                   %40.1 isA val?+
  void                    Branch                   %40.2 -> BB53 (if true) | BB54 (if false)
BB39   <- [38]
  (cls|spec|blt)  %39.0 = LdFun              !v    is.function, e49.0
  fs              %39.1 = FrameState         R     0x560a35d75990+640: [%39.0], env=e49.0
  void                    Deopt              !v    %39.1, DeadCall@0x560a35d78c90[Call#9], %39.0   !
BB13   <- [12, 43]
  val?^ | miss    %13.0 = LdVar              eR    is.function, e49.0
  lgl$#-          %13.1 = Identical                <blt is.function>, %13.0   <true>
  void                    Branch                   %13.1 -> BB55 (if true) | BB56 (if false)
BB10   <- [9, 45]
  val?            %10.0 = Phi                      %45.2:BB45, %9.1:BB9
  val?            %10.1 = %10.0
  val?            %10.2 = Extract2_1D        !v    %8.0, %10.1, e49.0   <val?_>
  lgl$-           %10.3 = Is                       %10.2, NULL
  void                    StVar              lW    baseDef, %10.2, e49.0
  lgl$-           %10.5 = Not                d     %10.3, elided
  lgl$-           %10.6 = AsLogical                %10.5
  lgl$-           %10.7 = LAnd                     %51.4, %10.6
  lgl$-           %10.8 = %10.7
  goto BB11
BB53   <- [40]
  val?+           %53.0 = CastType           d     dn %40.1   <val?_>
  lgl$#-          %53.1 = CallSafeBuiltin    wed   is.function(%53.0)    <val?_>
  void                    Branch                   %53.1 -> BB44 (if true) | BB43 (if false)
BB54   <- [40]
  fs              %54.0 = FrameState         R     0x560a35d75990+681: [<blt is.function>, %40.1], env=e49.0
  void                    Deopt              !v    %54.0, Typecheck@0x560a35d78c90[Type#25], %40.1   !
BB55   <- [13]
  val?^ | miss    %55.0 = LdVar              eR    value, e49.0
  val?            %55.1 = Force!<value>      !v    %55.0, e49.0   <cls>
  val?            %55.2 = CallBuiltin        !v    is.function(%55.1) e49.0   <lgl$->
  lgl$#-          %55.3 = IsType                   %55.2 isA lgl$-
  void                    Branch                   %55.3 -> BB57 (if true) | BB58 (if false)
BB56   <- [13]
  fs              %56.0 = FrameState         R     0x560a35d75990+882: [], env=e49.0
  void                    Deopt              !v    %56.0, DeadBranchReached@0x560a35d78c90[Test#4], %13.1   !
BB44   <- [53]
  (cls|spec|blt)  %44.0 = LdFun              !v    genericForBasic, e49.0
  fs              %44.1 = FrameState         R     0x560a35d75990+724: [%44.0], env=e49.0
  void                    Deopt              !v    %44.1, DeadCall@0x560a35d78c90[Call#10], %44.0   !
BB43   <- [53]
  void                    Nop                !     
  goto BB13
BB57   <- [55]
  lgl$-           %57.0 = CastType           d     dn %55.2
  lgl$#-          %57.1 = CheckTrueFalse     e     %57.0
  void                    Branch                   %57.1 -> BB37 (if true) | BB18 (if false)
BB58   <- [55]
  fs              %58.0 = FrameState         R     0x560a35d75990+973: [%55.2], env=e49.0
  void                    Deopt              !v    %58.0, Typecheck@0x560a35d78c90[Type#36], %55.2   !
BB37   <- [57]
  val?^ | miss    %37.0 = LdVar              eR    value, e49.0
  void                    Visible            v     
  val?            %37.2 = Force!<value>      !     %37.0, e49.0   <cls>
  val?            %37.3 = %37.2
  goto BB33
BB18   <- [57]
  val?^ | miss    %18.0 = LdVar              eR    nzchar, e49.0
  lgl$#-          %18.1 = Identical                <blt nzchar>, %18.0   <@?>
  void                    Branch                   %18.1 -> BB20 (if true) | BB19 (if false)
BB33   <- [37, 32]
  val?            %33.0 = Phi                      %32.2:BB32, %37.3:BB37
  val?            %33.1 = %33.0
  void                    Return             l     %33.1
BB20   <- [18]
  val?^ | miss    %20.0 = LdVar              eR    package, e49.0
  val?            %20.1 = Force!             !v    %20.0, e49.0   <val?_>
  val?            %20.2 = CallBuiltin        !v    nzchar(%20.1) e49.0   <val?_>
  lgl$-           %20.3 = AsLogical          e     %20.2
  lgl$#-          %20.4 = Identical                %20.3, false
  void                    Branch                   %20.4 -> BB24 (if true) | BB21 (if false)
BB19   <- [18]
  (cls|spec|blt)  %19.0 = LdFun              !v    nzchar, e49.0
  fs              %19.1 = FrameState         R     0x560a35d75990+1012: [%19.0], env=e49.0
  void                    Deopt              !v    %19.1, DeadCall@0x560a35d78c90[Call#14], %19.0   !
BB24   <- [20]
  lgl$#-          %24.0 = CheckTrueFalse     e     %20.3
  void                    Branch                   %24.0 -> BB36 (if true) | BB25 (if false)
BB21   <- [20]
  val?^ | miss    %21.0 = LdVar              eR    is.na, e49.0
  lgl$#-          %21.1 = Identical                <blt is.na>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB36   <- [24]
  (cls|spec|blt)  %36.0 = LdFun              !v    tryCatch, e49.0
  fs              %36.1 = FrameState         R     0x560a35d75990+1229: [%36.0], env=e49.0
  void                    Deopt              !v    %36.1, DeadCall@0x560a35d78c90[Call#20], %36.0   !
BB25   <- [24]
  val?^ | miss    %25.0 = LdVar              eR    is.function, e49.0
  lgl$#-          %25.1 = Identical                <blt is.function>, %25.0   <@?>
  void                    Branch                   %25.1 -> BB27 (if true) | BB26 (if false)
BB23   <- [21]
  (cls|spec|blt)  %23.0 = LdFun              !v    match, e49.0
  fs              %23.1 = FrameState         R     0x560a35d75990+1152: [%20.3, <blt is.na>, %23.0], env=e49.0
  void                    Deopt              !v    %23.1, DeadCall@0x560a35d78c90[Call#18], %23.0   !
BB22   <- [21]
  (cls|spec|blt)  %22.0 = LdFun              !v    is.na, e49.0
  fs              %22.1 = FrameState         R     0x560a35d75990+1115: [%20.3, %22.0], env=e49.0
  void                    Deopt              !v    %22.1, DeadCall@0x560a35d78c90[Call#15], %22.0   !
BB27   <- [25]
  val?^ | miss    %27.0 = LdVar              eR    value, e49.0
  val?            %27.1 = Force!             !v    %27.0, e49.0   <val?_>
  lgl$#-          %27.2 = IsType                   %27.1 isA val?+
  void                    Branch                   %27.2 -> BB59 (if true) | BB60 (if false)
BB26   <- [25]
  (cls|spec|blt)  %26.0 = LdFun              !v    is.function, e49.0
  fs              %26.1 = FrameState         R     0x560a35d75990+1311: [%26.0], env=e49.0
  void                    Deopt              !v    %26.1, DeadCall@0x560a35d78c90[Call#23], %26.0   !
BB59   <- [27]
  val?+           %59.0 = CastType           d     dn %27.1   <val?_>
  lgl$#-          %59.1 = CallSafeBuiltin    wed   is.function(%59.0)    <val?_>
  void                    Branch                   %59.1 -> BB35 (if true) | BB30 (if false)
BB60   <- [27]
  fs              %60.0 = FrameState         R     0x560a35d75990+1352: [<blt is.function>, %27.1], env=e49.0
  void                    Deopt              !v    %60.0, Typecheck@0x560a35d78c90[Type#55], %27.1   !
BB35   <- [59]
  val?^ | miss    %35.0 = LdVar              eR    value, e49.0
  void                    Visible            v     
  val?            %35.2 = Force!             !     %35.0, e49.0   <val?_>
  val?            %35.3 = %35.2
  goto BB32
BB30   <- [59]
  val?^ | miss    %30.0 = LdVar              eR    mustFind, e49.0
  val?            %30.1 = Force!             !v    %30.0, e49.0   <val?_>
  lgl$#-          %30.2 = CheckTrueFalse     we    %30.1
  void                    Branch                   %30.2 -> BB34 (if true) | BB31 (if false)
BB32   <- [35, 31]
  val?            %32.0 = Phi                      %31.1:BB31, %35.3:BB35
  val?            %32.1 = %32.0
  val?            %32.2 = %32.1
  goto BB33
BB34   <- [30]
  (cls|spec|blt)  %34.0 = LdFun              !v    stop, e49.0
  fs              %34.1 = FrameState         R     0x560a35d75990+1421: [%34.0], env=e49.0
  void                    Deopt              !v    %34.1, DeadCall@0x560a35d78c90[Call#24], %34.0   !
BB31   <- [30]
  void                    Visible            v     
  nil-            %31.1 = nil
  goto BB32
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3

│ getGeneric[0x560a3743f8d0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
