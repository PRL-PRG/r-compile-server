
┌──────────────────────────────────────────────────────────────────────────────┐
│ validObject[0x560a36b71960]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
validObject[0x560a36b71960]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, test(miss)=false, complete(miss)=false, parent=<env 0x560a342f8378>, context 1
  cls             %0.2  = MkCls                    validObject>anyStrings@197, e0.1
  val?^ | miss    %0.3  = LdVar              eR    class, <env 0x560a342f8378>
  lgl$#-          %0.4  = Identical                <blt class>, %0.3   <true>
  void                    Branch                   %0.4 -> BB280 (if true) | BB281 (if false)
BB280   <- [0]
  val?            %280.0 = Force!<lazy>       !vr   %0.0,    <(cls|other)>
  val?            %280.1 = CallBuiltin        !v    class(%280.0) e0.1   <str$+>
  void                    StVar              lW    Class, %280.1, e0.1
  val?^ | miss    %280.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %280.4 = Identical                %280.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %280.4 -> BB282 (if true) | BB283 (if false)
BB281   <- [0]
  fs              %281.0 = FrameState         R     0x560a364b2230+0: [], env=e0.1
  void                    Deopt              !v    %281.0, DeadBranchReached@0x560a360588f0[Test#0], %0.4
BB282   <- [280]
  prom-           %282.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p2 (!refl), e0.1
  val?            %282.1 = StaticCall         !v    getClassDef[0x560a37656da0](%282.0) e0.1   <other>
  void                    StVar              lW    classDef, %282.1, e0.1
  val?^ | miss    %282.3 = LdVar              eR    .classEnv, e0.1
  lgl$#-          %282.4 = Identical                %282.3, function(Class, default=.requirePackage("metho|...
  void                    Branch                   %282.4 -> BB284 (if true) | BB285 (if false)
BB283   <- [280]
  fs              %283.0 = FrameState         R     0x560a364b2230+105: [], env=e0.1
  void                    Deopt              !v    %283.0, CallTarget@0x560a360588f0[Call#1], %280.3   !
BB284   <- [282]
  prom-           %284.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p3 (!refl), e0.1
  ct              %284.1 = PushContext        lCL   %284.0, .classEnv(classDef), function(Class, default=.requirePackage("metho|..., e0.1
  val?^           %284.2 = CastType                 up %284.0
  env             e284.3 = MkEnv              l     Class=%284.2, default(miss)=missingArg, mustFind(miss)=missingArg, parent=<env 0x560a342f8378>, context 1
  prom-           %284.4 = MkArg                    unboundValue, validObject[0x560a36b71960]_p94, e284.3
  val?^ | miss    %284.5 = CastType                 up %284.4
  void                    StArg              lW    default, %284.5, e284.3
  void                    StArg              lW    mustFind, true, e284.3
  val?^ | miss    %284.8 = LdVar              eR    is.character, <env 0x560a342f8378>
  lgl$#-          %284.9 = Identical                <blt is.character>, %284.8   <true>
  void                    Branch                   %284.9 -> BB286 (if true) | BB287 (if false)
BB285   <- [282]
  fs              %285.0 = FrameState         R     0x560a364b2230+151: [], env=e0.1
  void                    Deopt              !v    %285.0, CallTarget@0x560a360588f0[Call#2], %282.3   !
BB286   <- [284]
  lgl$#-          %286.0 = CallSafeBuiltin    wed   is.character(%282.1)    <lgl$->
  void                    Branch                   %286.0 -> BB276 (if true) | BB11 (if false)
BB287   <- [284]
  fs              %287.0 = FrameState         R     0x560a364b2230+183: [], env=e0.1
  fs              %287.1 = FrameState         R     0x560a35d65060+0: [], env=e284.3, next=%287.0
  void                    Deopt              !v    %287.1, DeadBranchReached@0x560a35d03630[Test#0], %284.9   !
BB276   <- [286]
  val?^ | miss    %276.0 = LdVar              eR    packageSlot, <env 0x560a342f8378>
  lgl$#-          %276.1 = Identical                %276.0, function(object) <(rir::DispatchTable*)0x560a3|...
  void                    Branch                   %276.1 -> BB288 (if true) | BB289 (if false)
BB11   <- [286]
  (cls|spec|blt)  %11.0 = LdFun              !v    @, <0x560a33cf0bd8>, <env 0x560a342f8378>
  prom-           %11.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p96, e284.3
  prom-           %11.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p97, e284.3
  val?            %11.3 = Call               !v    %11.0(%11.1, %11.2) e284.3   <str$->
  val?            %11.4 = %11.3
  goto BB12
BB288   <- [276]
  prom-           %288.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p95, e284.3
  ct              %288.1 = PushContext        lCL   %288.0, packageSlot(Class), function(object) <(rir::DispatchTable*)0x560a3|..., e284.3
  val?^           %288.2 = CastType                 up %288.0
  val?^ | miss    %288.3 = LdVar              eR    attr, <env 0x560a342f8378>
  lgl$#-          %288.4 = Identical                <blt attr>, %288.3   <true>
  void                    Branch                   %288.4 -> BB292 (if true) | BB293 (if false)
BB289   <- [276]
  fs              %289.0 = FrameState         R     0x560a364b2230+183: [], env=e0.1
  fs              %289.1 = FrameState         R     0x560a35d65060+91: [%286.0], env=e284.3, next=%289.0
  void                    Deopt              !v    %289.1, CallTarget@0x560a35d03630[Call#3], %276.0   !
BB12   <- [11, 292]
  val?            %12.0 = Phi                      %11.4:BB11, %292.3:BB292   <(nil|str)->
  val?            %12.1 = %12.0
  lgl$-           %12.2 = Is                       %12.1, NULL
  void                    StVar              lW    package, %12.1, e284.3
  val             %12.4 = ChkMissing         e     %12.1
  lgl$#-          %12.5 = CheckTrueFalse     e     %12.2
  void                    Branch                   %12.5 -> BB264 (if true) | BB15 (if false)
BB292   <- [288]
  env             e292.0 = MkEnv              l     object=%288.2, parent=<env 0x560a342f8378>, context 1
  val?            %292.1 = CallBuiltin        !v    attr(%282.1, "package") e292.0   <(nil|str)->
  val?            %292.2 = PopContext         C     %292.1, %288.1   <(nil|str)->
  val?            %292.3 = %292.2
  goto BB12
BB293   <- [288]
  fs              %293.0 = FrameState         R     0x560a364b2230+183: [], env=e0.1
  fs              %293.1 = FrameState         R     0x560a35d65060+181: [], env=e284.3, next=%293.0
  env             e293.2 = (MkEnv)            l     object=%288.2, parent=<env 0x560a342f8378>, context 1
  fs              %293.3 = FrameState         R     0x560a35d65640+17: [<blt attr>, %288.4], env=e293.2, next=%293.1
  void                    Deopt              !v    %293.3, DeadBranchReached@0x560a350d9f78[Test#0], %288.4   !
BB264   <- [12]
  val?^ | miss    %264.0 = LdVar              eR    default, e284.3
  val?            %264.1 = Force!<lazy>       !v    %264.0, e284.3   <env->
  void                    StVar              lW    value, %264.1, e284.3
  val?^ | miss    %264.3 = LdVar              eR    getClassDef, e284.3
  lgl$#-          %264.4 = Identical                %264.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %264.4 -> BB296 (if true) | BB297 (if false)
BB15   <- [12]
  val?^ | miss    %15.0 = LdVar              eR    .requirePackage, e284.3
  lgl$#-          %15.1 = Identical                %15.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Branch                   %15.1 -> BB290 (if true) | BB291 (if false)
BB296   <- [264]
  prom-           %296.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p99, e284.3
  prom-           %296.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p100, e284.3
  val?            %296.2 = StaticCall         !v    getClassDef[0x560a35f5f940](%296.0, %296.1, nil) e284.3   <other>
  lgl$-           %296.3 = Is                       %296.2, NULL
  lgl$-           %296.4 = AsLogical                %296.3
  lgl$#-          %296.5 = Identical                %296.4, false
  void                    StVar              lW    def, %296.2, e284.3
  val             %296.7 = ChkMissing         e     %296.2
  lgl$#-          %296.8 = CheckTrueFalse     e     %296.3
  void                    Branch                   %296.8 -> BB275 (if true) | BB267 (if false)
BB297   <- [264]
  fs              %297.0 = FrameState         R     0x560a364b2230+183: [], env=e0.1
  fs              %297.1 = FrameState         R     0x560a35d65060+285: [], env=e284.3, next=%297.0
  void                    Deopt              !v    %297.1, CallTarget@0x560a35d03630[Call#5], %264.3   !
BB290   <- [15]
  prom-           %290.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p98 (!refl), e284.3
  val?            %290.1 = StaticCall         !v    .requirePackage[0x560a3696d390](%290.0) e284.3   <env->
  val?            %290.2 = %290.1
  goto BB16
BB291   <- [15]
  fs              %291.0 = FrameState         R     0x560a364b2230+183: [], env=e0.1
  fs              %291.1 = FrameState         R     0x560a35d65060+195: [], env=e284.3, next=%291.0
  void                    Deopt              !v    %291.1, CallTarget@0x560a35d03630[Call#4], %15.0   !
BB275   <- [296]
  val?^ | miss    %275.0 = LdVar              eR    .GlobalEnv, e284.3
  val?            %275.1 = Force!             !v    %275.0, e284.3   <val?_>
  void                    StVar              lW    value, %275.1, e284.3
  (cls|spec|blt)  %275.3 = LdFun              !v    getClassDef, e284.3
  fs              %275.4 = FrameState         R     0x560a364b2230+183: [], env=e0.1
  fs              %275.5 = FrameState         R     0x560a35d65060+399: [%275.3], env=e284.3, next=%275.4
  void                    Deopt              !v    %275.5, DeadCall@0x560a35d03630[Call#6], %275.3   !
BB267   <- [296]
  void                    Branch                   %296.5 -> BB274 (if true) | BB268 (if false)
BB16   <- [290, 308]
  val?            %16.0 = Phi                      %290.2:BB290, %308.2:BB308
  val?            %16.1 = %16.0
  val?            %16.2 = PopContext         C     %16.1, %284.1   <env->
  void                    StVar              lW    where, %16.2, e0.1
  void                    StVar              lW    anyStrings, %0.2, e0.1
  val?^ | miss    %16.5 = LdVar              eR    character, e0.1
  lgl$#-          %16.6 = Identical                %16.5, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %16.6 -> BB294 (if true) | BB295 (if false)
BB274   <- [267]
  void                    Nop                !     
  lgl$-           %274.1 = %296.4
  goto BB269
BB268   <- [267]
  val?^ | miss    %268.0 = LdVar              eR    mustFind, e284.3
  val?            %268.1 = Force!             !v    %268.0, e284.3   <val?_>
  lgl$-           %268.2 = AsLogical          e     %268.1
  lgl$-           %268.3 = LAnd                     %296.4, %268.2
  lgl$-           %268.4 = %268.3
  goto BB269
BB294   <- [16]
  str-            %294.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    errors, %294.0, e0.1
  (cls|spec|blt)  %294.2 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %294.3 = MkArg                    unboundValue, validObject[0x560a36b71960]_p4, e0.1
  prom-           %294.4 = MkArg                    unboundValue, validObject[0x560a36b71960]_p5, e0.1
  val?            %294.5 = Call               !v    %294.2(%294.3, %294.4) e0.1   <vec+>
  void                    StVar              lW    slotTypes, %294.5, e0.1
  lgl$#-          %294.7 = IsType                   %294.5 isA val?+
  val?^ | miss    %294.8 = LdVar              eR    names, e0.1
  lgl$#-          %294.9 = Identical                <blt names>, %294.8   <true>
  void                    Branch                   %294.9 -> BB298 (if true) | BB299 (if false)
BB295   <- [16]
  fs              %295.0 = FrameState         R     0x560a364b2230+222: [], env=e0.1
  void                    Deopt              !v    %295.0, CallTarget@0x560a360588f0[Call#3], %16.5   !
BB269   <- [274, 268]
  lgl$-           %269.0 = Phi                      %268.4:BB268, %274.1:BB274
  lgl$-           %269.1 = %269.0
  lgl$#-          %269.2 = CheckTrueFalse     e     %269.1
  void                    Branch                   %269.2 -> BB273 (if true) | BB272 (if false)
BB298   <- [294]
  val             %298.0 = ChkMissing         e     %294.5
  void                    Branch                   %294.7 -> BB300 (if true) | BB301 (if false)
BB299   <- [294]
  void                    Nop                !     
  lgl$#-          %299.1 = %294.9
  dr              %299.2 = DeadBranchReached@0x560a360588f0[Test#1]
  goto BB19
BB273   <- [269]
  (cls|spec|blt)  %273.0 = LdFun              !v    stop, e284.3
  fs              %273.1 = FrameState         R     0x560a364b2230+183: [], env=e0.1
  fs              %273.2 = FrameState         R     0x560a35d65060+694: [%273.0], env=e284.3, next=%273.1
  void                    Deopt              !v    %273.2, DeadCall@0x560a35d03630[Call#10], %273.0   !
BB272   <- [269]
  val?^ | miss    %272.0 = LdVar              eR    value, e284.3
  lgl$#-          %272.1 = IsType                   %272.0 isA val?~- | miss
  void                    Branch                   %272.1 -> BB308 (if true) | BB309 (if false)
BB300   <- [298]
  val?+           %300.0 = CastType           d     dn %294.5   <vec+>
  val+            %300.1 = CallSafeBuiltin    wed   names(%300.0)    <str->
  void                    StVar              lW    slotNames, %300.1, e0.1
  val?^ | miss    %300.3 = LdVar              eR    c, e0.1
  lgl$#-          %300.4 = Identical                <blt c>, %300.3   <true>
  void                    Branch                   %300.4 -> BB302 (if true) | BB303 (if false)
BB301   <- [298]
  void                    Nop                !     
  val?            %301.1 = %294.5
  dr              %301.2 = Typecheck@0x560a360588f0[Type#10]
  goto BB19
BB19   <- [299, 301]
  val?^ | miss    %19.0 = Phi                      %299.1:BB299, %301.1:BB301
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %299.2:BB299, %301.2:BB301
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x560a364b2230+314: [], env=e0.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB308   <- [272]
  val?~- | miss   %308.0 = CastType           d     dn %272.0
  val?-           %308.1 = Force!<value>            %308.0,    <env->
  val?-           %308.2 = %308.1
  goto BB16
BB309   <- [272]
  fs              %309.0 = FrameState         R     0x560a364b2230+183: [], env=e0.1
  fs              %309.1 = FrameState         R     0x560a35d65060+678: [%269.1], env=e284.3, next=%309.0
  void                    Deopt              !v    %309.1, Typecheck@0x560a35d03630[Type#34], %272.0   !
BB302   <- [300]
  val?^ | miss    %302.0 = LdVar              eR    attributes, e0.1
  lgl$#-          %302.1 = Identical                <blt attributes>, %302.0   <true>
  void                    Branch                   %302.1 -> BB304 (if true) | BB305 (if false)
BB303   <- [300]
  void                    Nop                !     
  lgl$#-          %303.1 = %300.4
  dr              %303.2 = DeadBranchReached@0x560a360588f0[Test#2]
  goto BB21
BB304   <- [302]
  val?^ | miss    %304.0 = LdVar              eR    object, e0.1
  val?            %304.1 = Force!<wrapped>    !v    %304.0, e0.1   <(cls|other)>
  val?            %304.2 = CallBuiltin        !v    attributes(%304.1) e0.1   <vec+>
  lgl$#-          %304.3 = IsType                   %304.2 isA val?+
  void                    Branch                   %304.3 -> BB306 (if true) | BB307 (if false)
BB305   <- [302]
  void                    Nop                !     
  lgl$#-          %305.1 = %302.1
  dr              %305.2 = DeadBranchReached@0x560a360588f0[Test#4]
  goto BB21
BB21   <- [303, 305]
  val?^ | miss    %21.0 = Phi                      %303.1:BB303, %305.1:BB305
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %303.2:BB303, %305.2:BB305
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x560a364b2230+419: [], env=e0.1
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB306   <- [304]
  val?+           %306.0 = CastType           d     dn %304.2   <vec+>
  val+            %306.1 = CallSafeBuiltin    wed   names(%306.0)    <str->
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %306.2 = CallSafeBuiltin    wed   c(".Data", ".S3Class", %306.1)    <str->
  void                    StVar              lW    attrNames, %306.2, e0.1
  val?^ | miss    %306.4 = LdVar              eR    anyNA, e0.1
  lgl$#-          %306.5 = Identical                <blt anyNA>, %306.4   <true>
  void                    Branch                   %306.5 -> BB310 (if true) | BB311 (if false)
BB307   <- [304]
  fs              %307.0 = FrameState         R     0x560a364b2230+652: [<blt c>, ".Data", ".S3Class", <blt names>, %304.2], env=e0.1
  void                    Deopt              !v    %307.0, Typecheck@0x560a360588f0[Type#21], %304.2   !
BB310   <- [306]
  val?^ | miss    %310.0 = LdVar              eR    match, e0.1
  lgl$#-          %310.1 = Identical                %310.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %310.1 -> BB312 (if true) | BB313 (if false)
BB311   <- [306]
  void                    Nop                !     
  lgl$#-          %311.1 = %306.5
  dr              %311.2 = DeadBranchReached@0x560a360588f0[Test#5]
  goto BB25
BB312   <- [310]
  val?^ | miss    %312.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %312.1 = IsType                   %312.0 isA val?~- | miss
  void                    Branch                   %312.1 -> BB314 (if true) | BB315 (if false)
BB313   <- [310]
  void                    Nop                !     
  val?^ | miss    %313.1 = %310.0
  dr              %313.2 = CallTarget@0x560a360588f0[Call#14]
  goto BB25
BB25   <- [311, 313, 315]
  val?^ | miss    %25.0 = Phi                      %311.1:BB311, %313.1:BB313, %315.1:BB315
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %311.2:BB311, %313.2:BB313, %315.2:BB315
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x560a364b2230+710: [], env=e0.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB314   <- [312]
  val?~- | miss   %314.0 = CastType           d     dn %312.0
  val?-           %314.1 = Force!<value>            %314.0,    <str->
  val+            %314.2 = CallSafeBuiltin    wed   match(%314.1, %306.2, NA, nil)    <int->
  void                    StVar              lW    idx, %314.2, e0.1
  lgl$#-          %314.4 = IsType                   %314.2 isA int-
  void                    Branch                   %314.4 -> BB316 (if true) | BB317 (if false)
BB315   <- [312]
  void                    Nop                !     
  val?^ | miss    %315.1 = %312.0
  dr              %315.2 = Typecheck@0x560a360588f0[Type#27]
  goto BB25
BB316   <- [314]
  int-            %316.0 = CastType           d     dn %314.2
  val+            %316.1 = CallSafeBuiltin    wed   anyNA(%316.0)    <lgl$->
  lgl$#-          %316.2 = IsType                   %316.1 isA lgl$-
  void                    Branch                   %316.2 -> BB318 (if true) | BB319 (if false)
BB317   <- [314]
  fs              %317.0 = FrameState         R     0x560a364b2230+823: [<blt anyNA>, %314.2], env=e0.1
  void                    Deopt              !v    %317.0, Typecheck@0x560a360588f0[Type#29], %314.2   !
BB318   <- [316]
  lgl$-           %318.0 = CastType           d     dn %316.1
  lgl$#-          %318.1 = CheckTrueFalse     e     %318.0
  void                    Branch                   %318.1 -> BB259 (if true) | BB31 (if false)
BB319   <- [316]
  void                    Nop                !     
  val+            %319.1 = %316.1
  dr              %319.2 = Typecheck@0x560a360588f0[Type#30]
  goto BB29
BB259   <- [318]
  val?^ | miss    %259.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %259.1 = Identical                <blt is.na>, %259.0   <@?>
  void                    Branch                   %259.1 -> BB261 (if true) | BB260 (if false)
BB31   <- [318]
  val?^ | miss    %31.0 = LdVar              eR    seq_along, e0.1
  lgl$#-          %31.1 = Identical                <blt seq_along>, %31.0   <true>
  void                    Branch                   %31.1 -> BB320 (if true) | BB321 (if false)
BB29   <- [319, 321, 323]
  val?^ | miss    %29.0 = Phi                      %319.1:BB319, %321.1:BB321, %323.1:BB323
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %319.2:BB319, %321.2:BB321, %323.2:BB323
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x560a364b2230+840: [%316.1], env=e0.1
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
BB261   <- [259]
  lgl-            %261.0 = CallSafeBuiltin    wed   is.na(%316.0)    <val?_>
  void                    StVar              lW    badSlots, %261.0, e0.1
  val?^ | miss    %261.2 = LdVar              eR    c, e0.1
  lgl$#-          %261.3 = Identical                <blt c>, %261.2   <@?>
  void                    Branch                   %261.3 -> BB263 (if true) | BB262 (if false)
BB260   <- [259]
  (cls|spec|blt)  %260.0 = LdFun              !v    is.na, e0.1
  fs              %260.1 = FrameState         R     0x560a364b2230+884: [%260.0], env=e0.1
  void                    Deopt              !v    %260.1, DeadCall@0x560a360588f0[Call#15], %260.0   !
BB320   <- [31]
  val?^ | miss    %320.0 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %320.1 = IsType                   %320.0 isA val?~+ | miss
  void                    Branch                   %320.1 -> BB322 (if true) | BB323 (if false)
BB321   <- [31]
  void                    Nop                !     
  lgl$#-          %321.1 = %31.1
  dr              %321.2 = DeadBranchReached@0x560a360588f0[Test#12]
  goto BB29
BB263   <- [261]
  val?^ | miss    %263.0 = LdVar              eR    errors, e0.1
  val?            %263.1 = Force!             !v    %263.0, e0.1   <val?_>
  (cls|spec|blt)  %263.2 = LdFun              !v    paste, e0.1
  fs              %263.3 = FrameState         R     0x560a364b2230+1045: [<blt c>, %263.1, %263.2], env=e0.1
  void                    Deopt              !v    %263.3, DeadCall@0x560a360588f0[Call#19], %263.2   !
BB262   <- [261]
  (cls|spec|blt)  %262.0 = LdFun              !v    c, e0.1
  fs              %262.1 = FrameState         R     0x560a364b2230+989: [%262.0], env=e0.1
  void                    Deopt              !v    %262.1, DeadCall@0x560a360588f0[Call#16], %262.0   !
BB322   <- [320]
  val?~+ | miss   %322.0 = CastType           d     dn %320.0
  val?+           %322.1 = Force!<value>            %322.0,    <vec+>
  val?            %322.2 = CallBuiltin        !v    seq_along(%322.1) e0.1   <int->
  val?+           %322.3 = ToForSeq           e     %322.2
  int$-           %322.4 = Length                   %322.3
  int$-           %322.5 = Inc                      0L
  lgl$-           %322.6 = Lt                 d     %322.4, %322.5, elided   <false>
  lgl$#-          %322.7 = Identical                %322.6, true
  void                    Branch                   %322.7 -> BB325 (if true) | BB324 (if false)
BB323   <- [320]
  void                    Nop                !     
  val?^ | miss    %323.1 = %320.0
  dr              %323.2 = Typecheck@0x560a360588f0[Type#58]
  goto BB29
BB325   <- [322]
  fs              %325.0 = FrameState         R     0x560a364b2230+1356: [%322.2], env=e0.1
  void                    Deopt              !v    %325.0, DeadBranchReached@0x560a360588f0[Test#13], %322.7   !
BB324   <- [322]
  val?            %324.0 = Extract2_1D        wed   %322.3, %322.5, elided
  void                    StVar              lW    i, %324.0, e0.1
  val?^ | miss    %324.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %324.3 = IsType                   %324.2 isA val?~+ | miss
  void                    Branch                   %324.3 -> BB326 (if true) | BB327 (if false)
BB326   <- [324]
  val?~+ | miss   %326.0 = CastType           d     dn %324.2
  val?+           %326.1 = Force!<value>            %326.0,    <vec+>
  lgl$#-          %326.2 = IsType                   %326.1 isA val+   <true>
  void                    Branch                   %326.2 -> BB328 (if true) | BB329 (if false)
BB327   <- [324]
  void                    Nop                !     
  val?^ | miss    %327.1 = %324.2
  dr              %327.2 = Typecheck@0x560a360588f0[Type#60]
  goto BB34
BB328   <- [326]
  val             %328.0 = ChkMissing         e     %324.0
  lgl$#-          %328.1 = IsType                   %328.0 isA int$-
  void                    Branch                   %328.1 -> BB330 (if true) | BB331 (if false)
BB329   <- [326]
  void                    Nop                !     
  lgl$#-          %329.1 = %326.2
  dr              %329.2 = DeadBranchReached@0x560a360588f0[Test#14]
  goto BB34
BB34   <- [327, 329, 331]
  val?^ | miss    %34.0 = Phi                      %327.1:BB327, %329.1:BB329, %331.1:BB331
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %327.2:BB327, %329.2:BB329, %331.2:BB331
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x560a364b2230+1401: [%322.3, %322.4, %322.5], env=e0.1
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB330   <- [328]
  int$-           %330.0 = CastType           d     dn %328.0
  val?            %330.1 = Extract2_1D        wed   %326.1, %330.0, elided   <str$+>
  void                    StVar              lW    classi, %330.1, e0.1
  val?^ | miss    %330.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %330.4 = Identical                %330.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %330.4 -> BB332 (if true) | BB333 (if false)
BB331   <- [328]
  void                    Nop                !     
  val             %331.1 = %328.0
  dr              %331.2 = Typecheck@0x560a360588f0[Type#62]
  goto BB34
BB332   <- [330]
  prom-           %332.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p8 (!refl), e0.1
  prom-           %332.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p9, e0.1
  val?            %332.2 = StaticCall         !v    getClassDef[0x560a376161a0](%332.0, %332.1) { 0 1n } e0.1   <other>
  lgl$-           %332.3 = Is                       %332.2, NULL
  void                    StVar              lW    classDefi, %332.2, e0.1
  val             %332.5 = ChkMissing         e     %332.2
  lgl$#-          %332.6 = CheckTrueFalse     e     %332.3
  void                    Branch                   %332.6 -> BB256 (if true) | BB40 (if false)
BB333   <- [330]
  fs              %333.0 = FrameState         R     0x560a364b2230+1476: [%322.3, %322.4, %322.5], env=e0.1
  void                    Deopt              !v    %333.0, CallTarget@0x560a360588f0[Call#22], %330.3   !
BB256   <- [332]
  val?^ | miss    %256.0 = LdVar              eR    c, e0.1
  lgl$#-          %256.1 = Identical                <blt c>, %256.0   <@?>
  void                    Branch                   %256.1 -> BB258 (if true) | BB257 (if false)
BB40   <- [332]
  val?^ | miss    %40.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %40.1 = IsType                   %40.0 isA val?~- | miss
  void                    Branch                   %40.1 -> BB334 (if true) | BB335 (if false)
BB258   <- [256]
  val?^ | miss    %258.0 = LdVar              eR    errors, e0.1
  val?            %258.1 = Force!             !v    %258.0, e0.1   <val?_>
  (cls|spec|blt)  %258.2 = LdFun              !v    paste0, e0.1
  fs              %258.3 = FrameState         R     0x560a364b2230+1649: [%322.3, %322.4, %322.5, <blt c>, %258.1, %258.2], env=e0.1
  void                    Deopt              !v    %258.3, DeadCall@0x560a360588f0[Call#25], %258.2   !
BB257   <- [256]
  (cls|spec|blt)  %257.0 = LdFun              !v    c, e0.1
  fs              %257.1 = FrameState         R     0x560a364b2230+1593: [%322.3, %322.4, %322.5, %257.0], env=e0.1
  void                    Deopt              !v    %257.1, DeadCall@0x560a360588f0[Call#23], %257.0   !
BB334   <- [40]
  val?~- | miss   %334.0 = CastType           d     dn %40.0
  val?-           %334.1 = Force!<value>            %334.0,    <str->
  lgl$#-          %334.2 = IsType                   %334.1 isA val+   <true>
  void                    Branch                   %334.2 -> BB336 (if true) | BB337 (if false)
BB335   <- [40]
  void                    Nop                !     
  val?^ | miss    %335.1 = %40.0
  dr              %335.2 = Typecheck@0x560a360588f0[Type#83]
  goto BB38
BB336   <- [334]
  val?^ | miss    %336.0 = LdVar              eR    i, e0.1
  lgl$#-          %336.1 = IsType                   %336.0 isA int$-
  void                    Branch                   %336.1 -> BB338 (if true) | BB339 (if false)
BB337   <- [334]
  void                    Nop                !     
  lgl$#-          %337.1 = %334.2
  dr              %337.2 = DeadBranchReached@0x560a360588f0[Test#18]
  goto BB38
BB38   <- [335, 337, 339]
  val?^ | miss    %38.0 = Phi                      %335.1:BB335, %337.1:BB337, %339.1:BB339
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %335.2:BB335, %337.2:BB337, %339.2:BB339
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x560a364b2230+1535: [%322.3, %322.4, %322.5], env=e0.1
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB338   <- [336]
  int$-           %338.0 = CastType           d     dn %336.0
  val?            %338.1 = Extract2_1D        wed   %334.1, %338.0, elided   <str$->
  void                    StVar              lW    namei, %338.1, e0.1
  val?^ | miss    %338.3 = LdVar              eR    try, e0.1
  lgl$#-          %338.4 = Identical                %338.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %338.4 -> BB340 (if true) | BB341 (if false)
BB339   <- [336]
  void                    Nop                !     
  val?^ | miss    %339.1 = %336.0
  dr              %339.2 = Typecheck@0x560a360588f0[Type#85]
  goto BB38
BB340   <- [338]
  prom-           %340.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p10, e0.1
  ct              %340.1 = PushContext        lCL   %340.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %340.2 = CastType                 up %340.0
  env             e340.3 = MkEnv              l     expr=%340.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %340.4 = MkArg                    unboundValue, validObject[0x560a36b71960]_p63, e340.3
  val?^ | miss    %340.5 = CastType                 up %340.4
  void                    StArg              lW    outFile, %340.5, e340.3
  cls             %340.7 = MkCls                    try@Prom(3)0, e340.3
  prom-           %340.8 = MkArg                    unboundValue, validObject[0x560a36b71960]_p65, e340.3
  prom-           %340.9 = MkArg                    %340.7, validObject[0x560a36b71960]_p66 (!refl), e340.3
  dots-           %340.10 = DotsList           l     error=%340.9
  val?            %340.11 = StaticCall         !v    tryCatch[0x560a37450790](%340.8, %340.10) { 0 1n } e340.3   <(lgl|vec)->
  val?            %340.12 = PopContext         C     %340.11, %340.1   <val?+>
  void                    StVar              lW    sloti, %340.12, e0.1
  val?^ | miss    %340.14 = LdVar              eR    inherits, e0.1
  lgl$#-          %340.15 = Identical                %340.14, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %340.15 -> BB342 (if true) | BB343 (if false)
BB341   <- [338]
  fs              %341.0 = FrameState         R     0x560a364b2230+1817: [%322.3, %322.4, %322.5], env=e0.1
  void                    Deopt              !v    %341.0, CallTarget@0x560a360588f0[Call#26], %338.3   !
BB342   <- [340]
  prom-           %342.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p14 (!refl), e0.1
  ct              %342.1 = PushContext        lCL   %342.0, "try-error", inherits(sloti, "try-error"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.1
  val?^           %342.2 = CastType                 up %342.0
  env             e342.3 = MkEnv              l     x=%342.2, what="try-error", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %342.4 = Force!<lazy>       !vrL  %342.2, e342.3   <val?>
  val?            %342.5 = CallBuiltin        !v    inherits(%342.4, "try-error", false) e342.3
  val?            %342.6 = PopContext         C     %342.5, %342.1   <lgl$->
  lgl$#-          %342.7 = IsType                   %342.6 isA lgl$-
  void                    Branch                   %342.7 -> BB344 (if true) | BB345 (if false)
BB343   <- [340]
  fs              %343.0 = FrameState         R     0x560a364b2230+1876: [%322.3, %322.4, %322.5], env=e0.1
  void                    Deopt              !v    %343.0, CallTarget@0x560a360588f0[Call#29], %340.14   !
BB344   <- [342]
  lgl$-           %344.0 = CastType           d     dn %342.6
  lgl$#-          %344.1 = CheckTrueFalse     e     %344.0
  void                    Branch                   %344.1 -> BB251 (if true) | BB47 (if false)
BB345   <- [342]
  void                    Nop                !     
  val?            %345.1 = %342.6
  dr              %345.2 = Typecheck@0x560a360588f0[Type#95]
  goto BB45
BB251   <- [344]
  val?^ | miss    %251.0 = LdVar              eR    c, e0.1
  lgl$#-          %251.1 = Identical                <blt c>, %251.0   <@?>
  void                    Branch                   %251.1 -> BB253 (if true) | BB252 (if false)
BB47   <- [344]
  val?^ | miss    %47.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %47.1 = Identical                %47.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %47.1 -> BB346 (if true) | BB347 (if false)
BB45   <- [345, 347]
  val?^ | miss    %45.0 = Phi                      %345.1:BB345, %347.1:BB347
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %345.2:BB345, %347.2:BB347
  dr              %45.3 = %45.2
  fs              %45.4 = FrameState         R     0x560a364b2230+1913: [%322.3, %322.4, %322.5, %342.6], env=e0.1
  void                    Deopt              !v    %45.4, %45.3, %45.1   !
BB253   <- [251]
  val?^ | miss    %253.0 = LdVar              eR    errors, e0.1
  val?            %253.1 = Force!             !v    %253.0, e0.1   <val?_>
  val?^ | miss    %253.2 = LdVar              eR    sloti, e0.1
  val?            %253.3 = Force!             !v    %253.2, e0.1   <val?_>
  lgl$#-          %253.4 = IsType                   %253.3 isA val?+
  lgl$#-          %253.5 = IsType                   %253.1 isA val?+
  void                    Branch                   %253.5 -> BB348 (if true) | BB349 (if false)
BB252   <- [251]
  (cls|spec|blt)  %252.0 = LdFun              !v    c, e0.1
  fs              %252.1 = FrameState         R     0x560a364b2230+1957: [%322.3, %322.4, %322.5, %252.0], env=e0.1
  void                    Deopt              !v    %252.1, DeadCall@0x560a360588f0[Call#30], %252.0   !
BB346   <- [47]
  prom-           %346.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p15, e0.1
  prom-           %346.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p17, e0.1
  prom-           %346.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p18, e0.1
  val?            %346.3 = StaticCall         !v    possibleExtends[0x560a3707dd10](%346.0, %346.1, missingArg, %346.2) { 0 1 3n } e0.1   <lgl$->
  lgl$#-          %346.4 = IsType                   %346.3 isA lgl$-
  void                    Branch                   %346.4 -> BB350 (if true) | BB351 (if false)
BB347   <- [47]
  void                    Nop                !     
  val?^ | miss    %347.1 = %47.0
  dr              %347.2 = CallTarget@0x560a360588f0[Call#31]
  goto BB45
BB348   <- [253]
  val?+           %348.0 = CastType           d     dn %253.1   <val?_>
  void                    Branch                   %253.4 -> BB352 (if true) | BB353 (if false)
BB349   <- [253]
  void                    Nop                !     
  val?            %349.1 = %253.1
  dr              %349.2 = Typecheck@0x560a360588f0[Type#98]
  goto BB254
BB350   <- [346]
  lgl$-           %350.0 = CastType           d     dn %346.3
  void                    StVar              lW    ok, %350.0, e0.1
  val?^ | miss    %350.2 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %350.3 = Identical                %350.2, function(x) <(rir::DispatchTable*)0x560a35e349|...
  void                    Branch                   %350.3 -> BB354 (if true) | BB355 (if false)
BB351   <- [346]
  fs              %351.0 = FrameState         R     0x560a364b2230+2117: [%322.3, %322.4, %322.5, %346.3], env=e0.1
  void                    Deopt              !v    %351.0, Typecheck@0x560a360588f0[Type#105], %346.3   !
BB352   <- [348]
  val?+           %352.0 = CastType           d     dn %253.3   <val?_>
  val+            %352.1 = CallSafeBuiltin    wed   c(%348.0, %352.0)    <val?_>
  void                    StVar              lW    errors, %352.1, e0.1
  int$-           %352.3 = %322.5
  goto BB75
BB353   <- [348]
  void                    Nop                !     
  val?            %353.1 = %253.3
  dr              %353.2 = Typecheck@0x560a360588f0[Type#99]
  goto BB254
BB254   <- [349, 353]
  val?^ | miss    %254.0 = Phi                      %349.1:BB349, %353.1:BB353
  val?^ | miss    %254.1 = %254.0
  dr              %254.2 = Phi                      %349.2:BB349, %353.2:BB353
  dr              %254.3 = %254.2
  fs              %254.4 = FrameState         R     0x560a364b2230+2017: [%322.3, %322.4, %322.5, <blt c>, %253.1, %253.3], env=e0.1
  void                    Deopt              !v    %254.4, %254.3, %254.1   !
BB354   <- [350]
  prom-           %354.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p19 (!refl), e0.1
  ct              %354.1 = PushContext        lCL   %354.0, isFALSE(ok), function(x) <(rir::DispatchTable*)0x560a35e349|..., e0.1
  val?^           %354.2 = CastType                 up %354.0
  env             e354.3 = (MkEnv)            l     x=%354.2, parent=R_BaseNamespace, context 1
  val?            %354.4 = Force!<lazy>       !vrL  %354.2, e354.3   <val?>
  lgl$#-          %354.5 = IsEnvStub          R     , e354.3
  void                    Branch                   %354.5 -> BB356 (if true) | BB357 (if false)
BB355   <- [350]
  fs              %355.0 = FrameState         R     0x560a364b2230+2131: [%322.3, %322.4, %322.5], env=e0.1
  void                    Deopt              !v    %355.0, CallTarget@0x560a360588f0[Call#33], %350.2   !
BB75   <- [74, 147, 352, 450]
  int$-           %75.0 = Phi                      %74.1:BB74, %147.1:BB147, %450.3:BB450, %352.3:BB352
  int$-           %75.1 = %75.0
  int$-           %75.2 = Inc                      %75.1
  lgl$-           %75.3 = Lt                 d     %322.4, %75.2, elided
  lgl$#-          %75.4 = Identical                %75.3, true
  void                    Branch                   %75.4 -> BB174 (if true) | BB78 (if false)
BB356   <- [354]
  val+            %356.0 = CallSafeBuiltin    wed   is.logical(%354.4)    <lgl$->
  lgl$#-          %356.1 = IsType                   %356.0 isA lgl$-
  void                    Branch                   %356.1 -> BB358 (if true) | BB359 (if false)
BB357   <- [354]
  fs              %357.0 = FrameState         R     0x560a364b2230+2163: [%322.3, %322.4, %322.5], env=e0.1
  fs              %357.1 = FrameState         R     0x560a35f8ec20+69: [<blt is.logical>, %354.4], env=e354.3, next=%357.0
  void                    Deopt              !v    %357.1, EnvStubMaterialized@0x560a34fd4b48[Call#unknown], e354.3   !
BB174   <- [75]
  val?^ | miss    %174.0 = LdVar              eR    rev, e0.1
  lgl$#-          %174.1 = Identical                %174.0, function(x) <(rir::DispatchTable*)0x560a3640ba|...
  void                    Branch                   %174.1 -> BB360 (if true) | BB361 (if false)
BB78   <- [75]
  val?            %78.0 = Extract2_1D        wed   %322.3, %75.2, elided
  void                    StVar              lW    i, %78.0, e0.1
  val?^ | miss    %78.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %78.3 = IsType                   %78.2 isA val?~+ | miss
  void                    Branch                   %78.3 -> BB362 (if true) | BB363 (if false)
BB358   <- [356]
  lgl$-           %358.0 = CastType           d     dn %356.0
  lgl$-           %358.1 = AsLogical                %358.0
  lgl$#-          %358.2 = Identical                %358.1, false
  void                    Branch                   %358.2 -> BB250 (if true) | BB56 (if false)
BB359   <- [356]
  fs              %359.0 = FrameState         R     0x560a364b2230+2163: [%322.3, %322.4, %322.5], env=e0.1
  fs              %359.1 = FrameState         R     0x560a35f8ec20+91: [%356.0], env=e354.3, next=%359.0
  void                    Deopt              !v    %359.1, Typecheck@0x560a34fd4b48[Type#2], %356.0   !
BB360   <- [174]
  (cls|spec|blt)  %360.0 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %360.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p38, e0.1
  prom-           %360.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p39, e0.1
  val?            %360.3 = Call               !v    %360.0(%360.1, %360.2) e0.1   <vec+>
  val?            %360.4 = StaticCall         !v    rev[0x560a3726e080](%360.3) e0.1   <vec+>
  void                    StVar              lW    extends, %360.4, e0.1
  val?^ | miss    %360.6 = LdVar              eR    seq_along, e0.1
  lgl$#-          %360.7 = Identical                <blt seq_along>, %360.6   <true>
  void                    Branch                   %360.7 -> BB366 (if true) | BB367 (if false)
BB361   <- [174]
  fs              %361.0 = FrameState         R     0x560a364b2230+2760: [%322.3, %322.4, %75.1], env=e0.1
  void                    Deopt              !v    %361.0, CallTarget@0x560a360588f0[Call#68], %174.0   !
BB362   <- [78]
  val?~+ | miss   %362.0 = CastType           d     dn %78.2
  val?+           %362.1 = Force!<value>            %362.0,    <vec+>
  lgl$#-          %362.2 = IsType                   %362.1 isA val+   <true>
  void                    Branch                   %362.2 -> BB364 (if true) | BB365 (if false)
BB363   <- [78]
  void                    Nop                !     
  val?^ | miss    %363.1 = %78.2
  dr              %363.2 = Typecheck@0x560a360588f0[Type#151]
  goto BB79
BB250   <- [358]
  void                    Nop                !     
  lgl$-           %250.1 = %358.1
  goto BB59
BB56   <- [358]
  val?            %56.0 = CallBuiltin        !vL   length(%354.4) e354.3   <int$->
  lgl$#-          %56.1 = IsType                   %56.0 isA int$-
  void                    Branch                   %56.1 -> BB370 (if true) | BB371 (if false)
BB366   <- [360]
  val             %366.0 = ChkMissing         e     %360.4
  val?            %366.1 = CallBuiltin        !v    seq_along(%360.4) e0.1   <int->
  val?+           %366.2 = ToForSeq           e     %366.1
  int$-           %366.3 = Length                   %366.2
  lgl$-           %366.4 = Lt                 d     %366.3, %322.5, elided
  lgl$#-          %366.5 = Identical                %366.4, true
  void                    Branch                   %366.5 -> BB244 (if true) | BB177 (if false)
BB367   <- [360]
  fs              %367.0 = FrameState         R     0x560a364b2230+4204: [], env=e0.1
  void                    Deopt              !v    %367.0, DeadBranchReached@0x560a360588f0[Test#58], %360.7   !
BB364   <- [362]
  val             %364.0 = ChkMissing         e     %78.0
  lgl$#-          %364.1 = IsType                   %364.0 isA int$-
  void                    Branch                   %364.1 -> BB368 (if true) | BB369 (if false)
BB365   <- [362]
  void                    Nop                !     
  lgl$#-          %365.1 = %362.2
  dr              %365.2 = DeadBranchReached@0x560a360588f0[Test#36]
  goto BB79
BB79   <- [363, 365, 369]
  val?^ | miss    %79.0 = Phi                      %363.1:BB363, %365.1:BB365, %369.1:BB369
  val?^ | miss    %79.1 = %79.0
  dr              %79.2 = Phi                      %363.2:BB363, %365.2:BB365, %369.2:BB369
  dr              %79.3 = %79.2
  fs              %79.4 = FrameState         R     0x560a364b2230+2789: [%322.3, %322.4, %75.2], env=e0.1
  void                    Deopt              !v    %79.4, %79.3, %79.1   !
BB59   <- [250, 372]
  lgl$-           %59.0 = Phi                      %372.3:BB372, %250.1:BB250
  lgl$-           %59.1 = %59.0
  lgl$-           %59.2 = AsLogical                %59.1
  lgl$#-          %59.3 = Identical                %59.2, false
  void                    Branch                   %59.3 -> BB249 (if true) | BB62 (if false)
BB370   <- [56]
  int$-           %370.0 = CastType           d     dn %56.0
  lgl$#-          %370.1 = IsEnvStub          R     , e354.3
  void                    Branch                   %370.1 -> BB372 (if true) | BB373 (if false)
BB371   <- [56]
  void                    Nop                !     
  val?            %371.1 = %56.0
  dr              %371.2 = Typecheck@0x560a34fd4b48[Type#5]
  goto BB57
BB244   <- [366]
  void                    Nop                !     
  goto BB219
BB177   <- [366]
  val?            %177.0 = Extract2_1D        wed   %366.2, %322.5, elided
  void                    StVar              lW    i, %177.0, e0.1
  val?^ | miss    %177.2 = LdVar              eR    extends, e0.1
  lgl$#-          %177.3 = IsType                   %177.2 isA val?~+ | miss
  void                    Branch                   %177.3 -> BB374 (if true) | BB375 (if false)
BB368   <- [364]
  int$-           %368.0 = CastType           d     dn %364.0
  val?            %368.1 = Extract2_1D        wed   %362.1, %368.0, elided   <str$+>
  void                    StVar              lW    classi, %368.1, e0.1
  val?^ | miss    %368.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %368.4 = Identical                %368.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %368.4 -> BB384 (if true) | BB385 (if false)
BB369   <- [364]
  void                    Nop                !     
  val             %369.1 = %364.0
  dr              %369.2 = Typecheck@0x560a360588f0[Type#153]
  goto BB79
BB249   <- [59]
  void                    Nop                !     
  lgl$-           %249.1 = %59.2
  goto BB63
BB62   <- [59]
  lgl$#-          %62.0 = IsType                   %354.4 isA lgl$-
  void                    Branch                   %62.0 -> BB386 (if true) | BB387 (if false)
BB372   <- [370]
  lgl$-           %372.0 = Eq                 d     %370.0, 1L, elided   <lgl$->
  lgl$-           %372.1 = AsLogical                %372.0
  lgl$-           %372.2 = LAnd                     %358.1, %372.1
  lgl$-           %372.3 = %372.2
  goto BB59
BB373   <- [370]
  void                    Nop                !     
  env             e373.1 = e354.3
  dr              %373.2 = EnvStubMaterialized@0x560a34fd4b48[Call#unknown]
  goto BB57
BB57   <- [371, 373]
  val?^ | miss    %57.0 = Phi                      %371.1:BB371, e373.1:BB373
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %371.2:BB371, %373.2:BB373
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x560a364b2230+2163: [%322.3, %322.4, %322.5], env=e0.1
  fs              %57.5 = FrameState         R     0x560a35f8ec20+194: [%358.1, %56.0], env=e354.3, next=%57.4
  void                    Deopt              !v    %57.5, %57.3, %57.1   !
BB219   <- [218, 244]
  (cls|spec|blt)  %219.0 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %219.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p58, e0.1
  prom-           %219.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p59, e0.1
  val?            %219.3 = Call               !v    %219.0(%219.1, %219.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %219.3, e0.1
  val?^ | miss    %219.5 = LdVar              eR    length, e0.1
  lgl$#-          %219.6 = Identical                <blt length>, %219.5   <true>
  void                    Branch                   %219.6 -> BB380 (if true) | BB381 (if false)
BB374   <- [177]
  val?~+ | miss   %374.0 = CastType           d     dn %177.2
  val?+           %374.1 = Force!<value>            %374.0,    <vec+>
  lgl$#-          %374.2 = IsType                   %374.1 isA val+   <true>
  void                    Branch                   %374.2 -> BB376 (if true) | BB377 (if false)
BB375   <- [177]
  void                    Nop                !     
  val?^ | miss    %375.1 = %177.2
  dr              %375.2 = Typecheck@0x560a360588f0[Type#249]
  goto BB178
BB384   <- [368]
  prom-           %384.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p20 (!refl), e0.1
  prom-           %384.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p21, e0.1
  val?            %384.2 = StaticCall         !v    getClassDef[0x560a376161a0](%384.0, %384.1) { 0 1n } e0.1   <other>
  lgl$-           %384.3 = Is                       %384.2, NULL
  void                    StVar              lW    classDefi, %384.2, e0.1
  val             %384.5 = ChkMissing         e     %384.2
  lgl$#-          %384.6 = CheckTrueFalse     e     %384.3
  void                    Branch                   %384.6 -> BB171 (if true) | BB85 (if false)
BB385   <- [368]
  fs              %385.0 = FrameState         R     0x560a364b2230+2864: [%322.3, %322.4, %75.2], env=e0.1
  void                    Deopt              !v    %385.0, CallTarget@0x560a360588f0[Call#45], %368.3   !
BB63   <- [249, 386]
  lgl$-           %63.0 = Phi                      %386.5:BB386, %249.1:BB249
  lgl$-           %63.1 = %63.0
  lgl$-           %63.2 = AsLogical                %63.1
  lgl$#-          %63.3 = Identical                %63.2, false
  void                    Branch                   %63.3 -> BB248 (if true) | BB66 (if false)
BB386   <- [62]
  lgl$-           %386.0 = CastType           d     dn %354.4
  lgl$-           %386.1 = CallSafeBuiltin    wed   is.na(%386.0)    <lgl$->
  lgl$-           %386.2 = Not                d     %386.1, elided
  lgl$-           %386.3 = AsLogical                %386.2
  lgl$-           %386.4 = LAnd                     %59.2, %386.3
  lgl$-           %386.5 = %386.4
  goto BB63
BB387   <- [62]
  fs              %387.0 = FrameState         R     0x560a364b2230+2163: [%322.3, %322.4, %322.5], env=e0.1
  fs              %387.1 = FrameState         R     0x560a35f8ec20+213: [%59.1], env=e354.3, next=%387.0
  void                    Deopt              !v    %387.1, Typecheck@0x560a34fd4b48[Type#8], %354.4   !
BB380   <- [219]
  val?^ | miss    %380.0 = LdVar              eR    errors, e0.1
  lgl$#-          %380.1 = IsType                   %380.0 isA val?~- | miss
  void                    Branch                   %380.1 -> BB382 (if true) | BB383 (if false)
BB381   <- [219]
  void                    Nop                !     
  lgl$#-          %381.1 = %219.6
  dr              %381.2 = DeadBranchReached@0x560a360588f0[Test#70]
  goto BB220
BB376   <- [374]
  val             %376.0 = ChkMissing         e     %177.0
  lgl$#-          %376.1 = IsType                   %376.0 isA int$-
  void                    Branch                   %376.1 -> BB378 (if true) | BB379 (if false)
BB377   <- [374]
  void                    Nop                !     
  lgl$#-          %377.1 = %374.2
  dr              %377.2 = DeadBranchReached@0x560a360588f0[Test#60]
  goto BB178
BB178   <- [375, 377, 379]
  val?^ | miss    %178.0 = Phi                      %375.1:BB375, %377.1:BB377, %379.1:BB379
  val?^ | miss    %178.1 = %178.0
  dr              %178.2 = Phi                      %375.2:BB375, %377.2:BB377, %379.2:BB379
  dr              %178.3 = %178.2
  fs              %178.4 = FrameState         R     0x560a364b2230+4340: [%366.2, %366.3, %322.5], env=e0.1
  void                    Deopt              !v    %178.4, %178.3, %178.1   !
BB171   <- [384]
  val?^ | miss    %171.0 = LdVar              eR    c, e0.1
  lgl$#-          %171.1 = Identical                <blt c>, %171.0   <@?>
  void                    Branch                   %171.1 -> BB173 (if true) | BB172 (if false)
BB85   <- [384]
  val?^ | miss    %85.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %85.1 = IsType                   %85.0 isA val?~- | miss
  void                    Branch                   %85.1 -> BB394 (if true) | BB395 (if false)
BB248   <- [63]
  void                    Nop                !     
  lgl$-           %248.1 = %63.2
  goto BB67
BB66   <- [63]
  lgl$#-          %66.0 = IsType                   %354.4 isA lgl$-
  void                    Branch                   %66.0 -> BB410 (if true) | BB411 (if false)
BB382   <- [380]
  val?~- | miss   %382.0 = CastType           d     dn %380.0
  val?-           %382.1 = Force!<value>            %382.0,    <str->
  (int|real)$-    %382.2 = CallSafeBuiltin    wed   length(%382.1)    <int$->
  lgl$#-          %382.3 = IsType                   %382.2 isA int$-
  void                    Branch                   %382.3 -> BB388 (if true) | BB389 (if false)
BB383   <- [380]
  void                    Nop                !     
  val?^ | miss    %383.1 = %380.0
  dr              %383.2 = Typecheck@0x560a360588f0[Type#343]
  goto BB220
BB220   <- [381, 383]
  val?^ | miss    %220.0 = Phi                      %381.1:BB381, %383.1:BB383
  val?^ | miss    %220.1 = %220.0
  dr              %220.2 = Phi                      %381.2:BB381, %383.2:BB383
  dr              %220.3 = %220.2
  fs              %220.4 = FrameState         R     0x560a364b2230+6244: [], env=e0.1
  void                    Deopt              !v    %220.4, %220.3, %220.1   !
BB378   <- [376]
  int$-           %378.0 = CastType           d     dn %376.0
  val?            %378.1 = Extract2_1D        wed   %374.1, %378.0, elided   <other>
  void                    StVar              lW    exti, %378.1, e0.1
  (cls|spec|blt)  %378.3 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %378.4 = MkArg                    unboundValue, validObject[0x560a36b71960]_p40, e0.1
  prom-           %378.5 = MkArg                    unboundValue, validObject[0x560a36b71960]_p41, e0.1
  val?            %378.6 = Call               !v    %378.3(%378.4, %378.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %378.6, e0.1
  (cls|spec|blt)  %378.8 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %378.9 = MkArg                    unboundValue, validObject[0x560a36b71960]_p42, e0.1
  prom-           %378.10 = MkArg                    unboundValue, validObject[0x560a36b71960]_p43, e0.1
  val?            %378.11 = Call               !v    %378.8(%378.9, %378.10) e0.1   <lgl$->
  lgl$#-          %378.12 = IsType                   %378.11 isA lgl$-
  void                    Branch                   %378.12 -> BB390 (if true) | BB391 (if false)
BB379   <- [376]
  void                    Nop                !     
  val             %379.1 = %376.0
  dr              %379.2 = Typecheck@0x560a360588f0[Type#251]
  goto BB178
BB173   <- [171]
  val?^ | miss    %173.0 = LdVar              eR    errors, e0.1
  val?            %173.1 = Force!             !v    %173.0, e0.1   <val?_>
  (cls|spec|blt)  %173.2 = LdFun              !v    paste0, e0.1
  fs              %173.3 = FrameState         R     0x560a364b2230+3037: [%322.3, %322.4, %75.2, <blt c>, %173.1, %173.2], env=e0.1
  void                    Deopt              !v    %173.3, DeadCall@0x560a360588f0[Call#48], %173.2   !
BB172   <- [171]
  (cls|spec|blt)  %172.0 = LdFun              !v    c, e0.1
  fs              %172.1 = FrameState         R     0x560a364b2230+2981: [%322.3, %322.4, %75.2, %172.0], env=e0.1
  void                    Deopt              !v    %172.1, DeadCall@0x560a360588f0[Call#46], %172.0   !
BB394   <- [85]
  val?~- | miss   %394.0 = CastType           d     dn %85.0
  val?-           %394.1 = Force!<value>            %394.0,    <str->
  lgl$#-          %394.2 = IsType                   %394.1 isA val+   <true>
  void                    Branch                   %394.2 -> BB402 (if true) | BB403 (if false)
BB395   <- [85]
  void                    Nop                !     
  val?^ | miss    %395.1 = %85.0
  dr              %395.2 = Typecheck@0x560a360588f0[Type#174]
  goto BB83
BB67   <- [248, 410]
  lgl$-           %67.0 = Phi                      %410.4:BB410, %248.1:BB248
  lgl$-           %67.1 = %67.0
  val?            %67.2 = PopContext         C     %67.1, %354.1   <lgl$->
  lgl$#-          %67.3 = IsType                   %67.2 isA lgl$-
  void                    Branch                   %67.3 -> BB412 (if true) | BB413 (if false)
BB410   <- [66]
  lgl$-           %410.0 = CastType           d     dn %354.4
  lgl$-           %410.1 = Not                d     %410.0, elided
  lgl$-           %410.2 = AsLogical                %410.1
  lgl$-           %410.3 = LAnd                     %63.2, %410.2
  lgl$-           %410.4 = %410.3
  goto BB67
BB411   <- [66]
  fs              %411.0 = FrameState         R     0x560a364b2230+2163: [%322.3, %322.4, %322.5], env=e0.1
  fs              %411.1 = FrameState         R     0x560a35f8ec20+319: [%63.1], env=e354.3, next=%411.0
  void                    Deopt              !v    %411.1, Typecheck@0x560a34fd4b48[Type#10], %354.4   !
BB388   <- [382]
  int$-           %388.0 = CastType           d     dn %382.2
  lgl$-           %388.1 = Eq                 d     %388.0, 0L, elided   <lgl$->
  lgl$-           %388.2 = AsLogical                %388.1
  lgl$#-          %388.3 = Identical                %388.2, false
  void                    Branch                   %388.3 -> BB235 (if true) | BB224 (if false)
BB389   <- [382]
  void                    Nop                !     
  (int|real)$-    %389.1 = %382.2
  dr              %389.2 = Typecheck@0x560a360588f0[Type#344]
  goto BB222
BB390   <- [378]
  lgl$-           %390.0 = CastType           d     dn %378.11
  lgl$-           %390.1 = Not                d     %390.0, elided
  lgl$-           %390.2 = AsLogical                %390.1
  lgl$#-          %390.3 = Identical                %390.2, false
  void                    Branch                   %390.3 -> BB243 (if true) | BB182 (if false)
BB391   <- [378]
  void                    Nop                !     
  val?            %391.1 = %378.11
  dr              %391.2 = Typecheck@0x560a360588f0[Type#258]
  goto BB180
BB402   <- [394]
  val?^ | miss    %402.0 = LdVar              eR    i, e0.1
  lgl$#-          %402.1 = IsType                   %402.0 isA int$-
  void                    Branch                   %402.1 -> BB404 (if true) | BB405 (if false)
BB403   <- [394]
  void                    Nop                !     
  lgl$#-          %403.1 = %394.2
  dr              %403.2 = DeadBranchReached@0x560a360588f0[Test#40]
  goto BB83
BB83   <- [395, 403, 405]
  val?^ | miss    %83.0 = Phi                      %395.1:BB395, %403.1:BB403, %405.1:BB405
  val?^ | miss    %83.1 = %83.0
  dr              %83.2 = Phi                      %395.2:BB395, %403.2:BB403, %405.2:BB405
  dr              %83.3 = %83.2
  fs              %83.4 = FrameState         R     0x560a364b2230+2923: [%322.3, %322.4, %75.2], env=e0.1
  void                    Deopt              !v    %83.4, %83.3, %83.1   !
BB412   <- [67]
  lgl$-           %412.0 = CastType           d     dn %67.2
  lgl$#-          %412.1 = CheckTrueFalse     e     %412.0
  void                    Branch                   %412.1 -> BB245 (if true) | BB70 (if false)
BB413   <- [67]
  fs              %413.0 = FrameState         R     0x560a364b2230+2163: [%322.3, %322.4, %322.5, %67.2], env=e0.1
  void                    Deopt              !v    %413.0, Typecheck@0x560a360588f0[Type#107], %67.2   !
BB235   <- [388]
  void                    Nop                !     
  lgl$-           %235.1 = %388.2
  goto BB225
BB224   <- [388]
  val?^ | miss    %224.0 = LdVar              eR    is.function, e0.1
  lgl$#-          %224.1 = Identical                <blt is.function>, %224.0   <true>
  void                    Branch                   %224.1 -> BB392 (if true) | BB393 (if false)
BB222   <- [389, 393, 401]
  val?^ | miss    %222.0 = Phi                      %389.1:BB389, %393.1:BB393, %401.1:BB401
  val?^ | miss    %222.1 = %222.0
  dr              %222.2 = Phi                      %389.2:BB389, %393.2:BB393, %401.2:BB401
  dr              %222.3 = %222.2
  fs              %222.4 = FrameState         R     0x560a364b2230+6335: [%382.2], env=e0.1
  void                    Deopt              !v    %222.4, %222.3, %222.1   !
BB243   <- [390]
  void                    Nop                !     
  lgl$-           %243.1 = %390.2
  goto BB185
BB182   <- [390]
  val?^ | miss    %182.0 = LdVar              eR    is, e0.1
  lgl$#-          %182.1 = Identical                %182.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %182.1 -> BB396 (if true) | BB397 (if false)
BB180   <- [391, 397]
  val?^ | miss    %180.0 = Phi                      %391.1:BB391, %397.1:BB397
  val?^ | miss    %180.1 = %180.0
  dr              %180.2 = Phi                      %391.2:BB391, %397.2:BB397
  dr              %180.3 = %180.2
  fs              %180.4 = FrameState         R     0x560a364b2230+4503: [%366.2, %366.3, %322.5, %378.11], env=e0.1
  void                    Deopt              !v    %180.4, %180.3, %180.1   !
BB404   <- [402]
  int$-           %404.0 = CastType           d     dn %402.0
  val?            %404.1 = Extract2_1D        wed   %394.1, %404.0, elided   <str$->
  void                    StVar              lW    namei, %404.1, e0.1
  val?^ | miss    %404.3 = LdVar              eR    try, e0.1
  lgl$#-          %404.4 = Identical                %404.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %404.4 -> BB406 (if true) | BB407 (if false)
BB405   <- [402]
  void                    Nop                !     
  val?^ | miss    %405.1 = %402.0
  dr              %405.2 = Typecheck@0x560a360588f0[Type#176]
  goto BB83
BB245   <- [412]
  val?^ | miss    %245.0 = LdVar              eR    c, e0.1
  lgl$#-          %245.1 = Identical                <blt c>, %245.0   <@?>
  void                    Branch                   %245.1 -> BB247 (if true) | BB246 (if false)
BB70   <- [412]
  val?^ | miss    %70.0 = LdVar              eR    complete, e0.1
  val?            %70.1 = Force!<lazy>       !v    %70.0, e0.1   <lgl$->
  lgl$#-          %70.2 = IsType                   %70.1 isA lgl$-
  void                    Branch                   %70.2 -> BB424 (if true) | BB425 (if false)
BB225   <- [235, 400]
  lgl$-           %225.0 = Phi                      %400.3:BB400, %235.1:BB235
  lgl$-           %225.1 = %225.0
  lgl$#-          %225.2 = CheckTrueFalse     e     %225.1
  void                    Branch                   %225.2 -> BB232 (if true) | BB226 (if false)
BB392   <- [224]
  val             %392.0 = ChkMissing         e     %219.3
  lgl$#-          %392.1 = IsType                   %392.0 isA val?~- | miss
  void                    Branch                   %392.1 -> BB400 (if true) | BB401 (if false)
BB393   <- [224]
  void                    Nop                !     
  lgl$#-          %393.1 = %224.1
  dr              %393.2 = DeadBranchReached@0x560a360588f0[Test#71]
  goto BB222
BB185   <- [243, 398]
  lgl$-           %185.0 = Phi                      %398.4:BB398, %243.1:BB243
  lgl$-           %185.1 = %185.0
  lgl$#-          %185.2 = CheckTrueFalse     e     %185.1
  void                    Branch                   %185.2 -> BB242 (if true) | BB188 (if false)
BB396   <- [182]
  prom-           %396.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p44, e0.1
  prom-           %396.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p45, e0.1
  val?            %396.2 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%396.0, %396.1) e0.1   <lgl$->
  lgl$#-          %396.3 = IsType                   %396.2 isA lgl$-
  void                    Branch                   %396.3 -> BB398 (if true) | BB399 (if false)
BB397   <- [182]
  void                    Nop                !     
  val?^ | miss    %397.1 = %182.0
  dr              %397.2 = CallTarget@0x560a360588f0[Call#73]
  goto BB180
BB406   <- [404]
  prom-           %406.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p22, e0.1
  ct              %406.1 = PushContext        lCL   %406.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %406.2 = CastType                 up %406.0
  env             e406.3 = MkEnv              l     expr=%406.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %406.4 = MkArg                    unboundValue, validObject[0x560a36b71960]_p68, e406.3
  val?^ | miss    %406.5 = CastType                 up %406.4
  void                    StArg              lW    outFile, %406.5, e406.3
  cls             %406.7 = MkCls                    try@Prom(3)0, e406.3
  val?^ | miss    %406.8 = LdVar              eR    tryCatch, e406.3
  lgl$#-          %406.9 = Identical                %406.8, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %406.9 -> BB408 (if true) | BB409 (if false)
BB407   <- [404]
  fs              %407.0 = FrameState         R     0x560a364b2230+3205: [%322.3, %322.4, %75.2], env=e0.1
  void                    Deopt              !v    %407.0, CallTarget@0x560a360588f0[Call#49], %404.3   !
BB247   <- [245]
  val?^ | miss    %247.0 = LdVar              eR    errors, e0.1
  val?            %247.1 = Force!             !v    %247.0, e0.1   <val?_>
  (cls|spec|blt)  %247.2 = LdFun              !v    paste0, e0.1
  fs              %247.3 = FrameState         R     0x560a364b2230+2263: [%322.3, %322.4, %322.5, <blt c>, %247.1, %247.2], env=e0.1
  void                    Deopt              !v    %247.3, DeadCall@0x560a360588f0[Call#37], %247.2   !
BB246   <- [245]
  (cls|spec|blt)  %246.0 = LdFun              !v    c, e0.1
  fs              %246.1 = FrameState         R     0x560a364b2230+2207: [%322.3, %322.4, %322.5, %246.0], env=e0.1
  void                    Deopt              !v    %246.1, DeadCall@0x560a360588f0[Call#34], %246.0   !
BB424   <- [70]
  lgl$-           %424.0 = CastType           d     dn %70.1
  lgl$-           %424.1 = Not                d     %424.0, elided
  lgl$#-          %424.2 = CheckTrueFalse     e     %424.1
  void                    Branch                   %424.2 -> BB74 (if true) | BB73 (if false)
BB425   <- [70]
  fs              %425.0 = FrameState         R     0x560a364b2230+2385: [%322.3, %322.4, %322.5, %70.1], env=e0.1
  void                    Deopt              !v    %425.0, Typecheck@0x560a360588f0[Type#131], %70.1   !
BB232   <- [225]
  val?^ | miss    %232.0 = LdVar              eR    c, e0.1
  lgl$#-          %232.1 = Identical                <blt c>, %232.0   <@?>
  void                    Branch                   %232.1 -> BB234 (if true) | BB233 (if false)
BB226   <- [225]
  lgl$#-          %226.0 = CheckTrueFalse     e     %388.0
  void                    Branch                   %226.0 -> BB229 (if true) | BB227 (if false)
BB400   <- [392]
  val-            %400.0 = CastType           d     dn %392.0   <nil->
  lgl$#-          %400.1 = CallSafeBuiltin    wed   is.function(%400.0)    <lgl$->
  lgl$-           %400.2 = LAnd                     %388.2, %400.1
  lgl$-           %400.3 = %400.2
  goto BB225
BB401   <- [392]
  void                    Nop                !     
  val             %401.1 = %392.0
  dr              %401.2 = Typecheck@0x560a360588f0[Type#347]
  goto BB222
BB242   <- [185]
  void                    Nop                !     
  int$-           %242.1 = %322.5
  goto BB193
BB188   <- [185]
  val?^ | miss    %188.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %188.1 = Identical                %188.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %188.1 -> BB414 (if true) | BB415 (if false)
BB398   <- [396]
  lgl$-           %398.0 = CastType           d     dn %396.2
  lgl$-           %398.1 = Not                d     %398.0, elided
  lgl$-           %398.2 = AsLogical                %398.1
  lgl$-           %398.3 = LAnd                     %390.2, %398.2
  lgl$-           %398.4 = %398.3
  goto BB185
BB399   <- [396]
  fs              %399.0 = FrameState         R     0x560a364b2230+4553: [%366.2, %366.3, %322.5, %390.2, %396.2], env=e0.1
  void                    Deopt              !v    %399.0, Typecheck@0x560a360588f0[Type#261], %396.2   !
BB408   <- [406]
  prom-           %408.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p70, e406.3
  prom-           %408.1 = MkArg                    %406.7, validObject[0x560a36b71960]_p71 (!refl), e406.3
  dots-           %408.2 = DotsList           l     error=%408.1
  val?            %408.3 = StaticCall         !v    tryCatch[0x560a37450790](%408.0, %408.2) { 0 1n } e406.3   <(lgl|vec)->
  val?            %408.4 = PopContext         C     %408.3, %406.1
  void                    StVar              lW    sloti, %408.4, e0.1
  val?^ | miss    %408.6 = LdVar              eR    inherits, e0.1
  lgl$#-          %408.7 = Identical                %408.6, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %408.7 -> BB416 (if true) | BB417 (if false)
BB409   <- [406]
  fs              %409.0 = FrameState         R     0x560a364b2230+3250: [%322.3, %322.4, %75.2], env=e0.1
  fs              %409.1 = FrameState         R     0x560a35dbd040+0: [], env=e406.3, next=%409.0
  void                    Deopt              !v    %409.1, CallTarget@0x560a35dc3ad0[Call#2], %406.8   !
BB74   <- [424]
  void                    Nop                !     
  int$-           %74.1 = %322.5
  goto BB75
BB73   <- [424]
  (cls|spec|blt)  %73.0 = LdFun              !v    anyStrings, e0.1
  fs              %73.1 = FrameState         R     0x560a364b2230+2417: [%322.3, %322.4, %322.5, %73.0], env=e0.1
  void                    Deopt              !v    %73.1, DeadCall@0x560a360588f0[Call#39], %73.0   !
BB234   <- [232]
  (cls|spec|blt)  %234.0 = LdFun              !v    anyStrings, e0.1
  fs              %234.1 = FrameState         R     0x560a364b2230+6552: [<blt c>, %382.1, %234.0], env=e0.1
  void                    Deopt              !v    %234.1, DeadCall@0x560a360588f0[Call#111], %234.0   !
BB233   <- [232]
  (cls|spec|blt)  %233.0 = LdFun              !v    c, e0.1
  fs              %233.1 = FrameState         R     0x560a364b2230+6496: [%233.0], env=e0.1
  void                    Deopt              !v    %233.1, DeadCall@0x560a360588f0[Call#108], %233.0   !
BB229   <- [226]
  val?^ | miss    %229.0 = LdVar              eR    test, e0.1
  val?            %229.1 = Force!             !v    %229.0, e0.1   <val?_>
  lgl$#-          %229.2 = CheckTrueFalse     we    %229.1
  void                    Branch                   %229.2 -> BB231 (if true) | BB230 (if false)
BB227   <- [226]
  void                    Visible            v     
  lgl$#-          %227.1 = true
  goto BB228
BB193   <- [192, 216, 242, 209]
  int$-           %193.0 = Phi                      %192.1:BB192, %209.1:BB209, %216.1:BB216, %242.1:BB242
  int$-           %193.1 = %193.0
  int$-           %193.2 = Inc                      %193.1
  lgl$-           %193.3 = Lt                 d     %366.3, %193.2, elided
  lgl$#-          %193.4 = Identical                %193.3, true
  void                    Branch                   %193.4 -> BB218 (if true) | BB194 (if false)
BB414   <- [188]
  prom-           %414.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p46, e0.1
  val?            %414.1 = StaticCall         !v    getClassDef[0x560a37656da0](%414.0) e0.1   <other>
  lgl$-           %414.2 = Is                       %414.1, NULL
  void                    StVar              lW    superDef, %414.1, e0.1
  val             %414.4 = ChkMissing         e     %414.1
  lgl$#-          %414.5 = CheckTrueFalse     e     %414.2
  void                    Branch                   %414.5 -> BB239 (if true) | BB189 (if false)
BB415   <- [188]
  fs              %415.0 = FrameState         R     0x560a364b2230+4561: [%366.2, %366.3, %322.5, %185.1], env=e0.1
  void                    Deopt              !v    %415.0, CallTarget@0x560a360588f0[Call#74], %188.0   !
BB416   <- [408]
  prom-           %416.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p26 (!refl), e0.1
  ct              %416.1 = PushContext        lCL   %416.0, "try-error", inherits(sloti, "try-error"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.1
  val?^           %416.2 = CastType                 up %416.0
  env             e416.3 = MkEnv              l     x=%416.2, what="try-error", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %416.4 = Force!<lazy>       !vr   %416.2, e416.3   <val?>
  val?^ | miss    %416.5 = LdVar              eR    what, e416.3
  val?            %416.6 = Force!<value>      !v    %416.5, e416.3   <str$->
  val?^ | miss    %416.7 = LdVar              eR    which, e416.3
  val?            %416.8 = Force!<lazy>       !v    %416.7, e416.3   <lgl$->
  lgl$#-          %416.9 = IsType                   %416.8 isA lgl$-
  lgl$#-          %416.10 = IsType                   %416.6 isA val?-
  void                    Branch                   %416.10 -> BB422 (if true) | BB423 (if false)
BB417   <- [408]
  fs              %417.0 = FrameState         R     0x560a364b2230+3264: [%322.3, %322.4, %75.2], env=e0.1
  void                    Deopt              !v    %417.0, CallTarget@0x560a360588f0[Call#52], %408.6   !
BB231   <- [229]
  val?^ | miss    %231.0 = LdVar              eR    errors, e0.1
  void                    Visible            v     
  val?            %231.2 = Force!             !     %231.0, e0.1   <val?_>
  val?            %231.3 = %231.2
  goto BB228
BB230   <- [229]
  (cls|spec|blt)  %230.0 = LdFun              !v    gettextf, e0.1
  fs              %230.1 = FrameState         R     0x560a364b2230+6753: [%230.0], env=e0.1
  void                    Deopt              !v    %230.1, DeadCall@0x560a360588f0[Call#114], %230.0   !
BB228   <- [227, 231]
  val?            %228.0 = Phi                      %227.1:BB227, %231.3:BB231
  val?            %228.1 = %228.0
  void                    Return             l     %228.1
BB218   <- [193]
  void                    Nop                !     
  goto BB219
BB194   <- [193]
  val?            %194.0 = Extract2_1D        wed   %366.2, %193.2, elided
  void                    StVar              lW    i, %194.0, e0.1
  val?^ | miss    %194.2 = LdVar              eR    extends, e0.1
  lgl$#-          %194.3 = IsType                   %194.2 isA val?~+ | miss
  void                    Branch                   %194.3 -> BB426 (if true) | BB427 (if false)
BB239   <- [414]
  val?^ | miss    %239.0 = LdVar              eR    c, e0.1
  lgl$#-          %239.1 = Identical                <blt c>, %239.0   <@?>
  void                    Branch                   %239.1 -> BB241 (if true) | BB240 (if false)
BB189   <- [414]
  (cls|spec|blt)  %189.0 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %189.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p47, e0.1
  prom-           %189.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p48, e0.1
  val?            %189.3 = Call               !v    %189.0(%189.1, %189.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %189.3, e0.1
  lgl$#-          %189.5 = IsType                   %189.3 isA val?-
  val?^ | miss    %189.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %189.7 = Identical                <blt is.function>, %189.6   <true>
  void                    Branch                   %189.7 -> BB418 (if true) | BB419 (if false)
BB422   <- [416]
  val?-           %422.0 = CastType           d     dn %416.6   <str$->
  void                    Branch                   %416.9 -> BB428 (if true) | BB429 (if false)
BB423   <- [416]
  void                    Nop                !     
  val?            %423.1 = %416.6
  dr              %423.2 = Typecheck@0x560a36ccf2d0[Type#1]
  goto BB92
BB426   <- [194]
  val?~+ | miss   %426.0 = CastType           d     dn %194.2
  val?+           %426.1 = Force!<value>            %426.0,    <vec+>
  lgl$#-          %426.2 = IsType                   %426.1 isA val+   <true>
  void                    Branch                   %426.2 -> BB430 (if true) | BB431 (if false)
BB427   <- [194]
  void                    Nop                !     
  val?^ | miss    %427.1 = %194.2
  dr              %427.2 = Typecheck@0x560a360588f0[Type#294]
  goto BB195
BB241   <- [239]
  val?^ | miss    %241.0 = LdVar              eR    errors, e0.1
  val?            %241.1 = Force!             !v    %241.0, e0.1   <val?_>
  (cls|spec|blt)  %241.2 = LdFun              !v    paste0, e0.1
  fs              %241.3 = FrameState         R     0x560a364b2230+4742: [%366.2, %366.3, %322.5, <blt c>, %241.1, %241.2], env=e0.1
  void                    Deopt              !v    %241.3, DeadCall@0x560a360588f0[Call#77], %241.2   !
BB240   <- [239]
  (cls|spec|blt)  %240.0 = LdFun              !v    c, e0.1
  fs              %240.1 = FrameState         R     0x560a364b2230+4686: [%366.2, %366.3, %322.5, %240.0], env=e0.1
  void                    Deopt              !v    %240.1, DeadCall@0x560a360588f0[Call#75], %240.0   !
BB418   <- [189]
  val             %418.0 = ChkMissing         e     %189.3
  void                    Branch                   %189.5 -> BB420 (if true) | BB421 (if false)
BB419   <- [189]
  void                    Nop                !     
  lgl$#-          %419.1 = %189.7
  dr              %419.2 = DeadBranchReached@0x560a360588f0[Test#62]
  goto BB190
BB428   <- [422]
  lgl$-           %428.0 = CastType           d     dn %416.8
  val?            %428.1 = CallBuiltin        !v    inherits(%416.4, %422.0, %428.0) e416.3
  val?            %428.2 = PopContext         C     %428.1, %416.1   <lgl$->
  lgl$#-          %428.3 = IsType                   %428.2 isA lgl$-
  void                    Branch                   %428.3 -> BB432 (if true) | BB433 (if false)
BB429   <- [422]
  void                    Nop                !     
  val?            %429.1 = %416.8
  dr              %429.2 = Typecheck@0x560a36ccf2d0[Type#2]
  goto BB92
BB92   <- [423, 429]
  val?^ | miss    %92.0 = Phi                      %423.1:BB423, %429.1:BB429
  val?^ | miss    %92.1 = %92.0
  dr              %92.2 = Phi                      %423.2:BB423, %429.2:BB429
  dr              %92.3 = %92.2
  fs              %92.4 = FrameState         R     0x560a364b2230+3301: [%322.3, %322.4, %75.2], env=e0.1
  fs              %92.5 = FrameState         R     0x560a36a23c60+37: [%416.4, %416.6, %416.8], env=e416.3, next=%92.4
  void                    Deopt              !v    %92.5, %92.3, %92.1   !
BB430   <- [426]
  val             %430.0 = ChkMissing         e     %194.0
  lgl$#-          %430.1 = IsType                   %430.0 isA int$-
  void                    Branch                   %430.1 -> BB436 (if true) | BB437 (if false)
BB431   <- [426]
  void                    Nop                !     
  lgl$#-          %431.1 = %426.2
  dr              %431.2 = DeadBranchReached@0x560a360588f0[Test#65]
  goto BB195
BB195   <- [427, 431, 437]
  val?^ | miss    %195.0 = Phi                      %427.1:BB427, %431.1:BB431, %437.1:BB437
  val?^ | miss    %195.1 = %195.0
  dr              %195.2 = Phi                      %427.2:BB427, %431.2:BB431, %437.2:BB437
  dr              %195.3 = %195.2
  fs              %195.4 = FrameState         R     0x560a364b2230+5276: [%366.2, %366.3, %193.2], env=e0.1
  void                    Deopt              !v    %195.4, %195.3, %195.1   !
BB420   <- [418]
  val?-           %420.0 = CastType           d     dn %189.3   <nil->
  lgl$#-          %420.1 = CallSafeBuiltin    wed   is.function(%420.0)    <lgl$->
  void                    Branch                   %420.1 -> BB236 (if true) | BB192 (if false)
BB421   <- [418]
  void                    Nop                !     
  val?            %421.1 = %189.3
  dr              %421.2 = Typecheck@0x560a360588f0[Type#274]
  goto BB190
BB190   <- [419, 421]
  val?^ | miss    %190.0 = Phi                      %419.1:BB419, %421.1:BB421
  val?^ | miss    %190.1 = %190.0
  dr              %190.2 = Phi                      %419.2:BB419, %421.2:BB421
  dr              %190.3 = %190.2
  fs              %190.4 = FrameState         R     0x560a364b2230+4876: [%366.2, %366.3, %322.5], env=e0.1
  void                    Deopt              !v    %190.4, %190.3, %190.1   !
BB432   <- [428]
  lgl$-           %432.0 = CastType           d     dn %428.2
  lgl$#-          %432.1 = CheckTrueFalse     e     %432.0
  void                    Branch                   %432.1 -> BB166 (if true) | BB96 (if false)
BB433   <- [428]
  void                    Nop                !     
  val?            %433.1 = %428.2
  dr              %433.2 = Typecheck@0x560a360588f0[Type#186]
  goto BB94
BB436   <- [430]
  int$-           %436.0 = CastType           d     dn %430.0
  val?            %436.1 = Extract2_1D        wed   %426.1, %436.0, elided   <other>
  void                    StVar              lW    exti, %436.1, e0.1
  (cls|spec|blt)  %436.3 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %436.4 = MkArg                    unboundValue, validObject[0x560a36b71960]_p49, e0.1
  prom-           %436.5 = MkArg                    unboundValue, validObject[0x560a36b71960]_p50, e0.1
  val?            %436.6 = Call               !v    %436.3(%436.4, %436.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %436.6, e0.1
  (cls|spec|blt)  %436.8 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %436.9 = MkArg                    unboundValue, validObject[0x560a36b71960]_p51, e0.1
  prom-           %436.10 = MkArg                    unboundValue, validObject[0x560a36b71960]_p52, e0.1
  val?            %436.11 = Call               !v    %436.8(%436.9, %436.10) e0.1   <lgl$->
  lgl$#-          %436.12 = IsType                   %436.11 isA lgl$-
  void                    Branch                   %436.12 -> BB438 (if true) | BB439 (if false)
BB437   <- [430]
  void                    Nop                !     
  val             %437.1 = %430.0
  dr              %437.2 = Typecheck@0x560a360588f0[Type#296]
  goto BB195
BB236   <- [420]
  val?^ | miss    %236.0 = LdVar              eR    c, e0.1
  lgl$#-          %236.1 = Identical                <blt c>, %236.0   <@?>
  void                    Branch                   %236.1 -> BB238 (if true) | BB237 (if false)
BB192   <- [420]
  void                    Nop                !     
  int$-           %192.1 = %322.5
  goto BB193
BB166   <- [432]
  val?^ | miss    %166.0 = LdVar              eR    c, e0.1
  lgl$#-          %166.1 = Identical                <blt c>, %166.0   <@?>
  void                    Branch                   %166.1 -> BB168 (if true) | BB167 (if false)
BB96   <- [432]
  val?^ | miss    %96.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %96.1 = Identical                %96.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %96.1 -> BB434 (if true) | BB435 (if false)
BB94   <- [433, 435]
  val?^ | miss    %94.0 = Phi                      %433.1:BB433, %435.1:BB435
  val?^ | miss    %94.1 = %94.0
  dr              %94.2 = Phi                      %433.2:BB433, %435.2:BB435
  dr              %94.3 = %94.2
  fs              %94.4 = FrameState         R     0x560a364b2230+3301: [%322.3, %322.4, %75.2, %428.2], env=e0.1
  void                    Deopt              !v    %94.4, %94.3, %94.1   !
BB438   <- [436]
  lgl$-           %438.0 = CastType           d     dn %436.11
  lgl$-           %438.1 = Not                d     %438.0, elided
  lgl$-           %438.2 = AsLogical                %438.1
  lgl$#-          %438.3 = Identical                %438.2, false
  void                    Branch                   %438.3 -> BB217 (if true) | BB199 (if false)
BB439   <- [436]
  void                    Nop                !     
  val?            %439.1 = %436.11
  dr              %439.2 = Typecheck@0x560a360588f0[Type#303]
  goto BB197
BB238   <- [236]
  val?^ | miss    %238.0 = LdVar              eR    errors, e0.1
  val?            %238.1 = Force!             !v    %238.0, e0.1   <val?_>
  (cls|spec|blt)  %238.2 = LdFun              !v    anyStrings, e0.1
  fs              %238.3 = FrameState         R     0x560a364b2230+5067: [%366.2, %366.3, %322.5, <blt c>, %238.1, %238.2], env=e0.1
  void                    Deopt              !v    %238.3, DeadCall@0x560a360588f0[Call#84], %238.2   !
BB237   <- [236]
  (cls|spec|blt)  %237.0 = LdFun              !v    c, e0.1
  fs              %237.1 = FrameState         R     0x560a364b2230+5011: [%366.2, %366.3, %322.5, %237.0], env=e0.1
  void                    Deopt              !v    %237.1, DeadCall@0x560a360588f0[Call#80], %237.0   !
BB168   <- [166]
  val?^ | miss    %168.0 = LdVar              eR    errors, e0.1
  val?            %168.1 = Force!             !v    %168.0, e0.1   <val?_>
  val?^ | miss    %168.2 = LdVar              eR    sloti, e0.1
  val?            %168.3 = Force!             !v    %168.2, e0.1   <val?_>
  lgl$#-          %168.4 = IsType                   %168.3 isA val?+
  lgl$#-          %168.5 = IsType                   %168.1 isA val?+
  void                    Branch                   %168.5 -> BB446 (if true) | BB447 (if false)
BB167   <- [166]
  (cls|spec|blt)  %167.0 = LdFun              !v    c, e0.1
  fs              %167.1 = FrameState         R     0x560a364b2230+3345: [%322.3, %322.4, %75.2, %167.0], env=e0.1
  void                    Deopt              !v    %167.1, DeadCall@0x560a360588f0[Call#53], %167.0   !
BB434   <- [96]
  prom-           %434.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p27, e0.1
  prom-           %434.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p29, e0.1
  prom-           %434.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p30, e0.1
  ct              %434.3 = PushContext        lCL   %434.0, %434.1, missingArg, %434.2, possibleExtends(class(sloti), classi, ClassDef|..., function(class1, class2, ClassDef1=getClassDef|..., e0.1
  val?^           %434.4 = CastType                 up %434.2
  val?^           %434.5 = CastType                 up %434.1
  val?^           %434.6 = CastType                 up %434.0
  env             e434.7 = MkEnv              l     class1=%434.6, class2=%434.5, ClassDef1(miss)=missingArg, ClassDef2=%434.4, parent=<env 0x560a342f8378>, context 1
  prom-           %434.8 = MkArg                    unboundValue, validObject[0x560a36b71960]_p73, e434.7
  val?^ | miss    %434.9 = CastType                 up %434.8
  void                    StArg              lW    ClassDef1, %434.9, e434.7
  val?^ | miss    %434.11 = LdVar              eR    .identC, <env 0x560a342f8378>
  lgl$#-          %434.12 = Identical                %434.11, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %434.12 -> BB442 (if true) | BB443 (if false)
BB435   <- [96]
  void                    Nop                !     
  val?^ | miss    %435.1 = %96.0
  dr              %435.2 = CallTarget@0x560a360588f0[Call#54]
  goto BB94
BB217   <- [438]
  void                    Nop                !     
  lgl$-           %217.1 = %438.2
  goto BB202
BB199   <- [438]
  val?^ | miss    %199.0 = LdVar              eR    is, e0.1
  lgl$#-          %199.1 = Identical                %199.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %199.1 -> BB440 (if true) | BB441 (if false)
BB197   <- [439, 441]
  val?^ | miss    %197.0 = Phi                      %439.1:BB439, %441.1:BB441
  val?^ | miss    %197.1 = %197.0
  dr              %197.2 = Phi                      %439.2:BB439, %441.2:BB441
  dr              %197.3 = %197.2
  fs              %197.4 = FrameState         R     0x560a364b2230+5439: [%366.2, %366.3, %193.2, %436.11], env=e0.1
  void                    Deopt              !v    %197.4, %197.3, %197.1   !
BB446   <- [168]
  val?+           %446.0 = CastType           d     dn %168.1   <val?_>
  void                    Branch                   %168.4 -> BB450 (if true) | BB451 (if false)
BB447   <- [168]
  void                    Nop                !     
  val?            %447.1 = %168.1
  dr              %447.2 = Typecheck@0x560a360588f0[Type#189]
  goto BB169
BB442   <- [434]
  prom-           %442.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p79, e434.7
  prom-           %442.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p80, e434.7
  val?            %442.2 = StaticCall         !v    .identC[0x560a36f70fd0](%442.0, %442.1) e434.7   <lgl$->
  lgl$#-          %442.3 = IsType                   %442.2 isA lgl$-
  void                    Branch                   %442.3 -> BB444 (if true) | BB445 (if false)
BB443   <- [434]
  fs              %443.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %443.1 = FrameState         R     0x560a35c09fa0+0: [], env=e434.7, next=%443.0
  void                    Deopt              !v    %443.1, CallTarget@0x560a35c0c220[Call#3], %434.11   !
BB202   <- [217, 448]
  lgl$-           %202.0 = Phi                      %448.4:BB448, %217.1:BB217
  lgl$-           %202.1 = %202.0
  lgl$#-          %202.2 = CheckTrueFalse     e     %202.1
  void                    Branch                   %202.2 -> BB216 (if true) | BB205 (if false)
BB440   <- [199]
  prom-           %440.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p53, e0.1
  prom-           %440.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p54, e0.1
  val?            %440.2 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%440.0, %440.1) e0.1   <lgl$->
  lgl$#-          %440.3 = IsType                   %440.2 isA lgl$-
  void                    Branch                   %440.3 -> BB448 (if true) | BB449 (if false)
BB441   <- [199]
  void                    Nop                !     
  val?^ | miss    %441.1 = %199.0
  dr              %441.2 = CallTarget@0x560a360588f0[Call#90]
  goto BB197
BB450   <- [446]
  val?+           %450.0 = CastType           d     dn %168.3   <val?_>
  val+            %450.1 = CallSafeBuiltin    wed   c(%446.0, %450.0)    <val?_>
  void                    StVar              lW    errors, %450.1, e0.1
  int$-           %450.3 = %75.2
  goto BB75
BB451   <- [446]
  void                    Nop                !     
  val?            %451.1 = %168.3
  dr              %451.2 = Typecheck@0x560a360588f0[Type#190]
  goto BB169
BB169   <- [447, 451]
  val?^ | miss    %169.0 = Phi                      %447.1:BB447, %451.1:BB451
  val?^ | miss    %169.1 = %169.0
  dr              %169.2 = Phi                      %447.2:BB447, %451.2:BB451
  dr              %169.3 = %169.2
  fs              %169.4 = FrameState         R     0x560a364b2230+3405: [%322.3, %322.4, %75.2, <blt c>, %168.1, %168.3], env=e0.1
  void                    Deopt              !v    %169.4, %169.3, %169.1   !
BB444   <- [442]
  lgl$-           %444.0 = CastType           d     dn %442.2
  lgl$-           %444.1 = AsLogical                %444.0
  lgl$#-          %444.2 = Identical                %444.1, true
  void                    Branch                   %444.2 -> BB165 (if true) | BB101 (if false)
BB445   <- [442]
  void                    Nop                !     
  val?            %445.1 = %442.2
  dr              %445.2 = Typecheck@0x560a35c0c220[Type#9]
  goto BB99
BB216   <- [202]
  void                    Nop                !     
  int$-           %216.1 = %193.2
  goto BB193
BB205   <- [202]
  val?^ | miss    %205.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %205.1 = Identical                %205.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %205.1 -> BB454 (if true) | BB455 (if false)
BB448   <- [440]
  lgl$-           %448.0 = CastType           d     dn %440.2
  lgl$-           %448.1 = Not                d     %448.0, elided
  lgl$-           %448.2 = AsLogical                %448.1
  lgl$-           %448.3 = LAnd                     %438.2, %448.2
  lgl$-           %448.4 = %448.3
  goto BB202
BB449   <- [440]
  fs              %449.0 = FrameState         R     0x560a364b2230+5489: [%366.2, %366.3, %193.2, %438.2, %440.2], env=e0.1
  void                    Deopt              !v    %449.0, Typecheck@0x560a360588f0[Type#306], %440.2   !
BB165   <- [444]
  void                    Nop                !     
  lgl$-           %165.1 = %444.1
  goto BB104
BB101   <- [444]
  val?^ | miss    %101.0 = LdVar              eR    .identC, e434.7
  lgl$#-          %101.1 = Identical                %101.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %101.1 -> BB452 (if true) | BB453 (if false)
BB99   <- [445, 453]
  val?^ | miss    %99.0 = Phi                      %445.1:BB445, %453.1:BB453
  val?^ | miss    %99.1 = %99.0
  dr              %99.2 = Phi                      %445.2:BB445, %453.2:BB453
  dr              %99.3 = %99.2
  fs              %99.4 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %99.5 = FrameState         R     0x560a35c09fa0+37: [%442.2], env=e434.7, next=%99.4
  void                    Deopt              !v    %99.5, %99.3, %99.1   !
BB454   <- [205]
  prom-           %454.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p55, e0.1
  val?            %454.1 = StaticCall         !v    getClassDef[0x560a37656da0](%454.0) e0.1   <other>
  lgl$-           %454.2 = Is                       %454.1, NULL
  void                    StVar              lW    superDef, %454.1, e0.1
  val             %454.4 = ChkMissing         e     %454.1
  lgl$#-          %454.5 = CheckTrueFalse     e     %454.2
  void                    Branch                   %454.5 -> BB213 (if true) | BB206 (if false)
BB455   <- [205]
  fs              %455.0 = FrameState         R     0x560a364b2230+5497: [%366.2, %366.3, %193.2, %202.1], env=e0.1
  void                    Deopt              !v    %455.0, CallTarget@0x560a360588f0[Call#91], %205.0   !
BB104   <- [165, 458]
  lgl$-           %104.0 = Phi                      %458.3:BB458, %165.1:BB165
  lgl$-           %104.1 = %104.0
  lgl$#-          %104.2 = CheckTrueFalse     e     %104.1
  void                    Branch                   %104.2 -> BB164 (if true) | BB105 (if false)
BB452   <- [101]
  prom-           %452.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p81, e434.7
  val?            %452.1 = StaticCall         !v    .identC[0x560a36f73370](%452.0, "ANY") e434.7   <lgl$->
  lgl$#-          %452.2 = IsType                   %452.1 isA lgl$-
  void                    Branch                   %452.2 -> BB458 (if true) | BB459 (if false)
BB453   <- [101]
  void                    Nop                !     
  val?^ | miss    %453.1 = %101.0
  dr              %453.2 = CallTarget@0x560a35c0c220[Call#4]
  goto BB99
BB213   <- [454]
  val?^ | miss    %213.0 = LdVar              eR    c, e0.1
  lgl$#-          %213.1 = Identical                <blt c>, %213.0   <@?>
  void                    Branch                   %213.1 -> BB215 (if true) | BB214 (if false)
BB206   <- [454]
  (cls|spec|blt)  %206.0 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %206.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p56, e0.1
  prom-           %206.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p57, e0.1
  val?            %206.3 = Call               !v    %206.0(%206.1, %206.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %206.3, e0.1
  lgl$#-          %206.5 = IsType                   %206.3 isA val?-
  val?^ | miss    %206.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %206.7 = Identical                <blt is.function>, %206.6   <true>
  void                    Branch                   %206.7 -> BB460 (if true) | BB461 (if false)
BB164   <- [104]
  void                    Nop                !     
  lgl$#-          %164.1 = true
  goto BB136
BB105   <- [104]
  val?^ | miss    %105.0 = LdVar              eR    ClassDef1, e434.7
  val?            %105.1 = Force!<lazy>       !v    %105.0, e434.7   <other>
  lgl$-           %105.2 = Is                       %105.1, NULL
  lgl$#-          %105.3 = CheckTrueFalse     e     %105.2
  void                    Branch                   %105.3 -> BB163 (if true) | BB106 (if false)
BB458   <- [452]
  lgl$-           %458.0 = CastType           d     dn %452.1
  lgl$-           %458.1 = AsLogical                %458.0
  lgl$-           %458.2 = LOr                      %444.1, %458.1
  lgl$-           %458.3 = %458.2
  goto BB104
BB459   <- [452]
  fs              %459.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %459.1 = FrameState         R     0x560a35c09fa0+86: [%444.1, %452.1], env=e434.7, next=%459.0
  void                    Deopt              !v    %459.1, Typecheck@0x560a35c0c220[Type#11], %452.1   !
BB215   <- [213]
  val?^ | miss    %215.0 = LdVar              eR    errors, e0.1
  val?            %215.1 = Force!             !v    %215.0, e0.1   <val?_>
  (cls|spec|blt)  %215.2 = LdFun              !v    paste0, e0.1
  fs              %215.3 = FrameState         R     0x560a364b2230+5678: [%366.2, %366.3, %193.2, <blt c>, %215.1, %215.2], env=e0.1
  void                    Deopt              !v    %215.3, DeadCall@0x560a360588f0[Call#94], %215.2   !
BB214   <- [213]
  (cls|spec|blt)  %214.0 = LdFun              !v    c, e0.1
  fs              %214.1 = FrameState         R     0x560a364b2230+5622: [%366.2, %366.3, %193.2, %214.0], env=e0.1
  void                    Deopt              !v    %214.1, DeadCall@0x560a360588f0[Call#92], %214.0   !
BB460   <- [206]
  val             %460.0 = ChkMissing         e     %206.3
  void                    Branch                   %206.5 -> BB462 (if true) | BB463 (if false)
BB461   <- [206]
  void                    Nop                !     
  lgl$#-          %461.1 = %206.7
  dr              %461.2 = DeadBranchReached@0x560a360588f0[Test#67]
  goto BB207
BB136   <- [164, 163, 135]
  val?            %136.0 = Phi                      %135.2:BB135, %163.1:BB163, %164.1:BB164
  val?            %136.1 = %136.0
  val?            %136.2 = PopContext         C     %136.1, %434.3   <lgl$->
  lgl$#-          %136.3 = IsType                   %136.2 isA lgl$-
  void                    Branch                   %136.3 -> BB456 (if true) | BB457 (if false)
BB163   <- [105]
  void                    Nop                !     
  lgl$#-          %163.1 = false
  goto BB136
BB106   <- [105]
  (cls|spec|blt)  %106.0 = LdFun              !v    @, <0x560a33cf0bd8>, e434.7
  prom-           %106.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p82, e434.7
  prom-           %106.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p83, e434.7
  val?            %106.3 = Call               !v    %106.0(%106.1, %106.2) e434.7   <vec+>
  void                    StVar              lW    ext, %106.3, e434.7
  lgl$#-          %106.5 = IsType                   %106.3 isA val+   <true>
  val             %106.6 = ChkMissing         e     %106.3
  void                    Branch                   %106.5 -> BB464 (if true) | BB465 (if false)
BB462   <- [460]
  val?-           %462.0 = CastType           d     dn %206.3   <nil->
  lgl$#-          %462.1 = CallSafeBuiltin    wed   is.function(%462.0)    <lgl$->
  void                    Branch                   %462.1 -> BB210 (if true) | BB209 (if false)
BB463   <- [460]
  void                    Nop                !     
  val?            %463.1 = %206.3
  dr              %463.2 = Typecheck@0x560a360588f0[Type#319]
  goto BB207
BB207   <- [461, 463]
  val?^ | miss    %207.0 = Phi                      %461.1:BB461, %463.1:BB463
  val?^ | miss    %207.1 = %207.0
  dr              %207.2 = Phi                      %461.2:BB461, %463.2:BB463
  dr              %207.3 = %207.2
  fs              %207.4 = FrameState         R     0x560a364b2230+5812: [%366.2, %366.3, %193.2], env=e0.1
  void                    Deopt              !v    %207.4, %207.3, %207.1   !
BB456   <- [136]
  lgl$-           %456.0 = CastType           d     dn %136.2
  void                    StVar              lW    ok, %456.0, e0.1
  val?^ | miss    %456.2 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %456.3 = Identical                %456.2, function(x) <(rir::DispatchTable*)0x560a35e349|...
  void                    Branch                   %456.3 -> BB466 (if true) | BB467 (if false)
BB457   <- [136]
  fs              %457.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2, %136.2], env=e0.1
  void                    Deopt              !v    %457.0, Typecheck@0x560a360588f0[Type#196], %136.2   !
BB464   <- [106]
  val?^ | miss    %464.0 = LdVar              eR    class2, e434.7
  val?            %464.1 = Force!<wrapped>    !v    %464.0, e434.7   <str$+>
  lgl$#-          %464.2 = IsType                   %464.1 isA val?+
  lgl$#-          %464.3 = IsType                   %106.3 isA val?+
  void                    Branch                   %464.3 -> BB468 (if true) | BB469 (if false)
BB465   <- [106]
  fs              %465.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %465.1 = FrameState         R     0x560a35c09fa0+199: [], env=e434.7, next=%465.0
  void                    Deopt              !v    %465.1, DeadBranchReached@0x560a35c0c220[Test#1], %106.5   !
BB210   <- [462]
  val?^ | miss    %210.0 = LdVar              eR    c, e0.1
  lgl$#-          %210.1 = Identical                <blt c>, %210.0   <@?>
  void                    Branch                   %210.1 -> BB212 (if true) | BB211 (if false)
BB209   <- [462]
  void                    Nop                !     
  int$-           %209.1 = %193.2
  goto BB193
BB466   <- [456]
  lgl$-           %466.0 = CallSafeBuiltin    wed   is.na(%456.0)    <lgl$->
  lgl$-           %466.1 = Not                d     %466.0, elided
  lgl$-           %466.2 = AsLogical                %466.1
  lgl$-           %466.3 = AsLogical                %466.2
  lgl$-           %466.4 = AsLogical                %466.3
  lgl$#-          %466.5 = Identical                %466.4, false
  void                    Branch                   %466.5 -> BB151 (if true) | BB143 (if false)
BB467   <- [456]
  fs              %467.0 = FrameState         R     0x560a364b2230+3519: [%322.3, %322.4, %75.2], env=e0.1
  void                    Deopt              !v    %467.0, CallTarget@0x560a360588f0[Call#56], %456.2   !
BB468   <- [464]
  val?+           %468.0 = CastType           d     dn %106.3   <vec+>
  void                    Branch                   %464.2 -> BB470 (if true) | BB471 (if false)
BB469   <- [464]
  void                    Nop                !     
  val?            %469.1 = %106.3
  dr              %469.2 = Typecheck@0x560a35c0c220[Type#15]
  goto BB109
BB212   <- [210]
  val?^ | miss    %212.0 = LdVar              eR    errors, e0.1
  val?            %212.1 = Force!             !v    %212.0, e0.1   <val?_>
  (cls|spec|blt)  %212.2 = LdFun              !v    anyStrings, e0.1
  fs              %212.3 = FrameState         R     0x560a364b2230+6003: [%366.2, %366.3, %193.2, <blt c>, %212.1, %212.2], env=e0.1
  void                    Deopt              !v    %212.3, DeadCall@0x560a360588f0[Call#101], %212.2   !
BB211   <- [210]
  (cls|spec|blt)  %211.0 = LdFun              !v    c, e0.1
  fs              %211.1 = FrameState         R     0x560a364b2230+5947: [%366.2, %366.3, %193.2, %211.0], env=e0.1
  void                    Deopt              !v    %211.1, DeadCall@0x560a360588f0[Call#97], %211.0   !
BB151   <- [466]
  void                    Nop                !     
  lgl$-           %151.1 = %466.4
  goto BB144
BB143   <- [466]
  lgl$-           %143.0 = Not                d     %456.0, elided
  lgl$-           %143.1 = AsLogical                %143.0
  lgl$-           %143.2 = LAnd                     %466.4, %143.1
  lgl$-           %143.3 = %143.2
  goto BB144
BB470   <- [468]
  val?+           %470.0 = CastType           d     dn %464.1   <str$+>
  val?            %470.1 = Extract2_1D        wed   %468.0, %470.0, elided   <(nil|other)>
  lgl$-           %470.2 = Is                       %470.1, NULL
  void                    StVar              lW    contained, %470.1, e434.7
  lgl$-           %470.4 = Not                d     %470.2, elided
  lgl$#-          %470.5 = CheckTrueFalse     e     %470.4
  void                    Branch                   %470.5 -> BB162 (if true) | BB111 (if false)
BB471   <- [468]
  void                    Nop                !     
  val?            %471.1 = %464.1
  dr              %471.2 = Typecheck@0x560a35c0c220[Type#18]
  goto BB109
BB109   <- [469, 471]
  val?^ | miss    %109.0 = Phi                      %469.1:BB469, %471.1:BB471
  val?^ | miss    %109.1 = %109.0
  dr              %109.2 = Phi                      %469.2:BB469, %471.2:BB471
  dr              %109.3 = %109.2
  fs              %109.4 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %109.5 = FrameState         R     0x560a35c09fa0+253: [%106.3, %464.1], env=e434.7, next=%109.4
  void                    Deopt              !v    %109.5, %109.3, %109.1   !
BB144   <- [151, 143]
  lgl$-           %144.0 = Phi                      %143.3:BB143, %151.1:BB151
  lgl$-           %144.1 = %144.0
  lgl$#-          %144.2 = CheckTrueFalse     e     %144.1
  void                    Branch                   %144.2 -> BB148 (if true) | BB145 (if false)
BB162   <- [470]
  val             %162.0 = ChkMissing         e     %470.1
  val?            %162.1 = %470.1
  goto BB135
BB111   <- [470]
  val?^ | miss    %111.0 = LdVar              eR    ClassDef2, e434.7
  val?            %111.1 = Force!<lazy>       !v    %111.0, e434.7   <other>
  lgl$-           %111.2 = Is                       %111.1, NULL
  lgl$#-          %111.3 = CheckTrueFalse     e     %111.2
  void                    Branch                   %111.3 -> BB161 (if true) | BB112 (if false)
BB148   <- [144]
  val?^ | miss    %148.0 = LdVar              eR    c, e0.1
  lgl$#-          %148.1 = Identical                <blt c>, %148.0   <@?>
  void                    Branch                   %148.1 -> BB150 (if true) | BB149 (if false)
BB145   <- [144]
  val?^ | miss    %145.0 = LdVar              eR    complete, e0.1
  lgl$#-          %145.1 = IsType                   %145.0 isA lgl$~-
  void                    Branch                   %145.1 -> BB472 (if true) | BB473 (if false)
BB135   <- [162, 134]
  val?            %135.0 = Phi                      %134.2:BB134, %162.1:BB162
  val?            %135.1 = %135.0
  val?            %135.2 = %135.1
  goto BB136
BB161   <- [111]
  void                    Nop                !     
  lgl$#-          %161.1 = false
  goto BB134
BB112   <- [111]
  (cls|spec|blt)  %112.0 = LdFun              !v    @, <0x560a33cf0bd8>, e434.7
  prom-           %112.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p84, e434.7
  prom-           %112.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p85, e434.7
  val?            %112.3 = Call               !v    %112.0(%112.1, %112.2) e434.7   <vec+>
  void                    StVar              lW    subs, %112.3, e434.7
  val?^ | miss    %112.5 = LdVar              eR    .identC, e434.7
  lgl$#-          %112.6 = Identical                %112.5, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %112.6 -> BB474 (if true) | BB475 (if false)
BB150   <- [148]
  val?^ | miss    %150.0 = LdVar              eR    errors, e0.1
  val?            %150.1 = Force!             !v    %150.0, e0.1   <val?_>
  (cls|spec|blt)  %150.2 = LdFun              !v    paste0, e0.1
  fs              %150.3 = FrameState         R     0x560a364b2230+3651: [%322.3, %322.4, %75.2, <blt c>, %150.1, %150.2], env=e0.1
  void                    Deopt              !v    %150.3, DeadCall@0x560a360588f0[Call#60], %150.2   !
BB149   <- [148]
  (cls|spec|blt)  %149.0 = LdFun              !v    c, e0.1
  fs              %149.1 = FrameState         R     0x560a364b2230+3595: [%322.3, %322.4, %75.2, %149.0], env=e0.1
  void                    Deopt              !v    %149.1, DeadCall@0x560a360588f0[Call#57], %149.0   !
BB472   <- [145]
  lgl$~-          %472.0 = CastType           d     dn %145.0
  lgl$-           %472.1 = Force!<wrapped>          %472.0,    <lgl$->
  lgl$-           %472.2 = Not                d     %472.1, elided
  lgl$#-          %472.3 = CheckTrueFalse     e     %472.2
  void                    Branch                   %472.3 -> BB147 (if true) | BB146 (if false)
BB473   <- [145]
  prom-           %473.0 = MkArg                    %456.0, validObject[0x560a36b71960]_p31 (!refl), e0.1
  val?~           %473.1 = CastType                 up %473.0
  fs              %473.2 = FrameState         R     0x560a364b2230+3551: [%322.3, %322.4, %75.2], env=e0.1
  env             e473.3 = (MkEnv)            l     x=%473.1, parent=R_BaseNamespace, context 0
  fs              %473.4 = FrameState         R     0x560a35f8ec20+319: [%466.3], env=e473.3, next=%473.2
  void                    Deopt              !v    %473.4, Typecheck@0x560a360588f0[Type#222], %145.0   !
BB134   <- [161, 133]
  val?            %134.0 = Phi                      %133.2:BB133, %161.1:BB161
  val?            %134.1 = %134.0
  val?            %134.2 = %134.1
  goto BB135
BB474   <- [112]
  prom-           %474.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p86, e434.7
  val?            %474.1 = StaticCall         !v    .identC[0x560a36f73370](%474.0, "classRepresentation") e434.7   <lgl$->
  lgl$#-          %474.2 = IsType                   %474.1 isA lgl$-
  void                    Branch                   %474.2 -> BB476 (if true) | BB477 (if false)
BB475   <- [112]
  fs              %475.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %475.1 = FrameState         R     0x560a35c09fa0+364: [], env=e434.7, next=%475.0
  void                    Deopt              !v    %475.1, CallTarget@0x560a35c0c220[Call#7], %112.5   !
BB147   <- [472]
  void                    Nop                !     
  int$-           %147.1 = %75.2
  goto BB75
BB146   <- [472]
  (cls|spec|blt)  %146.0 = LdFun              !v    anyStrings, e0.1
  fs              %146.1 = FrameState         R     0x560a364b2230+3805: [%322.3, %322.4, %75.2, %146.0], env=e0.1
  void                    Deopt              !v    %146.1, DeadCall@0x560a360588f0[Call#62], %146.0   !
BB476   <- [474]
  lgl$-           %476.0 = CastType           d     dn %474.1
  lgl$-           %476.1 = Not                d     %476.0, elided
  lgl$-           %476.2 = AsLogical                %476.1
  lgl$#-          %476.3 = Identical                %476.2, false
  void                    Branch                   %476.3 -> BB118 (if true) | BB117 (if false)
BB477   <- [474]
  void                    Nop                !     
  val?            %477.1 = %474.1
  dr              %477.2 = Typecheck@0x560a35c0c220[Type#26]
  goto BB115
BB118   <- [476]
  lgl$#-          %118.0 = CheckTrueFalse     e     %476.2
  void                    Branch                   %118.0 -> BB158 (if true) | BB119 (if false)
BB117   <- [476]
  (cls|spec|blt)  %117.0 = LdFun              !v    isClassUnion, e434.7
  fs              %117.1 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %117.2 = FrameState         R     0x560a35c09fa0+419: [%476.2, %117.0], env=e434.7, next=%117.1
  void                    Deopt              !v    %117.2, DeadCall@0x560a35c0c220[Call#9], %117.0   !
BB115   <- [477, 479]
  val?^ | miss    %115.0 = Phi                      %477.1:BB477, %479.1:BB479
  val?^ | miss    %115.1 = %115.0
  dr              %115.2 = Phi                      %477.2:BB477, %479.2:BB479
  dr              %115.3 = %115.2
  fs              %115.4 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %115.5 = FrameState         R     0x560a35c09fa0+401: [%474.1], env=e434.7, next=%115.4
  void                    Deopt              !v    %115.5, %115.3, %115.1   !
BB158   <- [118]
  val?^ | miss    %158.0 = LdVar              eR    any, e434.7
  lgl$#-          %158.1 = Identical                <blt any>, %158.0   <@?>
  void                    Branch                   %158.1 -> BB160 (if true) | BB159 (if false)
BB119   <- [118]
  val?^ | miss    %119.0 = LdVar              eR    match, e434.7
  lgl$#-          %119.1 = Identical                %119.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %119.1 -> BB478 (if true) | BB479 (if false)
BB160   <- [158]
  (cls|spec|blt)  %160.0 = LdFun              !v    %in%, e434.7
  fs              %160.1 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %160.2 = FrameState         R     0x560a35c09fa0+961: [<blt any>, %160.0], env=e434.7, next=%160.1
  void                    Deopt              !v    %160.2, DeadCall@0x560a35c0c220[Call#20], %160.0   !
BB159   <- [158]
  (cls|spec|blt)  %159.0 = LdFun              !v    any, e434.7
  fs              %159.1 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %159.2 = FrameState         R     0x560a35c09fa0+924: [%159.0], env=e434.7, next=%159.1
  void                    Deopt              !v    %159.2, DeadCall@0x560a35c0c220[Call#15], %159.0   !
BB478   <- [119]
  prom-           %478.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p89, e434.7
  val?^           %478.1 = CastType                 up %478.0
  val?^ | miss    %478.2 = LdVar              eR    class1, e434.7
  val?            %478.3 = Force!<wrapped>    !v    %478.2, e434.7   <str$+>
  prom-           %478.4 = MkArg                    %478.3, validObject[0x560a36b71960]_p88 (!refl), e434.7
  val?~           %478.5 = CastType                 up %478.4
  env             e478.6 = (MkEnv)            l     x=%478.5, table=%478.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  lgl$#-          %478.7 = IsEnvStub          R     , e478.6
  void                    Branch                   %478.7 -> BB480 (if true) | BB481 (if false)
BB479   <- [119]
  void                    Nop                !     
  val?^ | miss    %479.1 = %119.0
  dr              %479.2 = CallTarget@0x560a35c0c220[Call#10]
  goto BB115
BB480   <- [478]
  val?            %480.0 = Force!<lazy>       !vL   %478.1, e478.6   <val?+>
  lgl$#-          %480.1 = IsType                   %480.0 isA val?+
  lgl$#-          %480.2 = IsEnvStub          R     , e478.6
  void                    Branch                   %480.2 -> BB482 (if true) | BB483 (if false)
BB481   <- [478]
  fs              %481.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %481.1 = FrameState         R     0x560a35c09fa0+496: [], env=e434.7, next=%481.0
  env             e481.2 = (MkEnv)            l     x=%478.5, table=%478.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %481.3 = FrameState         R     0x560a34505d40+9: [%478.3], env=e481.2, next=%481.1
  void                    Deopt              !v    %481.3, EnvStubMaterialized@0x560a34558cb0[Call#unknown], e478.6   !
BB482   <- [480]
  lgl$#-          %482.0 = IsType                   %478.3 isA val?+
  void                    Branch                   %482.0 -> BB484 (if true) | BB485 (if false)
BB483   <- [480]
  void                    Nop                !     
  env             e483.1 = e478.6
  dr              %483.2 = EnvStubMaterialized@0x560a34558cb0[Call#unknown]
  goto BB122
BB484   <- [482]
  val?+           %484.0 = CastType           d     dn %478.3   <str$+>
  void                    Branch                   %480.1 -> BB486 (if true) | BB487 (if false)
BB485   <- [482]
  void                    Nop                !     
  val?            %485.1 = %478.3
  dr              %485.2 = Typecheck@0x560a34558cb0[Type#0]
  goto BB122
BB122   <- [483, 485, 487]
  val?^ | miss    %122.0 = Phi                      e483.1:BB483, %485.1:BB485, %487.1:BB487
  val?^ | miss    %122.1 = %122.0
  dr              %122.2 = Phi                      %483.2:BB483, %485.2:BB485, %487.2:BB487
  dr              %122.3 = %122.2
  fs              %122.4 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %122.5 = FrameState         R     0x560a35c09fa0+496: [], env=e434.7, next=%122.4
  fs              %122.6 = FrameState         R     0x560a34505d40+23: [%478.3, %480.0], env=e478.6, next=%122.5
  void                    Deopt              !v    %122.6, %122.3, %122.1   !
BB486   <- [484]
  val?+           %486.0 = CastType           d     dn %480.0
  val+            %486.1 = CallSafeBuiltin    wed   match(%484.0, %486.0, NA, nil)    <int$->
  lgl$#-          %486.2 = IsType                   %486.1 isA int$-
  void                    Branch                   %486.2 -> BB488 (if true) | BB489 (if false)
BB487   <- [484]
  void                    Nop                !     
  val?            %487.1 = %480.0
  dr              %487.2 = Typecheck@0x560a34558cb0[Type#1]
  goto BB122
BB488   <- [486]
  int$-           %488.0 = CastType           d     dn %486.1
  void                    StVar              lW    i, %488.0, e434.7
  val?^ | miss    %488.2 = LdVar              eR    is.na, e434.7
  lgl$#-          %488.3 = Identical                <blt is.na>, %488.2   <true>
  void                    Branch                   %488.3 -> BB490 (if true) | BB491 (if false)
BB489   <- [486]
  fs              %489.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %489.1 = FrameState         R     0x560a35c09fa0+496: [], env=e434.7, next=%489.0
  fs              %489.2 = FrameState         R     0x560a34505d40+69: [%486.1], env=e478.6, next=%489.1
  void                    Deopt              !v    %489.2, Typecheck@0x560a35c0c220[Type#32], %486.1   !
BB490   <- [488]
  lgl$-           %490.0 = CallSafeBuiltin    wed   is.na(%488.0)    <lgl$->
  lgl$-           %490.1 = Not                d     %490.0, elided
  int-            %490.2 = Extract1_1D        wed   %488.0, %490.1, elided   <int->
  void                    StVar              lW    i, %490.2, e434.7
  val?^ | miss    %490.4 = LdVar              eR    length, e434.7
  lgl$#-          %490.5 = Identical                <blt length>, %490.4   <true>
  void                    Branch                   %490.5 -> BB492 (if true) | BB493 (if false)
BB491   <- [488]
  fs              %491.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %491.1 = FrameState         R     0x560a35c09fa0+510: [], env=e434.7, next=%491.0
  void                    Deopt              !v    %491.1, DeadBranchReached@0x560a35c0c220[Test#3], %488.3   !
BB492   <- [490]
  (int|real)$-    %492.0 = CallSafeBuiltin    wed   length(%490.2)    <int$->
  lgl$#-          %492.1 = IsType                   %492.0 isA int$-
  void                    Branch                   %492.1 -> BB494 (if true) | BB495 (if false)
BB493   <- [490]
  fs              %493.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %493.1 = FrameState         R     0x560a35c09fa0+668: [], env=e434.7, next=%493.0
  void                    Deopt              !v    %493.1, DeadBranchReached@0x560a35c0c220[Test#4], %490.5   !
BB494   <- [492]
  int$-           %494.0 = CastType           d     dn %492.0
  lgl$#-          %494.1 = CheckTrueFalse     e     %494.0
  void                    Branch                   %494.1 -> BB152 (if true) | BB132 (if false)
BB495   <- [492]
  fs              %495.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %495.1 = FrameState         R     0x560a35c09fa0+759: [%492.0], env=e434.7, next=%495.0
  void                    Deopt              !v    %495.1, Typecheck@0x560a35c0c220[Type#42], %492.0   !
BB152   <- [494]
  val?^ | miss    %152.0 = LdVar              eR    subs, e434.7
  val?            %152.1 = Force!             !v    %152.0, e434.7   <val?_>
  lgl$#-          %152.2 = IsType                   %152.1 isA val+   <@?>
  void                    Branch                   %152.2 -> BB155 (if true) | BB153 (if false)
BB132   <- [494]
  void                    Nop                !     
  lgl$#-          %132.1 = false
  goto BB133
BB155   <- [152]
  val?^ | miss    %155.0 = LdVar              eR    i, e434.7
  val?            %155.1 = Force!             !v    %155.0, e434.7   <val?_>
  lgl$#-          %155.2 = IsType                   %155.1 isA val?+
  void                    Branch                   %155.2 -> BB496 (if true) | BB497 (if false)
BB153   <- [152]
  prom-           %153.0 = MkArg                    unboundValue, validObject[0x560a36b71960]_p93, e434.7
  prom-           %153.1 = %153.0
  goto BB154
BB133   <- [132, 154]
  val?            %133.0 = Phi                      %132.1:BB132, %154.3:BB154
  val?            %133.1 = %133.0
  val?            %133.2 = %133.1
  goto BB134
BB496   <- [155]
  val?+           %496.0 = CastType           d     dn %155.1   <val?_>
  val?            %496.1 = Extract1_1D        wed   %496.0, 1L, elided   <val?_>
  val?            %496.2 = %496.1
  goto BB154
BB497   <- [155]
  fs              %497.0 = FrameState         R     0x560a364b2230+3505: [%322.3, %322.4, %75.2], env=e0.1
  fs              %497.1 = FrameState         R     0x560a35c09fa0+835: [%152.1, %155.1], env=e434.7, next=%497.0
  void                    Deopt              !v    %497.1, Typecheck@0x560a35c0c220[Type#46], %155.1   !
BB154   <- [153, 496]
  val?            %154.0 = Phi                      %496.2:BB496, %153.1:BB153
  val?            %154.1 = %154.0
  val?            %154.2 = Extract2_1D        !v    %152.1, %154.1, e434.7   <val?_>
  val?            %154.3 = %154.2
  goto BB133
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p13, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x560a35db5410>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p11, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p12, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?+>
  val?            %13.4 = %13.3
  goto BB11
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x560a33cf1748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36b71960]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p25, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x560a35db5410>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x560a36b71960]_p23, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x560a36b71960]_p24, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?>
  val?            %13.4 = %13.3
  goto BB11
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x560a33cf1748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36b71960]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 63:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36b71960]_p64, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|vec)->
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36b71960]_p69, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 69:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|vec)->
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, <0x560a34e9acd0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36b71960]_p74, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <other>
  void                    Return             l     %0.3
Prom 74:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 79:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 80:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 81:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 82:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 83:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 84:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 85:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 86:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x560a33cf1748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36b71960]_p87, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 87:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 88:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 89:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x560a33cf1470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36b71960]_p90, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 90:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 93:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 94:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .requirePackage, <0x560a35d63a68>, e0.0
  val?            %0.2  = Call               !     %0.1("methods") e0.0   <env->
  void                    Return             l     %0.2
Prom 95:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 96:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 97:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 98:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 99:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 100:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ validObject[0x560a36b71960]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
