
┌──────────────────────────────────────────────────────────────────────────────┐
│ .assignOverBinding[0x560a35e48ee0]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl3,!Obj3                │
│ Properties:  ForceOrd: 3                                                     │
├────── Final PIR Version
.assignOverBinding[0x560a35e48ee0]
BB0
  val?~+          %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val+            %0.4  = Force<value>             %0.0,    <lgl$->
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB25 (if true) | BB3 (if false)
BB25   <- [0]
  env             e25.0 = (MkEnv)            l     what=%0.3, value=%0.2, where=%0.1, verbose=%0.0, parent=<env 0x560a342f8378>, context 1
  (cls|spec|blt)  %25.1 = LdFun              !v    getPackageName, <env 0x560a342f8378>
  fs              %25.2 = FrameState         R     0x560a361acd00+30: [%25.1], env=e25.0
  void                    Deopt              !v    %25.2, DeadCall@0x560a36139600[Call#0], %25.1
BB3   <- [0]
  val?^ | miss    %3.0  = LdVar              eR    options, <env 0x560a342f8378>
  lgl$#-          %3.1  = Identical                %3.0, function(...) <(rir::DispatchTable*)0x560a35f3|...
  void                    Branch                   %3.1 -> BB27 (if true) | BB28 (if false)
BB27   <- [3]
  prom-           %27.0 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p0 (!refl), 
  dots-           %27.1 = DotsList           l     warn=%27.0
  env             e27.2 = MkEnv              l     what=%0.3, value=%0.2, where=%0.1, verbose=%0.0, parent=<env 0x560a342f8378>, context 1
  ct              %27.3 = PushContext        lCL   %27.1, options(warn=-(1)), function(...) <(rir::DispatchTable*)0x560a35f3|..., e27.2
  env             e27.4 = MkEnv              l     ...=%27.1, parent=R_BaseNamespace, context 1
  val?            %27.5 = NamedCall          !v    <blt options>(warn=%27.0) e27.4
  val?            %27.6 = PopContext         C     %27.5, %27.3   <vec$+>
  void                    StVar              lW    warnOpt, %27.6, e27.2
  (cls|spec|blt)  %27.8 = LdFun              !v    on.exit, <0x560a33cf0270>, e27.2
  prom-           %27.9 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p1, e27.2
  val?            %27.10 = Call               !v    %27.8(%27.9) e27.2
  val?^ | miss    %27.11 = LdVar              eR    is.function, e27.2
  lgl$#-          %27.12 = Identical                <blt is.function>, %27.11   <true>
  void                    Branch                   %27.12 -> BB29 (if true) | BB30 (if false)
BB28   <- [3]
  env             e28.0 = (MkEnv)            l     what=%0.3, value=%0.2, where=%0.1, verbose=%0.0, parent=<env 0x560a342f8378>, context 1
  fs              %28.1 = FrameState         R     0x560a361acd00+15: [%0.5], env=e28.0
  void                    Deopt              !v    %28.1, CallTarget@0x560a36139600[Call#6], %3.0
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    value, e27.2
  val?            %29.1 = Force!<lazy>       !v    %29.0, e27.2   <other>
  val?            %29.2 = CallBuiltin        !v    is.function(%29.1) e27.2   <lgl$->
  lgl$#-          %29.3 = IsType                   %29.2 isA lgl$-
  void                    Branch                   %29.3 -> BB31 (if true) | BB32 (if false)
BB30   <- [27]
  fs              %30.0 = FrameState         R     0x560a361acd00+255: [%27.10], env=e27.2
  void                    Deopt              !v    %30.0, DeadBranchReached@0x560a36139600[Test#0], %27.12   !
BB31   <- [29]
  lgl$-           %31.0 = CastType           d     dn %29.2
  lgl$#-          %31.1 = CheckTrueFalse     e     %31.0
  void                    Branch                   %31.1 -> BB24 (if true) | BB8 (if false)
BB32   <- [29]
  void                    Nop                !     
  val?            %32.1 = %29.2
  dr              %32.2 = Typecheck@0x560a36139600[Type#15]
  goto BB6
BB24   <- [31]
  (cls|spec|blt)  %24.0 = LdFun              !v    environment, e27.2
  fs              %24.1 = FrameState         R     0x560a361acd00+368: [%24.0], env=e27.2
  void                    Deopt              !v    %24.1, DeadCall@0x560a36139600[Call#10], %24.0   !
BB8   <- [31]
  val?^ | miss    %8.0  = LdVar              eR    exists, e27.2
  lgl$#-          %8.1  = Identical                %8.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %8.1 -> BB33 (if true) | BB34 (if false)
BB6   <- [32, 34]
  val?^ | miss    %6.0  = Phi                      %32.1:BB32, %34.1:BB34
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %32.2:BB32, %34.2:BB34
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x560a361acd00+347: [%29.2], env=e27.2
  void                    Deopt              !v    %6.4, %6.3, %6.1   !
BB33   <- [8]
  prom-           %33.0 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p3, e27.2
  prom-           %33.1 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p4, e27.2
  val?            %33.2 = StaticCall         !v    exists[0x560a370ad090](%33.0, missingArg, %33.1, missingArg, missingArg, false) { 0 2n 5n } e27.2   <lgl$->
  lgl$#-          %33.3 = IsType                   %33.2 isA lgl$-
  void                    Branch                   %33.3 -> BB35 (if true) | BB36 (if false)
BB34   <- [8]
  void                    Nop                !     
  val?^ | miss    %34.1 = %8.0
  dr              %34.2 = CallTarget@0x560a36139600[Call#18]
  goto BB6
BB35   <- [33]
  lgl$-           %35.0 = CastType           d     dn %33.2
  lgl$-           %35.1 = AsLogical                %35.0
  lgl$#-          %35.2 = Identical                %35.1, false
  void                    Branch                   %35.2 -> BB23 (if true) | BB11 (if false)
BB36   <- [33]
  void                    Nop                !     
  val?            %36.1 = %33.2
  dr              %36.2 = Typecheck@0x560a36139600[Type#38]
  goto BB9
BB23   <- [35]
  void                    Nop                !     
  lgl$-           %23.1 = %35.1
  goto BB14
BB11   <- [35]
  val?^ | miss    %11.0 = LdVar              eR    bindingIsLocked, e27.2
  lgl$#-          %11.1 = Identical                %11.0, function(sym, env) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %11.1 -> BB37 (if true) | BB38 (if false)
BB9   <- [36, 38]
  val?^ | miss    %9.0  = Phi                      %36.1:BB36, %38.1:BB38
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %36.2:BB36, %38.2:BB38
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x560a361acd00+871: [%33.2], env=e27.2
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB14   <- [23, 41]
  lgl$-           %14.0 = Phi                      %41.3:BB41, %23.1:BB23
  lgl$-           %14.1 = %14.0
  lgl$#-          %14.2 = CheckTrueFalse     e     %14.1
  void                    Branch                   %14.2 -> BB18 (if true) | BB17 (if false)
BB37   <- [11]
  prom-           %37.0 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p6, e27.2
  val?^ | miss    %37.1 = LdVar              eR    what, e27.2
  val?            %37.2 = Force!<wrapped>    !v    %37.1, e27.2   <str$->
  prom-           %37.3 = MkArg                    %37.2, .assignOverBinding[0x560a35e48ee0]_p5 (!refl), 
  val?            %37.4 = StaticCall         !v    bindingIsLocked[0x560a37615770](%37.3, %37.0) e27.2   <lgl$->
  lgl$#-          %37.5 = IsType                   %37.4 isA lgl$-
  void                    Branch                   %37.5 -> BB41 (if true) | BB42 (if false)
BB38   <- [11]
  void                    Nop                !     
  val?^ | miss    %38.1 = %11.0
  dr              %38.2 = CallTarget@0x560a36139600[Call#19]
  goto BB9
BB18   <- [14]
  val?^ | miss    %18.0 = LdVar              eR    unlockBinding, e27.2
  lgl$#-          %18.1 = Identical                %18.0, function(sym, env) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %18.1 -> BB39 (if true) | BB40 (if false)
BB17   <- [14]
  (cls|spec|blt)  %17.0 = LdFun              !v    assign, e27.2
  fs              %17.1 = FrameState         R     0x560a361acd00+938: [%17.0], env=e27.2
  void                    Deopt              !v    %17.1, DeadCall@0x560a36139600[Call#20], %17.0   !
BB41   <- [37]
  lgl$-           %41.0 = CastType           d     dn %37.4
  lgl$-           %41.1 = AsLogical                %41.0
  lgl$-           %41.2 = LAnd                     %35.1, %41.1
  lgl$-           %41.3 = %41.2
  goto BB14
BB42   <- [37]
  fs              %42.0 = FrameState         R     0x560a361acd00+920: [%35.1, %37.4], env=e27.2
  void                    Deopt              !v    %42.0, Typecheck@0x560a36139600[Type#41], %37.4   !
BB39   <- [18]
  prom-           %39.0 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p8, e27.2
  val?^ | miss    %39.1 = LdVar              eR    what, e27.2
  val?            %39.2 = Force!<wrapped>    !v    %39.1, e27.2   <str$->
  prom-           %39.3 = MkArg                    %39.2, .assignOverBinding[0x560a35e48ee0]_p7 (!refl), 
  val?            %39.4 = StaticCall         !v    unlockBinding[0x560a35f36290](%39.3, %39.0) e27.2
  val?^ | miss    %39.5 = LdVar              eR    assign, e27.2
  lgl$#-          %39.6 = Identical                %39.5, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %39.6 -> BB43 (if true) | BB44 (if false)
BB40   <- [18]
  fs              %40.0 = FrameState         R     0x560a361acd00+927: [%14.1], env=e27.2
  void                    Deopt              !v    %40.0, CallTarget@0x560a36139600[Call#21], %18.0   !
BB43   <- [39]
  prom-           %43.0 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p9, e27.2
  prom-           %43.1 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p10, e27.2
  prom-           %43.2 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p11, e27.2
  val?            %43.3 = StaticCall         !v    assign[0x560a360c8c60](%43.0, %43.1, %43.2) e27.2
  val?^ | miss    %43.4 = LdVar              eR    lockBinding, e27.2
  lgl$#-          %43.5 = Identical                %43.4, function(sym, env) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %43.5 -> BB45 (if true) | BB46 (if false)
BB44   <- [39]
  fs              %44.0 = FrameState         R     0x560a361acd00+1022: [%39.4], env=e27.2
  void                    Deopt              !v    %44.0, CallTarget@0x560a36139600[Call#22], %39.5   !
BB45   <- [43]
  prom-           %45.0 = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p13, e27.2
  val?^ | miss    %45.1 = LdVar              eR    what, e27.2
  void                    Visible            v     
  val?            %45.3 = Force!<wrapped>    !     %45.1, e27.2   <str$->
  prom-           %45.4 = MkArg                    %45.3, .assignOverBinding[0x560a35e48ee0]_p12 (!refl), 
  val?            %45.5 = StaticCall         !     lockBinding[0x560a36cdac20](%45.4, %45.0) e27.2   <nil->
  void                    Return             l     %45.5
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x560a361acd00+1065: [%43.3], env=e27.2
  void                    Deopt              !v    %46.0, CallTarget@0x560a36139600[Call#23], %43.4   !
Prom 0:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     options, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .assignOverBinding[0x560a35e48ee0]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    warnOpt, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3

│ .assignOverBinding[0x560a35e48ee0]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
