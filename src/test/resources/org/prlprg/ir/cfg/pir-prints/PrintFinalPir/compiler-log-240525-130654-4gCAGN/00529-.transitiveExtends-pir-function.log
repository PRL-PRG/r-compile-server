
┌──────────────────────────────────────────────────────────────────────────────┐
│ .transitiveExtends[0x560a37678270]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl3,NonRefl4                    │
│ Properties:                                                                  │
├────── Final PIR Version
.transitiveExtends[0x560a37678270]
BB0
  val?^           %0.0  = LdArg                    4
  val?^           %0.1  = LdArg                    3
  val?^           %0.2  = LdArg                    2
  val?^           %0.3  = LdArg                    1
  val?^           %0.4  = LdArg                    0
  val?^ | miss    %0.5  = LdVar              eR    names, <env 0x560a342f8378>
  lgl$#-          %0.6  = Identical                <blt names>, %0.5   <true>
  void                    Branch                   %0.6 -> BB28 (if true) | BB29 (if false)
BB28   <- [0]
  env             e28.0 = MkEnv              l     from=%0.4, by=%0.3, byExt=%0.2, moreExts=%0.1, strictBy=%0.0, parent=<env 0x560a342f8378>, context 1
  val?            %28.1 = Force!<lazy>       !vrd  %0.1,    <vec$+>
  lgl$#-          %28.2 = IsType                   %28.1 isA val?+
  void                    Branch                   %28.2 -> BB30 (if true) | BB31 (if false)
BB29   <- [0]
  env             e29.0 = (MkEnv)            l     from=%0.4, by=%0.3, byExt=%0.2, moreExts=%0.1, strictBy=%0.0, parent=<env 0x560a342f8378>, context 1
  fs              %29.1 = FrameState         R     0x560a36531d20+0: [], env=e29.0
  void                    Deopt              !v    %29.1, DeadBranchReached@0x560a360cad00[Test#0], %0.6
BB30   <- [28]
  val?+           %30.0 = CastType           d     dn %28.1   <vec$+>
  val+            %30.1 = CallSafeBuiltin    wed   names(%30.0)    <str$->
  void                    StVar              lW    what, %30.1, e28.0
  val?^ | miss    %30.3 = LdVar              eR    seq_along, <env 0x560a342f8378>
  lgl$#-          %30.4 = Identical                <blt seq_along>, %30.3   <true>
  void                    Branch                   %30.4 -> BB32 (if true) | BB33 (if false)
BB31   <- [28]
  fs              %31.0 = FrameState         R     0x560a36531d20+69: [<blt names>, %28.1], env=e28.0
  void                    Deopt              !v    %31.0, Typecheck@0x560a360cad00[Type#1], %28.1
BB32   <- [30]
  val?            %32.0 = CallBuiltin        !v    seq_along(%30.0) e28.0   <int$->
  lgl$#-          %32.1 = IsType                   %32.0 isA int$-
  void                    Branch                   %32.1 -> BB34 (if true) | BB35 (if false)
BB33   <- [30]
  fs              %33.0 = FrameState         R     0x560a36531d20+105: [], env=e28.0
  void                    Deopt              !v    %33.0, DeadBranchReached@0x560a360cad00[Test#1], %30.4
BB34   <- [32]
  int$-           %34.0 = CastType           d     dn %32.0
  int$-           %34.1 = Inc                      0L
  lgl$-           %34.2 = Lt                 d     1L, %34.1, elided   <false>
  lgl$#-          %34.3 = Identical                %34.2, true
  void                    Branch                   %34.3 -> BB37 (if true) | BB36 (if false)
BB35   <- [32]
  void                    Nop                !     
  val?            %35.1 = %32.0
  dr              %35.2 = Typecheck@0x560a360cad00[Type#5]
  goto BB7
BB37   <- [34]
  void                    Nop                !     
  lgl$#-          %37.1 = %34.3
  dr              %37.2 = DeadBranchReached@0x560a360cad00[Test#2]
  goto BB7
BB36   <- [34]
  int$-           %36.0 = Extract2_1D        wed   %34.0, %34.1, elided
  void                    StVar              lW    i, %36.0, e28.0
  val?^ | miss    %36.2 = LdVar              eR    moreExts, e28.0
  val?            %36.3 = Force!<wrapped>    !v    %36.2, e28.0   <vec$+>
  lgl$#-          %36.4 = IsType                   %36.3 isA val+   <true>
  lgl$#-          %36.5 = IsType                   %36.3 isA val?+
  void                    Branch                   %36.4 -> BB38 (if true) | BB39 (if false)
BB7   <- [35, 37]
  val?^ | miss    %7.0  = Phi                      %35.1:BB35, %37.1:BB37
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %35.2:BB35, %37.2:BB37
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x560a36531d20+196: [%32.0], env=e28.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB38   <- [36]
  val?^ | miss    %38.0 = LdVar              eR    i, e28.0
  lgl$#-          %38.1 = IsType                   %38.0 isA int$-
  void                    Branch                   %38.1 -> BB40 (if true) | BB41 (if false)
BB39   <- [36]
  void                    Nop                !     
  lgl$#-          %39.1 = %36.4
  dr              %39.2 = DeadBranchReached@0x560a360cad00[Test#3]
  goto BB9
BB40   <- [38]
  int$-           %40.0 = CastType           d     dn %38.0
  void                    Branch                   %36.5 -> BB42 (if true) | BB43 (if false)
BB41   <- [38]
  void                    Nop                !     
  val?^ | miss    %41.1 = %38.0
  dr              %41.2 = Typecheck@0x560a360cad00[Type#8]
  goto BB9
BB9   <- [39, 41, 43]
  val?^ | miss    %9.0  = Phi                      %39.1:BB39, %41.1:BB41, %43.1:BB43
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %39.2:BB39, %41.2:BB41, %43.2:BB43
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x560a36531d20+250: [%34.0, 1L, %34.1, %36.3], env=e28.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB42   <- [40]
  val?+           %42.0 = CastType           d     dn %36.3   <vec$+>
  val?            %42.1 = Extract2_1D        wed   %42.0, %40.0, elided   <other>
  void                    StVar              lW    toExt, %42.1, e28.0
  val?^ | miss    %42.3 = LdVar              eR    what, e28.0
  lgl$#-          %42.4 = IsType                   %42.3 isA val?~- | miss
  void                    Branch                   %42.4 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  void                    Nop                !     
  val?            %43.1 = %36.3
  dr              %43.2 = Typecheck@0x560a360cad00[Type#6]
  goto BB9
BB44   <- [42]
  val?~- | miss   %44.0 = CastType           d     dn %42.3
  val?-           %44.1 = Force!<value>            %44.0,    <str$->
  lgl$#-          %44.2 = IsType                   %44.1 isA val+   <true>
  void                    Branch                   %44.2 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  void                    Nop                !     
  val?^ | miss    %45.1 = %42.3
  dr              %45.2 = Typecheck@0x560a360cad00[Type#10]
  goto BB11
BB46   <- [44]
  val?            %46.0 = Extract2_1D        wed   %44.1, %40.0, elided   <str$->
  void                    StVar              lW    to, %46.0, e28.0
  val?^ | miss    %46.2 = LdVar              eR    .combineExtends, e28.0
  lgl$#-          %46.3 = Identical                %46.2, function(byExt, toExt, by, to, strictBy) <(rir|...
  void                    Branch                   %46.3 -> BB48 (if true) | BB49 (if false)
BB47   <- [44]
  void                    Nop                !     
  lgl$#-          %47.1 = %44.2
  dr              %47.2 = DeadBranchReached@0x560a360cad00[Test#4]
  goto BB11
BB11   <- [45, 47]
  val?^ | miss    %11.0 = Phi                      %45.1:BB45, %47.1:BB47
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %45.2:BB45, %47.2:BB47
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x560a36531d20+316: [%34.0, 1L, %34.1], env=e28.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB48   <- [46]
  prom-           %48.0 = MkArg                    unboundValue, .transitiveExtends[0x560a37678270]_p0, e28.0
  prom-           %48.1 = MkArg                    unboundValue, .transitiveExtends[0x560a37678270]_p1 (!refl), e28.0
  prom-           %48.2 = MkArg                    unboundValue, .transitiveExtends[0x560a37678270]_p2, e28.0
  prom-           %48.3 = MkArg                    unboundValue, .transitiveExtends[0x560a37678270]_p3 (!refl), e28.0
  prom-           %48.4 = MkArg                    unboundValue, .transitiveExtends[0x560a37678270]_p4, e28.0
  val?            %48.5 = Call               !v    function(byExt, toExt, by, to, strictBy) <(rir|...(%48.0, %48.1, %48.2, %48.3, %48.4) e28.0   <other>
  void                    StVar              lW    toExt, %48.5, e28.0
  val             %48.7 = ChkMissing         e     %48.5
  val?^ | miss    %48.8 = LdVar              eR    moreExts !upd, e28.0
  val?            %48.9 = Force!<wrapped>    !v    %48.8, e28.0   <vec$+>
  val?^ | miss    %48.10 = LdVar              eR    i, e28.0
  lgl$#-          %48.11 = IsType                   %48.10 isA int$-
  void                    Branch                   %48.11 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  fs              %49.0 = FrameState         R     0x560a36531d20+391: [%34.0, 1L, %34.1], env=e28.0
  void                    Deopt              !v    %49.0, CallTarget@0x560a360cad00[Call#2], %46.2   !
BB50   <- [48]
  int$-           %50.0 = CastType           d     dn %48.10
  val?            %50.1 = Subassign2_1D      !v    %48.5, %48.9, %50.0, e28.0   <val?_>
  void                    StVar              lW    moreExts, %50.1, e28.0
  int$-           %50.3 = Inc                      %34.1
  lgl$-           %50.4 = Lt                 d     1L, %50.3, elided
  lgl$#-          %50.5 = Identical                %50.4, true
  void                    Branch                   %50.5 -> BB26 (if true) | BB17 (if false)
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x560a36531d20+480: [%34.0, 1L, %34.1, %48.5, %48.9], env=e28.0
  void                    Deopt              !v    %51.0, Typecheck@0x560a360cad00[Type#22], %48.10   !
BB26   <- [50]
  val             %26.0 = ChkMissing         e     %50.1
  void                    Visible            v     
  void                    Return             l     %50.1
BB17   <- [50]
  int$-           %17.0 = Extract2_1D        wed   %34.0, %50.3, elided   <val?_>
  void                    StVar              lW    i, %17.0, e28.0
  val             %17.2 = ChkMissing         e     %50.1
  lgl$#-          %17.3 = IsType                   %50.1 isA val+   <@?>
  void                    Branch                   %17.3 -> BB25 (if true) | BB20 (if false)
BB25   <- [17]
  void                    Nop                !     
  int$-           %25.1 = %17.0
  goto BB21
BB20   <- [17]
  prom-           %20.0 = MkArg                    unboundValue, .transitiveExtends[0x560a37678270]_p5 (!refl), e28.0
  prom-           %20.1 = %20.0
  goto BB21
BB21   <- [25, 20]
  (int|prom)-     %21.0 = Phi                      %25.1:BB25, %20.1:BB20
  (int|prom)-     %21.1 = %21.0
  lgl$#-          %21.2 = IsType                   %50.1 isA val?+
  void                    Branch                   %21.2 -> BB52 (if true) | BB53 (if false)
BB52   <- [21]
  val?+           %52.0 = CastType           d     dn %50.1   <val?_>
  val?            %52.1 = Extract2_1D        wed   %52.0, %21.1, elided   <val?_>
  void                    StVar              lW    toExt, %52.1, e28.0
  val?^ | miss    %52.3 = LdVar              eR    what, e28.0
  val?            %52.4 = Force!             !v    %52.3, e28.0   <val?_>
  lgl$#-          %52.5 = IsType                   %52.4 isA val+   <@?>
  void                    Branch                   %52.5 -> BB24 (if true) | BB22 (if false)
BB53   <- [21]
  fs              %53.0 = FrameState         R     0x560a36531d20+538: [%34.0, 1L, %50.3], env=e28.0
  void                    Deopt              !v    %53.0, Typecheck@0x560a360cad00[Type#23], %50.1   !
BB24   <- [52]
  val?^ | miss    %24.0 = LdVar              eR    i, e28.0
  val?            %24.1 = Force!             !v    %24.0, e28.0   <val?_>
  val?            %24.2 = %24.1
  goto BB23
BB22   <- [52]
  prom-           %22.0 = MkArg                    unboundValue, .transitiveExtends[0x560a37678270]_p6, e28.0
  prom-           %22.1 = %22.0
  goto BB23
BB23   <- [24, 22]
  val?            %23.0 = Phi                      %24.2:BB24, %22.1:BB22
  val?            %23.1 = %23.0
  val?            %23.2 = Extract2_1D        !v    %52.4, %23.1, e28.0   <val?_>
  void                    StVar              lW    to, %23.2, e28.0
  (cls|spec|blt)  %23.4 = LdFun              !v    .combineExtends, e28.0
  fs              %23.5 = FrameState         R     0x560a36531d20+693: [%34.0, 1L, %50.3, %23.4], env=e28.0
  void                    Deopt              !v    %23.5, DeadCall@0x560a360cad00[Call#3], %23.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    byExt, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    toExt, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    by, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    to, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    strictBy, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ .transitiveExtends[0x560a37678270]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
