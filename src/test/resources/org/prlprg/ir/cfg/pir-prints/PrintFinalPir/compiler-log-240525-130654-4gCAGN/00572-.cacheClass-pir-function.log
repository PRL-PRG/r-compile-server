
┌──────────────────────────────────────────────────────────────────────────────┐
│ .cacheClass[0x560a3752afa0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl3,!Obj0,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
.cacheClass[0x560a3752afa0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    isFALSE, <env 0x560a342f8378>
  lgl$#-          %0.5  = Identical                %0.4, function(x) <(rir::DispatchTable*)0x560a35e349|...
  void                    Branch                   %0.5 -> BB43 (if true) | BB44 (if false)
BB43   <- [0]
  env             e43.0 = MkEnv              l     name=%0.3, def=%0.2, doSubclasses=%0.1, env=%0.0, parent=<env 0x560a342f8378>, context 1
  val?            %43.1 = Force!<lazy>       !v    %0.1, e43.0   <lgl$->
  lgl$#-          %43.2 = IsType                   %43.1 isA lgl$-
  void                    Branch                   %43.2 -> BB45 (if true) | BB46 (if false)
BB44   <- [0]
  env             e44.0 = (MkEnv)            l     name=%0.3, def=%0.2, doSubclasses=%0.1, env=%0.0, parent=<env 0x560a342f8378>, context 1
  fs              %44.1 = FrameState         R     0x560a35e093b0+0: [], env=e44.0
  void                    Deopt              !v    %44.1, CallTarget@0x560a35e42b90[Call#0], %0.4
BB45   <- [43]
  lgl$-           %45.0 = CastType           d     dn %43.1
  lgl$-           %45.1 = CallSafeBuiltin    wed   is.na(%45.0)    <lgl$->
  lgl$-           %45.2 = Not                d     %45.1, elided
  lgl$-           %45.3 = AsLogical                %45.2
  lgl$-           %45.4 = AsLogical                %45.3
  lgl$-           %45.5 = AsLogical                %45.4
  lgl$#-          %45.6 = Identical                %45.5, false
  void                    Branch                   %45.6 -> BB41 (if true) | BB5 (if false)
BB46   <- [43]
  prom-           %46.0 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p0, e43.0
  val?^           %46.1 = CastType                 up %46.0
  fs              %46.2 = FrameState         R     0x560a35e093b0+32: [], env=e43.0
  env             e46.3 = (MkEnv)            l     x=%46.1, parent=R_BaseNamespace, context 0
  fs              %46.4 = FrameState         R     0x560a35f8ec20+69: [<blt is.logical>], env=e46.3, next=%46.2
  fs              %46.5 = FrameState         R     0x560a35dbd570+5(pr): [%43.1], env=e43.0, next=%46.4
  void                    Deopt              !v    %46.5, Typecheck@0x560a35e42b90[Type#0], %43.1   !
BB41   <- [45]
  void                    Nop                !     
  lgl$-           %41.1 = %45.5
  goto BB6
BB5   <- [45]
  lgl$-           %5.0  = Not                d     %45.0, elided
  lgl$-           %5.1  = AsLogical                %5.0
  lgl$-           %5.2  = LAnd                     %45.5, %5.1
  lgl$-           %5.3  = %5.2
  goto BB6
BB6   <- [41, 5]
  lgl$-           %6.0  = Phi                      %5.3:BB5, %41.1:BB41
  lgl$-           %6.1  = %6.0
  lgl$-           %6.2  = Not                d     %6.1, elided
  lgl$#-          %6.3  = CheckTrueFalse     e     %6.2
  void                    Branch                   %6.3 -> BB40 (if true) | BB7 (if false)
BB40   <- [6]
  (cls|spec|blt)  %40.0 = LdFun              !v    .recacheSubclasses, e43.0
  fs              %40.1 = FrameState         R     0x560a35e093b0+54: [%40.0], env=e43.0
  void                    Deopt              !v    %40.1, DeadCall@0x560a35e42b90[Call#1], %40.0   !
BB7   <- [6]
  val?^ | miss    %7.0  = LdVar              eR    .classTable, e43.0
  val?            %7.1  = Force!<wrapped>    !v    %7.0, e43.0   <env->
  lgl$#-          %7.2  = IsType                   %7.1 isA val+   <true>
  void                    Branch                   %7.2 -> BB47 (if true) | BB48 (if false)
BB47   <- [7]
  val?^ | miss    %47.0 = LdVar              eR    name, e43.0
  val?            %47.1 = Force!<lazy>       !v    %47.0, e43.0   <str$->
  lgl$#-          %47.2 = IsType                   %47.1 isA val?-
  lgl$#-          %47.3 = IsType                   %7.1 isA val?-
  void                    Branch                   %47.3 -> BB49 (if true) | BB50 (if false)
BB48   <- [7]
  fs              %48.0 = FrameState         R     0x560a35e093b0+101: [%7.1], env=e43.0
  void                    Deopt              !v    %48.0, DeadBranchReached@0x560a35e42b90[Test#0], %7.2   !
BB49   <- [47]
  val?-           %49.0 = CastType           d     dn %7.1   <env->
  void                    Branch                   %47.2 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  void                    Nop                !     
  val?            %50.1 = %7.1
  dr              %50.2 = Typecheck@0x560a35e42b90[Type#7]
  goto BB10
BB51   <- [49]
  val?-           %51.0 = CastType           d     dn %47.1   <str$->
  val?            %51.1 = Extract2_1D        wed   %49.0, %51.0, elided   <(nil|other)>
  lgl$-           %51.2 = Is                       %51.1, NULL
  void                    StVar              lW    prev, %51.1, e43.0
  lgl$-           %51.4 = Not                d     %51.2, elided
  lgl$#-          %51.5 = CheckTrueFalse     e     %51.4
  void                    Branch                   %51.5 -> BB15 (if true) | BB12 (if false)
BB52   <- [49]
  void                    Nop                !     
  val?            %52.1 = %47.1
  dr              %52.2 = Typecheck@0x560a35e42b90[Type#9]
  goto BB10
BB10   <- [50, 52]
  val?^ | miss    %10.0 = Phi                      %50.1:BB50, %52.1:BB52
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %50.2:BB50, %52.2:BB52
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x560a35e093b0+146: [%7.1, %47.1], env=e43.0
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB15   <- [51]
  (cls|spec|blt)  %15.0 = LdFun              !v    @, <0x560a33cf0bd8>, e43.0
  prom-           %15.1 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p1, e43.0
  prom-           %15.2 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p2, e43.0
  val?            %15.3 = Call               !v    %15.0(%15.1, %15.2) e43.0   <str$->
  void                    StVar              lW    newpkg, %15.3, e43.0
  val?^ | miss    %15.5 = LdVar              eR    is, e43.0
  lgl$#-          %15.6 = Identical                %15.5, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %15.6 -> BB53 (if true) | BB54 (if false)
BB12   <- [51]
  void                    Nop                !     
  goto BB13
BB53   <- [15]
  prom-           %53.0 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p3, e43.0
  val?            %53.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%53.0, "classRepresentation") e43.0   <lgl$->
  lgl$#-          %53.2 = IsType                   %53.1 isA lgl$-
  void                    Branch                   %53.2 -> BB55 (if true) | BB56 (if false)
BB54   <- [15]
  fs              %54.0 = FrameState         R     0x560a35e093b0+237: [], env=e43.0
  void                    Deopt              !v    %54.0, CallTarget@0x560a35e42b90[Call#4], %15.5   !
BB13   <- [12, 25]
  val?^ | miss    %13.0 = LdVar              eR    def, e43.0
  val?            %13.1 = Force!<lazy>       !v    %13.0, e43.0   <other>
  val?^ | miss    %13.2 = LdVar              eR    .classTable, e43.0
  val?            %13.3 = Force!<wrapped>    !v    %13.2, e43.0   <env->
  val?^ | miss    %13.4 = LdVar              eR    name, e43.0
  val?            %13.5 = Force!<wrapped>    !v    %13.4, e43.0   <str$->
  val?            %13.6 = Subassign2_1D      !v    %13.1, %13.3, %13.5, e43.0
  void                    StVar              lW    .classTable, %13.6, e43.0
  void                    Invisible          v     
  val?            %13.9 = %13.1
  goto BB14
BB55   <- [53]
  lgl$-           %55.0 = CastType           d     dn %53.1
  lgl$#-          %55.1 = CheckTrueFalse     e     %55.0
  void                    Branch                   %55.1 -> BB27 (if true) | BB20 (if false)
BB56   <- [53]
  void                    Nop                !     
  val?            %56.1 = %53.1
  dr              %56.2 = Typecheck@0x560a35e42b90[Type#15]
  goto BB18
BB14   <- [39, 13, 73]
  val?            %14.0 = Phi                      %13.9:BB13, %73.18:BB73, %39.1:BB39
  val?            %14.1 = %14.0
  void                    Return             l     %14.1
BB27   <- [55]
  val?^ | miss    %27.0 = LdVar              eR    identical, e43.0
  lgl$#-          %27.1 = Identical                %27.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %27.1 -> BB57 (if true) | BB58 (if false)
BB20   <- [55]
  val?^ | miss    %20.0 = LdVar              eR    def, e43.0
  val?            %20.1 = Force!             !v    %20.0, e43.0   <val?_>
  val?^ | miss    %20.2 = LdVar              eR    prev !upd, e43.0
  val?            %20.3 = Force!             !v    %20.2, e43.0   <val?_>
  val?^ | miss    %20.4 = LdVar              eR    newpkg, e43.0
  val?            %20.5 = Force!             !v    %20.4, e43.0   <val?_>
  lgl$#-          %20.6 = IsType                   %20.5 isA val?+
  lgl$#-          %20.7 = IsType                   %20.1 isA val?+
  lgl$#-          %20.8 = IsType                   %20.3 isA val?+
  void                    Branch                   %20.7 -> BB61 (if true) | BB62 (if false)
BB18   <- [56, 58]
  val?^ | miss    %18.0 = Phi                      %56.1:BB56, %58.1:BB58
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %56.2:BB56, %58.2:BB58
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x560a35e093b0+274: [%53.1], env=e43.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB57   <- [27]
  prom-           %57.0 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p4, e43.0
  prom-           %57.1 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p5, e43.0
  ct              %57.2 = PushContext        lCL   %57.0, %57.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e43.0
  val?^           %57.3 = CastType                 up %57.1
  val?^           %57.4 = CastType                 up %57.0
  env             e57.5 = MkEnv              l     x=%57.4, y=%57.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %57.6 = Force!<lazy>       !vL   %57.4, e57.5   <val?>
  val?            %57.7 = Force!<lazy>       !vL   %57.3, e57.5   <val?>
  val?            %57.8 = CallBuiltin        !     identical(%57.6, %57.7, true, true, true, true, false, true) e57.5
  val?            %57.9 = PopContext         C     %57.8, %57.2   <lgl$->
  lgl$#-          %57.10 = IsType                   %57.9 isA lgl$-
  void                    Branch                   %57.10 -> BB59 (if true) | BB60 (if false)
BB58   <- [27]
  void                    Nop                !     
  val?^ | miss    %58.1 = %27.0
  dr              %58.2 = CallTarget@0x560a35e42b90[Call#5]
  goto BB18
BB61   <- [20]
  val?+           %61.0 = CastType           d     dn %20.1   <val?_>
  void                    Branch                   %20.8 -> BB63 (if true) | BB64 (if false)
BB62   <- [20]
  void                    Nop                !     
  val?            %62.1 = %20.1
  dr              %62.2 = Typecheck@0x560a35e42b90[Type#42]
  goto BB21
BB59   <- [57]
  lgl$-           %59.0 = CastType           d     dn %57.9
  lgl$#-          %59.1 = CheckTrueFalse     e     %59.0
  void                    Branch                   %59.1 -> BB39 (if true) | BB30 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x560a35e093b0+327: [%57.9], env=e43.0
  void                    Deopt              !v    %60.0, Typecheck@0x560a35e42b90[Type#18], %57.9   !
BB63   <- [61]
  val?+           %63.0 = CastType           d     dn %20.3   <val?_>
  void                    Branch                   %20.6 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  void                    Nop                !     
  val?            %64.1 = %20.3
  dr              %64.2 = Typecheck@0x560a35e42b90[Type#43]
  goto BB21
BB21   <- [62, 64, 66]
  val?^ | miss    %21.0 = Phi                      %62.1:BB62, %64.1:BB64, %66.1:BB66
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %62.2:BB62, %64.2:BB64, %66.2:BB66
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x560a35e093b0+926: [%20.1, %20.3, %20.5], env=e43.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB39   <- [59]
  void                    Nop                !     
  nil-            %39.1 = nil
  goto BB14
BB30   <- [59]
  (cls|spec|blt)  %30.0 = LdFun              !v    @, <0x560a33cf0bd8>, e43.0
  prom-           %30.1 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p6, e43.0
  prom-           %30.2 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p7, e43.0
  val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e43.0   <str$->
  void                    StVar              lW    pkg, %30.3, e43.0
  val?^ | miss    %30.5 = LdVar              eR    identical, e43.0
  lgl$#-          %30.6 = Identical                %30.5, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %30.6 -> BB67 (if true) | BB68 (if false)
BB65   <- [63]
  val?+           %65.0 = CastType           d     dn %20.5   <val?_>
  val?+           %65.1 = Subassign2_1D      wed   %61.0, %63.0, %65.0, elided   <val?_>
  void                    StVar              lW    prev, %65.1, e43.0
  val+            %65.3 = ChkMissing         e     %65.1
  void                    StVar              lW    def, %65.1, e43.0
  val?^ | miss    %65.5 = LdVar              eR    length, e43.0
  lgl$#-          %65.6 = Identical                <blt length>, %65.5   <@?>
  void                    Branch                   %65.6 -> BB24 (if true) | BB23 (if false)
BB66   <- [63]
  void                    Nop                !     
  val?            %66.1 = %20.5
  dr              %66.2 = Typecheck@0x560a35e42b90[Type#44]
  goto BB21
BB67   <- [30]
  prom-           %67.0 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p8 (!refl), e43.0
  prom-           %67.1 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p9, e43.0
  ct              %67.2 = PushContext        lCL   %67.0, %67.1, identical(pkg, newpkg), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e43.0
  val?^           %67.3 = CastType                 up %67.1
  val?^           %67.4 = CastType                 up %67.0
  env             e67.5 = MkEnv              l     x=%67.4, y=%67.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %67.6 = Force!<lazy>       !vL   %67.3, e67.5   <val?>
  val?            %67.7 = CallBuiltin        !v    identical(%30.3, %67.6, true, true, true, true, false, true) e67.5
  val?            %67.8 = PopContext         C     %67.7, %67.2   <lgl$->
  lgl$#-          %67.9 = IsType                   %67.8 isA lgl$-
  void                    Branch                   %67.9 -> BB69 (if true) | BB70 (if false)
BB68   <- [30]
  fs              %68.0 = FrameState         R     0x560a35e093b0+400: [], env=e43.0
  void                    Deopt              !v    %68.0, CallTarget@0x560a35e42b90[Call#7], %30.5   !
BB24   <- [65]
  real$-          %24.0 = CallSafeBuiltin    wed   length(%65.1)    <val?_>
  lgl$-           %24.1 = Gt                 d     %24.0, 1L, elided   <val?_>
  lgl$#-          %24.2 = CheckTrueFalse     e     %24.1
  void                    Branch                   %24.2 -> BB26 (if true) | BB25 (if false)
BB23   <- [65]
  (cls|spec|blt)  %23.0 = LdFun              !v    length, e43.0
  fs              %23.1 = FrameState         R     0x560a35e093b0+992: [%23.0], env=e43.0
  void                    Deopt              !v    %23.1, DeadCall@0x560a35e42b90[Call#14], %23.0   !
BB69   <- [67]
  lgl$-           %69.0 = CastType           d     dn %67.8
  lgl$#-          %69.1 = CheckTrueFalse     e     %69.0
  void                    Branch                   %69.1 -> BB36 (if true) | BB35 (if false)
BB70   <- [67]
  void                    Nop                !     
  val?            %70.1 = %67.8
  dr              %70.2 = Typecheck@0x560a35e42b90[Type#24]
  goto BB33
BB26   <- [24]
  (cls|spec|blt)  %26.0 = LdFun              !v    .duplicateClassesExist, e43.0
  fs              %26.1 = FrameState         R     0x560a35e093b0+1088: [%26.0], env=e43.0
  void                    Deopt              !v    %26.1, DeadCall@0x560a35e42b90[Call#15], %26.0   !
BB25   <- [24]
  void                    Nop                !     
  goto BB13
BB36   <- [69]
  val?^ | miss    %36.0 = LdVar              eR    .cache_class, e43.0
  lgl$#-          %36.1 = Identical                <blt .cache_class>, %36.0   <true>
  void                    Branch                   %36.1 -> BB71 (if true) | BB72 (if false)
BB35   <- [69]
  (cls|spec|blt)  %35.0 = LdFun              !v    .simpleDuplicateClass, e43.0
  fs              %35.1 = FrameState         R     0x560a35e093b0+453: [%35.0], env=e43.0
  void                    Deopt              !v    %35.1, DeadCall@0x560a35e42b90[Call#8], %35.0   !
BB33   <- [70, 72]
  val?^ | miss    %33.0 = Phi                      %70.1:BB70, %72.1:BB72
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %70.2:BB70, %72.2:BB72
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x560a35e093b0+437: [%67.8], env=e43.0
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB71   <- [36]
  val?^ | miss    %71.0 = LdVar              eR    name, e43.0
  val?            %71.1 = Force!<wrapped>    !v    %71.0, e43.0   <str$->
  val?^ | miss    %71.2 = LdVar              eR    .extendsForS3, e43.0
  lgl$#-          %71.3 = Identical                %71.2, function(Class) <(rir::DispatchTable*)0x560a36|...
  void                    Branch                   %71.3 -> BB73 (if true) | BB74 (if false)
BB72   <- [36]
  void                    Nop                !     
  lgl$#-          %72.1 = %36.1
  dr              %72.2 = DeadBranchReached@0x560a35e42b90[Test#1]
  goto BB33
BB73   <- [71]
  prom-           %73.0 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p10, e43.0
  ct              %73.1 = PushContext        lCL   %73.0, .extendsForS3(def), function(Class) <(rir::DispatchTable*)0x560a36|..., e43.0
  val?^           %73.2 = CastType                 up %73.0
  env             e73.3 = MkEnv              l     Class=%73.2, parent=<env 0x560a342f8378>, context 1
  (cls|spec|blt)  %73.4 = LdFun              !v    extends, <0x560a35be1f20>, <env 0x560a342f8378>
  prom-           %73.5 = MkArg                    unboundValue, .cacheClass[0x560a3752afa0]_p23, e73.3
  val?            %73.6 = NamedCall          !v    %73.4(%73.5, maybe=false) e73.3   <str->
  val?            %73.7 = PopContext         C     %73.6, %73.1   <str->
  val?            %73.8 = CallBuiltin        !v    .cache_class(%71.1, %73.7) e43.0
  val?^ | miss    %73.9 = LdVar              eR    def, e43.0
  val?            %73.10 = Force!<wrapped>    !v    %73.9, e43.0   <other>
  val?^ | miss    %73.11 = LdVar              eR    .classTable, e43.0
  val?            %73.12 = Force!<wrapped>    !v    %73.11, e43.0   <env->
  val?^ | miss    %73.13 = LdVar              eR    name, e43.0
  val?            %73.14 = Force!<wrapped>    !v    %73.13, e43.0   <str$->
  val?            %73.15 = Subassign2_1D      !v    %73.10, %73.12, %73.14, e43.0
  void                    StVar              lW    .classTable, %73.15, e43.0
  void                    Invisible          v     
  val?            %73.18 = %73.10
  goto BB14
BB74   <- [71]
  fs              %74.0 = FrameState         R     0x560a35e093b0+586: [<blt .cache_class>, %71.1], env=e43.0
  void                    Deopt              !v    %74.0, CallTarget@0x560a35e42b90[Call#11], %71.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    doSubclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    newpkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|other)>
  void                    Return             l     %0.3

│ .cacheClass[0x560a3752afa0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
