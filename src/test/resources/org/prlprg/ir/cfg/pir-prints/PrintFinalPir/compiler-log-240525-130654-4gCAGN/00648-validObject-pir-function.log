
┌──────────────────────────────────────────────────────────────────────────────┐
│ validObject[0x560a36064610]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
validObject[0x560a36064610]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, test(miss)=false, complete(miss)=false, parent=<env 0x560a342f8378>, context 1
  cls             %0.2  = MkCls                    validObject>anyStrings@197, e0.1
  val?^ | miss    %0.3  = LdVar              eR    class, <env 0x560a342f8378>
  lgl$#-          %0.4  = Identical                <blt class>, %0.3   <true>
  void                    Branch                   %0.4 -> BB261 (if true) | BB262 (if false)
BB261   <- [0]
  val?            %261.0 = Force!<lazy>       !vr   %0.0,    <(cls|other)>
  val?            %261.1 = CallBuiltin        !v    class(%261.0) e0.1   <str$+>
  void                    StVar              lW    Class, %261.1, e0.1
  val?^ | miss    %261.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %261.4 = Identical                %261.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %261.4 -> BB263 (if true) | BB264 (if false)
BB262   <- [0]
  fs              %262.0 = FrameState         R     0x560a364b2230+0: [], env=e0.1
  void                    Deopt              !v    %262.0, DeadBranchReached@0x560a360588f0[Test#0], %0.4
BB263   <- [261]
  prom-           %263.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p2 (!refl), e0.1
  val?            %263.1 = StaticCall         !v    getClassDef[0x560a369f8e10](%263.0) e0.1   <other>
  void                    StVar              lW    classDef, %263.1, e0.1
  val?^ | miss    %263.3 = LdVar              eR    .classEnv, e0.1
  lgl$#-          %263.4 = Identical                %263.3, function(Class, default=.requirePackage("metho|...
  void                    Branch                   %263.4 -> BB265 (if true) | BB266 (if false)
BB264   <- [261]
  fs              %264.0 = FrameState         R     0x560a364b2230+105: [], env=e0.1
  void                    Deopt              !v    %264.0, CallTarget@0x560a360588f0[Call#1], %261.3   !
BB265   <- [263]
  prom-           %265.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p3 (!refl), e0.1
  val?            %265.1 = StaticCall         !v    .classEnv[0x560a36806550](%265.0) e0.1   <env->
  void                    StVar              lW    where, %265.1, e0.1
  void                    StVar              lW    anyStrings, %0.2, e0.1
  val?^ | miss    %265.4 = LdVar              eR    character, e0.1
  lgl$#-          %265.5 = Identical                %265.4, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %265.5 -> BB267 (if true) | BB268 (if false)
BB266   <- [263]
  fs              %266.0 = FrameState         R     0x560a364b2230+151: [], env=e0.1
  void                    Deopt              !v    %266.0, CallTarget@0x560a360588f0[Call#2], %263.3   !
BB267   <- [265]
  str-            %267.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    errors, %267.0, e0.1
  (cls|spec|blt)  %267.2 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %267.3 = MkArg                    unboundValue, validObject[0x560a36064610]_p4, e0.1
  prom-           %267.4 = MkArg                    unboundValue, validObject[0x560a36064610]_p5, e0.1
  val?            %267.5 = Call               !v    %267.2(%267.3, %267.4) e0.1   <vec+>
  void                    StVar              lW    slotTypes, %267.5, e0.1
  lgl$#-          %267.7 = IsType                   %267.5 isA val?+
  val?^ | miss    %267.8 = LdVar              eR    names, e0.1
  lgl$#-          %267.9 = Identical                <blt names>, %267.8   <true>
  void                    Branch                   %267.9 -> BB269 (if true) | BB270 (if false)
BB268   <- [265]
  fs              %268.0 = FrameState         R     0x560a364b2230+222: [], env=e0.1
  void                    Deopt              !v    %268.0, CallTarget@0x560a360588f0[Call#3], %265.4   !
BB269   <- [267]
  val             %269.0 = ChkMissing         e     %267.5
  void                    Branch                   %267.7 -> BB271 (if true) | BB272 (if false)
BB270   <- [267]
  void                    Nop                !     
  lgl$#-          %270.1 = %267.9
  dr              %270.2 = DeadBranchReached@0x560a360588f0[Test#1]
  goto BB9
BB271   <- [269]
  val?+           %271.0 = CastType           d     dn %267.5   <vec+>
  val+            %271.1 = CallSafeBuiltin    wed   names(%271.0)    <str->
  void                    StVar              lW    slotNames, %271.1, e0.1
  val?^ | miss    %271.3 = LdVar              eR    c, e0.1
  lgl$#-          %271.4 = Identical                <blt c>, %271.3   <true>
  void                    Branch                   %271.4 -> BB273 (if true) | BB274 (if false)
BB272   <- [269]
  void                    Nop                !     
  val?            %272.1 = %267.5
  dr              %272.2 = Typecheck@0x560a360588f0[Type#10]
  goto BB9
BB9   <- [270, 272]
  val?^ | miss    %9.0  = Phi                      %270.1:BB270, %272.1:BB272
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %270.2:BB270, %272.2:BB272
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x560a364b2230+314: [], env=e0.1
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB273   <- [271]
  val?^ | miss    %273.0 = LdVar              eR    attributes, e0.1
  lgl$#-          %273.1 = Identical                <blt attributes>, %273.0   <true>
  void                    Branch                   %273.1 -> BB275 (if true) | BB276 (if false)
BB274   <- [271]
  void                    Nop                !     
  lgl$#-          %274.1 = %271.4
  dr              %274.2 = DeadBranchReached@0x560a360588f0[Test#2]
  goto BB11
BB275   <- [273]
  val?^ | miss    %275.0 = LdVar              eR    object, e0.1
  val?            %275.1 = Force!<wrapped>    !v    %275.0, e0.1   <(cls|other)>
  val?            %275.2 = CallBuiltin        !v    attributes(%275.1) e0.1   <vec+>
  lgl$#-          %275.3 = IsType                   %275.2 isA val?+
  void                    Branch                   %275.3 -> BB277 (if true) | BB278 (if false)
BB276   <- [273]
  void                    Nop                !     
  lgl$#-          %276.1 = %273.1
  dr              %276.2 = DeadBranchReached@0x560a360588f0[Test#4]
  goto BB11
BB11   <- [274, 276]
  val?^ | miss    %11.0 = Phi                      %274.1:BB274, %276.1:BB276
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %274.2:BB274, %276.2:BB276
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x560a364b2230+419: [], env=e0.1
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB277   <- [275]
  val?+           %277.0 = CastType           d     dn %275.2   <vec+>
  val+            %277.1 = CallSafeBuiltin    wed   names(%277.0)    <str->
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %277.2 = CallSafeBuiltin    wed   c(".Data", ".S3Class", %277.1)    <str->
  void                    StVar              lW    attrNames, %277.2, e0.1
  val?^ | miss    %277.4 = LdVar              eR    anyNA, e0.1
  lgl$#-          %277.5 = Identical                <blt anyNA>, %277.4   <true>
  void                    Branch                   %277.5 -> BB279 (if true) | BB280 (if false)
BB278   <- [275]
  fs              %278.0 = FrameState         R     0x560a364b2230+652: [<blt c>, ".Data", ".S3Class", <blt names>, %275.2], env=e0.1
  void                    Deopt              !v    %278.0, Typecheck@0x560a360588f0[Type#21], %275.2   !
BB279   <- [277]
  val?^ | miss    %279.0 = LdVar              eR    match, e0.1
  lgl$#-          %279.1 = Identical                %279.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %279.1 -> BB281 (if true) | BB282 (if false)
BB280   <- [277]
  void                    Nop                !     
  lgl$#-          %280.1 = %277.5
  dr              %280.2 = DeadBranchReached@0x560a360588f0[Test#5]
  goto BB15
BB281   <- [279]
  val?^ | miss    %281.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %281.1 = IsType                   %281.0 isA val?~- | miss
  void                    Branch                   %281.1 -> BB283 (if true) | BB284 (if false)
BB282   <- [279]
  void                    Nop                !     
  val?^ | miss    %282.1 = %279.0
  dr              %282.2 = CallTarget@0x560a360588f0[Call#14]
  goto BB15
BB15   <- [280, 282, 284]
  val?^ | miss    %15.0 = Phi                      %280.1:BB280, %282.1:BB282, %284.1:BB284
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %280.2:BB280, %282.2:BB282, %284.2:BB284
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x560a364b2230+710: [], env=e0.1
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB283   <- [281]
  val?~- | miss   %283.0 = CastType           d     dn %281.0
  val?-           %283.1 = Force!<value>            %283.0,    <str->
  val+            %283.2 = CallSafeBuiltin    wed   match(%283.1, %277.2, NA, nil)    <int->
  void                    StVar              lW    idx, %283.2, e0.1
  lgl$#-          %283.4 = IsType                   %283.2 isA int-
  void                    Branch                   %283.4 -> BB285 (if true) | BB286 (if false)
BB284   <- [281]
  void                    Nop                !     
  val?^ | miss    %284.1 = %281.0
  dr              %284.2 = Typecheck@0x560a360588f0[Type#27]
  goto BB15
BB285   <- [283]
  int-            %285.0 = CastType           d     dn %283.2
  val+            %285.1 = CallSafeBuiltin    wed   anyNA(%285.0)    <lgl$->
  lgl$#-          %285.2 = IsType                   %285.1 isA lgl$-
  void                    Branch                   %285.2 -> BB287 (if true) | BB288 (if false)
BB286   <- [283]
  fs              %286.0 = FrameState         R     0x560a364b2230+823: [<blt anyNA>, %283.2], env=e0.1
  void                    Deopt              !v    %286.0, Typecheck@0x560a360588f0[Type#29], %283.2   !
BB287   <- [285]
  lgl$-           %287.0 = CastType           d     dn %285.1
  lgl$#-          %287.1 = CheckTrueFalse     e     %287.0
  void                    Branch                   %287.1 -> BB255 (if true) | BB21 (if false)
BB288   <- [285]
  void                    Nop                !     
  val+            %288.1 = %285.1
  dr              %288.2 = Typecheck@0x560a360588f0[Type#30]
  goto BB19
BB255   <- [287]
  val?^ | miss    %255.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %255.1 = Identical                <blt is.na>, %255.0   <@?>
  void                    Branch                   %255.1 -> BB257 (if true) | BB256 (if false)
BB21   <- [287]
  val?^ | miss    %21.0 = LdVar              eR    seq_along, e0.1
  lgl$#-          %21.1 = Identical                <blt seq_along>, %21.0   <true>
  void                    Branch                   %21.1 -> BB289 (if true) | BB290 (if false)
BB19   <- [288, 290, 292]
  val?^ | miss    %19.0 = Phi                      %288.1:BB288, %290.1:BB290, %292.1:BB292
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %288.2:BB288, %290.2:BB290, %292.2:BB292
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x560a364b2230+840: [%285.1], env=e0.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB257   <- [255]
  lgl-            %257.0 = CallSafeBuiltin    wed   is.na(%285.0)    <val?_>
  void                    StVar              lW    badSlots, %257.0, e0.1
  val?^ | miss    %257.2 = LdVar              eR    c, e0.1
  lgl$#-          %257.3 = Identical                <blt c>, %257.2   <@?>
  void                    Branch                   %257.3 -> BB259 (if true) | BB258 (if false)
BB256   <- [255]
  (cls|spec|blt)  %256.0 = LdFun              !v    is.na, e0.1
  fs              %256.1 = FrameState         R     0x560a364b2230+884: [%256.0], env=e0.1
  void                    Deopt              !v    %256.1, DeadCall@0x560a360588f0[Call#15], %256.0   !
BB289   <- [21]
  val?^ | miss    %289.0 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %289.1 = IsType                   %289.0 isA val?~+ | miss
  void                    Branch                   %289.1 -> BB291 (if true) | BB292 (if false)
BB290   <- [21]
  void                    Nop                !     
  lgl$#-          %290.1 = %21.1
  dr              %290.2 = DeadBranchReached@0x560a360588f0[Test#12]
  goto BB19
BB259   <- [257]
  val?^ | miss    %259.0 = LdVar              eR    errors, e0.1
  val?            %259.1 = Force!             !v    %259.0, e0.1   <val?_>
  (cls|spec|blt)  %259.2 = LdFun              !v    paste, e0.1
  fs              %259.3 = FrameState         R     0x560a364b2230+1045: [<blt c>, %259.1, %259.2], env=e0.1
  void                    Deopt              !v    %259.3, DeadCall@0x560a360588f0[Call#19], %259.2   !
BB258   <- [257]
  (cls|spec|blt)  %258.0 = LdFun              !v    c, e0.1
  fs              %258.1 = FrameState         R     0x560a364b2230+989: [%258.0], env=e0.1
  void                    Deopt              !v    %258.1, DeadCall@0x560a360588f0[Call#16], %258.0   !
BB291   <- [289]
  val?~+ | miss   %291.0 = CastType           d     dn %289.0
  val?+           %291.1 = Force!<value>            %291.0,    <vec+>
  val?            %291.2 = CallBuiltin        !v    seq_along(%291.1) e0.1   <int->
  val?+           %291.3 = ToForSeq           e     %291.2
  int$-           %291.4 = Length                   %291.3
  int$-           %291.5 = Inc                      0L
  lgl$-           %291.6 = Lt                 d     %291.4, %291.5, elided   <false>
  lgl$#-          %291.7 = Identical                %291.6, true
  void                    Branch                   %291.7 -> BB294 (if true) | BB293 (if false)
BB292   <- [289]
  void                    Nop                !     
  val?^ | miss    %292.1 = %289.0
  dr              %292.2 = Typecheck@0x560a360588f0[Type#58]
  goto BB19
BB294   <- [291]
  fs              %294.0 = FrameState         R     0x560a364b2230+1356: [%291.2], env=e0.1
  void                    Deopt              !v    %294.0, DeadBranchReached@0x560a360588f0[Test#13], %291.7   !
BB293   <- [291]
  val?            %293.0 = Extract2_1D        wed   %291.3, %291.5, elided
  void                    StVar              lW    i, %293.0, e0.1
  val?^ | miss    %293.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %293.3 = IsType                   %293.2 isA val?~+ | miss
  void                    Branch                   %293.3 -> BB295 (if true) | BB296 (if false)
BB295   <- [293]
  val?~+ | miss   %295.0 = CastType           d     dn %293.2
  val?+           %295.1 = Force!<value>            %295.0,    <vec+>
  lgl$#-          %295.2 = IsType                   %295.1 isA val+   <true>
  void                    Branch                   %295.2 -> BB297 (if true) | BB298 (if false)
BB296   <- [293]
  void                    Nop                !     
  val?^ | miss    %296.1 = %293.2
  dr              %296.2 = Typecheck@0x560a360588f0[Type#60]
  goto BB24
BB297   <- [295]
  val             %297.0 = ChkMissing         e     %293.0
  lgl$#-          %297.1 = IsType                   %297.0 isA int$-
  void                    Branch                   %297.1 -> BB299 (if true) | BB300 (if false)
BB298   <- [295]
  void                    Nop                !     
  lgl$#-          %298.1 = %295.2
  dr              %298.2 = DeadBranchReached@0x560a360588f0[Test#14]
  goto BB24
BB24   <- [296, 298, 300]
  val?^ | miss    %24.0 = Phi                      %296.1:BB296, %298.1:BB298, %300.1:BB300
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %296.2:BB296, %298.2:BB298, %300.2:BB300
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x560a364b2230+1401: [%291.3, %291.4, %291.5], env=e0.1
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB299   <- [297]
  int$-           %299.0 = CastType           d     dn %297.0
  val?            %299.1 = Extract2_1D        wed   %295.1, %299.0, elided   <str$+>
  void                    StVar              lW    classi, %299.1, e0.1
  val?^ | miss    %299.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %299.4 = Identical                %299.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %299.4 -> BB301 (if true) | BB302 (if false)
BB300   <- [297]
  void                    Nop                !     
  val             %300.1 = %297.0
  dr              %300.2 = Typecheck@0x560a360588f0[Type#62]
  goto BB24
BB301   <- [299]
  prom-           %301.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p8 (!refl), e0.1
  prom-           %301.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p9, e0.1
  val?            %301.2 = StaticCall         !v    getClassDef[0x560a36e58410](%301.0, %301.1) { 0 1n } e0.1   <other>
  lgl$-           %301.3 = Is                       %301.2, NULL
  void                    StVar              lW    classDefi, %301.2, e0.1
  val             %301.5 = ChkMissing         e     %301.2
  lgl$#-          %301.6 = CheckTrueFalse     e     %301.3
  void                    Branch                   %301.6 -> BB252 (if true) | BB30 (if false)
BB302   <- [299]
  fs              %302.0 = FrameState         R     0x560a364b2230+1476: [%291.3, %291.4, %291.5], env=e0.1
  void                    Deopt              !v    %302.0, CallTarget@0x560a360588f0[Call#22], %299.3   !
BB252   <- [301]
  val?^ | miss    %252.0 = LdVar              eR    c, e0.1
  lgl$#-          %252.1 = Identical                <blt c>, %252.0   <@?>
  void                    Branch                   %252.1 -> BB254 (if true) | BB253 (if false)
BB30   <- [301]
  val?^ | miss    %30.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %30.1 = IsType                   %30.0 isA val?~- | miss
  void                    Branch                   %30.1 -> BB303 (if true) | BB304 (if false)
BB254   <- [252]
  val?^ | miss    %254.0 = LdVar              eR    errors, e0.1
  val?            %254.1 = Force!             !v    %254.0, e0.1   <val?_>
  (cls|spec|blt)  %254.2 = LdFun              !v    paste0, e0.1
  fs              %254.3 = FrameState         R     0x560a364b2230+1649: [%291.3, %291.4, %291.5, <blt c>, %254.1, %254.2], env=e0.1
  void                    Deopt              !v    %254.3, DeadCall@0x560a360588f0[Call#25], %254.2   !
BB253   <- [252]
  (cls|spec|blt)  %253.0 = LdFun              !v    c, e0.1
  fs              %253.1 = FrameState         R     0x560a364b2230+1593: [%291.3, %291.4, %291.5, %253.0], env=e0.1
  void                    Deopt              !v    %253.1, DeadCall@0x560a360588f0[Call#23], %253.0   !
BB303   <- [30]
  val?~- | miss   %303.0 = CastType           d     dn %30.0
  val?-           %303.1 = Force!<value>            %303.0,    <str->
  lgl$#-          %303.2 = IsType                   %303.1 isA val+   <true>
  void                    Branch                   %303.2 -> BB305 (if true) | BB306 (if false)
BB304   <- [30]
  void                    Nop                !     
  val?^ | miss    %304.1 = %30.0
  dr              %304.2 = Typecheck@0x560a360588f0[Type#83]
  goto BB28
BB305   <- [303]
  val?^ | miss    %305.0 = LdVar              eR    i, e0.1
  lgl$#-          %305.1 = IsType                   %305.0 isA int$-
  void                    Branch                   %305.1 -> BB307 (if true) | BB308 (if false)
BB306   <- [303]
  void                    Nop                !     
  lgl$#-          %306.1 = %303.2
  dr              %306.2 = DeadBranchReached@0x560a360588f0[Test#18]
  goto BB28
BB28   <- [304, 306, 308]
  val?^ | miss    %28.0 = Phi                      %304.1:BB304, %306.1:BB306, %308.1:BB308
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %304.2:BB304, %306.2:BB306, %308.2:BB308
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x560a364b2230+1535: [%291.3, %291.4, %291.5], env=e0.1
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB307   <- [305]
  int$-           %307.0 = CastType           d     dn %305.0
  val?            %307.1 = Extract2_1D        wed   %303.1, %307.0, elided   <str$->
  void                    StVar              lW    namei, %307.1, e0.1
  val?^ | miss    %307.3 = LdVar              eR    try, e0.1
  lgl$#-          %307.4 = Identical                %307.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %307.4 -> BB309 (if true) | BB310 (if false)
BB308   <- [305]
  void                    Nop                !     
  val?^ | miss    %308.1 = %305.0
  dr              %308.2 = Typecheck@0x560a360588f0[Type#85]
  goto BB28
BB309   <- [307]
  prom-           %309.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p10, e0.1
  ct              %309.1 = PushContext        lCL   %309.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %309.2 = CastType                 up %309.0
  env             e309.3 = MkEnv              l     expr=%309.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %309.4 = MkArg                    unboundValue, validObject[0x560a36064610]_p63, e309.3
  val?^ | miss    %309.5 = CastType                 up %309.4
  void                    StArg              lW    outFile, %309.5, e309.3
  cls             %309.7 = MkCls                    try@Prom(3)0, e309.3
  prom-           %309.8 = MkArg                    unboundValue, validObject[0x560a36064610]_p65, e309.3
  prom-           %309.9 = MkArg                    %309.7, validObject[0x560a36064610]_p66 (!refl), e309.3
  dots-           %309.10 = DotsList           l     error=%309.9
  val?            %309.11 = StaticCall         !v    tryCatch[0x560a35ea8ff0](%309.8, %309.10) { 0 1n } e309.3   <val?>
  val?            %309.12 = PopContext         C     %309.11, %309.1   <val?+>
  void                    StVar              lW    sloti, %309.12, e0.1
  val?^ | miss    %309.14 = LdVar              eR    inherits, e0.1
  lgl$#-          %309.15 = Identical                %309.14, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %309.15 -> BB311 (if true) | BB312 (if false)
BB310   <- [307]
  fs              %310.0 = FrameState         R     0x560a364b2230+1817: [%291.3, %291.4, %291.5], env=e0.1
  void                    Deopt              !v    %310.0, CallTarget@0x560a360588f0[Call#26], %307.3   !
BB311   <- [309]
  prom-           %311.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p14 (!refl), e0.1
  ct              %311.1 = PushContext        lCL   %311.0, "try-error", inherits(sloti, "try-error"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.1
  val?^           %311.2 = CastType                 up %311.0
  env             e311.3 = MkEnv              l     x=%311.2, what="try-error", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %311.4 = Force!<lazy>       !vrL  %311.2, e311.3   <val?>
  val?            %311.5 = CallBuiltin        !v    inherits(%311.4, "try-error", false) e311.3
  val?            %311.6 = PopContext         C     %311.5, %311.1   <lgl$->
  lgl$#-          %311.7 = IsType                   %311.6 isA lgl$-
  void                    Branch                   %311.7 -> BB313 (if true) | BB314 (if false)
BB312   <- [309]
  fs              %312.0 = FrameState         R     0x560a364b2230+1876: [%291.3, %291.4, %291.5], env=e0.1
  void                    Deopt              !v    %312.0, CallTarget@0x560a360588f0[Call#29], %309.14   !
BB313   <- [311]
  lgl$-           %313.0 = CastType           d     dn %311.6
  lgl$#-          %313.1 = CheckTrueFalse     e     %313.0
  void                    Branch                   %313.1 -> BB247 (if true) | BB37 (if false)
BB314   <- [311]
  void                    Nop                !     
  val?            %314.1 = %311.6
  dr              %314.2 = Typecheck@0x560a360588f0[Type#95]
  goto BB35
BB247   <- [313]
  val?^ | miss    %247.0 = LdVar              eR    c, e0.1
  lgl$#-          %247.1 = Identical                <blt c>, %247.0   <@?>
  void                    Branch                   %247.1 -> BB249 (if true) | BB248 (if false)
BB37   <- [313]
  val?^ | miss    %37.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %37.1 = Identical                %37.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %37.1 -> BB315 (if true) | BB316 (if false)
BB35   <- [314, 316]
  val?^ | miss    %35.0 = Phi                      %314.1:BB314, %316.1:BB316
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %314.2:BB314, %316.2:BB316
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x560a364b2230+1913: [%291.3, %291.4, %291.5, %311.6], env=e0.1
  void                    Deopt              !v    %35.4, %35.3, %35.1   !
BB249   <- [247]
  val?^ | miss    %249.0 = LdVar              eR    errors, e0.1
  val?            %249.1 = Force!             !v    %249.0, e0.1   <val?_>
  val?^ | miss    %249.2 = LdVar              eR    sloti, e0.1
  val?            %249.3 = Force!             !v    %249.2, e0.1   <val?_>
  lgl$#-          %249.4 = IsType                   %249.3 isA val?+
  lgl$#-          %249.5 = IsType                   %249.1 isA val?+
  void                    Branch                   %249.5 -> BB317 (if true) | BB318 (if false)
BB248   <- [247]
  (cls|spec|blt)  %248.0 = LdFun              !v    c, e0.1
  fs              %248.1 = FrameState         R     0x560a364b2230+1957: [%291.3, %291.4, %291.5, %248.0], env=e0.1
  void                    Deopt              !v    %248.1, DeadCall@0x560a360588f0[Call#30], %248.0   !
BB315   <- [37]
  prom-           %315.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p15, e0.1
  prom-           %315.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p17, e0.1
  prom-           %315.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p18, e0.1
  val?            %315.3 = StaticCall         !v    possibleExtends[0x560a37436680](%315.0, %315.1, missingArg, %315.2) { 0 1 3n } e0.1   <lgl$->
  lgl$#-          %315.4 = IsType                   %315.3 isA lgl$-
  void                    Branch                   %315.4 -> BB319 (if true) | BB320 (if false)
BB316   <- [37]
  void                    Nop                !     
  val?^ | miss    %316.1 = %37.0
  dr              %316.2 = CallTarget@0x560a360588f0[Call#31]
  goto BB35
BB317   <- [249]
  val?+           %317.0 = CastType           d     dn %249.1   <val?_>
  void                    Branch                   %249.4 -> BB321 (if true) | BB322 (if false)
BB318   <- [249]
  void                    Nop                !     
  val?            %318.1 = %249.1
  dr              %318.2 = Typecheck@0x560a360588f0[Type#98]
  goto BB250
BB319   <- [315]
  lgl$-           %319.0 = CastType           d     dn %315.3
  void                    StVar              lW    ok, %319.0, e0.1
  val?^ | miss    %319.2 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %319.3 = Identical                %319.2, function(x) <(rir::DispatchTable*)0x560a35e349|...
  void                    Branch                   %319.3 -> BB323 (if true) | BB324 (if false)
BB320   <- [315]
  fs              %320.0 = FrameState         R     0x560a364b2230+2117: [%291.3, %291.4, %291.5, %315.3], env=e0.1
  void                    Deopt              !v    %320.0, Typecheck@0x560a360588f0[Type#105], %315.3   !
BB321   <- [317]
  val?+           %321.0 = CastType           d     dn %249.3   <val?_>
  val+            %321.1 = CallSafeBuiltin    wed   c(%317.0, %321.0)    <val?_>
  void                    StVar              lW    errors, %321.1, e0.1
  int$-           %321.3 = %291.5
  goto BB65
BB322   <- [317]
  void                    Nop                !     
  val?            %322.1 = %249.3
  dr              %322.2 = Typecheck@0x560a360588f0[Type#99]
  goto BB250
BB250   <- [318, 322]
  val?^ | miss    %250.0 = Phi                      %318.1:BB318, %322.1:BB322
  val?^ | miss    %250.1 = %250.0
  dr              %250.2 = Phi                      %318.2:BB318, %322.2:BB322
  dr              %250.3 = %250.2
  fs              %250.4 = FrameState         R     0x560a364b2230+2017: [%291.3, %291.4, %291.5, <blt c>, %249.1, %249.3], env=e0.1
  void                    Deopt              !v    %250.4, %250.3, %250.1   !
BB323   <- [319]
  prom-           %323.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p19 (!refl), e0.1
  ct              %323.1 = PushContext        lCL   %323.0, isFALSE(ok), function(x) <(rir::DispatchTable*)0x560a35e349|..., e0.1
  val?^           %323.2 = CastType                 up %323.0
  env             e323.3 = (MkEnv)            l     x=%323.2, parent=R_BaseNamespace, context 1
  val?            %323.4 = Force!<lazy>       !vrL  %323.2, e323.3   <val?>
  lgl$#-          %323.5 = IsEnvStub          R     , e323.3
  void                    Branch                   %323.5 -> BB331 (if true) | BB332 (if false)
BB324   <- [319]
  fs              %324.0 = FrameState         R     0x560a364b2230+2131: [%291.3, %291.4, %291.5], env=e0.1
  void                    Deopt              !v    %324.0, CallTarget@0x560a360588f0[Call#33], %319.2   !
BB65   <- [64, 141, 321, 417]
  int$-           %65.0 = Phi                      %64.1:BB64, %141.1:BB141, %417.3:BB417, %321.3:BB321
  int$-           %65.1 = %65.0
  int$-           %65.2 = Inc                      %65.1
  lgl$-           %65.3 = Lt                 d     %291.4, %65.2, elided
  lgl$#-          %65.4 = Identical                %65.3, true
  void                    Branch                   %65.4 -> BB170 (if true) | BB68 (if false)
BB331   <- [323]
  val+            %331.0 = CallSafeBuiltin    wed   is.logical(%323.4)    <lgl$->
  lgl$#-          %331.1 = IsType                   %331.0 isA lgl$-
  void                    Branch                   %331.1 -> BB345 (if true) | BB346 (if false)
BB332   <- [323]
  fs              %332.0 = FrameState         R     0x560a364b2230+2163: [%291.3, %291.4, %291.5], env=e0.1
  fs              %332.1 = FrameState         R     0x560a35f8ec20+69: [<blt is.logical>, %323.4], env=e323.3, next=%332.0
  void                    Deopt              !v    %332.1, EnvStubMaterialized@0x560a34fd4b48[Call#unknown], e323.3   !
BB170   <- [65]
  val?^ | miss    %170.0 = LdVar              eR    rev, e0.1
  lgl$#-          %170.1 = Identical                %170.0, function(x) <(rir::DispatchTable*)0x560a3640ba|...
  void                    Branch                   %170.1 -> BB325 (if true) | BB326 (if false)
BB68   <- [65]
  val?            %68.0 = Extract2_1D        wed   %291.3, %65.2, elided
  void                    StVar              lW    i, %68.0, e0.1
  val?^ | miss    %68.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %68.3 = IsType                   %68.2 isA val?~+ | miss
  void                    Branch                   %68.3 -> BB329 (if true) | BB330 (if false)
BB345   <- [331]
  lgl$-           %345.0 = CastType           d     dn %331.0
  lgl$-           %345.1 = AsLogical                %345.0
  lgl$#-          %345.2 = Identical                %345.1, false
  void                    Branch                   %345.2 -> BB246 (if true) | BB46 (if false)
BB346   <- [331]
  fs              %346.0 = FrameState         R     0x560a364b2230+2163: [%291.3, %291.4, %291.5], env=e0.1
  fs              %346.1 = FrameState         R     0x560a35f8ec20+91: [%331.0], env=e323.3, next=%346.0
  void                    Deopt              !v    %346.1, Typecheck@0x560a34fd4b48[Type#2], %331.0   !
BB325   <- [170]
  (cls|spec|blt)  %325.0 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %325.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p38, e0.1
  prom-           %325.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p39, e0.1
  val?            %325.3 = Call               !v    %325.0(%325.1, %325.2) e0.1   <vec+>
  val?            %325.4 = StaticCall         !v    rev[0x560a36744b00](%325.3) e0.1   <vec+>
  void                    StVar              lW    extends, %325.4, e0.1
  val?^ | miss    %325.6 = LdVar              eR    seq_along, e0.1
  lgl$#-          %325.7 = Identical                <blt seq_along>, %325.6   <true>
  void                    Branch                   %325.7 -> BB327 (if true) | BB328 (if false)
BB326   <- [170]
  fs              %326.0 = FrameState         R     0x560a364b2230+2760: [%291.3, %291.4, %65.1], env=e0.1
  void                    Deopt              !v    %326.0, CallTarget@0x560a360588f0[Call#68], %170.0   !
BB329   <- [68]
  val?~+ | miss   %329.0 = CastType           d     dn %68.2
  val?+           %329.1 = Force!<value>            %329.0,    <vec+>
  lgl$#-          %329.2 = IsType                   %329.1 isA val+   <true>
  void                    Branch                   %329.2 -> BB335 (if true) | BB336 (if false)
BB330   <- [68]
  void                    Nop                !     
  val?^ | miss    %330.1 = %68.2
  dr              %330.2 = Typecheck@0x560a360588f0[Type#151]
  goto BB69
BB246   <- [345]
  void                    Nop                !     
  lgl$-           %246.1 = %345.1
  goto BB49
BB46   <- [345]
  val?            %46.0 = CallBuiltin        !vL   length(%323.4) e323.3   <int$->
  lgl$#-          %46.1 = IsType                   %46.0 isA int$-
  void                    Branch                   %46.1 -> BB369 (if true) | BB370 (if false)
BB327   <- [325]
  val             %327.0 = ChkMissing         e     %325.4
  val?            %327.1 = CallBuiltin        !v    seq_along(%325.4) e0.1   <int->
  val?+           %327.2 = ToForSeq           e     %327.1
  int$-           %327.3 = Length                   %327.2
  lgl$-           %327.4 = Lt                 d     %327.3, %291.5, elided
  lgl$#-          %327.5 = Identical                %327.4, true
  void                    Branch                   %327.5 -> BB240 (if true) | BB173 (if false)
BB328   <- [325]
  fs              %328.0 = FrameState         R     0x560a364b2230+4204: [], env=e0.1
  void                    Deopt              !v    %328.0, DeadBranchReached@0x560a360588f0[Test#58], %325.7   !
BB335   <- [329]
  val             %335.0 = ChkMissing         e     %68.0
  lgl$#-          %335.1 = IsType                   %335.0 isA int$-
  void                    Branch                   %335.1 -> BB343 (if true) | BB344 (if false)
BB336   <- [329]
  void                    Nop                !     
  lgl$#-          %336.1 = %329.2
  dr              %336.2 = DeadBranchReached@0x560a360588f0[Test#36]
  goto BB69
BB69   <- [330, 336, 344]
  val?^ | miss    %69.0 = Phi                      %330.1:BB330, %336.1:BB336, %344.1:BB344
  val?^ | miss    %69.1 = %69.0
  dr              %69.2 = Phi                      %330.2:BB330, %336.2:BB336, %344.2:BB344
  dr              %69.3 = %69.2
  fs              %69.4 = FrameState         R     0x560a364b2230+2789: [%291.3, %291.4, %65.2], env=e0.1
  void                    Deopt              !v    %69.4, %69.3, %69.1   !
BB49   <- [246, 377]
  lgl$-           %49.0 = Phi                      %377.3:BB377, %246.1:BB246
  lgl$-           %49.1 = %49.0
  lgl$-           %49.2 = AsLogical                %49.1
  lgl$#-          %49.3 = Identical                %49.2, false
  void                    Branch                   %49.3 -> BB245 (if true) | BB52 (if false)
BB369   <- [46]
  int$-           %369.0 = CastType           d     dn %46.0
  lgl$#-          %369.1 = IsEnvStub          R     , e323.3
  void                    Branch                   %369.1 -> BB377 (if true) | BB378 (if false)
BB370   <- [46]
  void                    Nop                !     
  val?            %370.1 = %46.0
  dr              %370.2 = Typecheck@0x560a34fd4b48[Type#5]
  goto BB47
BB240   <- [327]
  void                    Nop                !     
  goto BB215
BB173   <- [327]
  val?            %173.0 = Extract2_1D        wed   %327.2, %291.5, elided
  void                    StVar              lW    i, %173.0, e0.1
  val?^ | miss    %173.2 = LdVar              eR    extends, e0.1
  lgl$#-          %173.3 = IsType                   %173.2 isA val?~+ | miss
  void                    Branch                   %173.3 -> BB333 (if true) | BB334 (if false)
BB343   <- [335]
  int$-           %343.0 = CastType           d     dn %335.0
  val?            %343.1 = Extract2_1D        wed   %329.1, %343.0, elided   <str$+>
  void                    StVar              lW    classi, %343.1, e0.1
  val?^ | miss    %343.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %343.4 = Identical                %343.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %343.4 -> BB351 (if true) | BB352 (if false)
BB344   <- [335]
  void                    Nop                !     
  val             %344.1 = %335.0
  dr              %344.2 = Typecheck@0x560a360588f0[Type#153]
  goto BB69
BB245   <- [49]
  void                    Nop                !     
  lgl$-           %245.1 = %49.2
  goto BB53
BB52   <- [49]
  lgl$#-          %52.0 = IsType                   %323.4 isA lgl$-
  void                    Branch                   %52.0 -> BB373 (if true) | BB374 (if false)
BB377   <- [369]
  lgl$-           %377.0 = Eq                 d     %369.0, 1L, elided   <lgl$->
  lgl$-           %377.1 = AsLogical                %377.0
  lgl$-           %377.2 = LAnd                     %345.1, %377.1
  lgl$-           %377.3 = %377.2
  goto BB49
BB378   <- [369]
  void                    Nop                !     
  env             e378.1 = e323.3
  dr              %378.2 = EnvStubMaterialized@0x560a34fd4b48[Call#unknown]
  goto BB47
BB47   <- [370, 378]
  val?^ | miss    %47.0 = Phi                      %370.1:BB370, e378.1:BB378
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %370.2:BB370, %378.2:BB378
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x560a364b2230+2163: [%291.3, %291.4, %291.5], env=e0.1
  fs              %47.5 = FrameState         R     0x560a35f8ec20+194: [%345.1, %46.0], env=e323.3, next=%47.4
  void                    Deopt              !v    %47.5, %47.3, %47.1   !
BB215   <- [214, 240]
  (cls|spec|blt)  %215.0 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %215.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p58, e0.1
  prom-           %215.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p59, e0.1
  val?            %215.3 = Call               !v    %215.0(%215.1, %215.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %215.3, e0.1
  val?^ | miss    %215.5 = LdVar              eR    length, e0.1
  lgl$#-          %215.6 = Identical                <blt length>, %215.5   <true>
  void                    Branch                   %215.6 -> BB337 (if true) | BB338 (if false)
BB333   <- [173]
  val?~+ | miss   %333.0 = CastType           d     dn %173.2
  val?+           %333.1 = Force!<value>            %333.0,    <vec+>
  lgl$#-          %333.2 = IsType                   %333.1 isA val+   <true>
  void                    Branch                   %333.2 -> BB341 (if true) | BB342 (if false)
BB334   <- [173]
  void                    Nop                !     
  val?^ | miss    %334.1 = %173.2
  dr              %334.2 = Typecheck@0x560a360588f0[Type#249]
  goto BB174
BB351   <- [343]
  prom-           %351.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p20 (!refl), e0.1
  prom-           %351.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p21, e0.1
  val?            %351.2 = StaticCall         !v    getClassDef[0x560a36e58410](%351.0, %351.1) { 0 1n } e0.1   <other>
  lgl$-           %351.3 = Is                       %351.2, NULL
  void                    StVar              lW    classDefi, %351.2, e0.1
  val             %351.5 = ChkMissing         e     %351.2
  lgl$#-          %351.6 = CheckTrueFalse     e     %351.3
  void                    Branch                   %351.6 -> BB167 (if true) | BB75 (if false)
BB352   <- [343]
  fs              %352.0 = FrameState         R     0x560a364b2230+2864: [%291.3, %291.4, %65.2], env=e0.1
  void                    Deopt              !v    %352.0, CallTarget@0x560a360588f0[Call#45], %343.3   !
BB53   <- [245, 373]
  lgl$-           %53.0 = Phi                      %373.5:BB373, %245.1:BB245
  lgl$-           %53.1 = %53.0
  lgl$-           %53.2 = AsLogical                %53.1
  lgl$#-          %53.3 = Identical                %53.2, false
  void                    Branch                   %53.3 -> BB244 (if true) | BB56 (if false)
BB373   <- [52]
  lgl$-           %373.0 = CastType           d     dn %323.4
  lgl$-           %373.1 = CallSafeBuiltin    wed   is.na(%373.0)    <lgl$->
  lgl$-           %373.2 = Not                d     %373.1, elided
  lgl$-           %373.3 = AsLogical                %373.2
  lgl$-           %373.4 = LAnd                     %49.2, %373.3
  lgl$-           %373.5 = %373.4
  goto BB53
BB374   <- [52]
  fs              %374.0 = FrameState         R     0x560a364b2230+2163: [%291.3, %291.4, %291.5], env=e0.1
  fs              %374.1 = FrameState         R     0x560a35f8ec20+213: [%49.1], env=e323.3, next=%374.0
  void                    Deopt              !v    %374.1, Typecheck@0x560a34fd4b48[Type#8], %323.4   !
BB337   <- [215]
  val?^ | miss    %337.0 = LdVar              eR    errors, e0.1
  lgl$#-          %337.1 = IsType                   %337.0 isA val?~- | miss
  void                    Branch                   %337.1 -> BB339 (if true) | BB340 (if false)
BB338   <- [215]
  void                    Nop                !     
  lgl$#-          %338.1 = %215.6
  dr              %338.2 = DeadBranchReached@0x560a360588f0[Test#70]
  goto BB216
BB341   <- [333]
  val             %341.0 = ChkMissing         e     %173.0
  lgl$#-          %341.1 = IsType                   %341.0 isA int$-
  void                    Branch                   %341.1 -> BB349 (if true) | BB350 (if false)
BB342   <- [333]
  void                    Nop                !     
  lgl$#-          %342.1 = %333.2
  dr              %342.2 = DeadBranchReached@0x560a360588f0[Test#60]
  goto BB174
BB174   <- [334, 342, 350]
  val?^ | miss    %174.0 = Phi                      %334.1:BB334, %342.1:BB342, %350.1:BB350
  val?^ | miss    %174.1 = %174.0
  dr              %174.2 = Phi                      %334.2:BB334, %342.2:BB342, %350.2:BB350
  dr              %174.3 = %174.2
  fs              %174.4 = FrameState         R     0x560a364b2230+4340: [%327.2, %327.3, %291.5], env=e0.1
  void                    Deopt              !v    %174.4, %174.3, %174.1   !
BB167   <- [351]
  val?^ | miss    %167.0 = LdVar              eR    c, e0.1
  lgl$#-          %167.1 = Identical                <blt c>, %167.0   <@?>
  void                    Branch                   %167.1 -> BB169 (if true) | BB168 (if false)
BB75   <- [351]
  val?^ | miss    %75.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %75.1 = IsType                   %75.0 isA val?~- | miss
  void                    Branch                   %75.1 -> BB361 (if true) | BB362 (if false)
BB244   <- [53]
  void                    Nop                !     
  lgl$-           %244.1 = %53.2
  goto BB57
BB56   <- [53]
  lgl$#-          %56.0 = IsType                   %323.4 isA lgl$-
  void                    Branch                   %56.0 -> BB375 (if true) | BB376 (if false)
BB339   <- [337]
  val?~- | miss   %339.0 = CastType           d     dn %337.0
  val?-           %339.1 = Force!<value>            %339.0,    <str->
  (int|real)$-    %339.2 = CallSafeBuiltin    wed   length(%339.1)    <int$->
  lgl$#-          %339.3 = IsType                   %339.2 isA int$-
  void                    Branch                   %339.3 -> BB347 (if true) | BB348 (if false)
BB340   <- [337]
  void                    Nop                !     
  val?^ | miss    %340.1 = %337.0
  dr              %340.2 = Typecheck@0x560a360588f0[Type#343]
  goto BB216
BB216   <- [338, 340]
  val?^ | miss    %216.0 = Phi                      %338.1:BB338, %340.1:BB340
  val?^ | miss    %216.1 = %216.0
  dr              %216.2 = Phi                      %338.2:BB338, %340.2:BB340
  dr              %216.3 = %216.2
  fs              %216.4 = FrameState         R     0x560a364b2230+6244: [], env=e0.1
  void                    Deopt              !v    %216.4, %216.3, %216.1   !
BB349   <- [341]
  int$-           %349.0 = CastType           d     dn %341.0
  val?            %349.1 = Extract2_1D        wed   %333.1, %349.0, elided   <other>
  void                    StVar              lW    exti, %349.1, e0.1
  (cls|spec|blt)  %349.3 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %349.4 = MkArg                    unboundValue, validObject[0x560a36064610]_p40, e0.1
  prom-           %349.5 = MkArg                    unboundValue, validObject[0x560a36064610]_p41, e0.1
  val?            %349.6 = Call               !v    %349.3(%349.4, %349.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %349.6, e0.1
  (cls|spec|blt)  %349.8 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %349.9 = MkArg                    unboundValue, validObject[0x560a36064610]_p42, e0.1
  prom-           %349.10 = MkArg                    unboundValue, validObject[0x560a36064610]_p43, e0.1
  val?            %349.11 = Call               !v    %349.8(%349.9, %349.10) e0.1   <lgl$->
  lgl$#-          %349.12 = IsType                   %349.11 isA lgl$-
  void                    Branch                   %349.12 -> BB357 (if true) | BB358 (if false)
BB350   <- [341]
  void                    Nop                !     
  val             %350.1 = %341.0
  dr              %350.2 = Typecheck@0x560a360588f0[Type#251]
  goto BB174
BB169   <- [167]
  val?^ | miss    %169.0 = LdVar              eR    errors, e0.1
  val?            %169.1 = Force!             !v    %169.0, e0.1   <val?_>
  (cls|spec|blt)  %169.2 = LdFun              !v    paste0, e0.1
  fs              %169.3 = FrameState         R     0x560a364b2230+3037: [%291.3, %291.4, %65.2, <blt c>, %169.1, %169.2], env=e0.1
  void                    Deopt              !v    %169.3, DeadCall@0x560a360588f0[Call#48], %169.2   !
BB168   <- [167]
  (cls|spec|blt)  %168.0 = LdFun              !v    c, e0.1
  fs              %168.1 = FrameState         R     0x560a364b2230+2981: [%291.3, %291.4, %65.2, %168.0], env=e0.1
  void                    Deopt              !v    %168.1, DeadCall@0x560a360588f0[Call#46], %168.0   !
BB361   <- [75]
  val?~- | miss   %361.0 = CastType           d     dn %75.0
  val?-           %361.1 = Force!<value>            %361.0,    <str->
  lgl$#-          %361.2 = IsType                   %361.1 isA val+   <true>
  void                    Branch                   %361.2 -> BB363 (if true) | BB364 (if false)
BB362   <- [75]
  void                    Nop                !     
  val?^ | miss    %362.1 = %75.0
  dr              %362.2 = Typecheck@0x560a360588f0[Type#174]
  goto BB73
BB57   <- [244, 375]
  lgl$-           %57.0 = Phi                      %375.4:BB375, %244.1:BB244
  lgl$-           %57.1 = %57.0
  val?            %57.2 = PopContext         C     %57.1, %323.1   <lgl$->
  lgl$#-          %57.3 = IsType                   %57.2 isA lgl$-
  void                    Branch                   %57.3 -> BB385 (if true) | BB386 (if false)
BB375   <- [56]
  lgl$-           %375.0 = CastType           d     dn %323.4
  lgl$-           %375.1 = Not                d     %375.0, elided
  lgl$-           %375.2 = AsLogical                %375.1
  lgl$-           %375.3 = LAnd                     %53.2, %375.2
  lgl$-           %375.4 = %375.3
  goto BB57
BB376   <- [56]
  fs              %376.0 = FrameState         R     0x560a364b2230+2163: [%291.3, %291.4, %291.5], env=e0.1
  fs              %376.1 = FrameState         R     0x560a35f8ec20+319: [%53.1], env=e323.3, next=%376.0
  void                    Deopt              !v    %376.1, Typecheck@0x560a34fd4b48[Type#10], %323.4   !
BB347   <- [339]
  int$-           %347.0 = CastType           d     dn %339.2
  lgl$-           %347.1 = Eq                 d     %347.0, 0L, elided   <lgl$->
  lgl$-           %347.2 = AsLogical                %347.1
  lgl$#-          %347.3 = Identical                %347.2, false
  void                    Branch                   %347.3 -> BB231 (if true) | BB220 (if false)
BB348   <- [339]
  void                    Nop                !     
  (int|real)$-    %348.1 = %339.2
  dr              %348.2 = Typecheck@0x560a360588f0[Type#344]
  goto BB218
BB357   <- [349]
  lgl$-           %357.0 = CastType           d     dn %349.11
  lgl$-           %357.1 = Not                d     %357.0, elided
  lgl$-           %357.2 = AsLogical                %357.1
  lgl$#-          %357.3 = Identical                %357.2, false
  void                    Branch                   %357.3 -> BB239 (if true) | BB178 (if false)
BB358   <- [349]
  void                    Nop                !     
  val?            %358.1 = %349.11
  dr              %358.2 = Typecheck@0x560a360588f0[Type#258]
  goto BB176
BB363   <- [361]
  val?^ | miss    %363.0 = LdVar              eR    i, e0.1
  lgl$#-          %363.1 = IsType                   %363.0 isA int$-
  void                    Branch                   %363.1 -> BB365 (if true) | BB366 (if false)
BB364   <- [361]
  void                    Nop                !     
  lgl$#-          %364.1 = %361.2
  dr              %364.2 = DeadBranchReached@0x560a360588f0[Test#40]
  goto BB73
BB73   <- [362, 364, 366]
  val?^ | miss    %73.0 = Phi                      %362.1:BB362, %364.1:BB364, %366.1:BB366
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %362.2:BB362, %364.2:BB364, %366.2:BB366
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x560a364b2230+2923: [%291.3, %291.4, %65.2], env=e0.1
  void                    Deopt              !v    %73.4, %73.3, %73.1   !
BB385   <- [57]
  lgl$-           %385.0 = CastType           d     dn %57.2
  lgl$#-          %385.1 = CheckTrueFalse     e     %385.0
  void                    Branch                   %385.1 -> BB241 (if true) | BB60 (if false)
BB386   <- [57]
  fs              %386.0 = FrameState         R     0x560a364b2230+2163: [%291.3, %291.4, %291.5, %57.2], env=e0.1
  void                    Deopt              !v    %386.0, Typecheck@0x560a360588f0[Type#107], %57.2   !
BB231   <- [347]
  void                    Nop                !     
  lgl$-           %231.1 = %347.2
  goto BB221
BB220   <- [347]
  val?^ | miss    %220.0 = LdVar              eR    is.function, e0.1
  lgl$#-          %220.1 = Identical                <blt is.function>, %220.0   <true>
  void                    Branch                   %220.1 -> BB353 (if true) | BB354 (if false)
BB218   <- [348, 354, 356]
  val?^ | miss    %218.0 = Phi                      %348.1:BB348, %354.1:BB354, %356.1:BB356
  val?^ | miss    %218.1 = %218.0
  dr              %218.2 = Phi                      %348.2:BB348, %354.2:BB354, %356.2:BB356
  dr              %218.3 = %218.2
  fs              %218.4 = FrameState         R     0x560a364b2230+6335: [%339.2], env=e0.1
  void                    Deopt              !v    %218.4, %218.3, %218.1   !
BB239   <- [357]
  void                    Nop                !     
  lgl$-           %239.1 = %357.2
  goto BB181
BB178   <- [357]
  val?^ | miss    %178.0 = LdVar              eR    is, e0.1
  lgl$#-          %178.1 = Identical                %178.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %178.1 -> BB359 (if true) | BB360 (if false)
BB176   <- [358, 360]
  val?^ | miss    %176.0 = Phi                      %358.1:BB358, %360.1:BB360
  val?^ | miss    %176.1 = %176.0
  dr              %176.2 = Phi                      %358.2:BB358, %360.2:BB360
  dr              %176.3 = %176.2
  fs              %176.4 = FrameState         R     0x560a364b2230+4503: [%327.2, %327.3, %291.5, %349.11], env=e0.1
  void                    Deopt              !v    %176.4, %176.3, %176.1   !
BB365   <- [363]
  int$-           %365.0 = CastType           d     dn %363.0
  val?            %365.1 = Extract2_1D        wed   %361.1, %365.0, elided   <str$->
  void                    StVar              lW    namei, %365.1, e0.1
  val?^ | miss    %365.3 = LdVar              eR    try, e0.1
  lgl$#-          %365.4 = Identical                %365.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %365.4 -> BB367 (if true) | BB368 (if false)
BB366   <- [363]
  void                    Nop                !     
  val?^ | miss    %366.1 = %363.0
  dr              %366.2 = Typecheck@0x560a360588f0[Type#176]
  goto BB73
BB241   <- [385]
  val?^ | miss    %241.0 = LdVar              eR    c, e0.1
  lgl$#-          %241.1 = Identical                <blt c>, %241.0   <@?>
  void                    Branch                   %241.1 -> BB243 (if true) | BB242 (if false)
BB60   <- [385]
  val?^ | miss    %60.0 = LdVar              eR    complete, e0.1
  val?            %60.1 = Force!<lazy>       !v    %60.0, e0.1   <lgl$->
  lgl$#-          %60.2 = IsType                   %60.1 isA lgl$-
  void                    Branch                   %60.2 -> BB387 (if true) | BB388 (if false)
BB221   <- [231, 355]
  lgl$-           %221.0 = Phi                      %355.3:BB355, %231.1:BB231
  lgl$-           %221.1 = %221.0
  lgl$#-          %221.2 = CheckTrueFalse     e     %221.1
  void                    Branch                   %221.2 -> BB228 (if true) | BB222 (if false)
BB353   <- [220]
  val             %353.0 = ChkMissing         e     %215.3
  lgl$#-          %353.1 = IsType                   %353.0 isA val?~- | miss
  void                    Branch                   %353.1 -> BB355 (if true) | BB356 (if false)
BB354   <- [220]
  void                    Nop                !     
  lgl$#-          %354.1 = %220.1
  dr              %354.2 = DeadBranchReached@0x560a360588f0[Test#71]
  goto BB218
BB181   <- [239, 381]
  lgl$-           %181.0 = Phi                      %381.4:BB381, %239.1:BB239
  lgl$-           %181.1 = %181.0
  lgl$#-          %181.2 = CheckTrueFalse     e     %181.1
  void                    Branch                   %181.2 -> BB238 (if true) | BB184 (if false)
BB359   <- [178]
  prom-           %359.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p44, e0.1
  prom-           %359.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p45, e0.1
  val?            %359.2 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%359.0, %359.1) e0.1   <lgl$->
  lgl$#-          %359.3 = IsType                   %359.2 isA lgl$-
  void                    Branch                   %359.3 -> BB381 (if true) | BB382 (if false)
BB360   <- [178]
  void                    Nop                !     
  val?^ | miss    %360.1 = %178.0
  dr              %360.2 = CallTarget@0x560a360588f0[Call#73]
  goto BB176
BB367   <- [365]
  prom-           %367.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p22, e0.1
  ct              %367.1 = PushContext        lCL   %367.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %367.2 = CastType                 up %367.0
  env             e367.3 = MkEnv              l     expr=%367.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %367.4 = MkArg                    unboundValue, validObject[0x560a36064610]_p68, e367.3
  val?^ | miss    %367.5 = CastType                 up %367.4
  void                    StArg              lW    outFile, %367.5, e367.3
  cls             %367.7 = MkCls                    try@Prom(3)0, e367.3
  val?^ | miss    %367.8 = LdVar              eR    tryCatch, e367.3
  lgl$#-          %367.9 = Identical                %367.8, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %367.9 -> BB371 (if true) | BB372 (if false)
BB368   <- [365]
  fs              %368.0 = FrameState         R     0x560a364b2230+3205: [%291.3, %291.4, %65.2], env=e0.1
  void                    Deopt              !v    %368.0, CallTarget@0x560a360588f0[Call#49], %365.3   !
BB243   <- [241]
  val?^ | miss    %243.0 = LdVar              eR    errors, e0.1
  val?            %243.1 = Force!             !v    %243.0, e0.1   <val?_>
  (cls|spec|blt)  %243.2 = LdFun              !v    paste0, e0.1
  fs              %243.3 = FrameState         R     0x560a364b2230+2263: [%291.3, %291.4, %291.5, <blt c>, %243.1, %243.2], env=e0.1
  void                    Deopt              !v    %243.3, DeadCall@0x560a360588f0[Call#37], %243.2   !
BB242   <- [241]
  (cls|spec|blt)  %242.0 = LdFun              !v    c, e0.1
  fs              %242.1 = FrameState         R     0x560a364b2230+2207: [%291.3, %291.4, %291.5, %242.0], env=e0.1
  void                    Deopt              !v    %242.1, DeadCall@0x560a360588f0[Call#34], %242.0   !
BB387   <- [60]
  lgl$-           %387.0 = CastType           d     dn %60.1
  lgl$-           %387.1 = Not                d     %387.0, elided
  lgl$#-          %387.2 = CheckTrueFalse     e     %387.1
  void                    Branch                   %387.2 -> BB64 (if true) | BB63 (if false)
BB388   <- [60]
  fs              %388.0 = FrameState         R     0x560a364b2230+2385: [%291.3, %291.4, %291.5, %60.1], env=e0.1
  void                    Deopt              !v    %388.0, Typecheck@0x560a360588f0[Type#131], %60.1   !
BB228   <- [221]
  val?^ | miss    %228.0 = LdVar              eR    c, e0.1
  lgl$#-          %228.1 = Identical                <blt c>, %228.0   <@?>
  void                    Branch                   %228.1 -> BB230 (if true) | BB229 (if false)
BB222   <- [221]
  lgl$#-          %222.0 = CheckTrueFalse     e     %347.0
  void                    Branch                   %222.0 -> BB225 (if true) | BB223 (if false)
BB355   <- [353]
  val-            %355.0 = CastType           d     dn %353.0   <nil->
  lgl$#-          %355.1 = CallSafeBuiltin    wed   is.function(%355.0)    <lgl$->
  lgl$-           %355.2 = LAnd                     %347.2, %355.1
  lgl$-           %355.3 = %355.2
  goto BB221
BB356   <- [353]
  void                    Nop                !     
  val             %356.1 = %353.0
  dr              %356.2 = Typecheck@0x560a360588f0[Type#347]
  goto BB218
BB238   <- [181]
  void                    Nop                !     
  int$-           %238.1 = %291.5
  goto BB189
BB184   <- [181]
  val?^ | miss    %184.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %184.1 = Identical                %184.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %184.1 -> BB379 (if true) | BB380 (if false)
BB381   <- [359]
  lgl$-           %381.0 = CastType           d     dn %359.2
  lgl$-           %381.1 = Not                d     %381.0, elided
  lgl$-           %381.2 = AsLogical                %381.1
  lgl$-           %381.3 = LAnd                     %357.2, %381.2
  lgl$-           %381.4 = %381.3
  goto BB181
BB382   <- [359]
  fs              %382.0 = FrameState         R     0x560a364b2230+4553: [%327.2, %327.3, %291.5, %357.2, %359.2], env=e0.1
  void                    Deopt              !v    %382.0, Typecheck@0x560a360588f0[Type#261], %359.2   !
BB371   <- [367]
  prom-           %371.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p70, e367.3
  prom-           %371.1 = MkArg                    %367.7, validObject[0x560a36064610]_p71 (!refl), e367.3
  dots-           %371.2 = DotsList           l     error=%371.1
  val?            %371.3 = StaticCall         !v    tryCatch[0x560a35ea8ff0](%371.0, %371.2) { 0 1n } e367.3   <val?>
  val?            %371.4 = PopContext         C     %371.3, %367.1
  void                    StVar              lW    sloti, %371.4, e0.1
  val?^ | miss    %371.6 = LdVar              eR    inherits, e0.1
  lgl$#-          %371.7 = Identical                %371.6, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %371.7 -> BB383 (if true) | BB384 (if false)
BB372   <- [367]
  fs              %372.0 = FrameState         R     0x560a364b2230+3250: [%291.3, %291.4, %65.2], env=e0.1
  fs              %372.1 = FrameState         R     0x560a35dbd040+0: [], env=e367.3, next=%372.0
  void                    Deopt              !v    %372.1, CallTarget@0x560a35dc3ad0[Call#2], %367.8   !
BB64   <- [387]
  void                    Nop                !     
  int$-           %64.1 = %291.5
  goto BB65
BB63   <- [387]
  (cls|spec|blt)  %63.0 = LdFun              !v    anyStrings, e0.1
  fs              %63.1 = FrameState         R     0x560a364b2230+2417: [%291.3, %291.4, %291.5, %63.0], env=e0.1
  void                    Deopt              !v    %63.1, DeadCall@0x560a360588f0[Call#39], %63.0   !
BB230   <- [228]
  (cls|spec|blt)  %230.0 = LdFun              !v    anyStrings, e0.1
  fs              %230.1 = FrameState         R     0x560a364b2230+6552: [<blt c>, %339.1, %230.0], env=e0.1
  void                    Deopt              !v    %230.1, DeadCall@0x560a360588f0[Call#111], %230.0   !
BB229   <- [228]
  (cls|spec|blt)  %229.0 = LdFun              !v    c, e0.1
  fs              %229.1 = FrameState         R     0x560a364b2230+6496: [%229.0], env=e0.1
  void                    Deopt              !v    %229.1, DeadCall@0x560a360588f0[Call#108], %229.0   !
BB225   <- [222]
  val?^ | miss    %225.0 = LdVar              eR    test, e0.1
  val?            %225.1 = Force!             !v    %225.0, e0.1   <val?_>
  lgl$#-          %225.2 = CheckTrueFalse     we    %225.1
  void                    Branch                   %225.2 -> BB227 (if true) | BB226 (if false)
BB223   <- [222]
  void                    Visible            v     
  lgl$#-          %223.1 = true
  goto BB224
BB189   <- [188, 212, 238, 205]
  int$-           %189.0 = Phi                      %188.1:BB188, %205.1:BB205, %212.1:BB212, %238.1:BB238
  int$-           %189.1 = %189.0
  int$-           %189.2 = Inc                      %189.1
  lgl$-           %189.3 = Lt                 d     %327.3, %189.2, elided
  lgl$#-          %189.4 = Identical                %189.3, true
  void                    Branch                   %189.4 -> BB214 (if true) | BB190 (if false)
BB379   <- [184]
  prom-           %379.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p46, e0.1
  val?            %379.1 = StaticCall         !v    getClassDef[0x560a369f8e10](%379.0) e0.1   <other>
  lgl$-           %379.2 = Is                       %379.1, NULL
  void                    StVar              lW    superDef, %379.1, e0.1
  val             %379.4 = ChkMissing         e     %379.1
  lgl$#-          %379.5 = CheckTrueFalse     e     %379.2
  void                    Branch                   %379.5 -> BB235 (if true) | BB185 (if false)
BB380   <- [184]
  fs              %380.0 = FrameState         R     0x560a364b2230+4561: [%327.2, %327.3, %291.5, %181.1], env=e0.1
  void                    Deopt              !v    %380.0, CallTarget@0x560a360588f0[Call#74], %184.0   !
BB383   <- [371]
  prom-           %383.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p26 (!refl), e0.1
  ct              %383.1 = PushContext        lCL   %383.0, "try-error", inherits(sloti, "try-error"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.1
  val?^           %383.2 = CastType                 up %383.0
  env             e383.3 = MkEnv              l     x=%383.2, what="try-error", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %383.4 = Force!<lazy>       !vr   %383.2, e383.3   <val?>
  val?^ | miss    %383.5 = LdVar              eR    what, e383.3
  val?            %383.6 = Force!<value>      !v    %383.5, e383.3   <str$->
  val?^ | miss    %383.7 = LdVar              eR    which, e383.3
  val?            %383.8 = Force!<lazy>       !v    %383.7, e383.3   <lgl$->
  lgl$#-          %383.9 = IsType                   %383.8 isA lgl$-
  lgl$#-          %383.10 = IsType                   %383.6 isA val?-
  void                    Branch                   %383.10 -> BB395 (if true) | BB396 (if false)
BB384   <- [371]
  fs              %384.0 = FrameState         R     0x560a364b2230+3264: [%291.3, %291.4, %65.2], env=e0.1
  void                    Deopt              !v    %384.0, CallTarget@0x560a360588f0[Call#52], %371.6   !
BB227   <- [225]
  val?^ | miss    %227.0 = LdVar              eR    errors, e0.1
  void                    Visible            v     
  val?            %227.2 = Force!             !     %227.0, e0.1   <val?_>
  val?            %227.3 = %227.2
  goto BB224
BB226   <- [225]
  (cls|spec|blt)  %226.0 = LdFun              !v    gettextf, e0.1
  fs              %226.1 = FrameState         R     0x560a364b2230+6753: [%226.0], env=e0.1
  void                    Deopt              !v    %226.1, DeadCall@0x560a360588f0[Call#114], %226.0   !
BB224   <- [223, 227]
  val?            %224.0 = Phi                      %223.1:BB223, %227.3:BB227
  val?            %224.1 = %224.0
  void                    Return             l     %224.1
BB214   <- [189]
  void                    Nop                !     
  goto BB215
BB190   <- [189]
  val?            %190.0 = Extract2_1D        wed   %327.2, %189.2, elided
  void                    StVar              lW    i, %190.0, e0.1
  val?^ | miss    %190.2 = LdVar              eR    extends, e0.1
  lgl$#-          %190.3 = IsType                   %190.2 isA val?~+ | miss
  void                    Branch                   %190.3 -> BB389 (if true) | BB390 (if false)
BB235   <- [379]
  val?^ | miss    %235.0 = LdVar              eR    c, e0.1
  lgl$#-          %235.1 = Identical                <blt c>, %235.0   <@?>
  void                    Branch                   %235.1 -> BB237 (if true) | BB236 (if false)
BB185   <- [379]
  (cls|spec|blt)  %185.0 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %185.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p47, e0.1
  prom-           %185.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p48, e0.1
  val?            %185.3 = Call               !v    %185.0(%185.1, %185.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %185.3, e0.1
  lgl$#-          %185.5 = IsType                   %185.3 isA val?-
  val?^ | miss    %185.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %185.7 = Identical                <blt is.function>, %185.6   <true>
  void                    Branch                   %185.7 -> BB397 (if true) | BB398 (if false)
BB395   <- [383]
  val?-           %395.0 = CastType           d     dn %383.6   <str$->
  void                    Branch                   %383.9 -> BB401 (if true) | BB402 (if false)
BB396   <- [383]
  void                    Nop                !     
  val?            %396.1 = %383.6
  dr              %396.2 = Typecheck@0x560a36ccf2d0[Type#1]
  goto BB82
BB389   <- [190]
  val?~+ | miss   %389.0 = CastType           d     dn %190.2
  val?+           %389.1 = Force!<value>            %389.0,    <vec+>
  lgl$#-          %389.2 = IsType                   %389.1 isA val+   <true>
  void                    Branch                   %389.2 -> BB391 (if true) | BB392 (if false)
BB390   <- [190]
  void                    Nop                !     
  val?^ | miss    %390.1 = %190.2
  dr              %390.2 = Typecheck@0x560a360588f0[Type#294]
  goto BB191
BB237   <- [235]
  val?^ | miss    %237.0 = LdVar              eR    errors, e0.1
  val?            %237.1 = Force!             !v    %237.0, e0.1   <val?_>
  (cls|spec|blt)  %237.2 = LdFun              !v    paste0, e0.1
  fs              %237.3 = FrameState         R     0x560a364b2230+4742: [%327.2, %327.3, %291.5, <blt c>, %237.1, %237.2], env=e0.1
  void                    Deopt              !v    %237.3, DeadCall@0x560a360588f0[Call#77], %237.2   !
BB236   <- [235]
  (cls|spec|blt)  %236.0 = LdFun              !v    c, e0.1
  fs              %236.1 = FrameState         R     0x560a364b2230+4686: [%327.2, %327.3, %291.5, %236.0], env=e0.1
  void                    Deopt              !v    %236.1, DeadCall@0x560a360588f0[Call#75], %236.0   !
BB397   <- [185]
  val             %397.0 = ChkMissing         e     %185.3
  void                    Branch                   %185.5 -> BB403 (if true) | BB404 (if false)
BB398   <- [185]
  void                    Nop                !     
  lgl$#-          %398.1 = %185.7
  dr              %398.2 = DeadBranchReached@0x560a360588f0[Test#62]
  goto BB186
BB401   <- [395]
  lgl$-           %401.0 = CastType           d     dn %383.8
  val?            %401.1 = CallBuiltin        !v    inherits(%383.4, %395.0, %401.0) e383.3
  val?            %401.2 = PopContext         C     %401.1, %383.1   <lgl$->
  lgl$#-          %401.3 = IsType                   %401.2 isA lgl$-
  void                    Branch                   %401.3 -> BB407 (if true) | BB408 (if false)
BB402   <- [395]
  void                    Nop                !     
  val?            %402.1 = %383.8
  dr              %402.2 = Typecheck@0x560a36ccf2d0[Type#2]
  goto BB82
BB82   <- [396, 402]
  val?^ | miss    %82.0 = Phi                      %396.1:BB396, %402.1:BB402
  val?^ | miss    %82.1 = %82.0
  dr              %82.2 = Phi                      %396.2:BB396, %402.2:BB402
  dr              %82.3 = %82.2
  fs              %82.4 = FrameState         R     0x560a364b2230+3301: [%291.3, %291.4, %65.2], env=e0.1
  fs              %82.5 = FrameState         R     0x560a36a23c60+37: [%383.4, %383.6, %383.8], env=e383.3, next=%82.4
  void                    Deopt              !v    %82.5, %82.3, %82.1   !
BB391   <- [389]
  val             %391.0 = ChkMissing         e     %190.0
  lgl$#-          %391.1 = IsType                   %391.0 isA int$-
  void                    Branch                   %391.1 -> BB393 (if true) | BB394 (if false)
BB392   <- [389]
  void                    Nop                !     
  lgl$#-          %392.1 = %389.2
  dr              %392.2 = DeadBranchReached@0x560a360588f0[Test#65]
  goto BB191
BB191   <- [390, 392, 394]
  val?^ | miss    %191.0 = Phi                      %390.1:BB390, %392.1:BB392, %394.1:BB394
  val?^ | miss    %191.1 = %191.0
  dr              %191.2 = Phi                      %390.2:BB390, %392.2:BB392, %394.2:BB394
  dr              %191.3 = %191.2
  fs              %191.4 = FrameState         R     0x560a364b2230+5276: [%327.2, %327.3, %189.2], env=e0.1
  void                    Deopt              !v    %191.4, %191.3, %191.1   !
BB403   <- [397]
  val?-           %403.0 = CastType           d     dn %185.3   <nil->
  lgl$#-          %403.1 = CallSafeBuiltin    wed   is.function(%403.0)    <lgl$->
  void                    Branch                   %403.1 -> BB232 (if true) | BB188 (if false)
BB404   <- [397]
  void                    Nop                !     
  val?            %404.1 = %185.3
  dr              %404.2 = Typecheck@0x560a360588f0[Type#274]
  goto BB186
BB186   <- [398, 404]
  val?^ | miss    %186.0 = Phi                      %398.1:BB398, %404.1:BB404
  val?^ | miss    %186.1 = %186.0
  dr              %186.2 = Phi                      %398.2:BB398, %404.2:BB404
  dr              %186.3 = %186.2
  fs              %186.4 = FrameState         R     0x560a364b2230+4876: [%327.2, %327.3, %291.5], env=e0.1
  void                    Deopt              !v    %186.4, %186.3, %186.1   !
BB407   <- [401]
  lgl$-           %407.0 = CastType           d     dn %401.2
  lgl$#-          %407.1 = CheckTrueFalse     e     %407.0
  void                    Branch                   %407.1 -> BB162 (if true) | BB86 (if false)
BB408   <- [401]
  void                    Nop                !     
  val?            %408.1 = %401.2
  dr              %408.2 = Typecheck@0x560a360588f0[Type#186]
  goto BB84
BB393   <- [391]
  int$-           %393.0 = CastType           d     dn %391.0
  val?            %393.1 = Extract2_1D        wed   %389.1, %393.0, elided   <other>
  void                    StVar              lW    exti, %393.1, e0.1
  (cls|spec|blt)  %393.3 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %393.4 = MkArg                    unboundValue, validObject[0x560a36064610]_p49, e0.1
  prom-           %393.5 = MkArg                    unboundValue, validObject[0x560a36064610]_p50, e0.1
  val?            %393.6 = Call               !v    %393.3(%393.4, %393.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %393.6, e0.1
  (cls|spec|blt)  %393.8 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %393.9 = MkArg                    unboundValue, validObject[0x560a36064610]_p51, e0.1
  prom-           %393.10 = MkArg                    unboundValue, validObject[0x560a36064610]_p52, e0.1
  val?            %393.11 = Call               !v    %393.8(%393.9, %393.10) e0.1   <lgl$->
  lgl$#-          %393.12 = IsType                   %393.11 isA lgl$-
  void                    Branch                   %393.12 -> BB399 (if true) | BB400 (if false)
BB394   <- [391]
  void                    Nop                !     
  val             %394.1 = %391.0
  dr              %394.2 = Typecheck@0x560a360588f0[Type#296]
  goto BB191
BB232   <- [403]
  val?^ | miss    %232.0 = LdVar              eR    c, e0.1
  lgl$#-          %232.1 = Identical                <blt c>, %232.0   <@?>
  void                    Branch                   %232.1 -> BB234 (if true) | BB233 (if false)
BB188   <- [403]
  void                    Nop                !     
  int$-           %188.1 = %291.5
  goto BB189
BB162   <- [407]
  val?^ | miss    %162.0 = LdVar              eR    c, e0.1
  lgl$#-          %162.1 = Identical                <blt c>, %162.0   <@?>
  void                    Branch                   %162.1 -> BB164 (if true) | BB163 (if false)
BB86   <- [407]
  val?^ | miss    %86.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %86.1 = Identical                %86.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %86.1 -> BB411 (if true) | BB412 (if false)
BB84   <- [408, 412]
  val?^ | miss    %84.0 = Phi                      %408.1:BB408, %412.1:BB412
  val?^ | miss    %84.1 = %84.0
  dr              %84.2 = Phi                      %408.2:BB408, %412.2:BB412
  dr              %84.3 = %84.2
  fs              %84.4 = FrameState         R     0x560a364b2230+3301: [%291.3, %291.4, %65.2, %401.2], env=e0.1
  void                    Deopt              !v    %84.4, %84.3, %84.1   !
BB399   <- [393]
  lgl$-           %399.0 = CastType           d     dn %393.11
  lgl$-           %399.1 = Not                d     %399.0, elided
  lgl$-           %399.2 = AsLogical                %399.1
  lgl$#-          %399.3 = Identical                %399.2, false
  void                    Branch                   %399.3 -> BB213 (if true) | BB195 (if false)
BB400   <- [393]
  void                    Nop                !     
  val?            %400.1 = %393.11
  dr              %400.2 = Typecheck@0x560a360588f0[Type#303]
  goto BB193
BB234   <- [232]
  val?^ | miss    %234.0 = LdVar              eR    errors, e0.1
  val?            %234.1 = Force!             !v    %234.0, e0.1   <val?_>
  (cls|spec|blt)  %234.2 = LdFun              !v    anyStrings, e0.1
  fs              %234.3 = FrameState         R     0x560a364b2230+5067: [%327.2, %327.3, %291.5, <blt c>, %234.1, %234.2], env=e0.1
  void                    Deopt              !v    %234.3, DeadCall@0x560a360588f0[Call#84], %234.2   !
BB233   <- [232]
  (cls|spec|blt)  %233.0 = LdFun              !v    c, e0.1
  fs              %233.1 = FrameState         R     0x560a364b2230+5011: [%327.2, %327.3, %291.5, %233.0], env=e0.1
  void                    Deopt              !v    %233.1, DeadCall@0x560a360588f0[Call#80], %233.0   !
BB164   <- [162]
  val?^ | miss    %164.0 = LdVar              eR    errors, e0.1
  val?            %164.1 = Force!             !v    %164.0, e0.1   <val?_>
  val?^ | miss    %164.2 = LdVar              eR    sloti, e0.1
  val?            %164.3 = Force!             !v    %164.2, e0.1   <val?_>
  lgl$#-          %164.4 = IsType                   %164.3 isA val?+
  lgl$#-          %164.5 = IsType                   %164.1 isA val?+
  void                    Branch                   %164.5 -> BB415 (if true) | BB416 (if false)
BB163   <- [162]
  (cls|spec|blt)  %163.0 = LdFun              !v    c, e0.1
  fs              %163.1 = FrameState         R     0x560a364b2230+3345: [%291.3, %291.4, %65.2, %163.0], env=e0.1
  void                    Deopt              !v    %163.1, DeadCall@0x560a360588f0[Call#53], %163.0   !
BB411   <- [86]
  prom-           %411.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p27, e0.1
  prom-           %411.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p29, e0.1
  prom-           %411.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p30, e0.1
  ct              %411.3 = PushContext        lCL   %411.0, %411.1, missingArg, %411.2, possibleExtends(class(sloti), classi, ClassDef|..., function(class1, class2, ClassDef1=getClassDef|..., e0.1
  val?^           %411.4 = CastType                 up %411.2
  val?^           %411.5 = CastType                 up %411.1
  val?^           %411.6 = CastType                 up %411.0
  env             e411.7 = MkEnv              l     class1=%411.6, class2=%411.5, ClassDef1(miss)=missingArg, ClassDef2=%411.4, parent=<env 0x560a342f8378>, context 1
  prom-           %411.8 = MkArg                    unboundValue, validObject[0x560a36064610]_p73, e411.7
  val?^ | miss    %411.9 = CastType                 up %411.8
  void                    StArg              lW    ClassDef1, %411.9, e411.7
  val?^ | miss    %411.11 = LdVar              eR    .identC, <env 0x560a342f8378>
  lgl$#-          %411.12 = Identical                %411.11, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %411.12 -> BB419 (if true) | BB420 (if false)
BB412   <- [86]
  void                    Nop                !     
  val?^ | miss    %412.1 = %86.0
  dr              %412.2 = CallTarget@0x560a360588f0[Call#54]
  goto BB84
BB213   <- [399]
  void                    Nop                !     
  lgl$-           %213.1 = %399.2
  goto BB198
BB195   <- [399]
  val?^ | miss    %195.0 = LdVar              eR    is, e0.1
  lgl$#-          %195.1 = Identical                %195.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %195.1 -> BB405 (if true) | BB406 (if false)
BB193   <- [400, 406]
  val?^ | miss    %193.0 = Phi                      %400.1:BB400, %406.1:BB406
  val?^ | miss    %193.1 = %193.0
  dr              %193.2 = Phi                      %400.2:BB400, %406.2:BB406
  dr              %193.3 = %193.2
  fs              %193.4 = FrameState         R     0x560a364b2230+5439: [%327.2, %327.3, %189.2, %393.11], env=e0.1
  void                    Deopt              !v    %193.4, %193.3, %193.1   !
BB415   <- [164]
  val?+           %415.0 = CastType           d     dn %164.1   <val?_>
  void                    Branch                   %164.4 -> BB417 (if true) | BB418 (if false)
BB416   <- [164]
  void                    Nop                !     
  val?            %416.1 = %164.1
  dr              %416.2 = Typecheck@0x560a360588f0[Type#189]
  goto BB165
BB419   <- [411]
  prom-           %419.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p75, e411.7
  prom-           %419.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p76, e411.7
  val?            %419.2 = StaticCall         !v    .identC[0x560a3676ccf0](%419.0, %419.1) e411.7   <lgl$->
  lgl$#-          %419.3 = IsType                   %419.2 isA lgl$-
  void                    Branch                   %419.3 -> BB425 (if true) | BB426 (if false)
BB420   <- [411]
  fs              %420.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %420.1 = FrameState         R     0x560a35c09fa0+0: [], env=e411.7, next=%420.0
  void                    Deopt              !v    %420.1, CallTarget@0x560a35c0c220[Call#3], %411.11   !
BB198   <- [213, 409]
  lgl$-           %198.0 = Phi                      %409.4:BB409, %213.1:BB213
  lgl$-           %198.1 = %198.0
  lgl$#-          %198.2 = CheckTrueFalse     e     %198.1
  void                    Branch                   %198.2 -> BB212 (if true) | BB201 (if false)
BB405   <- [195]
  prom-           %405.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p53, e0.1
  prom-           %405.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p54, e0.1
  val?            %405.2 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%405.0, %405.1) e0.1   <lgl$->
  lgl$#-          %405.3 = IsType                   %405.2 isA lgl$-
  void                    Branch                   %405.3 -> BB409 (if true) | BB410 (if false)
BB406   <- [195]
  void                    Nop                !     
  val?^ | miss    %406.1 = %195.0
  dr              %406.2 = CallTarget@0x560a360588f0[Call#90]
  goto BB193
BB417   <- [415]
  val?+           %417.0 = CastType           d     dn %164.3   <val?_>
  val+            %417.1 = CallSafeBuiltin    wed   c(%415.0, %417.0)    <val?_>
  void                    StVar              lW    errors, %417.1, e0.1
  int$-           %417.3 = %65.2
  goto BB65
BB418   <- [415]
  void                    Nop                !     
  val?            %418.1 = %164.3
  dr              %418.2 = Typecheck@0x560a360588f0[Type#190]
  goto BB165
BB165   <- [416, 418]
  val?^ | miss    %165.0 = Phi                      %416.1:BB416, %418.1:BB418
  val?^ | miss    %165.1 = %165.0
  dr              %165.2 = Phi                      %416.2:BB416, %418.2:BB418
  dr              %165.3 = %165.2
  fs              %165.4 = FrameState         R     0x560a364b2230+3405: [%291.3, %291.4, %65.2, <blt c>, %164.1, %164.3], env=e0.1
  void                    Deopt              !v    %165.4, %165.3, %165.1   !
BB425   <- [419]
  lgl$-           %425.0 = CastType           d     dn %419.2
  lgl$-           %425.1 = AsLogical                %425.0
  lgl$#-          %425.2 = Identical                %425.1, true
  void                    Branch                   %425.2 -> BB161 (if true) | BB91 (if false)
BB426   <- [419]
  void                    Nop                !     
  val?            %426.1 = %419.2
  dr              %426.2 = Typecheck@0x560a35c0c220[Type#9]
  goto BB89
BB212   <- [198]
  void                    Nop                !     
  int$-           %212.1 = %189.2
  goto BB189
BB201   <- [198]
  val?^ | miss    %201.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %201.1 = Identical                %201.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %201.1 -> BB413 (if true) | BB414 (if false)
BB409   <- [405]
  lgl$-           %409.0 = CastType           d     dn %405.2
  lgl$-           %409.1 = Not                d     %409.0, elided
  lgl$-           %409.2 = AsLogical                %409.1
  lgl$-           %409.3 = LAnd                     %399.2, %409.2
  lgl$-           %409.4 = %409.3
  goto BB198
BB410   <- [405]
  fs              %410.0 = FrameState         R     0x560a364b2230+5489: [%327.2, %327.3, %189.2, %399.2, %405.2], env=e0.1
  void                    Deopt              !v    %410.0, Typecheck@0x560a360588f0[Type#306], %405.2   !
BB161   <- [425]
  void                    Nop                !     
  lgl$-           %161.1 = %425.1
  goto BB94
BB91   <- [425]
  val?^ | miss    %91.0 = LdVar              eR    .identC, e411.7
  lgl$#-          %91.1 = Identical                %91.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %91.1 -> BB427 (if true) | BB428 (if false)
BB89   <- [426, 428]
  val?^ | miss    %89.0 = Phi                      %426.1:BB426, %428.1:BB428
  val?^ | miss    %89.1 = %89.0
  dr              %89.2 = Phi                      %426.2:BB426, %428.2:BB428
  dr              %89.3 = %89.2
  fs              %89.4 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %89.5 = FrameState         R     0x560a35c09fa0+37: [%419.2], env=e411.7, next=%89.4
  void                    Deopt              !v    %89.5, %89.3, %89.1   !
BB413   <- [201]
  prom-           %413.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p55, e0.1
  val?            %413.1 = StaticCall         !v    getClassDef[0x560a369f8e10](%413.0) e0.1   <other>
  lgl$-           %413.2 = Is                       %413.1, NULL
  void                    StVar              lW    superDef, %413.1, e0.1
  val             %413.4 = ChkMissing         e     %413.1
  lgl$#-          %413.5 = CheckTrueFalse     e     %413.2
  void                    Branch                   %413.5 -> BB209 (if true) | BB202 (if false)
BB414   <- [201]
  fs              %414.0 = FrameState         R     0x560a364b2230+5497: [%327.2, %327.3, %189.2, %198.1], env=e0.1
  void                    Deopt              !v    %414.0, CallTarget@0x560a360588f0[Call#91], %201.0   !
BB94   <- [161, 429]
  lgl$-           %94.0 = Phi                      %429.3:BB429, %161.1:BB161
  lgl$-           %94.1 = %94.0
  lgl$#-          %94.2 = CheckTrueFalse     e     %94.1
  void                    Branch                   %94.2 -> BB160 (if true) | BB95 (if false)
BB427   <- [91]
  prom-           %427.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p81, e411.7
  val?            %427.1 = StaticCall         !v    .identC[0x560a364a1ef0](%427.0, "ANY") e411.7   <lgl$->
  lgl$#-          %427.2 = IsType                   %427.1 isA lgl$-
  void                    Branch                   %427.2 -> BB429 (if true) | BB430 (if false)
BB428   <- [91]
  void                    Nop                !     
  val?^ | miss    %428.1 = %91.0
  dr              %428.2 = CallTarget@0x560a35c0c220[Call#4]
  goto BB89
BB209   <- [413]
  val?^ | miss    %209.0 = LdVar              eR    c, e0.1
  lgl$#-          %209.1 = Identical                <blt c>, %209.0   <@?>
  void                    Branch                   %209.1 -> BB211 (if true) | BB210 (if false)
BB202   <- [413]
  (cls|spec|blt)  %202.0 = LdFun              !v    @, <0x560a33cf0bd8>, e0.1
  prom-           %202.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p56, e0.1
  prom-           %202.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p57, e0.1
  val?            %202.3 = Call               !v    %202.0(%202.1, %202.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %202.3, e0.1
  lgl$#-          %202.5 = IsType                   %202.3 isA val?-
  val?^ | miss    %202.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %202.7 = Identical                <blt is.function>, %202.6   <true>
  void                    Branch                   %202.7 -> BB421 (if true) | BB422 (if false)
BB160   <- [94]
  void                    Nop                !     
  lgl$#-          %160.1 = true
  goto BB126
BB95   <- [94]
  val?^ | miss    %95.0 = LdVar              eR    ClassDef1, e411.7
  val?            %95.1 = Force!<lazy>       !v    %95.0, e411.7   <other>
  lgl$-           %95.2 = Is                       %95.1, NULL
  lgl$#-          %95.3 = CheckTrueFalse     e     %95.2
  void                    Branch                   %95.3 -> BB159 (if true) | BB96 (if false)
BB429   <- [427]
  lgl$-           %429.0 = CastType           d     dn %427.1
  lgl$-           %429.1 = AsLogical                %429.0
  lgl$-           %429.2 = LOr                      %425.1, %429.1
  lgl$-           %429.3 = %429.2
  goto BB94
BB430   <- [427]
  fs              %430.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %430.1 = FrameState         R     0x560a35c09fa0+86: [%425.1, %427.1], env=e411.7, next=%430.0
  void                    Deopt              !v    %430.1, Typecheck@0x560a35c0c220[Type#11], %427.1   !
BB211   <- [209]
  val?^ | miss    %211.0 = LdVar              eR    errors, e0.1
  val?            %211.1 = Force!             !v    %211.0, e0.1   <val?_>
  (cls|spec|blt)  %211.2 = LdFun              !v    paste0, e0.1
  fs              %211.3 = FrameState         R     0x560a364b2230+5678: [%327.2, %327.3, %189.2, <blt c>, %211.1, %211.2], env=e0.1
  void                    Deopt              !v    %211.3, DeadCall@0x560a360588f0[Call#94], %211.2   !
BB210   <- [209]
  (cls|spec|blt)  %210.0 = LdFun              !v    c, e0.1
  fs              %210.1 = FrameState         R     0x560a364b2230+5622: [%327.2, %327.3, %189.2, %210.0], env=e0.1
  void                    Deopt              !v    %210.1, DeadCall@0x560a360588f0[Call#92], %210.0   !
BB421   <- [202]
  val             %421.0 = ChkMissing         e     %202.3
  void                    Branch                   %202.5 -> BB423 (if true) | BB424 (if false)
BB422   <- [202]
  void                    Nop                !     
  lgl$#-          %422.1 = %202.7
  dr              %422.2 = DeadBranchReached@0x560a360588f0[Test#67]
  goto BB203
BB126   <- [160, 159, 125]
  val?            %126.0 = Phi                      %125.2:BB125, %159.1:BB159, %160.1:BB160
  val?            %126.1 = %126.0
  val?            %126.2 = PopContext         C     %126.1, %411.3   <(lgl|other)>
  void                    StVar              lW    ok, %126.2, e0.1
  val?^ | miss    %126.4 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %126.5 = Identical                %126.4, function(x) <(rir::DispatchTable*)0x560a35e349|...
  void                    Branch                   %126.5 -> BB431 (if true) | BB432 (if false)
BB159   <- [95]
  void                    Nop                !     
  lgl$#-          %159.1 = false
  goto BB126
BB96   <- [95]
  (cls|spec|blt)  %96.0 = LdFun              !v    @, <0x560a33cf0bd8>, e411.7
  prom-           %96.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p82, e411.7
  prom-           %96.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p83, e411.7
  val?            %96.3 = Call               !v    %96.0(%96.1, %96.2) e411.7   <vec+>
  void                    StVar              lW    ext, %96.3, e411.7
  lgl$#-          %96.5 = IsType                   %96.3 isA val+   <true>
  val             %96.6 = ChkMissing         e     %96.3
  void                    Branch                   %96.5 -> BB435 (if true) | BB436 (if false)
BB423   <- [421]
  val?-           %423.0 = CastType           d     dn %202.3   <nil->
  lgl$#-          %423.1 = CallSafeBuiltin    wed   is.function(%423.0)    <lgl$->
  void                    Branch                   %423.1 -> BB206 (if true) | BB205 (if false)
BB424   <- [421]
  void                    Nop                !     
  val?            %424.1 = %202.3
  dr              %424.2 = Typecheck@0x560a360588f0[Type#319]
  goto BB203
BB203   <- [422, 424]
  val?^ | miss    %203.0 = Phi                      %422.1:BB422, %424.1:BB424
  val?^ | miss    %203.1 = %203.0
  dr              %203.2 = Phi                      %422.2:BB422, %424.2:BB424
  dr              %203.3 = %203.2
  fs              %203.4 = FrameState         R     0x560a364b2230+5812: [%327.2, %327.3, %189.2], env=e0.1
  void                    Deopt              !v    %203.4, %203.3, %203.1   !
BB431   <- [126]
  val             %431.0 = ChkMissing         e     %126.2
  val+            %431.1 = CallSafeBuiltin    wed   is.logical(%126.2)    <lgl$->
  lgl$#-          %431.2 = IsType                   %431.1 isA lgl$-
  void                    Branch                   %431.2 -> BB433 (if true) | BB434 (if false)
BB432   <- [126]
  fs              %432.0 = FrameState         R     0x560a364b2230+3519: [%291.3, %291.4, %65.2], env=e0.1
  void                    Deopt              !v    %432.0, CallTarget@0x560a360588f0[Call#56], %126.4   !
BB435   <- [96]
  val?^ | miss    %435.0 = LdVar              eR    class2, e411.7
  val?            %435.1 = Force!<wrapped>    !v    %435.0, e411.7   <str$+>
  lgl$#-          %435.2 = IsType                   %435.1 isA val?+
  lgl$#-          %435.3 = IsType                   %96.3 isA val?+
  void                    Branch                   %435.3 -> BB437 (if true) | BB438 (if false)
BB436   <- [96]
  fs              %436.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %436.1 = FrameState         R     0x560a35c09fa0+199: [], env=e411.7, next=%436.0
  void                    Deopt              !v    %436.1, DeadBranchReached@0x560a35c0c220[Test#1], %96.5   !
BB206   <- [423]
  val?^ | miss    %206.0 = LdVar              eR    c, e0.1
  lgl$#-          %206.1 = Identical                <blt c>, %206.0   <@?>
  void                    Branch                   %206.1 -> BB208 (if true) | BB207 (if false)
BB205   <- [423]
  void                    Nop                !     
  int$-           %205.1 = %189.2
  goto BB189
BB433   <- [431]
  lgl$-           %433.0 = CastType           d     dn %431.1
  lgl$-           %433.1 = AsLogical                %433.0
  lgl$#-          %433.2 = Identical                %433.1, false
  void                    Branch                   %433.2 -> BB147 (if true) | BB131 (if false)
BB434   <- [431]
  void                    Nop                !     
  val+            %434.1 = %431.1
  dr              %434.2 = Typecheck@0x560a34fd4b48[Type#2]
  goto BB129
BB437   <- [435]
  val?+           %437.0 = CastType           d     dn %96.3   <vec+>
  void                    Branch                   %435.2 -> BB441 (if true) | BB442 (if false)
BB438   <- [435]
  void                    Nop                !     
  val?            %438.1 = %96.3
  dr              %438.2 = Typecheck@0x560a35c0c220[Type#15]
  goto BB99
BB208   <- [206]
  val?^ | miss    %208.0 = LdVar              eR    errors, e0.1
  val?            %208.1 = Force!             !v    %208.0, e0.1   <val?_>
  (cls|spec|blt)  %208.2 = LdFun              !v    anyStrings, e0.1
  fs              %208.3 = FrameState         R     0x560a364b2230+6003: [%327.2, %327.3, %189.2, <blt c>, %208.1, %208.2], env=e0.1
  void                    Deopt              !v    %208.3, DeadCall@0x560a360588f0[Call#101], %208.2   !
BB207   <- [206]
  (cls|spec|blt)  %207.0 = LdFun              !v    c, e0.1
  fs              %207.1 = FrameState         R     0x560a364b2230+5947: [%327.2, %327.3, %189.2, %207.0], env=e0.1
  void                    Deopt              !v    %207.1, DeadCall@0x560a360588f0[Call#97], %207.0   !
BB147   <- [433]
  void                    Nop                !     
  lgl$-           %147.1 = %433.1
  goto BB132
BB131   <- [433]
  lgl$#-          %131.0 = IsType                   %126.2 isA lgl$-
  void                    Branch                   %131.0 -> BB439 (if true) | BB440 (if false)
BB129   <- [434, 440, 444]
  val?^ | miss    %129.0 = Phi                      %434.1:BB434, %440.1:BB440, %444.1:BB444
  val?^ | miss    %129.1 = %129.0
  dr              %129.2 = Phi                      %434.2:BB434, %440.2:BB440, %444.2:BB444
  dr              %129.3 = %129.2
  prom-           %129.4 = MkArg                    %126.2, validObject[0x560a36064610]_p31 (!refl), e0.1
  val?~           %129.5 = CastType                 up %129.4
  fs              %129.6 = FrameState         R     0x560a364b2230+3551: [%291.3, %291.4, %65.2], env=e0.1
  env             e129.7 = (MkEnv)            l     x=%129.5, parent=R_BaseNamespace, context 0
  fs              %129.8 = FrameState         R     0x560a35f8ec20+91: [%431.1], env=e129.7, next=%129.6
  void                    Deopt              !v    %129.8, %129.3, %129.1   !
BB441   <- [437]
  val?+           %441.0 = CastType           d     dn %435.1   <str$+>
  val?            %441.1 = Extract2_1D        wed   %437.0, %441.0, elided   <(nil|other)>
  lgl$-           %441.2 = Is                       %441.1, NULL
  void                    StVar              lW    contained, %441.1, e411.7
  lgl$-           %441.4 = Not                d     %441.2, elided
  lgl$#-          %441.5 = CheckTrueFalse     e     %441.4
  void                    Branch                   %441.5 -> BB158 (if true) | BB101 (if false)
BB442   <- [437]
  void                    Nop                !     
  val?            %442.1 = %435.1
  dr              %442.2 = Typecheck@0x560a35c0c220[Type#18]
  goto BB99
BB99   <- [438, 442]
  val?^ | miss    %99.0 = Phi                      %438.1:BB438, %442.1:BB442
  val?^ | miss    %99.1 = %99.0
  dr              %99.2 = Phi                      %438.2:BB438, %442.2:BB442
  dr              %99.3 = %99.2
  fs              %99.4 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %99.5 = FrameState         R     0x560a35c09fa0+253: [%96.3, %435.1], env=e411.7, next=%99.4
  void                    Deopt              !v    %99.5, %99.3, %99.1   !
BB132   <- [147, 439]
  lgl$-           %132.0 = Phi                      %439.1:BB439, %147.1:BB147
  lgl$-           %132.1 = %132.0
  lgl$-           %132.2 = AsLogical                %132.1
  lgl$#-          %132.3 = Identical                %132.2, false
  void                    Branch                   %132.3 -> BB146 (if true) | BB133 (if false)
BB439   <- [131]
  lgl$-           %439.0 = AsLogical                %433.1
  lgl$-           %439.1 = %439.0
  goto BB132
BB440   <- [131]
  void                    Nop                !     
  val?            %440.1 = %126.2
  dr              %440.2 = Typecheck@0x560a34fd4b48[Type#4]
  goto BB129
BB158   <- [441]
  val             %158.0 = ChkMissing         e     %441.1
  val?            %158.1 = %441.1
  goto BB125
BB101   <- [441]
  val?^ | miss    %101.0 = LdVar              eR    ClassDef2, e411.7
  val?            %101.1 = Force!<lazy>       !v    %101.0, e411.7   <other>
  lgl$-           %101.2 = Is                       %101.1, NULL
  lgl$#-          %101.3 = CheckTrueFalse     e     %101.2
  void                    Branch                   %101.3 -> BB157 (if true) | BB102 (if false)
BB146   <- [132]
  void                    Nop                !     
  lgl$-           %146.1 = %132.2
  goto BB134
BB133   <- [132]
  lgl$#-          %133.0 = IsType                   %126.2 isA lgl$-
  void                    Branch                   %133.0 -> BB443 (if true) | BB444 (if false)
BB125   <- [158, 124]
  val?            %125.0 = Phi                      %124.2:BB124, %158.1:BB158
  val?            %125.1 = %125.0
  val?            %125.2 = %125.1
  goto BB126
BB157   <- [101]
  void                    Nop                !     
  lgl$#-          %157.1 = false
  goto BB124
BB102   <- [101]
  (cls|spec|blt)  %102.0 = LdFun              !v    @, <0x560a33cf0bd8>, e411.7
  prom-           %102.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p84, e411.7
  prom-           %102.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p85, e411.7
  val?            %102.3 = Call               !v    %102.0(%102.1, %102.2) e411.7   <vec+>
  void                    StVar              lW    subs, %102.3, e411.7
  val?^ | miss    %102.5 = LdVar              eR    .identC, e411.7
  lgl$#-          %102.6 = Identical                %102.5, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %102.6 -> BB449 (if true) | BB450 (if false)
BB134   <- [146, 443]
  lgl$-           %134.0 = Phi                      %443.5:BB443, %146.1:BB146
  lgl$-           %134.1 = %134.0
  lgl$-           %134.2 = AsLogical                %134.1
  lgl$#-          %134.3 = Identical                %134.2, false
  void                    Branch                   %134.3 -> BB145 (if true) | BB137 (if false)
BB443   <- [133]
  lgl$-           %443.0 = CastType           d     dn %126.2
  lgl$-           %443.1 = CallSafeBuiltin    wed   is.na(%443.0)    <lgl$->
  lgl$-           %443.2 = Not                d     %443.1, elided
  lgl$-           %443.3 = AsLogical                %443.2
  lgl$-           %443.4 = LAnd                     %132.2, %443.3
  lgl$-           %443.5 = %443.4
  goto BB134
BB444   <- [133]
  void                    Nop                !     
  val?            %444.1 = %126.2
  dr              %444.2 = Typecheck@0x560a34fd4b48[Type#8]
  goto BB129
BB124   <- [157, 123]
  val?            %124.0 = Phi                      %123.2:BB123, %157.1:BB157
  val?            %124.1 = %124.0
  val?            %124.2 = %124.1
  goto BB125
BB449   <- [102]
  prom-           %449.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p86, e411.7
  val?            %449.1 = StaticCall         !v    .identC[0x560a364a1ef0](%449.0, "classRepresentation") e411.7   <lgl$->
  lgl$#-          %449.2 = IsType                   %449.1 isA lgl$-
  void                    Branch                   %449.2 -> BB451 (if true) | BB452 (if false)
BB450   <- [102]
  fs              %450.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %450.1 = FrameState         R     0x560a35c09fa0+364: [], env=e411.7, next=%450.0
  void                    Deopt              !v    %450.1, CallTarget@0x560a35c0c220[Call#7], %102.5   !
BB145   <- [134]
  void                    Nop                !     
  lgl$-           %145.1 = %134.2
  goto BB138
BB137   <- [134]
  lgl$#-          %137.0 = IsType                   %126.2 isA lgl$-
  void                    Branch                   %137.0 -> BB445 (if true) | BB446 (if false)
BB451   <- [449]
  lgl$-           %451.0 = CastType           d     dn %449.1
  lgl$-           %451.1 = Not                d     %451.0, elided
  lgl$-           %451.2 = AsLogical                %451.1
  lgl$#-          %451.3 = Identical                %451.2, false
  void                    Branch                   %451.3 -> BB108 (if true) | BB107 (if false)
BB452   <- [449]
  void                    Nop                !     
  val?            %452.1 = %449.1
  dr              %452.2 = Typecheck@0x560a35c0c220[Type#26]
  goto BB105
BB138   <- [145, 445]
  lgl$-           %138.0 = Phi                      %445.4:BB445, %145.1:BB145
  lgl$-           %138.1 = %138.0
  lgl$#-          %138.2 = CheckTrueFalse     e     %138.1
  void                    Branch                   %138.2 -> BB142 (if true) | BB139 (if false)
BB445   <- [137]
  lgl$-           %445.0 = CastType           d     dn %126.2
  lgl$-           %445.1 = Not                d     %445.0, elided
  lgl$-           %445.2 = AsLogical                %445.1
  lgl$-           %445.3 = LAnd                     %134.2, %445.2
  lgl$-           %445.4 = %445.3
  goto BB138
BB446   <- [137]
  void                    Nop                !     
  val?            %446.1 = %126.2
  dr              %446.2 = Typecheck@0x560a34fd4b48[Type#10]
  goto BB135
BB108   <- [451]
  lgl$#-          %108.0 = CheckTrueFalse     e     %451.2
  void                    Branch                   %108.0 -> BB154 (if true) | BB109 (if false)
BB107   <- [451]
  (cls|spec|blt)  %107.0 = LdFun              !v    isClassUnion, e411.7
  fs              %107.1 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %107.2 = FrameState         R     0x560a35c09fa0+419: [%451.2, %107.0], env=e411.7, next=%107.1
  void                    Deopt              !v    %107.2, DeadCall@0x560a35c0c220[Call#9], %107.0   !
BB105   <- [452, 454]
  val?^ | miss    %105.0 = Phi                      %452.1:BB452, %454.1:BB454
  val?^ | miss    %105.1 = %105.0
  dr              %105.2 = Phi                      %452.2:BB452, %454.2:BB454
  dr              %105.3 = %105.2
  fs              %105.4 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %105.5 = FrameState         R     0x560a35c09fa0+401: [%449.1], env=e411.7, next=%105.4
  void                    Deopt              !v    %105.5, %105.3, %105.1   !
BB142   <- [138]
  val?^ | miss    %142.0 = LdVar              eR    c, e0.1
  lgl$#-          %142.1 = Identical                <blt c>, %142.0   <@?>
  void                    Branch                   %142.1 -> BB144 (if true) | BB143 (if false)
BB139   <- [138]
  val?^ | miss    %139.0 = LdVar              eR    complete, e0.1
  lgl$#-          %139.1 = IsType                   %139.0 isA lgl$~-
  void                    Branch                   %139.1 -> BB447 (if true) | BB448 (if false)
BB135   <- [446, 448]
  val?^ | miss    %135.0 = Phi                      %446.1:BB446, %448.1:BB448
  val?^ | miss    %135.1 = %135.0
  dr              %135.2 = Phi                      %446.2:BB446, %448.2:BB448
  dr              %135.3 = %135.2
  prom-           %135.4 = MkArg                    %126.2, validObject[0x560a36064610]_p31 (!refl), e0.1
  val?~           %135.5 = CastType                 up %135.4
  fs              %135.6 = FrameState         R     0x560a364b2230+3551: [%291.3, %291.4, %65.2], env=e0.1
  env             e135.7 = (MkEnv)            l     x=%135.5, parent=R_BaseNamespace, context 0
  fs              %135.8 = FrameState         R     0x560a35f8ec20+319: [%134.1], env=e135.7, next=%135.6
  void                    Deopt              !v    %135.8, %135.3, %135.1   !
BB154   <- [108]
  val?^ | miss    %154.0 = LdVar              eR    any, e411.7
  lgl$#-          %154.1 = Identical                <blt any>, %154.0   <@?>
  void                    Branch                   %154.1 -> BB156 (if true) | BB155 (if false)
BB109   <- [108]
  val?^ | miss    %109.0 = LdVar              eR    match, e411.7
  lgl$#-          %109.1 = Identical                %109.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %109.1 -> BB453 (if true) | BB454 (if false)
BB144   <- [142]
  val?^ | miss    %144.0 = LdVar              eR    errors, e0.1
  val?            %144.1 = Force!             !v    %144.0, e0.1   <val?_>
  (cls|spec|blt)  %144.2 = LdFun              !v    paste0, e0.1
  fs              %144.3 = FrameState         R     0x560a364b2230+3651: [%291.3, %291.4, %65.2, <blt c>, %144.1, %144.2], env=e0.1
  void                    Deopt              !v    %144.3, DeadCall@0x560a360588f0[Call#60], %144.2   !
BB143   <- [142]
  (cls|spec|blt)  %143.0 = LdFun              !v    c, e0.1
  fs              %143.1 = FrameState         R     0x560a364b2230+3595: [%291.3, %291.4, %65.2, %143.0], env=e0.1
  void                    Deopt              !v    %143.1, DeadCall@0x560a360588f0[Call#57], %143.0   !
BB447   <- [139]
  lgl$~-          %447.0 = CastType           d     dn %139.0
  lgl$-           %447.1 = Force!<wrapped>          %447.0,    <lgl$->
  lgl$-           %447.2 = Not                d     %447.1, elided
  lgl$#-          %447.3 = CheckTrueFalse     e     %447.2
  void                    Branch                   %447.3 -> BB141 (if true) | BB140 (if false)
BB448   <- [139]
  void                    Nop                !     
  val?^ | miss    %448.1 = %139.0
  dr              %448.2 = Typecheck@0x560a360588f0[Type#222]
  goto BB135
BB156   <- [154]
  (cls|spec|blt)  %156.0 = LdFun              !v    %in%, e411.7
  fs              %156.1 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %156.2 = FrameState         R     0x560a35c09fa0+961: [<blt any>, %156.0], env=e411.7, next=%156.1
  void                    Deopt              !v    %156.2, DeadCall@0x560a35c0c220[Call#20], %156.0   !
BB155   <- [154]
  (cls|spec|blt)  %155.0 = LdFun              !v    any, e411.7
  fs              %155.1 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %155.2 = FrameState         R     0x560a35c09fa0+924: [%155.0], env=e411.7, next=%155.1
  void                    Deopt              !v    %155.2, DeadCall@0x560a35c0c220[Call#15], %155.0   !
BB453   <- [109]
  prom-           %453.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p89, e411.7
  val?^           %453.1 = CastType                 up %453.0
  val?^ | miss    %453.2 = LdVar              eR    class1, e411.7
  val?            %453.3 = Force!<wrapped>    !v    %453.2, e411.7   <str$+>
  prom-           %453.4 = MkArg                    %453.3, validObject[0x560a36064610]_p88 (!refl), e411.7
  val?~           %453.5 = CastType                 up %453.4
  env             e453.6 = (MkEnv)            l     x=%453.5, table=%453.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  lgl$#-          %453.7 = IsEnvStub          R     , e453.6
  void                    Branch                   %453.7 -> BB455 (if true) | BB456 (if false)
BB454   <- [109]
  void                    Nop                !     
  val?^ | miss    %454.1 = %109.0
  dr              %454.2 = CallTarget@0x560a35c0c220[Call#10]
  goto BB105
BB141   <- [447]
  void                    Nop                !     
  int$-           %141.1 = %65.2
  goto BB65
BB140   <- [447]
  (cls|spec|blt)  %140.0 = LdFun              !v    anyStrings, e0.1
  fs              %140.1 = FrameState         R     0x560a364b2230+3805: [%291.3, %291.4, %65.2, %140.0], env=e0.1
  void                    Deopt              !v    %140.1, DeadCall@0x560a360588f0[Call#62], %140.0   !
BB455   <- [453]
  val?            %455.0 = Force!<lazy>       !vL   %453.1, e453.6   <val?+>
  lgl$#-          %455.1 = IsType                   %455.0 isA val?+
  lgl$#-          %455.2 = IsEnvStub          R     , e453.6
  void                    Branch                   %455.2 -> BB457 (if true) | BB458 (if false)
BB456   <- [453]
  fs              %456.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %456.1 = FrameState         R     0x560a35c09fa0+496: [], env=e411.7, next=%456.0
  env             e456.2 = (MkEnv)            l     x=%453.5, table=%453.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %456.3 = FrameState         R     0x560a34505d40+9: [%453.3], env=e456.2, next=%456.1
  void                    Deopt              !v    %456.3, EnvStubMaterialized@0x560a34558cb0[Call#unknown], e453.6   !
BB457   <- [455]
  lgl$#-          %457.0 = IsType                   %453.3 isA val?+
  void                    Branch                   %457.0 -> BB459 (if true) | BB460 (if false)
BB458   <- [455]
  void                    Nop                !     
  env             e458.1 = e453.6
  dr              %458.2 = EnvStubMaterialized@0x560a34558cb0[Call#unknown]
  goto BB112
BB459   <- [457]
  val?+           %459.0 = CastType           d     dn %453.3   <str$+>
  void                    Branch                   %455.1 -> BB461 (if true) | BB462 (if false)
BB460   <- [457]
  void                    Nop                !     
  val?            %460.1 = %453.3
  dr              %460.2 = Typecheck@0x560a34558cb0[Type#0]
  goto BB112
BB112   <- [458, 460, 462]
  val?^ | miss    %112.0 = Phi                      e458.1:BB458, %460.1:BB460, %462.1:BB462
  val?^ | miss    %112.1 = %112.0
  dr              %112.2 = Phi                      %458.2:BB458, %460.2:BB460, %462.2:BB462
  dr              %112.3 = %112.2
  fs              %112.4 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %112.5 = FrameState         R     0x560a35c09fa0+496: [], env=e411.7, next=%112.4
  fs              %112.6 = FrameState         R     0x560a34505d40+23: [%453.3, %455.0], env=e453.6, next=%112.5
  void                    Deopt              !v    %112.6, %112.3, %112.1   !
BB461   <- [459]
  val?+           %461.0 = CastType           d     dn %455.0
  val+            %461.1 = CallSafeBuiltin    wed   match(%459.0, %461.0, NA, nil)    <int$->
  lgl$#-          %461.2 = IsType                   %461.1 isA int$-
  void                    Branch                   %461.2 -> BB463 (if true) | BB464 (if false)
BB462   <- [459]
  void                    Nop                !     
  val?            %462.1 = %455.0
  dr              %462.2 = Typecheck@0x560a34558cb0[Type#1]
  goto BB112
BB463   <- [461]
  int$-           %463.0 = CastType           d     dn %461.1
  void                    StVar              lW    i, %463.0, e411.7
  val?^ | miss    %463.2 = LdVar              eR    is.na, e411.7
  lgl$#-          %463.3 = Identical                <blt is.na>, %463.2   <true>
  void                    Branch                   %463.3 -> BB465 (if true) | BB466 (if false)
BB464   <- [461]
  fs              %464.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %464.1 = FrameState         R     0x560a35c09fa0+496: [], env=e411.7, next=%464.0
  fs              %464.2 = FrameState         R     0x560a34505d40+69: [%461.1], env=e453.6, next=%464.1
  void                    Deopt              !v    %464.2, Typecheck@0x560a35c0c220[Type#32], %461.1   !
BB465   <- [463]
  lgl$-           %465.0 = CallSafeBuiltin    wed   is.na(%463.0)    <lgl$->
  lgl$-           %465.1 = Not                d     %465.0, elided
  int-            %465.2 = Extract1_1D        wed   %463.0, %465.1, elided   <int->
  void                    StVar              lW    i, %465.2, e411.7
  val?^ | miss    %465.4 = LdVar              eR    length, e411.7
  lgl$#-          %465.5 = Identical                <blt length>, %465.4   <true>
  void                    Branch                   %465.5 -> BB467 (if true) | BB468 (if false)
BB466   <- [463]
  fs              %466.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %466.1 = FrameState         R     0x560a35c09fa0+510: [], env=e411.7, next=%466.0
  void                    Deopt              !v    %466.1, DeadBranchReached@0x560a35c0c220[Test#3], %463.3   !
BB467   <- [465]
  (int|real)$-    %467.0 = CallSafeBuiltin    wed   length(%465.2)    <int$->
  lgl$#-          %467.1 = IsType                   %467.0 isA int$-
  void                    Branch                   %467.1 -> BB469 (if true) | BB470 (if false)
BB468   <- [465]
  fs              %468.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %468.1 = FrameState         R     0x560a35c09fa0+668: [], env=e411.7, next=%468.0
  void                    Deopt              !v    %468.1, DeadBranchReached@0x560a35c0c220[Test#4], %465.5   !
BB469   <- [467]
  int$-           %469.0 = CastType           d     dn %467.0
  lgl$#-          %469.1 = CheckTrueFalse     e     %469.0
  void                    Branch                   %469.1 -> BB148 (if true) | BB122 (if false)
BB470   <- [467]
  fs              %470.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %470.1 = FrameState         R     0x560a35c09fa0+759: [%467.0], env=e411.7, next=%470.0
  void                    Deopt              !v    %470.1, Typecheck@0x560a35c0c220[Type#42], %467.0   !
BB148   <- [469]
  val?^ | miss    %148.0 = LdVar              eR    subs, e411.7
  val?            %148.1 = Force!             !v    %148.0, e411.7   <val?_>
  lgl$#-          %148.2 = IsType                   %148.1 isA val+   <@?>
  void                    Branch                   %148.2 -> BB151 (if true) | BB149 (if false)
BB122   <- [469]
  void                    Nop                !     
  lgl$#-          %122.1 = false
  goto BB123
BB151   <- [148]
  val?^ | miss    %151.0 = LdVar              eR    i, e411.7
  val?            %151.1 = Force!             !v    %151.0, e411.7   <val?_>
  lgl$#-          %151.2 = IsType                   %151.1 isA val?+
  void                    Branch                   %151.2 -> BB471 (if true) | BB472 (if false)
BB149   <- [148]
  prom-           %149.0 = MkArg                    unboundValue, validObject[0x560a36064610]_p93, e411.7
  prom-           %149.1 = %149.0
  goto BB150
BB123   <- [122, 150]
  val?            %123.0 = Phi                      %122.1:BB122, %150.3:BB150
  val?            %123.1 = %123.0
  val?            %123.2 = %123.1
  goto BB124
BB471   <- [151]
  val?+           %471.0 = CastType           d     dn %151.1   <val?_>
  val?            %471.1 = Extract1_1D        wed   %471.0, 1L, elided   <val?_>
  val?            %471.2 = %471.1
  goto BB150
BB472   <- [151]
  fs              %472.0 = FrameState         R     0x560a364b2230+3505: [%291.3, %291.4, %65.2], env=e0.1
  fs              %472.1 = FrameState         R     0x560a35c09fa0+835: [%148.1, %151.1], env=e411.7, next=%472.0
  void                    Deopt              !v    %472.1, Typecheck@0x560a35c0c220[Type#46], %151.1   !
BB150   <- [149, 471]
  val?            %150.0 = Phi                      %471.2:BB471, %149.1:BB149
  val?            %150.1 = %150.0
  val?            %150.2 = Extract2_1D        !v    %148.1, %150.1, e411.7   <val?_>
  val?            %150.3 = %150.2
  goto BB123
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p13, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x560a35db5410>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p11, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p12, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?+>
  val?            %13.4 = %13.3
  goto BB11
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x560a33cf1748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36064610]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p25, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x560a35db5410>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x560a36064610]_p23, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x560a36064610]_p24, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?>
  val?            %13.4 = %13.3
  goto BB11
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x560a33cf1748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36064610]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(lgl|other)>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 63:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36064610]_p64, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36064610]_p69, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 69:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, <0x560a34e9acd0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36064610]_p74, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <other>
  void                    Return             l     %0.3
Prom 74:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 75:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 76:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 81:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 82:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 83:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 84:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 85:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 86:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x560a33cf1748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36064610]_p87, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 87:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 88:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 89:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x560a33cf1470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x560a36064610]_p90, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 90:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 93:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3

│ validObject[0x560a36064610]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
