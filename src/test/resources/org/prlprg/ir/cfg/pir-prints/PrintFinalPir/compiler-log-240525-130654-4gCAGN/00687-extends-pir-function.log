
┌──────────────────────────────────────────────────────────────────────────────┐
│ extends[0x560a36d60ee0]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
extends[0x560a36d60ee0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    is.character, <env 0x560a342f8378>
  lgl$#-          %0.3  = Identical                <blt is.character>, %0.2   <true>
  void                    Branch                   %0.3 -> BB138 (if true) | BB139 (if false)
BB138   <- [0]
  env             e138.0 = MkEnv              l     class1=%0.1, class2=%0.0, maybe(miss)=true, fullInfo(miss)=false, parent=<env 0x560a342f8378>, context 1
  val?            %138.1 = Force!<lazy>       !v    %0.1, e138.0   <(str|other)>
  lgl$#-          %138.2 = CallSafeBuiltin    wed   is.character(%138.1)    <lgl$->
  void                    Branch                   %138.2 -> BB125 (if true) | BB5 (if false)
BB139   <- [0]
  env             e139.0 = (MkEnv)            l     class1=%0.1, class2=%0.0, maybe(miss)=true, fullInfo(miss)=false, parent=<env 0x560a342f8378>, context 1
  fs              %139.1 = FrameState         R     0x560a35c042c0+0: [], env=e139.0
  void                    Deopt              !v    %139.1, DeadBranchReached@0x560a35c05150[Test#0], %0.3
BB125   <- [138]
  val?^ | miss    %125.0 = LdVar              eR    length, e138.0
  lgl$#-          %125.1 = Identical                <blt length>, %125.0   <true>
  void                    Branch                   %125.1 -> BB140 (if true) | BB141 (if false)
BB5   <- [138]
  val?^ | miss    %5.0  = LdVar              eR    is, e138.0
  lgl$#-          %5.1  = Identical                %5.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %5.1 -> BB142 (if true) | BB143 (if false)
BB140   <- [125]
  val?^ | miss    %140.0 = LdVar              eR    class1, e138.0
  val?            %140.1 = Force!<wrapped>    !v    %140.0, e138.0   <str$+>
  lgl$#-          %140.2 = IsType                   %140.1 isA val?+
  void                    Branch                   %140.2 -> BB144 (if true) | BB145 (if false)
BB141   <- [125]
  void                    Nop                !     
  lgl$#-          %141.1 = %125.1
  dr              %141.2 = DeadBranchReached@0x560a35c05150[Test#1]
  goto BB3
BB142   <- [5]
  prom-           %142.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p2, e138.0
  val?            %142.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%142.0, "classRepresentation") e138.0   <lgl$->
  lgl$#-          %142.2 = IsType                   %142.1 isA lgl$-
  void                    Branch                   %142.2 -> BB146 (if true) | BB147 (if false)
BB143   <- [5]
  void                    Nop                !     
  val?^ | miss    %143.1 = %5.0
  dr              %143.2 = CallTarget@0x560a35c05150[Call#1]
  goto BB3
BB144   <- [140]
  val?+           %144.0 = CastType           d     dn %140.1   <str$+>
  (int|real)$-    %144.1 = CallSafeBuiltin    wed   length(%144.0)    <int$->
  lgl$#-          %144.2 = IsType                   %144.1 isA int$-
  void                    Branch                   %144.2 -> BB148 (if true) | BB149 (if false)
BB145   <- [140]
  fs              %145.0 = FrameState         R     0x560a35c042c0+336: [<blt length>, %140.1], env=e138.0
  void                    Deopt              !v    %145.0, Typecheck@0x560a35c05150[Type#10], %140.1   !
BB3   <- [141, 143]
  val?^ | miss    %3.0  = Phi                      %141.1:BB141, %143.1:BB143
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %141.2:BB141, %143.2:BB143
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x560a35c042c0+91: [%138.2], env=e138.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB146   <- [142]
  lgl$-           %146.0 = CastType           d     dn %142.1
  lgl$#-          %146.1 = CheckTrueFalse     e     %146.0
  void                    Branch                   %146.1 -> BB9 (if true) | BB8 (if false)
BB147   <- [142]
  fs              %147.0 = FrameState         R     0x560a35c042c0+139: [%142.1], env=e138.0
  void                    Deopt              !v    %147.0, Typecheck@0x560a35c05150[Type#4], %142.1   !
BB148   <- [144]
  int$-           %148.0 = CastType           d     dn %144.1
  lgl$-           %148.1 = Gt                 d     %148.0, 1L, elided   <lgl$->
  lgl$#-          %148.2 = CheckTrueFalse     e     %148.1
  void                    Branch                   %148.2 -> BB134 (if true) | BB130 (if false)
BB149   <- [144]
  fs              %149.0 = FrameState         R     0x560a35c042c0+358: [%144.1], env=e138.0
  void                    Deopt              !v    %149.0, Typecheck@0x560a35c05150[Type#11], %144.1   !
BB9   <- [146]
  val?^ | miss    %9.0  = LdVar              eR    class1, e138.0
  val?            %9.1  = Force!<wrapped>    !v    %9.0, e138.0   <other>
  void                    StVar              lW    classDef1, %9.1, e138.0
  (cls|spec|blt)  %9.3  = LdFun              !v    @, <0x560a33cf0bd8>, e138.0
  prom-           %9.4  = MkArg                    unboundValue, extends[0x560a36d60ee0]_p3, e138.0
  prom-           %9.5  = MkArg                    unboundValue, extends[0x560a36d60ee0]_p4, e138.0
  val?            %9.6  = Call               !v    %9.3(%9.4, %9.5) e138.0   <str$+>
  void                    StVar              lW    class1, %9.6, e138.0
  goto BB10
BB8   <- [146]
  (cls|spec|blt)  %8.0  = LdFun              !v    stop, e138.0
  fs              %8.1  = FrameState         R     0x560a35c042c0+155: [%8.0], env=e138.0
  void                    Deopt              !v    %8.1, DeadCall@0x560a35c05150[Call#2], %8.0   !
BB134   <- [148]
  val?^ | miss    %134.0 = LdVar              eR    class1, e138.0
  val?            %134.1 = Force!             !v    %134.0, e138.0   <val?_>
  lgl$#-          %134.2 = IsType                   %134.1 isA val?+
  void                    Branch                   %134.2 -> BB150 (if true) | BB151 (if false)
BB130   <- [148]
  void                    Nop                !     
  goto BB131
BB10   <- [9, 152]
  lgl$-           %10.0 = Missing            eR    class2, e138.0
  lgl$#-          %10.1 = CheckTrueFalse     e     %10.0
  void                    Branch                   %10.1 -> BB81 (if true) | BB11 (if false)
BB150   <- [134]
  val?+           %150.0 = CastType           d     dn %134.1   <val?_>
  val?            %150.1 = Extract2_1D        wed   %150.0, 1L, elided   <val?_>
  void                    StVar              lW    class1, %150.1, e138.0
  goto BB131
BB151   <- [134]
  fs              %151.0 = FrameState         R     0x560a35c042c0+395: [%134.1], env=e138.0
  void                    Deopt              !v    %151.0, Typecheck@0x560a35c05150[Type#13], %134.1   !
BB131   <- [130, 150]
  val?^ | miss    %131.0 = LdVar              eR    getClassDef, e138.0
  lgl$#-          %131.1 = Identical                %131.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %131.1 -> BB152 (if true) | BB153 (if false)
BB81   <- [10]
  val?^ | miss    %81.0 = LdVar              eR    classDef1, e138.0
  val?            %81.1 = Force!<value>      !v    %81.0, e138.0   <other>
  lgl$-           %81.2 = Is                       %81.1, NULL
  lgl$#-          %81.3 = CheckTrueFalse     e     %81.2
  void                    Branch                   %81.3 -> BB124 (if true) | BB82 (if false)
BB11   <- [10]
  void                    StVar              lW    value, nil, e138.0
  val?^ | miss    %11.1 = LdVar              eR    is.character, e138.0
  lgl$#-          %11.2 = Identical                <blt is.character>, %11.1   <true>
  void                    Branch                   %11.2 -> BB154 (if true) | BB155 (if false)
BB152   <- [131]
  prom-           %152.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p30, e138.0
  val?            %152.1 = StaticCall         !v    getClassDef[0x560a36c649f0](%152.0) e138.0   <other>
  void                    StVar              lW    classDef1, %152.1, e138.0
  goto BB10
BB153   <- [131]
  fs              %153.0 = FrameState         R     0x560a35c042c0+453: [], env=e138.0
  void                    Deopt              !v    %153.0, CallTarget@0x560a35c05150[Call#5], %131.0   !
BB124   <- [81]
  val?^ | miss    %124.0 = LdVar              eR    class1, e138.0
  void                    Visible            v     
  val?            %124.2 = Force!             !     %124.0, e138.0   <val?_>
  val?            %124.3 = %124.2
  goto BB44
BB82   <- [81]
  (cls|spec|blt)  %82.0 = LdFun              !v    @, <0x560a33cf0bd8>, e138.0
  prom-           %82.1 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p25, e138.0
  prom-           %82.2 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p26, e138.0
  val?            %82.3 = Call               !v    %82.0(%82.1, %82.2) e138.0   <vec+>
  void                    StVar              lW    ext, %82.3, e138.0
  val?^ | miss    %82.5 = LdVar              eR    isTRUE, e138.0
  lgl$#-          %82.6 = Identical                %82.5, function(x) <(rir::DispatchTable*)0x560a35cbd9|...
  void                    Branch                   %82.6 -> BB162 (if true) | BB163 (if false)
BB154   <- [11]
  val?^ | miss    %154.0 = LdVar              eR    class2, e138.0
  val?            %154.1 = Force!<lazy>       !v    %154.0, e138.0   <(str|other)>
  lgl$#-          %154.2 = CallSafeBuiltin    wed   is.character(%154.1)    <lgl$->
  void                    Branch                   %154.2 -> BB76 (if true) | BB16 (if false)
BB155   <- [11]
  fs              %155.0 = FrameState         R     0x560a35c042c0+1206: [], env=e138.0
  void                    Deopt              !v    %155.0, DeadBranchReached@0x560a35c05150[Test#7], %11.2   !
BB44   <- [74, 124, 43, 226, 232]
  val?            %44.0 = Phi                      %43.2:BB43, %74.1:BB74, %232.2:BB232, %226.5:BB226, %124.3:BB124
  val?            %44.1 = %44.0
  void                    Return             l     %44.1
BB162   <- [82]
  val?^ | miss    %162.0 = LdVar              eR    maybe, e138.0
  val?            %162.1 = Force!<value>      !v    %162.0, e138.0   <lgl$->
  val+            %162.2 = CallSafeBuiltin    wed   is.logical(%162.1)    <lgl$->
  lgl$#-          %162.3 = IsType                   %162.2 isA lgl$-
  void                    Branch                   %162.3 -> BB172 (if true) | BB173 (if false)
BB163   <- [82]
  fs              %163.0 = FrameState         R     0x560a35c042c0+612: [], env=e138.0
  void                    Deopt              !v    %163.0, CallTarget@0x560a35c05150[Call#7], %82.5   !
BB76   <- [154]
  val?^ | miss    %76.0 = LdVar              eR    length, e138.0
  lgl$#-          %76.1 = Identical                <blt length>, %76.0   <true>
  void                    Branch                   %76.1 -> BB160 (if true) | BB161 (if false)
BB16   <- [154]
  void                    Nop                !     
  lgl$#-          %16.1 = %154.2
  goto BB17
BB172   <- [162]
  lgl$-           %172.0 = CastType           d     dn %162.2
  lgl$-           %172.1 = AsLogical                %172.0
  lgl$#-          %172.2 = Identical                %172.1, false
  void                    Branch                   %172.2 -> BB123 (if true) | BB87 (if false)
BB173   <- [162]
  void                    Nop                !     
  val+            %173.1 = %162.2
  dr              %173.2 = Typecheck@0x560a351701b8[Type#2]
  goto BB85
BB160   <- [76]
  val?^ | miss    %160.0 = LdVar              eR    class2, e138.0
  val?            %160.1 = Force!<wrapped>    !v    %160.0, e138.0   <str$+>
  lgl$#-          %160.2 = IsType                   %160.1 isA val?+
  void                    Branch                   %160.2 -> BB170 (if true) | BB171 (if false)
BB161   <- [76]
  fs              %161.0 = FrameState         R     0x560a35c042c0+1297: [%154.2], env=e138.0
  void                    Deopt              !v    %161.0, DeadBranchReached@0x560a35c05150[Test#8], %76.1   !
BB17   <- [16, 178]
  lgl$-           %17.0 = Phi                      %178.4:BB178, %16.1:BB16
  lgl$-           %17.1 = %17.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB51 (if true) | BB20 (if false)
BB123   <- [172]
  void                    Nop                !     
  lgl$-           %123.1 = %172.1
  goto BB90
BB87   <- [172]
  lgl$#-          %87.0 = IsType                   %162.1 isA lgl-
  void                    Branch                   %87.0 -> BB180 (if true) | BB181 (if false)
BB85   <- [173, 181]
  val?^ | miss    %85.0 = Phi                      %173.1:BB173, %181.1:BB181
  val?^ | miss    %85.1 = %85.0
  dr              %85.2 = Phi                      %173.2:BB173, %181.2:BB181
  dr              %85.3 = %85.2
  fs              %85.4 = FrameState         R     0x560a35c042c0+644: [], env=e138.0
  prom-           %85.5 = MkArg                    %162.1, extends[0x560a36d60ee0]_p27 (!refl), e138.0
  val?~           %85.6 = CastType                 up %85.5
  env             e85.7 = (MkEnv)            l     x=%85.6, parent=R_BaseNamespace, context 0
  fs              %85.8 = FrameState         R     0x560a3474ec40+91: [%162.2], env=e85.7, next=%85.4
  void                    Deopt              !v    %85.8, %85.3, %85.1   !
BB170   <- [160]
  val?+           %170.0 = CastType           d     dn %160.1   <str$+>
  (int|real)$-    %170.1 = CallSafeBuiltin    wed   length(%170.0)    <int$->
  lgl$#-          %170.2 = IsType                   %170.1 isA int$-
  void                    Branch                   %170.2 -> BB178 (if true) | BB179 (if false)
BB171   <- [160]
  fs              %171.0 = FrameState         R     0x560a35c042c0+1378: [%154.2, <blt length>, %160.1], env=e138.0
  void                    Deopt              !v    %171.0, Typecheck@0x560a35c05150[Type#50], %160.1   !
BB51   <- [17]
  val?^ | miss    %51.0 = LdVar              eR    .identC, e138.0
  lgl$#-          %51.1 = Identical                %51.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %51.1 -> BB158 (if true) | BB159 (if false)
BB20   <- [17]
  val?^ | miss    %20.0 = LdVar              eR    is, e138.0
  lgl$#-          %20.1 = Identical                %20.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %20.1 -> BB156 (if true) | BB157 (if false)
BB90   <- [123, 184]
  lgl$-           %90.0 = Phi                      %184.4:BB184, %123.1:BB123
  lgl$-           %90.1 = %90.0
  lgl$-           %90.2 = AsLogical                %90.1
  lgl$#-          %90.3 = Identical                %90.2, false
  void                    Branch                   %90.3 -> BB122 (if true) | BB93 (if false)
BB180   <- [87]
  lgl-            %180.0 = CastType           d     dn %162.1   <lgl$->
  (int|real)$-    %180.1 = CallSafeBuiltin    wed   length(%180.0)    <int$->
  lgl$#-          %180.2 = IsType                   %180.1 isA int$-
  void                    Branch                   %180.2 -> BB184 (if true) | BB185 (if false)
BB181   <- [87]
  void                    Nop                !     
  val?            %181.1 = %162.1
  dr              %181.2 = Typecheck@0x560a351701b8[Type#4]
  goto BB85
BB178   <- [170]
  int$-           %178.0 = CastType           d     dn %170.1
  lgl$-           %178.1 = Eq                 d     %178.0, 1L, elided   <lgl$->
  lgl$-           %178.2 = AsLogical                %178.1
  lgl$-           %178.3 = LAnd                     %154.2, %178.2
  lgl$-           %178.4 = %178.3
  goto BB17
BB179   <- [170]
  fs              %179.0 = FrameState         R     0x560a35c042c0+1400: [%154.2, %170.1], env=e138.0
  void                    Deopt              !v    %179.0, Typecheck@0x560a35c05150[Type#51], %170.1   !
BB158   <- [51]
  prom-           %158.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p14, e138.0
  prom-           %158.1 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p15, e138.0
  val?            %158.2 = StaticCall         !v    .identC[0x560a371a2910](%158.0, %158.1) e138.0   <lgl$->
  lgl$#-          %158.3 = IsType                   %158.2 isA lgl$-
  void                    Branch                   %158.3 -> BB164 (if true) | BB165 (if false)
BB159   <- [51]
  void                    Nop                !     
  val?^ | miss    %159.1 = %51.0
  dr              %159.2 = CallTarget@0x560a35c05150[Call#18]
  goto BB18
BB156   <- [20]
  prom-           %156.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p5, e138.0
  val?            %156.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%156.0, "classRepresentation") e138.0   <lgl$->
  lgl$#-          %156.2 = IsType                   %156.1 isA lgl$-
  void                    Branch                   %156.2 -> BB176 (if true) | BB177 (if false)
BB157   <- [20]
  void                    Nop                !     
  val?^ | miss    %157.1 = %20.0
  dr              %157.2 = CallTarget@0x560a35c05150[Call#15]
  goto BB18
BB122   <- [90]
  void                    Nop                !     
  lgl$-           %122.1 = %90.2
  goto BB94
BB93   <- [90]
  lgl$#-          %93.0 = IsType                   %162.1 isA lgl$-
  void                    Branch                   %93.0 -> BB174 (if true) | BB175 (if false)
BB184   <- [180]
  int$-           %184.0 = CastType           d     dn %180.1
  lgl$-           %184.1 = Eq                 d     %184.0, 1L, elided   <lgl$->
  lgl$-           %184.2 = AsLogical                %184.1
  lgl$-           %184.3 = LAnd                     %172.1, %184.2
  lgl$-           %184.4 = %184.3
  goto BB90
BB185   <- [180]
  fs              %185.0 = FrameState         R     0x560a35c042c0+644: [], env=e138.0
  prom-           %185.1 = MkArg                    %180.0, extends[0x560a36d60ee0]_p27 (!refl), e138.0
  val?~           %185.2 = CastType                 up %185.1
  env             e185.3 = (MkEnv)            l     x=%185.2, parent=R_BaseNamespace, context 0
  fs              %185.4 = FrameState         R     0x560a3474ec40+194: [%172.1, %180.1], env=e185.3, next=%185.0
  void                    Deopt              !v    %185.4, Typecheck@0x560a351701b8[Type#5], %180.1   !
BB164   <- [158]
  lgl$-           %164.0 = CastType           d     dn %158.2
  lgl$-           %164.1 = AsLogical                %164.0
  lgl$#-          %164.2 = Identical                %164.1, true
  void                    Branch                   %164.2 -> BB75 (if true) | BB54 (if false)
BB165   <- [158]
  void                    Nop                !     
  val?            %165.1 = %158.2
  dr              %165.2 = Typecheck@0x560a35c05150[Type#62]
  goto BB52
BB18   <- [157, 159]
  val?^ | miss    %18.0 = Phi                      %157.1:BB157, %159.1:BB159
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %157.2:BB157, %159.2:BB159
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x560a35c042c0+1419: [%17.1], env=e138.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB176   <- [156]
  lgl$-           %176.0 = CastType           d     dn %156.1
  lgl$#-          %176.1 = CheckTrueFalse     e     %176.0
  void                    Branch                   %176.1 -> BB24 (if true) | BB23 (if false)
BB177   <- [156]
  fs              %177.0 = FrameState         R     0x560a35c042c0+1462: [%156.1], env=e138.0
  void                    Deopt              !v    %177.0, Typecheck@0x560a35c05150[Type#54], %156.1   !
BB94   <- [122, 174]
  lgl$-           %94.0 = Phi                      %174.5:BB174, %122.1:BB122
  lgl$-           %94.1 = %94.0
  lgl$-           %94.2 = AsLogical                %94.1
  lgl$#-          %94.3 = Identical                %94.2, false
  void                    Branch                   %94.3 -> BB121 (if true) | BB95 (if false)
BB174   <- [93]
  lgl$-           %174.0 = CastType           d     dn %162.1
  lgl$-           %174.1 = CallSafeBuiltin    wed   is.na(%174.0)    <lgl$->
  lgl$-           %174.2 = Not                d     %174.1, elided
  lgl$-           %174.3 = AsLogical                %174.2
  lgl$-           %174.4 = LAnd                     %90.2, %174.3
  lgl$-           %174.5 = %174.4
  goto BB94
BB175   <- [93]
  fs              %175.0 = FrameState         R     0x560a35c042c0+644: [], env=e138.0
  prom-           %175.1 = MkArg                    %162.1, extends[0x560a36d60ee0]_p27 (!refl), e138.0
  val?~           %175.2 = CastType                 up %175.1
  env             e175.3 = (MkEnv)            l     x=%175.2, parent=R_BaseNamespace, context 0
  fs              %175.4 = FrameState         R     0x560a3474ec40+213: [%90.1], env=e175.3, next=%175.0
  void                    Deopt              !v    %175.4, Typecheck@0x560a351701b8[Type#8], %162.1   !
BB75   <- [164]
  void                    Nop                !     
  lgl$-           %75.1 = %164.1
  goto BB57
BB54   <- [164]
  val?^ | miss    %54.0 = LdVar              eR    .identC, e138.0
  lgl$#-          %54.1 = Identical                %54.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %54.1 -> BB166 (if true) | BB167 (if false)
BB52   <- [165, 167]
  val?^ | miss    %52.0 = Phi                      %165.1:BB165, %167.1:BB167
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %165.2:BB165, %167.2:BB167
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x560a35c042c0+1627: [%158.2], env=e138.0
  void                    Deopt              !v    %52.4, %52.3, %52.1   !
BB24   <- [176]
  val?^ | miss    %24.0 = LdVar              eR    class2, e138.0
  val?            %24.1 = Force!<wrapped>    !v    %24.0, e138.0   <other>
  void                    StVar              lW    classDef2, %24.1, e138.0
  (cls|spec|blt)  %24.3 = LdFun              !v    @, <0x560a33cf0bd8>, e138.0
  prom-           %24.4 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p6, e138.0
  prom-           %24.5 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p7, e138.0
  val?            %24.6 = Call               !v    %24.3(%24.4, %24.5) e138.0   <str$+>
  void                    StVar              lW    class2, %24.6, e138.0
  goto BB25
BB23   <- [176]
  (cls|spec|blt)  %23.0 = LdFun              !v    stop, e138.0
  fs              %23.1 = FrameState         R     0x560a35c042c0+1478: [%23.0], env=e138.0
  void                    Deopt              !v    %23.1, DeadCall@0x560a35c05150[Call#16], %23.0   !
BB121   <- [94]
  void                    Nop                !     
  lgl$-           %121.1 = %94.2
  goto BB96
BB95   <- [94]
  lgl$-           %95.0 = AsLogical          e     %162.1
  lgl$-           %95.1 = LAnd                     %94.2, %95.0
  lgl$-           %95.2 = %95.1
  goto BB96
BB57   <- [75, 168]
  lgl$-           %57.0 = Phi                      %168.3:BB168, %75.1:BB75
  lgl$-           %57.1 = %57.0
  lgl$#-          %57.2 = CheckTrueFalse     e     %57.1
  void                    Branch                   %57.2 -> BB74 (if true) | BB58 (if false)
BB166   <- [54]
  prom-           %166.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p16, e138.0
  val?            %166.1 = StaticCall         !v    .identC[0x560a36c4ed10](%166.0, "ANY") e138.0   <lgl$->
  lgl$#-          %166.2 = IsType                   %166.1 isA lgl$-
  void                    Branch                   %166.2 -> BB168 (if true) | BB169 (if false)
BB167   <- [54]
  void                    Nop                !     
  val?^ | miss    %167.1 = %54.0
  dr              %167.2 = CallTarget@0x560a35c05150[Call#19]
  goto BB52
BB25   <- [24, 188, 200]
  val?^ | miss    %25.0 = LdVar              eR    value, e138.0
  val?            %25.1 = Force!<value>      !v    %25.0, e138.0   <(nil|other)>
  lgl$-           %25.2 = Is                       %25.1, NULL
  lgl$#-          %25.3 = CheckTrueFalse     e     %25.2
  void                    Branch                   %25.3 -> BB48 (if true) | BB28 (if false)
BB96   <- [121, 95]
  lgl$-           %96.0 = Phi                      %95.2:BB95, %121.1:BB121
  lgl$-           %96.1 = %96.0
  lgl$-           %96.2 = Not                d     %96.1, elided
  lgl$-           %96.3 = AsLogical                %96.2
  lgl$#-          %96.4 = Identical                %96.3, false
  void                    Branch                   %96.4 -> BB120 (if true) | BB99 (if false)
BB74   <- [57]
  void                    Visible            v     
  lgl$#-          %74.1 = true
  goto BB44
BB58   <- [57]
  val?^ | miss    %58.0 = LdVar              eR    classDef1, e138.0
  val?            %58.1 = Force!<value>      !v    %58.0, e138.0   <other>
  lgl$-           %58.2 = Is                       %58.1, NULL
  lgl$-           %58.3 = Not                d     %58.2, elided
  lgl$-           %58.4 = AsLogical                %58.3
  lgl$#-          %58.5 = Identical                %58.4, false
  void                    Branch                   %58.5 -> BB73 (if true) | BB61 (if false)
BB168   <- [166]
  lgl$-           %168.0 = CastType           d     dn %166.1
  lgl$-           %168.1 = AsLogical                %168.0
  lgl$-           %168.2 = LOr                      %164.1, %168.1
  lgl$-           %168.3 = %168.2
  goto BB57
BB169   <- [166]
  fs              %169.0 = FrameState         R     0x560a35c042c0+1676: [%164.1, %166.1], env=e138.0
  void                    Deopt              !v    %169.0, Typecheck@0x560a35c05150[Type#64], %166.1   !
BB48   <- [25]
  val?^ | miss    %48.0 = LdVar              eR    possibleExtends, e138.0
  lgl$#-          %48.1 = Identical                %48.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %48.1 -> BB210 (if true) | BB211 (if false)
BB28   <- [25]
  void                    Nop                !     
  goto BB29
BB120   <- [96]
  void                    Nop                !     
  lgl$-           %120.1 = %96.3
  goto BB102
BB99   <- [96]
  val?^ | miss    %99.0 = LdVar              eR    length, e138.0
  lgl$#-          %99.1 = Identical                <blt length>, %99.0   <true>
  void                    Branch                   %99.1 -> BB186 (if true) | BB187 (if false)
BB73   <- [58]
  void                    Nop                !     
  lgl$-           %73.1 = %58.4
  goto BB64
BB61   <- [58]
  val?^ | miss    %61.0 = LdVar              eR    %in%, e138.0
  lgl$#-          %61.1 = Identical                %61.0, function(x, table) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %61.1 -> BB182 (if true) | BB183 (if false)
BB210   <- [48]
  prom-           %210.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p10, e138.0
  prom-           %210.1 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p11, e138.0
  prom-           %210.2 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p12, e138.0
  prom-           %210.3 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p13, e138.0
  val?            %210.4 = StaticCall         !v    possibleExtends[0x560a37226850](%210.0, %210.1, %210.2, %210.3) e138.0   <lgl$->
  lgl$#-          %210.5 = IsType                   %210.4 isA lgl$-
  void                    Branch                   %210.5 -> BB214 (if true) | BB215 (if false)
BB211   <- [48]
  fs              %211.0 = FrameState         R     0x560a35c042c0+1941: [%25.1], env=e138.0
  void                    Deopt              !v    %211.0, CallTarget@0x560a35c05150[Call#25], %48.0   !
BB29   <- [28, 214]
  val?^ | miss    %29.0 = LdVar              eR    fullInfo, e138.0
  val?            %29.1 = Force!<lazy>       !v    %29.0, e138.0   <lgl$->
  lgl$#-          %29.2 = CheckTrueFalse     we    %29.1
  void                    Branch                   %29.2 -> BB47 (if true) | BB32 (if false)
BB102   <- [120, 208]
  lgl$-           %102.0 = Phi                      %208.4:BB208, %120.1:BB120
  lgl$-           %102.1 = %102.0
  lgl$#-          %102.2 = CheckTrueFalse     e     %102.1
  void                    Branch                   %102.2 -> BB117 (if true) | BB105 (if false)
BB186   <- [99]
  val?^ | miss    %186.0 = LdVar              eR    ext, e138.0
  lgl$#-          %186.1 = IsType                   %186.0 isA val?~+ | miss
  void                    Branch                   %186.1 -> BB196 (if true) | BB197 (if false)
BB187   <- [99]
  void                    Nop                !     
  lgl$#-          %187.1 = %99.1
  dr              %187.2 = DeadBranchReached@0x560a35c05150[Test#3]
  goto BB97
BB64   <- [73, 202]
  lgl$-           %64.0 = Phi                      %202.3:BB202, %73.1:BB73
  lgl$-           %64.1 = %64.0
  lgl$#-          %64.2 = CheckTrueFalse     e     %64.1
  void                    Branch                   %64.2 -> BB68 (if true) | BB67 (if false)
BB182   <- [61]
  prom-           %182.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p18, e138.0
  val?^ | miss    %182.1 = LdVar              eR    class2, e138.0
  val?            %182.2 = Force!<wrapped>    !v    %182.1, e138.0   <str$+>
  prom-           %182.3 = MkArg                    %182.2, extends[0x560a36d60ee0]_p17 (!refl), 
  val?            %182.4 = StaticCall         !v    %in%[0x560a377e4ee0](%182.3, %182.0) e138.0   <lgl$->
  lgl$#-          %182.5 = IsType                   %182.4 isA lgl$-
  void                    Branch                   %182.5 -> BB202 (if true) | BB203 (if false)
BB183   <- [61]
  fs              %183.0 = FrameState         R     0x560a35c042c0+1710: [%58.1], env=e138.0
  void                    Deopt              !v    %183.0, CallTarget@0x560a35c05150[Call#20], %61.0   !
BB214   <- [210]
  lgl$-           %214.0 = CastType           d     dn %210.4
  void                    StVar              lW    value, %214.0, e138.0
  goto BB29
BB215   <- [210]
  fs              %215.0 = FrameState         R     0x560a35c042c0+2009: [%210.4], env=e138.0
  void                    Deopt              !v    %215.0, Typecheck@0x560a35c05150[Type#85], %210.4   !
BB47   <- [29]
  val?^ | miss    %47.0 = LdVar              eR    value, e138.0
  void                    Visible            v     
  val?            %47.2 = Force!<value>      !     %47.0, e138.0   <(lgl|other)>
  val?            %47.3 = %47.2
  goto BB43
BB32   <- [29]
  val?^ | miss    %32.0 = LdVar              eR    is.logical, e138.0
  lgl$#-          %32.1 = Identical                <blt is.logical>, %32.0   <true>
  void                    Branch                   %32.1 -> BB212 (if true) | BB213 (if false)
BB117   <- [102]
  val?^ | miss    %117.0 = LdVar              eR    vapply, e138.0
  lgl$#-          %117.1 = Identical                %117.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Branch                   %117.1 -> BB192 (if true) | BB193 (if false)
BB105   <- [102]
  void                    Nop                !     
  goto BB106
BB196   <- [186]
  val?~+ | miss   %196.0 = CastType           d     dn %186.0
  val?+           %196.1 = Force!<value>            %196.0,    <vec+>
  (int|real)$-    %196.2 = CallSafeBuiltin    wed   length(%196.1)    <int$->
  lgl$#-          %196.3 = IsType                   %196.2 isA int$-
  void                    Branch                   %196.3 -> BB208 (if true) | BB209 (if false)
BB197   <- [186]
  void                    Nop                !     
  val?^ | miss    %197.1 = %186.0
  dr              %197.2 = Typecheck@0x560a35c05150[Type#25]
  goto BB97
BB97   <- [187, 197]
  val?^ | miss    %97.0 = Phi                      %187.1:BB187, %197.1:BB197
  val?^ | miss    %97.1 = %97.0
  dr              %97.2 = Phi                      %187.2:BB187, %197.2:BB197
  dr              %97.3 = %97.2
  fs              %97.4 = FrameState         R     0x560a35c042c0+644: [%96.1], env=e138.0
  void                    Deopt              !v    %97.4, %97.3, %97.1   !
BB68   <- [64]
  (cls|spec|blt)  %68.0 = LdFun              !v    @, <0x560a33cf0bd8>, e138.0
  prom-           %68.1 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p23, e138.0
  prom-           %68.2 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p24, e138.0
  val?            %68.3 = Call               !v    %68.0(%68.1, %68.2) e138.0   <vec+>
  lgl$#-          %68.4 = IsType                   %68.3 isA val+   <true>
  void                    Branch                   %68.4 -> BB190 (if true) | BB191 (if false)
BB67   <- [64]
  val?^ | miss    %67.0 = LdVar              eR    getClassDef, e138.0
  lgl$#-          %67.1 = Identical                %67.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %67.1 -> BB188 (if true) | BB189 (if false)
BB202   <- [182]
  lgl$-           %202.0 = CastType           d     dn %182.4
  lgl$-           %202.1 = AsLogical                %202.0
  lgl$-           %202.2 = LAnd                     %58.4, %202.1
  lgl$-           %202.3 = %202.2
  goto BB64
BB203   <- [182]
  fs              %203.0 = FrameState         R     0x560a35c042c0+1765: [%58.4, %182.4], env=e138.0
  void                    Deopt              !v    %203.0, Typecheck@0x560a35c05150[Type#71], %182.4   !
BB43   <- [47, 42]
  val?            %43.0 = Phi                      %42.2:BB42, %47.3:BB47
  val?            %43.1 = %43.0
  val?            %43.2 = %43.1
  goto BB44
BB212   <- [32]
  val?^ | miss    %212.0 = LdVar              eR    value, e138.0
  val?            %212.1 = Force!<value>      !v    %212.0, e138.0   <(lgl|other)>
  val+            %212.2 = CallSafeBuiltin    wed   is.logical(%212.1)    <lgl$->
  lgl$#-          %212.3 = IsType                   %212.2 isA lgl$-
  void                    Branch                   %212.3 -> BB216 (if true) | BB217 (if false)
BB213   <- [32]
  fs              %213.0 = FrameState         R     0x560a35c042c0+2038: [%29.2], env=e138.0
  void                    Deopt              !v    %213.0, DeadBranchReached@0x560a35c05150[Test#11], %32.1   !
BB192   <- [117]
  prom-           %192.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p28, e138.0
  cls             %192.1 = MkCls                    extends@Prom(29)0, e138.0
  prom-           %192.2 = MkArg                    %192.1, extends[0x560a36d60ee0]_p29 (!refl), e138.0
  val?            %192.3 = StaticCall         !v    vapply[0x560a354f9e60](%192.0, %192.2, na-lgl) { 0 1 2 } e138.0   <lgl+>
  void                    StVar              lW    noTest, %192.3, e138.0
  val?^ | miss    %192.5 = LdVar              eR    ext, e138.0
  lgl$#-          %192.6 = IsType                   %192.5 isA val?~+ | miss
  void                    Branch                   %192.6 -> BB194 (if true) | BB195 (if false)
BB193   <- [117]
  fs              %193.0 = FrameState         R     0x560a35c042c0+767: [%102.1], env=e138.0
  void                    Deopt              !v    %193.0, CallTarget@0x560a35c05150[Call#9], %117.0   !
BB106   <- [105, 206]
  val?^ | miss    %106.0 = LdVar              eR    fullInfo, e138.0
  val?            %106.1 = Force!<lazy>       !v    %106.0, e138.0   <lgl$->
  lgl$#-          %106.2 = CheckTrueFalse     we    %106.1
  void                    Branch                   %106.2 -> BB114 (if true) | BB109 (if false)
BB208   <- [196]
  int$-           %208.0 = CastType           d     dn %196.2
  lgl$-           %208.1 = Gt                 d     %208.0, 0, elided   <lgl$->
  lgl$-           %208.2 = AsLogical                %208.1
  lgl$-           %208.3 = LAnd                     %96.3, %208.2
  lgl$-           %208.4 = %208.3
  goto BB102
BB209   <- [196]
  fs              %209.0 = FrameState         R     0x560a35c042c0+748: [%96.3, %196.2], env=e138.0
  void                    Deopt              !v    %209.0, Typecheck@0x560a35c05150[Type#26], %196.2   !
BB190   <- [68]
  val?^ | miss    %190.0 = LdVar              eR    class2, e138.0
  val?            %190.1 = Force!<wrapped>    !v    %190.0, e138.0   <str$+>
  lgl$#-          %190.2 = IsType                   %190.1 isA val?+
  lgl$#-          %190.3 = IsType                   %68.3 isA val?+
  void                    Branch                   %190.3 -> BB198 (if true) | BB199 (if false)
BB191   <- [68]
  fs              %191.0 = FrameState         R     0x560a35c042c0+1866: [%68.3], env=e138.0
  void                    Deopt              !v    %191.0, DeadBranchReached@0x560a35c05150[Test#10], %68.4   !
BB188   <- [67]
  prom-           %188.0 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p22, e138.0
  val?            %188.1 = StaticCall         !v    getClassDef[0x560a36c649f0](%188.0) e138.0   <other>
  void                    StVar              lW    classDef2, %188.1, e138.0
  goto BB25
BB189   <- [67]
  fs              %189.0 = FrameState         R     0x560a35c042c0+1772: [%64.1], env=e138.0
  void                    Deopt              !v    %189.0, CallTarget@0x560a35c05150[Call#23], %67.0   !
BB216   <- [212]
  lgl$-           %216.0 = CastType           d     dn %212.2
  lgl$#-          %216.1 = CheckTrueFalse     e     %216.0
  void                    Branch                   %216.1 -> BB46 (if true) | BB35 (if false)
BB217   <- [212]
  void                    Nop                !     
  val+            %217.1 = %212.2
  dr              %217.2 = Typecheck@0x560a35c05150[Type#89]
  goto BB33
BB194   <- [192]
  val?~+ | miss   %194.0 = CastType           d     dn %192.5
  val?+           %194.1 = Force!<value>            %194.0,    <vec+>
  lgl$#-          %194.2 = IsType                   %194.1 isA val+   <true>
  void                    Branch                   %194.2 -> BB204 (if true) | BB205 (if false)
BB195   <- [192]
  void                    Nop                !     
  val?^ | miss    %195.1 = %192.5
  dr              %195.2 = Typecheck@0x560a35c05150[Type#30]
  goto BB118
BB114   <- [106]
  val?^ | miss    %114.0 = LdVar              eR    ext !upd, e138.0
  val?            %114.1 = Force!             !v    %114.0, e138.0   <val?_>
  val?^ | miss    %114.2 = LdVar              eR    class1, e138.0
  val?            %114.3 = Force!             !v    %114.2, e138.0   <val?_>
  lgl$#-          %114.4 = IsType                   %114.3 isA val?+
  lgl$#-          %114.5 = IsType                   %114.1 isA val?+
  void                    Branch                   %114.5 -> BB224 (if true) | BB225 (if false)
BB109   <- [106]
  val?^ | miss    %109.0 = LdVar              eR    c, e138.0
  lgl$#-          %109.1 = Identical                <blt c>, %109.0   <true>
  void                    Branch                   %109.1 -> BB222 (if true) | BB223 (if false)
BB198   <- [190]
  val?+           %198.0 = CastType           d     dn %68.3   <vec+>
  void                    Branch                   %190.2 -> BB200 (if true) | BB201 (if false)
BB199   <- [190]
  void                    Nop                !     
  val?            %199.1 = %68.3
  dr              %199.2 = Typecheck@0x560a35c05150[Type#76]
  goto BB71
BB46   <- [216]
  val?^ | miss    %46.0 = LdVar              eR    value, e138.0
  lgl$#-          %46.1 = IsType                   %46.0 isA lgl$-
  void                    Branch                   %46.1 -> BB218 (if true) | BB219 (if false)
BB35   <- [216]
  (cls|spec|blt)  %35.0 = LdFun              !v    @, <0x560a33cf0bd8>, e138.0
  prom-           %35.1 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p8, e138.0
  prom-           %35.2 = MkArg                    unboundValue, extends[0x560a36d60ee0]_p9, e138.0
  val?            %35.3 = Call               !v    %35.0(%35.1, %35.2) e138.0   <lgl$->
  lgl$#-          %35.4 = IsType                   %35.3 isA lgl$-
  void                    Branch                   %35.4 -> BB220 (if true) | BB221 (if false)
BB33   <- [217, 219]
  val?^ | miss    %33.0 = Phi                      %217.1:BB217, %219.1:BB219
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %217.2:BB217, %219.2:BB219
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x560a35c042c0+2134: [%212.2], env=e138.0
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB204   <- [194]
  val             %204.0 = ChkMissing         e     %192.3
  lgl$#-          %204.1 = IsType                   %204.0 isA lgl+
  void                    Branch                   %204.1 -> BB206 (if true) | BB207 (if false)
BB205   <- [194]
  void                    Nop                !     
  lgl$#-          %205.1 = %194.2
  dr              %205.2 = DeadBranchReached@0x560a35c05150[Test#4]
  goto BB118
BB118   <- [195, 205, 207]
  val?^ | miss    %118.0 = Phi                      %195.1:BB195, %205.1:BB205, %207.1:BB207
  val?^ | miss    %118.1 = %118.0
  dr              %118.2 = Phi                      %195.2:BB195, %205.2:BB205, %207.2:BB207
  dr              %118.3 = %118.2
  fs              %118.4 = FrameState         R     0x560a35c042c0+834: [], env=e138.0
  void                    Deopt              !v    %118.4, %118.3, %118.1   !
BB224   <- [114]
  val?+           %224.0 = CastType           d     dn %114.1   <val?_>
  void                    Branch                   %114.4 -> BB226 (if true) | BB227 (if false)
BB225   <- [114]
  void                    Nop                !     
  val?            %225.1 = %114.1
  dr              %225.2 = Typecheck@0x560a35c05150[Type#43]
  goto BB115
BB222   <- [109]
  val?^ | miss    %222.0 = LdVar              eR    class1, e138.0
  val?            %222.1 = Force!<wrapped>    !v    %222.0, e138.0   <str$+>
  val?^ | miss    %222.2 = LdVar              eR    names, e138.0
  lgl$#-          %222.3 = Identical                <blt names>, %222.2   <true>
  void                    Branch                   %222.3 -> BB228 (if true) | BB229 (if false)
BB223   <- [109]
  fs              %223.0 = FrameState         R     0x560a35c042c0+924: [%106.2], env=e138.0
  void                    Deopt              !v    %223.0, DeadBranchReached@0x560a35c05150[Test#5], %109.1   !
BB200   <- [198]
  val?+           %200.0 = CastType           d     dn %190.1   <str$+>
  val?            %200.1 = Extract2_1D        wed   %198.0, %200.0, elided   <other>
  void                    StVar              lW    value, %200.1, e138.0
  goto BB25
BB201   <- [198]
  void                    Nop                !     
  val?            %201.1 = %190.1
  dr              %201.2 = Typecheck@0x560a35c05150[Type#78]
  goto BB71
BB71   <- [199, 201]
  val?^ | miss    %71.0 = Phi                      %199.1:BB199, %201.1:BB201
  val?^ | miss    %71.1 = %71.0
  dr              %71.2 = Phi                      %199.2:BB199, %201.2:BB201
  dr              %71.3 = %71.2
  fs              %71.4 = FrameState         R     0x560a35c042c0+1911: [%68.3, %190.1], env=e138.0
  void                    Deopt              !v    %71.4, %71.3, %71.1   !
BB218   <- [46]
  lgl$-           %218.0 = CastType           d     dn %46.0
  void                    Visible            v     
  lgl$-           %218.2 = %218.0
  goto BB42
BB219   <- [46]
  void                    Nop                !     
  val?^ | miss    %219.1 = %46.0
  dr              %219.2 = Typecheck@0x560a35c05150[Type#99]
  goto BB33
BB220   <- [35]
  lgl$-           %220.0 = CastType           d     dn %35.3
  lgl$-           %220.1 = AsLogical                %220.0
  lgl$#-          %220.2 = Identical                %220.1, true
  void                    Branch                   %220.2 -> BB39 (if true) | BB38 (if false)
BB221   <- [35]
  fs              %221.0 = FrameState         R     0x560a35c042c0+2182: [%35.3], env=e138.0
  void                    Deopt              !v    %221.0, Typecheck@0x560a35c05150[Type#92], %35.3   !
BB206   <- [204]
  lgl+            %206.0 = CastType           d     dn %204.0
  val?            %206.1 = Extract1_1D        wed   %194.1, %206.0, elided   <vec+>
  void                    StVar              lW    ext, %206.1, e138.0
  goto BB106
BB207   <- [204]
  void                    Nop                !     
  val             %207.1 = %204.0
  dr              %207.2 = Typecheck@0x560a35c05150[Type#32]
  goto BB118
BB226   <- [224]
  val?+           %226.0 = CastType           d     dn %114.3   <val?_>
  val?+           %226.1 = Subassign2_1D      wed   true, %224.0, %226.0, elided   <val?_>
  void                    StVar              lW    ext, %226.1, e138.0
  val+            %226.3 = ChkMissing         e     %226.1
  void                    Visible            v     
  val?+           %226.5 = %226.1
  goto BB44
BB227   <- [224]
  void                    Nop                !     
  val?            %227.1 = %114.3
  dr              %227.2 = Typecheck@0x560a35c05150[Type#44]
  goto BB115
BB115   <- [225, 227]
  val?^ | miss    %115.0 = Phi                      %225.1:BB225, %227.1:BB227
  val?^ | miss    %115.1 = %115.0
  dr              %115.2 = Phi                      %225.2:BB225, %227.2:BB227
  dr              %115.3 = %115.2
  fs              %115.4 = FrameState         R     0x560a35c042c0+1161: [true, %114.1, %114.3], env=e138.0
  void                    Deopt              !v    %115.4, %115.3, %115.1   !
BB228   <- [222]
  val?^ | miss    %228.0 = LdVar              eR    ext, e138.0
  lgl$#-          %228.1 = IsType                   %228.0 isA val?~+ | miss
  void                    Branch                   %228.1 -> BB230 (if true) | BB231 (if false)
BB229   <- [222]
  void                    Nop                !     
  lgl$#-          %229.1 = %222.3
  dr              %229.2 = DeadBranchReached@0x560a35c05150[Test#6]
  goto BB110
BB42   <- [41, 218]
  val?            %42.0 = Phi                      %41.2:BB41, %218.2:BB218
  val?            %42.1 = %42.0
  val?            %42.2 = %42.1
  goto BB43
BB39   <- [220]
  lgl$#-          %39.0 = CheckTrueFalse     e     %220.1
  void                    Branch                   %39.0 -> BB45 (if true) | BB40 (if false)
BB38   <- [220]
  (cls|spec|blt)  %38.0 = LdFun              !v    isTRUE, e138.0
  fs              %38.1 = FrameState         R     0x560a35c042c0+2199: [%220.1, %38.0], env=e138.0
  void                    Deopt              !v    %38.1, DeadCall@0x560a35c05150[Call#28], %38.0   !
BB230   <- [228]
  val?~+ | miss   %230.0 = CastType           d     dn %228.0
  val?+           %230.1 = Force!<value>            %230.0,    <vec+>
  val+            %230.2 = CallSafeBuiltin    wed   names(%230.1)    <(nil|str)->
  lgl$#-          %230.3 = IsType                   %222.1 isA val?+
  void                    Branch                   %230.3 -> BB232 (if true) | BB233 (if false)
BB231   <- [228]
  void                    Nop                !     
  val?^ | miss    %231.1 = %228.0
  dr              %231.2 = Typecheck@0x560a35c05150[Type#40]
  goto BB110
BB110   <- [229, 231]
  val?^ | miss    %110.0 = Phi                      %229.1:BB229, %231.1:BB231
  val?^ | miss    %110.1 = %110.0
  dr              %110.2 = Phi                      %229.2:BB229, %231.2:BB231
  dr              %110.3 = %110.2
  fs              %110.4 = FrameState         R     0x560a35c042c0+1003: [<blt c>, %222.1], env=e138.0
  void                    Deopt              !v    %110.4, %110.3, %110.1   !
BB45   <- [39]
  void                    Visible            v     
  lgl$#-          %45.1 = true
  goto BB41
BB40   <- [39]
  val?^ | miss    %40.0 = LdVar              eR    maybe, e138.0
  void                    Visible            v     
  val?            %40.2 = Force!             !     %40.0, e138.0   <val?_>
  val?            %40.3 = %40.2
  goto BB41
BB232   <- [230]
  val?+           %232.0 = CastType           d     dn %222.1   <str$+>
  val+            %232.1 = CallSafeBuiltin    vwed  c(%232.0, %230.2)    <str->
  val+            %232.2 = %232.1
  goto BB44
BB233   <- [230]
  fs              %233.0 = FrameState         R     0x560a35c042c0+1099: [<blt c>, %222.1, %230.2], env=e138.0
  void                    Deopt              !v    %233.0, Typecheck@0x560a35c05150[Type#38], %222.1   !
BB41   <- [45, 40]
  val?            %41.0 = Phi                      %40.3:BB40, %45.1:BB45
  val?            %41.1 = %41.0
  val?            %41.2 = %41.1
  goto BB42
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    className, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    className, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x560a33cf1470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, extends[0x560a36d60ee0]_p19, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x560a33cf0bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, extends[0x560a36d60ee0]_p20, e0.0
  prom-           %0.3  = MkArg                    unboundValue, extends[0x560a36d60ee0]_p21, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    maybe, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ext, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    extends@Prom(29)0, e0.0
  void                    Return             l     %0.1
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ extends[0x560a36d60ee0]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
