
┌──────────────────────────────────────────────────────────────────────────────┐
│ .findOrCopyClass[0x560a36fd1170]                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
.findOrCopyClass[0x560a36fd1170]
BB0
  val?~+          %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    findClass, <env 0x560a342f8378>
  lgl$#-          %0.5  = Identical                %0.4, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %0.5 -> BB15 (if true) | BB16 (if false)
BB15   <- [0]
  env             e15.0 = MkEnv              l     class=%0.3, classDef=%0.2, where=%0.1, purpose=%0.0, parent=<env 0x560a342f8378>, context 1
  prom-           %15.1 = MkArg                    unboundValue, .findOrCopyClass[0x560a36fd1170]_p0 (!refl), e15.0
  prom-           %15.2 = MkArg                    unboundValue, .findOrCopyClass[0x560a36fd1170]_p1 (!refl), e15.0
  val?            %15.3 = Call               !v    function(Class, where=topenv(parent.frame()), |...(%15.1, %15.2) e15.0   <vec$->
  void                    StVar              lW    whereIs, %15.3, e15.0
  lgl$#-          %15.5 = IsType                   %15.3 isA val?-
  val?^ | miss    %15.6 = LdVar              eR    length, e15.0
  lgl$#-          %15.7 = Identical                <blt length>, %15.6   <true>
  void                    Branch                   %15.7 -> BB17 (if true) | BB18 (if false)
BB16   <- [0]
  env             e16.0 = (MkEnv)            l     class=%0.3, classDef=%0.2, where=%0.1, purpose=%0.0, parent=<env 0x560a342f8378>, context 1
  fs              %16.1 = FrameState         R     0x560a3645c840+0: [], env=e16.0
  void                    Deopt              !v    %16.1, CallTarget@0x560a360bed70[Call#0], %0.4
BB17   <- [15]
  val             %17.0 = ChkMissing         e     %15.3
  void                    Branch                   %15.5 -> BB19 (if true) | BB20 (if false)
BB18   <- [15]
  void                    Nop                !     
  lgl$#-          %18.1 = %15.7
  dr              %18.2 = DeadBranchReached@0x560a360bed70[Test#0]
  goto BB3
BB19   <- [17]
  val?-           %19.0 = CastType           d     dn %15.3   <vec$->
  (int|real)$-    %19.1 = CallSafeBuiltin    wed   length(%19.0)    <int$->
  lgl$#-          %19.2 = IsType                   %19.1 isA int$-
  void                    Branch                   %19.2 -> BB21 (if true) | BB22 (if false)
BB20   <- [17]
  void                    Nop                !     
  val?            %20.1 = %15.3
  dr              %20.2 = Typecheck@0x560a360bed70[Type#2]
  goto BB3
BB3   <- [18, 20]
  val?^ | miss    %3.0  = Phi                      %18.1:BB18, %20.1:BB20
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %18.2:BB18, %20.2:BB20
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x560a3645c840+51: [], env=e15.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB21   <- [19]
  int$-           %21.0 = CastType           d     dn %19.1
  lgl$#-          %21.1 = CheckTrueFalse     e     %21.0
  void                    Branch                   %21.1 -> BB13 (if true) | BB7 (if false)
BB22   <- [19]
  void                    Nop                !     
  (int|real)$-    %22.1 = %19.1
  dr              %22.2 = Typecheck@0x560a360bed70[Type#5]
  goto BB5
BB13   <- [21]
  lgl$#-          %13.0 = IsType                   %19.0 isA val+   <true>
  void                    Branch                   %13.0 -> BB23 (if true) | BB24 (if false)
BB7   <- [21]
  val?^ | miss    %7.0  = LdVar              eR    purpose, e15.0
  val?            %7.1  = Force!             !v    %7.0, e15.0   <val?_>
  lgl$#-          %7.2  = IsType                   %7.1 isA val?+
  void                    Branch                   %7.2 -> BB25 (if true) | BB26 (if false)
BB5   <- [22, 24]
  val?^ | miss    %5.0  = Phi                      %22.1:BB22, %24.1:BB24
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %22.2:BB22, %24.2:BB24
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x560a3645c840+142: [%19.1], env=e15.0
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB23   <- [13]
  val?            %23.0 = Extract2_1D        wed   %19.0, 1L, elided   <env+>
  void                    Visible            v     
  val?            %23.2 = %23.0
  goto BB11
BB24   <- [13]
  void                    Nop                !     
  lgl$#-          %24.1 = %13.0
  dr              %24.2 = DeadBranchReached@0x560a360bed70[Test#1]
  goto BB5
BB25   <- [7]
  val?+           %25.0 = CastType           d     dn %7.1   <val?_>
  lgl             %25.1 = Neq                wed   %25.0, "subclass", elided   <val?_>
  lgl$#-          %25.2 = CheckTrueFalse     we    %25.1
  void                    Branch                   %25.2 -> BB12 (if true) | BB10 (if false)
BB26   <- [7]
  fs              %26.0 = FrameState         R     0x560a3645c840+162: [%7.1], env=e15.0
  void                    Deopt              !v    %26.0, Typecheck@0x560a360bed70[Type#6], %7.1   !
BB11   <- [10, 23]
  val?            %11.0 = Phi                      %10.3:BB10, %23.2:BB23
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB12   <- [25]
  (cls|spec|blt)  %12.0 = LdFun              !v    warning, e15.0
  fs              %12.1 = FrameState         R     0x560a3645c840+195: [%12.0], env=e15.0
  void                    Deopt              !v    %12.1, DeadCall@0x560a360bed70[Call#2], %12.0   !
BB10   <- [25]
  val?^ | miss    %10.0 = LdVar              eR    where, e15.0
  void                    Visible            v     
  val?            %10.2 = Force!             !     %10.0, e15.0   <val?_>
  val?            %10.3 = %10.2
  goto BB11
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .findOrCopyClass[0x560a36fd1170]                                             │
└──────────────────────────────────────────────────────────────────────────────┘
