
┌──────────────────────────────────────────────────────────────────────────────┐
│ findClass[0x560a378d0f40]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj1 miss: 1      │
│ Properties:                                                                  │
├────── Final PIR Version
findClass[0x560a378d0f40]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    is, <env 0x560a342f8378>
  lgl$#-          %0.3  = Identical                %0.2, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %0.3 -> BB67 (if true) | BB68 (if false)
BB67   <- [0]
  env             e67.0 = MkEnv              l     Class=%0.1, where=%0.0, unique(miss)="", parent=<env 0x560a342f8378>, context 1
  prom-           %67.1 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p1 (!refl), e67.0
  val?            %67.2 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%67.1, "classRepresentation") e67.0   <lgl$->
  lgl$#-          %67.3 = IsType                   %67.2 isA lgl$-
  void                    Branch                   %67.3 -> BB69 (if true) | BB70 (if false)
BB68   <- [0]
  env             e68.0 = (MkEnv)            l     Class=%0.1, where=%0.0, unique(miss)="", parent=<env 0x560a342f8378>, context 1
  fs              %68.1 = FrameState         R     0x560a362590b0+0: [], env=e68.0
  void                    Deopt              !v    %68.1, CallTarget@0x560a362a8470[Call#2], %0.2
BB69   <- [67]
  lgl$-           %69.0 = CastType           d     dn %67.2
  lgl$#-          %69.1 = CheckTrueFalse     e     %69.0
  void                    Branch                   %69.1 -> BB65 (if true) | BB5 (if false)
BB70   <- [67]
  void                    Nop                !     
  val?            %70.1 = %67.2
  dr              %70.2 = Typecheck@0x560a362a8470[Type#3]
  goto BB3
BB65   <- [69]
  (cls|spec|blt)  %65.0 = LdFun              !v    @, <0x560a33cf0bd8>, e67.0
  prom-           %65.1 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p9, e67.0
  prom-           %65.2 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p10, e67.0
  val?            %65.3 = Call               !v    %65.0(%65.1, %65.2) e67.0   <str$->
  void                    StVar              lW    pkg, %65.3, e67.0
  val?^ | miss    %65.5 = LdVar              eR    Class, e67.0
  val?            %65.6 = Force!<wrapped>    !v    %65.5, e67.0   <other>
  void                    StVar              lW    classDef, %65.6, e67.0
  (cls|spec|blt)  %65.8 = LdFun              !v    @, <0x560a33cf0bd8>, e67.0
  prom-           %65.9 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p11, e67.0
  prom-           %65.10 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p12, e67.0
  val?            %65.11 = Call               !v    %65.8(%65.9, %65.10) e67.0   <str$+>
  void                    StVar              lW    Class, %65.11, e67.0
  goto BB12
BB5   <- [69]
  val?^ | miss    %5.0  = LdVar              eR    packageSlot, e67.0
  lgl$#-          %5.1  = Identical                %5.0, function(object) <(rir::DispatchTable*)0x560a3|...
  void                    Branch                   %5.1 -> BB71 (if true) | BB72 (if false)
BB3   <- [70, 72]
  val?^ | miss    %3.0  = Phi                      %70.1:BB70, %72.1:BB72
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %70.2:BB70, %72.2:BB72
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x560a362590b0+37: [%67.2], env=e67.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB12   <- [65, 83]
  lgl$-           %12.0 = Missing            eR    where, e67.0
  lgl$-           %12.1 = AsLogical                %12.0
  lgl$#-          %12.2 = Identical                %12.1, false
  void                    Branch                   %12.2 -> BB63 (if true) | BB13 (if false)
BB71   <- [5]
  prom-           %71.0 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p2, e67.0
  ct              %71.1 = PushContext        lCL   %71.0, packageSlot(Class), function(object) <(rir::DispatchTable*)0x560a3|..., e67.0
  val?^           %71.2 = CastType                 up %71.0
  val?^ | miss    %71.3 = LdVar              eR    attr, <env 0x560a342f8378>
  lgl$#-          %71.4 = Identical                <blt attr>, %71.3   <true>
  void                    Branch                   %71.4 -> BB73 (if true) | BB74 (if false)
BB72   <- [5]
  void                    Nop                !     
  val?^ | miss    %72.1 = %5.0
  dr              %72.2 = CallTarget@0x560a362a8470[Call#3]
  goto BB3
BB63   <- [12]
  void                    Nop                !     
  lgl$-           %63.1 = %12.1
  goto BB16
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    nzchar, e67.0
  lgl$#-          %13.1 = Identical                <blt nzchar>, %13.0   <@?>
  void                    Branch                   %13.1 -> BB15 (if true) | BB14 (if false)
BB73   <- [71]
  env             e73.0 = MkEnv              l     object=%71.2, parent=<env 0x560a342f8378>, context 1
  val?            %73.1 = Force!<lazy>       !vL   %71.2, e73.0   <(str|other)>
  val?            %73.2 = CallBuiltin        !v    attr(%73.1, "package") e73.0   <(nil|str)->
  val?            %73.3 = PopContext         C     %73.2, %71.1   <nil->
  lgl$-           %73.4 = Is                       %73.3, NULL
  void                    StVar              lW    pkg, %73.3, e67.0
  val             %73.6 = ChkMissing         e     %73.3
  lgl$#-          %73.7 = CheckTrueFalse     e     %73.4
  void                    Branch                   %73.7 -> BB64 (if true) | BB8 (if false)
BB74   <- [71]
  fs              %74.0 = FrameState         R     0x560a362590b0+80: [], env=e67.0
  env             e74.1 = (MkEnv)            l     object=%71.2, parent=<env 0x560a342f8378>, context 1
  fs              %74.2 = FrameState         R     0x560a35d65640+17: [<blt attr>, %71.4], env=e74.1, next=%74.0
  void                    Deopt              !v    %74.2, DeadBranchReached@0x560a350d9f78[Test#0], %71.4   !
BB16   <- [63, 15]
  lgl$-           %16.0 = Phi                      %15.5:BB15, %63.1:BB63
  lgl$-           %16.1 = %16.0
  lgl$#-          %16.2 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.2 -> BB62 (if true) | BB19 (if false)
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    pkg, e67.0
  val?            %15.1 = Force!             !v    %15.0, e67.0   <val?_>
  val?            %15.2 = CallBuiltin        !v    nzchar(%15.1) e67.0   <val?_>
  lgl$-           %15.3 = AsLogical          e     %15.2
  lgl$-           %15.4 = LAnd                     %12.1, %15.3
  lgl$-           %15.5 = %15.4
  goto BB16
BB14   <- [13]
  (cls|spec|blt)  %14.0 = LdFun              !v    nzchar, e67.0
  fs              %14.1 = FrameState         R     0x560a362590b0+366: [%12.1, %14.0], env=e67.0
  void                    Deopt              !v    %14.1, DeadCall@0x560a362a8470[Call#7], %14.0   !
BB64   <- [73]
  void                    StVar              lW    pkg, "", e67.0
  goto BB9
BB8   <- [73]
  void                    Nop                !     
  goto BB9
BB62   <- [16]
  (cls|spec|blt)  %62.0 = LdFun              !v    .requirePackage, e67.0
  fs              %62.1 = FrameState         R     0x560a362590b0+548: [%62.0], env=e67.0
  void                    Deopt              !v    %62.1, DeadCall@0x560a362a8470[Call#9], %62.0   !
BB19   <- [16]
  val?^ | miss    %19.0 = LdVar              eR    as.environment, e67.0
  lgl$#-          %19.1 = Identical                <blt as.environment>, %19.0   <true>
  void                    Branch                   %19.1 -> BB75 (if true) | BB76 (if false)
BB9   <- [8, 64]
  val?^ | miss    %9.0  = LdVar              eR    getClassDef, e67.0
  lgl$#-          %9.1  = Identical                %9.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %9.1 -> BB83 (if true) | BB84 (if false)
BB75   <- [19]
  val?^ | miss    %75.0 = LdVar              eR    where, e67.0
  val?            %75.1 = Force!<lazy>       !v    %75.0, e67.0   <env->
  val?            %75.2 = CallBuiltin        !v    as.environment(%75.1) e67.0   <env->
  void                    StVar              lW    where, %75.2, e67.0
  val?^ | miss    %75.4 = LdVar              eR    classMetaName, e67.0
  lgl$#-          %75.5 = Identical                %75.4, function(name) <(rir::DispatchTable*)0x560a35e|...
  void                    Branch                   %75.5 -> BB77 (if true) | BB78 (if false)
BB76   <- [19]
  fs              %76.0 = FrameState         R     0x560a362590b0+436: [%16.1], env=e67.0
  void                    Deopt              !v    %76.0, DeadBranchReached@0x560a362a8470[Test#1], %19.1   !
BB83   <- [9]
  prom-           %83.0 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p3, e67.0
  prom-           %83.1 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p4, e67.0
  prom-           %83.2 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p5 (!refl), e67.0
  val?            %83.3 = StaticCall         !v    getClassDef[0x560a37871040](%83.0, %83.1, %83.2) e67.0   <other>
  void                    StVar              lW    classDef, %83.3, e67.0
  goto BB12
BB84   <- [9]
  fs              %84.0 = FrameState         R     0x560a362590b0+139: [], env=e67.0
  void                    Deopt              !v    %84.0, CallTarget@0x560a362a8470[Call#4], %9.0   !
BB77   <- [75]
  prom-           %77.0 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p6, e67.0
  ct              %77.1 = PushContext        lCL   %77.0, classMetaName(Class), function(name) <(rir::DispatchTable*)0x560a35e|..., e67.0
  val?^           %77.2 = CastType                 up %77.0
  val?^ | miss    %77.3 = LdVar              eR    methodsPackageMetaName, <env 0x560a342f8378>
  lgl$#-          %77.4 = Identical                %77.3, function(prefix, name, package="") <(rir::Disp|...
  void                    Branch                   %77.4 -> BB79 (if true) | BB80 (if false)
BB78   <- [75]
  fs              %78.0 = FrameState         R     0x560a362590b0+589: [], env=e67.0
  void                    Deopt              !v    %78.0, CallTarget@0x560a362a8470[Call#10], %75.4   !
BB79   <- [77]
  env             e79.0 = MkEnv              l     name=%77.2, parent=<env 0x560a342f8378>, context 1
  prom-           %79.1 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p13, e79.0
  ct              %79.2 = PushContext        lCL   "C", %79.1, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|..., e79.0
  val?^           %79.3 = CastType                 up %79.1
  val?^ | miss    %79.4 = LdVar              eR    .Call, <env 0x560a342f8378>
  lgl$#-          %79.5 = Identical                <blt .Call>, %79.4   <true>
  void                    Branch                   %79.5 -> BB81 (if true) | BB82 (if false)
BB80   <- [77]
  fs              %80.0 = FrameState         R     0x560a362590b0+621: [], env=e67.0
  env             e80.1 = (MkEnv)            l     name=%77.2, parent=<env 0x560a342f8378>, context 1
  fs              %80.2 = FrameState         R     0x560a35f9eed0+0: [], env=e80.1, next=%80.0
  void                    Deopt              !v    %80.2, CallTarget@0x560a34417e28[Call#0], %77.3   !
BB81   <- [79]
  val?^ | miss    %81.0 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x560a342f8378>
  env             e81.1 = MkEnv              l     prefix="C", name=%79.3, package(miss)="", parent=<env 0x560a342f8378>, context 1
  val?            %81.2 = Force!<value>      !v    %81.0, e81.1   <vec>
  val?^ | miss    %81.3 = LdVar              eR    prefix, e81.1
  val?            %81.4 = Force!<value>      !v    %81.3, e81.1   <str$->
  val?^ | miss    %81.5 = LdVar              eR    name, e81.1
  val?            %81.6 = Force!<lazy>       !v    %81.5, e81.1   <str$+>
  val?^ | miss    %81.7 = LdVar              eR    package, e81.1
  val?            %81.8 = Force!<lazy>       !v    %81.7, e81.1   <str$->
  val?            %81.9 = CallBuiltin        !v    .Call(%81.2, %81.4, %81.6, %81.8) e81.1   <str$->
  val?            %81.10 = PopContext         C     %81.9, %79.2   <str$->
  val?            %81.11 = PopContext         C     %81.10, %77.1   <str$->
  void                    StVar              lW    what, %81.11, e67.0
  val?^ | miss    %81.13 = LdVar              eR    .findAll, e67.0
  lgl$#-          %81.14 = Identical                %81.13, function(what, where=topenv(parent.frame())) <|...
  void                    Branch                   %81.14 -> BB85 (if true) | BB86 (if false)
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x560a362590b0+621: [], env=e67.0
  fs              %82.1 = FrameState         R     0x560a35f9eed0+37: [], env=e79.0, next=%82.0
  env             e82.2 = (MkEnv)            l     prefix="C", name=%79.3, package(miss)="", parent=<env 0x560a342f8378>, context 1
  fs              %82.3 = FrameState         R     0x560a36486f40+0: [], env=e82.2, next=%82.1
  void                    Deopt              !v    %82.3, DeadBranchReached@0x560a3652f170[Test#0], %79.5   !
BB85   <- [81]
  prom-           %85.0 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p7 (!refl), e67.0
  prom-           %85.1 = MkArg                    unboundValue, findClass[0x560a378d0f40]_p8, e67.0
  val?            %85.2 = Call               !v    function(what, where=topenv(parent.frame())) <|...(%85.0, %85.1) e67.0   <vec$->
  void                    StVar              lW    where, %85.2, e67.0
  lgl$#-          %85.4 = IsType                   %85.2 isA val?-
  val?^ | miss    %85.5 = LdVar              eR    length, e67.0
  lgl$#-          %85.6 = Identical                <blt length>, %85.5   <true>
  void                    Branch                   %85.6 -> BB87 (if true) | BB88 (if false)
BB86   <- [81]
  fs              %86.0 = FrameState         R     0x560a362590b0+635: [], env=e67.0
  void                    Deopt              !v    %86.0, CallTarget@0x560a362a8470[Call#11], %81.13   !
BB87   <- [85]
  val             %87.0 = ChkMissing         e     %85.2
  void                    Branch                   %85.4 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  void                    Nop                !     
  lgl$#-          %88.1 = %85.6
  dr              %88.2 = DeadBranchReached@0x560a362a8470[Test#2]
  goto BB28
BB89   <- [87]
  val?-           %89.0 = CastType           d     dn %85.2   <vec$->
  (int|real)$-    %89.1 = CallSafeBuiltin    wed   length(%89.0)    <int$->
  lgl$#-          %89.2 = IsType                   %89.1 isA int$-
  void                    Branch                   %89.2 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  void                    Nop                !     
  val?            %90.1 = %85.2
  dr              %90.2 = Typecheck@0x560a362a8470[Type#30]
  goto BB28
BB28   <- [88, 90]
  val?^ | miss    %28.0 = Phi                      %88.1:BB88, %90.1:BB90
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %88.2:BB88, %90.2:BB90
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x560a362590b0+686: [], env=e67.0
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB91   <- [89]
  int$-           %91.0 = CastType           d     dn %89.1
  lgl$-           %91.1 = Gt                 d     %91.0, 1L, elided   <lgl$->
  lgl$-           %91.2 = AsLogical                %91.1
  lgl$#-          %91.3 = Identical                %91.2, false
  void                    Branch                   %91.3 -> BB61 (if true) | BB32 (if false)
BB92   <- [89]
  fs              %92.0 = FrameState         R     0x560a362590b0+777: [%89.1], env=e67.0
  void                    Deopt              !v    %92.0, Typecheck@0x560a362a8470[Type#33], %89.1   !
BB61   <- [91]
  void                    Nop                !     
  lgl$-           %61.1 = %91.2
  goto BB35
BB32   <- [91]
  val?^ | miss    %32.0 = LdVar              eR    nzchar, e67.0
  lgl$#-          %32.1 = Identical                <blt nzchar>, %32.0   <@?>
  void                    Branch                   %32.1 -> BB34 (if true) | BB33 (if false)
BB35   <- [61, 34]
  lgl$-           %35.0 = Phi                      %34.5:BB34, %61.1:BB61
  lgl$-           %35.1 = %35.0
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB60 (if true) | BB38 (if false)
BB34   <- [32]
  val?^ | miss    %34.0 = LdVar              eR    pkg, e67.0
  val?            %34.1 = Force!             !v    %34.0, e67.0   <val?_>
  val?            %34.2 = CallBuiltin        !v    nzchar(%34.1) e67.0   <val?_>
  lgl$-           %34.3 = AsLogical          e     %34.2
  lgl$-           %34.4 = LAnd                     %91.2, %34.3
  lgl$-           %34.5 = %34.4
  goto BB35
BB33   <- [32]
  (cls|spec|blt)  %33.0 = LdFun              !v    nzchar, e67.0
  fs              %33.1 = FrameState         R     0x560a362590b0+829: [%91.2, %33.0], env=e67.0
  void                    Deopt              !v    %33.1, DeadCall@0x560a362a8470[Call#13], %33.0   !
BB60   <- [35]
  (cls|spec|blt)  %60.0 = LdFun              !v    sapply, e67.0
  fs              %60.1 = FrameState         R     0x560a362590b0+938: [%60.0], env=e67.0
  void                    Deopt              !v    %60.1, DeadCall@0x560a362a8470[Call#14], %60.0   !
BB38   <- [35]
  val?^ | miss    %38.0 = LdVar              eR    pkg, e67.0
  lgl$#-          %38.1 = IsType                   %38.0 isA val?~- | miss
  void                    Branch                   %38.1 -> BB93 (if true) | BB94 (if false)
BB93   <- [38]
  val?~- | miss   %93.0 = CastType           d     dn %38.0
  val?-           %93.1 = Force!<value>            %93.0,    <str$->
  void                    StVar              lW    pkgs, %93.1, e67.0
  val?^ | miss    %93.3 = LdVar              eR    length, e67.0
  lgl$#-          %93.4 = Identical                <blt length>, %93.3   <true>
  void                    Branch                   %93.4 -> BB95 (if true) | BB96 (if false)
BB94   <- [38]
  fs              %94.0 = FrameState         R     0x560a362590b0+899: [%35.1], env=e67.0
  void                    Deopt              !v    %94.0, Typecheck@0x560a362a8470[Type#38], %38.0   !
BB95   <- [93]
  val?^ | miss    %95.0 = LdVar              eR    where, e67.0
  val?            %95.1 = Force!<value>      !v    %95.0, e67.0   <vec$->
  lgl$#-          %95.2 = IsType                   %95.1 isA val?-
  void                    Branch                   %95.2 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  fs              %96.0 = FrameState         R     0x560a362590b0+928: [], env=e67.0
  void                    Deopt              !v    %96.0, DeadBranchReached@0x560a362a8470[Test#5], %93.4   !
BB97   <- [95]
  val?-           %97.0 = CastType           d     dn %95.1   <vec$->
  (int|real)$-    %97.1 = CallSafeBuiltin    wed   length(%97.0)    <int$->
  lgl$#-          %97.2 = IsType                   %97.1 isA int$-
  void                    Branch                   %97.2 -> BB99 (if true) | BB100 (if false)
BB98   <- [95]
  fs              %98.0 = FrameState         R     0x560a362590b0+1161: [<blt length>, %95.1], env=e67.0
  void                    Deopt              !v    %98.0, Typecheck@0x560a362a8470[Type#50], %95.1   !
BB99   <- [97]
  int$-           %99.0 = CastType           d     dn %97.1
  lgl$-           %99.1 = Eq                 d     %99.0, 0L, elided   <lgl$->
  lgl$#-          %99.2 = CheckTrueFalse     e     %99.1
  void                    Branch                   %99.2 -> BB53 (if true) | BB45 (if false)
BB100   <- [97]
  void                    Nop                !     
  (int|real)$-    %100.1 = %97.1
  dr              %100.2 = Typecheck@0x560a362a8470[Type#51]
  goto BB43
BB53   <- [99]
  val?^ | miss    %53.0 = LdVar              eR    classDef, e67.0
  val?            %53.1 = Force!             !v    %53.0, e67.0   <val?_>
  lgl$-           %53.2 = Is                       %53.1, NULL
  lgl$#-          %53.3 = CheckTrueFalse     e     %53.2
  void                    Branch                   %53.3 -> BB59 (if true) | BB54 (if false)
BB45   <- [99]
  val?^ | miss    %45.0 = LdVar              eR    length, e67.0
  lgl$#-          %45.1 = Identical                <blt length>, %45.0   <true>
  void                    Branch                   %45.1 -> BB101 (if true) | BB102 (if false)
BB43   <- [100, 102]
  val?^ | miss    %43.0 = Phi                      %100.1:BB100, %102.1:BB102
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %100.2:BB100, %102.2:BB102
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x560a362590b0+1183: [%97.1], env=e67.0
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB59   <- [53]
  (cls|spec|blt)  %59.0 = LdFun              !v    getClassDef, e67.0
  fs              %59.1 = FrameState         R     0x560a362590b0+2139: [%59.0], env=e67.0
  void                    Deopt              !v    %59.1, DeadCall@0x560a362a8470[Call#40], %59.0   !
BB54   <- [53]
  val?^ | miss    %54.0 = LdVar              eR    nzchar, e67.0
  lgl$#-          %54.1 = Identical                <blt nzchar>, %54.0   <@?>
  void                    Branch                   %54.1 -> BB56 (if true) | BB55 (if false)
BB101   <- [45]
  val?^ | miss    %101.0 = LdVar              eR    where, e67.0
  val?            %101.1 = Force!<value>      !v    %101.0, e67.0   <vec$->
  lgl$#-          %101.2 = IsType                   %101.1 isA val?-
  void                    Branch                   %101.2 -> BB103 (if true) | BB104 (if false)
BB102   <- [45]
  void                    Nop                !     
  lgl$#-          %102.1 = %45.1
  dr              %102.2 = DeadBranchReached@0x560a362a8470[Test#6]
  goto BB43
BB56   <- [54]
  val?^ | miss    %56.0 = LdVar              eR    unique, e67.0
  val?            %56.1 = Force!             !v    %56.0, e67.0   <val?_>
  val?            %56.2 = CallBuiltin        !v    nzchar(%56.1) e67.0   <val?_>
  lgl$#-          %56.3 = CheckTrueFalse     we    %56.2
  void                    Branch                   %56.3 -> BB58 (if true) | BB57 (if false)
BB55   <- [54]
  (cls|spec|blt)  %55.0 = LdFun              !v    nzchar, e67.0
  fs              %55.1 = FrameState         R     0x560a362590b0+2208: [%55.0], env=e67.0
  void                    Deopt              !v    %55.1, DeadCall@0x560a362a8470[Call#41], %55.0   !
BB103   <- [101]
  val?-           %103.0 = CastType           d     dn %101.1   <vec$->
  (int|real)$-    %103.1 = CallSafeBuiltin    wed   length(%103.0)    <int$->
  lgl$#-          %103.2 = IsType                   %103.1 isA int$-
  void                    Branch                   %103.2 -> BB105 (if true) | BB106 (if false)
BB104   <- [101]
  fs              %104.0 = FrameState         R     0x560a362590b0+1275: [<blt length>, %101.1], env=e67.0
  void                    Deopt              !v    %104.0, Typecheck@0x560a362a8470[Type#54], %101.1   !
BB58   <- [56]
  (cls|spec|blt)  %58.0 = LdFun              !v    is, e67.0
  fs              %58.1 = FrameState         R     0x560a362590b0+2292: [%58.0], env=e67.0
  void                    Deopt              !v    %58.1, DeadCall@0x560a362a8470[Call#42], %58.0   !
BB57   <- [56]
  void                    Nop                !     
  goto BB51
BB105   <- [103]
  int$-           %105.0 = CastType           d     dn %103.1
  lgl$-           %105.1 = Gt                 d     %105.0, 1L, elided   <lgl$->
  lgl$#-          %105.2 = CheckTrueFalse     e     %105.1
  void                    Branch                   %105.2 -> BB52 (if true) | BB50 (if false)
BB106   <- [103]
  fs              %106.0 = FrameState         R     0x560a362590b0+1297: [%103.1], env=e67.0
  void                    Deopt              !v    %106.0, Typecheck@0x560a362a8470[Type#55], %103.1   !
BB51   <- [57, 50]
  val?^ | miss    %51.0 = LdVar              eR    where, e67.0
  void                    Visible            v     
  val?            %51.2 = Force!<value>      !     %51.0, e67.0   <vec$->
  void                    Return             l     %51.2
BB52   <- [105]
  (cls|spec|blt)  %52.0 = LdFun              !v    sapply, e67.0
  fs              %52.1 = FrameState         R     0x560a362590b0+1330: [%52.0], env=e67.0
  void                    Deopt              !v    %52.1, DeadCall@0x560a362a8470[Call#19], %52.0   !
BB50   <- [105]
  void                    Nop                !     
  goto BB51
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|other)>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    className, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ findClass[0x560a378d0f40]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
