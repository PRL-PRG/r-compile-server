
┌──────────────────────────────────────────────────────────────────────────────┐
│ assignClassDef[0x560a36de58b0]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
assignClassDef[0x560a36de58b0]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     Class=%0.2, def=%0.1, where=%0.0, force(miss)=false, doSubclasses(miss)=missingArg, parent=<env 0x560a342f8378>, context 1
  prom-           %0.4  = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p1, e0.3
  val?^ | miss    %0.5  = CastType                 up %0.4
  void                    StArg              lW    doSubclasses, %0.5, e0.3
  val?^ | miss    %0.7  = LdVar              eR    is, <env 0x560a342f8378>
  lgl$#-          %0.8  = Identical                %0.7, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %0.8 -> BB49 (if true) | BB50 (if false)
BB49   <- [0]
  prom-           %49.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p3, e0.3
  val?            %49.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%49.0, "classRepresentation") e0.3   <lgl$->
  lgl$#-          %49.2 = IsType                   %49.1 isA lgl$-
  void                    Branch                   %49.2 -> BB51 (if true) | BB52 (if false)
BB50   <- [0]
  fs              %50.0 = FrameState         R     0x560a35e63590+0: [], env=e0.3
  void                    Deopt              !v    %50.0, CallTarget@0x560a364b76a0[Call#1], %0.7
BB51   <- [49]
  lgl$-           %51.0 = CastType           d     dn %49.1
  lgl$-           %51.1 = Not                d     %51.0, elided
  lgl$#-          %51.2 = CheckTrueFalse     e     %51.1
  void                    Branch                   %51.2 -> BB47 (if true) | BB5 (if false)
BB52   <- [49]
  fs              %52.0 = FrameState         R     0x560a35e63590+37: [%49.1], env=e0.3
  void                    Deopt              !v    %52.0, Typecheck@0x560a364b76a0[Type#4], %49.1   !
BB47   <- [51]
  (cls|spec|blt)  %47.0 = LdFun              !v    stop, e0.3
  fs              %47.1 = FrameState         R     0x560a35e63590+59: [%47.0], env=e0.3
  void                    Deopt              !v    %47.1, DeadCall@0x560a364b76a0[Call#2], %47.0   !
BB5   <- [51]
  (cls|spec|blt)  %5.0  = LdFun              !v    @, <0x560a33cf0bd8>, e0.3
  prom-           %5.1  = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p4, e0.3
  prom-           %5.2  = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p5, e0.3
  val?            %5.3  = Call               !v    %5.0(%5.1, %5.2) e0.3   <str$+>
  void                    StVar              lW    clName, %5.3, e0.3
  (cls|spec|blt)  %5.5  = LdFun              !v    attributes<-, <0x560a33cf1128>, e0.3
  val?^ | miss    %5.6  = LdVar              eR    clName, e0.3
  lgl$#-          %5.7  = IsType                   %5.6 isA val?~+ | miss
  void                    Branch                   %5.7 -> BB53 (if true) | BB54 (if false)
BB53   <- [5]
  val?~+ | miss   %53.0 = CastType           d     dn %5.6
  val?+           %53.1 = Force!<value>            %53.0,    <str$+>
  val?            %53.2 = NamedCall          !v    %5.5(%53.1, value=nil) e0.3
  void                    StVar              lW    clName, %53.2, e0.3
  val?^ | miss    %53.4 = LdVar              eR    .identC, e0.3
  lgl$#-          %53.5 = Identical                %53.4, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %53.5 -> BB55 (if true) | BB56 (if false)
BB54   <- [5]
  fs              %54.0 = FrameState         R     0x560a35e63590+157: [nil], env=e0.3
  void                    Deopt              !v    %54.0, Typecheck@0x560a364b76a0[Type#14], %5.6   !
BB55   <- [53]
  prom-           %55.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p7, e0.3
  prom-           %55.1 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p8 (!refl), e0.3
  val?            %55.2 = StaticCall         !v    .identC[0x560a3621c380](%55.0, %55.1) e0.3   <lgl$->
  lgl$#-          %55.3 = IsType                   %55.2 isA lgl$-
  void                    Branch                   %55.3 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x560a35e63590+225: [], env=e0.3
  void                    Deopt              !v    %56.0, CallTarget@0x560a364b76a0[Call#9], %53.4   !
BB57   <- [55]
  lgl$-           %57.0 = CastType           d     dn %55.2
  lgl$-           %57.1 = Not                d     %57.0, elided
  lgl$#-          %57.2 = CheckTrueFalse     e     %57.1
  void                    Branch                   %57.2 -> BB46 (if true) | BB12 (if false)
BB58   <- [55]
  void                    Nop                !     
  val?            %58.1 = %55.2
  dr              %58.2 = Typecheck@0x560a364b76a0[Type#17]
  goto BB10
BB46   <- [57]
  (cls|spec|blt)  %46.0 = LdFun              !v    stop, e0.3
  fs              %46.1 = FrameState         R     0x560a35e63590+284: [%46.0], env=e0.3
  void                    Deopt              !v    %46.1, DeadCall@0x560a364b76a0[Call#10], %46.0   !
BB12   <- [57]
  val?^ | miss    %12.0 = LdVar              eR    as.environment, e0.3
  lgl$#-          %12.1 = Identical                <blt as.environment>, %12.0   <true>
  void                    Branch                   %12.1 -> BB59 (if true) | BB60 (if false)
BB10   <- [58, 60]
  val?^ | miss    %10.0 = Phi                      %58.1:BB58, %60.1:BB60
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %58.2:BB58, %60.2:BB60
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x560a35e63590+262: [%55.2], env=e0.3
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB59   <- [12]
  val?^ | miss    %59.0 = LdVar              eR    where, e0.3
  val?            %59.1 = Force!<lazy>       !v    %59.0, e0.3   <env+>
  val?            %59.2 = CallBuiltin        !v    as.environment(%59.1) e0.3   <env+>
  void                    StVar              lW    where, %59.2, e0.3
  val?^ | miss    %59.4 = LdVar              eR    classMetaName, e0.3
  lgl$#-          %59.5 = Identical                %59.4, function(name) <(rir::DispatchTable*)0x560a35e|...
  void                    Branch                   %59.5 -> BB61 (if true) | BB62 (if false)
BB60   <- [12]
  void                    Nop                !     
  lgl$#-          %60.1 = %12.1
  dr              %60.2 = DeadBranchReached@0x560a364b76a0[Test#0]
  goto BB10
BB61   <- [59]
  prom-           %61.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p9, e0.3
  ct              %61.1 = PushContext        lCL   %61.0, classMetaName(Class), function(name) <(rir::DispatchTable*)0x560a35e|..., e0.3
  val?^           %61.2 = CastType                 up %61.0
  val?^ | miss    %61.3 = LdVar              eR    methodsPackageMetaName, <env 0x560a342f8378>
  lgl$#-          %61.4 = Identical                %61.3, function(prefix, name, package="") <(rir::Disp|...
  void                    Branch                   %61.4 -> BB63 (if true) | BB64 (if false)
BB62   <- [59]
  fs              %62.0 = FrameState         R     0x560a35e63590+430: [], env=e0.3
  void                    Deopt              !v    %62.0, CallTarget@0x560a364b76a0[Call#16], %59.4   !
BB63   <- [61]
  env             e63.0 = MkEnv              l     name=%61.2, parent=<env 0x560a342f8378>, context 1
  prom-           %63.1 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p25, e63.0
  ct              %63.2 = PushContext        lCL   "C", %63.1, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|..., e63.0
  val?^           %63.3 = CastType                 up %63.1
  val?^ | miss    %63.4 = LdVar              eR    .Call, <env 0x560a342f8378>
  lgl$#-          %63.5 = Identical                <blt .Call>, %63.4   <true>
  void                    Branch                   %63.5 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  fs              %64.0 = FrameState         R     0x560a35e63590+462: [], env=e0.3
  env             e64.1 = (MkEnv)            l     name=%61.2, parent=<env 0x560a342f8378>, context 1
  fs              %64.2 = FrameState         R     0x560a35f9eed0+0: [], env=e64.1, next=%64.0
  void                    Deopt              !v    %64.2, CallTarget@0x560a34417e28[Call#0], %61.3   !
BB65   <- [63]
  val?^ | miss    %65.0 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x560a342f8378>
  env             e65.1 = MkEnv              l     prefix="C", name=%63.3, package(miss)="", parent=<env 0x560a342f8378>, context 1
  val?            %65.2 = Force!<value>      !v    %65.0, e65.1   <vec>
  val?^ | miss    %65.3 = LdVar              eR    prefix, e65.1
  val?            %65.4 = Force!<value>      !v    %65.3, e65.1   <str$->
  val?^ | miss    %65.5 = LdVar              eR    name, e65.1
  val?            %65.6 = Force!<lazy>       !v    %65.5, e65.1   <str$+>
  val?^ | miss    %65.7 = LdVar              eR    package, e65.1
  val?            %65.8 = Force!<lazy>       !v    %65.7, e65.1   <str$->
  val?            %65.9 = CallBuiltin        !     .Call(%65.2, %65.4, %65.6, %65.8) e65.1   <str$->
  val?            %65.10 = PopContext         C     %65.9, %63.2   <str$->
  val?            %65.11 = PopContext         C     %65.10, %61.1   <str$->
  void                    StVar              lW    mname, %65.11, e0.3
  val?^ | miss    %65.13 = LdVar              eR    exists, e0.3
  lgl$#-          %65.14 = Identical                %65.13, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %65.14 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  fs              %66.0 = FrameState         R     0x560a35e63590+462: [], env=e0.3
  fs              %66.1 = FrameState         R     0x560a35f9eed0+37: [], env=e63.0, next=%66.0
  env             e66.2 = (MkEnv)            l     prefix="C", name=%63.3, package(miss)="", parent=<env 0x560a342f8378>, context 1
  fs              %66.3 = FrameState         R     0x560a36486f40+0: [], env=e66.2, next=%66.1
  void                    Deopt              !v    %66.3, DeadBranchReached@0x560a3652f170[Test#0], %63.5   !
BB67   <- [65]
  prom-           %67.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p10 (!refl), e0.3
  prom-           %67.1 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p11, e0.3
  val?            %67.2 = StaticCall         !     exists[0x560a3612a7b0](%67.0, missingArg, %67.1, missingArg, missingArg, false) { 0 2n 5n } e0.3   <lgl$->
  lgl$#-          %67.3 = IsType                   %67.2 isA lgl$-
  void                    Branch                   %67.3 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  fs              %68.0 = FrameState         R     0x560a35e63590+476: [], env=e0.3
  void                    Deopt              !v    %68.0, CallTarget@0x560a364b76a0[Call#17], %65.13   !
BB69   <- [67]
  lgl$-           %69.0 = CastType           d     dn %67.2
  lgl$-           %69.1 = AsLogical                %69.0
  lgl$#-          %69.2 = Identical                %69.1, false
  void                    Branch                   %69.2 -> BB45 (if true) | BB23 (if false)
BB70   <- [67]
  void                    Nop                !     
  val?            %70.1 = %67.2
  dr              %70.2 = Typecheck@0x560a364b76a0[Type#32]
  goto BB21
BB45   <- [69]
  void                    Nop                !     
  lgl$-           %45.1 = %69.1
  goto BB26
BB23   <- [69]
  val?^ | miss    %23.0 = LdVar              eR    bindingIsLocked, e0.3
  lgl$#-          %23.1 = Identical                %23.0, function(sym, env) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %23.1 -> BB71 (if true) | BB72 (if false)
BB21   <- [70, 72]
  val?^ | miss    %21.0 = Phi                      %70.1:BB70, %72.1:BB72
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %70.2:BB70, %72.2:BB72
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x560a35e63590+530: [%67.2], env=e0.3
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB26   <- [45, 73]
  lgl$-           %26.0 = Phi                      %73.3:BB73, %45.1:BB45
  lgl$-           %26.1 = %26.0
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB40 (if true) | BB29 (if false)
BB71   <- [23]
  prom-           %71.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p13, e0.3
  val?^ | miss    %71.1 = LdVar              eR    mname, e0.3
  void                    Visible            v     
  val?            %71.3 = Force!<value>      !     %71.1, e0.3   <str$->
  prom-           %71.4 = MkArg                    %71.3, assignClassDef[0x560a36de58b0]_p12 (!refl), 
  val?            %71.5 = StaticCall         !     bindingIsLocked[0x560a364e5c00](%71.4, %71.0) e0.3   <lgl$->
  lgl$#-          %71.6 = IsType                   %71.5 isA lgl$-
  void                    Branch                   %71.6 -> BB73 (if true) | BB74 (if false)
BB72   <- [23]
  void                    Nop                !     
  val?^ | miss    %72.1 = %23.0
  dr              %72.2 = CallTarget@0x560a364b76a0[Call#18]
  goto BB21
BB40   <- [26]
  val?^ | miss    %40.0 = LdVar              eR    force, e0.3
  void                    Visible            v     
  val?            %40.2 = Force!<value>      !     %40.0, e0.3   <lgl$->
  lgl$#-          %40.3 = CheckTrueFalse     we    %40.2
  void                    Branch                   %40.3 -> BB44 (if true) | BB43 (if false)
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    assign, e0.3
  lgl$#-          %29.1 = Identical                %29.0, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %29.1 -> BB75 (if true) | BB76 (if false)
BB73   <- [71]
  lgl$-           %73.0 = CastType           d     dn %71.5
  lgl$-           %73.1 = AsLogical                %73.0
  lgl$-           %73.2 = LAnd                     %69.1, %73.1
  lgl$-           %73.3 = %73.2
  goto BB26
BB74   <- [71]
  fs              %74.0 = FrameState         R     0x560a35e63590+579: [%69.1, %71.5], env=e0.3
  void                    Deopt              !v    %74.0, Typecheck@0x560a364b76a0[Type#35], %71.5   !
BB44   <- [40]
  val?^ | miss    %44.0 = LdVar              eR    .assignOverBinding, e0.3
  lgl$#-          %44.1 = Identical                %44.0, function(what, value, where, verbose=TRUE) <(r|...
  void                    Branch                   %44.1 -> BB79 (if true) | BB80 (if false)
BB43   <- [40]
  (cls|spec|blt)  %43.0 = LdFun              !v    stop, e0.3
  fs              %43.1 = FrameState         R     0x560a35e63590+665: [%43.0], env=e0.3
  void                    Deopt              !v    %43.1, DeadCall@0x560a364b76a0[Call#20], %43.0   !
BB75   <- [29]
  prom-           %75.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p14, e0.3
  prom-           %75.1 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p15, e0.3
  prom-           %75.2 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p16, e0.3
  val?            %75.3 = StaticCall         !     assign[0x560a36829a50](%75.0, %75.1, %75.2) e0.3
  goto BB30
BB76   <- [29]
  fs              %76.0 = FrameState         R     0x560a35e63590+586: [%26.1], env=e0.3
  void                    Deopt              !v    %76.0, CallTarget@0x560a364b76a0[Call#19], %29.0   !
BB79   <- [44]
  prom-           %79.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p22, e0.3
  prom-           %79.1 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p23, e0.3
  prom-           %79.2 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p24, e0.3
  val?            %79.3 = StaticCall         !     .assignOverBinding[0x560a36444590](%79.0, %79.1, %79.2, false) e0.3
  goto BB30
BB80   <- [44]
  fs              %80.0 = FrameState         R     0x560a35e63590+655: [%40.3], env=e0.3
  void                    Deopt              !v    %80.0, CallTarget@0x560a364b76a0[Call#25], %44.0   !
BB30   <- [75, 79]
  val?^ | miss    %30.0 = LdVar              eR    cacheOnAssign, e0.3
  lgl$#-          %30.1 = Identical                %30.0, function(env) <(rir::DispatchTable*)0x560a35e3|...
  void                    Branch                   %30.1 -> BB77 (if true) | BB78 (if false)
BB77   <- [30]
  prom-           %77.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p17, e0.3
  ct              %77.1 = PushContext        lCL   %77.0, cacheOnAssign(where), function(env) <(rir::DispatchTable*)0x560a35e3|..., e0.3
  val?^           %77.2 = CastType                 up %77.0
  env             e77.3 = MkEnv              l     env=%77.2, parent=<env 0x560a342f8378>, context 1
  (cls|spec|blt)  %77.4 = LdFun              !     $, <0x560a33cf0c10>, <env 0x560a342f8378>
  prom-           %77.5 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p27, e77.3
  prom-           %77.6 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p28, e77.3
  val?            %77.7 = Call               !     %77.4(%77.5, %77.6) e77.3   <nil->
  lgl$-           %77.8 = Is                       %77.7, NULL
  lgl$-           %77.9 = AsLogical                %77.8
  lgl$#-          %77.10 = Identical                %77.9, true
  void                    Branch                   %77.10 -> BB34 (if true) | BB33 (if false)
BB78   <- [30]
  fs              %78.0 = FrameState         R     0x560a35e63590+746: [], env=e0.3
  void                    Deopt              !v    %78.0, CallTarget@0x560a364b76a0[Call#26], %30.0   !
BB34   <- [77]
  val?            %34.0 = PopContext         C     %77.9, %77.1   <lgl$->
  lgl$#-          %34.1 = IsType                   %34.0 isA lgl$-
  void                    Branch                   %34.1 -> BB81 (if true) | BB82 (if false)
BB33   <- [77]
  fs              %33.0 = FrameState         R     0x560a35e63590+778: [], env=e0.3
  (cls|spec|blt)  %33.1 = LdFun              !v    $, e77.3
  fs              %33.2 = FrameState         R     0x560a363830c0+59: [%77.9, %33.1], env=e77.3, next=%33.0
  void                    Deopt              !v    %33.2, DeadCall@0x560a3417bf78[Call#1], %33.1   !
BB81   <- [34]
  lgl$-           %81.0 = CastType           d     dn %34.0
  lgl$#-          %81.1 = CheckTrueFalse     e     %81.0
  void                    Branch                   %81.1 -> BB39 (if true) | BB37 (if false)
BB82   <- [34]
  void                    Nop                !     
  val?            %82.1 = %34.0
  dr              %82.2 = Typecheck@0x560a364b76a0[Type#50]
  goto BB35
BB39   <- [81]
  val?^ | miss    %39.0 = LdVar              eR    .cacheClass, e0.3
  lgl$#-          %39.1 = Identical                %39.0, function(name, def, doSubclasses=FALSE, env) <|...
  void                    Branch                   %39.1 -> BB83 (if true) | BB84 (if false)
BB37   <- [81]
  void                    Invisible          v     
  nil-            %37.1 = nil
  goto BB38
BB35   <- [82, 84]
  val?^ | miss    %35.0 = Phi                      %82.1:BB82, %84.1:BB84
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %82.2:BB82, %84.2:BB84
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x560a35e63590+778: [%34.0], env=e0.3
  void                    Deopt              !v    %35.4, %35.3, %35.1   !
BB83   <- [39]
  prom-           %83.0 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p18, e0.3
  prom-           %83.1 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p19, e0.3
  prom-           %83.2 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p20, e0.3
  prom-           %83.3 = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p21, e0.3
  val?            %83.4 = StaticCall         !     .cacheClass[0x560a364b4980](%83.0, %83.1, %83.2, %83.3) e0.3   <other>
  val?            %83.5 = %83.4
  goto BB38
BB84   <- [39]
  void                    Nop                !     
  val?^ | miss    %84.1 = %39.0
  dr              %84.2 = CallTarget@0x560a364b76a0[Call#27]
  goto BB35
BB38   <- [37, 83]
  val?            %38.0 = Phi                      %37.1:BB37, %83.5:BB83
  val?            %38.1 = %38.0
  void                    Return             l     %38.1
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is, <0x560a34e85100>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, assignClassDef[0x560a36de58b0]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "ClassUnionRepresentation") e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    className, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    clName, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    clName, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    doSubclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .cacheOnAssign, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ assignClassDef[0x560a36de58b0]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
