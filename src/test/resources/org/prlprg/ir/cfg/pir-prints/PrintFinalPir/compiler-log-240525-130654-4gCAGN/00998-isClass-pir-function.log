
┌──────────────────────────────────────────────────────────────────────────────┐
│ isClass[0x560a38365e60]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
isClass[0x560a38365e60]
BB0
  val?^           %0.0  = LdArg                    0
  void                    Visible            v     
  env             e0.2  = MkEnv              l     Class=%0.0, formal(miss)=true, where(miss)=missingArg, parent=<env 0x560a342f8378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, isClass[0x560a38365e60]_p1, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    where, %0.4, e0.2
  val?^ | miss    %0.6  = LdVar              eR    getClassDef, <env 0x560a342f8378>
  lgl$#-          %0.7  = Identical                %0.6, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %0.7 -> BB4 (if true) | BB5 (if false)
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, isClass[0x560a38365e60]_p3, e0.2
  prom-           %4.1  = MkArg                    unboundValue, isClass[0x560a38365e60]_p4, e0.2
  val?            %4.2  = StaticCall         !     getClassDef[0x560a3608a930](%4.0, %4.1) e0.2   <other>
  lgl$-           %4.3  = Is                       %4.2, NULL
  lgl$-           %4.4  = Not                vd    %4.3, elided
  void                    Return             l     %4.4
BB5   <- [0]
  fs              %5.0  = FrameState         R     0x560a3611ffa0+0: [], env=e0.2
  void                    Deopt              !v    %5.0, CallTarget@0x560a36599e30[Call#2], %0.6
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, isClass[0x560a38365e60]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ isClass[0x560a38365e60]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
