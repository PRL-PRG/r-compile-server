
┌──────────────────────────────────────────────────────────────────────────────┐
│ pir.compile[0x560912d53bb0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 6                              │
│ Properties:                                                                  │
├────── Final PIR Version
pir.compile[0x560912d53bb0]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    .Call, R_GlobalEnv
  lgl$#-          %0.2  = Identical                <blt .Call>, %0.1   <true>
  void                    Branch                   %0.2 -> BB8 (if true) | BB9 (if false)
BB8   <- [0]
  env             e8.0  = MkEnv              l     what=%0.0, debugFlags=nil, debugStyle=nil, P_EARLY(miss)=false, P_FINAL(miss)=false, P_OPT(miss)=false, WARN(miss)=false, parent=R_GlobalEnv, context 1
  val?            %8.1  = Force!<lazy>       !v    %0.0, e8.0   <cls->
  lgl$#-          %8.2  = IsType                   %8.1 isA val?-
  void                    Branch                   %8.2 -> BB10 (if true) | BB11 (if false)
BB9   <- [0]
  env             e9.0  = (MkEnv)            l     what=%0.0, debugFlags(miss)=missingArg, debugStyle(miss)=missingArg, P_EARLY(miss)=false, P_FINAL(miss)=false, P_OPT(miss)=false, WARN(miss)=false, parent=R_GlobalEnv, context 1
  fs              %9.1  = FrameState         R     0x560912c1ed40+0: [], env=e9.0
  void                    Deopt              !v    %9.1, DeadBranchReached@0x560912c86390[Test#0], %0.2
BB10   <- [8]
  val?-           %10.0 = CastType           d     dn %8.1   <cls->
  val?^ | miss    %10.1 = LdVar              eR    as.name, e8.0
  lgl$#-          %10.2 = Identical                %10.1, function(x) <(rir::DispatchTable*)0x560912c9d3|...
  void                    Branch                   %10.2 -> BB12 (if true) | BB13 (if false)
BB11   <- [8]
  void                    Nop                !     
  val?            %11.1 = %8.1
  dr              %11.2 = Typecheck@0x560912c86390[Type#20]
  goto BB3
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    as.character, e8.0
  lgl$#-          %12.1 = Identical                %12.0, <blt as.character>
  void                    Branch                   %12.1 -> BB14 (if true) | BB15 (if false)
BB13   <- [10]
  void                    Nop                !     
  val?^ | miss    %13.1 = %10.1
  dr              %13.2 = CallTarget@0x560912c86390[Call#11]
  goto BB3
BB3   <- [11, 13, 15]
  val?^ | miss    %3.0  = Phi                      %11.1:BB11, %13.1:BB13, %15.1:BB15
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %11.2:BB11, %13.2:BB13, %15.2:BB15
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x560912c1ed40+474: [<blt .Call>, "pirCompileWrapper", %8.1], env=e8.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB14   <- [12]
  (cls|spec|blt)  %14.0 = LdFun              !v    substitute, <0x560910d75468>, e8.0
  prom-           %14.1 = MkArg                    unboundValue, pir.compile[0x560912d53bb0]_p6, e8.0
  val?            %14.2 = Call               !v    %14.0(%14.1) e8.0   <code->
  val?            %14.3 = CallBuiltin        !v    as.character(%14.2) e8.0   <str->
  lgl$#-          %14.4 = IsType                   %14.3 isA val?-
  void                    Branch                   %14.4 -> BB16 (if true) | BB17 (if false)
BB15   <- [12]
  void                    Nop                !     
  val?^ | miss    %15.1 = %12.0
  dr              %15.2 = CallTarget@0x560912c86390[Call#12]
  goto BB3
BB16   <- [14]
  val?-           %16.0 = CastType           d     dn %14.3   <str->
  val             %16.1 = CallSafeBuiltin    wed   as.vector(%16.0, "symbol")    <sym->
  val?^ | miss    %16.2 = LdVar              eR    debugFlags, e8.0
  val?            %16.3 = Force!<value>      !v    %16.2, e8.0   <nil->
  val?^ | miss    %16.4 = LdVar              eR    debugStyle, e8.0
  val?            %16.5 = Force!<value>      !v    %16.4, e8.0   <nil->
  val?            %16.6 = CallBuiltin        !     .Call("pirCompileWrapper", %10.0, %16.1, %16.3, %16.5) e8.0   <cls->
  void                    Return             l     %16.6
BB17   <- [14]
  fs              %17.0 = FrameState         R     0x560912c1ed40+511: [<blt .Call>, "pirCompileWrapper", %10.0], env=e8.0
  prom-           %17.1 = MkArg                    unboundValue, pir.compile[0x560912d53bb0]_p4, e8.0
  val?^           %17.2 = CastType                 up %17.1
  env             e17.3 = (MkEnv)            l     x=%17.2, parent=R_BaseNamespace, context 0
  fs              %17.4 = FrameState         R     0x560912d0a3f0+9: [], env=e17.3, next=%17.0
  fs              %17.5 = FrameState         R     0x560912d1ef30+32(pr): [%14.3], env=e8.0, next=%17.4
  void                    Deopt              !v    %17.5, Typecheck@0x56091235d7f8[Type#0], %14.3   !
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x560910d83040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, pir.compile[0x560912d53bb0]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     substitute, <0x560910d75468>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, pir.compile[0x560912d53bb0]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <code->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ pir.compile[0x560912d53bb0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
