
┌──────────────────────────────────────────────────────────────────────────────┐
│ rir.compile[0x560912dea270]                                                  │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:  Eager                                                           │
├────── Final PIR Version
rir.compile[0x560912dea270]
BB0
  int-            %0.0  = Colon              d     1L, 10L, elided   <val?_>
  int-            %0.1  = Colon              d     1L, 10L, elided   <val?_>
  int$-           %0.2  = Extract1_1D        wed   %0.0, 1L, elided   <val?_>
  int$-           %0.3  = Extract1_1D        wed   %0.0, 10, elided   <val?_>
  int$-           %0.4  = Add                d     %0.2, %0.3, elided   <val?_>
  int-            %0.5  = Subassign1_1D      wed   %0.4, %0.1, 1L, elided
  env             e0.6  = MkEnv              l     x=%0.0, y=%0.5, p=1L, i=1L, parent=R_GlobalEnv, context 1
  int$#-          %0.7  = 2L
  goto BB2
BB2   <- [21, 0]
  int$-           %2.0  = Phi                      %0.7:BB0, %21.6:BB21
  int$-           %2.1  = %2.0
  lgl$-           %2.2  = Neq                d     11L, %2.1, elided
  lgl$#-          %2.3  = Identical                %2.2, false
  void                    Branch                   %2.3 -> BB3 (if true) | BB4 (if false)
BB3   <- [2]
  val?^ | miss    %3.0  = LdVar              eR    y, e0.6
  void                    Visible            v     
  val?            %3.2  = Force!             !     %3.0, e0.6   <val?_>
  void                    Return             l     %3.2
BB4   <- [2]
  void                    StVar              lW    i, %2.1, e0.6
  int$-           %4.1  = Add                d     %2.1, 1L, elided
  val?^ | miss    %4.2  = LdVar              eR    x, e0.6
  val?            %4.3  = Force!             !v    %4.2, e0.6   <val?_>
  lgl$#-          %4.4  = IsType                   %4.3 isA val+   <@?>
  void                    Branch                   %4.4 -> BB5 (if true) | BB14 (if false)
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    i, e0.6
  val?            %5.1  = Force!             !v    %5.0, e0.6   <val?_>
  val?            %5.2  = %5.1
  goto BB6
BB14   <- [4]
  prom-           %14.0 = MkArg                    unboundValue, rir.compile[0x560912dea270]_p1, e0.6
  prom-           %14.1 = %14.0
  goto BB6
BB6   <- [14, 5]
  val?            %6.0  = Phi                      %5.2:BB5, %14.1:BB14
  val?            %6.1  = %6.0
  val?            %6.2  = Extract1_1D        !v    %4.3, %6.1, e0.6   <val?_>
  val?^ | miss    %6.3  = LdVar              eR    x, e0.6
  val?            %6.4  = Force!             !v    %6.3, e0.6   <val?_>
  lgl$#-          %6.5  = IsType                   %6.4 isA val+   <@?>
  void                    Branch                   %6.5 -> BB13 (if true) | BB7 (if false)
BB13   <- [6]
  val?^ | miss    %13.0 = LdVar              eR    p, e0.6
  val?            %13.1 = Force!             !v    %13.0, e0.6   <val?_>
  val?            %13.2 = %13.1
  goto BB8
BB7   <- [6]
  prom-           %7.0  = MkArg                    unboundValue, rir.compile[0x560912dea270]_p0, e0.6
  prom-           %7.1  = %7.0
  goto BB8
BB8   <- [7, 13]
  val?            %8.0  = Phi                      %13.2:BB13, %7.1:BB7
  val?            %8.1  = %8.0
  val?            %8.2  = Extract1_1D        !v    %6.4, %8.1, e0.6   <val?_>
  lgl$#-          %8.3  = IsType                   %8.2 isA val?+
  lgl$#-          %8.4  = IsType                   %6.2 isA val?+
  void                    Branch                   %8.4 -> BB15 (if true) | BB16 (if false)
BB15   <- [8]
  val?+           %15.0 = CastType           d     dn %6.2   <val?_>
  void                    Branch                   %8.3 -> BB17 (if true) | BB18 (if false)
BB16   <- [8]
  void                    Nop                !     
  val?            %16.1 = %6.2
  dr              %16.2 = Typecheck@0x56091228d268[Type#19]
  goto BB9
BB17   <- [15]
  val?+           %17.0 = CastType           d     dn %8.2   <val?_>
  (int|real|complex)+ %17.1 = Add                wed   %15.0, %17.0, elided   <val?_>
  val?^ | miss    %17.2 = LdVar              eR    y, e0.6
  val?            %17.3 = Force!             !v    %17.2, e0.6   <val?_>
  val?^ | miss    %17.4 = LdVar              eR    i, e0.6
  val?            %17.5 = Force!             !v    %17.4, e0.6   <val?_>
  lgl$#-          %17.6 = IsType                   %17.5 isA val?+
  lgl$#-          %17.7 = IsType                   %17.3 isA val?+
  void                    Branch                   %17.7 -> BB19 (if true) | BB20 (if false)
BB18   <- [15]
  void                    Nop                !     
  val?            %18.1 = %8.2
  dr              %18.2 = Typecheck@0x56091228d268[Type#23]
  goto BB9
BB9   <- [16, 18]
  val?^ | miss    %9.0  = Phi                      %16.1:BB16, %18.1:BB18
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %16.2:BB16, %18.2:BB18
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x560912f9a330+512: [1L, 11L, %4.1, %6.2, %8.2], env=e0.6
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB19   <- [17]
  val?+           %19.0 = CastType           d     dn %17.3   <val?_>
  void                    Branch                   %17.6 -> BB21 (if true) | BB22 (if false)
BB20   <- [17]
  void                    Nop                !     
  val?            %20.1 = %17.3
  dr              %20.2 = Typecheck@0x56091228d268[Type#25]
  goto BB11
BB21   <- [19]
  val?+           %21.0 = CastType           d     dn %17.5   <val?_>
  val?+           %21.1 = Subassign1_1D      wed   %17.1, %19.0, %21.0, elided
  void                    StVar              lW    y, %21.1, e0.6
  val?^ | miss    %21.3 = LdVar              eR    i, e0.6
  val?            %21.4 = Force!             !v    %21.3, e0.6   <val?_>
  void                    StVar              lW    p, %21.4, e0.6
  int$-           %21.6 = %4.1
  goto BB2
BB22   <- [19]
  void                    Nop                !     
  val?            %22.1 = %17.5
  dr              %22.2 = Typecheck@0x56091228d268[Type#26]
  goto BB11
BB11   <- [20, 22]
  val?^ | miss    %11.0 = Phi                      %20.1:BB20, %22.1:BB22
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %20.2:BB20, %22.2:BB22
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x560912f9a330+547: [1L, 11L, %4.1, %17.1, %17.3, %17.5], env=e0.6
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    p, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ rir.compile[0x560912dea270]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
