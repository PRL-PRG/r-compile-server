
┌──────────────────────────────────────────────────────────────────────────────┐
│ simplify2array[0x56034b7371c0]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
simplify2array[0x56034b7371c0]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     x=%0.1, higher=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.3  = Force!<lazy>       !vr   %0.1,    <vec+>
  (int|real)$-    %0.4  = CallSafeBuiltin    wed   length(%0.3)    <int$->
  lgl$#-          %0.5  = IsType                   %0.4 isA int$-
  void                    Branch                   %0.5 -> BB104 (if true) | BB105 (if false)
BB104   <- [0]
  int$-           %104.0 = CastType           d     dn %0.4
  lgl$-           %104.1 = Not                d     %104.0, elided
  lgl$#-          %104.2 = CheckTrueFalse     e     %104.1
  void                    Branch                   %104.2 -> BB102 (if true) | BB3 (if false)
BB105   <- [0]
  fs              %105.0 = FrameState         R     0x56034ab33ce0+91: [%0.4], env=e0.2
  void                    Deopt              !v    %105.0, Typecheck@0x560349f39858[Type#2], %0.4
BB102   <- [104]
  void                    Visible            v     
  val+            %102.1 = %0.3
  goto BB12
BB3   <- [104]
  prom-           %3.0  = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p4 (!refl), e0.2
  val?            %3.1  = StaticCall         !v    unknown--fromConstant[0x560349681710](%3.0) from function(x, use.names=TRUE) <(rir::DispatchTab|... { 0 } e0.2   <int+>
  val?            %3.2  = StaticCall         !v    unique[0x56034aacc710](%3.1) { 0 } e0.2   <int$->
  lgl$#-          %3.3  = IsType                   %3.2 isA int$-
  void                    Branch                   %3.3 -> BB106 (if true) | BB107 (if false)
BB12   <- [102, 11]
  val?            %12.0 = Phi                      %11.2:BB11, %102.1:BB102
  val?            %12.1 = %12.0
  void                    Return             l     %12.1
BB106   <- [3]
  int$-           %106.0 = CastType           d     dn %3.2
  void                    StVar              lW    common.len, %106.0, e0.2
  lgl$-           %106.2 = Eq                 d     %106.0, 1L, elided   <lgl$->
  lgl$#-          %106.3 = CheckTrueFalse     e     %106.2
  void                    Branch                   %106.3 -> BB84 (if true) | BB8 (if false)
BB107   <- [3]
  fs              %107.0 = FrameState         R     0x56034ab33ce0+215: [<blt length>, %3.2], env=e0.2
  void                    Deopt              !v    %107.0, Typecheck@0x560349f39858[Type#9], %3.2   !
BB84   <- [106]
  val?^ | miss    %84.0 = LdVar              eR    length, e0.2
  lgl$#-          %84.1 = Identical                <blt length>, %84.0   <true>
  void                    Branch                   %84.1 -> BB108 (if true) | BB109 (if false)
BB8   <- [106]
  lgl$-           %8.0  = Gt                 d     %106.0, 1L, elided   <lgl$->
  lgl$#-          %8.1  = CheckTrueFalse     e     %8.0
  void                    Branch                   %8.1 -> BB13 (if true) | BB9 (if false)
BB108   <- [84]
  val?^ | miss    %108.0 = LdVar              eR    x, e0.2
  val?            %108.1 = Force!<wrapped>    !v    %108.0, e0.2   <vec+>
  lgl$#-          %108.2 = IsType                   %108.1 isA val?+
  void                    Branch                   %108.2 -> BB112 (if true) | BB113 (if false)
BB109   <- [84]
  void                    Nop                !     
  lgl$#-          %109.1 = %84.1
  dr              %109.2 = DeadBranchReached@0x560349f39858[Test#20]
  goto BB6
BB13   <- [8]
  val?^ | miss    %13.0 = LdVar              eR    length, e0.2
  lgl$#-          %13.1 = Identical                <blt length>, %13.0   <true>
  void                    Branch                   %13.1 -> BB110 (if true) | BB111 (if false)
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    x, e0.2
  void                    Visible            v     
  val?            %9.2  = Force!             !     %9.0, e0.2   <val?_>
  val?            %9.3  = %9.2
  goto BB10
BB112   <- [108]
  val?+           %112.0 = CastType           d     dn %108.1   <vec+>
  (int|real)$-    %112.1 = CallSafeBuiltin    wed   length(%112.0)    <int$->
  lgl$#-          %112.2 = IsType                   %112.1 isA int$-
  void                    Branch                   %112.2 -> BB116 (if true) | BB117 (if false)
BB113   <- [108]
  fs              %113.0 = FrameState         R     0x56034ab33ce0+2333: [<blt length>, %108.1], env=e0.2
  void                    Deopt              !v    %113.0, Typecheck@0x560349f39858[Type#113], %108.1   !
BB6   <- [109, 111]
  val?^ | miss    %6.0  = Phi                      %109.1:BB109, %111.1:BB111
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %109.2:BB109, %111.2:BB111
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x56034ab33ce0+231: [<blt length>, %106.0], env=e0.2
  void                    Deopt              !v    %6.4, %6.3, %6.1   !
BB110   <- [13]
  val?^ | miss    %110.0 = LdVar              eR    x, e0.2
  val?            %110.1 = Force!<wrapped>    !v    %110.0, e0.2   <vec->
  lgl$#-          %110.2 = IsType                   %110.1 isA val?-
  void                    Branch                   %110.2 -> BB114 (if true) | BB115 (if false)
BB111   <- [13]
  void                    Nop                !     
  lgl$#-          %111.1 = %13.1
  dr              %111.2 = DeadBranchReached@0x560349f39858[Test#2]
  goto BB6
BB10   <- [9, 52]
  val?            %10.0 = Phi                      %9.3:BB9, %52.2:BB52
  val?            %10.1 = %10.0
  val?            %10.2 = %10.1
  goto BB11
BB116   <- [112]
  int$-           %116.0 = CastType           d     dn %112.1
  void                    StVar              lW    n, %116.0, e0.2
  val?^ | miss    %116.2 = LdVar              eR    unlist, e0.2
  lgl$#-          %116.3 = Identical                %116.2, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Branch                   %116.3 -> BB120 (if true) | BB121 (if false)
BB117   <- [112]
  fs              %117.0 = FrameState         R     0x56034ab33ce0+2355: [%112.1], env=e0.2
  void                    Deopt              !v    %117.0, Typecheck@0x560349f39858[Type#114], %112.1   !
BB114   <- [110]
  val?-           %114.0 = CastType           d     dn %110.1   <vec->
  (int|real)$-    %114.1 = CallSafeBuiltin    wed   length(%114.0)    <int$->
  lgl$#-          %114.2 = IsType                   %114.1 isA int$-
  void                    Branch                   %114.2 -> BB118 (if true) | BB119 (if false)
BB115   <- [110]
  fs              %115.0 = FrameState         R     0x56034ab33ce0+443: [<blt length>, %110.1], env=e0.2
  void                    Deopt              !v    %115.0, Typecheck@0x560349f39858[Type#19], %110.1   !
BB11   <- [96, 10, 132]
  val?            %11.0 = Phi                      %10.2:BB10, %96.3:BB96, %132.2:BB132
  val?            %11.1 = %11.0
  val?            %11.2 = %11.1
  goto BB12
BB120   <- [116]
  prom-           %120.0 = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p15, e0.2
  ct              %120.1 = PushContext        lCL   %120.0, false, unlist(x, recursive=FALSE), function(x, recursive=TRUE, use.names=TRUE) <(|..., e0.2
  val?^           %120.2 = CastType                 up %120.0
  env             e120.3 = MkEnv              l     x=%120.2, recursive=false, use.names(miss)=true, parent=R_BaseNamespace, context 1
  cls             %120.4 = MkCls                    unlist@127, e120.3
  cls             %120.5 = MkCls                    unlist>URapply@148, e120.3
  val?            %120.6 = Force!<lazy>       !vL   %120.2, e120.3   <(str|vec)+>
  val?            %120.7 = CallBuiltin        !v    islistfactor(%120.6, false) e120.3
  lgl$#-          %120.8 = CheckTrueFalse     we    %120.7
  void                    Branch                   %120.8 -> BB98 (if true) | BB91 (if false)
BB121   <- [116]
  fs              %121.0 = FrameState         R     0x56034ab33ce0+2369: [], env=e0.2
  void                    Deopt              !v    %121.0, CallTarget@0x560349f39858[Call#40], %116.2   !
BB118   <- [114]
  int$-           %118.0 = CastType           d     dn %114.1
  void                    StVar              lW    n, %118.0, e0.2
  val?^ | miss    %118.2 = LdVar              eR    unlist, e0.2
  lgl$#-          %118.3 = Identical                %118.2, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Branch                   %118.3 -> BB130 (if true) | BB131 (if false)
BB119   <- [114]
  fs              %119.0 = FrameState         R     0x56034ab33ce0+465: [%114.1], env=e0.2
  void                    Deopt              !v    %119.0, Typecheck@0x560349f39858[Type#20], %114.1   !
BB98   <- [120]
  val?^ | miss    %98.0 = LdVar              eR    recursive, e120.3
  val?            %98.1 = Force!             !v    %98.0, e120.3   <val?_>
  lgl$#-          %98.2 = CheckTrueFalse     we    %98.1
  void                    Branch                   %98.2 -> BB101 (if true) | BB99 (if false)
BB91   <- [120]
  val?^ | miss    %91.0 = LdVar              eR    x, e120.3
  val?            %91.1 = Force!<wrapped>    !v    %91.0, e120.3   <(str|vec)+>
  val?^ | miss    %91.2 = LdVar              eR    recursive, e120.3
  val?            %91.3 = Force!<wrapped>    !v    %91.2, e120.3   <lgl$->
  val?^ | miss    %91.4 = LdVar              eR    use.names, e120.3
  val?            %91.5 = Force!<lazy>       !v    %91.4, e120.3   <lgl$->
  val?            %91.6 = CallBuiltin        !v    unlist(%91.1, %91.3, %91.5) e120.3
  val?            %91.7 = PopContext         C     %91.6, %120.1   <(int|str)+>
  void                    StVar              lW    r, %91.7, e0.2
  lgl$#-          %91.9 = IsType                   %91.7 isA val?+
  val?^ | miss    %91.10 = LdVar              eR    length, e0.2
  lgl$#-          %91.11 = Identical                <blt length>, %91.10   <true>
  void                    Branch                   %91.11 -> BB122 (if true) | BB123 (if false)
BB130   <- [118]
  val?^ | miss    %130.0 = LdVar              eR    x, e0.2
  val?            %130.1 = Force!<wrapped>    !v    %130.0, e0.2   <vec->
  prom-           %130.2 = MkArg                    %130.1, simplify2array[0x56034b7371c0]_p5 (!refl), 
  val?            %130.3 = StaticCall         !v    unlist[0x56034aaccea0](%130.2, false, false) { 0 1n 2n } e0.2   <lgl->
  void                    StVar              lW    r, %130.3, e0.2
  val?^ | miss    %130.5 = LdVar              eR    higher, e0.2
  val?            %130.6 = Force!<lazy>       !v    %130.5, e0.2   <lgl$->
  lgl$-           %130.7 = AsLogical          e     %130.6
  lgl$#-          %130.8 = Identical                %130.7, false
  lgl$-           %130.9 = AsLogical                %130.7
  lgl$#-          %130.10 = Identical                %130.9, false
  void                    Branch                   %130.8 -> BB23 (if true) | BB20 (if false)
BB131   <- [118]
  fs              %131.0 = FrameState         R     0x56034ab33ce0+479: [], env=e0.2
  void                    Deopt              !v    %131.0, CallTarget@0x560349f39858[Call#7], %118.2   !
BB101   <- [98]
  void                    Nop                !     
  cls             %101.1 = %120.5
  goto BB100
BB99   <- [98]
  void                    Nop                !     
  cls             %99.1 = %120.4
  goto BB100
BB122   <- [91]
  val             %122.0 = ChkMissing         e     %91.7
  void                    Branch                   %91.9 -> BB124 (if true) | BB125 (if false)
BB123   <- [91]
  void                    Nop                !     
  lgl$#-          %123.1 = %91.11
  dr              %123.2 = DeadBranchReached@0x560349f39858[Test#21]
  goto BB92
BB23   <- [130]
  void                    Branch                   %130.10 -> BB83 (if true) | BB24 (if false)
BB20   <- [130]
  val?^ | miss    %20.0 = LdVar              eR    length, e0.2
  lgl$#-          %20.1 = Identical                <blt length>, %20.0   <@?>
  void                    Branch                   %20.1 -> BB22 (if true) | BB21 (if false)
BB100   <- [101, 99]
  fs              %100.0 = FrameState         R     0x56034ab33ce0+2414: [], env=e0.2
  cls             %100.1 = Phi                      %99.1:BB99, %101.1:BB101
  cls             %100.2 = %100.1
  void                    StVar              lW    URapply, %100.2, e120.3
  (cls|spec|blt)  %100.4 = LdFun              !v    unique, e120.3
  fs              %100.5 = FrameState         R     0x56034af09740+178: [%100.4], env=e120.3, next=%100.0
  void                    Deopt              !v    %100.5, DeadCall@0x56034ab790b0[Call#0], %100.4   !
BB124   <- [122]
  val?+           %124.0 = CastType           d     dn %91.7   <(int|str)+>
  (int|real)$-    %124.1 = CallSafeBuiltin    wed   length(%124.0)    <int$->
  lgl$#-          %124.2 = IsType                   %124.1 isA int$-
  void                    Branch                   %124.2 -> BB126 (if true) | BB127 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?            %125.1 = %91.7
  dr              %125.2 = Typecheck@0x560349f39858[Type#116]
  goto BB92
BB92   <- [123, 125]
  val?^ | miss    %92.0 = Phi                      %123.1:BB123, %125.1:BB125
  val?^ | miss    %92.1 = %92.0
  dr              %92.2 = Phi                      %123.2:BB123, %125.2:BB125
  dr              %92.3 = %92.2
  fs              %92.4 = FrameState         R     0x56034ab33ce0+2428: [], env=e0.2
  void                    Deopt              !v    %92.4, %92.3, %92.1   !
BB83   <- [23]
  void                    Nop                !     
  lgl$-           %83.1 = %130.9
  goto BB31
BB24   <- [23]
  val?^ | miss    %24.0 = LdVar              eR    is.numeric, e0.2
  lgl$#-          %24.1 = Identical                <blt is.numeric>, %24.0   <@?>
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB22   <- [20]
  (cls|spec|blt)  %22.0 = LdFun              !v    unique, e0.2
  fs              %22.1 = FrameState         R     0x56034ab33ce0+633: [%130.7, <blt length>, %22.0], env=e0.2
  void                    Deopt              !v    %22.1, DeadCall@0x560349f39858[Call#11], %22.0   !
BB21   <- [20]
  (cls|spec|blt)  %21.0 = LdFun              !v    length, e0.2
  fs              %21.1 = FrameState         R     0x56034ab33ce0+596: [%130.7, %21.0], env=e0.2
  void                    Deopt              !v    %21.1, DeadCall@0x560349f39858[Call#8], %21.0   !
BB126   <- [124]
  int$-           %126.0 = CastType           d     dn %124.1
  val?^ | miss    %126.1 = LdVar              eR    n, e0.2
  lgl$#-          %126.2 = IsType                   %126.1 isA int$-
  void                    Branch                   %126.2 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  void                    Nop                !     
  (int|real)$-    %127.1 = %124.1
  dr              %127.2 = Typecheck@0x560349f39858[Type#119]
  goto BB94
BB31   <- [83, 136]
  lgl$-           %31.0 = Phi                      %136.3:BB136, %83.1:BB83
  lgl$-           %31.1 = %31.0
  lgl$-           %31.2 = AsLogical                %31.1
  lgl$#-          %31.3 = Identical                %31.2, false
  void                    Branch                   %31.3 -> BB82 (if true) | BB32 (if false)
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    c.dim, e0.2
  val?            %26.1 = Force!             !v    %26.0, e0.2   <val?_>
  lgl$#-          %26.2 = IsType                   %26.1 isA val?+
  void                    Branch                   %26.2 -> BB134 (if true) | BB135 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    is.numeric, e0.2
  fs              %25.1 = FrameState         R     0x56034ab33ce0+747: [%130.9, %25.0], env=e0.2
  void                    Deopt              !v    %25.1, DeadCall@0x560349f39858[Call#13], %25.0   !
BB128   <- [126]
  int$-           %128.0 = CastType           d     dn %126.1
  lgl$-           %128.1 = Eq                 d     %126.0, %128.0, elided   <lgl$->
  lgl$#-          %128.2 = CheckTrueFalse     e     %128.1
  void                    Branch                   %128.2 -> BB97 (if true) | BB96 (if false)
BB129   <- [126]
  void                    Nop                !     
  val?^ | miss    %129.1 = %126.1
  dr              %129.2 = Typecheck@0x560349f39858[Type#120]
  goto BB94
BB94   <- [127, 129, 133]
  val?^ | miss    %94.0 = Phi                      %127.1:BB127, %129.1:BB129, %133.1:BB133
  val?^ | miss    %94.1 = %94.0
  dr              %94.2 = Phi                      %127.2:BB127, %129.2:BB129, %133.2:BB133
  dr              %94.3 = %94.2
  fs              %94.4 = FrameState         R     0x56034ab33ce0+2519: [%124.1], env=e0.2
  void                    Deopt              !v    %94.4, %94.3, %94.1   !
BB82   <- [31]
  void                    Nop                !     
  lgl$-           %82.1 = %31.2
  goto BB43
BB32   <- [31]
  val?^ | miss    %32.0 = LdVar              eR    prod, e0.2
  lgl$#-          %32.1 = Identical                <blt prod>, %32.0   <@?>
  void                    Branch                   %32.1 -> BB34 (if true) | BB33 (if false)
BB134   <- [26]
  val?+           %134.0 = CastType           d     dn %26.1   <val?_>
  val?            %134.1 = Extract2_1D        wed   %134.0, 1L, elided   <val?_>
  void                    StVar              lW    c.dim, %134.1, e0.2
  lgl$#-          %134.3 = IsType                   %134.1 isA val?+
  void                    Branch                   %134.3 -> BB136 (if true) | BB137 (if false)
BB135   <- [26]
  fs              %135.0 = FrameState         R     0x56034ab33ce0+788: [%130.9, <blt is.numeric>, %26.1], env=e0.2
  void                    Deopt              !v    %135.0, Typecheck@0x560349f39858[Type#36], %26.1   !
BB97   <- [128]
  lgl$#-          %97.0 = IsType                   %122.0 isA val?~+ | miss
  void                    Branch                   %97.0 -> BB132 (if true) | BB133 (if false)
BB96   <- [128]
  val?^ | miss    %96.0 = LdVar              eR    x, e0.2
  void                    Visible            v     
  val?            %96.2 = Force!             !     %96.0, e0.2   <val?_>
  val?            %96.3 = %96.2
  goto BB11
BB43   <- [82, 152]
  lgl$-           %43.0 = Phi                      %152.5:BB152, %82.1:BB82
  lgl$-           %43.1 = %43.0
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB59 (if true) | BB46 (if false)
BB34   <- [32]
  val?^ | miss    %34.0 = LdVar              eR    c, e0.2
  lgl$#-          %34.1 = Identical                <blt c>, %34.0   <@?>
  void                    Branch                   %34.1 -> BB36 (if true) | BB35 (if false)
BB33   <- [32]
  (cls|spec|blt)  %33.0 = LdFun              !v    prod, e0.2
  fs              %33.1 = FrameState         R     0x56034ab33ce0+907: [%31.2, %33.0], env=e0.2
  void                    Deopt              !v    %33.1, DeadCall@0x560349f39858[Call#14], %33.0   !
BB136   <- [134]
  val?+           %136.0 = CastType           d     dn %134.1   <val?_>
  lgl$#-          %136.1 = CallSafeBuiltin    wed   is.numeric(%136.0)    <val?_>
  lgl$-           %136.2 = LAnd                     %130.9, %136.1
  lgl$-           %136.3 = %136.2
  goto BB31
BB137   <- [134]
  fs              %137.0 = FrameState         R     0x56034ab33ce0+848: [%130.9, <blt is.numeric>, %134.1], env=e0.2
  void                    Deopt              !v    %137.0, Typecheck@0x560349f39858[Type#37], %134.1   !
BB132   <- [97]
  val+            %132.0 = CastType           d     dn %122.0   <(int|str)+>
  void                    Visible            v     
  val+            %132.2 = %132.0
  goto BB11
BB133   <- [97]
  void                    Nop                !     
  val             %133.1 = %122.0
  dr              %133.2 = Typecheck@0x560349f39858[Type#123]
  goto BB94
BB59   <- [43]
  val?^ | miss    %59.0 = LdVar              eR    dimnames, e0.2
  lgl$#-          %59.1 = Identical                <blt dimnames>, %59.0   <@?>
  void                    Branch                   %59.1 -> BB61 (if true) | BB60 (if false)
BB46   <- [43]
  val?^ | miss    %46.0 = LdVar              eR    prod, e0.2
  lgl$#-          %46.1 = Identical                <blt prod>, %46.0   <true>
  void                    Branch                   %46.1 -> BB140 (if true) | BB141 (if false)
BB36   <- [34]
  val?^ | miss    %36.0 = LdVar              eR    c.dim, e0.2
  val?            %36.1 = Force!             !v    %36.0, e0.2   <val?_>
  val?^ | miss    %36.2 = LdVar              eR    n, e0.2
  val?            %36.3 = Force!             !v    %36.2, e0.2   <val?_>
  lgl$#-          %36.4 = IsType                   %36.3 isA val?+
  lgl$#-          %36.5 = IsType                   %36.1 isA val?+
  void                    Branch                   %36.5 -> BB144 (if true) | BB145 (if false)
BB35   <- [34]
  (cls|spec|blt)  %35.0 = LdFun              !v    c, e0.2
  fs              %35.1 = FrameState         R     0x56034ab33ce0+967: [%31.2, <blt prod>, %35.0], env=e0.2
  void                    Deopt              !v    %35.1, DeadCall@0x560349f39858[Call#16], %35.0   !
BB61   <- [59]
  val?^ | miss    %61.0 = LdVar              eR    x, e0.2
  val?            %61.1 = Force!             !v    %61.0, e0.2   <val?_>
  lgl$#-          %61.2 = IsType                   %61.1 isA val?+
  void                    Branch                   %61.2 -> BB138 (if true) | BB139 (if false)
BB60   <- [59]
  (cls|spec|blt)  %60.0 = LdFun              !v    dimnames, e0.2
  fs              %60.1 = FrameState         R     0x56034ab33ce0+1624: [%60.0], env=e0.2
  void                    Deopt              !v    %60.1, DeadCall@0x560349f39858[Call#27], %60.0   !
BB140   <- [46]
  val?^ | miss    %140.0 = LdVar              eR    c, e0.2
  lgl$#-          %140.1 = Identical                <blt c>, %140.0   <true>
  void                    Branch                   %140.1 -> BB148 (if true) | BB149 (if false)
BB141   <- [46]
  void                    Nop                !     
  lgl$#-          %141.1 = %46.1
  dr              %141.2 = DeadBranchReached@0x560349f39858[Test#10]
  goto BB44
BB144   <- [36]
  val?+           %144.0 = CastType           d     dn %36.1   <val?_>
  void                    Branch                   %36.4 -> BB146 (if true) | BB147 (if false)
BB145   <- [36]
  void                    Nop                !     
  val?            %145.1 = %36.1
  dr              %145.2 = Typecheck@0x560349f39858[Type#44]
  goto BB37
BB138   <- [61]
  val?+           %138.0 = CastType           d     dn %61.1   <val?_>
  val?            %138.1 = Extract2_1D        wed   %138.0, 1L, elided   <val?_>
  val?            %138.2 = CallBuiltin        !v    dimnames(%138.1) e0.2   <val?_>
  lgl$-           %138.3 = Is                       %138.2, NULL
  void                    StVar              lW    n1, %138.2, e0.2
  void                    StVar              lW    iN1, %138.3, e0.2
  val?^ | miss    %138.6 = LdVar              eR    names, e0.2
  lgl$#-          %138.7 = Identical                <blt names>, %138.6   <@?>
  void                    Branch                   %138.7 -> BB65 (if true) | BB64 (if false)
BB139   <- [61]
  fs              %139.0 = FrameState         R     0x56034ab33ce0+1665: [<blt dimnames>, %61.1], env=e0.2
  void                    Deopt              !v    %139.0, Typecheck@0x560349f39858[Type#80], %61.1   !
BB148   <- [140]
  val?^ | miss    %148.0 = LdVar              eR    common.len, e0.2
  lgl$#-          %148.1 = IsType                   %148.0 isA int$-
  void                    Branch                   %148.1 -> BB150 (if true) | BB151 (if false)
BB149   <- [140]
  void                    Nop                !     
  lgl$#-          %149.1 = %140.1
  dr              %149.2 = DeadBranchReached@0x560349f39858[Test#11]
  goto BB44
BB44   <- [141, 149, 151, 155]
  val?^ | miss    %44.0 = Phi                      %141.1:BB141, %149.1:BB149, %151.1:BB151, %155.1:BB155
  val?^ | miss    %44.1 = %44.0
  dr              %44.2 = Phi                      %141.2:BB141, %149.2:BB149, %151.2:BB151, %155.2:BB155
  dr              %44.3 = %44.2
  fs              %44.4 = FrameState         R     0x56034ab33ce0+1191: [%43.1], env=e0.2
  void                    Deopt              !v    %44.4, %44.3, %44.1   !
BB146   <- [144]
  val?+           %146.0 = CastType           d     dn %36.3   <val?_>
  val+            %146.1 = CallSafeBuiltin    wed   c(%144.0, %146.0)    <val?_>
  void                    StVar              lW    d, %146.1, e0.2
  (real|complex)$- %146.3 = CallSafeBuiltin    wed   prod(%146.1)    <val?_>
  val?^ | miss    %146.4 = LdVar              eR    length, e0.2
  lgl$#-          %146.5 = Identical                <blt length>, %146.4   <@?>
  void                    Branch                   %146.5 -> BB40 (if true) | BB39 (if false)
BB147   <- [144]
  void                    Nop                !     
  val?            %147.1 = %36.3
  dr              %147.2 = Typecheck@0x560349f39858[Type#45]
  goto BB37
BB37   <- [145, 147]
  val?^ | miss    %37.0 = Phi                      %145.1:BB145, %147.1:BB147
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %145.2:BB145, %147.2:BB147
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x56034ab33ce0+1027: [%31.2, <blt prod>, <blt c>, %36.1, %36.3], env=e0.2
  void                    Deopt              !v    %37.4, %37.3, %37.1   !
BB65   <- [138]
  val?^ | miss    %65.0 = LdVar              eR    x, e0.2
  val?            %65.1 = Force!             !v    %65.0, e0.2   <val?_>
  lgl$#-          %65.2 = IsType                   %65.1 isA val?+
  void                    Branch                   %65.2 -> BB142 (if true) | BB143 (if false)
BB64   <- [138]
  (cls|spec|blt)  %64.0 = LdFun              !v    names, e0.2
  fs              %64.1 = FrameState         R     0x56034ab33ce0+1789: [%64.0], env=e0.2
  void                    Deopt              !v    %64.1, DeadCall@0x560349f39858[Call#28], %64.0   !
BB150   <- [148]
  int$-           %150.0 = CastType           d     dn %148.0
  val?^ | miss    %150.1 = LdVar              eR    n, e0.2
  lgl$#-          %150.2 = IsType                   %150.1 isA int$-
  void                    Branch                   %150.2 -> BB154 (if true) | BB155 (if false)
BB151   <- [148]
  void                    Nop                !     
  val?^ | miss    %151.1 = %148.0
  dr              %151.2 = Typecheck@0x560349f39858[Type#57]
  goto BB44
BB40   <- [146]
  val?^ | miss    %40.0 = LdVar              eR    r, e0.2
  val?            %40.1 = Force!             !v    %40.0, e0.2   <val?_>
  lgl$#-          %40.2 = IsType                   %40.1 isA val?+
  void                    Branch                   %40.2 -> BB152 (if true) | BB153 (if false)
BB39   <- [146]
  (cls|spec|blt)  %39.0 = LdFun              !v    length, e0.2
  fs              %39.1 = FrameState         R     0x56034ab33ce0+1115: [%31.2, %146.3, %39.0], env=e0.2
  void                    Deopt              !v    %39.1, DeadCall@0x560349f39858[Call#17], %39.0   !
BB142   <- [65]
  val?+           %142.0 = CastType           d     dn %65.1   <val?_>
  val+            %142.1 = CallSafeBuiltin    wed   names(%142.0)    <val?_>
  void                    StVar              lW    n2, %142.1, e0.2
  val?^ | miss    %142.3 = LdVar              eR    iN1, e0.2
  val?            %142.4 = Force!             !v    %142.3, e0.2   <val?_>
  lgl$-           %142.5 = AsLogical          e     %142.4
  lgl$#-          %142.6 = Identical                %142.5, false
  void                    Branch                   %142.6 -> BB81 (if true) | BB68 (if false)
BB143   <- [65]
  fs              %143.0 = FrameState         R     0x56034ab33ce0+1830: [<blt names>, %65.1], env=e0.2
  void                    Deopt              !v    %143.0, Typecheck@0x560349f39858[Type#84], %65.1   !
BB154   <- [150]
  int$-           %154.0 = CastType           d     dn %150.1
  int-            %154.1 = CallSafeBuiltin    wed   c(%150.0, %154.0)    <int->
  void                    StVar              lW    d, %154.1, e0.2
  real$-          %154.3 = CallSafeBuiltin    wed   prod(%154.1)    <real$->
  val?^ | miss    %154.4 = LdVar              eR    length, e0.2
  lgl$#-          %154.5 = Identical                <blt length>, %154.4   <true>
  void                    Branch                   %154.5 -> BB156 (if true) | BB157 (if false)
BB155   <- [150]
  void                    Nop                !     
  val?^ | miss    %155.1 = %150.1
  dr              %155.2 = Typecheck@0x560349f39858[Type#58]
  goto BB44
BB152   <- [40]
  val?+           %152.0 = CastType           d     dn %40.1   <val?_>
  real$-          %152.1 = CallSafeBuiltin    wed   length(%152.0)    <val?_>
  lgl$-           %152.2 = Eq                 d     %146.3, %152.1, elided   <val?_>
  lgl$-           %152.3 = AsLogical                %152.2
  lgl$-           %152.4 = LAnd                     %31.2, %152.3
  lgl$-           %152.5 = %152.4
  goto BB43
BB153   <- [40]
  fs              %153.0 = FrameState         R     0x56034ab33ce0+1156: [%31.2, %146.3, <blt length>, %40.1], env=e0.2
  void                    Deopt              !v    %153.0, Typecheck@0x560349f39858[Type#49], %40.1   !
BB81   <- [142]
  void                    Nop                !     
  lgl$-           %81.1 = %142.5
  goto BB69
BB68   <- [142]
  val?^ | miss    %68.0 = LdVar              eR    n2, e0.2
  val?            %68.1 = Force!             !v    %68.0, e0.2   <val?_>
  lgl$-           %68.2 = Is                       %68.1, NULL
  lgl$-           %68.3 = AsLogical                %68.2
  lgl$-           %68.4 = LAnd                     %142.5, %68.3
  lgl$-           %68.5 = %68.4
  goto BB69
BB156   <- [154]
  val?^ | miss    %156.0 = LdVar              eR    r, e0.2
  lgl$#-          %156.1 = IsType                   %156.0 isA lgl-
  void                    Branch                   %156.1 -> BB160 (if true) | BB161 (if false)
BB157   <- [154]
  void                    Nop                !     
  lgl$#-          %157.1 = %154.5
  dr              %157.2 = DeadBranchReached@0x560349f39858[Test#12]
  goto BB47
BB69   <- [81, 68]
  lgl$-           %69.0 = Phi                      %68.5:BB68, %81.1:BB81
  lgl$-           %69.1 = %69.0
  lgl$-           %69.2 = Not                d     %69.1, elided
  lgl$#-          %69.3 = CheckTrueFalse     e     %69.2
  void                    Branch                   %69.3 -> BB72 (if true) | BB70 (if false)
BB160   <- [156]
  lgl-            %160.0 = CastType           d     dn %156.0
  (int|real)$-    %160.1 = CallSafeBuiltin    wed   length(%160.0)    <int$->
  lgl$#-          %160.2 = IsType                   %160.1 isA int$-
  void                    Branch                   %160.2 -> BB162 (if true) | BB163 (if false)
BB161   <- [156]
  void                    Nop                !     
  val?^ | miss    %161.1 = %156.0
  dr              %161.2 = Typecheck@0x560349f39858[Type#62]
  goto BB47
BB47   <- [157, 161]
  val?^ | miss    %47.0 = Phi                      %157.1:BB157, %161.1:BB161
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %157.2:BB157, %161.2:BB161
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x56034ab33ce0+1400: [%154.3], env=e0.2
  void                    Deopt              !v    %47.4, %47.3, %47.1   !
BB72   <- [69]
  val?^ | miss    %72.0 = LdVar              eR    c, e0.2
  lgl$#-          %72.1 = Identical                <blt c>, %72.0   <@?>
  void                    Branch                   %72.1 -> BB74 (if true) | BB73 (if false)
BB70   <- [69]
  void                    Nop                !     
  nil-            %70.1 = nil
  goto BB71
BB162   <- [160]
  int$-           %162.0 = CastType           d     dn %160.1
  lgl$-           %162.1 = Eq                 d     %154.3, %162.0, elided   <lgl$->
  lgl$#-          %162.2 = CheckTrueFalse     e     %162.1
  void                    Branch                   %162.2 -> BB53 (if true) | BB51 (if false)
BB163   <- [160]
  void                    Nop                !     
  (int|real)$-    %163.1 = %160.1
  dr              %163.2 = Typecheck@0x560349f39858[Type#63]
  goto BB49
BB74   <- [72]
  val?^ | miss    %74.0 = LdVar              eR    iN1, e0.2
  val?            %74.1 = Force!             !v    %74.0, e0.2   <val?_>
  lgl$#-          %74.2 = CheckTrueFalse     we    %74.1
  void                    Branch                   %74.2 -> BB80 (if true) | BB75 (if false)
BB73   <- [72]
  (cls|spec|blt)  %73.0 = LdFun              !v    c, e0.2
  fs              %73.1 = FrameState         R     0x56034ab33ce0+1955: [%73.0], env=e0.2
  void                    Deopt              !v    %73.1, DeadCall@0x560349f39858[Call#29], %73.0   !
BB71   <- [70, 158]
  val+            %71.0 = Phi                      %70.1:BB70, %158.2:BB158
  val+            %71.1 = %71.0
  void                    StVar              lW    dnam, %71.1, e0.2
  (cls|spec|blt)  %71.3 = LdFun              !v    array, e0.2
  fs              %71.4 = FrameState         R     0x56034ab33ce0+2205: [%71.3], env=e0.2
  void                    Deopt              !v    %71.4, DeadCall@0x560349f39858[Call#38], %71.3   !
BB53   <- [162]
  val?^ | miss    %53.0 = LdVar              eR    array, e0.2
  lgl$#-          %53.1 = Identical                %53.0, function(data=NA, dim=length(data), dimnames=N|...
  void                    Branch                   %53.1 -> BB164 (if true) | BB165 (if false)
BB51   <- [162]
  val?^ | miss    %51.0 = LdVar              eR    x, e0.2
  void                    Visible            v     
  val?            %51.2 = Force!             !     %51.0, e0.2   <val?_>
  val?            %51.3 = %51.2
  goto BB52
BB49   <- [163, 165, 167, 169]
  val?^ | miss    %49.0 = Phi                      %163.1:BB163, %165.1:BB165, %167.1:BB167, %169.1:BB169
  val?^ | miss    %49.1 = %49.0
  dr              %49.2 = Phi                      %163.2:BB163, %165.2:BB165, %167.2:BB167, %169.2:BB169
  dr              %49.3 = %49.2
  fs              %49.4 = FrameState         R     0x56034ab33ce0+1496: [%154.3, %160.1], env=e0.2
  void                    Deopt              !v    %49.4, %49.3, %49.1   !
BB80   <- [74]
  (cls|spec|blt)  %80.0 = LdFun              !v    rep.int, e0.2
  fs              %80.1 = FrameState         R     0x56034ab33ce0+2036: [<blt c>, %80.0], env=e0.2
  void                    Deopt              !v    %80.1, DeadCall@0x560349f39858[Call#34], %80.0   !
BB75   <- [74]
  val?^ | miss    %75.0 = LdVar              eR    n1, e0.2
  val?            %75.1 = Force!             !v    %75.0, e0.2   <val?_>
  val?^ | miss    %75.2 = LdVar              eR    list, e0.2
  lgl$#-          %75.3 = Identical                <blt list>, %75.2   <@?>
  void                    Branch                   %75.3 -> BB77 (if true) | BB76 (if false)
BB164   <- [53]
  val?^ | miss    %164.0 = LdVar              eR    &, e0.2
  lgl$#-          %164.1 = Identical                %164.0, <blt &>
  void                    Branch                   %164.1 -> BB166 (if true) | BB167 (if false)
BB165   <- [53]
  void                    Nop                !     
  val?^ | miss    %165.1 = %53.0
  dr              %165.2 = CallTarget@0x560349f39858[Call#22]
  goto BB49
BB52   <- [51, 170]
  val?            %52.0 = Phi                      %51.3:BB51, %170.2:BB170
  val?            %52.1 = %52.0
  val?            %52.2 = %52.1
  goto BB10
BB77   <- [75]
  val?^ | miss    %77.0 = LdVar              eR    n2, e0.2
  val?            %77.1 = Force!             !v    %77.0, e0.2   <val?_>
  val+            %77.2 = CallSafeBuiltin    wed   list(%77.1)    <val?_>
  lgl$#-          %77.3 = IsType                   %75.1 isA val?+
  void                    Branch                   %77.3 -> BB158 (if true) | BB159 (if false)
BB76   <- [75]
  (cls|spec|blt)  %76.0 = LdFun              !v    list, e0.2
  fs              %76.1 = FrameState         R     0x56034ab33ce0+2101: [<blt c>, %75.1, %76.0], env=e0.2
  void                    Deopt              !v    %76.1, DeadCall@0x560349f39858[Call#37], %76.0   !
BB166   <- [164]
  val?^ | miss    %166.0 = LdVar              eR    names, e0.2
  lgl$#-          %166.1 = Identical                %166.0, <blt names>
  void                    Branch                   %166.1 -> BB168 (if true) | BB169 (if false)
BB167   <- [164]
  void                    Nop                !     
  val?^ | miss    %167.1 = %164.0
  dr              %167.2 = CallTarget@0x560349f39858[Call#23]
  goto BB49
BB158   <- [77]
  val?+           %158.0 = CastType           d     dn %75.1   <val?_>
  val+            %158.1 = CallSafeBuiltin    wed   c(%158.0, %77.2)    <val?_>
  val+            %158.2 = %158.1
  goto BB71
BB159   <- [77]
  fs              %159.0 = FrameState         R     0x56034ab33ce0+2164: [<blt c>, %75.1, %77.2], env=e0.2
  void                    Deopt              !v    %159.0, Typecheck@0x560349f39858[Type#98], %75.1   !
BB168   <- [166]
  val?^ | miss    %168.0 = LdVar              eR    x, e0.2
  val?            %168.1 = Force<wrapped>     !v    %168.0, e0.2   <vec->
  val?            %168.2 = Extract2_1D        !v    %168.1, 1L, e0.2   <lgl+>
  val?            %168.3 = CallBuiltin        !v    names(%168.2) e0.2   <str->
  void                    StVar              lW    n1, %168.3, e0.2
  lgl$-           %168.5 = Is                       %168.3, NULL
  (cls|spec|blt)  %168.6 = LdFun              !v    names, <0x560348a7c470>, e0.2
  prom-           %168.7 = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p12, e0.2
  val?            %168.8 = Call               !v    %168.6(%168.7) e0.2   <nil->
  void                    StVar              lW    n2, %168.8, e0.2
  lgl$-           %168.10 = Is                       %168.8, NULL
  val?            %168.11 = CallBuiltin        !v    &(%168.5, %168.10) e0.2   <lgl$->
  val?            %168.12 = Not                !v    %168.11, e0.2
  lgl$#-          %168.13 = CheckTrueFalse     we    %168.12
  void                    Branch                   %168.13 -> BB58 (if true) | BB54 (if false)
BB169   <- [166]
  void                    Nop                !     
  val?^ | miss    %169.1 = %166.0
  dr              %169.2 = CallTarget@0x560349f39858[Call#24]
  goto BB49
BB58   <- [168]
  (cls|spec|blt)  %58.0 = LdFun              !v    list, <0x560348a905c0>, e0.2
  prom-           %58.1 = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p13, e0.2
  prom-           %58.2 = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p14, e0.2
  val?            %58.3 = Call               !v    %58.0(%58.1, %58.2) e0.2   <vec->
  val?            %58.4 = %58.3
  goto BB55
BB54   <- [168]
  void                    Nop                !     
  nil-            %54.1 = nil
  goto BB55
BB55   <- [58, 54]
  val?            %55.0 = Phi                      %54.1:BB54, %58.4:BB58   <(nil|vec)->
  val?            %55.1 = %55.0
  lgl$#-          %55.2 = IsType                   %55.1 isA val?-
  void                    Branch                   %55.2 -> BB170 (if true) | BB171 (if false)
BB170   <- [55]
  val?-           %170.0 = CastType           d     dn %55.1   <(nil|vec)->
  val+            %170.1 = CallSafeBuiltin    vwed  array(%160.0, %154.1, %170.0)    <lgl+>
  val+            %170.2 = %170.1
  goto BB52
BB171   <- [55]
  prom-           %171.0 = MkArg                    %55.1, simplify2array[0x56034b7371c0]_p8 (!refl), e0.2
  val?~           %171.1 = CastType                 up %171.0
  prom-           %171.2 = MkArg                    %154.1, simplify2array[0x56034b7371c0]_p7 (!refl), e0.2
  val?~           %171.3 = CastType                 up %171.2
  prom-           %171.4 = MkArg                    %160.0, simplify2array[0x56034b7371c0]_p6 (!refl), e0.2
  val?~           %171.5 = CastType                 up %171.4
  fs              %171.6 = FrameState         R     0x56034ab33ce0+1586: [], env=e0.2
  env             e171.7 = (MkEnv)            l     dimnames=%171.1, dim=%171.3, data=%171.5, parent=R_BaseNamespace, context 0
  fs              %171.8 = FrameState         R     0x56034ab6e570+250: [%160.0, %154.1, %55.1], env=e171.7, next=%171.6
  void                    Deopt              !v    %171.8, Typecheck@0x56034a995ec0[Type#10], %55.1   !
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    &, <0x560348a7d270>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p9, e0.0
  prom-           %0.3  = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p11, e0.0
  val?            %0.4  = Call               !v    %0.1(%0.2, %0.3) e0.0   <lgl$->
  void                    Visible            v     
  val?            %0.6  = Not                !     %0.4, e0.0
  lgl$#-          %0.7  = CheckTrueFalse     we    %0.6
  void                    Branch                   %0.7 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  (cls|spec|blt)  %2.0  = LdFun              !     list, <0x560348a905c0>, e0.0
  prom-           %2.1  = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p13, e0.0
  prom-           %2.2  = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p14, e0.0
  val?            %2.3  = Call               !     %2.0(%2.1, %2.2) e0.0   <vec->
  val?            %2.4  = %2.3
  goto BB3
BB4   <- [0]
  void                    Invisible          v     
  nil-            %4.1  = nil
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.1:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    names, <0x560348a7c470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p10, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <str->
  void                    Invisible          v     
  void                    StVar              lW    n1, %0.3, e0.0
  lgl$-           %0.6  = Is                       %0.3, NULL
  void                    Return             l     %0.6
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <vec->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <lgl+>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    names, <0x560348a7c470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, simplify2array[0x56034b7371c0]_p12, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <nil->
  void                    Invisible          v     
  void                    StVar              lW    n2, %0.3, e0.0
  lgl$-           %0.6  = Is                       %0.3, NULL
  void                    Return             l     %0.6
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ simplify2array[0x56034b7371c0]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
