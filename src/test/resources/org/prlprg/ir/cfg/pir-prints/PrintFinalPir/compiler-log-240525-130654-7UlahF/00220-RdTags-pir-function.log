
┌──────────────────────────────────────────────────────────────────────────────┐
│ RdTags[0x56034b75ee80]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
RdTags[0x56034b75ee80]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    lapply, <env 0x56034b0fabc8>
  lgl$#-          %0.2  = Identical                %0.1, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %0.2 -> BB25 (if true) | BB26 (if false)
BB25   <- [0]
  env             e25.0 = MkEnv              l     Rd=%0.0, parent=<env 0x56034b0fabc8>, context 1
  prom-           %25.1 = MkArg                    unboundValue, RdTags[0x56034b75ee80]_p0 (!refl), e25.0
  prom-           %25.2 = MkArg                    unboundValue, RdTags[0x56034b75ee80]_p1, e25.0
  dots-           %25.3 = DotsList           l     "Rd_tag"
  ct              %25.4 = PushContext        lCL   %25.1, %25.2, %25.3, lapply(Rd, attr, "Rd_tag"), function(X, FUN, ...) <(rir::DispatchTable*)0x|..., e25.0
  val?^           %25.5 = CastType                 up %25.2
  val?^           %25.6 = CastType                 up %25.1
  env             e25.7 = MkEnv              l     X=%25.6, FUN=%25.5, ...=%25.3, parent=R_BaseNamespace, context 1
  prom-           %25.8 = MkArg                    unboundValue, RdTags[0x56034b75ee80]_p3, e25.7
  val?            %25.9 = StaticCall         !v    match.fun[0x56034c455050](%25.8) e25.7   <(cls|blt)->
  void                    StVar              lW    FUN, %25.9, e25.7
  val?^ | miss    %25.11 = LdVar              eR    is.vector, e25.7
  lgl$#-          %25.12 = Identical                %25.11, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %25.12 -> BB27 (if true) | BB28 (if false)
BB26   <- [0]
  env             e26.0 = (MkEnv)            l     Rd=%0.0, parent=<env 0x56034b0fabc8>, context 1
  fs              %26.1 = FrameState         R     0x56034b9bb820+0: [], env=e26.0
  void                    Deopt              !v    %26.1, CallTarget@0x56034be5e0b8[Call#0], %0.1
BB27   <- [25]
  val?^ | miss    %27.0 = LdVar              eR    X, e25.7
  val?            %27.1 = Force!<lazy>       !v    %27.0, e25.7   <(int|vec)>
  lgl$#-          %27.2 = CallSafeBuiltin    wed   is.vector(%27.1, "any")    <lgl$->
  lgl$#-          %27.3 = Not                d     %27.2, elided
  void                    Branch                   %27.2 -> BB23 (if true) | BB7 (if false)
BB28   <- [25]
  fs              %28.0 = FrameState         R     0x56034b9bb820+42: [], env=e25.0
  fs              %28.1 = FrameState         R     0x56034ab1f220+46: [], env=e25.7, next=%28.0
  void                    Deopt              !v    %28.1, CallTarget@0x56034aa00540[Call#1], %25.11   !
BB23   <- [27]
  val?^ | miss    %23.0 = LdVar              eR    is.object, e25.7
  lgl$#-          %23.1 = Identical                <blt is.object>, %23.0   <true>
  void                    Branch                   %23.1 -> BB29 (if true) | BB30 (if false)
BB7   <- [27]
  void                    Nop                !     
  lgl$#-          %7.1  = %27.3
  goto BB8
BB29   <- [23]
  val?^ | miss    %29.0 = LdVar              eR    X, e25.7
  val?            %29.1 = Force!<wrapped>    !v    %29.0, e25.7   <(int|vec)+>
  lgl$#-          %29.2 = CallSafeBuiltin    wed   is.object(%29.1)    <lgl$->
  lgl$-           %29.3 = LOr                      %27.3, %29.2
  lgl$-           %29.4 = %29.3
  goto BB8
BB30   <- [23]
  fs              %30.0 = FrameState         R     0x56034b9bb820+42: [], env=e25.0
  fs              %30.1 = FrameState         R     0x56034ab1f220+78: [], env=e25.7, next=%30.0
  prom-           %30.2 = MkArg                    %27.1, RdTags[0x56034b75ee80]_p4 (!refl), e25.7
  val?~           %30.3 = CastType                 up %30.2
  env             e30.4 = (MkEnv)            l     mode(miss)="any", x=%30.3, parent=R_BaseNamespace, context 0
  fs              %30.5 = FrameState         R     0x56034ab3a030+41: [%27.2], env=e30.4, next=%30.1
  void                    Deopt              !v    %30.5, DeadBranchReached@0x56034aa00540[Test#0], %23.1   !
BB8   <- [7, 29]
  lgl$-           %8.0  = Phi                      %29.4:BB29, %7.1:BB7
  lgl$-           %8.1  = %8.0
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1
  void                    Branch                   %8.2 -> BB22 (if true) | BB11 (if false)
BB22   <- [8]
  val?^ | miss    %22.0 = LdVar              eR    as.list, e25.7
  lgl$#-          %22.1 = Identical                %22.0, function(x, ...) <(rir::DispatchTable*)0x56034|...
  void                    Branch                   %22.1 -> BB31 (if true) | BB32 (if false)
BB11   <- [8]
  void                    Nop                !     
  goto BB12
BB31   <- [22]
  val?^ | miss    %31.0 = LdVar              eR    X, e25.7
  val?            %31.1 = Force!<wrapped>    !v    %31.0, e25.7   <vec>
  val?            %31.2 = StaticCall         !v    as.list[0x56034aacc710](%31.1) { 0 } e25.7   <vec>
  void                    StVar              lW    X, %31.2, e25.7
  goto BB12
BB32   <- [22]
  fs              %32.0 = FrameState         R     0x56034b9bb820+42: [], env=e25.0
  fs              %32.1 = FrameState         R     0x56034ab1f220+189: [%8.1], env=e25.7, next=%32.0
  void                    Deopt              !v    %32.1, CallTarget@0x56034aa00540[Call#3], %22.0   !
BB12   <- [11, 31]
  val?^ | miss    %12.0 = LdVar              eR    X, e25.7
  val?            %12.1 = Force!<wrapped>    !v    %12.0, e25.7   <(int|vec)>
  (nil|str)-      %12.2 = Names                    %12.1
  int$-           %12.3 = Length                   %12.1
  vec-            %12.4 = CallSafeBuiltin    wed   vector("list", %12.3) 
  val+            %12.5 = SetNames           e     %12.4, %12.2
  int$#-          %12.6 = 0L
  val+            %12.7 = %12.5
  goto BB13
BB13   <- [12, 14]
  int$-           %13.0 = Phi                      %12.6:BB12, %14.7:BB14
  int$-           %13.1 = %13.0
  val?            %13.2 = Phi                      %12.7:BB12, %14.8:BB14
  val?            %13.3 = %13.2
  int$-           %13.4 = Inc                      %13.1
  lgl$-           %13.5 = Lt                 d     %12.3, %13.4, elided
  lgl$#-          %13.6 = Identical                %13.5, true
  void                    Branch                   %13.6 -> BB15 (if true) | BB14 (if false)
BB15   <- [13]
  val?            %15.0 = PopContext         C     %13.3, %25.4   <vec->
  void                    StVar              lW    res, %15.0, e25.0
  lgl$#-          %15.2 = IsType                   %15.0 isA val?-
  val?^ | miss    %15.3 = LdVar              eR    length, e25.0
  lgl$#-          %15.4 = Identical                <blt length>, %15.3   <true>
  void                    Branch                   %15.4 -> BB33 (if true) | BB34 (if false)
BB14   <- [13]
  void                    StVar              lW    i, %13.4, e25.7
  (cls|spec|blt)  %14.1 = LdFun              !v    FUN, e25.7
  prom-           %14.2 = MkArg                    unboundValue, RdTags[0x56034b75ee80]_p6, e25.7
  (miss|dots)     %14.3 = LdDots             R     , e25.7
  *dots-          %14.4 = ExpandDots               %14.3
  val?            %14.5 = NamedCall          !v    %14.1(%14.2, .xpandDotsTrigger=%14.4) e25.7   <val?>
  val?            %14.6 = SetVecElt          e     %14.5, %13.3, %13.4
  int$-           %14.7 = %13.4
  val?            %14.8 = %14.6
  goto BB13
BB33   <- [15]
  val             %33.0 = ChkMissing         e     %15.0
  void                    Branch                   %15.2 -> BB35 (if true) | BB36 (if false)
BB34   <- [15]
  void                    Nop                !     
  lgl$#-          %34.1 = %15.4
  dr              %34.2 = DeadBranchReached@0x56034be5e0b8[Test#0]
  goto BB16
BB35   <- [33]
  val?-           %35.0 = CastType           d     dn %15.0   <vec->
  (int|real)$-    %35.1 = CallSafeBuiltin    vwed  length(%35.0)    <int$->
  lgl$#-          %35.2 = IsType                   %35.1 isA int$-
  void                    Branch                   %35.2 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  val?            %36.1 = %15.0
  dr              %36.2 = Typecheck@0x56034be5e0b8[Type#2]
  goto BB16
BB16   <- [34, 36]
  val?^ | miss    %16.0 = Phi                      %34.1:BB34, %36.1:BB36
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %34.2:BB34, %36.2:BB36
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x56034b9bb820+56: [], env=e25.0
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB37   <- [35]
  int$-           %37.0 = CastType           d     dn %35.1
  lgl$#-          %37.1 = CheckTrueFalse     e     %37.0
  void                    Branch                   %37.1 -> BB21 (if true) | BB20 (if false)
BB38   <- [35]
  void                    Nop                !     
  (int|real)$-    %38.1 = %35.1
  dr              %38.2 = Typecheck@0x56034be5e0b8[Type#5]
  goto BB18
BB21   <- [37]
  val?^ | miss    %21.0 = LdVar              eR    simplify2array, e25.0
  lgl$#-          %21.1 = Identical                %21.0, function(x, higher=TRUE) <(rir::DispatchTable*|...
  void                    Branch                   %21.1 -> BB39 (if true) | BB40 (if false)
BB20   <- [37]
  (cls|spec|blt)  %20.0 = LdFun              !v    character, e25.0
  fs              %20.1 = FrameState         R     0x56034b9bb820+163: [%20.0], env=e25.0
  void                    Deopt              !v    %20.1, DeadCall@0x56034be5e0b8[Call#2], %20.0   !
BB18   <- [38, 40]
  val?^ | miss    %18.0 = Phi                      %38.1:BB38, %40.1:BB40
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %38.2:BB38, %40.2:BB40
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x56034b9bb820+147: [%35.1], env=e25.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB39   <- [21]
  prom-           %39.0 = MkArg                    unboundValue, RdTags[0x56034b75ee80]_p2 (!refl), e25.0
  val?            %39.1 = Call               !     function(x, higher=TRUE) <(rir::DispatchTable*|...(%39.0, false) e25.0   <str->
  void                    Return             l     %39.1
BB40   <- [21]
  void                    Nop                !     
  val?^ | miss    %40.1 = %21.0
  dr              %40.2 = CallTarget@0x56034be5e0b8[Call#3]
  goto BB18
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Rd, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <blt->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    res, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|vec)>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <(int|vec)>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, RdTags[0x56034b75ee80]_p7, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3

│ RdTags[0x56034b75ee80]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
