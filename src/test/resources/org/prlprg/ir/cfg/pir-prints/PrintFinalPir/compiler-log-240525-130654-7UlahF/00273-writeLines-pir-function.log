
┌──────────────────────────────────────────────────────────────────────────────┐
│ writeLines[0x56034afe1aa0]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2        │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
writeLines[0x56034afe1aa0]
BB0
  val?^           %0.0  = LdArg                    1
  val?~+          %0.1  = LdArg                    0
  val+            %0.2  = Force<lazy>              %0.1,    <str->
  lgl$#-          %0.3  = CallSafeBuiltin    wed   is.character(%0.2)    <lgl$->
  env             e0.4  = MkEnv              l     text=%0.1, con=%0.0, sep(miss)="
", useBytes(miss)=false, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB9 (if false)
BB2   <- [0]
  void                    Nop                !     
  goto BB3
BB9   <- [0]
  val?            %9.0  = Call               !v    function(..., call.=TRUE, domain=NULL) <(rir::|...("can only write character objects") e0.4
  goto BB3
BB3   <- [2, 9]
  val?^ | miss    %3.0  = LdVar              eR    is.character, e0.4
  lgl$#-          %3.1  = Identical                <blt is.character>, %3.0   <true>
  void                    Branch                   %3.1 -> BB10 (if true) | BB11 (if false)
BB10   <- [3]
  val?^ | miss    %10.0 = LdVar              eR    con, e0.4
  val?            %10.1 = Force!<lazy>       !v    %10.0, e0.4   <int$>
  lgl$#-          %10.2 = CallSafeBuiltin    wed   is.character(%10.1)    <lgl$->
  void                    Branch                   %10.2 -> BB8 (if true) | BB6 (if false)
BB11   <- [3]
  fs              %11.0 = FrameState         R     0x56034ab21710+141: [], env=e0.4
  void                    Deopt              !v    %11.0, DeadBranchReached@0x56034afa6db0[Test#1], %3.1   !
BB8   <- [10]
  (cls|spec|blt)  %8.0  = LdFun              !v    file, e0.4
  prom-           %8.1  = MkArg                    unboundValue, writeLines[0x56034afe1aa0]_p2, e0.4
  val?            %8.2  = Call               !v    %8.0(%8.1, "w") e0.4   <val?_>
  void                    StVar              lW    con, %8.2, e0.4
  (cls|spec|blt)  %8.4  = LdFun              !v    on.exit, e0.4
  prom-           %8.5  = MkArg                    unboundValue, writeLines[0x56034afe1aa0]_p3, e0.4
  val?            %8.6  = Call               !v    %8.4(%8.5) e0.4
  goto BB7
BB6   <- [10]
  void                    Nop                !     
  goto BB7
BB7   <- [6, 8]
  val?^ | miss    %7.0  = LdVar              eR    text, e0.4
  val?            %7.1  = Force!<wrapped>    !v    %7.0, e0.4   <str->
  val?^ | miss    %7.2  = LdVar              eR    con, e0.4
  val?            %7.3  = Force!<wrapped>    !v    %7.2, e0.4   <int$>
  val?^ | miss    %7.4  = LdVar              eR    sep, e0.4
  val?            %7.5  = Force!<lazy>       !v    %7.4, e0.4   <str$->
  val?^ | miss    %7.6  = LdVar              eR    useBytes, e0.4
  val?            %7.7  = Force!<lazy>       !v    %7.6, e0.4   <lgl$->
  val?            %7.8  = CallBuiltin        !     writeLines(%7.1, %7.3, %7.5, %7.7) e0.4
  void                    Return             l     %7.8
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    con, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     close, e0.0
  prom-           %0.2  = MkArg                    unboundValue, writeLines[0x56034afe1aa0]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    con, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ writeLines[0x56034afe1aa0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
