
┌──────────────────────────────────────────────────────────────────────────────┐
│ ifelse[0x56034ad14640]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1,SimpleReal1    │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
ifelse[0x56034ad14640]
BB0
  val?^           %0.0  = LdArg                    2
  (real|miss)$~-  %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     test=%0.2, yes=%0.1, no=%0.0, parent=R_BaseNamespace, context 1
  val?            %0.4  = Force!<lazy>       !v    %0.2, e0.3   <lgl+>
  lgl$#-          %0.5  = IsType                   %0.4 isA lgl+
  void                    Branch                   %0.5 -> BB103 (if true) | BB104 (if false)
BB103   <- [0]
  val?^ | miss    %103.0 = LdVar              eR    typeof, e0.3
  lgl$#-          %103.1 = Identical                %103.0, function(x) <(rir::DispatchTable*)0x56034aadd5|...
  void                    Branch                   %103.1 -> BB105 (if true) | BB106 (if false)
BB104   <- [0]
  void                    Nop                !     
  val?            %104.1 = %0.4
  dr              %104.2 = Typecheck@0x56034c3dd630[Type#1]
  goto BB102
BB105   <- [103]
  val?^ | miss    %105.0 = LdVar              eR    test, e0.3
  val?            %105.1 = Force!<wrapped>    !v    %105.0, e0.3   <lgl+>
  str$-           %105.2 = CallSafeBuiltin    wed   typeof(%105.1)    <str$->
  lgl$-           %105.3 = Neq                d     %105.2, "logical", elided   <lgl$->
  lgl$#-          %105.4 = CheckTrueFalse     e     %105.3
  void                    Branch                   %105.4 -> BB101 (if true) | BB5 (if false)
BB106   <- [103]
  void                    Nop                !     
  val?^ | miss    %106.1 = %103.0
  dr              %106.2 = CallTarget@0x56034c3dd630[Call#5]
  goto BB102
BB102   <- [104, 106]
  val?^ | miss    %102.0 = Phi                      %104.1:BB104, %106.1:BB106
  val?^ | miss    %102.1 = %102.0
  dr              %102.2 = Phi                      %104.2:BB104, %106.2:BB106
  dr              %102.3 = %102.2
  fs              %102.4 = FrameState         R     0x560348bf8830+69: [<blt is.atomic>, %0.4], env=e0.3
  void                    Deopt              !v    %102.4, %102.3, %102.1   !
BB101   <- [105]
  (cls|spec|blt)  %101.0 = LdFun              !v    storage.mode<-, e0.3
  fs              %101.1 = FrameState         R     0x560348bf8830+470: ["logical", %101.0], env=e0.3
  void                    Deopt              !v    %101.1, DeadCall@0x56034c3dd630[Call#6], %101.0   !
BB5   <- [105]
  val?^ | miss    %5.0  = LdVar              eR    length, e0.3
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <true>
  void                    Branch                   %5.1 -> BB107 (if true) | BB108 (if false)
BB107   <- [5]
  val?^ | miss    %107.0 = LdVar              eR    test, e0.3
  lgl$#-          %107.1 = IsType                   %107.0 isA lgl~+
  void                    Branch                   %107.1 -> BB109 (if true) | BB110 (if false)
BB108   <- [5]
  void                    Nop                !     
  lgl$#-          %108.1 = %5.1
  dr              %108.2 = DeadBranchReached@0x56034c3dd630[Test#3]
  goto BB3
BB109   <- [107]
  lgl~+           %109.0 = CastType           d     dn %107.0
  lgl+            %109.1 = Force!<wrapped>          %109.0,    <lgl+>
  (int|real)$-    %109.2 = CallSafeBuiltin    wed   length(%109.1)    <int$->
  lgl$#-          %109.3 = IsType                   %109.2 isA int$-
  void                    Branch                   %109.3 -> BB111 (if true) | BB112 (if false)
BB110   <- [107]
  void                    Nop                !     
  val?^ | miss    %110.1 = %107.0
  dr              %110.2 = Typecheck@0x56034c3dd630[Type#19]
  goto BB3
BB3   <- [108, 110]
  val?^ | miss    %3.0  = Phi                      %108.1:BB108, %110.1:BB110
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %108.2:BB108, %110.2:BB110
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x560348bf8830+431: [], env=e0.3
  prom-           %3.5  = MkArg                    %105.1, ifelse[0x56034ad14640]_p6 (!refl), e0.3
  val?~           %3.6  = CastType                 up %3.5
  env             e3.7  = (MkEnv)            l     x=%3.6, parent=R_BaseNamespace, context 0
  fs              %3.8  = FrameState         R     0x56034aadd140+27: [%105.2], env=e3.7, next=%3.4
  void                    Deopt              !v    %3.8, %3.3, %3.1   !
BB111   <- [109]
  int$-           %111.0 = CastType           d     dn %109.2
  lgl$-           %111.1 = Eq                 d     %111.0, 1, elided   <lgl$->
  lgl$-           %111.2 = AsLogical                %111.1
  lgl$#-          %111.3 = Identical                %111.2, false
  void                    Branch                   %111.3 -> BB100 (if true) | BB8 (if false)
BB112   <- [109]
  fs              %112.0 = FrameState         R     0x560348bf8830+624: [%109.2], env=e0.3
  void                    Deopt              !v    %112.0, Typecheck@0x56034c3dd630[Type#20], %109.2   !
BB100   <- [111]
  void                    Nop                !     
  lgl$-           %100.1 = %111.2
  goto BB11
BB8   <- [111]
  val?^ | miss    %8.0  = LdVar              eR    attributes, e0.3
  lgl$#-          %8.1  = Identical                <blt attributes>, %8.0   <@?>
  void                    Branch                   %8.1 -> BB10 (if true) | BB9 (if false)
BB11   <- [100, 10]
  lgl$-           %11.0 = Phi                      %10.4:BB10, %100.1:BB100
  lgl$-           %11.1 = %11.0
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB51 (if true) | BB12 (if false)
BB10   <- [8]
  val?            %10.0 = CallBuiltin        !v    attributes(%109.1) e0.3   <val?_>
  lgl$-           %10.1 = Is                       %10.0, NULL
  lgl$-           %10.2 = AsLogical                %10.1
  lgl$-           %10.3 = LAnd                     %111.2, %10.2
  lgl$-           %10.4 = %10.3
  goto BB11
BB9   <- [8]
  (cls|spec|blt)  %9.0  = LdFun              !v    attributes, e0.3
  fs              %9.1  = FrameState         R     0x560348bf8830+676: [%111.2, %9.0], env=e0.3
  void                    Deopt              !v    %9.1, DeadCall@0x56034c3dd630[Call#8], %9.0   !
BB51   <- [11]
  val?^ | miss    %51.0 = LdVar              eR    is.na, e0.3
  lgl$#-          %51.1 = Identical                <blt is.na>, %51.0   <@?>
  void                    Branch                   %51.1 -> BB53 (if true) | BB52 (if false)
BB12   <- [11]
  void                    Nop                !     
  goto BB13
BB53   <- [51]
  val?^ | miss    %53.0 = LdVar              eR    test, e0.3
  val?            %53.1 = Force!             !v    %53.0, e0.3   <val?_>
  lgl$#-          %53.2 = IsType                   %53.1 isA val?+
  void                    Branch                   %53.2 -> BB119 (if true) | BB120 (if false)
BB52   <- [51]
  (cls|spec|blt)  %52.0 = LdFun              !v    is.na, e0.3
  fs              %52.1 = FrameState         R     0x560348bf8830+790: [%52.0], env=e0.3
  void                    Deopt              !v    %52.1, DeadCall@0x56034c3dd630[Call#9], %52.0   !
BB13   <- [12, 64]
  val?^ | miss    %13.0 = LdVar              eR    test, e0.3
  val?            %13.1 = Force!<wrapped>    !v    %13.0, e0.3   <lgl+>
  void                    StVar              lW    ans, %13.1, e0.3
  val?^ | miss    %13.3 = LdVar              eR    length, e0.3
  lgl$#-          %13.4 = Identical                <blt length>, %13.3   <true>
  void                    Branch                   %13.4 -> BB113 (if true) | BB114 (if false)
BB119   <- [53]
  val?+           %119.0 = CastType           d     dn %53.1   <val?_>
  lgl+            %119.1 = CallSafeBuiltin    wed   is.na(%119.0)    <val?_>
  lgl$#-          %119.2 = CheckTrueFalse     we    %119.1
  void                    Branch                   %119.2 -> BB99 (if true) | BB56 (if false)
BB120   <- [53]
  fs              %120.0 = FrameState         R     0x560348bf8830+831: [<blt is.na>, %53.1], env=e0.3
  void                    Deopt              !v    %120.0, Typecheck@0x56034c3dd630[Type#26], %53.1   !
BB113   <- [13]
  val             %113.0 = ChkMissing         e     %13.1   <lgl+>
  lgl$#-          %113.1 = IsType                   %113.0 isA lgl+
  void                    Branch                   %113.1 -> BB115 (if true) | BB116 (if false)
BB114   <- [13]
  void                    Nop                !     
  lgl$#-          %114.1 = %13.4
  dr              %114.2 = DeadBranchReached@0x56034c3dd630[Test#12]
  goto BB14
BB99   <- [119]
  void                    Visible            v     
  lgl$-           %99.1 = na-lgl
  goto BB40
BB56   <- [119]
  val?^ | miss    %56.0 = LdVar              eR    test, e0.3
  val?            %56.1 = Force!             !v    %56.0, e0.3   <val?_>
  lgl$#-          %56.2 = CheckTrueFalse     we    %56.1
  void                    Branch                   %56.2 -> BB79 (if true) | BB57 (if false)
BB115   <- [113]
  lgl+            %115.0 = CastType           d     dn %113.0
  (int|real)$-    %115.1 = CallSafeBuiltin    wed   length(%115.0)    <int$->
  lgl$#-          %115.2 = IsType                   %115.1 isA int$-
  void                    Branch                   %115.2 -> BB117 (if true) | BB118 (if false)
BB116   <- [113]
  void                    Nop                !     
  val             %116.1 = %113.0
  dr              %116.2 = Typecheck@0x56034c3dd630[Type#61]
  goto BB14
BB14   <- [114, 116]
  val?^ | miss    %14.0 = Phi                      %114.1:BB114, %116.1:BB116
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %114.2:BB114, %116.2:BB116
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x560348bf8830+1776: [], env=e0.3
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB40   <- [99, 76, 96, 163]
  val?            %40.0 = Phi                      %163.2:BB163, %76.3:BB76, %96.3:BB96, %99.1:BB99
  val?            %40.1 = %40.0
  void                    Return             l     %40.1
BB79   <- [56]
  val?^ | miss    %79.0 = LdVar              eR    length, e0.3
  lgl$#-          %79.1 = Identical                <blt length>, %79.0   <@?>
  void                    Branch                   %79.1 -> BB81 (if true) | BB80 (if false)
BB57   <- [56]
  val?^ | miss    %57.0 = LdVar              eR    length, e0.3
  lgl$#-          %57.1 = Identical                <blt length>, %57.0   <@?>
  void                    Branch                   %57.1 -> BB59 (if true) | BB58 (if false)
BB117   <- [115]
  int$-           %117.0 = CastType           d     dn %115.1
  void                    StVar              lW    len, %117.0, e0.3
  val?^ | miss    %117.2 = LdVar              eR    which, e0.3
  lgl$#-          %117.3 = Identical                %117.2, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %117.3 -> BB121 (if true) | BB122 (if false)
BB118   <- [115]
  fs              %118.0 = FrameState         R     0x560348bf8830+1867: [%115.1], env=e0.3
  void                    Deopt              !v    %118.0, Typecheck@0x56034c3dd630[Type#62], %115.1   !
BB81   <- [79]
  val?^ | miss    %81.0 = LdVar              eR    yes, e0.3
  val?            %81.1 = Force!             !v    %81.0, e0.3   <val?_>
  lgl$#-          %81.2 = IsType                   %81.1 isA val?+
  void                    Branch                   %81.2 -> BB135 (if true) | BB136 (if false)
BB80   <- [79]
  (cls|spec|blt)  %80.0 = LdFun              !v    length, e0.3
  fs              %80.1 = FrameState         R     0x560348bf8830+1343: [%80.0], env=e0.3
  void                    Deopt              !v    %80.1, DeadCall@0x56034c3dd630[Call#15], %80.0   !
BB59   <- [57]
  val?^ | miss    %59.0 = LdVar              eR    no, e0.3
  val?            %59.1 = Force!             !v    %59.0, e0.3   <val?_>
  lgl$#-          %59.2 = IsType                   %59.1 isA val?+
  void                    Branch                   %59.2 -> BB133 (if true) | BB134 (if false)
BB58   <- [57]
  (cls|spec|blt)  %58.0 = LdFun              !v    length, e0.3
  fs              %58.1 = FrameState         R     0x560348bf8830+912: [%58.0], env=e0.3
  void                    Deopt              !v    %58.1, DeadCall@0x56034c3dd630[Call#10], %58.0   !
BB121   <- [117]
  val?^ | miss    %121.0 = LdVar              eR    test, e0.3
  val?            %121.1 = Force!<wrapped>    !v    %121.0, e0.3   <lgl+>
  val+            %121.2 = CallSafeBuiltin    wed   which(%121.1) 
  lgl$#-          %121.3 = IsType                   %121.2 isA int+
  void                    Branch                   %121.3 -> BB123 (if true) | BB124 (if false)
BB122   <- [117]
  fs              %122.0 = FrameState         R     0x560348bf8830+1881: [], env=e0.3
  void                    Deopt              !v    %122.0, CallTarget@0x56034c3dd630[Call#21], %117.2   !
BB135   <- [81]
  val?+           %135.0 = CastType           d     dn %81.1   <val?_>
  real$-          %135.1 = CallSafeBuiltin    wed   length(%135.0)    <val?_>
  lgl$-           %135.2 = Eq                 d     %135.1, 1, elided   <val?_>
  lgl$#-          %135.3 = CheckTrueFalse     e     %135.2
  void                    Branch                   %135.3 -> BB85 (if true) | BB84 (if false)
BB136   <- [81]
  fs              %136.0 = FrameState         R     0x560348bf8830+1384: [<blt length>, %81.1], env=e0.3
  void                    Deopt              !v    %136.0, Typecheck@0x56034c3dd630[Type#45], %81.1   !
BB133   <- [59]
  val?+           %133.0 = CastType           d     dn %59.1   <val?_>
  real$-          %133.1 = CallSafeBuiltin    wed   length(%133.0)    <val?_>
  lgl$-           %133.2 = Eq                 d     %133.1, 1, elided   <val?_>
  lgl$#-          %133.3 = CheckTrueFalse     e     %133.2
  void                    Branch                   %133.3 -> BB65 (if true) | BB62 (if false)
BB134   <- [59]
  fs              %134.0 = FrameState         R     0x560348bf8830+953: [<blt length>, %59.1], env=e0.3
  void                    Deopt              !v    %134.0, Typecheck@0x56034c3dd630[Type#30], %59.1   !
BB123   <- [121]
  int+            %123.0 = CastType           d     dn %121.2
  void                    StVar              lW    ypos, %123.0, e0.3
  val?^ | miss    %123.2 = LdVar              eR    which, e0.3
  lgl$#-          %123.3 = Identical                %123.2, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %123.3 -> BB125 (if true) | BB126 (if false)
BB124   <- [121]
  prom-           %124.0 = MkArg                    %121.1, ifelse[0x56034ad14640]_p0 (!refl), e0.3
  val?~           %124.1 = CastType                 up %124.0
  fs              %124.2 = FrameState         R     0x560348bf8830+1913: [], env=e0.3
  env             e124.3 = (MkEnv)            l     wh=%121.2, useNames(miss)=true, arr.ind(miss)=false, x=%124.1, parent=R_BaseNamespace, context 0
  fs              %124.4 = FrameState         R     0x56034b49fd20+172: [false], env=e124.3, next=%124.2
  void                    Deopt              !v    %124.4, Typecheck@0x56034aa81020[Type#5], %121.2   !
BB85   <- [135]
  val?^ | miss    %85.0 = LdVar              eR    attributes, e0.3
  lgl$#-          %85.1 = Identical                <blt attributes>, %85.0   <@?>
  void                    Branch                   %85.1 -> BB87 (if true) | BB86 (if false)
BB84   <- [135]
  void                    Nop                !     
  goto BB64
BB65   <- [133]
  val?^ | miss    %65.0 = LdVar              eR    attributes, e0.3
  lgl$#-          %65.1 = Identical                <blt attributes>, %65.0   <@?>
  void                    Branch                   %65.1 -> BB67 (if true) | BB66 (if false)
BB62   <- [133]
  void                    Nop                !     
  goto BB63
BB125   <- [123]
  val?^ | miss    %125.0 = LdVar              eR    test, e0.3
  val?            %125.1 = Force!<wrapped>    !v    %125.0, e0.3   <lgl+>
  val?            %125.2 = Not                !v    %125.1, e0.3   <lgl+>
  val+            %125.3 = CallSafeBuiltin    wed   which(%125.2) 
  lgl$#-          %125.4 = IsType                   %125.3 isA int+
  void                    Branch                   %125.4 -> BB127 (if true) | BB128 (if false)
BB126   <- [123]
  fs              %126.0 = FrameState         R     0x560348bf8830+1927: [], env=e0.3
  void                    Deopt              !v    %126.0, CallTarget@0x56034c3dd630[Call#22], %123.2   !
BB87   <- [85]
  val?^ | miss    %87.0 = LdVar              eR    yes, e0.3
  val?            %87.1 = Force!             !v    %87.0, e0.3   <val?_>
  val?            %87.2 = CallBuiltin        !v    attributes(%87.1) e0.3   <val?_>
  lgl$-           %87.3 = Is                       %87.2, NULL
  lgl$-           %87.4 = AsLogical                %87.3
  lgl$#-          %87.5 = Identical                %87.4, true
  void                    StVar              lW    yat, %87.2, e0.3
  val             %87.7 = ChkMissing         e     %87.2
  void                    Branch                   %87.5 -> BB98 (if true) | BB88 (if false)
BB86   <- [85]
  (cls|spec|blt)  %86.0 = LdFun              !v    attributes, e0.3
  fs              %86.1 = FrameState         R     0x560348bf8830+1462: [%86.0], env=e0.3
  void                    Deopt              !v    %86.1, DeadCall@0x56034c3dd630[Call#16], %86.0   !
BB64   <- [84, 95, 63]
  void                    Nop                !     
  goto BB13
BB67   <- [65]
  val?^ | miss    %67.0 = LdVar              eR    no, e0.3
  val?            %67.1 = Force!             !v    %67.0, e0.3   <val?_>
  val?            %67.2 = CallBuiltin        !v    attributes(%67.1) e0.3   <val?_>
  lgl$-           %67.3 = Is                       %67.2, NULL
  lgl$-           %67.4 = AsLogical                %67.3
  lgl$#-          %67.5 = Identical                %67.4, true
  void                    StVar              lW    nat, %67.2, e0.3
  val             %67.7 = ChkMissing         e     %67.2
  void                    Branch                   %67.5 -> BB78 (if true) | BB68 (if false)
BB66   <- [65]
  (cls|spec|blt)  %66.0 = LdFun              !v    attributes, e0.3
  fs              %66.1 = FrameState         R     0x560348bf8830+1031: [%66.0], env=e0.3
  void                    Deopt              !v    %66.1, DeadCall@0x56034c3dd630[Call#11], %66.0   !
BB63   <- [62, 75]
  void                    Nop                !     
  goto BB64
BB127   <- [125]
  int+            %127.0 = CastType           d     dn %125.3
  void                    StVar              lW    npos, %127.0, e0.3
  val?^ | miss    %127.2 = LdVar              eR    length, e0.3
  lgl$#-          %127.3 = Identical                <blt length>, %127.2   <true>
  void                    Branch                   %127.3 -> BB129 (if true) | BB130 (if false)
BB128   <- [125]
  prom-           %128.0 = MkArg                    %125.2, ifelse[0x56034ad14640]_p1 (!refl), e0.3
  val?~           %128.1 = CastType                 up %128.0
  fs              %128.2 = FrameState         R     0x560348bf8830+1959: [], env=e0.3
  env             e128.3 = (MkEnv)            l     wh=%125.3, useNames(miss)=true, arr.ind(miss)=false, x=%128.1, parent=R_BaseNamespace, context 0
  fs              %128.4 = FrameState         R     0x56034b49fd20+172: [false], env=e128.3, next=%128.2
  void                    Deopt              !v    %128.4, Typecheck@0x56034aa81020[Type#5], %125.3   !
BB98   <- [87]
  void                    Nop                !     
  lgl$-           %98.1 = %87.4
  goto BB94
BB88   <- [87]
  val?^ | miss    %88.0 = LdVar              eR    is.function, e0.3
  lgl$#-          %88.1 = Identical                <blt is.function>, %88.0   <@?>
  void                    Branch                   %88.1 -> BB90 (if true) | BB89 (if false)
BB78   <- [67]
  void                    Nop                !     
  lgl$-           %78.1 = %67.4
  goto BB74
BB68   <- [67]
  val?^ | miss    %68.0 = LdVar              eR    is.function, e0.3
  lgl$#-          %68.1 = Identical                <blt is.function>, %68.0   <@?>
  void                    Branch                   %68.1 -> BB70 (if true) | BB69 (if false)
BB129   <- [127]
  val?^ | miss    %129.0 = LdVar              eR    ypos, e0.3
  lgl$#-          %129.1 = IsType                   %129.0 isA int+
  void                    Branch                   %129.1 -> BB131 (if true) | BB132 (if false)
BB130   <- [127]
  void                    Nop                !     
  lgl$#-          %130.1 = %127.3
  dr              %130.2 = DeadBranchReached@0x56034c3dd630[Test#13]
  goto BB26
BB94   <- [98, 93]
  lgl$-           %94.0 = Phi                      %93.1:BB93, %98.1:BB98
  lgl$-           %94.1 = %94.0
  lgl$#-          %94.2 = CheckTrueFalse     e     %94.1
  void                    Branch                   %94.2 -> BB96 (if true) | BB95 (if false)
BB90   <- [88]
  val?^ | miss    %90.0 = LdVar              eR    yes, e0.3
  val?            %90.1 = Force!             !v    %90.0, e0.3   <val?_>
  lgl$#-          %90.2 = IsType                   %90.1 isA val?+
  void                    Branch                   %90.2 -> BB153 (if true) | BB154 (if false)
BB89   <- [88]
  (cls|spec|blt)  %89.0 = LdFun              !v    is.function, e0.3
  fs              %89.1 = FrameState         R     0x560348bf8830+1593: [%87.4, %89.0], env=e0.3
  void                    Deopt              !v    %89.1, DeadCall@0x56034c3dd630[Call#17], %89.0   !
BB74   <- [78, 73]
  lgl$-           %74.0 = Phi                      %73.1:BB73, %78.1:BB78
  lgl$-           %74.1 = %74.0
  lgl$#-          %74.2 = CheckTrueFalse     e     %74.1
  void                    Branch                   %74.2 -> BB76 (if true) | BB75 (if false)
BB70   <- [68]
  val?^ | miss    %70.0 = LdVar              eR    no, e0.3
  val?            %70.1 = Force!             !v    %70.0, e0.3   <val?_>
  lgl$#-          %70.2 = IsType                   %70.1 isA val?+
  void                    Branch                   %70.2 -> BB139 (if true) | BB140 (if false)
BB69   <- [68]
  (cls|spec|blt)  %69.0 = LdFun              !v    is.function, e0.3
  fs              %69.1 = FrameState         R     0x560348bf8830+1162: [%67.4, %69.0], env=e0.3
  void                    Deopt              !v    %69.1, DeadCall@0x56034c3dd630[Call#12], %69.0   !
BB131   <- [129]
  int+            %131.0 = CastType           d     dn %129.0
  (int|real)$-    %131.1 = CallSafeBuiltin    wed   length(%131.0)    <int$->
  lgl$#-          %131.2 = IsType                   %131.1 isA int$-
  void                    Branch                   %131.2 -> BB137 (if true) | BB138 (if false)
BB132   <- [129]
  void                    Nop                !     
  val?^ | miss    %132.1 = %129.0
  dr              %132.2 = Typecheck@0x56034c3dd630[Type#68]
  goto BB26
BB26   <- [130, 132]
  val?^ | miss    %26.0 = Phi                      %130.1:BB130, %132.1:BB132
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %130.2:BB130, %132.2:BB132
  dr              %26.3 = %26.2
  fs              %26.4 = FrameState         R     0x560348bf8830+1973: [], env=e0.3
  void                    Deopt              !v    %26.4, %26.3, %26.1   !
BB96   <- [94]
  val?^ | miss    %96.0 = LdVar              eR    yes, e0.3
  void                    Visible            v     
  val?            %96.2 = Force!             !     %96.0, e0.3   <val?_>
  val?            %96.3 = %96.2
  goto BB40
BB95   <- [94]
  void                    Nop                !     
  goto BB64
BB153   <- [90]
  val?+           %153.0 = CastType           d     dn %90.1   <val?_>
  lgl$#-          %153.1 = CallSafeBuiltin    wed   is.function(%153.0)    <val?_>
  lgl$-           %153.2 = LOr                      %87.4, %153.1
  void                    Branch                   %153.1 -> BB97 (if true) | BB93 (if false)
BB154   <- [90]
  fs              %154.0 = FrameState         R     0x560348bf8830+1634: [%87.4, <blt is.function>, %90.1], env=e0.3
  void                    Deopt              !v    %154.0, Typecheck@0x56034c3dd630[Type#53], %90.1   !
BB76   <- [74]
  val?^ | miss    %76.0 = LdVar              eR    no, e0.3
  void                    Visible            v     
  val?            %76.2 = Force!             !     %76.0, e0.3   <val?_>
  val?            %76.3 = %76.2
  goto BB40
BB75   <- [74]
  void                    Nop                !     
  goto BB63
BB139   <- [70]
  val?+           %139.0 = CastType           d     dn %70.1   <val?_>
  lgl$#-          %139.1 = CallSafeBuiltin    wed   is.function(%139.0)    <val?_>
  lgl$-           %139.2 = LOr                      %67.4, %139.1
  void                    Branch                   %139.1 -> BB77 (if true) | BB73 (if false)
BB140   <- [70]
  fs              %140.0 = FrameState         R     0x560348bf8830+1203: [%67.4, <blt is.function>, %70.1], env=e0.3
  void                    Deopt              !v    %140.0, Typecheck@0x56034c3dd630[Type#38], %70.1   !
BB137   <- [131]
  int$-           %137.0 = CastType           d     dn %131.1
  lgl$-           %137.1 = Gt                 d     %137.0, 0L, elided   <lgl$->
  lgl$#-          %137.2 = CheckTrueFalse     e     %137.1
  void                    Branch                   %137.2 -> BB46 (if true) | BB30 (if false)
BB138   <- [131]
  fs              %138.0 = FrameState         R     0x560348bf8830+2064: [%131.1], env=e0.3
  void                    Deopt              !v    %138.0, Typecheck@0x56034c3dd630[Type#69], %131.1   !
BB97   <- [153]
  (cls|spec|blt)  %97.0 = LdFun              !v    identical, e0.3
  fs              %97.1 = FrameState         R     0x560348bf8830+1673: [%87.4, %153.1, %97.0], env=e0.3
  void                    Deopt              !v    %97.1, DeadCall@0x56034c3dd630[Call#18], %97.0   !
BB93   <- [153]
  void                    Nop                !     
  lgl$-           %93.1 = %153.2
  goto BB94
BB77   <- [139]
  (cls|spec|blt)  %77.0 = LdFun              !v    identical, e0.3
  fs              %77.1 = FrameState         R     0x560348bf8830+1242: [%67.4, %139.1, %77.0], env=e0.3
  void                    Deopt              !v    %77.1, DeadCall@0x56034c3dd630[Call#13], %77.0   !
BB73   <- [139]
  void                    Nop                !     
  lgl$-           %73.1 = %139.2
  goto BB74
BB46   <- [137]
  (cls|spec|blt)  %46.0 = LdFun              !v    rep, <0x560348a909b0>, e0.3
  prom-           %46.1 = MkArg                    unboundValue, ifelse[0x56034ad14640]_p4, e0.3
  prom-           %46.2 = MkArg                    unboundValue, ifelse[0x56034ad14640]_p5, e0.3
  val?            %46.3 = NamedCall          !v    %46.0(%46.1, length.out=%46.2) e0.3   <real+>
  lgl$#-          %46.4 = IsType                   %46.3 isA val+   <true>
  lgl$#-          %46.5 = IsType                   %46.3 isA real+
  void                    Branch                   %46.4 -> BB141 (if true) | BB142 (if false)
BB30   <- [137]
  void                    Nop                !     
  goto BB31
BB141   <- [46]
  val?^ | miss    %141.0 = LdVar              eR    ypos, e0.3
  lgl$#-          %141.1 = IsType                   %141.0 isA int+
  void                    Branch                   %141.1 -> BB143 (if true) | BB144 (if false)
BB142   <- [46]
  void                    Nop                !     
  lgl$#-          %142.1 = %46.4
  dr              %142.2 = DeadBranchReached@0x56034c3dd630[Test#14]
  goto BB47
BB31   <- [30, 151]
  val?^ | miss    %31.0 = LdVar              eR    length, e0.3
  lgl$#-          %31.1 = Identical                <blt length>, %31.0   <true>
  void                    Branch                   %31.1 -> BB147 (if true) | BB148 (if false)
BB143   <- [141]
  int+            %143.0 = CastType           d     dn %141.0
  void                    Branch                   %46.5 -> BB145 (if true) | BB146 (if false)
BB144   <- [141]
  void                    Nop                !     
  val?^ | miss    %144.1 = %141.0
  dr              %144.2 = Typecheck@0x56034c3dd630[Type#75]
  goto BB47
BB47   <- [142, 144, 146]
  val?^ | miss    %47.0 = Phi                      %142.1:BB142, %144.1:BB144, %146.1:BB146
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %142.2:BB142, %144.2:BB144, %146.2:BB146
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x560348bf8830+2137: [%46.3], env=e0.3
  void                    Deopt              !v    %47.4, %47.3, %47.1   !
BB147   <- [31]
  val?^ | miss    %147.0 = LdVar              eR    npos, e0.3
  lgl$#-          %147.1 = IsType                   %147.0 isA int+
  void                    Branch                   %147.1 -> BB149 (if true) | BB150 (if false)
BB148   <- [31]
  void                    Nop                !     
  lgl$#-          %148.1 = %31.1
  dr              %148.2 = DeadBranchReached@0x56034c3dd630[Test#15]
  goto BB32
BB145   <- [143]
  real+           %145.0 = CastType           d     dn %46.3
  real+           %145.1 = Extract1_1D        wed   %145.0, %143.0, elided   <real+>
  val?^ | miss    %145.2 = LdVar              eR    ans !upd, e0.3
  lgl$#-          %145.3 = IsType                   %145.2 isA lgl+
  void                    Branch                   %145.3 -> BB151 (if true) | BB152 (if false)
BB146   <- [143]
  void                    Nop                !     
  val?            %146.1 = %46.3
  dr              %146.2 = Typecheck@0x56034c3dd630[Type#73]
  goto BB47
BB149   <- [147]
  int+            %149.0 = CastType           d     dn %147.0
  (int|real)$-    %149.1 = CallSafeBuiltin    wed   length(%149.0)    <int$->
  lgl$#-          %149.2 = IsType                   %149.1 isA int$-
  void                    Branch                   %149.2 -> BB155 (if true) | BB156 (if false)
BB150   <- [147]
  void                    Nop                !     
  val?^ | miss    %150.1 = %147.0
  dr              %150.2 = Typecheck@0x56034c3dd630[Type#80]
  goto BB32
BB32   <- [148, 150]
  val?^ | miss    %32.0 = Phi                      %148.1:BB148, %150.1:BB150
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %148.2:BB148, %150.2:BB150
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x560348bf8830+2232: [], env=e0.3
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB151   <- [145]
  lgl+            %151.0 = CastType           d     dn %145.2
  real+           %151.1 = Subassign1_1D      wed   %145.1, %151.0, %143.0, elided
  void                    StVar              lW    ans, %151.1, e0.3
  goto BB31
BB152   <- [145]
  fs              %152.0 = FrameState         R     0x560348bf8830+2188: [%145.1], env=e0.3
  void                    Deopt              !v    %152.0, Typecheck@0x56034c3dd630[Type#77], %145.2   !
BB155   <- [149]
  int$-           %155.0 = CastType           d     dn %149.1
  lgl$-           %155.1 = Gt                 d     %155.0, 0L, elided   <lgl$->
  lgl$#-          %155.2 = CheckTrueFalse     e     %155.1
  void                    Branch                   %155.2 -> BB41 (if true) | BB36 (if false)
BB156   <- [149]
  fs              %156.0 = FrameState         R     0x560348bf8830+2323: [%149.1], env=e0.3
  void                    Deopt              !v    %156.0, Typecheck@0x56034c3dd630[Type#81], %149.1   !
BB41   <- [155]
  (cls|spec|blt)  %41.0 = LdFun              !v    rep, <0x560348a909b0>, e0.3
  prom-           %41.1 = MkArg                    unboundValue, ifelse[0x56034ad14640]_p2, e0.3
  prom-           %41.2 = MkArg                    unboundValue, ifelse[0x56034ad14640]_p3, e0.3
  val?            %41.3 = NamedCall          !v    %41.0(%41.1, length.out=%41.2) e0.3   <real+>
  lgl$#-          %41.4 = IsType                   %41.3 isA val+   <true>
  lgl$#-          %41.5 = IsType                   %41.3 isA real+
  void                    Branch                   %41.4 -> BB157 (if true) | BB158 (if false)
BB36   <- [155]
  void                    Nop                !     
  goto BB37
BB157   <- [41]
  val?^ | miss    %157.0 = LdVar              eR    npos, e0.3
  lgl$#-          %157.1 = IsType                   %157.0 isA int+
  void                    Branch                   %157.1 -> BB159 (if true) | BB160 (if false)
BB158   <- [41]
  void                    Nop                !     
  lgl$#-          %158.1 = %41.4
  dr              %158.2 = DeadBranchReached@0x56034c3dd630[Test#16]
  goto BB42
BB37   <- [36, 165]
  val?^ | miss    %37.0 = LdVar              eR    ans, e0.3
  lgl$#-          %37.1 = IsType                   %37.0 isA real+
  void                    Branch                   %37.1 -> BB163 (if true) | BB164 (if false)
BB159   <- [157]
  int+            %159.0 = CastType           d     dn %157.0
  void                    Branch                   %41.5 -> BB161 (if true) | BB162 (if false)
BB160   <- [157]
  void                    Nop                !     
  val?^ | miss    %160.1 = %157.0
  dr              %160.2 = Typecheck@0x56034c3dd630[Type#87]
  goto BB42
BB42   <- [158, 160, 162]
  val?^ | miss    %42.0 = Phi                      %158.1:BB158, %160.1:BB160, %162.1:BB162
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %158.2:BB158, %160.2:BB160, %162.2:BB162
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x560348bf8830+2396: [%41.3], env=e0.3
  void                    Deopt              !v    %42.4, %42.3, %42.1   !
BB163   <- [37]
  real+           %163.0 = CastType           d     dn %37.0
  void                    Visible            v     
  real+           %163.2 = %163.0
  goto BB40
BB164   <- [37]
  fs              %164.0 = FrameState         R     0x560348bf8830+2491: [], env=e0.3
  void                    Deopt              !v    %164.0, Typecheck@0x56034c3dd630[Type#91], %37.0   !
BB161   <- [159]
  real+           %161.0 = CastType           d     dn %41.3
  real+           %161.1 = Extract1_1D        wed   %161.0, %159.0, elided   <real+>
  val?^ | miss    %161.2 = LdVar              eR    ans !upd, e0.3
  lgl$#-          %161.3 = IsType                   %161.2 isA val?~+ | miss
  void                    Branch                   %161.3 -> BB165 (if true) | BB166 (if false)
BB162   <- [159]
  void                    Nop                !     
  val?            %162.1 = %41.3
  dr              %162.2 = Typecheck@0x56034c3dd630[Type#85]
  goto BB42
BB165   <- [161]
  val?~+ | miss   %165.0 = CastType           d     dn %161.2
  val?+           %165.1 = Force!<value>            %165.0,    <(lgl|real)+>
  val?+           %165.2 = Subassign1_1D      wed   %161.1, %165.1, %159.0, elided
  void                    StVar              lW    ans, %165.2, e0.3
  goto BB37
BB166   <- [161]
  fs              %166.0 = FrameState         R     0x560348bf8830+2447: [%161.1], env=e0.3
  void                    Deopt              !v    %166.0, Typecheck@0x56034c3dd630[Type#89], %161.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl+>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    no, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    len, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    yes, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    len, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl+>
  void                    Return             l     %0.3

│ ifelse[0x56034ad14640]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
