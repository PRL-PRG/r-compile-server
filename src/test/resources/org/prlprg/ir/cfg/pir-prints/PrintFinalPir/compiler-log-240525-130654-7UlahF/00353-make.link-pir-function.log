
┌──────────────────────────────────────────────────────────────────────────────┐
│ make.link[0x56034b428690]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
make.link[0x56034b428690]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     link=%0.0, parent=<env 0x5603490cbb50>, context 1
  cls             %0.2  = MkCls                    make.link>linkfun@1392, e0.1
  cls             %0.3  = MkCls                    make.link>linkinv@1417, e0.1
  cls             %0.4  = MkCls                    make.link>mu.eta@1442, e0.1
  cls             %0.5  = MkCls                    make.link@1467, e0.1
  cls             %0.6  = MkCls                    make.link>linkfun@1068, e0.1
  cls             %0.7  = MkCls                    make.link>linkinv@1093, e0.1
  cls             %0.8  = MkCls                    make.link>mu.eta@1118, e0.1
  cls             %0.9  = MkCls                    make.link@1143, e0.1
  val?            %0.10 = Force!<lazy>             %0.0,    <str$->
  lgl$-           %0.11 = Is                       %0.10, logical
  lgl$-           %0.12 = Is                       %0.10, integer
  lgl$-           %0.13 = Is                       %0.10, double
  lgl$-           %0.14 = Is                       %0.10, complex
  lgl$-           %0.15 = Is                       %0.10, character   <true>
  lgl$-           %0.16 = Is                       %0.10, raw
  lgl$-           %0.17 = Is                       %0.10, list
  lgl$-           %0.18 = Is                       %0.10, expression
  lgl$-           %0.19 = LOr                      %0.18, %0.17
  lgl$-           %0.20 = LOr                      %0.19, %0.16
  lgl$-           %0.21 = LOr                      %0.20, %0.15
  lgl$-           %0.22 = LOr                      %0.21, %0.14
  lgl$-           %0.23 = LOr                      %0.22, %0.13
  lgl$-           %0.24 = LOr                      %0.23, %0.12
  lgl$-           %0.25 = LOr                      %0.24, %0.11   <true>
  lgl$#-          %0.26 = Identical                %0.25, true
  int$-           %0.27 = Length                   %0.10
  lgl$-           %0.28 = Is                       %0.10, Factor   <false>
  lgl$#-          %0.29 = Identical                %0.28, false
  lgl$#-          %0.30 = Identical                %0.15, true
  lgl$#-          %0.31 = IsType                   %0.10 isA val?-
  void                    Branch                   %0.31 -> BB84 (if true) | BB85 (if false)
BB84   <- [0]
  val?-           %84.0 = CastType           d     dn %0.10   <str$->
  void                    Branch                   %0.26 -> BB86 (if true) | BB87 (if false)
BB85   <- [0]
  void                    Nop                !     
  val?            %85.1 = %0.10
  dr              %85.2 = Typecheck@0x56034b437438[Type#0]
  goto BB83
BB86   <- [84]
  lgl$-           %86.0 = Eq                 d     %0.27, 1L, elided   <true>
  lgl$#-          %86.1 = Identical                %86.0, true
  void                    Branch                   %86.1 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  void                    Nop                !     
  lgl$#-          %87.1 = %0.26
  dr              %87.2 = DeadBranchReached@0x56034b437438[Test#0]
  goto BB83
BB83   <- [85, 87, 89, 91, 93]
  val?^ | miss    %83.0 = Phi                      %85.1:BB85, %87.1:BB87, %89.1:BB89, %91.1:BB91, %93.1:BB93
  val?^ | miss    %83.1 = %83.0
  dr              %83.2 = Phi                      %85.2:BB85, %87.2:BB87, %89.2:BB89, %91.2:BB91, %93.2:BB93
  dr              %83.3 = %83.2
  fs              %83.4 = FrameState         R     0x56034c2e49a0+9: [%0.10], env=e0.1
  void                    Deopt              !v    %83.4, %83.3, %83.1
BB88   <- [86]
  void                    Branch                   %0.29 -> BB90 (if true) | BB91 (if false)
BB89   <- [86]
  void                    Nop                !     
  lgl$#-          %89.1 = %86.1
  dr              %89.2 = DeadBranchReached@0x56034b437438[Test#1]
  goto BB83
BB90   <- [88]
  void                    Branch                   %0.30 -> BB92 (if true) | BB93 (if false)
BB91   <- [88]
  void                    Nop                !     
  lgl$#-          %91.1 = %0.29
  dr              %91.2 = DeadBranchReached@0x56034b437438[Test#2]
  goto BB83
BB92   <- [90]
  lgl-            %92.0 = CallSafeBuiltin    wed   is.na(%84.0) 
  lgl$#-          %92.1 = CheckTrueFalse     we    %92.0   <false>
  void                    Branch                   %92.1 -> BB95 (if true) | BB94 (if false)
BB93   <- [90]
  void                    Nop                !     
  lgl$#-          %93.1 = %0.30
  dr              %93.2 = DeadBranchReached@0x56034b437438[Test#3]
  goto BB83
BB95   <- [92]
  fs              %95.0 = FrameState         R     0x56034c2e49a0+344: [%84.0, %92.1], env=e0.1
  void                    Deopt              !v    %95.0, DeadBranchReached@0x56034b437438[Test#14], %92.1
BB94   <- [92]
  lgl-            %94.0 = Eq                 wed   %84.0, logit, elided
  lgl$#-          %94.1 = CheckTrueFalse     we    %94.0   <false>
  void                    Branch                   %94.1 -> BB97 (if true) | BB96 (if false)
BB97   <- [94]
  fs              %97.0 = FrameState         R     0x56034c2e49a0+368: [%84.0, %94.1], env=e0.1
  void                    Deopt              !v    %97.0, DeadBranchReached@0x56034b437438[Test#15], %94.1
BB96   <- [94]
  lgl-            %96.0 = Eq                 wed   %84.0, probit, elided
  lgl$#-          %96.1 = CheckTrueFalse     we    %96.0   <false>
  void                    Branch                   %96.1 -> BB99 (if true) | BB98 (if false)
BB99   <- [96]
  fs              %99.0 = FrameState         R     0x56034c2e49a0+386: [%84.0, %96.1], env=e0.1
  void                    Deopt              !v    %99.0, DeadBranchReached@0x56034b437438[Test#16], %96.1
BB98   <- [96]
  lgl-            %98.0 = Eq                 wed   %84.0, cauchit, elided
  lgl$#-          %98.1 = CheckTrueFalse     we    %98.0   <false>
  void                    Branch                   %98.1 -> BB101 (if true) | BB100 (if false)
BB101   <- [98]
  fs              %101.0 = FrameState         R     0x56034c2e49a0+404: [%84.0, %98.1], env=e0.1
  void                    Deopt              !v    %101.0, DeadBranchReached@0x56034b437438[Test#17], %98.1
BB100   <- [98]
  lgl-            %100.0 = Eq                 wed   %84.0, cloglog, elided
  lgl$#-          %100.1 = CheckTrueFalse     we    %100.0   <false>
  void                    Branch                   %100.1 -> BB103 (if true) | BB102 (if false)
BB103   <- [100]
  fs              %103.0 = FrameState         R     0x56034c2e49a0+422: [%84.0, %100.1], env=e0.1
  void                    Deopt              !v    %103.0, DeadBranchReached@0x56034b437438[Test#18], %100.1
BB102   <- [100]
  lgl-            %102.0 = Eq                 wed   %84.0, identity, elided
  lgl$#-          %102.1 = CheckTrueFalse     we    %102.0   <false>
  void                    Branch                   %102.1 -> BB105 (if true) | BB104 (if false)
BB105   <- [102]
  fs              %105.0 = FrameState         R     0x56034c2e49a0+440: [%84.0, %102.1], env=e0.1
  void                    Deopt              !v    %105.0, DeadBranchReached@0x56034b437438[Test#19], %102.1
BB104   <- [102]
  lgl-            %104.0 = Eq                 wed   %84.0, log, elided
  lgl$#-          %104.1 = CheckTrueFalse     we    %104.0
  void                    Branch                   %104.1 -> BB82 (if true) | BB15 (if false)
BB82   <- [104]
  void                    StVar              lW    linkfun, %0.6, e0.1
  void                    StVar              lW    linkinv, %0.7, e0.1
  void                    StVar              lW    mu.eta, %0.8, e0.1
  void                    StVar              lW    valideta, %0.9, e0.1
  cls             %82.4 = %0.9
  goto BB22
BB15   <- [104]
  lgl-            %15.0 = Eq                 wed   %84.0, sqrt, elided
  lgl$#-          %15.1 = CheckTrueFalse     we    %15.0   <false>
  void                    Branch                   %15.1 -> BB107 (if true) | BB106 (if false)
BB22   <- [82, 110]
  cls             %22.0 = Phi                      %110.4:BB110, %82.4:BB82
  cls             %22.1 = %22.0
  val?^ | miss    %22.2 = LdVar              eR    asNamespace, <env 0x5603490cbb50>
  lgl$#-          %22.3 = Identical                %22.2, function(ns, base.OK=TRUE) <(rir::DispatchTabl|...
  void                    Branch                   %22.3 -> BB112 (if true) | BB113 (if false)
BB107   <- [15]
  fs              %107.0 = FrameState         R     0x56034c2e49a0+476: [%84.0, %15.1], env=e0.1
  void                    Deopt              !v    %107.0, DeadBranchReached@0x56034b437438[Test#21], %15.1
BB106   <- [15]
  lgl-            %106.0 = Eq                 wed   %84.0, 1/mu^2, elided
  lgl$#-          %106.1 = CheckTrueFalse     we    %106.0   <false>
  void                    Branch                   %106.1 -> BB109 (if true) | BB108 (if false)
BB112   <- [22]
  ct              %112.0 = PushContext        lCL   "stats", asNamespace("stats"), function(ns, base.OK=TRUE) <(rir::DispatchTabl|..., e0.1
  env             e112.1 = MkEnv              l     ns="stats", base.OK(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %112.2 = MkArg                    unboundValue, make.link[0x56034b428690]_p0 (!refl), e112.1
  ct              %112.3 = PushContext        lCL   %112.2, getNamespace(ns), function(name) <(rir::DispatchTable*)0x56034c1|..., e112.1
  val?^           %112.4 = CastType                 up %112.2
  env             e112.5 = MkEnv              l     name=%112.4, parent=R_BaseNamespace, context 1
  val?            %112.6 = CallBuiltin        !v    getRegisteredNamespace("stats") e112.5   <env->
  lgl$-           %112.7 = Is                       %112.6, NULL
  void                    StVar              lW    ns, %112.6, e112.5
  val             %112.9 = ChkMissing         e     %112.6
  lgl$-           %112.10 = Not                d     %112.7, elided
  lgl$#-          %112.11 = CheckTrueFalse     e     %112.10
  void                    Branch                   %112.11 -> BB26 (if true) | BB25 (if false)
BB113   <- [22]
  fs              %113.0 = FrameState         R     0x56034c2e49a0+1561: [%22.1], env=e0.1
  void                    Deopt              !v    %113.0, CallTarget@0x56034b437438[Call#3], %22.2
BB109   <- [106]
  fs              %109.0 = FrameState         R     0x56034c2e49a0+494: [%84.0, %106.1], env=e0.1
  void                    Deopt              !v    %109.0, DeadBranchReached@0x56034b437438[Test#22], %106.1
BB108   <- [106]
  lgl-            %108.0 = Eq                 wed   %84.0, inverse, elided
  lgl$#-          %108.1 = CheckTrueFalse     we    %108.0   <true>
  void                    Branch                   %108.1 -> BB110 (if true) | BB111 (if false)
BB26   <- [112]
  val?            %26.0 = PopContext         C     %112.6, %112.3   <env->
  void                    StVar              lW    ns, %26.0, e112.1
  val?^ | miss    %26.2 = LdVar              eR    isNamespace, e112.1
  lgl$#-          %26.3 = Identical                %26.2, function(ns) <(rir::DispatchTable*)0x56034a9f7|...
  void                    Branch                   %26.3 -> BB114 (if true) | BB115 (if false)
BB25   <- [112]
  fs              %25.0 = FrameState         R     0x56034c2e49a0+1594: [], env=e0.1
  fs              %25.1 = FrameState         R     0x56034c2b3790+244: [], env=e112.1, next=%25.0
  (cls|spec|blt)  %25.2 = LdFun              !v    loadNamespace, e112.5
  fs              %25.3 = FrameState         R     0x56034c132bc0+67: [%25.2], env=e112.5, next=%25.1
  void                    Deopt              !v    %25.3, DeadCall@0x56034b437228[Call#0], %25.2   !
BB110   <- [108]
  void                    StVar              lW    linkfun, %0.2, e0.1
  void                    StVar              lW    linkinv, %0.3, e0.1
  void                    StVar              lW    mu.eta, %0.4, e0.1
  void                    StVar              lW    valideta, %0.5, e0.1
  cls             %110.4 = %0.5
  goto BB22
BB111   <- [108]
  fs              %111.0 = FrameState         R     0x56034c2e49a0+512: [%84.0, %108.1], env=e0.1
  void                    Deopt              !v    %111.0, DeadBranchReached@0x56034b437438[Test#23], %108.1
BB114   <- [26]
  prom-           %114.0 = MkArg                    unboundValue, make.link[0x56034b428690]_p1 (!refl), e112.1
  ct              %114.1 = PushContext        lCL   %114.0, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x56034a9f7|..., e112.1
  val?^           %114.2 = CastType                 up %114.0
  env             e114.3 = MkEnv              l     ns=%114.2, parent=R_BaseNamespace, context 1
  val?            %114.4 = Force!<lazy>       !vrL  %114.2, e114.3   <env->
  val?            %114.5 = CallBuiltin        !v    isNamespaceEnv(%114.4) e114.3
  val?            %114.6 = PopContext         C     %114.5, %114.1   <lgl$->
  lgl$#-          %114.7 = IsType                   %114.6 isA lgl$-
  void                    Branch                   %114.7 -> BB116 (if true) | BB117 (if false)
BB115   <- [26]
  fs              %115.0 = FrameState         R     0x56034c2e49a0+1594: [], env=e0.1
  fs              %115.1 = FrameState         R     0x56034c2b3790+258: [], env=e112.1, next=%115.0
  void                    Deopt              !v    %115.1, CallTarget@0x56034b437388[Call#3], %26.2   !
BB116   <- [114]
  lgl$-           %116.0 = CastType           d     dn %114.6
  lgl$-           %116.1 = Not                d     %116.0, elided
  lgl$#-          %116.2 = CheckTrueFalse     e     %116.1
  void                    Branch                   %116.2 -> BB81 (if true) | BB31 (if false)
BB117   <- [114]
  fs              %117.0 = FrameState         R     0x56034c2e49a0+1594: [], env=e0.1
  fs              %117.1 = FrameState         R     0x56034c2b3790+290: [%114.6], env=e112.1, next=%117.0
  void                    Deopt              !v    %117.1, Typecheck@0x56034b437388[Type#9], %114.6   !
BB81   <- [116]
  fs              %81.0 = FrameState         R     0x56034c2e49a0+1594: [], env=e0.1
  (cls|spec|blt)  %81.1 = LdFun              !v    stop, e112.1
  fs              %81.2 = FrameState         R     0x56034c2b3790+435: [%81.1], env=e112.1, next=%81.0
  void                    Deopt              !v    %81.2, DeadCall@0x56034b437388[Call#6], %81.1   !
BB31   <- [116]
  val?^ | miss    %31.0 = LdVar              eR    base.OK, e112.1
  val?            %31.1 = Force!<lazy>       !v    %31.0, e112.1   <lgl$->
  lgl$#-          %31.2 = IsType                   %31.1 isA lgl$-
  void                    Branch                   %31.2 -> BB118 (if true) | BB119 (if false)
BB118   <- [31]
  lgl$-           %118.0 = CastType           d     dn %31.1
  lgl$-           %118.1 = Not                d     %118.0, elided
  lgl$-           %118.2 = AsLogical                %118.1
  lgl$#-          %118.3 = Identical                %118.2, false
  void                    Branch                   %118.3 -> BB35 (if true) | BB34 (if false)
BB119   <- [31]
  fs              %119.0 = FrameState         R     0x56034c2e49a0+1594: [], env=e0.1
  fs              %119.1 = FrameState         R     0x56034c2b3790+311: [%31.1], env=e112.1, next=%119.0
  void                    Deopt              !v    %119.1, Typecheck@0x56034b437388[Type#10], %31.1   !
BB35   <- [118]
  lgl$#-          %35.0 = CheckTrueFalse     e     %118.2
  void                    Branch                   %35.0 -> BB80 (if true) | BB36 (if false)
BB34   <- [118]
  fs              %34.0 = FrameState         R     0x56034c2e49a0+1594: [], env=e0.1
  (cls|spec|blt)  %34.1 = LdFun              !v    isBaseNamespace, e112.1
  fs              %34.2 = FrameState         R     0x56034c2b3790+329: [%118.2, %34.1], env=e112.1, next=%34.0
  void                    Deopt              !v    %34.2, DeadCall@0x56034b437388[Call#4], %34.1   !
BB80   <- [35]
  fs              %80.0 = FrameState         R     0x56034c2e49a0+1594: [], env=e0.1
  (cls|spec|blt)  %80.1 = LdFun              !v    stop, e112.1
  fs              %80.2 = FrameState         R     0x56034c2b3790+393: [%80.1], env=e112.1, next=%80.0
  void                    Deopt              !v    %80.2, DeadCall@0x56034b437388[Call#5], %80.1   !
BB36   <- [35]
  val?^ | miss    %36.0 = LdVar              eR    ns, e112.1
  val?            %36.1 = Force!<value>      !v    %36.0, e112.1   <env->
  val?            %36.2 = PopContext         C     %36.1, %112.0   <env->
  (cls|spec|blt)  %36.3 = LdFun              !v    environment<-, <0x560348a90128>, e0.1
  val?^ | miss    %36.4 = LdVar              eR    valideta, e0.1
  lgl$#-          %36.5 = IsType                   %36.4 isA val?~- | miss
  void                    Branch                   %36.5 -> BB120 (if true) | BB121 (if false)
BB120   <- [36]
  val?~- | miss   %120.0 = CastType           d     dn %36.4
  val?-           %120.1 = Force!<value>            %120.0,    <cls->
  val?            %120.2 = NamedCall          !v    %36.3(%120.1, value=%36.2) e0.1
  void                    StVar              lW    valideta, %120.2, e0.1
  (cls|spec|blt)  %120.4 = LdFun              !v    environment<-, <0x560348a90128>, e0.1
  val?^ | miss    %120.5 = LdVar              eR    mu.eta, e0.1
  lgl$#-          %120.6 = IsType                   %120.5 isA val?~- | miss
  void                    Branch                   %120.6 -> BB122 (if true) | BB123 (if false)
BB121   <- [36]
  fs              %121.0 = FrameState         R     0x56034c2e49a0+1599: [%36.2], env=e0.1
  void                    Deopt              !v    %121.0, Typecheck@0x56034b437438[Type#6], %36.4   !
BB122   <- [120]
  val?~- | miss   %122.0 = CastType           d     dn %120.5
  val?-           %122.1 = Force!<value>            %122.0,    <cls->
  val?            %122.2 = NamedCall          !v    %120.4(%122.1, value=%36.2) e0.1
  void                    StVar              lW    mu.eta, %122.2, e0.1
  (cls|spec|blt)  %122.4 = LdFun              !v    environment<-, <0x560348a90128>, e0.1
  val?^ | miss    %122.5 = LdVar              eR    linkinv, e0.1
  lgl$#-          %122.6 = IsType                   %122.5 isA val?~- | miss
  void                    Branch                   %122.6 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  fs              %123.0 = FrameState         R     0x56034c2e49a0+1673: [%36.2], env=e0.1
  void                    Deopt              !v    %123.0, Typecheck@0x56034b437438[Type#8], %120.5   !
BB124   <- [122]
  val?~- | miss   %124.0 = CastType           d     dn %122.5
  val?-           %124.1 = Force!<value>            %124.0,    <cls->
  val?            %124.2 = NamedCall          !v    %122.4(%124.1, value=%36.2) e0.1
  void                    StVar              lW    linkinv, %124.2, e0.1
  (cls|spec|blt)  %124.4 = LdFun              !v    environment<-, <0x560348a90128>, e0.1
  val?^ | miss    %124.5 = LdVar              eR    linkfun, e0.1
  lgl$#-          %124.6 = IsType                   %124.5 isA val?~- | miss
  void                    Branch                   %124.6 -> BB126 (if true) | BB127 (if false)
BB125   <- [122]
  fs              %125.0 = FrameState         R     0x56034c2e49a0+1747: [%36.2], env=e0.1
  void                    Deopt              !v    %125.0, Typecheck@0x56034b437438[Type#10], %122.5   !
BB126   <- [124]
  val?~- | miss   %126.0 = CastType           d     dn %124.5
  val?-           %126.1 = Force!<value>            %126.0,    <cls->
  val?            %126.2 = NamedCall          !v    %124.4(%126.1, value=%36.2) e0.1
  void                    StVar              lW    linkfun, %126.2, e0.1
  val?^ | miss    %126.4 = LdVar              eR    structure, e0.1
  lgl$#-          %126.5 = Identical                %126.4, function(.Data, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %126.5 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  fs              %127.0 = FrameState         R     0x56034c2e49a0+1821: [%36.2], env=e0.1
  void                    Deopt              !v    %127.0, Typecheck@0x56034b437438[Type#12], %124.5   !
BB128   <- [126]
  prom-           %128.0 = MkArg                    unboundValue, make.link[0x56034b428690]_p2, e0.1
  dots-           %128.1 = DotsList           l     class="link-glm"
  ct              %128.2 = PushContext        lCL   %128.0, %128.1, structure(list(linkfun=linkfun, linkinv=linkin|..., function(.Data, ...) <(rir::DispatchTable*)0x5|..., e0.1
  val?^           %128.3 = CastType                 up %128.0
  env             e128.4 = MkEnv              l     .Data=%128.3, ...=%128.1, parent=R_BaseNamespace, context 1
  val?            %128.5 = Force!<lazy>       !vL   %128.3, e128.4   <(str|vec)>
  lgl$-           %128.6 = Is                       %128.5, NULL
  lgl$#-          %128.7 = CheckTrueFalse     e     %128.6
  void                    Branch                   %128.7 -> BB79 (if true) | BB47 (if false)
BB129   <- [126]
  fs              %129.0 = FrameState         R     0x56034c2e49a0+1889: [], env=e0.1
  void                    Deopt              !v    %129.0, CallTarget@0x56034b437438[Call#8], %126.4   !
BB79   <- [128]
  fs              %79.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  (cls|spec|blt)  %79.1 = LdFun              !v    warning, R_BaseNamespace
  fs              %79.2 = FrameState         R     0x56034ada15e0+35: [%79.1], env=e128.4, next=%79.0
  void                    Deopt              !v    %79.2, DeadCall@0x560349d5f308[Call#0], %79.1   !
BB47   <- [128]
  val?            %47.0 = NamedCall          !v    <blt list>(class="link-glm") e128.4   <vec+>
  void                    StVar              lW    attrib, %47.0, e128.4
  lgl$#-          %47.2 = IsType                   %47.0 isA val?+
  val?^ | miss    %47.3 = LdVar              eR    length, e128.4
  lgl$#-          %47.4 = Identical                <blt length>, %47.3   <true>
  void                    Branch                   %47.4 -> BB130 (if true) | BB131 (if false)
BB130   <- [47]
  val             %130.0 = ChkMissing         e     %47.0
  void                    Branch                   %47.2 -> BB132 (if true) | BB133 (if false)
BB131   <- [47]
  void                    Nop                !     
  lgl$#-          %131.1 = %47.4
  dr              %131.2 = DeadBranchReached@0x560349d5f308[Test#0]
  goto BB48
BB132   <- [130]
  val?+           %132.0 = CastType           d     dn %47.0   <vec+>
  (int|real)$-    %132.1 = CallSafeBuiltin    wed   length(%132.0)    <int$->
  lgl$#-          %132.2 = IsType                   %132.1 isA int$-
  void                    Branch                   %132.2 -> BB134 (if true) | BB135 (if false)
BB133   <- [130]
  void                    Nop                !     
  val?            %133.1 = %47.0
  dr              %133.2 = Typecheck@0x560349d5f308[Type#1]
  goto BB48
BB48   <- [131, 133]
  val?^ | miss    %48.0 = Phi                      %131.1:BB131, %133.1:BB133
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %131.2:BB131, %133.2:BB133
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %48.5 = FrameState         R     0x56034ada15e0+113: [], env=e128.4, next=%48.4
  void                    Deopt              !v    %48.5, %48.3, %48.1   !
BB134   <- [132]
  int$-           %134.0 = CastType           d     dn %132.1
  lgl$#-          %134.1 = CheckTrueFalse     e     %134.0
  void                    Branch                   %134.1 -> BB54 (if true) | BB52 (if false)
BB135   <- [132]
  void                    Nop                !     
  (int|real)$-    %135.1 = %132.1
  dr              %135.2 = Typecheck@0x560349d5f308[Type#4]
  goto BB50
BB54   <- [134]
  val?^ | miss    %54.0 = LdVar              eR    c, e128.4
  lgl$#-          %54.1 = Identical                <blt c>, %54.0   <true>
  void                    Branch                   %54.1 -> BB136 (if true) | BB137 (if false)
BB52   <- [134]
  void                    Nop                !     
  goto BB53
BB50   <- [135, 137]
  val?^ | miss    %50.0 = Phi                      %135.1:BB135, %137.1:BB137
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %135.2:BB135, %137.2:BB137
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %50.5 = FrameState         R     0x56034ada15e0+204: [%132.1], env=e128.4, next=%50.4
  void                    Deopt              !v    %50.5, %50.3, %50.1   !
BB136   <- [54]
  str-            %136.0 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %136.0, e128.4
  val?^ | miss    %136.2 = LdVar              eR    names, e128.4
  lgl$#-          %136.3 = Identical                <blt names>, %136.2   <true>
  void                    Branch                   %136.3 -> BB138 (if true) | BB139 (if false)
BB137   <- [54]
  void                    Nop                !     
  lgl$#-          %137.1 = %54.1
  dr              %137.2 = DeadBranchReached@0x560349d5f308[Test#1]
  goto BB50
BB53   <- [52, 162]
  val?^ | miss    %53.0 = LdVar              eR    .Data, e128.4
  void                    Visible            v     
  val?            %53.2 = Force!<value>      !     %53.0, e128.4   <(str|vec)>
  val?            %53.3 = PopContext         C     %53.2, %128.2   <vec>
  void                    Return             l     %53.3
BB138   <- [136]
  val+            %138.0 = CallSafeBuiltin    wed   names(%132.0)    <str->
  void                    StVar              lW    attrnames, %138.0, e128.4
  val?^ | miss    %138.2 = LdVar              eR    match, e128.4
  lgl$#-          %138.3 = Identical                %138.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %138.3 -> BB140 (if true) | BB141 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %139.1 = FrameState         R     0x56034ada15e0+361: [], env=e128.4, next=%139.0
  void                    Deopt              !v    %139.1, DeadBranchReached@0x560349d5f308[Test#2], %136.3   !
BB140   <- [138]
  val+            %140.0 = CallSafeBuiltin    wed   match(%138.0, %136.0, NA, nil)    <int->
  void                    StVar              lW    m, %140.0, e128.4
  lgl$#-          %140.2 = IsType                   %140.0 isA int-
  val?^ | miss    %140.3 = LdVar              eR    is.na, e128.4
  lgl$#-          %140.4 = Identical                <blt is.na>, %140.3   <true>
  void                    Branch                   %140.4 -> BB142 (if true) | BB143 (if false)
BB141   <- [138]
  fs              %141.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %141.1 = FrameState         R     0x56034ada15e0+466: [], env=e128.4, next=%141.0
  void                    Deopt              !v    %141.1, CallTarget@0x560349d5f308[Call#5], %138.2   !
BB142   <- [140]
  void                    Branch                   %140.2 -> BB144 (if true) | BB145 (if false)
BB143   <- [140]
  void                    Nop                !     
  lgl$#-          %143.1 = %140.4
  dr              %143.2 = DeadBranchReached@0x560349d5f308[Test#3]
  goto BB59
BB144   <- [142]
  int-            %144.0 = CastType           d     dn %140.0
  lgl-            %144.1 = CallSafeBuiltin    wed   is.na(%144.0)    <lgl->
  lgl-            %144.2 = Not                wed   %144.1, elided   <lgl->
  void                    StVar              lW    ok, %144.2, e128.4
  val?^ | miss    %144.4 = LdVar              eR    any, e128.4
  lgl$#-          %144.5 = Identical                <blt any>, %144.4   <true>
  void                    Branch                   %144.5 -> BB146 (if true) | BB147 (if false)
BB145   <- [142]
  void                    Nop                !     
  val+            %145.1 = %140.0
  dr              %145.2 = Typecheck@0x560349d5f308[Type#11]
  goto BB59
BB59   <- [143, 145]
  val?^ | miss    %59.0 = Phi                      %143.1:BB143, %145.1:BB145
  val?^ | miss    %59.1 = %59.0
  dr              %59.2 = Phi                      %143.2:BB143, %145.2:BB145
  dr              %59.3 = %59.2
  fs              %59.4 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %59.5 = FrameState         R     0x56034ada15e0+517: [], env=e128.4, next=%59.4
  void                    Deopt              !v    %59.5, %59.3, %59.1   !
BB146   <- [144]
  val?            %146.0 = CallBuiltin        !v    any(%144.2) e128.4   <lgl$->
  lgl$#-          %146.1 = IsType                   %146.0 isA lgl$-
  void                    Branch                   %146.1 -> BB148 (if true) | BB149 (if false)
BB147   <- [144]
  fs              %147.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %147.1 = FrameState         R     0x56034ada15e0+623: [], env=e128.4, next=%147.0
  void                    Deopt              !v    %147.1, DeadBranchReached@0x560349d5f308[Test#4], %144.5   !
BB148   <- [146]
  lgl$-           %148.0 = CastType           d     dn %146.0
  lgl$#-          %148.1 = CheckTrueFalse     e     %148.0
  void                    Branch                   %148.1 -> BB76 (if true) | BB65 (if false)
BB149   <- [146]
  void                    Nop                !     
  val?            %149.1 = %146.0
  dr              %149.2 = Typecheck@0x560349d5f308[Type#17]
  goto BB63
BB76   <- [148]
  val?^ | miss    %76.0 = LdVar              eR    c, e128.4
  lgl$#-          %76.1 = Identical                <blt c>, %76.0   <@?>
  void                    Branch                   %76.1 -> BB78 (if true) | BB77 (if false)
BB65   <- [148]
  val?^ | miss    %65.0 = LdVar              eR    any, e128.4
  lgl$#-          %65.1 = Identical                <blt any>, %65.0   <true>
  void                    Branch                   %65.1 -> BB150 (if true) | BB151 (if false)
BB63   <- [149, 151]
  val?^ | miss    %63.0 = Phi                      %149.1:BB149, %151.1:BB151
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %149.2:BB149, %151.2:BB151
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %63.5 = FrameState         R     0x56034ada15e0+714: [%146.0], env=e128.4, next=%63.4
  void                    Deopt              !v    %63.5, %63.3, %63.1   !
BB78   <- [76]
  fs              %78.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  str-            %78.1 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %78.1, e128.4
  (cls|spec|blt)  %78.3 = LdFun              !v    <-, e128.4
  fs              %78.4 = FrameState         R     0x56034ada15e0+876: [%78.3], env=e128.4, next=%78.0
  void                    Deopt              !v    %78.4, DeadCall@0x560349d5f308[Call#9], %78.3   !
BB77   <- [76]
  fs              %77.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  (cls|spec|blt)  %77.1 = LdFun              !v    c, e128.4
  fs              %77.2 = FrameState         R     0x56034ada15e0+758: [%77.1], env=e128.4, next=%77.0
  void                    Deopt              !v    %77.2, DeadCall@0x560349d5f308[Call#8], %77.1   !
BB150   <- [65]
  (cls|spec|blt)  %150.0 = LdFun              !v    [[, <0x560348a7bc48>, e128.4
  prom-           %150.1 = MkArg                    unboundValue, make.link[0x56034b428690]_p8, e128.4
  val?            %150.2 = NamedCall          !v    %150.0(%150.1, "class", exact=true) e128.4   <(nil|str)->
  lgl$#-          %150.3 = IsType                   %150.2 isA val?-
  void                    Branch                   %150.3 -> BB152 (if true) | BB153 (if false)
BB151   <- [65]
  void                    Nop                !     
  lgl$#-          %151.1 = %65.1
  dr              %151.2 = DeadBranchReached@0x560349d5f308[Test#10]
  goto BB63
BB152   <- [150]
  val?-           %152.0 = CastType           d     dn %150.2   <(nil|str)->
  lgl-            %152.1 = Eq                 wed   %152.0, "factor", elided   <lgl->
  val?            %152.2 = CallBuiltin        !v    any(%152.1) e128.4   <lgl$->
  lgl$#-          %152.3 = IsType                   %152.2 isA lgl$-
  void                    Branch                   %152.3 -> BB154 (if true) | BB155 (if false)
BB153   <- [150]
  fs              %153.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %153.1 = FrameState         R     0x56034ada15e0+1023: [<blt any>, %150.2], env=e128.4, next=%153.0
  void                    Deopt              !v    %153.1, Typecheck@0x560349d5f308[Type#38], %150.2   !
BB154   <- [152]
  lgl$-           %154.0 = CastType           d     dn %152.2
  lgl$-           %154.1 = AsLogical                %154.0
  lgl$#-          %154.2 = Identical                %154.1, false
  void                    Branch                   %154.2 -> BB71 (if true) | BB70 (if false)
BB155   <- [152]
  void                    Nop                !     
  val?            %155.1 = %152.2
  dr              %155.2 = Typecheck@0x560349d5f308[Type#40]
  goto BB68
BB71   <- [154]
  lgl$#-          %71.0 = CheckTrueFalse     e     %154.1
  void                    Branch                   %71.0 -> BB75 (if true) | BB72 (if false)
BB70   <- [154]
  fs              %70.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  (cls|spec|blt)  %70.1 = LdFun              !v    typeof, e128.4
  fs              %70.2 = FrameState         R     0x56034ada15e0+1074: [%154.1, %70.1], env=e128.4, next=%70.0
  void                    Deopt              !v    %70.2, DeadCall@0x560349d5f308[Call#14], %70.1   !
BB68   <- [155, 157, 159]
  val?^ | miss    %68.0 = Phi                      %155.1:BB155, %157.1:BB157, %159.1:BB159
  val?^ | miss    %68.1 = %68.0
  dr              %68.2 = Phi                      %155.2:BB155, %157.2:BB157, %159.2:BB159
  dr              %68.3 = %68.2
  fs              %68.4 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %68.5 = FrameState         R     0x56034ada15e0+1057: [%152.2], env=e128.4, next=%68.4
  void                    Deopt              !v    %68.5, %68.3, %68.1   !
BB75   <- [71]
  fs              %75.0 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  (cls|spec|blt)  %75.1 = LdFun              !v    storage.mode<-, e128.4
  fs              %75.2 = FrameState         R     0x56034ada15e0+1142: ["integer", %75.1], env=e128.4, next=%75.0
  void                    Deopt              !v    %75.2, DeadCall@0x560349d5f308[Call#15], %75.1   !
BB72   <- [71]
  val?^ | miss    %72.0 = LdVar              eR    c, e128.4
  lgl$#-          %72.1 = Identical                <blt c>, %72.0   <true>
  void                    Branch                   %72.1 -> BB156 (if true) | BB157 (if false)
BB156   <- [72]
  val?^ | miss    %156.0 = LdVar              eR    attributes, e128.4
  lgl$#-          %156.1 = Identical                <blt attributes>, %156.0   <true>
  void                    Branch                   %156.1 -> BB158 (if true) | BB159 (if false)
BB157   <- [72]
  void                    Nop                !     
  lgl$#-          %157.1 = %72.1
  dr              %157.2 = DeadBranchReached@0x560349d5f308[Test#11]
  goto BB68
BB158   <- [156]
  val?^ | miss    %158.0 = LdVar              eR    .Data, e128.4
  val?            %158.1 = Force!<wrapped>    !v    %158.0, e128.4   <(str|vec)>
  val?            %158.2 = CallBuiltin        !v    attributes(%158.1) e128.4   <(nil|vec)+>
  lgl$#-          %158.3 = IsType                   %158.2 isA val?+
  val?^ | miss    %158.4 = LdVar              eR    attrib, e128.4
  lgl$#-          %158.5 = IsType                   %158.4 isA val?~+ | miss
  void                    Branch                   %158.5 -> BB160 (if true) | BB161 (if false)
BB159   <- [156]
  void                    Nop                !     
  lgl$#-          %159.1 = %156.1
  dr              %159.2 = DeadBranchReached@0x560349d5f308[Test#12]
  goto BB68
BB160   <- [158]
  val?~+ | miss   %160.0 = CastType           d     dn %158.4
  val?+           %160.1 = Force!<value>            %160.0,    <vec+>
  void                    Branch                   %158.3 -> BB162 (if true) | BB163 (if false)
BB161   <- [158]
  void                    Nop                !     
  val?^ | miss    %161.1 = %158.4
  dr              %161.2 = Typecheck@0x560349d5f308[Type#51]
  goto BB73
BB162   <- [160]
  val?+           %162.0 = CastType           d     dn %158.2   <(nil|vec)+>
  val+            %162.1 = CallSafeBuiltin    wed   c(%162.0, %160.1)    <vec+>
  (cls|spec|blt)  %162.2 = LdFun              !v    attributes<-, <0x560348a7c128>, e128.4
  val?^ | miss    %162.3 = LdVar              eR    .Data, e128.4
  val?            %162.4 = Force!<wrapped>    !v    %162.3, e128.4   <(str|vec)>
  val?            %162.5 = NamedCall          !v    %162.2(%162.4, value=%162.1) e128.4
  void                    StVar              lW    .Data, %162.5, e128.4
  goto BB53
BB163   <- [160]
  void                    Nop                !     
  val?            %163.1 = %158.2
  dr              %163.2 = Typecheck@0x560349d5f308[Type#50]
  goto BB73
BB73   <- [161, 163]
  val?^ | miss    %73.0 = Phi                      %161.1:BB161, %163.1:BB163
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %161.2:BB161, %163.2:BB163
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x56034c2e49a0+1934: [], env=e0.1
  fs              %73.5 = FrameState         R     0x56034ada15e0+1361: [<blt c>, %158.2], env=e128.4, next=%73.4
  void                    Deopt              !v    %73.5, %73.3, %73.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, <0x560348a905c0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, make.link[0x56034b428690]_p3, e0.0
  prom-           %0.3  = MkArg                    unboundValue, make.link[0x56034b428690]_p4, e0.0
  prom-           %0.4  = MkArg                    unboundValue, make.link[0x56034b428690]_p5, e0.0
  prom-           %0.5  = MkArg                    unboundValue, make.link[0x56034b428690]_p6, e0.0
  prom-           %0.6  = MkArg                    unboundValue, make.link[0x56034b428690]_p7, e0.0
  val?            %0.7  = NamedCall          !     %0.1(linkfun=%0.2, linkinv=%0.3, mu.eta=%0.4, valideta=%0.5, name=%0.6) e0.0   <vec+>
  void                    Return             l     %0.7
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    linkfun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    linkinv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mu.eta, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    valideta, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    link, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attrib, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ make.link[0x56034b428690]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
