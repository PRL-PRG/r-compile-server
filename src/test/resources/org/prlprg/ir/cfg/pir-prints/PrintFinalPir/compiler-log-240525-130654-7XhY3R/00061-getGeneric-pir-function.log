
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGeneric[0x5619850a35a0]                                                   │
│ Context: CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
getGeneric[0x5619850a35a0]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?~+          %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  env             e0.4  = MkEnv              l     f=%0.2, mustFind=%0.1, where=%0.0, package(miss)=missingArg, parent=<env 0x561983284378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB53 (if false)
BB2   <- [0]
  void                    StArg              lW    mustFind, false, e0.4
  goto BB3
BB53   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [53, 2]
  void                    StArg              lW    package, "", e0.4
  val?^ | miss    %3.1  = LdVar              eR    is.function, <env 0x561983284378>
  lgl$#-          %3.2  = Identical                <blt is.function>, %3.1   <true>
  void                    Branch                   %3.2 -> BB54 (if true) | BB55 (if false)
BB54   <- [3]
  val+            %54.0 = Force<value>             %0.2,    <str$->
  lgl$#-          %54.1 = CallSafeBuiltin    wed   is.function(%54.0)    <lgl$->
  void                    Branch                   %54.1 -> BB52 (if true) | BB8 (if false)
BB55   <- [3]
  fs              %55.0 = FrameState         R     0x561985158710+0: [], env=e0.4
  void                    Deopt              !v    %55.0, DeadBranchReached@0x5619854d3820[Test#0], %3.2
BB52   <- [54]
  (cls|spec|blt)  %52.0 = LdFun              !v    is, <env 0x561983284378>
  fs              %52.1 = FrameState         R     0x561985158710+112: [%52.0], env=e0.4
  void                    Deopt              !v    %52.1, DeadCall@0x5619854d3820[Call#1], %52.0
BB8   <- [54]
  lgl$-           %8.0  = Missing            eR    where, e0.4
  lgl$#-          %8.1  = CheckTrueFalse     e     %8.0
  void                    Branch                   %8.1 -> BB51 (if true) | BB9 (if false)
BB51   <- [8]
  (cls|spec|blt)  %51.0 = LdFun              !v    .getGeneric, <env 0x561983284378>
  fs              %51.1 = FrameState         R     0x561985158710+376: [%51.0], env=e0.4
  void                    Deopt              !v    %51.1, DeadCall@0x5619854d3820[Call#7], %51.0
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    .getGeneric, <env 0x561983284378>
  lgl$#-          %9.1  = Identical                %9.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %9.1 -> BB56 (if true) | BB57 (if false)
BB56   <- [9]
  prom-           %56.0 = MkArg                    unboundValue, getGeneric[0x5619850a35a0]_p2 (!refl), e0.4
  prom-           %56.1 = MkArg                    unboundValue, getGeneric[0x5619850a35a0]_p3, e0.4
  prom-           %56.2 = MkArg                    unboundValue, getGeneric[0x5619850a35a0]_p4 (!refl), e0.4
  val?            %56.3 = StaticCall         !v    .getGeneric[0x561984f03e10](%56.0, %56.1, %56.2) e0.4   <cls>
  lgl$-           %56.4 = Is                       %56.3, NULL
  lgl$-           %56.5 = AsLogical                %56.4
  lgl$#-          %56.6 = Identical                %56.5, false
  void                    StVar              lW    value, %56.3, e0.4
  val             %56.8 = ChkMissing         e     %56.3
  void                    Branch                   %56.6 -> BB50 (if true) | BB10 (if false)
BB57   <- [9]
  fs              %57.0 = FrameState         R     0x561985158710+91: [%54.1], env=e0.4
  void                    Deopt              !v    %57.0, CallTarget@0x5619854d3820[Call#6], %9.0
BB50   <- [56]
  void                    Nop                !     
  lgl$-           %50.1 = %56.5
  goto BB15
BB10   <- [56]
  val?^ | miss    %10.0 = LdVar              eR    baseenv, e0.4
  lgl$#-          %10.1 = Identical                <blt baseenv>, %10.0   <@?>
  void                    Branch                   %10.1 -> BB12 (if true) | BB11 (if false)
BB15   <- [50, 14]
  lgl$-           %15.0 = Phi                      %14.8:BB14, %50.1:BB50
  lgl$-           %15.1 = %15.0
  lgl$#-          %15.2 = CheckTrueFalse     e     %15.1
  void                    Branch                   %15.2 -> BB42 (if true) | BB16 (if false)
BB12   <- [10]
  val?            %12.0 = CallBuiltin        !v    baseenv() e0.4   <val?_>
  lgl$#-          %12.1 = IsType                   %12.0 isA val+   <@?>
  void                    Branch                   %12.1 -> BB49 (if true) | BB13 (if false)
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    baseenv, e0.4
  fs              %11.1 = FrameState         R     0x561985158710+481: [%56.5, %11.0], env=e0.4
  void                    Deopt              !v    %11.1, DeadCall@0x5619854d3820[Call#8], %11.0   !
BB42   <- [15]
  val?^ | miss    %42.0 = LdVar              eR    is.function, e0.4
  lgl$#-          %42.1 = Identical                <blt is.function>, %42.0   <@?>
  void                    Branch                   %42.1 -> BB44 (if true) | BB43 (if false)
BB16   <- [15]
  void                    Nop                !     
  goto BB17
BB49   <- [12]
  val?^ | miss    %49.0 = LdVar              eR    f, e0.4
  val?            %49.1 = Force!             !v    %49.0, e0.4   <val?_>
  val?            %49.2 = %49.1
  goto BB14
BB13   <- [12]
  prom-           %13.0 = MkArg                    unboundValue, getGeneric[0x5619850a35a0]_p5, e0.4
  prom-           %13.1 = %13.0
  goto BB14
BB44   <- [42]
  val?^ | miss    %44.0 = LdVar              eR    baseDef, e0.4
  val?            %44.1 = Force!             !v    %44.0, e0.4   <val?_>
  lgl$#-          %44.2 = IsType                   %44.1 isA val?+
  void                    Branch                   %44.2 -> BB58 (if true) | BB59 (if false)
BB43   <- [42]
  (cls|spec|blt)  %43.0 = LdFun              !v    is.function, e0.4
  fs              %43.1 = FrameState         R     0x561985158710+640: [%43.0], env=e0.4
  void                    Deopt              !v    %43.1, DeadCall@0x5619854d3820[Call#9], %43.0   !
BB17   <- [16, 47]
  val?^ | miss    %17.0 = LdVar              eR    is.function, e0.4
  lgl$#-          %17.1 = Identical                <blt is.function>, %17.0   <true>
  void                    Branch                   %17.1 -> BB60 (if true) | BB61 (if false)
BB14   <- [13, 49]
  val?            %14.0 = Phi                      %49.2:BB49, %13.1:BB13
  val?            %14.1 = %14.0
  val?            %14.2 = Extract2_1D        !v    %12.0, %14.1, e0.4   <val?_>
  lgl$-           %14.3 = Is                       %14.2, NULL
  void                    StVar              lW    baseDef, %14.2, e0.4
  lgl$-           %14.5 = Not                d     %14.3, elided
  lgl$-           %14.6 = AsLogical                %14.5
  lgl$-           %14.7 = LAnd                     %56.5, %14.6
  lgl$-           %14.8 = %14.7
  goto BB15
BB58   <- [44]
  val?+           %58.0 = CastType           d     dn %44.1   <val?_>
  lgl$#-          %58.1 = CallSafeBuiltin    wed   is.function(%58.0)    <val?_>
  void                    Branch                   %58.1 -> BB48 (if true) | BB47 (if false)
BB59   <- [44]
  fs              %59.0 = FrameState         R     0x561985158710+681: [<blt is.function>, %44.1], env=e0.4
  void                    Deopt              !v    %59.0, Typecheck@0x5619854d3820[Type#25], %44.1   !
BB60   <- [17]
  val?^ | miss    %60.0 = LdVar              eR    value, e0.4
  val?            %60.1 = Force!<value>      !v    %60.0, e0.4   <cls>
  val?            %60.2 = CallBuiltin        !v    is.function(%60.1) e0.4   <lgl$->
  lgl$#-          %60.3 = IsType                   %60.2 isA lgl$-
  void                    Branch                   %60.3 -> BB62 (if true) | BB63 (if false)
BB61   <- [17]
  fs              %61.0 = FrameState         R     0x561985158710+882: [], env=e0.4
  void                    Deopt              !v    %61.0, DeadBranchReached@0x5619854d3820[Test#4], %17.1   !
BB48   <- [58]
  (cls|spec|blt)  %48.0 = LdFun              !v    genericForBasic, e0.4
  fs              %48.1 = FrameState         R     0x561985158710+724: [%48.0], env=e0.4
  void                    Deopt              !v    %48.1, DeadCall@0x5619854d3820[Call#10], %48.0   !
BB47   <- [58]
  void                    Nop                !     
  goto BB17
BB62   <- [60]
  lgl$-           %62.0 = CastType           d     dn %60.2
  lgl$#-          %62.1 = CheckTrueFalse     e     %62.0
  void                    Branch                   %62.1 -> BB41 (if true) | BB22 (if false)
BB63   <- [60]
  fs              %63.0 = FrameState         R     0x561985158710+973: [%60.2], env=e0.4
  void                    Deopt              !v    %63.0, Typecheck@0x5619854d3820[Type#36], %60.2   !
BB41   <- [62]
  val?^ | miss    %41.0 = LdVar              eR    value, e0.4
  void                    Visible            v     
  val?            %41.2 = Force!<value>      !     %41.0, e0.4   <cls>
  val?            %41.3 = %41.2
  goto BB37
BB22   <- [62]
  val?^ | miss    %22.0 = LdVar              eR    nzchar, e0.4
  lgl$#-          %22.1 = Identical                <blt nzchar>, %22.0   <@?>
  void                    Branch                   %22.1 -> BB24 (if true) | BB23 (if false)
BB37   <- [41, 36]
  val?            %37.0 = Phi                      %36.2:BB36, %41.3:BB41
  val?            %37.1 = %37.0
  void                    Return             l     %37.1
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    package, e0.4
  val?            %24.1 = Force!             !v    %24.0, e0.4   <val?_>
  val?            %24.2 = CallBuiltin        !v    nzchar(%24.1) e0.4   <val?_>
  lgl$-           %24.3 = AsLogical          e     %24.2
  lgl$#-          %24.4 = Identical                %24.3, false
  void                    Branch                   %24.4 -> BB28 (if true) | BB25 (if false)
BB23   <- [22]
  (cls|spec|blt)  %23.0 = LdFun              !v    nzchar, e0.4
  fs              %23.1 = FrameState         R     0x561985158710+1012: [%23.0], env=e0.4
  void                    Deopt              !v    %23.1, DeadCall@0x5619854d3820[Call#14], %23.0   !
BB28   <- [24]
  lgl$#-          %28.0 = CheckTrueFalse     e     %24.3
  void                    Branch                   %28.0 -> BB40 (if true) | BB29 (if false)
BB25   <- [24]
  val?^ | miss    %25.0 = LdVar              eR    is.na, e0.4
  lgl$#-          %25.1 = Identical                <blt is.na>, %25.0   <@?>
  void                    Branch                   %25.1 -> BB27 (if true) | BB26 (if false)
BB40   <- [28]
  (cls|spec|blt)  %40.0 = LdFun              !v    tryCatch, e0.4
  fs              %40.1 = FrameState         R     0x561985158710+1229: [%40.0], env=e0.4
  void                    Deopt              !v    %40.1, DeadCall@0x5619854d3820[Call#20], %40.0   !
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    is.function, e0.4
  lgl$#-          %29.1 = Identical                <blt is.function>, %29.0   <@?>
  void                    Branch                   %29.1 -> BB31 (if true) | BB30 (if false)
BB27   <- [25]
  (cls|spec|blt)  %27.0 = LdFun              !v    match, e0.4
  fs              %27.1 = FrameState         R     0x561985158710+1152: [%24.3, <blt is.na>, %27.0], env=e0.4
  void                    Deopt              !v    %27.1, DeadCall@0x5619854d3820[Call#18], %27.0   !
BB26   <- [25]
  (cls|spec|blt)  %26.0 = LdFun              !v    is.na, e0.4
  fs              %26.1 = FrameState         R     0x561985158710+1115: [%24.3, %26.0], env=e0.4
  void                    Deopt              !v    %26.1, DeadCall@0x5619854d3820[Call#15], %26.0   !
BB31   <- [29]
  val?^ | miss    %31.0 = LdVar              eR    value, e0.4
  val?            %31.1 = Force!             !v    %31.0, e0.4   <val?_>
  lgl$#-          %31.2 = IsType                   %31.1 isA val?+
  void                    Branch                   %31.2 -> BB64 (if true) | BB65 (if false)
BB30   <- [29]
  (cls|spec|blt)  %30.0 = LdFun              !v    is.function, e0.4
  fs              %30.1 = FrameState         R     0x561985158710+1311: [%30.0], env=e0.4
  void                    Deopt              !v    %30.1, DeadCall@0x5619854d3820[Call#23], %30.0   !
BB64   <- [31]
  val?+           %64.0 = CastType           d     dn %31.1   <val?_>
  lgl$#-          %64.1 = CallSafeBuiltin    wed   is.function(%64.0)    <val?_>
  void                    Branch                   %64.1 -> BB39 (if true) | BB34 (if false)
BB65   <- [31]
  fs              %65.0 = FrameState         R     0x561985158710+1352: [<blt is.function>, %31.1], env=e0.4
  void                    Deopt              !v    %65.0, Typecheck@0x5619854d3820[Type#55], %31.1   !
BB39   <- [64]
  val?^ | miss    %39.0 = LdVar              eR    value, e0.4
  void                    Visible            v     
  val?            %39.2 = Force!             !     %39.0, e0.4   <val?_>
  val?            %39.3 = %39.2
  goto BB36
BB34   <- [64]
  val?^ | miss    %34.0 = LdVar              eR    mustFind, e0.4
  val?            %34.1 = Force!             !v    %34.0, e0.4   <val?_>
  lgl$#-          %34.2 = CheckTrueFalse     we    %34.1
  void                    Branch                   %34.2 -> BB38 (if true) | BB35 (if false)
BB36   <- [39, 35]
  val?            %36.0 = Phi                      %35.1:BB35, %39.3:BB39
  val?            %36.1 = %36.0
  val?            %36.2 = %36.1
  goto BB37
BB38   <- [34]
  (cls|spec|blt)  %38.0 = LdFun              !v    stop, e0.4
  fs              %38.1 = FrameState         R     0x561985158710+1421: [%38.0], env=e0.4
  void                    Deopt              !v    %38.1, DeadCall@0x5619854d3820[Call#24], %38.0   !
BB35   <- [34]
  void                    Visible            v     
  nil-            %35.1 = nil
  goto BB36
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ getGeneric[0x5619850a35a0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
