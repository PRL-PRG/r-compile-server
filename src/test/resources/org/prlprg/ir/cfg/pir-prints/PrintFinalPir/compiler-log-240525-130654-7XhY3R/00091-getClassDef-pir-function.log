
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x5619853f5210]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x5619853f5210]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     Class=%0.1, where=%0.0, package(miss)=missingArg, inherits(miss)=missingArg, parent=<env 0x561983284378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p0, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    package, %0.4, e0.2
  void                    StArg              lW    inherits, true, e0.2
  val?^ | miss    %0.7  = LdVar              eR    .getClassesFromCache, <env 0x561983284378>
  lgl$#-          %0.8  = Identical                %0.7, function(name) <(rir::DispatchTable*)0x561984b|...
  void                    Branch                   %0.8 -> BB30 (if true) | BB31 (if false)
BB30   <- [0]
  prom-           %30.0 = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p10, e0.2
  ct              %30.1 = PushContext        lCL   %30.0, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x561984b|..., e0.2
  val?^           %30.2 = CastType                 up %30.0
  val?^ | miss    %30.3 = LdVar              eR    .Call, <env 0x561983284378>
  lgl$#-          %30.4 = Identical                <blt .Call>, %30.3   <true>
  void                    Branch                   %30.4 -> BB32 (if true) | BB33 (if false)
BB31   <- [0]
  fs              %31.0 = FrameState         R     0x561982f97920+0: [], env=e0.2
  void                    Deopt              !v    %31.0, CallTarget@0x561984b472a0[Call#3], %0.7
BB32   <- [30]
  val?^ | miss    %32.0 = LdVar              eR    C_R_getClassFromCache, <env 0x561983284378>
  env             e32.1 = MkEnv              l     name=%30.2, parent=<env 0x561983284378>, context 1
  val?            %32.2 = Force!<value>      !v    %32.0, e32.1   <vec>
  val?^ | miss    %32.3 = LdVar              eR    name, e32.1
  val?            %32.4 = Force!<lazy>       !v    %32.3, e32.1   <str$+>
  val?^ | miss    %32.5 = LdVar              eR    .classTable, e32.1
  val?            %32.6 = Force!<wrapped>    !v    %32.5, e32.1   <env->
  val?            %32.7 = CallBuiltin        !v    .Call(%32.2, %32.4, %32.6) e32.1   <other>
  val?            %32.8 = PopContext         C     %32.7, %30.1   <(nil|other)>
  lgl$-           %32.9 = Is                       %32.8, list
  void                    StVar              lW    value, %32.8, e0.2
  val             %32.11 = ChkMissing         e     %32.8   <(nil|other)>
  lgl$#-          %32.12 = CheckTrueFalse     e     %32.9
  lgl$-           %32.13 = Is                       %32.11, NULL
  void                    Branch                   %32.12 -> BB28 (if true) | BB7 (if false)
BB33   <- [30]
  fs              %33.0 = FrameState         R     0x561982f97920+72: [], env=e0.2
  env             e33.1 = (MkEnv)            l     name=%30.2, parent=<env 0x561983284378>, context 1
  fs              %33.2 = FrameState         R     0x561984be1cb0+17: [<blt .Call>, %30.4], env=e33.1, next=%33.0
  void                    Deopt              !v    %33.2, DeadBranchReached@0x5619841d64b8[Test#0], %30.4   !
BB28   <- [32]
  (cls|spec|blt)  %28.0 = LdFun              !v    .resolveClassList, e0.2
  fs              %28.1 = FrameState         R     0x561982f97920+121: [%28.0], env=e0.2
  void                    Deopt              !v    %28.1, DeadCall@0x561984b472a0[Call#4], %28.0   !
BB7   <- [32]
  lgl$#-          %7.0  = CheckTrueFalse     e     %32.13
  void                    Branch                   %7.0 -> BB10 (if true) | BB8 (if false)
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    classMetaName, e0.2
  lgl$#-          %10.1 = Identical                %10.0, function(name) <(rir::DispatchTable*)0x5619855|...
  void                    Branch                   %10.1 -> BB34 (if true) | BB35 (if false)
BB8   <- [7]
  void                    Nop                !     
  goto BB9
BB34   <- [10]
  prom-           %34.0 = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p3, e0.2
  val?            %34.1 = StaticCall         !v    classMetaName[0x56198504ebf0](%34.0) e0.2   <str$->
  void                    StVar              lW    cname, %34.1, e0.2
  val?^ | miss    %34.3 = LdVar              eR    is.character, e0.2
  lgl$#-          %34.4 = Identical                <blt is.character>, %34.3   <true>
  void                    Branch                   %34.4 -> BB36 (if true) | BB37 (if false)
BB35   <- [10]
  fs              %35.0 = FrameState         R     0x561982f97920+86: [], env=e0.2
  void                    Deopt              !v    %35.0, CallTarget@0x561984b472a0[Call#5], %10.0   !
BB9   <- [8, 23, 46]
  val?^ | miss    %9.0  = LdVar              eR    value, e0.2
  void                    Visible            v     
  val?            %9.2  = Force!<value>      !     %9.0, e0.2   <(nil|other)>
  void                    Return             l     %9.2
BB36   <- [34]
  val?^ | miss    %36.0 = LdVar              eR    where, e0.2
  val?            %36.1 = Force!<lazy>       !v    %36.0, e0.2   <env->
  lgl$#-          %36.2 = CallSafeBuiltin    wed   is.character(%36.1)    <lgl$->
  void                    Branch                   %36.2 -> BB27 (if true) | BB13 (if false)
BB37   <- [34]
  fs              %37.0 = FrameState         R     0x561982f97920+248: [], env=e0.2
  void                    Deopt              !v    %37.0, DeadBranchReached@0x561984b472a0[Test#1], %34.4   !
BB27   <- [36]
  val?^ | miss    %27.0 = LdVar              eR    where, e0.2
  val?            %27.1 = Force!             !v    %27.0, e0.2   <val?_>
  void                    StVar              lW    package, %27.1, e0.2
  goto BB14
BB13   <- [36]
  void                    Nop                !     
  goto BB14
BB14   <- [13, 27]
  val?^ | miss    %14.0 = LdVar              eR    isTRUE, e0.2
  lgl$#-          %14.1 = Identical                %14.0, function(x) <(rir::DispatchTable*)0x561984c464|...
  void                    Branch                   %14.1 -> BB38 (if true) | BB39 (if false)
BB38   <- [14]
  prom-           %38.0 = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p5, e0.2
  val?            %38.1 = StaticCall         !v    isTRUE[0x561985078fc0](%38.0) e0.2   <lgl$->
  lgl$#-          %38.2 = IsType                   %38.1 isA lgl$-
  void                    Branch                   %38.2 -> BB40 (if true) | BB41 (if false)
BB39   <- [14]
  fs              %39.0 = FrameState         R     0x561982f97920+378: [], env=e0.2
  void                    Deopt              !v    %39.0, CallTarget@0x561984b472a0[Call#8], %14.0   !
BB40   <- [38]
  lgl$-           %40.0 = CastType           d     dn %38.1
  lgl$#-          %40.1 = CheckTrueFalse     e     %40.0
  void                    Branch                   %40.1 -> BB26 (if true) | BB19 (if false)
BB41   <- [38]
  void                    Nop                !     
  val?            %41.1 = %38.1
  dr              %41.2 = Typecheck@0x561984b472a0[Type#26]
  goto BB17
BB26   <- [40]
  (cls|spec|blt)  %26.0 = LdFun              !v    .requirePackage, e0.2
  fs              %26.1 = FrameState         R     0x561982f97920+431: [%26.0], env=e0.2
  void                    Deopt              !v    %26.1, DeadCall@0x561984b472a0[Call#10], %26.0   !
BB19   <- [40]
  val?^ | miss    %19.0 = LdVar              eR    is.environment, e0.2
  lgl$#-          %19.1 = Identical                <blt is.environment>, %19.0   <true>
  void                    Branch                   %19.1 -> BB42 (if true) | BB43 (if false)
BB17   <- [41, 43]
  val?^ | miss    %17.0 = Phi                      %41.1:BB41, %43.1:BB43
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %41.2:BB41, %43.2:BB43
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x561982f97920+410: [%38.1], env=e0.2
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB42   <- [19]
  val?^ | miss    %42.0 = LdVar              eR    package, e0.2
  val?            %42.1 = Force!<wrapped>    !v    %42.0, e0.2   <nil->
  lgl$#-          %42.2 = CallSafeBuiltin    wed   is.environment(%42.1)    <lgl$->
  void                    Branch                   %42.2 -> BB25 (if true) | BB22 (if false)
BB43   <- [19]
  void                    Nop                !     
  lgl$#-          %43.1 = %19.1
  dr              %43.2 = DeadBranchReached@0x561984b472a0[Test#2]
  goto BB17
BB25   <- [42]
  (cls|spec|blt)  %25.0 = LdFun              !v    get0, e0.2
  fs              %25.1 = FrameState         R     0x561982f97920+584: [%25.0], env=e0.2
  void                    Deopt              !v    %25.1, DeadCall@0x561984b472a0[Call#12], %25.0   !
BB22   <- [42]
  val?^ | miss    %22.0 = LdVar              eR    value, e0.2
  lgl$#-          %22.1 = IsType                   %22.0 isA val?~- | miss
  void                    Branch                   %22.1 -> BB44 (if true) | BB45 (if false)
BB44   <- [22]
  val?~- | miss   %44.0 = CastType           d     dn %22.0
  val?-           %44.1 = Force!<value>            %44.0,    <nil->
  lgl$-           %44.2 = Is                       %44.1, NULL
  lgl$#-          %44.3 = CheckTrueFalse     e     %44.2
  void                    Branch                   %44.3 -> BB24 (if true) | BB23 (if false)
BB45   <- [22]
  void                    Nop                !     
  val?^ | miss    %45.1 = %22.0
  dr              %45.2 = Typecheck@0x561984b472a0[Type#36]
  goto BB20
BB24   <- [44]
  val?^ | miss    %24.0 = LdVar              eR    get0, e0.2
  lgl$#-          %24.1 = Identical                %24.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Branch                   %24.1 -> BB46 (if true) | BB47 (if false)
BB23   <- [44]
  void                    Nop                !     
  goto BB9
BB20   <- [45, 47]
  val?^ | miss    %20.0 = Phi                      %45.1:BB45, %47.1:BB47
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %45.2:BB45, %47.2:BB47
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x561982f97920+563: [%42.2], env=e0.2
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB46   <- [24]
  prom-           %46.0 = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p7, e0.2
  prom-           %46.1 = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p8, e0.2
  prom-           %46.2 = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p9, e0.2
  val?            %46.3 = StaticCall         !v    get0[0x561985103cb0](%46.0, %46.1, missingArg, %46.2) { 0 1 3n } e0.2   <nil->
  void                    StVar              lW    value, %46.3, e0.2
  goto BB9
BB47   <- [24]
  void                    Nop                !     
  val?^ | miss    %47.1 = %24.0
  dr              %47.2 = CallTarget@0x561984b472a0[Call#13]
  goto BB20
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, <0x561984c0f678>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x561982c7da90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p4, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  val?            %0.4  = Gt                 !v    %0.3, 1L, e0.0   <lgl$->
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    Class, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e0.0   <val?_>
  void                    Visible            v     
  val?            %2.4  = %2.2
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e0.0   <str$->
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.3:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nzchar, <0x561982c89240>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x5619853f5210]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ getClassDef[0x5619853f5210]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
