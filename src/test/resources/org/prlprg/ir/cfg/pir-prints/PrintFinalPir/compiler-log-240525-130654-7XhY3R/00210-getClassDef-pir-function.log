
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x561985c32b20]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1                     │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x561985c32b20]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  lgl$#-          %0.4  = Identical                %0.0, missingArg
  env             e0.5  = MkEnv              l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=missingArg, parent=<env 0x561983284378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB46 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p0, e0.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.5
  goto BB3
BB46   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 46]
  void                    Branch                   %0.4 -> BB45 (if true) | BB4 (if false)
BB45   <- [3]
  prom-           %45.0 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p2, e0.5
  val?^ | miss    %45.1 = CastType                 up %45.0
  void                    StArg              lW    package, %45.1, e0.5
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [45, 4]
  void                    StArg              lW    inherits, true, e0.5
  val?^ | miss    %5.1  = LdVar              eR    .getClassesFromCache, <env 0x561983284378>
  lgl$#-          %5.2  = Identical                %5.1, function(name) <(rir::DispatchTable*)0x561984b|...
  void                    Branch                   %5.2 -> BB47 (if true) | BB48 (if false)
BB47   <- [5]
  prom-           %47.0 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p16, e0.5
  ct              %47.1 = PushContext        lCL   %47.0, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x561984b|..., e0.5
  val?^           %47.2 = CastType                 up %47.0
  val?^ | miss    %47.3 = LdVar              eR    .Call, <env 0x561983284378>
  lgl$#-          %47.4 = Identical                <blt .Call>, %47.3   <true>
  void                    Branch                   %47.4 -> BB49 (if true) | BB50 (if false)
BB48   <- [5]
  fs              %48.0 = FrameState         R     0x561982f97920+0: [], env=e0.5
  void                    Deopt              !v    %48.0, CallTarget@0x561984b472a0[Call#3], %5.1
BB49   <- [47]
  val?^ | miss    %49.0 = LdVar              eR    C_R_getClassFromCache, <env 0x561983284378>
  env             e49.1 = MkEnv              l     name=%47.2, parent=<env 0x561983284378>, context 1
  val?            %49.2 = Force!<value>      !v    %49.0, e49.1   <vec>
  val?^ | miss    %49.3 = LdVar              eR    name, e49.1
  val?            %49.4 = Force!<lazy>       !v    %49.3, e49.1   <str$+>
  val?^ | miss    %49.5 = LdVar              eR    .classTable, e49.1
  val?            %49.6 = Force!<wrapped>    !v    %49.5, e49.1   <env->
  val?            %49.7 = CallBuiltin        !v    .Call(%49.2, %49.4, %49.6) e49.1   <other>
  val?            %49.8 = PopContext         C     %49.7, %47.1   <(nil|other)>
  lgl$-           %49.9 = Is                       %49.8, list
  void                    StVar              lW    value, %49.8, e0.5
  val             %49.11 = ChkMissing         e     %49.8
  lgl$#-          %49.12 = CheckTrueFalse     e     %49.9
  void                    Branch                   %49.12 -> BB44 (if true) | BB10 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x561982f97920+72: [], env=e0.5
  env             e50.1 = (MkEnv)            l     name=%47.2, parent=<env 0x561983284378>, context 1
  fs              %50.2 = FrameState         R     0x561984be1cb0+17: [<blt .Call>, %47.4], env=e50.1, next=%50.0
  void                    Deopt              !v    %50.2, DeadBranchReached@0x5619841d64b8[Test#0], %47.4   !
BB44   <- [49]
  (cls|spec|blt)  %44.0 = LdFun              !v    .resolveClassList, e0.5
  prom-           %44.1 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p17, e0.5
  prom-           %44.2 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p18, e0.5
  prom-           %44.3 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p19, e0.5
  val?            %44.4 = Call               !v    %44.0(%44.1, %44.2, %44.3) e0.5   <val?_>
  void                    StVar              lW    value, %44.4, e0.5
  val?            %44.6 = %44.4
  goto BB11
BB10   <- [49]
  void                    Nop                !     
  val?            %10.1 = %49.8
  goto BB11
BB11   <- [10, 44]
  val?            %11.0 = Phi                      %44.6:BB44, %10.1:BB10
  val?            %11.1 = %11.0
  val             %11.2 = ChkMissing         e     %11.1   <(nil|other)>
  lgl$-           %11.3 = Is                       %11.2, NULL
  lgl$#-          %11.4 = CheckTrueFalse     e     %11.3
  void                    Branch                   %11.4 -> BB16 (if true) | BB14 (if false)
BB16   <- [11]
  val?^ | miss    %16.0 = LdVar              eR    classMetaName, e0.5
  lgl$#-          %16.1 = Identical                %16.0, function(name) <(rir::DispatchTable*)0x5619855|...
  void                    Branch                   %16.1 -> BB51 (if true) | BB52 (if false)
BB14   <- [11]
  void                    Nop                !     
  goto BB15
BB51   <- [16]
  prom-           %51.0 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p5, e0.5
  ct              %51.1 = PushContext        lCL   %51.0, classMetaName(if(>(length(Class), 1L), [[(Clas|..., function(name) <(rir::DispatchTable*)0x5619855|..., e0.5
  val?^           %51.2 = CastType                 up %51.0
  val?^ | miss    %51.3 = LdVar              eR    methodsPackageMetaName, <env 0x561983284378>
  lgl$#-          %51.4 = Identical                %51.3, function(prefix, name, package="") <(rir::Disp|...
  void                    Branch                   %51.4 -> BB53 (if true) | BB54 (if false)
BB52   <- [16]
  fs              %52.0 = FrameState         R     0x561982f97920+172: [], env=e0.5
  void                    Deopt              !v    %52.0, CallTarget@0x561984b472a0[Call#5], %16.0   !
BB15   <- [14, 39, 71]
  val?^ | miss    %15.0 = LdVar              eR    value, e0.5
  void                    Visible            v     
  val?            %15.2 = Force!<value>      !     %15.0, e0.5   <(nil|other)>
  void                    Return             l     %15.2
BB53   <- [51]
  env             e53.0 = MkEnv              l     name=%51.2, parent=<env 0x561983284378>, context 1
  prom-           %53.1 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p20, e53.0
  ct              %53.2 = PushContext        lCL   "C", %53.1, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|..., e53.0
  val?^           %53.3 = CastType                 up %53.1
  val?^ | miss    %53.4 = LdVar              eR    .Call, <env 0x561983284378>
  lgl$#-          %53.5 = Identical                <blt .Call>, %53.4   <true>
  void                    Branch                   %53.5 -> BB55 (if true) | BB56 (if false)
BB54   <- [51]
  fs              %54.0 = FrameState         R     0x561982f97920+234: [], env=e0.5
  env             e54.1 = (MkEnv)            l     name=%51.2, parent=<env 0x561983284378>, context 1
  fs              %54.2 = FrameState         R     0x5619859b8eb0+0: [], env=e54.1, next=%54.0
  void                    Deopt              !v    %54.2, CallTarget@0x561983108e98[Call#0], %51.3   !
BB55   <- [53]
  val?^ | miss    %55.0 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x561983284378>
  env             e55.1 = MkEnv              l     prefix="C", name=%53.3, package(miss)="", parent=<env 0x561983284378>, context 1
  val?            %55.2 = Force!<value>      !v    %55.0, e55.1   <vec>
  val?^ | miss    %55.3 = LdVar              eR    prefix, e55.1
  val?            %55.4 = Force!<value>      !v    %55.3, e55.1   <str$->
  val?^ | miss    %55.5 = LdVar              eR    name, e55.1
  val?            %55.6 = Force!<lazy>       !v    %55.5, e55.1   <str$->
  val?^ | miss    %55.7 = LdVar              eR    package, e55.1
  val?            %55.8 = Force!<lazy>       !v    %55.7, e55.1   <str$->
  val?            %55.9 = CallBuiltin        !v    .Call(%55.2, %55.4, %55.6, %55.8) e55.1   <str$->
  val?            %55.10 = PopContext         C     %55.9, %53.2   <str$->
  val?            %55.11 = PopContext         C     %55.10, %51.1   <str$->
  void                    StVar              lW    cname, %55.11, e0.5
  val?^ | miss    %55.13 = LdVar              eR    is.character, e0.5
  lgl$#-          %55.14 = Identical                <blt is.character>, %55.13   <true>
  void                    Branch                   %55.14 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x561982f97920+234: [], env=e0.5
  fs              %56.1 = FrameState         R     0x5619859b8eb0+37: [], env=e53.0, next=%56.0
  env             e56.2 = (MkEnv)            l     prefix="C", name=%53.3, package(miss)="", parent=<env 0x561983284378>, context 1
  fs              %56.3 = FrameState         R     0x56198521c790+0: [], env=e56.2, next=%56.1
  void                    Deopt              !v    %56.3, DeadBranchReached@0x5619854536c0[Test#0], %53.5   !
BB57   <- [55]
  val?^ | miss    %57.0 = LdVar              eR    where, e0.5
  val?            %57.1 = Force!<lazy>       !v    %57.0, e0.5   <env->
  lgl$#-          %57.2 = CallSafeBuiltin    wed   is.character(%57.1)    <lgl$->
  void                    Branch                   %57.2 -> BB43 (if true) | BB23 (if false)
BB58   <- [55]
  fs              %58.0 = FrameState         R     0x561982f97920+248: [], env=e0.5
  void                    Deopt              !v    %58.0, DeadBranchReached@0x561984b472a0[Test#1], %55.14   !
BB43   <- [57]
  val?^ | miss    %43.0 = LdVar              eR    where, e0.5
  val?            %43.1 = Force!             !v    %43.0, e0.5   <val?_>
  void                    StVar              lW    package, %43.1, e0.5
  goto BB24
BB23   <- [57]
  void                    Nop                !     
  goto BB24
BB24   <- [23, 43]
  val?^ | miss    %24.0 = LdVar              eR    isTRUE, e0.5
  lgl$#-          %24.1 = Identical                %24.0, function(x) <(rir::DispatchTable*)0x561984c464|...
  void                    Branch                   %24.1 -> BB59 (if true) | BB60 (if false)
BB59   <- [24]
  prom-           %59.0 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p7, e0.5
  val?            %59.1 = StaticCall         !v    isTRUE[0x561985ce59b0](%59.0) e0.5   <lgl$->
  lgl$#-          %59.2 = IsType                   %59.1 isA lgl$-
  void                    Branch                   %59.2 -> BB61 (if true) | BB62 (if false)
BB60   <- [24]
  fs              %60.0 = FrameState         R     0x561982f97920+378: [], env=e0.5
  void                    Deopt              !v    %60.0, CallTarget@0x561984b472a0[Call#8], %24.0   !
BB61   <- [59]
  lgl$-           %61.0 = CastType           d     dn %59.1
  lgl$#-          %61.1 = CheckTrueFalse     e     %61.0
  void                    Branch                   %61.1 -> BB42 (if true) | BB29 (if false)
BB62   <- [59]
  void                    Nop                !     
  val?            %62.1 = %59.1
  dr              %62.2 = Typecheck@0x561984b472a0[Type#26]
  goto BB27
BB42   <- [61]
  val?^ | miss    %42.0 = LdVar              eR    .requirePackage, e0.5
  lgl$#-          %42.1 = Identical                %42.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Branch                   %42.1 -> BB69 (if true) | BB70 (if false)
BB29   <- [61]
  void                    Nop                !     
  goto BB30
BB27   <- [62, 70]
  val?^ | miss    %27.0 = Phi                      %62.1:BB62, %70.1:BB70
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %62.2:BB62, %70.2:BB70
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x561982f97920+410: [%59.1], env=e0.5
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
BB69   <- [42]
  prom-           %69.0 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p15, e0.5
  val?            %69.1 = StaticCall         !v    .requirePackage[0x5619858e4ce0](%69.0) e0.5   <env->
  void                    StVar              lW    package, %69.1, e0.5
  goto BB30
BB70   <- [42]
  void                    Nop                !     
  val?^ | miss    %70.1 = %42.0
  dr              %70.2 = CallTarget@0x561984b472a0[Call#10]
  goto BB27
BB30   <- [29, 69]
  val?^ | miss    %30.0 = LdVar              eR    is.environment, e0.5
  lgl$#-          %30.1 = Identical                <blt is.environment>, %30.0   <true>
  void                    Branch                   %30.1 -> BB63 (if true) | BB64 (if false)
BB63   <- [30]
  val?^ | miss    %63.0 = LdVar              eR    package, e0.5
  val?            %63.1 = Force!<wrapped>    !v    %63.0, e0.5   <(nil|env)->
  lgl$#-          %63.2 = CallSafeBuiltin    wed   is.environment(%63.1)    <lgl$->
  void                    Branch                   %63.2 -> BB41 (if true) | BB35 (if false)
BB64   <- [30]
  fs              %64.0 = FrameState         R     0x561982f97920+472: [], env=e0.5
  void                    Deopt              !v    %64.0, DeadBranchReached@0x561984b472a0[Test#2], %30.1   !
BB41   <- [63]
  val?^ | miss    %41.0 = LdVar              eR    get0, e0.5
  lgl$#-          %41.1 = Identical                %41.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Branch                   %41.1 -> BB67 (if true) | BB68 (if false)
BB35   <- [63]
  void                    Nop                !     
  goto BB36
BB67   <- [41]
  prom-           %67.0 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p12, e0.5
  prom-           %67.1 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p13, e0.5
  prom-           %67.2 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p14, e0.5
  val?            %67.3 = StaticCall         !v    get0[0x561985c77d40](%67.0, %67.1, missingArg, %67.2) { 0 1 3n } e0.5   <nil->
  void                    StVar              lW    value, %67.3, e0.5
  goto BB36
BB68   <- [41]
  fs              %68.0 = FrameState         R     0x561982f97920+563: [%63.2], env=e0.5
  void                    Deopt              !v    %68.0, CallTarget@0x561984b472a0[Call#12], %41.0   !
BB36   <- [35, 67]
  val?^ | miss    %36.0 = LdVar              eR    value, e0.5
  lgl$#-          %36.1 = IsType                   %36.0 isA val?~- | miss
  void                    Branch                   %36.1 -> BB65 (if true) | BB66 (if false)
BB65   <- [36]
  val?~- | miss   %65.0 = CastType           d     dn %36.0
  val?-           %65.1 = Force!<value>            %65.0,    <nil->
  lgl$-           %65.2 = Is                       %65.1, NULL
  lgl$#-          %65.3 = CheckTrueFalse     e     %65.2
  void                    Branch                   %65.3 -> BB40 (if true) | BB39 (if false)
BB66   <- [36]
  void                    Nop                !     
  val?^ | miss    %66.1 = %36.0
  dr              %66.2 = Typecheck@0x561984b472a0[Type#36]
  goto BB37
BB40   <- [65]
  val?^ | miss    %40.0 = LdVar              eR    get0, e0.5
  lgl$#-          %40.1 = Identical                %40.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Branch                   %40.1 -> BB71 (if true) | BB72 (if false)
BB39   <- [65]
  void                    Nop                !     
  goto BB15
BB37   <- [66, 72]
  val?^ | miss    %37.0 = Phi                      %66.1:BB66, %72.1:BB72
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %66.2:BB66, %72.2:BB72
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x561982f97920+647: [], env=e0.5
  void                    Deopt              !v    %37.4, %37.3, %37.1   !
BB71   <- [40]
  prom-           %71.0 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p9, e0.5
  prom-           %71.1 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p10, e0.5
  prom-           %71.2 = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p11, e0.5
  val?            %71.3 = StaticCall         !v    get0[0x561985c77d40](%71.0, %71.1, missingArg, %71.2) { 0 1 3n } e0.5   <nil->
  void                    StVar              lW    value, %71.3, e0.5
  goto BB15
BB72   <- [40]
  void                    Nop                !     
  val?^ | miss    %72.1 = %40.0
  dr              %72.2 = CallTarget@0x561984b472a0[Call#13]
  goto BB37
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, <0x561984c0f678>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x561982c7da90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p6, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  val?            %0.4  = Gt                 !v    %0.3, 1L, e0.0   <lgl$->
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    Class, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e0.0   <val?_>
  void                    Visible            v     
  val?            %2.4  = %2.2
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e0.0   <str$->
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.3:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nzchar, <0x561982c89240>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x561985c32b20]_p8, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3

│ getClassDef[0x561985c32b20]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
