
┌──────────────────────────────────────────────────────────────────────────────┐
│ getFunction[0x5619857187f0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
getFunction[0x5619857187f0]
BB0
  val?^           %0.0  = LdArg                    3
  val?~+          %0.1  = LdArg                    2
  val?~+          %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  env             e0.4  = MkEnv              l     name=%0.3, generic=%0.2, mustFind=%0.1, where=%0.0, parent=<env 0x561983284378>, context 1
  cls             %0.5  = MkCls                    lastEnv, e0.4
  cls             %0.6  = MkCls                    getFunction>lastEnv@353, e0.4
  val?^ | miss    %0.7  = LdVar              eR    nzchar, <env 0x561983284378>
  lgl$#-          %0.8  = Identical                <blt nzchar>, %0.7   <true>
  void                    Branch                   %0.8 -> BB75 (if true) | BB76 (if false)
BB75   <- [0]
  val+            %75.0 = Force!<lazy>       !vr   %0.3,    <str$->
  val?            %75.1 = CallBuiltin        !v    nzchar(%75.0) e0.4   <lgl$->
  lgl$#-          %75.2 = IsType                   %75.1 isA lgl$-
  void                    Branch                   %75.2 -> BB77 (if true) | BB78 (if false)
BB76   <- [0]
  fs              %76.0 = FrameState         R     0x561984d57530+17: [<blt nzchar>, %0.8], env=e0.4
  void                    Deopt              !v    %76.0, DeadBranchReached@0x561984d4e040[Test#0], %0.8
BB77   <- [75]
  lgl$-           %77.0 = CastType           d     dn %75.1
  lgl$-           %77.1 = Not                d     %77.0, elided
  lgl$#-          %77.2 = CheckTrueFalse     e     %77.1
  void                    Branch                   %77.2 -> BB73 (if true) | BB5 (if false)
BB78   <- [75]
  fs              %78.0 = FrameState         R     0x561984d57530+91: [%75.1], env=e0.4
  void                    Deopt              !v    %78.0, Typecheck@0x561984d4e040[Type#4], %75.1   !
BB73   <- [77]
  (cls|spec|blt)  %73.0 = LdFun              !v    stop, e0.4
  fs              %73.1 = FrameState         R     0x561984d57530+113: [%73.0], env=e0.4
  void                    Deopt              !v    %73.1, DeadCall@0x561984d4e040[Call#3], %73.0   !
BB5   <- [77]
  void                    StVar              lW    found, false, e0.4
  val?^ | miss    %5.1  = LdVar              eR    as.environment, e0.4
  lgl$#-          %5.2  = Identical                <blt as.environment>, %5.1   <true>
  void                    Branch                   %5.2 -> BB79 (if true) | BB80 (if false)
BB79   <- [5]
  val?^ | miss    %79.0 = LdVar              eR    where, e0.4
  val?            %79.1 = Force!<lazy>       !v    %79.0, e0.4   <env->
  val?            %79.2 = CallBuiltin        !v    as.environment(%79.1) e0.4   <env->
  void                    StVar              lW    where, %79.2, e0.4
  void                    StVar              lW    f, nil, e0.4
  val?^ | miss    %79.5 = LdVar              eR    isNamespace, e0.4
  lgl$#-          %79.6 = Identical                %79.5, function(ns) <(rir::DispatchTable*)0x561984d5a|...
  void                    Branch                   %79.6 -> BB81 (if true) | BB82 (if false)
BB80   <- [5]
  fs              %80.0 = FrameState         R     0x561984d57530+169: [], env=e0.4
  void                    Deopt              !v    %80.0, DeadBranchReached@0x561984d4e040[Test#1], %5.2   !
BB81   <- [79]
  prom-           %81.0 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p0 (!refl), e0.4
  ct              %81.1 = PushContext        lCL   %81.0, isNamespace(where), function(ns) <(rir::DispatchTable*)0x561984d5a|..., e0.4
  val?^           %81.2 = CastType                 up %81.0
  env             e81.3 = MkEnv              l     ns=%81.2, parent=R_BaseNamespace, context 1
  val?            %81.4 = CallBuiltin        !v    isNamespaceEnv(%79.2) e81.3
  val?            %81.5 = PopContext         C     %81.4, %81.1   <lgl$->
  lgl$#-          %81.6 = IsType                   %81.5 isA lgl$-
  void                    Branch                   %81.6 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x561984d57530+289: [], env=e0.4
  void                    Deopt              !v    %82.0, CallTarget@0x561984d4e040[Call#6], %79.5   !
BB83   <- [81]
  lgl$-           %83.0 = CastType           d     dn %81.5
  lgl$#-          %83.1 = CheckTrueFalse     e     %83.0
  void                    Branch                   %83.1 -> BB72 (if true) | BB12 (if false)
BB84   <- [81]
  fs              %84.0 = FrameState         R     0x561984d57530+321: [%81.5], env=e0.4
  void                    Deopt              !v    %84.0, Typecheck@0x561984d4e040[Type#10], %81.5   !
BB72   <- [83]
  void                    Nop                !     
  cls             %72.1 = %0.6
  goto BB13
BB12   <- [83]
  void                    Nop                !     
  cls             %12.1 = %0.5
  goto BB13
BB13   <- [12, 72]
  cls             %13.0 = Phi                      %12.1:BB12, %72.1:BB72
  cls             %13.1 = %13.0
  void                    StVar              lW    lastEnv, %13.1, e0.4
  val?^ | miss    %13.3 = LdVar              eR    get0, e0.4
  lgl$#-          %13.4 = Identical                %13.3, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Branch                   %13.4 -> BB85 (if true) | BB86 (if false)
BB85   <- [13]
  prom-           %85.0 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p1, e0.4
  prom-           %85.1 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p2, e0.4
  val?            %85.2 = StaticCall         !v    get0[0x561985074c30](%85.0, %85.1, "function", false) { 0 1n 2n 3n } e0.4   <cls>
  lgl$-           %85.3 = Is                       %85.2, NULL
  void                    StVar              lW    f, %85.2, e0.4
  lgl$-           %85.5 = Not                d     %85.3, elided
  lgl$#-          %85.6 = CheckTrueFalse     e     %85.5
  void                    Branch                   %85.6 -> BB64 (if true) | BB16 (if false)
BB86   <- [13]
  fs              %86.0 = FrameState         R     0x561984d57530+378: [], env=e0.4
  void                    Deopt              !v    %86.0, CallTarget@0x561984d4e040[Call#7], %13.3   !
BB64   <- [85]
  val?^ | miss    %64.0 = LdVar              eR    generic, e0.4
  val?            %64.1 = Force!<value>      !v    %64.0, e0.4   <lgl$->
  lgl$-           %64.2 = AsLogical          e     %64.1
  lgl$#-          %64.3 = Identical                %64.2, true
  void                    Branch                   %64.3 -> BB71 (if true) | BB67 (if false)
BB16   <- [85]
  void                    Nop                !     
  goto BB17
BB71   <- [64]
  void                    Nop                !     
  lgl$-           %71.1 = %64.2
  goto BB70
BB67   <- [64]
  val?^ | miss    %67.0 = LdVar              eR    is, e0.4
  lgl$#-          %67.1 = Identical                %67.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %67.1 -> BB89 (if true) | BB90 (if false)
BB17   <- [16, 70]
  val?^ | miss    %17.0 = LdVar              eR    found, e0.4
  lgl$#-          %17.1 = IsType                   %17.0 isA lgl$-
  void                    Branch                   %17.1 -> BB87 (if true) | BB88 (if false)
BB70   <- [71, 93]
  lgl$-           %70.0 = Phi                      %93.4:BB93, %71.1:BB71
  lgl$-           %70.1 = %70.0
  void                    StVar              lW    found, %70.1, e0.4
  goto BB17
BB89   <- [67]
  prom-           %89.0 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p9, e0.4
  val?            %89.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%89.0, "genericFunction") e0.4   <lgl$->
  lgl$#-          %89.2 = IsType                   %89.1 isA lgl$-
  void                    Branch                   %89.2 -> BB93 (if true) | BB94 (if false)
BB90   <- [67]
  fs              %90.0 = FrameState         R     0x561984d57530+483: [%64.1], env=e0.4
  void                    Deopt              !v    %90.0, CallTarget@0x561984d4e040[Call#8], %67.0   !
BB87   <- [17]
  lgl$-           %87.0 = CastType           d     dn %17.0
  lgl$-           %87.1 = AsLogical                %87.0
  lgl$#-          %87.2 = Identical                %87.1, true
  void                    Branch                   %87.2 -> BB63 (if true) | BB20 (if false)
BB88   <- [17]
  void                    Nop                !     
  val?^ | miss    %88.1 = %17.0
  dr              %88.2 = Typecheck@0x561984d4e040[Type#17]
  goto BB18
BB93   <- [89]
  lgl$-           %93.0 = CastType           d     dn %89.1
  lgl$-           %93.1 = Not                d     %93.0, elided
  lgl$-           %93.2 = AsLogical                %93.1
  lgl$-           %93.3 = LOr                      %64.2, %93.2
  lgl$-           %93.4 = %93.3
  goto BB70
BB94   <- [89]
  fs              %94.0 = FrameState         R     0x561984d57530+532: [%64.2, %89.1], env=e0.4
  void                    Deopt              !v    %94.0, Typecheck@0x561984d4e040[Type#16], %89.1   !
BB63   <- [87]
  void                    Nop                !     
  lgl$-           %63.1 = %87.1
  goto BB27
BB20   <- [87]
  val?^ | miss    %20.0 = LdVar              eR    lastEnv, e0.4
  (cls|spec|blt)  %20.1 = CastType                 dn %20.0
  val+            %20.2 = CallSafeBuiltin          bodyCode(%20.1) 
  lgl$#-          %20.3 = Identical                %20.2, <(rir::DispatchTable*)0x561984d556e0>
  void                    Branch                   %20.3 -> BB91 (if true) | BB92 (if false)
BB18   <- [88, 92]
  val?^ | miss    %18.0 = Phi                      %88.1:BB88, %92.1:BB92
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %88.2:BB88, %92.2:BB92
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x561984d57530+549: [], env=e0.4
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB27   <- [63, 101]
  lgl$-           %27.0 = Phi                      %101.3:BB101, %63.1:BB63
  lgl$-           %27.1 = %27.0
  lgl$#-          %27.2 = CheckTrueFalse     e     %27.1
  void                    Branch                   %27.2 -> BB62 (if true) | BB30 (if false)
BB91   <- [20]
  val?            %91.0 = Force!             d     %20.0, 
  prom-           %91.1 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p3, e0.4
  (cls|spec|blt)  %91.2 = ChkFunction        e     %91.0
  env             e91.3 = CallSafeBuiltin          environment(%91.2) 
  ct              %91.4 = PushContext        lCL   %91.1, lastEnv(where), %91.2, e0.4
  val?^           %91.5 = CastType                 up %91.1
  val?^ | miss    %91.6 = LdVar              eR    identical, e91.3
  lgl$#-          %91.7 = Identical                %91.6, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %91.7 -> BB95 (if true) | BB96 (if false)
BB92   <- [20]
  void                    Nop                !     
  val+            %92.1 = %20.2
  dr              %92.2 = CallTarget@0x561984d4e040[Call#9]
  goto BB18
BB62   <- [27]
  void                    Nop                !     
  goto BB50
BB30   <- [27]
  val?^ | miss    %30.0 = LdVar              eR    parent.env, e0.4
  lgl$#-          %30.1 = Identical                %30.0, function(env) <(rir::DispatchTable*)0x561984d5|...
  void                    Branch                   %30.1 -> BB99 (if true) | BB100 (if false)
BB95   <- [91]
  env             e95.0 = MkEnv              l     where=%91.5, parent=e91.3, context 1
  prom-           %95.1 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p18, e95.0
  prom-           %95.2 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p19, e95.0
  ct              %95.3 = PushContext        lCL   %95.1, %95.2, identical(where, baseenv()), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e95.0
  val?^           %95.4 = CastType                 up %95.2
  val?^           %95.5 = CastType                 up %95.1
  env             e95.6 = MkEnv              l     x=%95.5, y=%95.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %95.7 = Force!<lazy>       !vL   %95.5, e95.6   <val?>
  val?            %95.8 = Force!<lazy>       !vL   %95.4, e95.6   <val?>
  val?            %95.9 = CallBuiltin        !v    identical(%95.7, %95.8, true, true, true, true, false, true) e95.6
  val?            %95.10 = PopContext         C     %95.9, %95.3   <lgl$->
  lgl$#-          %95.11 = IsType                   %95.10 isA lgl$-
  void                    Branch                   %95.11 -> BB97 (if true) | BB98 (if false)
BB96   <- [91]
  fs              %96.0 = FrameState         R     0x561984d57530+602: [%87.1], env=e0.4
  env             e96.1 = (MkEnv)            l     where=%91.5, parent=e91.3, context 1
  fs              %96.2 = FrameState         R     0x561984d4ac70+0: [], env=e96.1, next=%96.0
  void                    Deopt              !v    %96.2, CallTarget@0x5619840bd278[Call#0], %91.6   !
BB50   <- [49, 62]
  val?^ | miss    %50.0 = LdVar              eR    found, e0.4
  lgl$#-          %50.1 = IsType                   %50.0 isA lgl$-
  void                    Branch                   %50.1 -> BB103 (if true) | BB104 (if false)
BB99   <- [30]
  val?^ | miss    %99.0 = LdVar              eR    where, e0.4
  val?            %99.1 = Force!<value>      !v    %99.0, e0.4   <env->
  prom-           %99.2 = MkArg                    %99.1, getFunction[0x5619857187f0]_p4 (!refl), 
  val?            %99.3 = StaticCall         !v    parent.env[0x561984f0ea30](%99.2) e0.4   <env+>
  void                    StVar              lW    where, %99.3, e0.4
  goto BB31
BB100   <- [30]
  fs              %100.0 = FrameState         R     0x561984d57530+609: [%27.1], env=e0.4
  void                    Deopt              !v    %100.0, CallTarget@0x561984d4e040[Call#10], %30.0   !
BB97   <- [95]
  lgl$-           %97.0 = CastType           d     dn %95.10
  val?            %97.1 = PopContext         C     %97.0, %91.4   <lgl$->
  lgl$#-          %97.2 = IsType                   %97.1 isA lgl$-
  void                    Branch                   %97.2 -> BB101 (if true) | BB102 (if false)
BB98   <- [95]
  fs              %98.0 = FrameState         R     0x561984d57530+602: [%87.1], env=e0.4
  fs              %98.1 = FrameState         R     0x561984d4ac70+37: [%95.10], env=e95.0, next=%98.0
  void                    Deopt              !v    %98.1, Typecheck@0x5619840bd278[Type#2], %95.10   !
BB103   <- [50]
  lgl$-           %103.0 = CastType           d     dn %50.0
  lgl$-           %103.1 = Not                d     %103.0, elided
  lgl$-           %103.2 = AsLogical                %103.1
  lgl$#-          %103.3 = Identical                %103.2, false
  void                    Branch                   %103.3 -> BB57 (if true) | BB53 (if false)
BB104   <- [50]
  fs              %104.0 = FrameState         R     0x561984d57530+979: [], env=e0.4
  void                    Deopt              !v    %104.0, Typecheck@0x561984d4e040[Type#33], %50.0   !
BB31   <- [99, 113]
  val?^ | miss    %31.0 = LdVar              eR    get0, e0.4
  lgl$#-          %31.1 = Identical                %31.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Branch                   %31.1 -> BB105 (if true) | BB106 (if false)
BB101   <- [97]
  lgl$-           %101.0 = CastType           d     dn %97.1
  lgl$-           %101.1 = AsLogical                %101.0
  lgl$-           %101.2 = LOr                      %87.1, %101.1
  lgl$-           %101.3 = %101.2
  goto BB27
BB102   <- [97]
  fs              %102.0 = FrameState         R     0x561984d57530+602: [%87.1, %97.1], env=e0.4
  void                    Deopt              !v    %102.0, Typecheck@0x561984d4e040[Type#19], %97.1   !
BB57   <- [103]
  void                    Nop                !     
  lgl$-           %57.1 = %103.2
  goto BB54
BB53   <- [103]
  val?^ | miss    %53.0 = LdVar              eR    mustFind, e0.4
  val?            %53.1 = Force!<value>      !v    %53.0, e0.4   <lgl$->
  lgl$-           %53.2 = AsLogical          e     %53.1
  lgl$-           %53.3 = LAnd                     %103.2, %53.2
  lgl$-           %53.4 = %53.3
  goto BB54
BB105   <- [31]
  prom-           %105.0 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p5, e0.4
  prom-           %105.1 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p6 (!refl), e0.4
  val?            %105.2 = StaticCall         !v    get0[0x561985074c30](%105.0, %105.1, "function", false) { 0 1n 2n 3n } e0.4   <nil->
  lgl$-           %105.3 = Is                       %105.2, NULL
  void                    StVar              lW    f, %105.2, e0.4
  lgl$-           %105.5 = Not                d     %105.3, elided
  lgl$#-          %105.6 = CheckTrueFalse     e     %105.5
  void                    Branch                   %105.6 -> BB59 (if true) | BB34 (if false)
BB106   <- [31]
  fs              %106.0 = FrameState         R     0x561984d57530+676: [], env=e0.4
  void                    Deopt              !v    %106.0, CallTarget@0x561984d4e040[Call#11], %31.0   !
BB54   <- [57, 53]
  lgl$-           %54.0 = Phi                      %53.4:BB53, %57.1:BB57
  lgl$-           %54.1 = %54.0
  lgl$#-          %54.2 = CheckTrueFalse     e     %54.1
  void                    Branch                   %54.2 -> BB56 (if true) | BB55 (if false)
BB59   <- [105]
  val?^ | miss    %59.0 = LdVar              eR    generic, e0.4
  val?            %59.1 = Force!             !v    %59.0, e0.4   <val?_>
  lgl$-           %59.2 = AsLogical          e     %59.1
  lgl$#-          %59.3 = Identical                %59.2, true
  void                    Branch                   %59.3 -> BB61 (if true) | BB60 (if false)
BB34   <- [105]
  void                    Nop                !     
  goto BB35
BB56   <- [54]
  (cls|spec|blt)  %56.0 = LdFun              !v    stop, e0.4
  fs              %56.1 = FrameState         R     0x561984d57530+1033: [%56.0], env=e0.4
  void                    Deopt              !v    %56.1, DeadCall@0x561984d4e040[Call#15], %56.0   !
BB55   <- [54]
  val?^ | miss    %55.0 = LdVar              eR    f, e0.4
  void                    Visible            v     
  val?            %55.2 = Force!<value>      !     %55.0, e0.4   <(nil|cls)>
  void                    Return             l     %55.2
BB61   <- [59]
  void                    StVar              lW    found, %59.2, e0.4
  goto BB35
BB60   <- [59]
  (cls|spec|blt)  %60.0 = LdFun              !v    is, e0.4
  fs              %60.1 = FrameState         R     0x561984d57530+798: [%59.2, %60.0], env=e0.4
  void                    Deopt              !v    %60.1, DeadCall@0x561984d4e040[Call#12], %60.0   !
BB35   <- [34, 61]
  val?^ | miss    %35.0 = LdVar              eR    found, e0.4
  lgl$#-          %35.1 = IsType                   %35.0 isA lgl$-
  void                    Branch                   %35.1 -> BB107 (if true) | BB108 (if false)
BB107   <- [35]
  lgl$-           %107.0 = CastType           d     dn %35.0
  lgl$-           %107.1 = AsLogical                %107.0
  lgl$#-          %107.2 = Identical                %107.1, true
  void                    Branch                   %107.2 -> BB58 (if true) | BB38 (if false)
BB108   <- [35]
  void                    Nop                !     
  val?^ | miss    %108.1 = %35.0
  dr              %108.2 = Typecheck@0x561984d4e040[Type#28]
  goto BB36
BB58   <- [107]
  void                    Nop                !     
  lgl$-           %58.1 = %107.1
  goto BB45
BB38   <- [107]
  val?^ | miss    %38.0 = LdVar              eR    lastEnv, e0.4
  (cls|spec|blt)  %38.1 = CastType                 dn %38.0
  val+            %38.2 = CallSafeBuiltin          bodyCode(%38.1) 
  lgl$#-          %38.3 = Identical                %38.2, <(rir::DispatchTable*)0x561984d556e0>
  void                    Branch                   %38.3 -> BB109 (if true) | BB110 (if false)
BB36   <- [108, 110]
  val?^ | miss    %36.0 = Phi                      %108.1:BB108, %110.1:BB110
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %108.2:BB108, %110.2:BB110
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x561984d57530+847: [], env=e0.4
  void                    Deopt              !v    %36.4, %36.3, %36.1   !
BB45   <- [58, 117]
  lgl$-           %45.0 = Phi                      %117.3:BB117, %58.1:BB58
  lgl$-           %45.1 = %45.0
  lgl$#-          %45.2 = CheckTrueFalse     e     %45.1
  void                    Branch                   %45.2 -> BB49 (if true) | BB48 (if false)
BB109   <- [38]
  val?            %109.0 = Force!             d     %38.0, 
  prom-           %109.1 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p7, e0.4
  (cls|spec|blt)  %109.2 = ChkFunction        e     %109.0
  env             e109.3 = CallSafeBuiltin          environment(%109.2) 
  ct              %109.4 = PushContext        lCL   %109.1, lastEnv(where), %109.2, e0.4
  val?^           %109.5 = CastType                 up %109.1
  env             e109.6 = MkEnv              l     where=%109.5, parent=e109.3, context 1
  val?^ | miss    %109.7 = LdVar              eR    identical, e109.6
  lgl$#-          %109.8 = Identical                %109.7, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %109.8 -> BB111 (if true) | BB112 (if false)
BB110   <- [38]
  void                    Nop                !     
  val+            %110.1 = %38.2
  dr              %110.2 = CallTarget@0x561984d4e040[Call#13]
  goto BB36
BB49   <- [45]
  void                    Nop                !     
  goto BB50
BB48   <- [45]
  val?^ | miss    %48.0 = LdVar              eR    parent.env, e0.4
  lgl$#-          %48.1 = Identical                %48.0, function(env) <(rir::DispatchTable*)0x561984d5|...
  void                    Branch                   %48.1 -> BB113 (if true) | BB114 (if false)
BB111   <- [109]
  prom-           %111.0 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p10, e109.6
  prom-           %111.1 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p11, e109.6
  ct              %111.2 = PushContext        lCL   %111.0, %111.1, identical(where, baseenv()), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e109.6
  val?^           %111.3 = CastType                 up %111.1
  val?^           %111.4 = CastType                 up %111.0
  env             e111.5 = MkEnv              l     x=%111.4, y=%111.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %111.6 = Force!<lazy>       !v    %111.4, e111.5   <val?>
  val?^ | miss    %111.7 = LdVar              eR    y, e111.5
  val?            %111.8 = Force!<lazy>       !v    %111.7, e111.5   <val?>
  val?^ | miss    %111.9 = LdVar              eR    num.eq, e111.5
  val?            %111.10 = Force!<lazy>       !v    %111.9, e111.5   <lgl$->
  val?^ | miss    %111.11 = LdVar              eR    single.NA, e111.5
  val?            %111.12 = Force!<lazy>       !v    %111.11, e111.5   <lgl$->
  val?^ | miss    %111.13 = LdVar              eR    attrib.as.set, e111.5
  val?            %111.14 = Force!<lazy>       !v    %111.13, e111.5   <lgl$->
  val?^ | miss    %111.15 = LdVar              eR    ignore.bytecode, e111.5
  val?            %111.16 = Force!<lazy>       !v    %111.15, e111.5   <lgl$->
  val?^ | miss    %111.17 = LdVar              eR    ignore.environment, e111.5
  val?            %111.18 = Force!<lazy>       !v    %111.17, e111.5   <lgl$->
  val?^ | miss    %111.19 = LdVar              eR    ignore.srcref, e111.5
  val?            %111.20 = Force!<lazy>       !v    %111.19, e111.5   <lgl$->
  val?            %111.21 = CallBuiltin        !v    identical(%111.6, %111.8, %111.10, %111.12, %111.14, %111.16, %111.18, %111.20) e111.5
  val?            %111.22 = PopContext         C     %111.21, %111.2   <lgl$->
  lgl$#-          %111.23 = IsType                   %111.22 isA lgl$-
  void                    Branch                   %111.23 -> BB115 (if true) | BB116 (if false)
BB112   <- [109]
  fs              %112.0 = FrameState         R     0x561984d57530+900: [%107.1], env=e0.4
  env             e112.1 = (MkEnv)            l     where=%109.5, parent=e109.3, context 1
  fs              %112.2 = FrameState         R     0x561984d4ac70+0: [], env=e112.1, next=%112.0
  void                    Deopt              !v    %112.2, CallTarget@0x5619840bd278[Call#0], %109.7   !
BB113   <- [48]
  prom-           %113.0 = MkArg                    unboundValue, getFunction[0x5619857187f0]_p8, e0.4
  val?^ | miss    %113.1 = CastType                 up %113.0
  val?            %113.2 = Force              !v    %113.1, 
  prom-           %113.3 = MkArg                    %113.2, getFunction[0x5619857187f0]_p8 (!refl), 
  val?            %113.4 = StaticCall         !v    parent.env[0x561984f0ea30](%113.3) e0.4   <env+>
  void                    StVar              lW    where, %113.4, e0.4
  goto BB31
BB114   <- [48]
  fs              %114.0 = FrameState         R     0x561984d57530+907: [%45.1], env=e0.4
  void                    Deopt              !v    %114.0, CallTarget@0x561984d4e040[Call#14], %48.0   !
BB115   <- [111]
  lgl$-           %115.0 = CastType           d     dn %111.22
  val?            %115.1 = PopContext         C     %115.0, %109.4   <lgl$->
  lgl$#-          %115.2 = IsType                   %115.1 isA lgl$-
  void                    Branch                   %115.2 -> BB117 (if true) | BB118 (if false)
BB116   <- [111]
  fs              %116.0 = FrameState         R     0x561984d57530+900: [%107.1], env=e0.4
  fs              %116.1 = FrameState         R     0x561984d4ac70+37: [%111.22], env=e109.6, next=%116.0
  void                    Deopt              !v    %116.1, Typecheck@0x5619840bd278[Type#2], %111.22   !
BB117   <- [115]
  lgl$-           %117.0 = CastType           d     dn %115.1
  lgl$-           %117.1 = AsLogical                %117.0
  lgl$-           %117.2 = LOr                      %107.1, %117.1
  lgl$-           %117.3 = %117.2
  goto BB45
BB118   <- [115]
  fs              %118.0 = FrameState         R     0x561984d57530+900: [%107.1, %115.1], env=e0.4
  void                    Deopt              !v    %118.0, Typecheck@0x561984d4e040[Type#30], %115.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     baseenv, <0x561982c91278>, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <env->
  void                    Return             l     %0.2
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     baseenv, <0x561982c91278>, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <env->
  void                    Return             l     %0.2

│ getFunction[0x5619857187f0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
