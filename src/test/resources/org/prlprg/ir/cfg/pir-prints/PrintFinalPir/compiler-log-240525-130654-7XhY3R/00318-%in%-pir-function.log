
┌──────────────────────────────────────────────────────────────────────────────┐
│ %in%[0x561985ce59d0]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:  Eager, ForceOrd: 0 1                                            │
├────── Final PIR Version
%in%[0x561985ce59d0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = (MkEnv)            l     x=%0.1, table=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.3  = Force!<lazy>       !vr   %0.1,    <(int|str)+>
  val+            %0.4  = Force!<lazy>       !vr   %0.0,    <val?->
  val+            %0.5  = CallSafeBuiltin    wed   match(%0.3, %0.4, 0L, nil)    <int->
  lgl$#-          %0.6  = IsType                   %0.5 isA int-
  void                    Visible            v     
  void                    Branch                   %0.6 -> BB4 (if true) | BB5 (if false)
BB4   <- [0]
  int-            %4.0  = CastType           d     dn %0.5
  lgl-            %4.1  = Gt                 vwed  %4.0, 0L, elided   <lgl->
  void                    Return             l     %4.1
BB5   <- [0]
  env             e5.0  = MaterializeEnv           , e0.2   <@?>
  prom-           %5.1  = MkArg                    unboundValue, %in%[0x561985ce59d0]_p1 (!refl), e5.0
  val?^           %5.2  = CastType                 up %5.1
  prom-           %5.3  = MkArg                    %0.3, %in%[0x561985ce59d0]_p0 (!refl), e5.0
  val?~           %5.4  = CastType                 up %5.3
  fs              %5.5  = FrameState         R     0x5619832aa320+54: [], env=e5.0
  env             e5.6  = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%5.2, x=%5.4, parent=R_BaseNamespace, context 0
  fs              %5.7  = FrameState         R     0x561983491d40+69: [%0.5], env=e5.6, next=%5.5
  void                    Deopt              !v    %5.7, Typecheck@0x5619842dc688[Type#2], %0.5
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3

│ %in%[0x561985ce59d0]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
