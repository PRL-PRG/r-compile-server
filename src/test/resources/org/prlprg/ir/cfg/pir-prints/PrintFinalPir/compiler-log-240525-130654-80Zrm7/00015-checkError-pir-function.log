
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkError[0x55eeddd03b80]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1                │
│ Properties:                                                                  │
├────── Final PIR Version
checkError[0x55eeddd03b80]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  void                    Visible            v     
  val?^ | miss    %0.3  = LdVar              eR    environment, R_GlobalEnv
  lgl$#-          %0.4  = Identical                %0.3, function(fun=NULL) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %0.4 -> BB8 (if true) | BB9 (if false)
BB8   <- [0]
  env             e8.0  = MkEnv              l     expr=%0.1, msg=%0.0, caught=false, parent=R_GlobalEnv, context 1
  val?            %8.1  = StaticCall         !     environment[0x55eeddd422a0]() e8.0   <env->
  cls             %8.2  = MkCls                    checkError@Prom(1)0, e8.0
  void                    StVar              lW    env, %8.1, e8.0
  val?^ | miss    %8.4  = LdVar              eR    tryCatch, e8.0
  lgl$#-          %8.5  = Identical                %8.4, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %8.5 -> BB10 (if true) | BB11 (if false)
BB9   <- [0]
  env             e9.0  = (MkEnv)            l     expr=%0.1, msg=%0.0, parent=R_GlobalEnv, context 1
  fs              %9.1  = FrameState         R     0x55eeddbd9210+0: [], env=e9.0
  void                    Deopt              !v    %9.1, CallTarget@0x55eedd12d498[Call#0], %0.3
BB10   <- [8]
  prom-           %10.0 = MkArg                    unboundValue, checkError[0x55eeddd03b80]_p0, e8.0
  prom-           %10.1 = MkArg                    %8.2, checkError[0x55eeddd03b80]_p1 (!refl), e8.0
  dots-           %10.2 = DotsList           l     error=%10.1
  val?            %10.3 = StaticCall         !     tryCatch[0x55eeddd49f50](%10.0, %10.2) { 0 1n } e8.0
  val?^ | miss    %10.4 = LdVar              eR    stopifnot, e8.0
  lgl$#-          %10.5 = Identical                %10.4, function(..., exprs, exprObject, local=TRUE) <|...
  void                    Branch                   %10.5 -> BB12 (if true) | BB13 (if false)
BB11   <- [8]
  fs              %11.0 = FrameState         R     0x55eeddbd9210+56: [], env=e8.0
  void                    Deopt              !v    %11.0, CallTarget@0x55eedd12d498[Call#1], %8.4   !
BB12   <- [10]
  prom-           %12.0 = MkArg                    unboundValue, checkError[0x55eeddd03b80]_p2, e8.0
  val?            %12.1 = Call               !     function(..., exprs, exprObject, local=TRUE) <|...(%12.0) e8.0   <nil->
  void                    Return             l     %12.1
BB13   <- [10]
  fs              %13.0 = FrameState         R     0x55eeddbd9210+101: [%10.3], env=e8.0
  void                    Deopt              !v    %13.0, CallTarget@0x55eedd12d498[Call#2], %10.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    checkError@Prom(1)0, e0.0
  void                    Return             l     %0.1
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    caught, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3

│ checkError[0x55eeddd03b80]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
