
┌──────────────────────────────────────────────────────────────────────────────┐
│ execute[0x555ea2353a90]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager                                                           │
├────── Final PIR Version
execute[0x555ea2353a90]
BB0
  env             e0.0  = MkEnv              l     parent=R_GlobalEnv, context 1
  cls             %0.1  = MkCls                    resetSeed, e0.0
  cls             %0.2  = MkCls                    nextRandom, e0.0
  cls             %0.3  = MkCls                    execute>ball@1225, e0.0
  void                    StVar              lW    seed, nan, e0.0
  void                    StVar              lW    resetSeed, %0.1, e0.0
  void                    StVar              lW    nextRandom, %0.2, e0.0
  void                    StVar              lW    ballCount, 100, e0.0
  void                    StVar              lW    bounces, 0, e0.0
  val?^ | miss    %0.9  = LdVar              eR    vector, R_GlobalEnv
  lgl$#-          %0.10 = Identical                %0.9, function(mode="logical", length=0L) <(rir::Dis|...
  void                    Branch                   %0.10 -> BB50 (if true) | BB51 (if false)
BB50   <- [0]
  vec-            %50.0 = CallSafeBuiltin    wed   vector("list", 100)    <vec->
  void                    StVar              lW    balls, %50.0, e0.0
  void                    StVar              lW    seed, 74755, e0.0
  void                    StVar              lW    i, 1L, e0.0
  val?^ | miss    %50.4 = LdVar              eR    bitwAnd, R_GlobalEnv
  lgl$#-          %50.5 = Identical                %50.4, function(a, b) <(rir::DispatchTable*)0x555ea1e|...
  void                    Branch                   %50.5 -> BB52 (if true) | BB53 (if false)
BB51   <- [0]
  fs              %51.0 = FrameState         R     0x555ea075b7e0+95: [], env=e0.0
  void                    Deopt              !v    %51.0, CallTarget@0x555ea1a88448[Call#0], %0.9
BB52   <- [50]
  int$-           %52.0 = CallSafeBuiltin    wed   bitwiseAnd(9.78681e+07, 65535)    <int$->
  void                    StVar              lW    random1, %52.0, e0.0
  real$-          %52.2 = Mul                d     %52.0, 1309, elided   <real$->
  real$-          %52.3 = Add                d     %52.2, 13849, elided   <real$->
  int$-           %52.4 = CallSafeBuiltin    wed   bitwiseAnd(%52.3, 65535)    <int$->
  void                    StVar              lW    random2, %52.4, e0.0
  real$-          %52.6 = Mul                d     %52.4, 1309, elided   <real$->
  real$-          %52.7 = Add                d     %52.6, 13849, elided   <real$->
  int$-           %52.8 = CallSafeBuiltin    wed   bitwiseAnd(%52.7, 65535)    <int$->
  void                    StVar              lW    random3, %52.8, e0.0
  real$-          %52.10 = Mul                d     %52.8, 1309, elided   <real$->
  real$-          %52.11 = Add                d     %52.10, 13849, elided   <real$->
  int$-           %52.12 = CallSafeBuiltin    wed   bitwiseAnd(%52.11, 65535)    <int$->
  void                    StVar              lW    seed, %52.12, e0.0
  void                    StVar              lW    random4, %52.12, e0.0
  val?^ | miss    %52.15 = LdVar              eR    c, R_GlobalEnv
  lgl$#-          %52.16 = Identical                <blt c>, %52.15   <true>
  void                    Branch                   %52.16 -> BB54 (if true) | BB55 (if false)
BB53   <- [50]
  fs              %53.0 = FrameState         R     0x555ea075b7e0+326: [1L, 101L, 1L], env=e0.0
  void                    Deopt              !v    %53.0, CallTarget@0x555ea1a87e18[Call#0], %50.4
BB54   <- [52]
  real$-          %54.0 = Mod                d     %52.0, 500, elided   <real$->
  real$-          %54.1 = Mod                d     %52.4, 500, elided   <real$->
  real$-          %54.2 = Mod                d     %52.8, 300, elided   <real$->
  real$-          %54.3 = Sub                d     %54.2, 150, elided   <real$->
  real$-          %54.4 = Mod                d     %52.12, 300, elided   <real$->
  real$-          %54.5 = Sub                d     %54.4, 150, elided   <real$->
  real-           %54.6 = CallSafeBuiltin    wed   c(%54.0, %54.1, %54.3, %54.5)    <real->
  (real|vec)-     %54.7 = Subassign2_1D      wed   %54.6, %50.0, 1L, elided
  void                    StVar              lW    balls, %54.7, e0.0
  (real|vec)-     %54.9 = %54.7
  int$-           %54.10 = %52.12
  int$#-          %54.11 = 2L
  goto BB7
BB55   <- [52]
  fs              %55.0 = FrameState         R     0x555ea075b7e0+497: [1L, 101L, 2L], env=e0.0
  void                    Deopt              !v    %55.0, DeadBranchReached@0x555ea1a88448[Test#3], %52.16
BB7   <- [8, 54]
  (real|vec)-     %7.0  = Phi                      %54.9:BB54, %8.27:BB8   <vec->
  (real|vec)-     %7.1  = %7.0
  int$-           %7.2  = Phi                      %54.10:BB54, %8.28:BB8   <(int|real)$->
  int$-           %7.3  = %7.2
  int$-           %7.4  = Phi                      %54.11:BB54, %8.29:BB8
  int$-           %7.5  = %7.4
  lgl$-           %7.6  = Neq                d     101L, %7.5, elided
  lgl$#-          %7.7  = Identical                %7.6, false
  void                    Branch                   %7.7 -> BB9 (if true) | BB8 (if false)
BB9   <- [7]
  void                    StVar              lW    ball, %0.3, e0.0
  void                    StVar              lW    i, 1L, e0.0
  val?^ | miss    %9.2  = LdVar              eR    lapply, R_GlobalEnv
  lgl$#-          %9.3  = Identical                %9.2, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %9.3 -> BB56 (if true) | BB57 (if false)
BB8   <- [7]
  int$-           %8.0  = Add                d     %7.5, 1L, elided
  real$-          %8.1  = Mul                d     %7.3, 1309, elided   <real$->
  real$-          %8.2  = Add                d     %8.1, 13849, elided   <real$->
  int$-           %8.3  = CallSafeBuiltin    wed   bitwiseAnd(%8.2, 65535)    <int$->
  void                    StVar              lW    random1, %8.3, e0.0
  real$-          %8.5  = Mul                d     %8.3, 1309, elided   <real$->
  real$-          %8.6  = Add                d     %8.5, 13849, elided   <real$->
  int$-           %8.7  = CallSafeBuiltin    wed   bitwiseAnd(%8.6, 65535)    <int$->
  void                    StVar              lW    random2, %8.7, e0.0
  real$-          %8.9  = Mul                d     %8.7, 1309, elided   <real$->
  real$-          %8.10 = Add                d     %8.9, 13849, elided   <real$->
  int$-           %8.11 = CallSafeBuiltin    wed   bitwiseAnd(%8.10, 65535)    <int$->
  void                    StVar              lW    random3, %8.11, e0.0
  real$-          %8.13 = Mul                d     %8.11, 1309, elided   <real$->
  real$-          %8.14 = Add                d     %8.13, 13849, elided   <real$->
  int$-           %8.15 = CallSafeBuiltin    wed   bitwiseAnd(%8.14, 65535)    <int$->
  void                    StVar              lW    seed, %8.15, e0.0
  void                    StVar              lW    random4, %8.15, e0.0
  real$-          %8.18 = Mod                d     %8.3, 500, elided   <real$->
  real$-          %8.19 = Mod                d     %8.7, 500, elided   <real$->
  real$-          %8.20 = Mod                d     %8.11, 300, elided   <real$->
  real$-          %8.21 = Sub                d     %8.20, 150, elided   <real$->
  real$-          %8.22 = Mod                d     %8.15, 300, elided   <real$->
  real$-          %8.23 = Sub                d     %8.22, 150, elided   <real$->
  real-           %8.24 = CallSafeBuiltin    wed   c(%8.18, %8.19, %8.21, %8.23)    <real->
  (real|vec)-     %8.25 = Subassign2_1D      wed   %8.24, %7.1, %7.5, elided
  void                    StVar              lW    balls, %8.25, e0.0
  (real|vec)-     %8.27 = %8.25
  int$-           %8.28 = %8.15
  int$-           %8.29 = %8.0
  goto BB7
BB56   <- [9]
  prom-           %56.0 = MkArg                    unboundValue, execute[0x555ea2353a90]_p1 (!refl), e0.0
  prom-           %56.1 = MkArg                    unboundValue, execute[0x555ea2353a90]_p2 (!refl), e0.0
  ct              %56.2 = PushContext        lCL   %56.0, %56.1, lapply(balls, ball), function(X, FUN, ...) <(rir::DispatchTable*)0x|..., e0.0
  val?^           %56.3 = CastType                 up %56.1
  val?^           %56.4 = CastType                 up %56.0
  env             e56.5 = MkEnv              l     X=%56.4, FUN=%56.3, ...(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %56.6 = MkArg                    unboundValue, execute[0x555ea2353a90]_p18, e56.5
  val?            %56.7 = StaticCall         !v    match.fun[0x555ea2317d00](%56.6) e56.5   <cls->
  void                    StVar              lW    FUN, %56.7, e56.5
  val?^ | miss    %56.9 = LdVar              eR    is.vector, e56.5
  lgl$#-          %56.10 = Identical                %56.9, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %56.10 -> BB58 (if true) | BB59 (if false)
BB57   <- [9]
  fs              %57.0 = FrameState         R     0x555ea075b7e0+1337: [1L, 51L, 1L], env=e0.0
  void                    Deopt              !v    %57.0, CallTarget@0x555ea1a88448[Call#17], %9.2
BB58   <- [56]
  val?^ | miss    %58.0 = LdVar              eR    X, e56.5
  val?            %58.1 = Force!<lazy>       !v    %58.0, e56.5   <vec->
  lgl$#-          %58.2 = CallSafeBuiltin    wed   is.vector(%58.1, "any")    <lgl$->
  lgl$#-          %58.3 = Not                d     %58.2, elided
  void                    Branch                   %58.2 -> BB48 (if true) | BB16 (if false)
BB59   <- [56]
  fs              %59.0 = FrameState         R     0x555ea075b7e0+1381: [1L, 51L, 2L], env=e0.0
  fs              %59.1 = FrameState         R     0x555ea24a1860+46: [], env=e56.5, next=%59.0
  void                    Deopt              !v    %59.1, CallTarget@0x555ea241e190[Call#1], %56.9   !
BB48   <- [58]
  val?^ | miss    %48.0 = LdVar              eR    is.object, e56.5
  lgl$#-          %48.1 = Identical                <blt is.object>, %48.0   <true>
  void                    Branch                   %48.1 -> BB60 (if true) | BB61 (if false)
BB16   <- [58]
  void                    Nop                !     
  lgl$#-          %16.1 = %58.3
  goto BB17
BB60   <- [48]
  val?^ | miss    %60.0 = LdVar              eR    X, e56.5
  val?            %60.1 = Force!<wrapped>    !v    %60.0, e56.5   <vec->
  lgl$#-          %60.2 = CallSafeBuiltin    wed   is.object(%60.1)    <lgl$->
  lgl$-           %60.3 = LOr                      %58.3, %60.2
  lgl$-           %60.4 = %60.3
  goto BB17
BB61   <- [48]
  fs              %61.0 = FrameState         R     0x555ea075b7e0+1381: [1L, 51L, 2L], env=e0.0
  fs              %61.1 = FrameState         R     0x555ea24a1860+78: [], env=e56.5, next=%61.0
  prom-           %61.2 = MkArg                    %58.1, execute[0x555ea2353a90]_p21 (!refl), e56.5
  val?~           %61.3 = CastType                 up %61.2
  env             e61.4 = (MkEnv)            l     mode(miss)="any", x=%61.3, parent=R_BaseNamespace, context 0
  fs              %61.5 = FrameState         R     0x555ea233f160+41: [%58.2], env=e61.4, next=%61.1
  void                    Deopt              !v    %61.5, DeadBranchReached@0x555ea241e190[Test#0], %48.1   !
BB17   <- [16, 60]
  lgl$-           %17.0 = Phi                      %60.4:BB60, %16.1:BB16
  lgl$-           %17.1 = %17.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB47 (if true) | BB18 (if false)
BB47   <- [17]
  fs              %47.0 = FrameState         R     0x555ea075b7e0+1381: [1L, 51L, 2L], env=e0.0
  (cls|spec|blt)  %47.1 = LdFun              !v    as.list, e56.5
  fs              %47.2 = FrameState         R     0x555ea24a1860+205: [%47.1], env=e56.5, next=%47.0
  void                    Deopt              !v    %47.2, DeadCall@0x555ea241e190[Call#3], %47.1   !
BB18   <- [17]
  val?^ | miss    %18.0 = LdVar              eR    X, e56.5
  val?            %18.1 = Force!<wrapped>    !v    %18.0, e56.5   <vec->
  (nil|str)-      %18.2 = Names                    %18.1
  int$-           %18.3 = Length                   %18.1
  vec-            %18.4 = CallSafeBuiltin    wed   vector("list", %18.3) 
  val+            %18.5 = SetNames           e     %18.4, %18.2
  int$#-          %18.6 = 0L
  val+            %18.7 = %18.5
  goto BB19
BB19   <- [18, 62]
  int$-           %19.0 = Phi                      %18.6:BB18, %62.7:BB62
  int$-           %19.1 = %19.0
  val?            %19.2 = Phi                      %18.7:BB18, %62.8:BB62
  val?            %19.3 = %19.2
  int$-           %19.4 = Inc                      %19.1
  lgl$-           %19.5 = Lt                 d     %18.3, %19.4, elided
  lgl$#-          %19.6 = Identical                %19.5, true
  void                    Branch                   %19.6 -> BB23 (if true) | BB20 (if false)
BB23   <- [19]
  val?            %23.0 = PopContext         C     %19.3, %56.2   <vec->
  void                    StVar              lW    balls, %23.0, e0.0
  int$#-          %23.2 = 2L
  goto BB24
BB20   <- [19]
  void                    StVar              lW    i, %19.4, e56.5
  val?^ | miss    %20.1 = LdVar              eR    FUN, e56.5
  (cls|spec|blt)  %20.2 = CastType                 dn %20.1
  val+            %20.3 = CallSafeBuiltin          bodyCode(%20.2) 
  lgl$#-          %20.4 = Identical                %20.3, <(rir::DispatchTable*)0x555ea075b0a0>
  void                    Branch                   %20.4 -> BB62 (if true) | BB63 (if false)
BB24   <- [23, 43]
  int$-           %24.0 = Phi                      %23.2:BB23, %43.2:BB43
  int$-           %24.1 = %24.0
  lgl$-           %24.2 = Neq                d     51L, %24.1, elided
  lgl$#-          %24.3 = Identical                %24.2, false
  void                    Branch                   %24.3 -> BB46 (if true) | BB27 (if false)
BB62   <- [20]
  val?            %62.0 = Force!             d     %20.1, 
  prom-           %62.1 = MkArg                    unboundValue, execute[0x555ea2353a90]_p22, e56.5
  (miss|dots)     %62.2 = LdDots             R     , e56.5
  *dots-          %62.3 = ExpandDots               %62.2
  (cls|spec|blt)  %62.4 = ChkFunction        e     %62.0
  val?            %62.5 = NamedCall          !v    %62.4(%62.1, .xpandDotsTrigger=%62.3) e56.5   <real->
  val?            %62.6 = SetVecElt          e     %62.5, %19.3, %19.4
  int$-           %62.7 = %19.4
  val?            %62.8 = %62.6
  goto BB19
BB63   <- [20]
  fs              %63.0 = FrameState         R     0x555ea075b7e0+1381: [1L, 51L, 2L], env=e0.0
  fs              %63.1 = FrameState         R     0x555ea24a1860+310: [%19.3, %18.3, %19.4], env=e56.5, next=%63.0
  void                    Deopt              !v    %63.1, CallTarget@0x555ea241e190[Call#4], %20.3   !
BB46   <- [24]
  val?^ | miss    %46.0 = LdVar              eR    bounces, e0.0
  lgl$#-          %46.1 = IsType                   %46.0 isA real$-
  void                    Branch                   %46.1 -> BB64 (if true) | BB65 (if false)
BB27   <- [24]
  void                    StVar              lW    i, %24.1, e0.0
  int$-           %27.1 = Add                d     %24.1, 1L, elided
  val?^ | miss    %27.2 = LdVar              eR    lapply, e0.0
  lgl$#-          %27.3 = Identical                %27.2, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %27.3 -> BB66 (if true) | BB67 (if false)
BB64   <- [46]
  real$-          %64.0 = CastType           d     dn %46.0
  void                    Visible            v     
  void                    Return             l     %64.0
BB65   <- [46]
  fs              %65.0 = FrameState         R     0x555ea075b7e0+1395: [1L, 51L, %24.1], env=e0.0
  void                    Deopt              !v    %65.0, Typecheck@0x555ea1a88448[Type#86], %46.0   !
BB66   <- [27]
  prom-           %66.0 = MkArg                    unboundValue, execute[0x555ea2353a90]_p3 (!refl), e0.0
  prom-           %66.1 = MkArg                    unboundValue, execute[0x555ea2353a90]_p4, e0.0
  ct              %66.2 = PushContext        lCL   %66.0, %66.1, lapply(balls, ball), function(X, FUN, ...) <(rir::DispatchTable*)0x|..., e0.0
  val?^           %66.3 = CastType                 up %66.1
  val?^           %66.4 = CastType                 up %66.0
  env             e66.5 = MkEnv              l     X=%66.4, FUN=%66.3, ...(miss)=missingArg, parent=R_BaseNamespace, context 1
  val?^ | miss    %66.6 = LdVar              eR    match.fun, e66.5
  lgl$#-          %66.7 = Identical                %66.6, function(FUN, descend=TRUE) <(rir::DispatchTab|...
  void                    Branch                   %66.7 -> BB68 (if true) | BB69 (if false)
BB67   <- [27]
  fs              %67.0 = FrameState         R     0x555ea075b7e0+1412: [1L, 51L, %24.1], env=e0.0
  void                    Deopt              !v    %67.0, CallTarget@0x555ea1a88448[Call#18], %27.2   !
BB68   <- [66]
  prom-           %68.0 = MkArg                    unboundValue, execute[0x555ea2353a90]_p13, e66.5
  val?            %68.1 = StaticCall         !v    match.fun[0x555ea2317d00](%68.0) e66.5   <cls->
  void                    StVar              lW    FUN, %68.1, e66.5
  val?^ | miss    %68.3 = LdVar              eR    is.vector, e66.5
  lgl$#-          %68.4 = Identical                %68.3, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %68.4 -> BB70 (if true) | BB71 (if false)
BB69   <- [66]
  fs              %69.0 = FrameState         R     0x555ea075b7e0+1456: [1L, 51L, %27.1], env=e0.0
  env             e69.1 = (MkEnv)            l     X=%66.4, FUN=%66.3, ...(miss)=missingArg, parent=R_BaseNamespace, context 1
  fs              %69.2 = FrameState         R     0x555ea24a1860+0: [], env=e69.1, next=%69.0
  void                    Deopt              !v    %69.2, CallTarget@0x555ea241e190[Call#0], %66.6   !
BB70   <- [68]
  val?^ | miss    %70.0 = LdVar              eR    X, e66.5
  val?            %70.1 = Force!<lazy>       !v    %70.0, e66.5   <vec->
  lgl$#-          %70.2 = CallSafeBuiltin    wed   is.vector(%70.1, "any")    <lgl$->
  lgl$#-          %70.3 = Not                d     %70.2, elided
  void                    Branch                   %70.2 -> BB45 (if true) | BB36 (if false)
BB71   <- [68]
  fs              %71.0 = FrameState         R     0x555ea075b7e0+1456: [1L, 51L, %27.1], env=e0.0
  fs              %71.1 = FrameState         R     0x555ea24a1860+46: [], env=e66.5, next=%71.0
  void                    Deopt              !v    %71.1, CallTarget@0x555ea241e190[Call#1], %68.3   !
BB45   <- [70]
  val?^ | miss    %45.0 = LdVar              eR    is.object, e66.5
  lgl$#-          %45.1 = Identical                <blt is.object>, %45.0   <true>
  void                    Branch                   %45.1 -> BB72 (if true) | BB73 (if false)
BB36   <- [70]
  void                    Nop                !     
  lgl$#-          %36.1 = %70.3
  goto BB37
BB72   <- [45]
  val?^ | miss    %72.0 = LdVar              eR    X, e66.5
  val?            %72.1 = Force!<wrapped>    !v    %72.0, e66.5   <vec->
  lgl$#-          %72.2 = CallSafeBuiltin    wed   is.object(%72.1)    <lgl$->
  lgl$-           %72.3 = LOr                      %70.3, %72.2
  lgl$-           %72.4 = %72.3
  goto BB37
BB73   <- [45]
  fs              %73.0 = FrameState         R     0x555ea075b7e0+1456: [1L, 51L, %27.1], env=e0.0
  fs              %73.1 = FrameState         R     0x555ea24a1860+78: [], env=e66.5, next=%73.0
  prom-           %73.2 = MkArg                    %70.1, execute[0x555ea2353a90]_p14 (!refl), e66.5
  val?~           %73.3 = CastType                 up %73.2
  env             e73.4 = (MkEnv)            l     mode(miss)="any", x=%73.3, parent=R_BaseNamespace, context 0
  fs              %73.5 = FrameState         R     0x555ea233f160+41: [%70.2], env=e73.4, next=%73.1
  void                    Deopt              !v    %73.5, DeadBranchReached@0x555ea241e190[Test#0], %45.1   !
BB37   <- [36, 72]
  lgl$-           %37.0 = Phi                      %72.4:BB72, %36.1:BB36
  lgl$-           %37.1 = %37.0
  lgl$#-          %37.2 = CheckTrueFalse     e     %37.1
  void                    Branch                   %37.2 -> BB44 (if true) | BB38 (if false)
BB44   <- [37]
  fs              %44.0 = FrameState         R     0x555ea075b7e0+1456: [1L, 51L, %27.1], env=e0.0
  (cls|spec|blt)  %44.1 = LdFun              !v    as.list, e66.5
  fs              %44.2 = FrameState         R     0x555ea24a1860+205: [%44.1], env=e66.5, next=%44.0
  void                    Deopt              !v    %44.2, DeadCall@0x555ea241e190[Call#3], %44.1   !
BB38   <- [37]
  val?^ | miss    %38.0 = LdVar              eR    X, e66.5
  val?            %38.1 = Force!<wrapped>    !v    %38.0, e66.5   <vec->
  (nil|str)-      %38.2 = Names                    %38.1
  int$-           %38.3 = Length                   %38.1
  vec-            %38.4 = CallSafeBuiltin    wed   vector("list", %38.3) 
  val+            %38.5 = SetNames           e     %38.4, %38.2
  int$#-          %38.6 = 0L
  val+            %38.7 = %38.5
  goto BB39
BB39   <- [38, 74]
  int$-           %39.0 = Phi                      %38.6:BB38, %74.7:BB74
  int$-           %39.1 = %39.0
  val?            %39.2 = Phi                      %38.7:BB38, %74.8:BB74
  val?            %39.3 = %39.2
  int$-           %39.4 = Inc                      %39.1
  lgl$-           %39.5 = Lt                 d     %38.3, %39.4, elided
  lgl$#-          %39.6 = Identical                %39.5, true
  void                    Branch                   %39.6 -> BB43 (if true) | BB40 (if false)
BB43   <- [39]
  val?            %43.0 = PopContext         C     %39.3, %66.2   <vec->
  void                    StVar              lW    balls, %43.0, e0.0
  int$-           %43.2 = %27.1
  goto BB24
BB40   <- [39]
  void                    StVar              lW    i, %39.4, e66.5
  val?^ | miss    %40.1 = LdVar              eR    FUN, e66.5
  (cls|spec|blt)  %40.2 = CastType                 dn %40.1
  val+            %40.3 = CallSafeBuiltin          bodyCode(%40.2) 
  lgl$#-          %40.4 = Identical                %40.3, <(rir::DispatchTable*)0x555ea075b0a0>
  void                    Branch                   %40.4 -> BB74 (if true) | BB75 (if false)
BB74   <- [40]
  val?            %74.0 = Force!             d     %40.1, 
  prom-           %74.1 = MkArg                    unboundValue, execute[0x555ea2353a90]_p15, e66.5
  (miss|dots)     %74.2 = LdDots             R     , e66.5
  *dots-          %74.3 = ExpandDots               %74.2
  (cls|spec|blt)  %74.4 = ChkFunction        e     %74.0
  val?            %74.5 = NamedCall          !v    %74.4(%74.1, .xpandDotsTrigger=%74.3) e66.5   <real->
  val?            %74.6 = SetVecElt          e     %74.5, %39.3, %39.4
  int$-           %74.7 = %39.4
  val?            %74.8 = %74.6
  goto BB39
BB75   <- [40]
  fs              %75.0 = FrameState         R     0x555ea075b7e0+1456: [1L, 51L, %27.1], env=e0.0
  fs              %75.1 = FrameState         R     0x555ea24a1860+310: [%39.3, %38.3, %39.4], env=e66.5, next=%75.0
  void                    Deopt              !v    %75.1, CallTarget@0x555ea241e190[Call#4], %40.3   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    balls, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ball, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    balls, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ball, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <vec->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, execute[0x555ea2353a90]_p16, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <real->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <vec->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, execute[0x555ea2353a90]_p23, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <real->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ execute[0x555ea2353a90]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
