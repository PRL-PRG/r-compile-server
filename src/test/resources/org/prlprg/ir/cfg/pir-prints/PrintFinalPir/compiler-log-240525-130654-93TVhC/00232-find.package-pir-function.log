
┌──────────────────────────────────────────────────────────────────────────────┐
│ find.package[0x563fa8ff4f50]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
find.package[0x563fa8ff4f50]
BB0
  val?^           %0.0  = LdArg                    3
  val?~+          %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  env             e0.4  = MkEnv              l     package=%0.3, lib.loc=%0.2, quiet=%0.1, verbose=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.5  = Force!<lazy>       !vr   %0.3,    <str$->
  lgl$-           %0.6  = Is                       %0.5, NULL
  lgl$-           %0.7  = AsLogical                %0.6
  lgl$#-          %0.8  = Identical                %0.7, false
  void                    Branch                   %0.8 -> BB2 (if true) | BB28 (if false)
BB2   <- [0]
  void                    Nop                !     
  lgl$-           %2.1  = %0.7
  goto BB3
BB28   <- [0]
  val+            %28.0 = Force!             !vr   %0.2,    <val?_>
  lgl$-           %28.1 = Is                       %28.0, NULL
  lgl$-           %28.2 = AsLogical                %28.1
  lgl$-           %28.3 = LAnd                     %0.7, %28.2
  lgl$-           %28.4 = %28.3
  goto BB3
BB3   <- [2, 28]
  lgl$-           %3.0  = Phi                      %28.4:BB28, %2.1:BB2
  lgl$-           %3.1  = %3.0
  lgl$-           %3.2  = AsLogical                %3.1
  lgl$#-          %3.3  = Identical                %3.2, false
  void                    Branch                   %3.3 -> BB27 (if true) | BB4 (if false)
BB27   <- [3]
  void                    Nop                !     
  lgl$-           %27.1 = %3.2
  goto BB5
BB4   <- [3]
  val+            %4.0  = Force!             !vr   %0.0,    <val?_>
  lgl             %4.1  = Not                wed   %4.0, elided
  lgl$-           %4.2  = AsLogical          e     %4.1
  lgl$-           %4.3  = LAnd                     %3.2, %4.2
  lgl$-           %4.4  = %4.3
  goto BB5
BB5   <- [27, 4]
  lgl$-           %5.0  = Phi                      %4.4:BB4, %27.1:BB27
  lgl$-           %5.1  = %5.0
  lgl$#-          %5.2  = CheckTrueFalse     e     %5.1
  void                    Branch                   %5.2 -> BB26 (if true) | BB6 (if false)
BB26   <- [5]
  (cls|spec|blt)  %26.0 = LdFun              !v    path.package, R_BaseNamespace
  fs              %26.1 = FrameState         R     0x563fa793da80+87: [%26.0], env=e0.4
  void                    Deopt              !v    %26.1, DeadCall@0x563fa6a10790[Call#1], %26.0
BB6   <- [5]
  lgl$#-          %6.0  = IsType                   %0.5 isA val?-
  void                    Branch                   %6.0 -> BB29 (if true) | BB30 (if false)
BB29   <- [6]
  val-            %29.0 = CastType           d     dn %0.5   <str$->
  (int|real)$-    %29.1 = CallSafeBuiltin    wed   length(%29.0)    <int$->
  lgl$#-          %29.2 = IsType                   %29.1 isA int$-
  void                    Branch                   %29.2 -> BB31 (if true) | BB32 (if false)
BB30   <- [6]
  fs              %30.0 = FrameState         R     0x563fa793da80+184: [<blt length>, %0.5], env=e0.4
  void                    Deopt              !v    %30.0, Typecheck@0x563fa6a10790[Type#6], %0.5
BB31   <- [29]
  int$-           %31.0 = CastType           d     dn %29.1
  lgl$-           %31.1 = Eq                 d     %31.0, 1L, elided   <lgl$->
  lgl$-           %31.2 = AsLogical                %31.1
  lgl$#-          %31.3 = Identical                %31.2, false
  void                    Branch                   %31.3 -> BB25 (if true) | BB11 (if false)
BB32   <- [29]
  fs              %32.0 = FrameState         R     0x563fa793da80+206: [%29.1], env=e0.4
  void                    Deopt              !v    %32.0, Typecheck@0x563fa6a10790[Type#7], %29.1
BB25   <- [31]
  void                    Nop                !     
  lgl$-           %25.1 = %31.2
  goto BB16
BB11   <- [31]
  prom-           %11.0 = MkArg                    %0.5, find.package[0x563fa8ff4f50]_p0 (!refl), e0.4
  val?~           %11.1 = CastType                 up %11.0
  str-            %11.2 = CallSafeBuiltin    wed   c("base", "tools", "utils", "grDevices", "graphics", "stats", "datasets", "methods", "grid", "parallel", "splines", "stats4", "tcltk", "compiler")    <str->
  prom-           %11.3 = MkArg                    %11.2, find.package[0x563fa8ff4f50]_p1 (!refl), e0.4
  val?~           %11.4 = CastType                 up %11.3
  val+            %11.5 = CallSafeBuiltin    wed   match(%0.5, %11.2, 0L, nil)    <int->
  lgl$#-          %11.6 = IsType                   %11.5 isA int-
  void                    Branch                   %11.6 -> BB33 (if true) | BB34 (if false)
BB16   <- [25, 33]
  lgl$-           %16.0 = Phi                      %33.4:BB33, %25.1:BB25
  lgl$-           %16.1 = %16.0
  lgl$#-          %16.2 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.2 -> BB24 (if true) | BB17 (if false)
BB33   <- [11]
  int-            %33.0 = CastType           d     dn %11.5
  lgl-            %33.1 = Gt                 wed   %33.0, 0L, elided   <lgl->
  lgl$-           %33.2 = AsLogical                %33.1
  lgl$-           %33.3 = LAnd                     %31.2, %33.2
  lgl$-           %33.4 = %33.3
  goto BB16
BB34   <- [11]
  env             e34.0 = (MkEnv)            l     x=%11.1, table=%11.4, parent=R_BaseNamespace, context 0
  env             e34.1 = MaterializeEnv           , e34.0   <@?>
  prom-           %34.2 = MkArg                    unboundValue, find.package[0x563fa8ff4f50]_p5 (!refl), e34.1
  val?^           %34.3 = CastType                 up %34.2
  prom-           %34.4 = MkArg                    %0.5, find.package[0x563fa8ff4f50]_p4 (!refl), e34.1
  val?~           %34.5 = CastType                 up %34.4
  fs              %34.6 = FrameState         R     0x563fa793da80+267: [%31.2], env=e0.4
  fs              %34.7 = FrameState         R     0x563fa60f8320+54: [], env=e34.1, next=%34.6
  env             e34.8 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%34.3, x=%34.5, parent=R_BaseNamespace, context -1
  fs              %34.9 = FrameState         R     0x563fa62dfd40+69: [%11.5], env=e34.8, next=%34.7
  void                    Deopt              !v    %34.9, Typecheck@0x563fa712a688[Type#2], %11.5
BB24   <- [16]
  prom-           %24.0 = MkArg                    unboundValue, find.package[0x563fa8ff4f50]_p2, e0.4
  prom-           %24.1 = MkArg                    unboundValue, find.package[0x563fa8ff4f50]_p3 (!refl), e0.4
  dots-           %24.2 = DotsList           l     %24.0, %24.1
  ct              %24.3 = PushContext        lCL   %24.2, file.path(.Library, package), function(..., fsep=$(.Platform, file.sep)) <(r|..., e0.4
  env             e24.4 = MkEnv              l     ...=%24.2, fsep(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %24.5 = MkArg                    unboundValue, find.package[0x563fa8ff4f50]_p6, e24.4
  val?^ | miss    %24.6 = CastType                 up %24.5
  void                    StArg              lW    fsep, %24.6, e24.4
  val?^ | miss    %24.8 = CastType                 up %24.0
  val?^ | miss    %24.9 = CastType                 up %24.1
  val?            %24.10 = Force!             !vrL  %24.8, 
  val?            %24.11 = Force!             !vrL  %24.9, 
  val+            %24.12 = CallSafeBuiltin    wed   list(%24.10, %24.11)    <vec->
  val?            %24.13 = Force!<lazy>       !vr   %24.6,    <str$->
  val?            %24.14 = CallBuiltin        !     file.path(%24.12, %24.13) e24.4
  val?            %24.15 = PopContext         C     %24.14, %24.3   <str$->
  void                    Return             l     %24.15
BB17   <- [16]
  val+            %17.0 = Force!             !vr   %0.3,    <val?_>
  lgl$-           %17.1 = Is                       %17.0, NULL
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB23 (if true) | BB18 (if false)
BB23   <- [17]
  (cls|spec|blt)  %23.0 = LdFun              !v    .packages, R_BaseNamespace
  fs              %23.1 = FrameState         R     0x563fa793da80+363: [%23.0], env=e0.4
  void                    Deopt              !v    %23.1, DeadCall@0x563fa6a10790[Call#6], %23.0
BB18   <- [17]
  val+            %18.0 = Force!             !vr   %0.3,    <val?_>
  real$-          %18.1 = CallSafeBuiltin    wed   length(%18.0)    <val?_>
  lgl$-           %18.2 = Not                d     %18.1, elided
  lgl$#-          %18.3 = CheckTrueFalse     e     %18.2
  void                    Branch                   %18.3 -> BB22 (if true) | BB19 (if false)
BB22   <- [18]
  (cls|spec|blt)  %22.0 = LdFun              !v    character, R_BaseNamespace
  fs              %22.1 = FrameState         R     0x563fa793da80+512: [%22.0], env=e0.4
  void                    Deopt              !v    %22.1, DeadCall@0x563fa6a10790[Call#8], %22.0
BB19   <- [18]
  val+            %19.0 = Force!             !vr   %0.2,    <val?_>
  lgl$-           %19.1 = Is                       %19.0, NULL
  void                    StVar              lW    use_loaded, %19.1, e0.4
  lgl$#-          %19.3 = CheckTrueFalse     e     %19.1
  void                    Branch                   %19.3 -> BB21 (if true) | BB20 (if false)
BB21   <- [19]
  (cls|spec|blt)  %21.0 = LdFun              !v    .libPaths, R_BaseNamespace
  fs              %21.1 = FrameState         R     0x563fa793da80+586: [%21.0], env=e0.4
  void                    Deopt              !v    %21.1, DeadCall@0x563fa6a10790[Call#9], %21.0
BB20   <- [19]
  (cls|spec|blt)  %20.0 = LdFun              !v    character, R_BaseNamespace
  fs              %20.1 = FrameState         R     0x563fa793da80+627: [%20.0], env=e0.4
  void                    Deopt              !v    %20.1, DeadCall@0x563fa6a10790[Call#10], %20.0
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x563fa5acb940>, e0.0
  val?            %0.2  = Call               !     %0.1("base", "tools", "utils", "grDevices", "graphics", "stats", "datasets", "methods", "grid", "parallel", "splines", "stats4", "tcltk", "compiler") e0.0   <str->
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Library, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x563fa5acac10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, find.package[0x563fa8ff4f50]_p7, e0.0
  prom-           %0.3  = MkArg                    unboundValue, find.package[0x563fa8ff4f50]_p8, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Platform, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    file.sep, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ find.package[0x563fa8ff4f50]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
