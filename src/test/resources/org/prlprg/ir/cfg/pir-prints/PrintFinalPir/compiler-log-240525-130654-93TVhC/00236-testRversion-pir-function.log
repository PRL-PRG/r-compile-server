
┌──────────────────────────────────────────────────────────────────────────────┐
│ testRversion[0x563fa87b2d70]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2│
│ Properties:                                                                  │
├────── Final PIR Version
testRversion[0x563fa87b2d70]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     pkgInfo=%0.2, pkgname=%0.1, pkgpath=%0.0, parent=?, context 1
  (cls|spec|blt)  %0.4  = LdFun              !v    $, <0x563fa5acac10>, ?
  prom-           %0.5  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p0 (!refl), e0.3
  prom-           %0.6  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p1, e0.3
  val?            %0.7  = Call               !v    %0.4(%0.5, %0.6) e0.3   <vec+>
  lgl$-           %0.8  = Is                       %0.7, NULL
  void                    StVar              lW    built, %0.7, e0.3
  lgl$#-          %0.10 = CheckTrueFalse     e     %0.8
  void                    Branch                   %0.10 -> BB75 (if true) | BB3 (if false)
BB75   <- [0]
  (cls|spec|blt)  %75.0 = LdFun              !v    stop, e0.3
  fs              %75.1 = FrameState         R     0x563fa7eae730+74: [%75.0], env=e0.3
  void                    Deopt              !v    %75.1, DeadCall@0x563fa7f12ec0[Call#1], %75.0   !
BB3   <- [0]
  val?^ | miss    %3.0  = LdVar              eR    as.numeric_version, e0.3
  lgl$#-          %3.1  = Identical                %3.0, function(x) <(rir::DispatchTable*)0x563fa7994e|...
  void                    Branch                   %3.1 -> BB77 (if true) | BB78 (if false)
BB77   <- [3]
  prom-           %77.0 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p2, e0.3
  val?            %77.1 = StaticCall         !v    as.numeric_version[0x563fa8197ff0](%77.0) e0.3   <vec$>
  void                    StVar              lW    R_version_built_under, %77.1, e0.3
  val             %77.3 = ChkMissing         e     %77.1
  val?            %77.4 = Lt                 !v    %77.1, "3.0.0", e0.3   <lgl$->
  lgl$#-          %77.5 = IsType                   %77.4 isA lgl$-
  void                    Branch                   %77.5 -> BB79 (if true) | BB80 (if false)
BB78   <- [3]
  fs              %78.0 = FrameState         R     0x563fa7eae730+53: [%0.7], env=e0.3
  void                    Deopt              !v    %78.0, CallTarget@0x563fa7f12ec0[Call#4], %3.0   !
BB79   <- [77]
  lgl$-           %79.0 = CastType           d     dn %77.4
  lgl$#-          %79.1 = CheckTrueFalse     e     %79.0
  void                    Branch                   %79.1 -> BB74 (if true) | BB6 (if false)
BB80   <- [77]
  void                    Nop                !     
  val?            %80.1 = %77.4
  dr              %80.2 = Typecheck@0x563fa7f12ec0[Type#11]
  goto BB4
BB74   <- [79]
  (cls|spec|blt)  %74.0 = LdFun              !v    stop, e0.3
  fs              %74.1 = FrameState         R     0x563fa7eae730+212: [%74.0], env=e0.3
  void                    Deopt              !v    %74.1, DeadCall@0x563fa7f12ec0[Call#6], %74.0   !
BB6   <- [79]
  val?^ | miss    %6.0  = LdVar              eR    getRversion, e0.3
  lgl$#-          %6.1  = Identical                %6.0, function() <(rir::DispatchTable*)0x563fa8555bf|...
  void                    Branch                   %6.1 -> BB81 (if true) | BB82 (if false)
BB4   <- [80, 82]
  val?^ | miss    %4.0  = Phi                      %80.1:BB80, %82.1:BB82
  val?^ | miss    %4.1  = %4.0
  dr              %4.2  = Phi                      %80.2:BB80, %82.2:BB82
  dr              %4.3  = %4.2
  fs              %4.4  = FrameState         R     0x563fa7eae730+191: [%77.4], env=e0.3
  void                    Deopt              !v    %4.4, %4.3, %4.1   !
BB81   <- [6]
  ct              %81.0 = PushContext        lCL   getRversion(), function() <(rir::DispatchTable*)0x563fa8555bf|..., e0.3
  env             e81.1 = MkEnv              l     parent=R_BaseNamespace, context 1
  prom-           %81.2 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p13, e81.1
  ct              %81.3 = PushContext        lCL   %81.2, package_version(R.version), function(x, strict=TRUE) <(rir::DispatchTable*|..., e81.1
  val?^           %81.4 = CastType                 up %81.2
  env             e81.5 = MkEnv              l     x=%81.4, strict(miss)=true, parent=R_BaseNamespace, context 1
  val?            %81.6 = Force!<lazy>       !vL   %81.4, e81.5   <vec>
  lgl$-           %81.7 = Is                       %81.6, list
  lgl$-           %81.8 = AsLogical                %81.7
  lgl$#-          %81.9 = Identical                %81.8, false
  void                    Branch                   %81.9 -> BB73 (if true) | BB7 (if false)
BB82   <- [6]
  void                    Nop                !     
  val?^ | miss    %82.1 = %6.0
  dr              %82.2 = CallTarget@0x563fa7f12ec0[Call#9]
  goto BB4
BB73   <- [81]
  void                    Nop                !     
  lgl$-           %73.1 = %81.8
  goto BB14
BB7   <- [81]
  str-            %7.0  = CallSafeBuiltin    wed   c("major", "minor")    <str->
  val?            %7.1  = CallBuiltin        !v    names(%81.6) e81.5   <str->
  lgl$#-          %7.2  = IsType                   %7.1 isA val?-
  void                    Branch                   %7.2 -> BB83 (if true) | BB84 (if false)
BB14   <- [73, 89]
  lgl$-           %14.0 = Phi                      %89.3:BB89, %73.1:BB73
  lgl$-           %14.1 = %14.0
  lgl$#-          %14.2 = CheckTrueFalse     e     %14.1
  void                    Branch                   %14.2 -> BB18 (if true) | BB17 (if false)
BB83   <- [7]
  val?-           %83.0 = CastType           d     dn %7.1   <str->
  val+            %83.1 = CallSafeBuiltin    wed   match(%7.0, %83.0, 0L, nil)    <int->
  lgl$#-          %83.2 = IsType                   %83.1 isA int-
  void                    Branch                   %83.2 -> BB87 (if true) | BB88 (if false)
BB84   <- [7]
  prom-           %84.0 = MkArg                    %7.1, testRversion[0x563fa87b2d70]_p16 (!refl), e81.5
  val?~           %84.1 = CastType                 up %84.0
  prom-           %84.2 = MkArg                    %7.0, testRversion[0x563fa87b2d70]_p15 (!refl), e81.5
  val?~           %84.3 = CastType                 up %84.2
  env             e84.4 = (MkEnv)            l     x=%84.3, table=%84.1, parent=R_BaseNamespace, context 0
  env             e84.5 = MaterializeEnv           , e84.4   <@?>
  prom-           %84.6 = MkArg                    %7.1, testRversion[0x563fa87b2d70]_p22 (!refl), e84.5
  val?~           %84.7 = CastType                 up %84.6
  prom-           %84.8 = MkArg                    %7.0, testRversion[0x563fa87b2d70]_p21 (!refl), e84.5
  val?~           %84.9 = CastType                 up %84.8
  fs              %84.10 = FrameState         R     0x563fa7eae730+289: [], env=e0.3
  fs              %84.11 = FrameState         R     0x563fa7ebfe50+32: [], env=e81.1, next=%84.10
  fs              %84.12 = FrameState         R     0x563fa7fbfe60+123: [%81.8, <blt all>], env=e81.5, next=%84.11
  fs              %84.13 = FrameState         R     0x563fa60f8320+54: [], env=e84.5, next=%84.12
  env             e84.14 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%84.7, x=%84.9, parent=R_BaseNamespace, context -1
  fs              %84.15 = FrameState         R     0x563fa62dfd40+23: [%7.0, %7.1], env=e84.14, next=%84.13
  void                    Deopt              !v    %84.15, Typecheck@0x563fa6332cb0[Type#1], %7.1   !
BB18   <- [14]
  val?^ | miss    %18.0 = LdVar              eR    R_system_version, e81.5
  lgl$#-          %18.1 = Identical                %18.0, function(x, strict=TRUE) <(rir::DispatchTable*|...
  void                    Branch                   %18.1 -> BB85 (if true) | BB86 (if false)
BB17   <- [14]
  fs              %17.0 = FrameState         R     0x563fa7eae730+289: [], env=e0.3
  fs              %17.1 = FrameState         R     0x563fa7ebfe50+32: [], env=e81.1, next=%17.0
  (cls|spec|blt)  %17.2 = LdFun              !v    .make_numeric_version, e81.5
  fs              %17.3 = FrameState         R     0x563fa7fbfe60+206: [%17.2], env=e81.5, next=%17.1
  void                    Deopt              !v    %17.3, DeadCall@0x563fa6d5ee38[Call#11], %17.2   !
BB87   <- [83]
  int-            %87.0 = CastType           d     dn %83.1
  lgl-            %87.1 = Gt                 wed   %87.0, 0L, elided   <lgl->
  val?            %87.2 = CallBuiltin        !v    all(%87.1) e81.5   <lgl$->
  lgl$#-          %87.3 = IsType                   %87.2 isA lgl$-
  void                    Branch                   %87.3 -> BB89 (if true) | BB90 (if false)
BB88   <- [83]
  prom-           %88.0 = MkArg                    %83.0, testRversion[0x563fa87b2d70]_p16 (!refl), e81.5
  val?~           %88.1 = CastType                 up %88.0
  prom-           %88.2 = MkArg                    %7.0, testRversion[0x563fa87b2d70]_p15 (!refl), e81.5
  val?~           %88.3 = CastType                 up %88.2
  env             e88.4 = (MkEnv)            l     x=%88.3, table=%88.1, parent=R_BaseNamespace, context 0
  env             e88.5 = MaterializeEnv           , e88.4   <@?>
  prom-           %88.6 = MkArg                    %83.0, testRversion[0x563fa87b2d70]_p22 (!refl), e88.5
  val?~           %88.7 = CastType                 up %88.6
  prom-           %88.8 = MkArg                    %7.0, testRversion[0x563fa87b2d70]_p21 (!refl), e88.5
  val?~           %88.9 = CastType                 up %88.8
  fs              %88.10 = FrameState         R     0x563fa7eae730+289: [], env=e0.3
  fs              %88.11 = FrameState         R     0x563fa7ebfe50+32: [], env=e81.1, next=%88.10
  fs              %88.12 = FrameState         R     0x563fa7fbfe60+123: [%81.8, <blt all>], env=e81.5, next=%88.11
  fs              %88.13 = FrameState         R     0x563fa60f8320+54: [], env=e88.5, next=%88.12
  env             e88.14 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%88.7, x=%88.9, parent=R_BaseNamespace, context -1
  fs              %88.15 = FrameState         R     0x563fa62dfd40+69: [%83.1], env=e88.14, next=%88.13
  void                    Deopt              !v    %88.15, Typecheck@0x563fa712a688[Type#2], %83.1   !
BB85   <- [18]
  prom-           %85.0 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p18, e81.5
  ct              %85.1 = PushContext        lCL   %85.0, R_system_version(paste([(x, c("major", "minor"|..., function(x, strict=TRUE) <(rir::DispatchTable*|..., e81.5
  val?^           %85.2 = CastType                 up %85.0
  val?^ | miss    %85.3 = LdVar              eR    .make_numeric_version, R_BaseNamespace
  lgl$#-          %85.4 = Identical                %85.3, function(x, strict=TRUE, regexp, classes=NULL)|...
  void                    Branch                   %85.4 -> BB91 (if true) | BB92 (if false)
BB86   <- [18]
  fs              %86.0 = FrameState         R     0x563fa7eae730+289: [], env=e0.3
  fs              %86.1 = FrameState         R     0x563fa7ebfe50+32: [], env=e81.1, next=%86.0
  fs              %86.2 = FrameState         R     0x563fa7fbfe60+152: [%14.1], env=e81.5, next=%86.1
  void                    Deopt              !v    %86.2, CallTarget@0x563fa6d5ee38[Call#7], %18.0   !
BB89   <- [87]
  lgl$-           %89.0 = CastType           d     dn %87.2
  lgl$-           %89.1 = AsLogical                %89.0
  lgl$-           %89.2 = LAnd                     %81.8, %89.1
  lgl$-           %89.3 = %89.2
  goto BB14
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x563fa7eae730+289: [], env=e0.3
  fs              %90.1 = FrameState         R     0x563fa7ebfe50+32: [], env=e81.1, next=%90.0
  fs              %90.2 = FrameState         R     0x563fa7fbfe60+145: [%81.8, %87.2], env=e81.5, next=%90.1
  void                    Deopt              !v    %90.2, Typecheck@0x563fa6d5ee38[Type#9], %87.2   !
BB91   <- [85]
  env             e91.0 = MkEnv              l     x=%85.2, strict(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %91.1 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p25, e91.0
  prom-           %91.2 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p26 (!refl), e91.0
  prom-           %91.3 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p27, e91.0
  prom-           %91.4 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p30, e91.0
  val?            %91.5 = StaticCall         !v    .make_numeric_version[0x563fa7feb0f0](%91.1, %91.2, %91.3, %91.4) e91.0   <vec$>
  val?            %91.6 = PopContext         C     %91.5, %85.1   <vec$>
  val?            %91.7 = PopContext         C     %91.6, %81.3   <vec$>
  val?            %91.8 = PopContext         C     %91.7, %81.0   <vec$>
  void                    StVar              lW    current, %91.8, e0.3
  val?^ | miss    %91.10 = LdVar              eR    length, e0.3
  lgl$#-          %91.11 = Identical                <blt length>, %91.10   <true>
  void                    Branch                   %91.11 -> BB93 (if true) | BB94 (if false)
BB92   <- [85]
  fs              %92.0 = FrameState         R     0x563fa7eae730+289: [], env=e0.3
  fs              %92.1 = FrameState         R     0x563fa7ebfe50+32: [], env=e81.1, next=%92.0
  fs              %92.2 = FrameState         R     0x563fa7fbfe60+195: [], env=e81.5, next=%92.1
  env             e92.3 = (MkEnv)            l     x=%85.2, strict(miss)=true, parent=R_BaseNamespace, context 1
  fs              %92.4 = FrameState         R     0x563fa8b9e670+0: [], env=e92.3, next=%92.2
  void                    Deopt              !v    %92.4, CallTarget@0x563fa6d5f258[Call#0], %85.3   !
BB93   <- [91]
  (cls|spec|blt)  %93.0 = LdFun              !v    $, <0x563fa5acac10>, e0.3
  prom-           %93.1 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p5, e0.3
  prom-           %93.2 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p6, e0.3
  val?            %93.3 = Call               !v    %93.0(%93.1, %93.2) e0.3   <nil->
  void                    StVar              lW    Rdeps, %93.3, e0.3
  lgl$#-          %93.5 = IsType                   %93.3 isA val?-
  void                    Branch                   %93.5 -> BB95 (if true) | BB96 (if false)
BB94   <- [91]
  fs              %94.0 = FrameState         R     0x563fa7eae730+303: [], env=e0.3
  void                    Deopt              !v    %94.0, DeadBranchReached@0x563fa7f12ec0[Test#0], %91.11   !
BB95   <- [93]
  val?-           %95.0 = CastType           d     dn %93.3   <nil->
  (int|real)$-    %95.1 = CallSafeBuiltin    wed   length(%95.0)    <int$->
  lgl$#-          %95.2 = IsType                   %95.1 isA int$-
  void                    Branch                   %95.2 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  fs              %96.0 = FrameState         R     0x563fa7eae730+416: [<blt length>, %93.3], env=e0.3
  void                    Deopt              !v    %96.0, Typecheck@0x563fa7f12ec0[Type#21], %93.3   !
BB97   <- [95]
  int$-           %97.0 = CastType           d     dn %95.1
  lgl$#-          %97.1 = CheckTrueFalse     e     %97.0
  void                    Branch                   %97.1 -> BB56 (if true) | BB27 (if false)
BB98   <- [95]
  fs              %98.0 = FrameState         R     0x563fa7eae730+433: [%95.1], env=e0.3
  void                    Deopt              !v    %98.0, Typecheck@0x563fa7f12ec0[Type#22], %95.1   !
BB56   <- [97]
  val-            %56.0 = ChkMissing         e     %95.0
  int$-           %56.1 = Length                   %95.0
  int$-           %56.2 = Inc                      0L
  lgl$-           %56.3 = Lt                 d     %56.1, %56.2, elided   <@?>
  lgl$#-          %56.4 = Identical                %56.3, true
  void                    Branch                   %56.4 -> BB72 (if true) | BB57 (if false)
BB27   <- [97]
  void                    Nop                !     
  goto BB28
BB72   <- [56]
  void                    Nop                !     
  goto BB70
BB57   <- [56]
  val?            %57.0 = Extract2_1D        wed   %95.0, %56.2, elided   <val?_>
  void                    StVar              lW    dep, %57.0, e0.3
  val?^ | miss    %57.2 = LdVar              eR    length, e0.3
  lgl$#-          %57.3 = Identical                <blt length>, %57.2   <@?>
  void                    Branch                   %57.3 -> BB61 (if true) | BB60 (if false)
BB28   <- [27, 70]
  val?^ | miss    %28.0 = LdVar              eR    R_version_built_under, e0.3
  val?            %28.1 = Force!<value>      !v    %28.0, e0.3   <vec$>
  val?^ | miss    %28.2 = LdVar              eR    current, e0.3
  val?            %28.3 = Force!<value>      !v    %28.2, e0.3   <vec$>
  val?            %28.4 = Gt                 !v    %28.1, %28.3, e0.3   <lgl$->
  lgl$#-          %28.5 = IsType                   %28.4 isA lgl$-
  void                    Branch                   %28.5 -> BB103 (if true) | BB104 (if false)
BB70   <- [69, 72]
  void                    Nop                !     
  goto BB28
BB61   <- [57]
  val             %61.0 = ChkMissing         e     %57.0
  lgl$#-          %61.1 = IsType                   %57.0 isA val?+
  void                    Branch                   %61.1 -> BB99 (if true) | BB100 (if false)
BB60   <- [57]
  (cls|spec|blt)  %60.0 = LdFun              !v    length, e0.3
  fs              %60.1 = FrameState         R     0x563fa7eae730+531: [%95.0, %56.1, %56.2, %60.0], env=e0.3
  void                    Deopt              !v    %60.1, DeadCall@0x563fa7f12ec0[Call#13], %60.0   !
BB103   <- [28]
  lgl$-           %103.0 = CastType           d     dn %28.4
  lgl$#-          %103.1 = CheckTrueFalse     e     %103.0
  void                    Branch                   %103.1 -> BB55 (if true) | BB31 (if false)
BB104   <- [28]
  fs              %104.0 = FrameState         R     0x563fa7eae730+1175: [%28.4], env=e0.3
  void                    Deopt              !v    %104.0, Typecheck@0x563fa7f12ec0[Type#92], %28.4   !
BB99   <- [61]
  val?+           %99.0 = CastType           d     dn %57.0   <val?_>
  real$-          %99.1 = CallSafeBuiltin    wed   length(%99.0)    <val?_>
  lgl$-           %99.2 = Gt                 d     %99.1, 1L, elided   <val?_>
  lgl$#-          %99.3 = CheckTrueFalse     e     %99.2
  void                    Branch                   %99.3 -> BB71 (if true) | BB62 (if false)
BB100   <- [61]
  fs              %100.0 = FrameState         R     0x563fa7eae730+503: [%95.0, %56.1, %56.2], env=e0.3
  void                    Deopt              !v    %100.0, Typecheck@0x563fa7f12ec0[Type#25], %57.0   !
BB55   <- [103]
  (cls|spec|blt)  %55.0 = LdFun              !v    warning, e0.3
  fs              %55.1 = FrameState         R     0x563fa7eae730+1196: [%55.0], env=e0.3
  void                    Deopt              !v    %55.1, DeadCall@0x563fa7f12ec0[Call#43], %55.0   !
BB31   <- [103]
  (cls|spec|blt)  %31.0 = LdFun              !v    $, <0x563fa5acac10>, e0.3
  prom-           %31.1 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p7, e0.3
  prom-           %31.2 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p8, e0.3
  val?            %31.3 = Call               !v    %31.0(%31.1, %31.2) e0.3   <str$->
  void                    StVar              lW    platform, %31.3, e0.3
  (cls|spec|blt)  %31.5 = LdFun              !v    $, <0x563fa5acac10>, e0.3
  prom-           %31.6 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p9, e0.3
  prom-           %31.7 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p10, e0.3
  val?            %31.8 = Call               !v    %31.5(%31.6, %31.7) e0.3   <str$->
  void                    StVar              lW    r_arch, %31.8, e0.3
  (cls|spec|blt)  %31.10 = LdFun              !v    $, <0x563fa5acac10>, e0.3
  prom-           %31.11 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p11, e0.3
  prom-           %31.12 = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p12, e0.3
  val?            %31.13 = Call               !v    %31.10(%31.11, %31.12) e0.3   <str$->
  lgl$#-          %31.14 = IsType                   %31.13 isA val?-
  void                    Branch                   %31.14 -> BB105 (if true) | BB106 (if false)
BB71   <- [99]
  (cls|spec|blt)  %71.0 = LdFun              !v    $, e0.3
  fs              %71.1 = FrameState         R     0x563fa7eae730+627: [%95.0, %56.1, %56.2, %71.0], env=e0.3
  void                    Deopt              !v    %71.1, DeadCall@0x563fa7f12ec0[Call#14], %71.0   !
BB62   <- [99]
  void                    Nop                !     
  int$-           %62.1 = %56.2
  goto BB63
BB105   <- [31]
  val?-           %105.0 = CastType           d     dn %31.13   <str$->
  lgl-            %105.1 = Eq                 wed   %105.0, "unix", elided   <lgl$->
  lgl$#-          %105.2 = IsType                   %105.1 isA lgl$-
  void                    Branch                   %105.2 -> BB107 (if true) | BB108 (if false)
BB106   <- [31]
  fs              %106.0 = FrameState         R     0x563fa7eae730+1385: [%31.13], env=e0.3
  void                    Deopt              !v    %106.0, Typecheck@0x563fa7f12ec0[Type#108], %31.13   !
BB63   <- [62, 67]
  int$-           %63.0 = Phi                      %62.1:BB62, %67.1:BB67
  int$-           %63.1 = %63.0
  int$-           %63.2 = Inc                      %63.1
  lgl$-           %63.3 = Lt                 d     %56.1, %63.2, elided
  lgl$#-          %63.4 = Identical                %63.3, true
  void                    Branch                   %63.4 -> BB69 (if true) | BB64 (if false)
BB107   <- [105]
  lgl$-           %107.0 = CastType           d     dn %105.1
  lgl$#-          %107.1 = CheckTrueFalse     e     %107.0
  void                    Branch                   %107.1 -> BB54 (if true) | BB36 (if false)
BB108   <- [105]
  fs              %108.0 = FrameState         R     0x563fa7eae730+1397: [%105.1], env=e0.3
  void                    Deopt              !v    %108.0, Typecheck@0x563fa7f12ec0[Type#109], %105.1   !
BB69   <- [63]
  void                    Nop                !     
  goto BB70
BB64   <- [63]
  val?            %64.0 = Extract2_1D        wed   %95.0, %63.2, elided   <val?_>
  void                    StVar              lW    dep, %64.0, e0.3
  lgl$#-          %64.2 = IsType                   %64.0 isA val?+
  val             %64.3 = ChkMissing         e     %64.0
  void                    Branch                   %64.2 -> BB101 (if true) | BB102 (if false)
BB54   <- [107]
  void                    Nop                !     
  goto BB42
BB36   <- [107]
  val?^ | miss    %36.0 = LdVar              eR    nzchar, e0.3
  lgl$#-          %36.1 = Identical                <blt nzchar>, %36.0   <@?>
  void                    Branch                   %36.1 -> BB38 (if true) | BB37 (if false)
BB101   <- [64]
  val?+           %101.0 = CastType           d     dn %64.0   <val?_>
  real$-          %101.1 = CallSafeBuiltin    wed   length(%101.0)    <val?_>
  lgl$-           %101.2 = Gt                 d     %101.1, 1L, elided   <val?_>
  lgl$#-          %101.3 = CheckTrueFalse     e     %101.2
  void                    Branch                   %101.3 -> BB68 (if true) | BB67 (if false)
BB102   <- [64]
  fs              %102.0 = FrameState         R     0x563fa7eae730+834: [%95.0, %56.1, %63.2], env=e0.3
  void                    Deopt              !v    %102.0, Typecheck@0x563fa7f12ec0[Type#58], %64.0   !
BB42   <- [41, 54]
  val?^ | miss    %42.0 = LdVar              eR    nzchar, e0.3
  lgl$#-          %42.1 = Identical                <blt nzchar>, %42.0   <true>
  void                    Branch                   %42.1 -> BB109 (if true) | BB110 (if false)
BB38   <- [36]
  val?^ | miss    %38.0 = LdVar              eR    platform, e0.3
  val?            %38.1 = Force!             !v    %38.0, e0.3   <val?_>
  val?            %38.2 = CallBuiltin        !v    nzchar(%38.1) e0.3   <val?_>
  lgl$-           %38.3 = AsLogical          e     %38.2
  lgl$#-          %38.4 = Identical                %38.3, false
  void                    Branch                   %38.4 -> BB40 (if true) | BB39 (if false)
BB37   <- [36]
  (cls|spec|blt)  %37.0 = LdFun              !v    nzchar, e0.3
  fs              %37.1 = FrameState         R     0x563fa7eae730+1436: [%37.0], env=e0.3
  void                    Deopt              !v    %37.1, DeadCall@0x563fa7f12ec0[Call#51], %37.0   !
BB68   <- [101]
  (cls|spec|blt)  %68.0 = LdFun              !v    $, e0.3
  fs              %68.1 = FrameState         R     0x563fa7eae730+958: [%95.0, %56.1, %63.2, %68.0], env=e0.3
  void                    Deopt              !v    %68.1, DeadCall@0x563fa7f12ec0[Call#29], %68.0   !
BB67   <- [101]
  void                    Nop                !     
  int$-           %67.1 = %63.2
  goto BB63
BB109   <- [42]
  val?^ | miss    %109.0 = LdVar              eR    r_arch, e0.3
  lgl$#-          %109.1 = IsType                   %109.0 isA val?~- | miss
  void                    Branch                   %109.1 -> BB111 (if true) | BB112 (if false)
BB110   <- [42]
  void                    Nop                !     
  lgl$#-          %110.1 = %42.1
  dr              %110.2 = DeadBranchReached@0x563fa7f12ec0[Test#7]
  goto BB43
BB40   <- [38]
  lgl$#-          %40.0 = CheckTrueFalse     e     %38.3
  void                    Branch                   %40.0 -> BB53 (if true) | BB41 (if false)
BB39   <- [38]
  (cls|spec|blt)  %39.0 = LdFun              !v    grepl, e0.3
  fs              %39.1 = FrameState         R     0x563fa7eae730+1516: [%38.3, %39.0], env=e0.3
  void                    Deopt              !v    %39.1, DeadCall@0x563fa7f12ec0[Call#52], %39.0   !
BB111   <- [109]
  val?~- | miss   %111.0 = CastType           d     dn %109.0
  val?-           %111.1 = Force!<value>            %111.0,    <str$->
  val?            %111.2 = CallBuiltin        !v    nzchar(%111.1) e0.3   <lgl$->
  lgl$#-          %111.3 = IsType                   %111.2 isA lgl$-
  void                    Branch                   %111.3 -> BB113 (if true) | BB114 (if false)
BB112   <- [109]
  void                    Nop                !     
  val?^ | miss    %112.1 = %109.0
  dr              %112.2 = Typecheck@0x563fa7f12ec0[Type#120]
  goto BB43
BB43   <- [110, 112]
  val?^ | miss    %43.0 = Phi                      %110.1:BB110, %112.1:BB112
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %110.2:BB110, %112.2:BB112
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x563fa7eae730+1622: [], env=e0.3
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB53   <- [40]
  (cls|spec|blt)  %53.0 = LdFun              !v    stop, e0.3
  fs              %53.1 = FrameState         R     0x563fa7eae730+1572: [%53.0], env=e0.3
  void                    Deopt              !v    %53.1, DeadCall@0x563fa7f12ec0[Call#53], %53.0   !
BB41   <- [40]
  void                    Nop                !     
  goto BB42
BB113   <- [111]
  lgl$-           %113.0 = CastType           d     dn %111.2
  lgl$-           %113.1 = AsLogical                %113.0
  lgl$#-          %113.2 = Identical                %113.1, false
  lgl$-           %113.3 = AsLogical                %113.1
  lgl$#-          %113.4 = Identical                %113.3, false
  void                    Branch                   %113.2 -> BB48 (if true) | BB47 (if false)
BB114   <- [111]
  fs              %114.0 = FrameState         R     0x563fa7eae730+1713: [%111.2], env=e0.3
  void                    Deopt              !v    %114.0, Typecheck@0x563fa7f12ec0[Type#121], %111.2   !
BB48   <- [113]
  void                    Branch                   %113.4 -> BB50 (if true) | BB49 (if false)
BB47   <- [113]
  (cls|spec|blt)  %47.0 = LdFun              !v    file.exists, e0.3
  fs              %47.1 = FrameState         R     0x563fa7eae730+1730: [%113.1, %47.0], env=e0.3
  void                    Deopt              !v    %47.1, DeadCall@0x563fa7f12ec0[Call#57], %47.0   !
BB50   <- [48]
  lgl$#-          %50.0 = CheckTrueFalse     e     %113.3
  void                    Branch                   %50.0 -> BB52 (if true) | BB51 (if false)
BB49   <- [48]
  (cls|spec|blt)  %49.0 = LdFun              !v    file.exists, e0.3
  fs              %49.1 = FrameState         R     0x563fa7eae730+1776: [%113.3, %49.0], env=e0.3
  void                    Deopt              !v    %49.1, DeadCall@0x563fa7f12ec0[Call#59], %49.0   !
BB52   <- [50]
  (cls|spec|blt)  %52.0 = LdFun              !v    stop, e0.3
  fs              %52.1 = FrameState         R     0x563fa7eae730+1833: [%52.0], env=e0.3
  void                    Deopt              !v    %52.1, DeadCall@0x563fa7f12ec0[Call#61], %52.0   !
BB51   <- [50]
  void                    Invisible          v     
  void                    Return             l     nil
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkgInfo, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Built, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x563fa5acac10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p3, e0.0
  prom-           %0.3  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p4, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec$>
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    built, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    R, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkgInfo, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Rdepends2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    built, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Platform, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Platform, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r_arch, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Platform, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    OS.type, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    R.version, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x563fa5acb940>, e0.0
  val?            %0.2  = Call               !     %0.1("major", "minor") e0.0   <str->
  void                    Return             l     %0.2
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x563fa5acb470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p17, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     paste, <0x563fa5dc1da8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p19, e0.0
  val?            %0.3  = NamedCall          !     %0.1(%0.2, collapse=".") e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <vec>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <false>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  (cls|spec|blt)  %2.0  = LdFun              !v    c, e0.0
  val?            %2.1  = Call               !v    %2.0("major", "minor") e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p20, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <vec>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x563fa5acb940>, e0.0
  val?            %0.2  = Call               !     %0.1("major", "minor") e0.0   <str->
  void                    Return             l     %0.2
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    strict, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x563fa5acac10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p28, e0.0
  prom-           %0.3  = MkArg                    unboundValue, testRversion[0x563fa87b2d70]_p29, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .standard_regexps, <0x563fa5f3eef8>, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <vec+>
  void                    Return             l     %0.2
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    valid_R_system_version, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x563fa5acb940>, e0.0
  val?            %0.2  = Call               !     %0.1("R_system_version", "package_version") e0.0   <str->
  void                    Return             l     %0.2

│ testRversion[0x563fa87b2d70]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
