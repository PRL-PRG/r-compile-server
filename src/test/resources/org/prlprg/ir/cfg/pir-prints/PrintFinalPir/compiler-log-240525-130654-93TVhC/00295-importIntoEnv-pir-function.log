
┌──────────────────────────────────────────────────────────────────────────────┐
│ importIntoEnv[0x563fa7d6b420]                                                │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl3                    │
│ Properties:                                                                  │
├────── Final PIR Version
importIntoEnv[0x563fa7d6b420]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  env             e0.4  = MkEnv              l     impenv=%0.3, impnames=%0.2, expenv=%0.1, expnames=%0.0, parent=R_BaseNamespace, context 1
  prom-           %0.5  = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p0, e0.4
  ct              %0.6  = PushContext        lCL   %0.5, "exports", getNamespaceInfo(expenv, "exports"), function(ns, which) <(rir::DispatchTable*)0x56|..., e0.4
  val?^           %0.7  = CastType                 up %0.5
  env             e0.8  = MkEnv              l     ns=%0.7, which="exports", parent=R_BaseNamespace, context 1
  prom-           %0.9  = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p1, e0.8
  ct              %0.10 = PushContext        lCL   %0.9, false, asNamespace(ns, base.OK=FALSE), function(ns, base.OK=TRUE) <(rir::DispatchTabl|..., e0.8
  val?^           %0.11 = CastType                 up %0.9
  env             e0.12 = MkEnv              l     ns=%0.11, base.OK=false, parent=R_BaseNamespace, context 1
  val?            %0.13 = Force!<lazy>       !vr   %0.11,    <(str|env)->
  lgl$#-          %0.14 = CallSafeBuiltin    wed   is.character(%0.13)    <lgl$->
  void                    Branch                   %0.14 -> BB2 (if true) | BB58 (if false)
BB2   <- [0]
  void                    Nop                !     
  lgl$#-          %2.1  = %0.14
  goto BB3
BB58   <- [0]
  lgl$#-          %58.0 = CallSafeBuiltin    wed   is.symbol(%0.13)    <lgl$->
  lgl$-           %58.1 = LOr                      %0.14, %58.0
  lgl$-           %58.2 = %58.1
  goto BB3
BB3   <- [58, 2]
  lgl$-           %3.0  = Phi                      %58.2:BB58, %2.1:BB2
  lgl$-           %3.1  = %3.0
  lgl$#-          %3.2  = CheckTrueFalse     e     %3.1
  void                    Branch                   %3.2 -> BB55 (if true) | BB4 (if false)
BB55   <- [3]
  prom-           %55.0 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p2, e0.12
  ct              %55.1 = PushContext        lCL   %55.0, getNamespace(ns), function(name) <(rir::DispatchTable*)0x563fa7f|..., e0.12
  val?^           %55.2 = CastType                 up %55.0
  env             e55.3 = MkEnv              l     name=%55.2, parent=R_BaseNamespace, context 1
  val?            %55.4 = Force!<lazy>       !vr   %55.2,    <str$->
  val?            %55.5 = CallBuiltin        !v    getRegisteredNamespace(%55.4) e55.3   <env->
  lgl$-           %55.6 = Is                       %55.5, NULL
  void                    StVar              lW    ns, %55.5, e55.3
  val             %55.8 = ChkMissing         e     %55.5
  lgl$-           %55.9 = Not                d     %55.6, elided
  lgl$#-          %55.10 = CheckTrueFalse     e     %55.9
  void                    Branch                   %55.10 -> BB57 (if true) | BB56 (if false)
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB57   <- [55]
  val?            %57.0 = PopContext         C     %55.5, %55.1   <env->
  void                    StVar              lW    ns, %57.0, e0.12
  goto BB5
BB56   <- [55]
  fs              %56.0 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %56.1 = FrameState         R     0x563fa8094ca0+45: [], env=e0.8, next=%56.0
  fs              %56.2 = FrameState         R     0x563fa86f3320+244: [], env=e0.12, next=%56.1
  (cls|spec|blt)  %56.3 = LdFun              !v    loadNamespace, e55.3
  fs              %56.4 = FrameState         R     0x563fa84c1b00+67: [%56.3], env=e55.3, next=%56.2
  void                    Deopt              !v    %56.4, DeadCall@0x563fa6cce9f8[Call#0], %56.3   !
BB5   <- [4, 57]
  val?^ | miss    %5.0  = LdVar              eR    isNamespace, e0.12
  lgl$#-          %5.1  = Identical                %5.0, function(ns) <(rir::DispatchTable*)0x563fa824c|...
  void                    Branch                   %5.1 -> BB59 (if true) | BB60 (if false)
BB59   <- [5]
  prom-           %59.0 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p3, e0.12
  ct              %59.1 = PushContext        lCL   %59.0, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x563fa824c|..., e0.12
  val?^           %59.2 = CastType                 up %59.0
  env             e59.3 = MkEnv              l     ns=%59.2, parent=R_BaseNamespace, context 1
  val?            %59.4 = Force!<lazy>       !vL   %59.2, e59.3   <env->
  val?            %59.5 = CallBuiltin        !v    isNamespaceEnv(%59.4) e59.3
  val?            %59.6 = PopContext         C     %59.5, %59.1   <lgl$->
  lgl$#-          %59.7 = IsType                   %59.6 isA lgl$-
  void                    Branch                   %59.7 -> BB61 (if true) | BB62 (if false)
BB60   <- [5]
  fs              %60.0 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %60.1 = FrameState         R     0x563fa8094ca0+45: [], env=e0.8, next=%60.0
  fs              %60.2 = FrameState         R     0x563fa86f3320+258: [], env=e0.12, next=%60.1
  void                    Deopt              !v    %60.2, CallTarget@0x563fa6cce898[Call#3], %5.0   !
BB61   <- [59]
  lgl$-           %61.0 = CastType           d     dn %59.6
  lgl$-           %61.1 = Not                d     %61.0, elided
  lgl$#-          %61.2 = CheckTrueFalse     e     %61.1
  void                    Branch                   %61.2 -> BB54 (if true) | BB10 (if false)
BB62   <- [59]
  fs              %62.0 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %62.1 = FrameState         R     0x563fa8094ca0+45: [], env=e0.8, next=%62.0
  fs              %62.2 = FrameState         R     0x563fa86f3320+290: [%59.6], env=e0.12, next=%62.1
  void                    Deopt              !v    %62.2, Typecheck@0x563fa6cce898[Type#9], %59.6   !
BB54   <- [61]
  fs              %54.0 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %54.1 = FrameState         R     0x563fa8094ca0+45: [], env=e0.8, next=%54.0
  (cls|spec|blt)  %54.2 = LdFun              !v    stop, e0.12
  fs              %54.3 = FrameState         R     0x563fa86f3320+435: [%54.2], env=e0.12, next=%54.1
  void                    Deopt              !v    %54.3, DeadCall@0x563fa6cce898[Call#6], %54.2   !
BB10   <- [61]
  val?^ | miss    %10.0 = LdVar              eR    base.OK, e0.12
  val?            %10.1 = Force!<lazy>       !v    %10.0, e0.12   <lgl$->
  lgl$#-          %10.2 = IsType                   %10.1 isA lgl$-
  void                    Branch                   %10.2 -> BB63 (if true) | BB64 (if false)
BB63   <- [10]
  lgl$-           %63.0 = CastType           d     dn %10.1
  lgl$-           %63.1 = Not                d     %63.0, elided
  lgl$-           %63.2 = AsLogical                %63.1
  lgl$#-          %63.3 = Identical                %63.2, false
  void                    Branch                   %63.3 -> BB53 (if true) | BB13 (if false)
BB64   <- [10]
  void                    Nop                !     
  val?            %64.1 = %10.1
  dr              %64.2 = Typecheck@0x563fa6cce898[Type#10]
  goto BB11
BB53   <- [63]
  void                    Nop                !     
  lgl$-           %53.1 = %63.2
  goto BB18
BB13   <- [63]
  val?^ | miss    %13.0 = LdVar              eR    isBaseNamespace, e0.12
  lgl$#-          %13.1 = Identical                %13.0, function(ns) <(rir::DispatchTable*)0x563fa835a|...
  void                    Branch                   %13.1 -> BB65 (if true) | BB66 (if false)
BB11   <- [64, 66]
  val?^ | miss    %11.0 = Phi                      %64.1:BB64, %66.1:BB66
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %64.2:BB64, %66.2:BB66
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %11.5 = FrameState         R     0x563fa8094ca0+45: [], env=e0.8, next=%11.4
  fs              %11.6 = FrameState         R     0x563fa86f3320+311: [%10.1], env=e0.12, next=%11.5
  void                    Deopt              !v    %11.6, %11.3, %11.1   !
BB18   <- [53, 69]
  lgl$-           %18.0 = Phi                      %69.3:BB69, %53.1:BB53
  lgl$-           %18.1 = %18.0
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB52 (if true) | BB19 (if false)
BB65   <- [13]
  prom-           %65.0 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p4, e0.12
  ct              %65.1 = PushContext        lCL   %65.0, isBaseNamespace(ns), function(ns) <(rir::DispatchTable*)0x563fa835a|..., e0.12
  val?^           %65.2 = CastType                 up %65.0
  env             e65.3 = MkEnv              l     ns=%65.2, parent=R_BaseNamespace, context 1
  prom-           %65.4 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p5, e65.3
  prom-           %65.5 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p6, e65.3
  ct              %65.6 = PushContext        lCL   %65.4, %65.5, identical(ns, .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e65.3
  val?^           %65.7 = CastType                 up %65.5
  val?^           %65.8 = CastType                 up %65.4
  env             e65.9 = MkEnv              l     x=%65.8, y=%65.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %65.10 = Force!<lazy>       !vL   %65.8, e65.9   <val?+>
  val?            %65.11 = Force!<lazy>       !vL   %65.7, e65.9   <val?+>
  val?            %65.12 = CallBuiltin        !v    identical(%65.10, %65.11, true, true, true, true, false, true) e65.9
  val?            %65.13 = PopContext         C     %65.12, %65.6   <lgl$->
  lgl$#-          %65.14 = IsType                   %65.13 isA lgl$-
  void                    Branch                   %65.14 -> BB67 (if true) | BB68 (if false)
BB66   <- [13]
  void                    Nop                !     
  val?^ | miss    %66.1 = %13.0
  dr              %66.2 = CallTarget@0x563fa6cce898[Call#4]
  goto BB11
BB52   <- [18]
  fs              %52.0 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %52.1 = FrameState         R     0x563fa8094ca0+45: [], env=e0.8, next=%52.0
  (cls|spec|blt)  %52.2 = LdFun              !v    stop, e0.12
  fs              %52.3 = FrameState         R     0x563fa86f3320+393: [%52.2], env=e0.12, next=%52.1
  void                    Deopt              !v    %52.3, DeadCall@0x563fa6cce898[Call#5], %52.2   !
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    ns, e0.12
  val?            %19.1 = Force!<wrapped>    !v    %19.0, e0.12   <env->
  val?            %19.2 = PopContext         C     %19.1, %0.10   <env->
  void                    StVar              lW    ns, %19.2, e0.8
  val?^ | miss    %19.4 = LdVar              eR    get, e0.8
  lgl$#-          %19.5 = Identical                %19.4, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %19.5 -> BB71 (if true) | BB72 (if false)
BB67   <- [65]
  lgl$-           %67.0 = CastType           d     dn %65.13
  val?            %67.1 = PopContext         C     %67.0, %65.1   <lgl$->
  lgl$#-          %67.2 = IsType                   %67.1 isA lgl$-
  void                    Branch                   %67.2 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  fs              %68.0 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %68.1 = FrameState         R     0x563fa8094ca0+45: [], env=e0.8, next=%68.0
  fs              %68.2 = FrameState         R     0x563fa86f3320+356: [%63.2], env=e0.12, next=%68.1
  fs              %68.3 = FrameState         R     0x563fa7f44cc0+37: [%65.13], env=e65.3, next=%68.2
  void                    Deopt              !v    %68.3, Typecheck@0x563fa6ccef78[Type#2], %65.13   !
BB71   <- [19]
  prom-           %71.0 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p7, e0.8
  prom-           %71.1 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p8, e0.8
  val?            %71.2 = StaticCall         !v    get[0x563fa8ed0390](%71.0, missingArg, %71.1) { 0 2n } e0.8   <env->
  val?            %71.3 = PopContext         C     %71.2, %0.6   <env->
  void                    StVar              lW    exports, %71.3, e0.4
  lgl$#-          %71.5 = IsType                   %71.3 isA val?-
  val?^ | miss    %71.6 = LdVar              eR    names, e0.4
  lgl$#-          %71.7 = Identical                <blt names>, %71.6   <true>
  void                    Branch                   %71.7 -> BB73 (if true) | BB74 (if false)
BB72   <- [19]
  fs              %72.0 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %72.1 = FrameState         R     0x563fa8094ca0+59: [], env=e0.8, next=%72.0
  void                    Deopt              !v    %72.1, CallTarget@0x563fa690ea58[Call#1], %19.4   !
BB69   <- [67]
  lgl$-           %69.0 = CastType           d     dn %67.1
  lgl$-           %69.1 = AsLogical                %69.0
  lgl$-           %69.2 = LAnd                     %63.2, %69.1
  lgl$-           %69.3 = %69.2
  goto BB18
BB70   <- [67]
  fs              %70.0 = FrameState         R     0x563fa83630a0+37: [], env=e0.4
  fs              %70.1 = FrameState         R     0x563fa8094ca0+45: [], env=e0.8, next=%70.0
  fs              %70.2 = FrameState         R     0x563fa86f3320+356: [%63.2, %67.1], env=e0.12, next=%70.1
  void                    Deopt              !v    %70.2, Typecheck@0x563fa6cce898[Type#12], %67.1   !
BB73   <- [71]
  val             %73.0 = ChkMissing         e     %71.3
  void                    Branch                   %71.5 -> BB75 (if true) | BB76 (if false)
BB74   <- [71]
  void                    Nop                !     
  lgl$#-          %74.1 = %71.7
  dr              %74.2 = DeadBranchReached@0x563fa8325b10[Test#0]
  goto BB22
BB75   <- [73]
  val?-           %75.0 = CastType           d     dn %71.3   <env->
  val+            %75.1 = CallSafeBuiltin    wed   names(%75.0)    <str->
  void                    StVar              lW    ex, %75.1, e0.4
  val?^ | miss    %75.3 = LdVar              eR    all, e0.4
  lgl$#-          %75.4 = Identical                <blt all>, %75.3   <true>
  void                    Branch                   %75.4 -> BB77 (if true) | BB78 (if false)
BB76   <- [73]
  void                    Nop                !     
  val?            %76.1 = %71.3
  dr              %76.2 = Typecheck@0x563fa8325b10[Type#1]
  goto BB22
BB22   <- [74, 76]
  val?^ | miss    %22.0 = Phi                      %74.1:BB74, %76.1:BB76
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %74.2:BB74, %76.2:BB76
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x563fa83630a0+51: [], env=e0.4
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB77   <- [75]
  val?^ | miss    %77.0 = LdVar              eR    %in%, e0.4
  lgl$#-          %77.1 = Identical                %77.0, function(x, table) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %77.1 -> BB79 (if true) | BB80 (if false)
BB78   <- [75]
  void                    Nop                !     
  lgl$#-          %78.1 = %75.4
  dr              %78.2 = DeadBranchReached@0x563fa8325b10[Test#1]
  goto BB24
BB79   <- [77]
  prom-           %79.0 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p9, e0.4
  prom-           %79.1 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p10 (!refl), e0.4
  val?^           %79.2 = CastType                 up %79.1
  val?^           %79.3 = CastType                 up %79.0
  env             e79.4 = MkEnv              l     x=%79.3, table=%79.2, parent=R_BaseNamespace, context 0
  prom-           %79.5 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p12, e79.4
  val?^           %79.6 = CastType                 up %79.5
  val?^ | miss    %79.7 = LdVar              eR    expnames, e0.4
  val?            %79.8 = Force!<lazy>       !v    %79.7, e0.4   <str->
  prom-           %79.9 = MkArg                    %79.8, importIntoEnv[0x563fa7d6b420]_p13 (!refl), e0.4
  val?~           %79.10 = CastType                 up %79.9
  void                    StArg              lW    x, %79.10, e79.4
  prom-           %79.12 = MkArg                    %79.8, importIntoEnv[0x563fa7d6b420]_p14 (!refl), e79.4
  val?~           %79.13 = CastType                 up %79.12
  env             e79.14 = (MkEnv)            l     x=%79.13, table=%79.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %79.15 = IsEnvStub          R     , e79.14
  void                    Branch                   %79.15 -> BB81 (if true) | BB82 (if false)
BB80   <- [77]
  void                    Nop                !     
  val?^ | miss    %80.1 = %77.0
  dr              %80.2 = CallTarget@0x563fa8325b10[Call#4]
  goto BB24
BB24   <- [78, 80]
  val?^ | miss    %24.0 = Phi                      %78.1:BB78, %80.1:BB80
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %78.2:BB78, %80.2:BB80
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x563fa83630a0+156: [], env=e0.4
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB81   <- [79]
  val?            %81.0 = Force!<lazy>       !vrL  %79.2, e79.14   <val?->
  prom-           %81.1 = MkArg                    %81.0, importIntoEnv[0x563fa7d6b420]_p12 (!refl), e79.4
  val?~           %81.2 = CastType                 up %81.1
  void                    StArg              lWd   table, %81.2, e79.14
  lgl$#-          %81.4 = IsType                   %81.0 isA val?-
  lgl$#-          %81.5 = IsEnvStub          R     , e79.14
  void                    Branch                   %81.5 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x563fa83630a0+253: [<blt all>], env=e0.4
  fs              %82.1 = FrameState         R     0x563fa60f8320+54: [], env=e79.4, next=%82.0
  env             e82.2 = (MkEnv)            l     x=%79.13, table=%79.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %82.3 = FrameState         R     0x563fa62dfd40+9: [%79.8], env=e82.2, next=%82.1
  void                    Deopt              !v    %82.3, EnvStubMaterialized@0x563fa6332cb0[Call#unknown], e79.14   !
BB83   <- [81]
  lgl$#-          %83.0 = IsType                   %79.8 isA val?+
  void                    Branch                   %83.0 -> BB85 (if true) | BB86 (if false)
BB84   <- [81]
  void                    Nop                !     
  env             e84.1 = e79.14
  dr              %84.2 = EnvStubMaterialized@0x563fa6332cb0[Call#unknown]
  goto BB28
BB85   <- [83]
  val?+           %85.0 = CastType           d     dn %79.8   <(int|str)+>
  void                    Branch                   %81.4 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  void                    Nop                !     
  val?            %86.1 = %79.8
  dr              %86.2 = Typecheck@0x563fa6332cb0[Type#0]
  goto BB28
BB28   <- [84, 86, 88]
  val?^ | miss    %28.0 = Phi                      e84.1:BB84, %86.1:BB86, %88.1:BB88
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %84.2:BB84, %86.2:BB86, %88.2:BB88
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x563fa83630a0+253: [<blt all>], env=e0.4
  fs              %28.5 = FrameState         R     0x563fa60f8320+54: [], env=e79.4, next=%28.4
  fs              %28.6 = FrameState         R     0x563fa62dfd40+23: [%79.8, %81.0], env=e79.14, next=%28.5
  void                    Deopt              !v    %28.6, %28.3, %28.1   !
BB87   <- [85]
  val?-           %87.0 = CastType           d     dn %81.0
  val+            %87.1 = CallSafeBuiltin    wed   match(%85.0, %87.0, 0L, nil)    <int->
  lgl$#-          %87.2 = IsType                   %87.1 isA int-
  void                    Branch                   %87.2 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  void                    Nop                !     
  val?            %88.1 = %81.0
  dr              %88.2 = Typecheck@0x563fa6332cb0[Type#1]
  goto BB28
BB89   <- [87]
  int-            %89.0 = CastType           d     dn %87.1
  lgl-            %89.1 = Gt                 wed   %89.0, 0L, elided   <lgl->
  void                    StVar              lW    eie, %89.1, e0.4
  val?            %89.3 = CallBuiltin        !v    all(%89.1) e0.4   <lgl$->
  lgl$#-          %89.4 = IsType                   %89.3 isA lgl$-
  void                    Branch                   %89.4 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x563fa83630a0+253: [<blt all>], env=e0.4
  fs              %90.1 = FrameState         R     0x563fa60f8320+54: [], env=e79.4, next=%90.0
  fs              %90.2 = FrameState         R     0x563fa62dfd40+69: [%87.1], env=e79.14, next=%90.1
  void                    Deopt              !v    %90.2, Typecheck@0x563fa712a688[Type#2], %87.1   !
BB91   <- [89]
  lgl$-           %91.0 = CastType           d     dn %89.3
  lgl$-           %91.1 = Not                d     %91.0, elided
  lgl$#-          %91.2 = CheckTrueFalse     e     %91.1
  void                    Branch                   %91.2 -> BB44 (if true) | BB34 (if false)
BB92   <- [89]
  void                    Nop                !     
  val?            %92.1 = %89.3
  dr              %92.2 = Typecheck@0x563fa8325b10[Type#11]
  goto BB32
BB44   <- [91]
  val?^ | miss    %44.0 = LdVar              eR    expnames, e0.4
  val?            %44.1 = Force!             !v    %44.0, e0.4   <val?_>
  lgl$#-          %44.2 = IsType                   %44.1 isA val+   <@?>
  void                    Branch                   %44.2 -> BB49 (if true) | BB45 (if false)
BB34   <- [91]
  val?^ | miss    %34.0 = LdVar              eR    unlist, e0.4
  lgl$#-          %34.1 = Identical                %34.0, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Branch                   %34.1 -> BB93 (if true) | BB94 (if false)
BB32   <- [92, 94]
  val?^ | miss    %32.0 = Phi                      %92.1:BB92, %94.1:BB94
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %92.2:BB92, %94.2:BB94
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x563fa83630a0+286: [%89.3], env=e0.4
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB49   <- [44]
  val?^ | miss    %49.0 = LdVar              eR    eie, e0.4
  val?            %49.1 = Force!             !v    %49.0, e0.4   <val?_>
  lgl$#-          %49.2 = IsType                   %49.1 isA val?+
  void                    Branch                   %49.2 -> BB95 (if true) | BB96 (if false)
BB45   <- [44]
  prom-           %45.0 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p15, e0.4
  prom-           %45.1 = %45.0
  goto BB46
BB93   <- [34]
  prom-           %93.0 = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p16, e0.4
  ct              %93.1 = PushContext        lCL   %93.0, false, unlist(mget(expnames, envir=exports, inherits=|..., function(x, recursive=TRUE, use.names=TRUE) <(|..., e0.4
  val?^           %93.2 = CastType                 up %93.0
  env             e93.3 = MkEnv              l     x=%93.2, recursive=false, use.names(miss)=true, parent=R_BaseNamespace, context 1
  cls             %93.4 = MkCls                    unlist@127, e93.3
  cls             %93.5 = MkCls                    unlist>URapply@148, e93.3
  val?            %93.6 = Force!<lazy>       !vL   %93.2, e93.3   <vec+>
  val?            %93.7 = CallBuiltin        !v    islistfactor(%93.6, false) e93.3
  lgl$#-          %93.8 = CheckTrueFalse     we    %93.7
  void                    Branch                   %93.8 -> BB40 (if true) | BB35 (if false)
BB94   <- [34]
  void                    Nop                !     
  val?^ | miss    %94.1 = %34.0
  dr              %94.2 = CallTarget@0x563fa8325b10[Call#23]
  goto BB32
BB95   <- [49]
  val?+           %95.0 = CastType           d     dn %49.1   <val?_>
  lgl             %95.1 = Not                wed   %95.0, elided
  lgl             %95.2 = %95.1
  goto BB46
BB96   <- [49]
  fs              %96.0 = FrameState         R     0x563fa83630a0+357: [%44.1, %49.1], env=e0.4
  void                    Deopt              !v    %96.0, Typecheck@0x563fa8325b10[Type#14], %49.1   !
BB46   <- [45, 95]
  (lgl|prom)      %46.0 = Phi                      %95.2:BB95, %45.1:BB45
  (lgl|prom)      %46.1 = %46.0
  val?            %46.2 = Extract1_1D        !v    %44.1, %46.1, e0.4   <val?_>
  void                    StVar              lW    miss, %46.2, e0.4
  val?^ | miss    %46.4 = LdVar              eR    all, e0.4
  lgl$#-          %46.5 = Identical                <blt all>, %46.4   <@?>
  void                    Branch                   %46.5 -> BB48 (if true) | BB47 (if false)
BB40   <- [93]
  val?^ | miss    %40.0 = LdVar              eR    recursive, e93.3
  val?            %40.1 = Force!             !v    %40.0, e93.3   <val?_>
  lgl$#-          %40.2 = CheckTrueFalse     we    %40.1
  void                    Branch                   %40.2 -> BB43 (if true) | BB41 (if false)
BB35   <- [93]
  val?^ | miss    %35.0 = LdVar              eR    x, e93.3
  val?            %35.1 = Force!<wrapped>    !v    %35.0, e93.3   <vec+>
  val?^ | miss    %35.2 = LdVar              eR    recursive, e93.3
  val?            %35.3 = Force!<wrapped>    !v    %35.2, e93.3   <lgl$->
  val?^ | miss    %35.4 = LdVar              eR    use.names, e93.3
  val?            %35.5 = Force!<lazy>       !v    %35.4, e93.3   <lgl$->
  val?            %35.6 = CallBuiltin        !v    unlist(%35.1, %35.3, %35.5) e93.3
  val?            %35.7 = PopContext         C     %35.6, %93.1   <str+>
  void                    StVar              lW    expnames, %35.7, e0.4
  val?^ | miss    %35.9 = LdVar              eR    impnames, e0.4
  val?            %35.10 = Force!<lazy>       !v    %35.9, e0.4   <str->
  lgl$-           %35.11 = Is                       %35.10, NULL
  lgl$#-          %35.12 = CheckTrueFalse     e     %35.11
  void                    Branch                   %35.12 -> BB39 (if true) | BB36 (if false)
BB48   <- [46]
  (cls|spec|blt)  %48.0 = LdFun              !v    startsWith, e0.4
  fs              %48.1 = FrameState         R     0x563fa83630a0+444: [<blt all>, %48.0], env=e0.4
  void                    Deopt              !v    %48.1, DeadCall@0x563fa8325b10[Call#7], %48.0   !
BB47   <- [46]
  (cls|spec|blt)  %47.0 = LdFun              !v    all, e0.4
  fs              %47.1 = FrameState         R     0x563fa83630a0+407: [%47.0], env=e0.4
  void                    Deopt              !v    %47.1, DeadCall@0x563fa8325b10[Call#5], %47.0   !
BB43   <- [40]
  void                    Nop                !     
  cls             %43.1 = %93.5
  goto BB42
BB41   <- [40]
  void                    Nop                !     
  cls             %41.1 = %93.4
  goto BB42
BB39   <- [35]
  (cls|spec|blt)  %39.0 = LdFun              !v    character, e0.4
  fs              %39.1 = FrameState         R     0x563fa83630a0+774: [%39.0], env=e0.4
  void                    Deopt              !v    %39.1, DeadCall@0x563fa8325b10[Call#25], %39.0   !
BB36   <- [35]
  val?^ | miss    %36.0 = LdVar              eR    expnames, e0.4
  val?            %36.1 = Force!<value>      !v    %36.0, e0.4   <str+>
  lgl$-           %36.2 = Is                       %36.1, NULL
  lgl$#-          %36.3 = CheckTrueFalse     e     %36.2
  void                    Branch                   %36.3 -> BB38 (if true) | BB37 (if false)
BB42   <- [41, 43]
  fs              %42.0 = FrameState         R     0x563fa83630a0+725: [], env=e0.4
  cls             %42.1 = Phi                      %41.1:BB41, %43.1:BB43
  cls             %42.2 = %42.1
  void                    StVar              lW    URapply, %42.2, e93.3
  (cls|spec|blt)  %42.4 = LdFun              !v    unique, e93.3
  fs              %42.5 = FrameState         R     0x563fa797cd10+178: [%42.4], env=e93.3, next=%42.0
  void                    Deopt              !v    %42.5, DeadCall@0x563fa60a2730[Call#0], %42.4   !
BB38   <- [36]
  (cls|spec|blt)  %38.0 = LdFun              !v    character, e0.4
  fs              %38.1 = FrameState         R     0x563fa83630a0+845: [%38.0], env=e0.4
  void                    Deopt              !v    %38.1, DeadCall@0x563fa8325b10[Call#26], %38.0   !
BB37   <- [36]
  val?^ | miss    %37.0 = LdVar              eR    impenv, e0.4
  val?            %37.1 = Force!<lazy>       !v    %37.0, e0.4   <env+>
  val?^ | miss    %37.2 = LdVar              eR    impnames, e0.4
  val?            %37.3 = Force!<wrapped>    !v    %37.2, e0.4   <str->
  val?^ | miss    %37.4 = LdVar              eR    expenv, e0.4
  val?            %37.5 = Force!<wrapped>    !v    %37.4, e0.4   <env->
  val?^ | miss    %37.6 = LdVar              eR    expnames, e0.4
  val?            %37.7 = Force!<value>      !v    %37.6, e0.4   <str+>
  val?            %37.8 = CallBuiltin        !     importIntoEnv(%37.1, %37.3, %37.5, %37.7) e0.4
  void                    Return             l     %37.8
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseNamespaceEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <env->
  val?            %0.3  = Extract2_1D        !v    %0.2, ".__NAMESPACE__.", e0.0   <env->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ex, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eie, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mget, <0x563fa6ab0b38>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p17, e0.0
  prom-           %0.3  = MkArg                    unboundValue, importIntoEnv[0x563fa7d6b420]_p18, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, envir=%0.3, inherits=false) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exports, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ importIntoEnv[0x563fa7d6b420]                                                │
└──────────────────────────────────────────────────────────────────────────────┘
