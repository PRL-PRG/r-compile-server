
┌──────────────────────────────────────────────────────────────────────────────┐
│ getNamespaceName[0x563fa7ff6170]                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
getNamespaceName[0x563fa7ff6170]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     ns=%0.0, parent=R_BaseNamespace, context 1
  prom-           %0.2  = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p0 (!refl), e0.1
  ct              %0.3  = PushContext        lCL   %0.2, asNamespace(ns), function(ns, base.OK=TRUE) <(rir::DispatchTabl|..., e0.1
  val?^           %0.4  = CastType                 up %0.2
  env             e0.5  = MkEnv              l     ns=%0.4, base.OK(miss)=true, parent=R_BaseNamespace, context 1
  val?            %0.6  = Force!<lazy>       !vr   %0.4,    <(str|env)->
  lgl$#-          %0.7  = CallSafeBuiltin    wed   is.character(%0.6)    <lgl$->
  void                    Branch                   %0.7 -> BB2 (if true) | BB41 (if false)
BB2   <- [0]
  void                    Nop                !     
  lgl$#-          %2.1  = %0.7
  goto BB3
BB41   <- [0]
  lgl$#-          %41.0 = CallSafeBuiltin    wed   is.symbol(%0.6)    <lgl$->
  lgl$-           %41.1 = LOr                      %0.7, %41.0
  lgl$-           %41.2 = %41.1
  goto BB3
BB3   <- [41, 2]
  lgl$-           %3.0  = Phi                      %41.2:BB41, %2.1:BB2
  lgl$-           %3.1  = %3.0
  lgl$#-          %3.2  = CheckTrueFalse     e     %3.1
  void                    Branch                   %3.2 -> BB38 (if true) | BB4 (if false)
BB38   <- [3]
  prom-           %38.0 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p1, e0.5
  ct              %38.1 = PushContext        lCL   %38.0, getNamespace(ns), function(name) <(rir::DispatchTable*)0x563fa7f|..., e0.5
  val?^           %38.2 = CastType                 up %38.0
  env             e38.3 = MkEnv              l     name=%38.2, parent=R_BaseNamespace, context 1
  val?            %38.4 = Force!<lazy>       !vr   %38.2,    <str$->
  val?            %38.5 = CallBuiltin        !v    getRegisteredNamespace(%38.4) e38.3   <env->
  lgl$-           %38.6 = Is                       %38.5, NULL
  void                    StVar              lW    ns, %38.5, e38.3
  val             %38.8 = ChkMissing         e     %38.5
  lgl$-           %38.9 = Not                d     %38.6, elided
  lgl$#-          %38.10 = CheckTrueFalse     e     %38.9
  void                    Branch                   %38.10 -> BB40 (if true) | BB39 (if false)
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB40   <- [38]
  val?            %40.0 = PopContext         C     %38.5, %38.1   <env->
  void                    StVar              lW    ns, %40.0, e0.5
  goto BB5
BB39   <- [38]
  fs              %39.0 = FrameState         R     0x563fa8240dd0+32: [], env=e0.1
  fs              %39.1 = FrameState         R     0x563fa86f3320+244: [], env=e0.5, next=%39.0
  (cls|spec|blt)  %39.2 = LdFun              !v    loadNamespace, e38.3
  fs              %39.3 = FrameState         R     0x563fa84c1b00+67: [%39.2], env=e38.3, next=%39.1
  void                    Deopt              !v    %39.3, DeadCall@0x563fa6cce9f8[Call#0], %39.2   !
BB5   <- [4, 40]
  val?^ | miss    %5.0  = LdVar              eR    isNamespace, e0.5
  lgl$#-          %5.1  = Identical                %5.0, function(ns) <(rir::DispatchTable*)0x563fa824c|...
  void                    Branch                   %5.1 -> BB42 (if true) | BB43 (if false)
BB42   <- [5]
  prom-           %42.0 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p2, e0.5
  ct              %42.1 = PushContext        lCL   %42.0, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x563fa824c|..., e0.5
  val?^           %42.2 = CastType                 up %42.0
  env             e42.3 = MkEnv              l     ns=%42.2, parent=R_BaseNamespace, context 1
  val?            %42.4 = Force!<lazy>       !vL   %42.2, e42.3   <env->
  val?            %42.5 = CallBuiltin        !v    isNamespaceEnv(%42.4) e42.3
  val?            %42.6 = PopContext         C     %42.5, %42.1   <lgl$->
  lgl$#-          %42.7 = IsType                   %42.6 isA lgl$-
  void                    Branch                   %42.7 -> BB44 (if true) | BB45 (if false)
BB43   <- [5]
  fs              %43.0 = FrameState         R     0x563fa8240dd0+32: [], env=e0.1
  fs              %43.1 = FrameState         R     0x563fa86f3320+258: [], env=e0.5, next=%43.0
  void                    Deopt              !v    %43.1, CallTarget@0x563fa6cce898[Call#3], %5.0   !
BB44   <- [42]
  lgl$-           %44.0 = CastType           d     dn %42.6
  lgl$-           %44.1 = Not                d     %44.0, elided
  lgl$#-          %44.2 = CheckTrueFalse     e     %44.1
  void                    Branch                   %44.2 -> BB37 (if true) | BB10 (if false)
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x563fa8240dd0+32: [], env=e0.1
  fs              %45.1 = FrameState         R     0x563fa86f3320+290: [%42.6], env=e0.5, next=%45.0
  void                    Deopt              !v    %45.1, Typecheck@0x563fa6cce898[Type#9], %42.6   !
BB37   <- [44]
  fs              %37.0 = FrameState         R     0x563fa8240dd0+32: [], env=e0.1
  (cls|spec|blt)  %37.1 = LdFun              !v    stop, e0.5
  fs              %37.2 = FrameState         R     0x563fa86f3320+435: [%37.1], env=e0.5, next=%37.0
  void                    Deopt              !v    %37.2, DeadCall@0x563fa6cce898[Call#6], %37.1   !
BB10   <- [44]
  val?^ | miss    %10.0 = LdVar              eR    base.OK, e0.5
  val?            %10.1 = Force!<lazy>       !v    %10.0, e0.5   <lgl$->
  lgl$#-          %10.2 = IsType                   %10.1 isA lgl$-
  void                    Branch                   %10.2 -> BB46 (if true) | BB47 (if false)
BB46   <- [10]
  lgl$-           %46.0 = CastType           d     dn %10.1
  lgl$-           %46.1 = Not                d     %46.0, elided
  lgl$-           %46.2 = AsLogical                %46.1
  lgl$#-          %46.3 = Identical                %46.2, false
  void                    Branch                   %46.3 -> BB36 (if true) | BB13 (if false)
BB47   <- [10]
  void                    Nop                !     
  val?            %47.1 = %10.1
  dr              %47.2 = Typecheck@0x563fa6cce898[Type#10]
  goto BB11
BB36   <- [46]
  void                    Nop                !     
  lgl$-           %36.1 = %46.2
  goto BB18
BB13   <- [46]
  val?^ | miss    %13.0 = LdVar              eR    isBaseNamespace, e0.5
  lgl$#-          %13.1 = Identical                %13.0, function(ns) <(rir::DispatchTable*)0x563fa835a|...
  void                    Branch                   %13.1 -> BB48 (if true) | BB49 (if false)
BB11   <- [47, 49]
  val?^ | miss    %11.0 = Phi                      %47.1:BB47, %49.1:BB49
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %47.2:BB47, %49.2:BB49
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x563fa8240dd0+32: [], env=e0.1
  fs              %11.5 = FrameState         R     0x563fa86f3320+311: [%10.1], env=e0.5, next=%11.4
  void                    Deopt              !v    %11.5, %11.3, %11.1   !
BB18   <- [36, 52]
  lgl$-           %18.0 = Phi                      %52.3:BB52, %36.1:BB36
  lgl$-           %18.1 = %18.0
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB35 (if true) | BB19 (if false)
BB48   <- [13]
  prom-           %48.0 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p3, e0.5
  ct              %48.1 = PushContext        lCL   %48.0, isBaseNamespace(ns), function(ns) <(rir::DispatchTable*)0x563fa835a|..., e0.5
  val?^           %48.2 = CastType                 up %48.0
  env             e48.3 = MkEnv              l     ns=%48.2, parent=R_BaseNamespace, context 1
  prom-           %48.4 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p4, e48.3
  prom-           %48.5 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p5, e48.3
  ct              %48.6 = PushContext        lCL   %48.4, %48.5, identical(ns, .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e48.3
  val?^           %48.7 = CastType                 up %48.5
  val?^           %48.8 = CastType                 up %48.4
  env             e48.9 = MkEnv              l     x=%48.8, y=%48.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %48.10 = Force!<lazy>       !vL   %48.8, e48.9   <val?+>
  val?            %48.11 = Force!<lazy>       !vL   %48.7, e48.9   <val?+>
  val?            %48.12 = CallBuiltin        !v    identical(%48.10, %48.11, true, true, true, true, false, true) e48.9
  val?            %48.13 = PopContext         C     %48.12, %48.6   <lgl$->
  lgl$#-          %48.14 = IsType                   %48.13 isA lgl$-
  void                    Branch                   %48.14 -> BB50 (if true) | BB51 (if false)
BB49   <- [13]
  void                    Nop                !     
  val?^ | miss    %49.1 = %13.0
  dr              %49.2 = CallTarget@0x563fa6cce898[Call#4]
  goto BB11
BB35   <- [18]
  fs              %35.0 = FrameState         R     0x563fa8240dd0+32: [], env=e0.1
  (cls|spec|blt)  %35.1 = LdFun              !v    stop, e0.5
  fs              %35.2 = FrameState         R     0x563fa86f3320+393: [%35.1], env=e0.5, next=%35.0
  void                    Deopt              !v    %35.2, DeadCall@0x563fa6cce898[Call#5], %35.1   !
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    ns, e0.5
  val?            %19.1 = Force!<wrapped>    !v    %19.0, e0.5   <env->
  val?            %19.2 = PopContext         C     %19.1, %0.3   <env->
  void                    StVar              lW    ns, %19.2, e0.1
  val?^ | miss    %19.4 = LdVar              eR    isBaseNamespace, e0.1
  lgl$#-          %19.5 = Identical                %19.4, function(ns) <(rir::DispatchTable*)0x563fa835a|...
  void                    Branch                   %19.5 -> BB54 (if true) | BB55 (if false)
BB50   <- [48]
  lgl$-           %50.0 = CastType           d     dn %48.13
  val?            %50.1 = PopContext         C     %50.0, %48.1   <lgl$->
  lgl$#-          %50.2 = IsType                   %50.1 isA lgl$-
  void                    Branch                   %50.2 -> BB52 (if true) | BB53 (if false)
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x563fa8240dd0+32: [], env=e0.1
  fs              %51.1 = FrameState         R     0x563fa86f3320+356: [%46.2], env=e0.5, next=%51.0
  fs              %51.2 = FrameState         R     0x563fa7f44cc0+37: [%48.13], env=e48.3, next=%51.1
  void                    Deopt              !v    %51.2, Typecheck@0x563fa6ccef78[Type#2], %48.13   !
BB54   <- [19]
  prom-           %54.0 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p6 (!refl), e0.1
  ct              %54.1 = PushContext        lCL   %54.0, isBaseNamespace(ns), function(ns) <(rir::DispatchTable*)0x563fa835a|..., e0.1
  val?^           %54.2 = CastType                 up %54.0
  env             e54.3 = MkEnv              l     ns=%54.2, parent=R_BaseNamespace, context 1
  prom-           %54.4 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p7, e54.3
  prom-           %54.5 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p8, e54.3
  ct              %54.6 = PushContext        lCL   %54.4, %54.5, identical(ns, .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e54.3
  val?^           %54.7 = CastType                 up %54.5
  val?^           %54.8 = CastType                 up %54.4
  env             e54.9 = MkEnv              l     x=%54.8, y=%54.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %54.10 = Force!<lazy>       !vL   %54.8, e54.9   <val?+>
  val?            %54.11 = Force!<lazy>       !vL   %54.7, e54.9   <val?+>
  val?            %54.12 = CallBuiltin        !v    identical(%54.10, %54.11, true, true, true, true, false, true) e54.9
  val?            %54.13 = PopContext         C     %54.12, %54.6   <lgl$->
  lgl$#-          %54.14 = IsType                   %54.13 isA lgl$-
  void                    Branch                   %54.14 -> BB56 (if true) | BB57 (if false)
BB55   <- [19]
  fs              %55.0 = FrameState         R     0x563fa8240dd0+46: [], env=e0.1
  void                    Deopt              !v    %55.0, CallTarget@0x563fa6aab508[Call#1], %19.4   !
BB52   <- [50]
  lgl$-           %52.0 = CastType           d     dn %50.1
  lgl$-           %52.1 = AsLogical                %52.0
  lgl$-           %52.2 = LAnd                     %46.2, %52.1
  lgl$-           %52.3 = %52.2
  goto BB18
BB53   <- [50]
  fs              %53.0 = FrameState         R     0x563fa8240dd0+32: [], env=e0.1
  fs              %53.1 = FrameState         R     0x563fa86f3320+356: [%46.2, %50.1], env=e0.5, next=%53.0
  void                    Deopt              !v    %53.1, Typecheck@0x563fa6cce898[Type#12], %50.1   !
BB56   <- [54]
  lgl$-           %56.0 = CastType           d     dn %54.13
  val?            %56.1 = PopContext         C     %56.0, %54.1   <lgl$->
  lgl$#-          %56.2 = IsType                   %56.1 isA lgl$-
  void                    Branch                   %56.2 -> BB58 (if true) | BB59 (if false)
BB57   <- [54]
  fs              %57.0 = FrameState         R     0x563fa8240dd0+78: [], env=e0.1
  fs              %57.1 = FrameState         R     0x563fa7f44cc0+37: [%54.13], env=e54.3, next=%57.0
  void                    Deopt              !v    %57.1, Typecheck@0x563fa6ccef78[Type#2], %54.13   !
BB58   <- [56]
  lgl$-           %58.0 = CastType           d     dn %56.1
  lgl$#-          %58.1 = CheckTrueFalse     e     %58.0
  void                    Branch                   %58.1 -> BB34 (if true) | BB26 (if false)
BB59   <- [56]
  void                    Nop                !     
  val?            %59.1 = %56.1
  dr              %59.2 = Typecheck@0x563fa6aab508[Type#3]
  goto BB24
BB34   <- [58]
  void                    Visible            v     
  str$#-          %34.1 = "base"
  goto BB33
BB26   <- [58]
  val?^ | miss    %26.0 = LdVar              eR    .getNamespaceInfo, e0.1
  lgl$#-          %26.1 = Identical                %26.0, function(ns, which) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %26.1 -> BB60 (if true) | BB61 (if false)
BB24   <- [59, 61]
  val?^ | miss    %24.0 = Phi                      %59.1:BB59, %61.1:BB61
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %59.2:BB59, %61.2:BB61
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x563fa8240dd0+78: [%56.1], env=e0.1
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB33   <- [34, 72]
  val?            %33.0 = Phi                      %72.3:BB72, %34.1:BB34
  val?            %33.1 = %33.0
  void                    Return             l     %33.1
BB60   <- [26]
  val?^ | miss    %60.0 = LdVar              eR    ns, e0.1
  val?            %60.1 = Force!<value>      !v    %60.0, e0.1   <env->
  lgl$#-          %60.2 = IsType                   %60.1 isA val+   <true>
  lgl$#-          %60.3 = IsType                   %60.1 isA val?-
  void                    Branch                   %60.2 -> BB62 (if true) | BB63 (if false)
BB61   <- [26]
  void                    Nop                !     
  val?^ | miss    %61.1 = %26.0
  dr              %61.2 = CallTarget@0x563fa6aab508[Call#2]
  goto BB24
BB62   <- [60]
  void                    Branch                   %60.3 -> BB64 (if true) | BB65 (if false)
BB63   <- [60]
  void                    Nop                !     
  lgl$#-          %63.1 = %60.2
  dr              %63.2 = DeadBranchReached@0x563fa6ccf238[Test#0]
  goto BB27
BB64   <- [62]
  val?-           %64.0 = CastType           d     dn %60.1   <env->
  val?            %64.1 = Extract2_1D        wed   %64.0, ".__NAMESPACE__.", elided   <env->
  lgl$#-          %64.2 = IsType                   %64.1 isA val+   <true>
  lgl$#-          %64.3 = IsType                   %64.1 isA val?-
  void                    Branch                   %64.2 -> BB66 (if true) | BB67 (if false)
BB65   <- [62]
  void                    Nop                !     
  val?            %65.1 = %60.1
  dr              %65.2 = Typecheck@0x563fa6ccf238[Type#0]
  goto BB27
BB27   <- [63, 65]
  val?^ | miss    %27.0 = Phi                      %63.1:BB63, %65.1:BB65
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %63.2:BB63, %65.2:BB65
  dr              %27.3 = %27.2
  prom-           %27.4 = MkArg                    unboundValue, getNamespaceName[0x563fa7ff6170]_p9, e0.1
  val?^           %27.5 = CastType                 up %27.4
  fs              %27.6 = FrameState         R     0x563fa8240dd0+126: [], env=e0.1
  env             e27.7 = (MkEnv)            l     which="spec", ns=%27.5, parent=R_BaseNamespace, context 0
  fs              %27.8 = FrameState         R     0x563fa8369a20+9: [], env=e27.7, next=%27.6
  fs              %27.9 = FrameState         R     0x563fa858e010+5(pr): [%60.1], env=e0.1, next=%27.8
  void                    Deopt              !v    %27.9, %27.3, %27.1   !
BB66   <- [64]
  void                    Branch                   %64.3 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  void                    Nop                !     
  lgl$#-          %67.1 = %64.2
  dr              %67.2 = DeadBranchReached@0x563fa6ccf238[Test#1]
  goto BB29
BB68   <- [66]
  val?-           %68.0 = CastType           d     dn %64.1   <env->
  val?            %68.1 = Extract2_1D        wed   %68.0, "spec", elided   <(str|env)+>
  lgl$#-          %68.2 = IsType                   %68.1 isA val+   <true>
  lgl$#-          %68.3 = IsType                   %68.1 isA val?+
  void                    Branch                   %68.2 -> BB70 (if true) | BB71 (if false)
BB69   <- [66]
  void                    Nop                !     
  val?            %69.1 = %64.1
  dr              %69.2 = Typecheck@0x563fa6ccf238[Type#1]
  goto BB29
BB29   <- [67, 69]
  val?^ | miss    %29.0 = Phi                      %67.1:BB67, %69.1:BB69
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %67.2:BB67, %69.2:BB69
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x563fa8240dd0+126: [], env=e0.1
  prom-           %29.5 = MkArg                    %64.0, getNamespaceName[0x563fa7ff6170]_p10 (!refl), e0.1
  val?~           %29.6 = CastType                 up %29.5
  env             e29.7 = (MkEnv)            l     which="spec", ns=%29.6, parent=R_BaseNamespace, context 0
  fs              %29.8 = FrameState         R     0x563fa8369a20+52: [%64.1], env=e29.7, next=%29.4
  void                    Deopt              !v    %29.8, %29.3, %29.1   !
BB70   <- [68]
  void                    Branch                   %68.3 -> BB72 (if true) | BB73 (if false)
BB71   <- [68]
  void                    Nop                !     
  lgl$#-          %71.1 = %68.2
  dr              %71.2 = DeadBranchReached@0x563fa6aab508[Test#0]
  goto BB31
BB72   <- [70]
  val?+           %72.0 = CastType           d     dn %68.1   <str+>
  val?            %72.1 = Extract1_1D        wed   %72.0, "name", elided   <str$+>
  void                    Visible            v     
  val?            %72.3 = %72.1
  goto BB33
BB73   <- [70]
  void                    Nop                !     
  val?            %73.1 = %68.1
  dr              %73.2 = Typecheck@0x563fa6aab508[Type#5]
  goto BB31
BB31   <- [71, 73]
  val?^ | miss    %31.0 = Phi                      %71.1:BB71, %73.1:BB73
  val?^ | miss    %31.1 = %31.0
  dr              %31.2 = Phi                      %71.2:BB71, %73.2:BB73
  dr              %31.3 = %31.2
  fs              %31.4 = FrameState         R     0x563fa8240dd0+126: [], env=e0.1
  prom-           %31.5 = MkArg                    %64.0, getNamespaceName[0x563fa7ff6170]_p11 (!refl), e0.1
  val?~           %31.6 = CastType                 up %31.5
  env             e31.7 = (MkEnv)            l     which="spec", ns=%31.6, parent=R_BaseNamespace, context 0
  fs              %31.8 = FrameState         R     0x563fa8369a20+104: [%68.1], env=e31.7, next=%31.4
  void                    Deopt              !v    %31.8, %31.3, %31.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseNamespaceEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseNamespaceEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ getNamespaceName[0x563fa7ff6170]                                             │
└──────────────────────────────────────────────────────────────────────────────┘
