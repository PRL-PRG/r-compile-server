
┌──────────────────────────────────────────────────────────────────────────────┐
│ gsub[0x563fa8d56120]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 4│
│ Properties:                                                                  │
├────── Final PIR Version
gsub[0x563fa8d56120]
BB0
  val?^           %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  val?~+          %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     pattern=%0.2, replacement=%0.1, x=%0.0, ignore.case(miss)=false, perl(miss)=false, fixed(miss)=false, useBytes(miss)=false, parent=R_BaseNamespace, context 1
  prom-           %0.4  = MkArg                    unboundValue, gsub[0x563fa8d56120]_p4, e0.3
  ct              %0.5  = PushContext        lCL   %0.4, is.factor(x), function(x) <(rir::DispatchTable*)0x563fa794da|..., e0.3
  val?^           %0.6  = CastType                 up %0.4
  env             e0.7  = MkEnv              l     x=%0.6, parent=R_BaseNamespace, context 1
  prom-           %0.8  = MkArg                    unboundValue, gsub[0x563fa8d56120]_p5, e0.7
  ct              %0.9  = PushContext        lCL   %0.8, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.7
  val?^           %0.10 = CastType                 up %0.8
  env             e0.11 = MkEnv              l     x=%0.10, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %0.12 = Force!<lazy>       !vr   %0.10,    <val?>
  val?            %0.13 = CallBuiltin        !v    inherits(%0.12, "factor", false) e0.11
  val?            %0.14 = PopContext         C     %0.13, %0.9   <lgl$->
  lgl$#-          %0.15 = IsType                   %0.14 isA lgl$-
  void                    Branch                   %0.15 -> BB27 (if true) | BB28 (if false)
BB27   <- [0]
  lgl$-           %27.0 = CastType           d     dn %0.14
  val?            %27.1 = PopContext         C     %27.0, %0.5   <lgl$->
  lgl$#-          %27.2 = IsType                   %27.1 isA lgl$-
  void                    Branch                   %27.2 -> BB29 (if true) | BB30 (if false)
BB28   <- [0]
  fs              %28.0 = FrameState         R     0x563fa86b2a30+32: [], env=e0.3
  fs              %28.1 = FrameState         R     0x563fa7949120+37: [%0.14], env=e0.7, next=%28.0
  void                    Deopt              !v    %28.1, Typecheck@0x563fa70b2a08[Type#1], %0.14   !
BB29   <- [27]
  lgl$-           %29.0 = CastType           d     dn %27.1
  lgl$-           %29.1 = AsLogical                %29.0
  lgl$#-          %29.2 = Identical                %29.1, false
  void                    Branch                   %29.2 -> BB8 (if true) | BB5 (if false)
BB30   <- [27]
  void                    Nop                !     
  val?            %30.1 = %27.1
  dr              %30.2 = Typecheck@0x563fa7eb1410[Type#1]
  goto BB3
BB8   <- [29]
  lgl$#-          %8.0  = CheckTrueFalse     e     %29.1
  void                    Branch                   %8.0 -> BB25 (if true) | BB9 (if false)
BB5   <- [29]
  val?^ | miss    %5.0  = LdVar              eR    length, e0.3
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <@?>
  void                    Branch                   %5.1 -> BB7 (if true) | BB6 (if false)
BB3   <- [30, 32]
  val?^ | miss    %3.0  = Phi                      %30.1:BB30, %32.1:BB32
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %30.2:BB30, %32.2:BB32
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x563fa86b2a30+32: [%27.1], env=e0.3
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB25   <- [8]
  (cls|spec|blt)  %25.0 = LdFun              !v    gsub, e0.3
  fs              %25.1 = FrameState         R     0x563fa86b2a30+771: [%25.0], env=e0.3
  void                    Deopt              !v    %25.1, DeadCall@0x563fa7eb1410[Call#9], %25.0   !
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    is.character, e0.3
  lgl$#-          %9.1  = Identical                <blt is.character>, %9.0   <true>
  void                    Branch                   %9.1 -> BB31 (if true) | BB32 (if false)
BB7   <- [5]
  (cls|spec|blt)  %7.0  = LdFun              !v    levels, e0.3
  fs              %7.1  = FrameState         R     0x563fa86b2a30+109: [%29.1, <blt length>, %7.0], env=e0.3
  void                    Deopt              !v    %7.1, DeadCall@0x563fa7eb1410[Call#3], %7.0   !
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    length, e0.3
  fs              %6.1  = FrameState         R     0x563fa86b2a30+72: [%29.1, %6.0], env=e0.3
  void                    Deopt              !v    %6.1, DeadCall@0x563fa7eb1410[Call#1], %6.0   !
BB31   <- [9]
  val?^ | miss    %31.0 = LdVar              eR    x, e0.3
  val?            %31.1 = Force!<wrapped>    !v    %31.0, e0.3   <str->
  lgl$#-          %31.2 = CallSafeBuiltin    wed   is.character(%31.1)    <lgl$->
  void                    Branch                   %31.2 -> BB24 (if true) | BB10 (if false)
BB32   <- [9]
  void                    Nop                !     
  lgl$#-          %32.1 = %9.1
  dr              %32.2 = DeadBranchReached@0x563fa7eb1410[Test#2]
  goto BB3
BB24   <- [31]
  void                    Nop                !     
  goto BB15
BB10   <- [31]
  val?^ | miss    %10.0 = LdVar              eR    as.character, e0.3
  lgl$#-          %10.1 = Identical                <blt as.character>, %10.0   <@?>
  void                    Branch                   %10.1 -> BB12 (if true) | BB11 (if false)
BB15   <- [24, 35]
  val?^ | miss    %15.0 = LdVar              eR    as.character, e0.3
  lgl$#-          %15.1 = Identical                <blt as.character>, %15.0   <true>
  void                    Branch                   %15.1 -> BB33 (if true) | BB34 (if false)
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    x, e0.3
  val?            %12.1 = Force!             !v    %12.0, e0.3   <val?_>
  lgl$#-          %12.2 = IsType                   %12.1 isA val?+
  void                    Branch                   %12.2 -> BB35 (if true) | BB36 (if false)
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    as.character, e0.3
  fs              %11.1 = FrameState         R     0x563fa86b2a30+409: [%11.0], env=e0.3
  void                    Deopt              !v    %11.1, DeadCall@0x563fa7eb1410[Call#6], %11.0   !
BB33   <- [15]
  val?^ | miss    %33.0 = LdVar              eR    pattern, e0.3
  val?            %33.1 = Force!<value>      !v    %33.0, e0.3   <str$->
  lgl$#-          %33.2 = IsType                   %33.1 isA val?-
  void                    Branch                   %33.2 -> BB37 (if true) | BB38 (if false)
BB34   <- [15]
  fs              %34.0 = FrameState         R     0x563fa86b2a30+486: [], env=e0.3
  void                    Deopt              !v    %34.0, DeadBranchReached@0x563fa7eb1410[Test#4], %15.1   !
BB35   <- [12]
  val?+           %35.0 = CastType           d     dn %12.1   <val?_>
  val+            %35.1 = CallSafeBuiltin    wed   as.character(%35.0)    <val?_>
  void                    StVar              lW    x, %35.1, e0.3
  goto BB15
BB36   <- [12]
  fs              %36.0 = FrameState         R     0x563fa86b2a30+450: [<blt as.character>, %12.1], env=e0.3
  void                    Deopt              !v    %36.0, Typecheck@0x563fa7eb1410[Type#15], %12.1   !
BB37   <- [33]
  val?-           %37.0 = CastType           d     dn %33.1   <str$->
  val+            %37.1 = CallSafeBuiltin    wed   as.character(%37.0)    <str$->
  val?^ | miss    %37.2 = LdVar              eR    as.character, e0.3
  lgl$#-          %37.3 = Identical                <blt as.character>, %37.2   <true>
  void                    Branch                   %37.3 -> BB39 (if true) | BB40 (if false)
BB38   <- [33]
  fs              %38.0 = FrameState         R     0x563fa86b2a30+555: [<blt as.character>, %33.1], env=e0.3
  void                    Deopt              !v    %38.0, Typecheck@0x563fa7eb1410[Type#18], %33.1   !
BB39   <- [37]
  val?^ | miss    %39.0 = LdVar              eR    replacement, e0.3
  val?            %39.1 = Force!<value>      !v    %39.0, e0.3   <str$->
  lgl$#-          %39.2 = IsType                   %39.1 isA val?-
  void                    Branch                   %39.2 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x563fa86b2a30+577: [%37.1], env=e0.3
  void                    Deopt              !v    %40.0, DeadBranchReached@0x563fa7eb1410[Test#5], %37.3   !
BB41   <- [39]
  val?-           %41.0 = CastType           d     dn %39.1   <str$->
  val+            %41.1 = CallSafeBuiltin    wed   as.character(%41.0)    <str$->
  val?^ | miss    %41.2 = LdVar              eR    x, e0.3
  val?            %41.3 = Force!<wrapped>    !v    %41.2, e0.3   <str->
  val?^ | miss    %41.4 = LdVar              eR    ignore.case, e0.3
  val?            %41.5 = Force!<lazy>       !v    %41.4, e0.3   <lgl$->
  val?^ | miss    %41.6 = LdVar              eR    perl, e0.3
  val?            %41.7 = Force!<lazy>       !v    %41.6, e0.3   <lgl$->
  val?^ | miss    %41.8 = LdVar              eR    fixed, e0.3
  val?            %41.9 = Force!<lazy>       !v    %41.8, e0.3   <lgl$->
  val?^ | miss    %41.10 = LdVar              eR    useBytes, e0.3
  val?            %41.11 = Force!<lazy>       !v    %41.10, e0.3   <lgl$->
  val?            %41.12 = CallBuiltin        !     gsub(%37.1, %41.1, %41.3, %41.5, %41.7, %41.9, %41.11) e0.3
  void                    Return             l     %41.12
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x563fa86b2a30+651: [%37.1, <blt as.character>, %39.1], env=e0.3
  void                    Deopt              !v    %42.0, Typecheck@0x563fa7eb1410[Type#21], %39.1   !
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)->
  void                    Return             l     %0.3

│ gsub[0x563fa8d56120]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
