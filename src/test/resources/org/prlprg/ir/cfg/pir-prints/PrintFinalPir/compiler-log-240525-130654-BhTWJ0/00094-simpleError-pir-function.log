
┌──────────────────────────────────────────────────────────────────────────────┐
│ simpleError[0x55c7c4307770]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1                             │
│ Properties:                                                                  │
├────── Final PIR Version
simpleError[0x55c7c4307770]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  str-            %0.2  = CallSafeBuiltin    wed   c("simpleError", "error", "condition")    <str->
  env             e0.3  = MkEnv              l     message=%0.1, call=%0.0, class=%0.2, parent=R_BaseNamespace, context 1
  prom-           %0.4  = MkArg                    unboundValue, simpleError[0x55c7c4307770]_p0, e0.3
  prom-           %0.5  = MkArg                    unboundValue, simpleError[0x55c7c4307770]_p4 (!refl), e0.3
  dots-           %0.6  = DotsList           l     class=%0.5
  ct              %0.7  = PushContext        lCL   %0.4, %0.6, structure(list(message=as.character(message), |..., function(.Data, ...) <(rir::DispatchTable*)0x5|..., e0.3
  val?^           %0.8  = CastType                 up %0.4
  env             e0.9  = MkEnv              l     .Data=%0.8, ...=%0.6, parent=R_BaseNamespace, context 1
  val?            %0.10 = Force!<lazy>       !vr   %0.8,    <vec+>
  lgl$-           %0.11 = Is                       %0.10, NULL
  lgl$#-          %0.12 = CheckTrueFalse     e     %0.11
  void                    Branch                   %0.12 -> BB2 (if true) | BB3 (if false)
BB2   <- [0]
  fs              %2.0  = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  (cls|spec|blt)  %2.1  = LdFun              !v    warning, R_BaseNamespace
  fs              %2.2  = FrameState         R     0x55c7c456c6e0+35: [%2.1], env=e0.9, next=%2.0
  void                    Deopt              !v    %2.2, DeadCall@0x55c7c39d96d8[Call#0], %2.1   !
BB3   <- [0]
  val?            %3.0  = NamedCall          !v    <blt list>(class=%0.5) e0.9   <vec$+>
  void                    StVar              lW    attrib, %3.0, e0.9
  lgl$#-          %3.2  = IsType                   %3.0 isA val?+
  val?^ | miss    %3.3  = LdVar              eR    length, e0.9
  lgl$#-          %3.4  = Identical                <blt length>, %3.3   <true>
  void                    Branch                   %3.4 -> BB37 (if true) | BB38 (if false)
BB37   <- [3]
  val             %37.0 = ChkMissing         e     %3.0
  void                    Branch                   %3.2 -> BB39 (if true) | BB40 (if false)
BB38   <- [3]
  void                    Nop                !     
  lgl$#-          %38.1 = %3.4
  dr              %38.2 = DeadBranchReached@0x55c7c39d96d8[Test#0]
  goto BB36
BB39   <- [37]
  val?+           %39.0 = CastType           d     dn %3.0   <vec$+>
  (int|real)$-    %39.1 = CallSafeBuiltin    wed   length(%39.0)    <int$->
  lgl$#-          %39.2 = IsType                   %39.1 isA int$-
  void                    Branch                   %39.2 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  void                    Nop                !     
  val?            %40.1 = %3.0
  dr              %40.2 = Typecheck@0x55c7c39d96d8[Type#1]
  goto BB36
BB36   <- [38, 40]
  val?^ | miss    %36.0 = Phi                      %38.1:BB38, %40.1:BB40
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %38.2:BB38, %40.2:BB40
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %36.5 = FrameState         R     0x55c7c456c6e0+113: [], env=e0.9, next=%36.4
  void                    Deopt              !v    %36.5, %36.3, %36.1   !
BB41   <- [39]
  int$-           %41.0 = CastType           d     dn %39.1
  lgl$#-          %41.1 = CheckTrueFalse     e     %41.0
  void                    Branch                   %41.1 -> BB9 (if true) | BB7 (if false)
BB42   <- [39]
  void                    Nop                !     
  (int|real)$-    %42.1 = %39.1
  dr              %42.2 = Typecheck@0x55c7c39d96d8[Type#4]
  goto BB5
BB9   <- [41]
  val?^ | miss    %9.0  = LdVar              eR    c, e0.9
  lgl$#-          %9.1  = Identical                <blt c>, %9.0   <true>
  void                    Branch                   %9.1 -> BB43 (if true) | BB44 (if false)
BB7   <- [41]
  void                    Nop                !     
  goto BB8
BB5   <- [42, 44]
  val?^ | miss    %5.0  = Phi                      %42.1:BB42, %44.1:BB44
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %42.2:BB42, %44.2:BB44
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %5.5  = FrameState         R     0x55c7c456c6e0+204: [%39.1], env=e0.9, next=%5.4
  void                    Deopt              !v    %5.5, %5.3, %5.1   !
BB43   <- [9]
  str-            %43.0 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %43.0, e0.9
  val?^ | miss    %43.2 = LdVar              eR    names, e0.9
  lgl$#-          %43.3 = Identical                <blt names>, %43.2   <true>
  void                    Branch                   %43.3 -> BB45 (if true) | BB46 (if false)
BB44   <- [9]
  void                    Nop                !     
  lgl$#-          %44.1 = %9.1
  dr              %44.2 = DeadBranchReached@0x55c7c39d96d8[Test#1]
  goto BB5
BB8   <- [7, 69]
  val?^ | miss    %8.0  = LdVar              eR    .Data, e0.9
  void                    Visible            v     
  val?            %8.2  = Force!<value>      !     %8.0, e0.9   <vec>
  val?            %8.3  = PopContext         C     %8.2, %0.7   <vec>
  void                    Return             l     %8.3
BB45   <- [43]
  val+            %45.0 = CallSafeBuiltin    wed   names(%39.0)    <str$->
  void                    StVar              lW    attrnames, %45.0, e0.9
  val?^ | miss    %45.2 = LdVar              eR    match, e0.9
  lgl$#-          %45.3 = Identical                %45.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %45.3 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %46.1 = FrameState         R     0x55c7c456c6e0+361: [], env=e0.9, next=%46.0
  void                    Deopt              !v    %46.1, DeadBranchReached@0x55c7c39d96d8[Test#2], %43.3   !
BB47   <- [45]
  val+            %47.0 = CallSafeBuiltin    wed   match(%45.0, %43.0, NA, nil)    <int$->
  lgl$#-          %47.1 = IsType                   %47.0 isA int$-
  void                    Branch                   %47.1 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %48.1 = FrameState         R     0x55c7c456c6e0+466: [], env=e0.9, next=%48.0
  void                    Deopt              !v    %48.1, CallTarget@0x55c7c39d96d8[Call#5], %45.2   !
BB49   <- [47]
  int$-           %49.0 = CastType           d     dn %47.0
  void                    StVar              lW    m, %49.0, e0.9
  val?^ | miss    %49.2 = LdVar              eR    is.na, e0.9
  lgl$#-          %49.3 = Identical                <blt is.na>, %49.2   <true>
  void                    Branch                   %49.3 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  prom-           %50.1 = MkArg                    %43.0, simpleError[0x55c7c4307770]_p5 (!refl), e0.9
  val?~           %50.2 = CastType                 up %50.1
  prom-           %50.3 = MkArg                    unboundValue, simpleError[0x55c7c4307770]_p6 (!refl), e0.9
  val?^           %50.4 = CastType                 up %50.3
  fs              %50.5 = FrameState         R     0x55c7c456c6e0+503: [], env=e0.9, next=%50.0
  env             e50.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%50.2, x=%50.4, parent=R_BaseNamespace, context 0
  fs              %50.7 = FrameState         R     0x55c7c2c59d40+69: [%47.0], env=e50.6, next=%50.5
  void                    Deopt              !v    %50.7, Typecheck@0x55c7c39d96d8[Type#11], %47.0   !
BB51   <- [49]
  lgl$-           %51.0 = CallSafeBuiltin    wed   is.na(%49.0)    <lgl$->
  lgl$-           %51.1 = Not                d     %51.0, elided   <lgl$->
  void                    StVar              lW    ok, %51.1, e0.9
  val?^ | miss    %51.3 = LdVar              eR    any, e0.9
  lgl$#-          %51.4 = Identical                <blt any>, %51.3   <true>
  void                    Branch                   %51.4 -> BB53 (if true) | BB54 (if false)
BB52   <- [49]
  fs              %52.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %52.1 = FrameState         R     0x55c7c456c6e0+517: [], env=e0.9, next=%52.0
  void                    Deopt              !v    %52.1, DeadBranchReached@0x55c7c39d96d8[Test#3], %49.3   !
BB53   <- [51]
  val?            %53.0 = CallBuiltin        !v    any(%51.1) e0.9   <lgl$->
  lgl$#-          %53.1 = IsType                   %53.0 isA lgl$-
  void                    Branch                   %53.1 -> BB55 (if true) | BB56 (if false)
BB54   <- [51]
  fs              %54.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %54.1 = FrameState         R     0x55c7c456c6e0+623: [], env=e0.9, next=%54.0
  void                    Deopt              !v    %54.1, DeadBranchReached@0x55c7c39d96d8[Test#4], %51.4   !
BB55   <- [53]
  lgl$-           %55.0 = CastType           d     dn %53.0
  lgl$#-          %55.1 = CheckTrueFalse     e     %55.0
  void                    Branch                   %55.1 -> BB33 (if true) | BB22 (if false)
BB56   <- [53]
  void                    Nop                !     
  val?            %56.1 = %53.0
  dr              %56.2 = Typecheck@0x55c7c39d96d8[Type#17]
  goto BB20
BB33   <- [55]
  val?^ | miss    %33.0 = LdVar              eR    c, e0.9
  lgl$#-          %33.1 = Identical                <blt c>, %33.0   <@?>
  void                    Branch                   %33.1 -> BB35 (if true) | BB34 (if false)
BB22   <- [55]
  val?^ | miss    %22.0 = LdVar              eR    any, e0.9
  lgl$#-          %22.1 = Identical                <blt any>, %22.0   <true>
  void                    Branch                   %22.1 -> BB57 (if true) | BB58 (if false)
BB20   <- [56, 58]
  val?^ | miss    %20.0 = Phi                      %56.1:BB56, %58.1:BB58
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %56.2:BB56, %58.2:BB58
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %20.5 = FrameState         R     0x55c7c456c6e0+714: [%53.0], env=e0.9, next=%20.4
  void                    Deopt              !v    %20.5, %20.3, %20.1   !
BB35   <- [33]
  fs              %35.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  str-            %35.1 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %35.1, e0.9
  (cls|spec|blt)  %35.3 = LdFun              !v    <-, e0.9
  fs              %35.4 = FrameState         R     0x55c7c456c6e0+876: [%35.3], env=e0.9, next=%35.0
  void                    Deopt              !v    %35.4, DeadCall@0x55c7c39d96d8[Call#9], %35.3   !
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  (cls|spec|blt)  %34.1 = LdFun              !v    c, e0.9
  fs              %34.2 = FrameState         R     0x55c7c456c6e0+758: [%34.1], env=e0.9, next=%34.0
  void                    Deopt              !v    %34.2, DeadCall@0x55c7c39d96d8[Call#8], %34.1   !
BB57   <- [22]
  (cls|spec|blt)  %57.0 = LdFun              !v    [[, <0x55c7c2444c48>, e0.9
  prom-           %57.1 = MkArg                    unboundValue, simpleError[0x55c7c4307770]_p7, e0.9
  val?            %57.2 = NamedCall          !v    %57.0(%57.1, "class", exact=true) e0.9   <str->
  lgl$#-          %57.3 = IsType                   %57.2 isA val?-
  void                    Branch                   %57.3 -> BB59 (if true) | BB60 (if false)
BB58   <- [22]
  void                    Nop                !     
  lgl$#-          %58.1 = %22.1
  dr              %58.2 = DeadBranchReached@0x55c7c39d96d8[Test#10]
  goto BB20
BB59   <- [57]
  val?-           %59.0 = CastType           d     dn %57.2   <str->
  lgl-            %59.1 = Eq                 wed   %59.0, "factor", elided   <lgl->
  val?            %59.2 = CallBuiltin        !v    any(%59.1) e0.9   <lgl$->
  lgl$#-          %59.3 = IsType                   %59.2 isA lgl$-
  void                    Branch                   %59.3 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %60.1 = FrameState         R     0x55c7c456c6e0+1023: [<blt any>, %57.2], env=e0.9, next=%60.0
  void                    Deopt              !v    %60.1, Typecheck@0x55c7c39d96d8[Type#38], %57.2   !
BB61   <- [59]
  lgl$-           %61.0 = CastType           d     dn %59.2
  lgl$-           %61.1 = AsLogical                %61.0
  lgl$#-          %61.2 = Identical                %61.1, false
  void                    Branch                   %61.2 -> BB28 (if true) | BB27 (if false)
BB62   <- [59]
  void                    Nop                !     
  val?            %62.1 = %59.2
  dr              %62.2 = Typecheck@0x55c7c39d96d8[Type#40]
  goto BB25
BB28   <- [61]
  lgl$#-          %28.0 = CheckTrueFalse     e     %61.1
  void                    Branch                   %28.0 -> BB32 (if true) | BB29 (if false)
BB27   <- [61]
  fs              %27.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  (cls|spec|blt)  %27.1 = LdFun              !v    typeof, e0.9
  fs              %27.2 = FrameState         R     0x55c7c456c6e0+1074: [%61.1, %27.1], env=e0.9, next=%27.0
  void                    Deopt              !v    %27.2, DeadCall@0x55c7c39d96d8[Call#14], %27.1   !
BB25   <- [62, 64, 66]
  val?^ | miss    %25.0 = Phi                      %62.1:BB62, %64.1:BB64, %66.1:BB66
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %62.2:BB62, %64.2:BB64, %66.2:BB66
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %25.5 = FrameState         R     0x55c7c456c6e0+1057: [%59.2], env=e0.9, next=%25.4
  void                    Deopt              !v    %25.5, %25.3, %25.1   !
BB32   <- [28]
  fs              %32.0 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  (cls|spec|blt)  %32.1 = LdFun              !v    storage.mode<-, e0.9
  fs              %32.2 = FrameState         R     0x55c7c456c6e0+1142: ["integer", %32.1], env=e0.9, next=%32.0
  void                    Deopt              !v    %32.2, DeadCall@0x55c7c39d96d8[Call#15], %32.1   !
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    c, e0.9
  lgl$#-          %29.1 = Identical                <blt c>, %29.0   <true>
  void                    Branch                   %29.1 -> BB63 (if true) | BB64 (if false)
BB63   <- [29]
  val?^ | miss    %63.0 = LdVar              eR    attributes, e0.9
  lgl$#-          %63.1 = Identical                <blt attributes>, %63.0   <true>
  void                    Branch                   %63.1 -> BB65 (if true) | BB66 (if false)
BB64   <- [29]
  void                    Nop                !     
  lgl$#-          %64.1 = %29.1
  dr              %64.2 = DeadBranchReached@0x55c7c39d96d8[Test#11]
  goto BB25
BB65   <- [63]
  val?^ | miss    %65.0 = LdVar              eR    .Data, e0.9
  val?            %65.1 = Force!<wrapped>    !v    %65.0, e0.9   <vec+>
  val?            %65.2 = CallBuiltin        !v    attributes(%65.1) e0.9   <vec$+>
  lgl$#-          %65.3 = IsType                   %65.2 isA val?+
  val?^ | miss    %65.4 = LdVar              eR    attrib, e0.9
  lgl$#-          %65.5 = IsType                   %65.4 isA val?~+ | miss
  void                    Branch                   %65.5 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  void                    Nop                !     
  lgl$#-          %66.1 = %63.1
  dr              %66.2 = DeadBranchReached@0x55c7c39d96d8[Test#12]
  goto BB25
BB67   <- [65]
  val?~+ | miss   %67.0 = CastType           d     dn %65.4
  val?+           %67.1 = Force!<value>            %67.0,    <vec$+>
  void                    Branch                   %65.3 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  void                    Nop                !     
  val?^ | miss    %68.1 = %65.4
  dr              %68.2 = Typecheck@0x55c7c39d96d8[Type#51]
  goto BB30
BB69   <- [67]
  val?+           %69.0 = CastType           d     dn %65.2   <vec$+>
  val+            %69.1 = CallSafeBuiltin    wed   c(%69.0, %67.1)    <vec+>
  (cls|spec|blt)  %69.2 = LdFun              !v    attributes<-, <0x55c7c2445128>, e0.9
  val?^ | miss    %69.3 = LdVar              eR    .Data, e0.9
  val?            %69.4 = Force!<wrapped>    !v    %69.3, e0.9   <vec+>
  val?            %69.5 = NamedCall          !v    %69.2(%69.4, value=%69.1) e0.9
  void                    StVar              lW    .Data, %69.5, e0.9
  goto BB8
BB70   <- [67]
  void                    Nop                !     
  val?            %70.1 = %65.2
  dr              %70.2 = Typecheck@0x55c7c39d96d8[Type#50]
  goto BB30
BB30   <- [68, 70]
  val?^ | miss    %30.0 = Phi                      %68.1:BB68, %70.1:BB70
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %68.2:BB68, %70.2:BB70
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55c7c45899f0+164: [], env=e0.3
  fs              %30.5 = FrameState         R     0x55c7c456c6e0+1361: [<blt c>, %65.2], env=e0.9, next=%30.4
  void                    Deopt              !v    %30.5, %30.3, %30.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, <0x55c7c24595c0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, simpleError[0x55c7c4307770]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, simpleError[0x55c7c4307770]_p3, e0.0
  val?            %0.4  = NamedCall          !     %0.1(message=%0.2, call=%0.3) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55c7c2452040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, simpleError[0x55c7c4307770]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    message, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    specials, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attrnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attrib, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ simpleError[0x55c7c4307770]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
