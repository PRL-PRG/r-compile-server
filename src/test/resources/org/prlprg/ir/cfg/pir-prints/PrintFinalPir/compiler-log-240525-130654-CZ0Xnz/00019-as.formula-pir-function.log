
┌──────────────────────────────────────────────────────────────────────────────┐
│ as.formula[0x5612a056f090]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1                     │
│ Properties:                                                                  │
├────── Final PIR Version
as.formula[0x5612a056f090]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, env(miss)=missingArg, parent=<env 0x56129e96cb50>, context 1
  prom-           %0.2  = MkArg                    unboundValue, as.formula[0x5612a056f090]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    env, %0.3, e0.1
  val?^ | miss    %0.5  = LdVar              eR    inherits, <env 0x56129e96cb50>
  lgl$#-          %0.6  = Identical                %0.5, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %0.6 -> BB18 (if true) | BB19 (if false)
BB18   <- [0]
  prom-           %18.0 = MkArg                    unboundValue, as.formula[0x5612a056f090]_p1 (!refl), e0.1
  ct              %18.1 = PushContext        lCL   %18.0, "formula", inherits(object, "formula"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.1
  val?^           %18.2 = CastType                 up %18.0
  env             e18.3 = MkEnv              l     x=%18.2, what="formula", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %18.4 = Force!<lazy>       !vr   %18.2,    <val?>
  val?            %18.5 = CallBuiltin        !v    inherits(%18.4, "formula", false) e18.3
  val?            %18.6 = PopContext         C     %18.5, %18.1   <lgl$->
  lgl$#-          %18.7 = IsType                   %18.6 isA lgl$-
  void                    Branch                   %18.7 -> BB20 (if true) | BB21 (if false)
BB19   <- [0]
  fs              %19.0 = FrameState         R     0x5612a036bb10+0: [], env=e0.1
  void                    Deopt              !v    %19.0, CallTarget@0x56129f79b818[Call#1], %0.5
BB20   <- [18]
  lgl$-           %20.0 = CastType           d     dn %18.6
  lgl$#-          %20.1 = CheckTrueFalse     e     %20.0
  void                    Branch                   %20.1 -> BB16 (if true) | BB5 (if false)
BB21   <- [18]
  void                    Nop                !     
  val?            %21.1 = %18.6
  dr              %21.2 = Typecheck@0x56129f79b818[Type#2]
  goto BB3
BB16   <- [20]
  val?^ | miss    %16.0 = LdVar              eR    object, e0.1
  void                    Visible            v     
  val?            %16.2 = Force!             !     %16.0, e0.1   <val?_>
  val?            %16.3 = %16.2
  goto BB13
BB5   <- [20]
  val?^ | miss    %5.0  = LdVar              eR    formula, e0.1
  lgl$#-          %5.1  = Identical                %5.0, function(x, ...) <(rir::DispatchTable*)0x5612a|...
  void                    Branch                   %5.1 -> BB22 (if true) | BB23 (if false)
BB3   <- [21, 23]
  val?^ | miss    %3.0  = Phi                      %21.1:BB21, %23.1:BB23
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %21.2:BB21, %23.2:BB23
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5612a036bb10+37: [%18.6], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB13   <- [16, 12]
  val?            %13.0 = Phi                      %12.3:BB12, %16.3:BB16
  val?            %13.1 = %13.0
  void                    Return             l     %13.1
BB22   <- [5]
  prom-           %22.0 = MkArg                    unboundValue, as.formula[0x5612a056f090]_p3, e0.1
  dots-           %22.1 = DotsList           l     env=%22.0
  val?^ | miss    %22.2 = LdVar              eR    object, e0.1
  val?            %22.3 = Force!<wrapped>    !v    %22.2, e0.1   <vec>
  prom-           %22.4 = MkArg                    %22.3, as.formula[0x5612a056f090]_p2 (!refl), e0.1
  val?            %22.5 = StaticCall         !v    formula[0x5612a01dcb80](%22.4, %22.1) { 0 1n } e0.1   <code>
  void                    StVar              lW    rval, %22.5, e0.1
  val?^ | miss    %22.7 = LdVar              eR    identical, e0.1
  lgl$#-          %22.8 = Identical                %22.7, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %22.8 -> BB24 (if true) | BB25 (if false)
BB23   <- [5]
  void                    Nop                !     
  val?^ | miss    %23.1 = %5.0
  dr              %23.2 = CallTarget@0x56129f79b818[Call#2]
  goto BB3
BB24   <- [22]
  prom-           %24.0 = MkArg                    unboundValue, as.formula[0x5612a056f090]_p5, e0.1
  prom-           %24.1 = MkArg                    unboundValue, as.formula[0x5612a056f090]_p7, e0.1
  ct              %24.2 = PushContext        lCL   %24.0, %24.1, identical(environment(rval), baseenv()), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.1
  val?^           %24.3 = CastType                 up %24.1
  val?^           %24.4 = CastType                 up %24.0
  env             e24.5 = MkEnv              l     x=%24.4, y=%24.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %24.6 = Force!<lazy>       !vL   %24.4, e24.5   <(str|env)->
  val?            %24.7 = Force!<lazy>       !vL   %24.3, e24.5   <(str|env)->
  val?            %24.8 = CallBuiltin        !v    identical(%24.6, %24.7, true, true, true, true, false, true) e24.5
  val?            %24.9 = PopContext         C     %24.8, %24.2   <lgl$->
  lgl$#-          %24.10 = IsType                   %24.9 isA lgl$-
  void                    Branch                   %24.10 -> BB26 (if true) | BB27 (if false)
BB25   <- [22]
  fs              %25.0 = FrameState         R     0x5612a036bb10+107: [], env=e0.1
  void                    Deopt              !v    %25.0, CallTarget@0x56129f79b818[Call#4], %22.7   !
BB26   <- [24]
  lgl$-           %26.0 = CastType           d     dn %24.9
  lgl$-           %26.1 = AsLogical                %26.0
  lgl$#-          %26.2 = Identical                %26.1, true
  void                    Branch                   %26.2 -> BB15 (if true) | BB10 (if false)
BB27   <- [24]
  fs              %27.0 = FrameState         R     0x5612a036bb10+144: [%24.9], env=e0.1
  void                    Deopt              !v    %27.0, Typecheck@0x56129f79b818[Type#9], %24.9   !
BB15   <- [26]
  void                    Nop                !     
  lgl$-           %15.1 = %26.1
  goto BB11
BB10   <- [26]
  lgl$-           %10.0 = Missing            eR    env, e0.1
  lgl$-           %10.1 = Not                d     %10.0, elided
  lgl$-           %10.2 = AsLogical                %10.1
  lgl$-           %10.3 = LOr                      %26.1, %10.2
  lgl$-           %10.4 = %10.3
  goto BB11
BB11   <- [15, 10]
  lgl$-           %11.0 = Phi                      %10.4:BB10, %15.1:BB15
  lgl$-           %11.1 = %11.0
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB14 (if true) | BB12 (if false)
BB14   <- [11]
  val?^ | miss    %14.0 = LdVar              eR    env, e0.1
  val?            %14.1 = Force!             !v    %14.0, e0.1   <val?_>
  (cls|spec|blt)  %14.2 = LdFun              !v    environment<-, e0.1
  fs              %14.3 = FrameState         R     0x5612a036bb10+195: [%14.1, %14.2], env=e0.1
  void                    Deopt              !v    %14.3, DeadCall@0x56129f79b818[Call#7], %14.2   !
BB12   <- [11]
  val?^ | miss    %12.0 = LdVar              eR    rval, e0.1
  void                    Visible            v     
  val?            %12.2 = Force!<value>      !     %12.0, e0.1   <code>
  val?            %12.3 = %12.2
  goto BB13
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     baseenv, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     environment, <0x56129e6c3b68>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as.formula[0x5612a056f090]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rval, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <code>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     baseenv, <0x56129e331278>, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <env->
  void                    Return             l     %0.2

│ as.formula[0x5612a056f090]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
