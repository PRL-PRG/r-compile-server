
┌──────────────────────────────────────────────────────────────────────────────┐
│ tryCatchOne[0x5638bbec9bb0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2        │
│ Properties:                                                                  │
├────── Final PIR Version
tryCatchOne[0x5638bbec9bb0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  env             e0.4  = MkEnv              l     expr=%0.3, name=%0.2, parentenv=%0.1, handler=%0.0, parent=?, context 1
  cls             %0.5  = MkCls                    doTryCatch, e0.4
  void                    StVar              lW    doTryCatch, %0.5, e0.4
  prom-           %0.7  = MkArg                    unboundValue, tryCatchOne[0x5638bbec9bb0]_p0, e0.4
  prom-           %0.8  = MkArg                    unboundValue, tryCatchOne[0x5638bbec9bb0]_p1 (!refl), e0.4
  prom-           %0.9  = MkArg                    unboundValue, tryCatchOne[0x5638bbec9bb0]_p2 (!refl), e0.4
  prom-           %0.10 = MkArg                    unboundValue, tryCatchOne[0x5638bbec9bb0]_p3, e0.4
  val?            %0.11 = StaticCall         !v    doTryCatch[0x5638bbe39e00](%0.7, %0.8, %0.9, %0.10) from %0.5 e0.4   <val?_>
  void                    StVar              lW    value, %0.11, e0.4
  lgl$#-          %0.13 = IsType                   %0.11 isA val?+
  val             %0.14 = ChkMissing         e     %0.11
  void                    Branch                   %0.13 -> BB12 (if true) | BB13 (if false)
BB12   <- [0]
  val?+           %12.0 = CastType           d     dn %0.11   <val?_>
  val?            %12.1 = Extract2_1D        wed   %12.0, 1L, elided   <val?_>
  lgl$-           %12.2 = Is                       %12.1, NULL
  lgl$#-          %12.3 = CheckTrueFalse     e     %12.2
  void                    Branch                   %12.3 -> BB8 (if true) | BB3 (if false)
BB13   <- [0]
  fs              %13.0 = FrameState         R     0x5638bb90b860+86: [], env=e0.4
  void                    Deopt              !v    %13.0, Typecheck@0x5638bb90e470[Type#4], %0.11   !
BB8   <- [12]
  val?            %8.0  = CallBuiltin        !v    geterrmessage() e0.4
  void                    StVar              lW    msg, %8.0, e0.4
  val?^ | miss    %8.2  = LdVar              eR    value, e0.4
  val?            %8.3  = Force!             !v    %8.2, e0.4   <val?_>
  lgl$#-          %8.4  = IsType                   %8.3 isA val?+
  void                    Branch                   %8.4 -> BB14 (if true) | BB15 (if false)
BB3   <- [12]
  val?^ | miss    %3.0  = LdVar              eR    is.character, e0.4
  lgl$#-          %3.1  = Identical                <blt is.character>, %3.0   <@?>
  void                    Branch                   %3.1 -> BB5 (if true) | BB4 (if false)
BB14   <- [8]
  val?+           %14.0 = CastType           d     dn %8.3   <val?_>
  val?            %14.1 = Extract2_1D        wed   %14.0, 2L, elided   <val?_>
  void                    StVar              lW    call, %14.1, e0.4
  (cls|spec|blt)  %14.3 = LdFun              !v    simpleError, e0.4
  fs              %14.4 = FrameState         R     0x5638bb90b860+657: [%14.3], env=e0.4
  void                    Deopt              !v    %14.4, DeadCall@0x5638bb90e470[Call#3], %14.3   !
BB15   <- [8]
  fs              %15.0 = FrameState         R     0x5638bb90b860+594: [%8.3], env=e0.4
  void                    Deopt              !v    %15.0, Typecheck@0x5638bb90e470[Type#21], %8.3   !
BB5   <- [3]
  lgl$#-          %5.0  = CallSafeBuiltin    wed   is.character(%12.1)    <val?_>
  void                    Branch                   %5.0 -> BB7 (if true) | BB6 (if false)
BB4   <- [3]
  (cls|spec|blt)  %4.0  = LdFun              !v    is.character, e0.4
  fs              %4.1  = FrameState         R     0x5638bb90b860+183: [%4.0], env=e0.4
  void                    Deopt              !v    %4.1, DeadCall@0x5638bb90e470[Call#1], %4.0   !
BB7   <- [5]
  void                    StVar              lW    msg, %12.1, e0.4
  val?            %7.1  = Extract2_1D        wed   %12.0, 2L, elided   <val?_>
  void                    StVar              lW    call, %7.1, e0.4
  (cls|spec|blt)  %7.3  = LdFun              !v    simpleError, e0.4
  fs              %7.4  = FrameState         R     0x5638bb90b860+512: [%7.3], env=e0.4
  void                    Deopt              !v    %7.4, DeadCall@0x5638bb90e470[Call#2], %7.3   !
BB6   <- [5]
  void                    StVar              lW    cond, %12.1, e0.4
  val?            %6.1  = Extract2_1D        wed   %12.0, 3L, elided   <val?_>
  (cls|spec|blt)  %6.2  = ChkFunction        e     %6.1
  fs              %6.3  = FrameState         R     0x5638bb90b860+755: [%6.1], env=e0.4
  void                    Deopt              !v    %6.3, DeadCall@0x5638bb90e470[Call#4], %6.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    NonLocalReturn     !     %0.3, e0.0
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parentenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3

│ tryCatchOne[0x5638bbec9bb0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
