
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClass[0x5638c0d7d3b0]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
getClass[0x5638c0d7d3b0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     Class=%0.0, .Force(miss)=false, where(miss)=missingArg, parent=<env 0x5638ba074378>, context 1
  prom-           %0.2  = MkArg                    unboundValue, getClass[0x5638c0d7d3b0]_p1, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    where, %0.3, e0.1
  val?^ | miss    %0.5  = LdVar              eR    getClassDef, <env 0x5638ba074378>
  lgl$#-          %0.6  = Identical                %0.5, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %0.6 -> BB10 (if true) | BB11 (if false)
BB10   <- [0]
  prom-           %10.0 = MkArg                    unboundValue, getClass[0x5638c0d7d3b0]_p5, e0.1
  prom-           %10.1 = MkArg                    unboundValue, getClass[0x5638c0d7d3b0]_p6, e0.1
  val?            %10.2 = StaticCall         !v    getClassDef[0x5638c0d49160](%10.0, %10.1) e0.1   <other>
  lgl$-           %10.3 = Is                       %10.2, NULL
  void                    StVar              lW    value, %10.2, e0.1
  val             %10.5 = ChkMissing         e     %10.2
  lgl$#-          %10.6 = CheckTrueFalse     e     %10.3
  void                    Branch                   %10.6 -> BB4 (if true) | BB3 (if false)
BB11   <- [0]
  fs              %11.0 = FrameState         R     0x5638ba1c68c0+0: [], env=e0.1
  void                    Deopt              !v    %11.0, CallTarget@0x5638ba4ef690[Call#3], %0.5
BB4   <- [10]
  val?^ | miss    %4.0  = LdVar              eR    .Force, e0.1
  val?            %4.1  = Force!             !v    %4.0, e0.1   <val?_>
  lgl$#-          %4.2  = IsType                   %4.1 isA val?+
  void                    Branch                   %4.2 -> BB12 (if true) | BB13 (if false)
BB3   <- [10]
  void                    Visible            v     
  void                    Return             l     %10.2
BB12   <- [4]
  val?+           %12.0 = CastType           d     dn %4.1   <val?_>
  lgl             %12.1 = Not                wed   %12.0, elided
  lgl$#-          %12.2 = CheckTrueFalse     we    %12.1
  void                    Branch                   %12.2 -> BB8 (if true) | BB7 (if false)
BB13   <- [4]
  fs              %13.0 = FrameState         R     0x5638ba1c68c0+90: [%4.1], env=e0.1
  void                    Deopt              !v    %13.0, Typecheck@0x5638ba4ef690[Type#8], %4.1   !
BB8   <- [12]
  (cls|spec|blt)  %8.0  = LdFun              !v    stop, e0.1
  fs              %8.1  = FrameState         R     0x5638ba1c68c0+189: [%8.0], env=e0.1
  void                    Deopt              !v    %8.1, DeadCall@0x5638ba4ef690[Call#5], %8.0   !
BB7   <- [12]
  (cls|spec|blt)  %7.0  = LdFun              !v    makeClassRepresentation, e0.1
  fs              %7.1  = FrameState         R     0x5638ba1c68c0+107: [%7.0], env=e0.1
  void                    Deopt              !v    %7.1, DeadCall@0x5638ba4ef690[Call#4], %7.0   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .classEnv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClass[0x5638c0d7d3b0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, getClass[0x5638c0d7d3b0]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3, false) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClass[0x5638c0d7d3b0]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ getClass[0x5638c0d7d3b0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
