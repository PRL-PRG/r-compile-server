
┌──────────────────────────────────────────────────────────────────────────────┐
│ .checkGroupSigLength[0x5638bcf0c720]                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
.checkGroupSigLength[0x5638bcf0c720]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     gnames=%0.1, generics=%0.0, parent=<env 0x5638ba074378>, context 1
  val?            %0.3  = Force!<lazy>       !v    %0.1, e0.2   <vec$->
  lgl$#-          %0.4  = IsType                   %0.3 isA val?-
  void                    Branch                   %0.4 -> BB110 (if true) | BB111 (if false)
BB110   <- [0]
  val?-           %110.0 = CastType           d     dn %0.3   <vec$->
  void                    StVar              lW    funs, %110.0, e0.2
  void                    StVar              lW    recall, false, e0.2
  val?^ | miss    %110.3 = LdVar              eR    seq_along, e0.2
  lgl$#-          %110.4 = Identical                <blt seq_along>, %110.3   <true>
  void                    Branch                   %110.4 -> BB112 (if true) | BB113 (if false)
BB111   <- [0]
  fs              %111.0 = FrameState         R     0x5638bd245d50+9: [%0.3], env=e0.2
  void                    Deopt              !v    %111.0, Typecheck@0x5638bd49a568[Type#3], %0.3   !
BB112   <- [110]
  val?^ | miss    %112.0 = LdVar              eR    gnames, e0.2
  val?            %112.1 = Force!<wrapped>    !v    %112.0, e0.2   <vec$->
  val?            %112.2 = CallBuiltin        !v    seq_along(%112.1) e0.2   <int$->
  lgl$#-          %112.3 = IsType                   %112.2 isA int$-
  void                    Branch                   %112.3 -> BB114 (if true) | BB115 (if false)
BB113   <- [110]
  fs              %113.0 = FrameState         R     0x5638bd245d50+38: [], env=e0.2
  void                    Deopt              !v    %113.0, DeadBranchReached@0x5638bd49a568[Test#0], %110.4   !
BB114   <- [112]
  int$-           %114.0 = CastType           d     dn %112.2
  int$-           %114.1 = Inc                      0L
  lgl$-           %114.2 = Lt                 d     1L, %114.1, elided   <false>
  lgl$#-          %114.3 = Identical                %114.2, true
  void                    Branch                   %114.3 -> BB117 (if true) | BB116 (if false)
BB115   <- [112]
  void                    Nop                !     
  val?            %115.1 = %112.2
  dr              %115.2 = Typecheck@0x5638bd49a568[Type#6]
  goto BB5
BB117   <- [114]
  void                    Nop                !     
  lgl$#-          %117.1 = %114.3
  dr              %117.2 = DeadBranchReached@0x5638bd49a568[Test#1]
  goto BB5
BB116   <- [114]
  int$-           %116.0 = Extract2_1D        wed   %114.0, %114.1, elided
  void                    StVar              lW    i, %116.0, e0.2
  val?^ | miss    %116.2 = LdVar              eR    gnames, e0.2
  val?            %116.3 = Force!<wrapped>    !v    %116.2, e0.2   <vec$->
  lgl$#-          %116.4 = IsType                   %116.3 isA val+   <true>
  lgl$#-          %116.5 = IsType                   %116.3 isA val?-
  void                    Branch                   %116.4 -> BB118 (if true) | BB119 (if false)
BB5   <- [115, 117]
  val?^ | miss    %5.0  = Phi                      %115.1:BB115, %117.1:BB117
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %115.2:BB115, %117.2:BB117
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x5638bd245d50+129: [%112.2], env=e0.2
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB118   <- [116]
  val?^ | miss    %118.0 = LdVar              eR    i, e0.2
  lgl$#-          %118.1 = IsType                   %118.0 isA int$-
  void                    Branch                   %118.1 -> BB120 (if true) | BB121 (if false)
BB119   <- [116]
  void                    Nop                !     
  lgl$#-          %119.1 = %116.4
  dr              %119.2 = DeadBranchReached@0x5638bd49a568[Test#2]
  goto BB7
BB120   <- [118]
  int$-           %120.0 = CastType           d     dn %118.0
  void                    Branch                   %116.5 -> BB122 (if true) | BB123 (if false)
BB121   <- [118]
  void                    Nop                !     
  val?^ | miss    %121.1 = %118.0
  dr              %121.2 = Typecheck@0x5638bd49a568[Type#9]
  goto BB7
BB7   <- [119, 121, 123]
  val?^ | miss    %7.0  = Phi                      %119.1:BB119, %121.1:BB121, %123.1:BB123
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %119.2:BB119, %121.2:BB121, %123.2:BB123
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x5638bd245d50+183: [%114.0, 1L, %114.1, %116.3], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB122   <- [120]
  val?-           %122.0 = CastType           d     dn %116.3   <vec$->
  val?            %122.1 = Extract2_1D        wed   %122.0, %120.0, elided   <str$+>
  void                    StVar              lW    what, %122.1, e0.2
  val?^ | miss    %122.3 = LdVar              eR    generics, e0.2
  val?            %122.4 = Force!<lazy>       !v    %122.3, e0.2   <vec$->
  lgl$#-          %122.5 = IsType                   %122.4 isA val+   <true>
  lgl$#-          %122.6 = IsType                   %122.4 isA val?-
  void                    Branch                   %122.5 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?            %123.1 = %116.3
  dr              %123.2 = Typecheck@0x5638bd49a568[Type#7]
  goto BB7
BB124   <- [122]
  val?^ | miss    %124.0 = LdVar              eR    i, e0.2
  lgl$#-          %124.1 = IsType                   %124.0 isA int$-
  void                    Branch                   %124.1 -> BB126 (if true) | BB127 (if false)
BB125   <- [122]
  void                    Nop                !     
  lgl$#-          %125.1 = %122.5
  dr              %125.2 = DeadBranchReached@0x5638bd49a568[Test#3]
  goto BB9
BB126   <- [124]
  int$-           %126.0 = CastType           d     dn %124.0
  void                    Branch                   %122.6 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  void                    Nop                !     
  val?^ | miss    %127.1 = %124.0
  dr              %127.2 = Typecheck@0x5638bd49a568[Type#13]
  goto BB9
BB9   <- [125, 127, 129]
  val?^ | miss    %9.0  = Phi                      %125.1:BB125, %127.1:BB127, %129.1:BB129
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %125.2:BB125, %127.2:BB127, %129.2:BB129
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x5638bd245d50+258: [%114.0, 1L, %114.1, %122.4], env=e0.2
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB128   <- [126]
  val?-           %128.0 = CastType           d     dn %122.4   <vec$->
  val?            %128.1 = Extract2_1D        wed   %128.0, %126.0, elided   <cls>
  void                    StVar              lW    fdef, %128.1, e0.2
  val?^ | miss    %128.3 = LdVar              eR    is, e0.2
  lgl$#-          %128.4 = Identical                %128.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %128.4 -> BB130 (if true) | BB131 (if false)
BB129   <- [126]
  void                    Nop                !     
  val?            %129.1 = %122.4
  dr              %129.2 = Typecheck@0x5638bd49a568[Type#11]
  goto BB9
BB130   <- [128]
  prom-           %130.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p0 (!refl), e0.2
  val?            %130.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%130.0, "groupGenericFunction") e0.2   <lgl$->
  lgl$#-          %130.2 = IsType                   %130.1 isA lgl$-
  void                    Branch                   %130.2 -> BB132 (if true) | BB133 (if false)
BB131   <- [128]
  fs              %131.0 = FrameState         R     0x5638bd245d50+324: [%114.0, 1L, %114.1], env=e0.2
  void                    Deopt              !v    %131.0, CallTarget@0x5638bd49a568[Call#2], %128.3   !
BB132   <- [130]
  lgl$-           %132.0 = CastType           d     dn %130.1
  lgl$-           %132.1 = Not                d     %132.0, elided
  lgl$#-          %132.2 = CheckTrueFalse     e     %132.1
  void                    Branch                   %132.2 -> BB108 (if true) | BB15 (if false)
BB133   <- [130]
  void                    Nop                !     
  val?            %133.1 = %130.1
  dr              %133.2 = Typecheck@0x5638bd49a568[Type#16]
  goto BB13
BB108   <- [132]
  (cls|spec|blt)  %108.0 = LdFun              !v    warning, e0.2
  fs              %108.1 = FrameState         R     0x5638bd245d50+383: [%114.0, 1L, %114.1, %108.0], env=e0.2
  void                    Deopt              !v    %108.1, DeadCall@0x5638bd49a568[Call#3], %108.0   !
BB15   <- [132]
  val?^ | miss    %15.0 = LdVar              eR    length, e0.2
  lgl$#-          %15.1 = Identical                <blt length>, %15.0   <true>
  void                    Branch                   %15.1 -> BB134 (if true) | BB135 (if false)
BB13   <- [133, 135]
  val?^ | miss    %13.0 = Phi                      %133.1:BB133, %135.1:BB135
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %133.2:BB133, %135.2:BB135
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x5638bd245d50+361: [%114.0, 1L, %114.1, %130.1], env=e0.2
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB134   <- [15]
  (cls|spec|blt)  %134.0 = LdFun              !v    @, <0x5638b9a6cbd8>, e0.2
  prom-           %134.1 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p1, e0.2
  prom-           %134.2 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p2, e0.2
  val?            %134.3 = Call               !v    %134.0(%134.1, %134.2) e0.2   <vec->
  lgl$#-          %134.4 = IsType                   %134.3 isA val?-
  void                    Branch                   %134.4 -> BB136 (if true) | BB137 (if false)
BB135   <- [15]
  void                    Nop                !     
  lgl$#-          %135.1 = %15.1
  dr              %135.2 = DeadBranchReached@0x5638bd49a568[Test#4]
  goto BB13
BB136   <- [134]
  val?-           %136.0 = CastType           d     dn %134.3   <vec->
  (int|real)$-    %136.1 = CallSafeBuiltin    wed   length(%136.0)    <int$->
  lgl$#-          %136.2 = IsType                   %136.1 isA int$-
  void                    Branch                   %136.2 -> BB138 (if true) | BB139 (if false)
BB137   <- [134]
  fs              %137.0 = FrameState         R     0x5638bd245d50+531: [%114.0, 1L, %114.1, <blt length>, %134.3], env=e0.2
  void                    Deopt              !v    %137.0, Typecheck@0x5638bd49a568[Type#24], %134.3   !
BB138   <- [136]
  int$-           %138.0 = CastType           d     dn %136.1
  lgl$#-          %138.1 = CheckTrueFalse     e     %138.0
  void                    Branch                   %138.1 -> BB101 (if true) | BB20 (if false)
BB139   <- [136]
  void                    Nop                !     
  (int|real)$-    %139.1 = %136.1
  dr              %139.2 = Typecheck@0x5638bd49a568[Type#25]
  goto BB18
BB101   <- [138]
  (cls|spec|blt)  %101.0 = LdFun              !v    @, <0x5638b9a6cbd8>, e0.2
  prom-           %101.1 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p26, e0.2
  prom-           %101.2 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p27, e0.2
  val?            %101.3 = Call               !v    %101.0(%101.1, %101.2) e0.2   <vec$->
  val?^ | miss    %101.4 = LdVar              eR    gnames, e0.2
  val?            %101.5 = Force!<wrapped>    !v    %101.4, e0.2   <vec$->
  lgl$#-          %101.6 = IsType                   %101.5 isA val?-
  lgl$#-          %101.7 = IsType                   %101.3 isA val?-
  val?^ | miss    %101.8 = LdVar              eR    i, e0.2
  lgl$#-          %101.9 = IsType                   %101.8 isA int$-
  void                    Branch                   %101.9 -> BB140 (if true) | BB141 (if false)
BB20   <- [138]
  val?^ | miss    %20.0 = LdVar              eR    c, e0.2
  lgl$#-          %20.1 = Identical                <blt c>, %20.0   <true>
  void                    Branch                   %20.1 -> BB148 (if true) | BB149 (if false)
BB18   <- [139, 149, 151, 155]
  val?^ | miss    %18.0 = Phi                      %139.1:BB139, %149.1:BB149, %151.1:BB151, %155.1:BB155
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %139.2:BB139, %149.2:BB149, %151.2:BB151, %155.2:BB155
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x5638bd245d50+553: [%114.0, 1L, %114.1, %136.1], env=e0.2
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB140   <- [101]
  int$-           %140.0 = CastType           d     dn %101.8
  void                    Branch                   %101.7 -> BB142 (if true) | BB143 (if false)
BB141   <- [101]
  void                    Nop                !     
  val?^ | miss    %141.1 = %101.8
  dr              %141.2 = Typecheck@0x5638bd49a568[Type#30]
  goto BB102
BB148   <- [20]
  val?^ | miss    %148.0 = LdVar              eR    funs, e0.2
  lgl$#-          %148.1 = IsType                   %148.0 isA val?~- | miss
  void                    Branch                   %148.1 -> BB150 (if true) | BB151 (if false)
BB149   <- [20]
  void                    Nop                !     
  lgl$#-          %149.1 = %20.1
  dr              %149.2 = DeadBranchReached@0x5638bd49a568[Test#5]
  goto BB18
BB142   <- [140]
  val?-           %142.0 = CastType           d     dn %101.3   <vec$->
  void                    Branch                   %101.6 -> BB144 (if true) | BB145 (if false)
BB143   <- [140]
  void                    Nop                !     
  val?            %143.1 = %101.3
  dr              %143.2 = Typecheck@0x5638bd49a568[Type#28]
  goto BB102
BB102   <- [141, 143, 145]
  val?^ | miss    %102.0 = Phi                      %141.1:BB141, %143.1:BB143, %145.1:BB145
  val?^ | miss    %102.1 = %102.0
  dr              %102.2 = Phi                      %141.2:BB141, %143.2:BB143, %145.2:BB145
  dr              %102.3 = %102.2
  fs              %102.4 = FrameState         R     0x5638bd245d50+620: [%114.0, 1L, %114.1, %101.3, %101.5], env=e0.2
  void                    Deopt              !v    %102.4, %102.3, %102.1   !
BB150   <- [148]
  val?~- | miss   %150.0 = CastType           d     dn %148.0
  val?-           %150.1 = Force!<value>            %150.0,    <vec$->
  val?^ | miss    %150.2 = LdVar              eR    getGroupMembers, e0.2
  lgl$#-          %150.3 = Identical                %150.2, function(group, recursive=FALSE, character=TRU|...
  void                    Branch                   %150.3 -> BB154 (if true) | BB155 (if false)
BB151   <- [148]
  void                    Nop                !     
  val?^ | miss    %151.1 = %148.0
  dr              %151.2 = Typecheck@0x5638bd49a568[Type#41]
  goto BB18
BB144   <- [142]
  val?-           %144.0 = CastType           d     dn %101.5   <vec$->
  val?-           %144.1 = Subassign2_1D      wed   %142.0, %144.0, %140.0, elided
  void                    StVar              lW    gnames, %144.1, e0.2
  val?^ | miss    %144.3 = LdVar              eR    lapply, e0.2
  lgl$#-          %144.4 = Identical                %144.3, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %144.4 -> BB146 (if true) | BB147 (if false)
BB145   <- [142]
  void                    Nop                !     
  val?            %145.1 = %101.5
  dr              %145.2 = Typecheck@0x5638bd49a568[Type#29]
  goto BB102
BB154   <- [150]
  prom-           %154.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p3, e0.2
  val?            %154.1 = StaticCall         !v    getGroupMembers[0x5638bca370c0](%154.0, true, false) e0.2   <vec->
  lgl$#-          %154.2 = IsType                   %154.1 isA val?-
  void                    Branch                   %154.2 -> BB160 (if true) | BB161 (if false)
BB155   <- [150]
  void                    Nop                !     
  val?^ | miss    %155.1 = %150.2
  dr              %155.2 = CallTarget@0x5638bd49a568[Call#13]
  goto BB18
BB146   <- [144]
  prom-           %146.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p28, e0.2
  prom-           %146.1 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p31, e0.2
  val?            %146.2 = StaticCall         !v    lapply[0x5638beb91730](%146.0, %146.1) { 0 1 } e0.2   <vec$->
  val?^ | miss    %146.3 = LdVar              eR    generics, e0.2
  val?            %146.4 = Force!<wrapped>    !v    %146.3, e0.2   <vec$->
  lgl$#-          %146.5 = IsType                   %146.4 isA val?-
  lgl$#-          %146.6 = IsType                   %146.2 isA val?-
  val?^ | miss    %146.7 = LdVar              eR    i, e0.2
  lgl$#-          %146.8 = IsType                   %146.7 isA int$-
  void                    Branch                   %146.8 -> BB152 (if true) | BB153 (if false)
BB147   <- [144]
  fs              %147.0 = FrameState         R     0x5638bd245d50+649: [%114.0, 1L, %114.1], env=e0.2
  void                    Deopt              !v    %147.0, CallTarget@0x5638bd49a568[Call#9], %144.3   !
BB160   <- [154]
  val?-           %160.0 = CastType           d     dn %154.1   <vec->
  val+            %160.1 = CallSafeBuiltin    wed   c(%150.1, %160.0)    <vec->
  void                    StVar              lW    funs, %160.1, e0.2
  goto BB23
BB161   <- [154]
  fs              %161.0 = FrameState         R     0x5638bd245d50+875: [%114.0, 1L, %114.1, <blt c>, %150.1, %154.1], env=e0.2
  void                    Deopt              !v    %161.0, Typecheck@0x5638bd49a568[Type#43], %154.1   !
BB152   <- [146]
  int$-           %152.0 = CastType           d     dn %146.7
  void                    Branch                   %146.6 -> BB156 (if true) | BB157 (if false)
BB153   <- [146]
  void                    Nop                !     
  val?^ | miss    %153.1 = %146.7
  dr              %153.2 = Typecheck@0x5638bd49a568[Type#37]
  goto BB106
BB23   <- [158, 160]
  int$-           %23.0 = Inc                      %114.1
  lgl$-           %23.1 = Lt                 d     1L, %23.0, elided
  lgl$#-          %23.2 = Identical                %23.1, true
  void                    Branch                   %23.2 -> BB33 (if true) | BB26 (if false)
BB156   <- [152]
  val?-           %156.0 = CastType           d     dn %146.2   <vec$->
  void                    Branch                   %146.5 -> BB158 (if true) | BB159 (if false)
BB157   <- [152]
  void                    Nop                !     
  val?            %157.1 = %146.2
  dr              %157.2 = Typecheck@0x5638bd49a568[Type#35]
  goto BB106
BB106   <- [153, 157, 159]
  val?^ | miss    %106.0 = Phi                      %153.1:BB153, %157.1:BB157, %159.1:BB159
  val?^ | miss    %106.1 = %106.0
  dr              %106.2 = Phi                      %153.2:BB153, %157.2:BB157, %159.2:BB159
  dr              %106.3 = %106.2
  fs              %106.4 = FrameState         R     0x5638bd245d50+700: [%114.0, 1L, %114.1, %146.2, %146.4], env=e0.2
  void                    Deopt              !v    %106.4, %106.3, %106.1   !
BB33   <- [23]
  val?^ | miss    %33.0 = LdVar              eR    recall, e0.2
  lgl$#-          %33.1 = IsType                   %33.0 isA lgl$-
  void                    Branch                   %33.1 -> BB162 (if true) | BB163 (if false)
BB26   <- [23]
  int$-           %26.0 = Extract2_1D        wed   %114.0, %23.0, elided
  void                    StVar              lW    i, %26.0, e0.2
  val?^ | miss    %26.2 = LdVar              eR    gnames, e0.2
  val?            %26.3 = Force!             !v    %26.2, e0.2   <val?_>
  lgl$#-          %26.4 = IsType                   %26.3 isA val+   <@?>
  void                    Branch                   %26.4 -> BB32 (if true) | BB27 (if false)
BB158   <- [156]
  val?-           %158.0 = CastType           d     dn %146.4   <vec$->
  val?-           %158.1 = Subassign2_1D      wed   %156.0, %158.0, %152.0, elided
  void                    StVar              lW    generics, %158.1, e0.2
  void                    StVar              lW    recall, true, e0.2
  goto BB23
BB159   <- [156]
  void                    Nop                !     
  val?            %159.1 = %146.4
  dr              %159.2 = Typecheck@0x5638bd49a568[Type#36]
  goto BB106
BB162   <- [33]
  lgl$-           %162.0 = CastType           d     dn %33.0
  void                    Visible            v     
  lgl$#-          %162.2 = CheckTrueFalse     e     %162.0
  void                    Branch                   %162.2 -> BB100 (if true) | BB34 (if false)
BB163   <- [33]
  void                    Nop                !     
  val?^ | miss    %163.1 = %33.0
  dr              %163.2 = Typecheck@0x5638bd49a568[Type#83]
  goto BB24
BB32   <- [26]
  val?^ | miss    %32.0 = LdVar              eR    i, e0.2
  val?            %32.1 = Force!             !v    %32.0, e0.2   <val?_>
  val?            %32.2 = %32.1
  goto BB28
BB27   <- [26]
  prom-           %27.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p5, e0.2
  prom-           %27.1 = %27.0
  goto BB28
BB100   <- [162]
  val?^ | miss    %100.0 = LdVar              eR    Recall, e0.2
  lgl$#-          %100.1 = Identical                %100.0, function(...) <(rir::DispatchTable*)0x5638bd5f|...
  void                    Branch                   %100.1 -> BB164 (if true) | BB165 (if false)
BB34   <- [162]
  val?^ | miss    %34.0 = LdVar              eR    unique, e0.2
  lgl$#-          %34.1 = Identical                %34.0, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %34.1 -> BB166 (if true) | BB167 (if false)
BB24   <- [163, 165, 167, 169]
  val?^ | miss    %24.0 = Phi                      %163.1:BB163, %165.1:BB165, %167.1:BB167, %169.1:BB169
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %163.2:BB163, %165.2:BB165, %167.2:BB167, %169.2:BB169
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x5638bd245d50+911: [%114.0, 1L, %114.1], env=e0.2
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB28   <- [27, 32]
  val?            %28.0 = Phi                      %32.2:BB32, %27.1:BB27
  val?            %28.1 = %28.0
  val?            %28.2 = Extract2_1D        !v    %26.3, %28.1, e0.2   <val?_>
  void                    StVar              lW    what, %28.2, e0.2
  val?^ | miss    %28.4 = LdVar              eR    generics, e0.2
  val?            %28.5 = Force!             !v    %28.4, e0.2   <val?_>
  lgl$#-          %28.6 = IsType                   %28.5 isA val+   <@?>
  void                    Branch                   %28.6 -> BB31 (if true) | BB29 (if false)
BB164   <- [100]
  prom-           %164.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p22, e0.2
  prom-           %164.1 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p24, e0.2
  dots-           %164.2 = DotsList           l     %164.0, %164.1
  ct              %164.3 = PushContext        lCL   %164.2, Recall(unlist(gnames, FALSE), unlist(generics,|..., function(...) <(rir::DispatchTable*)0x5638bd5f|..., e0.2
  env             e164.4 = MkEnv              l     ...=%164.2, parent=R_BaseNamespace, context 1
  prom-           %164.5 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p32, e164.4
  val?            %164.6 = Call               !     <spec .Internal>(%164.5) e164.4   <(lgl|vec)->
  val?            %164.7 = PopContext         C     %164.6, %164.3   <vec->
  val?            %164.8 = %164.7
  goto BB87
BB165   <- [100]
  void                    Nop                !     
  val?^ | miss    %165.1 = %100.0
  dr              %165.2 = CallTarget@0x5638bd49a568[Call#26]
  goto BB24
BB166   <- [34]
  val?^ | miss    %166.0 = LdVar              eR    funs, e0.2
  lgl$#-          %166.1 = IsType                   %166.0 isA val?~- | miss
  void                    Branch                   %166.1 -> BB168 (if true) | BB169 (if false)
BB167   <- [34]
  void                    Nop                !     
  val?^ | miss    %167.1 = %34.0
  dr              %167.2 = CallTarget@0x5638bd49a568[Call#29]
  goto BB24
BB31   <- [28]
  val?^ | miss    %31.0 = LdVar              eR    i, e0.2
  val?            %31.1 = Force!             !v    %31.0, e0.2   <val?_>
  val?            %31.2 = %31.1
  goto BB30
BB29   <- [28]
  prom-           %29.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p4, e0.2
  prom-           %29.1 = %29.0
  goto BB30
BB87   <- [164, 222]
  val?            %87.0 = Phi                      %222.3:BB222, %164.8:BB164
  val?            %87.1 = %87.0
  void                    Return             l     %87.1
BB168   <- [166]
  val?~- | miss   %168.0 = CastType           d     dn %166.0
  val?-           %168.1 = Force!<value>            %168.0,    <vec->
  val?            %168.2 = StaticCall         !v    unique[0x5638c06e65e0](%168.1) { 0 } e0.2   <vec->
  void                    StVar              lW    funs, %168.2, e0.2
  val?^ | miss    %168.4 = LdVar              eR    lapply, e0.2
  lgl$#-          %168.5 = Identical                %168.4, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %168.5 -> BB170 (if true) | BB171 (if false)
BB169   <- [166]
  void                    Nop                !     
  val?^ | miss    %169.1 = %166.0
  dr              %169.2 = Typecheck@0x5638bd49a568[Type#89]
  goto BB24
BB30   <- [29, 31]
  val?            %30.0 = Phi                      %31.2:BB31, %29.1:BB29
  val?            %30.1 = %30.0
  val?            %30.2 = Extract2_1D        !v    %28.5, %30.1, e0.2   <val?_>
  void                    StVar              lW    fdef, %30.2, e0.2
  (cls|spec|blt)  %30.4 = LdFun              !v    is, e0.2
  fs              %30.5 = FrameState         R     0x5638bd245d50+1095: [%114.0, 1L, %23.0, %30.4], env=e0.2
  void                    Deopt              !v    %30.5, DeadCall@0x5638bd49a568[Call#14], %30.4   !
BB170   <- [168]
  prom-           %170.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p8 (!refl), e0.2
  cls             %170.1 = MkCls                    .checkGroupSigLength@Prom(9)0, e0.2
  prom-           %170.2 = MkArg                    %170.1, .checkGroupSigLength[0x5638bcf0c720]_p9 (!refl), e0.2
  val?            %170.3 = StaticCall         !v    lapply[0x5638bc8cfde0](%170.0, %170.2) { 0 1 } e0.2   <vec->
  void                    StVar              lW    fdefs, %170.3, e0.2
  (cls|spec|blt)  %170.5 = LdFun              !v    rep, <0x5638b9a819b0>, e0.2
  prom-           %170.6 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p10, e0.2
  val?            %170.7 = Call               !v    %170.5(0, %170.6) e0.2   <real->
  void                    StVar              lW    sigs, %170.7, e0.2
  val?^ | miss    %170.9 = LdVar              eR    seq_along, e0.2
  lgl$#-          %170.10 = Identical                <blt seq_along>, %170.9   <true>
  void                    Branch                   %170.10 -> BB172 (if true) | BB173 (if false)
BB171   <- [168]
  fs              %171.0 = FrameState         R     0x5638bd245d50+1801: [], env=e0.2
  void                    Deopt              !v    %171.0, CallTarget@0x5638bd49a568[Call#30], %168.4   !
BB172   <- [170]
  val             %172.0 = ChkMissing         e     %170.7
  val?            %172.1 = CallBuiltin        !v    seq_along(%170.7) e0.2   <int->
  val?+           %172.2 = ToForSeq           e     %172.1
  int$-           %172.3 = Length                   %172.2
  lgl$-           %172.4 = Lt                 d     %172.3, %114.1, elided   <false>
  lgl$#-          %172.5 = Identical                %172.4, true
  void                    Branch                   %172.5 -> BB175 (if true) | BB174 (if false)
BB173   <- [170]
  fs              %173.0 = FrameState         R     0x5638bd245d50+1903: [], env=e0.2
  void                    Deopt              !v    %173.0, DeadBranchReached@0x5638bd49a568[Test#10], %170.10   !
BB175   <- [172]
  fs              %175.0 = FrameState         R     0x5638bd245d50+1994: [%172.1], env=e0.2
  void                    Deopt              !v    %175.0, DeadBranchReached@0x5638bd49a568[Test#11], %172.5   !
BB174   <- [172]
  val?            %174.0 = Extract2_1D        wed   %172.2, %114.1, elided
  void                    StVar              lW    i, %174.0, e0.2
  val?^ | miss    %174.2 = LdVar              eR    funs, e0.2
  lgl$#-          %174.3 = IsType                   %174.2 isA val?~- | miss
  void                    Branch                   %174.3 -> BB176 (if true) | BB177 (if false)
BB176   <- [174]
  val?~- | miss   %176.0 = CastType           d     dn %174.2
  val?-           %176.1 = Force!<value>            %176.0,    <vec->
  lgl$#-          %176.2 = IsType                   %176.1 isA val+   <true>
  void                    Branch                   %176.2 -> BB178 (if true) | BB179 (if false)
BB177   <- [174]
  void                    Nop                !     
  val?^ | miss    %177.1 = %174.2
  dr              %177.2 = Typecheck@0x5638bd49a568[Type#99]
  goto BB41
BB178   <- [176]
  val             %178.0 = ChkMissing         e     %174.0
  lgl$#-          %178.1 = IsType                   %178.0 isA int$-
  void                    Branch                   %178.1 -> BB180 (if true) | BB181 (if false)
BB179   <- [176]
  void                    Nop                !     
  lgl$#-          %179.1 = %176.2
  dr              %179.2 = DeadBranchReached@0x5638bd49a568[Test#12]
  goto BB41
BB41   <- [177, 179, 181]
  val?^ | miss    %41.0 = Phi                      %177.1:BB177, %179.1:BB179, %181.1:BB181
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %177.2:BB177, %179.2:BB179, %181.2:BB181
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x5638bd245d50+2039: [%172.2, %172.3, %114.1], env=e0.2
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB180   <- [178]
  int$-           %180.0 = CastType           d     dn %178.0
  val?            %180.1 = Extract2_1D        wed   %176.1, %180.0, elided   <str$->
  void                    StVar              lW    what, %180.1, e0.2
  val?^ | miss    %180.3 = LdVar              eR    fdefs, e0.2
  lgl$#-          %180.4 = IsType                   %180.3 isA val?~- | miss
  void                    Branch                   %180.4 -> BB182 (if true) | BB183 (if false)
BB181   <- [178]
  void                    Nop                !     
  val             %181.1 = %178.0
  dr              %181.2 = Typecheck@0x5638bd49a568[Type#101]
  goto BB41
BB182   <- [180]
  val?~- | miss   %182.0 = CastType           d     dn %180.3
  val?-           %182.1 = Force!<value>            %182.0,    <vec->
  lgl$#-          %182.2 = IsType                   %182.1 isA val+   <true>
  void                    Branch                   %182.2 -> BB184 (if true) | BB185 (if false)
BB183   <- [180]
  void                    Nop                !     
  val?^ | miss    %183.1 = %180.3
  dr              %183.2 = Typecheck@0x5638bd49a568[Type#103]
  goto BB43
BB184   <- [182]
  val?            %184.0 = Extract2_1D        wed   %182.1, %180.0, elided   <cls>
  lgl$-           %184.1 = Is                       %184.0, NULL
  void                    StVar              lW    fdef, %184.0, e0.2
  val             %184.3 = ChkMissing         e     %184.0
  lgl$#-          %184.4 = CheckTrueFalse     e     %184.1
  void                    Branch                   %184.4 -> BB99 (if true) | BB47 (if false)
BB185   <- [182]
  void                    Nop                !     
  lgl$#-          %185.1 = %182.2
  dr              %185.2 = DeadBranchReached@0x5638bd49a568[Test#13]
  goto BB43
BB43   <- [183, 185]
  val?^ | miss    %43.0 = Phi                      %183.1:BB183, %185.1:BB185
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %183.2:BB183, %185.2:BB185
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x5638bd245d50+2114: [%172.2, %172.3, %114.1], env=e0.2
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB99   <- [184]
  void                    Nop                !     
  int$-           %99.1 = %114.1
  goto BB54
BB47   <- [184]
  val?^ | miss    %47.0 = LdVar              eR    is, e0.2
  lgl$#-          %47.1 = Identical                %47.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %47.1 -> BB186 (if true) | BB187 (if false)
BB54   <- [75, 99, 216, 232]
  int$-           %54.0 = Phi                      %216.3:BB216, %232.3:BB232, %75.1:BB75, %99.1:BB99
  int$-           %54.1 = %54.0
  int$-           %54.2 = Inc                      %54.1
  lgl$-           %54.3 = Lt                 d     %172.3, %54.2, elided
  lgl$#-          %54.4 = Identical                %54.3, true
  void                    Branch                   %54.4 -> BB76 (if true) | BB57 (if false)
BB186   <- [47]
  prom-           %186.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p12 (!refl), e0.2
  val?            %186.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%186.0, "genericFunction") e0.2   <lgl$->
  lgl$#-          %186.2 = IsType                   %186.1 isA lgl$-
  void                    Branch                   %186.2 -> BB188 (if true) | BB189 (if false)
BB187   <- [47]
  fs              %187.0 = FrameState         R     0x5638bd245d50+2189: [%172.2, %172.3, %114.1], env=e0.2
  void                    Deopt              !v    %187.0, CallTarget@0x5638bd49a568[Call#34], %47.0   !
BB76   <- [54]
  val?^ | miss    %76.0 = LdVar              eR    max, e0.2
  lgl$#-          %76.1 = Identical                <blt max>, %76.0   <true>
  void                    Branch                   %76.1 -> BB190 (if true) | BB191 (if false)
BB57   <- [54]
  val?            %57.0 = Extract2_1D        wed   %172.2, %54.2, elided
  void                    StVar              lW    i, %57.0, e0.2
  val?^ | miss    %57.2 = LdVar              eR    funs, e0.2
  lgl$#-          %57.3 = IsType                   %57.2 isA val?~- | miss
  void                    Branch                   %57.3 -> BB194 (if true) | BB195 (if false)
BB188   <- [186]
  lgl$-           %188.0 = CastType           d     dn %186.1
  lgl$-           %188.1 = Not                d     %188.0, elided
  lgl$#-          %188.2 = CheckTrueFalse     e     %188.1
  void                    Branch                   %188.2 -> BB98 (if true) | BB50 (if false)
BB189   <- [186]
  void                    Nop                !     
  val?            %189.1 = %186.1
  dr              %189.2 = Typecheck@0x5638bd49a568[Type#109]
  goto BB48
BB190   <- [76]
  val?^ | miss    %190.0 = LdVar              eR    sigs, e0.2
  lgl$#-          %190.1 = IsType                   %190.0 isA real-
  void                    Branch                   %190.1 -> BB200 (if true) | BB201 (if false)
BB191   <- [76]
  void                    Nop                !     
  lgl$#-          %191.1 = %76.1
  dr              %191.2 = DeadBranchReached@0x5638bd49a568[Test#16]
  goto BB55
BB194   <- [57]
  val?~- | miss   %194.0 = CastType           d     dn %57.2
  val?-           %194.1 = Force!<value>            %194.0,    <vec->
  lgl$#-          %194.2 = IsType                   %194.1 isA val+   <true>
  void                    Branch                   %194.2 -> BB196 (if true) | BB197 (if false)
BB195   <- [57]
  void                    Nop                !     
  val?^ | miss    %195.1 = %57.2
  dr              %195.2 = Typecheck@0x5638bd49a568[Type#130]
  goto BB58
BB98   <- [188]
  (cls|spec|blt)  %98.0 = LdFun              !v    warning, e0.2
  fs              %98.1 = FrameState         R     0x5638bd245d50+2547: [%172.2, %172.3, %114.1, %98.0], env=e0.2
  void                    Deopt              !v    %98.1, DeadCall@0x5638bd49a568[Call#39], %98.0   !
BB50   <- [188]
  val?^ | miss    %50.0 = LdVar              eR    environment, e0.2
  lgl$#-          %50.1 = Identical                %50.0, function(fun=NULL) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %50.1 -> BB192 (if true) | BB193 (if false)
BB48   <- [189, 193]
  val?^ | miss    %48.0 = Phi                      %189.1:BB189, %193.1:BB193
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %189.2:BB189, %193.2:BB193
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x5638bd245d50+2266: [%172.2, %172.3, %114.1, %186.1], env=e0.2
  void                    Deopt              !v    %48.4, %48.3, %48.1   !
BB200   <- [190]
  real-           %200.0 = CastType           d     dn %190.0
  real$-          %200.1 = CallSafeBuiltin    wed   max(%200.0)    <real$->
  void                    StVar              lW    n, %200.1, e0.2
  val?^ | miss    %200.3 = LdVar              eR    &, e0.2
  lgl$#-          %200.4 = Identical                <blt &>, %200.3   <true>
  void                    Branch                   %200.4 -> BB202 (if true) | BB203 (if false)
BB201   <- [190]
  void                    Nop                !     
  val?^ | miss    %201.1 = %190.0
  dr              %201.2 = Typecheck@0x5638bd49a568[Type#162]
  goto BB55
BB55   <- [191, 201]
  val?^ | miss    %55.0 = Phi                      %191.1:BB191, %201.1:BB201
  val?^ | miss    %55.1 = %55.0
  dr              %55.2 = Phi                      %191.2:BB191, %201.2:BB201
  dr              %55.3 = %55.2
  fs              %55.4 = FrameState         R     0x5638bd245d50+2588: [%172.2, %172.3, %54.1], env=e0.2
  void                    Deopt              !v    %55.4, %55.3, %55.1   !
BB196   <- [194]
  val             %196.0 = ChkMissing         e     %57.0
  lgl$#-          %196.1 = IsType                   %196.0 isA int$-
  void                    Branch                   %196.1 -> BB198 (if true) | BB199 (if false)
BB197   <- [194]
  void                    Nop                !     
  lgl$#-          %197.1 = %194.2
  dr              %197.2 = DeadBranchReached@0x5638bd49a568[Test#14]
  goto BB58
BB58   <- [195, 197, 199]
  val?^ | miss    %58.0 = Phi                      %195.1:BB195, %197.1:BB197, %199.1:BB199
  val?^ | miss    %58.1 = %58.0
  dr              %58.2 = Phi                      %195.2:BB195, %197.2:BB197, %199.2:BB199
  dr              %58.3 = %58.2
  fs              %58.4 = FrameState         R     0x5638bd245d50+2617: [%172.2, %172.3, %54.2], env=e0.2
  void                    Deopt              !v    %58.4, %58.3, %58.1   !
BB192   <- [50]
  val?^ | miss    %192.0 = LdVar              eR    fdef, e0.2
  val?            %192.1 = Force!<value>      !v    %192.0, e0.2   <cls>
  prom-           %192.2 = MkArg                    %192.1, .checkGroupSigLength[0x5638bcf0c720]_p13 (!refl), 
  val?            %192.3 = StaticCall         !v    environment[0x5638bd5b06f0](%192.2) e0.2   <env->
  void                    StVar              lW    ev, %192.3, e0.2
  (cls|spec|blt)  %192.5 = LdFun              !v    $, <0x5638b9a6cc10>, e0.2
  prom-           %192.6 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p14, e0.2
  prom-           %192.7 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p15, e0.2
  val?            %192.8 = Call               !v    %192.5(%192.6, %192.7) e0.2   <(int|real)$->
  lgl$-           %192.9 = Is                       %192.8, NULL
  void                    StVar              lW    sigl, %192.8, e0.2
  lgl$#-          %192.11 = CheckTrueFalse     e     %192.9
  void                    Branch                   %192.11 -> BB97 (if true) | BB53 (if false)
BB193   <- [50]
  void                    Nop                !     
  val?^ | miss    %193.1 = %50.0
  dr              %193.2 = CallTarget@0x5638bd49a568[Call#35]
  goto BB48
BB202   <- [200]
  lgl-            %202.0 = Lt                 wed   %200.0, %200.1, elided   <lgl->
  lgl-            %202.1 = Gt                 wed   %200.0, 0, elided   <lgl->
  val+            %202.2 = CallSafeBuiltin    wed   &(%202.0, %202.1)    <lgl->
  void                    StVar              lW    reset, %202.2, e0.2
  val?^ | miss    %202.4 = LdVar              eR    any, e0.2
  lgl$#-          %202.5 = Identical                <blt any>, %202.4   <true>
  void                    Branch                   %202.5 -> BB212 (if true) | BB213 (if false)
BB203   <- [200]
  fs              %203.0 = FrameState         R     0x5638bd245d50+3281: [], env=e0.2
  void                    Deopt              !v    %203.0, DeadBranchReached@0x5638bd49a568[Test#17], %200.4   !
BB198   <- [196]
  int$-           %198.0 = CastType           d     dn %196.0
  val?            %198.1 = Extract2_1D        wed   %194.1, %198.0, elided   <str$->
  void                    StVar              lW    what, %198.1, e0.2
  val?^ | miss    %198.3 = LdVar              eR    fdefs, e0.2
  lgl$#-          %198.4 = IsType                   %198.3 isA val?~- | miss
  void                    Branch                   %198.4 -> BB204 (if true) | BB205 (if false)
BB199   <- [196]
  void                    Nop                !     
  val             %199.1 = %196.0
  dr              %199.2 = Typecheck@0x5638bd49a568[Type#132]
  goto BB58
BB97   <- [192]
  (cls|spec|blt)  %97.0 = LdFun              !v    .setupMethodsTables, e0.2
  fs              %97.1 = FrameState         R     0x5638bd245d50+2398: [%172.2, %172.3, %114.1, %97.0], env=e0.2
  void                    Deopt              !v    %97.1, DeadCall@0x5638bd49a568[Call#37], %97.0   !
BB53   <- [192]
  val             %53.0 = ChkMissing         e     %192.8
  val?^ | miss    %53.1 = LdVar              eR    sigs !upd, e0.2
  lgl$#-          %53.2 = IsType                   %53.1 isA real-
  void                    Branch                   %53.2 -> BB210 (if true) | BB211 (if false)
BB212   <- [202]
  val?            %212.0 = CallBuiltin        !v    any(%202.2) e0.2   <lgl$->
  lgl$#-          %212.1 = IsType                   %212.0 isA lgl$-
  void                    Branch                   %212.1 -> BB218 (if true) | BB219 (if false)
BB213   <- [202]
  fs              %213.0 = FrameState         R     0x5638bd245d50+3437: [], env=e0.2
  void                    Deopt              !v    %213.0, DeadBranchReached@0x5638bd49a568[Test#18], %202.5   !
BB204   <- [198]
  val?~- | miss   %204.0 = CastType           d     dn %198.3
  val?-           %204.1 = Force!<value>            %204.0,    <vec->
  lgl$#-          %204.2 = IsType                   %204.1 isA val+   <true>
  void                    Branch                   %204.2 -> BB206 (if true) | BB207 (if false)
BB205   <- [198]
  void                    Nop                !     
  val?^ | miss    %205.1 = %198.3
  dr              %205.2 = Typecheck@0x5638bd49a568[Type#134]
  goto BB60
BB210   <- [53]
  real-           %210.0 = CastType           d     dn %53.1
  val?^ | miss    %210.1 = LdVar              eR    i, e0.2
  lgl$#-          %210.2 = IsType                   %210.1 isA int$-
  void                    Branch                   %210.2 -> BB214 (if true) | BB215 (if false)
BB211   <- [53]
  void                    Nop                !     
  val?^ | miss    %211.1 = %53.1
  dr              %211.2 = Typecheck@0x5638bd49a568[Type#119]
  goto BB51
BB218   <- [212]
  lgl$-           %218.0 = CastType           d     dn %212.0
  lgl$#-          %218.1 = CheckTrueFalse     e     %218.0
  void                    Branch                   %218.1 -> BB88 (if true) | BB83 (if false)
BB219   <- [212]
  fs              %219.0 = FrameState         R     0x5638bd245d50+3528: [%212.0], env=e0.2
  void                    Deopt              !v    %219.0, Typecheck@0x5638bd49a568[Type#177], %212.0   !
BB206   <- [204]
  val             %206.0 = ChkMissing         e     %57.0
  lgl$#-          %206.1 = IsType                   %206.0 isA int$-
  void                    Branch                   %206.1 -> BB208 (if true) | BB209 (if false)
BB207   <- [204]
  void                    Nop                !     
  lgl$#-          %207.1 = %204.2
  dr              %207.2 = DeadBranchReached@0x5638bd49a568[Test#15]
  goto BB60
BB60   <- [205, 207, 209]
  val?^ | miss    %60.0 = Phi                      %205.1:BB205, %207.1:BB207, %209.1:BB209
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %205.2:BB205, %207.2:BB207, %209.2:BB209
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x5638bd245d50+2692: [%172.2, %172.3, %54.2], env=e0.2
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB214   <- [210]
  int$-           %214.0 = CastType           d     dn %210.1
  lgl$#-          %214.1 = IsType                   %192.8 isA val?-
  void                    Branch                   %214.1 -> BB216 (if true) | BB217 (if false)
BB215   <- [210]
  void                    Nop                !     
  val?^ | miss    %215.1 = %210.1
  dr              %215.2 = Typecheck@0x5638bd49a568[Type#120]
  goto BB51
BB51   <- [211, 215, 217]
  val?^ | miss    %51.0 = Phi                      %211.1:BB211, %215.1:BB215, %217.1:BB217
  val?^ | miss    %51.1 = %51.0
  dr              %51.2 = Phi                      %211.2:BB211, %215.2:BB215, %217.2:BB217
  dr              %51.3 = %51.2
  fs              %51.4 = FrameState         R     0x5638bd245d50+2377: [%172.2, %172.3, %114.1, %192.8], env=e0.2
  void                    Deopt              !v    %51.4, %51.3, %51.1   !
BB88   <- [218]
  val?^ | miss    %88.0 = LdVar              eR    funs, e0.2
  val?            %88.1 = Force!             !v    %88.0, e0.2   <val?_>
  lgl$#-          %88.2 = IsType                   %88.1 isA val+   <@?>
  void                    Branch                   %88.2 -> BB96 (if true) | BB89 (if false)
BB83   <- [218]
  void                    Nop                !     
  goto BB84
BB208   <- [206]
  int$-           %208.0 = CastType           d     dn %206.0
  val?            %208.1 = Extract2_1D        wed   %204.1, %208.0, elided   <cls>
  lgl$-           %208.2 = Is                       %208.1, NULL
  void                    StVar              lW    fdef, %208.1, e0.2
  val             %208.4 = ChkMissing         e     %208.1
  lgl$#-          %208.5 = CheckTrueFalse     e     %208.2
  void                    Branch                   %208.5 -> BB75 (if true) | BB64 (if false)
BB209   <- [206]
  void                    Nop                !     
  val             %209.1 = %206.0
  dr              %209.2 = Typecheck@0x5638bd49a568[Type#136]
  goto BB60
BB216   <- [214]
  val?-           %216.0 = CastType           d     dn %192.8   <(int|real)$->
  val?-           %216.1 = Subassign1_1D      wed   %216.0, %210.0, %214.0, elided
  void                    StVar              lW    sigs, %216.1, e0.2
  int$-           %216.3 = %114.1
  goto BB54
BB217   <- [214]
  void                    Nop                !     
  val?            %217.1 = %192.8
  dr              %217.2 = Typecheck@0x5638bd49a568[Type#114]
  goto BB51
BB96   <- [88]
  val?^ | miss    %96.0 = LdVar              eR    reset, e0.2
  val?            %96.1 = Force!             !v    %96.0, e0.2   <val?_>
  val?            %96.2 = %96.1
  goto BB90
BB89   <- [88]
  prom-           %89.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p21, e0.2
  prom-           %89.1 = %89.0
  goto BB90
BB84   <- [83, 94]
  val?^ | miss    %84.0 = LdVar              eR    funs, e0.2
  lgl$#-          %84.1 = IsType                   %84.0 isA val?~- | miss
  void                    Branch                   %84.1 -> BB222 (if true) | BB223 (if false)
BB75   <- [208]
  void                    Nop                !     
  int$-           %75.1 = %54.2
  goto BB54
BB64   <- [208]
  val?^ | miss    %64.0 = LdVar              eR    is, e0.2
  lgl$#-          %64.1 = Identical                %64.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %64.1 -> BB220 (if true) | BB221 (if false)
BB90   <- [89, 96]
  val?            %90.0 = Phi                      %96.2:BB96, %89.1:BB89
  val?            %90.1 = %90.0
  val?            %90.2 = Extract1_1D        !v    %88.1, %90.1, e0.2   <val?_>
  void                    StVar              lW    funs, %90.2, e0.2
  val?^ | miss    %90.4 = LdVar              eR    fdefs, e0.2
  val?            %90.5 = Force!             !v    %90.4, e0.2   <val?_>
  lgl$#-          %90.6 = IsType                   %90.5 isA val+   <@?>
  void                    Branch                   %90.6 -> BB95 (if true) | BB91 (if false)
BB222   <- [84]
  val?~- | miss   %222.0 = CastType           d     dn %84.0
  void                    Visible            v     
  val?-           %222.2 = Force!<value>            %222.0,    <vec->
  val?-           %222.3 = %222.2
  goto BB87
BB223   <- [84]
  fs              %223.0 = FrameState         R     0x5638bd245d50+3863: [], env=e0.2
  void                    Deopt              !v    %223.0, Typecheck@0x5638bd49a568[Type#191], %84.0   !
BB220   <- [64]
  prom-           %220.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p16 (!refl), e0.2
  val?            %220.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%220.0, "genericFunction") e0.2   <lgl$->
  lgl$#-          %220.2 = IsType                   %220.1 isA lgl$-
  void                    Branch                   %220.2 -> BB224 (if true) | BB225 (if false)
BB221   <- [64]
  fs              %221.0 = FrameState         R     0x5638bd245d50+2767: [%172.2, %172.3, %54.2], env=e0.2
  void                    Deopt              !v    %221.0, CallTarget@0x5638bd49a568[Call#45], %64.0   !
BB95   <- [90]
  val?^ | miss    %95.0 = LdVar              eR    reset, e0.2
  val?            %95.1 = Force!             !v    %95.0, e0.2   <val?_>
  val?            %95.2 = %95.1
  goto BB92
BB91   <- [90]
  prom-           %91.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p20, e0.2
  prom-           %91.1 = %91.0
  goto BB92
BB224   <- [220]
  lgl$-           %224.0 = CastType           d     dn %220.1
  lgl$-           %224.1 = Not                d     %224.0, elided
  lgl$#-          %224.2 = CheckTrueFalse     e     %224.1
  void                    Branch                   %224.2 -> BB74 (if true) | BB67 (if false)
BB225   <- [220]
  void                    Nop                !     
  val?            %225.1 = %220.1
  dr              %225.2 = Typecheck@0x5638bd49a568[Type#140]
  goto BB65
BB92   <- [91, 95]
  val?            %92.0 = Phi                      %95.2:BB95, %91.1:BB91
  val?            %92.1 = %92.0
  val?            %92.2 = Extract1_1D        !v    %90.5, %92.1, e0.2   <val?_>
  void                    StVar              lW    fdefs, %92.2, e0.2
  val             %92.4 = ChkMissing         e     %92.2
  val?+           %92.5 = ToForSeq           e     %92.2
  int$-           %92.6 = Length                   %92.5
  lgl$-           %92.7 = Lt                 d     %92.6, %114.1, elided   <@?>
  lgl$#-          %92.8 = Identical                %92.7, true
  void                    Branch                   %92.8 -> BB94 (if true) | BB93 (if false)
BB74   <- [224]
  (cls|spec|blt)  %74.0 = LdFun              !v    warning, e0.2
  fs              %74.1 = FrameState         R     0x5638bd245d50+3125: [%172.2, %172.3, %54.2, %74.0], env=e0.2
  void                    Deopt              !v    %74.1, DeadCall@0x5638bd49a568[Call#50], %74.0   !
BB67   <- [224]
  val?^ | miss    %67.0 = LdVar              eR    environment, e0.2
  lgl$#-          %67.1 = Identical                %67.0, function(fun=NULL) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %67.1 -> BB226 (if true) | BB227 (if false)
BB65   <- [225, 227]
  val?^ | miss    %65.0 = Phi                      %225.1:BB225, %227.1:BB227
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %225.2:BB225, %227.2:BB227
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x5638bd245d50+2844: [%172.2, %172.3, %54.2, %220.1], env=e0.2
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB94   <- [92]
  void                    Nop                !     
  goto BB84
BB93   <- [92]
  val?            %93.0 = Extract2_1D        wed   %92.5, %114.1, elided
  void                    StVar              lW    fdef, %93.0, e0.2
  (cls|spec|blt)  %93.2 = LdFun              !v    .resetSigLength, e0.2
  fs              %93.3 = FrameState         R     0x5638bd245d50+3753: [%92.5, %92.6, %114.1, %93.2], env=e0.2
  void                    Deopt              !v    %93.3, DeadCall@0x5638bd49a568[Call#59], %93.2   !
BB226   <- [67]
  val?^ | miss    %226.0 = LdVar              eR    fdef, e0.2
  val?            %226.1 = Force!<value>      !v    %226.0, e0.2   <cls>
  prom-           %226.2 = MkArg                    %226.1, .checkGroupSigLength[0x5638bcf0c720]_p17 (!refl), 
  val?            %226.3 = StaticCall         !v    environment[0x5638bd5b06f0](%226.2) e0.2   <env->
  void                    StVar              lW    ev, %226.3, e0.2
  (cls|spec|blt)  %226.5 = LdFun              !v    $, <0x5638b9a6cc10>, e0.2
  prom-           %226.6 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p18, e0.2
  prom-           %226.7 = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p19, e0.2
  val?            %226.8 = Call               !v    %226.5(%226.6, %226.7) e0.2   <real$->
  lgl$-           %226.9 = Is                       %226.8, NULL
  lgl$#-          %226.10 = IsType                   %226.8 isA real$-
  void                    Branch                   %226.10 -> BB228 (if true) | BB229 (if false)
BB227   <- [67]
  void                    Nop                !     
  val?^ | miss    %227.1 = %67.0
  dr              %227.2 = CallTarget@0x5638bd49a568[Call#46]
  goto BB65
BB228   <- [226]
  real$-          %228.0 = CastType           d     dn %226.8
  void                    StVar              lW    sigl, %228.0, e0.2
  lgl$#-          %228.2 = CheckTrueFalse     e     %226.9
  void                    Branch                   %228.2 -> BB73 (if true) | BB72 (if false)
BB229   <- [226]
  fs              %229.0 = FrameState         R     0x5638bd245d50+2939: [%172.2, %172.3, %54.2, %226.8], env=e0.2
  void                    Deopt              !v    %229.0, Typecheck@0x5638bd49a568[Type#145], %226.8   !
BB73   <- [228]
  (cls|spec|blt)  %73.0 = LdFun              !v    .setupMethodsTables, e0.2
  fs              %73.1 = FrameState         R     0x5638bd245d50+2976: [%172.2, %172.3, %54.2, %73.0], env=e0.2
  void                    Deopt              !v    %73.1, DeadCall@0x5638bd49a568[Call#48], %73.0   !
BB72   <- [228]
  val?^ | miss    %72.0 = LdVar              eR    sigs !upd, e0.2
  lgl$#-          %72.1 = IsType                   %72.0 isA real-
  void                    Branch                   %72.1 -> BB230 (if true) | BB231 (if false)
BB230   <- [72]
  real-           %230.0 = CastType           d     dn %72.0
  val?^ | miss    %230.1 = LdVar              eR    i, e0.2
  lgl$#-          %230.2 = IsType                   %230.1 isA int$-
  void                    Branch                   %230.2 -> BB232 (if true) | BB233 (if false)
BB231   <- [72]
  void                    Nop                !     
  val?^ | miss    %231.1 = %72.0
  dr              %231.2 = Typecheck@0x5638bd49a568[Type#150]
  goto BB70
BB232   <- [230]
  int$-           %232.0 = CastType           d     dn %230.1
  real-           %232.1 = Subassign1_1D      wed   %228.0, %230.0, %232.0, elided
  void                    StVar              lW    sigs, %232.1, e0.2
  int$-           %232.3 = %54.2
  goto BB54
BB233   <- [230]
  void                    Nop                !     
  val?^ | miss    %233.1 = %230.1
  dr              %233.2 = Typecheck@0x5638bd49a568[Type#151]
  goto BB70
BB70   <- [231, 233]
  val?^ | miss    %70.0 = Phi                      %231.1:BB231, %233.1:BB233
  val?^ | miss    %70.1 = %70.0
  dr              %70.2 = Phi                      %231.2:BB231, %233.2:BB233
  dr              %70.3 = %70.2
  fs              %70.4 = FrameState         R     0x5638bd245d50+2955: [%172.2, %172.3, %54.2, %228.0], env=e0.2
  void                    Deopt              !v    %70.4, %70.3, %70.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    .checkGroupSigLength@Prom(9)0, e0.0
  void                    Return             l     %0.1
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .SigLength, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .SigLength, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    reset, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    reset, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     unlist, <0x5638b9d83508>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p23, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, false) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     unlist, <0x5638b9d83508>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p25, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, false) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generics, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5638b9a6cbd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p29, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .checkGroupSigLength[0x5638bcf0c720]_p30, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec$->
  void                    Return             l     %0.4
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    getGeneric, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     Recall, e0.0
  (miss|dots)     %0.2  = LdDots             R     , e0.0
  *dots-          %0.3  = ExpandDots               %0.2
  val?            %0.4  = NamedCall          !     %0.1(.xpandDotsTrigger=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4

│ .checkGroupSigLength[0x5638bcf0c720]                                         │
└──────────────────────────────────────────────────────────────────────────────┘
