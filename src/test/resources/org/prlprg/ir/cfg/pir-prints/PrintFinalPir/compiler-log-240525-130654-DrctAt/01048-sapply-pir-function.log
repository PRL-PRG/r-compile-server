
┌──────────────────────────────────────────────────────────────────────────────┐
│ sapply[0x5638bd72b0a0]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 3              │
│ Properties:                                                                  │
├────── Final PIR Version
sapply[0x5638bd72b0a0]
BB0
  val?~           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     X=%0.1, FUN=%0.0, ...(miss)=missingArg, simplify(miss)=true, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %0.3  = MkArg                    unboundValue, sapply[0x5638bd72b0a0]_p2 (!refl), e0.2
  val?            %0.4  = StaticCall         !v    match.fun[0x5638bccd4b10](%0.3) e0.2   <cls->
  void                    StVar              lW    FUN, %0.4, e0.2
  val?^ | miss    %0.6  = LdVar              eR    lapply, e0.2
  lgl$#-          %0.7  = Identical                %0.6, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %0.7 -> BB36 (if true) | BB37 (if false)
BB36   <- [0]
  prom-           %36.0 = MkArg                    unboundValue, sapply[0x5638bd72b0a0]_p3, e0.2
  prom-           %36.1 = MkArg                    unboundValue, sapply[0x5638bd72b0a0]_p4 (!refl), e0.2
  (miss|dots)     %36.2 = LdDots             R     , e0.2
  *dots-          %36.3 = ExpandDots               %36.2
  val?            %36.4 = NamedCall          !v    function(X, FUN, ...) <(rir::DispatchTable*)0x|...(X=%36.0, FUN=%36.1, .xpandDotsTrigger=%36.3) e0.2   <vec->
  void                    StVar              lW    answer, %36.4, e0.2
  val?^ | miss    %36.6 = LdVar              eR    USE.NAMES, e0.2
  val?            %36.7 = Force!<lazy>       !v    %36.6, e0.2   <lgl$->
  lgl$-           %36.8 = AsLogical          e     %36.7
  lgl$#-          %36.9 = Identical                %36.8, false
  void                    Branch                   %36.9 -> BB34 (if true) | BB5 (if false)
BB37   <- [0]
  fs              %37.0 = FrameState         R     0x5638c03680d0+46: [], env=e0.2
  void                    Deopt              !v    %37.0, CallTarget@0x5638be6f8ef0[Call#1], %0.6   !
BB34   <- [36]
  void                    Nop                !     
  lgl$-           %34.1 = %36.8
  goto BB6
BB5   <- [36]
  val?^ | miss    %5.0  = LdVar              eR    is.character, e0.2
  lgl$#-          %5.1  = Identical                <blt is.character>, %5.0   <true>
  void                    Branch                   %5.1 -> BB38 (if true) | BB39 (if false)
BB6   <- [34, 38]
  lgl$-           %6.0  = Phi                      %38.4:BB38, %34.1:BB34
  lgl$-           %6.1  = %6.0
  lgl$-           %6.2  = AsLogical                %6.1
  lgl$#-          %6.3  = Identical                %6.2, false
  void                    Branch                   %6.3 -> BB33 (if true) | BB7 (if false)
BB38   <- [5]
  val?^ | miss    %38.0 = LdVar              eR    X, e0.2
  val?            %38.1 = Force!<wrapped>    !v    %38.0, e0.2   <vec->
  lgl$#-          %38.2 = CallSafeBuiltin    wed   is.character(%38.1)    <lgl$->
  lgl$-           %38.3 = LAnd                     %36.8, %38.2
  lgl$-           %38.4 = %38.3
  goto BB6
BB39   <- [5]
  fs              %39.0 = FrameState         R     0x5638c03680d0+123: [%36.7], env=e0.2
  void                    Deopt              !v    %39.0, DeadBranchReached@0x5638be6f8ef0[Test#0], %5.1   !
BB33   <- [6]
  void                    Nop                !     
  lgl$-           %33.1 = %6.2
  goto BB12
BB7   <- [6]
  val?^ | miss    %7.0  = LdVar              eR    names, e0.2
  lgl$#-          %7.1  = Identical                <blt names>, %7.0   <@?>
  void                    Branch                   %7.1 -> BB9 (if true) | BB8 (if false)
BB12   <- [33, 40]
  lgl$-           %12.0 = Phi                      %40.5:BB40, %33.1:BB33
  lgl$-           %12.1 = %12.0
  lgl$#-          %12.2 = CheckTrueFalse     e     %12.1
  void                    Branch                   %12.2 -> BB32 (if true) | BB15 (if false)
BB9   <- [7]
  val?^ | miss    %9.0  = LdVar              eR    answer, e0.2
  val?            %9.1  = Force!             !v    %9.0, e0.2   <val?_>
  lgl$#-          %9.2  = IsType                   %9.1 isA val?+
  void                    Branch                   %9.2 -> BB40 (if true) | BB41 (if false)
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    names, e0.2
  fs              %8.1  = FrameState         R     0x5638c03680d0+268: [%6.2, %8.0], env=e0.2
  void                    Deopt              !v    %8.1, DeadCall@0x5638be6f8ef0[Call#3], %8.0   !
BB32   <- [12]
  val?^ | miss    %32.0 = LdVar              eR    X, e0.2
  val?            %32.1 = Force!             !v    %32.0, e0.2   <val?_>
  (cls|spec|blt)  %32.2 = LdFun              !v    names<-, e0.2
  fs              %32.3 = FrameState         R     0x5638c03680d0+373: [%32.1, %32.2], env=e0.2
  void                    Deopt              !v    %32.3, DeadCall@0x5638be6f8ef0[Call#4], %32.2   !
BB15   <- [12]
  val?^ | miss    %15.0 = LdVar              eR    isFALSE, e0.2
  lgl$#-          %15.1 = Identical                %15.0, function(x) <(rir::DispatchTable*)0x5638bd4364|...
  void                    Branch                   %15.1 -> BB42 (if true) | BB43 (if false)
BB40   <- [9]
  val?+           %40.0 = CastType           d     dn %9.1   <val?_>
  val+            %40.1 = CallSafeBuiltin    wed   names(%40.0)    <val?_>
  lgl$-           %40.2 = Is                       %40.1, NULL
  lgl$-           %40.3 = AsLogical                %40.2
  lgl$-           %40.4 = LAnd                     %6.2, %40.3
  lgl$-           %40.5 = %40.4
  goto BB12
BB41   <- [9]
  fs              %41.0 = FrameState         R     0x5638c03680d0+309: [%6.2, <blt names>, %9.1], env=e0.2
  void                    Deopt              !v    %41.0, Typecheck@0x5638be6f8ef0[Type#10], %9.1   !
BB42   <- [15]
  val?^ | miss    %42.0 = LdVar              eR    simplify, e0.2
  val?            %42.1 = Force!<lazy>       !v    %42.0, e0.2   <lgl$->
  prom-           %42.2 = MkArg                    %42.1, sapply[0x5638bd72b0a0]_p5 (!refl), e0.2
  val?~           %42.3 = CastType                 up %42.2
  val+            %42.4 = CallSafeBuiltin    vwed  is.logical(%42.1)    <lgl$->
  lgl$#-          %42.5 = IsType                   %42.4 isA lgl$-
  void                    Branch                   %42.5 -> BB44 (if true) | BB45 (if false)
BB43   <- [15]
  fs              %43.0 = FrameState         R     0x5638c03680d0+343: [%12.1], env=e0.2
  void                    Deopt              !v    %43.0, CallTarget@0x5638be6f8ef0[Call#5], %15.0   !
BB44   <- [42]
  lgl$-           %44.0 = CastType           d     dn %42.4
  lgl$-           %44.1 = AsLogical                %44.0
  lgl$#-          %44.2 = Identical                %44.1, false
  env             e44.3 = (MkEnv)            l     x=%42.3, parent=R_BaseNamespace, context 0
  void                    Branch                   %44.2 -> BB31 (if true) | BB18 (if false)
BB45   <- [42]
  void                    Nop                !     
  val+            %45.1 = %42.4
  dr              %45.2 = Typecheck@0x5638bd877fa8[Type#2]
  goto BB16
BB31   <- [44]
  void                    Nop                !     
  lgl$-           %31.1 = %44.1
  goto BB19
BB18   <- [44]
  val?^ | miss    %18.0 = LdVar              eRd   length, R_BaseNamespace
  lgl$#-          %18.1 = Identical                <blt length>, %18.0   <true>
  void                    Branch                   %18.1 -> BB48 (if true) | BB49 (if false)
BB16   <- [45, 47, 49, 51, 53]
  val?^ | miss    %16.0 = Phi                      %45.1:BB45, %47.1:BB47, %49.1:BB49, %51.1:BB51, %53.1:BB53
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %45.2:BB45, %47.2:BB47, %49.2:BB49, %51.2:BB51, %53.2:BB53
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x5638c03680d0+468: [], env=e0.2
  env             e16.5 = (MkEnv)            l     x=%42.3, parent=R_BaseNamespace, context 0
  fs              %16.6 = FrameState         R     0x5638bbc33540+91: [%42.4], env=e16.5, next=%16.4
  void                    Deopt              !v    %16.6, %16.3, %16.1   !
BB19   <- [31, 50]
  lgl$-           %19.0 = Phi                      %50.2:BB50, %31.1:BB31
  lgl$-           %19.1 = %19.0
  lgl$-           %19.2 = AsLogical                %19.1
  lgl$#-          %19.3 = Identical                %19.2, false
  void                    Branch                   %19.3 -> BB30 (if true) | BB20 (if false)
BB48   <- [18]
  lgl$#-          %48.0 = IsType                   %42.1 isA lgl$-
  void                    Branch                   %48.0 -> BB50 (if true) | BB51 (if false)
BB49   <- [18]
  void                    Nop                !     
  lgl$#-          %49.1 = %18.1
  dr              %49.2 = DeadBranchReached@0x5638bd877fa8[Test#1]
  goto BB16
BB30   <- [19]
  void                    Nop                !     
  lgl$-           %30.1 = %19.2
  goto BB21
BB20   <- [19]
  val?^ | miss    %20.0 = LdVar              eRd   is.na, R_BaseNamespace
  lgl$#-          %20.1 = Identical                <blt is.na>, %20.0   <true>
  void                    Branch                   %20.1 -> BB46 (if true) | BB47 (if false)
BB50   <- [48]
  void                    Visible            v     
  lgl$-           %50.1 = AsLogical                %44.1
  lgl$-           %50.2 = %50.1
  goto BB19
BB51   <- [48]
  void                    Nop                !     
  val?            %51.1 = %42.1
  dr              %51.2 = Typecheck@0x5638bd877fa8[Type#4]
  goto BB16
BB21   <- [30, 52]
  lgl$-           %21.0 = Phi                      %52.5:BB52, %30.1:BB30
  lgl$-           %21.1 = %21.0
  lgl$-           %21.2 = AsLogical                %21.1
  lgl$#-          %21.3 = Identical                %21.2, false
  void                    Branch                   %21.3 -> BB29 (if true) | BB24 (if false)
BB46   <- [20]
  lgl$#-          %46.0 = IsType                   %42.1 isA lgl$-
  void                    Branch                   %46.0 -> BB52 (if true) | BB53 (if false)
BB47   <- [20]
  void                    Nop                !     
  lgl$#-          %47.1 = %20.1
  dr              %47.2 = DeadBranchReached@0x5638bd877fa8[Test#2]
  goto BB16
BB29   <- [21]
  void                    Nop                !     
  lgl$-           %29.1 = %21.2
  goto BB25
BB24   <- [21]
  void                    Visible            v     
  lgl$#-          %24.1 = IsType                   %42.1 isA lgl$-
  void                    Branch                   %24.1 -> BB54 (if true) | BB55 (if false)
BB52   <- [46]
  lgl$-           %52.0 = CastType           d     dn %42.1
  lgl$-           %52.1 = CallSafeBuiltin    vwed  is.na(%52.0)    <lgl$->
  lgl$-           %52.2 = Not                vd    %52.1, elided
  lgl$-           %52.3 = AsLogical                %52.2
  lgl$-           %52.4 = LAnd                     %19.2, %52.3
  lgl$-           %52.5 = %52.4
  goto BB21
BB53   <- [46]
  void                    Nop                !     
  val?            %53.1 = %42.1
  dr              %53.2 = Typecheck@0x5638bd877fa8[Type#8]
  goto BB16
BB25   <- [29, 54]
  lgl$-           %25.0 = Phi                      %54.4:BB54, %29.1:BB29
  lgl$-           %25.1 = %25.0
  lgl$-           %25.2 = Not                vd    %25.1, elided
  lgl$#-          %25.3 = CheckTrueFalse     e     %25.2
  void                    Branch                   %25.3 -> BB28 (if true) | BB26 (if false)
BB54   <- [24]
  lgl$-           %54.0 = CastType           d     dn %42.1
  lgl$-           %54.1 = Not                vd    %54.0, elided
  lgl$-           %54.2 = AsLogical                %54.1
  lgl$-           %54.3 = LAnd                     %21.2, %54.2
  lgl$-           %54.4 = %54.3
  goto BB25
BB55   <- [24]
  fs              %55.0 = FrameState         R     0x5638c03680d0+468: [], env=e0.2
  fs              %55.1 = FrameState         R     0x5638bbc33540+319: [%21.1], env=e44.3, next=%55.0
  void                    Deopt              !v    %55.1, Typecheck@0x5638bd877fa8[Type#10], %42.1   !
BB28   <- [25]
  (cls|spec|blt)  %28.0 = LdFun              !     simplify2array, <0x5638bab26438>, e0.2
  prom-           %28.1 = MkArg                    unboundValue, sapply[0x5638bd72b0a0]_p6, e0.2
  prom-           %28.2 = MkArg                    unboundValue, sapply[0x5638bd72b0a0]_p7, e0.2
  val?            %28.3 = NamedCall          !     %28.0(%28.1, higher=%28.2) e0.2   <str->
  val?            %28.4 = %28.3
  goto BB27
BB26   <- [25]
  val?^ | miss    %26.0 = LdVar              eR    answer, e0.2
  void                    Visible            v     
  val?            %26.2 = Force!             !     %26.0, e0.2   <val?_>
  val?            %26.3 = %26.2
  goto BB27
BB27   <- [26, 28]
  val?            %27.0 = Phi                      %26.3:BB26, %28.4:BB28
  val?            %27.1 = %27.0
  void                    Return             l     %27.1
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simplify, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    answer, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simplify, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Eq                 !v    %0.2, "array", e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3

│ sapply[0x5638bd72b0a0]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
