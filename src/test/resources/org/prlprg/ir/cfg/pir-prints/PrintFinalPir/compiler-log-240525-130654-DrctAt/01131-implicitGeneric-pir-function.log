
┌──────────────────────────────────────────────────────────────────────────────┐
│ implicitGeneric[0x5638bbc3fb50]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
implicitGeneric[0x5638bbc3fb50]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     name=%0.1, where=%0.0, generic(miss)=missingArg, parent=<env 0x5638ba074378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p0, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    generic, %0.4, e0.2
  val?^ | miss    %0.6  = LdVar              eR    nzchar, <env 0x5638ba074378>
  lgl$#-          %0.7  = Identical                <blt nzchar>, %0.6   <true>
  void                    Branch                   %0.7 -> BB94 (if true) | BB95 (if false)
BB94   <- [0]
  val+            %94.0 = Force!<lazy>       !vr   %0.1,    <str$->
  val?            %94.1 = CallBuiltin        !v    nzchar(%94.0) e0.2   <lgl$->
  lgl$#-          %94.2 = IsType                   %94.1 isA lgl$-
  void                    Branch                   %94.2 -> BB96 (if true) | BB97 (if false)
BB95   <- [0]
  fs              %95.0 = FrameState         R     0x5638bfdadde0+0: [], env=e0.2
  void                    Deopt              !v    %95.0, DeadBranchReached@0x5638bc322b30[Test#0], %0.7
BB96   <- [94]
  lgl$-           %96.0 = CastType           d     dn %94.1
  lgl$-           %96.1 = Not                d     %96.0, elided
  lgl$#-          %96.2 = CheckTrueFalse     e     %96.1
  void                    Branch                   %96.2 -> BB92 (if true) | BB5 (if false)
BB97   <- [94]
  void                    Nop                !     
  val?            %97.1 = %94.1
  dr              %97.2 = Typecheck@0x5638bc322b30[Type#7]
  goto BB3
BB92   <- [96]
  (cls|spec|blt)  %92.0 = LdFun              !v    stop, e0.2
  fs              %92.1 = FrameState         R     0x5638bfdadde0+113: [%92.0], env=e0.2
  void                    Deopt              !v    %92.1, DeadCall@0x5638bc322b30[Call#4], %92.0   !
BB5   <- [96]
  lgl$-           %5.0  = Missing            eR    generic, e0.2
  lgl$-           %5.1  = Not                d     %5.0, elided
  lgl$-           %5.2  = AsLogical                %5.1
  lgl$#-          %5.3  = Identical                %5.2, false
  lgl$-           %5.4  = AsLogical                %5.2
  lgl$#-          %5.5  = Identical                %5.4, false
  void                    Branch                   %5.3 -> BB7 (if true) | BB6 (if false)
BB3   <- [97, 99]
  val?^ | miss    %3.0  = Phi                      %97.1:BB97, %99.1:BB99
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %97.2:BB97, %99.2:BB99
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5638bfdadde0+91: [%94.1], env=e0.2
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB7   <- [5]
  void                    Branch                   %5.5 -> BB9 (if true) | BB8 (if false)
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    is, e0.2
  fs              %6.1  = FrameState         R     0x5638bfdadde0+173: [%5.2, %6.0], env=e0.2
  void                    Deopt              !v    %6.1, DeadCall@0x5638bc322b30[Call#6], %6.0   !
BB9   <- [7]
  lgl$#-          %9.0  = CheckTrueFalse     e     %5.4
  void                    Branch                   %9.0 -> BB91 (if true) | BB10 (if false)
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    .identC, e0.2
  fs              %8.1  = FrameState         R     0x5638bfdadde0+224: [%5.4, %8.0], env=e0.2
  void                    Deopt              !v    %8.1, DeadCall@0x5638bc322b30[Call#7], %8.0   !
BB91   <- [9]
  (cls|spec|blt)  %91.0 = LdFun              !v    stop, e0.2
  fs              %91.1 = FrameState         R     0x5638bfdadde0+280: [%91.0], env=e0.2
  void                    Deopt              !v    %91.1, DeadCall@0x5638bc322b30[Call#9], %91.0   !
BB10   <- [9]
  lgl$-           %10.0 = Missing            eR    generic, e0.2
  lgl$-           %10.1 = AsLogical                %10.0
  lgl$#-          %10.2 = Identical                %10.1, true
  lgl$-           %10.3 = AsLogical                %10.1
  lgl$#-          %10.4 = Identical                %10.3, false
  void                    Branch                   %10.2 -> BB12 (if true) | BB11 (if false)
BB12   <- [10]
  void                    Branch                   %10.4 -> BB90 (if true) | BB13 (if false)
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    is, e0.2
  fs              %11.1 = FrameState         R     0x5638bfdadde0+339: [%10.1, %11.0], env=e0.2
  void                    Deopt              !v    %11.1, DeadCall@0x5638bc322b30[Call#12], %11.0   !
BB90   <- [12]
  void                    Nop                !     
  lgl$-           %90.1 = %10.3
  goto BB16
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    isGeneric, e0.2
  lgl$#-          %13.1 = Identical                %13.0, function(f, where=topenv(parent.frame()), fdef|...
  void                    Branch                   %13.1 -> BB98 (if true) | BB99 (if false)
BB16   <- [90, 100]
  lgl$-           %16.0 = Phi                      %100.4:BB100, %90.1:BB90
  lgl$-           %16.1 = %16.0
  void                    StVar              lW    createGeneric, %16.1, e0.2
  lgl$#-          %16.3 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.3 -> BB22 (if true) | BB19 (if false)
BB98   <- [13]
  prom-           %98.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p3, e0.2
  prom-           %98.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p4, e0.2
  val?            %98.2 = StaticCall         !v    isGeneric[0x5638beb34f60](%98.0, %98.1) e0.2   <lgl$->
  lgl$#-          %98.3 = IsType                   %98.2 isA lgl$-
  void                    Branch                   %98.3 -> BB100 (if true) | BB101 (if false)
BB99   <- [13]
  void                    Nop                !     
  val?^ | miss    %99.1 = %13.0
  dr              %99.2 = CallTarget@0x5638bc322b30[Call#13]
  goto BB3
BB22   <- [16]
  val?^ | miss    %22.0 = LdVar              eR    getFunction, e0.2
  lgl$#-          %22.1 = Identical                %22.0, function(name, generic=TRUE, mustFind=TRUE, wh|...
  void                    Branch                   %22.1 -> BB102 (if true) | BB103 (if false)
BB19   <- [16]
  void                    Nop                !     
  goto BB20
BB100   <- [98]
  lgl$-           %100.0 = CastType           d     dn %98.2
  lgl$-           %100.1 = Not                d     %100.0, elided
  lgl$-           %100.2 = AsLogical                %100.1
  lgl$-           %100.3 = LAnd                     %10.3, %100.2
  lgl$-           %100.4 = %100.3
  goto BB16
BB101   <- [98]
  fs              %101.0 = FrameState         R     0x5638bfdadde0+424: [%10.3, %98.2], env=e0.2
  void                    Deopt              !v    %101.0, Typecheck@0x5638bc322b30[Type#23], %98.2   !
BB102   <- [22]
  prom-           %102.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p5, e0.2
  prom-           %102.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p6, e0.2
  val?            %102.2 = StaticCall         !v    getFunction[0x5638bc0f95c0](%102.0, missingArg, false, %102.1) { 0 3n 2n } e0.2   <cls->
  lgl$-           %102.3 = Is                       %102.2, NULL
  void                    StVar              lW    fdefault, %102.2, e0.2
  val             %102.5 = ChkMissing         e     %102.2
  lgl$#-          %102.6 = CheckTrueFalse     e     %102.3
  void                    Branch                   %102.6 -> BB89 (if true) | BB25 (if false)
BB103   <- [22]
  fs              %103.0 = FrameState         R     0x5638bfdadde0+441: [], env=e0.2
  void                    Deopt              !v    %103.0, CallTarget@0x5638bc322b30[Call#14], %22.0   !
BB20   <- [19, 66, 164]
  val?^ | miss    %20.0 = LdVar              eR    generic, e0.2
  void                    Visible            v     
  val?            %20.2 = Force!<value>      !     %20.0, e0.2   <cls>
  val?            %20.3 = %20.2
  goto BB21
BB89   <- [102]
  void                    Visible            v     
  nil-            %89.1 = nil
  goto BB21
BB25   <- [102]
  val?^ | miss    %25.0 = LdVar              eR    environment, e0.2
  lgl$#-          %25.1 = Identical                %25.0, function(fun=NULL) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %25.1 -> BB104 (if true) | BB105 (if false)
BB21   <- [89, 20]
  val?            %21.0 = Phi                      %20.3:BB20, %89.1:BB89
  val?            %21.1 = %21.0
  void                    Return             l     %21.1
BB104   <- [25]
  prom-           %104.0 = MkArg                    %102.2, implicitGeneric[0x5638bbc3fb50]_p7 (!refl), 
  val?            %104.1 = StaticCall         !v    environment[0x5638c0c43610](%104.0) e0.2   <env->
  void                    StVar              lW    env, %104.1, e0.2
  val?^ | miss    %104.3 = LdVar              eR    .derivedDefaultMethod, e0.2
  lgl$#-          %104.4 = Identical                %104.3, function(fdef, internal=NULL) <(rir::DispatchT|...
  void                    Branch                   %104.4 -> BB106 (if true) | BB107 (if false)
BB105   <- [25]
  fs              %105.0 = FrameState         R     0x5638bfdadde0+534: [], env=e0.2
  void                    Deopt              !v    %105.0, CallTarget@0x5638bc322b30[Call#15], %25.0   !
BB106   <- [104]
  prom-           %106.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p8, e0.2
  val?            %106.1 = StaticCall         !v    .derivedDefaultMethod[0x5638bc245750](%106.0) e0.2   <cls>
  void                    StVar              lW    fdefault, %106.1, e0.2
  val?^ | miss    %106.3 = LdVar              eR    isBaseFun, e0.2
  lgl$#-          %106.4 = Identical                %106.3, function(fun) <(rir::DispatchTable*)0x5638ba4e|...
  void                    Branch                   %106.4 -> BB108 (if true) | BB109 (if false)
BB107   <- [104]
  fs              %107.0 = FrameState         R     0x5638bfdadde0+617: [], env=e0.2
  void                    Deopt              !v    %107.0, CallTarget@0x5638bc322b30[Call#16], %104.3   !
BB108   <- [106]
  prom-           %108.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p9 (!refl), e0.2
  val?            %108.1 = StaticCall         !v    isBaseFun[0x5638bd440070](%108.0) e0.2   <lgl$->
  lgl$#-          %108.2 = IsType                   %108.1 isA lgl$-
  void                    Branch                   %108.2 -> BB110 (if true) | BB111 (if false)
BB109   <- [106]
  fs              %109.0 = FrameState         R     0x5638bfdadde0+663: [], env=e0.2
  void                    Deopt              !v    %109.0, CallTarget@0x5638bc322b30[Call#17], %106.3   !
BB110   <- [108]
  lgl$-           %110.0 = CastType           d     dn %108.1
  lgl$#-          %110.1 = CheckTrueFalse     e     %110.0
  void                    Branch                   %110.1 -> BB80 (if true) | BB32 (if false)
BB111   <- [108]
  void                    Nop                !     
  val?            %111.1 = %108.1
  dr              %111.2 = Typecheck@0x5638bc322b30[Type#34]
  goto BB30
BB80   <- [110]
  val?^ | miss    %80.0 = LdVar              eR    genericForBasic, e0.2
  lgl$#-          %80.1 = Identical                %80.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %80.1 -> BB112 (if true) | BB113 (if false)
BB32   <- [110]
  val?^ | miss    %32.0 = LdVar              eR    getPackageName, e0.2
  lgl$#-          %32.1 = Identical                %32.0, function(where=topenv(parent.frame()), create=|...
  void                    Branch                   %32.1 -> BB118 (if true) | BB119 (if false)
BB30   <- [111, 113, 119]
  val?^ | miss    %30.0 = Phi                      %111.1:BB111, %113.1:BB113, %119.1:BB119
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %111.2:BB111, %113.2:BB113, %119.2:BB119
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x5638bfdadde0+695: [%108.1], env=e0.2
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB112   <- [80]
  prom-           %112.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p24, e0.2
  val?            %112.1 = StaticCall         !v    genericForBasic[0x5638c0135600](%112.0) e0.2   <nil->
  void                    StVar              lW    value, %112.1, e0.2
  lgl$#-          %112.3 = IsType                   %112.1 isA val?-
  val?^ | miss    %112.4 = LdVar              eR    is.function, e0.2
  lgl$#-          %112.5 = Identical                <blt is.function>, %112.4   <true>
  void                    Branch                   %112.5 -> BB114 (if true) | BB115 (if false)
BB113   <- [80]
  void                    Nop                !     
  val?^ | miss    %113.1 = %80.0
  dr              %113.2 = CallTarget@0x5638bc322b30[Call#19]
  goto BB30
BB118   <- [32]
  prom-           %118.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p10, e0.2
  val?            %118.1 = Call               !v    function(where=topenv(parent.frame()), create=|...(%118.0) e0.2   <str$->
  void                    StVar              lW    package, %118.1, e0.2
  goto BB33
BB119   <- [32]
  void                    Nop                !     
  val?^ | miss    %119.1 = %32.0
  dr              %119.2 = CallTarget@0x5638bc322b30[Call#18]
  goto BB30
BB114   <- [112]
  val             %114.0 = ChkMissing         e     %112.1
  void                    Branch                   %112.3 -> BB116 (if true) | BB117 (if false)
BB115   <- [112]
  void                    Nop                !     
  lgl$#-          %115.1 = %112.5
  dr              %115.2 = DeadBranchReached@0x5638bc322b30[Test#1]
  goto BB81
BB33   <- [83, 118]
  val?^ | miss    %33.0 = LdVar              eR    .getImplicitGroup, e0.2
  lgl$#-          %33.1 = Identical                %33.0, function(name, where) <(rir::DispatchTable*)0x|...
  void                    Branch                   %33.1 -> BB120 (if true) | BB121 (if false)
BB116   <- [114]
  val?-           %116.0 = CastType           d     dn %112.1   <nil->
  lgl$#-          %116.1 = CallSafeBuiltin    wed   is.function(%116.0)    <lgl$->
  void                    Branch                   %116.1 -> BB84 (if true) | BB83 (if false)
BB117   <- [114]
  void                    Nop                !     
  val?            %117.1 = %112.1
  dr              %117.2 = Typecheck@0x5638bc322b30[Type#38]
  goto BB81
BB81   <- [115, 117]
  val?^ | miss    %81.0 = Phi                      %115.1:BB115, %117.1:BB117
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %115.2:BB115, %117.2:BB117
  dr              %81.3 = %81.2
  fs              %81.4 = FrameState         R     0x5638bfdadde0+803: [], env=e0.2
  void                    Deopt              !v    %81.4, %81.3, %81.1   !
BB120   <- [33]
  prom-           %120.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p11, e0.2
  prom-           %120.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p12, e0.2
  val?^           %120.2 = CastType                 up %120.1
  val?^           %120.3 = CastType                 up %120.0
  val?^ | miss    %120.4 = LdVar              eR    identical, e0.2
  lgl$#-          %120.5 = Identical                %120.4, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %120.5 -> BB122 (if true) | BB123 (if false)
BB121   <- [33]
  void                    Nop                !     
  val?^ | miss    %121.1 = %33.0
  dr              %121.2 = CallTarget@0x5638bc322b30[Call#26]
  goto BB34
BB84   <- [116]
  lgl$-           %84.0 = Missing            eR    generic, e0.2
  lgl$-           %84.1 = Not                d     %84.0, elided
  lgl$-           %84.2 = AsLogical                %84.1
  lgl$#-          %84.3 = Identical                %84.2, false
  void                    Branch                   %84.3 -> BB86 (if true) | BB85 (if false)
BB83   <- [116]
  void                    StVar              lW    package, "base", e0.2
  goto BB33
BB122   <- [120]
  prom-           %122.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p13 (!refl), e0.2
  ct              %122.1 = PushContext        lCL   %122.0, "base", identical(package, "base"), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.2
  val?^           %122.2 = CastType                 up %122.0
  env             e122.3 = MkEnv              l     x=%122.2, y="base", num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  env             e122.4 = (MkEnv)            l     name=%120.3, where=%120.2, tbl=unboundValue, r=unboundValue, parent=<env 0x5638ba074378>, context 1
  val?            %122.5 = Force!<lazy>       !vrL  %122.2, e122.3   <val?>
  val?            %122.6 = CallBuiltin        !v    identical(%122.5, "base", true, true, true, true, false, true) e122.3
  val?            %122.7 = PopContext         C     %122.6, %122.1   <lgl$->
  lgl$#-          %122.8 = IsType                   %122.7 isA lgl$-
  void                    Branch                   %122.8 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?^ | miss    %123.1 = %120.4
  dr              %123.2 = CallTarget@0x5638bc322b30[Call#27]
  goto BB34
BB34   <- [121, 123]
  val?^ | miss    %34.0 = Phi                      %121.1:BB121, %123.1:BB123
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %121.2:BB121, %123.2:BB123
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x5638bfdadde0+1115: [], env=e0.2
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB86   <- [84]
  lgl$#-          %86.0 = CheckTrueFalse     e     %84.2
  void                    Branch                   %86.0 -> BB88 (if true) | BB87 (if false)
BB85   <- [84]
  (cls|spec|blt)  %85.0 = LdFun              !v    identical, e0.2
  fs              %85.1 = FrameState         R     0x5638bfdadde0+929: [%84.2, %85.0], env=e0.2
  void                    Deopt              !v    %85.1, DeadCall@0x5638bc322b30[Call#21], %85.0   !
BB124   <- [122]
  lgl$-           %124.0 = CastType           d     dn %122.7
  lgl$#-          %124.1 = CheckTrueFalse     e     %124.0
  void                    Branch                   %124.1 -> BB79 (if true) | BB38 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?            %125.1 = %122.7
  dr              %125.2 = Typecheck@0x5638bc322b30[Type#54]
  goto BB36
BB88   <- [86]
  (cls|spec|blt)  %88.0 = LdFun              !v    stop, e0.2
  fs              %88.1 = FrameState         R     0x5638bfdadde0+985: [%88.0], env=e0.2
  void                    Deopt              !v    %88.1, DeadCall@0x5638bc322b30[Call#22], %88.0   !
BB87   <- [86]
  void                    StVar              lW    generic, %116.0, e0.2
  (cls|spec|blt)  %87.1 = LdFun              !v    @, e0.2
  fs              %87.2 = FrameState         R     0x5638bfdadde0+1054: [%87.1], env=e0.2
  void                    Deopt              !v    %87.2, DeadCall@0x5638bc322b30[Call#25], %87.1   !
BB79   <- [124]
  val?^ | miss    %79.0 = LdVar              eR    .methodsNamespace, e0.2
  lgl$#-          %79.1 = IsType                   %79.0 isA val?~- | miss
  void                    Branch                   %79.1 -> BB128 (if true) | BB129 (if false)
BB38   <- [124]
  val?^ | miss    %38.0 = LdVar              eR    environment, e0.2
  lgl$#-          %38.1 = Identical                %38.0, function(fun=NULL) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %38.1 -> BB126 (if true) | BB127 (if false)
BB36   <- [125, 127, 129]
  val?^ | miss    %36.0 = Phi                      %125.1:BB125, %127.1:BB127, %129.1:BB129
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %125.2:BB125, %127.2:BB127, %129.2:BB129
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x5638bfdadde0+1152: [], env=e0.2
  fs              %36.5 = FrameState         R     0x5638bfc246a0+9: [], env=e122.4, next=%36.4
  fs              %36.6 = FrameState         R     0x5638bbc79de0+37(pr): [%122.7], env=e0.2, next=%36.5
  void                    Deopt              !v    %36.6, %36.3, %36.1   !
BB128   <- [79]
  val?~- | miss   %128.0 = CastType           d     dn %79.0
  val?-           %128.1 = Force!<value>            %128.0,    <env->
  val?-           %128.2 = %128.1
  goto BB39
BB129   <- [79]
  void                    Nop                !     
  val?^ | miss    %129.1 = %79.0
  dr              %129.2 = Typecheck@0x5638bc322b30[Type#57]
  goto BB36
BB126   <- [38]
  val?^ | miss    %126.0 = LdVar              eR    fdefault, e0.2
  val?            %126.1 = Force!<value>      !v    %126.0, e0.2   <cls>
  prom-           %126.2 = MkArg                    %126.1, implicitGeneric[0x5638bbc3fb50]_p14 (!refl), 
  val?            %126.3 = StaticCall         !v    environment[0x5638c0c43610](%126.2) from function(fun=NULL) <(rir::DispatchTable*)0x563|... { 0 } e0.2   <env->
  val?            %126.4 = %126.3
  goto BB39
BB127   <- [38]
  void                    Nop                !     
  val?^ | miss    %127.1 = %38.0
  dr              %127.2 = CallTarget@0x5638bc322b30[Call#28]
  goto BB36
BB39   <- [126, 128]
  val?            %39.0 = Phi                      %126.4:BB126, %128.2:BB128   <env->
  val?            %39.1 = %39.0
  lgl$#-          %39.2 = IsType                   %39.1 isA val+   <true>
  prom-           %39.3 = MkArg                    %39.1, implicitGeneric[0x5638bbc3fb50]_p12 (!refl), e0.2
  val?~           %39.4 = CastType                 up %39.3
  void                    StArg              lWd   where, %39.4, e122.4
  lgl$#-          %39.6 = IsEnvStub          R     , e122.4
  void                    Branch                   %39.6 -> BB130 (if true) | BB131 (if false)
BB130   <- [39]
  void                    Branch                   %39.2 -> BB132 (if true) | BB133 (if false)
BB131   <- [39]
  void                    Nop                !     
  env             e131.1 = e122.4
  dr              %131.2 = EnvStubMaterialized@0x5638c064cd98[Call#unknown]
  goto BB40
BB132   <- [130]
  val?^ | miss    %132.0 = LdVar              eRd   .ImplicitGroupMetaName, <env 0x5638ba074378>
  val?            %132.1 = Force!<wrapped>    !vL   %132.0, e122.4   <str$->
  lgl$#-          %132.2 = IsType                   %132.1 isA val?-
  lgl$#-          %132.3 = IsEnvStub          R     , e122.4
  void                    Branch                   %132.3 -> BB134 (if true) | BB135 (if false)
BB133   <- [130]
  void                    Nop                !     
  lgl$#-          %133.1 = %39.2
  dr              %133.2 = DeadBranchReached@0x5638c064cd98[Test#0]
  goto BB40
BB40   <- [131, 133]
  val?^ | miss    %40.0 = Phi                      e131.1:BB131, %133.1:BB133
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %131.2:BB131, %133.2:BB133
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x5638bfdadde0+1152: [], env=e0.2
  fs              %40.5 = FrameState         R     0x5638bfc246a0+9: [%39.1], env=e122.4, next=%40.4
  void                    Deopt              !v    %40.5, %40.3, %40.1   !
BB134   <- [132]
  lgl$#-          %134.0 = IsType                   %39.1 isA val?-
  void                    Branch                   %134.0 -> BB136 (if true) | BB137 (if false)
BB135   <- [132]
  void                    Nop                !     
  env             e135.1 = e122.4
  dr              %135.2 = EnvStubMaterialized@0x5638c064cd98[Call#unknown]
  goto BB42
BB136   <- [134]
  val?-           %136.0 = CastType           d     dn %39.1   <env->
  void                    Branch                   %132.2 -> BB138 (if true) | BB139 (if false)
BB137   <- [134]
  void                    Nop                !     
  val?            %137.1 = %39.1
  dr              %137.2 = Typecheck@0x5638c064cd98[Type#0]
  goto BB42
BB42   <- [135, 137, 139]
  val?            %42.0 = Phi                      e135.1:BB135, %137.1:BB137, %139.1:BB139
  val?            %42.1 = %42.0
  dr              %42.2 = Phi                      %135.2:BB135, %137.2:BB137, %139.2:BB139
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x5638bfdadde0+1152: [], env=e0.2
  fs              %42.5 = FrameState         R     0x5638bfc246a0+54: [%39.1, %132.1], env=e122.4, next=%42.4
  void                    Deopt              !v    %42.5, %42.3, %42.1   !
BB138   <- [136]
  val?-           %138.0 = CastType           d     dn %132.1   <str$->
  val?            %138.1 = Extract2_1D        wed   %136.0, %138.0, elided   <(nil|env)->
  lgl$-           %138.2 = Is                       %138.1, NULL
  void                    StVar              lWd   tbl, %138.1, e122.4
  lgl$-           %138.4 = Not                d     %138.2, elided
  lgl$#-          %138.5 = CheckTrueFalse     e     %138.4
  void                    Branch                   %138.5 -> BB74 (if true) | BB46 (if false)
BB139   <- [136]
  void                    Nop                !     
  val?            %139.1 = %132.1
  dr              %139.2 = Typecheck@0x5638c064cd98[Type#2]
  goto BB42
BB74   <- [138]
  val             %74.0 = ChkMissing         e     %138.1
  lgl$#-          %74.1 = IsType                   %138.1 isA val+   <true>
  void                    Branch                   %74.1 -> BB140 (if true) | BB141 (if false)
BB46   <- [138]
  void                    Nop                !     
  goto BB47
BB140   <- [74]
  val?            %140.0 = Force!<lazy>       !vL   %120.3, e122.4   <str$->
  lgl$#-          %140.1 = IsType                   %140.0 isA val?-
  lgl$#-          %140.2 = IsEnvStub          R     , e122.4
  void                    Branch                   %140.2 -> BB142 (if true) | BB143 (if false)
BB141   <- [74]
  fs              %141.0 = FrameState         R     0x5638bfdadde0+1152: [], env=e0.2
  fs              %141.1 = FrameState         R     0x5638bfc246a0+77: [%138.1], env=e122.4, next=%141.0
  void                    Deopt              !v    %141.1, DeadBranchReached@0x5638c064cd98[Test#1], %74.1   !
BB47   <- [46, 77]
  val?^ | miss    %47.0 = LdVar              eRd   list, <env 0x5638ba074378>
  lgl$#-          %47.1 = Identical                <blt list>, %47.0   <true>
  void                    Branch                   %47.1 -> BB144 (if true) | BB145 (if false)
BB142   <- [140]
  lgl$#-          %142.0 = IsType                   %138.1 isA val?-
  void                    Branch                   %142.0 -> BB146 (if true) | BB147 (if false)
BB143   <- [140]
  void                    Nop                !     
  env             e143.1 = e122.4
  dr              %143.2 = EnvStubMaterialized@0x5638c064cd98[Call#unknown]
  goto BB75
BB144   <- [47]
  void                    Nop                !     
  vec#-           %144.1 = list()
  goto BB50
BB145   <- [47]
  fs              %145.0 = FrameState         R     0x5638bfdadde0+1152: [], env=e0.2
  fs              %145.1 = FrameState         R     0x5638bfc246a0+203: [], env=e122.4, next=%145.0
  void                    Deopt              !v    %145.1, DeadBranchReached@0x5638c064cd98[Test#2], %47.1   !
BB146   <- [142]
  val?-           %146.0 = CastType           d     dn %138.1   <(nil|env)->
  void                    Branch                   %140.1 -> BB150 (if true) | BB151 (if false)
BB147   <- [142]
  void                    Nop                !     
  val?            %147.1 = %138.1
  dr              %147.2 = Typecheck@0x5638c064cd98[Type#3]
  goto BB75
BB75   <- [143, 147, 151]
  val?^ | miss    %75.0 = Phi                      e143.1:BB143, %147.1:BB147, %151.1:BB151
  val?^ | miss    %75.1 = %75.0
  dr              %75.2 = Phi                      %143.2:BB143, %147.2:BB147, %151.2:BB151
  dr              %75.3 = %75.2
  fs              %75.4 = FrameState         R     0x5638bfdadde0+1152: [], env=e0.2
  fs              %75.5 = FrameState         R     0x5638bfc246a0+148: [%138.1, %140.0], env=e122.4, next=%75.4
  void                    Deopt              !v    %75.5, %75.3, %75.1   !
BB50   <- [78, 144]
  val?            %50.0 = Phi                      %144.1:BB144, %78.1:BB78   <vec->
  val?            %50.1 = %50.0
  void                    StVar              lW    group, %50.1, e0.2
  lgl$-           %50.3 = Missing            eR    generic, e0.2
  lgl$#-          %50.4 = CheckTrueFalse     e     %50.3
  void                    Branch                   %50.4 -> BB54 (if true) | BB53 (if false)
BB150   <- [146]
  val?-           %150.0 = CastType           d     dn %140.0   <str$->
  val?            %150.1 = Extract2_1D        wed   %146.0, %150.0, elided   <nil->
  lgl$-           %150.2 = Is                       %150.1, NULL
  void                    StVar              lWd   r, %150.1, e122.4
  lgl$-           %150.4 = Not                d     %150.2, elided
  lgl$#-          %150.5 = CheckTrueFalse     e     %150.4
  void                    Branch                   %150.5 -> BB78 (if true) | BB77 (if false)
BB151   <- [146]
  void                    Nop                !     
  val?            %151.1 = %140.0
  dr              %151.2 = Typecheck@0x5638c064cd98[Type#6]
  goto BB75
BB54   <- [50]
  val?^ | miss    %54.0 = LdVar              eR    .getImplicitGeneric, e0.2
  lgl$#-          %54.1 = Identical                %54.0, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %54.1 -> BB148 (if true) | BB149 (if false)
BB53   <- [50]
  (cls|spec|blt)  %53.0 = LdFun              !v    makeGeneric, e0.2
  fs              %53.1 = FrameState         R     0x5638bfdadde0+1183: [%53.0], env=e0.2
  void                    Deopt              !v    %53.1, DeadCall@0x5638bc322b30[Call#29], %53.0   !
BB78   <- [150]
  val             %78.0 = ChkMissing         e     %150.1
  val?            %78.1 = %150.1
  goto BB50
BB77   <- [150]
  void                    Nop                !     
  goto BB47
BB148   <- [54]
  prom-           %148.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p15, e0.2
  prom-           %148.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p16, e0.2
  prom-           %148.2 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p17, e0.2
  ct              %148.3 = PushContext        lCL   %148.0, %148.1, %148.2, .getImplicitGeneric(name, env, package), function(name, where, pkg="") <(rir::DispatchT|..., e0.2
  val?^           %148.4 = CastType                 up %148.2
  val?^           %148.5 = CastType                 up %148.1
  val?^           %148.6 = CastType                 up %148.0
  val?^ | miss    %148.7 = LdVar              eR    .getImplicitGenericFromCache, <env 0x5638ba074378>
  lgl$#-          %148.8 = Identical                %148.7, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %148.8 -> BB152 (if true) | BB153 (if false)
BB149   <- [54]
  fs              %149.0 = FrameState         R     0x5638bfdadde0+1166: [], env=e0.2
  void                    Deopt              !v    %149.0, CallTarget@0x5638bc322b30[Call#31], %54.0   !
BB152   <- [148]
  env             e152.0 = MkEnv              l     name=%148.6, where=%148.5, pkg=%148.4, parent=<env 0x5638ba074378>, context 1
  prom-           %152.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p25, e152.0
  prom-           %152.2 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p26, e152.0
  prom-           %152.3 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p27, e152.0
  ct              %152.4 = PushContext        lCL   %152.1, %152.2, %152.3, .getImplicitGenericFromCache(name, where, pkg), function(name, where, pkg="") <(rir::DispatchT|..., e152.0
  val?^           %152.5 = CastType                 up %152.3
  val?^           %152.6 = CastType                 up %152.2
  val?^           %152.7 = CastType                 up %152.1
  val?^ | miss    %152.8 = LdVar              eR    .getGenericFromCacheTable, <env 0x5638ba074378>
  lgl$#-          %152.9 = Identical                %152.8, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %152.9 -> BB154 (if true) | BB155 (if false)
BB153   <- [148]
  fs              %153.0 = FrameState         R     0x5638bfdadde0+1349: [], env=e0.2
  env             e153.1 = (MkEnv)            l     name=%148.6, where=%148.5, pkg=%148.4, parent=<env 0x5638ba074378>, context 1
  fs              %153.2 = FrameState         R     0x5638b9c93fa0+0: [], env=e153.1, next=%153.0
  void                    Deopt              !v    %153.2, CallTarget@0x5638be60d620[Call#0], %148.7   !
BB154   <- [152]
  env             e154.0 = MkEnv              l     name=%152.7, where=%152.6, pkg=%152.5, parent=<env 0x5638ba074378>, context 1
  prom-           %154.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p31, e154.0
  prom-           %154.2 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p32, e154.0
  prom-           %154.3 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p33, e154.0
  prom-           %154.4 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p34, e154.0
  val?            %154.5 = StaticCall         !v    .getGenericFromCacheTable[0x5638c04ed560](%154.1, %154.2, %154.3, %154.4) e154.0   <(nil|cls)>
  val?            %154.6 = PopContext         C     %154.5, %152.4   <(nil|cls)>
  lgl$-           %154.7 = Is                       %154.6, NULL
  lgl$-           %154.8 = AsLogical                %154.7
  lgl$#-          %154.9 = Identical                %154.8, false
  void                    StVar              lW    value, %154.6, e152.0
  val             %154.11 = ChkMissing         e     %154.6
  void                    Branch                   %154.9 -> BB73 (if true) | BB59 (if false)
BB155   <- [152]
  fs              %155.0 = FrameState         R     0x5638bfdadde0+1349: [], env=e0.2
  fs              %155.1 = FrameState         R     0x5638b9c93fa0+42: [], env=e152.0, next=%155.0
  env             e155.2 = (MkEnv)            l     name=%152.7, where=%152.6, pkg=%152.5, parent=<env 0x5638ba074378>, context 1
  fs              %155.3 = FrameState         R     0x5638bdffbd00+0: [], env=e155.2, next=%155.1
  void                    Deopt              !v    %155.3, CallTarget@0x5638bcf191b0[Call#0], %152.8   !
BB73   <- [154]
  void                    Nop                !     
  lgl$-           %73.1 = %154.8
  goto BB64
BB59   <- [154]
  val?^ | miss    %59.0 = LdVar              eR    where, e152.0
  val?            %59.1 = Force!<lazy>       !v    %59.0, e152.0   <env->
  lgl$#-          %59.2 = IsType                   %59.1 isA val+   <true>
  void                    Branch                   %59.2 -> BB156 (if true) | BB157 (if false)
BB64   <- [73, 162]
  lgl$-           %64.0 = Phi                      %162.7:BB162, %73.1:BB73
  lgl$-           %64.1 = %64.0
  lgl$#-          %64.2 = CheckTrueFalse     e     %64.1
  void                    Branch                   %64.2 -> BB72 (if true) | BB65 (if false)
BB156   <- [59]
  val?^ | miss    %156.0 = LdVar              eR    .ImplicitGenericsMetaName, e152.0
  val?            %156.1 = Force!<wrapped>    !v    %156.0, e152.0   <str$->
  lgl$#-          %156.2 = IsType                   %156.1 isA val?-
  lgl$#-          %156.3 = IsType                   %59.1 isA val?-
  void                    Branch                   %156.3 -> BB158 (if true) | BB159 (if false)
BB157   <- [59]
  fs              %157.0 = FrameState         R     0x5638bfdadde0+1349: [], env=e0.2
  fs              %157.1 = FrameState         R     0x5638b9c93fa0+91: [%154.8, %59.1], env=e152.0, next=%157.0
  void                    Deopt              !v    %157.1, DeadBranchReached@0x5638be60d620[Test#0], %59.2   !
BB72   <- [64]
  fs              %72.0 = FrameState         R     0x5638bfdadde0+1349: [], env=e0.2
  (cls|spec|blt)  %72.1 = LdFun              !v    .getGenericFromCacheTable, e152.0
  fs              %72.2 = FrameState         R     0x5638b9c93fa0+197: [%72.1], env=e152.0, next=%72.0
  void                    Deopt              !v    %72.2, DeadCall@0x5638be60d620[Call#1], %72.1   !
BB65   <- [64]
  val?^ | miss    %65.0 = LdVar              eR    value, e152.0
  val?            %65.1 = Force!<value>      !v    %65.0, e152.0   <(nil|cls)>
  val?            %65.2 = PopContext         C     %65.1, %148.3   <(nil|cls)>
  lgl$-           %65.3 = Is                       %65.2, NULL
  void                    StVar              lW    generic, %65.2, e0.2
  val             %65.5 = ChkMissing         e     %65.2
  lgl$#-          %65.6 = CheckTrueFalse     e     %65.3
  void                    Branch                   %65.6 -> BB67 (if true) | BB66 (if false)
BB158   <- [156]
  val?-           %158.0 = CastType           d     dn %59.1   <env->
  void                    Branch                   %156.2 -> BB162 (if true) | BB163 (if false)
BB159   <- [156]
  void                    Nop                !     
  val?            %159.1 = %59.1
  dr              %159.2 = Typecheck@0x5638be60d620[Type#5]
  goto BB62
BB67   <- [65]
  (cls|spec|blt)  %67.0 = LdFun              !v    makeGeneric, <0x5638bf681ba0>, e0.2
  prom-           %67.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p18, e0.2
  prom-           %67.2 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p19, e0.2
  prom-           %67.3 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p20, e0.2
  prom-           %67.4 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p21, e0.2
  val?            %67.5 = NamedCall          !v    %67.0(%67.1, fdefault=%67.2, package=%67.3, group=%67.4) e0.2   <cls>
  void                    StVar              lW    generic, %67.5, e0.2
  val?^ | miss    %67.7 = LdVar              eR    .cacheImplicitGeneric, e0.2
  lgl$#-          %67.8 = Identical                %67.7, function(name, def) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %67.8 -> BB160 (if true) | BB161 (if false)
BB66   <- [65]
  void                    Nop                !     
  goto BB20
BB162   <- [158]
  val?-           %162.0 = CastType           d     dn %156.1   <str$->
  val?            %162.1 = Extract2_1D        wed   %158.0, %162.0, elided   <nil->
  lgl$-           %162.2 = Is                       %162.1, NULL
  void                    StVar              lW    tbl, %162.1, e152.0
  lgl$-           %162.4 = Not                d     %162.2, elided
  lgl$-           %162.5 = AsLogical                %162.4
  lgl$-           %162.6 = LAnd                     %154.8, %162.5
  lgl$-           %162.7 = %162.6
  goto BB64
BB163   <- [158]
  void                    Nop                !     
  val?            %163.1 = %156.1
  dr              %163.2 = Typecheck@0x5638be60d620[Type#7]
  goto BB62
BB62   <- [159, 163]
  val?^ | miss    %62.0 = Phi                      %159.1:BB159, %163.1:BB163
  val?^ | miss    %62.1 = %62.0
  dr              %62.2 = Phi                      %159.2:BB159, %163.2:BB163
  dr              %62.3 = %62.2
  fs              %62.4 = FrameState         R     0x5638bfdadde0+1349: [], env=e0.2
  fs              %62.5 = FrameState         R     0x5638b9c93fa0+136: [%154.8, %59.1, %156.1], env=e152.0, next=%62.4
  void                    Deopt              !v    %62.5, %62.3, %62.1   !
BB160   <- [67]
  prom-           %160.0 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p22, e0.2
  prom-           %160.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p23 (!refl), e0.2
  ct              %160.2 = PushContext        lCL   %160.0, %160.1, .cacheImplicitGeneric(name, generic), function(name, def) <(rir::DispatchTable*)0x56|..., e0.2
  val?^           %160.3 = CastType                 up %160.1
  val?^           %160.4 = CastType                 up %160.0
  val?^ | miss    %160.5 = LdVar              eR    .cacheGenericTable, <env 0x5638ba074378>
  lgl$#-          %160.6 = Identical                %160.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %160.6 -> BB164 (if true) | BB165 (if false)
BB161   <- [67]
  fs              %161.0 = FrameState         R     0x5638bfdadde0+1470: [], env=e0.2
  void                    Deopt              !v    %161.0, CallTarget@0x5638bc322b30[Call#33], %67.7   !
BB164   <- [160]
  env             e164.0 = MkEnv              l     name=%160.4, def=%160.3, parent=<env 0x5638ba074378>, context 1
  prom-           %164.1 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p28, e164.0
  prom-           %164.2 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p29, e164.0
  prom-           %164.3 = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p30, e164.0
  val?            %164.4 = StaticCall         !v    .cacheGenericTable[0x5638bf44ee90](%164.1, %164.2, %164.3) e164.0   <cls>
  val?            %164.5 = PopContext         C     %164.4, %160.2
  goto BB20
BB165   <- [160]
  fs              %165.0 = FrameState         R     0x5638bfdadde0+1507: [], env=e0.2
  env             e165.1 = (MkEnv)            l     name=%160.4, def=%160.3, parent=<env 0x5638ba074378>, context 1
  fs              %165.2 = FrameState         R     0x5638bb34d290+0: [], env=e165.1, next=%165.0
  void                    Deopt              !v    %165.2, CallTarget@0x5638c0188cd8[Call#0], %160.5   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getGeneric, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p2, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, where=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     identical, <0x5638b9d4f820>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "base") e0.0   <lgl$->
  lgl$#-          %0.4  = CheckTrueFalse     we    %0.3
  void                    Branch                   %0.4 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    .methodsNamespace, e0.0
  void                    Visible            v     
  val?            %2.2  = Force<value>       !     %2.0, e0.0   <env->
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  (cls|spec|blt)  %4.0  = LdFun              !     environment, <0x5638b9e13b68>, e0.0
  prom-           %4.1  = MkArg                    unboundValue, implicitGeneric[0x5638bbc3fb50]_p14, e0.0
  val?            %4.2  = Call               !     %4.0(%4.1) e0.0   <env->
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.3:BB4, %2.3:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .implicitTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .implicitTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ implicitGeneric[0x5638bbc3fb50]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
