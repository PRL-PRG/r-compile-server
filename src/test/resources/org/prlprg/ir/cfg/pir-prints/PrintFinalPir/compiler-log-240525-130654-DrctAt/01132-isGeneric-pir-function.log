
┌──────────────────────────────────────────────────────────────────────────────┐
│ isGeneric[0x5638beb34f60]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
isGeneric[0x5638beb34f60]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     f=%0.1, where=%0.0, fdef(miss)=nil, getName(miss)=false, parent=<env 0x5638ba074378>, context 1
  lgl$-           %0.3  = Missing            eR    where, e0.2
  lgl$-           %0.4  = AsLogical                %0.3
  lgl$-           %0.5  = AsLogical                %0.4
  lgl$#-          %0.6  = CheckTrueFalse     e     %0.5
  void                    Branch                   %0.6 -> BB37 (if true) | BB3 (if false)
BB37   <- [0]
  (cls|spec|blt)  %37.0 = LdFun              !v    .getGenericFromCache, <env 0x5638ba074378>
  fs              %37.1 = FrameState         R     0x5638bf40c550+50: [%37.0], env=e0.2
  void                    Deopt              !v    %37.1, DeadCall@0x5638bdd9f3a0[Call#2], %37.0
BB3   <- [0]
  val?^ | miss    %3.0  = LdVar              eR    getFunction, <env 0x5638ba074378>
  lgl$#-          %3.1  = Identical                %3.0, function(name, generic=TRUE, mustFind=TRUE, wh|...
  void                    Branch                   %3.1 -> BB39 (if true) | BB40 (if false)
BB39   <- [3]
  prom-           %39.0 = MkArg                    unboundValue, isGeneric[0x5638beb34f60]_p6, e0.2
  prom-           %39.1 = MkArg                    unboundValue, isGeneric[0x5638beb34f60]_p7, e0.2
  val?            %39.2 = StaticCall         !v    getFunction[0x5638bc0f95c0](%39.0, missingArg, false, %39.1) { 0 3n 2n } e0.2   <cls->
  void                    StVar              lW    fdef, %39.2, e0.2
  val             %39.4 = ChkMissing         e     %39.2   <cls->
  lgl$-           %39.5 = Is                       %39.4, NULL
  lgl$#-          %39.6 = CheckTrueFalse     e     %39.5
  void                    Branch                   %39.6 -> BB36 (if true) | BB6 (if false)
BB40   <- [3]
  env             e40.0 = (MkEnv)            l     f=%0.1, where=%0.0, fdef(miss)=nil, getName(miss)=false, parent=<env 0x5638ba074378>, context 1
  fs              %40.1 = FrameState         R     0x5638bf40c550+0: [], env=e40.0
  void                    Deopt              !v    %40.1, CallTarget@0x5638bdd9f3a0[Call#4], %3.0
BB36   <- [39]
  void                    Visible            v     
  lgl$#-          %36.1 = false
  goto BB14
BB6   <- [39]
  val?^ | miss    %6.0  = LdVar              eR    isBaseFun, e0.2
  lgl$#-          %6.1  = Identical                %6.0, function(fun) <(rir::DispatchTable*)0x5638ba4e|...
  void                    Branch                   %6.1 -> BB41 (if true) | BB42 (if false)
BB14   <- [13, 36, 26]
  lgl$#-          %14.0 = Phi                      %13.1:BB13, %26.1:BB26, %36.1:BB36
  lgl$#-          %14.1 = %14.0
  void                    Return             l     %14.1
BB41   <- [6]
  prom-           %41.0 = MkArg                    unboundValue, isGeneric[0x5638beb34f60]_p2 (!refl), e0.2
  val?            %41.1 = StaticCall         !v    isBaseFun[0x5638bd440070](%41.0) e0.2   <lgl$->
  lgl$#-          %41.2 = IsType                   %41.1 isA lgl$-
  void                    Branch                   %41.2 -> BB43 (if true) | BB44 (if false)
BB42   <- [6]
  fs              %42.0 = FrameState         R     0x5638bf40c550+299: [], env=e0.2
  void                    Deopt              !v    %42.0, CallTarget@0x5638bdd9f3a0[Call#5], %6.0   !
BB43   <- [41]
  lgl$-           %43.0 = CastType           d     dn %41.1
  lgl$#-          %43.1 = CheckTrueFalse     e     %43.0
  void                    Branch                   %43.1 -> BB15 (if true) | BB9 (if false)
BB44   <- [41]
  void                    Nop                !     
  val?            %44.1 = %41.1
  dr              %44.2 = Typecheck@0x5638bdd9f3a0[Type#17]
  goto BB7
BB15   <- [43]
  val?^ | miss    %15.0 = LdVar              eR    is.character, e0.2
  lgl$#-          %15.1 = Identical                <blt is.character>, %15.0   <true>
  void                    Branch                   %15.1 -> BB45 (if true) | BB46 (if false)
BB9   <- [43]
  val?^ | miss    %9.0  = LdVar              eR    is, e0.2
  lgl$#-          %9.1  = Identical                %9.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %9.1 -> BB47 (if true) | BB48 (if false)
BB7   <- [44, 46, 48]
  val?^ | miss    %7.0  = Phi                      %44.1:BB44, %46.1:BB46, %48.1:BB48
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %44.2:BB44, %46.2:BB46, %48.2:BB48
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x5638bf40c550+368: [%41.1], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB45   <- [15]
  val?^ | miss    %45.0 = LdVar              eR    f, e0.2
  val?            %45.1 = Force!<wrapped>    !v    %45.0, e0.2   <str$->
  lgl$#-          %45.2 = CallSafeBuiltin    wed   is.character(%45.1)    <lgl$->
  void                    Branch                   %45.2 -> BB33 (if true) | BB18 (if false)
BB46   <- [15]
  void                    Nop                !     
  lgl$#-          %46.1 = %15.1
  dr              %46.2 = DeadBranchReached@0x5638bdd9f3a0[Test#0]
  goto BB7
BB47   <- [9]
  prom-           %47.0 = MkArg                    unboundValue, isGeneric[0x5638beb34f60]_p3, e0.2
  val?            %47.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%47.0, "genericFunction") e0.2   <lgl$->
  lgl$#-          %47.2 = IsType                   %47.1 isA lgl$-
  void                    Branch                   %47.2 -> BB49 (if true) | BB50 (if false)
BB48   <- [9]
  void                    Nop                !     
  val?^ | miss    %48.1 = %9.0
  dr              %48.2 = CallTarget@0x5638bdd9f3a0[Call#16]
  goto BB7
BB33   <- [45]
  val?^ | miss    %33.0 = LdVar              eR    %in%, e0.2
  lgl$#-          %33.1 = Identical                %33.0, function(x, table) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %33.1 -> BB51 (if true) | BB52 (if false)
BB18   <- [45]
  void                    Nop                !     
  lgl$#-          %18.1 = %45.2
  goto BB19
BB49   <- [47]
  lgl$-           %49.0 = CastType           d     dn %47.1
  lgl$-           %49.1 = Not                d     %49.0, elided
  lgl$#-          %49.2 = CheckTrueFalse     e     %49.1
  void                    Branch                   %49.2 -> BB13 (if true) | BB12 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x5638bf40c550+972: [%47.1], env=e0.2
  void                    Deopt              !v    %50.0, Typecheck@0x5638bdd9f3a0[Type#39], %47.1   !
BB51   <- [33]
  val?^ | miss    %51.0 = LdVar              eR    f, e0.2
  val?            %51.1 = Force!<wrapped>    !v    %51.0, e0.2   <str$->
  prom-           %51.2 = MkArg                    %51.1, isGeneric[0x5638beb34f60]_p4 (!refl), 
  val?            %51.3 = StaticCall         !v    %in%[0x5638bd0073b0](%51.2, "as.double") e0.2   <lgl$->
  lgl$#-          %51.4 = IsType                   %51.3 isA lgl$-
  void                    Branch                   %51.4 -> BB53 (if true) | BB54 (if false)
BB52   <- [33]
  fs              %52.0 = FrameState         R     0x5638bf40c550+475: [%45.2], env=e0.2
  void                    Deopt              !v    %52.0, CallTarget@0x5638bdd9f3a0[Call#7], %33.0   !
BB19   <- [18, 53]
  lgl$-           %19.0 = Phi                      %53.3:BB53, %18.1:BB18
  lgl$-           %19.1 = %19.0
  lgl$#-          %19.2 = CheckTrueFalse     e     %19.1
  void                    Branch                   %19.2 -> BB32 (if true) | BB20 (if false)
BB13   <- [49]
  void                    Visible            v     
  lgl$#-          %13.1 = false
  goto BB14
BB12   <- [49]
  (cls|spec|blt)  %12.0 = LdFun              !v    @, e0.2
  fs              %12.1 = FrameState         R     0x5638bf40c550+1001: [%12.0], env=e0.2
  void                    Deopt              !v    %12.1, DeadCall@0x5638bdd9f3a0[Call#17], %12.0   !
BB53   <- [51]
  lgl$-           %53.0 = CastType           d     dn %51.3
  lgl$-           %53.1 = AsLogical                %53.0
  lgl$-           %53.2 = LAnd                     %45.2, %53.1
  lgl$-           %53.3 = %53.2
  goto BB19
BB54   <- [51]
  fs              %54.0 = FrameState         R     0x5638bf40c550+524: [%45.2, %51.3], env=e0.2
  void                    Deopt              !v    %54.0, Typecheck@0x5638bdd9f3a0[Type#22], %51.3   !
BB32   <- [19]
  void                    StVar              lW    f, "as.numeric", e0.2
  goto BB21
BB20   <- [19]
  void                    Nop                !     
  goto BB21
BB21   <- [20, 32]
  val?^ | miss    %21.0 = LdVar              eR    genericForBasic, e0.2
  lgl$#-          %21.1 = Identical                %21.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %21.1 -> BB55 (if true) | BB56 (if false)
BB55   <- [21]
  prom-           %55.0 = MkArg                    unboundValue, isGeneric[0x5638beb34f60]_p5, e0.2
  val?            %55.1 = StaticCall         !v    genericForBasic[0x5638be225490](%55.0, missingArg, false) { 0 2n } e0.2   <nil->
  void                    StVar              lW    gen, %55.1, e0.2
  lgl$#-          %55.3 = IsType                   %55.1 isA val?-
  val?^ | miss    %55.4 = LdVar              eR    is.function, e0.2
  lgl$#-          %55.5 = Identical                <blt is.function>, %55.4   <true>
  void                    Branch                   %55.5 -> BB57 (if true) | BB58 (if false)
BB56   <- [21]
  fs              %56.0 = FrameState         R     0x5638bf40c550+557: [], env=e0.2
  void                    Deopt              !v    %56.0, CallTarget@0x5638bdd9f3a0[Call#8], %21.0   !
BB57   <- [55]
  val             %57.0 = ChkMissing         e     %55.1
  void                    Branch                   %55.3 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  void                    Nop                !     
  lgl$#-          %58.1 = %55.5
  dr              %58.2 = DeadBranchReached@0x5638bdd9f3a0[Test#1]
  goto BB24
BB59   <- [57]
  val?-           %59.0 = CastType           d     dn %55.1   <nil->
  lgl$#-          %59.1 = CallSafeBuiltin    vwed  is.function(%59.0)    <lgl$->
  void                    Branch                   %59.1 -> BB27 (if true) | BB26 (if false)
BB60   <- [57]
  void                    Nop                !     
  val?            %60.1 = %55.1
  dr              %60.2 = Typecheck@0x5638bdd9f3a0[Type#24]
  goto BB24
BB24   <- [58, 60]
  val?^ | miss    %24.0 = Phi                      %58.1:BB58, %60.1:BB60
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %58.2:BB58, %60.2:BB60
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x5638bf40c550+616: [], env=e0.2
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB27   <- [59]
  val?^ | miss    %27.0 = LdVar              eR    length, e0.2
  lgl$#-          %27.1 = Identical                <blt length>, %27.0   <@?>
  void                    Branch                   %27.1 -> BB29 (if true) | BB28 (if false)
BB26   <- [59]
  void                    Nop                !     
  lgl$#-          %26.1 = %59.1
  goto BB14
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    names, e0.2
  lgl$#-          %29.1 = Identical                <blt names>, %29.0   <@?>
  void                    Branch                   %29.1 -> BB31 (if true) | BB30 (if false)
BB28   <- [27]
  (cls|spec|blt)  %28.0 = LdFun              !v    length, e0.2
  fs              %28.1 = FrameState         R     0x5638bf40c550+747: [%59.1, %28.0], env=e0.2
  void                    Deopt              !v    %28.1, DeadCall@0x5638bdd9f3a0[Call#10], %28.0   !
BB31   <- [29]
  (cls|spec|blt)  %31.0 = LdFun              !v    .getMethodsTable, e0.2
  fs              %31.1 = FrameState         R     0x5638bf40c550+844: [%59.1, <blt length>, <blt names>, %31.0], env=e0.2
  void                    Deopt              !v    %31.1, DeadCall@0x5638bdd9f3a0[Call#15], %31.0   !
BB30   <- [29]
  (cls|spec|blt)  %30.0 = LdFun              !v    names, e0.2
  fs              %30.1 = FrameState         R     0x5638bf40c550+807: [%59.1, <blt length>, %30.0], env=e0.2
  void                    Deopt              !v    %30.1, DeadCall@0x5638bdd9f3a0[Call#13], %30.0   !
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ isGeneric[0x5638beb34f60]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
