
┌──────────────────────────────────────────────────────────────────────────────┐
│ .mlistAddToTable[0x5638bc8cfd00]                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
.mlistAddToTable[0x5638bc8cfd00]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     generic=%0.1, mlist=%0.0, table(miss)=missingArg, add(miss)=missingArg, parent=<env 0x5638ba074378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p0, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    table, %0.4, e0.2
  void                    StArg              lW    add, true, e0.2
  val?^ | miss    %0.7  = LdVar              eR    environment, <env 0x5638ba074378>
  lgl$#-          %0.8  = Identical                %0.7, function(fun=NULL) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %0.8 -> BB22 (if true) | BB23 (if false)
BB22   <- [0]
  val?            %22.0 = Force!<lazy>       !v    %0.1, e0.2   <cls>
  prom-           %22.1 = MkArg                    %22.0, .mlistAddToTable[0x5638bc8cfd00]_p3 (!refl), 
  val?            %22.2 = StaticCall         !v    environment[0x5638ba5e82f0](%22.1) e0.2   <env->
  void                    StVar              lW    fenv, %22.2, e0.2
  (cls|spec|blt)  %22.4 = LdFun              !v    @, <0x5638b9a6cbd8>, e0.2
  prom-           %22.5 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p4, e0.2
  prom-           %22.6 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p5, e0.2
  val?            %22.7 = Call               !v    %22.4(%22.5, %22.6) e0.2   <str->
  void                    StVar              lW    signature, %22.7, e0.2
  val?^ | miss    %22.9 = LdVar              eR    exists, e0.2
  lgl$#-          %22.10 = Identical                %22.9, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %22.10 -> BB24 (if true) | BB25 (if false)
BB23   <- [0]
  fs              %23.0 = FrameState         R     0x5638c020ba20+0: [], env=e0.2
  void                    Deopt              !v    %23.0, CallTarget@0x5638ba266ac0[Call#1], %0.7
BB24   <- [22]
  prom-           %24.0 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p6, e0.2
  val?            %24.1 = StaticCall         !v    exists[0x5638bce3ead0](".SigLength", missingArg, %24.0, missingArg, missingArg, false) { 0 2n 5n } e0.2   <lgl$->
  lgl$#-          %24.2 = IsType                   %24.1 isA lgl$-
  void                    Branch                   %24.2 -> BB26 (if true) | BB27 (if false)
BB25   <- [22]
  fs              %25.0 = FrameState         R     0x5638c020ba20+97: [], env=e0.2
  void                    Deopt              !v    %25.0, CallTarget@0x5638ba266ac0[Call#3], %22.9   !
BB26   <- [24]
  lgl$-           %26.0 = CastType           d     dn %24.1
  lgl$-           %26.1 = Not                d     %26.0, elided
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB20 (if true) | BB7 (if false)
BB27   <- [24]
  void                    Nop                !     
  val?            %27.1 = %24.1
  dr              %27.2 = Typecheck@0x5638ba266ac0[Type#8]
  goto BB5
BB20   <- [26]
  (cls|spec|blt)  %20.0 = LdFun              !v    .setupMethodsTables, e0.2
  fs              %20.1 = FrameState         R     0x5638c020ba20+173: [%20.0], env=e0.2
  void                    Deopt              !v    %20.1, DeadCall@0x5638ba266ac0[Call#4], %20.0   !
BB7   <- [26]
  val?^ | miss    %7.0  = LdVar              eR    get, e0.2
  lgl$#-          %7.1  = Identical                %7.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %7.1 -> BB28 (if true) | BB29 (if false)
BB5   <- [27, 29]
  val?^ | miss    %5.0  = Phi                      %27.1:BB27, %29.1:BB29
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %27.2:BB27, %29.2:BB29
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x5638c020ba20+151: [%24.1], env=e0.2
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB28   <- [7]
  prom-           %28.0 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p7, e0.2
  val?            %28.1 = StaticCall         !v    get[0x5638bdd1e330](".SigLength", missingArg, %28.0, missingArg, false) { 0 2n 4n } e0.2   <real$->
  lgl$#-          %28.2 = IsType                   %28.1 isA real$-
  void                    Branch                   %28.2 -> BB30 (if true) | BB31 (if false)
BB29   <- [7]
  void                    Nop                !     
  val?^ | miss    %29.1 = %7.0
  dr              %29.2 = CallTarget@0x5638ba266ac0[Call#5]
  goto BB5
BB30   <- [28]
  real$-          %30.0 = CastType           d     dn %28.1
  void                    StVar              lW    n, %30.0, e0.2
  val?^ | miss    %30.2 = LdVar              eR    .storeMlist, e0.2
  lgl$#-          %30.3 = Identical                %30.2, function(table, sig, mlist, i, add, fenv) <(ri|...
  void                    Branch                   %30.3 -> BB32 (if true) | BB33 (if false)
BB31   <- [28]
  fs              %31.0 = FrameState         R     0x5638c020ba20+255: [%28.1], env=e0.2
  void                    Deopt              !v    %31.0, Typecheck@0x5638ba266ac0[Type#11], %28.1   !
BB32   <- [30]
  prom-           %32.0 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p8, e0.2
  prom-           %32.1 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p9, e0.2
  prom-           %32.2 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p11, e0.2
  prom-           %32.3 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p12, e0.2
  prom-           %32.4 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p13, e0.2
  val?            %32.5 = Call               !v    function(table, sig, mlist, i, add, fenv) <(ri|...(%32.0, %32.1, %32.2, 1, %32.3, %32.4) e0.2
  val?^ | miss    %32.6 = LdVar              eR    get, e0.2
  lgl$#-          %32.7 = Identical                %32.6, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %32.7 -> BB34 (if true) | BB35 (if false)
BB33   <- [30]
  fs              %33.0 = FrameState         R     0x5638c020ba20+269: [], env=e0.2
  void                    Deopt              !v    %33.0, CallTarget@0x5638ba266ac0[Call#6], %30.2   !
BB34   <- [32]
  prom-           %34.0 = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p14, e0.2
  val?            %34.1 = StaticCall         !v    get[0x5638bdd1e330](".SigLength", missingArg, %34.0, missingArg, false) { 0 2n 4n } e0.2   <real$->
  lgl$#-          %34.2 = IsType                   %34.1 isA real$-
  void                    Branch                   %34.2 -> BB36 (if true) | BB37 (if false)
BB35   <- [32]
  fs              %35.0 = FrameState         R     0x5638c020ba20+326: [%32.5], env=e0.2
  void                    Deopt              !v    %35.0, CallTarget@0x5638ba266ac0[Call#8], %32.6   !
BB36   <- [34]
  real$-          %36.0 = CastType           d     dn %34.1
  void                    StVar              lW    nNow, %36.0, e0.2
  val?^ | miss    %36.2 = LdVar              eR    n, e0.2
  lgl$#-          %36.3 = IsType                   %36.2 isA real$-
  void                    Branch                   %36.3 -> BB38 (if true) | BB39 (if false)
BB37   <- [34]
  fs              %37.0 = FrameState         R     0x5638c020ba20+381: [%34.1], env=e0.2
  void                    Deopt              !v    %37.0, Typecheck@0x5638ba266ac0[Type#19], %34.1   !
BB38   <- [36]
  real$-          %38.0 = CastType           d     dn %36.2
  lgl$-           %38.1 = Gt                 d     %36.0, %38.0, elided   <lgl$->
  lgl$#-          %38.2 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.2 -> BB19 (if true) | BB18 (if false)
BB39   <- [36]
  fs              %39.0 = FrameState         R     0x5638c020ba20+395: [], env=e0.2
  void                    Deopt              !v    %39.0, Typecheck@0x5638ba266ac0[Type#21], %36.2   !
BB19   <- [38]
  (cls|spec|blt)  %19.0 = LdFun              !v    length<-, e0.2
  fs              %19.1 = FrameState         R     0x5638c020ba20+459: [%36.0, %19.0], env=e0.2
  void                    Deopt              !v    %19.1, DeadCall@0x5638ba266ac0[Call#9], %19.0   !
BB18   <- [38]
  val?^ | miss    %18.0 = LdVar              eR    table, e0.2
  void                    Visible            v     
  val?            %18.2 = Force!<wrapped>    !     %18.0, e0.2   <env->
  void                    Return             l     %18.2
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     new.env, <0x5638b9b854c0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(true, %0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep, <0x5638b9a819b0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .mlistAddToTable[0x5638bc8cfd00]_p10, e0.0
  val?            %0.3  = Call               !     %0.1("ANY", %0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mlist, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    add, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .mlistAddToTable[0x5638bc8cfd00]                                             │
└──────────────────────────────────────────────────────────────────────────────┘
