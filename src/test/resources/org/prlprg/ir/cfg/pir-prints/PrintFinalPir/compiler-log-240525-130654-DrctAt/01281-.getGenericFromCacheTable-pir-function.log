
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getGenericFromCacheTable[0x5638bc9fe9f0]                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl2,!Obj0,!Obj2        │
│ Properties:                                                                  │
├────── Final PIR Version
.getGenericFromCacheTable[0x5638bc9fe9f0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    exists, <env 0x5638ba074378>
  lgl$#-          %0.5  = Identical                %0.4, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %0.5 -> BB38 (if true) | BB39 (if false)
BB38   <- [0]
  env             e38.0 = MkEnv              l     name=%0.3, where=%0.2, pkg=%0.1, table=%0.0, parent=<env 0x5638ba074378>, context 1
  prom-           %38.1 = MkArg                    unboundValue, .getGenericFromCacheTable[0x5638bc9fe9f0]_p0 (!refl), e38.0
  prom-           %38.2 = MkArg                    unboundValue, .getGenericFromCacheTable[0x5638bc9fe9f0]_p1, e38.0
  val?            %38.3 = StaticCall         !v    exists[0x5638bc63f7e0](%38.1, missingArg, %38.2, missingArg, missingArg, false) { 0 2n 5n } e38.0   <lgl$->
  lgl$#-          %38.4 = IsType                   %38.3 isA lgl$-
  void                    Branch                   %38.4 -> BB40 (if true) | BB41 (if false)
BB39   <- [0]
  env             e39.0 = (MkEnv)            l     name=%0.3, where=%0.2, pkg=%0.1, table=%0.0, parent=<env 0x5638ba074378>, context 1
  fs              %39.1 = FrameState         R     0x5638bc750c10+0: [], env=e39.0
  void                    Deopt              !v    %39.1, CallTarget@0x5638bc27b1a0[Call#0], %0.4
BB40   <- [38]
  lgl$-           %40.0 = CastType           d     dn %38.3
  lgl$#-          %40.1 = CheckTrueFalse     e     %40.0
  void                    Branch                   %40.1 -> BB7 (if true) | BB5 (if false)
BB41   <- [38]
  void                    Nop                !     
  val?            %41.1 = %38.3
  dr              %41.2 = Typecheck@0x5638bc27b1a0[Type#2]
  goto BB3
BB7   <- [40]
  val?^ | miss    %7.0  = LdVar              eR    get, e38.0
  lgl$#-          %7.1  = Identical                %7.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %7.1 -> BB42 (if true) | BB43 (if false)
BB5   <- [40]
  void                    Visible            v     
  nil-            %5.1  = nil
  goto BB6
BB3   <- [41, 43]
  val?^ | miss    %3.0  = Phi                      %41.1:BB41, %43.1:BB43
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %41.2:BB41, %43.2:BB43
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5638bc750c10+54: [%38.3], env=e38.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB42   <- [7]
  prom-           %42.0 = MkArg                    unboundValue, .getGenericFromCacheTable[0x5638bc9fe9f0]_p2, e38.0
  prom-           %42.1 = MkArg                    unboundValue, .getGenericFromCacheTable[0x5638bc9fe9f0]_p3, e38.0
  val?            %42.2 = StaticCall         !v    get[0x5638bbd73260](%42.0, missingArg, %42.1) { 0 2n } e38.0   <cls>
  lgl$-           %42.3 = Is                       %42.2, list
  void                    StVar              lW    value, %42.2, e38.0
  val             %42.5 = ChkMissing         e     %42.2
  lgl$#-          %42.6 = CheckTrueFalse     e     %42.3
  void                    Branch                   %42.6 -> BB21 (if true) | BB10 (if false)
BB43   <- [7]
  void                    Nop                !     
  val?^ | miss    %43.1 = %7.0
  dr              %43.2 = CallTarget@0x5638bc27b1a0[Call#1]
  goto BB3
BB6   <- [5, 18]
  val?            %6.0  = Phi                      %5.1:BB5, %18.2:BB18
  val?            %6.1  = %6.0
  void                    Return             l     %6.1
BB21   <- [42]
  val?^ | miss    %21.0 = LdVar              eR    nzchar, e38.0
  lgl$#-          %21.1 = Identical                <blt nzchar>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB10   <- [42]
  val?^ | miss    %10.0 = LdVar              eR    nzchar, e38.0
  lgl$#-          %10.1 = Identical                <blt nzchar>, %10.0   <true>
  void                    Branch                   %10.1 -> BB44 (if true) | BB45 (if false)
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    pkg, e38.0
  val?            %23.1 = Force!             !v    %23.0, e38.0   <>
  val?            %23.2 = CallBuiltin        !v    nzchar(%23.1) e38.0   <>
  val?            %23.3 = Not                !v    %23.2, e38.0
  lgl$#-          %23.4 = CheckTrueFalse     we    %23.3
  void                    Branch                   %23.4 -> BB28 (if true) | BB24 (if false)
BB22   <- [21]
  (cls|spec|blt)  %22.0 = LdFun              !v    nzchar, e38.0
  fs              %22.1 = FrameState         R     0x5638bc750c10+372: [%22.0], env=e38.0
  void                    Deopt              !v    %22.1, DeadCall@0x5638bc27b1a0[Call#5], %22.0   !
BB44   <- [10]
  val?^ | miss    %44.0 = LdVar              eR    pkg, e38.0
  val?            %44.1 = Force!<lazy>       !v    %44.0, e38.0   <str$->
  val?            %44.2 = CallBuiltin        !v    nzchar(%44.1) e38.0   <lgl$->
  lgl$#-          %44.3 = IsType                   %44.2 isA lgl$-
  void                    Branch                   %44.3 -> BB46 (if true) | BB47 (if false)
BB45   <- [10]
  fs              %45.0 = FrameState         R     0x5638bc750c10+135: [], env=e38.0
  void                    Deopt              !v    %45.0, DeadBranchReached@0x5638bc27b1a0[Test#0], %10.1   !
BB28   <- [23]
  val?^ | miss    %28.0 = LdVar              eR    is.character, e38.0
  lgl$#-          %28.1 = Identical                <blt is.character>, %28.0   <@?>
  void                    Branch                   %28.1 -> BB30 (if true) | BB29 (if false)
BB24   <- [23]
  void                    Nop                !     
  goto BB25
BB46   <- [44]
  lgl$-           %46.0 = CastType           d     dn %44.2
  lgl$-           %46.1 = AsLogical                %46.0
  lgl$#-          %46.2 = Identical                %46.1, false
  void                    Branch                   %46.2 -> BB20 (if true) | BB13 (if false)
BB47   <- [44]
  void                    Nop                !     
  val?            %47.1 = %44.2
  dr              %47.2 = Typecheck@0x5638bc27b1a0[Type#9]
  goto BB11
BB30   <- [28]
  val?^ | miss    %30.0 = LdVar              eR    where, e38.0
  val?            %30.1 = Force!             !v    %30.0, e38.0   <>
  lgl$#-          %30.2 = CallSafeBuiltin    wed   is.character(%30.1)    <>
  void                    Branch                   %30.2 -> BB36 (if true) | BB31 (if false)
BB29   <- [28]
  (cls|spec|blt)  %29.0 = LdFun              !v    is.character, e38.0
  fs              %29.1 = FrameState         R     0x5638bc750c10+480: [%29.0], env=e38.0
  void                    Deopt              !v    %29.1, DeadCall@0x5638bc27b1a0[Call#6], %29.0   !
BB25   <- [24, 36]
  val?^ | miss    %25.0 = LdVar              eR    names, e38.0
  lgl$#-          %25.1 = Identical                <blt names>, %25.0   <@?>
  void                    Branch                   %25.1 -> BB27 (if true) | BB26 (if false)
BB20   <- [46]
  void                    Nop                !     
  lgl$-           %20.1 = %46.1
  goto BB16
BB13   <- [46]
  val?^ | miss    %13.0 = LdVar              eR    identical, e38.0
  lgl$#-          %13.1 = Identical                %13.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %13.1 -> BB48 (if true) | BB49 (if false)
BB11   <- [47, 49]
  val?^ | miss    %11.0 = Phi                      %47.1:BB47, %49.1:BB49
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %47.2:BB47, %49.2:BB49
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x5638bc750c10+251: [%44.2], env=e38.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB36   <- [30]
  val?^ | miss    %36.0 = LdVar              eR    where, e38.0
  val?            %36.1 = Force!             !v    %36.0, e38.0   <>
  void                    StVar              lW    pkg, %36.1, e38.0
  goto BB25
BB31   <- [30]
  val?^ | miss    %31.0 = LdVar              eR    attr, e38.0
  lgl$#-          %31.1 = Identical                <blt attr>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB27   <- [25]
  val?^ | miss    %27.0 = LdVar              eR    value, e38.0
  val?            %27.1 = Force!             !v    %27.0, e38.0   <>
  val?            %27.2 = CallBuiltin        !v    names(%27.1) e38.0   <>
  void                    StVar              lW    pkgs, %27.2, e38.0
  (cls|spec|blt)  %27.4 = LdFun              !v    match, e38.0
  fs              %27.5 = FrameState         R     0x5638bc750c10+957: [%27.4], env=e38.0
  void                    Deopt              !v    %27.5, DeadCall@0x5638bc27b1a0[Call#11], %27.4   !
BB26   <- [25]
  (cls|spec|blt)  %26.0 = LdFun              !v    names, e38.0
  fs              %26.1 = FrameState         R     0x5638bc750c10+875: [%26.0], env=e38.0
  void                    Deopt              !v    %26.1, DeadCall@0x5638bc27b1a0[Call#10], %26.0   !
BB16   <- [20, 50]
  lgl$-           %16.0 = Phi                      %50.4:BB50, %20.1:BB20
  lgl$-           %16.1 = %16.0
  lgl$#-          %16.2 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.2 -> BB19 (if true) | BB17 (if false)
BB48   <- [13]
  prom-           %48.0 = MkArg                    unboundValue, .getGenericFromCacheTable[0x5638bc9fe9f0]_p4, e38.0
  prom-           %48.1 = MkArg                    unboundValue, .getGenericFromCacheTable[0x5638bc9fe9f0]_p5, e38.0
  ct              %48.2 = PushContext        lCL   %48.0, %48.1, identical(pkg, @(value, package)), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e38.0
  val?^           %48.3 = CastType                 up %48.1
  val?^           %48.4 = CastType                 up %48.0
  env             e48.5 = MkEnv              l     x=%48.4, y=%48.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %48.6 = Force!<lazy>       !vL   %48.4, e48.5   <val?>
  val?            %48.7 = Force!<lazy>       !vL   %48.3, e48.5   <val?>
  val?            %48.8 = CallBuiltin        !v    identical(%48.6, %48.7, true, true, true, true, false, true) e48.5
  val?            %48.9 = PopContext         C     %48.8, %48.2   <lgl$->
  lgl$#-          %48.10 = IsType                   %48.9 isA lgl$-
  void                    Branch                   %48.10 -> BB50 (if true) | BB51 (if false)
BB49   <- [13]
  void                    Nop                !     
  val?^ | miss    %49.1 = %13.0
  dr              %49.2 = CallTarget@0x5638bc27b1a0[Call#3]
  goto BB11
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    name, e38.0
  val?            %33.1 = Force!             !v    %33.0, e38.0   <>
  val?            %33.2 = CallBuiltin        !v    attr(%33.1, "package") e38.0   <>
  lgl$-           %33.3 = Is                       %33.2, NULL
  void                    StVar              lW    pkg, %33.2, e38.0
  val             %33.5 = ChkMissing         e     %33.2
  lgl$#-          %33.6 = CheckTrueFalse     e     %33.3
  void                    Branch                   %33.6 -> BB35 (if true) | BB34 (if false)
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    attr, e38.0
  fs              %32.1 = FrameState         R     0x5638bc750c10+582: [%32.0], env=e38.0
  void                    Deopt              !v    %32.1, DeadCall@0x5638bc27b1a0[Call#7], %32.0   !
BB19   <- [16]
  void                    Visible            v     
  nil-            %19.1 = nil
  goto BB18
BB17   <- [16]
  val?^ | miss    %17.0 = LdVar              eR    value, e38.0
  void                    Visible            v     
  val?            %17.2 = Force!<value>      !     %17.0, e38.0   <cls>
  val?            %17.3 = %17.2
  goto BB18
BB50   <- [48]
  lgl$-           %50.0 = CastType           d     dn %48.9
  lgl$-           %50.1 = Not                d     %50.0, elided
  lgl$-           %50.2 = AsLogical                %50.1
  lgl$-           %50.3 = LAnd                     %46.1, %50.2
  lgl$-           %50.4 = %50.3
  goto BB16
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x5638bc750c10+300: [%46.1, %48.9], env=e38.0
  void                    Deopt              !v    %51.0, Typecheck@0x5638bc27b1a0[Type#14], %48.9   !
BB35   <- [33]
  (cls|spec|blt)  %35.0 = LdFun              !v    getPackageName, e38.0
  fs              %35.1 = FrameState         R     0x5638bc750c10+705: [%35.0], env=e38.0
  void                    Deopt              !v    %35.1, DeadCall@0x5638bc27b1a0[Call#8], %35.0   !
BB34   <- [33]
  (cls|spec|blt)  %34.0 = LdFun              !v    identical, e38.0
  fs              %34.1 = FrameState         R     0x5638bc750c10+756: [%34.0], env=e38.0
  void                    Deopt              !v    %34.1, DeadCall@0x5638bc27b1a0[Call#9], %34.0   !
BB18   <- [19, 17]
  val?            %18.0 = Phi                      %17.3:BB17, %19.1:BB19
  val?            %18.1 = %18.0
  val?            %18.2 = %18.1
  goto BB6
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5638b9a6cbd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .getGenericFromCacheTable[0x5638bc9fe9f0]_p6, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .getGenericFromCacheTable[0x5638bc9fe9f0]_p7, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <>
  void                    Return             l     %0.3

│ .getGenericFromCacheTable[0x5638bc9fe9f0]                                    │
└──────────────────────────────────────────────────────────────────────────────┘
