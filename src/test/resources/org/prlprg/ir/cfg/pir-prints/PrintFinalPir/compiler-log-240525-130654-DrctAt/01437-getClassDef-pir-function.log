
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x5638be8414e0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x5638be8414e0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     Class=%0.1, where=%0.0, package(miss)=missingArg, inherits(miss)=missingArg, parent=<env 0x5638ba074378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p0, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    package, %0.4, e0.2
  void                    StArg              lW    inherits, true, e0.2
  val?^ | miss    %0.7  = LdVar              eR    .getClassesFromCache, <env 0x5638ba074378>
  lgl$#-          %0.8  = Identical                %0.7, function(name) <(rir::DispatchTable*)0x5638bba|...
  void                    Branch                   %0.8 -> BB34 (if true) | BB35 (if false)
BB34   <- [0]
  prom-           %34.0 = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p10, e0.2
  ct              %34.1 = PushContext        lCL   %34.0, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x5638bba|..., e0.2
  val?^           %34.2 = CastType                 up %34.0
  val?^ | miss    %34.3 = LdVar              eR    .Call, <env 0x5638ba074378>
  lgl$#-          %34.4 = Identical                <blt .Call>, %34.3   <true>
  void                    Branch                   %34.4 -> BB36 (if true) | BB37 (if false)
BB35   <- [0]
  fs              %35.0 = FrameState         R     0x5638bbaab8b0+0: [], env=e0.2
  void                    Deopt              !v    %35.0, CallTarget@0x5638bbd73760[Call#3], %0.7
BB36   <- [34]
  val?^ | miss    %36.0 = LdVar              eR    C_R_getClassFromCache, <env 0x5638ba074378>
  env             e36.1 = MkEnv              l     name=%34.2, parent=<env 0x5638ba074378>, context 1
  val?            %36.2 = Force!<value>      !v    %36.0, e36.1   <vec>
  val?^ | miss    %36.3 = LdVar              eR    name, e36.1
  val?            %36.4 = Force!<lazy>       !v    %36.3, e36.1   <str$+>
  val?^ | miss    %36.5 = LdVar              eR    .classTable, e36.1
  val?            %36.6 = Force!<wrapped>    !v    %36.5, e36.1   <env->
  val?            %36.7 = CallBuiltin        !v    .Call(%36.2, %36.4, %36.6) e36.1   <other>
  val?            %36.8 = PopContext         C     %36.7, %34.1   <other>
  lgl$-           %36.9 = Is                       %36.8, list
  void                    StVar              lW    value, %36.8, e0.2
  val             %36.11 = ChkMissing         e     %36.8   <other>
  lgl$#-          %36.12 = CheckTrueFalse     e     %36.9
  lgl$-           %36.13 = Is                       %36.11, NULL
  void                    Branch                   %36.12 -> BB32 (if true) | BB7 (if false)
BB37   <- [34]
  fs              %37.0 = FrameState         R     0x5638bbaab8b0+72: [], env=e0.2
  env             e37.1 = (MkEnv)            l     name=%34.2, parent=<env 0x5638ba074378>, context 1
  fs              %37.2 = FrameState         R     0x5638bbe46100+17: [<blt .Call>, %34.4], env=e37.1, next=%37.0
  void                    Deopt              !v    %37.2, DeadBranchReached@0x5638bad50d58[Test#0], %34.4   !
BB32   <- [36]
  (cls|spec|blt)  %32.0 = LdFun              !v    .resolveClassList, e0.2
  fs              %32.1 = FrameState         R     0x5638bbaab8b0+121: [%32.0], env=e0.2
  void                    Deopt              !v    %32.1, DeadCall@0x5638bbd73760[Call#4], %32.0   !
BB7   <- [36]
  lgl$#-          %7.0  = CheckTrueFalse     e     %36.13
  void                    Branch                   %7.0 -> BB10 (if true) | BB8 (if false)
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    classMetaName, e0.2
  lgl$#-          %10.1 = Identical                %10.0, function(name) <(rir::DispatchTable*)0x5638bce|...
  void                    Branch                   %10.1 -> BB38 (if true) | BB39 (if false)
BB8   <- [7]
  void                    Nop                !     
  goto BB9
BB38   <- [10]
  prom-           %38.0 = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p3, e0.2
  ct              %38.1 = PushContext        lCL   %38.0, classMetaName(if(>(length(Class), 1L), [[(Clas|..., function(name) <(rir::DispatchTable*)0x5638bce|..., e0.2
  val?^           %38.2 = CastType                 up %38.0
  val?^ | miss    %38.3 = LdVar              eR    methodsPackageMetaName, <env 0x5638ba074378>
  lgl$#-          %38.4 = Identical                %38.3, function(prefix, name, package="") <(rir::Disp|...
  void                    Branch                   %38.4 -> BB40 (if true) | BB41 (if false)
BB39   <- [10]
  fs              %39.0 = FrameState         R     0x5638bbaab8b0+86: [], env=e0.2
  void                    Deopt              !v    %39.0, CallTarget@0x5638bbd73760[Call#5], %10.0   !
BB9   <- [8, 27, 54]
  val?^ | miss    %9.0  = LdVar              eR    value, e0.2
  void                    Visible            v     
  val?            %9.2  = Force!<value>      !     %9.0, e0.2   <(nil|other)>
  void                    Return             l     %9.2
BB40   <- [38]
  env             e40.0 = MkEnv              l     name=%38.2, parent=<env 0x5638ba074378>, context 1
  prom-           %40.1 = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p11, e40.0
  ct              %40.2 = PushContext        lCL   "C", %40.1, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|..., e40.0
  val?^           %40.3 = CastType                 up %40.1
  val?^ | miss    %40.4 = LdVar              eR    .Call, <env 0x5638ba074378>
  lgl$#-          %40.5 = Identical                <blt .Call>, %40.4   <true>
  void                    Branch                   %40.5 -> BB42 (if true) | BB43 (if false)
BB41   <- [38]
  fs              %41.0 = FrameState         R     0x5638bbaab8b0+234: [], env=e0.2
  env             e41.1 = (MkEnv)            l     name=%38.2, parent=<env 0x5638ba074378>, context 1
  fs              %41.2 = FrameState         R     0x5638ba7ba6b0+0: [], env=e41.1, next=%41.0
  void                    Deopt              !v    %41.2, CallTarget@0x5638bd00e6d8[Call#0], %38.3   !
BB42   <- [40]
  val?^ | miss    %42.0 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x5638ba074378>
  env             e42.1 = MkEnv              l     prefix="C", name=%40.3, package(miss)="", parent=<env 0x5638ba074378>, context 1
  val?            %42.2 = Force!<value>      !v    %42.0, e42.1   <vec>
  val?^ | miss    %42.3 = LdVar              eR    prefix, e42.1
  val?            %42.4 = Force!<value>      !v    %42.3, e42.1   <str$->
  val?^ | miss    %42.5 = LdVar              eR    name, e42.1
  val?            %42.6 = Force!<lazy>       !v    %42.5, e42.1   <str$->
  val?^ | miss    %42.7 = LdVar              eR    package, e42.1
  val?            %42.8 = Force!<lazy>       !v    %42.7, e42.1   <str$->
  val?            %42.9 = CallBuiltin        !v    .Call(%42.2, %42.4, %42.6, %42.8) e42.1   <str$->
  val?            %42.10 = PopContext         C     %42.9, %40.2   <str$->
  val?            %42.11 = PopContext         C     %42.10, %38.1   <str$->
  void                    StVar              lW    cname, %42.11, e0.2
  val?^ | miss    %42.13 = LdVar              eR    is.character, e0.2
  lgl$#-          %42.14 = Identical                <blt is.character>, %42.13   <true>
  void                    Branch                   %42.14 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  fs              %43.0 = FrameState         R     0x5638bbaab8b0+234: [], env=e0.2
  fs              %43.1 = FrameState         R     0x5638ba7ba6b0+37: [], env=e40.0, next=%43.0
  env             e43.2 = (MkEnv)            l     prefix="C", name=%40.3, package(miss)="", parent=<env 0x5638ba074378>, context 1
  fs              %43.3 = FrameState         R     0x5638bc218260+0: [], env=e43.2, next=%43.1
  void                    Deopt              !v    %43.3, DeadBranchReached@0x5638bccf8f10[Test#0], %40.5   !
BB44   <- [42]
  val?^ | miss    %44.0 = LdVar              eR    where, e0.2
  val?            %44.1 = Force!<lazy>       !v    %44.0, e0.2   <env->
  lgl$#-          %44.2 = CallSafeBuiltin    wed   is.character(%44.1)    <lgl$->
  void                    Branch                   %44.2 -> BB31 (if true) | BB17 (if false)
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x5638bbaab8b0+248: [], env=e0.2
  void                    Deopt              !v    %45.0, DeadBranchReached@0x5638bbd73760[Test#1], %42.14   !
BB31   <- [44]
  val?^ | miss    %31.0 = LdVar              eR    where, e0.2
  val?            %31.1 = Force!             !v    %31.0, e0.2   <val?_>
  void                    StVar              lW    package, %31.1, e0.2
  goto BB18
BB17   <- [44]
  void                    Nop                !     
  goto BB18
BB18   <- [17, 31]
  val?^ | miss    %18.0 = LdVar              eR    isTRUE, e0.2
  lgl$#-          %18.1 = Identical                %18.0, function(x) <(rir::DispatchTable*)0x5638bb9686|...
  void                    Branch                   %18.1 -> BB46 (if true) | BB47 (if false)
BB46   <- [18]
  prom-           %46.0 = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p5, e0.2
  val?            %46.1 = StaticCall         !v    isTRUE[0x5638bf47ae00](%46.0) e0.2   <lgl$->
  lgl$#-          %46.2 = IsType                   %46.1 isA lgl$-
  void                    Branch                   %46.2 -> BB48 (if true) | BB49 (if false)
BB47   <- [18]
  fs              %47.0 = FrameState         R     0x5638bbaab8b0+378: [], env=e0.2
  void                    Deopt              !v    %47.0, CallTarget@0x5638bbd73760[Call#8], %18.0   !
BB48   <- [46]
  lgl$-           %48.0 = CastType           d     dn %46.1
  lgl$#-          %48.1 = CheckTrueFalse     e     %48.0
  void                    Branch                   %48.1 -> BB30 (if true) | BB23 (if false)
BB49   <- [46]
  void                    Nop                !     
  val?            %49.1 = %46.1
  dr              %49.2 = Typecheck@0x5638bbd73760[Type#26]
  goto BB21
BB30   <- [48]
  (cls|spec|blt)  %30.0 = LdFun              !v    .requirePackage, e0.2
  fs              %30.1 = FrameState         R     0x5638bbaab8b0+431: [%30.0], env=e0.2
  void                    Deopt              !v    %30.1, DeadCall@0x5638bbd73760[Call#10], %30.0   !
BB23   <- [48]
  val?^ | miss    %23.0 = LdVar              eR    is.environment, e0.2
  lgl$#-          %23.1 = Identical                <blt is.environment>, %23.0   <true>
  void                    Branch                   %23.1 -> BB50 (if true) | BB51 (if false)
BB21   <- [49, 51]
  val?^ | miss    %21.0 = Phi                      %49.1:BB49, %51.1:BB51
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %49.2:BB49, %51.2:BB51
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x5638bbaab8b0+410: [%46.1], env=e0.2
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB50   <- [23]
  val?^ | miss    %50.0 = LdVar              eR    package, e0.2
  val?            %50.1 = Force!<wrapped>    !v    %50.0, e0.2   <nil->
  lgl$#-          %50.2 = CallSafeBuiltin    wed   is.environment(%50.1)    <lgl$->
  void                    Branch                   %50.2 -> BB29 (if true) | BB26 (if false)
BB51   <- [23]
  void                    Nop                !     
  lgl$#-          %51.1 = %23.1
  dr              %51.2 = DeadBranchReached@0x5638bbd73760[Test#2]
  goto BB21
BB29   <- [50]
  (cls|spec|blt)  %29.0 = LdFun              !v    get0, e0.2
  fs              %29.1 = FrameState         R     0x5638bbaab8b0+584: [%29.0], env=e0.2
  void                    Deopt              !v    %29.1, DeadCall@0x5638bbd73760[Call#12], %29.0   !
BB26   <- [50]
  val?^ | miss    %26.0 = LdVar              eR    value, e0.2
  lgl$#-          %26.1 = IsType                   %26.0 isA val?~- | miss
  void                    Branch                   %26.1 -> BB52 (if true) | BB53 (if false)
BB52   <- [26]
  val?~- | miss   %52.0 = CastType           d     dn %26.0
  val?-           %52.1 = Force!<value>            %52.0,    <nil->
  lgl$-           %52.2 = Is                       %52.1, NULL
  lgl$#-          %52.3 = CheckTrueFalse     e     %52.2
  void                    Branch                   %52.3 -> BB28 (if true) | BB27 (if false)
BB53   <- [26]
  void                    Nop                !     
  val?^ | miss    %53.1 = %26.0
  dr              %53.2 = Typecheck@0x5638bbd73760[Type#36]
  goto BB24
BB28   <- [52]
  val?^ | miss    %28.0 = LdVar              eR    get0, e0.2
  lgl$#-          %28.1 = Identical                %28.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Branch                   %28.1 -> BB54 (if true) | BB55 (if false)
BB27   <- [52]
  void                    Nop                !     
  goto BB9
BB24   <- [53, 55]
  val?^ | miss    %24.0 = Phi                      %53.1:BB53, %55.1:BB55
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %53.2:BB53, %55.2:BB55
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x5638bbaab8b0+563: [%50.2], env=e0.2
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB54   <- [28]
  prom-           %54.0 = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p7, e0.2
  prom-           %54.1 = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p8, e0.2
  prom-           %54.2 = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p9, e0.2
  val?            %54.3 = StaticCall         !v    get0[0x5638bdd85840](%54.0, %54.1, missingArg, %54.2) { 0 1 3n } e0.2   <nil->
  void                    StVar              lW    value, %54.3, e0.2
  goto BB9
BB55   <- [28]
  void                    Nop                !     
  val?^ | miss    %55.1 = %28.0
  dr              %55.2 = CallTarget@0x5638bbd73760[Call#13]
  goto BB24
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x5638b9a6da90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p4, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  val?            %0.4  = Gt                 !v    %0.3, 1L, e0.0   <lgl$->
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    Class, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e0.0   <val?_>
  void                    Visible            v     
  val?            %2.4  = %2.2
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e0.0   <str$->
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.3:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nzchar, <0x5638b9a79240>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x5638be8414e0]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3

│ getClassDef[0x5638be8414e0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
