
┌──────────────────────────────────────────────────────────────────────────────┐
│ completeClassDefinition[0x5638bdc3acd0]                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl3,!Obj3                │
│ Properties:                                                                  │
├────── Final PIR Version
completeClassDefinition[0x5638bdc3acd0]
BB0
  val?~+          %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    .completeClassSlots, <env 0x5638ba074378>
  lgl$#-          %0.5  = Identical                %0.4, function(ClassDef, where) <(rir::DispatchTable|...
  void                    Branch                   %0.5 -> BB43 (if true) | BB44 (if false)
BB43   <- [0]
  env             e43.0 = MkEnv              l     Class=%0.3, ClassDef=%0.2, where=%0.1, doExtends=%0.0, parent=<env 0x5638ba074378>, context 1
  prom-           %43.1 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p0, e43.0
  prom-           %43.2 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p1, e43.0
  val?            %43.3 = Call               !v    function(ClassDef, where) <(rir::DispatchTable|...(%43.1, %43.2) e43.0   <other>
  void                    StVar              lW    ClassDef, %43.3, e43.0
  (cls|spec|blt)  %43.5 = LdFun              !v    @, <0x5638b9a6cbd8>, e43.0
  prom-           %43.6 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p2, e43.0
  prom-           %43.7 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p3, e43.0
  val?            %43.8 = Call               !v    %43.5(%43.6, %43.7) e43.0   <vec->
  void                    StVar              lW    immediate, %43.8, e43.0
  (cls|spec|blt)  %43.10 = LdFun              !v    @, <0x5638b9a6cbd8>, e43.0
  prom-           %43.11 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p4, e43.0
  prom-           %43.12 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p5, e43.0
  val?            %43.13 = Call               !v    %43.10(%43.11, %43.12) e43.0   <vec->
  void                    StVar              lW    properties, %43.13, e43.0
  val?^ | miss    %43.15 = LdVar              eR    makePrototypeFromClassDef, e43.0
  lgl$#-          %43.16 = Identical                %43.15, function(slots, ClassDef, extends, where) <(ri|...
  void                    Branch                   %43.16 -> BB45 (if true) | BB46 (if false)
BB44   <- [0]
  env             e44.0 = (MkEnv)            l     Class=%0.3, ClassDef=%0.2, where=%0.1, doExtends=%0.0, parent=<env 0x5638ba074378>, context 1
  fs              %44.1 = FrameState         R     0x5638bf4548b0+0: [], env=e44.0
  void                    Deopt              !v    %44.1, CallTarget@0x5638bef6f760[Call#1], %0.4
BB45   <- [43]
  prom-           %45.0 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p6 (!refl), e43.0
  prom-           %45.1 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p7, e43.0
  prom-           %45.2 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p8, e43.0
  prom-           %45.3 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p9, e43.0
  val?            %45.4 = Call               !v    function(slots, ClassDef, extends, where) <(ri|...(%45.0, %45.1, %45.2, %45.3) e43.0   <nil->
  void                    StVar              lW    prototype, %45.4, e43.0
  (cls|spec|blt)  %45.6 = LdFun              !v    @, <0x5638b9a6cbd8>, e43.0
  prom-           %45.7 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p10, e43.0
  prom-           %45.8 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p11, e43.0
  val?            %45.9 = Call               !v    %45.6(%45.7, %45.8) e43.0   <lgl$->
  lgl$#-          %45.10 = IsType                   %45.9 isA lgl$-
  void                    Branch                   %45.10 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x5638bf4548b0+153: [], env=e43.0
  void                    Deopt              !v    %46.0, CallTarget@0x5638bef6f760[Call#4], %43.15   !
BB47   <- [45]
  lgl$-           %47.0 = CastType           d     dn %45.9
  void                    StVar              lW    virtual, %47.0, e43.0
  val?^ | miss    %47.2 = LdVar              eR    doExtends, e43.0
  val?            %47.3 = Force!<value>      !v    %47.2, e43.0   <lgl$->
  lgl$#-          %47.4 = CheckTrueFalse     we    %47.3
  void                    Branch                   %47.4 -> BB41 (if true) | BB7 (if false)
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x5638bf4548b0+251: [%45.9], env=e43.0
  void                    Deopt              !v    %48.0, Typecheck@0x5638bef6f760[Type#18], %45.9   !
BB41   <- [47]
  (cls|spec|blt)  %41.0 = LdFun              !v    completeExtends, e43.0
  fs              %41.1 = FrameState         R     0x5638bf4548b0+337: [%41.0], env=e43.0
  void                    Deopt              !v    %41.1, DeadCall@0x5638bef6f760[Call#7], %41.0   !
BB7   <- [47]
  (cls|spec|blt)  %7.0  = LdFun              !v    @, <0x5638b9a6cbd8>, e43.0
  prom-           %7.1  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p12, e43.0
  prom-           %7.2  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p13, e43.0
  val?            %7.3  = Call               !v    %7.0(%7.1, %7.2) e43.0   <vec->
  void                    StVar              lW    extends, %7.3, e43.0
  val?^ | miss    %7.5  = LdVar              eR    doExtends, e43.0
  val?            %7.6  = Force!<value>      !v    %7.5, e43.0   <lgl$->
  lgl$#-          %7.7  = CheckTrueFalse     we    %7.6
  void                    Branch                   %7.7 -> BB40 (if true) | BB8 (if false)
BB40   <- [7]
  (cls|spec|blt)  %40.0 = LdFun              !v    completeSubclasses, e43.0
  fs              %40.1 = FrameState         R     0x5638bf4548b0+463: [%40.0], env=e43.0
  void                    Deopt              !v    %40.1, DeadCall@0x5638bef6f760[Call#9], %40.0   !
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    @, <0x5638b9a6cbd8>, e43.0
  prom-           %8.1  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p14, e43.0
  prom-           %8.2  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p15, e43.0
  val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e43.0   <vec->
  void                    StVar              lW    subclasses, %8.3, e43.0
  val?^ | miss    %8.5  = LdVar              eR    is.na, e43.0
  lgl$#-          %8.6  = Identical                <blt is.na>, %8.5   <true>
  void                    Branch                   %8.6 -> BB49 (if true) | BB50 (if false)
BB49   <- [8]
  val?^ | miss    %49.0 = LdVar              eR    virtual, e43.0
  lgl$#-          %49.1 = IsType                   %49.0 isA lgl$-
  void                    Branch                   %49.1 -> BB51 (if true) | BB52 (if false)
BB50   <- [8]
  void                    Nop                !     
  lgl$#-          %50.1 = %8.6
  dr              %50.2 = DeadBranchReached@0x5638bef6f760[Test#0]
  goto BB9
BB51   <- [49]
  lgl$-           %51.0 = CastType           d     dn %49.0
  lgl$-           %51.1 = CallSafeBuiltin    wed   is.na(%51.0)    <lgl$->
  lgl$#-          %51.2 = CheckTrueFalse     e     %51.1
  void                    Branch                   %51.2 -> BB39 (if true) | BB13 (if false)
BB52   <- [49]
  void                    Nop                !     
  val?^ | miss    %52.1 = %49.0
  dr              %52.2 = Typecheck@0x5638bef6f760[Type#34]
  goto BB9
BB9   <- [50, 52]
  val?^ | miss    %9.0  = Phi                      %50.1:BB50, %52.1:BB52
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %50.2:BB50, %52.2:BB52
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x5638bf4548b0+517: [], env=e43.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB39   <- [51]
  (cls|spec|blt)  %39.0 = LdFun              !v    testVirtual, e43.0
  fs              %39.1 = FrameState         R     0x5638bf4548b0+629: [%39.0], env=e43.0
  void                    Deopt              !v    %39.1, DeadCall@0x5638bef6f760[Call#11], %39.0   !
BB13   <- [51]
  val?^ | miss    %13.0 = LdVar              eR    .mergeClassDefSlots, e43.0
  lgl$#-          %13.1 = Identical                %13.0, function(ClassDef, ...) <(rir::DispatchTable*)|...
  void                    Branch                   %13.1 -> BB53 (if true) | BB54 (if false)
BB53   <- [13]
  prom-           %53.0 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p16, e43.0
  prom-           %53.1 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p17, e43.0
  prom-           %53.2 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p18, e43.0
  prom-           %53.3 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p19, e43.0
  prom-           %53.4 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p20, e43.0
  prom-           %53.5 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p21 (!refl), e43.0
  dots-           %53.6 = DotsList           l     slots=%53.1, contains=%53.2, prototype=%53.3, virtual=%53.4, subclasses=%53.5
  ct              %53.7 = PushContext        lCL   %53.0, %53.6, .mergeClassDefSlots(ClassDef, slots=properties|..., function(ClassDef, ...) <(rir::DispatchTable*)|..., e43.0
  val?^           %53.8 = CastType                 up %53.0
  env             e53.9 = MkEnv              l     ClassDef=%53.8, ...=%53.6, parent=<env 0x5638ba074378>, context 1
  (cls|spec|blt)  %53.10 = LdFun              !v    list, <0x5638b9a815c0>, <env 0x5638ba074378>
  val?            %53.11 = NamedCall          !v    %53.10(slots=%53.1, contains=%53.2, prototype=%53.3, virtual=%53.4, subclasses=%53.5) e53.9   <vec+>
  void                    StVar              lW    slots, %53.11, e53.9
  lgl$#-          %53.13 = IsType                   %53.11 isA val?+
  val?^ | miss    %53.14 = LdVar              eR    names, e53.9
  lgl$#-          %53.15 = Identical                <blt names>, %53.14   <true>
  void                    Branch                   %53.15 -> BB55 (if true) | BB56 (if false)
BB54   <- [13]
  fs              %54.0 = FrameState         R     0x5638bf4548b0+608: [%51.1], env=e43.0
  void                    Deopt              !v    %54.0, CallTarget@0x5638bef6f760[Call#12], %13.0   !
BB55   <- [53]
  val             %55.0 = ChkMissing         e     %53.11
  void                    Branch                   %53.13 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  void                    Nop                !     
  lgl$#-          %56.1 = %53.15
  dr              %56.2 = DeadBranchReached@0x5638c598a068[Test#0]
  goto BB14
BB57   <- [55]
  val?+           %57.0 = CastType           d     dn %53.11   <vec+>
  val+            %57.1 = CallSafeBuiltin    wed   names(%57.0)    <str->
  void                    StVar              lW    slotNames, %57.1, e53.9
  val?^ | miss    %57.3 = LdVar              eR    seq_along, e53.9
  lgl$#-          %57.4 = Identical                <blt seq_along>, %57.3   <true>
  void                    Branch                   %57.4 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  void                    Nop                !     
  val?            %58.1 = %53.11
  dr              %58.2 = Typecheck@0x5638c598a068[Type#0]
  goto BB14
BB14   <- [56, 58]
  val?^ | miss    %14.0 = Phi                      %56.1:BB56, %58.1:BB58
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %56.2:BB56, %58.2:BB58
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x5638bf4548b0+766: [], env=e43.0
  fs              %14.5 = FrameState         R     0x5638ba9f33e0+50: [], env=e53.9, next=%14.4
  void                    Deopt              !v    %14.5, %14.3, %14.1   !
BB59   <- [57]
  val?            %59.0 = CallBuiltin        !v    seq_along(%57.0) e53.9   <int->
  val?+           %59.1 = ToForSeq           e     %59.0
  int$-           %59.2 = Length                   %59.1
  int$-           %59.3 = Inc                      0L
  lgl$-           %59.4 = Lt                 d     %59.2, %59.3, elided   <false>
  lgl$#-          %59.5 = Identical                %59.4, true
  void                    Branch                   %59.5 -> BB62 (if true) | BB61 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x5638bf4548b0+766: [], env=e43.0
  fs              %60.1 = FrameState         R     0x5638ba9f33e0+155: [], env=e53.9, next=%60.0
  void                    Deopt              !v    %60.1, DeadBranchReached@0x5638c598a068[Test#1], %57.4   !
BB62   <- [59]
  fs              %62.0 = FrameState         R     0x5638bf4548b0+766: [], env=e43.0
  fs              %62.1 = FrameState         R     0x5638ba9f33e0+246: [%59.0], env=e53.9, next=%62.0
  void                    Deopt              !v    %62.1, DeadBranchReached@0x5638c598a068[Test#2], %59.5   !
BB61   <- [59]
  val?            %61.0 = Extract2_1D        wed   %59.1, %59.3, elided
  void                    StVar              lW    i, %61.0, e53.9
  (cls|spec|blt)  %61.2 = LdFun              !v    <-, <0x5638b9a61da8>, e53.9
  prom-           %61.3 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p30, e53.9
  prom-           %61.4 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p34, e53.9
  val?            %61.5 = Call               !v    %61.2(%61.3, %61.4) e53.9
  int$-           %61.6 = %59.3
  goto BB20
BB20   <- [21, 61]
  int$-           %20.0 = Phi                      %61.6:BB61, %21.6:BB21
  int$-           %20.1 = %20.0
  int$-           %20.2 = Inc                      %20.1
  lgl$-           %20.3 = Lt                 d     %59.2, %20.2, elided
  lgl$#-          %20.4 = Identical                %20.3, true
  void                    Branch                   %20.4 -> BB22 (if true) | BB21 (if false)
BB22   <- [20]
  val?^ | miss    %22.0 = LdVar              eR    ClassDef, e53.9
  val?            %22.1 = Force!<value>      !v    %22.0, e53.9   <other>
  val?            %22.2 = PopContext         C     %22.1, %53.7   <other>
  void                    StVar              lW    ClassDef, %22.2, e43.0
  val?^ | miss    %22.4 = LdVar              eR    any, e43.0
  lgl$#-          %22.5 = Identical                <blt any>, %22.4   <true>
  void                    Branch                   %22.5 -> BB63 (if true) | BB64 (if false)
BB21   <- [20]
  val?            %21.0 = Extract2_1D        wed   %59.1, %20.2, elided
  void                    StVar              lW    i, %21.0, e53.9
  (cls|spec|blt)  %21.2 = LdFun              !v    <-, <0x5638b9a61da8>, e53.9
  prom-           %21.3 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p36, e53.9
  prom-           %21.4 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p40, e53.9
  val?            %21.5 = Call               !v    %21.2(%21.3, %21.4) e53.9
  int$-           %21.6 = %20.2
  goto BB20
BB63   <- [22]
  val?^ | miss    %63.0 = LdVar              eR    is.na, e43.0
  lgl$#-          %63.1 = Identical                <blt is.na>, %63.0   <true>
  void                    Branch                   %63.1 -> BB65 (if true) | BB66 (if false)
BB64   <- [22]
  void                    Nop                !     
  lgl$#-          %64.1 = %22.5
  dr              %64.2 = DeadBranchReached@0x5638bef6f760[Test#1]
  goto BB23
BB65   <- [63]
  val?^ | miss    %65.0 = LdVar              eR    match, e43.0
  lgl$#-          %65.1 = Identical                %65.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %65.1 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  void                    Nop                !     
  lgl$#-          %66.1 = %63.1
  dr              %66.2 = DeadBranchReached@0x5638bef6f760[Test#2]
  goto BB23
BB23   <- [64, 66, 68, 70]
  val?^ | miss    %23.0 = Phi                      %64.1:BB64, %66.1:BB66, %68.1:BB68, %70.1:BB70
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %64.2:BB64, %66.2:BB66, %68.2:BB68, %70.2:BB70
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x5638bf4548b0+780: [], env=e43.0
  void                    Deopt              !v    %23.4, %23.3, %23.1   !
BB67   <- [65]
  val?^ | miss    %67.0 = LdVar              eR    names, e43.0
  lgl$#-          %67.1 = Identical                %67.0, <blt names>
  void                    Branch                   %67.1 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  void                    Nop                !     
  val?^ | miss    %68.1 = %65.0
  dr              %68.2 = CallTarget@0x5638bef6f760[Call#26]
  goto BB23
BB69   <- [67]
  (cls|spec|blt)  %69.0 = LdFun              !v    @, <0x5638b9a6cbd8>, e43.0
  prom-           %69.1 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p24, e43.0
  prom-           %69.2 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p25, e43.0
  val?            %69.3 = Call               !v    %69.0(%69.1, %69.2) e43.0   <vec->
  val?            %69.4 = CallBuiltin        !v    names(%69.3) e43.0   <nil->
  val?^ | miss    %69.5 = LdVar              eR    names, e43.0
  lgl$#-          %69.6 = Identical                %69.5, <blt names>
  void                    Branch                   %69.6 -> BB71 (if true) | BB72 (if false)
BB70   <- [67]
  void                    Nop                !     
  val?^ | miss    %70.1 = %67.0
  dr              %70.2 = CallTarget@0x5638bef6f760[Call#27]
  goto BB23
BB71   <- [69]
  (cls|spec|blt)  %71.0 = LdFun              !v    @, <0x5638b9a6cbd8>, e43.0
  prom-           %71.1 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p28, e43.0
  prom-           %71.2 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p29, e43.0
  val?            %71.3 = Call               !v    %71.0(%71.1, %71.2) e43.0   <vec->
  val?            %71.4 = CallBuiltin        !v    names(%71.3) e43.0   <nil->
  lgl$#-          %71.5 = IsType                   %71.4 isA val?+
  lgl$#-          %71.6 = IsType                   %69.4 isA val?+
  void                    Branch                   %71.6 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  fs              %72.0 = FrameState         R     0x5638bf4548b0+937: [<blt any>, <blt is.na>], env=e43.0
  prom-           %72.1 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p26, e43.0
  val?^           %72.2 = CastType                 up %72.1
  prom-           %72.3 = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p22, e43.0
  val?^           %72.4 = CastType                 up %72.3
  env             e72.5 = (MkEnv)            l     x=%72.4, table=%72.2, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %72.6 = FrameState         R     0x5638ba281d40+9: [], env=e72.5, next=%72.0
  fs              %72.7 = FrameState         R     0x5638bdbf8910+32(pr): [%69.4], env=e43.0, next=%72.6
  void                    Deopt              !v    %72.7, CallTarget@0x5638bef6f760[Call#29], %69.5   !
BB73   <- [71]
  val?+           %73.0 = CastType           d     dn %69.4   <(int|str)+>
  void                    Branch                   %71.5 -> BB75 (if true) | BB76 (if false)
BB74   <- [71]
  void                    Nop                !     
  val?            %74.1 = %69.4
  dr              %74.2 = Typecheck@0x5638ba2d4cb0[Type#0]
  goto BB27
BB75   <- [73]
  val?+           %75.0 = CastType           d     dn %71.4   <nil->
  val+            %75.1 = CallSafeBuiltin    wed   match(%73.0, %75.0, NA, nil)    <int->
  lgl$#-          %75.2 = IsType                   %75.1 isA int-
  void                    Branch                   %75.2 -> BB77 (if true) | BB78 (if false)
BB76   <- [73]
  void                    Nop                !     
  val?            %76.1 = %71.4
  dr              %76.2 = Typecheck@0x5638ba2d4cb0[Type#1]
  goto BB27
BB27   <- [74, 76]
  val?^ | miss    %27.0 = Phi                      %74.1:BB74, %76.1:BB76
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %74.2:BB74, %76.2:BB76
  dr              %27.3 = %27.2
  prom-           %27.4 = MkArg                    %69.4, completeClassDefinition[0x5638bdc3acd0]_p22 (!refl), e43.0
  val?~           %27.5 = CastType                 up %27.4
  fs              %27.6 = FrameState         R     0x5638bf4548b0+937: [<blt any>, <blt is.na>], env=e43.0
  prom-           %27.7 = MkArg                    %71.4, completeClassDefinition[0x5638bdc3acd0]_p26 (!refl), e43.0
  val?~           %27.8 = CastType                 up %27.7
  env             e27.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%27.8, x=%27.5, parent=R_BaseNamespace, context 0
  fs              %27.10 = FrameState         R     0x5638ba281d40+23: [%69.4, %71.4], env=e27.9, next=%27.6
  void                    Deopt              !v    %27.10, %27.3, %27.1   !
BB77   <- [75]
  int-            %77.0 = CastType           d     dn %75.1
  lgl-            %77.1 = CallSafeBuiltin    wed   is.na(%77.0)    <lgl->
  lgl-            %77.2 = Not                wed   %77.1, elided
  val?            %77.3 = CallBuiltin        !v    any(%77.2) e43.0   <lgl$->
  lgl$#-          %77.4 = IsType                   %77.3 isA lgl$-
  void                    Branch                   %77.4 -> BB79 (if true) | BB80 (if false)
BB78   <- [75]
  prom-           %78.0 = MkArg                    %73.0, completeClassDefinition[0x5638bdc3acd0]_p22 (!refl), e43.0
  val?~           %78.1 = CastType                 up %78.0
  fs              %78.2 = FrameState         R     0x5638bf4548b0+937: [<blt any>, <blt is.na>], env=e43.0
  prom-           %78.3 = MkArg                    %75.0, completeClassDefinition[0x5638bdc3acd0]_p26 (!refl), e43.0
  val?~           %78.4 = CastType                 up %78.3
  env             e78.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%78.4, x=%78.1, parent=R_BaseNamespace, context 0
  fs              %78.6 = FrameState         R     0x5638ba281d40+69: [%75.1], env=e78.5, next=%78.2
  void                    Deopt              !v    %78.6, Typecheck@0x5638bef6f760[Type#75], %75.1   !
BB79   <- [77]
  lgl$-           %79.0 = CastType           d     dn %77.3
  lgl$-           %79.1 = AsLogical                %79.0
  lgl$#-          %79.2 = Identical                %79.1, false
  void                    Branch                   %79.2 -> BB34 (if true) | BB33 (if false)
BB80   <- [77]
  fs              %80.0 = FrameState         R     0x5638bf4548b0+982: [%77.3], env=e43.0
  void                    Deopt              !v    %80.0, Typecheck@0x5638bef6f760[Type#77], %77.3   !
BB34   <- [79]
  lgl$#-          %34.0 = CheckTrueFalse     e     %79.1
  void                    Branch                   %34.0 -> BB36 (if true) | BB35 (if false)
BB33   <- [79]
  (cls|spec|blt)  %33.0 = LdFun              !v    getOption, e43.0
  fs              %33.1 = FrameState         R     0x5638bf4548b0+999: [%79.1, %33.0], env=e43.0
  void                    Deopt              !v    %33.1, DeadCall@0x5638bef6f760[Call#31], %33.0   !
BB36   <- [34]
  val?^ | miss    %36.0 = LdVar              eR    names, e43.0
  lgl$#-          %36.1 = Identical                <blt names>, %36.0   <@?>
  void                    Branch                   %36.1 -> BB38 (if true) | BB37 (if false)
BB35   <- [34]
  val?^ | miss    %35.0 = LdVar              eR    ClassDef, e43.0
  void                    Visible            v     
  val?            %35.2 = Force!<value>      !     %35.0, e43.0   <other>
  void                    Return             l     %35.2
BB38   <- [36]
  (cls|spec|blt)  %38.0 = LdFun              !v    @, e43.0
  fs              %38.1 = FrameState         R     0x5638bf4548b0+1121: [<blt names>, %38.0], env=e43.0
  void                    Deopt              !v    %38.1, DeadCall@0x5638bef6f760[Call#34], %38.0   !
BB37   <- [36]
  (cls|spec|blt)  %37.0 = LdFun              !v    names, e43.0
  fs              %37.1 = FrameState         R     0x5638bf4548b0+1084: [%37.0], env=e43.0
  void                    Deopt              !v    %37.1, DeadCall@0x5638bef6f760[Call#32], %37.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    immediate, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    virtual, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    extends, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prototype, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    virtual, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x5638b9a6d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p23, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5638b9a6cbd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p24, e0.0
  prom-           %0.3  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p25, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec->
  void                    Return             l     %0.4
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x5638b9a6d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p27, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5638b9a6cbd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p28, e0.0
  prom-           %0.3  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p29, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec->
  void                    Return             l     %0.4
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     slot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p31, e0.0
  prom-           %0.3  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p32, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slotNames, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p33, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p35, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     slot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p37, e0.0
  prom-           %0.3  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p38, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slotNames, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p39, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, completeClassDefinition[0x5638bdc3acd0]_p41, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ completeClassDefinition[0x5638bdc3acd0]                                      │
└──────────────────────────────────────────────────────────────────────────────┘
