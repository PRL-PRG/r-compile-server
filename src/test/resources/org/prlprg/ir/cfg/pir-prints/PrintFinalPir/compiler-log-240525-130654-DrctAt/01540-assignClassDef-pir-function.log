
┌──────────────────────────────────────────────────────────────────────────────┐
│ assignClassDef[0x5638c06e4120]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
assignClassDef[0x5638c06e4120]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     Class=%0.2, def=%0.1, where=%0.0, force(miss)=false, doSubclasses(miss)=missingArg, parent=<env 0x5638ba074378>, context 1
  prom-           %0.4  = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p1, e0.3
  val?^ | miss    %0.5  = CastType                 up %0.4
  void                    StArg              lW    doSubclasses, %0.5, e0.3
  val?^ | miss    %0.7  = LdVar              eR    is, <env 0x5638ba074378>
  lgl$#-          %0.8  = Identical                %0.7, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %0.8 -> BB46 (if true) | BB47 (if false)
BB46   <- [0]
  prom-           %46.0 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p3, e0.3
  val?            %46.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%46.0, "classRepresentation") e0.3   <lgl$->
  lgl$#-          %46.2 = IsType                   %46.1 isA lgl$-
  void                    Branch                   %46.2 -> BB48 (if true) | BB49 (if false)
BB47   <- [0]
  fs              %47.0 = FrameState         R     0x5638c0cabf70+0: [], env=e0.3
  void                    Deopt              !v    %47.0, CallTarget@0x5638bc2e9b40[Call#1], %0.7
BB48   <- [46]
  lgl$-           %48.0 = CastType           d     dn %46.1
  lgl$-           %48.1 = Not                d     %48.0, elided
  lgl$#-          %48.2 = CheckTrueFalse     e     %48.1
  void                    Branch                   %48.2 -> BB44 (if true) | BB5 (if false)
BB49   <- [46]
  fs              %49.0 = FrameState         R     0x5638c0cabf70+37: [%46.1], env=e0.3
  void                    Deopt              !v    %49.0, Typecheck@0x5638bc2e9b40[Type#4], %46.1   !
BB44   <- [48]
  (cls|spec|blt)  %44.0 = LdFun              !v    stop, e0.3
  fs              %44.1 = FrameState         R     0x5638c0cabf70+59: [%44.0], env=e0.3
  void                    Deopt              !v    %44.1, DeadCall@0x5638bc2e9b40[Call#2], %44.0   !
BB5   <- [48]
  (cls|spec|blt)  %5.0  = LdFun              !v    @, <0x5638b9a6cbd8>, e0.3
  prom-           %5.1  = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p4, e0.3
  prom-           %5.2  = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p5, e0.3
  val?            %5.3  = Call               !v    %5.0(%5.1, %5.2) e0.3   <str$+>
  void                    StVar              lW    clName, %5.3, e0.3
  (cls|spec|blt)  %5.5  = LdFun              !v    attributes<-, <0x5638b9a6d128>, e0.3
  val?^ | miss    %5.6  = LdVar              eR    clName, e0.3
  lgl$#-          %5.7  = IsType                   %5.6 isA val?~+ | miss
  void                    Branch                   %5.7 -> BB50 (if true) | BB51 (if false)
BB50   <- [5]
  val?~+ | miss   %50.0 = CastType           d     dn %5.6
  val?+           %50.1 = Force!<value>            %50.0,    <str$+>
  val?            %50.2 = NamedCall          !v    %5.5(%50.1, value=nil) e0.3
  void                    StVar              lW    clName, %50.2, e0.3
  val?^ | miss    %50.4 = LdVar              eR    .identC, e0.3
  lgl$#-          %50.5 = Identical                %50.4, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %50.5 -> BB52 (if true) | BB53 (if false)
BB51   <- [5]
  fs              %51.0 = FrameState         R     0x5638c0cabf70+157: [nil], env=e0.3
  void                    Deopt              !v    %51.0, Typecheck@0x5638bc2e9b40[Type#14], %5.6   !
BB52   <- [50]
  prom-           %52.0 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p7, e0.3
  prom-           %52.1 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p8 (!refl), e0.3
  val?            %52.2 = StaticCall         !v    .identC[0x5638c601a830](%52.0, %52.1) e0.3   <lgl$->
  lgl$#-          %52.3 = IsType                   %52.2 isA lgl$-
  void                    Branch                   %52.3 -> BB54 (if true) | BB55 (if false)
BB53   <- [50]
  fs              %53.0 = FrameState         R     0x5638c0cabf70+225: [], env=e0.3
  void                    Deopt              !v    %53.0, CallTarget@0x5638bc2e9b40[Call#9], %50.4   !
BB54   <- [52]
  lgl$-           %54.0 = CastType           d     dn %52.2
  lgl$-           %54.1 = Not                d     %54.0, elided
  lgl$#-          %54.2 = CheckTrueFalse     e     %54.1
  void                    Branch                   %54.2 -> BB43 (if true) | BB12 (if false)
BB55   <- [52]
  void                    Nop                !     
  val?            %55.1 = %52.2
  dr              %55.2 = Typecheck@0x5638bc2e9b40[Type#17]
  goto BB10
BB43   <- [54]
  (cls|spec|blt)  %43.0 = LdFun              !v    stop, e0.3
  fs              %43.1 = FrameState         R     0x5638c0cabf70+284: [%43.0], env=e0.3
  void                    Deopt              !v    %43.1, DeadCall@0x5638bc2e9b40[Call#10], %43.0   !
BB12   <- [54]
  val?^ | miss    %12.0 = LdVar              eR    as.environment, e0.3
  lgl$#-          %12.1 = Identical                <blt as.environment>, %12.0   <true>
  void                    Branch                   %12.1 -> BB56 (if true) | BB57 (if false)
BB10   <- [55, 57]
  val?^ | miss    %10.0 = Phi                      %55.1:BB55, %57.1:BB57
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %55.2:BB55, %57.2:BB57
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x5638c0cabf70+262: [%52.2], env=e0.3
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB56   <- [12]
  val?^ | miss    %56.0 = LdVar              eR    where, e0.3
  val?            %56.1 = Force!<lazy>       !v    %56.0, e0.3   <env->
  val?            %56.2 = CallBuiltin        !v    as.environment(%56.1) e0.3   <env->
  void                    StVar              lW    where, %56.2, e0.3
  val?^ | miss    %56.4 = LdVar              eR    classMetaName, e0.3
  lgl$#-          %56.5 = Identical                %56.4, function(name) <(rir::DispatchTable*)0x5638bce|...
  void                    Branch                   %56.5 -> BB58 (if true) | BB59 (if false)
BB57   <- [12]
  void                    Nop                !     
  lgl$#-          %57.1 = %12.1
  dr              %57.2 = DeadBranchReached@0x5638bc2e9b40[Test#0]
  goto BB10
BB58   <- [56]
  prom-           %58.0 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p9, e0.3
  ct              %58.1 = PushContext        lCL   %58.0, classMetaName(Class), function(name) <(rir::DispatchTable*)0x5638bce|..., e0.3
  val?^           %58.2 = CastType                 up %58.0
  val?^ | miss    %58.3 = LdVar              eR    methodsPackageMetaName, <env 0x5638ba074378>
  lgl$#-          %58.4 = Identical                %58.3, function(prefix, name, package="") <(rir::Disp|...
  void                    Branch                   %58.4 -> BB60 (if true) | BB61 (if false)
BB59   <- [56]
  fs              %59.0 = FrameState         R     0x5638c0cabf70+430: [], env=e0.3
  void                    Deopt              !v    %59.0, CallTarget@0x5638bc2e9b40[Call#16], %56.4   !
BB60   <- [58]
  env             e60.0 = MkEnv              l     name=%58.2, parent=<env 0x5638ba074378>, context 1
  prom-           %60.1 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p22, e60.0
  ct              %60.2 = PushContext        lCL   "C", %60.1, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|..., e60.0
  val?^           %60.3 = CastType                 up %60.1
  val?^ | miss    %60.4 = LdVar              eR    .Call, <env 0x5638ba074378>
  lgl$#-          %60.5 = Identical                <blt .Call>, %60.4   <true>
  void                    Branch                   %60.5 -> BB62 (if true) | BB63 (if false)
BB61   <- [58]
  fs              %61.0 = FrameState         R     0x5638c0cabf70+462: [], env=e0.3
  env             e61.1 = (MkEnv)            l     name=%58.2, parent=<env 0x5638ba074378>, context 1
  fs              %61.2 = FrameState         R     0x5638ba7ba6b0+0: [], env=e61.1, next=%61.0
  void                    Deopt              !v    %61.2, CallTarget@0x5638bd00e6d8[Call#0], %58.3   !
BB62   <- [60]
  val?^ | miss    %62.0 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x5638ba074378>
  env             e62.1 = MkEnv              l     prefix="C", name=%60.3, package(miss)="", parent=<env 0x5638ba074378>, context 1
  val?            %62.2 = Force!<value>      !v    %62.0, e62.1   <vec>
  val?^ | miss    %62.3 = LdVar              eR    prefix, e62.1
  val?            %62.4 = Force!<value>      !v    %62.3, e62.1   <str$->
  val?^ | miss    %62.5 = LdVar              eR    name, e62.1
  val?            %62.6 = Force!<lazy>       !v    %62.5, e62.1   <str$->
  val?^ | miss    %62.7 = LdVar              eR    package, e62.1
  val?            %62.8 = Force!<lazy>       !v    %62.7, e62.1   <str$->
  val?            %62.9 = CallBuiltin        !     .Call(%62.2, %62.4, %62.6, %62.8) e62.1   <str$->
  val?            %62.10 = PopContext         C     %62.9, %60.2   <str$->
  val?            %62.11 = PopContext         C     %62.10, %58.1   <str$->
  void                    StVar              lW    mname, %62.11, e0.3
  val?^ | miss    %62.13 = LdVar              eR    exists, e0.3
  lgl$#-          %62.14 = Identical                %62.13, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %62.14 -> BB64 (if true) | BB65 (if false)
BB63   <- [60]
  fs              %63.0 = FrameState         R     0x5638c0cabf70+462: [], env=e0.3
  fs              %63.1 = FrameState         R     0x5638ba7ba6b0+37: [], env=e60.0, next=%63.0
  env             e63.2 = (MkEnv)            l     prefix="C", name=%60.3, package(miss)="", parent=<env 0x5638ba074378>, context 1
  fs              %63.3 = FrameState         R     0x5638bc218260+0: [], env=e63.2, next=%63.1
  void                    Deopt              !v    %63.3, DeadBranchReached@0x5638bccf8f10[Test#0], %60.5   !
BB64   <- [62]
  prom-           %64.0 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p10 (!refl), e0.3
  prom-           %64.1 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p11, e0.3
  val?            %64.2 = StaticCall         !     exists[0x5638bfc2ca60](%64.0, missingArg, %64.1, missingArg, missingArg, false) { 0 2n 5n } e0.3   <lgl$->
  lgl$#-          %64.3 = IsType                   %64.2 isA lgl$-
  void                    Branch                   %64.3 -> BB66 (if true) | BB67 (if false)
BB65   <- [62]
  fs              %65.0 = FrameState         R     0x5638c0cabf70+476: [], env=e0.3
  void                    Deopt              !v    %65.0, CallTarget@0x5638bc2e9b40[Call#17], %62.13   !
BB66   <- [64]
  lgl$-           %66.0 = CastType           d     dn %64.2
  lgl$-           %66.1 = AsLogical                %66.0
  lgl$#-          %66.2 = Identical                %66.1, false
  void                    Branch                   %66.2 -> BB42 (if true) | BB23 (if false)
BB67   <- [64]
  void                    Nop                !     
  val?            %67.1 = %64.2
  dr              %67.2 = Typecheck@0x5638bc2e9b40[Type#32]
  goto BB21
BB42   <- [66]
  void                    Nop                !     
  lgl$-           %42.1 = %66.1
  goto BB26
BB23   <- [66]
  val?^ | miss    %23.0 = LdVar              eR    bindingIsLocked, e0.3
  lgl$#-          %23.1 = Identical                %23.0, function(sym, env) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %23.1 -> BB68 (if true) | BB69 (if false)
BB21   <- [67, 69]
  val?^ | miss    %21.0 = Phi                      %67.1:BB67, %69.1:BB69
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %67.2:BB67, %69.2:BB69
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x5638c0cabf70+530: [%64.2], env=e0.3
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB26   <- [42, 70]
  lgl$-           %26.0 = Phi                      %70.3:BB70, %42.1:BB42
  lgl$-           %26.1 = %26.0
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB39 (if true) | BB29 (if false)
BB68   <- [23]
  prom-           %68.0 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p13, e0.3
  val?^ | miss    %68.1 = LdVar              eR    mname, e0.3
  void                    Visible            v     
  val?            %68.3 = Force!<value>      !     %68.1, e0.3   <str$->
  prom-           %68.4 = MkArg                    %68.3, assignClassDef[0x5638c06e4120]_p12 (!refl), 
  val?            %68.5 = StaticCall         !     bindingIsLocked[0x5638b9d57de0](%68.4, %68.0) e0.3   <lgl$->
  lgl$#-          %68.6 = IsType                   %68.5 isA lgl$-
  void                    Branch                   %68.6 -> BB70 (if true) | BB71 (if false)
BB69   <- [23]
  void                    Nop                !     
  val?^ | miss    %69.1 = %23.0
  dr              %69.2 = CallTarget@0x5638bc2e9b40[Call#18]
  goto BB21
BB39   <- [26]
  val?^ | miss    %39.0 = LdVar              eR    force, e0.3
  val?            %39.1 = Force!             !v    %39.0, e0.3   <val?_>
  lgl$#-          %39.2 = CheckTrueFalse     we    %39.1
  void                    Branch                   %39.2 -> BB41 (if true) | BB40 (if false)
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    assign, e0.3
  lgl$#-          %29.1 = Identical                %29.0, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %29.1 -> BB72 (if true) | BB73 (if false)
BB70   <- [68]
  lgl$-           %70.0 = CastType           d     dn %68.5
  lgl$-           %70.1 = AsLogical                %70.0
  lgl$-           %70.2 = LAnd                     %66.1, %70.1
  lgl$-           %70.3 = %70.2
  goto BB26
BB71   <- [68]
  fs              %71.0 = FrameState         R     0x5638c0cabf70+579: [%66.1, %68.5], env=e0.3
  void                    Deopt              !v    %71.0, Typecheck@0x5638bc2e9b40[Type#35], %68.5   !
BB41   <- [39]
  (cls|spec|blt)  %41.0 = LdFun              !v    .assignOverBinding, e0.3
  fs              %41.1 = FrameState         R     0x5638c0cabf70+703: [%41.0], env=e0.3
  void                    Deopt              !v    %41.1, DeadCall@0x5638bc2e9b40[Call#25], %41.0   !
BB40   <- [39]
  (cls|spec|blt)  %40.0 = LdFun              !v    stop, e0.3
  fs              %40.1 = FrameState         R     0x5638c0cabf70+665: [%40.0], env=e0.3
  void                    Deopt              !v    %40.1, DeadCall@0x5638bc2e9b40[Call#20], %40.0   !
BB72   <- [29]
  prom-           %72.0 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p14, e0.3
  prom-           %72.1 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p15, e0.3
  prom-           %72.2 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p16, e0.3
  val?            %72.3 = StaticCall         !     assign[0x5638bec38e80](%72.0, %72.1, %72.2) e0.3
  val?^ | miss    %72.4 = LdVar              eR    cacheOnAssign, e0.3
  lgl$#-          %72.5 = Identical                %72.4, function(env) <(rir::DispatchTable*)0x5638bba9|...
  void                    Branch                   %72.5 -> BB74 (if true) | BB75 (if false)
BB73   <- [29]
  fs              %73.0 = FrameState         R     0x5638c0cabf70+586: [%26.1], env=e0.3
  void                    Deopt              !v    %73.0, CallTarget@0x5638bc2e9b40[Call#19], %29.0   !
BB74   <- [72]
  prom-           %74.0 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p17, e0.3
  ct              %74.1 = PushContext        lCL   %74.0, cacheOnAssign(where), function(env) <(rir::DispatchTable*)0x5638bba9|..., e0.3
  val?^           %74.2 = CastType                 up %74.0
  env             e74.3 = MkEnv              l     env=%74.2, parent=<env 0x5638ba074378>, context 1
  (cls|spec|blt)  %74.4 = LdFun              !     $, <0x5638b9a6cc10>, <env 0x5638ba074378>
  prom-           %74.5 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p23, e74.3
  prom-           %74.6 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p24, e74.3
  val?            %74.7 = Call               !     %74.4(%74.5, %74.6) e74.3   <nil->
  lgl$-           %74.8 = Is                       %74.7, NULL
  lgl$-           %74.9 = AsLogical                %74.8
  lgl$#-          %74.10 = Identical                %74.9, true
  void                    Branch                   %74.10 -> BB33 (if true) | BB32 (if false)
BB75   <- [72]
  fs              %75.0 = FrameState         R     0x5638c0cabf70+634: [%72.3], env=e0.3
  void                    Deopt              !v    %75.0, CallTarget@0x5638bc2e9b40[Call#26], %72.4   !
BB33   <- [74]
  val?            %33.0 = PopContext         C     %74.9, %74.1   <lgl$->
  lgl$#-          %33.1 = IsType                   %33.0 isA lgl$-
  void                    Branch                   %33.1 -> BB76 (if true) | BB77 (if false)
BB32   <- [74]
  fs              %32.0 = FrameState         R     0x5638c0cabf70+778: [], env=e0.3
  (cls|spec|blt)  %32.1 = LdFun              !v    $, e74.3
  fs              %32.2 = FrameState         R     0x5638bf55f440+59: [%74.9, %32.1], env=e74.3, next=%32.0
  void                    Deopt              !v    %32.2, DeadCall@0x5638c5b445f8[Call#1], %32.1   !
BB76   <- [33]
  lgl$-           %76.0 = CastType           d     dn %33.0
  lgl$#-          %76.1 = CheckTrueFalse     e     %76.0
  void                    Branch                   %76.1 -> BB38 (if true) | BB36 (if false)
BB77   <- [33]
  void                    Nop                !     
  val?            %77.1 = %33.0
  dr              %77.2 = Typecheck@0x5638bc2e9b40[Type#50]
  goto BB34
BB38   <- [76]
  val?^ | miss    %38.0 = LdVar              eR    .cacheClass, e0.3
  lgl$#-          %38.1 = Identical                %38.0, function(name, def, doSubclasses=FALSE, env) <|...
  void                    Branch                   %38.1 -> BB78 (if true) | BB79 (if false)
BB36   <- [76]
  void                    Invisible          v     
  nil-            %36.1 = nil
  goto BB37
BB34   <- [77, 79]
  val?^ | miss    %34.0 = Phi                      %77.1:BB77, %79.1:BB79
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %77.2:BB77, %79.2:BB79
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x5638c0cabf70+778: [%33.0], env=e0.3
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB78   <- [38]
  prom-           %78.0 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p18, e0.3
  prom-           %78.1 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p19, e0.3
  prom-           %78.2 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p20, e0.3
  prom-           %78.3 = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p21, e0.3
  val?            %78.4 = StaticCall         !     .cacheClass[0x5638c5c6e9f0](%78.0, %78.1, %78.2, %78.3) e0.3   <other>
  val?            %78.5 = %78.4
  goto BB37
BB79   <- [38]
  void                    Nop                !     
  val?^ | miss    %79.1 = %38.0
  dr              %79.2 = CallTarget@0x5638bc2e9b40[Call#27]
  goto BB34
BB37   <- [36, 78]
  val?            %37.0 = Phi                      %36.1:BB36, %78.5:BB78
  val?            %37.1 = %37.0
  void                    Return             l     %37.1
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is, <0x5638bac01100>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, assignClassDef[0x5638c06e4120]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "ClassUnionRepresentation") e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    className, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    clName, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    clName, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    doSubclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .cacheOnAssign, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ assignClassDef[0x5638c06e4120]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
