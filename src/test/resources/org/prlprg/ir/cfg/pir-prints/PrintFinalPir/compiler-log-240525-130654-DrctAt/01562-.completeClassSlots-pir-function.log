
┌──────────────────────────────────────────────────────────────────────────────┐
│ .completeClassSlots[0x5638c5de2670]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj1              │
│ Properties:                                                                  │
├────── Final PIR Version
.completeClassSlots[0x5638c5de2670]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     ClassDef=%0.1, where=%0.0, parent=<env 0x5638ba074378>, context 1
  (cls|spec|blt)  %0.3  = LdFun              !v    @, <0x5638b9a6cbd8>, <env 0x5638ba074378>
  prom-           %0.4  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p0 (!refl), e0.2
  prom-           %0.5  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p1, e0.2
  val?            %0.6  = Call               !v    %0.3(%0.4, %0.5) e0.2   <vec->
  void                    StVar              lW    properties, %0.6, e0.2
  val?^ | miss    %0.8  = LdVar              eR    getAllSuperClasses, e0.2
  lgl$#-          %0.9  = Identical                %0.8, function(ClassDef, simpleOnly=TRUE) <(rir::Dis|...
  void                    Branch                   %0.9 -> BB25 (if true) | BB26 (if false)
BB25   <- [0]
  prom-           %25.0 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p2, e0.2
  ct              %25.1 = PushContext        lCL   %25.0, true, getAllSuperClasses(ClassDef, TRUE), function(ClassDef, simpleOnly=TRUE) <(rir::Dis|..., e0.2
  val?^           %25.2 = CastType                 up %25.0
  env             e25.3 = MkEnv              l     ClassDef=%25.2, simpleOnly=true, parent=<env 0x5638ba074378>, context 1
  (cls|spec|blt)  %25.4 = LdFun              !v    superClassDepth, <0x5638c59b8bc8>, <env 0x5638ba074378>
  prom-           %25.5 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p9, e25.3
  prom-           %25.6 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p10 (!refl), e25.3
  val?            %25.7 = NamedCall          !v    %25.4(%25.5, simpleOnly=%25.6) e25.3   <vec+>
  void                    StVar              lW    temp, %25.7, e25.3
  val?^ | miss    %25.9 = LdVar              eR    unique, e25.3
  lgl$#-          %25.10 = Identical                %25.9, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %25.10 -> BB27 (if true) | BB28 (if false)
BB26   <- [0]
  fs              %26.0 = FrameState         R     0x5638c5934ae0+51: [], env=e0.2
  void                    Deopt              !v    %26.0, CallTarget@0x5638c58e0d48[Call#1], %0.8   !
BB27   <- [25]
  (cls|spec|blt)  %27.0 = LdFun              !v    $, <0x5638b9a6cc10>, e25.3
  prom-           %27.1 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p11, e25.3
  prom-           %27.2 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p12, e25.3
  val?            %27.3 = Call               !v    %27.0(%27.1, %27.2) e25.3   <nil->
  lgl$#-          %27.4 = IsType                   %27.3 isA val+   <true>
  void                    Branch                   %27.4 -> BB23 (if true) | BB5 (if false)
BB28   <- [25]
  fs              %28.0 = FrameState         R     0x5638c5934ae0+88: [], env=e0.2
  fs              %28.1 = FrameState         R     0x5638bf87a380+59: [], env=e25.3, next=%28.0
  void                    Deopt              !v    %28.1, CallTarget@0x5638c58e0928[Call#1], %25.9   !
BB23   <- [27]
  (cls|spec|blt)  %23.0 = LdFun              !v    sort.list, <0x5638bce04580>, e25.3
  prom-           %23.1 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p17, e25.3
  val?            %23.2 = Call               !v    %23.0(%23.1) e25.3   <int->
  val?            %23.3 = %23.2
  goto BB6
BB5   <- [27]
  prom-           %5.0  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p13, e25.3
  prom-           %5.1  = %5.0
  goto BB6
BB6   <- [5, 23]
  val?            %6.0  = Phi                      %23.3:BB23, %5.1:BB5
  val?            %6.1  = %6.0
  val?            %6.2  = Extract1_1D        !v    %27.3, %6.1, e25.3   <nil->
  val?            %6.3  = StaticCall         !v    unique[0x5638c1a309e0](%6.2) { 0 } e25.3   <nil->
  val?            %6.4  = PopContext         C     %6.3, %25.1   <nil->
  void                    StVar              lW    ext, %6.4, e0.2
  lgl$#-          %6.6  = IsType                   %6.4 isA val?-
  val?^ | miss    %6.7  = LdVar              eR    length, e0.2
  lgl$#-          %6.8  = Identical                <blt length>, %6.7   <true>
  void                    Branch                   %6.8 -> BB29 (if true) | BB30 (if false)
BB29   <- [6]
  val             %29.0 = ChkMissing         e     %6.4
  void                    Branch                   %6.6 -> BB31 (if true) | BB32 (if false)
BB30   <- [6]
  void                    Nop                !     
  lgl$#-          %30.1 = %6.8
  dr              %30.2 = DeadBranchReached@0x5638c58e0d48[Test#0]
  goto BB7
BB31   <- [29]
  val?-           %31.0 = CastType           d     dn %6.4   <nil->
  (int|real)$-    %31.1 = CallSafeBuiltin    wed   length(%31.0)    <int$->
  lgl$#-          %31.2 = IsType                   %31.1 isA int$-
  lgl$#-          %31.3 = Identical                %6.7, <blt length>
  void                    Branch                   %31.2 -> BB33 (if true) | BB34 (if false)
BB32   <- [29]
  void                    Nop                !     
  val?            %32.1 = %6.4
  dr              %32.2 = Typecheck@0x5638c58e0d48[Type#4]
  goto BB7
BB7   <- [30, 32]
  val?^ | miss    %7.0  = Phi                      %30.1:BB30, %32.1:BB32
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %30.2:BB30, %32.2:BB32
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x5638c5934ae0+102: [], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB33   <- [31]
  int$-           %33.0 = CastType           d     dn %31.1
  lgl$#-          %33.1 = CheckTrueFalse     e     %33.0
  void                    Branch                   %33.1 -> BB22 (if true) | BB11 (if false)
BB34   <- [31]
  void                    Nop                !     
  (int|real)$-    %34.1 = %31.1
  dr              %34.2 = Typecheck@0x5638c58e0d48[Type#7]
  goto BB9
BB22   <- [33]
  (cls|spec|blt)  %22.0 = LdFun              !v    vector, e0.2
  fs              %22.1 = FrameState         R     0x5638c5934ae0+214: [%22.0], env=e0.2
  void                    Deopt              !v    %22.1, DeadCall@0x5638c58e0d48[Call#3], %22.0   !
BB11   <- [33]
  val?^ | miss    %11.0 = LdVar              eR    rep.int, e0.2
  lgl$#-          %11.1 = Identical                %11.0, function(x, times) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %11.1 -> BB35 (if true) | BB36 (if false)
BB9   <- [34, 36, 38, 40]
  val?^ | miss    %9.0  = Phi                      %34.1:BB34, %36.1:BB36, %38.1:BB38, %40.1:BB40
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %34.2:BB34, %36.2:BB36, %38.2:BB38, %40.2:BB40
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x5638c5934ae0+193: [%31.1], env=e0.2
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB35   <- [11]
  void                    Branch                   %31.3 -> BB37 (if true) | BB38 (if false)
BB36   <- [11]
  void                    Nop                !     
  val?^ | miss    %36.1 = %11.0
  dr              %36.2 = CallTarget@0x5638c58e0d48[Call#17]
  goto BB9
BB37   <- [35]
  val?^ | miss    %37.0 = LdVar              eR    properties, e0.2
  lgl$#-          %37.1 = IsType                   %37.0 isA val?~- | miss
  void                    Branch                   %37.1 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  void                    Nop                !     
  val?^ | miss    %38.1 = %6.7
  dr              %38.2 = CallTarget@0x5638c58e0d48[Call#18]
  goto BB9
BB39   <- [37]
  val?~- | miss   %39.0 = CastType           d     dn %37.0
  val?-           %39.1 = Force!<value>            %39.0,    <vec->
  (int|real)$-    %39.2 = CallSafeBuiltin    wed   length(%39.1)    <int$->
  lgl$#-          %39.3 = IsType                   %39.2 isA int$-
  void                    Branch                   %39.3 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  void                    Nop                !     
  val?^ | miss    %40.1 = %37.0
  dr              %40.2 = Typecheck@0x5638c58e0d48[Type#59]
  goto BB9
BB41   <- [39]
  int$-           %41.0 = CastType           d     dn %39.2
  val+            %41.1 = CallSafeBuiltin    wed   rep.int(false, %41.0)    <lgl->
  void                    StVar              lW    undefClasses, %41.1, e0.2
  val?^ | miss    %41.3 = LdVar              eR    seq_along, e0.2
  lgl$#-          %41.4 = Identical                <blt seq_along>, %41.3   <true>
  void                    Branch                   %41.4 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x5638c5934ae0+1201: [], env=e0.2
  prom-           %42.1 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p3, e0.2
  val?^           %42.2 = CastType                 up %42.1
  env             e42.3 = (MkEnv)            l     times=%42.2, x=false, parent=R_BaseNamespace, context 0
  fs              %42.4 = FrameState         R     0x5638bb99f800+23: [false], env=e42.3, next=%42.0
  fs              %42.5 = FrameState         R     0x5638bd2fcde0+32(pr): [%39.2], env=e0.2, next=%42.4
  void                    Deopt              !v    %42.5, Typecheck@0x5638c58e0d48[Type#60], %39.2   !
BB43   <- [41]
  val?            %43.0 = CallBuiltin        !v    seq_along(%39.1) e0.2   <int->
  val?+           %43.1 = ToForSeq           e     %43.0
  int$-           %43.2 = Length                   %43.1
  int$-           %43.3 = Inc                      0L
  lgl$-           %43.4 = Lt                 d     %43.2, %43.3, elided   <true>
  lgl$#-          %43.5 = Identical                %43.4, true
  void                    Branch                   %43.5 -> BB45 (if true) | BB46 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x5638c5934ae0+1215: [], env=e0.2
  void                    Deopt              !v    %44.0, DeadBranchReached@0x5638c58e0d48[Test#6], %41.4   !
BB45   <- [43]
  val?^ | miss    %45.0 = LdVar              eR    any, e0.2
  lgl$#-          %45.1 = Identical                <blt any>, %45.0   <true>
  void                    Branch                   %45.1 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  void                    Nop                !     
  lgl$#-          %46.1 = %43.5
  dr              %46.2 = DeadBranchReached@0x5638c58e0d48[Test#7]
  goto BB16
BB47   <- [45]
  val?^ | miss    %47.0 = LdVar              eR    undefClasses, e0.2
  lgl$#-          %47.1 = IsType                   %47.0 isA lgl-
  void                    Branch                   %47.1 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  void                    Nop                !     
  lgl$#-          %48.1 = %45.1
  dr              %48.2 = DeadBranchReached@0x5638c58e0d48[Test#12]
  goto BB16
BB16   <- [46, 48, 50]
  val?^ | miss    %16.0 = Phi                      %46.1:BB46, %48.1:BB48, %50.1:BB50
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %46.2:BB46, %48.2:BB48, %50.2:BB50
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x5638c5934ae0+1306: [%43.0], env=e0.2
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB49   <- [47]
  lgl-            %49.0 = CastType           d     dn %47.0
  val?            %49.1 = CallBuiltin        !v    any(%49.0) e0.2   <lgl$->
  lgl$#-          %49.2 = IsType                   %49.1 isA lgl$-
  void                    Branch                   %49.2 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  void                    Nop                !     
  val?^ | miss    %50.1 = %47.0
  dr              %50.2 = Typecheck@0x5638c58e0d48[Type#116]
  goto BB16
BB51   <- [49]
  lgl$-           %51.0 = CastType           d     dn %49.1
  lgl$#-          %51.1 = CheckTrueFalse     e     %51.0
  void                    Branch                   %51.1 -> BB21 (if true) | BB20 (if false)
BB52   <- [49]
  fs              %52.0 = FrameState         R     0x5638c5934ae0+2303: [%49.1], env=e0.2
  void                    Deopt              !v    %52.0, Typecheck@0x5638c58e0d48[Type#117], %49.1   !
BB21   <- [51]
  (cls|spec|blt)  %21.0 = LdFun              !v    warning, e0.2
  fs              %21.1 = FrameState         R     0x5638c5934ae0+2324: [%21.0], env=e0.2
  void                    Deopt              !v    %21.1, DeadCall@0x5638c58e0d48[Call#33], %21.0   !
BB20   <- [51]
  (cls|spec|blt)  %20.0 = LdFun              !v    <-, <0x5638b9a61da8>, e0.2
  prom-           %20.1 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p5, e0.2
  prom-           %20.2 = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p8, e0.2
  val?            %20.3 = Call               !v    %20.0(%20.1, %20.2) e0.2
  val?^ | miss    %20.4 = LdVar              eR    ClassDef, e0.2
  void                    Visible            v     
  val?            %20.6 = Force!<value>      !     %20.4, e0.2   <other>
  void                    Return             l     %20.6
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, <0x5638b9a6da90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p6, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p7, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simpleOnly, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sort.list, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p14, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p15, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p16, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    depth, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x5638b9a6cc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p18, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638c5de2670]_p19, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real->
  void                    Return             l     %0.4
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    depth, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ .completeClassSlots[0x5638c5de2670]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
