
┌──────────────────────────────────────────────────────────────────────────────┐
│ is[0x5638c102cf80]                                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1                │
│ Properties:                                                                  │
├────── Final PIR Version
is[0x5638c102cf80]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    class, <env 0x5638ba074378>
  lgl$#-          %0.3  = Identical                <blt class>, %0.2   <true>
  void                    Branch                   %0.3 -> BB88 (if true) | BB89 (if false)
BB88   <- [0]
  env             e88.0 = MkEnv              l     object=%0.1, class2=%0.0, parent=<env 0x5638ba074378>, context 1
  val?            %88.1 = Force!<lazy>       !v    %0.1, e88.0   <val?>
  val?            %88.2 = CallBuiltin        !v    class(%88.1) e88.0   <str$+>
  void                    StVar              lW    class1, %88.2, e88.0
  lgl$#-          %88.4 = IsType                   %88.2 isA val?+
  val?^ | miss    %88.5 = LdVar              eR    length, e88.0
  lgl$#-          %88.6 = Identical                <blt length>, %88.5   <true>
  void                    Branch                   %88.6 -> BB90 (if true) | BB91 (if false)
BB89   <- [0]
  env             e89.0 = (MkEnv)            l     object=%0.1, class2=%0.0, parent=<env 0x5638ba074378>, context 1
  fs              %89.1 = FrameState         R     0x5638bbbb31c0+0: [], env=e89.0
  void                    Deopt              !v    %89.1, DeadBranchReached@0x5638bad509e8[Test#0], %0.3
BB90   <- [88]
  val             %90.0 = ChkMissing         e     %88.2
  void                    Branch                   %88.4 -> BB92 (if true) | BB93 (if false)
BB91   <- [88]
  void                    Nop                !     
  lgl$#-          %91.1 = %88.6
  dr              %91.2 = DeadBranchReached@0x5638bad509e8[Test#1]
  goto BB3
BB92   <- [90]
  val?+           %92.0 = CastType           d     dn %88.2   <str$+>
  (int|real)$-    %92.1 = CallSafeBuiltin    wed   length(%92.0)    <int$->
  lgl$#-          %92.2 = IsType                   %92.1 isA int$-
  void                    Branch                   %92.2 -> BB94 (if true) | BB95 (if false)
BB93   <- [90]
  void                    Nop                !     
  val?            %93.1 = %88.2
  dr              %93.2 = Typecheck@0x5638bad509e8[Type#2]
  goto BB3
BB3   <- [91, 93]
  val?^ | miss    %3.0  = Phi                      %91.1:BB91, %93.1:BB93
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %91.2:BB91, %93.2:BB93
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5638bbbb31c0+105: [], env=e88.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB94   <- [92]
  int$-           %94.0 = CastType           d     dn %92.1
  lgl$-           %94.1 = Gt                 d     %94.0, 1L, elided   <lgl$->
  void                    StVar              lW    S3Case, %94.1, e88.0
  lgl$#-          %94.3 = CheckTrueFalse     e     %94.1
  void                    Branch                   %94.3 -> BB86 (if true) | BB7 (if false)
BB95   <- [92]
  fs              %95.0 = FrameState         R     0x5638bbbb31c0+196: [%92.1], env=e88.0
  void                    Deopt              !v    %95.0, Typecheck@0x5638bad509e8[Type#5], %92.1   !
BB86   <- [94]
  val?            %86.0 = Extract2_1D        wed   %92.0, 1L, elided   <val?_>
  void                    StVar              lW    class1, %86.0, e88.0
  goto BB8
BB7   <- [94]
  void                    Nop                !     
  goto BB8
BB8   <- [7, 86]
  lgl$-           %8.0  = Missing            eR    class2, e88.0
  lgl$#-          %8.1  = CheckTrueFalse     e     %8.0
  void                    Branch                   %8.1 -> BB85 (if true) | BB11 (if false)
BB85   <- [8]
  (cls|spec|blt)  %85.0 = LdFun              !v    extends, e88.0
  fs              %85.1 = FrameState         R     0x5638bbbb31c0+336: [%85.0], env=e88.0
  void                    Deopt              !v    %85.1, DeadCall@0x5638bad509e8[Call#2], %85.0   !
BB11   <- [8]
  val?^ | miss    %11.0 = LdVar              eR    getClassDef, e88.0
  lgl$#-          %11.1 = Identical                %11.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %11.1 -> BB96 (if true) | BB97 (if false)
BB96   <- [11]
  prom-           %96.0 = MkArg                    unboundValue, is[0x5638c102cf80]_p0 (!refl), e88.0
  val?            %96.1 = StaticCall         !v    getClassDef[0x5638c102cce0](%96.0) e88.0   <other>
  void                    StVar              lW    class1Def, %96.1, e88.0
  void                    StVar              lW    class2Def, nil, e88.0
  val?^ | miss    %96.4 = LdVar              eR    is.character, e88.0
  lgl$#-          %96.5 = Identical                <blt is.character>, %96.4   <true>
  void                    Branch                   %96.5 -> BB98 (if true) | BB99 (if false)
BB97   <- [11]
  fs              %97.0 = FrameState         R     0x5638bbbb31c0+314: [], env=e88.0
  void                    Deopt              !v    %97.0, CallTarget@0x5638bad509e8[Call#3], %11.0   !
BB98   <- [96]
  val?^ | miss    %98.0 = LdVar              eR    class2, e88.0
  val?            %98.1 = Force!<lazy>       !v    %98.0, e88.0   <str$+>
  lgl$#-          %98.2 = CallSafeBuiltin    wed   is.character(%98.1)    <lgl$->
  void                    Branch                   %98.2 -> BB15 (if true) | BB14 (if false)
BB99   <- [96]
  fs              %99.0 = FrameState         R     0x5638bbbb31c0+430: [], env=e88.0
  void                    Deopt              !v    %99.0, DeadBranchReached@0x5638bad509e8[Test#3], %96.5   !
BB15   <- [98]
  val?^ | miss    %15.0 = LdVar              eR    class1Def, e88.0
  val?            %15.1 = Force!<value>      !v    %15.0, e88.0   <other>
  lgl$-           %15.2 = Is                       %15.1, NULL
  lgl$#-          %15.3 = CheckTrueFalse     e     %15.2
  void                    Branch                   %15.3 -> BB84 (if true) | BB18 (if false)
BB14   <- [98]
  val?^ | miss    %14.0 = LdVar              eR    class2, e88.0
  val?            %14.1 = Force!             !v    %14.0, e88.0   <val?_>
  void                    StVar              lW    class2Def, %14.1, e88.0
  (cls|spec|blt)  %14.3 = LdFun              !v    @, e88.0
  fs              %14.4 = FrameState         R     0x5638bbbb31c0+566: [%14.3], env=e88.0
  void                    Deopt              !v    %14.4, DeadCall@0x5638bad509e8[Call#5], %14.3   !
BB84   <- [15]
  (cls|spec|blt)  %84.0 = LdFun              !v    inherits, e88.0
  fs              %84.1 = FrameState         R     0x5638bbbb31c0+647: [%84.0], env=e88.0
  void                    Deopt              !v    %84.1, DeadCall@0x5638bad509e8[Call#6], %84.0   !
BB18   <- [15]
  val?^ | miss    %18.0 = LdVar              eR    class2Def, e88.0
  lgl$#-          %18.1 = IsType                   %18.0 isA val?~- | miss
  void                    Branch                   %18.1 -> BB100 (if true) | BB101 (if false)
BB100   <- [18]
  val?~- | miss   %100.0 = CastType           d     dn %18.0
  val?-           %100.1 = Force!<value>            %100.0,    <nil->
  lgl$-           %100.2 = Is                       %100.1, NULL
  lgl$#-          %100.3 = CheckTrueFalse     e     %100.2
  void                    Branch                   %100.3 -> BB83 (if true) | BB19 (if false)
BB101   <- [18]
  void                    Nop                !     
  val?^ | miss    %101.1 = %18.0
  dr              %101.2 = Typecheck@0x5638bad509e8[Type#25]
  goto BB16
BB83   <- [100]
  val?^ | miss    %83.0 = LdVar              eR    getClassDef, e88.0
  lgl$#-          %83.1 = Identical                %83.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %83.1 -> BB102 (if true) | BB103 (if false)
BB19   <- [100]
  void                    Nop                !     
  goto BB20
BB16   <- [101, 103]
  val?^ | miss    %16.0 = Phi                      %101.1:BB101, %103.1:BB103
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %101.2:BB101, %103.2:BB103
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x5638bbbb31c0+621: [%15.1], env=e88.0
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB102   <- [83]
  prom-           %102.0 = MkArg                    unboundValue, is[0x5638c102cf80]_p13, e88.0
  prom-           %102.1 = MkArg                    unboundValue, is[0x5638c102cf80]_p14, e88.0
  prom-           %102.2 = MkArg                    unboundValue, is[0x5638c102cf80]_p16, e88.0
  val?            %102.3 = StaticCall         !v    getClassDef[0x5638c0d1e3f0](%102.0, %102.1, %102.2) e88.0   <other>
  void                    StVar              lW    class2Def, %102.3, e88.0
  goto BB20
BB103   <- [83]
  void                    Nop                !     
  val?^ | miss    %103.1 = %83.0
  dr              %103.2 = CallTarget@0x5638bad509e8[Call#7]
  goto BB16
BB20   <- [19, 102]
  val?^ | miss    %20.0 = LdVar              eR    S3Case, e88.0
  lgl$#-          %20.1 = IsType                   %20.0 isA lgl$-
  void                    Branch                   %20.1 -> BB104 (if true) | BB105 (if false)
BB104   <- [20]
  lgl$-           %104.0 = CastType           d     dn %20.0
  lgl$-           %104.1 = AsLogical                %104.0
  lgl$#-          %104.2 = Identical                %104.1, true
  void                    Branch                   %104.2 -> BB82 (if true) | BB23 (if false)
BB105   <- [20]
  void                    Nop                !     
  val?^ | miss    %105.1 = %20.0
  dr              %105.2 = Typecheck@0x5638bad509e8[Type#36]
  goto BB21
BB82   <- [104]
  void                    Nop                !     
  lgl$-           %82.1 = %104.1
  goto BB28
BB23   <- [104]
  val?^ | miss    %23.0 = LdVar              eR    is.object, e88.0
  lgl$#-          %23.1 = Identical                <blt is.object>, %23.0   <true>
  void                    Branch                   %23.1 -> BB106 (if true) | BB107 (if false)
BB21   <- [105, 107]
  val?^ | miss    %21.0 = Phi                      %105.1:BB105, %107.1:BB107
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %105.2:BB105, %107.2:BB107
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x5638bbbb31c0+771: [], env=e88.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB28   <- [82, 27]
  lgl$-           %28.0 = Phi                      %27.4:BB27, %82.1:BB82
  lgl$-           %28.1 = %28.0
  lgl$-           %28.2 = AsLogical                %28.1
  lgl$#-          %28.3 = Identical                %28.2, false
  void                    StVar              lW    S3Case, %28.1, e88.0
  void                    Branch                   %28.3 -> BB80 (if true) | BB29 (if false)
BB106   <- [23]
  val?^ | miss    %106.0 = LdVar              eR    object, e88.0
  val?            %106.1 = Force!<wrapped>    !v    %106.0, e88.0   <val?>
  lgl$#-          %106.2 = CallSafeBuiltin    wed   is.object(%106.1)    <lgl$->
  void                    Branch                   %106.2 -> BB81 (if true) | BB26 (if false)
BB107   <- [23]
  void                    Nop                !     
  lgl$#-          %107.1 = %23.1
  dr              %107.2 = DeadBranchReached@0x5638bad509e8[Test#4]
  goto BB21
BB80   <- [28]
  void                    Nop                !     
  lgl$-           %80.1 = %28.2
  goto BB34
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    class2Def, e88.0
  val?            %29.1 = Force!             !v    %29.0, e88.0   <val?_>
  lgl$-           %29.2 = Is                       %29.1, NULL
  lgl$-           %29.3 = AsLogical                %29.2
  lgl$#-          %29.4 = Identical                %29.3, true
  lgl$-           %29.5 = AsLogical                %29.3
  lgl$#-          %29.6 = Identical                %29.5, true
  lgl$-           %29.7 = AsLogical                %29.5
  lgl$-           %29.8 = LAnd                     %28.2, %29.7
  void                    Branch                   %29.4 -> BB31 (if true) | BB30 (if false)
BB81   <- [106]
  val?^ | miss    %81.0 = LdVar              eR    isS4, e88.0
  lgl$#-          %81.1 = Identical                <blt isS4>, %81.0   <true>
  void                    Branch                   %81.1 -> BB108 (if true) | BB109 (if false)
BB26   <- [106]
  void                    Nop                !     
  lgl$#-          %26.1 = %106.2
  goto BB27
BB34   <- [80, 33]
  lgl$-           %34.0 = Phi                      %33.1:BB33, %80.1:BB80
  lgl$-           %34.1 = %34.0
  void                    StVar              lW    S3Case, %34.1, e88.0
  lgl$#-          %34.3 = CheckTrueFalse     e     %34.1
  void                    Branch                   %34.3 -> BB79 (if true) | BB37 (if false)
BB31   <- [29]
  void                    Branch                   %29.6 -> BB33 (if true) | BB32 (if false)
BB30   <- [29]
  (cls|spec|blt)  %30.0 = LdFun              !v    %in%, e88.0
  fs              %30.1 = FrameState         R     0x5638bbbb31c0+1058: [%28.2, %29.3, %30.0], env=e88.0
  void                    Deopt              !v    %30.1, DeadCall@0x5638bad509e8[Call#15], %30.0   !
BB108   <- [81]
  val?^ | miss    %108.0 = LdVar              eR    object, e88.0
  val?            %108.1 = Force!<wrapped>    !v    %108.0, e88.0   <(cls|other)>
  lgl$#-          %108.2 = CallSafeBuiltin    wed   isS4(%108.1)    <lgl$->
  lgl$#-          %108.3 = Not                d     %108.2, elided
  lgl$-           %108.4 = LAnd                     %106.2, %108.3
  lgl$-           %108.5 = %108.4
  goto BB27
BB109   <- [81]
  fs              %109.0 = FrameState         R     0x5638bbbb31c0+883: [%104.1, %106.2], env=e88.0
  void                    Deopt              !v    %109.0, DeadBranchReached@0x5638bad509e8[Test#5], %81.1   !
BB27   <- [26, 108]
  lgl$-           %27.0 = Phi                      %108.5:BB108, %26.1:BB26
  lgl$-           %27.1 = %27.0
  lgl$-           %27.2 = AsLogical                %27.1
  lgl$-           %27.3 = LOr                      %104.1, %27.2
  lgl$-           %27.4 = %27.3
  goto BB28
BB79   <- [34]
  (cls|spec|blt)  %79.0 = LdFun              !v    inherits, e88.0
  fs              %79.1 = FrameState         R     0x5638bbbb31c0+2067: [%79.0], env=e88.0
  void                    Deopt              !v    %79.1, DeadCall@0x5638bad509e8[Call#43], %79.0   !
BB37   <- [34]
  val?^ | miss    %37.0 = LdVar              eR    .identC, e88.0
  lgl$#-          %37.1 = Identical                %37.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %37.1 -> BB110 (if true) | BB111 (if false)
BB33   <- [31]
  void                    Nop                !     
  lgl$-           %33.1 = %29.8
  goto BB34
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    extends, e88.0
  fs              %32.1 = FrameState         R     0x5638bbbb31c0+1109: [%28.2, %29.5, %32.0], env=e88.0
  void                    Deopt              !v    %32.1, DeadCall@0x5638bad509e8[Call#16], %32.0   !
BB110   <- [37]
  prom-           %110.0 = MkArg                    unboundValue, is[0x5638c102cf80]_p1, e88.0
  prom-           %110.1 = MkArg                    unboundValue, is[0x5638c102cf80]_p2, e88.0
  val?            %110.2 = StaticCall         !v    .identC[0x5638c0ca1790](%110.0, %110.1) e88.0   <lgl$->
  lgl$#-          %110.3 = IsType                   %110.2 isA lgl$-
  void                    Branch                   %110.3 -> BB112 (if true) | BB113 (if false)
BB111   <- [37]
  fs              %111.0 = FrameState         R     0x5638bbbb31c0+1160: [], env=e88.0
  void                    Deopt              !v    %111.0, CallTarget@0x5638bad509e8[Call#17], %37.0   !
BB112   <- [110]
  lgl$-           %112.0 = CastType           d     dn %110.2
  lgl$-           %112.1 = AsLogical                %112.0
  lgl$#-          %112.2 = Identical                %112.1, true
  void                    Branch                   %112.2 -> BB78 (if true) | BB40 (if false)
BB113   <- [110]
  void                    Nop                !     
  val?            %113.1 = %110.2
  dr              %113.2 = Typecheck@0x5638bad509e8[Type#53]
  goto BB38
BB78   <- [112]
  void                    Nop                !     
  lgl$-           %78.1 = %112.1
  goto BB43
BB40   <- [112]
  val?^ | miss    %40.0 = LdVar              eR    .identC, e88.0
  lgl$#-          %40.1 = Identical                %40.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %40.1 -> BB114 (if true) | BB115 (if false)
BB38   <- [113, 115]
  val?^ | miss    %38.0 = Phi                      %113.1:BB113, %115.1:BB115
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %113.2:BB113, %115.2:BB115
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x5638bbbb31c0+1217: [%110.2], env=e88.0
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB43   <- [78, 116]
  lgl$-           %43.0 = Phi                      %116.3:BB116, %78.1:BB78
  lgl$-           %43.1 = %43.0
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB77 (if true) | BB44 (if false)
BB114   <- [40]
  prom-           %114.0 = MkArg                    unboundValue, is[0x5638c102cf80]_p3, e88.0
  val?            %114.1 = StaticCall         !v    .identC[0x5638bba340a0](%114.0, "ANY") e88.0   <lgl$->
  lgl$#-          %114.2 = IsType                   %114.1 isA lgl$-
  void                    Branch                   %114.2 -> BB116 (if true) | BB117 (if false)
BB115   <- [40]
  void                    Nop                !     
  val?^ | miss    %115.1 = %40.0
  dr              %115.2 = CallTarget@0x5638bad509e8[Call#18]
  goto BB38
BB77   <- [43]
  void                    Visible            v     
  lgl$#-          %77.1 = true
  goto BB66
BB44   <- [43]
  (cls|spec|blt)  %44.0 = LdFun              !v    @, <0x5638b9a6cbd8>, e88.0
  prom-           %44.1 = MkArg                    unboundValue, is[0x5638c102cf80]_p4, e88.0
  prom-           %44.2 = MkArg                    unboundValue, is[0x5638c102cf80]_p5, e88.0
  val?            %44.3 = Call               !v    %44.0(%44.1, %44.2) e88.0   <vec+>
  lgl$#-          %44.4 = IsType                   %44.3 isA val+   <true>
  void                    Branch                   %44.4 -> BB118 (if true) | BB119 (if false)
BB116   <- [114]
  lgl$-           %116.0 = CastType           d     dn %114.1
  lgl$-           %116.1 = AsLogical                %116.0
  lgl$-           %116.2 = LOr                      %112.1, %116.1
  lgl$-           %116.3 = %116.2
  goto BB43
BB117   <- [114]
  fs              %117.0 = FrameState         R     0x5638bbbb31c0+1266: [%112.1, %114.1], env=e88.0
  void                    Deopt              !v    %117.0, Typecheck@0x5638bad509e8[Type#55], %114.1   !
BB66   <- [77, 65]
  lgl$-           %66.0 = Phi                      %65.2:BB65, %77.1:BB77
  lgl$-           %66.1 = %66.0
  void                    Return             l     %66.1
BB118   <- [44]
  val?^ | miss    %118.0 = LdVar              eR    class2, e88.0
  val?            %118.1 = Force!<wrapped>    !v    %118.0, e88.0   <str$->
  lgl$#-          %118.2 = IsType                   %118.1 isA val?-
  lgl$#-          %118.3 = IsType                   %44.3 isA val?+
  void                    Branch                   %118.3 -> BB120 (if true) | BB121 (if false)
BB119   <- [44]
  fs              %119.0 = FrameState         R     0x5638bbbb31c0+1316: [%44.3], env=e88.0
  void                    Deopt              !v    %119.0, DeadBranchReached@0x5638bad509e8[Test#6], %44.4   !
BB120   <- [118]
  val?+           %120.0 = CastType           d     dn %44.3   <vec+>
  void                    Branch                   %118.2 -> BB122 (if true) | BB123 (if false)
BB121   <- [118]
  void                    Nop                !     
  val?            %121.1 = %44.3
  dr              %121.2 = Typecheck@0x5638bad509e8[Type#58]
  goto BB47
BB122   <- [120]
  val?-           %122.0 = CastType           d     dn %118.1   <str$->
  val?            %122.1 = Extract2_1D        wed   %120.0, %122.0, elided   <(nil|other)>
  lgl$-           %122.2 = Is                       %122.1, NULL
  void                    Invisible          v     
  void                    StVar              lW    contained, %122.1, e88.0
  lgl$-           %122.5 = Not                vd    %122.2, elided
  lgl$#-          %122.6 = CheckTrueFalse     e     %122.5
  void                    Branch                   %122.6 -> BB72 (if true) | BB49 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?            %123.1 = %118.1
  dr              %123.2 = Typecheck@0x5638bad509e8[Type#60]
  goto BB47
BB47   <- [121, 123]
  val?^ | miss    %47.0 = Phi                      %121.1:BB121, %123.1:BB123
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %121.2:BB121, %123.2:BB123
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x5638bbbb31c0+1361: [%44.3, %118.1], env=e88.0
  void                    Deopt              !v    %47.4, %47.3, %47.1   !
BB72   <- [122]
  (cls|spec|blt)  %72.0 = LdFun              !     @, <0x5638b9a6cbd8>, e88.0
  prom-           %72.1 = MkArg                    unboundValue, is[0x5638c102cf80]_p11, e88.0
  prom-           %72.2 = MkArg                    unboundValue, is[0x5638c102cf80]_p12, e88.0
  val?            %72.3 = Call               !     %72.0(%72.1, %72.2) e88.0   <lgl$->
  lgl$#-          %72.4 = IsType                   %72.3 isA lgl$-
  void                    Branch                   %72.4 -> BB124 (if true) | BB125 (if false)
BB49   <- [122]
  val?^ | miss    %49.0 = LdVar              eR    class2Def, e88.0
  val?            %49.1 = Force!<value>      !v    %49.0, e88.0   <other>
  lgl$-           %49.2 = Is                       %49.1, NULL
  lgl$#-          %49.3 = CheckTrueFalse     e     %49.2
  void                    Branch                   %49.3 -> BB71 (if true) | BB52 (if false)
BB124   <- [72]
  lgl$-           %124.0 = CastType           d     dn %72.3
  lgl$-           %124.1 = AsLogical                %124.0
  lgl$#-          %124.2 = Identical                %124.1, true
  void                    Branch                   %124.2 -> BB76 (if true) | BB75 (if false)
BB125   <- [72]
  fs              %125.0 = FrameState         R     0x5638bbbb31c0+1957: [%72.3], env=e88.0
  void                    Deopt              !v    %125.0, Typecheck@0x5638bad509e8[Type#108], %72.3   !
BB71   <- [49]
  void                    Visible            v     
  lgl$#-          %71.1 = false
  goto BB64
BB52   <- [49]
  val?^ | miss    %52.0 = LdVar              eR    .identC, e88.0
  lgl$#-          %52.1 = Identical                %52.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %52.1 -> BB126 (if true) | BB127 (if false)
BB76   <- [124]
  void                    Nop                !     
  lgl$-           %76.1 = %124.1
  goto BB65
BB75   <- [124]
  (cls|spec|blt)  %75.0 = LdFun              !v    @, e88.0
  fs              %75.1 = FrameState         R     0x5638bbbb31c0+1974: [%124.1, %75.0], env=e88.0
  void                    Deopt              !v    %75.1, DeadCall@0x5638bad509e8[Call#41], %75.0   !
BB64   <- [71, 63]
  lgl$-           %64.0 = Phi                      %63.1:BB63, %71.1:BB71
  lgl$-           %64.1 = %64.0
  lgl$-           %64.2 = %64.1
  goto BB65
BB126   <- [52]
  prom-           %126.0 = MkArg                    unboundValue, is[0x5638c102cf80]_p6, e88.0
  val?            %126.1 = StaticCall         !v    .identC[0x5638bba340a0](%126.0, "classRepresentation") e88.0   <lgl$->
  lgl$#-          %126.2 = IsType                   %126.1 isA lgl$-
  void                    Branch                   %126.2 -> BB128 (if true) | BB129 (if false)
BB127   <- [52]
  fs              %127.0 = FrameState         R     0x5638bbbb31c0+1405: [%49.1], env=e88.0
  void                    Deopt              !v    %127.0, CallTarget@0x5638bad509e8[Call#20], %52.0   !
BB65   <- [76, 64]
  lgl$-           %65.0 = Phi                      %64.2:BB64, %76.1:BB76
  lgl$-           %65.1 = %65.0
  lgl$-           %65.2 = %65.1
  goto BB66
BB128   <- [126]
  lgl$-           %128.0 = CastType           d     dn %126.1
  lgl$-           %128.1 = Not                d     %128.0, elided
  lgl$-           %128.2 = AsLogical                %128.1
  lgl$#-          %128.3 = Identical                %128.2, false
  void                    Branch                   %128.3 -> BB70 (if true) | BB55 (if false)
BB129   <- [126]
  void                    Nop                !     
  val?            %129.1 = %126.1
  dr              %129.2 = Typecheck@0x5638bad509e8[Type#65]
  goto BB53
BB70   <- [128]
  void                    Nop                !     
  lgl$-           %70.1 = %128.2
  goto BB58
BB55   <- [128]
  val?^ | miss    %55.0 = LdVar              eR    isClassUnion, e88.0
  lgl$#-          %55.1 = Identical                %55.0, function(Class) <(rir::DispatchTable*)0x5638c3|...
  void                    Branch                   %55.1 -> BB132 (if true) | BB133 (if false)
BB53   <- [129, 133]
  val?^ | miss    %53.0 = Phi                      %129.1:BB129, %133.1:BB133
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %129.2:BB129, %133.2:BB133
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x5638bbbb31c0+1458: [%126.1], env=e88.0
  void                    Deopt              !v    %53.4, %53.3, %53.1   !
BB58   <- [70, 138]
  lgl$-           %58.0 = Phi                      %138.3:BB138, %70.1:BB70
  lgl$-           %58.1 = %58.0
  lgl$#-          %58.2 = CheckTrueFalse     e     %58.1
  void                    Branch                   %58.2 -> BB67 (if true) | BB59 (if false)
BB132   <- [55]
  prom-           %132.0 = MkArg                    unboundValue, is[0x5638c102cf80]_p8, e88.0
  val?            %132.1 = StaticCall         !v    isClassUnion[0x5638bf497cc0](%132.0) e88.0   <lgl$->
  lgl$#-          %132.2 = IsType                   %132.1 isA lgl$-
  void                    Branch                   %132.2 -> BB138 (if true) | BB139 (if false)
BB133   <- [55]
  void                    Nop                !     
  val?^ | miss    %133.1 = %55.0
  dr              %133.2 = CallTarget@0x5638bad509e8[Call#22]
  goto BB53
BB67   <- [58]
  val?^ | miss    %67.0 = LdVar              eR    any, e88.0
  lgl$#-          %67.1 = Identical                <blt any>, %67.0   <@?>
  void                    Branch                   %67.1 -> BB69 (if true) | BB68 (if false)
BB59   <- [58]
  (cls|spec|blt)  %59.0 = LdFun              !v    @, <0x5638b9a6cbd8>, e88.0
  prom-           %59.1 = MkArg                    unboundValue, is[0x5638c102cf80]_p9, e88.0
  prom-           %59.2 = MkArg                    unboundValue, is[0x5638c102cf80]_p10, e88.0
  val?            %59.3 = Call               !v    %59.0(%59.1, %59.2) e88.0   <vec+>
  lgl$#-          %59.4 = IsType                   %59.3 isA val+   <true>
  lgl$#-          %59.5 = IsType                   %59.3 isA val?+
  void                    Branch                   %59.4 -> BB130 (if true) | BB131 (if false)
BB138   <- [132]
  lgl$-           %138.0 = CastType           d     dn %132.1
  lgl$-           %138.1 = AsLogical                %138.0
  lgl$-           %138.2 = LAnd                     %128.2, %138.1
  lgl$-           %138.3 = %138.2
  goto BB58
BB139   <- [132]
  fs              %139.0 = FrameState         R     0x5638bbbb31c0+1503: [%128.2, %132.1], env=e88.0
  void                    Deopt              !v    %139.0, Typecheck@0x5638bad509e8[Type#67], %132.1   !
BB69   <- [67]
  (cls|spec|blt)  %69.0 = LdFun              !v    %in%, e88.0
  fs              %69.1 = FrameState         R     0x5638bbbb31c0+1845: [<blt any>, %69.0], env=e88.0
  void                    Deopt              !v    %69.1, DeadCall@0x5638bad509e8[Call#34], %69.0   !
BB68   <- [67]
  (cls|spec|blt)  %68.0 = LdFun              !v    any, e88.0
  fs              %68.1 = FrameState         R     0x5638bbbb31c0+1808: [%68.0], env=e88.0
  void                    Deopt              !v    %68.1, DeadCall@0x5638bad509e8[Call#27], %68.0   !
BB130   <- [59]
  val?^ | miss    %130.0 = LdVar              eR    class1, e88.0
  lgl$#-          %130.1 = IsType                   %130.0 isA val?~+ | miss
  void                    Branch                   %130.1 -> BB134 (if true) | BB135 (if false)
BB131   <- [59]
  void                    Nop                !     
  lgl$#-          %131.1 = %59.4
  dr              %131.2 = DeadBranchReached@0x5638bad509e8[Test#7]
  goto BB60
BB134   <- [130]
  val?~+ | miss   %134.0 = CastType           d     dn %130.0
  val?+           %134.1 = Force!<value>            %134.0,    <str$+>
  void                    Branch                   %59.5 -> BB136 (if true) | BB137 (if false)
BB135   <- [130]
  void                    Nop                !     
  val?^ | miss    %135.1 = %130.0
  dr              %135.2 = Typecheck@0x5638bad509e8[Type#72]
  goto BB60
BB60   <- [131, 135, 137]
  val?^ | miss    %60.0 = Phi                      %131.1:BB131, %135.1:BB135, %137.1:BB137
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %131.2:BB131, %135.2:BB135, %137.2:BB137
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x5638bbbb31c0+1553: [%59.3], env=e88.0
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB136   <- [134]
  val?+           %136.0 = CastType           d     dn %59.3   <vec+>
  val?            %136.1 = Extract2_1D        wed   %136.0, %134.1, elided   <nil->
  lgl$-           %136.2 = Is                       %136.1, NULL
  void                    StVar              lW    ext, %136.1, e88.0
  val             %136.4 = ChkMissing         e     %136.1
  void                    Visible            v     
  lgl$-           %136.6 = Not                vd    %136.2, elided
  lgl$-           %136.7 = AsLogical                %136.6
  lgl$#-          %136.8 = Identical                %136.7, false
  void                    Branch                   %136.8 -> BB63 (if true) | BB62 (if false)
BB137   <- [134]
  void                    Nop                !     
  val?            %137.1 = %59.3
  dr              %137.2 = Typecheck@0x5638bad509e8[Type#70]
  goto BB60
BB63   <- [136]
  void                    Nop                !     
  lgl$-           %63.1 = %136.7
  goto BB64
BB62   <- [136]
  (cls|spec|blt)  %62.0 = LdFun              !v    @, e88.0
  fs              %62.1 = FrameState         R     0x5638bbbb31c0+1651: [%136.7, %62.0], env=e88.0
  void                    Deopt              !v    %62.1, DeadCall@0x5638bad509e8[Call#24], %62.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x5638b9a6d748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is[0x5638c102cf80]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contained, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .classDefEnv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is[0x5638c102cf80]_p15, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    packageSlot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is[0x5638c102cf80]_p17, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <val?_>
  void                    Invisible          v     
  void                    StVar              lW    package, %0.3, e0.0
  lgl$-           %0.6  = Is                       %0.3, NULL
  lgl$-           %0.7  = Not                vd    %0.6, elided
  lgl$#-          %0.8  = CheckTrueFalse     e     %0.7
  void                    Branch                   %0.8 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %2.2  = Force              !     %2.0, e0.0   <val?_>
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  (cls|spec|blt)  %4.0  = LdFun              !     getPackageName, e0.0
  prom-           %4.1  = MkArg                    unboundValue, is[0x5638c102cf80]_p18, e0.0
  val?            %4.2  = Call               !     %4.0(%4.1) e0.0   <val?_>
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.3:BB4, %2.3:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is[0x5638c102cf80]_p19, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2

│ is[0x5638c102cf80]                                                           │
└──────────────────────────────────────────────────────────────────────────────┘
