
┌──────────────────────────────────────────────────────────────────────────────┐
│ isGroup[0x5638c60f3780]                                                      │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1                             │
│ Properties:                                                                  │
├────── Final PIR Version
isGroup[0x5638c60f3780]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  lgl$#-          %0.4  = Identical                %0.0, missingArg
  env             e0.5  = MkEnv              l     f=%0.2, where=%0.1, fdef=%0.0, parent=<env 0x5638ba074378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB11 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, isGroup[0x5638c60f3780]_p0, e0.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.5
  goto BB3
BB11   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 11]
  void                    Branch                   %0.4 -> BB10 (if true) | BB4 (if false)
BB10   <- [3]
  prom-           %10.0 = MkArg                    unboundValue, isGroup[0x5638c60f3780]_p2, e0.5
  val?^ | miss    %10.1 = CastType                 up %10.0
  void                    StArg              lW    fdef, %10.1, e0.5
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [10, 4]
  val?^ | miss    %5.0  = LdVar              eR    is, <env 0x5638ba074378>
  lgl$#-          %5.1  = Identical                %5.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %5.1 -> BB12 (if true) | BB13 (if false)
BB12   <- [5]
  prom-           %12.0 = MkArg                    unboundValue, isGroup[0x5638c60f3780]_p5, e0.5
  val?            %12.1 = Call               !     function(object, class2) <(rir::DispatchTable*|...(%12.0, "groupGenericFunction") e0.5   <lgl$->
  lgl$#-          %12.2 = IsType                   %12.1 isA lgl$-
  void                    Branch                   %12.2 -> BB14 (if true) | BB15 (if false)
BB13   <- [5]
  fs              %13.0 = FrameState         R     0x5638c63ce8b0+0: [], env=e0.5
  void                    Deopt              !v    %13.0, CallTarget@0x5638bbe8d640[Call#3], %5.0
BB14   <- [12]
  lgl$-           %14.0 = CastType           d     dn %12.1
  void                    Return             l     %14.0
BB15   <- [12]
  fs              %15.0 = FrameState         R     0x5638c63ce8b0+37: [%12.1], env=e0.5
  void                    Deopt              !v    %15.0, Typecheck@0x5638bbe8d640[Type#6], %12.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, isGroup[0x5638c60f3780]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getGeneric, e0.0
  prom-           %0.2  = MkArg                    unboundValue, isGroup[0x5638c60f3780]_p3, e0.0
  prom-           %0.3  = MkArg                    unboundValue, isGroup[0x5638c60f3780]_p4, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, where=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ isGroup[0x5638c60f3780]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
