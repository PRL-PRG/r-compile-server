
┌──────────────────────────────────────────────────────────────────────────────┐
│ .completeClassSlots[0x5638bff39260]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj1              │
│ Properties:                                                                  │
├────── Final PIR Version
.completeClassSlots[0x5638bff39260]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     ClassDef=%0.1, where=%0.0, parent=<env 0x5638ba074378>, context 1
  (cls|spec|blt)  %0.3  = LdFun              !v    @, <0x5638b9a6cbd8>, <env 0x5638ba074378>
  prom-           %0.4  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p0 (!refl), e0.2
  prom-           %0.5  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p1, e0.2
  val?            %0.6  = Call               !v    %0.3(%0.4, %0.5) e0.2   <vec+>
  void                    StVar              lW    properties, %0.6, e0.2
  val?^ | miss    %0.8  = LdVar              eR    getAllSuperClasses, e0.2
  lgl$#-          %0.9  = Identical                %0.8, function(ClassDef, simpleOnly=TRUE) <(rir::Dis|...
  void                    Branch                   %0.9 -> BB103 (if true) | BB104 (if false)
BB103   <- [0]
  prom-           %103.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p2, e0.2
  ct              %103.1 = PushContext        lCL   %103.0, true, getAllSuperClasses(ClassDef, TRUE), function(ClassDef, simpleOnly=TRUE) <(rir::Dis|..., e0.2
  val?^           %103.2 = CastType                 up %103.0
  env             e103.3 = MkEnv              l     ClassDef=%103.2, simpleOnly=true, parent=<env 0x5638ba074378>, context 1
  (cls|spec|blt)  %103.4 = LdFun              !v    superClassDepth, <0x5638c59b8bc8>, <env 0x5638ba074378>
  prom-           %103.5 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p47, e103.3
  prom-           %103.6 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p48 (!refl), e103.3
  val?            %103.7 = NamedCall          !v    %103.4(%103.5, simpleOnly=%103.6) e103.3   <vec+>
  void                    StVar              lW    temp, %103.7, e103.3
  val?^ | miss    %103.9 = LdVar              eR    unique, e103.3
  lgl$#-          %103.10 = Identical                %103.9, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %103.10 -> BB105 (if true) | BB106 (if false)
BB104   <- [0]
  fs              %104.0 = FrameState         R     0x5638c5934ae0+51: [], env=e0.2
  void                    Deopt              !v    %104.0, CallTarget@0x5638c58e0d48[Call#1], %0.8   !
BB105   <- [103]
  (cls|spec|blt)  %105.0 = LdFun              !v    $, <0x5638b9a6cc10>, e103.3
  prom-           %105.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p49, e103.3
  prom-           %105.2 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p50, e103.3
  val?            %105.3 = Call               !v    %105.0(%105.1, %105.2) e103.3   <nil->
  lgl$#-          %105.4 = IsType                   %105.3 isA val+   <true>
  void                    Branch                   %105.4 -> BB101 (if true) | BB5 (if false)
BB106   <- [103]
  fs              %106.0 = FrameState         R     0x5638c5934ae0+88: [], env=e0.2
  fs              %106.1 = FrameState         R     0x5638bf87a380+59: [], env=e103.3, next=%106.0
  void                    Deopt              !v    %106.1, CallTarget@0x5638c58e0928[Call#1], %103.9   !
BB101   <- [105]
  (cls|spec|blt)  %101.0 = LdFun              !v    sort.list, <0x5638bce04580>, e103.3
  prom-           %101.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p55, e103.3
  val?            %101.2 = Call               !v    %101.0(%101.1) e103.3   <int->
  val?            %101.3 = %101.2
  goto BB6
BB5   <- [105]
  prom-           %5.0  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p51, e103.3
  prom-           %5.1  = %5.0
  goto BB6
BB6   <- [5, 101]
  val?            %6.0  = Phi                      %101.3:BB101, %5.1:BB5
  val?            %6.1  = %6.0
  val?            %6.2  = Extract1_1D        !v    %105.3, %6.1, e103.3   <nil->
  val?            %6.3  = StaticCall         !v    unique[0x5638c6639410](%6.2) { 0 } e103.3   <nil->
  val?            %6.4  = PopContext         C     %6.3, %103.1   <nil->
  void                    StVar              lW    ext, %6.4, e0.2
  lgl$#-          %6.6  = IsType                   %6.4 isA val?-
  val?^ | miss    %6.7  = LdVar              eR    length, e0.2
  lgl$#-          %6.8  = Identical                <blt length>, %6.7   <true>
  void                    Branch                   %6.8 -> BB107 (if true) | BB108 (if false)
BB107   <- [6]
  val             %107.0 = ChkMissing         e     %6.4
  void                    Branch                   %6.6 -> BB109 (if true) | BB110 (if false)
BB108   <- [6]
  void                    Nop                !     
  lgl$#-          %108.1 = %6.8
  dr              %108.2 = DeadBranchReached@0x5638c58e0d48[Test#0]
  goto BB7
BB109   <- [107]
  val?-           %109.0 = CastType           d     dn %6.4   <nil->
  (int|real)$-    %109.1 = CallSafeBuiltin    wed   length(%109.0)    <int$->
  lgl$#-          %109.2 = IsType                   %109.1 isA int$-
  void                    Branch                   %109.2 -> BB111 (if true) | BB112 (if false)
BB110   <- [107]
  void                    Nop                !     
  val?            %110.1 = %6.4
  dr              %110.2 = Typecheck@0x5638c58e0d48[Type#4]
  goto BB7
BB7   <- [108, 110]
  val?^ | miss    %7.0  = Phi                      %108.1:BB108, %110.1:BB110
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %108.2:BB108, %110.2:BB110
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x5638c5934ae0+102: [], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB111   <- [109]
  int$-           %111.0 = CastType           d     dn %109.1
  lgl$#-          %111.1 = CheckTrueFalse     e     %111.0
  void                    Branch                   %111.1 -> BB60 (if true) | BB11 (if false)
BB112   <- [109]
  void                    Nop                !     
  (int|real)$-    %112.1 = %109.1
  dr              %112.2 = Typecheck@0x5638c58e0d48[Type#7]
  goto BB9
BB60   <- [111]
  val?^ | miss    %60.0 = LdVar              eR    vector, e0.2
  lgl$#-          %60.1 = Identical                %60.0, function(mode="logical", length=0L) <(rir::Dis|...
  void                    Branch                   %60.1 -> BB113 (if true) | BB114 (if false)
BB11   <- [111]
  void                    Nop                !     
  goto BB12
BB9   <- [112, 114, 116, 118]
  val?^ | miss    %9.0  = Phi                      %112.1:BB112, %114.1:BB114, %116.1:BB116, %118.1:BB118
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %112.2:BB112, %114.2:BB114, %116.2:BB116, %118.2:BB118
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x5638c5934ae0+193: [%109.1], env=e0.2
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB113   <- [60]
  lgl$#-          %113.0 = Identical                %6.7, <blt length>
  void                    Branch                   %113.0 -> BB115 (if true) | BB116 (if false)
BB114   <- [60]
  void                    Nop                !     
  val?^ | miss    %114.1 = %60.0
  dr              %114.2 = CallTarget@0x5638c58e0d48[Call#3]
  goto BB9
BB12   <- [11, 96]
  val?^ | miss    %12.0 = LdVar              eR    rep.int, e0.2
  lgl$#-          %12.1 = Identical                %12.0, function(x, times) <(rir::DispatchTable*)0x563|...
  void                    Branch                   %12.1 -> BB119 (if true) | BB120 (if false)
BB115   <- [113]
  lgl$#-          %115.0 = IsType                   %107.0 isA val?~- | miss
  void                    Branch                   %115.0 -> BB117 (if true) | BB118 (if false)
BB116   <- [113]
  void                    Nop                !     
  val?^ | miss    %116.1 = %6.7
  dr              %116.2 = CallTarget@0x5638c58e0d48[Call#4]
  goto BB9
BB119   <- [12]
  val?^ | miss    %119.0 = LdVar              eR    length, e0.2
  lgl$#-          %119.1 = Identical                %119.0, <blt length>
  void                    Branch                   %119.1 -> BB123 (if true) | BB124 (if false)
BB120   <- [12]
  void                    Nop                !     
  val?^ | miss    %120.1 = %12.0
  dr              %120.2 = CallTarget@0x5638c58e0d48[Call#17]
  goto BB13
BB117   <- [115]
  val-            %117.0 = CastType           d     dn %107.0   <str->
  (int|real)$-    %117.1 = CallSafeBuiltin    wed   length(%117.0)    <int$->
  lgl$#-          %117.2 = IsType                   %117.1 isA int$-
  void                    Branch                   %117.2 -> BB121 (if true) | BB122 (if false)
BB118   <- [115]
  void                    Nop                !     
  val             %118.1 = %107.0
  dr              %118.2 = Typecheck@0x5638c58e0d48[Type#8]
  goto BB9
BB123   <- [119]
  val?^ | miss    %123.0 = LdVar              eR    properties, e0.2
  lgl$#-          %123.1 = IsType                   %123.0 isA val?~+ | miss
  void                    Branch                   %123.1 -> BB127 (if true) | BB128 (if false)
BB124   <- [119]
  void                    Nop                !     
  val?^ | miss    %124.1 = %119.0
  dr              %124.2 = CallTarget@0x5638c58e0d48[Call#18]
  goto BB13
BB13   <- [120, 124, 128]
  val?^ | miss    %13.0 = Phi                      %120.1:BB120, %124.1:BB124, %128.1:BB128
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %120.2:BB120, %124.2:BB124, %128.2:BB128
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x5638c5934ae0+1164: [], env=e0.2
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB121   <- [117]
  int$-           %121.0 = CastType           d     dn %117.1
  int$-           %121.1 = Add                d     %121.0, 1L, elided   <int$->
  vec-            %121.2 = CallSafeBuiltin    wed   vector("list", %121.1)    <vec->
  void                    StVar              lW    superProps, %121.2, e0.2
  val?^ | miss    %121.4 = LdVar              eR    properties, e0.2
  lgl$#-          %121.5 = IsType                   %121.4 isA val?~+ | miss
  void                    Branch                   %121.5 -> BB125 (if true) | BB126 (if false)
BB122   <- [117]
  fs              %122.0 = FrameState         R     0x5638c5934ae0+246: [], env=e0.2
  prom-           %122.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p27, e0.2
  val?^           %122.2 = CastType                 up %122.1
  env             e122.3 = (MkEnv)            l     length=%122.2, mode="list", parent=R_BaseNamespace, context 0
  fs              %122.4 = FrameState         R     0x5638bb967640+23: ["list"], env=e122.3, next=%122.0
  fs              %122.5 = FrameState         R     0x5638bc8d5f50+32(pr): [%117.1], env=e0.2, next=%122.4
  void                    Deopt              !v    %122.5, Typecheck@0x5638c58e0d48[Type#9], %117.1   !
BB127   <- [123]
  val?~+ | miss   %127.0 = CastType           d     dn %123.0
  val?+           %127.1 = Force!<value>            %127.0,    <vec+>
  (int|real)$-    %127.2 = CallSafeBuiltin    wed   length(%127.1)    <int$->
  lgl$#-          %127.3 = IsType                   %127.2 isA int$-
  void                    Branch                   %127.3 -> BB139 (if true) | BB140 (if false)
BB128   <- [123]
  void                    Nop                !     
  val?^ | miss    %128.1 = %123.0
  dr              %128.2 = Typecheck@0x5638c58e0d48[Type#59]
  goto BB13
BB125   <- [121]
  val?~+ | miss   %125.0 = CastType           d     dn %121.4
  val?+           %125.1 = Force!<value>            %125.0,    <vec$+>
  val?+           %125.2 = Subassign2_1D      wed   %125.1, %121.2, 1L, elided
  void                    StVar              lW    superProps, %125.2, e0.2
  val?^ | miss    %125.4 = LdVar              eR    seq_along, e0.2
  lgl$#-          %125.5 = Identical                <blt seq_along>, %125.4   <true>
  void                    Branch                   %125.5 -> BB129 (if true) | BB130 (if false)
BB126   <- [121]
  fs              %126.0 = FrameState         R     0x5638c5934ae0+260: [], env=e0.2
  void                    Deopt              !v    %126.0, Typecheck@0x5638c58e0d48[Type#12], %121.4   !
BB139   <- [127]
  int$-           %139.0 = CastType           d     dn %127.2
  val+            %139.1 = CallSafeBuiltin    wed   rep.int(false, %139.0)    <lgl->
  void                    StVar              lW    undefClasses, %139.1, e0.2
  val?^ | miss    %139.3 = LdVar              eR    seq_along, e0.2
  lgl$#-          %139.4 = Identical                <blt seq_along>, %139.3   <true>
  void                    Branch                   %139.4 -> BB143 (if true) | BB144 (if false)
BB140   <- [127]
  fs              %140.0 = FrameState         R     0x5638c5934ae0+1201: [], env=e0.2
  prom-           %140.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p3, e0.2
  val?^           %140.2 = CastType                 up %140.1
  env             e140.3 = (MkEnv)            l     times=%140.2, x=false, parent=R_BaseNamespace, context 0
  fs              %140.4 = FrameState         R     0x5638bb99f800+23: [false], env=e140.3, next=%140.0
  fs              %140.5 = FrameState         R     0x5638bd2fcde0+32(pr): [%127.2], env=e0.2, next=%140.4
  void                    Deopt              !v    %140.5, Typecheck@0x5638c58e0d48[Type#60], %127.2   !
BB129   <- [125]
  val?            %129.0 = CallBuiltin        !v    seq_along(%117.0) e0.2   <int->
  val?+           %129.1 = ToForSeq           e     %129.0
  int$-           %129.2 = Length                   %129.1
  int$-           %129.3 = Inc                      0L
  lgl$-           %129.4 = Lt                 d     %129.2, %129.3, elided   <false>
  lgl$#-          %129.5 = Identical                %129.4, true
  void                    Branch                   %129.5 -> BB132 (if true) | BB131 (if false)
BB130   <- [125]
  fs              %130.0 = FrameState         R     0x5638c5934ae0+304: [], env=e0.2
  void                    Deopt              !v    %130.0, DeadBranchReached@0x5638c58e0d48[Test#1], %125.5   !
BB143   <- [139]
  val?            %143.0 = CallBuiltin        !v    seq_along(%127.1) e0.2   <int->
  val?+           %143.1 = ToForSeq           e     %143.0
  int$-           %143.2 = Length                   %143.1
  int$-           %143.3 = Inc                      0L
  lgl$-           %143.4 = Lt                 d     %143.2, %143.3, elided
  lgl$#-          %143.5 = Identical                %143.4, true
  void                    Branch                   %143.5 -> BB59 (if true) | BB19 (if false)
BB144   <- [139]
  fs              %144.0 = FrameState         R     0x5638c5934ae0+1215: [], env=e0.2
  void                    Deopt              !v    %144.0, DeadBranchReached@0x5638c58e0d48[Test#6], %139.4   !
BB132   <- [129]
  fs              %132.0 = FrameState         R     0x5638c5934ae0+395: [%129.0], env=e0.2
  void                    Deopt              !v    %132.0, DeadBranchReached@0x5638c58e0d48[Test#2], %129.5   !
BB131   <- [129]
  val?            %131.0 = Extract2_1D        wed   %129.1, %129.3, elided
  void                    StVar              lW    i, %131.0, e0.2
  val?^ | miss    %131.2 = LdVar              eR    ext, e0.2
  lgl$#-          %131.3 = IsType                   %131.2 isA val?~- | miss
  void                    Branch                   %131.3 -> BB133 (if true) | BB134 (if false)
BB59   <- [143]
  void                    Nop                !     
  int$-           %59.1 = %143.3
  goto BB49
BB19   <- [143]
  val?            %19.0 = Extract2_1D        wed   %143.1, %143.3, elided
  void                    StVar              lW    i, %19.0, e0.2
  val?^ | miss    %19.2 = LdVar              eR    properties, e0.2
  lgl$#-          %19.3 = IsType                   %19.2 isA val?~+ | miss
  void                    Branch                   %19.3 -> BB165 (if true) | BB166 (if false)
BB133   <- [131]
  val?~- | miss   %133.0 = CastType           d     dn %131.2
  val?-           %133.1 = Force!<value>            %133.0,    <str->
  lgl$#-          %133.2 = IsType                   %133.1 isA val+   <true>
  void                    Branch                   %133.2 -> BB135 (if true) | BB136 (if false)
BB134   <- [131]
  void                    Nop                !     
  val?^ | miss    %134.1 = %131.2
  dr              %134.2 = Typecheck@0x5638c58e0d48[Type#17]
  goto BB69
BB49   <- [48, 59]
  int$-           %49.0 = Phi                      %48.1:BB48, %59.1:BB59
  int$-           %49.1 = %49.0
  val?^ | miss    %49.2 = LdVar              eR    any, e0.2
  lgl$#-          %49.3 = Identical                <blt any>, %49.2   <true>
  void                    Branch                   %49.3 -> BB159 (if true) | BB160 (if false)
BB165   <- [19]
  val?~+ | miss   %165.0 = CastType           d     dn %19.2
  val?+           %165.1 = Force!<value>            %165.0,    <vec+>
  lgl$#-          %165.2 = IsType                   %165.1 isA val+   <true>
  void                    Branch                   %165.2 -> BB169 (if true) | BB170 (if false)
BB166   <- [19]
  void                    Nop                !     
  val?^ | miss    %166.1 = %19.2
  dr              %166.2 = Typecheck@0x5638c58e0d48[Type#65]
  goto BB20
BB135   <- [133]
  val             %135.0 = ChkMissing         e     %131.0
  lgl$#-          %135.1 = IsType                   %135.0 isA int$-
  void                    Branch                   %135.1 -> BB137 (if true) | BB138 (if false)
BB136   <- [133]
  void                    Nop                !     
  lgl$#-          %136.1 = %133.2
  dr              %136.2 = DeadBranchReached@0x5638c58e0d48[Test#3]
  goto BB69
BB69   <- [134, 136, 138]
  val?^ | miss    %69.0 = Phi                      %134.1:BB134, %136.1:BB136, %138.1:BB138
  val?^ | miss    %69.1 = %69.0
  dr              %69.2 = Phi                      %134.2:BB134, %136.2:BB136, %138.2:BB138
  dr              %69.3 = %69.2
  fs              %69.4 = FrameState         R     0x5638c5934ae0+440: [%129.1, %129.2, %129.3], env=e0.2
  void                    Deopt              !v    %69.4, %69.3, %69.1   !
BB159   <- [49]
  val?^ | miss    %159.0 = LdVar              eR    undefClasses, e0.2
  lgl$#-          %159.1 = IsType                   %159.0 isA lgl-
  void                    Branch                   %159.1 -> BB161 (if true) | BB162 (if false)
BB160   <- [49]
  void                    Nop                !     
  lgl$#-          %160.1 = %49.3
  dr              %160.2 = DeadBranchReached@0x5638c58e0d48[Test#12]
  goto BB50
BB169   <- [165]
  val             %169.0 = ChkMissing         e     %19.0
  lgl$#-          %169.1 = IsType                   %169.0 isA int$-
  void                    Branch                   %169.1 -> BB175 (if true) | BB176 (if false)
BB170   <- [165]
  void                    Nop                !     
  lgl$#-          %170.1 = %165.2
  dr              %170.2 = DeadBranchReached@0x5638c58e0d48[Test#8]
  goto BB20
BB20   <- [166, 170, 176]
  val?^ | miss    %20.0 = Phi                      %166.1:BB166, %170.1:BB170, %176.1:BB176
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %166.2:BB166, %170.2:BB170, %176.2:BB176
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x5638c5934ae0+1351: [%143.1, %143.2, %143.3], env=e0.2
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB137   <- [135]
  int$-           %137.0 = CastType           d     dn %135.0
  val?            %137.1 = Extract2_1D        wed   %133.1, %137.0, elided   <str$->
  void                    StVar              lW    eClass, %137.1, e0.2
  val?^ | miss    %137.3 = LdVar              eR    isClass, e0.2
  lgl$#-          %137.4 = Identical                %137.3, function(Class, formal=TRUE, where=topenv(pare|...
  void                    Branch                   %137.4 -> BB141 (if true) | BB142 (if false)
BB138   <- [135]
  void                    Nop                !     
  val             %138.1 = %135.0
  dr              %138.2 = Typecheck@0x5638c58e0d48[Type#19]
  goto BB69
BB161   <- [159]
  lgl-            %161.0 = CastType           d     dn %159.0
  val?            %161.1 = CallBuiltin        !v    any(%161.0) e0.2   <lgl$->
  lgl$#-          %161.2 = IsType                   %161.1 isA lgl$-
  void                    Branch                   %161.2 -> BB163 (if true) | BB164 (if false)
BB162   <- [159]
  void                    Nop                !     
  val?^ | miss    %162.1 = %159.0
  dr              %162.2 = Typecheck@0x5638c58e0d48[Type#116]
  goto BB50
BB50   <- [160, 162]
  val?^ | miss    %50.0 = Phi                      %160.1:BB160, %162.1:BB162
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %160.2:BB160, %162.2:BB162
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x5638c5934ae0+2207: [%143.1, %143.2, %49.1], env=e0.2
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB175   <- [169]
  int$-           %175.0 = CastType           d     dn %169.0
  val?            %175.1 = Extract2_1D        wed   %165.1, %175.0, elided   <str$->
  void                    StVar              lW    cli, %175.1, e0.2
  val?^ | miss    %175.3 = LdVar              eR    packageSlot, e0.2
  lgl$#-          %175.4 = Identical                %175.3, function(object) <(rir::DispatchTable*)0x5638b|...
  void                    Branch                   %175.4 -> BB185 (if true) | BB186 (if false)
BB176   <- [169]
  void                    Nop                !     
  val             %176.1 = %169.0
  dr              %176.2 = Typecheck@0x5638c58e0d48[Type#67]
  goto BB20
BB141   <- [137]
  prom-           %141.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p29 (!refl), e0.2
  prom-           %141.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p30, e0.2
  val?            %141.2 = StaticCall         !v    isClass[0x5638bf9a7d20](%141.0, missingArg, %141.1) { 0 2n } e0.2   <lgl$->
  lgl$#-          %141.3 = IsType                   %141.2 isA lgl$-
  void                    Branch                   %141.3 -> BB145 (if true) | BB146 (if false)
BB142   <- [137]
  fs              %142.0 = FrameState         R     0x5638c5934ae0+515: [%129.1, %129.2, %129.3], env=e0.2
  void                    Deopt              !v    %142.0, CallTarget@0x5638c58e0d48[Call#6], %137.3   !
BB163   <- [161]
  lgl$-           %163.0 = CastType           d     dn %161.1
  lgl$#-          %163.1 = CheckTrueFalse     e     %163.0
  void                    Branch                   %163.1 -> BB55 (if true) | BB54 (if false)
BB164   <- [161]
  fs              %164.0 = FrameState         R     0x5638c5934ae0+2303: [%161.1], env=e0.2
  void                    Deopt              !v    %164.0, Typecheck@0x5638c58e0d48[Type#117], %161.1   !
BB185   <- [175]
  prom-           %185.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p5 (!refl), e0.2
  ct              %185.1 = PushContext        lCL   %185.0, packageSlot(cli), function(object) <(rir::DispatchTable*)0x5638b|..., e0.2
  val?^           %185.2 = CastType                 up %185.0
  val?^ | miss    %185.3 = LdVar              eR    attr, <env 0x5638ba074378>
  lgl$#-          %185.4 = Identical                <blt attr>, %185.3   <true>
  void                    Branch                   %185.4 -> BB189 (if true) | BB190 (if false)
BB186   <- [175]
  fs              %186.0 = FrameState         R     0x5638c5934ae0+1426: [%143.1, %143.2, %143.3], env=e0.2
  void                    Deopt              !v    %186.0, CallTarget@0x5638c58e0d48[Call#20], %175.3   !
BB145   <- [141]
  lgl$-           %145.0 = CastType           d     dn %141.2
  lgl$#-          %145.1 = CheckTrueFalse     e     %145.0
  void                    Branch                   %145.1 -> BB98 (if true) | BB75 (if false)
BB146   <- [141]
  fs              %146.0 = FrameState         R     0x5638c5934ae0+560: [%129.1, %129.2, %129.3, %141.2], env=e0.2
  void                    Deopt              !v    %146.0, Typecheck@0x5638c58e0d48[Type#23], %141.2   !
BB55   <- [163]
  (cls|spec|blt)  %55.0 = LdFun              !v    warning, e0.2
  fs              %55.1 = FrameState         R     0x5638c5934ae0+2324: [%55.0], env=e0.2
  void                    Deopt              !v    %55.1, DeadCall@0x5638c58e0d48[Call#33], %55.0   !
BB54   <- [163]
  (cls|spec|blt)  %54.0 = LdFun              !v    <-, <0x5638b9a61da8>, e0.2
  prom-           %54.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p23, e0.2
  prom-           %54.2 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p26, e0.2
  val?            %54.3 = Call               !v    %54.0(%54.1, %54.2) e0.2
  val?^ | miss    %54.4 = LdVar              eR    ClassDef, e0.2
  void                    Visible            v     
  val?            %54.6 = Force!<value>      !     %54.4, e0.2   <other>
  void                    Return             l     %54.6
BB189   <- [185]
  env             e189.0 = MkEnv              l     object=%185.2, parent=<env 0x5638ba074378>, context 1
  val?            %189.1 = CallBuiltin        !v    attr(%175.1, "package") e189.0   <(nil|str)->
  val?            %189.2 = PopContext         C     %189.1, %185.1   <nil->
  lgl$-           %189.3 = Is                       %189.2, NULL
  lgl$#-          %189.4 = CheckTrueFalse     e     %189.3
  void                    Branch                   %189.4 -> BB29 (if true) | BB28 (if false)
BB190   <- [185]
  fs              %190.0 = FrameState         R     0x5638c5934ae0+1458: [%143.1, %143.2, %143.3], env=e0.2
  env             e190.1 = (MkEnv)            l     object=%185.2, parent=<env 0x5638ba074378>, context 1
  fs              %190.2 = FrameState         R     0x5638bad26380+17: [<blt attr>, %185.4], env=e190.1, next=%190.0
  void                    Deopt              !v    %190.2, DeadBranchReached@0x5638bc197d18[Test#0], %185.4   !
BB98   <- [145]
  (cls|spec|blt)  %98.0 = LdFun              !v    @, <0x5638b9a6cbd8>, e0.2
  prom-           %98.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p43, e0.2
  prom-           %98.2 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p46, e0.2
  val?            %98.3 = Call               !v    %98.0(%98.1, %98.2) e0.2   <vec->
  lgl$#-          %98.4 = IsType                   %98.3 isA val?-
  val?^ | miss    %98.5 = LdVar              eR    superProps !upd, e0.2
  lgl$#-          %98.6 = IsType                   %98.5 isA val?~- | miss
  void                    Branch                   %98.6 -> BB147 (if true) | BB148 (if false)
BB75   <- [145]
  void                    Nop                !     
  int$-           %75.1 = %129.3
  goto BB76
BB29   <- [189]
  val?^ | miss    %29.0 = LdVar              eR    getClassDef, e0.2
  lgl$#-          %29.1 = Identical                %29.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %29.1 -> BB193 (if true) | BB194 (if false)
BB28   <- [189]
  (cls|spec|blt)  %28.0 = LdFun              !v    getClassDef, e0.2
  fs              %28.1 = FrameState         R     0x5638c5934ae0+1479: [%143.1, %143.2, %143.3, %28.0], env=e0.2
  void                    Deopt              !v    %28.1, DeadCall@0x5638c58e0d48[Call#21], %28.0   !
BB147   <- [98]
  val?~- | miss   %147.0 = CastType           d     dn %98.5
  val?-           %147.1 = Force!<value>            %147.0,    <vec->
  val?^ | miss    %147.2 = LdVar              eR    i, e0.2
  lgl$#-          %147.3 = IsType                   %147.2 isA int$-
  void                    Branch                   %147.3 -> BB149 (if true) | BB150 (if false)
BB148   <- [98]
  void                    Nop                !     
  val?^ | miss    %148.1 = %98.5
  dr              %148.2 = Typecheck@0x5638c58e0d48[Type#29]
  goto BB99
BB76   <- [75, 87, 151]
  int$-           %76.0 = Phi                      %75.1:BB75, %87.1:BB87, %151.3:BB151
  int$-           %76.1 = %76.0
  int$-           %76.2 = Inc                      %76.1
  lgl$-           %76.3 = Lt                 d     %129.2, %76.2, elided
  lgl$#-          %76.4 = Identical                %76.3, true
  void                    Branch                   %76.4 -> BB91 (if true) | BB79 (if false)
BB193   <- [29]
  prom-           %193.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p6, e0.2
  prom-           %193.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p7, e0.2
  val?            %193.2 = StaticCall         !v    getClassDef[0x5638c6241c80](%193.0, %193.1) e0.2   <other>
  lgl$-           %193.3 = Is                       %193.2, NULL
  void                    StVar              lW    cliDef, %193.2, e0.2
  val             %193.5 = ChkMissing         e     %193.2
  lgl$#-          %193.6 = CheckTrueFalse     e     %193.3
  void                    Branch                   %193.6 -> BB56 (if true) | BB30 (if false)
BB194   <- [29]
  fs              %194.0 = FrameState         R     0x5638c5934ae0+1458: [%143.1, %143.2, %143.3, %189.2], env=e0.2
  void                    Deopt              !v    %194.0, CallTarget@0x5638c58e0d48[Call#22], %29.0   !
BB149   <- [147]
  int$-           %149.0 = CastType           d     dn %147.2
  real$-          %149.1 = Add                d     %149.0, 1, elided   <real$->
  void                    Branch                   %98.4 -> BB151 (if true) | BB152 (if false)
BB150   <- [147]
  void                    Nop                !     
  val?^ | miss    %150.1 = %147.2
  dr              %150.2 = Typecheck@0x5638c58e0d48[Type#30]
  goto BB99
BB99   <- [148, 150, 152]
  val?^ | miss    %99.0 = Phi                      %148.1:BB148, %150.1:BB150, %152.1:BB152
  val?^ | miss    %99.1 = %99.0
  dr              %99.2 = Phi                      %148.2:BB148, %150.2:BB150, %152.2:BB152
  dr              %99.3 = %99.2
  fs              %99.4 = FrameState         R     0x5638c5934ae0+613: [%129.1, %129.2, %129.3, %98.3], env=e0.2
  void                    Deopt              !v    %99.4, %99.3, %99.1   !
BB91   <- [76]
  val?^ | miss    %91.0 = LdVar              eR    unlist, e0.2
  lgl$#-          %91.1 = Identical                %91.0, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Branch                   %91.1 -> BB153 (if true) | BB154 (if false)
BB79   <- [76]
  val?            %79.0 = Extract2_1D        wed   %129.1, %76.2, elided
  void                    StVar              lW    i, %79.0, e0.2
  val?^ | miss    %79.2 = LdVar              eR    ext, e0.2
  lgl$#-          %79.3 = IsType                   %79.2 isA val?~- | miss
  void                    Branch                   %79.3 -> BB155 (if true) | BB156 (if false)
BB56   <- [193]
  val?^ | miss    %56.0 = LdVar              eR    undefClasses, e0.2
  val?            %56.1 = Force!             !v    %56.0, e0.2   <val?_>
  val?^ | miss    %56.2 = LdVar              eR    i, e0.2
  val?            %56.3 = Force!             !v    %56.2, e0.2   <val?_>
  lgl$#-          %56.4 = IsType                   %56.3 isA val?+
  lgl$#-          %56.5 = IsType                   %56.1 isA val?+
  void                    Branch                   %56.5 -> BB195 (if true) | BB196 (if false)
BB30   <- [193]
  (cls|spec|blt)  %30.0 = LdFun              !v    <-, <0x5638b9a61da8>, e0.2
  prom-           %30.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p8, e0.2
  prom-           %30.2 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p11, e0.2
  val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e0.2
  int$-           %30.4 = %143.3
  goto BB31
BB151   <- [149]
  val?-           %151.0 = CastType           d     dn %98.3   <vec->
  val?-           %151.1 = Subassign2_1D      wed   %151.0, %147.1, %149.1, elided
  void                    StVar              lW    superProps, %151.1, e0.2
  int$-           %151.3 = %129.3
  goto BB76
BB152   <- [149]
  void                    Nop                !     
  val?            %152.1 = %98.3
  dr              %152.2 = Typecheck@0x5638c58e0d48[Type#28]
  goto BB99
BB153   <- [91]
  prom-           %153.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p37, e0.2
  val?            %153.1 = StaticCall         !v    unlist[0x5638beb8bec0](%153.0, false) { 0 1n } e0.2   <vec$+>
  void                    StVar              lW    properties, %153.1, e0.2
  val?^ | miss    %153.3 = LdVar              eR    anyDuplicated, e0.2
  lgl$#-          %153.4 = Identical                %153.3, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %153.4 -> BB171 (if true) | BB172 (if false)
BB154   <- [91]
  fs              %154.0 = FrameState         R     0x5638c5934ae0+668: [%129.1, %129.2, %76.1], env=e0.2
  void                    Deopt              !v    %154.0, CallTarget@0x5638c58e0d48[Call#12], %91.0   !
BB155   <- [79]
  val?~- | miss   %155.0 = CastType           d     dn %79.2
  val?-           %155.1 = Force!<value>            %155.0,    <str->
  lgl$#-          %155.2 = IsType                   %155.1 isA val+   <true>
  void                    Branch                   %155.2 -> BB157 (if true) | BB158 (if false)
BB156   <- [79]
  void                    Nop                !     
  val?^ | miss    %156.1 = %79.2
  dr              %156.2 = Typecheck@0x5638c58e0d48[Type#32]
  goto BB80
BB195   <- [56]
  val?+           %195.0 = CastType           d     dn %56.1   <val?_>
  void                    Branch                   %56.4 -> BB197 (if true) | BB198 (if false)
BB196   <- [56]
  void                    Nop                !     
  val?            %196.1 = %56.1
  dr              %196.2 = Typecheck@0x5638c58e0d48[Type#88]
  goto BB57
BB31   <- [30, 44, 197]
  int$-           %31.0 = Phi                      %30.4:BB30, %44.1:BB44, %197.3:BB197
  int$-           %31.1 = %31.0
  int$-           %31.2 = Inc                      %31.1
  lgl$-           %31.3 = Lt                 d     %143.2, %31.2, elided
  lgl$#-          %31.4 = Identical                %31.3, true
  void                    Branch                   %31.4 -> BB48 (if true) | BB32 (if false)
BB171   <- [153]
  val?^ | miss    %171.0 = LdVar              eR    allNames, e0.2
  lgl$#-          %171.1 = Identical                %171.0, function(x) <(rir::DispatchTable*)0x5638c0a4a1|...
  void                    Branch                   %171.1 -> BB173 (if true) | BB174 (if false)
BB172   <- [153]
  void                    Nop                !     
  val?^ | miss    %172.1 = %153.3
  dr              %172.2 = CallTarget@0x5638c58e0d48[Call#13]
  goto BB92
BB157   <- [155]
  val             %157.0 = ChkMissing         e     %79.0
  lgl$#-          %157.1 = IsType                   %157.0 isA int$-
  void                    Branch                   %157.1 -> BB167 (if true) | BB168 (if false)
BB158   <- [155]
  void                    Nop                !     
  lgl$#-          %158.1 = %155.2
  dr              %158.2 = DeadBranchReached@0x5638c58e0d48[Test#4]
  goto BB80
BB80   <- [156, 158, 168]
  val?^ | miss    %80.0 = Phi                      %156.1:BB156, %158.1:BB158, %168.1:BB168
  val?^ | miss    %80.1 = %80.0
  dr              %80.2 = Phi                      %156.2:BB156, %158.2:BB158, %168.2:BB168
  dr              %80.3 = %80.2
  fs              %80.4 = FrameState         R     0x5638c5934ae0+697: [%129.1, %129.2, %76.2], env=e0.2
  void                    Deopt              !v    %80.4, %80.3, %80.1   !
BB197   <- [195]
  val?+           %197.0 = CastType           d     dn %56.3   <val?_>
  val?+           %197.1 = Subassign2_1D      wed   true, %195.0, %197.0, elided
  void                    StVar              lW    undefClasses, %197.1, e0.2
  int$-           %197.3 = %143.3
  goto BB31
BB198   <- [195]
  void                    Nop                !     
  val?            %198.1 = %56.3
  dr              %198.2 = Typecheck@0x5638c58e0d48[Type#89]
  goto BB57
BB57   <- [196, 198]
  val?^ | miss    %57.0 = Phi                      %196.1:BB196, %198.1:BB198
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %196.2:BB196, %198.2:BB198
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x5638c5934ae0+1747: [%143.1, %143.2, %143.3, true, %56.1, %56.3], env=e0.2
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB48   <- [31]
  void                    Nop                !     
  int$-           %48.1 = %31.2
  goto BB49
BB32   <- [31]
  val?            %32.0 = Extract2_1D        wed   %143.1, %31.2, elided
  void                    StVar              lW    i, %32.0, e0.2
  val?^ | miss    %32.2 = LdVar              eR    properties, e0.2
  lgl$#-          %32.3 = IsType                   %32.2 isA val?~+ | miss
  void                    Branch                   %32.3 -> BB199 (if true) | BB200 (if false)
BB173   <- [171]
  prom-           %173.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p42 (!refl), e0.2
  val?            %173.1 = StaticCall         !v    unknown--fromConstant[0x5638c0c9b350](%173.0) from function(x) <(rir::DispatchTable*)0x5638c0a4a1|... { 0 } e0.2   <str$->
  val?            %173.2 = StaticCall         !v    anyDuplicated[0x5638c5f0d6b0](%173.1) { 0 } e0.2   <int$->
  lgl$#-          %173.3 = IsType                   %173.2 isA int$-
  void                    Branch                   %173.3 -> BB179 (if true) | BB180 (if false)
BB174   <- [171]
  void                    Nop                !     
  val?^ | miss    %174.1 = %171.0
  dr              %174.2 = CallTarget@0x5638c58e0d48[Call#14]
  goto BB92
BB92   <- [172, 174]
  val?^ | miss    %92.0 = Phi                      %172.1:BB172, %174.1:BB174
  val?^ | miss    %92.1 = %92.0
  dr              %92.2 = Phi                      %172.2:BB172, %174.2:BB174
  dr              %92.3 = %92.2
  fs              %92.4 = FrameState         R     0x5638c5934ae0+994: [], env=e0.2
  void                    Deopt              !v    %92.4, %92.3, %92.1   !
BB167   <- [157]
  int$-           %167.0 = CastType           d     dn %157.0
  val?            %167.1 = Extract2_1D        wed   %155.1, %167.0, elided   <str$->
  void                    StVar              lW    eClass, %167.1, e0.2
  val?^ | miss    %167.3 = LdVar              eR    isClass, e0.2
  lgl$#-          %167.4 = Identical                %167.3, function(Class, formal=TRUE, where=topenv(pare|...
  void                    Branch                   %167.4 -> BB177 (if true) | BB178 (if false)
BB168   <- [157]
  void                    Nop                !     
  val             %168.1 = %157.0
  dr              %168.2 = Typecheck@0x5638c58e0d48[Type#34]
  goto BB80
BB199   <- [32]
  val?~+ | miss   %199.0 = CastType           d     dn %32.2
  val?+           %199.1 = Force!<value>            %199.0,    <vec+>
  lgl$#-          %199.2 = IsType                   %199.1 isA val+   <true>
  void                    Branch                   %199.2 -> BB201 (if true) | BB202 (if false)
BB200   <- [32]
  void                    Nop                !     
  val?^ | miss    %200.1 = %32.2
  dr              %200.2 = Typecheck@0x5638c58e0d48[Type#90]
  goto BB33
BB179   <- [173]
  int$-           %179.0 = CastType           d     dn %173.2
  lgl$#-          %179.1 = CheckTrueFalse     e     %179.0
  void                    Branch                   %179.1 -> BB97 (if true) | BB96 (if false)
BB180   <- [173]
  fs              %180.0 = FrameState         R     0x5638c5934ae0+1026: [%173.2], env=e0.2
  void                    Deopt              !v    %180.0, Typecheck@0x5638c58e0d48[Type#51], %173.2   !
BB177   <- [167]
  prom-           %177.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p31 (!refl), e0.2
  prom-           %177.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p32, e0.2
  val?            %177.2 = StaticCall         !v    isClass[0x5638bf9a7d20](%177.0, missingArg, %177.1) { 0 2n } e0.2   <lgl$->
  lgl$#-          %177.3 = IsType                   %177.2 isA lgl$-
  void                    Branch                   %177.3 -> BB181 (if true) | BB182 (if false)
BB178   <- [167]
  fs              %178.0 = FrameState         R     0x5638c5934ae0+772: [%129.1, %129.2, %76.2], env=e0.2
  void                    Deopt              !v    %178.0, CallTarget@0x5638c58e0d48[Call#9], %167.3   !
BB201   <- [199]
  val             %201.0 = ChkMissing         e     %32.0
  lgl$#-          %201.1 = IsType                   %201.0 isA int$-
  void                    Branch                   %201.1 -> BB203 (if true) | BB204 (if false)
BB202   <- [199]
  void                    Nop                !     
  lgl$#-          %202.1 = %199.2
  dr              %202.2 = DeadBranchReached@0x5638c58e0d48[Test#10]
  goto BB33
BB33   <- [200, 202, 204]
  val?^ | miss    %33.0 = Phi                      %200.1:BB200, %202.1:BB202, %204.1:BB204
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %200.2:BB200, %202.2:BB202, %204.2:BB204
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x5638c5934ae0+1791: [%143.1, %143.2, %31.2], env=e0.2
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB97   <- [179]
  (cls|spec|blt)  %97.0 = LdFun              !v    duplicated, e0.2
  fs              %97.1 = FrameState         R     0x5638c5934ae0+1047: [%97.0], env=e0.2
  void                    Deopt              !v    %97.1, DeadCall@0x5638c58e0d48[Call#15], %97.0   !
BB96   <- [179]
  void                    Nop                !     
  goto BB12
BB181   <- [177]
  lgl$-           %181.0 = CastType           d     dn %177.2
  lgl$#-          %181.1 = CheckTrueFalse     e     %181.0
  void                    Branch                   %181.1 -> BB88 (if true) | BB86 (if false)
BB182   <- [177]
  fs              %182.0 = FrameState         R     0x5638c5934ae0+817: [%129.1, %129.2, %76.2, %177.2], env=e0.2
  void                    Deopt              !v    %182.0, Typecheck@0x5638c58e0d48[Type#38], %177.2   !
BB203   <- [201]
  int$-           %203.0 = CastType           d     dn %201.0
  val?            %203.1 = Extract2_1D        wed   %199.1, %203.0, elided   <str$->
  void                    StVar              lW    cli, %203.1, e0.2
  val?^ | miss    %203.3 = LdVar              eR    packageSlot, e0.2
  lgl$#-          %203.4 = Identical                %203.3, function(object) <(rir::DispatchTable*)0x5638b|...
  void                    Branch                   %203.4 -> BB205 (if true) | BB206 (if false)
BB204   <- [201]
  void                    Nop                !     
  val             %204.1 = %201.0
  dr              %204.2 = Typecheck@0x5638c58e0d48[Type#92]
  goto BB33
BB88   <- [181]
  (cls|spec|blt)  %88.0 = LdFun              !v    @, <0x5638b9a6cbd8>, e0.2
  prom-           %88.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p33, e0.2
  prom-           %88.2 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p36, e0.2
  val?            %88.3 = Call               !v    %88.0(%88.1, %88.2) e0.2   <vec->
  lgl$#-          %88.4 = IsType                   %88.3 isA val?-
  val?^ | miss    %88.5 = LdVar              eR    superProps !upd, e0.2
  lgl$#-          %88.6 = IsType                   %88.5 isA val?~- | miss
  void                    Branch                   %88.6 -> BB183 (if true) | BB184 (if false)
BB86   <- [181]
  void                    Nop                !     
  goto BB87
BB205   <- [203]
  prom-           %205.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p14 (!refl), e0.2
  ct              %205.1 = PushContext        lCL   %205.0, packageSlot(cli), function(object) <(rir::DispatchTable*)0x5638b|..., e0.2
  val?^           %205.2 = CastType                 up %205.0
  val?^ | miss    %205.3 = LdVar              eR    attr, <env 0x5638ba074378>
  lgl$#-          %205.4 = Identical                <blt attr>, %205.3   <true>
  void                    Branch                   %205.4 -> BB207 (if true) | BB208 (if false)
BB206   <- [203]
  fs              %206.0 = FrameState         R     0x5638c5934ae0+1866: [%143.1, %143.2, %31.2], env=e0.2
  void                    Deopt              !v    %206.0, CallTarget@0x5638c58e0d48[Call#26], %203.3   !
BB183   <- [88]
  val?~- | miss   %183.0 = CastType           d     dn %88.5
  val?-           %183.1 = Force!<value>            %183.0,    <vec->
  val?^ | miss    %183.2 = LdVar              eR    i, e0.2
  lgl$#-          %183.3 = IsType                   %183.2 isA int$-
  void                    Branch                   %183.3 -> BB187 (if true) | BB188 (if false)
BB184   <- [88]
  void                    Nop                !     
  val?^ | miss    %184.1 = %88.5
  dr              %184.2 = Typecheck@0x5638c58e0d48[Type#44]
  goto BB89
BB87   <- [86, 191]
  void                    Nop                !     
  int$-           %87.1 = %76.2
  goto BB76
BB207   <- [205]
  env             e207.0 = MkEnv              l     object=%205.2, parent=<env 0x5638ba074378>, context 1
  val?            %207.1 = Force!<lazy>       !vr   %205.2, e207.0   <(str|other)>
  val?            %207.2 = CallBuiltin        !v    attr(%207.1, "package") e207.0   <(nil|str)->
  val?            %207.3 = PopContext         C     %207.2, %205.1   <nil->
  lgl$-           %207.4 = Is                       %207.3, NULL
  lgl$#-          %207.5 = CheckTrueFalse     e     %207.4
  void                    Branch                   %207.5 -> BB42 (if true) | BB41 (if false)
BB208   <- [205]
  fs              %208.0 = FrameState         R     0x5638c5934ae0+1898: [%143.1, %143.2, %31.2], env=e0.2
  env             e208.1 = (MkEnv)            l     object=%205.2, parent=<env 0x5638ba074378>, context 1
  fs              %208.2 = FrameState         R     0x5638bad26380+17: [<blt attr>, %205.4], env=e208.1, next=%208.0
  void                    Deopt              !v    %208.2, DeadBranchReached@0x5638bc197d18[Test#0], %205.4   !
BB187   <- [183]
  int$-           %187.0 = CastType           d     dn %183.2
  real$-          %187.1 = Add                d     %187.0, 1, elided   <real$->
  void                    Branch                   %88.4 -> BB191 (if true) | BB192 (if false)
BB188   <- [183]
  void                    Nop                !     
  val?^ | miss    %188.1 = %183.2
  dr              %188.2 = Typecheck@0x5638c58e0d48[Type#45]
  goto BB89
BB89   <- [184, 188, 192]
  val?^ | miss    %89.0 = Phi                      %184.1:BB184, %188.1:BB188, %192.1:BB192
  val?^ | miss    %89.1 = %89.0
  dr              %89.2 = Phi                      %184.2:BB184, %188.2:BB188, %192.2:BB192
  dr              %89.3 = %89.2
  fs              %89.4 = FrameState         R     0x5638c5934ae0+870: [%129.1, %129.2, %76.2, %88.3], env=e0.2
  void                    Deopt              !v    %89.4, %89.3, %89.1   !
BB42   <- [207]
  val?^ | miss    %42.0 = LdVar              eR    getClassDef, e0.2
  lgl$#-          %42.1 = Identical                %42.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %42.1 -> BB209 (if true) | BB210 (if false)
BB41   <- [207]
  (cls|spec|blt)  %41.0 = LdFun              !v    getClassDef, e0.2
  fs              %41.1 = FrameState         R     0x5638c5934ae0+1919: [%143.1, %143.2, %31.2, %41.0], env=e0.2
  void                    Deopt              !v    %41.1, DeadCall@0x5638c58e0d48[Call#27], %41.0   !
BB191   <- [187]
  val?-           %191.0 = CastType           d     dn %88.3   <vec->
  val?-           %191.1 = Subassign2_1D      wed   %191.0, %183.1, %187.1, elided
  void                    StVar              lW    superProps, %191.1, e0.2
  goto BB87
BB192   <- [187]
  void                    Nop                !     
  val?            %192.1 = %88.3
  dr              %192.2 = Typecheck@0x5638c58e0d48[Type#43]
  goto BB89
BB209   <- [42]
  prom-           %209.0 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p15, e0.2
  prom-           %209.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p16, e0.2
  val?            %209.2 = StaticCall         !v    getClassDef[0x5638c6241c80](%209.0, %209.1) e0.2   <other>
  lgl$-           %209.3 = Is                       %209.2, NULL
  void                    StVar              lW    cliDef, %209.2, e0.2
  val             %209.5 = ChkMissing         e     %209.2
  lgl$#-          %209.6 = CheckTrueFalse     e     %209.3
  void                    Branch                   %209.6 -> BB45 (if true) | BB43 (if false)
BB210   <- [42]
  fs              %210.0 = FrameState         R     0x5638c5934ae0+1898: [%143.1, %143.2, %31.2, %207.3], env=e0.2
  void                    Deopt              !v    %210.0, CallTarget@0x5638c58e0d48[Call#28], %42.0   !
BB45   <- [209]
  val?^ | miss    %45.0 = LdVar              eR    undefClasses, e0.2
  val?            %45.1 = Force!             !v    %45.0, e0.2   <val?_>
  val?^ | miss    %45.2 = LdVar              eR    i, e0.2
  val?            %45.3 = Force!             !v    %45.2, e0.2   <val?_>
  lgl$#-          %45.4 = IsType                   %45.3 isA val?+
  lgl$#-          %45.5 = IsType                   %45.1 isA val?+
  void                    Branch                   %45.5 -> BB211 (if true) | BB212 (if false)
BB43   <- [209]
  (cls|spec|blt)  %43.0 = LdFun              !v    <-, <0x5638b9a61da8>, e0.2
  prom-           %43.1 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p17, e0.2
  prom-           %43.2 = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p20, e0.2
  val?            %43.3 = Call               !v    %43.0(%43.1, %43.2) e0.2
  goto BB44
BB211   <- [45]
  val?+           %211.0 = CastType           d     dn %45.1   <val?_>
  void                    Branch                   %45.4 -> BB213 (if true) | BB214 (if false)
BB212   <- [45]
  void                    Nop                !     
  val?            %212.1 = %45.1
  dr              %212.2 = Typecheck@0x5638c58e0d48[Type#113]
  goto BB46
BB44   <- [43, 213]
  void                    Nop                !     
  int$-           %44.1 = %31.2
  goto BB31
BB213   <- [211]
  val?+           %213.0 = CastType           d     dn %45.3   <val?_>
  val?+           %213.1 = Subassign2_1D      wed   true, %211.0, %213.0, elided
  void                    StVar              lW    undefClasses, %213.1, e0.2
  goto BB44
BB214   <- [211]
  void                    Nop                !     
  val?            %214.1 = %45.3
  dr              %214.2 = Typecheck@0x5638c58e0d48[Type#114]
  goto BB46
BB46   <- [212, 214]
  val?^ | miss    %46.0 = Phi                      %212.1:BB212, %214.1:BB214
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %212.2:BB212, %214.2:BB214
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x5638c5934ae0+2187: [%143.1, %143.2, %31.2, true, %45.1, %45.3], env=e0.2
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, <0x5638b9a6da90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cli, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cli, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p10, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p12, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p13, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cliDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cli, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cli, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p18, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p19, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p21, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p22, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cliDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p24, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p25, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x5638b9a6da90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p28, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  void                    Visible            v     
  val?            %0.5  = Add                !     %0.3, 1L, e0.0   <int$->
  void                    Return             l     %0.5
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ext, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p34, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p35, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, where=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superProps, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    properties, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p44, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p45, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, where=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simpleOnly, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sort.list, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p52, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p53, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p54, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    depth, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x5638b9a6cc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p56, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .completeClassSlots[0x5638bff39260]_p57, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real->
  void                    Return             l     %0.4
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    depth, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ .completeClassSlots[0x5638bff39260]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
