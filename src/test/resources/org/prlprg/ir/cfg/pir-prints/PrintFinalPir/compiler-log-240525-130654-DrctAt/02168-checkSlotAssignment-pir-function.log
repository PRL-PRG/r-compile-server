
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkSlotAssignment[0x5638c0706970]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1                    │
│ Properties:                                                                  │
├────── Final PIR Version
checkSlotAssignment[0x5638c0706970]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    class, <env 0x5638ba074378>
  lgl$#-          %0.4  = Identical                <blt class>, %0.3   <true>
  void                    Branch                   %0.4 -> BB33 (if true) | BB34 (if false)
BB33   <- [0]
  env             e33.0 = MkEnv              l     obj=%0.2, name=%0.1, value=%0.0, parent=<env 0x5638ba074378>, context 1
  val?            %33.1 = Force!<lazy>       !vrd  %0.2,    <other>
  val?            %33.2 = CallBuiltin        !v    class(%33.1) e33.0   <str$+>
  void                    StVar              lW    cl, %33.2, e33.0
  val?^ | miss    %33.4 = LdVar              eR    getClass, e33.0
  lgl$#-          %33.5 = Identical                %33.4, function(Class, .Force=FALSE, where=.classEnv(|...
  void                    Branch                   %33.5 -> BB35 (if true) | BB36 (if false)
BB34   <- [0]
  env             e34.0 = (MkEnv)            l     obj=%0.2, name=%0.1, value=%0.0, parent=<env 0x5638ba074378>, context 1
  fs              %34.1 = FrameState         R     0x5638c15fa320+0: [], env=e34.0
  void                    Deopt              !v    %34.1, DeadBranchReached@0x5638bddcad30[Test#0], %0.4
BB35   <- [33]
  prom-           %35.0 = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p0 (!refl), e33.0
  val?            %35.1 = StaticCall         !v    getClass[0x5638bc3529b0](%35.0) e33.0   <other>
  void                    StVar              lW    ClassDef, %35.1, e33.0
  (cls|spec|blt)  %35.3 = LdFun              !v    @, <0x5638b9a6cbd8>, e33.0
  prom-           %35.4 = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p1, e33.0
  prom-           %35.5 = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p2, e33.0
  val?            %35.6 = Call               !v    %35.3(%35.4, %35.5) e33.0   <vec+>
  lgl$#-          %35.7 = IsType                   %35.6 isA val+   <true>
  void                    Branch                   %35.7 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x5638c15fa320+105: [], env=e33.0
  void                    Deopt              !v    %36.0, CallTarget@0x5638bddcad30[Call#1], %33.4   !
BB37   <- [35]
  val?^ | miss    %37.0 = LdVar              eR    name, e33.0
  val?            %37.1 = Force!<lazy>       !v    %37.0, e33.0   <str$->
  lgl$#-          %37.2 = IsType                   %37.1 isA val?-
  lgl$#-          %37.3 = IsType                   %35.6 isA val?+
  void                    Branch                   %37.3 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  fs              %38.0 = FrameState         R     0x5638c15fa320+188: [%35.6], env=e33.0
  void                    Deopt              !v    %38.0, DeadBranchReached@0x5638bddcad30[Test#1], %35.7   !
BB39   <- [37]
  val?+           %39.0 = CastType           d     dn %35.6   <vec+>
  void                    Branch                   %37.2 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  void                    Nop                !     
  val?            %40.1 = %35.6
  dr              %40.2 = Typecheck@0x5638bddcad30[Type#7]
  goto BB7
BB41   <- [39]
  val?-           %41.0 = CastType           d     dn %37.1   <str$->
  val?            %41.1 = Extract2_1D        wed   %39.0, %41.0, elided   <str$->
  lgl$-           %41.2 = Is                       %41.1, NULL
  void                    StVar              lW    slotClass, %41.1, e33.0
  val             %41.4 = ChkMissing         e     %41.1
  lgl$#-          %41.5 = CheckTrueFalse     e     %41.2
  void                    Branch                   %41.5 -> BB31 (if true) | BB11 (if false)
BB42   <- [39]
  void                    Nop                !     
  val?            %42.1 = %37.1
  dr              %42.2 = Typecheck@0x5638bddcad30[Type#9]
  goto BB7
BB7   <- [40, 42]
  val?^ | miss    %7.0  = Phi                      %40.1:BB40, %42.1:BB42
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %40.2:BB40, %42.2:BB42
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x5638c15fa320+233: [%35.6, %37.1], env=e33.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB31   <- [41]
  (cls|spec|blt)  %31.0 = LdFun              !v    stop, e33.0
  fs              %31.1 = FrameState         R     0x5638c15fa320+289: [%31.0], env=e33.0
  void                    Deopt              !v    %31.1, DeadCall@0x5638bddcad30[Call#3], %31.0   !
BB11   <- [41]
  val?^ | miss    %11.0 = LdVar              eR    class, e33.0
  lgl$#-          %11.1 = Identical                <blt class>, %11.0   <true>
  void                    Branch                   %11.1 -> BB43 (if true) | BB44 (if false)
BB43   <- [11]
  val?^ | miss    %43.0 = LdVar              eR    value, e33.0
  val?            %43.1 = Force!<lazy>       !v    %43.0, e33.0   <val?+>
  val?            %43.2 = CallBuiltin        !v    class(%43.1) e33.0   <str$->
  void                    StVar              lW    valueClass, %43.2, e33.0
  val?^ | miss    %43.4 = LdVar              eR    .identC, e33.0
  lgl$#-          %43.5 = Identical                %43.4, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %43.5 -> BB45 (if true) | BB46 (if false)
BB44   <- [11]
  fs              %44.0 = FrameState         R     0x5638c15fa320+254: [], env=e33.0
  void                    Deopt              !v    %44.0, DeadBranchReached@0x5638bddcad30[Test#2], %11.1   !
BB45   <- [43]
  prom-           %45.0 = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p3, e33.0
  prom-           %45.1 = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p4 (!refl), e33.0
  val?            %45.2 = StaticCall         !v    .identC[0x5638bedbcfc0](%45.0, %45.1) e33.0   <lgl$->
  lgl$#-          %45.3 = IsType                   %45.2 isA lgl$-
  void                    Branch                   %45.3 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x5638c15fa320+435: [], env=e33.0
  void                    Deopt              !v    %46.0, CallTarget@0x5638bddcad30[Call#8], %43.4   !
BB47   <- [45]
  lgl$-           %47.0 = CastType           d     dn %45.2
  lgl$#-          %47.1 = CheckTrueFalse     e     %47.0
  void                    Branch                   %47.1 -> BB30 (if true) | BB16 (if false)
BB48   <- [45]
  void                    Nop                !     
  val?            %48.1 = %45.2
  dr              %48.2 = Typecheck@0x5638bddcad30[Type#22]
  goto BB14
BB30   <- [47]
  val?^ | miss    %30.0 = LdVar              eR    value, e33.0
  void                    Visible            v     
  val?            %30.2 = Force!<wrapped>    !     %30.0, e33.0   <(lgl|vec)+>
  val?            %30.3 = %30.2
  goto BB28
BB16   <- [47]
  val?^ | miss    %16.0 = LdVar              eR    possibleExtends, e33.0
  lgl$#-          %16.1 = Identical                %16.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %16.1 -> BB49 (if true) | BB50 (if false)
BB14   <- [48, 50]
  val?^ | miss    %14.0 = Phi                      %48.1:BB48, %50.1:BB50
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %48.2:BB48, %50.2:BB50
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x5638c15fa320+472: [%45.2], env=e33.0
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB28   <- [30, 27]
  val?            %28.0 = Phi                      %27.3:BB27, %30.3:BB30
  val?            %28.1 = %28.0
  void                    Return             l     %28.1
BB49   <- [16]
  prom-           %49.0 = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p5, e33.0
  prom-           %49.1 = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p6, e33.0
  prom-           %49.2 = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p7, e33.0
  val?            %49.3 = StaticCall         !v    possibleExtends[0x5638bfe8c230](%49.0, %49.1, missingArg, %49.2) { 0 1 3n } e33.0   <lgl$->
  lgl$#-          %49.4 = IsType                   %49.3 isA lgl$-
  void                    Branch                   %49.4 -> BB51 (if true) | BB52 (if false)
BB50   <- [16]
  void                    Nop                !     
  val?^ | miss    %50.1 = %16.0
  dr              %50.2 = CallTarget@0x5638bddcad30[Call#9]
  goto BB14
BB51   <- [49]
  lgl$-           %51.0 = CastType           d     dn %49.3
  void                    StVar              lW    ok, %51.0, e33.0
  val?^ | miss    %51.2 = LdVar              eR    isFALSE, e33.0
  lgl$#-          %51.3 = Identical                %51.2, function(x) <(rir::DispatchTable*)0x5638bd4364|...
  void                    Branch                   %51.3 -> BB53 (if true) | BB54 (if false)
BB52   <- [49]
  fs              %52.0 = FrameState         R     0x5638c15fa320+557: [%49.3], env=e33.0
  void                    Deopt              !v    %52.0, Typecheck@0x5638bddcad30[Type#30], %49.3   !
BB53   <- [51]
  val?            %53.0 = StaticCall         !v    isFALSE[0x5638c5c16660](%51.0) e33.0   <lgl$->
  lgl$#-          %53.1 = IsType                   %53.0 isA lgl$-
  void                    Branch                   %53.1 -> BB55 (if true) | BB56 (if false)
BB54   <- [51]
  fs              %54.0 = FrameState         R     0x5638c15fa320+571: [], env=e33.0
  void                    Deopt              !v    %54.0, CallTarget@0x5638bddcad30[Call#12], %51.2   !
BB55   <- [53]
  lgl$-           %55.0 = CastType           d     dn %53.0
  lgl$#-          %55.1 = CheckTrueFalse     e     %55.0
  void                    Branch                   %55.1 -> BB29 (if true) | BB23 (if false)
BB56   <- [53]
  void                    Nop                !     
  val?            %56.1 = %53.0
  dr              %56.2 = Typecheck@0x5638bddcad30[Type#32]
  goto BB21
BB29   <- [55]
  (cls|spec|blt)  %29.0 = LdFun              !v    stop, e33.0
  fs              %29.1 = FrameState         R     0x5638c15fa320+754: [%29.0], env=e33.0
  void                    Deopt              !v    %29.1, DeadCall@0x5638bddcad30[Call#15], %29.0   !
BB23   <- [55]
  val?^ | miss    %23.0 = LdVar              eR    isTRUE, e33.0
  lgl$#-          %23.1 = Identical                %23.0, function(x) <(rir::DispatchTable*)0x5638bb9686|...
  void                    Branch                   %23.1 -> BB57 (if true) | BB58 (if false)
BB21   <- [56, 58]
  val?^ | miss    %21.0 = Phi                      %56.1:BB56, %58.1:BB58
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %56.2:BB56, %58.2:BB58
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x5638c15fa320+603: [%53.0], env=e33.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB57   <- [23]
  val?^ | miss    %57.0 = LdVar              eR    ok, e33.0
  val?            %57.1 = Force!<value>      !v    %57.0, e33.0   <lgl$->
  prom-           %57.2 = MkArg                    %57.1, checkSlotAssignment[0x5638c0706970]_p13 (!refl), 
  val?            %57.3 = StaticCall         !v    isTRUE[0x5638c5f31830](%57.2) e33.0   <lgl$->
  lgl$#-          %57.4 = IsType                   %57.3 isA lgl$-
  void                    Branch                   %57.4 -> BB59 (if true) | BB60 (if false)
BB58   <- [23]
  void                    Nop                !     
  val?^ | miss    %58.1 = %23.0
  dr              %58.2 = CallTarget@0x5638bddcad30[Call#13]
  goto BB21
BB59   <- [57]
  lgl$-           %59.0 = CastType           d     dn %57.3
  lgl$#-          %59.1 = CheckTrueFalse     e     %59.0
  void                    Branch                   %59.1 -> BB27 (if true) | BB26 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x5638c15fa320+646: [%57.3], env=e33.0
  void                    Deopt              !v    %60.0, Typecheck@0x5638bddcad30[Type#34], %57.3   !
BB27   <- [59]
  val?^ | miss    %27.0 = LdVar              eR    value, e33.0
  void                    Visible            v     
  val?            %27.2 = Force!<wrapped>    !     %27.0, e33.0   <val?+>
  val?            %27.3 = %27.2
  goto BB28
BB26   <- [59]
  (cls|spec|blt)  %26.0 = LdFun              !v    as, e33.0
  fs              %26.1 = FrameState         R     0x5638c15fa320+662: [%26.0], env=e33.0
  void                    Deopt              !v    %26.1, DeadCall@0x5638bddcad30[Call#14], %26.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cl, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slotClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    valueClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    valueClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slotClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, e0.0
  prom-           %0.2  = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p8, e0.0
  prom-           %0.3  = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p9, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, where=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slotClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .classEnv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, checkSlotAssignment[0x5638c0706970]_p10, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3

│ checkSlotAssignment[0x5638c0706970]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
