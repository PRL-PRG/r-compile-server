
┌──────────────────────────────────────────────────────────────────────────────┐
│ .quickCoerceSelect[0x556a1bf71180]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl3                             │
│ Properties:  ForceOrd: 3                                                     │
├────── Final PIR Version
.quickCoerceSelect[0x556a1bf71180]
BB0
  val?^           %0.0  = LdArg                    4
  val?^           %0.1  = LdArg                    3
  val?^           %0.2  = LdArg                    2
  val?^           %0.3  = LdArg                    1
  val?^           %0.4  = LdArg                    0
  env             e0.5  = MkEnv              l     from=%0.4, to=%0.3, fdef=%0.2, methods=%0.1, where=%0.0, parent=<env 0x556a1ba11378>, context 1
  val?            %0.6  = Force!<lazy>       !vrd  %0.1,    <env->
  lgl$-           %0.7  = Is                       %0.6, NULL
  lgl$#-          %0.8  = IsType                   %0.6 isA val?-
  void                    Branch                   %0.8 -> BB49 (if true) | BB50 (if false)
BB49   <- [0]
  lgl$#-          %49.0 = CheckTrueFalse     e     %0.7
  void                    Branch                   %49.0 -> BB47 (if true) | BB3 (if false)
BB50   <- [0]
  void                    Nop                !     
  val?            %50.1 = %0.6
  dr              %50.2 = Typecheck@0x556a1c8efc00[Type#0]
  goto BB48
BB47   <- [49]
  void                    Visible            v     
  nil-            %47.1 = nil
  goto BB25
BB3   <- [49]
  val?^ | miss    %3.0  = LdVar              eR    is.environment, <env 0x556a1ba11378>
  lgl$#-          %3.1  = Identical                <blt is.environment>, %3.0   <true>
  void                    Branch                   %3.1 -> BB51 (if true) | BB52 (if false)
BB48   <- [50, 52]
  val?^ | miss    %48.0 = Phi                      %50.1:BB50, %52.1:BB52
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %50.2:BB50, %52.2:BB52
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x556a1c134e30+9: [%0.6], env=e0.5
  void                    Deopt              !v    %48.4, %48.3, %48.1
BB25   <- [47, 24]
  val?            %25.0 = Phi                      %24.2:BB24, %47.1:BB47
  val?            %25.1 = %25.0
  void                    Return             l     %25.1
BB51   <- [3]
  lgl$#-          %51.0 = CallSafeBuiltin    wed   is.environment(%0.6)    <lgl$->
  void                    Branch                   %51.0 -> BB7 (if true) | BB6 (if false)
BB52   <- [3]
  void                    Nop                !     
  lgl$#-          %52.1 = %3.1
  dr              %52.2 = DeadBranchReached@0x556a1c8efc00[Test#0]
  goto BB48
BB7   <- [51]
  val?^ | miss    %7.0  = LdVar              eR    .findMethodInTable, <env 0x556a1ba11378>
  lgl$#-          %7.1  = Identical                %7.0, function(signature, table, fdef=NULL, expdSig=|...
  void                    Branch                   %7.1 -> BB53 (if true) | BB54 (if false)
BB6   <- [51]
  (cls|spec|blt)  %6.0  = LdFun              !v    @, <env 0x556a1ba11378>
  fs              %6.1  = FrameState         R     0x556a1c134e30+132: [%6.0], env=e0.5
  void                    Deopt              !v    %6.1, DeadCall@0x556a1c8efc00[Call#1], %6.0
BB53   <- [7]
  prom-           %53.0 = MkArg                    unboundValue, .quickCoerceSelect[0x556a1bf71180]_p0, e0.5
  prom-           %53.1 = MkArg                    unboundValue, .quickCoerceSelect[0x556a1bf71180]_p3 (!refl), e0.5
  ct              %53.2 = PushContext        lCL   %53.0, %53.1, .findMethodInTable(c(from, to), methods), function(signature, table, fdef=NULL, expdSig=|..., e0.5
  val?^           %53.3 = CastType                 up %53.1
  val?^           %53.4 = CastType                 up %53.0
  val?^ | miss    %53.5 = LdVar              eR    is, <env 0x556a1ba11378>
  lgl$#-          %53.6 = Identical                %53.5, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %53.6 -> BB55 (if true) | BB56 (if false)
BB54   <- [7]
  void                    Nop                !     
  val?^ | miss    %54.1 = %7.0
  dr              %54.2 = CallTarget@0x556a1c8efc00[Call#8]
  goto BB4
BB55   <- [53]
  env             e55.0 = MkEnv              l     signature=%53.4, table=%53.3, fdef(miss)=nil, expdSig(miss)=true, parent=<env 0x556a1ba11378>, context 1
  prom-           %55.1 = MkArg                    unboundValue, .quickCoerceSelect[0x556a1bf71180]_p4 (!refl), e55.0
  val?            %55.2 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%55.1, "genericFunction") e55.0   <lgl$->
  lgl$#-          %55.3 = IsType                   %55.2 isA lgl$-
  void                    Branch                   %55.3 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  void                    DropContext        C     
  val?^ | miss    %56.1 = %53.5
  dr              %56.2 = CallTarget@0x556a1d5cd9a0[Call#0]
  goto BB4
BB4   <- [54, 56]
  val?^ | miss    %4.0  = Phi                      %54.1:BB54, %56.1:BB56
  val?^ | miss    %4.1  = %4.0
  dr              %4.2  = Phi                      %54.2:BB54, %56.2:BB56
  dr              %4.3  = %4.2
  fs              %4.4  = FrameState         R     0x556a1c134e30+116: [%51.0], env=e0.5
  void                    Deopt              !v    %4.4, %4.3, %4.1
BB57   <- [55]
  lgl$-           %57.0 = CastType           d     dn %55.2
  lgl$-           %57.1 = AsLogical                %57.0
  lgl$#-          %57.2 = Identical                %57.1, false
  void                    Branch                   %57.2 -> BB46 (if true) | BB10 (if false)
BB58   <- [55]
  fs              %58.0 = FrameState         R     0x556a1c134e30+689: [], env=e0.5
  fs              %58.1 = FrameState         R     0x556a1f306bc0+37: [%55.2], env=e55.0, next=%58.0
  void                    Deopt              !v    %58.1, Typecheck@0x556a1d5cd9a0[Type#1], %55.2   !
BB46   <- [57]
  void                    Nop                !     
  lgl$-           %46.1 = %57.1
  goto BB11
BB10   <- [57]
  val?^ | miss    %10.0 = LdVar              eR    expdSig, e55.0
  val?            %10.1 = Force!             !v    %10.0, e55.0   <val?_>
  lgl$-           %10.2 = AsLogical          e     %10.1
  lgl$-           %10.3 = LAnd                     %57.1, %10.2
  lgl$-           %10.4 = %10.3
  goto BB11
BB11   <- [46, 10]
  lgl$-           %11.0 = Phi                      %10.4:BB10, %46.1:BB46
  lgl$-           %11.1 = %11.0
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB45 (if true) | BB14 (if false)
BB45   <- [11]
  fs              %45.0 = FrameState         R     0x556a1c134e30+689: [], env=e0.5
  (cls|spec|blt)  %45.1 = LdFun              !v    .matchSigLength, e55.0
  fs              %45.2 = FrameState         R     0x556a1f306bc0+81: [%45.1], env=e55.0, next=%45.0
  void                    Deopt              !v    %45.2, DeadCall@0x556a1d5cd9a0[Call#1], %45.1   !
BB14   <- [11]
  val?^ | miss    %14.0 = LdVar              eR    .sigLabel, e55.0
  lgl$#-          %14.1 = Identical                %14.0, function(sig) <(rir::DispatchTable*)0x556a1f73|...
  void                    Branch                   %14.1 -> BB59 (if true) | BB60 (if false)
BB59   <- [14]
  prom-           %59.0 = MkArg                    unboundValue, .quickCoerceSelect[0x556a1bf71180]_p5, e55.0
  val?^           %59.1 = CastType                 up %59.0
  val?^ | miss    %59.2 = LdVar              eR    paste, <env 0x556a1ba11378>
  lgl$#-          %59.3 = Identical                %59.2, function(..., sep=" ", collapse=NULL, recycle0|...
  void                    Branch                   %59.3 -> BB61 (if true) | BB62 (if false)
BB60   <- [14]
  void                    Nop                !     
  val?^ | miss    %60.1 = %14.0
  dr              %60.2 = CallTarget@0x556a1d5cd9a0[Call#3]
  goto BB12
BB61   <- [59]
  env             e61.0 = MkEnv              l     sig=%59.1, parent=<env 0x556a1ba11378>, context 0
  prom-           %61.1 = MkArg                    unboundValue, .quickCoerceSelect[0x556a1bf71180]_p6, e61.0
  dots-           %61.2 = DotsList           l     %61.1
  val?^ | miss    %61.3 = CastType                 up %61.1
  env             e61.4 = MkEnv              l     ...=%61.2, sep(miss)=" ", collapse="#", recycle0(miss)=false, parent=R_BaseNamespace, context -1
  val?            %61.5 = Force!             !vL   %61.3, e61.4
  val+            %61.6 = CallSafeBuiltin    wed   list(%61.5)    <vec->
  val+            %61.7 = CallSafeBuiltin    wed   paste(%61.6, " ", "#", false)    <str$->
  void                    StVar              lW    label, %61.7, e55.0
  val?^ | miss    %61.9 = LdVar              eR    table, e55.0
  val?            %61.10 = Force!<lazy>       !v    %61.9, e55.0   <env->
  lgl$#-          %61.11 = IsType                   %61.10 isA val+   <true>
  lgl$#-          %61.12 = IsType                   %61.10 isA val?-
  void                    Branch                   %61.11 -> BB63 (if true) | BB64 (if false)
BB62   <- [59]
  void                    Nop                !     
  val?^ | miss    %62.1 = %59.2
  dr              %62.2 = CallTarget@0x556a1e4e2af8[Call#0]
  goto BB12
BB12   <- [60, 62]
  val?^ | miss    %12.0 = Phi                      %60.1:BB60, %62.1:BB62
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %60.2:BB60, %62.2:BB62
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x556a1c134e30+689: [], env=e0.5
  fs              %12.5 = FrameState         R     0x556a1f306bc0+65: [%11.1], env=e55.0, next=%12.4
  void                    Deopt              !v    %12.5, %12.3, %12.1   !
BB63   <- [61]
  val?^ | miss    %63.0 = LdVar              eR    label, e55.0
  lgl$#-          %63.1 = IsType                   %63.0 isA val?~- | miss
  void                    Branch                   %63.1 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  void                    Nop                !     
  lgl$#-          %64.1 = %61.11
  dr              %64.2 = DeadBranchReached@0x556a1d5cd9a0[Test#0]
  goto BB15
BB65   <- [63]
  val?~- | miss   %65.0 = CastType           d     dn %63.0
  val?-           %65.1 = Force!<value>            %65.0,    <str$->
  void                    Branch                   %61.12 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  void                    Nop                !     
  val?^ | miss    %66.1 = %63.0
  dr              %66.2 = Typecheck@0x556a1d5cd9a0[Type#12]
  goto BB15
BB15   <- [64, 66, 68]
  val?^ | miss    %15.0 = Phi                      %64.1:BB64, %66.1:BB66, %68.1:BB68
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %64.2:BB64, %66.2:BB66, %68.2:BB68
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x556a1c134e30+689: [], env=e0.5
  fs              %15.5 = FrameState         R     0x556a1f306bc0+192: [%61.10], env=e55.0, next=%15.4
  void                    Deopt              !v    %15.5, %15.3, %15.1   !
BB67   <- [65]
  val?-           %67.0 = CastType           d     dn %61.10   <env->
  val?            %67.1 = Extract2_1D        wed   %67.0, %65.1, elided   <cls>
  lgl$-           %67.2 = Is                       %67.1, NULL
  void                    StVar              lW    value, %67.1, e55.0
  lgl$-           %67.4 = Not                d     %67.2, elided
  lgl$#-          %67.5 = CheckTrueFalse     e     %67.4
  void                    Branch                   %67.5 -> BB27 (if true) | BB19 (if false)
BB68   <- [65]
  void                    Nop                !     
  val?            %68.1 = %61.10
  dr              %68.2 = Typecheck@0x556a1d5cd9a0[Type#10]
  goto BB15
BB27   <- [67]
  val?^ | miss    %27.0 = LdVar              eR    is.environment, e55.0
  lgl$#-          %27.1 = Identical                <blt is.environment>, %27.0   <true>
  void                    Branch                   %27.1 -> BB69 (if true) | BB70 (if false)
BB19   <- [67]
  void                    Nop                !     
  nil-            %19.1 = nil
  goto BB20
BB69   <- [27]
  val             %69.0 = ChkMissing         e     %67.1
  lgl$#-          %69.1 = CallSafeBuiltin    wed   is.environment(%67.1) 
  void                    Branch                   %69.1 -> BB30 (if true) | BB28 (if false)
BB70   <- [27]
  fs              %70.0 = FrameState         R     0x556a1c134e30+689: [], env=e0.5
  fs              %70.1 = FrameState         R     0x556a1f306bc0+260: [%67.1], env=e55.0, next=%70.0
  void                    Deopt              !v    %70.1, DeadBranchReached@0x556a1d5cd9a0[Test#1], %27.1   !
BB20   <- [19, 29]
  val?            %20.0 = Phi                      %19.1:BB19, %29.2:BB29
  val?            %20.1 = %20.0
  val?            %20.2 = PopContext         C     %20.1, %53.2   <cls>
  void                    StVar              lW    method, %20.2, e0.5
  val?^ | miss    %20.4 = LdVar              eR    is.environment, e0.5
  lgl$#-          %20.5 = Identical                <blt is.environment>, %20.4   <true>
  void                    Branch                   %20.5 -> BB71 (if true) | BB72 (if false)
BB30   <- [69]
  val?^ | miss    %30.0 = LdVar              eR    names, e55.0
  lgl$#-          %30.1 = Identical                <blt names>, %30.0   <@?>
  void                    Branch                   %30.1 -> BB32 (if true) | BB31 (if false)
BB28   <- [69]
  void                    Nop                !     
  goto BB29
BB71   <- [20]
  val             %71.0 = ChkMissing         e     %20.2
  lgl$#-          %71.1 = CallSafeBuiltin    wed   is.environment(%20.2) 
  void                    Branch                   %71.1 -> BB26 (if true) | BB23 (if false)
BB72   <- [20]
  fs              %72.0 = FrameState         R     0x556a1c134e30+703: [], env=e0.5
  void                    Deopt              !v    %72.0, DeadBranchReached@0x556a1c8efc00[Test#5], %20.5   !
BB32   <- [30]
  val?            %32.0 = CallBuiltin        !v    names(%67.1) e55.0   <val?_>
  void                    StVar              lW    pkgs, %32.0, e55.0
  val?^ | miss    %32.2 = LdVar              eR    length, e55.0
  lgl$#-          %32.3 = Identical                <blt length>, %32.2   <@?>
  void                    Branch                   %32.3 -> BB36 (if true) | BB35 (if false)
BB31   <- [30]
  fs              %31.0 = FrameState         R     0x556a1c134e30+689: [], env=e0.5
  (cls|spec|blt)  %31.1 = LdFun              !v    names, e55.0
  fs              %31.2 = FrameState         R     0x556a1f306bc0+418: [%31.1], env=e55.0, next=%31.0
  void                    Deopt              !v    %31.2, DeadCall@0x556a1d5cd9a0[Call#5], %31.1   !
BB29   <- [28, 43, 39]
  val?^ | miss    %29.0 = LdVar              eR    value, e55.0
  val?            %29.1 = Force!<value>      !v    %29.0, e55.0   <cls>
  val?            %29.2 = %29.1
  goto BB20
BB26   <- [71]
  void                    Visible            v     
  nil-            %26.1 = nil
  goto BB24
BB23   <- [71]
  void                    Visible            v     
  val?            %23.1 = %20.2
  goto BB24
BB36   <- [32]
  val             %36.0 = ChkMissing         e     %32.0
  lgl$#-          %36.1 = IsType                   %32.0 isA val?+
  void                    Branch                   %36.1 -> BB73 (if true) | BB74 (if false)
BB35   <- [32]
  fs              %35.0 = FrameState         R     0x556a1c134e30+689: [], env=e0.5
  (cls|spec|blt)  %35.1 = LdFun              !v    length, e55.0
  fs              %35.2 = FrameState         R     0x556a1f306bc0+523: [%35.1], env=e55.0, next=%35.0
  void                    Deopt              !v    %35.2, DeadCall@0x556a1d5cd9a0[Call#6], %35.1   !
BB24   <- [26, 23]
  val?            %24.0 = Phi                      %23.1:BB23, %26.1:BB26
  val?            %24.1 = %24.0
  val?            %24.2 = %24.1
  goto BB25
BB73   <- [36]
  val?+           %73.0 = CastType           d     dn %32.0   <val?_>
  real$-          %73.1 = CallSafeBuiltin    wed   length(%73.0)    <val?_>
  lgl$-           %73.2 = Eq                 d     %73.1, 1, elided   <val?_>
  lgl$#-          %73.3 = CheckTrueFalse     e     %73.2
  void                    Branch                   %73.3 -> BB41 (if true) | BB37 (if false)
BB74   <- [36]
  fs              %74.0 = FrameState         R     0x556a1c134e30+689: [], env=e0.5
  fs              %74.1 = FrameState         R     0x556a1f306bc0+495: [], env=e55.0, next=%74.0
  void                    Deopt              !v    %74.1, Typecheck@0x556a1d5cd9a0[Type#19], %32.0   !
BB41   <- [73]
  val?^ | miss    %41.0 = LdVar              eR    value, e55.0
  val?            %41.1 = Force!             !v    %41.0, e55.0   <val?_>
  lgl$#-          %41.2 = IsType                   %41.1 isA val+   <@?>
  void                    Branch                   %41.2 -> BB44 (if true) | BB42 (if false)
BB37   <- [73]
  lgl$-           %37.0 = Eq                 d     %73.1, 0, elided   <val?_>
  lgl$#-          %37.1 = CheckTrueFalse     e     %37.0
  void                    Branch                   %37.1 -> BB40 (if true) | BB38 (if false)
BB44   <- [41]
  val?^ | miss    %44.0 = LdVar              eR    pkgs, e55.0
  val?            %44.1 = Force!             !v    %44.0, e55.0   <val?_>
  val?            %44.2 = %44.1
  goto BB43
BB42   <- [41]
  prom-           %42.0 = MkArg                    unboundValue, .quickCoerceSelect[0x556a1bf71180]_p7, e55.0
  prom-           %42.1 = %42.0
  goto BB43
BB40   <- [37]
  void                    StVar              lW    value, nil, e55.0
  goto BB39
BB38   <- [37]
  void                    Nop                !     
  goto BB39
BB43   <- [42, 44]
  val?            %43.0 = Phi                      %44.2:BB44, %42.1:BB42
  val?            %43.1 = %43.0
  val?            %43.2 = Extract2_1D        !v    %41.1, %43.1, e55.0   <val?_>
  void                    StVar              lW    value, %43.2, e55.0
  goto BB29
BB39   <- [40, 38]
  void                    Nop                !     
  goto BB29
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x556a1b40a940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .quickCoerceSelect[0x556a1bf71180]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .quickCoerceSelect[0x556a1bf71180]_p2, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    to, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkgs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ .quickCoerceSelect[0x556a1bf71180]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
