
┌──────────────────────────────────────────────────────────────────────────────┐
│ .resetInheritedMethods[0x556a1f371d10]                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
.resetInheritedMethods[0x556a1f371d10]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    character, <env 0x556a1ba11378>
  lgl$#-          %0.3  = Identical                %0.2, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %0.3 -> BB46 (if true) | BB47 (if false)
BB46   <- [0]
  str-            %46.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  val?^ | miss    %46.1 = LdVar              eR    names, <env 0x556a1ba11378>
  lgl$#-          %46.2 = Identical                <blt names>, %46.1   <true>
  void                    Branch                   %46.2 -> BB48 (if true) | BB49 (if false)
BB47   <- [0]
  env             e47.0 = (MkEnv)            l     fenv=%0.1, mtable=%0.0, parent=<env 0x556a1ba11378>, context 1
  fs              %47.1 = FrameState         R     0x556a1b731010+0: [], env=e47.0
  void                    Deopt              !v    %47.1, CallTarget@0x556a1f3663e8[Call#0], %0.2
BB48   <- [46]
  env             e48.0 = MkEnv              l     fenv=%0.1, mtable=%0.0, allObjects=%46.0, parent=<env 0x556a1ba11378>, context 1
  val?            %48.1 = Force!<lazy>       !v    %0.0, e48.0   <env->
  lgl$#-          %48.2 = IsType                   %48.1 isA val?-
  void                    Branch                   %48.2 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  env             e49.0 = (MkEnv)            l     fenv=%0.1, mtable=%0.0, parent=<env 0x556a1ba11378>, context 1
  fs              %49.1 = FrameState         R     0x556a1b731010+27: [], env=e49.0
  env             e49.2 = (MkEnv)            l     length=0L, parent=R_BaseNamespace, context 0
  fs              %49.3 = FrameState         R     0x556a1d2e5fe0+33: [%46.0], env=e49.2, next=%49.1
  void                    Deopt              !v    %49.3, DeadBranchReached@0x556a1f3663e8[Test#0], %46.2
BB50   <- [48]
  val?-           %50.0 = CastType           d     dn %48.1   <env->
  val+            %50.1 = CallSafeBuiltin    wed   names(%50.0)    <str->
  void                    StVar              lW    direct, %50.1, e48.0
  (cls|spec|blt)  %50.3 = LdFun              !v    $, <0x556a1b409c10>, e48.0
  prom-           %50.4 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p0, e48.0
  prom-           %50.5 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p1, e48.0
  val?            %50.6 = Call               !v    %50.3(%50.4, %50.5) e48.0   <env->
  lgl$-           %50.7 = Is                       %50.6, NULL
  void                    StVar              lW    allTable, %50.6, e48.0
  lgl$-           %50.9 = Not                d     %50.7, elided
  lgl$#-          %50.10 = CheckTrueFalse     e     %50.9
  void                    Branch                   %50.10 -> BB10 (if true) | BB9 (if false)
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x556a1b731010+110: [<blt names>, %48.1], env=e48.0
  void                    Deopt              !v    %51.0, Typecheck@0x556a1f3663e8[Type#2], %48.1   !
BB10   <- [50]
  val?^ | miss    %10.0 = LdVar              eR    names, e48.0
  lgl$#-          %10.1 = Identical                <blt names>, %10.0   <true>
  void                    Branch                   %10.1 -> BB52 (if true) | BB53 (if false)
BB9   <- [50]
  (cls|spec|blt)  %9.0  = LdFun              !v    new.env, e48.0
  fs              %9.1  = FrameState         R     0x556a1b731010+216: [%9.0], env=e48.0
  void                    Deopt              !v    %9.1, DeadCall@0x556a1f3663e8[Call#3], %9.0   !
BB52   <- [10]
  val             %52.0 = ChkMissing         e     %50.6
  lgl$#-          %52.1 = IsType                   %50.6 isA val?-
  void                    Branch                   %52.1 -> BB54 (if true) | BB55 (if false)
BB53   <- [10]
  void                    Nop                !     
  lgl$#-          %53.1 = %10.1
  dr              %53.2 = DeadBranchReached@0x556a1f3663e8[Test#1]
  goto BB7
BB54   <- [52]
  val?-           %54.0 = CastType           d     dn %50.6   <env->
  val+            %54.1 = CallSafeBuiltin    wed   names(%54.0)    <str->
  void                    StVar              lW    allObjects, %54.1, e48.0
  val?^ | miss    %54.3 = LdVar              eR    remove, e48.0
  lgl$#-          %54.4 = Identical                %54.3, function(..., list=character(), pos=-(1), envi|...
  void                    Branch                   %54.4 -> BB56 (if true) | BB57 (if false)
BB55   <- [52]
  void                    Nop                !     
  val?            %55.1 = %50.6
  dr              %55.2 = Typecheck@0x556a1f3663e8[Type#6]
  goto BB7
BB7   <- [53, 55]
  val?^ | miss    %7.0  = Phi                      %53.1:BB53, %55.1:BB55
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %53.2:BB53, %55.2:BB55
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x556a1b731010+199: [%50.6], env=e48.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB56   <- [54]
  prom-           %56.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p2, e48.0
  prom-           %56.1 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p5 (!refl), e48.0
  val?            %56.2 = StaticCall         !v    remove[0x556a1f3730c0](missingArg, %56.0, missingArg, %56.1) { 1n 3n } e48.0
  val?^ | miss    %56.3 = LdVar              eR    anyNA, e48.0
  lgl$#-          %56.4 = Identical                <blt anyNA>, %56.3   <true>
  void                    Branch                   %56.4 -> BB58 (if true) | BB59 (if false)
BB57   <- [54]
  fs              %57.0 = FrameState         R     0x556a1b731010+427: [], env=e48.0
  void                    Deopt              !v    %57.0, CallTarget@0x556a1f3663e8[Call#6], %54.3   !
BB58   <- [56]
  val?^ | miss    %58.0 = LdVar              eR    match, e48.0
  lgl$#-          %58.1 = Identical                %58.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %58.1 -> BB60 (if true) | BB61 (if false)
BB59   <- [56]
  void                    Nop                !     
  lgl$#-          %59.1 = %56.4
  dr              %59.2 = DeadBranchReached@0x556a1f3663e8[Test#2]
  goto BB13
BB60   <- [58]
  val?^ | miss    %60.0 = LdVar              eR    direct, e48.0
  lgl$#-          %60.1 = IsType                   %60.0 isA val?~- | miss
  void                    Branch                   %60.1 -> BB62 (if true) | BB63 (if false)
BB61   <- [58]
  void                    Nop                !     
  val?^ | miss    %61.1 = %58.0
  dr              %61.2 = CallTarget@0x556a1f3663e8[Call#10]
  goto BB13
BB13   <- [59, 61, 63]
  val?^ | miss    %13.0 = Phi                      %59.1:BB59, %61.1:BB61, %63.1:BB63
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %59.2:BB59, %61.2:BB61, %63.2:BB63
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x556a1b731010+481: [%56.2], env=e48.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB62   <- [60]
  val?~- | miss   %62.0 = CastType           d     dn %60.0
  val?-           %62.1 = Force!<value>            %62.0,    <str->
  val?^ | miss    %62.2 = LdVar              eR    allObjects, e48.0
  val?            %62.3 = Force!<value>      !v    %62.2, e48.0   <str->
  lgl$#-          %62.4 = IsType                   %62.3 isA val?-
  void                    Branch                   %62.4 -> BB64 (if true) | BB65 (if false)
BB63   <- [60]
  void                    Nop                !     
  val?^ | miss    %63.1 = %60.0
  dr              %63.2 = Typecheck@0x556a1f3663e8[Type#21]
  goto BB13
BB64   <- [62]
  val?-           %64.0 = CastType           d     dn %62.3   <str->
  val+            %64.1 = CallSafeBuiltin    wed   match(%62.1, %64.0, NA, nil)    <int->
  lgl$#-          %64.2 = IsType                   %64.1 isA int-
  void                    Branch                   %64.2 -> BB66 (if true) | BB67 (if false)
BB65   <- [62]
  fs              %65.0 = FrameState         R     0x556a1b731010+579: [<blt anyNA>], env=e48.0
  prom-           %65.1 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p7, e48.0
  val?^           %65.2 = CastType                 up %65.1
  prom-           %65.3 = MkArg                    %62.1, .resetInheritedMethods[0x556a1f371d10]_p6 (!refl), e48.0
  val?~           %65.4 = CastType                 up %65.3
  env             e65.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%65.2, x=%65.4, parent=R_BaseNamespace, context 0
  fs              %65.6 = FrameState         R     0x556a1bc1ed40+23: [%62.1], env=e65.5, next=%65.0
  fs              %65.7 = FrameState         R     0x556a1edd6580+5(pr): [%62.3], env=e48.0, next=%65.6
  void                    Deopt              !v    %65.7, Typecheck@0x556a1bc71cb0[Type#1], %62.3   !
BB66   <- [64]
  int-            %66.0 = CastType           d     dn %64.1
  val+            %66.1 = CallSafeBuiltin    wed   anyNA(%66.0)    <lgl$->
  lgl$#-          %66.2 = IsType                   %66.1 isA lgl$-
  void                    Branch                   %66.2 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  fs              %67.0 = FrameState         R     0x556a1b731010+579: [<blt anyNA>], env=e48.0
  prom-           %67.1 = MkArg                    %64.0, .resetInheritedMethods[0x556a1f371d10]_p7 (!refl), e48.0
  val?~           %67.2 = CastType                 up %67.1
  prom-           %67.3 = MkArg                    %62.1, .resetInheritedMethods[0x556a1f371d10]_p6 (!refl), e48.0
  val?~           %67.4 = CastType                 up %67.3
  env             e67.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%67.2, x=%67.4, parent=R_BaseNamespace, context 0
  fs              %67.6 = FrameState         R     0x556a1bc1ed40+69: [%64.1], env=e67.5, next=%67.0
  void                    Deopt              !v    %67.6, Typecheck@0x556a1f3663e8[Type#23], %64.1   !
BB68   <- [66]
  lgl$-           %68.0 = CastType           d     dn %66.1
  lgl$#-          %68.1 = CheckTrueFalse     e     %68.0
  void                    Branch                   %68.1 -> BB44 (if true) | BB21 (if false)
BB69   <- [66]
  void                    Nop                !     
  val+            %69.1 = %66.1
  dr              %69.2 = Typecheck@0x556a1f3663e8[Type#24]
  goto BB19
BB44   <- [68]
  val?^ | miss    %44.0 = LdVar              eR    list2env, e48.0
  lgl$#-          %44.1 = Identical                %44.0, function(x, envir=NULL, parent=parent.frame(),|...
  void                    Branch                   %44.1 -> BB80 (if true) | BB81 (if false)
BB21   <- [68]
  void                    Nop                !     
  goto BB22
BB19   <- [69, 81]
  val?^ | miss    %19.0 = Phi                      %69.1:BB69, %81.1:BB81
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %69.2:BB69, %81.2:BB81
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x556a1b731010+601: [%66.1], env=e48.0
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB80   <- [44]
  prom-           %80.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p10, e48.0
  prom-           %80.1 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p12, e48.0
  val?            %80.2 = StaticCall         !v    list2env[0x556a1e045df0](%80.0, %80.1) e48.0
  goto BB22
BB81   <- [44]
  void                    Nop                !     
  val?^ | miss    %81.1 = %44.0
  dr              %81.2 = CallTarget@0x556a1f3663e8[Call#11]
  goto BB19
BB22   <- [21, 80]
  val?^ | miss    %22.0 = LdVar              eR    direct, e48.0
  lgl$#-          %22.1 = IsType                   %22.0 isA val?~- | miss
  void                    Branch                   %22.1 -> BB70 (if true) | BB71 (if false)
BB70   <- [22]
  val?~- | miss   %70.0 = CastType           d     dn %22.0
  val?-           %70.1 = Force!<value>            %70.0,    <str->
  int$-           %70.2 = Length                   %70.1
  int$-           %70.3 = Inc                      0L
  lgl$-           %70.4 = Lt                 d     %70.2, %70.3, elided   <false>
  lgl$#-          %70.5 = Identical                %70.4, true
  void                    Branch                   %70.5 -> BB73 (if true) | BB72 (if false)
BB71   <- [22]
  void                    Nop                !     
  val?^ | miss    %71.1 = %22.0
  dr              %71.2 = Typecheck@0x556a1f3663e8[Type#28]
  goto BB23
BB73   <- [70]
  void                    Nop                !     
  lgl$#-          %73.1 = %70.5
  dr              %73.2 = DeadBranchReached@0x556a1f3663e8[Test#3]
  goto BB23
BB72   <- [70]
  val?            %72.0 = Extract2_1D        wed   %70.1, %70.3, elided
  void                    StVar              lW    d, %72.0, e48.0
  val?^ | miss    %72.2 = LdVar              eR    allTable, e48.0
  lgl$#-          %72.3 = IsType                   %72.2 isA val?~- | miss
  void                    Branch                   %72.3 -> BB74 (if true) | BB75 (if false)
BB23   <- [71, 73]
  val?^ | miss    %23.0 = Phi                      %71.1:BB71, %73.1:BB73
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %71.2:BB71, %73.2:BB73
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x556a1b731010+655: [], env=e48.0
  void                    Deopt              !v    %23.4, %23.3, %23.1   !
BB74   <- [72]
  val?~- | miss   %74.0 = CastType           d     dn %72.2
  val?-           %74.1 = Force!<value>            %74.0,    <env->
  lgl$#-          %74.2 = IsType                   %74.1 isA val+   <true>
  void                    Branch                   %74.2 -> BB76 (if true) | BB77 (if false)
BB75   <- [72]
  void                    Nop                !     
  val?^ | miss    %75.1 = %72.2
  dr              %75.2 = Typecheck@0x556a1f3663e8[Type#29]
  goto BB25
BB76   <- [74]
  val             %76.0 = ChkMissing         e     %72.0
  lgl$#-          %76.1 = IsType                   %76.0 isA val?~- | miss
  void                    Branch                   %76.1 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  void                    Nop                !     
  lgl$#-          %77.1 = %74.2
  dr              %77.2 = DeadBranchReached@0x556a1f3663e8[Test#4]
  goto BB25
BB25   <- [75, 77, 79]
  val?^ | miss    %25.0 = Phi                      %75.1:BB75, %77.1:BB77, %79.1:BB79
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %75.2:BB75, %77.2:BB77, %79.2:BB79
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x556a1b731010+709: [%70.1, %70.2, %70.3], env=e48.0
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB78   <- [76]
  val-            %78.0 = CastType           d     dn %76.0   <str$->
  val?            %78.1 = Extract2_1D        wed   %74.1, %78.0, elided   <cls>
  void                    StVar              lW    m, %78.1, e48.0
  val?^ | miss    %78.3 = LdVar              eR    is, e48.0
  lgl$#-          %78.4 = Identical                %78.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %78.4 -> BB82 (if true) | BB83 (if false)
BB79   <- [76]
  void                    Nop                !     
  val             %79.1 = %76.0
  dr              %79.2 = Typecheck@0x556a1f3663e8[Type#31]
  goto BB25
BB82   <- [78]
  prom-           %82.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p8 (!refl), e48.0
  val?            %82.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%82.0, "MethodWithNext") e48.0   <lgl$->
  lgl$#-          %82.2 = IsType                   %82.1 isA lgl$-
  void                    Branch                   %82.2 -> BB84 (if true) | BB85 (if false)
BB83   <- [78]
  fs              %83.0 = FrameState         R     0x556a1b731010+784: [%70.1, %70.2, %70.3], env=e48.0
  void                    Deopt              !v    %83.0, CallTarget@0x556a1f3663e8[Call#13], %78.3   !
BB84   <- [82]
  lgl$-           %84.0 = CastType           d     dn %82.1
  lgl$#-          %84.1 = CheckTrueFalse     e     %84.0
  void                    Branch                   %84.1 -> BB43 (if true) | BB31 (if false)
BB85   <- [82]
  fs              %85.0 = FrameState         R     0x556a1b731010+821: [%70.1, %70.2, %70.3, %82.1], env=e48.0
  void                    Deopt              !v    %85.0, Typecheck@0x556a1f3663e8[Type#34], %82.1   !
BB43   <- [84]
  (cls|spec|blt)  %43.0 = LdFun              !v    as, e48.0
  fs              %43.1 = FrameState         R     0x556a1b731010+842: [%70.1, %70.2, %70.3, %43.0], env=e48.0
  void                    Deopt              !v    %43.1, DeadCall@0x556a1f3663e8[Call#14], %43.0   !
BB31   <- [84]
  void                    Nop                !     
  int$-           %31.1 = %70.3
  goto BB32
BB32   <- [31, 40]
  int$-           %32.0 = Phi                      %31.1:BB31, %40.1:BB40
  int$-           %32.1 = %32.0
  int$-           %32.2 = Inc                      %32.1
  lgl$-           %32.3 = Lt                 d     %70.2, %32.2, elided
  lgl$#-          %32.4 = Identical                %32.3, true
  void                    Branch                   %32.4 -> BB42 (if true) | BB33 (if false)
BB42   <- [32]
  void                    Visible            v     
  void                    Return             l     nil
BB33   <- [32]
  val?            %33.0 = Extract2_1D        wed   %70.1, %32.2, elided
  void                    StVar              lW    d, %33.0, e48.0
  val?^ | miss    %33.2 = LdVar              eR    allTable, e48.0
  lgl$#-          %33.3 = IsType                   %33.2 isA val?~- | miss
  void                    Branch                   %33.3 -> BB86 (if true) | BB87 (if false)
BB86   <- [33]
  val?~- | miss   %86.0 = CastType           d     dn %33.2
  val?-           %86.1 = Force!<value>            %86.0,    <env->
  lgl$#-          %86.2 = IsType                   %86.1 isA val+   <true>
  void                    Branch                   %86.2 -> BB88 (if true) | BB89 (if false)
BB87   <- [33]
  void                    Nop                !     
  val?^ | miss    %87.1 = %33.2
  dr              %87.2 = Typecheck@0x556a1f3663e8[Type#39]
  goto BB34
BB88   <- [86]
  val             %88.0 = ChkMissing         e     %33.0
  lgl$#-          %88.1 = IsType                   %88.0 isA val?~- | miss
  void                    Branch                   %88.1 -> BB90 (if true) | BB91 (if false)
BB89   <- [86]
  void                    Nop                !     
  lgl$#-          %89.1 = %86.2
  dr              %89.2 = DeadBranchReached@0x556a1f3663e8[Test#5]
  goto BB34
BB34   <- [87, 89, 91]
  val?^ | miss    %34.0 = Phi                      %87.1:BB87, %89.1:BB89, %91.1:BB91
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %87.2:BB87, %89.2:BB89, %91.2:BB91
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x556a1b731010+946: [%70.1, %70.2, %32.2], env=e48.0
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB90   <- [88]
  val-            %90.0 = CastType           d     dn %88.0   <str$->
  val?            %90.1 = Extract2_1D        wed   %86.1, %90.0, elided   <val?>
  void                    StVar              lW    m, %90.1, e48.0
  val?^ | miss    %90.3 = LdVar              eR    is, e48.0
  lgl$#-          %90.4 = Identical                %90.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %90.4 -> BB92 (if true) | BB93 (if false)
BB91   <- [88]
  void                    Nop                !     
  val             %91.1 = %88.0
  dr              %91.2 = Typecheck@0x556a1f3663e8[Type#41]
  goto BB34
BB92   <- [90]
  prom-           %92.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p9 (!refl), e48.0
  val?            %92.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%92.0, "MethodWithNext") e48.0   <lgl$->
  lgl$#-          %92.2 = IsType                   %92.1 isA lgl$-
  void                    Branch                   %92.2 -> BB94 (if true) | BB95 (if false)
BB93   <- [90]
  fs              %93.0 = FrameState         R     0x556a1b731010+1021: [%70.1, %70.2, %32.2], env=e48.0
  void                    Deopt              !v    %93.0, CallTarget@0x556a1f3663e8[Call#15], %90.3   !
BB94   <- [92]
  lgl$-           %94.0 = CastType           d     dn %92.1
  lgl$#-          %94.1 = CheckTrueFalse     e     %94.0
  void                    Branch                   %94.1 -> BB41 (if true) | BB40 (if false)
BB95   <- [92]
  fs              %95.0 = FrameState         R     0x556a1b731010+1058: [%70.1, %70.2, %32.2, %92.1], env=e48.0
  void                    Deopt              !v    %95.0, Typecheck@0x556a1f3663e8[Type#44], %92.1   !
BB41   <- [94]
  (cls|spec|blt)  %41.0 = LdFun              !v    as, e48.0
  fs              %41.1 = FrameState         R     0x556a1b731010+1079: [%70.1, %70.2, %32.2, %41.0], env=e48.0
  void                    Deopt              !v    %41.1, DeadCall@0x556a1f3663e8[Call#16], %41.0   !
BB40   <- [94]
  void                    Nop                !     
  int$-           %40.1 = %32.2
  goto BB32
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .AllMTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     setdiff, <0x556a1b922350>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p3, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p4, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allObjects, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    direct, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    direct, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allObjects, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    m, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    m, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.list, <0x556a1b534810>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .resetInheritedMethods[0x556a1f371d10]_p11, e0.0
  val?            %0.3  = NamedCall          !     %0.1(%0.2, all.names=true) e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mtable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .resetInheritedMethods[0x556a1f371d10]                                       │
└──────────────────────────────────────────────────────────────────────────────┘
