
┌──────────────────────────────────────────────────────────────────────────────┐
│ .resetInheritedMethods[0x556a22300720]                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
.resetInheritedMethods[0x556a22300720]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    character, <env 0x556a1ba11378>
  lgl$#-          %0.3  = Identical                %0.2, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %0.3 -> BB49 (if true) | BB50 (if false)
BB49   <- [0]
  str-            %49.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  val?^ | miss    %49.1 = LdVar              eR    names, <env 0x556a1ba11378>
  lgl$#-          %49.2 = Identical                <blt names>, %49.1   <true>
  void                    Branch                   %49.2 -> BB51 (if true) | BB52 (if false)
BB50   <- [0]
  env             e50.0 = (MkEnv)            l     fenv=%0.1, mtable=%0.0, parent=<env 0x556a1ba11378>, context 1
  fs              %50.1 = FrameState         R     0x556a1b731010+0: [], env=e50.0
  void                    Deopt              !v    %50.1, CallTarget@0x556a1f3663e8[Call#0], %0.2
BB51   <- [49]
  env             e51.0 = MkEnv              l     fenv=%0.1, mtable=%0.0, allObjects=%49.0, parent=<env 0x556a1ba11378>, context 1
  val+            %51.1 = Force!<lazy>       !vr   %0.0,    <env->
  val+            %51.2 = CallSafeBuiltin    wed   names(%51.1)    <str->
  void                    StVar              lW    direct, %51.2, e51.0
  (cls|spec|blt)  %51.4 = LdFun              !v    $, <0x556a1b409c10>, <env 0x556a1ba11378>
  prom-           %51.5 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p0 (!refl), e51.0
  prom-           %51.6 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p1, e51.0
  val?            %51.7 = Call               !v    %51.4(%51.5, %51.6) e51.0   <env->
  lgl$-           %51.8 = Is                       %51.7, NULL
  void                    StVar              lW    allTable, %51.7, e51.0
  lgl$-           %51.10 = Not                d     %51.8, elided
  lgl$#-          %51.11 = CheckTrueFalse     e     %51.10
  void                    Branch                   %51.11 -> BB45 (if true) | BB7 (if false)
BB52   <- [49]
  env             e52.0 = (MkEnv)            l     fenv=%0.1, mtable=%0.0, parent=<env 0x556a1ba11378>, context 1
  fs              %52.1 = FrameState         R     0x556a1b731010+27: [], env=e52.0
  env             e52.2 = (MkEnv)            l     length=0L, parent=R_BaseNamespace, context 0
  fs              %52.3 = FrameState         R     0x556a1d2e5fe0+33: [%49.0], env=e52.2, next=%52.1
  void                    Deopt              !v    %52.3, DeadBranchReached@0x556a1f3663e8[Test#0], %49.2
BB45   <- [51]
  val?^ | miss    %45.0 = LdVar              eR    names, e51.0
  lgl$#-          %45.1 = Identical                <blt names>, %45.0   <true>
  void                    Branch                   %45.1 -> BB53 (if true) | BB54 (if false)
BB7   <- [51]
  val?^ | miss    %7.0  = LdVar              eR    new.env, e51.0
  lgl$#-          %7.1  = Identical                %7.0, function(hash=TRUE, parent=parent.frame(), siz|...
  void                    Branch                   %7.1 -> BB57 (if true) | BB58 (if false)
BB53   <- [45]
  val             %53.0 = ChkMissing         e     %51.7
  lgl$#-          %53.1 = IsType                   %51.7 isA val?-
  void                    Branch                   %53.1 -> BB55 (if true) | BB56 (if false)
BB54   <- [45]
  void                    Nop                !     
  lgl$#-          %54.1 = %45.1
  dr              %54.2 = DeadBranchReached@0x556a1f3663e8[Test#1]
  goto BB5
BB57   <- [7]
  val?^ | miss    %57.0 = LdVar              eR    fenv, e51.0
  val?            %57.1 = Force!<wrapped>    !v    %57.0, e51.0   <env->
  lgl$#-          %57.2 = IsType                   %57.1 isA val?+
  void                    Branch                   %57.2 -> BB61 (if true) | BB62 (if false)
BB58   <- [7]
  void                    Nop                !     
  val?^ | miss    %58.1 = %7.0
  dr              %58.2 = CallTarget@0x556a1f3663e8[Call#3]
  goto BB5
BB55   <- [53]
  val?-           %55.0 = CastType           d     dn %51.7   <env->
  val+            %55.1 = CallSafeBuiltin    wed   names(%55.0)    <str->
  void                    StVar              lW    allObjects, %55.1, e51.0
  val?^ | miss    %55.3 = LdVar              eR    remove, e51.0
  lgl$#-          %55.4 = Identical                %55.3, function(..., list=character(), pos=-(1), envi|...
  void                    Branch                   %55.4 -> BB59 (if true) | BB60 (if false)
BB56   <- [53]
  void                    Nop                !     
  val?            %56.1 = %51.7
  dr              %56.2 = Typecheck@0x556a1f3663e8[Type#6]
  goto BB5
BB5   <- [54, 56, 58]
  val?^ | miss    %5.0  = Phi                      %54.1:BB54, %56.1:BB56, %58.1:BB58
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %54.2:BB54, %56.2:BB56, %58.2:BB58
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x556a1b731010+199: [%51.7], env=e51.0
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB61   <- [57]
  val?+           %61.0 = CastType           d     dn %57.1   <env+>
  val+            %61.1 = CallSafeBuiltin    wed   new.env(true, %61.0, 29L)    <env->
  void                    StVar              lW    allTable, %61.1, e51.0
  val?^ | miss    %61.3 = LdVar              eR    assign, e51.0
  lgl$#-          %61.4 = Identical                %61.3, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %61.4 -> BB63 (if true) | BB64 (if false)
BB62   <- [57]
  prom-           %62.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p2, e51.0
  val?^           %62.1 = CastType                 up %62.0
  fs              %62.2 = FrameState         R     0x556a1b731010+248: [], env=e51.0
  env             e62.3 = (MkEnv)            l     size(miss)=29L, parent=%62.1, hash=true, parent=R_BaseNamespace, context 0
  fs              %62.4 = FrameState         R     0x556a1db48ec0+23: [true], env=e62.3, next=%62.2
  fs              %62.5 = FrameState         R     0x556a1be293a0+5(pr): [%57.1], env=e51.0, next=%62.4
  void                    Deopt              !v    %62.5, Typecheck@0x556a1dc29a10[Type#2], %57.1   !
BB59   <- [55]
  prom-           %59.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p12, e51.0
  prom-           %59.1 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p15 (!refl), e51.0
  val?            %59.2 = StaticCall         !v    remove[0x556a1df3c490](missingArg, %59.0, missingArg, %59.1) { 1n 3n } e51.0
  goto BB12
BB60   <- [55]
  fs              %60.0 = FrameState         R     0x556a1b731010+427: [], env=e51.0
  void                    Deopt              !v    %60.0, CallTarget@0x556a1f3663e8[Call#6], %55.3   !
BB63   <- [61]
  prom-           %63.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p3 (!refl), e51.0
  prom-           %63.1 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p4, e51.0
  val?            %63.2 = StaticCall         !v    assign[0x556a21a8dca0](".AllMTable", %63.0, missingArg, %63.1) { 0 1 3n } e51.0
  goto BB12
BB64   <- [61]
  fs              %64.0 = FrameState         R     0x556a1b731010+262: [], env=e51.0
  void                    Deopt              !v    %64.0, CallTarget@0x556a1f3663e8[Call#4], %61.3   !
BB12   <- [59, 63]
  val?^ | miss    %12.0 = LdVar              eR    anyNA, e51.0
  lgl$#-          %12.1 = Identical                <blt anyNA>, %12.0   <true>
  void                    Branch                   %12.1 -> BB65 (if true) | BB66 (if false)
BB65   <- [12]
  val?^ | miss    %65.0 = LdVar              eR    match, e51.0
  lgl$#-          %65.1 = Identical                %65.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %65.1 -> BB67 (if true) | BB68 (if false)
BB66   <- [12]
  void                    Nop                !     
  lgl$#-          %66.1 = %12.1
  dr              %66.2 = DeadBranchReached@0x556a1f3663e8[Test#2]
  goto BB13
BB67   <- [65]
  val?^ | miss    %67.0 = LdVar              eR    direct, e51.0
  lgl$#-          %67.1 = IsType                   %67.0 isA val?~- | miss
  void                    Branch                   %67.1 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  void                    Nop                !     
  val?^ | miss    %68.1 = %65.0
  dr              %68.2 = CallTarget@0x556a1f3663e8[Call#10]
  goto BB13
BB13   <- [66, 68, 70]
  val?^ | miss    %13.0 = Phi                      %66.1:BB66, %68.1:BB68, %70.1:BB70
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %66.2:BB66, %68.2:BB68, %70.2:BB70
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x556a1b731010+482: [], env=e51.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB69   <- [67]
  val?~- | miss   %69.0 = CastType           d     dn %67.0
  val?-           %69.1 = Force!<value>            %69.0,    <str->
  val?^ | miss    %69.2 = LdVar              eR    allObjects, e51.0
  val?            %69.3 = Force!<value>      !v    %69.2, e51.0   <str->
  lgl$#-          %69.4 = IsType                   %69.3 isA val?-
  void                    Branch                   %69.4 -> BB71 (if true) | BB72 (if false)
BB70   <- [67]
  void                    Nop                !     
  val?^ | miss    %70.1 = %67.0
  dr              %70.2 = Typecheck@0x556a1f3663e8[Type#21]
  goto BB13
BB71   <- [69]
  val?-           %71.0 = CastType           d     dn %69.3   <str->
  val+            %71.1 = CallSafeBuiltin    wed   match(%69.1, %71.0, NA, nil)    <int->
  lgl$#-          %71.2 = IsType                   %71.1 isA int-
  void                    Branch                   %71.2 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  fs              %72.0 = FrameState         R     0x556a1b731010+579: [<blt anyNA>], env=e51.0
  prom-           %72.1 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p6, e51.0
  val?^           %72.2 = CastType                 up %72.1
  prom-           %72.3 = MkArg                    %69.1, .resetInheritedMethods[0x556a22300720]_p5 (!refl), e51.0
  val?~           %72.4 = CastType                 up %72.3
  env             e72.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%72.2, x=%72.4, parent=R_BaseNamespace, context 0
  fs              %72.6 = FrameState         R     0x556a1bc1ed40+23: [%69.1], env=e72.5, next=%72.0
  fs              %72.7 = FrameState         R     0x556a1edd6580+5(pr): [%69.3], env=e51.0, next=%72.6
  void                    Deopt              !v    %72.7, Typecheck@0x556a1bc71cb0[Type#1], %69.3   !
BB73   <- [71]
  int-            %73.0 = CastType           d     dn %71.1
  val+            %73.1 = CallSafeBuiltin    wed   anyNA(%73.0)    <lgl$->
  lgl$#-          %73.2 = IsType                   %73.1 isA lgl$-
  void                    Branch                   %73.2 -> BB75 (if true) | BB76 (if false)
BB74   <- [71]
  fs              %74.0 = FrameState         R     0x556a1b731010+579: [<blt anyNA>], env=e51.0
  prom-           %74.1 = MkArg                    %71.0, .resetInheritedMethods[0x556a22300720]_p6 (!refl), e51.0
  val?~           %74.2 = CastType                 up %74.1
  prom-           %74.3 = MkArg                    %69.1, .resetInheritedMethods[0x556a22300720]_p5 (!refl), e51.0
  val?~           %74.4 = CastType                 up %74.3
  env             e74.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%74.2, x=%74.4, parent=R_BaseNamespace, context 0
  fs              %74.6 = FrameState         R     0x556a1bc1ed40+69: [%71.1], env=e74.5, next=%74.0
  void                    Deopt              !v    %74.6, Typecheck@0x556a1f3663e8[Type#23], %71.1   !
BB75   <- [73]
  lgl$-           %75.0 = CastType           d     dn %73.1
  lgl$#-          %75.1 = CheckTrueFalse     e     %75.0
  void                    Branch                   %75.1 -> BB44 (if true) | BB21 (if false)
BB76   <- [73]
  void                    Nop                !     
  val+            %76.1 = %73.1
  dr              %76.2 = Typecheck@0x556a1f3663e8[Type#24]
  goto BB19
BB44   <- [75]
  val?^ | miss    %44.0 = LdVar              eR    list2env, e51.0
  lgl$#-          %44.1 = Identical                %44.0, function(x, envir=NULL, parent=parent.frame(),|...
  void                    Branch                   %44.1 -> BB77 (if true) | BB78 (if false)
BB21   <- [75]
  void                    Nop                !     
  goto BB22
BB19   <- [76, 78]
  val?^ | miss    %19.0 = Phi                      %76.1:BB76, %78.1:BB78
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %76.2:BB76, %78.2:BB78
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x556a1b731010+601: [%73.1], env=e51.0
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB77   <- [44]
  prom-           %77.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p9, e51.0
  prom-           %77.1 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p11, e51.0
  val?            %77.2 = StaticCall         !v    list2env[0x556a1d506440](%77.0, %77.1) e51.0
  goto BB22
BB78   <- [44]
  void                    Nop                !     
  val?^ | miss    %78.1 = %44.0
  dr              %78.2 = CallTarget@0x556a1f3663e8[Call#11]
  goto BB19
BB22   <- [21, 77]
  val?^ | miss    %22.0 = LdVar              eR    direct, e51.0
  lgl$#-          %22.1 = IsType                   %22.0 isA val?~- | miss
  void                    Branch                   %22.1 -> BB79 (if true) | BB80 (if false)
BB79   <- [22]
  val?~- | miss   %79.0 = CastType           d     dn %22.0
  val?-           %79.1 = Force!<value>            %79.0,    <str->
  int$-           %79.2 = Length                   %79.1
  int$-           %79.3 = Inc                      0L
  lgl$-           %79.4 = Lt                 d     %79.2, %79.3, elided   <false>
  lgl$#-          %79.5 = Identical                %79.4, true
  void                    Branch                   %79.5 -> BB82 (if true) | BB81 (if false)
BB80   <- [22]
  void                    Nop                !     
  val?^ | miss    %80.1 = %22.0
  dr              %80.2 = Typecheck@0x556a1f3663e8[Type#28]
  goto BB23
BB82   <- [79]
  void                    Nop                !     
  lgl$#-          %82.1 = %79.5
  dr              %82.2 = DeadBranchReached@0x556a1f3663e8[Test#3]
  goto BB23
BB81   <- [79]
  val?            %81.0 = Extract2_1D        wed   %79.1, %79.3, elided
  void                    StVar              lW    d, %81.0, e51.0
  val?^ | miss    %81.2 = LdVar              eR    allTable, e51.0
  lgl$#-          %81.3 = IsType                   %81.2 isA val?~- | miss
  void                    Branch                   %81.3 -> BB83 (if true) | BB84 (if false)
BB23   <- [80, 82]
  val?^ | miss    %23.0 = Phi                      %80.1:BB80, %82.1:BB82
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %80.2:BB80, %82.2:BB82
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x556a1b731010+655: [], env=e51.0
  void                    Deopt              !v    %23.4, %23.3, %23.1   !
BB83   <- [81]
  val?~- | miss   %83.0 = CastType           d     dn %81.2
  val?-           %83.1 = Force!<value>            %83.0,    <env->
  lgl$#-          %83.2 = IsType                   %83.1 isA val+   <true>
  void                    Branch                   %83.2 -> BB85 (if true) | BB86 (if false)
BB84   <- [81]
  void                    Nop                !     
  val?^ | miss    %84.1 = %81.2
  dr              %84.2 = Typecheck@0x556a1f3663e8[Type#29]
  goto BB25
BB85   <- [83]
  val             %85.0 = ChkMissing         e     %81.0
  lgl$#-          %85.1 = IsType                   %85.0 isA val?~- | miss
  void                    Branch                   %85.1 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  void                    Nop                !     
  lgl$#-          %86.1 = %83.2
  dr              %86.2 = DeadBranchReached@0x556a1f3663e8[Test#4]
  goto BB25
BB25   <- [84, 86, 88]
  val?^ | miss    %25.0 = Phi                      %84.1:BB84, %86.1:BB86, %88.1:BB88
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %84.2:BB84, %86.2:BB86, %88.2:BB88
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x556a1b731010+709: [%79.1, %79.2, %79.3], env=e51.0
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB87   <- [85]
  val-            %87.0 = CastType           d     dn %85.0   <str$->
  val?            %87.1 = Extract2_1D        wed   %83.1, %87.0, elided   <cls>
  void                    StVar              lW    m, %87.1, e51.0
  val?^ | miss    %87.3 = LdVar              eR    is, e51.0
  lgl$#-          %87.4 = Identical                %87.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %87.4 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  void                    Nop                !     
  val             %88.1 = %85.0
  dr              %88.2 = Typecheck@0x556a1f3663e8[Type#31]
  goto BB25
BB89   <- [87]
  prom-           %89.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p7 (!refl), e51.0
  val?            %89.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%89.0, "MethodWithNext") e51.0   <lgl$->
  lgl$#-          %89.2 = IsType                   %89.1 isA lgl$-
  void                    Branch                   %89.2 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x556a1b731010+784: [%79.1, %79.2, %79.3], env=e51.0
  void                    Deopt              !v    %90.0, CallTarget@0x556a1f3663e8[Call#13], %87.3   !
BB91   <- [89]
  lgl$-           %91.0 = CastType           d     dn %89.1
  lgl$#-          %91.1 = CheckTrueFalse     e     %91.0
  void                    Branch                   %91.1 -> BB43 (if true) | BB31 (if false)
BB92   <- [89]
  fs              %92.0 = FrameState         R     0x556a1b731010+821: [%79.1, %79.2, %79.3, %89.1], env=e51.0
  void                    Deopt              !v    %92.0, Typecheck@0x556a1f3663e8[Type#34], %89.1   !
BB43   <- [91]
  (cls|spec|blt)  %43.0 = LdFun              !v    as, e51.0
  fs              %43.1 = FrameState         R     0x556a1b731010+842: [%79.1, %79.2, %79.3, %43.0], env=e51.0
  void                    Deopt              !v    %43.1, DeadCall@0x556a1f3663e8[Call#14], %43.0   !
BB31   <- [91]
  void                    Nop                !     
  int$-           %31.1 = %79.3
  goto BB32
BB32   <- [31, 40]
  int$-           %32.0 = Phi                      %31.1:BB31, %40.1:BB40
  int$-           %32.1 = %32.0
  int$-           %32.2 = Inc                      %32.1
  lgl$-           %32.3 = Lt                 d     %79.2, %32.2, elided
  lgl$#-          %32.4 = Identical                %32.3, true
  void                    Branch                   %32.4 -> BB42 (if true) | BB33 (if false)
BB42   <- [32]
  void                    Visible            v     
  void                    Return             l     nil
BB33   <- [32]
  val?            %33.0 = Extract2_1D        wed   %79.1, %32.2, elided
  void                    StVar              lW    d, %33.0, e51.0
  val?^ | miss    %33.2 = LdVar              eR    allTable, e51.0
  lgl$#-          %33.3 = IsType                   %33.2 isA val?~- | miss
  void                    Branch                   %33.3 -> BB93 (if true) | BB94 (if false)
BB93   <- [33]
  val?~- | miss   %93.0 = CastType           d     dn %33.2
  val?-           %93.1 = Force!<value>            %93.0,    <env->
  lgl$#-          %93.2 = IsType                   %93.1 isA val+   <true>
  void                    Branch                   %93.2 -> BB95 (if true) | BB96 (if false)
BB94   <- [33]
  void                    Nop                !     
  val?^ | miss    %94.1 = %33.2
  dr              %94.2 = Typecheck@0x556a1f3663e8[Type#39]
  goto BB34
BB95   <- [93]
  val             %95.0 = ChkMissing         e     %33.0
  lgl$#-          %95.1 = IsType                   %95.0 isA val?~- | miss
  void                    Branch                   %95.1 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  void                    Nop                !     
  lgl$#-          %96.1 = %93.2
  dr              %96.2 = DeadBranchReached@0x556a1f3663e8[Test#5]
  goto BB34
BB34   <- [94, 96, 98]
  val?^ | miss    %34.0 = Phi                      %94.1:BB94, %96.1:BB96, %98.1:BB98
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %94.2:BB94, %96.2:BB96, %98.2:BB98
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x556a1b731010+946: [%79.1, %79.2, %32.2], env=e51.0
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB97   <- [95]
  val-            %97.0 = CastType           d     dn %95.0   <str$->
  val?            %97.1 = Extract2_1D        wed   %93.1, %97.0, elided   <val?>
  void                    StVar              lW    m, %97.1, e51.0
  val?^ | miss    %97.3 = LdVar              eR    is, e51.0
  lgl$#-          %97.4 = Identical                %97.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %97.4 -> BB99 (if true) | BB100 (if false)
BB98   <- [95]
  void                    Nop                !     
  val             %98.1 = %95.0
  dr              %98.2 = Typecheck@0x556a1f3663e8[Type#41]
  goto BB34
BB99   <- [97]
  prom-           %99.0 = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p8 (!refl), e51.0
  val?            %99.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%99.0, "MethodWithNext") e51.0   <lgl$->
  lgl$#-          %99.2 = IsType                   %99.1 isA lgl$-
  void                    Branch                   %99.2 -> BB101 (if true) | BB102 (if false)
BB100   <- [97]
  fs              %100.0 = FrameState         R     0x556a1b731010+1021: [%79.1, %79.2, %32.2], env=e51.0
  void                    Deopt              !v    %100.0, CallTarget@0x556a1f3663e8[Call#15], %97.3   !
BB101   <- [99]
  lgl$-           %101.0 = CastType           d     dn %99.1
  lgl$#-          %101.1 = CheckTrueFalse     e     %101.0
  void                    Branch                   %101.1 -> BB41 (if true) | BB40 (if false)
BB102   <- [99]
  fs              %102.0 = FrameState         R     0x556a1b731010+1058: [%79.1, %79.2, %32.2, %99.1], env=e51.0
  void                    Deopt              !v    %102.0, Typecheck@0x556a1f3663e8[Type#44], %99.1   !
BB41   <- [101]
  (cls|spec|blt)  %41.0 = LdFun              !v    as, e51.0
  fs              %41.1 = FrameState         R     0x556a1b731010+1079: [%79.1, %79.2, %32.2, %41.0], env=e51.0
  void                    Deopt              !v    %41.1, DeadCall@0x556a1f3663e8[Call#16], %41.0   !
BB40   <- [101]
  void                    Nop                !     
  int$-           %40.1 = %32.2
  goto BB32
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .AllMTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    direct, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allObjects, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    m, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    m, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.list, <0x556a1b534810>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p10, e0.0
  val?            %0.3  = NamedCall          !     %0.1(%0.2, all.names=true) e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mtable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     setdiff, <0x556a1b922350>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p13, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .resetInheritedMethods[0x556a22300720]_p14, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allObjects, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    direct, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .resetInheritedMethods[0x556a22300720]                                       │
└──────────────────────────────────────────────────────────────────────────────┘
