
┌──────────────────────────────────────────────────────────────────────────────┐
│ validObject[0x556a27c53340]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
validObject[0x556a27c53340]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, test(miss)=false, complete(miss)=false, parent=<env 0x556a1ba11378>, context 1
  cls             %0.2  = MkCls                    anyStrings, e0.1
  val?^ | miss    %0.3  = LdVar              eR    class, <env 0x556a1ba11378>
  lgl$#-          %0.4  = Identical                <blt class>, %0.3   <true>
  void                    Branch                   %0.4 -> BB285 (if true) | BB286 (if false)
BB285   <- [0]
  val?            %285.0 = Force!<lazy>       !vr   %0.0,    <(cls|other)>
  val?            %285.1 = CallBuiltin        !v    class(%285.0) e0.1   <str$+>
  void                    StVar              lW    Class, %285.1, e0.1
  val?^ | miss    %285.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %285.4 = Identical                %285.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %285.4 -> BB287 (if true) | BB288 (if false)
BB286   <- [0]
  fs              %286.0 = FrameState         R     0x556a27a52e10+0: [], env=e0.1
  void                    Deopt              !v    %286.0, DeadBranchReached@0x556a1d455c00[Test#0], %0.4
BB287   <- [285]
  prom-           %287.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p2 (!refl), e0.1
  val?            %287.1 = StaticCall         !v    getClassDef[0x556a276940c0](%287.0) e0.1   <other>
  void                    StVar              lW    classDef, %287.1, e0.1
  val?^ | miss    %287.3 = LdVar              eR    .classEnv, e0.1
  lgl$#-          %287.4 = Identical                %287.3, function(Class, default=.requirePackage("metho|...
  void                    Branch                   %287.4 -> BB289 (if true) | BB290 (if false)
BB288   <- [285]
  fs              %288.0 = FrameState         R     0x556a27a52e10+105: [], env=e0.1
  void                    Deopt              !v    %288.0, CallTarget@0x556a1d455c00[Call#1], %285.3   !
BB289   <- [287]
  prom-           %289.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p3 (!refl), e0.1
  ct              %289.1 = PushContext        lCL   %289.0, .classEnv(classDef), function(Class, default=.requirePackage("metho|..., e0.1
  val?^           %289.2 = CastType                 up %289.0
  env             e289.3 = MkEnv              l     Class=%289.2, default(miss)=missingArg, mustFind(miss)=missingArg, parent=<env 0x556a1ba11378>, context 1
  prom-           %289.4 = MkArg                    unboundValue, validObject[0x556a27c53340]_p96, e289.3
  val?^ | miss    %289.5 = CastType                 up %289.4
  void                    StArg              lW    default, %289.5, e289.3
  void                    StArg              lW    mustFind, true, e289.3
  val?^ | miss    %289.8 = LdVar              eR    is.character, <env 0x556a1ba11378>
  lgl$#-          %289.9 = Identical                <blt is.character>, %289.8   <true>
  void                    Branch                   %289.9 -> BB291 (if true) | BB292 (if false)
BB290   <- [287]
  fs              %290.0 = FrameState         R     0x556a27a52e10+151: [], env=e0.1
  void                    Deopt              !v    %290.0, CallTarget@0x556a1d455c00[Call#2], %287.3   !
BB291   <- [289]
  lgl$#-          %291.0 = CallSafeBuiltin    wed   is.character(%287.1)    <lgl$->
  void                    Branch                   %291.0 -> BB281 (if true) | BB11 (if false)
BB292   <- [289]
  fs              %292.0 = FrameState         R     0x556a27a52e10+183: [], env=e0.1
  fs              %292.1 = FrameState         R     0x556a1d75e3a0+0: [], env=e289.3, next=%292.0
  void                    Deopt              !v    %292.1, DeadBranchReached@0x556a1f766f70[Test#0], %289.9   !
BB281   <- [291]
  val?^ | miss    %281.0 = LdVar              eR    packageSlot, <env 0x556a1ba11378>
  lgl$#-          %281.1 = Identical                %281.0, function(object) <(rir::DispatchTable*)0x556a1|...
  void                    Branch                   %281.1 -> BB293 (if true) | BB294 (if false)
BB11   <- [291]
  (cls|spec|blt)  %11.0 = LdFun              !v    @, <0x556a1b409bd8>, <env 0x556a1ba11378>
  prom-           %11.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p98, e289.3
  prom-           %11.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p99, e289.3
  val?            %11.3 = Call               !v    %11.0(%11.1, %11.2) e289.3   <str$->
  val?            %11.4 = %11.3
  goto BB12
BB293   <- [281]
  prom-           %293.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p97, e289.3
  ct              %293.1 = PushContext        lCL   %293.0, packageSlot(Class), function(object) <(rir::DispatchTable*)0x556a1|..., e289.3
  val?^           %293.2 = CastType                 up %293.0
  val?^ | miss    %293.3 = LdVar              eR    attr, <env 0x556a1ba11378>
  lgl$#-          %293.4 = Identical                <blt attr>, %293.3   <true>
  void                    Branch                   %293.4 -> BB297 (if true) | BB298 (if false)
BB294   <- [281]
  fs              %294.0 = FrameState         R     0x556a27a52e10+183: [], env=e0.1
  fs              %294.1 = FrameState         R     0x556a1d75e3a0+91: [%291.0], env=e289.3, next=%294.0
  void                    Deopt              !v    %294.1, CallTarget@0x556a1f766f70[Call#3], %281.0   !
BB12   <- [11, 297]
  val?            %12.0 = Phi                      %11.4:BB11, %297.3:BB297   <(nil|str)->
  val?            %12.1 = %12.0
  lgl$-           %12.2 = Is                       %12.1, NULL
  void                    StVar              lW    package, %12.1, e289.3
  val             %12.4 = ChkMissing         e     %12.1
  lgl$#-          %12.5 = CheckTrueFalse     e     %12.2
  void                    Branch                   %12.5 -> BB269 (if true) | BB15 (if false)
BB297   <- [293]
  env             e297.0 = MkEnv              l     object=%293.2, parent=<env 0x556a1ba11378>, context 1
  val?            %297.1 = CallBuiltin        !v    attr(%287.1, "package") e297.0   <(nil|str)->
  val?            %297.2 = PopContext         C     %297.1, %293.1   <(nil|str)->
  val?            %297.3 = %297.2
  goto BB12
BB298   <- [293]
  fs              %298.0 = FrameState         R     0x556a27a52e10+183: [], env=e0.1
  fs              %298.1 = FrameState         R     0x556a1d75e3a0+181: [], env=e289.3, next=%298.0
  env             e298.2 = (MkEnv)            l     object=%293.2, parent=<env 0x556a1ba11378>, context 1
  fs              %298.3 = FrameState         R     0x556a1b51fe00+17: [<blt attr>, %293.4], env=e298.2, next=%298.1
  void                    Deopt              !v    %298.3, DeadBranchReached@0x556a1e8861b8[Test#0], %293.4   !
BB269   <- [12]
  val?^ | miss    %269.0 = LdVar              eR    default, e289.3
  val?            %269.1 = Force!<lazy>       !v    %269.0, e289.3   <env->
  void                    StVar              lW    value, %269.1, e289.3
  val?^ | miss    %269.3 = LdVar              eR    getClassDef, e289.3
  lgl$#-          %269.4 = Identical                %269.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %269.4 -> BB301 (if true) | BB302 (if false)
BB15   <- [12]
  val?^ | miss    %15.0 = LdVar              eR    .requirePackage, e289.3
  lgl$#-          %15.1 = Identical                %15.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Branch                   %15.1 -> BB295 (if true) | BB296 (if false)
BB301   <- [269]
  prom-           %301.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p101, e289.3
  prom-           %301.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p102, e289.3
  val?            %301.2 = StaticCall         !v    getClassDef[0x556a27910920](%301.0, %301.1, nil) e289.3   <other>
  lgl$-           %301.3 = Is                       %301.2, NULL
  lgl$-           %301.4 = AsLogical                %301.3
  lgl$#-          %301.5 = Identical                %301.4, false
  void                    StVar              lW    def, %301.2, e289.3
  val             %301.7 = ChkMissing         e     %301.2
  lgl$#-          %301.8 = CheckTrueFalse     e     %301.3
  void                    Branch                   %301.8 -> BB280 (if true) | BB272 (if false)
BB302   <- [269]
  fs              %302.0 = FrameState         R     0x556a27a52e10+183: [], env=e0.1
  fs              %302.1 = FrameState         R     0x556a1d75e3a0+285: [], env=e289.3, next=%302.0
  void                    Deopt              !v    %302.1, CallTarget@0x556a1f766f70[Call#5], %269.3   !
BB295   <- [15]
  prom-           %295.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p100 (!refl), e289.3
  val?            %295.1 = StaticCall         !v    .requirePackage[0x556a27bd2100](%295.0) e289.3   <env->
  val?            %295.2 = %295.1
  goto BB16
BB296   <- [15]
  fs              %296.0 = FrameState         R     0x556a27a52e10+183: [], env=e0.1
  fs              %296.1 = FrameState         R     0x556a1d75e3a0+195: [], env=e289.3, next=%296.0
  void                    Deopt              !v    %296.1, CallTarget@0x556a1f766f70[Call#4], %15.0   !
BB280   <- [301]
  fs              %280.0 = FrameState         R     0x556a27a52e10+183: [], env=e0.1
  val?^ | miss    %280.1 = LdVar              eR    .GlobalEnv, e289.3
  val?            %280.2 = Force!             !v    %280.1, e289.3   <val?_>
  void                    StVar              lW    value, %280.2, e289.3
  (cls|spec|blt)  %280.4 = LdFun              !v    getClassDef, e289.3
  fs              %280.5 = FrameState         R     0x556a1d75e3a0+399: [%280.4], env=e289.3, next=%280.0
  void                    Deopt              !v    %280.5, DeadCall@0x556a1f766f70[Call#6], %280.4   !
BB272   <- [301]
  void                    Branch                   %301.5 -> BB279 (if true) | BB273 (if false)
BB16   <- [295, 313]
  val?            %16.0 = Phi                      %295.2:BB295, %313.2:BB313
  val?            %16.1 = %16.0
  val?            %16.2 = PopContext         C     %16.1, %289.1   <env->
  void                    StVar              lW    where, %16.2, e0.1
  void                    StVar              lW    anyStrings, %0.2, e0.1
  val?^ | miss    %16.5 = LdVar              eR    character, e0.1
  lgl$#-          %16.6 = Identical                %16.5, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %16.6 -> BB299 (if true) | BB300 (if false)
BB279   <- [272]
  void                    Nop                !     
  lgl$-           %279.1 = %301.4
  goto BB274
BB273   <- [272]
  val?^ | miss    %273.0 = LdVar              eR    mustFind, e289.3
  val?            %273.1 = Force!             !v    %273.0, e289.3   <val?_>
  lgl$-           %273.2 = AsLogical          e     %273.1
  lgl$-           %273.3 = LAnd                     %301.4, %273.2
  lgl$-           %273.4 = %273.3
  goto BB274
BB299   <- [16]
  str-            %299.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    errors, %299.0, e0.1
  (cls|spec|blt)  %299.2 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %299.3 = MkArg                    unboundValue, validObject[0x556a27c53340]_p4, e0.1
  prom-           %299.4 = MkArg                    unboundValue, validObject[0x556a27c53340]_p5, e0.1
  val?            %299.5 = Call               !v    %299.2(%299.3, %299.4) e0.1   <vec+>
  void                    StVar              lW    slotTypes, %299.5, e0.1
  lgl$#-          %299.7 = IsType                   %299.5 isA val?+
  val?^ | miss    %299.8 = LdVar              eR    names, e0.1
  lgl$#-          %299.9 = Identical                <blt names>, %299.8   <true>
  void                    Branch                   %299.9 -> BB303 (if true) | BB304 (if false)
BB300   <- [16]
  fs              %300.0 = FrameState         R     0x556a27a52e10+222: [], env=e0.1
  void                    Deopt              !v    %300.0, CallTarget@0x556a1d455c00[Call#3], %16.5   !
BB274   <- [279, 273]
  lgl$-           %274.0 = Phi                      %273.4:BB273, %279.1:BB279
  lgl$-           %274.1 = %274.0
  lgl$#-          %274.2 = CheckTrueFalse     e     %274.1
  void                    Branch                   %274.2 -> BB278 (if true) | BB277 (if false)
BB303   <- [299]
  val             %303.0 = ChkMissing         e     %299.5
  void                    Branch                   %299.7 -> BB305 (if true) | BB306 (if false)
BB304   <- [299]
  void                    Nop                !     
  lgl$#-          %304.1 = %299.9
  dr              %304.2 = DeadBranchReached@0x556a1d455c00[Test#1]
  goto BB19
BB278   <- [274]
  fs              %278.0 = FrameState         R     0x556a27a52e10+183: [], env=e0.1
  (cls|spec|blt)  %278.1 = LdFun              !v    stop, e289.3
  fs              %278.2 = FrameState         R     0x556a1d75e3a0+694: [%278.1], env=e289.3, next=%278.0
  void                    Deopt              !v    %278.2, DeadCall@0x556a1f766f70[Call#10], %278.1   !
BB277   <- [274]
  val?^ | miss    %277.0 = LdVar              eR    value, e289.3
  lgl$#-          %277.1 = IsType                   %277.0 isA val?~- | miss
  void                    Branch                   %277.1 -> BB313 (if true) | BB314 (if false)
BB305   <- [303]
  val?+           %305.0 = CastType           d     dn %299.5   <vec+>
  val+            %305.1 = CallSafeBuiltin    wed   names(%305.0)    <str->
  void                    StVar              lW    slotNames, %305.1, e0.1
  val?^ | miss    %305.3 = LdVar              eR    c, e0.1
  lgl$#-          %305.4 = Identical                <blt c>, %305.3   <true>
  void                    Branch                   %305.4 -> BB307 (if true) | BB308 (if false)
BB306   <- [303]
  void                    Nop                !     
  val?            %306.1 = %299.5
  dr              %306.2 = Typecheck@0x556a1d455c00[Type#10]
  goto BB19
BB19   <- [304, 306]
  val?^ | miss    %19.0 = Phi                      %304.1:BB304, %306.1:BB306
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %304.2:BB304, %306.2:BB306
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x556a27a52e10+314: [], env=e0.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB313   <- [277]
  val?~- | miss   %313.0 = CastType           d     dn %277.0
  val?-           %313.1 = Force!<value>            %313.0,    <env->
  val?-           %313.2 = %313.1
  goto BB16
BB314   <- [277]
  fs              %314.0 = FrameState         R     0x556a27a52e10+183: [], env=e0.1
  fs              %314.1 = FrameState         R     0x556a1d75e3a0+678: [%274.1], env=e289.3, next=%314.0
  void                    Deopt              !v    %314.1, Typecheck@0x556a1f766f70[Type#34], %277.0   !
BB307   <- [305]
  val?^ | miss    %307.0 = LdVar              eR    attributes, e0.1
  lgl$#-          %307.1 = Identical                <blt attributes>, %307.0   <true>
  void                    Branch                   %307.1 -> BB309 (if true) | BB310 (if false)
BB308   <- [305]
  void                    Nop                !     
  lgl$#-          %308.1 = %305.4
  dr              %308.2 = DeadBranchReached@0x556a1d455c00[Test#2]
  goto BB21
BB309   <- [307]
  val?^ | miss    %309.0 = LdVar              eR    object, e0.1
  val?            %309.1 = Force!<wrapped>    !v    %309.0, e0.1   <(cls|other)>
  val?            %309.2 = CallBuiltin        !v    attributes(%309.1) e0.1   <vec+>
  lgl$#-          %309.3 = IsType                   %309.2 isA val?+
  void                    Branch                   %309.3 -> BB311 (if true) | BB312 (if false)
BB310   <- [307]
  void                    Nop                !     
  lgl$#-          %310.1 = %307.1
  dr              %310.2 = DeadBranchReached@0x556a1d455c00[Test#4]
  goto BB21
BB21   <- [308, 310]
  val?^ | miss    %21.0 = Phi                      %308.1:BB308, %310.1:BB310
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %308.2:BB308, %310.2:BB310
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x556a27a52e10+419: [], env=e0.1
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB311   <- [309]
  val?+           %311.0 = CastType           d     dn %309.2   <vec+>
  val+            %311.1 = CallSafeBuiltin    wed   names(%311.0)    <str->
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %311.2 = CallSafeBuiltin    wed   c(".Data", ".S3Class", %311.1)    <str->
  void                    StVar              lW    attrNames, %311.2, e0.1
  lgl$#-          %311.4 = IsType                   %311.2 isA val?-
  val?^ | miss    %311.5 = LdVar              eR    anyNA, e0.1
  lgl$#-          %311.6 = Identical                <blt anyNA>, %311.5   <true>
  void                    Branch                   %311.6 -> BB315 (if true) | BB316 (if false)
BB312   <- [309]
  fs              %312.0 = FrameState         R     0x556a27a52e10+652: [<blt c>, ".Data", ".S3Class", <blt names>, %309.2], env=e0.1
  void                    Deopt              !v    %312.0, Typecheck@0x556a1d455c00[Type#21], %309.2   !
BB315   <- [311]
  val?^ | miss    %315.0 = LdVar              eR    match, e0.1
  lgl$#-          %315.1 = Identical                %315.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %315.1 -> BB317 (if true) | BB318 (if false)
BB316   <- [311]
  void                    Nop                !     
  lgl$#-          %316.1 = %311.6
  dr              %316.2 = DeadBranchReached@0x556a1d455c00[Test#5]
  goto BB25
BB317   <- [315]
  val?^ | miss    %317.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %317.1 = IsType                   %317.0 isA val?~- | miss
  void                    Branch                   %317.1 -> BB319 (if true) | BB320 (if false)
BB318   <- [315]
  void                    Nop                !     
  val?^ | miss    %318.1 = %315.0
  dr              %318.2 = CallTarget@0x556a1d455c00[Call#14]
  goto BB25
BB25   <- [316, 318, 320, 322]
  val?^ | miss    %25.0 = Phi                      %316.1:BB316, %318.1:BB318, %320.1:BB320, %322.1:BB322
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %316.2:BB316, %318.2:BB318, %320.2:BB320, %322.2:BB322
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x556a27a52e10+710: [], env=e0.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB319   <- [317]
  val?~- | miss   %319.0 = CastType           d     dn %317.0
  val?-           %319.1 = Force!<value>            %319.0,    <str->
  void                    Branch                   %311.4 -> BB321 (if true) | BB322 (if false)
BB320   <- [317]
  void                    Nop                !     
  val?^ | miss    %320.1 = %317.0
  dr              %320.2 = Typecheck@0x556a1d455c00[Type#27]
  goto BB25
BB321   <- [319]
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)- %321.0 = CastType           d     dn %311.2
  val+            %321.1 = CallSafeBuiltin    wed   match(%319.1, %321.0, NA, nil)    <int->
  void                    StVar              lW    idx, %321.1, e0.1
  lgl$#-          %321.3 = IsType                   %321.1 isA int-
  void                    Branch                   %321.3 -> BB323 (if true) | BB324 (if false)
BB322   <- [319]
  void                    Nop                !     
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %322.1 = %311.2
  dr              %322.2 = Typecheck@0x556a1bc71cb0[Type#1]
  goto BB25
BB323   <- [321]
  int-            %323.0 = CastType           d     dn %321.1
  val+            %323.1 = CallSafeBuiltin    wed   anyNA(%323.0)    <lgl$->
  lgl$#-          %323.2 = IsType                   %323.1 isA lgl$-
  void                    Branch                   %323.2 -> BB325 (if true) | BB326 (if false)
BB324   <- [321]
  fs              %324.0 = FrameState         R     0x556a27a52e10+823: [<blt anyNA>, %321.1], env=e0.1
  void                    Deopt              !v    %324.0, Typecheck@0x556a1d455c00[Type#29], %321.1   !
BB325   <- [323]
  lgl$-           %325.0 = CastType           d     dn %323.1
  lgl$#-          %325.1 = CheckTrueFalse     e     %325.0
  void                    Branch                   %325.1 -> BB264 (if true) | BB31 (if false)
BB326   <- [323]
  void                    Nop                !     
  val+            %326.1 = %323.1
  dr              %326.2 = Typecheck@0x556a1d455c00[Type#30]
  goto BB29
BB264   <- [325]
  val?^ | miss    %264.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %264.1 = Identical                <blt is.na>, %264.0   <@?>
  void                    Branch                   %264.1 -> BB266 (if true) | BB265 (if false)
BB31   <- [325]
  val?^ | miss    %31.0 = LdVar              eR    seq_along, e0.1
  lgl$#-          %31.1 = Identical                <blt seq_along>, %31.0   <true>
  void                    Branch                   %31.1 -> BB327 (if true) | BB328 (if false)
BB29   <- [326, 328, 330]
  val?^ | miss    %29.0 = Phi                      %326.1:BB326, %328.1:BB328, %330.1:BB330
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %326.2:BB326, %328.2:BB328, %330.2:BB330
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x556a27a52e10+840: [%323.1], env=e0.1
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
BB266   <- [264]
  lgl-            %266.0 = CallSafeBuiltin    wed   is.na(%323.0)    <val?_>
  void                    StVar              lW    badSlots, %266.0, e0.1
  val?^ | miss    %266.2 = LdVar              eR    c, e0.1
  lgl$#-          %266.3 = Identical                <blt c>, %266.2   <@?>
  void                    Branch                   %266.3 -> BB268 (if true) | BB267 (if false)
BB265   <- [264]
  (cls|spec|blt)  %265.0 = LdFun              !v    is.na, e0.1
  fs              %265.1 = FrameState         R     0x556a27a52e10+884: [%265.0], env=e0.1
  void                    Deopt              !v    %265.1, DeadCall@0x556a1d455c00[Call#15], %265.0   !
BB327   <- [31]
  val?^ | miss    %327.0 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %327.1 = IsType                   %327.0 isA val?~+ | miss
  void                    Branch                   %327.1 -> BB329 (if true) | BB330 (if false)
BB328   <- [31]
  void                    Nop                !     
  lgl$#-          %328.1 = %31.1
  dr              %328.2 = DeadBranchReached@0x556a1d455c00[Test#12]
  goto BB29
BB268   <- [266]
  val?^ | miss    %268.0 = LdVar              eR    errors, e0.1
  val?            %268.1 = Force!             !v    %268.0, e0.1   <val?_>
  (cls|spec|blt)  %268.2 = LdFun              !v    paste, e0.1
  fs              %268.3 = FrameState         R     0x556a27a52e10+1045: [<blt c>, %268.1, %268.2], env=e0.1
  void                    Deopt              !v    %268.3, DeadCall@0x556a1d455c00[Call#19], %268.2   !
BB267   <- [266]
  (cls|spec|blt)  %267.0 = LdFun              !v    c, e0.1
  fs              %267.1 = FrameState         R     0x556a27a52e10+989: [%267.0], env=e0.1
  void                    Deopt              !v    %267.1, DeadCall@0x556a1d455c00[Call#16], %267.0   !
BB329   <- [327]
  val?~+ | miss   %329.0 = CastType           d     dn %327.0
  val?+           %329.1 = Force!<value>            %329.0,    <vec+>
  val?            %329.2 = CallBuiltin        !v    seq_along(%329.1) e0.1   <int->
  val?+           %329.3 = ToForSeq           e     %329.2
  int$-           %329.4 = Length                   %329.3
  int$-           %329.5 = Inc                      0L
  lgl$-           %329.6 = Lt                 d     %329.4, %329.5, elided   <false>
  lgl$#-          %329.7 = Identical                %329.6, true
  void                    Branch                   %329.7 -> BB332 (if true) | BB331 (if false)
BB330   <- [327]
  void                    Nop                !     
  val?^ | miss    %330.1 = %327.0
  dr              %330.2 = Typecheck@0x556a1d455c00[Type#58]
  goto BB29
BB332   <- [329]
  fs              %332.0 = FrameState         R     0x556a27a52e10+1356: [%329.2], env=e0.1
  void                    Deopt              !v    %332.0, DeadBranchReached@0x556a1d455c00[Test#13], %329.7   !
BB331   <- [329]
  val?            %331.0 = Extract2_1D        wed   %329.3, %329.5, elided
  void                    StVar              lW    i, %331.0, e0.1
  val?^ | miss    %331.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %331.3 = IsType                   %331.2 isA val?~+ | miss
  void                    Branch                   %331.3 -> BB333 (if true) | BB334 (if false)
BB333   <- [331]
  val?~+ | miss   %333.0 = CastType           d     dn %331.2
  val?+           %333.1 = Force!<value>            %333.0,    <vec+>
  lgl$#-          %333.2 = IsType                   %333.1 isA val+   <true>
  void                    Branch                   %333.2 -> BB335 (if true) | BB336 (if false)
BB334   <- [331]
  void                    Nop                !     
  val?^ | miss    %334.1 = %331.2
  dr              %334.2 = Typecheck@0x556a1d455c00[Type#60]
  goto BB34
BB335   <- [333]
  val             %335.0 = ChkMissing         e     %331.0
  lgl$#-          %335.1 = IsType                   %335.0 isA int$-
  void                    Branch                   %335.1 -> BB337 (if true) | BB338 (if false)
BB336   <- [333]
  void                    Nop                !     
  lgl$#-          %336.1 = %333.2
  dr              %336.2 = DeadBranchReached@0x556a1d455c00[Test#14]
  goto BB34
BB34   <- [334, 336, 338]
  val?^ | miss    %34.0 = Phi                      %334.1:BB334, %336.1:BB336, %338.1:BB338
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %334.2:BB334, %336.2:BB336, %338.2:BB338
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x556a27a52e10+1401: [%329.3, %329.4, %329.5], env=e0.1
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB337   <- [335]
  int$-           %337.0 = CastType           d     dn %335.0
  val?            %337.1 = Extract2_1D        wed   %333.1, %337.0, elided   <str$+>
  void                    StVar              lW    classi, %337.1, e0.1
  val?^ | miss    %337.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %337.4 = Identical                %337.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %337.4 -> BB339 (if true) | BB340 (if false)
BB338   <- [335]
  void                    Nop                !     
  val             %338.1 = %335.0
  dr              %338.2 = Typecheck@0x556a1d455c00[Type#62]
  goto BB34
BB339   <- [337]
  prom-           %339.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p8 (!refl), e0.1
  prom-           %339.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p9, e0.1
  val?            %339.2 = StaticCall         !v    getClassDef[0x556a20edee20](%339.0, %339.1) { 0 1n } e0.1   <other>
  lgl$-           %339.3 = Is                       %339.2, NULL
  void                    StVar              lW    classDefi, %339.2, e0.1
  val             %339.5 = ChkMissing         e     %339.2
  lgl$#-          %339.6 = CheckTrueFalse     e     %339.3
  void                    Branch                   %339.6 -> BB261 (if true) | BB40 (if false)
BB340   <- [337]
  fs              %340.0 = FrameState         R     0x556a27a52e10+1476: [%329.3, %329.4, %329.5], env=e0.1
  void                    Deopt              !v    %340.0, CallTarget@0x556a1d455c00[Call#22], %337.3   !
BB261   <- [339]
  val?^ | miss    %261.0 = LdVar              eR    c, e0.1
  lgl$#-          %261.1 = Identical                <blt c>, %261.0   <@?>
  void                    Branch                   %261.1 -> BB263 (if true) | BB262 (if false)
BB40   <- [339]
  val?^ | miss    %40.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %40.1 = IsType                   %40.0 isA val?~- | miss
  void                    Branch                   %40.1 -> BB341 (if true) | BB342 (if false)
BB263   <- [261]
  val?^ | miss    %263.0 = LdVar              eR    errors, e0.1
  val?            %263.1 = Force!             !v    %263.0, e0.1   <val?_>
  (cls|spec|blt)  %263.2 = LdFun              !v    paste0, e0.1
  fs              %263.3 = FrameState         R     0x556a27a52e10+1649: [%329.3, %329.4, %329.5, <blt c>, %263.1, %263.2], env=e0.1
  void                    Deopt              !v    %263.3, DeadCall@0x556a1d455c00[Call#25], %263.2   !
BB262   <- [261]
  (cls|spec|blt)  %262.0 = LdFun              !v    c, e0.1
  fs              %262.1 = FrameState         R     0x556a27a52e10+1593: [%329.3, %329.4, %329.5, %262.0], env=e0.1
  void                    Deopt              !v    %262.1, DeadCall@0x556a1d455c00[Call#23], %262.0   !
BB341   <- [40]
  val?~- | miss   %341.0 = CastType           d     dn %40.0
  val?-           %341.1 = Force!<value>            %341.0,    <str->
  lgl$#-          %341.2 = IsType                   %341.1 isA val+   <true>
  void                    Branch                   %341.2 -> BB343 (if true) | BB344 (if false)
BB342   <- [40]
  void                    Nop                !     
  val?^ | miss    %342.1 = %40.0
  dr              %342.2 = Typecheck@0x556a1d455c00[Type#83]
  goto BB38
BB343   <- [341]
  val?^ | miss    %343.0 = LdVar              eR    i, e0.1
  lgl$#-          %343.1 = IsType                   %343.0 isA int$-
  void                    Branch                   %343.1 -> BB345 (if true) | BB346 (if false)
BB344   <- [341]
  void                    Nop                !     
  lgl$#-          %344.1 = %341.2
  dr              %344.2 = DeadBranchReached@0x556a1d455c00[Test#18]
  goto BB38
BB38   <- [342, 344, 346]
  val?^ | miss    %38.0 = Phi                      %342.1:BB342, %344.1:BB344, %346.1:BB346
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %342.2:BB342, %344.2:BB344, %346.2:BB346
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x556a27a52e10+1535: [%329.3, %329.4, %329.5], env=e0.1
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB345   <- [343]
  int$-           %345.0 = CastType           d     dn %343.0
  val?            %345.1 = Extract2_1D        wed   %341.1, %345.0, elided   <str$->
  void                    StVar              lW    namei, %345.1, e0.1
  val?^ | miss    %345.3 = LdVar              eR    try, e0.1
  lgl$#-          %345.4 = Identical                %345.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %345.4 -> BB347 (if true) | BB348 (if false)
BB346   <- [343]
  void                    Nop                !     
  val?^ | miss    %346.1 = %343.0
  dr              %346.2 = Typecheck@0x556a1d455c00[Type#85]
  goto BB38
BB347   <- [345]
  prom-           %347.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p10, e0.1
  ct              %347.1 = PushContext        lCL   %347.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %347.2 = CastType                 up %347.0
  env             e347.3 = MkEnv              l     expr=%347.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %347.4 = MkArg                    unboundValue, validObject[0x556a27c53340]_p63, e347.3
  val?^ | miss    %347.5 = CastType                 up %347.4
  void                    StArg              lW    outFile, %347.5, e347.3
  cls             %347.7 = MkCls                    try@Prom(3)0, e347.3
  prom-           %347.8 = MkArg                    unboundValue, validObject[0x556a27c53340]_p65, e347.3
  prom-           %347.9 = MkArg                    %347.7, validObject[0x556a27c53340]_p66 (!refl), e347.3
  dots-           %347.10 = DotsList           l     error=%347.9
  val?            %347.11 = StaticCall         !v    tryCatch[0x556a28a768e0](%347.8, %347.10) { 0 1n } e347.3   <(nil|cls)->
  val?            %347.12 = PopContext         C     %347.11, %347.1   <(str|cls)->
  void                    StVar              lW    sloti, %347.12, e0.1
  lgl$#-          %347.14 = IsType                   %347.12 isA val?-
  val?^ | miss    %347.15 = LdVar              eR    inherits, e0.1
  lgl$#-          %347.16 = Identical                %347.15, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %347.16 -> BB349 (if true) | BB350 (if false)
BB348   <- [345]
  fs              %348.0 = FrameState         R     0x556a27a52e10+1817: [%329.3, %329.4, %329.5], env=e0.1
  void                    Deopt              !v    %348.0, CallTarget@0x556a1d455c00[Call#26], %345.3   !
BB349   <- [347]
  void                    Branch                   %347.14 -> BB351 (if true) | BB352 (if false)
BB350   <- [347]
  void                    Nop                !     
  val?^ | miss    %350.1 = %347.15
  dr              %350.2 = CallTarget@0x556a1d455c00[Call#29]
  goto BB43
BB351   <- [349]
  val?-           %351.0 = CastType           d     dn %347.12   <(str|cls)->
  val+            %351.1 = CallSafeBuiltin    wed   inherits(%351.0, "try-error", false)    <lgl$->
  lgl$#-          %351.2 = IsType                   %351.1 isA lgl$-
  void                    Branch                   %351.2 -> BB353 (if true) | BB354 (if false)
BB352   <- [349]
  void                    Nop                !     
  val?            %352.1 = %347.12
  dr              %352.2 = Typecheck@0x556a1d455c00[Type#93]
  goto BB43
BB43   <- [350, 352]
  val?^ | miss    %43.0 = Phi                      %350.1:BB350, %352.1:BB352
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %350.2:BB350, %352.2:BB352
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x556a27a52e10+1876: [%329.3, %329.4, %329.5], env=e0.1
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB353   <- [351]
  lgl$-           %353.0 = CastType           d     dn %351.1
  lgl$#-          %353.1 = CheckTrueFalse     e     %353.0
  void                    Branch                   %353.1 -> BB256 (if true) | BB47 (if false)
BB354   <- [351]
  void                    Nop                !     
  val+            %354.1 = %351.1
  dr              %354.2 = Typecheck@0x556a1d455c00[Type#95]
  goto BB45
BB256   <- [353]
  val?^ | miss    %256.0 = LdVar              eR    c, e0.1
  lgl$#-          %256.1 = Identical                <blt c>, %256.0   <@?>
  void                    Branch                   %256.1 -> BB258 (if true) | BB257 (if false)
BB47   <- [353]
  val?^ | miss    %47.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %47.1 = Identical                %47.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %47.1 -> BB355 (if true) | BB356 (if false)
BB45   <- [354, 356]
  val?^ | miss    %45.0 = Phi                      %354.1:BB354, %356.1:BB356
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %354.2:BB354, %356.2:BB356
  dr              %45.3 = %45.2
  prom-           %45.4 = MkArg                    unboundValue, validObject[0x556a27c53340]_p14 (!refl), e0.1
  val?^           %45.5 = CastType                 up %45.4
  fs              %45.6 = FrameState         R     0x556a27a52e10+1913: [%329.3, %329.4, %329.5], env=e0.1
  env             e45.7 = (MkEnv)            l     which(miss)=false, what="try-error", x=%45.5, parent=R_BaseNamespace, context 0
  fs              %45.8 = FrameState         R     0x556a1d312f40+55: [%351.1], env=e45.7, next=%45.6
  void                    Deopt              !v    %45.8, %45.3, %45.1   !
BB258   <- [256]
  val?^ | miss    %258.0 = LdVar              eR    errors, e0.1
  val?            %258.1 = Force!             !v    %258.0, e0.1   <val?_>
  val?^ | miss    %258.2 = LdVar              eR    sloti, e0.1
  val?            %258.3 = Force!             !v    %258.2, e0.1   <val?_>
  lgl$#-          %258.4 = IsType                   %258.3 isA val?+
  lgl$#-          %258.5 = IsType                   %258.1 isA val?+
  void                    Branch                   %258.5 -> BB361 (if true) | BB362 (if false)
BB257   <- [256]
  (cls|spec|blt)  %257.0 = LdFun              !v    c, e0.1
  fs              %257.1 = FrameState         R     0x556a27a52e10+1957: [%329.3, %329.4, %329.5, %257.0], env=e0.1
  void                    Deopt              !v    %257.1, DeadCall@0x556a1d455c00[Call#30], %257.0   !
BB355   <- [47]
  prom-           %355.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p15, e0.1
  prom-           %355.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p17, e0.1
  prom-           %355.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p18, e0.1
  val?            %355.3 = StaticCall         !v    possibleExtends[0x556a1b57a0a0](%355.0, %355.1, missingArg, %355.2) { 0 1 3n } e0.1   <lgl$->
  lgl$#-          %355.4 = IsType                   %355.3 isA lgl$-
  void                    Branch                   %355.4 -> BB357 (if true) | BB358 (if false)
BB356   <- [47]
  void                    Nop                !     
  val?^ | miss    %356.1 = %47.0
  dr              %356.2 = CallTarget@0x556a1d455c00[Call#31]
  goto BB45
BB361   <- [258]
  val?+           %361.0 = CastType           d     dn %258.1   <val?_>
  void                    Branch                   %258.4 -> BB363 (if true) | BB364 (if false)
BB362   <- [258]
  void                    Nop                !     
  val?            %362.1 = %258.1
  dr              %362.2 = Typecheck@0x556a1d455c00[Type#98]
  goto BB259
BB357   <- [355]
  lgl$-           %357.0 = CastType           d     dn %355.3
  void                    StVar              lW    ok, %357.0, e0.1
  val?^ | miss    %357.2 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %357.3 = Identical                %357.2, function(x) <(rir::DispatchTable*)0x556a1f0336|...
  void                    Branch                   %357.3 -> BB359 (if true) | BB360 (if false)
BB358   <- [355]
  fs              %358.0 = FrameState         R     0x556a27a52e10+2117: [%329.3, %329.4, %329.5, %355.3], env=e0.1
  void                    Deopt              !v    %358.0, Typecheck@0x556a1d455c00[Type#105], %355.3   !
BB363   <- [361]
  val?+           %363.0 = CastType           d     dn %258.3   <val?_>
  val+            %363.1 = CallSafeBuiltin    wed   c(%361.0, %363.0)    <val?_>
  void                    StVar              lW    errors, %363.1, e0.1
  int$-           %363.3 = %329.5
  goto BB59
BB364   <- [361]
  void                    Nop                !     
  val?            %364.1 = %258.3
  dr              %364.2 = Typecheck@0x556a1d455c00[Type#99]
  goto BB259
BB259   <- [362, 364]
  val?^ | miss    %259.0 = Phi                      %362.1:BB362, %364.1:BB364
  val?^ | miss    %259.1 = %259.0
  dr              %259.2 = Phi                      %362.2:BB362, %364.2:BB364
  dr              %259.3 = %259.2
  fs              %259.4 = FrameState         R     0x556a27a52e10+2017: [%329.3, %329.4, %329.5, <blt c>, %258.1, %258.3], env=e0.1
  void                    Deopt              !v    %259.4, %259.3, %259.1   !
BB359   <- [357]
  lgl$-           %359.0 = CallSafeBuiltin    wed   is.na(%357.0)    <lgl$->
  lgl$-           %359.1 = Not                d     %359.0, elided
  lgl$-           %359.2 = AsLogical                %359.1
  lgl$-           %359.3 = AsLogical                %359.2
  lgl$-           %359.4 = AsLogical                %359.3
  lgl$#-          %359.5 = Identical                %359.4, false
  void                    Branch                   %359.5 -> BB255 (if true) | BB52 (if false)
BB360   <- [357]
  fs              %360.0 = FrameState         R     0x556a27a52e10+2131: [%329.3, %329.4, %329.5], env=e0.1
  void                    Deopt              !v    %360.0, CallTarget@0x556a1d455c00[Call#33], %357.2   !
BB59   <- [58, 135, 363, 435]
  int$-           %59.0 = Phi                      %58.1:BB58, %135.1:BB135, %435.3:BB435, %363.3:BB363
  int$-           %59.1 = %59.0
  int$-           %59.2 = Inc                      %59.1
  lgl$-           %59.3 = Lt                 d     %329.4, %59.2, elided
  lgl$#-          %59.4 = Identical                %59.3, true
  void                    Branch                   %59.4 -> BB164 (if true) | BB62 (if false)
BB255   <- [359]
  void                    Nop                !     
  lgl$-           %255.1 = %359.4
  goto BB53
BB52   <- [359]
  lgl$-           %52.0 = Not                d     %357.0, elided
  lgl$-           %52.1 = AsLogical                %52.0
  lgl$-           %52.2 = LAnd                     %359.4, %52.1
  lgl$-           %52.3 = %52.2
  goto BB53
BB164   <- [59]
  val?^ | miss    %164.0 = LdVar              eR    rev, e0.1
  lgl$#-          %164.1 = Identical                %164.0, function(x) <(rir::DispatchTable*)0x556a1ffb09|...
  void                    Branch                   %164.1 -> BB367 (if true) | BB368 (if false)
BB62   <- [59]
  val?            %62.0 = Extract2_1D        wed   %329.3, %59.2, elided
  void                    StVar              lW    i, %62.0, e0.1
  val?^ | miss    %62.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %62.3 = IsType                   %62.2 isA val?~+ | miss
  void                    Branch                   %62.3 -> BB369 (if true) | BB370 (if false)
BB53   <- [255, 52]
  lgl$-           %53.0 = Phi                      %52.3:BB52, %255.1:BB255
  lgl$-           %53.1 = %53.0
  lgl$#-          %53.2 = CheckTrueFalse     e     %53.1
  void                    Branch                   %53.2 -> BB252 (if true) | BB54 (if false)
BB367   <- [164]
  (cls|spec|blt)  %367.0 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %367.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p38, e0.1
  prom-           %367.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p39, e0.1
  val?            %367.3 = Call               !v    %367.0(%367.1, %367.2) e0.1   <vec+>
  val?            %367.4 = StaticCall         !v    rev[0x556a2139a6c0](%367.3) e0.1   <vec+>
  void                    StVar              lW    extends, %367.4, e0.1
  val?^ | miss    %367.6 = LdVar              eR    seq_along, e0.1
  lgl$#-          %367.7 = Identical                <blt seq_along>, %367.6   <true>
  void                    Branch                   %367.7 -> BB371 (if true) | BB372 (if false)
BB368   <- [164]
  fs              %368.0 = FrameState         R     0x556a27a52e10+2760: [%329.3, %329.4, %59.1], env=e0.1
  void                    Deopt              !v    %368.0, CallTarget@0x556a1d455c00[Call#68], %164.0   !
BB369   <- [62]
  val?~+ | miss   %369.0 = CastType           d     dn %62.2
  val?+           %369.1 = Force!<value>            %369.0,    <vec+>
  lgl$#-          %369.2 = IsType                   %369.1 isA val+   <true>
  void                    Branch                   %369.2 -> BB373 (if true) | BB374 (if false)
BB370   <- [62]
  void                    Nop                !     
  val?^ | miss    %370.1 = %62.2
  dr              %370.2 = Typecheck@0x556a1d455c00[Type#151]
  goto BB63
BB252   <- [53]
  val?^ | miss    %252.0 = LdVar              eR    c, e0.1
  lgl$#-          %252.1 = Identical                <blt c>, %252.0   <@?>
  void                    Branch                   %252.1 -> BB254 (if true) | BB253 (if false)
BB54   <- [53]
  val?^ | miss    %54.0 = LdVar              eR    complete, e0.1
  val?            %54.1 = Force!<lazy>       !v    %54.0, e0.1   <lgl$->
  lgl$#-          %54.2 = IsType                   %54.1 isA lgl$-
  void                    Branch                   %54.2 -> BB365 (if true) | BB366 (if false)
BB371   <- [367]
  val             %371.0 = ChkMissing         e     %367.4
  val?            %371.1 = CallBuiltin        !v    seq_along(%367.4) e0.1   <int->
  val?+           %371.2 = ToForSeq           e     %371.1
  int$-           %371.3 = Length                   %371.2
  lgl$-           %371.4 = Lt                 d     %371.3, %329.5, elided   <false>
  lgl$#-          %371.5 = Identical                %371.4, true
  void                    Branch                   %371.5 -> BB378 (if true) | BB377 (if false)
BB372   <- [367]
  fs              %372.0 = FrameState         R     0x556a27a52e10+4204: [], env=e0.1
  void                    Deopt              !v    %372.0, DeadBranchReached@0x556a1d455c00[Test#58], %367.7   !
BB373   <- [369]
  val             %373.0 = ChkMissing         e     %62.0
  lgl$#-          %373.1 = IsType                   %373.0 isA int$-
  void                    Branch                   %373.1 -> BB375 (if true) | BB376 (if false)
BB374   <- [369]
  void                    Nop                !     
  lgl$#-          %374.1 = %369.2
  dr              %374.2 = DeadBranchReached@0x556a1d455c00[Test#36]
  goto BB63
BB63   <- [370, 374, 376]
  val?^ | miss    %63.0 = Phi                      %370.1:BB370, %374.1:BB374, %376.1:BB376
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %370.2:BB370, %374.2:BB374, %376.2:BB376
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x556a27a52e10+2789: [%329.3, %329.4, %59.2], env=e0.1
  void                    Deopt              !v    %63.4, %63.3, %63.1   !
BB254   <- [252]
  val?^ | miss    %254.0 = LdVar              eR    errors, e0.1
  val?            %254.1 = Force!             !v    %254.0, e0.1   <val?_>
  (cls|spec|blt)  %254.2 = LdFun              !v    paste0, e0.1
  fs              %254.3 = FrameState         R     0x556a27a52e10+2263: [%329.3, %329.4, %329.5, <blt c>, %254.1, %254.2], env=e0.1
  void                    Deopt              !v    %254.3, DeadCall@0x556a1d455c00[Call#37], %254.2   !
BB253   <- [252]
  (cls|spec|blt)  %253.0 = LdFun              !v    c, e0.1
  fs              %253.1 = FrameState         R     0x556a27a52e10+2207: [%329.3, %329.4, %329.5, %253.0], env=e0.1
  void                    Deopt              !v    %253.1, DeadCall@0x556a1d455c00[Call#34], %253.0   !
BB365   <- [54]
  lgl$-           %365.0 = CastType           d     dn %54.1
  lgl$-           %365.1 = Not                d     %365.0, elided
  lgl$#-          %365.2 = CheckTrueFalse     e     %365.1
  void                    Branch                   %365.2 -> BB58 (if true) | BB57 (if false)
BB366   <- [54]
  fs              %366.0 = FrameState         R     0x556a27a52e10+2385: [%329.3, %329.4, %329.5, %54.1], env=e0.1
  void                    Deopt              !v    %366.0, Typecheck@0x556a1d455c00[Type#131], %54.1   !
BB378   <- [371]
  fs              %378.0 = FrameState         R     0x556a27a52e10+4295: [%371.1], env=e0.1
  void                    Deopt              !v    %378.0, DeadBranchReached@0x556a1d455c00[Test#59], %371.5   !
BB377   <- [371]
  val?            %377.0 = Extract2_1D        wed   %371.2, %329.5, elided
  void                    StVar              lW    i, %377.0, e0.1
  val?^ | miss    %377.2 = LdVar              eR    extends, e0.1
  lgl$#-          %377.3 = IsType                   %377.2 isA val?~+ | miss
  void                    Branch                   %377.3 -> BB381 (if true) | BB382 (if false)
BB375   <- [373]
  int$-           %375.0 = CastType           d     dn %373.0
  val?            %375.1 = Extract2_1D        wed   %369.1, %375.0, elided   <str$+>
  void                    StVar              lW    classi, %375.1, e0.1
  val?^ | miss    %375.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %375.4 = Identical                %375.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %375.4 -> BB379 (if true) | BB380 (if false)
BB376   <- [373]
  void                    Nop                !     
  val             %376.1 = %373.0
  dr              %376.2 = Typecheck@0x556a1d455c00[Type#153]
  goto BB63
BB58   <- [365]
  void                    Nop                !     
  int$-           %58.1 = %329.5
  goto BB59
BB57   <- [365]
  (cls|spec|blt)  %57.0 = LdFun              !v    anyStrings, e0.1
  fs              %57.1 = FrameState         R     0x556a27a52e10+2417: [%329.3, %329.4, %329.5, %57.0], env=e0.1
  void                    Deopt              !v    %57.1, DeadCall@0x556a1d455c00[Call#39], %57.0   !
BB381   <- [377]
  val?~+ | miss   %381.0 = CastType           d     dn %377.2
  val?+           %381.1 = Force!<value>            %381.0,    <vec+>
  lgl$#-          %381.2 = IsType                   %381.1 isA val+   <true>
  void                    Branch                   %381.2 -> BB383 (if true) | BB384 (if false)
BB382   <- [377]
  void                    Nop                !     
  val?^ | miss    %382.1 = %377.2
  dr              %382.2 = Typecheck@0x556a1d455c00[Type#249]
  goto BB169
BB379   <- [375]
  prom-           %379.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p20 (!refl), e0.1
  prom-           %379.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p21, e0.1
  val?            %379.2 = StaticCall         !v    getClassDef[0x556a20edee20](%379.0, %379.1) { 0 1n } e0.1   <other>
  lgl$-           %379.3 = Is                       %379.2, NULL
  void                    StVar              lW    classDefi, %379.2, e0.1
  val             %379.5 = ChkMissing         e     %379.2
  lgl$#-          %379.6 = CheckTrueFalse     e     %379.3
  void                    Branch                   %379.6 -> BB161 (if true) | BB69 (if false)
BB380   <- [375]
  fs              %380.0 = FrameState         R     0x556a27a52e10+2864: [%329.3, %329.4, %59.2], env=e0.1
  void                    Deopt              !v    %380.0, CallTarget@0x556a1d455c00[Call#45], %375.3   !
BB383   <- [381]
  val             %383.0 = ChkMissing         e     %377.0
  lgl$#-          %383.1 = IsType                   %383.0 isA int$-
  void                    Branch                   %383.1 -> BB385 (if true) | BB386 (if false)
BB384   <- [381]
  void                    Nop                !     
  lgl$#-          %384.1 = %381.2
  dr              %384.2 = DeadBranchReached@0x556a1d455c00[Test#60]
  goto BB169
BB169   <- [382, 384, 386]
  val?^ | miss    %169.0 = Phi                      %382.1:BB382, %384.1:BB384, %386.1:BB386
  val?^ | miss    %169.1 = %169.0
  dr              %169.2 = Phi                      %382.2:BB382, %384.2:BB384, %386.2:BB386
  dr              %169.3 = %169.2
  fs              %169.4 = FrameState         R     0x556a27a52e10+4340: [%371.2, %371.3, %329.5], env=e0.1
  void                    Deopt              !v    %169.4, %169.3, %169.1   !
BB161   <- [379]
  val?^ | miss    %161.0 = LdVar              eR    c, e0.1
  lgl$#-          %161.1 = Identical                <blt c>, %161.0   <@?>
  void                    Branch                   %161.1 -> BB163 (if true) | BB162 (if false)
BB69   <- [379]
  val?^ | miss    %69.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %69.1 = IsType                   %69.0 isA val?~- | miss
  void                    Branch                   %69.1 -> BB387 (if true) | BB388 (if false)
BB385   <- [383]
  int$-           %385.0 = CastType           d     dn %383.0
  val?            %385.1 = Extract2_1D        wed   %381.1, %385.0, elided   <other>
  void                    StVar              lW    exti, %385.1, e0.1
  (cls|spec|blt)  %385.3 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %385.4 = MkArg                    unboundValue, validObject[0x556a27c53340]_p40, e0.1
  prom-           %385.5 = MkArg                    unboundValue, validObject[0x556a27c53340]_p41, e0.1
  val?            %385.6 = Call               !v    %385.3(%385.4, %385.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %385.6, e0.1
  (cls|spec|blt)  %385.8 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %385.9 = MkArg                    unboundValue, validObject[0x556a27c53340]_p42, e0.1
  prom-           %385.10 = MkArg                    unboundValue, validObject[0x556a27c53340]_p43, e0.1
  val?            %385.11 = Call               !v    %385.8(%385.9, %385.10) e0.1   <lgl$->
  lgl$#-          %385.12 = IsType                   %385.11 isA lgl$-
  void                    Branch                   %385.12 -> BB389 (if true) | BB390 (if false)
BB386   <- [383]
  void                    Nop                !     
  val             %386.1 = %383.0
  dr              %386.2 = Typecheck@0x556a1d455c00[Type#251]
  goto BB169
BB163   <- [161]
  val?^ | miss    %163.0 = LdVar              eR    errors, e0.1
  val?            %163.1 = Force!             !v    %163.0, e0.1   <val?_>
  (cls|spec|blt)  %163.2 = LdFun              !v    paste0, e0.1
  fs              %163.3 = FrameState         R     0x556a27a52e10+3037: [%329.3, %329.4, %59.2, <blt c>, %163.1, %163.2], env=e0.1
  void                    Deopt              !v    %163.3, DeadCall@0x556a1d455c00[Call#48], %163.2   !
BB162   <- [161]
  (cls|spec|blt)  %162.0 = LdFun              !v    c, e0.1
  fs              %162.1 = FrameState         R     0x556a27a52e10+2981: [%329.3, %329.4, %59.2, %162.0], env=e0.1
  void                    Deopt              !v    %162.1, DeadCall@0x556a1d455c00[Call#46], %162.0   !
BB387   <- [69]
  val?~- | miss   %387.0 = CastType           d     dn %69.0
  val?-           %387.1 = Force!<value>            %387.0,    <str->
  lgl$#-          %387.2 = IsType                   %387.1 isA val+   <true>
  void                    Branch                   %387.2 -> BB391 (if true) | BB392 (if false)
BB388   <- [69]
  void                    Nop                !     
  val?^ | miss    %388.1 = %69.0
  dr              %388.2 = Typecheck@0x556a1d455c00[Type#174]
  goto BB67
BB389   <- [385]
  lgl$-           %389.0 = CastType           d     dn %385.11
  lgl$-           %389.1 = Not                d     %389.0, elided
  lgl$-           %389.2 = AsLogical                %389.1
  lgl$#-          %389.3 = Identical                %389.2, false
  void                    Branch                   %389.3 -> BB174 (if true) | BB173 (if false)
BB390   <- [385]
  void                    Nop                !     
  val?            %390.1 = %385.11
  dr              %390.2 = Typecheck@0x556a1d455c00[Type#258]
  goto BB171
BB391   <- [387]
  val?^ | miss    %391.0 = LdVar              eR    i, e0.1
  lgl$#-          %391.1 = IsType                   %391.0 isA int$-
  void                    Branch                   %391.1 -> BB393 (if true) | BB394 (if false)
BB392   <- [387]
  void                    Nop                !     
  lgl$#-          %392.1 = %387.2
  dr              %392.2 = DeadBranchReached@0x556a1d455c00[Test#40]
  goto BB67
BB67   <- [388, 392, 394]
  val?^ | miss    %67.0 = Phi                      %388.1:BB388, %392.1:BB392, %394.1:BB394
  val?^ | miss    %67.1 = %67.0
  dr              %67.2 = Phi                      %388.2:BB388, %392.2:BB392, %394.2:BB394
  dr              %67.3 = %67.2
  fs              %67.4 = FrameState         R     0x556a27a52e10+2923: [%329.3, %329.4, %59.2], env=e0.1
  void                    Deopt              !v    %67.4, %67.3, %67.1   !
BB174   <- [389]
  lgl$#-          %174.0 = CheckTrueFalse     e     %389.2
  void                    Branch                   %174.0 -> BB251 (if true) | BB175 (if false)
BB173   <- [389]
  (cls|spec|blt)  %173.0 = LdFun              !v    is, e0.1
  fs              %173.1 = FrameState         R     0x556a27a52e10+4521: [%371.2, %371.3, %329.5, %389.2, %173.0], env=e0.1
  void                    Deopt              !v    %173.1, DeadCall@0x556a1d455c00[Call#73], %173.0   !
BB171   <- [390, 396]
  val?^ | miss    %171.0 = Phi                      %390.1:BB390, %396.1:BB396
  val?^ | miss    %171.1 = %171.0
  dr              %171.2 = Phi                      %390.2:BB390, %396.2:BB396
  dr              %171.3 = %171.2
  fs              %171.4 = FrameState         R     0x556a27a52e10+4503: [%371.2, %371.3, %329.5, %385.11], env=e0.1
  void                    Deopt              !v    %171.4, %171.3, %171.1   !
BB393   <- [391]
  int$-           %393.0 = CastType           d     dn %391.0
  val?            %393.1 = Extract2_1D        wed   %387.1, %393.0, elided   <str$->
  void                    StVar              lW    namei, %393.1, e0.1
  val?^ | miss    %393.3 = LdVar              eR    try, e0.1
  lgl$#-          %393.4 = Identical                %393.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %393.4 -> BB397 (if true) | BB398 (if false)
BB394   <- [391]
  void                    Nop                !     
  val?^ | miss    %394.1 = %391.0
  dr              %394.2 = Typecheck@0x556a1d455c00[Type#176]
  goto BB67
BB251   <- [174]
  void                    Nop                !     
  int$-           %251.1 = %329.5
  goto BB180
BB175   <- [174]
  val?^ | miss    %175.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %175.1 = Identical                %175.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %175.1 -> BB395 (if true) | BB396 (if false)
BB397   <- [393]
  prom-           %397.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p22, e0.1
  ct              %397.1 = PushContext        lCL   %397.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %397.2 = CastType                 up %397.0
  env             e397.3 = MkEnv              l     expr=%397.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %397.4 = MkArg                    unboundValue, validObject[0x556a27c53340]_p68, e397.3
  val?^ | miss    %397.5 = CastType                 up %397.4
  void                    StArg              lW    outFile, %397.5, e397.3
  cls             %397.7 = MkCls                    try@Prom(3)0, e397.3
  val?^ | miss    %397.8 = LdVar              eR    tryCatch, e397.3
  lgl$#-          %397.9 = Identical                %397.8, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %397.9 -> BB399 (if true) | BB400 (if false)
BB398   <- [393]
  fs              %398.0 = FrameState         R     0x556a27a52e10+3205: [%329.3, %329.4, %59.2], env=e0.1
  void                    Deopt              !v    %398.0, CallTarget@0x556a1d455c00[Call#49], %393.3   !
BB180   <- [179, 243, 251, 195]
  int$-           %180.0 = Phi                      %179.1:BB179, %195.1:BB195, %243.1:BB243, %251.1:BB251
  int$-           %180.1 = %180.0
  int$-           %180.2 = Inc                      %180.1
  lgl$-           %180.3 = Lt                 d     %371.3, %180.2, elided
  lgl$#-          %180.4 = Identical                %180.3, true
  void                    Branch                   %180.4 -> BB244 (if true) | BB181 (if false)
BB395   <- [175]
  prom-           %395.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p44, e0.1
  val?            %395.1 = StaticCall         !v    getClassDef[0x556a276940c0](%395.0) e0.1   <other>
  lgl$-           %395.2 = Is                       %395.1, NULL
  void                    StVar              lW    superDef, %395.1, e0.1
  val             %395.4 = ChkMissing         e     %395.1
  lgl$#-          %395.5 = CheckTrueFalse     e     %395.2
  void                    Branch                   %395.5 -> BB248 (if true) | BB176 (if false)
BB396   <- [175]
  void                    Nop                !     
  val?^ | miss    %396.1 = %175.0
  dr              %396.2 = CallTarget@0x556a1d455c00[Call#74]
  goto BB171
BB399   <- [397]
  prom-           %399.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p70, e397.3
  prom-           %399.1 = MkArg                    %397.7, validObject[0x556a27c53340]_p71 (!refl), e397.3
  dots-           %399.2 = DotsList           l     error=%399.1
  val?            %399.3 = StaticCall         !v    tryCatch[0x556a28a768e0](%399.0, %399.2) { 0 1n } e397.3   <(nil|cls)->
  val?            %399.4 = PopContext         C     %399.3, %397.1
  void                    StVar              lW    sloti, %399.4, e0.1
  val?^ | miss    %399.6 = LdVar              eR    inherits, e0.1
  lgl$#-          %399.7 = Identical                %399.6, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %399.7 -> BB405 (if true) | BB406 (if false)
BB400   <- [397]
  fs              %400.0 = FrameState         R     0x556a27a52e10+3250: [%329.3, %329.4, %59.2], env=e0.1
  fs              %400.1 = FrameState         R     0x556a1d40c2c0+0: [], env=e397.3, next=%400.0
  void                    Deopt              !v    %400.1, CallTarget@0x556a1dbc8420[Call#2], %397.8   !
BB244   <- [180]
  void                    Nop                !     
  goto BB219
BB181   <- [180]
  val?            %181.0 = Extract2_1D        wed   %371.2, %180.2, elided
  void                    StVar              lW    i, %181.0, e0.1
  val?^ | miss    %181.2 = LdVar              eR    extends, e0.1
  lgl$#-          %181.3 = IsType                   %181.2 isA val?~+ | miss
  void                    Branch                   %181.3 -> BB401 (if true) | BB402 (if false)
BB248   <- [395]
  val?^ | miss    %248.0 = LdVar              eR    c, e0.1
  lgl$#-          %248.1 = Identical                <blt c>, %248.0   <@?>
  void                    Branch                   %248.1 -> BB250 (if true) | BB249 (if false)
BB176   <- [395]
  (cls|spec|blt)  %176.0 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %176.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p45, e0.1
  prom-           %176.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p46, e0.1
  val?            %176.3 = Call               !v    %176.0(%176.1, %176.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %176.3, e0.1
  lgl$#-          %176.5 = IsType                   %176.3 isA val?-
  val?^ | miss    %176.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %176.7 = Identical                <blt is.function>, %176.6   <true>
  void                    Branch                   %176.7 -> BB411 (if true) | BB412 (if false)
BB405   <- [399]
  prom-           %405.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p26 (!refl), e0.1
  ct              %405.1 = PushContext        lCL   %405.0, "try-error", inherits(sloti, "try-error"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.1
  val?^           %405.2 = CastType                 up %405.0
  env             e405.3 = MkEnv              l     x=%405.2, what="try-error", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %405.4 = Force!<lazy>       !vr   %405.2, e405.3   <val?>
  val?^ | miss    %405.5 = LdVar              eR    what, e405.3
  val?            %405.6 = Force!<value>      !v    %405.5, e405.3   <str$->
  val?^ | miss    %405.7 = LdVar              eR    which, e405.3
  val?            %405.8 = Force!<lazy>       !v    %405.7, e405.3   <lgl$->
  lgl$#-          %405.9 = IsType                   %405.8 isA lgl$-
  lgl$#-          %405.10 = IsType                   %405.6 isA val?-
  void                    Branch                   %405.10 -> BB413 (if true) | BB414 (if false)
BB406   <- [399]
  fs              %406.0 = FrameState         R     0x556a27a52e10+3264: [%329.3, %329.4, %59.2], env=e0.1
  void                    Deopt              !v    %406.0, CallTarget@0x556a1d455c00[Call#52], %399.6   !
BB219   <- [218, 244]
  (cls|spec|blt)  %219.0 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %219.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p58, e0.1
  prom-           %219.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p59, e0.1
  val?            %219.3 = Call               !v    %219.0(%219.1, %219.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %219.3, e0.1
  val?^ | miss    %219.5 = LdVar              eR    length, e0.1
  lgl$#-          %219.6 = Identical                <blt length>, %219.5   <true>
  void                    Branch                   %219.6 -> BB407 (if true) | BB408 (if false)
BB401   <- [181]
  val?~+ | miss   %401.0 = CastType           d     dn %181.2
  val?+           %401.1 = Force!<value>            %401.0,    <vec+>
  lgl$#-          %401.2 = IsType                   %401.1 isA val+   <true>
  void                    Branch                   %401.2 -> BB403 (if true) | BB404 (if false)
BB402   <- [181]
  void                    Nop                !     
  val?^ | miss    %402.1 = %181.2
  dr              %402.2 = Typecheck@0x556a1d455c00[Type#294]
  goto BB182
BB250   <- [248]
  val?^ | miss    %250.0 = LdVar              eR    errors, e0.1
  val?            %250.1 = Force!             !v    %250.0, e0.1   <val?_>
  (cls|spec|blt)  %250.2 = LdFun              !v    paste0, e0.1
  fs              %250.3 = FrameState         R     0x556a27a52e10+4742: [%371.2, %371.3, %329.5, <blt c>, %250.1, %250.2], env=e0.1
  void                    Deopt              !v    %250.3, DeadCall@0x556a1d455c00[Call#77], %250.2   !
BB249   <- [248]
  (cls|spec|blt)  %249.0 = LdFun              !v    c, e0.1
  fs              %249.1 = FrameState         R     0x556a27a52e10+4686: [%371.2, %371.3, %329.5, %249.0], env=e0.1
  void                    Deopt              !v    %249.1, DeadCall@0x556a1d455c00[Call#75], %249.0   !
BB411   <- [176]
  val             %411.0 = ChkMissing         e     %176.3
  void                    Branch                   %176.5 -> BB421 (if true) | BB422 (if false)
BB412   <- [176]
  void                    Nop                !     
  lgl$#-          %412.1 = %176.7
  dr              %412.2 = DeadBranchReached@0x556a1d455c00[Test#62]
  goto BB177
BB413   <- [405]
  val?-           %413.0 = CastType           d     dn %405.6   <str$->
  void                    Branch                   %405.9 -> BB415 (if true) | BB416 (if false)
BB414   <- [405]
  void                    Nop                !     
  val?            %414.1 = %405.6
  dr              %414.2 = Typecheck@0x556a1d2eab50[Type#1]
  goto BB76
BB407   <- [219]
  val?^ | miss    %407.0 = LdVar              eR    errors, e0.1
  lgl$#-          %407.1 = IsType                   %407.0 isA val?~- | miss
  void                    Branch                   %407.1 -> BB417 (if true) | BB418 (if false)
BB408   <- [219]
  void                    Nop                !     
  lgl$#-          %408.1 = %219.6
  dr              %408.2 = DeadBranchReached@0x556a1d455c00[Test#70]
  goto BB220
BB403   <- [401]
  val             %403.0 = ChkMissing         e     %181.0
  lgl$#-          %403.1 = IsType                   %403.0 isA int$-
  void                    Branch                   %403.1 -> BB409 (if true) | BB410 (if false)
BB404   <- [401]
  void                    Nop                !     
  lgl$#-          %404.1 = %401.2
  dr              %404.2 = DeadBranchReached@0x556a1d455c00[Test#65]
  goto BB182
BB182   <- [402, 404, 410]
  val?^ | miss    %182.0 = Phi                      %402.1:BB402, %404.1:BB404, %410.1:BB410
  val?^ | miss    %182.1 = %182.0
  dr              %182.2 = Phi                      %402.2:BB402, %404.2:BB404, %410.2:BB410
  dr              %182.3 = %182.2
  fs              %182.4 = FrameState         R     0x556a27a52e10+5276: [%371.2, %371.3, %180.2], env=e0.1
  void                    Deopt              !v    %182.4, %182.3, %182.1   !
BB421   <- [411]
  val?-           %421.0 = CastType           d     dn %176.3   <nil->
  lgl$#-          %421.1 = CallSafeBuiltin    wed   is.function(%421.0)    <lgl$->
  void                    Branch                   %421.1 -> BB245 (if true) | BB179 (if false)
BB422   <- [411]
  void                    Nop                !     
  val?            %422.1 = %176.3
  dr              %422.2 = Typecheck@0x556a1d455c00[Type#274]
  goto BB177
BB177   <- [412, 422]
  val?^ | miss    %177.0 = Phi                      %412.1:BB412, %422.1:BB422
  val?^ | miss    %177.1 = %177.0
  dr              %177.2 = Phi                      %412.2:BB412, %422.2:BB422
  dr              %177.3 = %177.2
  fs              %177.4 = FrameState         R     0x556a27a52e10+4876: [%371.2, %371.3, %329.5], env=e0.1
  void                    Deopt              !v    %177.4, %177.3, %177.1   !
BB415   <- [413]
  lgl$-           %415.0 = CastType           d     dn %405.8
  val?            %415.1 = CallBuiltin        !v    inherits(%405.4, %413.0, %415.0) e405.3
  val?            %415.2 = PopContext         C     %415.1, %405.1   <lgl$->
  lgl$#-          %415.3 = IsType                   %415.2 isA lgl$-
  void                    Branch                   %415.3 -> BB423 (if true) | BB424 (if false)
BB416   <- [413]
  void                    Nop                !     
  val?            %416.1 = %405.8
  dr              %416.2 = Typecheck@0x556a1d2eab50[Type#2]
  goto BB76
BB76   <- [414, 416]
  val?^ | miss    %76.0 = Phi                      %414.1:BB414, %416.1:BB416
  val?^ | miss    %76.1 = %76.0
  dr              %76.2 = Phi                      %414.2:BB414, %416.2:BB416
  dr              %76.3 = %76.2
  fs              %76.4 = FrameState         R     0x556a27a52e10+3301: [%329.3, %329.4, %59.2], env=e0.1
  fs              %76.5 = FrameState         R     0x556a1d312f40+37: [%405.4, %405.6, %405.8], env=e405.3, next=%76.4
  void                    Deopt              !v    %76.5, %76.3, %76.1   !
BB417   <- [407]
  val?~- | miss   %417.0 = CastType           d     dn %407.0
  val?-           %417.1 = Force!<value>            %417.0,    <str->
  (int|real)$-    %417.2 = CallSafeBuiltin    wed   length(%417.1)    <int$->
  lgl$#-          %417.3 = IsType                   %417.2 isA int$-
  void                    Branch                   %417.3 -> BB427 (if true) | BB428 (if false)
BB418   <- [407]
  void                    Nop                !     
  val?^ | miss    %418.1 = %407.0
  dr              %418.2 = Typecheck@0x556a1d455c00[Type#343]
  goto BB220
BB220   <- [408, 418]
  val?^ | miss    %220.0 = Phi                      %408.1:BB408, %418.1:BB418
  val?^ | miss    %220.1 = %220.0
  dr              %220.2 = Phi                      %408.2:BB408, %418.2:BB418
  dr              %220.3 = %220.2
  fs              %220.4 = FrameState         R     0x556a27a52e10+6244: [], env=e0.1
  void                    Deopt              !v    %220.4, %220.3, %220.1   !
BB409   <- [403]
  int$-           %409.0 = CastType           d     dn %403.0
  val?            %409.1 = Extract2_1D        wed   %401.1, %409.0, elided   <other>
  void                    StVar              lW    exti, %409.1, e0.1
  (cls|spec|blt)  %409.3 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %409.4 = MkArg                    unboundValue, validObject[0x556a27c53340]_p47, e0.1
  prom-           %409.5 = MkArg                    unboundValue, validObject[0x556a27c53340]_p48, e0.1
  val?            %409.6 = Call               !v    %409.3(%409.4, %409.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %409.6, e0.1
  (cls|spec|blt)  %409.8 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %409.9 = MkArg                    unboundValue, validObject[0x556a27c53340]_p49, e0.1
  prom-           %409.10 = MkArg                    unboundValue, validObject[0x556a27c53340]_p50, e0.1
  val?            %409.11 = Call               !v    %409.8(%409.9, %409.10) e0.1   <lgl$->
  lgl$#-          %409.12 = IsType                   %409.11 isA lgl$-
  void                    Branch                   %409.12 -> BB419 (if true) | BB420 (if false)
BB410   <- [403]
  void                    Nop                !     
  val             %410.1 = %403.0
  dr              %410.2 = Typecheck@0x556a1d455c00[Type#296]
  goto BB182
BB245   <- [421]
  val?^ | miss    %245.0 = LdVar              eR    c, e0.1
  lgl$#-          %245.1 = Identical                <blt c>, %245.0   <@?>
  void                    Branch                   %245.1 -> BB247 (if true) | BB246 (if false)
BB179   <- [421]
  void                    Nop                !     
  int$-           %179.1 = %329.5
  goto BB180
BB423   <- [415]
  lgl$-           %423.0 = CastType           d     dn %415.2
  lgl$#-          %423.1 = CheckTrueFalse     e     %423.0
  void                    Branch                   %423.1 -> BB156 (if true) | BB80 (if false)
BB424   <- [415]
  void                    Nop                !     
  val?            %424.1 = %415.2
  dr              %424.2 = Typecheck@0x556a1d455c00[Type#186]
  goto BB78
BB427   <- [417]
  int$-           %427.0 = CastType           d     dn %417.2
  lgl$-           %427.1 = Eq                 d     %427.0, 0L, elided   <lgl$->
  lgl$-           %427.2 = AsLogical                %427.1
  lgl$#-          %427.3 = Identical                %427.2, false
  void                    Branch                   %427.3 -> BB235 (if true) | BB224 (if false)
BB428   <- [417]
  void                    Nop                !     
  (int|real)$-    %428.1 = %417.2
  dr              %428.2 = Typecheck@0x556a1d455c00[Type#344]
  goto BB222
BB419   <- [409]
  lgl$-           %419.0 = CastType           d     dn %409.11
  lgl$-           %419.1 = Not                d     %419.0, elided
  lgl$-           %419.2 = AsLogical                %419.1
  lgl$#-          %419.3 = Identical                %419.2, false
  void                    Branch                   %419.3 -> BB187 (if true) | BB186 (if false)
BB420   <- [409]
  void                    Nop                !     
  val?            %420.1 = %409.11
  dr              %420.2 = Typecheck@0x556a1d455c00[Type#303]
  goto BB184
BB247   <- [245]
  val?^ | miss    %247.0 = LdVar              eR    errors, e0.1
  val?            %247.1 = Force!             !v    %247.0, e0.1   <val?_>
  (cls|spec|blt)  %247.2 = LdFun              !v    anyStrings, e0.1
  fs              %247.3 = FrameState         R     0x556a27a52e10+5067: [%371.2, %371.3, %329.5, <blt c>, %247.1, %247.2], env=e0.1
  void                    Deopt              !v    %247.3, DeadCall@0x556a1d455c00[Call#84], %247.2   !
BB246   <- [245]
  (cls|spec|blt)  %246.0 = LdFun              !v    c, e0.1
  fs              %246.1 = FrameState         R     0x556a27a52e10+5011: [%371.2, %371.3, %329.5, %246.0], env=e0.1
  void                    Deopt              !v    %246.1, DeadCall@0x556a1d455c00[Call#80], %246.0   !
BB156   <- [423]
  val?^ | miss    %156.0 = LdVar              eR    c, e0.1
  lgl$#-          %156.1 = Identical                <blt c>, %156.0   <@?>
  void                    Branch                   %156.1 -> BB158 (if true) | BB157 (if false)
BB80   <- [423]
  val?^ | miss    %80.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %80.1 = Identical                %80.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %80.1 -> BB431 (if true) | BB432 (if false)
BB78   <- [424, 432]
  val?^ | miss    %78.0 = Phi                      %424.1:BB424, %432.1:BB432
  val?^ | miss    %78.1 = %78.0
  dr              %78.2 = Phi                      %424.2:BB424, %432.2:BB432
  dr              %78.3 = %78.2
  fs              %78.4 = FrameState         R     0x556a27a52e10+3301: [%329.3, %329.4, %59.2, %415.2], env=e0.1
  void                    Deopt              !v    %78.4, %78.3, %78.1   !
BB235   <- [427]
  void                    Nop                !     
  lgl$-           %235.1 = %427.2
  goto BB225
BB224   <- [427]
  val?^ | miss    %224.0 = LdVar              eR    is.function, e0.1
  lgl$#-          %224.1 = Identical                <blt is.function>, %224.0   <true>
  void                    Branch                   %224.1 -> BB437 (if true) | BB438 (if false)
BB222   <- [428, 438, 442]
  val?^ | miss    %222.0 = Phi                      %428.1:BB428, %438.1:BB438, %442.1:BB442
  val?^ | miss    %222.1 = %222.0
  dr              %222.2 = Phi                      %428.2:BB428, %438.2:BB438, %442.2:BB442
  dr              %222.3 = %222.2
  fs              %222.4 = FrameState         R     0x556a27a52e10+6335: [%417.2], env=e0.1
  void                    Deopt              !v    %222.4, %222.3, %222.1   !
BB187   <- [419]
  lgl$#-          %187.0 = CheckTrueFalse     e     %419.2
  void                    Branch                   %187.0 -> BB243 (if true) | BB188 (if false)
BB186   <- [419]
  (cls|spec|blt)  %186.0 = LdFun              !v    is, e0.1
  fs              %186.1 = FrameState         R     0x556a27a52e10+5457: [%371.2, %371.3, %180.2, %419.2, %186.0], env=e0.1
  void                    Deopt              !v    %186.1, DeadCall@0x556a1d455c00[Call#90], %186.0   !
BB184   <- [420, 430]
  val?^ | miss    %184.0 = Phi                      %420.1:BB420, %430.1:BB430
  val?^ | miss    %184.1 = %184.0
  dr              %184.2 = Phi                      %420.2:BB420, %430.2:BB430
  dr              %184.3 = %184.2
  fs              %184.4 = FrameState         R     0x556a27a52e10+5439: [%371.2, %371.3, %180.2, %409.11], env=e0.1
  void                    Deopt              !v    %184.4, %184.3, %184.1   !
BB158   <- [156]
  val?^ | miss    %158.0 = LdVar              eR    errors, e0.1
  val?            %158.1 = Force!             !v    %158.0, e0.1   <val?_>
  val?^ | miss    %158.2 = LdVar              eR    sloti, e0.1
  val?            %158.3 = Force!             !v    %158.2, e0.1   <val?_>
  lgl$#-          %158.4 = IsType                   %158.3 isA val?+
  lgl$#-          %158.5 = IsType                   %158.1 isA val?+
  void                    Branch                   %158.5 -> BB425 (if true) | BB426 (if false)
BB157   <- [156]
  (cls|spec|blt)  %157.0 = LdFun              !v    c, e0.1
  fs              %157.1 = FrameState         R     0x556a27a52e10+3345: [%329.3, %329.4, %59.2, %157.0], env=e0.1
  void                    Deopt              !v    %157.1, DeadCall@0x556a1d455c00[Call#53], %157.0   !
BB431   <- [80]
  prom-           %431.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p27, e0.1
  prom-           %431.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p29, e0.1
  prom-           %431.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p30, e0.1
  ct              %431.3 = PushContext        lCL   %431.0, %431.1, missingArg, %431.2, possibleExtends(class(sloti), classi, ClassDef|..., function(class1, class2, ClassDef1=getClassDef|..., e0.1
  val?^           %431.4 = CastType                 up %431.2
  val?^           %431.5 = CastType                 up %431.1
  val?^           %431.6 = CastType                 up %431.0
  env             e431.7 = MkEnv              l     class1=%431.6, class2=%431.5, ClassDef1(miss)=missingArg, ClassDef2=%431.4, parent=<env 0x556a1ba11378>, context 1
  prom-           %431.8 = MkArg                    unboundValue, validObject[0x556a27c53340]_p73, e431.7
  val?^ | miss    %431.9 = CastType                 up %431.8
  void                    StArg              lW    ClassDef1, %431.9, e431.7
  val?^ | miss    %431.11 = LdVar              eR    .identC, e431.7
  lgl$#-          %431.12 = Identical                %431.11, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %431.12 -> BB433 (if true) | BB434 (if false)
BB432   <- [80]
  void                    Nop                !     
  val?^ | miss    %432.1 = %80.0
  dr              %432.2 = CallTarget@0x556a1d455c00[Call#54]
  goto BB78
BB225   <- [235, 441]
  lgl$-           %225.0 = Phi                      %441.3:BB441, %235.1:BB235
  lgl$-           %225.1 = %225.0
  lgl$#-          %225.2 = CheckTrueFalse     e     %225.1
  void                    Branch                   %225.2 -> BB232 (if true) | BB226 (if false)
BB437   <- [224]
  val             %437.0 = ChkMissing         e     %219.3
  lgl$#-          %437.1 = IsType                   %437.0 isA val?~- | miss
  void                    Branch                   %437.1 -> BB441 (if true) | BB442 (if false)
BB438   <- [224]
  void                    Nop                !     
  lgl$#-          %438.1 = %224.1
  dr              %438.2 = DeadBranchReached@0x556a1d455c00[Test#71]
  goto BB222
BB243   <- [187]
  void                    Nop                !     
  int$-           %243.1 = %180.2
  goto BB180
BB188   <- [187]
  val?^ | miss    %188.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %188.1 = Identical                %188.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %188.1 -> BB429 (if true) | BB430 (if false)
BB425   <- [158]
  val?+           %425.0 = CastType           d     dn %158.1   <val?_>
  void                    Branch                   %158.4 -> BB435 (if true) | BB436 (if false)
BB426   <- [158]
  void                    Nop                !     
  val?            %426.1 = %158.1
  dr              %426.2 = Typecheck@0x556a1d455c00[Type#189]
  goto BB159
BB433   <- [431]
  prom-           %433.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p79, e431.7
  prom-           %433.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p80, e431.7
  val?            %433.2 = StaticCall         !v    .identC[0x556a1bf76a40](%433.0, %433.1) e431.7   <lgl$->
  lgl$#-          %433.3 = IsType                   %433.2 isA lgl$-
  void                    Branch                   %433.3 -> BB439 (if true) | BB440 (if false)
BB434   <- [431]
  fs              %434.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %434.1 = FrameState         R     0x556a20386200+0: [], env=e431.7, next=%434.0
  void                    Deopt              !v    %434.1, CallTarget@0x556a1e674db0[Call#3], %431.11   !
BB232   <- [225]
  val?^ | miss    %232.0 = LdVar              eR    c, e0.1
  lgl$#-          %232.1 = Identical                <blt c>, %232.0   <@?>
  void                    Branch                   %232.1 -> BB234 (if true) | BB233 (if false)
BB226   <- [225]
  lgl$#-          %226.0 = CheckTrueFalse     e     %427.0
  void                    Branch                   %226.0 -> BB229 (if true) | BB227 (if false)
BB441   <- [437]
  val-            %441.0 = CastType           d     dn %437.0   <nil->
  lgl$#-          %441.1 = CallSafeBuiltin    wed   is.function(%441.0)    <lgl$->
  lgl$-           %441.2 = LAnd                     %427.2, %441.1
  lgl$-           %441.3 = %441.2
  goto BB225
BB442   <- [437]
  void                    Nop                !     
  val             %442.1 = %437.0
  dr              %442.2 = Typecheck@0x556a1d455c00[Type#347]
  goto BB222
BB429   <- [188]
  prom-           %429.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p51, e0.1
  val?            %429.1 = StaticCall         !v    getClassDef[0x556a276940c0](%429.0) e0.1   <other>
  lgl$-           %429.2 = Is                       %429.1, NULL
  void                    StVar              lW    superDef, %429.1, e0.1
  val             %429.4 = ChkMissing         e     %429.1
  lgl$#-          %429.5 = CheckTrueFalse     e     %429.2
  void                    Branch                   %429.5 -> BB240 (if true) | BB189 (if false)
BB430   <- [188]
  void                    Nop                !     
  val?^ | miss    %430.1 = %188.0
  dr              %430.2 = CallTarget@0x556a1d455c00[Call#91]
  goto BB184
BB435   <- [425]
  val?+           %435.0 = CastType           d     dn %158.3   <val?_>
  val+            %435.1 = CallSafeBuiltin    wed   c(%425.0, %435.0)    <val?_>
  void                    StVar              lW    errors, %435.1, e0.1
  int$-           %435.3 = %59.2
  goto BB59
BB436   <- [425]
  void                    Nop                !     
  val?            %436.1 = %158.3
  dr              %436.2 = Typecheck@0x556a1d455c00[Type#190]
  goto BB159
BB159   <- [426, 436]
  val?^ | miss    %159.0 = Phi                      %426.1:BB426, %436.1:BB436
  val?^ | miss    %159.1 = %159.0
  dr              %159.2 = Phi                      %426.2:BB426, %436.2:BB436
  dr              %159.3 = %159.2
  fs              %159.4 = FrameState         R     0x556a27a52e10+3405: [%329.3, %329.4, %59.2, <blt c>, %158.1, %158.3], env=e0.1
  void                    Deopt              !v    %159.4, %159.3, %159.1   !
BB439   <- [433]
  lgl$-           %439.0 = CastType           d     dn %433.2
  lgl$-           %439.1 = AsLogical                %439.0
  lgl$#-          %439.2 = Identical                %439.1, true
  void                    Branch                   %439.2 -> BB155 (if true) | BB85 (if false)
BB440   <- [433]
  void                    Nop                !     
  val?            %440.1 = %433.2
  dr              %440.2 = Typecheck@0x556a1e674db0[Type#9]
  goto BB83
BB234   <- [232]
  (cls|spec|blt)  %234.0 = LdFun              !v    anyStrings, e0.1
  fs              %234.1 = FrameState         R     0x556a27a52e10+6552: [<blt c>, %417.1, %234.0], env=e0.1
  void                    Deopt              !v    %234.1, DeadCall@0x556a1d455c00[Call#111], %234.0   !
BB233   <- [232]
  (cls|spec|blt)  %233.0 = LdFun              !v    c, e0.1
  fs              %233.1 = FrameState         R     0x556a27a52e10+6496: [%233.0], env=e0.1
  void                    Deopt              !v    %233.1, DeadCall@0x556a1d455c00[Call#108], %233.0   !
BB229   <- [226]
  val?^ | miss    %229.0 = LdVar              eR    test, e0.1
  val?            %229.1 = Force!             !v    %229.0, e0.1   <val?_>
  lgl$#-          %229.2 = CheckTrueFalse     we    %229.1
  void                    Branch                   %229.2 -> BB231 (if true) | BB230 (if false)
BB227   <- [226]
  void                    Visible            v     
  lgl$#-          %227.1 = true
  goto BB228
BB240   <- [429]
  val?^ | miss    %240.0 = LdVar              eR    c, e0.1
  lgl$#-          %240.1 = Identical                <blt c>, %240.0   <@?>
  void                    Branch                   %240.1 -> BB242 (if true) | BB241 (if false)
BB189   <- [429]
  (cls|spec|blt)  %189.0 = LdFun              !v    @, <0x556a1b409bd8>, e0.1
  prom-           %189.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p52, e0.1
  prom-           %189.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p53, e0.1
  val?            %189.3 = Call               !v    %189.0(%189.1, %189.2) e0.1   <(nil|cls)->
  void                    StVar              lW    validityMethod, %189.3, e0.1
  lgl$#-          %189.5 = IsType                   %189.3 isA val?-
  val?^ | miss    %189.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %189.7 = Identical                <blt is.function>, %189.6   <true>
  void                    Branch                   %189.7 -> BB443 (if true) | BB444 (if false)
BB155   <- [439]
  void                    Nop                !     
  lgl$-           %155.1 = %439.1
  goto BB88
BB85   <- [439]
  val?^ | miss    %85.0 = LdVar              eR    .identC, e431.7
  lgl$#-          %85.1 = Identical                %85.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %85.1 -> BB447 (if true) | BB448 (if false)
BB83   <- [440, 448]
  val?^ | miss    %83.0 = Phi                      %440.1:BB440, %448.1:BB448
  val?^ | miss    %83.1 = %83.0
  dr              %83.2 = Phi                      %440.2:BB440, %448.2:BB448
  dr              %83.3 = %83.2
  fs              %83.4 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %83.5 = FrameState         R     0x556a20386200+37: [%433.2], env=e431.7, next=%83.4
  void                    Deopt              !v    %83.5, %83.3, %83.1   !
BB231   <- [229]
  val?^ | miss    %231.0 = LdVar              eR    errors, e0.1
  void                    Visible            v     
  val?            %231.2 = Force!             !     %231.0, e0.1   <val?_>
  val?            %231.3 = %231.2
  goto BB228
BB230   <- [229]
  (cls|spec|blt)  %230.0 = LdFun              !v    gettextf, e0.1
  fs              %230.1 = FrameState         R     0x556a27a52e10+6753: [%230.0], env=e0.1
  void                    Deopt              !v    %230.1, DeadCall@0x556a1d455c00[Call#114], %230.0   !
BB228   <- [227, 231]
  val?            %228.0 = Phi                      %227.1:BB227, %231.3:BB231
  val?            %228.1 = %228.0
  void                    Return             l     %228.1
BB242   <- [240]
  val?^ | miss    %242.0 = LdVar              eR    errors, e0.1
  val?            %242.1 = Force!             !v    %242.0, e0.1   <val?_>
  (cls|spec|blt)  %242.2 = LdFun              !v    paste0, e0.1
  fs              %242.3 = FrameState         R     0x556a27a52e10+5678: [%371.2, %371.3, %180.2, <blt c>, %242.1, %242.2], env=e0.1
  void                    Deopt              !v    %242.3, DeadCall@0x556a1d455c00[Call#94], %242.2   !
BB241   <- [240]
  (cls|spec|blt)  %241.0 = LdFun              !v    c, e0.1
  fs              %241.1 = FrameState         R     0x556a27a52e10+5622: [%371.2, %371.3, %180.2, %241.0], env=e0.1
  void                    Deopt              !v    %241.1, DeadCall@0x556a1d455c00[Call#92], %241.0   !
BB443   <- [189]
  val             %443.0 = ChkMissing         e     %189.3
  void                    Branch                   %189.5 -> BB445 (if true) | BB446 (if false)
BB444   <- [189]
  void                    Nop                !     
  lgl$#-          %444.1 = %189.7
  dr              %444.2 = DeadBranchReached@0x556a1d455c00[Test#67]
  goto BB190
BB88   <- [155, 449]
  lgl$-           %88.0 = Phi                      %449.3:BB449, %155.1:BB155
  lgl$-           %88.1 = %88.0
  lgl$#-          %88.2 = CheckTrueFalse     e     %88.1
  void                    Branch                   %88.2 -> BB154 (if true) | BB89 (if false)
BB447   <- [85]
  prom-           %447.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p81, e431.7
  val?            %447.1 = StaticCall         !v    .identC[0x556a27660770](%447.0, "ANY") e431.7   <lgl$->
  lgl$#-          %447.2 = IsType                   %447.1 isA lgl$-
  void                    Branch                   %447.2 -> BB449 (if true) | BB450 (if false)
BB448   <- [85]
  void                    Nop                !     
  val?^ | miss    %448.1 = %85.0
  dr              %448.2 = CallTarget@0x556a1e674db0[Call#4]
  goto BB83
BB445   <- [443]
  val?-           %445.0 = CastType           d     dn %189.3   <(nil|cls)->
  lgl$#-          %445.1 = CallSafeBuiltin    wed   is.function(%445.0)    <lgl$->
  void                    Branch                   %445.1 -> BB196 (if true) | BB194 (if false)
BB446   <- [443]
  void                    Nop                !     
  val?            %446.1 = %189.3
  dr              %446.2 = Typecheck@0x556a1d455c00[Type#319]
  goto BB190
BB190   <- [444, 446]
  val?^ | miss    %190.0 = Phi                      %444.1:BB444, %446.1:BB446
  val?^ | miss    %190.1 = %190.0
  dr              %190.2 = Phi                      %444.2:BB444, %446.2:BB446
  dr              %190.3 = %190.2
  fs              %190.4 = FrameState         R     0x556a27a52e10+5812: [%371.2, %371.3, %180.2], env=e0.1
  void                    Deopt              !v    %190.4, %190.3, %190.1   !
BB154   <- [88]
  void                    Nop                !     
  lgl$#-          %154.1 = true
  goto BB120
BB89   <- [88]
  val?^ | miss    %89.0 = LdVar              eR    ClassDef1, e431.7
  val?            %89.1 = Force!<lazy>       !v    %89.0, e431.7   <other>
  lgl$-           %89.2 = Is                       %89.1, NULL
  lgl$#-          %89.3 = CheckTrueFalse     e     %89.2
  void                    Branch                   %89.3 -> BB153 (if true) | BB90 (if false)
BB449   <- [447]
  lgl$-           %449.0 = CastType           d     dn %447.1
  lgl$-           %449.1 = AsLogical                %449.0
  lgl$-           %449.2 = LOr                      %439.1, %449.1
  lgl$-           %449.3 = %449.2
  goto BB88
BB450   <- [447]
  fs              %450.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %450.1 = FrameState         R     0x556a20386200+86: [%439.1, %447.1], env=e431.7, next=%450.0
  void                    Deopt              !v    %450.1, Typecheck@0x556a1e674db0[Type#11], %447.1   !
BB196   <- [445]
  val?^ | miss    %196.0 = LdVar              eR    c, e0.1
  lgl$#-          %196.1 = Identical                <blt c>, %196.0   <true>
  void                    Branch                   %196.1 -> BB451 (if true) | BB452 (if false)
BB194   <- [445]
  void                    Nop                !     
  goto BB195
BB120   <- [154, 153, 119]
  val?            %120.0 = Phi                      %119.2:BB119, %153.1:BB153, %154.1:BB154
  val?            %120.1 = %120.0
  val?            %120.2 = PopContext         C     %120.1, %431.3   <(lgl|other)>
  void                    StVar              lW    ok, %120.2, e0.1
  val?^ | miss    %120.4 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %120.5 = Identical                %120.4, function(x) <(rir::DispatchTable*)0x556a1f0336|...
  void                    Branch                   %120.5 -> BB461 (if true) | BB462 (if false)
BB153   <- [89]
  void                    Nop                !     
  lgl$#-          %153.1 = false
  goto BB120
BB90   <- [89]
  (cls|spec|blt)  %90.0 = LdFun              !v    @, <0x556a1b409bd8>, e431.7
  prom-           %90.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p82, e431.7
  prom-           %90.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p83, e431.7
  val?            %90.3 = Call               !v    %90.0(%90.1, %90.2) e431.7   <vec+>
  void                    StVar              lW    ext, %90.3, e431.7
  lgl$#-          %90.5 = IsType                   %90.3 isA val+   <true>
  val             %90.6 = ChkMissing         e     %90.3
  void                    Branch                   %90.5 -> BB459 (if true) | BB460 (if false)
BB451   <- [196]
  val?^ | miss    %451.0 = LdVar              eR    errors, e0.1
  lgl$#-          %451.1 = IsType                   %451.0 isA val?~- | miss
  void                    Branch                   %451.1 -> BB453 (if true) | BB454 (if false)
BB452   <- [196]
  void                    Nop                !     
  lgl$#-          %452.1 = %196.1
  dr              %452.2 = DeadBranchReached@0x556a1d455c00[Test#68]
  goto BB192
BB195   <- [194, 217]
  void                    Nop                !     
  int$-           %195.1 = %180.2
  goto BB180
BB461   <- [120]
  val             %461.0 = ChkMissing         e     %120.2
  val+            %461.1 = CallSafeBuiltin    wed   is.logical(%120.2)    <lgl$->
  lgl$#-          %461.2 = IsType                   %461.1 isA lgl$-
  void                    Branch                   %461.2 -> BB471 (if true) | BB472 (if false)
BB462   <- [120]
  fs              %462.0 = FrameState         R     0x556a27a52e10+3519: [%329.3, %329.4, %59.2], env=e0.1
  void                    Deopt              !v    %462.0, CallTarget@0x556a1d455c00[Call#56], %120.4   !
BB459   <- [90]
  val?^ | miss    %459.0 = LdVar              eR    class2, e431.7
  val?            %459.1 = Force!<wrapped>    !v    %459.0, e431.7   <str$+>
  lgl$#-          %459.2 = IsType                   %459.1 isA val?+
  lgl$#-          %459.3 = IsType                   %90.3 isA val?+
  void                    Branch                   %459.3 -> BB467 (if true) | BB468 (if false)
BB460   <- [90]
  fs              %460.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %460.1 = FrameState         R     0x556a20386200+199: [], env=e431.7, next=%460.0
  void                    Deopt              !v    %460.1, DeadBranchReached@0x556a1e674db0[Test#1], %90.5   !
BB453   <- [451]
  val?~- | miss   %453.0 = CastType           d     dn %451.0
  val?-           %453.1 = Force!<value>            %453.0,    <str->
  val?^ | miss    %453.2 = LdVar              eR    anyStrings, e0.1
  lgl$#-          %453.3 = Identical                %453.2, %0.2
  void                    Branch                   %453.3 -> BB455 (if true) | BB456 (if false)
BB454   <- [451]
  void                    Nop                !     
  val?^ | miss    %454.1 = %451.0
  dr              %454.2 = Typecheck@0x556a1d455c00[Type#329]
  goto BB192
BB192   <- [452, 454, 456, 458]
  val?^ | miss    %192.0 = Phi                      %452.1:BB452, %454.1:BB454, %456.1:BB456, %458.1:BB458
  val?^ | miss    %192.1 = %192.0
  dr              %192.2 = Phi                      %452.2:BB452, %454.2:BB454, %456.2:BB456, %458.2:BB458
  dr              %192.3 = %192.2
  fs              %192.4 = FrameState         R     0x556a27a52e10+5903: [%371.2, %371.3, %180.2, %445.1], env=e0.1
  void                    Deopt              !v    %192.4, %192.3, %192.1   !
BB471   <- [461]
  lgl$-           %471.0 = CastType           d     dn %461.1
  lgl$-           %471.1 = AsLogical                %471.0
  lgl$#-          %471.2 = Identical                %471.1, false
  void                    Branch                   %471.2 -> BB141 (if true) | BB125 (if false)
BB472   <- [461]
  void                    Nop                !     
  val+            %472.1 = %461.1
  dr              %472.2 = Typecheck@0x556a1f30b9a8[Type#2]
  goto BB123
BB467   <- [459]
  val?+           %467.0 = CastType           d     dn %90.3   <vec+>
  void                    Branch                   %459.2 -> BB469 (if true) | BB470 (if false)
BB468   <- [459]
  void                    Nop                !     
  val?            %468.1 = %90.3
  dr              %468.2 = Typecheck@0x556a1e674db0[Type#15]
  goto BB93
BB455   <- [453]
  prom-           %455.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p54, e0.1
  val?^           %455.1 = CastType                 up %455.0
  env             e455.2 = MkEnv              l     x=%455.1, parent=e0.1, context 0
  val?^ | miss    %455.3 = LdVar              eR    isTRUE, e455.2
  lgl$#-          %455.4 = Identical                %455.3, function(x) <(rir::DispatchTable*)0x556a1d2de8|...
  void                    Branch                   %455.4 -> BB457 (if true) | BB458 (if false)
BB456   <- [453]
  void                    Nop                !     
  val?^ | miss    %456.1 = %453.2
  dr              %456.2 = CallTarget@0x556a1d455c00[Call#101]
  goto BB192
BB141   <- [471]
  void                    Nop                !     
  lgl$-           %141.1 = %471.1
  goto BB126
BB125   <- [471]
  lgl$#-          %125.0 = IsType                   %120.2 isA lgl$-
  void                    Branch                   %125.0 -> BB483 (if true) | BB484 (if false)
BB123   <- [472, 478, 484]
  val?^ | miss    %123.0 = Phi                      %472.1:BB472, %478.1:BB478, %484.1:BB484
  val?^ | miss    %123.1 = %123.0
  dr              %123.2 = Phi                      %472.2:BB472, %478.2:BB478, %484.2:BB484
  dr              %123.3 = %123.2
  prom-           %123.4 = MkArg                    %120.2, validObject[0x556a27c53340]_p31 (!refl), e0.1
  val?~           %123.5 = CastType                 up %123.4
  fs              %123.6 = FrameState         R     0x556a27a52e10+3551: [%329.3, %329.4, %59.2], env=e0.1
  env             e123.7 = (MkEnv)            l     x=%123.5, parent=R_BaseNamespace, context 0
  fs              %123.8 = FrameState         R     0x556a1dc24180+91: [%461.1], env=e123.7, next=%123.6
  void                    Deopt              !v    %123.8, %123.3, %123.1   !
BB469   <- [467]
  val?+           %469.0 = CastType           d     dn %459.1   <str$+>
  val?            %469.1 = Extract2_1D        wed   %467.0, %469.0, elided   <(nil|other)>
  lgl$-           %469.2 = Is                       %469.1, NULL
  void                    StVar              lW    contained, %469.1, e431.7
  lgl$-           %469.4 = Not                d     %469.2, elided
  lgl$#-          %469.5 = CheckTrueFalse     e     %469.4
  void                    Branch                   %469.5 -> BB152 (if true) | BB95 (if false)
BB470   <- [467]
  void                    Nop                !     
  val?            %470.1 = %459.1
  dr              %470.2 = Typecheck@0x556a1e674db0[Type#18]
  goto BB93
BB93   <- [468, 470]
  val?^ | miss    %93.0 = Phi                      %468.1:BB468, %470.1:BB470
  val?^ | miss    %93.1 = %93.0
  dr              %93.2 = Phi                      %468.2:BB468, %470.2:BB470
  dr              %93.3 = %93.2
  fs              %93.4 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %93.5 = FrameState         R     0x556a20386200+253: [%90.3, %459.1], env=e431.7, next=%93.4
  void                    Deopt              !v    %93.5, %93.3, %93.1   !
BB457   <- [455]
  prom-           %457.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p92, e455.2
  val?^           %457.1 = CastType                 up %457.0
  env             e457.2 = (MkEnv)            l     x=%457.1, parent=R_BaseNamespace, context -1
  val?            %457.3 = Force!<lazy>       !vL   %455.1, e457.2   <lgl$->
  prom-           %457.4 = MkArg                    %457.3, validObject[0x556a27c53340]_p92 (!refl), e455.2
  val?~           %457.5 = CastType                 up %457.4
  void                    StArg              lWd   x, %457.5, e457.2
  lgl$#-          %457.7 = IsEnvStub          R     , e457.2
  void                    Branch                   %457.7 -> BB463 (if true) | BB464 (if false)
BB458   <- [455]
  void                    Nop                !     
  val?^ | miss    %458.1 = %455.3
  dr              %458.2 = CallTarget@0x556a274cefb8[Call#0]
  goto BB192
BB126   <- [141, 483]
  lgl$-           %126.0 = Phi                      %483.1:BB483, %141.1:BB141
  lgl$-           %126.1 = %126.0
  lgl$-           %126.2 = AsLogical                %126.1
  lgl$#-          %126.3 = Identical                %126.2, false
  void                    Branch                   %126.3 -> BB140 (if true) | BB127 (if false)
BB483   <- [125]
  lgl$-           %483.0 = AsLogical                %471.1
  lgl$-           %483.1 = %483.0
  goto BB126
BB484   <- [125]
  void                    Nop                !     
  val?            %484.1 = %120.2
  dr              %484.2 = Typecheck@0x556a1f30b9a8[Type#4]
  goto BB123
BB152   <- [469]
  val             %152.0 = ChkMissing         e     %469.1
  val?            %152.1 = %469.1
  goto BB119
BB95   <- [469]
  val?^ | miss    %95.0 = LdVar              eR    ClassDef2, e431.7
  val?            %95.1 = Force!<lazy>       !v    %95.0, e431.7   <other>
  lgl$-           %95.2 = Is                       %95.1, NULL
  lgl$#-          %95.3 = CheckTrueFalse     e     %95.2
  void                    Branch                   %95.3 -> BB151 (if true) | BB96 (if false)
BB463   <- [457]
  val+            %463.0 = CallSafeBuiltin    wed   is.logical(%457.3)    <lgl$->
  lgl$#-          %463.1 = IsType                   %463.0 isA lgl$-
  void                    Branch                   %463.1 -> BB465 (if true) | BB466 (if false)
BB464   <- [457]
  fs              %464.0 = FrameState         R     0x556a27a52e10+6030: [%371.2, %371.3, %180.2, <blt c>, %453.1], env=e0.1
  fs              %464.1 = FrameState         R     0x556a1eed3370+32: [], env=e455.2, next=%464.0
  fs              %464.2 = FrameState         R     0x556a1b85b6d0+69: [<blt is.logical>, %457.3], env=e457.2, next=%464.1
  void                    Deopt              !v    %464.2, EnvStubMaterialized@0x556a1c98ccc8[Call#unknown], e457.2   !
BB140   <- [126]
  void                    Nop                !     
  lgl$-           %140.1 = %126.2
  goto BB128
BB127   <- [126]
  lgl$#-          %127.0 = IsType                   %120.2 isA lgl$-
  void                    Branch                   %127.0 -> BB477 (if true) | BB478 (if false)
BB119   <- [152, 118]
  val?            %119.0 = Phi                      %118.2:BB118, %152.1:BB152
  val?            %119.1 = %119.0
  val?            %119.2 = %119.1
  goto BB120
BB151   <- [95]
  void                    Nop                !     
  lgl$#-          %151.1 = false
  goto BB118
BB96   <- [95]
  (cls|spec|blt)  %96.0 = LdFun              !v    @, <0x556a1b409bd8>, e431.7
  prom-           %96.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p84, e431.7
  prom-           %96.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p85, e431.7
  val?            %96.3 = Call               !v    %96.0(%96.1, %96.2) e431.7   <vec$+>
  void                    StVar              lW    subs, %96.3, e431.7
  val?^ | miss    %96.5 = LdVar              eR    .identC, e431.7
  lgl$#-          %96.6 = Identical                %96.5, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %96.6 -> BB479 (if true) | BB480 (if false)
BB465   <- [463]
  lgl$-           %465.0 = CastType           d     dn %463.0
  lgl$-           %465.1 = AsLogical                %465.0
  lgl$#-          %465.2 = Identical                %465.1, false
  void                    Branch                   %465.2 -> BB239 (if true) | BB201 (if false)
BB466   <- [463]
  void                    Nop                !     
  val+            %466.1 = %463.0
  dr              %466.2 = Typecheck@0x556a1c98ccc8[Type#2]
  goto BB199
BB128   <- [140, 477]
  lgl$-           %128.0 = Phi                      %477.5:BB477, %140.1:BB140
  lgl$-           %128.1 = %128.0
  lgl$-           %128.2 = AsLogical                %128.1
  lgl$#-          %128.3 = Identical                %128.2, false
  void                    Branch                   %128.3 -> BB139 (if true) | BB131 (if false)
BB477   <- [127]
  lgl$-           %477.0 = CastType           d     dn %120.2
  lgl$-           %477.1 = CallSafeBuiltin    wed   is.na(%477.0)    <lgl$->
  lgl$-           %477.2 = Not                d     %477.1, elided
  lgl$-           %477.3 = AsLogical                %477.2
  lgl$-           %477.4 = LAnd                     %126.2, %477.3
  lgl$-           %477.5 = %477.4
  goto BB128
BB478   <- [127]
  void                    Nop                !     
  val?            %478.1 = %120.2
  dr              %478.2 = Typecheck@0x556a1f30b9a8[Type#8]
  goto BB123
BB118   <- [151, 117]
  val?            %118.0 = Phi                      %117.2:BB117, %151.1:BB151
  val?            %118.1 = %118.0
  val?            %118.2 = %118.1
  goto BB119
BB479   <- [96]
  prom-           %479.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p86, e431.7
  val?            %479.1 = StaticCall         !v    .identC[0x556a27660770](%479.0, "classRepresentation") e431.7   <lgl$->
  lgl$#-          %479.2 = IsType                   %479.1 isA lgl$-
  void                    Branch                   %479.2 -> BB481 (if true) | BB482 (if false)
BB480   <- [96]
  fs              %480.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %480.1 = FrameState         R     0x556a20386200+364: [], env=e431.7, next=%480.0
  void                    Deopt              !v    %480.1, CallTarget@0x556a1e674db0[Call#7], %96.5   !
BB239   <- [465]
  void                    Nop                !     
  lgl$-           %239.1 = %465.1
  goto BB202
BB201   <- [465]
  lgl$#-          %201.0 = IsType                   %457.3 isA lgl$-
  void                    Branch                   %201.0 -> BB473 (if true) | BB474 (if false)
BB199   <- [466, 474, 476]
  val?^ | miss    %199.0 = Phi                      %466.1:BB466, %474.1:BB474, %476.1:BB476
  val?^ | miss    %199.1 = %199.0
  dr              %199.2 = Phi                      %466.2:BB466, %474.2:BB474, %476.2:BB476
  dr              %199.3 = %199.2
  fs              %199.4 = FrameState         R     0x556a27a52e10+6030: [%371.2, %371.3, %180.2, <blt c>, %453.1], env=e0.1
  fs              %199.5 = FrameState         R     0x556a1eed3370+32: [], env=e455.2, next=%199.4
  fs              %199.6 = FrameState         R     0x556a1b85b6d0+91: [%463.0], env=e457.2, next=%199.5
  void                    Deopt              !v    %199.6, %199.3, %199.1   !
BB139   <- [128]
  void                    Nop                !     
  lgl$-           %139.1 = %128.2
  goto BB132
BB131   <- [128]
  lgl$#-          %131.0 = IsType                   %120.2 isA lgl$-
  void                    Branch                   %131.0 -> BB495 (if true) | BB496 (if false)
BB481   <- [479]
  lgl$-           %481.0 = CastType           d     dn %479.1
  lgl$-           %481.1 = Not                d     %481.0, elided
  lgl$-           %481.2 = AsLogical                %481.1
  lgl$#-          %481.3 = Identical                %481.2, false
  void                    Branch                   %481.3 -> BB102 (if true) | BB101 (if false)
BB482   <- [479]
  void                    Nop                !     
  val?            %482.1 = %479.1
  dr              %482.2 = Typecheck@0x556a1e674db0[Type#26]
  goto BB99
BB202   <- [239, 473]
  lgl$-           %202.0 = Phi                      %473.1:BB473, %239.1:BB239
  lgl$-           %202.1 = %202.0
  lgl$-           %202.2 = AsLogical                %202.1
  lgl$#-          %202.3 = Identical                %202.2, false
  void                    Branch                   %202.3 -> BB238 (if true) | BB203 (if false)
BB473   <- [201]
  lgl$-           %473.0 = AsLogical                %465.1
  lgl$-           %473.1 = %473.0
  goto BB202
BB474   <- [201]
  void                    Nop                !     
  val?            %474.1 = %457.3
  dr              %474.2 = Typecheck@0x556a1c98ccc8[Type#4]
  goto BB199
BB132   <- [139, 495]
  lgl$-           %132.0 = Phi                      %495.4:BB495, %139.1:BB139
  lgl$-           %132.1 = %132.0
  lgl$#-          %132.2 = CheckTrueFalse     e     %132.1
  void                    Branch                   %132.2 -> BB136 (if true) | BB133 (if false)
BB495   <- [131]
  lgl$-           %495.0 = CastType           d     dn %120.2
  lgl$-           %495.1 = Not                d     %495.0, elided
  lgl$-           %495.2 = AsLogical                %495.1
  lgl$-           %495.3 = LAnd                     %128.2, %495.2
  lgl$-           %495.4 = %495.3
  goto BB132
BB496   <- [131]
  void                    Nop                !     
  val?            %496.1 = %120.2
  dr              %496.2 = Typecheck@0x556a1f30b9a8[Type#10]
  goto BB129
BB102   <- [481]
  lgl$#-          %102.0 = CheckTrueFalse     e     %481.2
  void                    Branch                   %102.0 -> BB148 (if true) | BB103 (if false)
BB101   <- [481]
  (cls|spec|blt)  %101.0 = LdFun              !v    isClassUnion, e431.7
  fs              %101.1 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %101.2 = FrameState         R     0x556a20386200+419: [%481.2, %101.0], env=e431.7, next=%101.1
  void                    Deopt              !v    %101.2, DeadCall@0x556a1e674db0[Call#9], %101.0   !
BB99   <- [482, 492]
  val?^ | miss    %99.0 = Phi                      %482.1:BB482, %492.1:BB492
  val?^ | miss    %99.1 = %99.0
  dr              %99.2 = Phi                      %482.2:BB482, %492.2:BB492
  dr              %99.3 = %99.2
  fs              %99.4 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %99.5 = FrameState         R     0x556a20386200+401: [%479.1], env=e431.7, next=%99.4
  void                    Deopt              !v    %99.5, %99.3, %99.1   !
BB238   <- [202]
  void                    Nop                !     
  lgl$-           %238.1 = %202.2
  goto BB204
BB203   <- [202]
  lgl$#-          %203.0 = IsType                   %457.3 isA lgl$-
  void                    Branch                   %203.0 -> BB475 (if true) | BB476 (if false)
BB136   <- [132]
  val?^ | miss    %136.0 = LdVar              eR    c, e0.1
  lgl$#-          %136.1 = Identical                <blt c>, %136.0   <@?>
  void                    Branch                   %136.1 -> BB138 (if true) | BB137 (if false)
BB133   <- [132]
  val?^ | miss    %133.0 = LdVar              eR    complete, e0.1
  lgl$#-          %133.1 = IsType                   %133.0 isA lgl$~-
  void                    Branch                   %133.1 -> BB499 (if true) | BB500 (if false)
BB129   <- [496, 500]
  val?^ | miss    %129.0 = Phi                      %496.1:BB496, %500.1:BB500
  val?^ | miss    %129.1 = %129.0
  dr              %129.2 = Phi                      %496.2:BB496, %500.2:BB500
  dr              %129.3 = %129.2
  prom-           %129.4 = MkArg                    %120.2, validObject[0x556a27c53340]_p31 (!refl), e0.1
  val?~           %129.5 = CastType                 up %129.4
  fs              %129.6 = FrameState         R     0x556a27a52e10+3551: [%329.3, %329.4, %59.2], env=e0.1
  env             e129.7 = (MkEnv)            l     x=%129.5, parent=R_BaseNamespace, context 0
  fs              %129.8 = FrameState         R     0x556a1dc24180+319: [%128.1], env=e129.7, next=%129.6
  void                    Deopt              !v    %129.8, %129.3, %129.1   !
BB148   <- [102]
  val?^ | miss    %148.0 = LdVar              eR    any, e431.7
  lgl$#-          %148.1 = Identical                <blt any>, %148.0   <@?>
  void                    Branch                   %148.1 -> BB150 (if true) | BB149 (if false)
BB103   <- [102]
  val?^ | miss    %103.0 = LdVar              eR    match, e431.7
  lgl$#-          %103.1 = Identical                %103.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %103.1 -> BB491 (if true) | BB492 (if false)
BB204   <- [238, 475]
  lgl$-           %204.0 = Phi                      %475.5:BB475, %238.1:BB238
  lgl$-           %204.1 = %204.0
  lgl$-           %204.2 = AsLogical                %204.1
  lgl$#-          %204.3 = Identical                %204.2, false
  void                    Branch                   %204.3 -> BB237 (if true) | BB207 (if false)
BB475   <- [203]
  lgl$-           %475.0 = CastType           d     dn %457.3
  lgl$-           %475.1 = CallSafeBuiltin    wed   is.na(%475.0)    <lgl$->
  lgl$-           %475.2 = Not                d     %475.1, elided
  lgl$-           %475.3 = AsLogical                %475.2
  lgl$-           %475.4 = LAnd                     %202.2, %475.3
  lgl$-           %475.5 = %475.4
  goto BB204
BB476   <- [203]
  void                    Nop                !     
  val?            %476.1 = %457.3
  dr              %476.2 = Typecheck@0x556a1c98ccc8[Type#8]
  goto BB199
BB138   <- [136]
  val?^ | miss    %138.0 = LdVar              eR    errors, e0.1
  val?            %138.1 = Force!             !v    %138.0, e0.1   <val?_>
  (cls|spec|blt)  %138.2 = LdFun              !v    paste0, e0.1
  fs              %138.3 = FrameState         R     0x556a27a52e10+3651: [%329.3, %329.4, %59.2, <blt c>, %138.1, %138.2], env=e0.1
  void                    Deopt              !v    %138.3, DeadCall@0x556a1d455c00[Call#60], %138.2   !
BB137   <- [136]
  (cls|spec|blt)  %137.0 = LdFun              !v    c, e0.1
  fs              %137.1 = FrameState         R     0x556a27a52e10+3595: [%329.3, %329.4, %59.2, %137.0], env=e0.1
  void                    Deopt              !v    %137.1, DeadCall@0x556a1d455c00[Call#57], %137.0   !
BB499   <- [133]
  lgl$~-          %499.0 = CastType           d     dn %133.0
  lgl$-           %499.1 = Force!<wrapped>          %499.0,    <lgl$->
  lgl$-           %499.2 = Not                d     %499.1, elided
  lgl$#-          %499.3 = CheckTrueFalse     e     %499.2
  void                    Branch                   %499.3 -> BB135 (if true) | BB134 (if false)
BB500   <- [133]
  void                    Nop                !     
  val?^ | miss    %500.1 = %133.0
  dr              %500.2 = Typecheck@0x556a1d455c00[Type#222]
  goto BB129
BB150   <- [148]
  (cls|spec|blt)  %150.0 = LdFun              !v    %in%, e431.7
  fs              %150.1 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %150.2 = FrameState         R     0x556a20386200+961: [<blt any>, %150.0], env=e431.7, next=%150.1
  void                    Deopt              !v    %150.2, DeadCall@0x556a1e674db0[Call#20], %150.0   !
BB149   <- [148]
  (cls|spec|blt)  %149.0 = LdFun              !v    any, e431.7
  fs              %149.1 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %149.2 = FrameState         R     0x556a20386200+924: [%149.0], env=e431.7, next=%149.1
  void                    Deopt              !v    %149.2, DeadCall@0x556a1e674db0[Call#15], %149.0   !
BB491   <- [103]
  prom-           %491.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p89, e431.7
  val?^           %491.1 = CastType                 up %491.0
  val?^ | miss    %491.2 = LdVar              eR    class1, e431.7
  val?            %491.3 = Force!<wrapped>    !v    %491.2, e431.7   <str$+>
  prom-           %491.4 = MkArg                    %491.3, validObject[0x556a27c53340]_p88 (!refl), e431.7
  val?~           %491.5 = CastType                 up %491.4
  env             e491.6 = (MkEnv)            l     x=%491.5, table=%491.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  lgl$#-          %491.7 = IsEnvStub          R     , e491.6
  void                    Branch                   %491.7 -> BB493 (if true) | BB494 (if false)
BB492   <- [103]
  void                    Nop                !     
  val?^ | miss    %492.1 = %103.0
  dr              %492.2 = CallTarget@0x556a1e674db0[Call#10]
  goto BB99
BB237   <- [204]
  void                    Nop                !     
  lgl$-           %237.1 = %204.2
  goto BB208
BB207   <- [204]
  lgl$-           %207.0 = AsLogical          e     %457.3
  lgl$-           %207.1 = LAnd                     %204.2, %207.0
  lgl$-           %207.2 = %207.1
  goto BB208
BB135   <- [499]
  void                    Nop                !     
  int$-           %135.1 = %59.2
  goto BB59
BB134   <- [499]
  (cls|spec|blt)  %134.0 = LdFun              !v    anyStrings, e0.1
  fs              %134.1 = FrameState         R     0x556a27a52e10+3805: [%329.3, %329.4, %59.2, %134.0], env=e0.1
  void                    Deopt              !v    %134.1, DeadCall@0x556a1d455c00[Call#62], %134.0   !
BB493   <- [491]
  val?            %493.0 = Force!<lazy>       !vL   %491.1, e491.6   <val?->
  lgl$#-          %493.1 = IsType                   %493.0 isA val?-
  lgl$#-          %493.2 = IsEnvStub          R     , e491.6
  void                    Branch                   %493.2 -> BB501 (if true) | BB502 (if false)
BB494   <- [491]
  fs              %494.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %494.1 = FrameState         R     0x556a20386200+496: [], env=e431.7, next=%494.0
  env             e494.2 = (MkEnv)            l     x=%491.5, table=%491.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %494.3 = FrameState         R     0x556a1bc1ed40+9: [%491.3], env=e494.2, next=%494.1
  void                    Deopt              !v    %494.3, EnvStubMaterialized@0x556a1bc71cb0[Call#unknown], e491.6   !
BB208   <- [237, 207]
  lgl$-           %208.0 = Phi                      %207.2:BB207, %237.1:BB237
  lgl$-           %208.1 = %208.0
  lgl$#-          %208.2 = CheckTrueFalse     e     %208.1
  void                    Branch                   %208.2 -> BB236 (if true) | BB209 (if false)
BB501   <- [493]
  lgl$#-          %501.0 = IsType                   %491.3 isA val?+
  void                    Branch                   %501.0 -> BB503 (if true) | BB504 (if false)
BB502   <- [493]
  void                    Nop                !     
  env             e502.1 = e491.6
  dr              %502.2 = EnvStubMaterialized@0x556a1bc71cb0[Call#unknown]
  goto BB106
BB236   <- [208]
  val?^ | miss    %236.0 = LdVar              eR    character, e455.2
  lgl$#-          %236.1 = Identical                %236.0, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %236.1 -> BB485 (if true) | BB486 (if false)
BB209   <- [208]
  void                    Nop                !     
  val?            %209.1 = %457.3
  goto BB210
BB503   <- [501]
  val?+           %503.0 = CastType           d     dn %491.3   <(int|str)+>
  void                    Branch                   %493.1 -> BB505 (if true) | BB506 (if false)
BB504   <- [501]
  void                    Nop                !     
  val?            %504.1 = %491.3
  dr              %504.2 = Typecheck@0x556a1bc71cb0[Type#0]
  goto BB106
BB106   <- [502, 504, 506]
  val?^ | miss    %106.0 = Phi                      e502.1:BB502, %504.1:BB504, %506.1:BB506
  val?^ | miss    %106.1 = %106.0
  dr              %106.2 = Phi                      %502.2:BB502, %504.2:BB504, %506.2:BB506
  dr              %106.3 = %106.2
  fs              %106.4 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %106.5 = FrameState         R     0x556a20386200+496: [], env=e431.7, next=%106.4
  fs              %106.6 = FrameState         R     0x556a1bc1ed40+23: [%491.3, %493.0], env=e491.6, next=%106.5
  void                    Deopt              !v    %106.6, %106.3, %106.1   !
BB485   <- [236]
  str-            %485.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  str-            %485.1 = %485.0
  goto BB210
BB486   <- [236]
  fs              %486.0 = FrameState         R     0x556a27a52e10+6030: [%371.2, %371.3, %180.2, <blt c>, %453.1], env=e0.1
  fs              %486.1 = FrameState         R     0x556a1eed3370+32: [], env=e455.2, next=%486.0
  fs              %486.2 = FrameState         R     0x556a1b85b6d0+319: [%204.1], env=e457.2, next=%486.1
  void                    Deopt              !v    %486.2, CallTarget@0x556a274cefb8[Call#1], %236.0   !
BB210   <- [209, 485]
  val?            %210.0 = Phi                      %209.1:BB209, %485.1:BB485   <str->
  val?            %210.1 = %210.0
  lgl$#-          %210.2 = IsType                   %210.1 isA val?-
  void                    Branch                   %210.2 -> BB487 (if true) | BB488 (if false)
BB505   <- [503]
  val?-           %505.0 = CastType           d     dn %493.0
  val+            %505.1 = CallSafeBuiltin    wed   match(%503.0, %505.0, NA, nil)    <int$->
  lgl$#-          %505.2 = IsType                   %505.1 isA int$-
  void                    Branch                   %505.2 -> BB507 (if true) | BB508 (if false)
BB506   <- [503]
  void                    Nop                !     
  val?            %506.1 = %493.0
  dr              %506.2 = Typecheck@0x556a1bc71cb0[Type#1]
  goto BB106
BB487   <- [210]
  val?-           %487.0 = CastType           d     dn %210.1   <str->
  val+            %487.1 = CallSafeBuiltin    wed   c(%453.1, %487.0)    <str->
  void                    StVar              lW    errors, %487.1, e0.1
  val?^ | miss    %487.3 = LdVar              eR    length, e0.1
  lgl$#-          %487.4 = Identical                <blt length>, %487.3   <true>
  void                    Branch                   %487.4 -> BB489 (if true) | BB490 (if false)
BB488   <- [210]
  fs              %488.0 = FrameState         R     0x556a27a52e10+6030: [%371.2, %371.3, %180.2, <blt c>, %453.1], env=e0.1
  fs              %488.1 = FrameState         R     0x556a1eed3370+94: [%210.1], env=e455.2, next=%488.0
  void                    Deopt              !v    %488.1, Typecheck@0x556a1d455c00[Type#334], %210.1   !
BB507   <- [505]
  int$-           %507.0 = CastType           d     dn %505.1
  void                    StVar              lW    i, %507.0, e431.7
  val?^ | miss    %507.2 = LdVar              eR    is.na, e431.7
  lgl$#-          %507.3 = Identical                <blt is.na>, %507.2   <true>
  void                    Branch                   %507.3 -> BB509 (if true) | BB510 (if false)
BB508   <- [505]
  fs              %508.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %508.1 = FrameState         R     0x556a20386200+496: [], env=e431.7, next=%508.0
  fs              %508.2 = FrameState         R     0x556a1bc1ed40+69: [%505.1], env=e491.6, next=%508.1
  void                    Deopt              !v    %508.2, Typecheck@0x556a1e674db0[Type#32], %505.1   !
BB489   <- [487]
  (int|real)$-    %489.0 = CallSafeBuiltin    wed   length(%487.1)    <int$->
  lgl$#-          %489.1 = IsType                   %489.0 isA int$-
  void                    Branch                   %489.1 -> BB497 (if true) | BB498 (if false)
BB490   <- [487]
  fs              %490.0 = FrameState         R     0x556a27a52e10+6066: [%371.2, %371.3, %180.2], env=e0.1
  void                    Deopt              !v    %490.0, DeadBranchReached@0x556a1d455c00[Test#69], %487.4   !
BB509   <- [507]
  lgl$-           %509.0 = CallSafeBuiltin    wed   is.na(%507.0)    <lgl$->
  lgl$-           %509.1 = Not                d     %509.0, elided
  int-            %509.2 = Extract1_1D        wed   %507.0, %509.1, elided   <int->
  void                    StVar              lW    i, %509.2, e431.7
  val?^ | miss    %509.4 = LdVar              eR    length, e431.7
  lgl$#-          %509.5 = Identical                <blt length>, %509.4   <true>
  void                    Branch                   %509.5 -> BB511 (if true) | BB512 (if false)
BB510   <- [507]
  fs              %510.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %510.1 = FrameState         R     0x556a20386200+510: [], env=e431.7, next=%510.0
  void                    Deopt              !v    %510.1, DeadBranchReached@0x556a1e674db0[Test#3], %507.3   !
BB497   <- [489]
  int$-           %497.0 = CastType           d     dn %489.0
  lgl$#-          %497.1 = CheckTrueFalse     e     %497.0
  void                    Branch                   %497.1 -> BB218 (if true) | BB217 (if false)
BB498   <- [489]
  fs              %498.0 = FrameState         R     0x556a27a52e10+6157: [%371.2, %371.3, %180.2, %489.0], env=e0.1
  void                    Deopt              !v    %498.0, Typecheck@0x556a1d455c00[Type#338], %489.0   !
BB511   <- [509]
  (int|real)$-    %511.0 = CallSafeBuiltin    wed   length(%509.2)    <int$->
  lgl$#-          %511.1 = IsType                   %511.0 isA int$-
  void                    Branch                   %511.1 -> BB513 (if true) | BB514 (if false)
BB512   <- [509]
  fs              %512.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %512.1 = FrameState         R     0x556a20386200+668: [], env=e431.7, next=%512.0
  void                    Deopt              !v    %512.1, DeadBranchReached@0x556a1e674db0[Test#4], %509.5   !
BB218   <- [497]
  void                    Nop                !     
  goto BB219
BB217   <- [497]
  void                    Nop                !     
  goto BB195
BB513   <- [511]
  int$-           %513.0 = CastType           d     dn %511.0
  lgl$#-          %513.1 = CheckTrueFalse     e     %513.0
  void                    Branch                   %513.1 -> BB142 (if true) | BB116 (if false)
BB514   <- [511]
  fs              %514.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %514.1 = FrameState         R     0x556a20386200+759: [%511.0], env=e431.7, next=%514.0
  void                    Deopt              !v    %514.1, Typecheck@0x556a1e674db0[Type#42], %511.0   !
BB142   <- [513]
  val?^ | miss    %142.0 = LdVar              eR    subs, e431.7
  val?            %142.1 = Force!             !v    %142.0, e431.7   <val?_>
  lgl$#-          %142.2 = IsType                   %142.1 isA val+   <@?>
  void                    Branch                   %142.2 -> BB145 (if true) | BB143 (if false)
BB116   <- [513]
  void                    Nop                !     
  lgl$#-          %116.1 = false
  goto BB117
BB145   <- [142]
  val?^ | miss    %145.0 = LdVar              eR    i, e431.7
  val?            %145.1 = Force!             !v    %145.0, e431.7   <val?_>
  lgl$#-          %145.2 = IsType                   %145.1 isA val?+
  void                    Branch                   %145.2 -> BB515 (if true) | BB516 (if false)
BB143   <- [142]
  prom-           %143.0 = MkArg                    unboundValue, validObject[0x556a27c53340]_p91, e431.7
  prom-           %143.1 = %143.0
  goto BB144
BB117   <- [116, 144]
  val?            %117.0 = Phi                      %116.1:BB116, %144.3:BB144
  val?            %117.1 = %117.0
  val?            %117.2 = %117.1
  goto BB118
BB515   <- [145]
  val?+           %515.0 = CastType           d     dn %145.1   <val?_>
  val?            %515.1 = Extract1_1D        wed   %515.0, 1L, elided   <val?_>
  val?            %515.2 = %515.1
  goto BB144
BB516   <- [145]
  fs              %516.0 = FrameState         R     0x556a27a52e10+3505: [%329.3, %329.4, %59.2], env=e0.1
  fs              %516.1 = FrameState         R     0x556a20386200+835: [%142.1, %145.1], env=e431.7, next=%516.0
  void                    Deopt              !v    %516.1, Typecheck@0x556a1e674db0[Type#46], %145.1   !
BB144   <- [143, 515]
  val?            %144.0 = Phi                      %515.2:BB515, %143.1:BB143
  val?            %144.1 = %144.0
  val?            %144.2 = Extract2_1D        !v    %142.1, %144.1, e431.7   <val?_>
  val?            %144.3 = %144.2
  goto BB117
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p13, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x556a2799f100>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p11, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p12, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <(str|cls)->
  val?            %13.4 = %13.3
  goto BB11
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(str|cls)->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x556a1b40a748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(str|cls)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p25, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x556a2799f100>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x556a27c53340]_p23, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x556a27c53340]_p24, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?>
  val?            %13.4 = %13.3
  goto BB11
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x556a1b40a748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(lgl|other)>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     validityMethod, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p55, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as, <0x556a1e2a7df8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p56, e0.0
  prom-           %0.3  = MkArg                    unboundValue, validObject[0x556a27c53340]_p57, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <other>
  void                    Return             l     %0.4
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 63:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p64, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|cls)->
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p69, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 69:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|cls)->
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, <0x556a1c5b3cd0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p74, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <other>
  void                    Return             l     %0.3
Prom 74:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 79:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 80:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 81:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 82:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 83:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 84:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 85:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 86:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x556a1b40a748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p87, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 87:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 88:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 89:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x556a1b40a470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x556a27c53340]_p90, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 90:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 91:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 92:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 96:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .requirePackage, <0x556a1b92e9b8>, e0.0
  val?            %0.2  = Call               !     %0.1("methods") e0.0   <env->
  void                    Return             l     %0.2
Prom 97:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 98:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 99:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 100:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 101:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 102:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ validObject[0x556a27c53340]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
