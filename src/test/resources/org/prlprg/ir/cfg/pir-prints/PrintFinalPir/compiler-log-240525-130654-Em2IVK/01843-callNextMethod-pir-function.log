
┌──────────────────────────────────────────────────────────────────────────────┐
│ callNextMethod[0x556a276d9870]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:  Eager                                                           │
├────── Final PIR Version
callNextMethod[0x556a276d9870]
BB0
  val?^ | miss    %0.0  = LdVar              eR    as.name, <env 0x556a1ba11378>
  lgl$#-          %0.1  = Identical                %0.0, function(x) <(rir::DispatchTable*)0x556a1de508|...
  void                    Branch                   %0.1 -> BB68 (if true) | BB69 (if false)
BB68   <- [0]
  val             %68.0 = CallSafeBuiltin    wed   as.vector(".nextMethod", "symbol")    <sym->
  val?^ | miss    %68.1 = LdVar              eR    sys.parent, <env 0x556a1ba11378>
  lgl$#-          %68.2 = Identical                %68.1, function(n=1L) <(rir::DispatchTable*)0x556a1d5|...
  void                    Branch                   %68.2 -> BB70 (if true) | BB71 (if false)
BB69   <- [0]
  env             e69.0 = (MkEnv)            l     ...(miss)=missingArg, parent=<env 0x556a1ba11378>, context 1
  fs              %69.1 = FrameState         R     0x556a275df430+0: [], env=e69.0
  void                    Deopt              !v    %69.1, CallTarget@0x556a275ddd58[Call#0], %0.0
BB70   <- [68]
  env             e70.0 = MkEnv              l     ...(miss)=missingArg, nextMethod=nil, method=nil, dotNextMethod=%68.0, parent=<env 0x556a1ba11378>, context 1
  val?            %70.1 = StaticCall         !v    sys.parent[0x556a1f02f290](1) e70.0   <int$->
  lgl$#-          %70.2 = IsType                   %70.1 isA int$-
  void                    Branch                   %70.2 -> BB72 (if true) | BB73 (if false)
BB71   <- [68]
  env             e71.0 = (MkEnv)            l     ...(miss)=missingArg, nextMethod=nil, method=nil, parent=<env 0x556a1ba11378>, context 1
  fs              %71.1 = FrameState         R     0x556a275df430+58: [], env=e71.0
  env             e71.2 = (MkEnv)            l     x=".nextMethod", parent=R_BaseNamespace, context 0
  fs              %71.3 = FrameState         R     0x556a1d6f8320+33: [%68.0], env=e71.2, next=%71.1
  void                    Deopt              !v    %71.3, CallTarget@0x556a275ddd58[Call#1], %68.1
BB72   <- [70]
  int$-           %72.0 = CastType           d     dn %70.1
  void                    StVar              lW    parent, %72.0, e70.0
  val?^ | miss    %72.2 = LdVar              eR    sys.function, e70.0
  lgl$#-          %72.3 = Identical                %72.2, function(which=0L) <(rir::DispatchTable*)0x556|...
  void                    Branch                   %72.3 -> BB74 (if true) | BB75 (if false)
BB73   <- [70]
  fs              %73.0 = FrameState         R     0x556a275df430+104: [%70.1], env=e70.0
  void                    Deopt              !v    %73.0, Typecheck@0x556a275ddd58[Type#1], %70.1   !
BB74   <- [72]
  prom-           %74.0 = MkArg                    %72.0, callNextMethod[0x556a276d9870]_p0 (!refl), 
  val?            %74.1 = StaticCall         !v    sys.function[0x556a22927070](%74.0) e70.0   <cls>
  void                    StVar              lW    maybeMethod, %74.1, e70.0
  void                    StVar              lW    methodFun, %74.1, e70.0
  val?^ | miss    %74.4 = LdVar              eR    is, e70.0
  lgl$#-          %74.5 = Identical                %74.4, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %74.5 -> BB76 (if true) | BB77 (if false)
BB75   <- [72]
  fs              %75.0 = FrameState         R     0x556a275df430+118: [], env=e70.0
  void                    Deopt              !v    %75.0, CallTarget@0x556a275ddd58[Call#2], %72.2   !
BB76   <- [74]
  prom-           %76.0 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p1 (!refl), e70.0
  val?            %76.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%76.0, "MethodDefinition") e70.0   <lgl$->
  lgl$#-          %76.2 = IsType                   %76.1 isA lgl$-
  void                    Branch                   %76.2 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  fs              %77.0 = FrameState         R     0x556a275df430+175: [], env=e70.0
  void                    Deopt              !v    %77.0, CallTarget@0x556a275ddd58[Call#3], %74.4   !
BB78   <- [76]
  lgl$-           %78.0 = CastType           d     dn %76.1
  lgl$#-          %78.1 = CheckTrueFalse     e     %78.0
  void                    Branch                   %78.1 -> BB14 (if true) | BB13 (if false)
BB79   <- [76]
  void                    Nop                !     
  val?            %79.1 = %76.1
  dr              %79.2 = Typecheck@0x556a275ddd58[Type#5]
  goto BB11
BB14   <- [78]
  val?^ | miss    %14.0 = LdVar              eR    parent.frame, e70.0
  lgl$#-          %14.1 = Identical                %14.0, function(n=1) <(rir::DispatchTable*)0x556a1d2a|...
  void                    Branch                   %14.1 -> BB80 (if true) | BB81 (if false)
BB13   <- [78]
  (cls|spec|blt)  %13.0 = LdFun              !v    parent.frame, e70.0
  fs              %13.1 = FrameState         R     0x556a275df430+228: [%13.0], env=e70.0
  void                    Deopt              !v    %13.1, DeadCall@0x556a275ddd58[Call#4], %13.0   !
BB11   <- [79, 81]
  val?^ | miss    %11.0 = Phi                      %79.1:BB79, %81.1:BB81
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %79.2:BB79, %81.2:BB81
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x556a275df430+212: [%76.1], env=e70.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB80   <- [14]
  val?            %80.0 = StaticCall         !v    parent.frame[0x556a27619f70](1) e70.0   <env->
  void                    StVar              lW    methodEnv, %80.0, e70.0
  void                    StVar              lW    callEnv, %80.0, e70.0
  val?^ | miss    %80.3 = LdVar              eR    sys.call, e70.0
  lgl$#-          %80.4 = Identical                %80.3, function(which=0L) <(rir::DispatchTable*)0x556|...
  void                    Branch                   %80.4 -> BB82 (if true) | BB83 (if false)
BB81   <- [14]
  void                    Nop                !     
  val?^ | miss    %81.1 = %14.0
  dr              %81.2 = CallTarget@0x556a275ddd58[Call#11]
  goto BB11
BB82   <- [80]
  val?^ | miss    %82.0 = LdVar              eR    parent, e70.0
  val?            %82.1 = Force!<value>      !v    %82.0, e70.0   <int$->
  prom-           %82.2 = MkArg                    %82.1, callNextMethod[0x556a276d9870]_p2 (!refl), 
  val?            %82.3 = StaticCall         !v    sys.call[0x556a1f7d5880](%82.2) e70.0   <code->
  void                    StVar              lW    mcall, %82.3, e70.0
  val?^ | miss    %82.5 = LdVar              eR    parent.frame, e70.0
  lgl$#-          %82.6 = Identical                %82.5, function(n=1) <(rir::DispatchTable*)0x556a1d2a|...
  void                    Branch                   %82.6 -> BB84 (if true) | BB85 (if false)
BB83   <- [80]
  fs              %83.0 = FrameState         R     0x556a275df430+530: [], env=e70.0
  void                    Deopt              !v    %83.0, CallTarget@0x556a275ddd58[Call#12], %80.3   !
BB84   <- [82]
  val?            %84.0 = StaticCall         !v    parent.frame[0x556a27619f70](2) e70.0   <env->
  void                    StVar              lW    dotsenv, %84.0, e70.0
  void                    StVar              lW    i, 1L, e70.0
  (cls|spec|blt)  %84.3 = LdFun              !v    $, <0x556a1b409c10>, e70.0
  prom-           %84.4 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p3, e70.0
  prom-           %84.5 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p4, e70.0
  val?            %84.6 = Call               !v    %84.3(%84.4, %84.5) e70.0   <cls>
  lgl$-           %84.7 = Is                       %84.6, NULL
  void                    StVar              lW    method, %84.6, e70.0
  lgl$-           %84.9 = Not                d     %84.7, elided
  lgl$#-          %84.10 = CheckTrueFalse     e     %84.9
  void                    Branch                   %84.10 -> BB20 (if true) | BB19 (if false)
BB85   <- [82]
  fs              %85.0 = FrameState         R     0x556a275df430+576: [], env=e70.0
  void                    Deopt              !v    %85.0, CallTarget@0x556a275ddd58[Call#13], %82.5   !
BB20   <- [84]
  (cls|spec|blt)  %20.0 = LdFun              !v    $, <0x556a1b409c10>, e70.0
  prom-           %20.1 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p5, e70.0
  prom-           %20.2 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p6, e70.0
  val?            %20.3 = Call               !v    %20.0(%20.1, %20.2) e70.0   <nil->
  void                    StVar              lW    nextMethod, %20.3, e70.0
  (cls|spec|blt)  %20.5 = LdFun              !v    $, <0x556a1b409c10>, e70.0
  prom-           %20.6 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p7, e70.0
  prom-           %20.7 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p8, e70.0
  val?            %20.8 = Call               !v    %20.5(%20.6, %20.7) e70.0   <str$+>
  void                    StVar              lW    f, %20.8, e70.0
  val?^ | miss    %20.10 = LdVar              eR    is, e70.0
  lgl$#-          %20.11 = Identical                %20.10, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %20.11 -> BB86 (if true) | BB87 (if false)
BB19   <- [84]
  (cls|spec|blt)  %19.0 = LdFun              !v    identical, e70.0
  fs              %19.1 = FrameState         R     0x556a275df430+707: [%19.0], env=e70.0
  void                    Deopt              !v    %19.1, DeadCall@0x556a275ddd58[Call#15], %19.0   !
BB86   <- [20]
  prom-           %86.0 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p9, e70.0
  val?            %86.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%86.0, "MethodDefinition") e70.0   <lgl$->
  lgl$#-          %86.2 = IsType                   %86.1 isA lgl$-
  void                    Branch                   %86.2 -> BB88 (if true) | BB89 (if false)
BB87   <- [20]
  fs              %87.0 = FrameState         R     0x556a275df430+1576: [], env=e70.0
  void                    Deopt              !v    %87.0, CallTarget@0x556a275ddd58[Call#31], %20.10   !
BB88   <- [86]
  lgl$-           %88.0 = CastType           d     dn %86.1
  lgl$#-          %88.1 = CheckTrueFalse     e     %88.0
  void                    Branch                   %88.1 -> BB30 (if true) | BB25 (if false)
BB89   <- [86]
  fs              %89.0 = FrameState         R     0x556a275df430+1613: [%86.1], env=e70.0
  void                    Deopt              !v    %89.0, Typecheck@0x556a275ddd58[Type#67], %86.1   !
BB30   <- [88]
  val?^ | miss    %30.0 = LdVar              eR    nextMethod, e70.0
  val?            %30.1 = Force!<value>      !v    %30.0, e70.0   <nil->
  lgl$-           %30.2 = Is                       %30.1, NULL
  lgl$#-          %30.3 = CheckTrueFalse     e     %30.2
  void                    Branch                   %30.3 -> BB55 (if true) | BB33 (if false)
BB25   <- [88]
  val?^ | miss    %25.0 = LdVar              eR    method, e70.0
  val?            %25.1 = Force!             !v    %25.0, e70.0   <val?_>
  lgl$-           %25.2 = Is                       %25.1, NULL
  lgl$#-          %25.3 = CheckTrueFalse     e     %25.2
  void                    Branch                   %25.3 -> BB27 (if true) | BB26 (if false)
BB55   <- [30]
  val?^ | miss    %55.0 = LdVar              eR    is, e70.0
  lgl$#-          %55.1 = Identical                %55.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %55.1 -> BB90 (if true) | BB91 (if false)
BB33   <- [30]
  void                    Nop                !     
  goto BB34
BB27   <- [25]
  val?^ | miss    %27.0 = LdVar              eR    nextMethod, e70.0
  val?            %27.1 = Force!             !v    %27.0, e70.0   <val?_>
  lgl$-           %27.2 = Is                       %27.1, NULL
  lgl$#-          %27.3 = CheckTrueFalse     e     %27.2
  void                    Branch                   %27.3 -> BB29 (if true) | BB28 (if false)
BB26   <- [25]
  (cls|spec|blt)  %26.0 = LdFun              !v    stop, e70.0
  fs              %26.1 = FrameState         R     0x556a275df430+1654: [%26.0], env=e70.0
  void                    Deopt              !v    %26.1, DeadCall@0x556a275ddd58[Call#32], %26.0   !
BB90   <- [55]
  prom-           %90.0 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p15, e70.0
  val?            %90.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%90.0, "MethodWithNext") e70.0   <lgl$->
  lgl$#-          %90.2 = IsType                   %90.1 isA lgl$-
  void                    Branch                   %90.2 -> BB92 (if true) | BB93 (if false)
BB91   <- [55]
  fs              %91.0 = FrameState         R     0x556a275df430+2193: [%30.1], env=e70.0
  void                    Deopt              !v    %91.0, CallTarget@0x556a275ddd58[Call#44], %55.0   !
BB34   <- [33, 102]
  val?^ | miss    %34.0 = LdVar              eR    nextMethod, e70.0
  val?            %34.1 = Force!<value>      !v    %34.0, e70.0   <cls>
  lgl$-           %34.2 = Is                       %34.1, NULL
  lgl$#-          %34.3 = CheckTrueFalse     e     %34.2
  void                    Branch                   %34.3 -> BB54 (if true) | BB37 (if false)
BB29   <- [27]
  (cls|spec|blt)  %29.0 = LdFun              !v    stop, e70.0
  fs              %29.1 = FrameState         R     0x556a275df430+1735: [%29.0], env=e70.0
  void                    Deopt              !v    %29.1, DeadCall@0x556a275ddd58[Call#36], %29.0   !
BB28   <- [27]
  val?^ | miss    %28.0 = LdVar              eR    nextMethod, e70.0
  val?            %28.1 = Force!             !v    %28.0, e70.0   <val?_>
  void                    StVar              lW    method, %28.1, e70.0
  (cls|spec|blt)  %28.3 = LdFun              !v    is, e70.0
  fs              %28.4 = FrameState         R     0x556a275df430+1791: [%28.3], env=e70.0
  void                    Deopt              !v    %28.4, DeadCall@0x556a275ddd58[Call#37], %28.3   !
BB92   <- [90]
  lgl$-           %92.0 = CastType           d     dn %90.1
  lgl$-           %92.1 = Not                d     %92.0, elided
  lgl$#-          %92.2 = CheckTrueFalse     e     %92.1
  void                    Branch                   %92.2 -> BB64 (if true) | BB58 (if false)
BB93   <- [90]
  void                    Nop                !     
  val?            %93.1 = %90.1
  dr              %93.2 = Typecheck@0x556a275ddd58[Type#94]
  goto BB56
BB54   <- [34]
  (cls|spec|blt)  %54.0 = LdFun              !v    stop, e70.0
  fs              %54.1 = FrameState         R     0x556a275df430+2605: [%54.0], env=e70.0
  void                    Deopt              !v    %54.1, DeadCall@0x556a275ddd58[Call#52], %54.0   !
BB37   <- [34]
  val?^ | miss    %37.0 = LdVar              eR    is.na, e70.0
  lgl$#-          %37.1 = Identical                <blt is.na>, %37.0   <true>
  void                    Branch                   %37.1 -> BB98 (if true) | BB99 (if false)
BB64   <- [92]
  val?^ | miss    %64.0 = LdVar              eR    addNextMethod, e70.0
  lgl$#-          %64.1 = Identical                %64.0, function(method, f="<unknown>", mlist, optiona|...
  void                    Branch                   %64.1 -> BB94 (if true) | BB95 (if false)
BB58   <- [92]
  void                    Nop                !     
  goto BB59
BB56   <- [93, 95]
  val?^ | miss    %56.0 = Phi                      %93.1:BB93, %95.1:BB95
  val?^ | miss    %56.1 = %56.0
  dr              %56.2 = Phi                      %93.2:BB93, %95.2:BB95
  dr              %56.3 = %56.2
  fs              %56.4 = FrameState         R     0x556a275df430+2251: [%90.1], env=e70.0
  void                    Deopt              !v    %56.4, %56.3, %56.1   !
BB98   <- [37]
  val?^ | miss    %98.0 = LdVar              eR    match, e70.0
  lgl$#-          %98.1 = Identical                %98.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %98.1 -> BB104 (if true) | BB105 (if false)
BB99   <- [37]
  void                    Nop                !     
  lgl$#-          %99.1 = %37.1
  dr              %99.2 = DeadBranchReached@0x556a275ddd58[Test#6]
  goto BB35
BB94   <- [64]
  prom-           %94.0 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p22, e70.0
  prom-           %94.1 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p23, e70.0
  prom-           %94.2 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p24, e70.0
  val?            %94.3 = StaticCall         !v    addNextMethod[0x556a2108fa30](%94.0, %94.1, missingArg, missingArg, %94.2) { 0 1 4n } e70.0   <cls>
  void                    StVar              lW    method, %94.3, e70.0
  val?^ | miss    %94.5 = LdVar              eR    cacheMethod, e70.0
  lgl$#-          %94.6 = Identical                %94.5, function(f, sig, def, args=names(sig), fdef, i|...
  void                    Branch                   %94.6 -> BB96 (if true) | BB97 (if false)
BB95   <- [64]
  void                    Nop                !     
  val?^ | miss    %95.1 = %64.0
  dr              %95.2 = CallTarget@0x556a275ddd58[Call#45]
  goto BB56
BB59   <- [58, 96]
  (cls|spec|blt)  %59.0 = LdFun              !v    @, <0x556a1b409bd8>, e70.0
  prom-           %59.1 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p16, e70.0
  prom-           %59.2 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p17, e70.0
  val?            %59.3 = Call               !v    %59.0(%59.1, %59.2) e70.0   <cls>
  void                    StVar              lW    nextMethod, %59.3, e70.0
  val?^ | miss    %59.5 = LdVar              eR    assign, e70.0
  lgl$#-          %59.6 = Identical                %59.5, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %59.6 -> BB100 (if true) | BB101 (if false)
BB104   <- [98]
  val?^ | miss    %104.0 = LdVar              eR    f, e70.0
  lgl$#-          %104.1 = IsType                   %104.0 isA val?~+ | miss
  void                    Branch                   %104.1 -> BB106 (if true) | BB107 (if false)
BB105   <- [98]
  void                    Nop                !     
  val?^ | miss    %105.1 = %98.0
  dr              %105.2 = CallTarget@0x556a275ddd58[Call#55]
  goto BB35
BB35   <- [99, 105, 107]
  val?^ | miss    %35.0 = Phi                      %99.1:BB99, %105.1:BB105, %107.1:BB107
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %99.2:BB99, %105.2:BB105, %107.2:BB107
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x556a275df430+2579: [%34.1], env=e70.0
  void                    Deopt              !v    %35.4, %35.3, %35.1   !
BB96   <- [94]
  prom-           %96.0 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p25, e70.0
  prom-           %96.1 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p26, e70.0
  prom-           %96.2 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p29 (!refl), e70.0
  prom-           %96.3 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p30, e70.0
  val?            %96.4 = StaticCall         !v    cacheMethod[0x556a222d5b30](%96.0, %96.1, %96.2, missingArg, %96.3, true) { 0 1 2 4n 5n } e70.0
  goto BB59
BB97   <- [94]
  fs              %97.0 = FrameState         R     0x556a275df430+2336: [], env=e70.0
  void                    Deopt              !v    %97.0, CallTarget@0x556a275ddd58[Call#46], %94.5   !
BB100   <- [59]
  prom-           %100.0 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p18 (!refl), e70.0
  prom-           %100.1 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p19, e70.0
  val?            %100.2 = StaticCall         !v    assign[0x556a273c27c0](".nextMethod", %100.0, missingArg, %100.1) { 0 1 3n } e70.0
  val?^ | miss    %100.3 = LdVar              eR    assign, e70.0
  lgl$#-          %100.4 = Identical                %100.3, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %100.4 -> BB102 (if true) | BB103 (if false)
BB101   <- [59]
  fs              %101.0 = FrameState         R     0x556a275df430+2460: [], env=e70.0
  void                    Deopt              !v    %101.0, CallTarget@0x556a275ddd58[Call#50], %59.5   !
BB106   <- [104]
  val?~+ | miss   %106.0 = CastType           d     dn %104.0
  val?+           %106.1 = Force!<value>            %106.0,    <str$+>
  val?^ | miss    %106.2 = LdVar              eR    .BasicSubsetFunctions, e70.0
  val?            %106.3 = Force!<wrapped>    !v    %106.2, e70.0   <str->
  lgl$#-          %106.4 = IsType                   %106.3 isA val?+
  void                    Branch                   %106.4 -> BB108 (if true) | BB109 (if false)
BB107   <- [104]
  void                    Nop                !     
  val?^ | miss    %107.1 = %104.0
  dr              %107.2 = Typecheck@0x556a275ddd58[Type#117]
  goto BB35
BB102   <- [100]
  prom-           %102.0 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p20, e70.0
  prom-           %102.1 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p21, e70.0
  val?            %102.2 = StaticCall         !v    assign[0x556a273c27c0](".Generic", %102.0, missingArg, %102.1) { 0 1 3n } e70.0
  goto BB34
BB103   <- [100]
  fs              %103.0 = FrameState         R     0x556a275df430+2514: [%100.2], env=e70.0
  void                    Deopt              !v    %103.0, CallTarget@0x556a275ddd58[Call#51], %100.3   !
BB108   <- [106]
  val?+           %108.0 = CastType           d     dn %106.3   <str->
  val+            %108.1 = CallSafeBuiltin    wed   match(%106.1, %108.0, NA, nil)    <int$->
  lgl$#-          %108.2 = IsType                   %108.1 isA int$-
  void                    Branch                   %108.2 -> BB110 (if true) | BB111 (if false)
BB109   <- [106]
  fs              %109.0 = FrameState         R     0x556a275df430+2730: [<blt is.na>], env=e70.0
  prom-           %109.1 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p11, e70.0
  val?^           %109.2 = CastType                 up %109.1
  prom-           %109.3 = MkArg                    %106.1, callNextMethod[0x556a276d9870]_p10 (!refl), e70.0
  val?~           %109.4 = CastType                 up %109.3
  env             e109.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%109.2, x=%109.4, parent=R_BaseNamespace, context 0
  fs              %109.6 = FrameState         R     0x556a1bc1ed40+23: [%106.1], env=e109.5, next=%109.0
  fs              %109.7 = FrameState         R     0x556a1f909d80+5(pr): [%106.3], env=e70.0, next=%109.6
  void                    Deopt              !v    %109.7, Typecheck@0x556a1bc71cb0[Type#1], %106.3   !
BB110   <- [108]
  int$-           %110.0 = CastType           d     dn %108.1
  lgl$-           %110.1 = CallSafeBuiltin    wed   is.na(%110.0)    <lgl$->
  lgl$-           %110.2 = Not                d     %110.1, elided
  void                    StVar              lW    subsetCase, %110.2, e70.0
  val?^ | miss    %110.4 = LdVar              eR    nargs, e70.0
  lgl$#-          %110.5 = Identical                <blt nargs>, %110.4   <true>
  void                    Branch                   %110.5 -> BB112 (if true) | BB113 (if false)
BB111   <- [108]
  fs              %111.0 = FrameState         R     0x556a275df430+2730: [<blt is.na>], env=e70.0
  prom-           %111.1 = MkArg                    %108.0, callNextMethod[0x556a276d9870]_p11 (!refl), e70.0
  val?~           %111.2 = CastType                 up %111.1
  prom-           %111.3 = MkArg                    %106.1, callNextMethod[0x556a276d9870]_p10 (!refl), e70.0
  val?~           %111.4 = CastType                 up %111.3
  env             e111.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%111.2, x=%111.4, parent=R_BaseNamespace, context 0
  fs              %111.6 = FrameState         R     0x556a1bc1ed40+69: [%108.1], env=e111.5, next=%111.0
  void                    Deopt              !v    %111.6, Typecheck@0x556a275ddd58[Type#119], %108.1   !
BB112   <- [110]
  val?            %112.0 = CallBuiltin        !v    nargs() e70.0   <int$->
  lgl$#-          %112.1 = IsType                   %112.0 isA int$-
  void                    Branch                   %112.1 -> BB114 (if true) | BB115 (if false)
BB113   <- [110]
  fs              %113.0 = FrameState         R     0x556a275df430+2767: [], env=e70.0
  void                    Deopt              !v    %113.0, DeadBranchReached@0x556a275ddd58[Test#7], %110.5   !
BB114   <- [112]
  int$-           %114.0 = CastType           d     dn %112.0
  lgl$-           %114.1 = Gt                 d     %114.0, 0, elided   <lgl$->
  lgl$#-          %114.2 = CheckTrueFalse     e     %114.1
  void                    Branch                   %114.2 -> BB53 (if true) | BB46 (if false)
BB115   <- [112]
  void                    Nop                !     
  val?            %115.1 = %112.0
  dr              %115.2 = Typecheck@0x556a275ddd58[Type#121]
  goto BB44
BB53   <- [114]
  (cls|spec|blt)  %53.0 = LdFun              !v    sys.call, e70.0
  fs              %53.1 = FrameState         R     0x556a275df430+4664: [%53.0], env=e70.0
  void                    Deopt              !v    %53.1, DeadCall@0x556a275ddd58[Call#82], %53.0   !
BB46   <- [114]
  val?^ | miss    %46.0 = LdVar              eR    subsetCase, e70.0
  lgl$#-          %46.1 = IsType                   %46.0 isA lgl$-
  void                    Branch                   %46.1 -> BB116 (if true) | BB117 (if false)
BB44   <- [115, 117, 119]
  val?^ | miss    %44.0 = Phi                      %115.1:BB115, %117.1:BB117, %119.1:BB119
  val?^ | miss    %44.1 = %44.0
  dr              %44.2 = Phi                      %115.2:BB115, %117.2:BB117, %119.2:BB119
  dr              %44.3 = %44.2
  fs              %44.4 = FrameState         R     0x556a275df430+2839: [%112.0], env=e70.0
  void                    Deopt              !v    %44.4, %44.3, %44.1   !
BB116   <- [46]
  lgl$-           %116.0 = CastType           d     dn %46.0
  lgl$#-          %116.1 = CheckTrueFalse     e     %116.0
  void                    Branch                   %116.1 -> BB52 (if true) | BB47 (if false)
BB117   <- [46]
  void                    Nop                !     
  val?^ | miss    %117.1 = %46.0
  dr              %117.2 = Typecheck@0x556a275ddd58[Type#123]
  goto BB44
BB52   <- [116]
  (cls|spec|blt)  %52.0 = LdFun              !v    as.list, e70.0
  fs              %52.1 = FrameState         R     0x556a275df430+2969: [%52.0], env=e70.0
  void                    Deopt              !v    %52.1, DeadCall@0x556a275ddd58[Call#58], %52.0   !
BB47   <- [116]
  val?^ | miss    %47.0 = LdVar              eR    match.call, e70.0
  lgl$#-          %47.1 = Identical                %47.0, function(definition=sys.function(sys.parent())|...
  void                    Branch                   %47.1 -> BB118 (if true) | BB119 (if false)
BB118   <- [47]
  prom-           %118.0 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p12, e70.0
  prom-           %118.1 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p13, e70.0
  prom-           %118.2 = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p14, e70.0
  val?            %118.3 = StaticCall         !v    match.call[0x556a224f39b0](%118.0, %118.1, false, %118.2) { 0 1 2n 3n } e70.0   <code->
  void                    StVar              lW    call, %118.3, e70.0
  val?^ | miss    %118.5 = LdVar              eR    .Call, e70.0
  lgl$#-          %118.6 = Identical                <blt .Call>, %118.5   <true>
  void                    Branch                   %118.6 -> BB120 (if true) | BB121 (if false)
BB119   <- [47]
  void                    Nop                !     
  val?^ | miss    %119.1 = %47.0
  dr              %119.2 = CallTarget@0x556a275ddd58[Call#57]
  goto BB44
BB120   <- [118]
  val?^ | miss    %120.0 = LdVar              eR    C_R_nextMethodCall, e70.0
  val?            %120.1 = Force!<value>      !v    %120.0, e70.0   <vec>
  val?^ | miss    %120.2 = LdVar              eR    call, e70.0
  lgl$#-          %120.3 = IsType                   %120.2 isA val?~- | miss
  void                    Branch                   %120.3 -> BB122 (if true) | BB123 (if false)
BB121   <- [118]
  fs              %121.0 = FrameState         R     0x556a275df430+2959: [], env=e70.0
  void                    Deopt              !v    %121.0, DeadBranchReached@0x556a275ddd58[Test#17], %118.6   !
BB122   <- [120]
  val?~- | miss   %122.0 = CastType           d     dn %120.2
  val?-           %122.1 = Force!<value>            %122.0,    <code->
  val?^ | miss    %122.2 = LdVar              eR    callEnv, e70.0
  lgl$#-          %122.3 = IsType                   %122.2 isA val?~- | miss
  void                    Branch                   %122.3 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?^ | miss    %123.1 = %120.2
  dr              %123.2 = Typecheck@0x556a275ddd58[Type#194]
  goto BB50
BB124   <- [122]
  val?~- | miss   %124.0 = CastType           d     dn %122.2
  val?-           %124.1 = Force!<value>            %124.0,    <env->
  val?            %124.2 = CallBuiltin        !     .Call(%120.1, %122.1, %124.1) e70.0   <other>
  void                    Return             l     %124.2
BB125   <- [122]
  void                    Nop                !     
  val?^ | miss    %125.1 = %122.2
  dr              %125.2 = Typecheck@0x556a275ddd58[Type#195]
  goto BB50
BB50   <- [123, 125]
  val?^ | miss    %50.0 = Phi                      %123.1:BB123, %125.1:BB125
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %123.2:BB123, %125.2:BB125
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x556a275df430+4599: [<blt .Call>, %120.1], env=e70.0
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parent, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    maybeMethod, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parent, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methodEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Method, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    callEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .nextMethod, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methodEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    method, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BasicSubsetFunctions, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methodFun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mcall, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dotsenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    method, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    method, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nextMethod, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nextMethod, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    callEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    callEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    method, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methodEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x556a1b409bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p27, e0.0
  prom-           %0.3  = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p28, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$>
  void                    Return             l     %0.4
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    method, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    target, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    method, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getGeneric, <0x556a1bbea8d8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, callNextMethod[0x556a276d9870]_p31, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <cls>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ callNextMethod[0x556a276d9870]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
