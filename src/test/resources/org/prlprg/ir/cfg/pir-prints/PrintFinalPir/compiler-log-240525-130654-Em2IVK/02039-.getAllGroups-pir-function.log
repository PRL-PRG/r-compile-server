
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getAllGroups[0x556a27f4cc90]                                                │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
.getAllGroups[0x556a27f4cc90]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    length, <env 0x556a1ba11378>
  lgl$#-          %0.2  = Identical                <blt length>, %0.1   <true>
  void                    Branch                   %0.2 -> BB43 (if true) | BB44 (if false)
BB43   <- [0]
  env             e43.0 = MkEnv              l     funs=%0.0, parent=<env 0x556a1ba11378>, context 1
  val?            %43.1 = Force!<lazy>       !v    %0.0, e43.0   <vec$->
  lgl$#-          %43.2 = IsType                   %43.1 isA val?-
  void                    Branch                   %43.2 -> BB45 (if true) | BB46 (if false)
BB44   <- [0]
  env             e44.0 = (MkEnv)            l     funs=%0.0, parent=<env 0x556a1ba11378>, context 1
  fs              %44.1 = FrameState         R     0x556a27369010+0: [], env=e44.0
  void                    Deopt              !v    %44.1, DeadBranchReached@0x556a20e1ce38[Test#0], %0.2
BB45   <- [43]
  val?-           %45.0 = CastType           d     dn %43.1   <vec$->
  (int|real)$-    %45.1 = CallSafeBuiltin    wed   length(%45.0)    <int$->
  lgl$#-          %45.2 = IsType                   %45.1 isA int$-
  void                    Branch                   %45.2 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x556a27369010+69: [<blt length>, %43.1], env=e43.0
  void                    Deopt              !v    %46.0, Typecheck@0x556a20e1ce38[Type#1], %43.1   !
BB47   <- [45]
  int$-           %47.0 = CastType           d     dn %45.1
  void                    StVar              lW    start, %47.0, e43.0
  val?^ | miss    %47.2 = LdVar              eR    seq_along, e43.0
  lgl$#-          %47.3 = Identical                <blt seq_along>, %47.2   <true>
  void                    Branch                   %47.3 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x556a27369010+91: [%45.1], env=e43.0
  void                    Deopt              !v    %48.0, Typecheck@0x556a20e1ce38[Type#2], %45.1   !
BB49   <- [47]
  val?^ | miss    %49.0 = LdVar              eR    funs, e43.0
  val?            %49.1 = Force!<wrapped>    !v    %49.0, e43.0   <vec$->
  val?            %49.2 = CallBuiltin        !v    seq_along(%49.1) e43.0   <int$->
  lgl$#-          %49.3 = IsType                   %49.2 isA int$-
  void                    Branch                   %49.3 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x556a27369010+105: [], env=e43.0
  void                    Deopt              !v    %50.0, DeadBranchReached@0x556a20e1ce38[Test#1], %47.3   !
BB51   <- [49]
  int$-           %51.0 = CastType           d     dn %49.2
  int$-           %51.1 = Inc                      0L
  lgl$-           %51.2 = Lt                 d     1L, %51.1, elided   <false>
  lgl$#-          %51.3 = Identical                %51.2, true
  void                    Branch                   %51.3 -> BB54 (if true) | BB53 (if false)
BB52   <- [49]
  void                    Nop                !     
  val?            %52.1 = %49.2
  dr              %52.2 = Typecheck@0x556a20e1ce38[Type#5]
  goto BB9
BB54   <- [51]
  void                    Nop                !     
  lgl$#-          %54.1 = %51.3
  dr              %54.2 = DeadBranchReached@0x556a20e1ce38[Test#2]
  goto BB9
BB53   <- [51]
  int$-           %53.0 = Extract2_1D        wed   %51.0, %51.1, elided
  void                    StVar              lW    i, %53.0, e43.0
  (cls|spec|blt)  %53.2 = LdFun              !v    @, <0x556a1b409bd8>, e43.0
  prom-           %53.3 = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p0, e43.0
  prom-           %53.4 = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p2, e43.0
  val?            %53.5 = Call               !v    %53.2(%53.3, %53.4) e43.0   <vec->
  void                    StVar              lW    groups, %53.5, e43.0
  val?^ | miss    %53.7 = LdVar              eR    c, e43.0
  lgl$#-          %53.8 = Identical                <blt c>, %53.7   <true>
  void                    Branch                   %53.8 -> BB55 (if true) | BB56 (if false)
BB9   <- [52, 54]
  val?^ | miss    %9.0  = Phi                      %52.1:BB52, %54.1:BB54
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %52.2:BB52, %54.2:BB54
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x556a27369010+196: [%49.2], env=e43.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB55   <- [53]
  val?^ | miss    %55.0 = LdVar              eR    funs, e43.0
  val?            %55.1 = Force!<wrapped>    !v    %55.0, e43.0   <vec$->
  val?^ | miss    %55.2 = LdVar              eR    lapply, e43.0
  lgl$#-          %55.3 = Identical                %55.2, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %55.3 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x556a27369010+292: [%51.0, 1L, %51.1], env=e43.0
  void                    Deopt              !v    %56.0, DeadBranchReached@0x556a20e1ce38[Test#4], %53.8   !
BB57   <- [55]
  prom-           %57.0 = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p3, e43.0
  cls             %57.1 = MkCls                    .getAllGroups@Prom(4)0, e43.0
  prom-           %57.2 = MkArg                    %57.1, .getAllGroups[0x556a27f4cc90]_p4 (!refl), e43.0
  val?            %57.3 = StaticCall         !v    lapply[0x556a23217e00](%57.0, %57.2) { 0 1 } e43.0   <vec->
  lgl$#-          %57.4 = IsType                   %57.3 isA val?-
  lgl$#-          %57.5 = IsType                   %55.1 isA val?-
  void                    Branch                   %57.5 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  fs              %58.0 = FrameState         R     0x556a27369010+366: [%51.0, 1L, %51.1, <blt c>, %55.1], env=e43.0
  void                    Deopt              !v    %58.0, CallTarget@0x556a20e1ce38[Call#5], %55.2   !
BB59   <- [57]
  val?-           %59.0 = CastType           d     dn %55.1   <vec$->
  void                    Branch                   %57.4 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  void                    Nop                !     
  val?            %60.1 = %55.1
  dr              %60.2 = Typecheck@0x556a20e1ce38[Type#15]
  goto BB15
BB61   <- [59]
  val?-           %61.0 = CastType           d     dn %57.3   <vec->
  val+            %61.1 = CallSafeBuiltin    wed   c(%59.0, %61.0)    <vec->
  void                    StVar              lW    funs, %61.1, e43.0
  int$-           %61.3 = Inc                      %51.1
  lgl$-           %61.4 = Lt                 d     1L, %61.3, elided
  lgl$#-          %61.5 = Identical                %61.4, true
  void                    Branch                   %61.5 -> BB20 (if true) | BB19 (if false)
BB62   <- [59]
  void                    Nop                !     
  val?            %62.1 = %57.3
  dr              %62.2 = Typecheck@0x556a20e1ce38[Type#17]
  goto BB15
BB15   <- [60, 62]
  val?^ | miss    %15.0 = Phi                      %60.1:BB60, %62.1:BB62
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %60.2:BB60, %62.2:BB62
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x556a27369010+408: [%51.0, 1L, %51.1, <blt c>, %55.1, %57.3], env=e43.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB20   <- [61]
  val?^ | miss    %20.0 = LdVar              eR    length, e43.0
  lgl$#-          %20.1 = Identical                <blt length>, %20.0   <true>
  void                    Branch                   %20.1 -> BB63 (if true) | BB64 (if false)
BB19   <- [61]
  int$-           %19.0 = Extract2_1D        wed   %51.0, %61.3, elided
  void                    StVar              lW    i, %19.0, e43.0
  (cls|spec|blt)  %19.2 = LdFun              !v    @, e43.0
  fs              %19.3 = FrameState         R     0x556a27369010+478: [%51.0, 1L, %61.3, %19.2], env=e43.0
  void                    Deopt              !v    %19.3, DeadCall@0x556a20e1ce38[Call#6], %19.2   !
BB63   <- [20]
  (int|real)$-    %63.0 = CallSafeBuiltin    wed   length(%61.1)    <int$->
  lgl$#-          %63.1 = IsType                   %63.0 isA int$-
  void                    Branch                   %63.1 -> BB65 (if true) | BB66 (if false)
BB64   <- [20]
  fs              %64.0 = FrameState         R     0x556a27369010+444: [%51.0, 1L, %51.1], env=e43.0
  void                    Deopt              !v    %64.0, DeadBranchReached@0x556a20e1ce38[Test#7], %20.1   !
BB65   <- [63]
  int$-           %65.0 = CastType           d     dn %63.0
  val?^ | miss    %65.1 = LdVar              eR    start, e43.0
  lgl$#-          %65.2 = IsType                   %65.1 isA int$-
  void                    Branch                   %65.2 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  void                    Nop                !     
  (int|real)$-    %66.1 = %63.0
  dr              %66.2 = Typecheck@0x556a20e1ce38[Type#34]
  goto BB21
BB67   <- [65]
  int$-           %67.0 = CastType           d     dn %65.1
  lgl$-           %67.1 = Gt                 d     %65.0, %67.0, elided   <lgl$->
  lgl$#-          %67.2 = CheckTrueFalse     e     %67.1
  void                    Branch                   %67.2 -> BB25 (if true) | BB23 (if false)
BB68   <- [65]
  void                    Nop                !     
  val?^ | miss    %68.1 = %65.1
  dr              %68.2 = Typecheck@0x556a20e1ce38[Type#35]
  goto BB21
BB21   <- [66, 68, 70]
  val?^ | miss    %21.0 = Phi                      %66.1:BB66, %68.1:BB68, %70.1:BB70
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %66.2:BB66, %68.2:BB68, %70.2:BB70
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x556a27369010+777: [%63.0], env=e43.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB25   <- [67]
  lgl$#-          %25.0 = IsType                   %61.1 isA val?-
  void                    Branch                   %25.0 -> BB69 (if true) | BB70 (if false)
BB23   <- [67]
  void                    Nop                !     
  goto BB24
BB69   <- [25]
  val-            %69.0 = CastType           d     dn %61.1   <vec->
  (int|real)$-    %69.1 = CallSafeBuiltin    wed   length(%69.0)    <int$->
  lgl$#-          %69.2 = IsType                   %69.1 isA int$-
  void                    Branch                   %69.2 -> BB71 (if true) | BB72 (if false)
BB70   <- [25]
  void                    Nop                !     
  val+            %70.1 = %61.1
  dr              %70.2 = Typecheck@0x556a20e1ce38[Type#38]
  goto BB21
BB24   <- [23, 34, 99]
  val?^ | miss    %24.0 = LdVar              eR    funs, e43.0
  void                    Visible            v     
  val?            %24.2 = Force!<value>      !     %24.0, e43.0   <vec->
  void                    Return             l     %24.2
BB71   <- [69]
  int$-           %71.0 = CastType           d     dn %69.1
  int$-           %71.1 = Sub                d     %71.0, %67.0, elided   <int$->
  void                    StVar              lW    nmore, %71.1, e43.0
  val?^ | miss    %71.3 = LdVar              eR    Recall, e43.0
  lgl$#-          %71.4 = Identical                %71.3, function(...) <(rir::DispatchTable*)0x556a1e0c|...
  void                    Branch                   %71.4 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  fs              %72.0 = FrameState         R     0x556a27369010+904: [%69.1], env=e43.0
  void                    Deopt              !v    %72.0, Typecheck@0x556a20e1ce38[Type#39], %69.1   !
BB73   <- [71]
  prom-           %73.0 = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p5, e43.0
  dots-           %73.1 = DotsList           l     %73.0
  ct              %73.2 = PushContext        lCL   %73.1, Recall([(funs, :(((+(start, 1)), length(funs)))), function(...) <(rir::DispatchTable*)0x556a1e0c|..., e43.0
  env             e73.3 = MkEnv              l     ...=%73.1, parent=R_BaseNamespace, context 1
  prom-           %73.4 = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p9, e73.3
  val?            %73.5 = Call               !v    <spec .Internal>(%73.4) e73.3   <(lgl|vec)->
  val?            %73.6 = PopContext         C     %73.5, %73.2   <vec->
  void                    StVar              lW    more, %73.6, e43.0
  lgl$#-          %73.8 = IsType                   %73.6 isA val?-
  val?^ | miss    %73.9 = LdVar              eR    length, e43.0
  lgl$#-          %73.10 = Identical                <blt length>, %73.9   <true>
  void                    Branch                   %73.10 -> BB75 (if true) | BB76 (if false)
BB74   <- [71]
  fs              %74.0 = FrameState         R     0x556a27369010+938: [], env=e43.0
  void                    Deopt              !v    %74.0, CallTarget@0x556a20e1ce38[Call#12], %71.3   !
BB75   <- [73]
  val             %75.0 = ChkMissing         e     %73.6
  void                    Branch                   %73.8 -> BB77 (if true) | BB78 (if false)
BB76   <- [73]
  void                    Nop                !     
  lgl$#-          %76.1 = %73.10
  dr              %76.2 = DeadBranchReached@0x556a20e1ce38[Test#10]
  goto BB30
BB77   <- [75]
  val?-           %77.0 = CastType           d     dn %73.6   <vec->
  (int|real)$-    %77.1 = CallSafeBuiltin    wed   length(%77.0)    <int$->
  lgl$#-          %77.2 = IsType                   %77.1 isA int$-
  void                    Branch                   %77.2 -> BB79 (if true) | BB80 (if false)
BB78   <- [75]
  void                    Nop                !     
  val?            %78.1 = %73.6
  dr              %78.2 = Typecheck@0x556a20e1ce38[Type#54]
  goto BB30
BB30   <- [76, 78]
  val?^ | miss    %30.0 = Phi                      %76.1:BB76, %78.1:BB78
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %76.2:BB76, %78.2:BB78
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x556a27369010+984: [], env=e43.0
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB79   <- [77]
  int$-           %79.0 = CastType           d     dn %77.1
  val?^ | miss    %79.1 = LdVar              eR    nmore, e43.0
  lgl$#-          %79.2 = IsType                   %79.1 isA int$-
  void                    Branch                   %79.2 -> BB81 (if true) | BB82 (if false)
BB80   <- [77]
  void                    Nop                !     
  (int|real)$-    %80.1 = %77.1
  dr              %80.2 = Typecheck@0x556a20e1ce38[Type#57]
  goto BB32
BB81   <- [79]
  int$-           %81.0 = CastType           d     dn %79.1
  lgl$-           %81.1 = Gt                 d     %79.0, %81.0, elided   <lgl$->
  lgl$#-          %81.2 = CheckTrueFalse     e     %81.1
  void                    Branch                   %81.2 -> BB35 (if true) | BB34 (if false)
BB82   <- [79]
  void                    Nop                !     
  val?^ | miss    %82.1 = %79.1
  dr              %82.2 = Typecheck@0x556a20e1ce38[Type#58]
  goto BB32
BB32   <- [80, 82, 84]
  val?^ | miss    %32.0 = Phi                      %80.1:BB80, %82.1:BB82, %84.1:BB84
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %80.2:BB80, %82.2:BB82, %84.2:BB84
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x556a27369010+1075: [%77.1], env=e43.0
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB35   <- [81]
  val?^ | miss    %35.0 = LdVar              eR    c, e43.0
  lgl$#-          %35.1 = Identical                <blt c>, %35.0   <true>
  void                    Branch                   %35.1 -> BB83 (if true) | BB84 (if false)
BB34   <- [81]
  void                    Nop                !     
  goto BB24
BB83   <- [35]
  val?^ | miss    %83.0 = LdVar              eR    funs, e43.0
  val?            %83.1 = Force!<value>      !v    %83.0, e43.0   <vec->
  val?^ | miss    %83.2 = LdVar              eR    more, e43.0
  lgl$#-          %83.3 = IsType                   %83.2 isA val?~- | miss
  void                    Branch                   %83.3 -> BB85 (if true) | BB86 (if false)
BB84   <- [35]
  void                    Nop                !     
  lgl$#-          %84.1 = %35.1
  dr              %84.2 = DeadBranchReached@0x556a20e1ce38[Test#11]
  goto BB32
BB85   <- [83]
  val?~- | miss   %85.0 = CastType           d     dn %83.2
  val?-           %85.1 = Force!<value>            %85.0,    <vec->
  lgl$#-          %85.2 = IsType                   %85.1 isA val+   <true>
  void                    Branch                   %85.2 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  void                    Nop                !     
  val?^ | miss    %86.1 = %83.2
  dr              %86.2 = Typecheck@0x556a20e1ce38[Type#74]
  goto BB36
BB87   <- [85]
  val?^ | miss    %87.0 = LdVar              eR    nmore, e43.0
  lgl$#-          %87.1 = IsType                   %87.0 isA int$-
  void                    Branch                   %87.1 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  void                    Nop                !     
  lgl$#-          %88.1 = %85.2
  dr              %88.2 = DeadBranchReached@0x556a20e1ce38[Test#13]
  goto BB36
BB36   <- [86, 88, 90, 92]
  val?^ | miss    %36.0 = Phi                      %86.1:BB86, %88.1:BB88, %90.1:BB90, %92.1:BB92
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %86.2:BB86, %88.2:BB88, %90.2:BB90, %92.2:BB92
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x556a27369010+1185: [<blt c>, %83.1], env=e43.0
  void                    Deopt              !v    %36.4, %36.3, %36.1   !
BB89   <- [87]
  int$-           %89.0 = CastType           d     dn %87.0
  real$-          %89.1 = Add                d     %89.0, 1, elided   <real$->
  val?^ | miss    %89.2 = LdVar              eR    length, e43.0
  lgl$#-          %89.3 = Identical                <blt length>, %89.2   <true>
  void                    Branch                   %89.3 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  void                    Nop                !     
  val?^ | miss    %90.1 = %87.0
  dr              %90.2 = Typecheck@0x556a20e1ce38[Type#80]
  goto BB36
BB91   <- [89]
  (int|real)$-    %91.0 = CallSafeBuiltin    wed   length(%85.1)    <int$->
  lgl$#-          %91.1 = IsType                   %91.0 isA int$-
  void                    Branch                   %91.1 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  void                    Nop                !     
  lgl$#-          %92.1 = %89.3
  dr              %92.2 = DeadBranchReached@0x556a20e1ce38[Test#14]
  goto BB36
BB93   <- [91]
  int$-           %93.0 = CastType           d     dn %91.0
  (int|real)-     %93.1 = Colon              d     %89.1, %93.0, elided   <int$->
  lgl$#-          %93.2 = IsType                   %93.1 isA int$-
  void                    Branch                   %93.2 -> BB95 (if true) | BB96 (if false)
BB94   <- [91]
  void                    Nop                !     
  (int|real)$-    %94.1 = %91.0
  dr              %94.2 = Typecheck@0x556a20e1ce38[Type#84]
  goto BB38
BB95   <- [93]
  int$-           %95.0 = CastType           d     dn %93.1
  val?            %95.1 = Extract1_1D        wed   %85.1, %95.0, elided   <vec$->
  lgl$#-          %95.2 = IsType                   %95.1 isA val?-
  lgl$#-          %95.3 = IsType                   %83.1 isA val?-
  void                    Branch                   %95.3 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  void                    Nop                !     
  (int|real)-     %96.1 = %93.1
  dr              %96.2 = Typecheck@0x556a20e1ce38[Type#85]
  goto BB38
BB38   <- [94, 96]
  val?^ | miss    %38.0 = Phi                      %94.1:BB94, %96.1:BB96
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %94.2:BB94, %96.2:BB96
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x556a27369010+1353: [<blt c>, %83.1, %85.1, %89.1, %91.0], env=e43.0
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB97   <- [95]
  val?-           %97.0 = CastType           d     dn %83.1   <vec->
  void                    Branch                   %95.2 -> BB99 (if true) | BB100 (if false)
BB98   <- [95]
  void                    Nop                !     
  val?            %98.1 = %83.1
  dr              %98.2 = Typecheck@0x556a20e1ce38[Type#73]
  goto BB40
BB99   <- [97]
  val?-           %99.0 = CastType           d     dn %95.1   <vec$->
  val+            %99.1 = CallSafeBuiltin    wed   c(%97.0, %99.0)    <vec->
  void                    StVar              lW    funs, %99.1, e43.0
  goto BB24
BB100   <- [97]
  void                    Nop                !     
  val?            %100.1 = %95.1
  dr              %100.2 = Typecheck@0x556a20e1ce38[Type#86]
  goto BB40
BB40   <- [98, 100]
  val?^ | miss    %40.0 = Phi                      %98.1:BB98, %100.1:BB100
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %98.2:BB98, %100.2:BB100
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x556a27369010+1365: [<blt c>, %83.1, %95.1], env=e43.0
  void                    Deopt              !v    %40.4, %40.3, %40.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p1, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    groups, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    .getAllGroups@Prom(4)0, e0.0
  void                    Return             l     %0.1
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <vec->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    start, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = Add                !v    %2.1, 1, e0.0   <real$->
  (cls|spec|blt)  %2.3  = LdFun              !v    length, <0x556a1b40aa90>, e0.0
  prom-           %2.4  = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p6, e0.0
  val?            %2.5  = Call               !v    %2.3(%2.4) e0.0   <int$->
  val?            %2.6  = Colon              !v    %2.2, %2.5, e0.0   <int$->
  val?            %2.7  = %2.6
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p7, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.7:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <vec$->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    start, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Add                !v    %0.2, 1, e0.0   <val?_>
  void                    Visible            v     
  (cls|spec|blt)  %0.5  = LdFun              !     length, e0.0
  prom-           %0.6  = MkArg                    unboundValue, .getAllGroups[0x556a27f4cc90]_p8, e0.0
  val?            %0.7  = Call               !     %0.5(%0.6) e0.0   <val?_>
  val?            %0.8  = Colon              !     %0.3, %0.7, e0.0   <val?_>
  void                    Return             l     %0.8
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     Recall, e0.0
  (miss|dots)     %0.2  = LdDots             R     , e0.0
  *dots-          %0.3  = ExpandDots               %0.2
  val?            %0.4  = NamedCall          !     %0.1(.xpandDotsTrigger=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4

│ .getAllGroups[0x556a27f4cc90]                                                │
└──────────────────────────────────────────────────────────────────────────────┘
