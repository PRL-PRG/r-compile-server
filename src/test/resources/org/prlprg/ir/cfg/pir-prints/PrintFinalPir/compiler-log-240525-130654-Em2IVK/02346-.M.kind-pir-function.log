
┌──────────────────────────────────────────────────────────────────────────────┐
│ .M.kind[0x556a254a3140]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1                     │
│ Properties:                                                                  │
├────── Final PIR Version
.M.kind[0x556a254a3140]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, clx(miss)=missingArg, parent=<env 0x556a1d599ea0>, context 1
  prom-           %0.2  = MkArg                    unboundValue, .M.kind[0x556a254a3140]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    clx, %0.3, e0.1
  val?^ | miss    %0.5  = LdVar              eR    is.matrix, <env 0x556a1d599ea0>
  lgl$#-          %0.6  = Identical                <blt is.matrix>, %0.5   <true>
  void                    Branch                   %0.6 -> BB22 (if true) | BB23 (if false)
BB22   <- [0]
  val?            %22.0 = Force!<lazy>       !vr   %0.0,    <(real|other)>
  val?            %22.1 = CallBuiltin        !     is.matrix(%22.0) e0.1   <lgl$->
  lgl$#-          %22.2 = IsType                   %22.1 isA lgl$-
  void                    Branch                   %22.2 -> BB24 (if true) | BB25 (if false)
BB23   <- [0]
  fs              %23.0 = FrameState         R     0x556a21b2c480+0: [], env=e0.1
  void                    Deopt              !v    %23.0, DeadBranchReached@0x556a21e30ba8[Test#0], %0.6
BB24   <- [22]
  lgl$-           %24.0 = CastType           d     dn %22.1
  lgl$-           %24.1 = AsLogical                %24.0
  lgl$#-          %24.2 = Identical                %24.1, true
  void                    Branch                   %24.2 -> BB20 (if true) | BB5 (if false)
BB25   <- [22]
  void                    Nop                !     
  val?            %25.1 = %22.1
  dr              %25.2 = Typecheck@0x556a21e30ba8[Type#4]
  goto BB3
BB20   <- [24]
  void                    Nop                !     
  lgl$-           %20.1 = %24.1
  goto BB8
BB5   <- [24]
  val?^ | miss    %5.0  = LdVar              eR    is.atomic, e0.1
  lgl$#-          %5.1  = Identical                <blt is.atomic>, %5.0   <true>
  void                    Branch                   %5.1 -> BB26 (if true) | BB27 (if false)
BB3   <- [25, 27]
  val?^ | miss    %3.0  = Phi                      %25.1:BB25, %27.1:BB27
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %25.2:BB25, %27.2:BB27
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x556a21b2c480+91: [%22.1], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB8   <- [20, 30]
  lgl$-           %8.0  = Phi                      %30.3:BB30, %20.1:BB20
  lgl$-           %8.1  = %8.0
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1
  void                    Branch                   %8.2 -> BB13 (if true) | BB11 (if false)
BB26   <- [5]
  val?^ | miss    %26.0 = LdVar              eR    x, e0.1
  val?            %26.1 = Force!<wrapped>    !v    %26.0, e0.1   <other>
  val?            %26.2 = CallBuiltin        !     is.atomic(%26.1) e0.1   <lgl$->
  lgl$#-          %26.3 = IsType                   %26.2 isA lgl$-
  void                    Branch                   %26.3 -> BB30 (if true) | BB31 (if false)
BB27   <- [5]
  void                    Nop                !     
  lgl$#-          %27.1 = %5.1
  dr              %27.2 = DeadBranchReached@0x556a21e30ba8[Test#1]
  goto BB3
BB13   <- [8]
  val?^ | miss    %13.0 = LdVar              eR    is.numeric, e0.1
  lgl$#-          %13.1 = Identical                <blt is.numeric>, %13.0   <true>
  void                    Branch                   %13.1 -> BB32 (if true) | BB33 (if false)
BB11   <- [8]
  val?^ | miss    %11.0 = LdVar              eR    .M.kindC, e0.1
  lgl$#-          %11.1 = Identical                %11.0, function(clx, ex=extends(clx)) <(rir::Dispatch|...
  void                    Branch                   %11.1 -> BB28 (if true) | BB29 (if false)
BB30   <- [26]
  lgl$-           %30.0 = CastType           d     dn %26.2
  lgl$-           %30.1 = AsLogical                %30.0
  lgl$-           %30.2 = LOr                      %24.1, %30.1
  lgl$-           %30.3 = %30.2
  goto BB8
BB31   <- [26]
  fs              %31.0 = FrameState         R     0x556a21b2c480+194: [%24.1, %26.2], env=e0.1
  void                    Deopt              !v    %31.0, Typecheck@0x556a21e30ba8[Type#7], %26.2   !
BB32   <- [13]
  val?^ | miss    %32.0 = LdVar              eR    x, e0.1
  lgl$#-          %32.1 = IsType                   %32.0 isA real~_
  void                    Branch                   %32.1 -> BB34 (if true) | BB35 (if false)
BB33   <- [13]
  void                    Nop                !     
  lgl$#-          %33.1 = %13.1
  dr              %33.2 = DeadBranchReached@0x556a21e30ba8[Test#2]
  goto BB9
BB28   <- [11]
  prom-           %28.0 = MkArg                    unboundValue, .M.kind[0x556a254a3140]_p2, e0.1
  val?            %28.1 = StaticCall         !     .M.kindC[0x556a279ed830](%28.0) e0.1   <str$->
  val?            %28.2 = %28.1
  goto BB12
BB29   <- [11]
  void                    Nop                !     
  val?^ | miss    %29.1 = %11.0
  dr              %29.2 = CallTarget@0x556a21e30ba8[Call#3]
  goto BB9
BB34   <- [32]
  real~_          %34.0 = CastType           d     dn %32.0
  real_           %34.1 = Force!<wrapped>          %34.0,    <real_>
  lgl$#-          %34.2 = CallSafeBuiltin    wed   is.numeric(%34.1)    <lgl$->
  void                    Branch                   %34.2 -> BB19 (if true) | BB14 (if false)
BB35   <- [32]
  void                    Nop                !     
  val?^ | miss    %35.1 = %32.0
  dr              %35.2 = Typecheck@0x556a21e30ba8[Type#11]
  goto BB9
BB9   <- [29, 33, 35]
  val?^ | miss    %9.0  = Phi                      %29.1:BB29, %33.1:BB33, %35.1:BB35
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %29.2:BB29, %33.2:BB33, %35.2:BB35
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x556a21b2c480+201: [%8.1], env=e0.1
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB12   <- [19, 28]
  val?            %12.0 = Phi                      %28.2:BB28, %19.1:BB19
  val?            %12.1 = %12.0
  void                    Return             l     %12.1
BB19   <- [34]
  void                    Visible            v     
  str$#-          %19.1 = "d"
  goto BB12
BB14   <- [34]
  val?^ | miss    %14.0 = LdVar              eR    is.logical, e0.1
  lgl$#-          %14.1 = Identical                <blt is.logical>, %14.0   <@?>
  void                    Branch                   %14.1 -> BB16 (if true) | BB15 (if false)
BB16   <- [14]
  val?^ | miss    %16.0 = LdVar              eR    is.complex, e0.1
  lgl$#-          %16.1 = Identical                <blt is.complex>, %16.0   <@?>
  void                    Branch                   %16.1 -> BB18 (if true) | BB17 (if false)
BB15   <- [14]
  (cls|spec|blt)  %15.0 = LdFun              !v    is.logical, e0.1
  fs              %15.1 = FrameState         R     0x556a21b2c480+379: [%15.0], env=e0.1
  void                    Deopt              !v    %15.1, DeadCall@0x556a21e30ba8[Call#5], %15.0   !
BB18   <- [16]
  (cls|spec|blt)  %18.0 = LdFun              !v    stop, e0.1
  fs              %18.1 = FrameState         R     0x556a21b2c480+560: [%18.0], env=e0.1
  void                    Deopt              !v    %18.1, DeadCall@0x556a21e30ba8[Call#7], %18.0   !
BB17   <- [16]
  (cls|spec|blt)  %17.0 = LdFun              !v    is.complex, e0.1
  fs              %17.1 = FrameState         R     0x556a21b2c480+481: [%17.0], env=e0.1
  void                    Deopt              !v    %17.1, DeadCall@0x556a21e30ba8[Call#6], %17.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x556a1b40a748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .M.kind[0x556a254a3140]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    clx, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|other)>
  void                    Return             l     %0.3

│ .M.kind[0x556a254a3140]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
