
┌──────────────────────────────────────────────────────────────────────────────┐
│ .diag2tT[0x556a25097420]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
.diag2tT[0x556a25097420]
BB0
  val?~+          %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     from=%0.2, uplo=%0.1, kind=%0.0, drop0(miss)=true, parent=<env 0x556a1d599ea0>, context 1
  (cls|spec|blt)  %0.4  = LdFun              !v    @, <0x556a1b409bd8>, <env 0x556a1d599ea0>
  prom-           %0.5  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p1 (!refl), e0.3
  prom-           %0.6  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p2, e0.3
  val?            %0.7  = Call               !v    %0.4(%0.5, %0.6) e0.3   <real->
  void                    StVar              lW    x, %0.7, e0.3
  (cls|spec|blt)  %0.9  = LdFun              !v    @, <0x556a1b409bd8>, e0.3
  prom-           %0.10 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p3, e0.3
  prom-           %0.11 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p4, e0.3
  val?            %0.12 = Call               !v    %0.9(%0.10, %0.11) e0.3   <str$->
  lgl$#-          %0.13 = IsType                   %0.12 isA val?-
  void                    Visible            v     
  void                    Branch                   %0.13 -> BB27 (if true) | BB28 (if false)
BB27   <- [0]
  val?-           %27.0 = CastType           d     dn %0.12   <str$->
  lgl-            %27.1 = Eq                 vwed  %27.0, "U", elided   <lgl$->
  lgl$#-          %27.2 = IsType                   %27.1 isA lgl$-
  void                    Branch                   %27.2 -> BB29 (if true) | BB30 (if false)
BB28   <- [0]
  fs              %28.0 = FrameState         R     0x556a2746f8b0+88: [%0.12], env=e0.3
  void                    Deopt              !v    %28.0, Typecheck@0x556a205add20[Type#7], %0.12   !
BB29   <- [27]
  lgl$-           %29.0 = CastType           d     dn %27.1
  lgl$#-          %29.1 = CheckTrueFalse     e     %29.0
  void                    Branch                   %29.1 -> BB25 (if true) | BB5 (if false)
BB30   <- [27]
  void                    Nop                !     
  lgl-            %30.1 = %27.1
  dr              %30.2 = Typecheck@0x556a205add20[Type#8]
  goto BB3
BB25   <- [29]
  val?^ | miss    %25.0 = LdVar              eR    integer, e0.3
  lgl$#-          %25.1 = Identical                %25.0, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %25.1 -> BB31 (if true) | BB32 (if false)
BB5   <- [29]
  val?^ | miss    %5.0  = LdVar              eR    &, e0.3
  lgl$#-          %5.1  = Identical                <blt &>, %5.0   <true>
  void                    Branch                   %5.1 -> BB33 (if true) | BB34 (if false)
BB3   <- [30, 32, 34]
  val?^ | miss    %3.0  = Phi                      %30.1:BB30, %32.1:BB32, %34.1:BB34
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %30.2:BB30, %32.2:BB32, %34.2:BB34
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x556a2746f8b0+100: [%27.1], env=e0.3
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB31   <- [25]
  int-            %31.0 = StaticCall         !r    integer[0x556a1d7213f0](0L) e0.3   <int->
  int-            %31.1 = %31.0
  goto BB21
BB32   <- [25]
  void                    Nop                !     
  val?^ | miss    %32.1 = %25.0
  dr              %32.2 = CallTarget@0x556a205add20[Call#11]
  goto BB3
BB33   <- [5]
  val?^ | miss    %33.0 = LdVar              eR    drop0, e0.3
  val?            %33.1 = Force!<lazy>       !v    %33.0, e0.3   <lgl$->
  val?^ | miss    %33.2 = LdVar              eR    any0, e0.3
  lgl$#-          %33.3 = Identical                %33.2, function(x) <(rir::DispatchTable*)0x556a27f4a5|...
  void                    Branch                   %33.3 -> BB35 (if true) | BB36 (if false)
BB34   <- [5]
  void                    Nop                !     
  lgl$#-          %34.1 = %5.1
  dr              %34.2 = DeadBranchReached@0x556a205add20[Test#0]
  goto BB3
BB21   <- [31, 57]
  (int|real|complex)+ %21.0 = Phi                      %57.5:BB57, %31.1:BB31
  (int|real|complex)+ %21.1 = %21.0
  void                    StVar              lW    i, %21.1, e0.3
  val?^ | miss    %21.3 = LdVar              eR    new, e0.3
  lgl$#-          %21.4 = Identical                %21.3, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %21.4 -> BB37 (if true) | BB38 (if false)
BB35   <- [33]
  prom-           %35.0 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p5, e0.3
  ct              %35.1 = PushContext        lCL   %35.0, any0(x), function(x) <(rir::DispatchTable*)0x556a27f4a5|..., e0.3
  val?^           %35.2 = CastType                 up %35.0
  val?^ | miss    %35.3 = LdVar              eR    is.atomic, <env 0x556a1d599ea0>
  lgl$#-          %35.4 = Identical                <blt is.atomic>, %35.3   <true>
  void                    Branch                   %35.4 -> BB39 (if true) | BB40 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x556a2746f8b0+185: [<blt &>, %33.1], env=e0.3
  void                    Deopt              !v    %36.0, CallTarget@0x556a205add20[Call#5], %33.2   !
BB37   <- [21]
  prom-           %37.0 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p8, e0.3
  prom-           %37.1 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p10, e0.3
  prom-           %37.2 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p13, e0.3
  prom-           %37.3 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p16, e0.3
  prom-           %37.4 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p19, e0.3
  prom-           %37.5 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p20, e0.3
  prom-           %37.6 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p21 (!refl), e0.3
  prom-           %37.7 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p22 (!refl), e0.3
  dots-           %37.8 = DotsList           l     diag=%37.1, Dim=%37.2, Dimnames=%37.3, uplo=%37.4, x=%37.5, i=%37.6, j=%37.7
  val?            %37.9 = StaticCall         !     new[0x556a20364590](%37.0, %37.8) { 0 1n 2n 3n 4n 5n 6n 7n } e0.3   <other>
  void                    Return             l     %37.9
BB38   <- [21]
  fs              %38.0 = FrameState         R     0x556a2746f8b0+638: [], env=e0.3
  void                    Deopt              !v    %38.0, CallTarget@0x556a205add20[Call#12], %21.3   !
BB39   <- [35]
  env             e39.0 = MkEnv              l     x=%35.2, parent=<env 0x556a1d599ea0>, context 1
  val?            %39.1 = Force!<lazy>       !vL   %35.2, e39.0   <real->
  lgl$#-          %39.2 = IsType                   %39.1 isA real-
  void                    Branch                   %39.2 -> BB41 (if true) | BB42 (if false)
BB40   <- [35]
  fs              %40.0 = FrameState         R     0x556a2746f8b0+222: [<blt &>, %33.1], env=e0.3
  env             e40.1 = (MkEnv)            l     x=%35.2, parent=<env 0x556a1d599ea0>, context 1
  fs              %40.2 = FrameState         R     0x556a25205040+17: [<blt is.atomic>, %35.4], env=e40.1, next=%40.0
  void                    Deopt              !v    %40.2, DeadBranchReached@0x556a21764488[Test#0], %35.4   !
BB41   <- [39]
  val?^ | miss    %41.0 = LdVar              eR    .Call, e39.0
  lgl$#-          %41.1 = Identical                <blt .Call>, %41.0   <true>
  void                    Branch                   %41.1 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  void                    Nop                !     
  val?            %42.1 = %39.1
  dr              %42.2 = Typecheck@0x556a21764488[Type#1]
  goto BB10
BB43   <- [41]
  val?^ | miss    %43.0 = LdVar              eR    R_any0, e39.0
  val?            %43.1 = Force!<value>      !v    %43.0, e39.0   <vec>
  val?^ | miss    %43.2 = LdVar              eR    x, e39.0
  val?            %43.3 = Force!<wrapped>    !v    %43.2, e39.0   <real->
  val?            %43.4 = CallBuiltin        !v    .Call(%43.1, %43.3) e39.0   <lgl$->
  lgl$#-          %43.5 = IsType                   %43.4 isA lgl$-
  void                    Branch                   %43.5 -> BB45 (if true) | BB46 (if false)
BB44   <- [41]
  void                    Nop                !     
  lgl$#-          %44.1 = %41.1
  dr              %44.2 = DeadBranchReached@0x556a21764488[Test#1]
  goto BB10
BB10   <- [42, 44]
  val?^ | miss    %10.0 = Phi                      %42.1:BB42, %44.1:BB44
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %42.2:BB42, %44.2:BB44
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x556a2746f8b0+222: [<blt &>, %33.1], env=e0.3
  fs              %10.5 = FrameState         R     0x556a25205040+69: [<blt is.atomic>, %39.1], env=e39.0, next=%10.4
  void                    Deopt              !v    %10.5, %10.3, %10.1   !
BB45   <- [43]
  lgl$-           %45.0 = CastType           d     dn %43.4
  val?            %45.1 = PopContext         C     %45.0, %35.1   <lgl$->
  lgl$#-          %45.2 = IsType                   %45.1 isA lgl$-
  void                    Branch                   %45.2 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x556a2746f8b0+222: [<blt &>, %33.1], env=e0.3
  fs              %46.1 = FrameState         R     0x556a25205040+254: [%43.4], env=e39.0, next=%46.0
  void                    Deopt              !v    %46.1, Typecheck@0x556a21764488[Type#10], %43.4   !
BB47   <- [45]
  lgl$-           %47.0 = CastType           d     dn %45.1
  lgl$#-          %47.1 = IsType                   %33.1 isA lgl$-
  void                    Branch                   %47.1 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  void                    Nop                !     
  val?            %48.1 = %45.1
  dr              %48.2 = Typecheck@0x556a205add20[Type#14]
  goto BB14
BB49   <- [47]
  lgl$-           %49.0 = CastType           d     dn %33.1
  val+            %49.1 = CallSafeBuiltin    wed   &(%49.0, %47.0)    <lgl$->
  lgl$#-          %49.2 = IsType                   %49.1 isA lgl$-
  void                    Branch                   %49.2 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  void                    Nop                !     
  val?            %50.1 = %33.1
  dr              %50.2 = Typecheck@0x556a205add20[Type#12]
  goto BB14
BB14   <- [48, 50]
  val?^ | miss    %14.0 = Phi                      %48.1:BB48, %50.1:BB50
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %48.2:BB48, %50.2:BB50
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x556a2746f8b0+222: [<blt &>, %33.1, %45.1], env=e0.3
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB51   <- [49]
  lgl$-           %51.0 = CastType           d     dn %49.1
  lgl$#-          %51.1 = CheckTrueFalse     e     %51.0
  void                    Branch                   %51.1 -> BB24 (if true) | BB18 (if false)
BB52   <- [49]
  void                    Nop                !     
  val+            %52.1 = %49.1
  dr              %52.2 = Typecheck@0x556a205add20[Type#15]
  goto BB16
BB24   <- [51]
  (cls|spec|blt)  %24.0 = LdFun              !v    which, e0.3
  fs              %24.1 = FrameState         R     0x556a2746f8b0+445: [%24.0], env=e0.3
  void                    Deopt              !v    %24.1, DeadCall@0x556a205add20[Call#9], %24.0   !
BB18   <- [51]
  val?^ | miss    %18.0 = LdVar              eR    seq_len, e0.3
  lgl$#-          %18.1 = Identical                <blt seq_len>, %18.0   <true>
  void                    Branch                   %18.1 -> BB53 (if true) | BB54 (if false)
BB16   <- [52, 54]
  val?^ | miss    %16.0 = Phi                      %52.1:BB52, %54.1:BB54
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %52.2:BB52, %54.2:BB54
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x556a2746f8b0+244: [%49.1], env=e0.3
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB53   <- [18]
  (cls|spec|blt)  %53.0 = LdFun              !v    @, <0x556a1b409bd8>, e0.3
  prom-           %53.1 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p6, e0.3
  prom-           %53.2 = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p7, e0.3
  val?            %53.3 = Call               !v    %53.0(%53.1, %53.2) e0.3   <int->
  lgl$#-          %53.4 = IsType                   %53.3 isA val+   <true>
  lgl$#-          %53.5 = IsType                   %53.3 isA int-
  void                    Branch                   %53.4 -> BB55 (if true) | BB56 (if false)
BB54   <- [18]
  void                    Nop                !     
  lgl$#-          %54.1 = %18.1
  dr              %54.2 = DeadBranchReached@0x556a205add20[Test#1]
  goto BB16
BB55   <- [53]
  void                    Branch                   %53.5 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  void                    Nop                !     
  lgl$#-          %56.1 = %53.4
  dr              %56.2 = DeadBranchReached@0x556a205add20[Test#3]
  goto BB19
BB57   <- [55]
  int-            %57.0 = CastType           d     dn %53.3
  int$-           %57.1 = Extract1_1D        wed   %57.0, 1, elided   <int$->
  val+            %57.2 = CallSafeBuiltin    wed   seq_len(%57.1)    <int->
  void                    Visible            v     
  (int|real|complex)+ %57.4 = Sub                vwed  %57.2, 1L, elided   <int->
  (int|real|complex)+ %57.5 = %57.4
  goto BB21
BB58   <- [55]
  void                    Nop                !     
  val?            %58.1 = %53.3
  dr              %58.2 = Typecheck@0x556a205add20[Type#22]
  goto BB19
BB19   <- [56, 58]
  val?^ | miss    %19.0 = Phi                      %56.1:BB56, %58.1:BB58
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %56.2:BB56, %58.2:BB58
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x556a2746f8b0+352: [<blt seq_len>, %53.3], env=e0.3
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    diag, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dim, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     paste0, <0x556a1b5533c8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "tTMatrix") e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    kind, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x556a1b409bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p11, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p12, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    diag, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x556a1b409bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p14, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p15, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <int->
  void                    Return             l     %0.4
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dim, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x556a1b409bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p17, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .diag2tT[0x556a25097420]_p18, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec->
  void                    Return             l     %0.4
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dimnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    uplo, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3

│ .diag2tT[0x556a25097420]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
