
┌──────────────────────────────────────────────────────────────────────────────┐
│ rir.compile[0x55b5438938b0]                                                  │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── Final PIR Version
rir.compile[0x55b5438938b0]
BB0
  val?^ | miss    %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     q=%0.0, parent=R_GlobalEnv, context 1
  (cls|spec|blt)  %0.2  = LdFun              !     stopifnot, R_GlobalEnv
  prom-           %0.3  = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p0, e0.1
  val?            %0.4  = Call               !     %0.2(%0.3) e0.1
  (cls|spec|blt)  %0.5  = LdFun              !     print, e0.1
  prom-           %0.6  = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p2, e0.1
  val?            %0.7  = Call               !     %0.5(%0.6) e0.1
  (cls|spec|blt)  %0.8  = LdFun              !     stopifnot, e0.1
  prom-           %0.9  = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p4, e0.1
  val?            %0.10 = Call               !     %0.8(%0.9) e0.1
  (cls|spec|blt)  %0.11 = LdFun              !     stopifnot, e0.1
  prom-           %0.12 = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p6, e0.1
  val?            %0.13 = Call               !     %0.11(%0.12) e0.1
  (cls|spec|blt)  %0.14 = LdFun              !     f, e0.1
  prom-           %0.15 = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p8, e0.1
  val?            %0.16 = Call               !     %0.14(%0.15, 2) e0.1   <val?_>
  void                    Return             l     %0.16
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    f, e0.0
  prom-           %0.2  = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p1, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <val?_>
  void                    Visible            v     
  val?            %0.5  = Eq                 !     %0.3, 2, e0.0   <val?_>
  void                    Return             l     %0.5
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    q, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     f, e0.0
  prom-           %0.2  = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    q, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    f, e0.0
  prom-           %0.2  = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p5, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2, 2) e0.0   <val?_>
  void                    Visible            v     
  val?            %0.5  = Eq                 !     %0.3, 3, e0.0   <val?_>
  void                    Return             l     %0.5
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    q, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    f, e0.0
  prom-           %0.2  = MkArg                    unboundValue, rir.compile[0x55b5438938b0]_p7, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2, 2, 3) e0.0   <val?_>
  void                    Visible            v     
  val?            %0.5  = Eq                 !     %0.3, 4, e0.0   <val?_>
  void                    Return             l     %0.5
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    q, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    q, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ rir.compile[0x55b5438938b0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
