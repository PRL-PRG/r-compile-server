
┌──────────────────────────────────────────────────────────────────────────────┐
│ tryCatch[0x55b541c9bb20]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
tryCatch[0x55b541c9bb20]
BB0
  dots+           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     expr=%0.1, ...=%0.0, finally(miss)=missingArg, parent=R_BaseNamespace, context 1
  cls             %0.3  = MkCls                    tryCatchList, e0.2
  cls             %0.4  = MkCls                    tryCatchOne, e0.2
  *dots-          %0.5  = ExpandDots               %0.0
  void                    StVar              lW    tryCatchList, %0.3, e0.2
  void                    StVar              lW    tryCatchOne, %0.4, e0.2
  val?            %0.8  = NamedCall          !v    <blt list>(.xpandDotsTrigger=%0.5) e0.2   <vec$+>
  void                    StVar              lW    handlers, %0.8, e0.2
  lgl$#-          %0.10 = IsType                   %0.8 isA val?+
  val?^ | miss    %0.11 = LdVar              eR    names, e0.2
  lgl$#-          %0.12 = Identical                <blt names>, %0.11   <true>
  void                    Branch                   %0.12 -> BB29 (if true) | BB30 (if false)
BB29   <- [0]
  val             %29.0 = ChkMissing         e     %0.8
  void                    Branch                   %0.10 -> BB31 (if true) | BB32 (if false)
BB30   <- [0]
  void                    Nop                !     
  lgl$#-          %30.1 = %0.12
  dr              %30.2 = DeadBranchReached@0x55b543addbe0[Test#0]
  goto BB28
BB31   <- [29]
  val?+           %31.0 = CastType           d     dn %0.8   <vec$+>
  val+            %31.1 = CallSafeBuiltin    wed   names(%31.0)    <str$->
  void                    StVar              lW    classes, %31.1, e0.2
  val?^ | miss    %31.3 = LdVar              eR    parent.frame, e0.2
  lgl$#-          %31.4 = Identical                %31.3, function(n=1) <(rir::DispatchTable*)0x55b5439a|...
  void                    Branch                   %31.4 -> BB33 (if true) | BB34 (if false)
BB32   <- [29]
  void                    Nop                !     
  val?            %32.1 = %0.8
  dr              %32.2 = Typecheck@0x55b543addbe0[Type#1]
  goto BB28
BB28   <- [30, 32]
  val?^ | miss    %28.0 = Phi                      %30.1:BB30, %32.1:BB32
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %30.2:BB30, %32.2:BB32
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55b543adf3c0+151: [], env=e0.2
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB33   <- [31]
  val?            %33.0 = StaticCall         !v    parent.frame[0x55b541cd3bf0]() e0.2   <env->
  void                    StVar              lW    parentenv, %33.0, e0.2
  val?^ | miss    %33.2 = LdVar              eR    length, e0.2
  lgl$#-          %33.3 = Identical                <blt length>, %33.2   <true>
  void                    Branch                   %33.3 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  fs              %34.0 = FrameState         R     0x55b543adf3c0+256: [], env=e0.2
  void                    Deopt              !v    %34.0, CallTarget@0x55b543addbe0[Call#3], %31.3   !
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    classes, e0.2
  lgl$#-          %35.1 = IsType                   %35.0 isA val?~- | miss
  void                    Branch                   %35.1 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  lgl$#-          %36.1 = %33.3
  dr              %36.2 = DeadBranchReached@0x55b543addbe0[Test#1]
  goto BB5
BB37   <- [35]
  val?~- | miss   %37.0 = CastType           d     dn %35.0
  val?-           %37.1 = Force!<value>            %37.0,    <str$->
  (int|real)$-    %37.2 = CallSafeBuiltin    wed   length(%37.1)    <int$->
  lgl$#-          %37.3 = IsType                   %37.2 isA int$-
  void                    Branch                   %37.3 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  void                    Nop                !     
  val?^ | miss    %38.1 = %35.0
  dr              %38.2 = Typecheck@0x55b543addbe0[Type#7]
  goto BB5
BB5   <- [36, 38]
  val?^ | miss    %5.0  = Phi                      %36.1:BB36, %38.1:BB38
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %36.2:BB36, %38.2:BB38
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55b543adf3c0+297: [], env=e0.2
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB39   <- [37]
  int$-           %39.0 = CastType           d     dn %37.2
  val?^ | miss    %39.1 = LdVar              eR    handlers, e0.2
  lgl$#-          %39.2 = IsType                   %39.1 isA val?~+ | miss
  void                    Branch                   %39.2 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  void                    Nop                !     
  (int|real)$-    %40.1 = %37.2
  dr              %40.2 = Typecheck@0x55b543addbe0[Type#8]
  goto BB7
BB41   <- [39]
  val?~+ | miss   %41.0 = CastType           d     dn %39.1
  val?+           %41.1 = Force!<value>            %41.0,    <vec$+>
  (int|real)$-    %41.2 = CallSafeBuiltin    wed   length(%41.1)    <int$->
  lgl$#-          %41.3 = IsType                   %41.2 isA int$-
  void                    Branch                   %41.3 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  void                    Nop                !     
  val?^ | miss    %42.1 = %39.1
  dr              %42.2 = Typecheck@0x55b543addbe0[Type#10]
  goto BB7
BB7   <- [40, 42]
  val?^ | miss    %7.0  = Phi                      %40.1:BB40, %42.1:BB42
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %40.2:BB40, %42.2:BB42
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55b543adf3c0+388: [%37.2], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB43   <- [41]
  int$-           %43.0 = CastType           d     dn %41.2
  lgl$-           %43.1 = Neq                d     %39.0, %43.0, elided   <lgl$->
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB27 (if true) | BB11 (if false)
BB44   <- [41]
  void                    Nop                !     
  (int|real)$-    %44.1 = %41.2
  dr              %44.2 = Typecheck@0x55b543addbe0[Type#11]
  goto BB9
BB27   <- [43]
  (cls|spec|blt)  %27.0 = LdFun              !v    stop, e0.2
  fs              %27.1 = FrameState         R     0x55b543adf3c0+511: [%27.0], env=e0.2
  void                    Deopt              !v    %27.1, DeadCall@0x55b543addbe0[Call#6], %27.0   !
BB11   <- [43]
  val?^ | miss    %11.0 = LdVar              eR    tryCatchList, e0.2
  lgl$#-          %11.1 = Identical                %11.0, %0.3
  void                    Branch                   %11.1 -> BB45 (if true) | BB46 (if false)
BB9   <- [44, 46]
  val?^ | miss    %9.0  = Phi                      %44.1:BB44, %46.1:BB46
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %44.2:BB44, %46.2:BB46
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55b543adf3c0+484: [%39.0, %41.2], env=e0.2
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB45   <- [11]
  prom-           %45.0 = MkArg                    unboundValue, tryCatch[0x55b541c9bb20]_p0, e0.2
  prom-           %45.1 = MkArg                    unboundValue, tryCatch[0x55b541c9bb20]_p1, e0.2
  prom-           %45.2 = MkArg                    unboundValue, tryCatch[0x55b541c9bb20]_p2 (!refl), e0.2
  prom-           %45.3 = MkArg                    unboundValue, tryCatch[0x55b541c9bb20]_p3, e0.2
  ct              %45.4 = PushContext        lCL   %45.0, %45.1, %45.2, %45.3, tryCatchList(expr, classes, parentenv, handlers), %0.3, e0.2
  val?^           %45.5 = CastType                 up %45.3
  val?^           %45.6 = CastType                 up %45.2
  val?^           %45.7 = CastType                 up %45.1
  val?^           %45.8 = CastType                 up %45.0
  env             e45.9 = MkEnv              l     expr=%45.8, names=%45.7, parentenv=%45.6, handlers=%45.5, parent=e0.2, context 1
  val?            %45.10 = Force!<lazy>       !vL   %45.7, e45.9   <str$->
  lgl$#-          %45.11 = IsType                   %45.10 isA val?-
  void                    Branch                   %45.11 -> BB47 (if true) | BB48 (if false)
BB46   <- [11]
  void                    Nop                !     
  val?^ | miss    %46.1 = %11.0
  dr              %46.2 = CallTarget@0x55b543addbe0[Call#7]
  goto BB9
BB47   <- [45]
  val?-           %47.0 = CastType           d     dn %45.10   <str$->
  (int|real)$-    %47.1 = CallSafeBuiltin    wed   length(%47.0)    <int$->
  lgl$#-          %47.2 = IsType                   %47.1 isA int$-
  void                    Branch                   %47.2 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x55b543adf3c0+586: [], env=e0.2
  fs              %48.1 = FrameState         R     0x55b5438c6af0+69: [<blt length>, %45.10], env=e45.9, next=%48.0
  void                    Deopt              !v    %48.1, Typecheck@0x55b5439ac300[Type#1], %45.10   !
BB49   <- [47]
  int$-           %49.0 = CastType           d     dn %47.1
  void                    StVar              lW    nh, %49.0, e45.9
  lgl$-           %49.2 = Gt                 d     %49.0, 1L, elided   <lgl$->
  lgl$#-          %49.3 = CheckTrueFalse     e     %49.2
  void                    Branch                   %49.3 -> BB26 (if true) | BB18 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x55b543adf3c0+586: [], env=e0.2
  fs              %50.1 = FrameState         R     0x55b5438c6af0+91: [%47.1], env=e45.9, next=%50.0
  void                    Deopt              !v    %50.1, Typecheck@0x55b5439ac300[Type#2], %47.1   !
BB26   <- [49]
  fs              %26.0 = FrameState         R     0x55b543adf3c0+586: [], env=e0.2
  (cls|spec|blt)  %26.1 = LdFun              !v    tryCatchOne, e0.2
  fs              %26.2 = FrameState         R     0x55b5438c6af0+250: [%26.1], env=e45.9, next=%26.0
  void                    Deopt              !v    %26.2, DeadCall@0x55b5439ac300[Call#2], %26.1   !
BB18   <- [49]
  void                    Visible            v     
  lgl$-           %18.1 = Eq                 vd    %49.0, 1L, elided   <lgl$->
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB23 (if true) | BB19 (if false)
BB23   <- [18]
  val?^ | miss    %23.0 = LdVar              eR    tryCatchOne, e45.9
  (cls|spec|blt)  %23.1 = CastType                 dn %23.0
  val+            %23.2 = CallSafeBuiltin          bodyCode(%23.1) 
  lgl$#-          %23.3 = Identical                %23.2, <(rir::DispatchTable*)0x55b5438e9570>
  void                    Branch                   %23.3 -> BB51 (if true) | BB52 (if false)
BB19   <- [18]
  void                    Visible            v     
  val?            %19.1 = Force!             !L    %45.8, e45.9   <val?_>
  val?            %19.2 = %19.1
  goto BB20
BB51   <- [23]
  val?            %51.0 = Force!             d     %23.0, 
  prom-           %51.1 = MkArg                    unboundValue, tryCatch[0x55b541c9bb20]_p4, e45.9
  prom-           %51.2 = MkArg                    unboundValue, tryCatch[0x55b541c9bb20]_p5, e45.9
  prom-           %51.3 = MkArg                    unboundValue, tryCatch[0x55b541c9bb20]_p6, e45.9
  prom-           %51.4 = MkArg                    unboundValue, tryCatch[0x55b541c9bb20]_p7, e45.9
  (cls|spec|blt)  %51.5 = ChkFunction        e     %51.0
  val?            %51.6 = StaticCall         !     tryCatchOne[0x55b54396fbf0](%51.1, %51.2, %51.3, %51.4) from %51.5 e45.9   <real$->
  lgl$#-          %51.7 = IsType                   %51.6 isA real$-
  void                    Branch                   %51.7 -> BB55 (if true) | BB56 (if false)
BB52   <- [23]
  fs              %52.0 = FrameState         R     0x55b543adf3c0+586: [], env=e0.2
  fs              %52.1 = FrameState         R     0x55b5438c6af0+105: [], env=e45.9, next=%52.0
  void                    Deopt              !v    %52.1, CallTarget@0x55b5439ac300[Call#1], %23.2   !
BB20   <- [19, 55]
  val?            %20.0 = Phi                      %19.2:BB19, %55.1:BB55
  val?            %20.1 = %20.0
  val?            %20.2 = PopContext         C     %20.1, %45.4   <real$->
  lgl$#-          %20.3 = IsType                   %20.2 isA real$-
  void                    Branch                   %20.3 -> BB53 (if true) | BB54 (if false)
BB55   <- [51]
  void                    Nop                !     
  val?            %55.1 = %51.6
  goto BB20
BB56   <- [51]
  fs              %56.0 = FrameState         R     0x55b543adf3c0+586: [], env=e0.2
  fs              %56.1 = FrameState         R     0x55b5438c6af0+235: [%51.6], env=e45.9, next=%56.0
  void                    Deopt              !v    %56.1, Typecheck@0x55b5439ac300[Type#13], %51.6   !
BB53   <- [20]
  real$-          %53.0 = CastType           d     dn %20.2
  void                    Return             l     %53.0
BB54   <- [20]
  fs              %54.0 = FrameState         R     0x55b543adf3c0+586: [%20.2], env=e0.2
  void                    Deopt              !v    %54.0, Typecheck@0x55b543addbe0[Type#17], %20.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classes, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parentenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handlers, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    names, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parentenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handlers, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <vec$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <cls->
  void                    Visible            v     
  void                    Return             l     %0.3

│ tryCatch[0x55b541c9bb20]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
