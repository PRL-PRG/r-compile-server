
┌──────────────────────────────────────────────────────────────────────────────┐
│ modifyList[0x56096c14c5f0]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 1               │
│ Properties:                                                                  │
├────── Final PIR Version
modifyList[0x56096c14c5f0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    stopifnot, <env 0x56096b0fa8c8>
  lgl$#-          %0.3  = Identical                %0.2, function(..., exprs, exprObject, local=TRUE) <|...
  void                    Branch                   %0.3 -> BB76 (if true) | BB77 (if false)
BB76   <- [0]
  env             e76.0 = MkEnv              l     x=%0.1, val=%0.0, keep.null(miss)=false, parent=<env 0x56096b0fa8c8>, context 1
  prom-           %76.1 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p1, e76.0
  prom-           %76.2 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p2 (!refl), e76.0
  val?            %76.3 = Call               !v    function(..., exprs, exprObject, local=TRUE) <|...(%76.1, %76.2) e76.0
  val?^ | miss    %76.4 = LdVar              eR    names, e76.0
  lgl$#-          %76.5 = Identical                <blt names>, %76.4   <true>
  void                    Branch                   %76.5 -> BB78 (if true) | BB79 (if false)
BB77   <- [0]
  env             e77.0 = (MkEnv)            l     x=%0.1, val=%0.0, keep.null(miss)=false, parent=<env 0x56096b0fa8c8>, context 1
  fs              %77.1 = FrameState         R     0x56096c04aac0+0: [], env=e77.0
  void                    Deopt              !v    %77.1, CallTarget@0x56096a8b9d30[Call#0], %0.2
BB78   <- [76]
  val?^ | miss    %78.0 = LdVar              eR    x, e76.0
  val?            %78.1 = Force!<wrapped>    !v    %78.0, e76.0   <vec+>
  lgl$#-          %78.2 = IsType                   %78.1 isA val?+
  void                    Branch                   %78.2 -> BB80 (if true) | BB81 (if false)
BB79   <- [76]
  fs              %79.0 = FrameState         R     0x56096c04aac0+37: [%76.3], env=e76.0
  void                    Deopt              !v    %79.0, DeadBranchReached@0x56096a8b9d30[Test#0], %76.5   !
BB80   <- [78]
  val?+           %80.0 = CastType           d     dn %78.1   <vec+>
  val+            %80.1 = CallSafeBuiltin    wed   names(%80.0)    <str->
  void                    StVar              lW    xnames, %80.1, e76.0
  val?^ | miss    %80.3 = LdVar              eR    names, e76.0
  lgl$#-          %80.4 = Identical                <blt names>, %80.3   <true>
  void                    Branch                   %80.4 -> BB82 (if true) | BB83 (if false)
BB81   <- [78]
  fs              %81.0 = FrameState         R     0x56096c04aac0+107: [<blt names>, %78.1], env=e76.0
  void                    Deopt              !v    %81.0, Typecheck@0x56096a8b9d30[Type#3], %78.1   !
BB82   <- [80]
  val?^ | miss    %82.0 = LdVar              eR    val, e76.0
  val?            %82.1 = Force!<wrapped>    !v    %82.0, e76.0   <vec+>
  lgl$#-          %82.2 = IsType                   %82.1 isA val?+
  void                    Branch                   %82.2 -> BB84 (if true) | BB85 (if false)
BB83   <- [80]
  fs              %83.0 = FrameState         R     0x56096c04aac0+143: [], env=e76.0
  void                    Deopt              !v    %83.0, DeadBranchReached@0x56096a8b9d30[Test#1], %80.4   !
BB84   <- [82]
  val?+           %84.0 = CastType           d     dn %82.1   <vec+>
  val+            %84.1 = CallSafeBuiltin    wed   names(%84.0)    <str->
  void                    StVar              lW    vnames, %84.1, e76.0
  val?^ | miss    %84.3 = LdVar              eR    nzchar, e76.0
  lgl$#-          %84.4 = Identical                <blt nzchar>, %84.3   <true>
  void                    Branch                   %84.4 -> BB86 (if true) | BB87 (if false)
BB85   <- [82]
  fs              %85.0 = FrameState         R     0x56096c04aac0+212: [<blt names>, %82.1], env=e76.0
  void                    Deopt              !v    %85.0, Typecheck@0x56096a8b9d30[Type#6], %82.1   !
BB86   <- [84]
  val?            %86.0 = CallBuiltin        !v    nzchar(%84.1) e76.0   <lgl->
  lgl$#-          %86.1 = IsType                   %86.0 isA lgl-
  void                    Branch                   %86.1 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  fs              %87.0 = FrameState         R     0x56096c04aac0+248: [], env=e76.0
  void                    Deopt              !v    %87.0, DeadBranchReached@0x56096a8b9d30[Test#3], %84.4   !
BB88   <- [86]
  lgl-            %88.0 = CastType           d     dn %86.0
  val?            %88.1 = Extract1_1D        wed   %84.1, %88.0, elided   <str->
  void                    StVar              lW    vnames, %88.1, e76.0
  val?^ | miss    %88.3 = LdVar              eR    keep.null, e76.0
  val?            %88.4 = Force!<lazy>       !v    %88.3, e76.0   <lgl$->
  lgl$#-          %88.5 = CheckTrueFalse     we    %88.4
  void                    Branch                   %88.5 -> BB72 (if true) | BB17 (if false)
BB89   <- [86]
  fs              %89.0 = FrameState         R     0x56096c04aac0+384: [%84.1, %86.0], env=e76.0
  void                    Deopt              !v    %89.0, Typecheck@0x56096a8b9d30[Type#13], %86.0   !
BB72   <- [88]
  val?^ | miss    %72.0 = LdVar              eR    vnames, e76.0
  val?            %72.1 = Force!             !v    %72.0, e76.0   <val?_>
  val?+           %72.2 = ToForSeq           e     %72.1
  int$-           %72.3 = Length                   %72.2
  int$-           %72.4 = Inc                      0L
  lgl$-           %72.5 = Lt                 d     %72.3, %72.4, elided   <@?>
  lgl$#-          %72.6 = Identical                %72.5, true
  void                    Branch                   %72.6 -> BB74 (if true) | BB73 (if false)
BB17   <- [88]
  val?^ | miss    %17.0 = LdVar              eR    vnames, e76.0
  lgl$#-          %17.1 = IsType                   %17.0 isA val?~- | miss
  void                    Branch                   %17.1 -> BB90 (if true) | BB91 (if false)
BB74   <- [72]
  void                    Nop                !     
  goto BB67
BB73   <- [72]
  val?            %73.0 = Extract2_1D        wed   %72.2, %72.4, elided
  void                    StVar              lW    v, %73.0, e76.0
  val?^ | miss    %73.2 = LdVar              eR    x !upd, e76.0
  val?            %73.3 = Force!             !v    %73.2, e76.0
  (cls|spec|blt)  %73.4 = LdFun              !v    %in%, e76.0
  fs              %73.5 = FrameState         R     0x56096c04aac0+1367: [%72.2, %72.3, %72.4, %73.4], env=e76.0
  void                    Deopt              !v    %73.5, DeadCall@0x56096a8b9d30[Call#9], %73.4   !
BB90   <- [17]
  val?~- | miss   %90.0 = CastType           d     dn %17.0
  val?-           %90.1 = Force!<value>            %90.0,    <str->
  int$-           %90.2 = Length                   %90.1
  int$-           %90.3 = Inc                      0L
  lgl$-           %90.4 = Lt                 d     %90.2, %90.3, elided   <false>
  lgl$#-          %90.5 = Identical                %90.4, true
  void                    Branch                   %90.5 -> BB93 (if true) | BB92 (if false)
BB91   <- [17]
  void                    Nop                !     
  val?^ | miss    %91.1 = %17.0
  dr              %91.2 = Typecheck@0x56096a8b9d30[Type#16]
  goto BB15
BB67   <- [74, 66]
  val?^ | miss    %67.0 = LdVar              eR    x, e76.0
  void                    Visible            v     
  val?            %67.2 = Force!<value>      !     %67.0, e76.0   <vec+>
  void                    Return             l     %67.2
BB93   <- [90]
  void                    Nop                !     
  lgl$#-          %93.1 = %90.5
  dr              %93.2 = DeadBranchReached@0x56096a8b9d30[Test#4]
  goto BB15
BB92   <- [90]
  val?            %92.0 = Extract2_1D        wed   %90.1, %90.3, elided
  void                    StVar              lW    v, %92.0, e76.0
  val?^ | miss    %92.2 = LdVar              eR    x !upd, e76.0
  val?            %92.3 = Force!             !v    %92.2, e76.0
  val?^ | miss    %92.4 = LdVar              eR    %in%, e76.0
  lgl$#-          %92.5 = Identical                %92.4, function(x, table) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %92.5 -> BB94 (if true) | BB95 (if false)
BB15   <- [91, 93]
  val?^ | miss    %15.0 = Phi                      %91.1:BB91, %93.1:BB93
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %91.2:BB91, %93.2:BB93
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x56096c04aac0+420: [%88.5], env=e76.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB94   <- [92]
  prom-           %94.0 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p3, e76.0
  prom-           %94.1 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p4, e76.0
  val?^           %94.2 = CastType                 up %94.1
  val?^           %94.3 = CastType                 up %94.0
  env             e94.4 = MkEnv              l     x=%94.3, table=%94.2, parent=R_BaseNamespace, context 0
  prom-           %94.5 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p10, e94.4
  val?^           %94.6 = CastType                 up %94.5
  val?^ | miss    %94.7 = LdVar              eR    v, e76.0
  lgl$#-          %94.8 = IsType                   %94.7 isA val?~- | miss
  void                    Branch                   %94.8 -> BB96 (if true) | BB97 (if false)
BB95   <- [92]
  void                    Nop                !     
  val?^ | miss    %95.1 = %92.4
  dr              %95.2 = CallTarget@0x56096a8b9d30[Call#5]
  goto BB18
BB96   <- [94]
  val?~- | miss   %96.0 = CastType           d     dn %94.7
  val?-           %96.1 = Force!<value>            %96.0,    <str$->
  prom-           %96.2 = MkArg                    %96.1, modifyList[0x56096c14c5f0]_p3 (!refl), e76.0
  val?~           %96.3 = CastType                 up %96.2
  void                    StArg              lW    x, %96.3, e94.4
  prom-           %96.5 = MkArg                    %96.1, modifyList[0x56096c14c5f0]_p9 (!refl), e94.4
  val?~           %96.6 = CastType                 up %96.5
  env             e96.7 = (MkEnv)            l     x=%96.6, table=%94.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %96.8 = IsEnvStub          R     , e96.7
  void                    Branch                   %96.8 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  void                    Nop                !     
  val?^ | miss    %97.1 = %94.7
  dr              %97.2 = Typecheck@0x56096a8b9d30[Type#17]
  goto BB18
BB18   <- [95, 97]
  val?^ | miss    %18.0 = Phi                      %95.1:BB95, %97.1:BB97
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %95.2:BB95, %97.2:BB97
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x56096c04aac0+488: [%90.1, %90.2, %90.3, %92.3], env=e76.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB98   <- [96]
  val?            %98.0 = Force!<lazy>       !vL   %94.2, e96.7   <(int|str)+>
  prom-           %98.1 = MkArg                    %98.0, modifyList[0x56096c14c5f0]_p10 (!refl), e94.4
  val?~           %98.2 = CastType                 up %98.1
  void                    StArg              lWd   table, %98.2, e96.7
  lgl$#-          %98.4 = IsType                   %98.0 isA val?+
  lgl$#-          %98.5 = IsEnvStub          R     , e96.7
  void                    Branch                   %98.5 -> BB100 (if true) | BB101 (if false)
BB99   <- [96]
  fs              %99.0 = FrameState         R     0x56096c04aac0+527: [%90.1, %90.2, %90.3], env=e76.0
  fs              %99.1 = FrameState         R     0x56096a613320+54: [], env=e94.4, next=%99.0
  env             e99.2 = (MkEnv)            l     x=%96.6, table=%94.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %99.3 = FrameState         R     0x56096a7fad40+9: [%96.1], env=e99.2, next=%99.1
  void                    Deopt              !v    %99.3, EnvStubMaterialized@0x56096a84dcb0[Call#unknown], e96.7   !
BB100   <- [98]
  void                    Branch                   %98.4 -> BB102 (if true) | BB103 (if false)
BB101   <- [98]
  void                    Nop                !     
  env             e101.1 = e96.7
  dr              %101.2 = EnvStubMaterialized@0x56096a84dcb0[Call#unknown]
  goto BB22
BB102   <- [100]
  val?+           %102.0 = CastType           d     dn %98.0   <(int|str)+>
  val+            %102.1 = CallSafeBuiltin    wed   match(%96.1, %102.0, 0L, nil)    <int->
  lgl$#-          %102.2 = IsType                   %102.1 isA int-
  void                    Branch                   %102.2 -> BB104 (if true) | BB105 (if false)
BB103   <- [100]
  void                    Nop                !     
  val?            %103.1 = %98.0
  dr              %103.2 = Typecheck@0x56096a84dcb0[Type#1]
  goto BB22
BB22   <- [101, 103]
  val?^ | miss    %22.0 = Phi                      e101.1:BB101, %103.1:BB103
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %101.2:BB101, %103.2:BB103
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x56096c04aac0+527: [%90.1, %90.2, %90.3], env=e76.0
  fs              %22.5 = FrameState         R     0x56096a613320+54: [], env=e94.4, next=%22.4
  fs              %22.6 = FrameState         R     0x56096a7fad40+23: [%96.1, %98.0], env=e96.7, next=%22.5
  void                    Deopt              !v    %22.6, %22.3, %22.1   !
BB104   <- [102]
  int-            %104.0 = CastType           d     dn %102.1
  lgl-            %104.1 = Gt                 wed   %104.0, 0L, elided   <lgl->
  lgl$-           %104.2 = AsLogical                %104.1
  lgl$#-          %104.3 = Identical                %104.2, false
  void                    Branch                   %104.3 -> BB71 (if true) | BB26 (if false)
BB105   <- [102]
  fs              %105.0 = FrameState         R     0x56096c04aac0+527: [%90.1, %90.2, %90.3], env=e76.0
  fs              %105.1 = FrameState         R     0x56096a613320+54: [], env=e94.4, next=%105.0
  fs              %105.2 = FrameState         R     0x56096a7fad40+69: [%102.1], env=e96.7, next=%105.1
  void                    Deopt              !v    %105.2, Typecheck@0x56096b645688[Type#2], %102.1   !
BB71   <- [104]
  void                    Nop                !     
  lgl$-           %71.1 = %104.2
  goto BB29
BB26   <- [104]
  val?^ | miss    %26.0 = LdVar              eR    x, e76.0
  val?            %26.1 = Force!<wrapped>    !v    %26.0, e76.0   <vec+>
  lgl$#-          %26.2 = IsType                   %26.1 isA val+   <true>
  lgl$#-          %26.3 = IsType                   %26.1 isA val?+
  void                    Branch                   %26.2 -> BB106 (if true) | BB107 (if false)
BB29   <- [71, 110]
  lgl$-           %29.0 = Phi                      %110.5:BB110, %71.1:BB71
  lgl$-           %29.1 = %29.0
  lgl$-           %29.2 = AsLogical                %29.1
  lgl$#-          %29.3 = Identical                %29.2, false
  void                    Branch                   %29.3 -> BB70 (if true) | BB30 (if false)
BB106   <- [26]
  val?^ | miss    %106.0 = LdVar              eR    v, e76.0
  lgl$#-          %106.1 = IsType                   %106.0 isA val?~- | miss
  void                    Branch                   %106.1 -> BB108 (if true) | BB109 (if false)
BB107   <- [26]
  void                    Nop                !     
  lgl$#-          %107.1 = %26.2
  dr              %107.2 = DeadBranchReached@0x56096a8b9d30[Test#5]
  goto BB27
BB70   <- [29]
  void                    Nop                !     
  lgl$-           %70.1 = %29.2
  goto BB33
BB30   <- [29]
  val?^ | miss    %30.0 = LdVar              eR    val, e76.0
  val?            %30.1 = Force!             !v    %30.0, e76.0   <val?_>
  lgl$#-          %30.2 = IsType                   %30.1 isA val+   <@?>
  void                    Branch                   %30.2 -> BB69 (if true) | BB31 (if false)
BB108   <- [106]
  val?~- | miss   %108.0 = CastType           d     dn %106.0
  val?-           %108.1 = Force!<value>            %108.0,    <str$->
  void                    Branch                   %26.3 -> BB110 (if true) | BB111 (if false)
BB109   <- [106]
  void                    Nop                !     
  val?^ | miss    %109.1 = %106.0
  dr              %109.2 = Typecheck@0x56096a8b9d30[Type#22]
  goto BB27
BB27   <- [107, 109, 111]
  val?^ | miss    %27.0 = Phi                      %107.1:BB107, %109.1:BB109, %111.1:BB111
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %107.2:BB107, %109.2:BB109, %111.2:BB111
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x56096c04aac0+548: [%90.1, %90.2, %90.3, %104.2, %26.1], env=e76.0
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
BB33   <- [70, 32]
  lgl$-           %33.0 = Phi                      %32.6:BB32, %70.1:BB70
  lgl$-           %33.1 = %33.0
  lgl$#-          %33.2 = CheckTrueFalse     e     %33.1
  void                    Branch                   %33.2 -> BB68 (if true) | BB34 (if false)
BB69   <- [30]
  val?^ | miss    %69.0 = LdVar              eR    v, e76.0
  val?            %69.1 = Force!             !v    %69.0, e76.0   <val?_>
  val?            %69.2 = %69.1
  goto BB32
BB31   <- [30]
  prom-           %31.0 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p8, e76.0
  prom-           %31.1 = %31.0
  goto BB32
BB110   <- [108]
  val?+           %110.0 = CastType           d     dn %26.1   <vec+>
  val?            %110.1 = Extract2_1D        wed   %110.0, %108.1, elided   <str$->
  lgl$-           %110.2 = Is                       %110.1, list
  lgl$-           %110.3 = AsLogical                %110.2
  lgl$-           %110.4 = LAnd                     %104.2, %110.3
  lgl$-           %110.5 = %110.4
  goto BB29
BB111   <- [108]
  void                    Nop                !     
  val?            %111.1 = %26.1
  dr              %111.2 = Typecheck@0x56096a8b9d30[Type#20]
  goto BB27
BB68   <- [33]
  (cls|spec|blt)  %68.0 = LdFun              !v    modifyList, e76.0
  fs              %68.1 = FrameState         R     0x56096c04aac0+774: [%90.1, %90.2, %90.3, %68.0], env=e76.0
  void                    Deopt              !v    %68.1, DeadCall@0x56096a8b9d30[Call#6], %68.0   !
BB34   <- [33]
  val?^ | miss    %34.0 = LdVar              eR    val, e76.0
  val?            %34.1 = Force!<wrapped>    !v    %34.0, e76.0   <vec+>
  lgl$#-          %34.2 = IsType                   %34.1 isA val+   <true>
  lgl$#-          %34.3 = IsType                   %34.1 isA val?+
  void                    Branch                   %34.2 -> BB112 (if true) | BB113 (if false)
BB32   <- [31, 69]
  val?            %32.0 = Phi                      %69.2:BB69, %31.1:BB31
  val?            %32.1 = %32.0
  val?            %32.2 = Extract2_1D        !v    %30.1, %32.1, e76.0   <val?_>
  lgl$-           %32.3 = Is                       %32.2, list
  lgl$-           %32.4 = AsLogical                %32.3
  lgl$-           %32.5 = LAnd                     %29.2, %32.4
  lgl$-           %32.6 = %32.5
  goto BB33
BB112   <- [34]
  val?^ | miss    %112.0 = LdVar              eR    v, e76.0
  lgl$#-          %112.1 = IsType                   %112.0 isA val?~- | miss
  void                    Branch                   %112.1 -> BB114 (if true) | BB115 (if false)
BB113   <- [34]
  void                    Nop                !     
  lgl$#-          %113.1 = %34.2
  dr              %113.2 = DeadBranchReached@0x56096a8b9d30[Test#7]
  goto BB35
BB114   <- [112]
  val?~- | miss   %114.0 = CastType           d     dn %112.0
  val?-           %114.1 = Force!<value>            %114.0,    <str$->
  void                    Branch                   %34.3 -> BB116 (if true) | BB117 (if false)
BB115   <- [112]
  void                    Nop                !     
  val?^ | miss    %115.1 = %112.0
  dr              %115.2 = Typecheck@0x56096a8b9d30[Type#30]
  goto BB35
BB35   <- [113, 115, 117]
  val?^ | miss    %35.0 = Phi                      %113.1:BB113, %115.1:BB115, %117.1:BB117
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %113.2:BB113, %115.2:BB115, %117.2:BB117
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x56096c04aac0+707: [%90.1, %90.2, %90.3, %34.1], env=e76.0
  void                    Deopt              !v    %35.4, %35.3, %35.1   !
BB116   <- [114]
  val?+           %116.0 = CastType           d     dn %34.1   <vec+>
  val?            %116.1 = Extract2_1D        wed   %116.0, %114.1, elided   <str$->
  val?^ | miss    %116.2 = LdVar              eR    x !upd, e76.0
  val?            %116.3 = Force!<wrapped>    !v    %116.2, e76.0   <vec+>
  lgl$#-          %116.4 = IsType                   %116.3 isA val?+
  lgl$#-          %116.5 = IsType                   %116.1 isA val?-
  val?^ | miss    %116.6 = LdVar              eR    v, e76.0
  lgl$#-          %116.7 = IsType                   %116.6 isA val?~- | miss
  void                    Branch                   %116.7 -> BB118 (if true) | BB119 (if false)
BB117   <- [114]
  void                    Nop                !     
  val?            %117.1 = %34.1
  dr              %117.2 = Typecheck@0x56096a8b9d30[Type#28]
  goto BB35
BB118   <- [116]
  val?~- | miss   %118.0 = CastType           d     dn %116.6
  val?-           %118.1 = Force!<value>            %118.0,    <str$->
  void                    Branch                   %116.5 -> BB120 (if true) | BB121 (if false)
BB119   <- [116]
  void                    Nop                !     
  val?^ | miss    %119.1 = %116.6
  dr              %119.2 = Typecheck@0x56096a8b9d30[Type#43]
  goto BB37
BB120   <- [118]
  val?-           %120.0 = CastType           d     dn %116.1   <str$->
  void                    Branch                   %116.4 -> BB122 (if true) | BB123 (if false)
BB121   <- [118]
  void                    Nop                !     
  val?            %121.1 = %116.1
  dr              %121.2 = Typecheck@0x56096a8b9d30[Type#31]
  goto BB37
BB37   <- [119, 121, 123]
  val?^ | miss    %37.0 = Phi                      %119.1:BB119, %121.1:BB121, %123.1:BB123
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %119.2:BB119, %121.2:BB121, %123.2:BB123
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x56096c04aac0+837: [%90.1, %90.2, %90.3, %116.1, %116.3], env=e76.0
  void                    Deopt              !v    %37.4, %37.3, %37.1   !
BB122   <- [120]
  val?+           %122.0 = CastType           d     dn %116.3   <vec+>
  val?+           %122.1 = Subassign2_1D      wed   %120.0, %122.0, %118.1, elided
  void                    StVar              lW    x, %122.1, e76.0
  val?+           %122.3 = %122.1
  int$-           %122.4 = %90.3
  goto BB39
BB123   <- [120]
  void                    Nop                !     
  val?            %123.1 = %116.3
  dr              %123.2 = Typecheck@0x56096a8b9d30[Type#42]
  goto BB37
BB39   <- [122, 154]
  val?+           %39.0 = Phi                      %122.3:BB122, %154.3:BB154
  val?+           %39.1 = %39.0
  int$-           %39.2 = Phi                      %122.4:BB122, %154.4:BB154
  int$-           %39.3 = %39.2
  int$-           %39.4 = Inc                      %39.3
  lgl$-           %39.5 = Lt                 d     %90.2, %39.4, elided
  lgl$#-          %39.6 = Identical                %39.5, true
  void                    Branch                   %39.6 -> BB66 (if true) | BB40 (if false)
BB66   <- [39]
  void                    Nop                !     
  goto BB67
BB40   <- [39]
  val?            %40.0 = Extract2_1D        wed   %90.1, %39.4, elided
  void                    StVar              lW    v, %40.0, e76.0
  val+            %40.2 = ChkMissing         e     %39.1
  val?^ | miss    %40.3 = LdVar              eR    %in%, e76.0
  lgl$#-          %40.4 = Identical                %40.3, function(x, table) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %40.4 -> BB124 (if true) | BB125 (if false)
BB124   <- [40]
  prom-           %124.0 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p5 (!refl), e76.0
  prom-           %124.1 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p6, e76.0
  val?^           %124.2 = CastType                 up %124.1
  val?^           %124.3 = CastType                 up %124.0
  env             e124.4 = MkEnv              l     x=%124.3, table=%124.2, parent=R_BaseNamespace, context 0
  val?^ | miss    %124.5 = LdVar              eR    match, e124.4
  lgl$#-          %124.6 = Identical                %124.5, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %124.6 -> BB126 (if true) | BB127 (if false)
BB125   <- [40]
  void                    Nop                !     
  val?^ | miss    %125.1 = %40.3
  dr              %125.2 = CallTarget@0x56096a8b9d30[Call#7]
  goto BB41
BB126   <- [124]
  prom-           %126.0 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p11, e124.4
  prom-           %126.1 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p12, e124.4
  val?^           %126.2 = CastType                 up %126.1
  val?^           %126.3 = CastType                 up %126.0
  env             e126.4 = (MkEnv)            l     x=%126.3, table=%126.2, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  val?            %126.5 = Force!<lazy>       !vrL  %124.3, e126.4   <(int|str)->
  prom-           %126.6 = MkArg                    %126.5, modifyList[0x56096c14c5f0]_p11 (!refl), e124.4
  val?~           %126.7 = CastType                 up %126.6
  void                    StArg              lWd   x, %126.7, e126.4
  lgl$#-          %126.9 = IsEnvStub          R     , e126.4
  void                    Branch                   %126.9 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  void                    Nop                !     
  val?^ | miss    %127.1 = %124.5
  dr              %127.2 = CallTarget@0x56096b645688[Call#0]
  goto BB41
BB41   <- [125, 127]
  val?^ | miss    %41.0 = Phi                      %125.1:BB125, %127.1:BB127
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %125.2:BB125, %127.2:BB127
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x56096c04aac0+895: [%90.1, %90.2, %39.4], env=e76.0
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB128   <- [126]
  val?            %128.0 = Force!<lazy>       !vL   %126.2, e126.4   <(int|str)+>
  lgl$#-          %128.1 = IsType                   %128.0 isA val?+
  lgl$#-          %128.2 = IsEnvStub          R     , e126.4
  void                    Branch                   %128.2 -> BB130 (if true) | BB131 (if false)
BB129   <- [126]
  fs              %129.0 = FrameState         R     0x56096c04aac0+943: [%90.1, %90.2, %39.4], env=e76.0
  fs              %129.1 = FrameState         R     0x56096a613320+54: [], env=e124.4, next=%129.0
  fs              %129.2 = FrameState         R     0x56096a7fad40+9: [%126.5], env=e126.4, next=%129.1
  void                    Deopt              !v    %129.2, EnvStubMaterialized@0x56096a84dcb0[Call#unknown], e126.4   !
BB130   <- [128]
  lgl$#-          %130.0 = IsType                   %126.5 isA val?-
  void                    Branch                   %130.0 -> BB132 (if true) | BB133 (if false)
BB131   <- [128]
  void                    Nop                !     
  env             e131.1 = e126.4
  dr              %131.2 = EnvStubMaterialized@0x56096a84dcb0[Call#unknown]
  goto BB45
BB132   <- [130]
  val?-           %132.0 = CastType           d     dn %126.5   <(int|str)->
  void                    Branch                   %128.1 -> BB134 (if true) | BB135 (if false)
BB133   <- [130]
  void                    Nop                !     
  val?            %133.1 = %126.5
  dr              %133.2 = Typecheck@0x56096a84dcb0[Type#0]
  goto BB45
BB45   <- [131, 133, 135]
  val?^ | miss    %45.0 = Phi                      e131.1:BB131, %133.1:BB133, %135.1:BB135
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %131.2:BB131, %133.2:BB133, %135.2:BB135
  dr              %45.3 = %45.2
  fs              %45.4 = FrameState         R     0x56096c04aac0+943: [%90.1, %90.2, %39.4], env=e76.0
  fs              %45.5 = FrameState         R     0x56096a613320+54: [], env=e124.4, next=%45.4
  fs              %45.6 = FrameState         R     0x56096a7fad40+23: [%126.5, %128.0], env=e126.4, next=%45.5
  void                    Deopt              !v    %45.6, %45.3, %45.1   !
BB134   <- [132]
  val?+           %134.0 = CastType           d     dn %128.0   <(int|str)+>
  val+            %134.1 = CallSafeBuiltin    wed   match(%132.0, %134.0, 0L, nil)    <int->
  lgl$#-          %134.2 = IsType                   %134.1 isA int-
  void                    Branch                   %134.2 -> BB136 (if true) | BB137 (if false)
BB135   <- [132]
  void                    Nop                !     
  val?            %135.1 = %128.0
  dr              %135.2 = Typecheck@0x56096a84dcb0[Type#1]
  goto BB45
BB136   <- [134]
  int-            %136.0 = CastType           d     dn %134.1
  lgl-            %136.1 = Gt                 wed   %136.0, 0L, elided   <lgl->
  lgl$-           %136.2 = AsLogical                %136.1
  lgl$#-          %136.3 = Identical                %136.2, false
  void                    Branch                   %136.3 -> BB65 (if true) | BB49 (if false)
BB137   <- [134]
  fs              %137.0 = FrameState         R     0x56096c04aac0+943: [%90.1, %90.2, %39.4], env=e76.0
  fs              %137.1 = FrameState         R     0x56096a613320+54: [], env=e124.4, next=%137.0
  fs              %137.2 = FrameState         R     0x56096a7fad40+69: [%134.1], env=e126.4, next=%137.1
  void                    Deopt              !v    %137.2, Typecheck@0x56096b645688[Type#2], %134.1   !
BB65   <- [136]
  void                    Nop                !     
  lgl$-           %65.1 = %136.2
  goto BB52
BB49   <- [136]
  val?^ | miss    %49.0 = LdVar              eR    x, e76.0
  val?            %49.1 = Force!<value>      !v    %49.0, e76.0   <vec+>
  lgl$#-          %49.2 = IsType                   %49.1 isA val+   <true>
  lgl$#-          %49.3 = IsType                   %49.1 isA val?+
  void                    Branch                   %49.2 -> BB138 (if true) | BB139 (if false)
BB52   <- [65, 142]
  lgl$-           %52.0 = Phi                      %142.5:BB142, %65.1:BB65
  lgl$-           %52.1 = %52.0
  lgl$-           %52.2 = AsLogical                %52.1
  lgl$#-          %52.3 = Identical                %52.2, false
  void                    Branch                   %52.3 -> BB64 (if true) | BB53 (if false)
BB138   <- [49]
  val?^ | miss    %138.0 = LdVar              eR    v, e76.0
  lgl$#-          %138.1 = IsType                   %138.0 isA val?~- | miss
  void                    Branch                   %138.1 -> BB140 (if true) | BB141 (if false)
BB139   <- [49]
  void                    Nop                !     
  lgl$#-          %139.1 = %49.2
  dr              %139.2 = DeadBranchReached@0x56096a8b9d30[Test#10]
  goto BB50
BB64   <- [52]
  void                    Nop                !     
  lgl$-           %64.1 = %52.2
  goto BB56
BB53   <- [52]
  val?^ | miss    %53.0 = LdVar              eR    val, e76.0
  val?            %53.1 = Force!             !v    %53.0, e76.0   <val?_>
  lgl$#-          %53.2 = IsType                   %53.1 isA val+   <@?>
  void                    Branch                   %53.2 -> BB63 (if true) | BB54 (if false)
BB140   <- [138]
  val?~- | miss   %140.0 = CastType           d     dn %138.0
  val?-           %140.1 = Force!<value>            %140.0,    <str$->
  void                    Branch                   %49.3 -> BB142 (if true) | BB143 (if false)
BB141   <- [138]
  void                    Nop                !     
  val?^ | miss    %141.1 = %138.0
  dr              %141.2 = Typecheck@0x56096a8b9d30[Type#49]
  goto BB50
BB50   <- [139, 141, 143]
  val?^ | miss    %50.0 = Phi                      %139.1:BB139, %141.1:BB141, %143.1:BB143
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %139.2:BB139, %141.2:BB141, %143.2:BB143
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x56096c04aac0+964: [%90.1, %90.2, %39.4, %136.2, %49.1], env=e76.0
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB56   <- [64, 55]
  lgl$-           %56.0 = Phi                      %55.6:BB55, %64.1:BB64
  lgl$-           %56.1 = %56.0
  lgl$#-          %56.2 = CheckTrueFalse     e     %56.1
  void                    Branch                   %56.2 -> BB62 (if true) | BB57 (if false)
BB63   <- [53]
  val?^ | miss    %63.0 = LdVar              eR    v, e76.0
  val?            %63.1 = Force!             !v    %63.0, e76.0   <val?_>
  val?            %63.2 = %63.1
  goto BB55
BB54   <- [53]
  prom-           %54.0 = MkArg                    unboundValue, modifyList[0x56096c14c5f0]_p7, e76.0
  prom-           %54.1 = %54.0
  goto BB55
BB142   <- [140]
  val?+           %142.0 = CastType           d     dn %49.1   <vec+>
  val?            %142.1 = Extract2_1D        wed   %142.0, %140.1, elided   <val?->
  lgl$-           %142.2 = Is                       %142.1, list
  lgl$-           %142.3 = AsLogical                %142.2
  lgl$-           %142.4 = LAnd                     %136.2, %142.3
  lgl$-           %142.5 = %142.4
  goto BB52
BB143   <- [140]
  void                    Nop                !     
  val?            %143.1 = %49.1
  dr              %143.2 = Typecheck@0x56096a8b9d30[Type#47]
  goto BB50
BB62   <- [56]
  (cls|spec|blt)  %62.0 = LdFun              !v    modifyList, e76.0
  fs              %62.1 = FrameState         R     0x56096c04aac0+1190: [%90.1, %90.2, %39.4, %62.0], env=e76.0
  void                    Deopt              !v    %62.1, DeadCall@0x56096a8b9d30[Call#8], %62.0   !
BB57   <- [56]
  val?^ | miss    %57.0 = LdVar              eR    val, e76.0
  val?            %57.1 = Force!<wrapped>    !v    %57.0, e76.0   <vec+>
  lgl$#-          %57.2 = IsType                   %57.1 isA val+   <true>
  lgl$#-          %57.3 = IsType                   %57.1 isA val?+
  void                    Branch                   %57.2 -> BB144 (if true) | BB145 (if false)
BB55   <- [54, 63]
  val?            %55.0 = Phi                      %63.2:BB63, %54.1:BB54
  val?            %55.1 = %55.0
  val?            %55.2 = Extract2_1D        !v    %53.1, %55.1, e76.0   <val?_>
  lgl$-           %55.3 = Is                       %55.2, list
  lgl$-           %55.4 = AsLogical                %55.3
  lgl$-           %55.5 = LAnd                     %52.2, %55.4
  lgl$-           %55.6 = %55.5
  goto BB56
BB144   <- [57]
  val?^ | miss    %144.0 = LdVar              eR    v, e76.0
  lgl$#-          %144.1 = IsType                   %144.0 isA val?~- | miss
  void                    Branch                   %144.1 -> BB146 (if true) | BB147 (if false)
BB145   <- [57]
  void                    Nop                !     
  lgl$#-          %145.1 = %57.2
  dr              %145.2 = DeadBranchReached@0x56096a8b9d30[Test#12]
  goto BB58
BB146   <- [144]
  val?~- | miss   %146.0 = CastType           d     dn %144.0
  val?-           %146.1 = Force!<value>            %146.0,    <str$->
  void                    Branch                   %57.3 -> BB148 (if true) | BB149 (if false)
BB147   <- [144]
  void                    Nop                !     
  val?^ | miss    %147.1 = %144.0
  dr              %147.2 = Typecheck@0x56096a8b9d30[Type#57]
  goto BB58
BB58   <- [145, 147, 149]
  val?^ | miss    %58.0 = Phi                      %145.1:BB145, %147.1:BB147, %149.1:BB149
  val?^ | miss    %58.1 = %58.0
  dr              %58.2 = Phi                      %145.2:BB145, %147.2:BB147, %149.2:BB149
  dr              %58.3 = %58.2
  fs              %58.4 = FrameState         R     0x56096c04aac0+1123: [%90.1, %90.2, %39.4, %57.1], env=e76.0
  void                    Deopt              !v    %58.4, %58.3, %58.1   !
BB148   <- [146]
  val?+           %148.0 = CastType           d     dn %57.1   <vec+>
  val?            %148.1 = Extract2_1D        wed   %148.0, %146.1, elided   <val?->
  val?^ | miss    %148.2 = LdVar              eR    x !upd, e76.0
  val?            %148.3 = Force!<value>      !v    %148.2, e76.0   <vec+>
  lgl$#-          %148.4 = IsType                   %148.3 isA val?+
  lgl$#-          %148.5 = IsType                   %148.1 isA val?-
  val?^ | miss    %148.6 = LdVar              eR    v, e76.0
  lgl$#-          %148.7 = IsType                   %148.6 isA val?~- | miss
  void                    Branch                   %148.7 -> BB150 (if true) | BB151 (if false)
BB149   <- [146]
  void                    Nop                !     
  val?            %149.1 = %57.1
  dr              %149.2 = Typecheck@0x56096a8b9d30[Type#55]
  goto BB58
BB150   <- [148]
  val?~- | miss   %150.0 = CastType           d     dn %148.6
  val?-           %150.1 = Force!<value>            %150.0,    <str$->
  void                    Branch                   %148.5 -> BB152 (if true) | BB153 (if false)
BB151   <- [148]
  void                    Nop                !     
  val?^ | miss    %151.1 = %148.6
  dr              %151.2 = Typecheck@0x56096a8b9d30[Type#70]
  goto BB60
BB152   <- [150]
  val?-           %152.0 = CastType           d     dn %148.1
  void                    Branch                   %148.4 -> BB154 (if true) | BB155 (if false)
BB153   <- [150]
  void                    Nop                !     
  val?            %153.1 = %148.1
  dr              %153.2 = Typecheck@0x56096a8b9d30[Type#58]
  goto BB60
BB60   <- [151, 153, 155]
  val?^ | miss    %60.0 = Phi                      %151.1:BB151, %153.1:BB153, %155.1:BB155
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %151.2:BB151, %153.2:BB153, %155.2:BB155
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x56096c04aac0+1253: [%90.1, %90.2, %39.4, %148.1, %148.3], env=e76.0
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB154   <- [152]
  val?+           %154.0 = CastType           d     dn %148.3   <vec+>
  val?+           %154.1 = Subassign2_1D      wed   %152.0, %154.0, %150.1, elided
  void                    StVar              lW    x, %154.1, e76.0
  val?+           %154.3 = %154.1
  int$-           %154.4 = %39.4
  goto BB39
BB155   <- [152]
  void                    Nop                !     
  val?            %155.1 = %148.3
  dr              %155.2 = Typecheck@0x56096a8b9d30[Type#69]
  goto BB60
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  lgl$-           %0.4  = Is                       %0.3, list
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    val, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  lgl$-           %0.4  = Is                       %0.3, list
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    xnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    xnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3

│ modifyList[0x56096c14c5f0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
