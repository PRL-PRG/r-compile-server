
┌──────────────────────────────────────────────────────────────────────────────┐
│ strtrim[0x56096c1a7110]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
strtrim[0x56096c1a7110]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     x=%0.1, width=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.3  = Force!<lazy>       !vr   %0.1,    <str+>
  lgl$#-          %0.4  = CallSafeBuiltin    wed   is.character(%0.3)    <lgl$->
  void                    Branch                   %0.4 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  val?^           %2.1  = %0.1
  goto BB3
BB4   <- [0]
  val+            %4.0  = CallSafeBuiltin    wed   as.character(%0.3)    <val?_>
  void                    StVar              lW    x, %4.0, e0.2
  val+            %4.2  = %4.0
  goto BB3
BB3   <- [2, 4]
  val?^           %3.0  = Phi                      %2.1:BB2, %4.2:BB4
  val?^           %3.1  = %3.0
  val?            %3.2  = Force!<wrapped>    !v    %3.1, e0.2   <str+>
  val?^ | miss    %3.3  = LdVar              eR    width, e0.2
  val?            %3.4  = Force!<lazy>       !v    %3.3, e0.2   <int$->
  val?            %3.5  = CallBuiltin        !     strtrim(%3.2, %3.4) e0.2
  void                    Return             l     %3.5

│ strtrim[0x56096c1a7110]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
