
┌──────────────────────────────────────────────────────────────────────────────┐
│ asNamespace[0x56096c105e70]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
asNamespace[0x56096c105e70]
BB0
  val?~+          %0.0  = LdArg                    1
  val?~+          %0.1  = LdArg                    0
  val+            %0.2  = Force!<lazy>             %0.1,    <(str|env)->
  lgl$#-          %0.3  = IsType                   %0.2 isA val?-
  void                    Branch                   %0.3 -> BB30 (if true) | BB31 (if false)
BB30   <- [0]
  val-            %30.0 = CastType           d     dn %0.2   <(str|env)->
  lgl$#-          %30.1 = CallSafeBuiltin    wed   is.character(%30.0)    <lgl$->
  env             e30.2 = MkEnv              l     ns=%0.1, base.OK=%0.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %30.1 -> BB28 (if true) | BB3 (if false)
BB31   <- [0]
  env             e31.0 = (MkEnv)            l     ns=%0.1, base.OK=%0.0, parent=R_BaseNamespace, context 1
  fs              %31.1 = FrameState         R     0x56096c457920+69: [<blt is.character>, %0.2], env=e31.0
  void                    Deopt              !v    %31.1, Typecheck@0x56096c910f68[Type#1], %0.2
BB28   <- [30]
  void                    Nop                !     
  lgl$#-          %28.1 = %30.1
  goto BB4
BB3   <- [30]
  lgl$#-          %3.0  = CallSafeBuiltin    wed   is.symbol(%0.2)    <lgl$->
  lgl$-           %3.1  = LOr                      %30.1, %3.0
  lgl$-           %3.2  = %3.1
  goto BB4
BB4   <- [3, 28]
  lgl$-           %4.0  = Phi                      %3.2:BB3, %28.1:BB28
  lgl$-           %4.1  = %4.0
  lgl$#-          %4.2  = CheckTrueFalse     e     %4.1
  void                    Branch                   %4.2 -> BB22 (if true) | BB5 (if false)
BB22   <- [4]
  prom-           %22.0 = MkArg                    unboundValue, asNamespace[0x56096c105e70]_p0 (!refl), e30.2
  ct              %22.1 = PushContext        lCL   %22.0, getNamespace(ns), function(name) <(rir::DispatchTable*)0x56096c0|..., e30.2
  val?^           %22.2 = CastType                 up %22.0
  env             e22.3 = MkEnv              l     name=%22.2, parent=R_BaseNamespace, context 1
  val?            %22.4 = Force!<lazy>       !vr   %22.2,    <str$->
  val?            %22.5 = CallBuiltin        !v    getRegisteredNamespace(%22.4) e22.3   <nil->
  lgl$-           %22.6 = Is                       %22.5, NULL
  void                    StVar              lW    ns, %22.5, e22.3
  val             %22.8 = ChkMissing         e     %22.5
  lgl$-           %22.9 = Not                d     %22.6, elided
  lgl$#-          %22.10 = CheckTrueFalse     e     %22.9
  void                    Branch                   %22.10 -> BB27 (if true) | BB25 (if false)
BB5   <- [4]
  void                    Nop                !     
  goto BB6
BB27   <- [22]
  void                    Nop                !     
  val?            %27.1 = %22.5
  goto BB26
BB25   <- [22]
  val?^ | miss    %25.0 = LdVar              eR    loadNamespace, e22.3
  lgl$#-          %25.1 = Identical                %25.0, function(package, lib.loc=NULL, keep.source=ge|...
  void                    Branch                   %25.1 -> BB36 (if true) | BB37 (if false)
BB6   <- [5, 26]
  val?^ | miss    %6.0  = LdVar              eR    isNamespace, e30.2
  lgl$#-          %6.1  = Identical                %6.0, function(ns) <(rir::DispatchTable*)0x56096c596|...
  void                    Branch                   %6.1 -> BB32 (if true) | BB33 (if false)
BB26   <- [27, 36]
  val?            %26.0 = Phi                      %36.2:BB36, %27.1:BB27
  val?            %26.1 = %26.0
  val?            %26.2 = PopContext         C     %26.1, %22.1   <val?_>
  void                    StVar              lW    ns, %26.2, e30.2
  goto BB6
BB36   <- [25]
  prom-           %36.0 = MkArg                    unboundValue, asNamespace[0x56096c105e70]_p2, e22.3
  val?            %36.1 = Call               !v    function(package, lib.loc=NULL, keep.source=ge|...(%36.0) e22.3   <val?_>
  val?            %36.2 = %36.1
  goto BB26
BB37   <- [25]
  fs              %37.0 = FrameState         R     0x56096c457920+244: [], env=e30.2
  fs              %37.1 = FrameState         R     0x56096c11e480+36: [], env=e22.3, next=%37.0
  void                    Deopt              !v    %37.1, CallTarget@0x56096c910e08[Call#0], %25.0   !
BB32   <- [6]
  prom-           %32.0 = MkArg                    unboundValue, asNamespace[0x56096c105e70]_p1 (!refl), e30.2
  ct              %32.1 = PushContext        lCL   %32.0, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x56096c596|..., e30.2
  val?^           %32.2 = CastType                 up %32.0
  env             e32.3 = MkEnv              l     ns=%32.2, parent=R_BaseNamespace, context 1
  val?            %32.4 = Force!<lazy>       !vrL  %32.2, e32.3   <env->
  val?            %32.5 = CallBuiltin        !v    isNamespaceEnv(%32.4) e32.3
  val?            %32.6 = PopContext         C     %32.5, %32.1   <lgl$->
  lgl$#-          %32.7 = IsType                   %32.6 isA lgl$-
  void                    Branch                   %32.7 -> BB34 (if true) | BB35 (if false)
BB33   <- [6]
  fs              %33.0 = FrameState         R     0x56096c457920+258: [], env=e30.2
  void                    Deopt              !v    %33.0, CallTarget@0x56096c910f68[Call#3], %6.0   !
BB34   <- [32]
  lgl$-           %34.0 = CastType           d     dn %32.6
  lgl$-           %34.1 = Not                d     %34.0, elided
  lgl$#-          %34.2 = CheckTrueFalse     e     %34.1
  void                    Branch                   %34.2 -> BB21 (if true) | BB11 (if false)
BB35   <- [32]
  void                    Nop                !     
  val?            %35.1 = %32.6
  dr              %35.2 = Typecheck@0x56096c910f68[Type#9]
  goto BB9
BB21   <- [34]
  (cls|spec|blt)  %21.0 = LdFun              !v    stop, e30.2
  fs              %21.1 = FrameState         R     0x56096c457920+435: [%21.0], env=e30.2
  void                    Deopt              !v    %21.1, DeadCall@0x56096c910f68[Call#6], %21.0   !
BB11   <- [34]
  val?^ | miss    %11.0 = LdVar              eR    base.OK, e30.2
  lgl$#-          %11.1 = IsType                   %11.0 isA lgl$-
  void                    Branch                   %11.1 -> BB38 (if true) | BB39 (if false)
BB9   <- [35, 39, 41]
  val?^ | miss    %9.0  = Phi                      %35.1:BB35, %39.1:BB39, %41.1:BB41
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %35.2:BB35, %39.2:BB39, %41.2:BB41
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x56096c457920+290: [%32.6], env=e30.2
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB38   <- [11]
  lgl$-           %38.0 = CastType           d     dn %11.0
  lgl$-           %38.1 = Not                d     %38.0, elided
  lgl$-           %38.2 = AsLogical                %38.1
  lgl$#-          %38.3 = Identical                %38.2, false
  void                    Branch                   %38.3 -> BB20 (if true) | BB12 (if false)
BB39   <- [11]
  void                    Nop                !     
  val?^ | miss    %39.1 = %11.0
  dr              %39.2 = Typecheck@0x56096c910f68[Type#10]
  goto BB9
BB20   <- [38]
  void                    Nop                !     
  lgl$-           %20.1 = %38.2
  goto BB17
BB12   <- [38]
  val?^ | miss    %12.0 = LdVar              eR    isBaseNamespace, e30.2
  lgl$#-          %12.1 = Identical                %12.0, function(ns) <(rir::DispatchTable*)0x56096ca86|...
  void                    Branch                   %12.1 -> BB40 (if true) | BB41 (if false)
BB17   <- [20, 44]
  lgl$-           %17.0 = Phi                      %44.3:BB44, %20.1:BB20
  lgl$-           %17.1 = %17.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB19 (if true) | BB18 (if false)
BB40   <- [12]
  prom-           %40.0 = MkArg                    unboundValue, asNamespace[0x56096c105e70]_p3, e30.2
  ct              %40.1 = PushContext        lCL   %40.0, isBaseNamespace(ns), function(ns) <(rir::DispatchTable*)0x56096ca86|..., e30.2
  val?^           %40.2 = CastType                 up %40.0
  env             e40.3 = MkEnv              l     ns=%40.2, parent=R_BaseNamespace, context 1
  prom-           %40.4 = MkArg                    unboundValue, asNamespace[0x56096c105e70]_p4, e40.3
  prom-           %40.5 = MkArg                    unboundValue, asNamespace[0x56096c105e70]_p5, e40.3
  ct              %40.6 = PushContext        lCL   %40.4, %40.5, identical(ns, .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e40.3
  val?^           %40.7 = CastType                 up %40.5
  val?^           %40.8 = CastType                 up %40.4
  env             e40.9 = MkEnv              l     x=%40.8, y=%40.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %40.10 = Force!<lazy>       !vL   %40.8, e40.9   <val?+>
  val?            %40.11 = Force!<lazy>       !vL   %40.7, e40.9   <val?>
  val?            %40.12 = CallBuiltin        !v    identical(%40.10, %40.11, true, true, true, true, false, true) e40.9
  val?            %40.13 = PopContext         C     %40.12, %40.6   <lgl$->
  lgl$#-          %40.14 = IsType                   %40.13 isA lgl$-
  void                    Branch                   %40.14 -> BB42 (if true) | BB43 (if false)
BB41   <- [12]
  void                    Nop                !     
  val?^ | miss    %41.1 = %12.0
  dr              %41.2 = CallTarget@0x56096c910f68[Call#4]
  goto BB9
BB19   <- [17]
  (cls|spec|blt)  %19.0 = LdFun              !v    stop, e30.2
  fs              %19.1 = FrameState         R     0x56096c457920+393: [%19.0], env=e30.2
  void                    Deopt              !v    %19.1, DeadCall@0x56096c910f68[Call#5], %19.0   !
BB18   <- [17]
  val?^ | miss    %18.0 = LdVar              eR    ns, e30.2
  void                    Visible            v     
  val?            %18.2 = Force!<wrapped>    !     %18.0, e30.2   <env->
  void                    Return             l     %18.2
BB42   <- [40]
  lgl$-           %42.0 = CastType           d     dn %40.13
  val?            %42.1 = PopContext         C     %42.0, %40.1   <lgl$->
  lgl$#-          %42.2 = IsType                   %42.1 isA lgl$-
  void                    Branch                   %42.2 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  fs              %43.0 = FrameState         R     0x56096c457920+356: [%38.2], env=e30.2
  fs              %43.1 = FrameState         R     0x56096c966a70+37: [%40.13], env=e40.3, next=%43.0
  void                    Deopt              !v    %43.1, Typecheck@0x56096c920dd8[Type#2], %40.13   !
BB44   <- [42]
  lgl$-           %44.0 = CastType           d     dn %42.1
  lgl$-           %44.1 = AsLogical                %44.0
  lgl$-           %44.2 = LAnd                     %38.2, %44.1
  lgl$-           %44.3 = %44.2
  goto BB17
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x56096c457920+356: [%38.2, %42.1], env=e30.2
  void                    Deopt              !v    %45.0, Typecheck@0x56096c910f68[Type#12], %42.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseNamespaceEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ asNamespace[0x56096c105e70]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
