
┌──────────────────────────────────────────────────────────────────────────────┐
│ .findMethodInTable[0x56096d010150]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
.findMethodInTable[0x56096d010150]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    is, <env 0x56096a5ed378>
  lgl$#-          %0.3  = Identical                %0.2, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %0.3 -> BB40 (if true) | BB41 (if false)
BB40   <- [0]
  env             e40.0 = MkEnv              l     signature=%0.1, table=%0.0, fdef(miss)=nil, expdSig(miss)=true, parent=<env 0x56096a5ed378>, context 1
  prom-           %40.1 = MkArg                    unboundValue, .findMethodInTable[0x56096d010150]_p2 (!refl), e40.0
  val?            %40.2 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%40.1, "genericFunction") e40.0   <lgl$->
  lgl$#-          %40.3 = IsType                   %40.2 isA lgl$-
  void                    Branch                   %40.3 -> BB42 (if true) | BB43 (if false)
BB41   <- [0]
  env             e41.0 = (MkEnv)            l     signature=%0.1, table=%0.0, fdef(miss)=nil, expdSig(miss)=true, parent=<env 0x56096a5ed378>, context 1
  fs              %41.1 = FrameState         R     0x56096ce53ec0+0: [], env=e41.0
  void                    Deopt              !v    %41.1, CallTarget@0x56096cc47660[Call#0], %0.2
BB42   <- [40]
  lgl$-           %42.0 = CastType           d     dn %40.2
  lgl$-           %42.1 = AsLogical                %42.0
  lgl$#-          %42.2 = Identical                %42.1, false
  void                    Branch                   %42.2 -> BB38 (if true) | BB5 (if false)
BB43   <- [40]
  fs              %43.0 = FrameState         R     0x56096ce53ec0+37: [%40.2], env=e40.0
  void                    Deopt              !v    %43.0, Typecheck@0x56096cc47660[Type#1], %40.2   !
BB38   <- [42]
  void                    Nop                !     
  lgl$-           %38.1 = %42.1
  goto BB6
BB5   <- [42]
  val?^ | miss    %5.0  = LdVar              eR    expdSig, e40.0
  val?            %5.1  = Force!<lazy>       !v    %5.0, e40.0   <lgl$->
  lgl$-           %5.2  = AsLogical          e     %5.1
  lgl$-           %5.3  = LAnd                     %42.1, %5.2
  lgl$-           %5.4  = %5.3
  goto BB6
BB6   <- [38, 5]
  lgl$-           %6.0  = Phi                      %5.4:BB5, %38.1:BB38
  lgl$-           %6.1  = %6.0
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB37 (if true) | BB9 (if false)
BB37   <- [6]
  val?^ | miss    %37.0 = LdVar              eR    .matchSigLength, e40.0
  lgl$#-          %37.1 = Identical                %37.0, function(sig, fdef, fenv, reset=FALSE) <(rir::|...
  void                    Branch                   %37.1 -> BB44 (if true) | BB45 (if false)
BB9   <- [6]
  void                    Nop                !     
  goto BB10
BB44   <- [37]
  prom-           %44.0 = MkArg                    unboundValue, .findMethodInTable[0x56096d010150]_p5, e40.0
  prom-           %44.1 = MkArg                    unboundValue, .findMethodInTable[0x56096d010150]_p6, e40.0
  prom-           %44.2 = MkArg                    unboundValue, .findMethodInTable[0x56096d010150]_p7, e40.0
  val?            %44.3 = StaticCall         !v    .matchSigLength[0x56096cd04580](%44.0, %44.1, %44.2, false) e40.0   <str+>
  void                    StVar              lW    signature, %44.3, e40.0
  goto BB10
BB45   <- [37]
  fs              %45.0 = FrameState         R     0x56096ce53ec0+65: [%6.1], env=e40.0
  void                    Deopt              !v    %45.0, CallTarget@0x56096cc47660[Call#1], %37.0   !
BB10   <- [9, 44]
  val?^ | miss    %10.0 = LdVar              eR    .sigLabel, e40.0
  lgl$#-          %10.1 = Identical                %10.0, function(sig) <(rir::DispatchTable*)0x56096ced|...
  void                    Branch                   %10.1 -> BB46 (if true) | BB47 (if false)
BB46   <- [10]
  prom-           %46.0 = MkArg                    unboundValue, .findMethodInTable[0x56096d010150]_p3, e40.0
  val?^           %46.1 = CastType                 up %46.0
  val?^ | miss    %46.2 = LdVar              eR    paste, <env 0x56096a5ed378>
  lgl$#-          %46.3 = Identical                %46.2, function(..., sep=" ", collapse=NULL, recycle0|...
  void                    Branch                   %46.3 -> BB48 (if true) | BB49 (if false)
BB47   <- [10]
  void                    Nop                !     
  val?^ | miss    %47.1 = %10.0
  dr              %47.2 = CallTarget@0x56096cc47660[Call#3]
  goto BB11
BB48   <- [46]
  env             e48.0 = MkEnv              l     sig=%46.1, parent=<env 0x56096a5ed378>, context 0
  prom-           %48.1 = MkArg                    unboundValue, .findMethodInTable[0x56096d010150]_p9, e48.0
  dots-           %48.2 = DotsList           l     %48.1
  val?^ | miss    %48.3 = CastType                 up %48.1
  env             e48.4 = MkEnv              l     ...=%48.2, sep(miss)=" ", collapse="#", recycle0(miss)=false, parent=R_BaseNamespace, context -1
  val?            %48.5 = Force!             !vL   %48.3, e48.4
  val+            %48.6 = CallSafeBuiltin    wed   list(%48.5)    <vec->
  val+            %48.7 = CallSafeBuiltin    wed   paste(%48.6, " ", "#", false)    <str$->
  void                    StVar              lW    label, %48.7, e40.0
  val?^ | miss    %48.9 = LdVar              eR    table, e40.0
  val?            %48.10 = Force!<lazy>       !v    %48.9, e40.0   <env->
  lgl$#-          %48.11 = IsType                   %48.10 isA val+   <true>
  lgl$#-          %48.12 = IsType                   %48.10 isA val?-
  void                    Branch                   %48.11 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  void                    Nop                !     
  val?^ | miss    %49.1 = %46.2
  dr              %49.2 = CallTarget@0x56096cdda978[Call#0]
  goto BB11
BB11   <- [47, 49]
  val?^ | miss    %11.0 = Phi                      %47.1:BB47, %49.1:BB49
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %47.2:BB47, %49.2:BB49
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x56096ce53ec0+137: [], env=e40.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB50   <- [48]
  val?^ | miss    %50.0 = LdVar              eR    label, e40.0
  lgl$#-          %50.1 = IsType                   %50.0 isA val?~- | miss
  void                    Branch                   %50.1 -> BB52 (if true) | BB53 (if false)
BB51   <- [48]
  void                    Nop                !     
  lgl$#-          %51.1 = %48.11
  dr              %51.2 = DeadBranchReached@0x56096cc47660[Test#0]
  goto BB13
BB52   <- [50]
  val?~- | miss   %52.0 = CastType           d     dn %50.0
  val?-           %52.1 = Force!<value>            %52.0,    <str$->
  void                    Branch                   %48.12 -> BB54 (if true) | BB55 (if false)
BB53   <- [50]
  void                    Nop                !     
  val?^ | miss    %53.1 = %50.0
  dr              %53.2 = Typecheck@0x56096cc47660[Type#12]
  goto BB13
BB13   <- [51, 53, 55]
  val?^ | miss    %13.0 = Phi                      %51.1:BB51, %53.1:BB53, %55.1:BB55
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %51.2:BB51, %53.2:BB53, %55.2:BB55
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x56096ce53ec0+192: [%48.10], env=e40.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB54   <- [52]
  val?-           %54.0 = CastType           d     dn %48.10   <env->
  val?            %54.1 = Extract2_1D        wed   %54.0, %52.1, elided   <nil->
  lgl$-           %54.2 = Is                       %54.1, NULL
  void                    StVar              lW    value, %54.1, e40.0
  lgl$-           %54.4 = Not                d     %54.2, elided
  lgl$#-          %54.5 = CheckTrueFalse     e     %54.4
  void                    Branch                   %54.5 -> BB17 (if true) | BB15 (if false)
BB55   <- [52]
  void                    Nop                !     
  val?            %55.1 = %48.10
  dr              %55.2 = Typecheck@0x56096cc47660[Type#10]
  goto BB13
BB17   <- [54]
  val?^ | miss    %17.0 = LdVar              eR    is.environment, e40.0
  lgl$#-          %17.1 = Identical                <blt is.environment>, %17.0   <@?>
  void                    Branch                   %17.1 -> BB19 (if true) | BB18 (if false)
BB15   <- [54]
  void                    Invisible          v     
  nil-            %15.1 = nil
  goto BB16
BB19   <- [17]
  val             %19.0 = ChkMissing         e     %54.1
  lgl$#-          %19.1 = CallSafeBuiltin    wed   is.environment(%54.1) 
  void                    Branch                   %19.1 -> BB24 (if true) | BB22 (if false)
BB18   <- [17]
  (cls|spec|blt)  %18.0 = LdFun              !v    is.environment, e40.0
  fs              %18.1 = FrameState         R     0x56096ce53ec0+311: [%18.0], env=e40.0
  void                    Deopt              !v    %18.1, DeadCall@0x56096cc47660[Call#4], %18.0   !
BB16   <- [15, 23]
  val             %16.0 = Phi                      %15.1:BB15, %23.4:BB23
  val             %16.1 = %16.0
  void                    Return             l     %16.1
BB24   <- [19]
  val?^ | miss    %24.0 = LdVar              eR    names, e40.0
  lgl$#-          %24.1 = Identical                <blt names>, %24.0   <@?>
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB22   <- [19]
  void                    Nop                !     
  val?            %22.1 = %54.1
  goto BB23
BB26   <- [24]
  lgl$#-          %26.0 = IsType                   %54.1 isA val?-
  void                    Branch                   %26.0 -> BB56 (if true) | BB57 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    names, e40.0
  fs              %25.1 = FrameState         R     0x56096ce53ec0+418: [%25.0], env=e40.0
  void                    Deopt              !v    %25.1, DeadCall@0x56096cc47660[Call#5], %25.0   !
BB23   <- [22, 35, 31]
  val?            %23.0 = Phi                      %35.4:BB35, %31.2:BB31, %22.1:BB22
  val?            %23.1 = %23.0
  val             %23.2 = ChkMissing         e     %23.1   <val?_>
  void                    Visible            v     
  val             %23.4 = %23.2
  goto BB16
BB56   <- [26]
  val?-           %56.0 = CastType           d     dn %54.1   <nil->
  val+            %56.1 = CallSafeBuiltin    wed   names(%56.0)    <val?_>
  void                    StVar              lW    pkgs, %56.1, e40.0
  val?^ | miss    %56.3 = LdVar              eR    length, e40.0
  lgl$#-          %56.4 = Identical                <blt length>, %56.3   <@?>
  void                    Branch                   %56.4 -> BB28 (if true) | BB27 (if false)
BB57   <- [26]
  fs              %57.0 = FrameState         R     0x56096ce53ec0+374: [%19.1], env=e40.0
  void                    Deopt              !v    %57.0, Typecheck@0x56096cc47660[Type#13], %54.1   !
BB28   <- [56]
  real$-          %28.0 = CallSafeBuiltin    wed   length(%56.1)    <val?_>
  lgl$-           %28.1 = Eq                 d     %28.0, 1, elided   <val?_>
  lgl$#-          %28.2 = CheckTrueFalse     e     %28.1
  void                    Branch                   %28.2 -> BB33 (if true) | BB29 (if false)
BB27   <- [56]
  (cls|spec|blt)  %27.0 = LdFun              !v    length, e40.0
  fs              %27.1 = FrameState         R     0x56096ce53ec0+523: [%27.0], env=e40.0
  void                    Deopt              !v    %27.1, DeadCall@0x56096cc47660[Call#6], %27.0   !
BB33   <- [28]
  lgl$#-          %33.0 = IsType                   %56.0 isA val+   <@?>
  void                    Branch                   %33.0 -> BB36 (if true) | BB34 (if false)
BB29   <- [28]
  lgl$-           %29.0 = Eq                 d     %28.0, 0, elided   <val?_>
  lgl$#-          %29.1 = CheckTrueFalse     e     %29.0
  void                    Branch                   %29.1 -> BB32 (if true) | BB30 (if false)
BB36   <- [33]
  void                    Nop                !     
  val+            %36.1 = %56.1
  goto BB35
BB34   <- [33]
  prom-           %34.0 = MkArg                    unboundValue, .findMethodInTable[0x56096d010150]_p4 (!refl), e40.0
  prom-           %34.1 = %34.0
  goto BB35
BB32   <- [29]
  void                    StVar              lW    value, nil, e40.0
  nil-            %32.1 = nil
  goto BB31
BB30   <- [29]
  void                    Nop                !     
  val?-           %30.1 = %56.0
  goto BB31
BB35   <- [34, 36]
  val+            %35.0 = Phi                      %36.1:BB36, %34.1:BB34
  val+            %35.1 = %35.0
  val?            %35.2 = Extract2_1D        wed   %56.0, %35.1, elided   <val?_>
  void                    StVar              lW    value, %35.2, e40.0
  val?            %35.4 = %35.2
  goto BB23
BB31   <- [30, 32]
  val?-           %31.0 = Phi                      %32.1:BB32, %30.1:BB30
  val?-           %31.1 = %31.0
  val?-           %31.2 = %31.1
  goto BB23
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|cls)>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkgs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     environment, <0x56096a38cb68>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .findMethodInTable[0x56096d010150]_p8, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3

│ .findMethodInTable[0x56096d010150]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
