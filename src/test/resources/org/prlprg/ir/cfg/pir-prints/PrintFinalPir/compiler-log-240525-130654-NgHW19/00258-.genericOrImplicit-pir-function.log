
┌──────────────────────────────────────────────────────────────────────────────┐
│ .genericOrImplicit[0x56096d12add0]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2│
│ Properties:                                                                  │
├────── Final PIR Version
.genericOrImplicit[0x56096d12add0]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    .getGenericFromCache, <env 0x56096a5ed378>
  lgl$#-          %0.4  = Identical                %0.3, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %0.4 -> BB27 (if true) | BB28 (if false)
BB27   <- [0]
  env             e27.0 = MkEnv              l     name=%0.2, pkg=%0.1, env=%0.0, parent=<env 0x56096a5ed378>, context 1
  prom-           %27.1 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p0 (!refl), e27.0
  prom-           %27.2 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p1 (!refl), e27.0
  prom-           %27.3 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p2 (!refl), e27.0
  ct              %27.4 = PushContext        lCL   %27.1, %27.2, %27.3, .getGenericFromCache(name, env, pkg), function(name, where, pkg="") <(rir::DispatchT|..., e27.0
  val?^           %27.5 = CastType                 up %27.3
  val?^           %27.6 = CastType                 up %27.2
  val?^           %27.7 = CastType                 up %27.1
  val?^ | miss    %27.8 = LdVar              eR    .getGenericFromCacheTable, <env 0x56096a5ed378>
  lgl$#-          %27.9 = Identical                %27.8, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %27.9 -> BB29 (if true) | BB30 (if false)
BB28   <- [0]
  env             e28.0 = (MkEnv)            l     name=%0.2, pkg=%0.1, env=%0.0, parent=<env 0x56096a5ed378>, context 1
  fs              %28.1 = FrameState         R     0x56096c705eb0+0: [], env=e28.0
  void                    Deopt              !v    %28.1, CallTarget@0x56096c2d4650[Call#0], %0.3
BB29   <- [27]
  env             e29.0 = MkEnv              l     name=%27.7, where=%27.6, pkg=%27.5, parent=<env 0x56096a5ed378>, context 1
  prom-           %29.1 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p13, e29.0
  prom-           %29.2 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p14, e29.0
  prom-           %29.3 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p15, e29.0
  prom-           %29.4 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p16, e29.0
  val?            %29.5 = StaticCall         !v    .getGenericFromCacheTable[0x56096cfd4d50](%29.1, %29.2, %29.3, %29.4) e29.0   <nil->
  val?            %29.6 = PopContext         C     %29.5, %27.4   <nil->
  lgl$-           %29.7 = Is                       %29.6, NULL
  void                    StVar              lW    fdef, %29.6, e27.0
  val             %29.9 = ChkMissing         e     %29.6
  lgl$#-          %29.10 = CheckTrueFalse     e     %29.7
  void                    Branch                   %29.10 -> BB9 (if true) | BB7 (if false)
BB30   <- [27]
  fs              %30.0 = FrameState         R     0x56096c705eb0+42: [], env=e27.0
  env             e30.1 = (MkEnv)            l     name=%27.7, where=%27.6, pkg=%27.5, parent=<env 0x56096a5ed378>, context 1
  fs              %30.2 = FrameState         R     0x56096c802900+0: [], env=e30.1, next=%30.0
  void                    Deopt              !v    %30.2, CallTarget@0x56096c10a370[Call#0], %27.8   !
BB9   <- [29]
  val?^ | miss    %9.0  = LdVar              eR    tryCatch, e27.0
  lgl$#-          %9.1  = Identical                %9.0, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %9.1 -> BB31 (if true) | BB32 (if false)
BB7   <- [29]
  void                    Nop                !     
  goto BB8
BB31   <- [9]
  prom-           %31.0 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p3, e27.0
  cls             %31.1 = MkCls                    .genericOrImplicit@Prom(5)0, e27.0
  prom-           %31.2 = MkArg                    %31.1, .genericOrImplicit[0x56096d12add0]_p5 (!refl), e27.0
  dots-           %31.3 = DotsList           l     error=%31.2
  val?            %31.4 = StaticCall         !v    tryCatch[0x56096c16f840](%31.0, %31.3) { 0 1n } e27.0   <env->
  void                    StVar              lW    penv, %31.4, e27.0
  val?^ | miss    %31.6 = LdVar              eR    isNamespace, e27.0
  lgl$#-          %31.7 = Identical                %31.6, function(ns) <(rir::DispatchTable*)0x56096c596|...
  void                    Branch                   %31.7 -> BB33 (if true) | BB34 (if false)
BB32   <- [9]
  fs              %32.0 = FrameState         R     0x56096c705eb0+56: [], env=e27.0
  void                    Deopt              !v    %32.0, CallTarget@0x56096c2d4650[Call#1], %9.0   !
BB8   <- [7, 19, 55]
  val?^ | miss    %8.0  = LdVar              eR    fdef, e27.0
  void                    Visible            v     
  val?            %8.2  = Force!<value>      !     %8.0, e27.0   <cls>
  void                    Return             l     %8.2
BB33   <- [31]
  prom-           %33.0 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p6 (!refl), e27.0
  ct              %33.1 = PushContext        lCL   %33.0, isNamespace(penv), function(ns) <(rir::DispatchTable*)0x56096c596|..., e27.0
  val?^           %33.2 = CastType                 up %33.0
  env             e33.3 = MkEnv              l     ns=%33.2, parent=R_BaseNamespace, context 1
  val?            %33.4 = Force!<lazy>       !vrL  %33.2, e33.3   <env->
  val?            %33.5 = CallBuiltin        !v    isNamespaceEnv(%33.4) e33.3
  val?            %33.6 = PopContext         C     %33.5, %33.1   <lgl$->
  lgl$#-          %33.7 = IsType                   %33.6 isA lgl$-
  void                    Branch                   %33.7 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  fs              %34.0 = FrameState         R     0x56096c705eb0+145: [], env=e27.0
  void                    Deopt              !v    %34.0, CallTarget@0x56096c2d4650[Call#3], %31.6   !
BB35   <- [33]
  lgl$-           %35.0 = CastType           d     dn %33.6
  lgl$-           %35.1 = Not                d     %35.0, elided
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB25 (if true) | BB14 (if false)
BB36   <- [33]
  void                    Nop                !     
  val?            %36.1 = %33.6
  dr              %36.2 = Typecheck@0x56096c2d4650[Type#9]
  goto BB12
BB25   <- [35]
  (cls|spec|blt)  %25.0 = LdFun              !v    paste0, e27.0
  fs              %25.1 = FrameState         R     0x56096c705eb0+199: [%25.0], env=e27.0
  void                    Deopt              !v    %25.1, DeadCall@0x56096c2d4650[Call#4], %25.0   !
BB14   <- [35]
  val?^ | miss    %14.0 = LdVar              eR    getFunction, e27.0
  lgl$#-          %14.1 = Identical                %14.0, function(name, generic=TRUE, mustFind=TRUE, wh|...
  void                    Branch                   %14.1 -> BB37 (if true) | BB38 (if false)
BB12   <- [36, 38]
  val?^ | miss    %12.0 = Phi                      %36.1:BB36, %38.1:BB38
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %36.2:BB36, %38.2:BB38
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x56096c705eb0+177: [%33.6], env=e27.0
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB37   <- [14]
  prom-           %37.0 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p7, e27.0
  prom-           %37.1 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p8, e27.0
  val?            %37.2 = StaticCall         !v    getFunction[0x56096ca86f10](%37.0, true, false, %37.1) e27.0   <cls->
  void                    StVar              lW    fdef, %37.2, e27.0
  val?^ | miss    %37.4 = LdVar              eR    is, e27.0
  lgl$#-          %37.5 = Identical                %37.4, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %37.5 -> BB39 (if true) | BB40 (if false)
BB38   <- [14]
  void                    Nop                !     
  val?^ | miss    %38.1 = %14.0
  dr              %38.2 = CallTarget@0x56096c2d4650[Call#8]
  goto BB12
BB39   <- [37]
  prom-           %39.0 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p9 (!refl), e27.0
  val?            %39.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%39.0, "genericFunction") e27.0   <lgl$->
  lgl$#-          %39.2 = IsType                   %39.1 isA lgl$-
  void                    Branch                   %39.2 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x56096c705eb0+478: [], env=e27.0
  void                    Deopt              !v    %40.0, CallTarget@0x56096c2d4650[Call#9], %37.4   !
BB41   <- [39]
  lgl$-           %41.0 = CastType           d     dn %39.1
  lgl$-           %41.1 = Not                d     %41.0, elided
  lgl$#-          %41.2 = CheckTrueFalse     e     %41.1
  void                    Branch                   %41.2 -> BB20 (if true) | BB19 (if false)
BB42   <- [39]
  void                    Nop                !     
  val?            %42.1 = %39.1
  dr              %42.2 = Typecheck@0x56096c2d4650[Type#23]
  goto BB17
BB20   <- [41]
  val?^ | miss    %20.0 = LdVar              eR    is.primitive, e27.0
  lgl$#-          %20.1 = Identical                %20.0, function(x) <(rir::DispatchTable*)0x56096c254d|...
  void                    Branch                   %20.1 -> BB43 (if true) | BB44 (if false)
BB19   <- [41]
  void                    Nop                !     
  goto BB8
BB17   <- [42, 44, 46]
  val?^ | miss    %17.0 = Phi                      %42.1:BB42, %44.1:BB44, %46.1:BB46
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %42.2:BB42, %44.2:BB44, %46.2:BB46
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x56096c705eb0+515: [%39.1], env=e27.0
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB43   <- [20]
  val?^ | miss    %43.0 = LdVar              eR    fdef, e27.0
  lgl$#-          %43.1 = IsType                   %43.0 isA val?~- | miss
  void                    Branch                   %43.1 -> BB45 (if true) | BB46 (if false)
BB44   <- [20]
  void                    Nop                !     
  val?^ | miss    %44.1 = %20.0
  dr              %44.2 = CallTarget@0x56096c2d4650[Call#10]
  goto BB17
BB45   <- [43]
  val?~- | miss   %45.0 = CastType           d     dn %43.0
  val?-           %45.1 = Force!<value>            %45.0,    <cls->
  str$-           %45.2 = CallSafeBuiltin    wed   typeof(%45.1)    <str$->
  int$-           %45.3 = Length                   %45.2
  lgl$-           %45.4 = Eq                 d     %45.3, 1L, elided   <true>
  lgl$#-          %45.5 = Identical                %45.4, true
  void                    Branch                   %45.5 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  void                    Nop                !     
  val?^ | miss    %46.1 = %43.0
  dr              %46.2 = Typecheck@0x56096c2d4650[Type#24]
  goto BB17
BB47   <- [45]
  lgl$-           %47.0 = CallSafeBuiltin    wed   is.na(%45.2) 
  lgl$#-          %47.1 = CheckTrueFalse     e     %47.0   <false>
  void                    Branch                   %47.1 -> BB50 (if true) | BB49 (if false)
BB48   <- [45]
  prom-           %48.0 = MkArg                    %45.1, .genericOrImplicit[0x56096d12add0]_p10 (!refl), e27.0
  val?~           %48.1 = CastType                 up %48.0
  env             e48.2 = (MkEnv)            l     x=%48.1, parent=R_BaseNamespace, context 0
  env             e48.3 = MaterializeEnv           , e48.2   <@?>
  fs              %48.4 = FrameState         R     0x56096c705eb0+564: [], env=e27.0
  fs              %48.5 = FrameState         R     0x56096c0c20b0+32: [], env=e48.3, next=%48.4
  prom-           %48.6 = MkArg                    %45.1, .genericOrImplicit[0x56096d12add0]_p17 (!refl), e48.3
  val?~           %48.7 = CastType                 up %48.6
  env             e48.8 = (MkEnv)            l     x=%48.7, parent=R_BaseNamespace, context -1
  fs              %48.9 = FrameState         R     0x56096c0a79f0+27: [%45.2], env=e48.8, next=%48.5
  void                    Deopt              !v    %48.9, DeadBranchReached@0x56096c56c7c8[Test#1], %45.5   !
BB50   <- [47]
  void                    Nop                !     
  lgl$#-          %50.1 = %47.1
  dr              %50.2 = DeadBranchReached@0x56096c56c7c8[Test#7]
  goto BB23
BB49   <- [47]
  lgl$-           %49.0 = Eq                 d     %45.2, special, elided
  lgl$#-          %49.1 = CheckTrueFalse     e     %49.0   <false>
  void                    Branch                   %49.1 -> BB52 (if true) | BB51 (if false)
BB23   <- [50, 52, 54, 56]
  val?^ | miss    %23.0 = Phi                      %50.1:BB50, %52.1:BB52, %54.1:BB54, %56.1:BB56
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %50.2:BB50, %52.2:BB52, %54.2:BB54, %56.2:BB56
  dr              %23.3 = %23.2
  prom-           %23.4 = MkArg                    %45.1, .genericOrImplicit[0x56096d12add0]_p10 (!refl), e27.0
  val?~           %23.5 = CastType                 up %23.4
  fs              %23.6 = FrameState         R     0x56096c705eb0+564: [], env=e27.0
  env             e23.7 = (MkEnv)            l     x=%23.5, parent=R_BaseNamespace, context 0
  fs              %23.8 = FrameState         R     0x56096c0c20b0+240: [%45.2, %47.0], env=e23.7, next=%23.6
  void                    Deopt              !v    %23.8, %23.3, %23.1   !
BB52   <- [49]
  void                    Nop                !     
  lgl$#-          %52.1 = %49.1
  dr              %52.2 = DeadBranchReached@0x56096c56c7c8[Test#8]
  goto BB23
BB51   <- [49]
  lgl$-           %51.0 = Eq                 d     %45.2, builtin, elided
  lgl$#-          %51.1 = CheckTrueFalse     e     %51.0   <false>
  void                    Branch                   %51.1 -> BB54 (if true) | BB53 (if false)
BB54   <- [51]
  void                    Nop                !     
  lgl$#-          %54.1 = %51.1
  dr              %54.2 = DeadBranchReached@0x56096c56c7c8[Test#9]
  goto BB23
BB53   <- [51]
  val?^ | miss    %53.0 = LdVar              eR    implicitGeneric, e27.0
  lgl$#-          %53.1 = Identical                %53.0, function(name, where=topenv(parent.frame()), g|...
  void                    Branch                   %53.1 -> BB55 (if true) | BB56 (if false)
BB55   <- [53]
  prom-           %55.0 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p11, e27.0
  prom-           %55.1 = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p12, e27.0
  val?            %55.2 = StaticCall         !v    implicitGeneric[0x56096cf5ff20](%55.0, %55.1) e27.0   <cls>
  void                    StVar              lW    fdef, %55.2, e27.0
  goto BB8
BB56   <- [53]
  void                    Nop                !     
  val?^ | miss    %56.1 = %53.0
  dr              %56.2 = CallTarget@0x56096c2d4650[Call#11]
  goto BB23
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getNamespace, <0x56096b8e04a8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .genericOrImplicit[0x56096d12add0]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    .genericOrImplicit@Prom(5)0, e0.0
  void                    Return             l     %0.1
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    penv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    penv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    penv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ .genericOrImplicit[0x56096d12add0]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
