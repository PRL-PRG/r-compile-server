
┌──────────────────────────────────────────────────────────────────────────────┐
│ isBaseFun[0x56096ca36b50]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
isBaseFun[0x56096ca36b50]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.primitive, <env 0x56096a5ed378>
  lgl$#-          %0.2  = Identical                %0.1, function(x) <(rir::DispatchTable*)0x56096c254d|...
  void                    Branch                   %0.2 -> BB10 (if true) | BB11 (if false)
BB10   <- [0]
  env             e10.0 = MkEnv              l     fun=%0.0, parent=<env 0x56096a5ed378>, context 1
  val?            %10.1 = Force!<lazy>       !vrd  %0.0,    <cls>
  str$-           %10.2 = CallSafeBuiltin    wed   typeof(%10.1)    <str$->
  int$-           %10.3 = Length                   %10.2
  lgl$-           %10.4 = Eq                 d     %10.3, 1L, elided   <true>
  lgl$#-          %10.5 = Identical                %10.4, true
  void                    Branch                   %10.5 -> BB12 (if true) | BB13 (if false)
BB11   <- [0]
  env             e11.0 = (MkEnv)            l     fun=%0.0, parent=<env 0x56096a5ed378>, context 1
  fs              %11.1 = FrameState         R     0x56096cac05b0+0: [], env=e11.0
  void                    Deopt              !v    %11.1, CallTarget@0x56096c602f68[Call#0], %0.1
BB12   <- [10]
  lgl$-           %12.0 = CallSafeBuiltin    wed   is.na(%10.2) 
  lgl$#-          %12.1 = CheckTrueFalse     e     %12.0   <false>
  void                    Branch                   %12.1 -> BB15 (if true) | BB14 (if false)
BB13   <- [10]
  prom-           %13.0 = MkArg                    %10.1, isBaseFun[0x56096ca36b50]_p2 (!refl), e10.0
  val?~           %13.1 = CastType                 up %13.0
  env             e13.2 = (MkEnv)            l     x=%13.1, parent=R_BaseNamespace, context 0
  env             e13.3 = MaterializeEnv           , e13.2   <@?>
  fs              %13.4 = FrameState         R     0x56096cac05b0+32: [], env=e10.0
  fs              %13.5 = FrameState         R     0x56096c0c20b0+32: [], env=e13.3, next=%13.4
  prom-           %13.6 = MkArg                    %10.1, isBaseFun[0x56096ca36b50]_p3 (!refl), e13.3
  val?~           %13.7 = CastType                 up %13.6
  env             e13.8 = (MkEnv)            l     x=%13.7, parent=R_BaseNamespace, context -1
  fs              %13.9 = FrameState         R     0x56096c0a79f0+27: [%10.2], env=e13.8, next=%13.5
  void                    Deopt              !v    %13.9, DeadBranchReached@0x56096c56c7c8[Test#1], %10.5
BB15   <- [12]
  void                    Nop                !     
  lgl$#-          %15.1 = %12.1
  dr              %15.2 = DeadBranchReached@0x56096c56c7c8[Test#7]
  goto BB5
BB14   <- [12]
  lgl$-           %14.0 = Eq                 d     %10.2, special, elided
  lgl$#-          %14.1 = CheckTrueFalse     e     %14.0   <false>
  void                    Branch                   %14.1 -> BB17 (if true) | BB16 (if false)
BB5   <- [15, 17, 19, 21]
  val?^ | miss    %5.0  = Phi                      %15.1:BB15, %17.1:BB17, %19.1:BB19, %21.1:BB21
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %15.2:BB15, %17.2:BB17, %19.2:BB19, %21.2:BB21
  dr              %5.3  = %5.2
  prom-           %5.4  = MkArg                    %10.1, isBaseFun[0x56096ca36b50]_p2 (!refl), e10.0
  val?~           %5.5  = CastType                 up %5.4
  fs              %5.6  = FrameState         R     0x56096cac05b0+32: [], env=e10.0
  env             e5.7  = (MkEnv)            l     x=%5.5, parent=R_BaseNamespace, context 0
  fs              %5.8  = FrameState         R     0x56096c0c20b0+240: [%10.2, %12.0], env=e5.7, next=%5.6
  void                    Deopt              !v    %5.8, %5.3, %5.1
BB17   <- [14]
  void                    Nop                !     
  lgl$#-          %17.1 = %14.1
  dr              %17.2 = DeadBranchReached@0x56096c56c7c8[Test#8]
  goto BB5
BB16   <- [14]
  lgl$-           %16.0 = Eq                 d     %10.2, builtin, elided
  lgl$#-          %16.1 = CheckTrueFalse     e     %16.0   <false>
  void                    Branch                   %16.1 -> BB19 (if true) | BB18 (if false)
BB19   <- [16]
  void                    Nop                !     
  lgl$#-          %19.1 = %16.1
  dr              %19.2 = DeadBranchReached@0x56096c56c7c8[Test#9]
  goto BB5
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    identical, <env 0x56096a5ed378>
  lgl$#-          %18.1 = Identical                %18.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %18.1 -> BB20 (if true) | BB21 (if false)
BB20   <- [18]
  prom-           %20.0 = MkArg                    unboundValue, isBaseFun[0x56096ca36b50]_p4, e10.0
  prom-           %20.1 = MkArg                    unboundValue, isBaseFun[0x56096ca36b50]_p6, e10.0
  ct              %20.2 = PushContext        lCL   %20.0, %20.1, identical(environment(fun), .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e10.0
  val?^           %20.3 = CastType                 up %20.1
  val?^           %20.4 = CastType                 up %20.0
  env             e20.5 = MkEnv              l     x=%20.4, y=%20.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %20.6 = Force!<lazy>       !vL   %20.4, e20.5   <val?+>
  val?            %20.7 = Force!<lazy>       !vL   %20.3, e20.5   <val?>
  val?            %20.8 = CallBuiltin        !     identical(%20.6, %20.7, true, true, true, true, false, true) e20.5
  val?            %20.9 = PopContext         C     %20.8, %20.2   <lgl$->
  lgl$#-          %20.10 = IsType                   %20.9 isA lgl$-
  void                    Branch                   %20.10 -> BB22 (if true) | BB23 (if false)
BB21   <- [18]
  void                    Nop                !     
  val?^ | miss    %21.1 = %18.0
  dr              %21.2 = CallTarget@0x56096c602f68[Call#1]
  goto BB5
BB22   <- [20]
  lgl$-           %22.0 = CastType           d     dn %20.9
  lgl$-           %22.1 = AsLogical                %22.0
  lgl$-           %22.2 = AsLogical                %22.1
  void                    Return             l     %22.2
BB23   <- [20]
  fs              %23.0 = FrameState         R     0x56096cac05b0+81: [false, %20.9], env=e10.0
  void                    Deopt              !v    %23.0, Typecheck@0x56096c602f68[Type#5], %20.9   !
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     environment, <0x56096a38cb68>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, isBaseFun[0x56096ca36b50]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseNamespaceEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ isBaseFun[0x56096ca36b50]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
