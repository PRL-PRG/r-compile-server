
┌──────────────────────────────────────────────────────────────────────────────┐
│ .setupMethodsTables[0x56096d49ce70]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1       │
│ Properties:                                                                  │
├────── Final PIR Version
.setupMethodsTables[0x56096d49ce70]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    environment, <env 0x56096a5ed378>
  lgl$#-          %0.3  = Identical                %0.2, function(fun=NULL) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %0.3 -> BB41 (if true) | BB42 (if false)
BB41   <- [0]
  env             e41.0 = MkEnv              l     generic=%0.1, initialize=%0.0, parent=<env 0x56096a5ed378>, context 1
  val?            %41.1 = Force!<lazy>       !vr   %0.1,    <cls>
  prom-           %41.2 = MkArg                    %41.1, .setupMethodsTables[0x56096d49ce70]_p0 (!refl), 
  val?            %41.3 = StaticCall         !v    environment[0x56096cfae820](%41.2) e41.0   <env->
  void                    StVar              lW    env, %41.3, e41.0
  val?^ | miss    %41.5 = LdVar              eR    initialize, e41.0
  val?            %41.6 = Force!<value>      !v    %41.5, e41.0   <lgl$->
  lgl$-           %41.7 = AsLogical          e     %41.6
  lgl$#-          %41.8 = Identical                %41.7, true
  void                    Branch                   %41.8 -> BB4 (if true) | BB3 (if false)
BB42   <- [0]
  env             e42.0 = (MkEnv)            l     generic=%0.1, initialize=%0.0, parent=<env 0x56096a5ed378>, context 1
  fs              %42.1 = FrameState         R     0x56096d148850+0: [], env=e42.0
  void                    Deopt              !v    %42.1, CallTarget@0x56096d2dbd98[Call#1], %0.2
BB4   <- [41]
  lgl$#-          %4.0  = CheckTrueFalse     e     %41.7
  void                    Branch                   %4.0 -> BB37 (if true) | BB5 (if false)
BB3   <- [41]
  (cls|spec|blt)  %3.0  = LdFun              !v    exists, e41.0
  fs              %3.1  = FrameState         R     0x56096d148850+72: [%41.7, %3.0], env=e41.0
  void                    Deopt              !v    %3.1, DeadCall@0x56096d2dbd98[Call#2], %3.0   !
BB37   <- [4]
  void                    StVar              lW    nsig, 1, e41.0
  (cls|spec|blt)  %37.1 = LdFun              !v    @, <0x560969fe5bd8>, e41.0
  prom-           %37.2 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p16, e41.0
  prom-           %37.3 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p17, e41.0
  val?            %37.4 = Call               !v    %37.1(%37.2, %37.3) e41.0   <vec->
  val?+           %37.5 = ToForSeq           e     %37.4
  int$-           %37.6 = Length                   %37.5
  int$-           %37.7 = Inc                      0L
  lgl$-           %37.8 = Lt                 d     %37.6, %37.7, elided   <true>
  lgl$#-          %37.9 = Identical                %37.8, true
  void                    Branch                   %37.9 -> BB43 (if true) | BB44 (if false)
BB5   <- [4]
  void                    Nop                !     
  goto BB6
BB43   <- [37]
  val?^ | miss    %43.0 = LdVar              eR    assign, e41.0
  lgl$#-          %43.1 = Identical                %43.0, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %43.1 -> BB45 (if true) | BB46 (if false)
BB44   <- [37]
  void                    Nop                !     
  lgl$#-          %44.1 = %37.9
  dr              %44.2 = DeadBranchReached@0x56096d2dbd98[Test#0]
  goto BB38
BB6   <- [5, 45]
  val?^ | miss    %6.0  = LdVar              eR    lapply, e41.0
  lgl$#-          %6.1  = Identical                %6.0, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %6.1 -> BB47 (if true) | BB48 (if false)
BB45   <- [43]
  prom-           %45.0 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p18, e41.0
  prom-           %45.1 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p19, e41.0
  val?            %45.2 = StaticCall         !v    assign[0x56096d366770](".SigLength", %45.0, missingArg, %45.1) { 0 1 3n } e41.0
  goto BB6
BB46   <- [43]
  void                    Nop                !     
  val?^ | miss    %46.1 = %43.0
  dr              %46.2 = CallTarget@0x56096d2dbd98[Call#20]
  goto BB38
BB38   <- [44, 46]
  val?^ | miss    %38.0 = Phi                      %44.1:BB44, %46.1:BB46
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %44.2:BB44, %46.2:BB46
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x56096d148850+192: [%37.4], env=e41.0
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB47   <- [6]
  prom-           %47.0 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p1, e41.0
  prom-           %47.1 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p4, e41.0
  ct              %47.2 = PushContext        lCL   %47.0, %47.1, lapply(@(generic, signature), as.name), function(X, FUN, ...) <(rir::DispatchTable*)0x|..., e41.0
  val?^           %47.3 = CastType                 up %47.1
  val?^           %47.4 = CastType                 up %47.0
  env             e47.5 = MkEnv              l     X=%47.4, FUN=%47.3, ...(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %47.6 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p20, e47.5
  val?            %47.7 = StaticCall         !v    match.fun[0x56096ca36440](%47.6) e47.5   <(cls|blt)->
  void                    StVar              lW    FUN, %47.7, e47.5
  val?^ | miss    %47.9 = LdVar              eR    is.vector, e47.5
  lgl$#-          %47.10 = Identical                %47.9, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %47.10 -> BB49 (if true) | BB50 (if false)
BB48   <- [6]
  fs              %48.0 = FrameState         R     0x56096d148850+915: [], env=e41.0
  void                    Deopt              !v    %48.0, CallTarget@0x56096d2dbd98[Call#21], %6.0   !
BB49   <- [47]
  val?^ | miss    %49.0 = LdVar              eR    X, e47.5
  val?            %49.1 = Force!<lazy>       !v    %49.0, e47.5   <(str|vec)+>
  lgl$#-          %49.2 = CallSafeBuiltin    wed   is.vector(%49.1, "any")    <lgl$->
  lgl$#-          %49.3 = Not                d     %49.2, elided
  void                    Branch                   %49.2 -> BB36 (if true) | BB13 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x56096d148850+952: [], env=e41.0
  fs              %50.1 = FrameState         R     0x56096c060de0+46: [], env=e47.5, next=%50.0
  void                    Deopt              !v    %50.1, CallTarget@0x56096c01e520[Call#1], %47.9   !
BB36   <- [49]
  val?^ | miss    %36.0 = LdVar              eR    is.object, e47.5
  lgl$#-          %36.1 = Identical                <blt is.object>, %36.0   <true>
  void                    Branch                   %36.1 -> BB51 (if true) | BB52 (if false)
BB13   <- [49]
  void                    Nop                !     
  lgl$#-          %13.1 = %49.3
  goto BB14
BB51   <- [36]
  val?^ | miss    %51.0 = LdVar              eR    X, e47.5
  val?            %51.1 = Force!<wrapped>    !v    %51.0, e47.5   <(str|vec)+>
  lgl$#-          %51.2 = CallSafeBuiltin    wed   is.object(%51.1)    <lgl$->
  lgl$-           %51.3 = LOr                      %49.3, %51.2
  lgl$-           %51.4 = %51.3
  goto BB14
BB52   <- [36]
  fs              %52.0 = FrameState         R     0x56096d148850+952: [], env=e41.0
  fs              %52.1 = FrameState         R     0x56096c060de0+78: [], env=e47.5, next=%52.0
  prom-           %52.2 = MkArg                    %49.1, .setupMethodsTables[0x56096d49ce70]_p23 (!refl), e47.5
  val?~           %52.3 = CastType                 up %52.2
  env             e52.4 = (MkEnv)            l     mode(miss)="any", x=%52.3, parent=R_BaseNamespace, context 0
  fs              %52.5 = FrameState         R     0x56096c018880+41: [%49.2], env=e52.4, next=%52.1
  void                    Deopt              !v    %52.5, DeadBranchReached@0x56096c01e520[Test#0], %36.1   !
BB14   <- [13, 51]
  lgl$-           %14.0 = Phi                      %51.4:BB51, %13.1:BB13
  lgl$-           %14.1 = %14.0
  lgl$#-          %14.2 = CheckTrueFalse     e     %14.1
  void                    Branch                   %14.2 -> BB35 (if true) | BB15 (if false)
BB35   <- [14]
  fs              %35.0 = FrameState         R     0x56096d148850+952: [], env=e41.0
  (cls|spec|blt)  %35.1 = LdFun              !v    as.list, e47.5
  fs              %35.2 = FrameState         R     0x56096c060de0+205: [%35.1], env=e47.5, next=%35.0
  void                    Deopt              !v    %35.2, DeadCall@0x56096c01e520[Call#3], %35.1   !
BB15   <- [14]
  val?^ | miss    %15.0 = LdVar              eR    X, e47.5
  val?            %15.1 = Force!<wrapped>    !v    %15.0, e47.5   <(str|vec)+>
  (nil|str)-      %15.2 = Names                    %15.1
  int$-           %15.3 = Length                   %15.1
  vec-            %15.4 = CallSafeBuiltin    wed   vector("list", %15.3) 
  val+            %15.5 = SetNames           e     %15.4, %15.2
  int$#-          %15.6 = 0L
  val+            %15.7 = %15.5
  goto BB16
BB16   <- [15, 17]
  int$-           %16.0 = Phi                      %15.6:BB15, %17.7:BB17
  int$-           %16.1 = %16.0
  val?            %16.2 = Phi                      %15.7:BB15, %17.8:BB17
  val?            %16.3 = %16.2
  int$-           %16.4 = Inc                      %16.1
  lgl$-           %16.5 = Lt                 d     %15.3, %16.4, elided
  lgl$#-          %16.6 = Identical                %16.5, true
  void                    Branch                   %16.6 -> BB18 (if true) | BB17 (if false)
BB18   <- [16]
  val?            %18.0 = PopContext         C     %16.3, %47.2   <vec->
  void                    StVar              lW    argSyms, %18.0, e41.0
  val?^ | miss    %18.2 = LdVar              eR    assign, e41.0
  lgl$#-          %18.3 = Identical                %18.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %18.3 -> BB53 (if true) | BB54 (if false)
BB17   <- [16]
  void                    StVar              lW    i, %16.4, e47.5
  (cls|spec|blt)  %17.1 = LdFun              !v    FUN, e47.5
  prom-           %17.2 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p24, e47.5
  (miss|dots)     %17.3 = LdDots             R     , e47.5
  *dots-          %17.4 = ExpandDots               %17.3
  val?            %17.5 = NamedCall          !v    %17.1(%17.2, .xpandDotsTrigger=%17.4) e47.5   <val?->
  val?            %17.6 = SetVecElt          e     %17.5, %16.3, %16.4
  int$-           %17.7 = %16.4
  val?            %17.8 = %17.6
  goto BB16
BB53   <- [18]
  prom-           %53.0 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p5 (!refl), e41.0
  prom-           %53.1 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p6, e41.0
  val?            %53.2 = StaticCall         !v    assign[0x56096d366770](".SigArgs", %53.0, missingArg, %53.1) { 0 1 3n } e41.0
  val?^ | miss    %53.3 = LdVar              eR    initialize, e41.0
  val?            %53.4 = Force!<value>      !v    %53.3, e41.0   <lgl$->
  lgl$#-          %53.5 = CheckTrueFalse     we    %53.4
  void                    Branch                   %53.5 -> BB22 (if true) | BB21 (if false)
BB54   <- [18]
  fs              %54.0 = FrameState         R     0x56096d148850+966: [], env=e41.0
  void                    Deopt              !v    %54.0, CallTarget@0x56096d2dbd98[Call#23], %18.2   !
BB22   <- [53]
  (cls|spec|blt)  %22.0 = LdFun              !v    @, <0x560969fe5bd8>, e41.0
  prom-           %22.1 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p7, e41.0
  prom-           %22.2 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p8, e41.0
  val?            %22.3 = Call               !v    %22.0(%22.1, %22.2) e41.0   <cls>
  void                    StVar              lW    mlist, %22.3, e41.0
  val?^ | miss    %22.5 = LdVar              eR    .mlistAddToTable, e41.0
  lgl$#-          %22.6 = Identical                %22.5, function(generic, mlist, table=new.env(TRUE, f|...
  void                    Branch                   %22.6 -> BB55 (if true) | BB56 (if false)
BB21   <- [53]
  (cls|spec|blt)  %21.0 = LdFun              !v    getMethodsForDispatch, e41.0
  fs              %21.1 = FrameState         R     0x56096d148850+1046: [%21.0], env=e41.0
  void                    Deopt              !v    %21.1, DeadCall@0x56096d2dbd98[Call#24], %21.0   !
BB55   <- [22]
  prom-           %55.0 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p9, e41.0
  prom-           %55.1 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p10 (!refl), e41.0
  val?            %55.2 = StaticCall         !v    .mlistAddToTable[0x56096c19e770](%55.0, %55.1) e41.0   <env->
  void                    StVar              lW    mtable, %55.2, e41.0
  val?^ | miss    %55.4 = LdVar              eR    assign, e41.0
  lgl$#-          %55.5 = Identical                %55.4, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %55.5 -> BB57 (if true) | BB58 (if false)
BB56   <- [22]
  fs              %56.0 = FrameState         R     0x56096d148850+1143: [], env=e41.0
  void                    Deopt              !v    %56.0, CallTarget@0x56096d2dbd98[Call#26], %22.5   !
BB57   <- [55]
  prom-           %57.0 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p11 (!refl), e41.0
  prom-           %57.1 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p12, e41.0
  val?            %57.2 = StaticCall         !v    assign[0x56096d366770](".MTable", %57.0, missingArg, %57.1) { 0 1 3n } e41.0
  val?^ | miss    %57.3 = LdVar              eR    .resetInheritedMethods, e41.0
  lgl$#-          %57.4 = Identical                %57.3, function(fenv, mtable) <(rir::DispatchTable*)0|...
  void                    Branch                   %57.4 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  fs              %58.0 = FrameState         R     0x56096d148850+1194: [], env=e41.0
  void                    Deopt              !v    %58.0, CallTarget@0x56096d2dbd98[Call#27], %55.4   !
BB59   <- [57]
  prom-           %59.0 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p13, e41.0
  prom-           %59.1 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p14, e41.0
  val?            %59.2 = StaticCall         !v    .resetInheritedMethods[0x56096d5fd6b0](%59.0, %59.1) e41.0
  val?^ | miss    %59.3 = LdVar              eR    is, e41.0
  lgl$#-          %59.4 = Identical                %59.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %59.4 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x56096d148850+1248: [%57.2], env=e41.0
  void                    Deopt              !v    %60.0, CallTarget@0x56096d2dbd98[Call#28], %57.3   !
BB61   <- [59]
  prom-           %61.0 = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p15, e41.0
  val?            %61.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%61.0, "groupGenericFunction") e41.0   <lgl$->
  lgl$#-          %61.2 = IsType                   %61.1 isA lgl$-
  void                    Branch                   %61.2 -> BB63 (if true) | BB64 (if false)
BB62   <- [59]
  fs              %62.0 = FrameState         R     0x56096d148850+1286: [%59.2], env=e41.0
  void                    Deopt              !v    %62.0, CallTarget@0x56096d2dbd98[Call#29], %59.3   !
BB63   <- [61]
  lgl$-           %63.0 = CastType           d     dn %61.1
  lgl$#-          %63.1 = CheckTrueFalse     e     %63.0
  void                    Branch                   %63.1 -> BB34 (if true) | BB33 (if false)
BB64   <- [61]
  fs              %64.0 = FrameState         R     0x56096d148850+1324: [%61.1], env=e41.0
  void                    Deopt              !v    %64.0, Typecheck@0x56096d2dbd98[Type#61], %61.1   !
BB34   <- [63]
  (cls|spec|blt)  %34.0 = LdFun              !v    @, e41.0
  fs              %34.1 = FrameState         R     0x56096d148850+1345: [%34.0], env=e41.0
  void                    Deopt              !v    %34.1, DeadCall@0x56096d2dbd98[Call#30], %34.0   !
BB33   <- [63]
  void                    Visible            v     
  void                    Return             l     nil
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x560969fe5bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    as.name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    argSyms, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mlist, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mtable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mtable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nsig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|vec)+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <(str|vec)+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .setupMethodsTables[0x56096d49ce70]_p25, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ .setupMethodsTables[0x56096d49ce70]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
