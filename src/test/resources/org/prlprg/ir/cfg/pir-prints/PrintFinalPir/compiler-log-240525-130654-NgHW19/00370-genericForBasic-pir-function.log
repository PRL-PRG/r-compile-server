
┌──────────────────────────────────────────────────────────────────────────────┐
│ genericForBasic[0x56096ceb8400]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2               │
│ Properties:                                                                  │
├────── Final PIR Version
genericForBasic[0x56096ceb8400]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     f=%0.0, where(miss)=missingArg, mustFind(miss)=missingArg, parent=<env 0x56096a5ed378>, context 1
  prom-           %0.2  = MkArg                    unboundValue, genericForBasic[0x56096ceb8400]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    where, %0.3, e0.1
  void                    StArg              lW    mustFind, true, e0.1
  val?^ | miss    %0.6  = LdVar              eR    .BasicFunsList, <env 0x56096a5ed378>
  val?            %0.7  = Force!<wrapped>    !v    %0.6, e0.1   <vec+>
  lgl$#-          %0.8  = IsType                   %0.7 isA val+   <true>
  void                    Branch                   %0.8 -> BB17 (if true) | BB18 (if false)
BB17   <- [0]
  val?^ | miss    %17.0 = LdVar              eR    f, e0.1
  val?            %17.1 = Force!<lazy>       !v    %17.0, e0.1   <str$->
  lgl$#-          %17.2 = IsType                   %17.1 isA val?-
  lgl$#-          %17.3 = IsType                   %0.7 isA val?+
  void                    Branch                   %17.3 -> BB19 (if true) | BB20 (if false)
BB18   <- [0]
  fs              %18.0 = FrameState         R     0x56096d5d4900+9: [%0.7], env=e0.1
  void                    Deopt              !v    %18.0, DeadBranchReached@0x56096d5807a0[Test#0], %0.8   !
BB19   <- [17]
  val?+           %19.0 = CastType           d     dn %0.7   <vec+>
  void                    Branch                   %17.2 -> BB21 (if true) | BB22 (if false)
BB20   <- [17]
  void                    Nop                !     
  val?            %20.1 = %0.7
  dr              %20.2 = Typecheck@0x56096d5807a0[Type#2]
  goto BB3
BB21   <- [19]
  val?-           %21.0 = CastType           d     dn %17.1   <str$->
  val?            %21.1 = Extract2_1D        wed   %19.0, %21.0, elided   <nil->
  void                    StVar              lW    ans, %21.1, e0.1
  val?^ | miss    %21.3 = LdVar              eR    mustFind, e0.1
  val?            %21.4 = Force!<lazy>       !v    %21.3, e0.1   <lgl$->
  lgl$-           %21.5 = AsLogical          e     %21.4
  lgl$#-          %21.6 = Identical                %21.5, false
  void                    Branch                   %21.6 -> BB15 (if true) | BB7 (if false)
BB22   <- [19]
  void                    Nop                !     
  val?            %22.1 = %17.1
  dr              %22.2 = Typecheck@0x56096d5807a0[Type#4]
  goto BB3
BB3   <- [20, 22]
  val?^ | miss    %3.0  = Phi                      %20.1:BB20, %22.1:BB22
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %20.2:BB20, %22.2:BB22
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x56096d5d4900+54: [%0.7, %17.1], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB15   <- [21]
  void                    Nop                !     
  lgl$-           %15.1 = %21.5
  goto BB10
BB7   <- [21]
  val?^ | miss    %7.0  = LdVar              eR    isFALSE, e0.1
  lgl$#-          %7.1  = Identical                %7.0, function(x) <(rir::DispatchTable*)0x56096c07eb|...
  void                    Branch                   %7.1 -> BB23 (if true) | BB24 (if false)
BB10   <- [15, 27]
  lgl$-           %10.0 = Phi                      %27.3:BB27, %15.1:BB15
  lgl$-           %10.1 = %10.0
  lgl$#-          %10.2 = CheckTrueFalse     e     %10.1
  void                    Branch                   %10.2 -> BB14 (if true) | BB13 (if false)
BB23   <- [7]
  val?^ | miss    %23.0 = LdVar              eR    ans, e0.1
  val?            %23.1 = Force!<value>      !v    %23.0, e0.1   <nil->
  prom-           %23.2 = MkArg                    %23.1, genericForBasic[0x56096ceb8400]_p3 (!refl), 
  val?            %23.3 = StaticCall         !v    isFALSE[0x56096d050050](%23.2) e0.1   <lgl$->
  lgl$#-          %23.4 = IsType                   %23.3 isA lgl$-
  void                    Branch                   %23.4 -> BB27 (if true) | BB28 (if false)
BB24   <- [7]
  fs              %24.0 = FrameState         R     0x56096d5d4900+84: [%21.4], env=e0.1
  void                    Deopt              !v    %24.0, CallTarget@0x56096d5807a0[Call#2], %7.0   !
BB14   <- [10]
  (cls|spec|blt)  %14.0 = LdFun              !v    stop, e0.1
  fs              %14.1 = FrameState         R     0x56096d5d4900+151: [%14.0], env=e0.1
  void                    Deopt              !v    %14.1, DeadCall@0x56096d5807a0[Call#3], %14.0   !
BB13   <- [10]
  val?^ | miss    %13.0 = LdVar              eR    ans, e0.1
  lgl$#-          %13.1 = IsType                   %13.0 isA val?~- | miss
  void                    Branch                   %13.1 -> BB25 (if true) | BB26 (if false)
BB27   <- [23]
  lgl$-           %27.0 = CastType           d     dn %23.3
  lgl$-           %27.1 = AsLogical                %27.0
  lgl$-           %27.2 = LAnd                     %21.5, %27.1
  lgl$-           %27.3 = %27.2
  goto BB10
BB28   <- [23]
  fs              %28.0 = FrameState         R     0x56096d5d4900+128: [%21.5, %23.3], env=e0.1
  void                    Deopt              !v    %28.0, Typecheck@0x56096d5807a0[Type#8], %23.3   !
BB25   <- [13]
  val?~- | miss   %25.0 = CastType           d     dn %13.0
  void                    Visible            v     
  val?-           %25.2 = Force!<value>            %25.0,    <nil->
  void                    Return             l     %25.2
BB26   <- [13]
  fs              %26.0 = FrameState         R     0x56096d5d4900+135: [%10.1], env=e0.1
  void                    Deopt              !v    %26.0, Typecheck@0x56096d5807a0[Type#12], %13.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, genericForBasic[0x56096ceb8400]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3

│ genericForBasic[0x56096ceb8400]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
