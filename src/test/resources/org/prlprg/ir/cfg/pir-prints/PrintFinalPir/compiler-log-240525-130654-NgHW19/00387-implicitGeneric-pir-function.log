
┌──────────────────────────────────────────────────────────────────────────────┐
│ implicitGeneric[0x56096b9abe80]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
implicitGeneric[0x56096b9abe80]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     name=%0.1, where=%0.0, generic(miss)=missingArg, parent=<env 0x56096a5ed378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p0, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    generic, %0.4, e0.2
  val?^ | miss    %0.6  = LdVar              eR    nzchar, <env 0x56096a5ed378>
  lgl$#-          %0.7  = Identical                <blt nzchar>, %0.6   <true>
  void                    Branch                   %0.7 -> BB122 (if true) | BB123 (if false)
BB122   <- [0]
  val+            %122.0 = Force!<lazy>       !vr   %0.1,    <str$->
  val?            %122.1 = CallBuiltin        !v    nzchar(%122.0) e0.2   <lgl$->
  lgl$#-          %122.2 = IsType                   %122.1 isA lgl$-
  void                    Branch                   %122.2 -> BB124 (if true) | BB125 (if false)
BB123   <- [0]
  fs              %123.0 = FrameState         R     0x56096ca97090+0: [], env=e0.2
  void                    Deopt              !v    %123.0, DeadBranchReached@0x56096c0cb590[Test#0], %0.7
BB124   <- [122]
  lgl$-           %124.0 = CastType           d     dn %122.1
  lgl$-           %124.1 = Not                d     %124.0, elided
  lgl$#-          %124.2 = CheckTrueFalse     e     %124.1
  void                    Branch                   %124.2 -> BB120 (if true) | BB5 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?            %125.1 = %122.1
  dr              %125.2 = Typecheck@0x56096c0cb590[Type#7]
  goto BB3
BB120   <- [124]
  (cls|spec|blt)  %120.0 = LdFun              !v    stop, e0.2
  fs              %120.1 = FrameState         R     0x56096ca97090+113: [%120.0], env=e0.2
  void                    Deopt              !v    %120.1, DeadCall@0x56096c0cb590[Call#4], %120.0   !
BB5   <- [124]
  lgl$-           %5.0  = Missing            eR    generic, e0.2
  lgl$-           %5.1  = Not                d     %5.0, elided
  lgl$-           %5.2  = AsLogical                %5.1
  lgl$#-          %5.3  = Identical                %5.2, false
  lgl$-           %5.4  = AsLogical                %5.2
  lgl$#-          %5.5  = Identical                %5.4, false
  void                    Branch                   %5.3 -> BB7 (if true) | BB6 (if false)
BB3   <- [125, 127]
  val?^ | miss    %3.0  = Phi                      %125.1:BB125, %127.1:BB127
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %125.2:BB125, %127.2:BB127
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x56096ca97090+91: [%122.1], env=e0.2
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB7   <- [5]
  void                    Branch                   %5.5 -> BB9 (if true) | BB8 (if false)
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    is, e0.2
  fs              %6.1  = FrameState         R     0x56096ca97090+173: [%5.2, %6.0], env=e0.2
  void                    Deopt              !v    %6.1, DeadCall@0x56096c0cb590[Call#6], %6.0   !
BB9   <- [7]
  lgl$#-          %9.0  = CheckTrueFalse     e     %5.4
  void                    Branch                   %9.0 -> BB119 (if true) | BB10 (if false)
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    .identC, e0.2
  fs              %8.1  = FrameState         R     0x56096ca97090+224: [%5.4, %8.0], env=e0.2
  void                    Deopt              !v    %8.1, DeadCall@0x56096c0cb590[Call#7], %8.0   !
BB119   <- [9]
  (cls|spec|blt)  %119.0 = LdFun              !v    stop, e0.2
  fs              %119.1 = FrameState         R     0x56096ca97090+280: [%119.0], env=e0.2
  void                    Deopt              !v    %119.1, DeadCall@0x56096c0cb590[Call#9], %119.0   !
BB10   <- [9]
  lgl$-           %10.0 = Missing            eR    generic, e0.2
  lgl$-           %10.1 = AsLogical                %10.0
  lgl$#-          %10.2 = Identical                %10.1, true
  lgl$-           %10.3 = AsLogical                %10.1
  lgl$#-          %10.4 = Identical                %10.3, false
  void                    Branch                   %10.2 -> BB12 (if true) | BB11 (if false)
BB12   <- [10]
  void                    Branch                   %10.4 -> BB118 (if true) | BB13 (if false)
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    is, e0.2
  fs              %11.1 = FrameState         R     0x56096ca97090+339: [%10.1, %11.0], env=e0.2
  void                    Deopt              !v    %11.1, DeadCall@0x56096c0cb590[Call#12], %11.0   !
BB118   <- [12]
  void                    Nop                !     
  lgl$-           %118.1 = %10.3
  goto BB16
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    isGeneric, e0.2
  lgl$#-          %13.1 = Identical                %13.0, function(f, where=topenv(parent.frame()), fdef|...
  void                    Branch                   %13.1 -> BB126 (if true) | BB127 (if false)
BB16   <- [118, 128]
  lgl$-           %16.0 = Phi                      %128.4:BB128, %118.1:BB118
  lgl$-           %16.1 = %16.0
  void                    StVar              lW    createGeneric, %16.1, e0.2
  lgl$#-          %16.3 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.3 -> BB22 (if true) | BB19 (if false)
BB126   <- [13]
  prom-           %126.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p3, e0.2
  prom-           %126.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p4, e0.2
  val?            %126.2 = StaticCall         !v    isGeneric[0x56096d6b1150](%126.0, %126.1) e0.2   <lgl$->
  lgl$#-          %126.3 = IsType                   %126.2 isA lgl$-
  void                    Branch                   %126.3 -> BB128 (if true) | BB129 (if false)
BB127   <- [13]
  void                    Nop                !     
  val?^ | miss    %127.1 = %13.0
  dr              %127.2 = CallTarget@0x56096c0cb590[Call#13]
  goto BB3
BB22   <- [16]
  val?^ | miss    %22.0 = LdVar              eR    getFunction, e0.2
  lgl$#-          %22.1 = Identical                %22.0, function(name, generic=TRUE, mustFind=TRUE, wh|...
  void                    Branch                   %22.1 -> BB130 (if true) | BB131 (if false)
BB19   <- [16]
  void                    Nop                !     
  goto BB20
BB128   <- [126]
  lgl$-           %128.0 = CastType           d     dn %126.2
  lgl$-           %128.1 = Not                d     %128.0, elided
  lgl$-           %128.2 = AsLogical                %128.1
  lgl$-           %128.3 = LAnd                     %10.3, %128.2
  lgl$-           %128.4 = %128.3
  goto BB16
BB129   <- [126]
  fs              %129.0 = FrameState         R     0x56096ca97090+424: [%10.3, %126.2], env=e0.2
  void                    Deopt              !v    %129.0, Typecheck@0x56096c0cb590[Type#23], %126.2   !
BB130   <- [22]
  prom-           %130.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p5, e0.2
  prom-           %130.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p6, e0.2
  val?            %130.2 = StaticCall         !v    getFunction[0x56096d6169e0](%130.0, missingArg, false, %130.1) { 0 3n 2n } e0.2   <cls->
  lgl$-           %130.3 = Is                       %130.2, NULL
  void                    StVar              lW    fdefault, %130.2, e0.2
  val             %130.5 = ChkMissing         e     %130.2
  lgl$#-          %130.6 = CheckTrueFalse     e     %130.3
  void                    Branch                   %130.6 -> BB117 (if true) | BB25 (if false)
BB131   <- [22]
  fs              %131.0 = FrameState         R     0x56096ca97090+441: [], env=e0.2
  void                    Deopt              !v    %131.0, CallTarget@0x56096c0cb590[Call#14], %22.0   !
BB20   <- [19, 78, 218]
  val?^ | miss    %20.0 = LdVar              eR    generic, e0.2
  void                    Visible            v     
  val?            %20.2 = Force!<value>      !     %20.0, e0.2   <cls>
  val?            %20.3 = %20.2
  goto BB21
BB117   <- [130]
  void                    Visible            v     
  nil-            %117.1 = nil
  goto BB21
BB25   <- [130]
  val?^ | miss    %25.0 = LdVar              eR    environment, e0.2
  lgl$#-          %25.1 = Identical                %25.0, function(fun=NULL) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %25.1 -> BB132 (if true) | BB133 (if false)
BB21   <- [117, 20]
  val?            %21.0 = Phi                      %20.3:BB20, %117.1:BB117
  val?            %21.1 = %21.0
  void                    Return             l     %21.1
BB132   <- [25]
  prom-           %132.0 = MkArg                    %130.2, implicitGeneric[0x56096b9abe80]_p7 (!refl), 
  val?            %132.1 = StaticCall         !v    environment[0x56096cb446e0](%132.0) e0.2   <env->
  void                    StVar              lW    env, %132.1, e0.2
  val?^ | miss    %132.3 = LdVar              eR    .derivedDefaultMethod, e0.2
  lgl$#-          %132.4 = Identical                %132.3, function(fdef, internal=NULL) <(rir::DispatchT|...
  void                    Branch                   %132.4 -> BB134 (if true) | BB135 (if false)
BB133   <- [25]
  fs              %133.0 = FrameState         R     0x56096ca97090+534: [], env=e0.2
  void                    Deopt              !v    %133.0, CallTarget@0x56096c0cb590[Call#15], %25.0   !
BB134   <- [132]
  prom-           %134.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p8, e0.2
  ct              %134.1 = PushContext        lCL   %134.0, .derivedDefaultMethod(fdefault), function(fdef, internal=NULL) <(rir::DispatchT|..., e0.2
  val?^           %134.2 = CastType                 up %134.0
  val?^ | miss    %134.3 = LdVar              eR    is.function, <env 0x56096a5ed378>
  lgl$#-          %134.4 = Identical                <blt is.function>, %134.3   <true>
  void                    Branch                   %134.4 -> BB136 (if true) | BB137 (if false)
BB135   <- [132]
  fs              %135.0 = FrameState         R     0x56096ca97090+617: [], env=e0.2
  void                    Deopt              !v    %135.0, CallTarget@0x56096c0cb590[Call#16], %132.3   !
BB136   <- [134]
  env             e136.0 = MkEnv              l     fdef=%134.2, internal(miss)=nil, parent=<env 0x56096a5ed378>, context 1
  val?            %136.1 = Force!<lazy>       !vL   %134.2, e136.0   <cls->
  lgl$#-          %136.2 = IsType                   %136.1 isA val?-
  void                    Branch                   %136.2 -> BB138 (if true) | BB139 (if false)
BB137   <- [134]
  fs              %137.0 = FrameState         R     0x56096ca97090+649: [], env=e0.2
  env             e137.1 = (MkEnv)            l     fdef=%134.2, internal(miss)=nil, parent=<env 0x56096a5ed378>, context 1
  fs              %137.2 = FrameState         R     0x56096c3b5820+0: [], env=e137.1, next=%137.0
  void                    Deopt              !v    %137.2, DeadBranchReached@0x56096c602e08[Test#0], %134.4   !
BB138   <- [136]
  val?-           %138.0 = CastType           d     dn %136.1   <cls->
  lgl$#-          %138.1 = CallSafeBuiltin    wed   is.function(%138.0)    <lgl$->
  void                    Branch                   %138.1 -> BB112 (if true) | BB34 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x56096ca97090+649: [], env=e0.2
  fs              %139.1 = FrameState         R     0x56096c3b5820+69: [<blt is.function>, %136.1], env=e136.0, next=%139.0
  void                    Deopt              !v    %139.1, Typecheck@0x56096c602e08[Type#1], %136.1   !
BB112   <- [138]
  val?^ | miss    %112.0 = LdVar              eR    is.primitive, <env 0x56096a5ed378>
  lgl$#-          %112.1 = Identical                %112.0, function(x) <(rir::DispatchTable*)0x56096c254d|...
  void                    Branch                   %112.1 -> BB140 (if true) | BB141 (if false)
BB34   <- [138]
  void                    Nop                !     
  lgl$#-          %34.1 = false
  goto BB35
BB140   <- [112]
  str$-           %140.0 = CallSafeBuiltin    wed   typeof(%138.0)    <str$->
  int$-           %140.1 = Length                   %140.0
  lgl$-           %140.2 = Eq                 d     %140.1, 1L, elided   <true>
  lgl$#-          %140.3 = Identical                %140.2, true
  void                    Branch                   %140.3 -> BB142 (if true) | BB143 (if false)
BB141   <- [112]
  fs              %141.0 = FrameState         R     0x56096ca97090+649: [], env=e0.2
  fs              %141.1 = FrameState         R     0x56096c3b5820+91: [%138.1], env=e136.0, next=%141.0
  void                    Deopt              !v    %141.1, CallTarget@0x56096c602e08[Call#1], %112.0   !
BB35   <- [34, 148]
  lgl$#-          %35.0 = Phi                      %148.1:BB148, %34.1:BB34
  lgl$#-          %35.1 = %35.0
  void                    Branch                   %35.1 -> BB109 (if true) | BB36 (if false)
BB142   <- [140]
  lgl$-           %142.0 = CallSafeBuiltin    wed   is.na(%140.0) 
  lgl$#-          %142.1 = CheckTrueFalse     e     %142.0   <false>
  void                    Branch                   %142.1 -> BB145 (if true) | BB144 (if false)
BB143   <- [140]
  prom-           %143.0 = MkArg                    %138.0, implicitGeneric[0x56096b9abe80]_p26 (!refl), e136.0
  val?~           %143.1 = CastType                 up %143.0
  env             e143.2 = (MkEnv)            l     x=%143.1, parent=R_BaseNamespace, context 0
  env             e143.3 = MaterializeEnv           , e143.2   <@?>
  fs              %143.4 = FrameState         R     0x56096ca97090+649: [], env=e0.2
  fs              %143.5 = FrameState         R     0x56096c3b5820+135: [%138.1], env=e136.0, next=%143.4
  fs              %143.6 = FrameState         R     0x56096c0c20b0+32: [], env=e143.3, next=%143.5
  prom-           %143.7 = MkArg                    %138.0, implicitGeneric[0x56096b9abe80]_p50 (!refl), e143.3
  val?~           %143.8 = CastType                 up %143.7
  env             e143.9 = (MkEnv)            l     x=%143.8, parent=R_BaseNamespace, context -1
  fs              %143.10 = FrameState         R     0x56096c0a79f0+27: [%140.0], env=e143.9, next=%143.6
  void                    Deopt              !v    %143.10, DeadBranchReached@0x56096c56c7c8[Test#1], %140.3   !
BB109   <- [35]
  val?^ | miss    %109.0 = LdVar              eR    new, <env 0x56096a5ed378>
  lgl$#-          %109.1 = Identical                %109.0, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %109.1 -> BB150 (if true) | BB151 (if false)
BB36   <- [35]
  void                    Nop                !     
  val?-           %36.1 = %138.0
  goto BB37
BB145   <- [142]
  void                    Nop                !     
  lgl$#-          %145.1 = %142.1
  dr              %145.2 = DeadBranchReached@0x56096c56c7c8[Test#7]
  goto BB115
BB144   <- [142]
  lgl$-           %144.0 = Eq                 d     %140.0, special, elided
  lgl$#-          %144.1 = CheckTrueFalse     e     %144.0   <false>
  void                    Branch                   %144.1 -> BB147 (if true) | BB146 (if false)
BB150   <- [109]
  val?            %150.0 = StaticCall         !v    new[0x56096cf78bb0]("derivedDefaultMethod") { 0 } e136.0   <cls>
  void                    StVar              lW    value, %150.0, e136.0
  (cls|spec|blt)  %150.2 = LdFun              !v    <-, <0x560969fdada8>, e136.0
  prom-           %150.3 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p27, e136.0
  prom-           %150.4 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p30, e136.0
  val?            %150.5 = Call               !v    %150.2(%150.3, %150.4) e136.0
  (cls|spec|blt)  %150.6 = LdFun              !v    <-, <0x560969fdada8>, e136.0
  prom-           %150.7 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p31, e136.0
  prom-           %150.8 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p34, e136.0
  val?            %150.9 = Call               !v    %150.6(%150.7, %150.8) e136.0
  val?^ | miss    %150.10 = LdVar              eR    value, e136.0
  val?            %150.11 = Force!<value>      !v    %150.10, e136.0   <cls>
  val?            %150.12 = %150.11
  goto BB37
BB151   <- [109]
  fs              %151.0 = FrameState         R     0x56096ca97090+649: [], env=e0.2
  fs              %151.1 = FrameState         R     0x56096c3b5820+177: [nil], env=e136.0, next=%151.0
  void                    Deopt              !v    %151.1, CallTarget@0x56096c602e08[Call#2], %109.0   !
BB37   <- [36, 150]
  val?            %37.0 = Phi                      %36.1:BB36, %150.12:BB150
  val?            %37.1 = %37.0
  val?            %37.2 = PopContext         C     %37.1, %134.1   <cls>
  void                    StVar              lW    fdefault, %37.2, e0.2
  val?^ | miss    %37.4 = LdVar              eR    isBaseFun, e0.2
  lgl$#-          %37.5 = Identical                %37.4, function(fun) <(rir::DispatchTable*)0x56096c6b|...
  void                    Branch                   %37.5 -> BB152 (if true) | BB153 (if false)
BB115   <- [145, 147, 149]
  val?^ | miss    %115.0 = Phi                      %145.1:BB145, %147.1:BB147, %149.1:BB149
  val?^ | miss    %115.1 = %115.0
  dr              %115.2 = Phi                      %145.2:BB145, %147.2:BB147, %149.2:BB149
  dr              %115.3 = %115.2
  prom-           %115.4 = MkArg                    %138.0, implicitGeneric[0x56096b9abe80]_p26 (!refl), e136.0
  val?~           %115.5 = CastType                 up %115.4
  fs              %115.6 = FrameState         R     0x56096ca97090+649: [], env=e0.2
  fs              %115.7 = FrameState         R     0x56096c3b5820+135: [%138.1], env=e136.0, next=%115.6
  env             e115.8 = (MkEnv)            l     x=%115.5, parent=R_BaseNamespace, context 0
  fs              %115.9 = FrameState         R     0x56096c0c20b0+240: [%140.0, %142.0], env=e115.8, next=%115.7
  void                    Deopt              !v    %115.9, %115.3, %115.1   !
BB147   <- [144]
  void                    Nop                !     
  lgl$#-          %147.1 = %144.1
  dr              %147.2 = DeadBranchReached@0x56096c56c7c8[Test#8]
  goto BB115
BB146   <- [144]
  lgl$-           %146.0 = Eq                 d     %140.0, builtin, elided
  lgl$#-          %146.1 = CheckTrueFalse     e     %146.0   <false>
  void                    Branch                   %146.1 -> BB149 (if true) | BB148 (if false)
BB152   <- [37]
  prom-           %152.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p9 (!refl), e0.2
  val?            %152.1 = StaticCall         !v    isBaseFun[0x56096d453b90](%152.0) e0.2   <lgl$->
  lgl$#-          %152.2 = IsType                   %152.1 isA lgl$-
  void                    Branch                   %152.2 -> BB154 (if true) | BB155 (if false)
BB153   <- [37]
  fs              %153.0 = FrameState         R     0x56096ca97090+663: [], env=e0.2
  void                    Deopt              !v    %153.0, CallTarget@0x56096c0cb590[Call#17], %37.4   !
BB149   <- [146]
  void                    Nop                !     
  lgl$#-          %149.1 = %146.1
  dr              %149.2 = DeadBranchReached@0x56096c56c7c8[Test#9]
  goto BB115
BB148   <- [146]
  void                    Nop                !     
  lgl$#-          %148.1 = true
  goto BB35
BB154   <- [152]
  lgl$-           %154.0 = CastType           d     dn %152.1
  lgl$#-          %154.1 = CheckTrueFalse     e     %154.0
  void                    Branch                   %154.1 -> BB100 (if true) | BB42 (if false)
BB155   <- [152]
  void                    Nop                !     
  val?            %155.1 = %152.1
  dr              %155.2 = Typecheck@0x56096c0cb590[Type#34]
  goto BB40
BB100   <- [154]
  val?^ | miss    %100.0 = LdVar              eR    genericForBasic, e0.2
  lgl$#-          %100.1 = Identical                %100.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %100.1 -> BB156 (if true) | BB157 (if false)
BB42   <- [154]
  val?^ | miss    %42.0 = LdVar              eR    getPackageName, e0.2
  lgl$#-          %42.1 = Identical                %42.0, function(where=topenv(parent.frame()), create=|...
  void                    Branch                   %42.1 -> BB160 (if true) | BB161 (if false)
BB40   <- [155, 157, 161]
  val?^ | miss    %40.0 = Phi                      %155.1:BB155, %157.1:BB157, %161.1:BB161
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %155.2:BB155, %157.2:BB157, %161.2:BB161
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x56096ca97090+695: [%152.1], env=e0.2
  void                    Deopt              !v    %40.4, %40.3, %40.1   !
BB156   <- [100]
  prom-           %156.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p24, e0.2
  val?            %156.1 = StaticCall         !v    genericForBasic[0x56096d8cc860](%156.0) e0.2   <nil->
  void                    StVar              lW    value, %156.1, e0.2
  lgl$#-          %156.3 = IsType                   %156.1 isA val?-
  val?^ | miss    %156.4 = LdVar              eR    is.function, e0.2
  lgl$#-          %156.5 = Identical                <blt is.function>, %156.4   <true>
  void                    Branch                   %156.5 -> BB158 (if true) | BB159 (if false)
BB157   <- [100]
  void                    Nop                !     
  val?^ | miss    %157.1 = %100.0
  dr              %157.2 = CallTarget@0x56096c0cb590[Call#19]
  goto BB40
BB160   <- [42]
  prom-           %160.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p10, e0.2
  val?            %160.1 = Call               !v    function(where=topenv(parent.frame()), create=|...(%160.0) e0.2   <str$->
  void                    StVar              lW    package, %160.1, e0.2
  goto BB43
BB161   <- [42]
  void                    Nop                !     
  val?^ | miss    %161.1 = %42.0
  dr              %161.2 = CallTarget@0x56096c0cb590[Call#18]
  goto BB40
BB158   <- [156]
  val             %158.0 = ChkMissing         e     %156.1
  void                    Branch                   %156.3 -> BB162 (if true) | BB163 (if false)
BB159   <- [156]
  void                    Nop                !     
  lgl$#-          %159.1 = %156.5
  dr              %159.2 = DeadBranchReached@0x56096c0cb590[Test#1]
  goto BB101
BB43   <- [103, 160]
  val?^ | miss    %43.0 = LdVar              eR    .getImplicitGroup, e0.2
  lgl$#-          %43.1 = Identical                %43.0, function(name, where) <(rir::DispatchTable*)0x|...
  void                    Branch                   %43.1 -> BB164 (if true) | BB165 (if false)
BB162   <- [158]
  val?-           %162.0 = CastType           d     dn %156.1   <nil->
  lgl$#-          %162.1 = CallSafeBuiltin    wed   is.function(%162.0)    <lgl$->
  void                    Branch                   %162.1 -> BB104 (if true) | BB103 (if false)
BB163   <- [158]
  void                    Nop                !     
  val?            %163.1 = %156.1
  dr              %163.2 = Typecheck@0x56096c0cb590[Type#38]
  goto BB101
BB101   <- [159, 163]
  val?^ | miss    %101.0 = Phi                      %159.1:BB159, %163.1:BB163
  val?^ | miss    %101.1 = %101.0
  dr              %101.2 = Phi                      %159.2:BB159, %163.2:BB163
  dr              %101.3 = %101.2
  fs              %101.4 = FrameState         R     0x56096ca97090+803: [], env=e0.2
  void                    Deopt              !v    %101.4, %101.3, %101.1   !
BB164   <- [43]
  prom-           %164.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p11, e0.2
  prom-           %164.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p12, e0.2
  val?^           %164.2 = CastType                 up %164.1
  val?^           %164.3 = CastType                 up %164.0
  val?^ | miss    %164.4 = LdVar              eR    identical, e0.2
  lgl$#-          %164.5 = Identical                %164.4, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %164.5 -> BB166 (if true) | BB167 (if false)
BB165   <- [43]
  void                    Nop                !     
  val?^ | miss    %165.1 = %43.0
  dr              %165.2 = CallTarget@0x56096c0cb590[Call#26]
  goto BB44
BB104   <- [162]
  lgl$-           %104.0 = Missing            eR    generic, e0.2
  lgl$-           %104.1 = Not                d     %104.0, elided
  lgl$-           %104.2 = AsLogical                %104.1
  lgl$#-          %104.3 = Identical                %104.2, false
  void                    Branch                   %104.3 -> BB106 (if true) | BB105 (if false)
BB103   <- [162]
  void                    StVar              lW    package, "base", e0.2
  goto BB43
BB166   <- [164]
  prom-           %166.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p13 (!refl), e0.2
  ct              %166.1 = PushContext        lCL   %166.0, "base", identical(package, "base"), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.2
  val?^           %166.2 = CastType                 up %166.0
  env             e166.3 = MkEnv              l     x=%166.2, y="base", num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  env             e166.4 = (MkEnv)            l     name=%164.3, where=%164.2, tbl=unboundValue, r=unboundValue, parent=<env 0x56096a5ed378>, context 1
  val?            %166.5 = Force!<lazy>       !vrL  %166.2, e166.3   <val?+>
  val?            %166.6 = CallBuiltin        !v    identical(%166.5, "base", true, true, true, true, false, true) e166.3
  val?            %166.7 = PopContext         C     %166.6, %166.1   <lgl$->
  lgl$#-          %166.8 = IsType                   %166.7 isA lgl$-
  void                    Branch                   %166.8 -> BB168 (if true) | BB169 (if false)
BB167   <- [164]
  void                    Nop                !     
  val?^ | miss    %167.1 = %164.4
  dr              %167.2 = CallTarget@0x56096c0cb590[Call#27]
  goto BB44
BB44   <- [165, 167]
  val?^ | miss    %44.0 = Phi                      %165.1:BB165, %167.1:BB167
  val?^ | miss    %44.1 = %44.0
  dr              %44.2 = Phi                      %165.2:BB165, %167.2:BB167
  dr              %44.3 = %44.2
  fs              %44.4 = FrameState         R     0x56096ca97090+1115: [], env=e0.2
  void                    Deopt              !v    %44.4, %44.3, %44.1   !
BB106   <- [104]
  lgl$#-          %106.0 = CheckTrueFalse     e     %104.2
  void                    Branch                   %106.0 -> BB108 (if true) | BB107 (if false)
BB105   <- [104]
  (cls|spec|blt)  %105.0 = LdFun              !v    identical, e0.2
  fs              %105.1 = FrameState         R     0x56096ca97090+929: [%104.2, %105.0], env=e0.2
  void                    Deopt              !v    %105.1, DeadCall@0x56096c0cb590[Call#21], %105.0   !
BB168   <- [166]
  lgl$-           %168.0 = CastType           d     dn %166.7
  lgl$#-          %168.1 = CheckTrueFalse     e     %168.0
  void                    Branch                   %168.1 -> BB99 (if true) | BB48 (if false)
BB169   <- [166]
  void                    Nop                !     
  val?            %169.1 = %166.7
  dr              %169.2 = Typecheck@0x56096c0cb590[Type#54]
  goto BB46
BB108   <- [106]
  (cls|spec|blt)  %108.0 = LdFun              !v    stop, e0.2
  fs              %108.1 = FrameState         R     0x56096ca97090+985: [%108.0], env=e0.2
  void                    Deopt              !v    %108.1, DeadCall@0x56096c0cb590[Call#22], %108.0   !
BB107   <- [106]
  void                    StVar              lW    generic, %162.0, e0.2
  (cls|spec|blt)  %107.1 = LdFun              !v    @, e0.2
  fs              %107.2 = FrameState         R     0x56096ca97090+1054: [%107.1], env=e0.2
  void                    Deopt              !v    %107.2, DeadCall@0x56096c0cb590[Call#25], %107.1   !
BB99   <- [168]
  val?^ | miss    %99.0 = LdVar              eR    .methodsNamespace, e0.2
  lgl$#-          %99.1 = IsType                   %99.0 isA val?~- | miss
  void                    Branch                   %99.1 -> BB170 (if true) | BB171 (if false)
BB48   <- [168]
  val?^ | miss    %48.0 = LdVar              eR    environment, e0.2
  lgl$#-          %48.1 = Identical                %48.0, function(fun=NULL) <(rir::DispatchTable*)0x560|...
  void                    Branch                   %48.1 -> BB172 (if true) | BB173 (if false)
BB46   <- [169, 171, 173]
  val?^ | miss    %46.0 = Phi                      %169.1:BB169, %171.1:BB171, %173.1:BB173
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %169.2:BB169, %171.2:BB171, %173.2:BB173
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x56096ca97090+1152: [], env=e0.2
  fs              %46.5 = FrameState         R     0x56096c4c3f20+9: [], env=e166.4, next=%46.4
  fs              %46.6 = FrameState         R     0x56096c7f96c0+37(pr): [%166.7], env=e0.2, next=%46.5
  void                    Deopt              !v    %46.6, %46.3, %46.1   !
BB170   <- [99]
  val?~- | miss   %170.0 = CastType           d     dn %99.0
  val?-           %170.1 = Force!<value>            %170.0,    <env->
  val?-           %170.2 = %170.1
  goto BB49
BB171   <- [99]
  void                    Nop                !     
  val?^ | miss    %171.1 = %99.0
  dr              %171.2 = Typecheck@0x56096c0cb590[Type#57]
  goto BB46
BB172   <- [48]
  prom-           %172.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p14, e0.2
  val?^ | miss    %172.1 = CastType                 up %172.0
  val?            %172.2 = Force              !v    %172.1, 
  prom-           %172.3 = MkArg                    %172.2, implicitGeneric[0x56096b9abe80]_p14 (!refl), 
  val?            %172.4 = StaticCall         !v    environment[0x56096cb446e0](%172.3) from function(fun=NULL) <(rir::DispatchTable*)0x560|... { 0 } e0.2   <env->
  val?            %172.5 = %172.4
  goto BB49
BB173   <- [48]
  void                    Nop                !     
  val?^ | miss    %173.1 = %48.0
  dr              %173.2 = CallTarget@0x56096c0cb590[Call#28]
  goto BB46
BB49   <- [170, 172]
  val?            %49.0 = Phi                      %172.5:BB172, %170.2:BB170   <env->
  val?            %49.1 = %49.0
  lgl$#-          %49.2 = IsType                   %49.1 isA val+   <true>
  prom-           %49.3 = MkArg                    %49.1, implicitGeneric[0x56096b9abe80]_p12 (!refl), e0.2
  val?~           %49.4 = CastType                 up %49.3
  void                    StArg              lWd   where, %49.4, e166.4
  lgl$#-          %49.6 = IsEnvStub          R     , e166.4
  void                    Branch                   %49.6 -> BB174 (if true) | BB175 (if false)
BB174   <- [49]
  void                    Branch                   %49.2 -> BB176 (if true) | BB177 (if false)
BB175   <- [49]
  void                    Nop                !     
  env             e175.1 = e166.4
  dr              %175.2 = EnvStubMaterialized@0x56096c5d0038[Call#unknown]
  goto BB50
BB176   <- [174]
  val?^ | miss    %176.0 = LdVar              eRd   .ImplicitGroupMetaName, <env 0x56096a5ed378>
  val?            %176.1 = Force!<wrapped>    !vL   %176.0, e166.4   <str$->
  lgl$#-          %176.2 = IsType                   %176.1 isA val?-
  lgl$#-          %176.3 = IsEnvStub          R     , e166.4
  void                    Branch                   %176.3 -> BB178 (if true) | BB179 (if false)
BB177   <- [174]
  void                    Nop                !     
  lgl$#-          %177.1 = %49.2
  dr              %177.2 = DeadBranchReached@0x56096c5d0038[Test#0]
  goto BB50
BB50   <- [175, 177]
  val?^ | miss    %50.0 = Phi                      e175.1:BB175, %177.1:BB177
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %175.2:BB175, %177.2:BB177
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x56096ca97090+1152: [], env=e0.2
  fs              %50.5 = FrameState         R     0x56096c4c3f20+9: [%49.1], env=e166.4, next=%50.4
  void                    Deopt              !v    %50.5, %50.3, %50.1   !
BB178   <- [176]
  lgl$#-          %178.0 = IsType                   %49.1 isA val?-
  void                    Branch                   %178.0 -> BB180 (if true) | BB181 (if false)
BB179   <- [176]
  void                    Nop                !     
  env             e179.1 = e166.4
  dr              %179.2 = EnvStubMaterialized@0x56096c5d0038[Call#unknown]
  goto BB52
BB180   <- [178]
  val?-           %180.0 = CastType           d     dn %49.1   <env->
  void                    Branch                   %176.2 -> BB182 (if true) | BB183 (if false)
BB181   <- [178]
  void                    Nop                !     
  val?            %181.1 = %49.1
  dr              %181.2 = Typecheck@0x56096c5d0038[Type#0]
  goto BB52
BB52   <- [179, 181, 183]
  val?            %52.0 = Phi                      e179.1:BB179, %181.1:BB181, %183.1:BB183
  val?            %52.1 = %52.0
  dr              %52.2 = Phi                      %179.2:BB179, %181.2:BB181, %183.2:BB183
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x56096ca97090+1152: [], env=e0.2
  fs              %52.5 = FrameState         R     0x56096c4c3f20+54: [%49.1, %176.1], env=e166.4, next=%52.4
  void                    Deopt              !v    %52.5, %52.3, %52.1   !
BB182   <- [180]
  val?-           %182.0 = CastType           d     dn %176.1   <str$->
  val?            %182.1 = Extract2_1D        wed   %180.0, %182.0, elided   <(nil|env)->
  lgl$-           %182.2 = Is                       %182.1, NULL
  void                    StVar              lWd   tbl, %182.1, e166.4
  lgl$-           %182.4 = Not                d     %182.2, elided
  lgl$#-          %182.5 = CheckTrueFalse     e     %182.4
  void                    Branch                   %182.5 -> BB94 (if true) | BB56 (if false)
BB183   <- [180]
  void                    Nop                !     
  val?            %183.1 = %176.1
  dr              %183.2 = Typecheck@0x56096c5d0038[Type#2]
  goto BB52
BB94   <- [182]
  val             %94.0 = ChkMissing         e     %182.1
  lgl$#-          %94.1 = IsType                   %182.1 isA val+   <true>
  void                    Branch                   %94.1 -> BB184 (if true) | BB185 (if false)
BB56   <- [182]
  void                    Nop                !     
  goto BB57
BB184   <- [94]
  val?            %184.0 = Force!<lazy>       !vL   %164.3, e166.4   <str$->
  lgl$#-          %184.1 = IsType                   %184.0 isA val?-
  lgl$#-          %184.2 = IsEnvStub          R     , e166.4
  void                    Branch                   %184.2 -> BB188 (if true) | BB189 (if false)
BB185   <- [94]
  fs              %185.0 = FrameState         R     0x56096ca97090+1152: [], env=e0.2
  fs              %185.1 = FrameState         R     0x56096c4c3f20+77: [%182.1], env=e166.4, next=%185.0
  void                    Deopt              !v    %185.1, DeadBranchReached@0x56096c5d0038[Test#1], %94.1   !
BB57   <- [56, 97]
  val?^ | miss    %57.0 = LdVar              eRd   list, <env 0x56096a5ed378>
  lgl$#-          %57.1 = Identical                <blt list>, %57.0   <true>
  void                    Branch                   %57.1 -> BB186 (if true) | BB187 (if false)
BB188   <- [184]
  lgl$#-          %188.0 = IsType                   %182.1 isA val?-
  void                    Branch                   %188.0 -> BB190 (if true) | BB191 (if false)
BB189   <- [184]
  void                    Nop                !     
  env             e189.1 = e166.4
  dr              %189.2 = EnvStubMaterialized@0x56096c5d0038[Call#unknown]
  goto BB95
BB186   <- [57]
  void                    Nop                !     
  vec#-           %186.1 = list()
  goto BB60
BB187   <- [57]
  fs              %187.0 = FrameState         R     0x56096ca97090+1152: [], env=e0.2
  fs              %187.1 = FrameState         R     0x56096c4c3f20+203: [], env=e166.4, next=%187.0
  void                    Deopt              !v    %187.1, DeadBranchReached@0x56096c5d0038[Test#2], %57.1   !
BB190   <- [188]
  val?-           %190.0 = CastType           d     dn %182.1   <(nil|env)->
  void                    Branch                   %184.1 -> BB194 (if true) | BB195 (if false)
BB191   <- [188]
  void                    Nop                !     
  val?            %191.1 = %182.1
  dr              %191.2 = Typecheck@0x56096c5d0038[Type#3]
  goto BB95
BB95   <- [189, 191, 195]
  val?^ | miss    %95.0 = Phi                      e189.1:BB189, %191.1:BB191, %195.1:BB195
  val?^ | miss    %95.1 = %95.0
  dr              %95.2 = Phi                      %189.2:BB189, %191.2:BB191, %195.2:BB195
  dr              %95.3 = %95.2
  fs              %95.4 = FrameState         R     0x56096ca97090+1152: [], env=e0.2
  fs              %95.5 = FrameState         R     0x56096c4c3f20+148: [%182.1, %184.0], env=e166.4, next=%95.4
  void                    Deopt              !v    %95.5, %95.3, %95.1   !
BB60   <- [98, 186]
  val?            %60.0 = Phi                      %186.1:BB186, %98.1:BB98   <vec->
  val?            %60.1 = %60.0
  void                    StVar              lW    group, %60.1, e0.2
  lgl$-           %60.3 = Missing            eR    generic, e0.2
  lgl$#-          %60.4 = CheckTrueFalse     e     %60.3
  void                    Branch                   %60.4 -> BB64 (if true) | BB63 (if false)
BB194   <- [190]
  val?-           %194.0 = CastType           d     dn %184.0   <str$->
  val?            %194.1 = Extract2_1D        wed   %190.0, %194.0, elided   <nil->
  lgl$-           %194.2 = Is                       %194.1, NULL
  void                    StVar              lWd   r, %194.1, e166.4
  lgl$-           %194.4 = Not                d     %194.2, elided
  lgl$#-          %194.5 = CheckTrueFalse     e     %194.4
  void                    Branch                   %194.5 -> BB98 (if true) | BB97 (if false)
BB195   <- [190]
  void                    Nop                !     
  val?            %195.1 = %184.0
  dr              %195.2 = Typecheck@0x56096c5d0038[Type#6]
  goto BB95
BB64   <- [60]
  val?^ | miss    %64.0 = LdVar              eR    .getImplicitGeneric, e0.2
  lgl$#-          %64.1 = Identical                %64.0, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %64.1 -> BB192 (if true) | BB193 (if false)
BB63   <- [60]
  (cls|spec|blt)  %63.0 = LdFun              !v    makeGeneric, e0.2
  fs              %63.1 = FrameState         R     0x56096ca97090+1183: [%63.0], env=e0.2
  void                    Deopt              !v    %63.1, DeadCall@0x56096c0cb590[Call#29], %63.0   !
BB98   <- [194]
  val             %98.0 = ChkMissing         e     %194.1
  val?            %98.1 = %194.1
  goto BB60
BB97   <- [194]
  void                    Nop                !     
  goto BB57
BB192   <- [64]
  prom-           %192.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p15, e0.2
  prom-           %192.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p16, e0.2
  prom-           %192.2 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p17, e0.2
  ct              %192.3 = PushContext        lCL   %192.0, %192.1, %192.2, .getImplicitGeneric(name, env, package), function(name, where, pkg="") <(rir::DispatchT|..., e0.2
  val?^           %192.4 = CastType                 up %192.2
  val?^           %192.5 = CastType                 up %192.1
  val?^           %192.6 = CastType                 up %192.0
  val?^ | miss    %192.7 = LdVar              eR    .getImplicitGenericFromCache, <env 0x56096a5ed378>
  lgl$#-          %192.8 = Identical                %192.7, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %192.8 -> BB196 (if true) | BB197 (if false)
BB193   <- [64]
  fs              %193.0 = FrameState         R     0x56096ca97090+1166: [], env=e0.2
  void                    Deopt              !v    %193.0, CallTarget@0x56096c0cb590[Call#31], %64.0   !
BB196   <- [192]
  env             e196.0 = MkEnv              l     name=%192.6, where=%192.5, pkg=%192.4, parent=<env 0x56096a5ed378>, context 1
  prom-           %196.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p43, e196.0
  prom-           %196.2 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p44, e196.0
  prom-           %196.3 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p45, e196.0
  ct              %196.4 = PushContext        lCL   %196.1, %196.2, %196.3, .getImplicitGenericFromCache(name, where, pkg), function(name, where, pkg="") <(rir::DispatchT|..., e196.0
  val?^           %196.5 = CastType                 up %196.3
  val?^           %196.6 = CastType                 up %196.2
  val?^           %196.7 = CastType                 up %196.1
  val?^ | miss    %196.8 = LdVar              eR    .getGenericFromCacheTable, <env 0x56096a5ed378>
  lgl$#-          %196.9 = Identical                %196.8, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %196.9 -> BB198 (if true) | BB199 (if false)
BB197   <- [192]
  fs              %197.0 = FrameState         R     0x56096ca97090+1349: [], env=e0.2
  env             e197.1 = (MkEnv)            l     name=%192.6, where=%192.5, pkg=%192.4, parent=<env 0x56096a5ed378>, context 1
  fs              %197.2 = FrameState         R     0x56096c1fca20+0: [], env=e197.1, next=%197.0
  void                    Deopt              !v    %197.2, CallTarget@0x56096c16b290[Call#0], %192.7   !
BB198   <- [196]
  env             e198.0 = MkEnv              l     name=%196.7, where=%196.6, pkg=%196.5, parent=<env 0x56096a5ed378>, context 1
  prom-           %198.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p51, e198.0
  prom-           %198.2 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p52, e198.0
  prom-           %198.3 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p53, e198.0
  prom-           %198.4 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p54, e198.0
  val?            %198.5 = StaticCall         !v    .getGenericFromCacheTable[0x56096d8be4a0](%198.1, %198.2, %198.3, %198.4) e198.0   <nil->
  val?            %198.6 = PopContext         C     %198.5, %196.4   <nil->
  lgl$-           %198.7 = Is                       %198.6, NULL
  lgl$-           %198.8 = AsLogical                %198.7
  lgl$#-          %198.9 = Identical                %198.8, false
  void                    StVar              lW    value, %198.6, e196.0
  val             %198.11 = ChkMissing         e     %198.6
  void                    Branch                   %198.9 -> BB93 (if true) | BB69 (if false)
BB199   <- [196]
  fs              %199.0 = FrameState         R     0x56096ca97090+1349: [], env=e0.2
  fs              %199.1 = FrameState         R     0x56096c1fca20+42: [], env=e196.0, next=%199.0
  env             e199.2 = (MkEnv)            l     name=%196.7, where=%196.6, pkg=%196.5, parent=<env 0x56096a5ed378>, context 1
  fs              %199.3 = FrameState         R     0x56096c8afe20+0: [], env=e199.2, next=%199.1
  void                    Deopt              !v    %199.3, CallTarget@0x56096c178b70[Call#0], %196.8   !
BB93   <- [198]
  void                    Nop                !     
  lgl$-           %93.1 = %198.8
  goto BB74
BB69   <- [198]
  val?^ | miss    %69.0 = LdVar              eR    where, e196.0
  val?            %69.1 = Force!<lazy>       !v    %69.0, e196.0   <env->
  lgl$#-          %69.2 = IsType                   %69.1 isA val+   <true>
  void                    Branch                   %69.2 -> BB200 (if true) | BB201 (if false)
BB74   <- [93, 210]
  lgl$-           %74.0 = Phi                      %210.7:BB210, %93.1:BB93
  lgl$-           %74.1 = %74.0
  lgl$#-          %74.2 = CheckTrueFalse     e     %74.1
  void                    Branch                   %74.2 -> BB92 (if true) | BB77 (if false)
BB200   <- [69]
  val?^ | miss    %200.0 = LdVar              eR    .ImplicitGenericsMetaName, e196.0
  val?            %200.1 = Force!<wrapped>    !v    %200.0, e196.0   <str$->
  lgl$#-          %200.2 = IsType                   %200.1 isA val?-
  lgl$#-          %200.3 = IsType                   %69.1 isA val?-
  void                    Branch                   %200.3 -> BB206 (if true) | BB207 (if false)
BB201   <- [69]
  fs              %201.0 = FrameState         R     0x56096ca97090+1349: [], env=e0.2
  fs              %201.1 = FrameState         R     0x56096c1fca20+91: [%198.8, %69.1], env=e196.0, next=%201.0
  void                    Deopt              !v    %201.1, DeadBranchReached@0x56096c16b290[Test#0], %69.2   !
BB92   <- [74]
  fs              %92.0 = FrameState         R     0x56096ca97090+1349: [], env=e0.2
  (cls|spec|blt)  %92.1 = LdFun              !v    .getGenericFromCacheTable, e196.0
  fs              %92.2 = FrameState         R     0x56096c1fca20+197: [%92.1], env=e196.0, next=%92.0
  void                    Deopt              !v    %92.2, DeadCall@0x56096c16b290[Call#1], %92.1   !
BB77   <- [74]
  val?^ | miss    %77.0 = LdVar              eR    value, e196.0
  lgl$#-          %77.1 = IsType                   %77.0 isA val?~- | miss
  void                    Branch                   %77.1 -> BB202 (if true) | BB203 (if false)
BB206   <- [200]
  val?-           %206.0 = CastType           d     dn %69.1   <env->
  void                    Branch                   %200.2 -> BB210 (if true) | BB211 (if false)
BB207   <- [200]
  void                    Nop                !     
  val?            %207.1 = %69.1
  dr              %207.2 = Typecheck@0x56096c16b290[Type#5]
  goto BB72
BB202   <- [77]
  val?~- | miss   %202.0 = CastType           d     dn %77.0
  val?-           %202.1 = Force!<value>            %202.0,    <nil->
  val?            %202.2 = PopContext         C     %202.1, %192.3   <nil->
  lgl$-           %202.3 = Is                       %202.2, NULL
  void                    StVar              lW    generic, %202.2, e0.2
  val             %202.5 = ChkMissing         e     %202.2
  lgl$#-          %202.6 = CheckTrueFalse     e     %202.3
  void                    Branch                   %202.6 -> BB79 (if true) | BB78 (if false)
BB203   <- [77]
  fs              %203.0 = FrameState         R     0x56096ca97090+1349: [], env=e0.2
  fs              %203.1 = FrameState         R     0x56096c1fca20+167: [%74.1], env=e196.0, next=%203.0
  void                    Deopt              !v    %203.1, Typecheck@0x56096c16b290[Type#9], %77.0   !
BB210   <- [206]
  val?-           %210.0 = CastType           d     dn %200.1   <str$->
  val?            %210.1 = Extract2_1D        wed   %206.0, %210.0, elided   <nil->
  lgl$-           %210.2 = Is                       %210.1, NULL
  void                    StVar              lW    tbl, %210.1, e196.0
  lgl$-           %210.4 = Not                d     %210.2, elided
  lgl$-           %210.5 = AsLogical                %210.4
  lgl$-           %210.6 = LAnd                     %198.8, %210.5
  lgl$-           %210.7 = %210.6
  goto BB74
BB211   <- [206]
  void                    Nop                !     
  val?            %211.1 = %200.1
  dr              %211.2 = Typecheck@0x56096c16b290[Type#7]
  goto BB72
BB72   <- [207, 211]
  val?^ | miss    %72.0 = Phi                      %207.1:BB207, %211.1:BB211
  val?^ | miss    %72.1 = %72.0
  dr              %72.2 = Phi                      %207.2:BB207, %211.2:BB211
  dr              %72.3 = %72.2
  fs              %72.4 = FrameState         R     0x56096ca97090+1349: [], env=e0.2
  fs              %72.5 = FrameState         R     0x56096c1fca20+136: [%198.8, %69.1, %200.1], env=e196.0, next=%72.4
  void                    Deopt              !v    %72.5, %72.3, %72.1   !
BB79   <- [202]
  (cls|spec|blt)  %79.0 = LdFun              !v    makeGeneric, <0x56096cb648b8>, e0.2
  prom-           %79.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p18, e0.2
  prom-           %79.2 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p19, e0.2
  prom-           %79.3 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p20, e0.2
  prom-           %79.4 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p21, e0.2
  val?            %79.5 = NamedCall          !v    %79.0(%79.1, fdefault=%79.2, package=%79.3, group=%79.4) e0.2   <cls>
  void                    StVar              lW    generic, %79.5, e0.2
  val?^ | miss    %79.7 = LdVar              eR    .cacheImplicitGeneric, e0.2
  lgl$#-          %79.8 = Identical                %79.7, function(name, def) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %79.8 -> BB204 (if true) | BB205 (if false)
BB78   <- [202]
  void                    Nop                !     
  goto BB20
BB204   <- [79]
  prom-           %204.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p22, e0.2
  prom-           %204.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p23 (!refl), e0.2
  ct              %204.2 = PushContext        lCL   %204.0, %204.1, .cacheImplicitGeneric(name, generic), function(name, def) <(rir::DispatchTable*)0x56|..., e0.2
  val?^           %204.3 = CastType                 up %204.1
  val?^           %204.4 = CastType                 up %204.0
  val?^ | miss    %204.5 = LdVar              eR    .cacheGenericTable, <env 0x56096a5ed378>
  lgl$#-          %204.6 = Identical                %204.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %204.6 -> BB208 (if true) | BB209 (if false)
BB205   <- [79]
  fs              %205.0 = FrameState         R     0x56096ca97090+1470: [], env=e0.2
  void                    Deopt              !v    %205.0, CallTarget@0x56096c0cb590[Call#33], %79.7   !
BB208   <- [204]
  env             e208.0 = MkEnv              l     name=%204.4, def=%204.3, parent=<env 0x56096a5ed378>, context 1
  prom-           %208.1 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p46, e208.0
  prom-           %208.2 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p47, e208.0
  prom-           %208.3 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p48, e208.0
  ct              %208.4 = PushContext        lCL   %208.1, %208.2, %208.3, .cacheGenericTable(name, def, .implicitTable), function(name, def, table) <(rir::DispatchTabl|..., e208.0
  val?^           %208.5 = CastType                 up %208.3
  val?^           %208.6 = CastType                 up %208.2
  val?^           %208.7 = CastType                 up %208.1
  env             e208.8 = MkEnv              l     name=%208.7, def=%208.6, table=%208.5, parent=<env 0x56096a5ed378>, context 1
  val?            %208.9 = Force!<lazy>       !vL   %208.6, e208.8   <cls>
  void                    StVar              lW    fdef, %208.9, e208.8
  val?            %208.11 = Force!<lazy>       !vL   %208.5, e208.8   <env->
  lgl$#-          %208.12 = IsType                   %208.11 isA val+   <true>
  void                    Branch                   %208.12 -> BB212 (if true) | BB213 (if false)
BB209   <- [204]
  fs              %209.0 = FrameState         R     0x56096ca97090+1507: [], env=e0.2
  env             e209.1 = (MkEnv)            l     name=%204.4, def=%204.3, parent=<env 0x56096a5ed378>, context 1
  fs              %209.2 = FrameState         R     0x56096d1bb940+0: [], env=e209.1, next=%209.0
  void                    Deopt              !v    %209.2, CallTarget@0x56096da5da38[Call#0], %204.5   !
BB212   <- [208]
  val?            %212.0 = Force!<lazy>       !vL   %208.7, e208.8   <str$->
  lgl$#-          %212.1 = IsType                   %212.0 isA val?-
  lgl$#-          %212.2 = IsType                   %208.11 isA val?-
  void                    Branch                   %212.2 -> BB214 (if true) | BB215 (if false)
BB213   <- [208]
  fs              %213.0 = FrameState         R     0x56096ca97090+1507: [], env=e0.2
  fs              %213.1 = FrameState         R     0x56096d1bb940+42: [], env=e208.0, next=%213.0
  fs              %213.2 = FrameState         R     0x56096ce7a3c0+32: [%208.11], env=e208.8, next=%213.1
  void                    Deopt              !v    %213.2, DeadBranchReached@0x56096d26f810[Test#0], %208.12   !
BB214   <- [212]
  val?-           %214.0 = CastType           d     dn %208.11   <env->
  void                    Branch                   %212.1 -> BB216 (if true) | BB217 (if false)
BB215   <- [212]
  void                    Nop                !     
  val?            %215.1 = %208.11
  dr              %215.2 = Typecheck@0x56096d26f810[Type#1]
  goto BB86
BB216   <- [214]
  val?-           %216.0 = CastType           d     dn %212.0   <str$->
  val?            %216.1 = Extract2_1D        wed   %214.0, %216.0, elided   <nil->
  lgl$-           %216.2 = Is                       %216.1, NULL
  void                    StVar              lW    prev, %216.1, e208.8
  lgl$-           %216.4 = Not                d     %216.2, elided
  lgl$#-          %216.5 = CheckTrueFalse     e     %216.4
  void                    Branch                   %216.5 -> BB91 (if true) | BB90 (if false)
BB217   <- [214]
  void                    Nop                !     
  val?            %217.1 = %212.0
  dr              %217.2 = Typecheck@0x56096d26f810[Type#3]
  goto BB86
BB86   <- [215, 217]
  val?^ | miss    %86.0 = Phi                      %215.1:BB215, %217.1:BB217
  val?^ | miss    %86.1 = %86.0
  dr              %86.2 = Phi                      %215.2:BB215, %217.2:BB217
  dr              %86.3 = %86.2
  fs              %86.4 = FrameState         R     0x56096ca97090+1507: [], env=e0.2
  fs              %86.5 = FrameState         R     0x56096d1bb940+42: [], env=e208.0, next=%86.4
  fs              %86.6 = FrameState         R     0x56096ce7a3c0+77: [%208.11, %212.0], env=e208.8, next=%86.5
  void                    Deopt              !v    %86.6, %86.3, %86.1   !
BB91   <- [216]
  fs              %91.0 = FrameState         R     0x56096ca97090+1507: [], env=e0.2
  fs              %91.1 = FrameState         R     0x56096d1bb940+42: [], env=e208.0, next=%91.0
  (cls|spec|blt)  %91.2 = LdFun              !v    @, <env 0x56096a5ed378>
  fs              %91.3 = FrameState         R     0x56096ce7a3c0+122: [%91.2], env=e208.8, next=%91.1
  void                    Deopt              !v    %91.3, DeadCall@0x56096d26f810[Call#0], %91.2   !
BB90   <- [216]
  val?^ | miss    %90.0 = LdVar              eR    .getMethodsTable, e208.8
  lgl$#-          %90.1 = Identical                %90.0, function(fdef, env=environment(fdef), check=TR|...
  void                    Branch                   %90.1 -> BB218 (if true) | BB219 (if false)
BB218   <- [90]
  prom-           %218.0 = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p55, e208.8
  val?            %218.1 = StaticCall         !v    .getMethodsTable[0x56096cf56910](%218.0) e208.8
  val?^ | miss    %218.2 = LdVar              eR    def, e208.8
  val?            %218.3 = Force!<wrapped>    !v    %218.2, e208.8   <cls>
  val?^ | miss    %218.4 = LdVar              eR    table, e208.8
  val?            %218.5 = Force!<wrapped>    !v    %218.4, e208.8   <env->
  val?^ | miss    %218.6 = LdVar              eR    name, e208.8
  val?            %218.7 = Force!<wrapped>    !v    %218.6, e208.8   <str$->
  val?            %218.8 = Subassign2_1D      !v    %218.3, %218.5, %218.7, e208.8
  void                    StVar              lW    table, %218.8, e208.8
  val?^ | miss    %218.10 = LdVar              eR    fdef, e208.8
  val?            %218.11 = Force!<value>      !v    %218.10, e208.8   <cls>
  val?            %218.12 = PopContext         C     %218.11, %208.4   <cls>
  val?            %218.13 = PopContext         C     %218.12, %204.2
  goto BB20
BB219   <- [90]
  fs              %219.0 = FrameState         R     0x56096ca97090+1507: [], env=e0.2
  fs              %219.1 = FrameState         R     0x56096d1bb940+42: [], env=e208.0, next=%219.0
  fs              %219.2 = FrameState         R     0x56096ce7a3c0+100: [%216.1], env=e208.8, next=%219.1
  void                    Deopt              !v    %219.2, CallTarget@0x56096d26f810[Call#11], %90.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getGeneric, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p2, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, where=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     identical, <0x56096a2c8820>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "base") e0.0   <lgl$->
  lgl$#-          %0.4  = CheckTrueFalse     we    %0.3
  void                    Branch                   %0.4 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    .methodsNamespace, e0.0
  void                    Visible            v     
  val?            %2.2  = Force<value>       !     %2.0, e0.0   <env->
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  (cls|spec|blt)  %4.0  = LdFun              !     environment, <0x56096a38cb68>, e0.0
  prom-           %4.1  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p14, e0.0
  val?            %4.2  = Call               !     %4.0(%4.1) e0.0   <env->
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.3:BB4, %2.3:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p28, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p29, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p32, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p33, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    target, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     <-, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p35, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p38, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p36, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p37, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .newSignature, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p39, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p41, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p40, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .anyClassName, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     formalArgs, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x56096b9abe80]_p42, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .implicitTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .implicitTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ implicitGeneric[0x56096b9abe80]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
