
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x56096c3f1220]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
[0x56096c3f1220]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     where=%0.1, trim=%0.0, parent=<env 0x56096a5ed378>, context 1
  lgl$-           %0.3  = Missing            eR    where, e0.2
  lgl$#-          %0.4  = CheckTrueFalse     e     %0.3
  void                    Branch                   %0.4 -> BB50 (if true) | BB3 (if false)
BB50   <- [0]
  (cls|spec|blt)  %50.0 = LdFun              !v    .envSearch, <env 0x56096a5ed378>
  fs              %50.1 = FrameState         R     0x56096c573b60+234: [%50.0], env=e0.2
  void                    Deopt              !v    %50.1, DeadCall@0x56096c56e088[Call#2], %50.0
BB3   <- [0]
  val?^ | miss    %3.0  = LdVar              eR    is.environment, <env 0x56096a5ed378>
  lgl$#-          %3.1  = Identical                <blt is.environment>, %3.0   <true>
  void                    Branch                   %3.1 -> BB52 (if true) | BB53 (if false)
BB52   <- [3]
  val+            %52.0 = Force!<lazy>       !vr   %0.1,    <env+>
  lgl$#-          %52.1 = CallSafeBuiltin    wed   is.environment(%52.0)    <lgl$->
  void                    Branch                   %52.1 -> BB49 (if true) | BB6 (if false)
BB53   <- [3]
  fs              %53.0 = FrameState         R     0x56096c573b60+7: [%0.4], env=e0.2
  void                    Deopt              !v    %53.0, DeadBranchReached@0x56096c56e088[Test#0], %3.1
BB49   <- [52]
  val?^ | miss    %49.0 = LdVar              eR    list, <env 0x56096a5ed378>
  lgl$#-          %49.1 = Identical                <blt list>, %49.0   <true>
  void                    Branch                   %49.1 -> BB54 (if true) | BB55 (if false)
BB6   <- [52]
  void                    Nop                !     
  goto BB7
BB54   <- [49]
  val+            %54.0 = CallSafeBuiltin    wed   list(%52.0)    <vec$->
  void                    StVar              lW    where, %54.0, e0.2
  goto BB7
BB55   <- [49]
  fs              %55.0 = FrameState         R     0x56096c573b60+103: [%52.1], env=e0.2
  void                    Deopt              !v    %55.0, DeadBranchReached@0x56096c56e088[Test#1], %49.1
BB7   <- [6, 54]
  val?^ | miss    %7.0  = LdVar              eR    unlist, <env 0x56096a5ed378>
  lgl$#-          %7.1  = Identical                %7.0, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Branch                   %7.1 -> BB56 (if true) | BB57 (if false)
BB56   <- [7]
  prom-           %56.0 = MkArg                    unboundValue, [0x56096c3f1220]_p0, e0.2
  ct              %56.1 = PushContext        lCL   %56.0, missingArg, false, unlist(lapply(where, objects, all.names=TRUE),|..., function(x, recursive=TRUE, use.names=TRUE) <(|..., e0.2
  val?^           %56.2 = CastType                 up %56.0
  env             e56.3 = MkEnv              l     x=%56.2, recursive(miss)=true, use.names=false, parent=R_BaseNamespace, context 1
  cls             %56.4 = MkCls                    unlist@127, e56.3
  cls             %56.5 = MkCls                    unlist>URapply@148, e56.3
  val?            %56.6 = Force!<lazy>       !vr   %56.2,    <vec+>
  val?            %56.7 = CallBuiltin        !v    islistfactor(%56.6, true) e56.3
  lgl$#-          %56.8 = CheckTrueFalse     we    %56.7
  void                    Branch                   %56.8 -> BB45 (if true) | BB10 (if false)
BB57   <- [7]
  fs              %57.0 = FrameState         R     0x56096c573b60+224: [], env=e0.2
  void                    Deopt              !v    %57.0, CallTarget@0x56096c56e088[Call#5], %7.0
BB45   <- [56]
  val?^ | miss    %45.0 = LdVar              eR    recursive, e56.3
  val?            %45.1 = Force!             !v    %45.0, e56.3   <val?_>
  lgl$#-          %45.2 = CheckTrueFalse     we    %45.1
  void                    Branch                   %45.2 -> BB48 (if true) | BB46 (if false)
BB10   <- [56]
  val?^ | miss    %10.0 = LdVar              eR    x, e56.3
  val?            %10.1 = Force!<wrapped>    !v    %10.0, e56.3   <vec+>
  val?^ | miss    %10.2 = LdVar              eR    recursive, e56.3
  val?            %10.3 = Force!<wrapped>    !v    %10.2, e56.3   <lgl$->
  val?^ | miss    %10.4 = LdVar              eR    use.names, e56.3
  val?            %10.5 = Force!<lazy>       !v    %10.4, e56.3   <lgl$->
  val?            %10.6 = CallBuiltin        !v    unlist(%10.1, %10.3, %10.5) e56.3
  val?            %10.7 = PopContext         C     %10.6, %56.1   <str->
  void                    StVar              lW    these, %10.7, e0.2
  val?^ | miss    %10.9 = LdVar              eR    unique, e0.2
  lgl$#-          %10.10 = Identical                %10.9, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %10.10 -> BB58 (if true) | BB59 (if false)
BB48   <- [45]
  void                    Nop                !     
  cls             %48.1 = %56.5
  goto BB47
BB46   <- [45]
  void                    Nop                !     
  cls             %46.1 = %56.4
  goto BB47
BB58   <- [10]
  val             %58.0 = ChkMissing         e     %10.7
  val?            %58.1 = StaticCall         !v    unique[0x56096d34bd10](%10.7) { 0 } e0.2   <str->
  void                    StVar              lW    these, %58.1, e0.2
  lgl$#-          %58.3 = IsType                   %58.1 isA val+   <true>
  val             %58.4 = ChkMissing         e     %58.1
  void                    Branch                   %58.3 -> BB60 (if true) | BB61 (if false)
BB59   <- [10]
  fs              %59.0 = FrameState         R     0x56096c573b60+334: [], env=e0.2
  void                    Deopt              !v    %59.0, CallTarget@0x56096c56e088[Call#7], %10.9   !
BB47   <- [46, 48]
  fs              %47.0 = FrameState         R     0x56096c573b60+320: [], env=e0.2
  cls             %47.1 = Phi                      %46.1:BB46, %48.1:BB48
  cls             %47.2 = %47.1
  void                    StVar              lW    URapply, %47.2, e56.3
  (cls|spec|blt)  %47.4 = LdFun              !v    unique, e56.3
  fs              %47.5 = FrameState         R     0x56096c089320+178: [%47.4], env=e56.3, next=%47.0
  void                    Deopt              !v    %47.5, DeadCall@0x56096bfd35e0[Call#0], %47.4   !
BB60   <- [58]
  val?^ | miss    %60.0 = LdVar              eR    startsWith, e0.2
  lgl$#-          %60.1 = Identical                %60.0, function(x, prefix) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %60.1 -> BB62 (if true) | BB63 (if false)
BB61   <- [58]
  void                    Nop                !     
  lgl$#-          %61.1 = %58.3
  dr              %61.2 = DeadBranchReached@0x56096c56e088[Test#2]
  goto BB13
BB62   <- [60]
  prom-           %62.0 = MkArg                    unboundValue, [0x56096c3f1220]_p5 (!refl), e0.2
  ct              %62.1 = PushContext        lCL   %62.0, ".__T__", startsWith(these, ".__T__"), function(x, prefix) <(rir::DispatchTable*)0x56|..., e0.2
  val?^           %62.2 = CastType                 up %62.0
  env             e62.3 = MkEnv              l     x=%62.2, prefix=".__T__", parent=R_BaseNamespace, context 1
  val?            %62.4 = CallBuiltin        !v    startsWith(%58.1, ".__T__") e62.3
  val?            %62.5 = PopContext         C     %62.4, %62.1   <lgl->
  lgl$#-          %62.6 = IsType                   %62.5 isA lgl-
  lgl$#-          %62.7 = IsType                   %58.1 isA val?-
  void                    Branch                   %62.7 -> BB64 (if true) | BB65 (if false)
BB63   <- [60]
  void                    Nop                !     
  val?^ | miss    %63.1 = %60.0
  dr              %63.2 = CallTarget@0x56096c56e088[Call#9]
  goto BB13
BB13   <- [61, 63]
  val?^ | miss    %13.0 = Phi                      %61.1:BB61, %63.1:BB63
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %61.2:BB61, %63.2:BB63
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x56096c573b60+380: [], env=e0.2
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB64   <- [62]
  val?-           %64.0 = CastType           d     dn %58.1   <str->
  void                    Branch                   %62.6 -> BB66 (if true) | BB67 (if false)
BB65   <- [62]
  void                    Nop                !     
  val?            %65.1 = %58.1
  dr              %65.2 = Typecheck@0x56096c56e088[Type#14]
  goto BB15
BB66   <- [64]
  lgl-            %66.0 = CastType           d     dn %62.5
  val?            %66.1 = Extract1_1D        wed   %64.0, %66.0, elided   <str->
  void                    StVar              lW    these, %66.1, e0.2
  lgl$#-          %66.3 = IsType                   %66.1 isA val?-
  val?^ | miss    %66.4 = LdVar              eR    length, e0.2
  lgl$#-          %66.5 = Identical                <blt length>, %66.4   <true>
  void                    Branch                   %66.5 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  void                    Nop                !     
  val?            %67.1 = %62.5
  dr              %67.2 = Typecheck@0x56096c56e088[Type#19]
  goto BB15
BB15   <- [65, 67]
  val?^ | miss    %15.0 = Phi                      %65.1:BB65, %67.1:BB67
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %65.2:BB65, %67.2:BB67
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x56096c573b60+462: [%58.1, %62.5], env=e0.2
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB68   <- [66]
  val             %68.0 = ChkMissing         e     %66.1
  void                    Branch                   %66.3 -> BB70 (if true) | BB71 (if false)
BB69   <- [66]
  void                    Nop                !     
  lgl$#-          %69.1 = %66.5
  dr              %69.2 = DeadBranchReached@0x56096c56e088[Test#3]
  goto BB17
BB70   <- [68]
  val?-           %70.0 = CastType           d     dn %66.1   <str->
  (int|real)$-    %70.1 = CallSafeBuiltin    wed   length(%70.0)    <int$->
  lgl$#-          %70.2 = IsType                   %70.1 isA int$-
  void                    Branch                   %70.2 -> BB72 (if true) | BB73 (if false)
BB71   <- [68]
  void                    Nop                !     
  val?            %71.1 = %66.1
  dr              %71.2 = Typecheck@0x56096c56e088[Type#20]
  goto BB17
BB17   <- [69, 71]
  val?^ | miss    %17.0 = Phi                      %69.1:BB69, %71.1:BB71
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %69.2:BB69, %71.2:BB71
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x56096c573b60+483: [], env=e0.2
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB72   <- [70]
  int$-           %72.0 = CastType           d     dn %70.1
  lgl$-           %72.1 = Eq                 d     %72.0, 0L, elided   <lgl$->
  lgl$#-          %72.2 = CheckTrueFalse     e     %72.1
  void                    Branch                   %72.2 -> BB44 (if true) | BB21 (if false)
BB73   <- [70]
  void                    Nop                !     
  (int|real)$-    %73.1 = %70.1
  dr              %73.2 = Typecheck@0x56096c56e088[Type#23]
  goto BB19
BB44   <- [72]
  val?^ | miss    %44.0 = LdVar              eR    character, e0.2
  lgl$#-          %44.1 = Identical                %44.0, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %44.1 -> BB74 (if true) | BB75 (if false)
BB21   <- [72]
  val?^ | miss    %21.0 = LdVar              eR    gsub, e0.2
  lgl$#-          %21.1 = Identical                %21.0, function(pattern, replacement, x, ignore.case=|...
  void                    Branch                   %21.1 -> BB76 (if true) | BB77 (if false)
BB19   <- [73, 75, 77]
  val?^ | miss    %19.0 = Phi                      %73.1:BB73, %75.1:BB75, %77.1:BB77
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %73.2:BB73, %75.2:BB75, %77.2:BB77
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x56096c573b60+574: [%70.1], env=e0.2
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB74   <- [44]
  str-            %74.0 = CallSafeBuiltin    vwed  vector("character", 0L)    <str->
  str-            %74.1 = %74.0
  goto BB40
BB75   <- [44]
  void                    Nop                !     
  val?^ | miss    %75.1 = %44.0
  dr              %75.2 = CallTarget@0x56096c56e088[Call#11]
  goto BB19
BB76   <- [21]
  prom-           %76.0 = MkArg                    unboundValue, [0x56096c3f1220]_p6 (!refl), e0.2
  val?            %76.1 = StaticCall         !v    gsub[0x56096c8fc8e0]("^\.__T__(.*):([^:]+)", "\1", %76.0) e0.2   <str->
  void                    StVar              lW    funNames, %76.1, e0.2
  val?^ | miss    %76.3 = LdVar              eR    gsub, e0.2
  lgl$#-          %76.4 = Identical                %76.3, function(pattern, replacement, x, ignore.case=|...
  void                    Branch                   %76.4 -> BB78 (if true) | BB79 (if false)
BB77   <- [21]
  void                    Nop                !     
  val?^ | miss    %77.1 = %21.0
  dr              %77.2 = CallTarget@0x56096c56e088[Call#12]
  goto BB19
BB40   <- [74, 90]
  val?+           %40.0 = Phi                      %90.3:BB90, %74.1:BB74
  val?+           %40.1 = %40.0
  void                    Return             l     %40.1
BB78   <- [76]
  prom-           %78.0 = MkArg                    unboundValue, [0x56096c3f1220]_p7, e0.2
  val?            %78.1 = StaticCall         !v    gsub[0x56096c8fc8e0]("^\.__T__(.*):([^:]+(.*))", "\2", %78.0) e0.2   <str->
  void                    StVar              lW    packageNames, %78.1, e0.2
  val             %78.3 = ChkMissing         e     %78.1
  (cls|spec|blt)  %78.4 = LdFun              !v    attr<-, <0x560969fe9e08>, e0.2
  val?^ | miss    %78.5 = LdVar              eR    funNames, e0.2
  lgl$#-          %78.6 = IsType                   %78.5 isA val?~- | miss
  void                    Branch                   %78.6 -> BB80 (if true) | BB81 (if false)
BB79   <- [76]
  fs              %79.0 = FrameState         R     0x56096c573b60+691: [], env=e0.2
  void                    Deopt              !v    %79.0, CallTarget@0x56096c56e088[Call#13], %76.3   !
BB80   <- [78]
  val?~- | miss   %80.0 = CastType           d     dn %78.5
  val?-           %80.1 = Force!<value>            %80.0,    <str->
  val?            %80.2 = NamedCall          !v    %78.4(%80.1, "package", value=%78.1) e0.2
  void                    StVar              lW    funNames, %80.2, e0.2
  val?^ | miss    %80.4 = LdVar              eR    isTRUE, e0.2
  lgl$#-          %80.5 = Identical                %80.4, function(x) <(rir::DispatchTable*)0x56096c0fee|...
  void                    Branch                   %80.5 -> BB82 (if true) | BB83 (if false)
BB81   <- [78]
  fs              %81.0 = FrameState         R     0x56096c573b60+761: [%78.1], env=e0.2
  void                    Deopt              !v    %81.0, Typecheck@0x56096c56e088[Type#31], %78.5   !
BB82   <- [80]
  val?^ | miss    %82.0 = LdVar              eR    trim, e0.2
  val?            %82.1 = Force!<lazy>       !v    %82.0, e0.2   <lgl$->
  val+            %82.2 = CallSafeBuiltin    wed   is.logical(%82.1)    <lgl$->
  lgl$#-          %82.3 = IsType                   %82.2 isA lgl$-
  void                    Branch                   %82.3 -> BB84 (if true) | BB85 (if false)
BB83   <- [80]
  fs              %83.0 = FrameState         R     0x56096c573b60+838: [], env=e0.2
  void                    Deopt              !v    %83.0, CallTarget@0x56096c56e088[Call#15], %80.4   !
BB84   <- [82]
  lgl$-           %84.0 = CastType           d     dn %82.2
  lgl$-           %84.1 = AsLogical                %84.0
  lgl$#-          %84.2 = Identical                %84.1, false
  void                    Branch                   %84.2 -> BB43 (if true) | BB30 (if false)
BB85   <- [82]
  void                    Nop                !     
  val+            %85.1 = %82.2
  dr              %85.2 = Typecheck@0x56096c780878[Type#2]
  goto BB28
BB43   <- [84]
  void                    Nop                !     
  lgl$-           %43.1 = %84.1
  goto BB31
BB30   <- [84]
  lgl$#-          %30.0 = IsType                   %82.1 isA lgl$-
  void                    Branch                   %30.0 -> BB86 (if true) | BB87 (if false)
BB28   <- [85, 87, 89]
  val?^ | miss    %28.0 = Phi                      %85.1:BB85, %87.1:BB87, %89.1:BB89
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %85.2:BB85, %87.2:BB87, %89.2:BB89
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x56096c573b60+870: [], env=e0.2
  prom-           %28.5 = MkArg                    %82.1, [0x56096c3f1220]_p9 (!refl), e0.2
  val?~           %28.6 = CastType                 up %28.5
  env             e28.7 = (MkEnv)            l     x=%28.6, parent=R_BaseNamespace, context 0
  fs              %28.8 = FrameState         R     0x56096ca09830+91: [%82.2], env=e28.7, next=%28.4
  void                    Deopt              !v    %28.8, %28.3, %28.1   !
BB31   <- [43, 86]
  lgl$-           %31.0 = Phi                      %86.1:BB86, %43.1:BB43
  lgl$-           %31.1 = %31.0
  lgl$-           %31.2 = AsLogical                %31.1
  lgl$#-          %31.3 = Identical                %31.2, false
  void                    Branch                   %31.3 -> BB42 (if true) | BB32 (if false)
BB86   <- [30]
  lgl$-           %86.0 = AsLogical                %84.1
  lgl$-           %86.1 = %86.0
  goto BB31
BB87   <- [30]
  void                    Nop                !     
  val?            %87.1 = %82.1
  dr              %87.2 = Typecheck@0x56096c780878[Type#4]
  goto BB28
BB42   <- [31]
  void                    Nop                !     
  lgl$-           %42.1 = %31.2
  goto BB33
BB32   <- [31]
  lgl$#-          %32.0 = IsType                   %82.1 isA lgl$-
  void                    Branch                   %32.0 -> BB88 (if true) | BB89 (if false)
BB33   <- [42, 88]
  lgl$-           %33.0 = Phi                      %88.5:BB88, %42.1:BB42
  lgl$-           %33.1 = %33.0
  lgl$-           %33.2 = AsLogical                %33.1
  lgl$#-          %33.3 = Identical                %33.2, false
  void                    Branch                   %33.3 -> BB41 (if true) | BB34 (if false)
BB88   <- [32]
  lgl$-           %88.0 = CastType           d     dn %82.1
  lgl$-           %88.1 = CallSafeBuiltin    wed   is.na(%88.0)    <lgl$->
  lgl$-           %88.2 = Not                d     %88.1, elided
  lgl$-           %88.3 = AsLogical                %88.2
  lgl$-           %88.4 = LAnd                     %31.2, %88.3
  lgl$-           %88.5 = %88.4
  goto BB33
BB89   <- [32]
  void                    Nop                !     
  val?            %89.1 = %82.1
  dr              %89.2 = Typecheck@0x56096c780878[Type#8]
  goto BB28
BB41   <- [33]
  void                    Nop                !     
  lgl$-           %41.1 = %33.2
  goto BB35
BB34   <- [33]
  lgl$-           %34.0 = AsLogical          e     %82.1
  lgl$-           %34.1 = LAnd                     %33.2, %34.0
  lgl$-           %34.2 = %34.1
  goto BB35
BB35   <- [41, 34]
  lgl$-           %35.0 = Phi                      %34.2:BB34, %41.1:BB41
  lgl$-           %35.1 = %35.0
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB39 (if true) | BB38 (if false)
BB39   <- [35]
  val?^ | miss    %39.0 = LdVar              eR    funNames, e0.2
  lgl$#-          %39.1 = IsType                   %39.0 isA val?~+ | miss
  void                    Branch                   %39.1 -> BB90 (if true) | BB91 (if false)
BB38   <- [35]
  (cls|spec|blt)  %38.0 = LdFun              !v    isFALSE, e0.2
  fs              %38.1 = FrameState         R     0x56096c573b60+886: [%38.0], env=e0.2
  void                    Deopt              !v    %38.1, DeadCall@0x56096c56e088[Call#16], %38.0   !
BB90   <- [39]
  val?~+ | miss   %90.0 = CastType           d     dn %39.0
  void                    Visible            v     
  val?+           %90.2 = Force!<value>            %90.0,    <str+>
  val?+           %90.3 = %90.2
  goto BB40
BB91   <- [39]
  fs              %91.0 = FrameState         R     0x56096c573b60+870: [], env=e0.2
  prom-           %91.1 = MkArg                    %82.1, [0x56096c3f1220]_p9 (!refl), e0.2
  val?~           %91.2 = CastType                 up %91.1
  env             e91.3 = (MkEnv)            l     x=%91.2, parent=R_BaseNamespace, context 0
  fs              %91.4 = FrameState         R     0x56096ca09830+342: [%35.1], env=e91.3, next=%91.0
  void                    Deopt              !v    %91.4, Typecheck@0x56096c56e088[Type#41], %39.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     lapply, <0x56096a125040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x56096c3f1220]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x56096c3f1220]_p2, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, %0.3, all.names=true) e0.0   <vec$->
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    objects, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    these, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    these, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    these, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    trim, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3

│ [0x56096c3f1220]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
