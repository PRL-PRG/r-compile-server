
┌──────────────────────────────────────────────────────────────────────────────┐
│ f[0x55ef054d1650]                                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0,SimpleReal1│
│ Properties:  Eager, ForceOrd: 0 1                                            │
├────── Final PIR Version
f[0x55ef054d1650]
BB0
  (real|miss)$~-  %0.0  = LdArg                    1
  (real|miss)$~-  %0.1  = LdArg                    0
  real$-          %0.2  = Force<lazy>              %0.1,    <real$->
  real$-          %0.3  = Force<lazy>              %0.0,    <real$->
  real$-          %0.4  = Mod                d     %0.2, %0.3, elided   <real$->
  val?^ | miss    %0.5  = LdVar              eR    print, ?
  lgl$#-          %0.6  = Identical                %0.5, function(x, ...) <(rir::DispatchTable*)0x55ef0|...
  void                    Branch                   %0.6 -> BB6 (if true) | BB7 (if false)
BB6   <- [0]
  val?^ | miss    %6.0  = LdVar              eR    paste, ?
  lgl$#-          %6.1  = Identical                %6.0, function(..., sep=" ", collapse=NULL, recycle0|...
  void                    Branch                   %6.1 -> BB8 (if true) | BB9 (if false)
BB7   <- [0]
  void                    Nop                !     
  val?^ | miss    %7.1  = %0.5
  dr              %7.2  = CallTarget@0x55ef0494c5c8[Call#0]
  goto BB5
BB8   <- [6]
  env             e8.0  = MkEnv              l     a=%0.1, b=%0.0, r=%0.4, parent=?, context 1
  prom-           %8.1  = MkArg                    unboundValue, f[0x55ef054d1650]_p8 (!refl), e8.0
  prom-           %8.2  = MkArg                    unboundValue, f[0x55ef054d1650]_p9 (!refl), e8.0
  prom-           %8.3  = MkArg                    unboundValue, f[0x55ef054d1650]_p10 (!refl), e8.0
  dots-           %8.4  = DotsList           l     %8.1, %8.2, %8.3
  val?            %8.5  = StaticCall         !v    unknown--fromConstant[0x55ef053858e0](%8.4) from function(..., sep=" ", collapse=NULL, recycle0|... { 0 1 2 } e8.0   <str$->
  prom-           %8.6  = MkArg                    %8.5, f[0x55ef054d1650]_p0 (!refl), e8.0
  val?            %8.7  = StaticCall         !v    print[0x55ef036d0d40](%8.6) { 0 } e8.0
  val?^ | miss    %8.8  = LdVar              eR    r, e8.0
  lgl$#-          %8.9  = IsType                   %8.8 isA real$-
  void                    Branch                   %8.9 -> BB10 (if true) | BB11 (if false)
BB9   <- [6]
  void                    Nop                !     
  val?^ | miss    %9.1  = %6.0
  dr              %9.2  = CallTarget@0x55ef0494c5c8[Call#1]
  goto BB5
BB5   <- [7, 9]
  val?^ | miss    %5.0  = Phi                      %7.1:BB7, %9.1:BB9
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %7.2:BB7, %9.2:BB9
  dr              %5.3  = %5.2
  env             e5.4  = (MkEnv)            l     a=%0.1, b=%0.0, r=%0.4, parent=?, context 1
  fs              %5.5  = FrameState         R     0x55ef05556f50+43: [], env=e5.4
  void                    Deopt              !v    %5.5, %5.3, %5.1
BB10   <- [8]
  real$-          %10.0 = CastType           d     dn %8.8
  void                    Visible            v     
  void                    Return             l     %10.0
BB11   <- [8]
  fs              %11.0 = FrameState         R     0x55ef05556f50+75: [%8.7], env=e8.0
  void                    Deopt              !v    %11.0, Typecheck@0x55ef0494c5c8[Type#7], %8.8   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     paste, <0x55ef03708da8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, f[0x55ef054d1650]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, f[0x55ef054d1650]_p2, e0.0
  prom-           %0.4  = MkArg                    unboundValue, f[0x55ef054d1650]_p3, e0.0
  val?            %0.5  = Call               !     %0.1(%0.2, %0.3, %0.4) e0.0   <str$->
  void                    Return             l     %0.5
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    b, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    b, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3

│ f[0x55ef054d1650]                                                            │
└──────────────────────────────────────────────────────────────────────────────┘
