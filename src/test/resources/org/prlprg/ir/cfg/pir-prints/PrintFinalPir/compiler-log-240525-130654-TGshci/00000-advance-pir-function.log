
┌──────────────────────────────────────────────────────────────────────────────┐
│ advance[0x55d498681700]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleReal0    │
│ Properties:                                                                  │
├────── Final PIR Version
advance[0x55d498681700]
BB0
  (real|miss)$~-  %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    array, R_GlobalEnv
  lgl$#-          %0.2  = Identical                %0.1, function(data=NA, dim=length(data), dimnames=N|...
  void                    Branch                   %0.2 -> BB65 (if true) | BB66 (if false)
BB65   <- [0]
  val?^ | miss    %65.0 = LdVar              eR    c, R_GlobalEnv
  lgl$#-          %65.1 = Identical                %65.0, <blt c>
  void                    Branch                   %65.1 -> BB67 (if true) | BB68 (if false)
BB66   <- [0]
  void                    Nop                !     
  val?^ | miss    %66.1 = %0.1
  dr              %66.2 = CallTarget@0x55d49965faf8[Call#0]
  goto BB64
BB67   <- [65]
  val?^ | miss    %67.0 = LdVar              eR    n_bodies, R_GlobalEnv
  lgl$#-          %67.1 = IsType                   %67.0 isA real$-
  void                    Branch                   %67.1 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  void                    Nop                !     
  val?^ | miss    %68.1 = %65.0
  dr              %68.2 = CallTarget@0x55d49965faf8[Call#1]
  goto BB64
BB64   <- [66, 68, 70]
  val?^ | miss    %64.0 = Phi                      %66.1:BB66, %68.1:BB68, %70.1:BB70
  val?^ | miss    %64.1 = %64.0
  dr              %64.2 = Phi                      %66.2:BB66, %68.2:BB68, %70.2:BB70
  dr              %64.3 = %64.2
  env             e64.4 = (MkEnv)            l     dt=%0.0, parent=R_GlobalEnv, context 1
  fs              %64.5 = FrameState         R     0x55d499f66050+0: [], env=e64.4
  void                    Deopt              !v    %64.5, %64.3, %64.1
BB69   <- [67]
  real$-          %69.0 = CastType           d     dn %67.0
  real-           %69.1 = CallSafeBuiltin    wed   c(%69.0, %69.0, 3)    <real->
  lgl$#-          %69.2 = ColonInputEffects        1, %69.0   <true>
  val+            %69.3 = CallSafeBuiltin    wed   array(na-lgl, %69.1, nil)    <lgl_>
  void                    Branch                   %69.2 -> BB71 (if true) | BB72 (if false)
BB70   <- [67]
  void                    Nop                !     
  val?^ | miss    %70.1 = %67.0
  dr              %70.2 = Typecheck@0x55d49965faf8[Type#0]
  goto BB64
BB71   <- [69]
  int$#-          %71.0 = ColonCastRhs       e     1L, %69.0   <int$->
  lgl$#-          %71.1 = Lte                d     1L, %71.0, elided   <true>
  void                    Branch                   %71.1 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  void                    Nop                !     
  lgl$#-          %72.1 = %69.2
  dr              %72.2 = DeadBranchReached@0x55d49965faf8[Test#0]
  goto BB3
BB73   <- [71]
  val?^ | miss    %73.0 = LdVar              eR    body_r, R_GlobalEnv
  env             e73.1 = MkEnv              l     dt=%0.0, drr=%69.3, parent=R_GlobalEnv, context 1
  val+            %73.2 = %69.3
  int$#-          %73.3 = 1L
  goto BB5
BB74   <- [71]
  void                    Nop                !     
  lgl$#-          %74.1 = %71.1
  dr              %74.2 = DeadBranchReached@0x55d49965faf8[Test#10]
  goto BB3
BB3   <- [72, 74]
  val?^ | miss    %3.0  = Phi                      %72.1:BB72, %74.1:BB74
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %72.2:BB72, %74.2:BB74
  dr              %3.3  = %3.2
  env             e3.4  = (MkEnv)            l     dt=%0.0, drr=%69.3, parent=R_GlobalEnv, context 1
  fs              %3.5  = FrameState         R     0x55d499f66050+50: [], env=e3.4
  void                    Deopt              !v    %3.5, %3.3, %3.1
BB5   <- [60, 73]
  val+            %5.0  = Phi                      %73.2:BB73, %60.1:BB60   <(lgl|real)_>
  val+            %5.1  = %5.0
  int$#-          %5.2  = Phi                      %73.3:BB73, %60.2:BB60
  int$#-          %5.3  = %5.2
  lgl$#-          %5.4  = Neq                d     %71.0, %5.3, elided
  void                    Branch                   %5.4 -> BB54 (if true) | BB8 (if false)
BB54   <- [5]
  void                    StVar              lW    i, %5.3, e73.1
  int$#-          %54.1 = Add                d     %5.3, 1L, elided
  lgl$#-          %54.2 = ColonInputEffects        1, %69.0   <true>
  void                    Branch                   %54.2 -> BB75 (if true) | BB76 (if false)
BB8   <- [5]
  val?^ | miss    %8.0  = LdVar              eR    sqrt, R_GlobalEnv
  lgl$#-          %8.1  = Identical                <blt sqrt>, %8.0   <true>
  void                    Branch                   %8.1 -> BB77 (if true) | BB78 (if false)
BB75   <- [54]
  int$#-          %75.0 = ColonCastRhs       e     1L, %69.0   <int$->
  lgl$#-          %75.1 = Lte                d     1L, %75.0, elided   <true>
  void                    Branch                   %75.1 -> BB81 (if true) | BB82 (if false)
BB76   <- [54]
  void                    Nop                !     
  lgl$#-          %76.1 = %54.2
  dr              %76.2 = DeadBranchReached@0x55d49965faf8[Test#11]
  goto BB55
BB77   <- [8]
  val?^ | miss    %77.0 = LdVar              eR    t, R_GlobalEnv
  lgl$#-          %77.1 = Identical                %77.0, function(x) <(rir::DispatchTable*)0x55d4986d87|...
  void                    Branch                   %77.1 -> BB79 (if true) | BB80 (if false)
BB78   <- [8]
  void                    Nop                !     
  lgl$#-          %78.1 = %8.1
  dr              %78.2 = DeadBranchReached@0x55d49965faf8[Test#20]
  goto BB6
BB81   <- [75]
  lgl$#-          %81.0 = Neq                d     %75.0, 1L, elided   <true>
  void                    Branch                   %81.0 -> BB89 (if true) | BB90 (if false)
BB82   <- [75]
  void                    Nop                !     
  lgl$#-          %82.1 = %75.1
  dr              %82.2 = DeadBranchReached@0x55d49965faf8[Test#14]
  goto BB55
BB55   <- [76, 82, 90]
  val?^ | miss    %55.0 = Phi                      %76.1:BB76, %82.1:BB82, %90.1:BB90
  val?^ | miss    %55.1 = %55.0
  dr              %55.2 = Phi                      %76.2:BB76, %82.2:BB82, %90.2:BB90
  dr              %55.3 = %55.2
  fs              %55.4 = FrameState         R     0x55d499f66050+189: [1L, %71.0, %5.3], env=e73.1
  void                    Deopt              !v    %55.4, %55.3, %55.1
BB79   <- [77]
  val?^ | miss    %79.0 = LdVar              eR    colSums, R_GlobalEnv
  lgl$#-          %79.1 = Identical                %79.0, function(x, na.rm=FALSE, dims=1L) <(rir::Dispa|...
  void                    Branch                   %79.1 -> BB83 (if true) | BB84 (if false)
BB80   <- [77]
  void                    Nop                !     
  val?^ | miss    %80.1 = %77.0
  dr              %80.2 = CallTarget@0x55d49965faf8[Call#6]
  goto BB6
BB6   <- [78, 80, 84]
  val?^ | miss    %6.0  = Phi                      %78.1:BB78, %80.1:BB80, %84.1:BB84
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %78.2:BB78, %80.2:BB80, %84.2:BB84
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x55d499f66050+172: [1L, %71.0, %5.3], env=e73.1
  void                    Deopt              !v    %6.4, %6.3, %6.1
BB89   <- [81]
  void                    StVar              lW    j, 1L, e73.1
  lgl$#-          %89.1 = IsType                   %73.0 isA real_
  void                    Branch                   %89.1 -> BB91 (if true) | BB92 (if false)
BB90   <- [81]
  void                    Nop                !     
  lgl$#-          %90.1 = %81.0
  dr              %90.2 = DeadBranchReached@0x55d49965faf8[Test#15]
  goto BB55
BB83   <- [79]
  prom-           %83.0 = MkArg                    unboundValue, advance[0x55d498681700]_p9, e73.1
  val?            %83.1 = Call               !v    function(x, na.rm=FALSE, dims=1L) <(rir::Dispa|...(%83.0) e73.1   <real_>
  prom-           %83.2 = MkArg                    %83.1, advance[0x55d498681700]_p3 (!refl), e73.1
  val?            %83.3 = StaticCall         !v    t[0x55d499fda860](%83.2) e73.1   <real_>
  lgl$#-          %83.4 = IsType                   %83.3 isA real_
  void                    Branch                   %83.4 -> BB85 (if true) | BB86 (if false)
BB84   <- [79]
  void                    Nop                !     
  val?^ | miss    %84.1 = %79.0
  dr              %84.2 = CallTarget@0x55d49965faf8[Call#7]
  goto BB6
BB91   <- [89]
  real_           %91.0 = CastType           d     dn %73.0
  real_           %91.1 = Extract1_2D        wed   %91.0, missingArg, %5.3, elided   <real->
  real_           %91.2 = Extract1_2D        wed   %91.0, missingArg, 1L, elided   <real->
  real_           %91.3 = Sub                wed   %91.1, %91.2, elided   <real->
  val+            %91.4 = Subassign1_3D      wed   %91.3, %5.1, %5.3, 1L, missingArg, elided
  void                    StVar              lW    drr, %91.4, e73.1
  val+            %91.6 = %91.4
  int$#-          %91.7 = 2L
  goto BB59
BB92   <- [89]
  fs              %92.0 = FrameState         R     0x55d499f66050+340: [1L, %71.0, %54.1, 1L, %75.0, 1L], env=e73.1
  void                    Deopt              !v    %92.0, Typecheck@0x55d49965faf8[Type#68], %73.0
BB85   <- [83]
  real_           %85.0 = CastType           d     dn %83.3
  real_           %85.1 = CallSafeBuiltin    wed   sqrt(%85.0)    <real_>
  void                    StVar              lW    distance, %85.1, e73.1
  val?^ | miss    %85.3 = LdVar              eR    dt, e73.1
  val?            %85.4 = Force!<value>      !v    %85.3, e73.1   <real$->
  val?^ | miss    %85.5 = LdVar              eR    distance, e73.1
  lgl$#-          %85.6 = IsType                   %85.5 isA real_
  void                    Branch                   %85.6 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  fs              %86.0 = FrameState         R     0x55d499f66050+913: [<blt sqrt>, %83.3], env=e73.1
  void                    Deopt              !v    %86.0, Typecheck@0x55d49965faf8[Type#103], %83.3   !
BB59   <- [91, 101]
  val+            %59.0 = Phi                      %91.6:BB91, %101.3:BB101
  val+            %59.1 = %59.0
  int$#-          %59.2 = Phi                      %91.7:BB91, %101.4:BB101
  int$#-          %59.3 = %59.2
  lgl$#-          %59.4 = Neq                d     %75.0, %59.3, elided
  void                    Branch                   %59.4 -> BB61 (if true) | BB60 (if false)
BB87   <- [85]
  real_           %87.0 = CastType           d     dn %85.5
  real_           %87.1 = Mul                wed   %87.0, %87.0, elided   <real_>
  real_           %87.2 = Mul                wed   %87.1, %87.0, elided   <real_>
  lgl$#-          %87.3 = IsType                   %85.4 isA real$-
  void                    Branch                   %87.3 -> BB93 (if true) | BB94 (if false)
BB88   <- [85]
  fs              %88.0 = FrameState         R     0x55d499f66050+958: [%85.4], env=e73.1
  void                    Deopt              !v    %88.0, Typecheck@0x55d49965faf8[Type#106], %85.5   !
BB61   <- [59]
  void                    StVar              lW    j, %59.3, e73.1
  int$#-          %61.1 = Add                d     %59.3, 1L, elided
  real_           %61.2 = Extract1_2D        wed   %91.0, missingArg, %5.3, elided   <real->
  real_           %61.3 = Extract1_2D        wed   %91.0, missingArg, %59.3, elided   <real->
  real_           %61.4 = Sub                wed   %61.2, %61.3, elided   <real->
  lgl$#-          %61.5 = IsType                   %59.1 isA real_
  void                    Branch                   %61.5 -> BB101 (if true) | BB102 (if false)
BB60   <- [59]
  void                    Nop                !     
  val+            %60.1 = %59.1
  int$#-          %60.2 = %54.1
  goto BB5
BB93   <- [87]
  real$-          %93.0 = CastType           d     dn %85.4
  real_           %93.1 = Div                wed   %93.0, %87.2, elided   <real_>
  void                    StVar              lW    mag, %93.1, e73.1
  val?^ | miss    %93.3 = LdVar              eR    diag<-, e73.1
  lgl$#-          %93.4 = Identical                %93.3, function(x, value) <(rir::DispatchTable*)0x55d|...
  void                    Branch                   %93.4 -> BB95 (if true) | BB96 (if false)
BB94   <- [87]
  fs              %94.0 = FrameState         R     0x55d499f66050+1012: [%85.4, %87.2], env=e73.1
  void                    Deopt              !v    %94.0, Typecheck@0x55d49965faf8[Type#105], %85.4   !
BB101   <- [61]
  real_           %101.0 = CastType           d     dn %59.1
  real_           %101.1 = Subassign1_3D      wed   %61.4, %101.0, %5.3, %59.3, missingArg, elided
  void                    StVar              lW    drr, %101.1, e73.1
  real_           %101.3 = %101.1
  int$#-          %101.4 = %61.1
  goto BB59
BB102   <- [61]
  fs              %102.0 = FrameState         R     0x55d499f66050+739: [1L, %71.0, %54.1, 1L, %75.0, %61.1, %61.4], env=e73.1
  void                    Deopt              !v    %102.0, Typecheck@0x55d49965faf8[Type#89], %59.1
BB95   <- [93]
  ct              %95.0 = PushContext        lCL   %93.1, 0, diag<-(mag, value=0), function(x, value) <(rir::DispatchTable*)0x55d|..., e73.1
  val+            %95.1 = CallSafeBuiltin    wed   dim(%93.1)    <int->
  (int|real)$-    %95.2 = CallSafeBuiltin    wed   length(%95.1)    <int$->
  lgl$#-          %95.3 = IsType                   %95.2 isA int$-
  void                    Branch                   %95.3 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  fs              %96.0 = FrameState         R     0x55d499f66050+1033: [], env=e73.1
  void                    Deopt              !v    %96.0, CallTarget@0x55d49965faf8[Call#9], %93.3   !
BB97   <- [95]
  int$-           %97.0 = CastType           d     dn %95.2
  lgl$-           %97.1 = Neq                d     %97.0, 2L, elided   <lgl$->
  lgl$#-          %97.2 = CheckTrueFalse     e     %97.1
  void                    Branch                   %97.2 -> BB53 (if true) | BB19 (if false)
BB98   <- [95]
  void                    Nop                !     
  (int|real)$-    %98.1 = %95.2
  dr              %98.2 = Typecheck@0x55d49965fdb8[Type#5]
  goto BB17
BB53   <- [97]
  env             e53.0 = (MkEnv)            l     x=%93.1, value=0, dx=%95.1, parent=R_BaseNamespace, context 1
  (cls|spec|blt)  %53.1 = LdFun              !v    stop, R_BaseNamespace
  fs              %53.2 = FrameState         R     0x55d499f66050+1098: [], env=e73.1
  fs              %53.3 = FrameState         R     0x55d499f77e10+229: [%53.1], env=e53.0, next=%53.2
  void                    Deopt              !v    %53.3, DeadCall@0x55d49965fdb8[Call#2], %53.1   !
BB19   <- [97]
  lgl$#-          %19.0 = IsType                   %95.1 isA int-
  void                    Branch                   %19.0 -> BB99 (if true) | BB100 (if false)
BB17   <- [98, 100]
  val?^ | miss    %17.0 = Phi                      %98.1:BB98, %100.1:BB100
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %98.2:BB98, %100.2:BB100
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x55d499f66050+1098: [], env=e73.1
  env             e17.5 = (MkEnv)            l     x=%93.1, value=0, dx=%95.1, parent=R_BaseNamespace, context 1
  fs              %17.6 = FrameState         R     0x55d499f77e10+196: [%95.2], env=e17.5, next=%17.4
  void                    Deopt              !v    %17.6, %17.3, %17.1   !
BB99   <- [19]
  int-            %99.0 = CastType           d     dn %95.1
  int$-           %99.1 = CallSafeBuiltin    wed   min(%99.0)    <int$->
  lgl$#-          %99.2 = CheckTrueFalse     e     %99.1
  env             e99.3 = MkEnv              l     x=%93.1, value=0, dx=%99.0, len.i=%99.1, len.v=1L, parent=R_BaseNamespace, context 1
  void                    Branch                   %99.2 -> BB50 (if true) | BB20 (if false)
BB100   <- [19]
  void                    Nop                !     
  val+            %100.1 = %95.1
  dr              %100.2 = Typecheck@0x55d49965fdb8[Type#8]
  goto BB17
BB50   <- [99]
  val+            %50.0 = CallSafeBuiltin    wed   seq_len(%99.1)    <int->
  void                    StVar              lW    i, %50.0, e99.3
  prom-           %50.2 = MkArg                    unboundValue, advance[0x55d498681700]_p26 (!refl), e99.3
  prom-           %50.3 = MkArg                    unboundValue, advance[0x55d498681700]_p27 (!refl), e99.3
  dots-           %50.4 = DotsList           l     %50.2, %50.3
  ct              %50.5 = PushContext        lCL   %50.4, cbind(i, i), function(..., deparse.level=1) <(rir::Dispatch|..., e99.3
  env             e50.6 = MkEnv              l     ...=%50.4, deparse.level(miss)=1, parent=R_BaseNamespace, context 1
  prom-           %50.7 = MkArg                    unboundValue, advance[0x55d498681700]_p28, e50.6
  val?            %50.8 = Call               !v    <spec .Internal>(%50.7) e50.6   <int+>
  val?            %50.9 = PopContext         C     %50.8, %50.5   <int+>
  lgl$#-          %50.10 = IsType                   %50.9 isA int+
  void                    Branch                   %50.10 -> BB103 (if true) | BB104 (if false)
BB20   <- [99]
  void                    Nop                !     
  real_           %20.1 = %93.1
  goto BB21
BB103   <- [50]
  int+            %103.0 = CastType           d     dn %50.9
  real_           %103.1 = Subassign1_1D      wed   0, %93.1, %103.0, elided
  void                    StVar              lW    x, %103.1, e99.3
  real_           %103.3 = %103.1
  goto BB21
BB104   <- [50]
  fs              %104.0 = FrameState         R     0x55d499f66050+1098: [], env=e73.1
  fs              %104.1 = FrameState         R     0x55d499f77e10+775: [0, %93.1, %50.9], env=e99.3, next=%104.0
  void                    Deopt              !v    %104.1, Typecheck@0x55d49965fdb8[Type#26], %50.9   !
BB21   <- [20, 103]
  real_           %21.0 = Phi                      %103.3:BB103, %20.1:BB20
  real_           %21.1 = %21.0
  val?            %21.2 = PopContext         C     %21.1, %95.0
  void                    StVar              lW    mag, %21.2, e73.1
  void                    StVar              lW    d, 1L, e73.1
  val?^ | miss    %21.5 = LdVar              eR    body_v !upd, e73.1
  val?            %21.6 = Force!             !v    %21.5, e73.1
  val?^ | miss    %21.7 = LdVar              eR    body_v, e73.1
  lgl$#-          %21.8 = IsType                   %21.7 isA real_
  void                    Branch                   %21.8 -> BB105 (if true) | BB106 (if false)
BB105   <- [21]
  real_           %105.0 = CastType           d     dn %21.7
  val?^ | miss    %105.1 = LdVar              eR    d, e73.1
  lgl$#-          %105.2 = IsType                   %105.1 isA int$-
  void                    Branch                   %105.2 -> BB107 (if true) | BB108 (if false)
BB106   <- [21]
  void                    Nop                !     
  val?^ | miss    %106.1 = %21.7
  dr              %106.2 = Typecheck@0x55d49965faf8[Type#115]
  goto BB22
BB107   <- [105]
  int$-           %107.0 = CastType           d     dn %105.1
  real_           %107.1 = Extract1_2D        wed   %105.0, %107.0, missingArg, elided   <real->
  val?^ | miss    %107.2 = LdVar              eR    as.vector, e73.1
  lgl$#-          %107.3 = Identical                %107.2, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %107.3 -> BB109 (if true) | BB110 (if false)
BB108   <- [105]
  void                    Nop                !     
  val?^ | miss    %108.1 = %105.1
  dr              %108.2 = Typecheck@0x55d49965faf8[Type#117]
  goto BB22
BB22   <- [106, 108]
  val?^ | miss    %22.0 = Phi                      %106.1:BB106, %108.1:BB108
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %106.2:BB106, %108.2:BB108
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55d499f66050+1210: [1L, 4L, 2L, %21.6], env=e73.1
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB109   <- [107]
  val?^ | miss    %109.0 = LdVar              eR    %*%, e73.1
  lgl$#-          %109.1 = Identical                %109.0, <blt %*%>
  void                    Branch                   %109.1 -> BB111 (if true) | BB112 (if false)
BB110   <- [107]
  void                    Nop                !     
  val?^ | miss    %110.1 = %107.2
  dr              %110.2 = CallTarget@0x55d49965faf8[Call#10]
  goto BB24
BB111   <- [109]
  val?^ | miss    %111.0 = LdVar              eR    drr, e73.1
  lgl$#-          %111.1 = IsType                   %111.0 isA real_
  void                    Branch                   %111.1 -> BB113 (if true) | BB114 (if false)
BB112   <- [109]
  void                    Nop                !     
  val?^ | miss    %112.1 = %109.0
  dr              %112.2 = CallTarget@0x55d49965faf8[Call#11]
  goto BB24
BB24   <- [110, 112, 114]
  val?^ | miss    %24.0 = Phi                      %110.1:BB110, %112.1:BB112, %114.1:BB114
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %110.2:BB110, %112.2:BB112, %114.2:BB114
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x55d499f66050+1282: [1L, 4L, 2L, %107.1], env=e73.1
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB113   <- [111]
  real_           %113.0 = CastType           d     dn %111.0
  real_           %113.1 = Extract1_3D        wed   %113.0, missingArg, missingArg, %107.0, elided   <real_>
  val?^ | miss    %113.2 = LdVar              eR    mag, e73.1
  val?            %113.3 = Force!<value>      !v    %113.2, e73.1   <real_>
  val?            %113.4 = Mul                !v    %113.1, %113.3, e73.1   <real_>
  val?^ | miss    %113.5 = LdVar              eR    body_mass, e73.1
  val?            %113.6 = Force!<value>      !v    %113.5, e73.1   <real->
  val?            %113.7 = CallBuiltin        !v    %*%(%113.4, %113.6) e73.1   <real_>
  lgl$#-          %113.8 = IsType                   %113.7 isA real_
  void                    Branch                   %113.8 -> BB115 (if true) | BB116 (if false)
BB114   <- [111]
  void                    Nop                !     
  val?^ | miss    %114.1 = %111.0
  dr              %114.2 = Typecheck@0x55d49965faf8[Type#119]
  goto BB24
BB115   <- [113]
  real_           %115.0 = CastType           d     dn %113.7
  val             %115.1 = CallSafeBuiltin    wed   as.vector(%115.0, "any")    <real->
  lgl$#-          %115.2 = IsType                   %115.1 isA real-
  void                    Branch                   %115.2 -> BB117 (if true) | BB118 (if false)
BB116   <- [113]
  fs              %116.0 = FrameState         R     0x55d499f66050+1320: [1L, 4L, 2L, %107.1], env=e73.1
  prom-           %116.1 = MkArg                    unboundValue, advance[0x55d498681700]_p12, e73.1
  val?^           %116.2 = CastType                 up %116.1
  env             e116.3 = (MkEnv)            l     mode(miss)="any", x=%116.2, parent=R_BaseNamespace, context 0
  fs              %116.4 = FrameState         R     0x55d499f55000+9: [], env=e116.3, next=%116.0
  fs              %116.5 = FrameState         R     0x55d499f64f60+37(pr): [%113.7], env=e73.1, next=%116.4
  void                    Deopt              !v    %116.5, Typecheck@0x55d499693168[Type#0], %113.7   !
BB117   <- [115]
  real-           %117.0 = CastType           d     dn %115.1
  real_           %117.1 = Sub                wed   %107.1, %117.0, elided   <real->
  val?^ | miss    %117.2 = LdVar              eR    body_v, R_GlobalEnv   <real_>
  val?^ | miss    %117.3 = LdVar              eR    d, e73.1
  lgl$#-          %117.4 = IsType                   %117.3 isA int$-
  void                    Branch                   %117.4 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  prom-           %118.0 = MkArg                    %115.0, advance[0x55d498681700]_p12 (!refl), e73.1
  val?~           %118.1 = CastType                 up %118.0
  fs              %118.2 = FrameState         R     0x55d499f66050+1320: [1L, 4L, 2L, %107.1], env=e73.1
  env             e118.3 = (MkEnv)            l     mode(miss)="any", x=%118.1, parent=R_BaseNamespace, context 0
  fs              %118.4 = FrameState         R     0x55d499f55000+41: [%115.1], env=e118.3, next=%118.2
  void                    Deopt              !v    %118.4, Typecheck@0x55d49965faf8[Type#127], %115.1   !
BB119   <- [117]
  int$-           %119.0 = CastType           d     dn %117.3
  lgl$#-          %119.1 = IsType                   %117.2 isA real_
  void                    Branch                   %119.1 -> BB121 (if true) | BB122 (if false)
BB120   <- [117]
  void                    Nop                !     
  val?^ | miss    %120.1 = %117.3
  dr              %120.2 = Typecheck@0x55d49965faf8[Type#130]
  goto BB30
BB121   <- [119]
  real_           %121.0 = CastType           d     dn %117.2
  real_           %121.1 = Subassign1_2D      wed   %117.1, %121.0, %119.0, missingArg, elided
  void                    StVarSuper         lRW   body_v, %121.1, e73.1
  int$#-          %121.3 = 2L
  goto BB32
BB122   <- [119]
  void                    Nop                !     
  val?^ | miss    %122.1 = %117.2
  dr              %122.2 = Typecheck@0x55d49965faf8[Type#129]
  goto BB30
BB30   <- [120, 122]
  val?^ | miss    %30.0 = Phi                      %120.1:BB120, %122.1:BB122
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %120.2:BB120, %122.2:BB122
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55d499f66050+1326: [1L, 4L, 2L, %117.1], env=e73.1
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB32   <- [121, 143]
  int$#-          %32.0 = Phi                      %121.3:BB121, %143.3:BB143
  int$#-          %32.1 = %32.0
  lgl$#-          %32.2 = Neq                d     4L, %32.1, elided
  void                    Branch                   %32.2 -> BB36 (if true) | BB35 (if false)
BB36   <- [32]
  void                    StVar              lW    d, %32.1, e73.1
  int$#-          %36.1 = Add                d     %32.1, 1L, elided
  val?^ | miss    %36.2 = LdVar              eR    body_v !upd, e73.1
  val?            %36.3 = Force!             !v    %36.2, e73.1
  val?^ | miss    %36.4 = LdVar              eR    body_v, e73.1
  lgl$#-          %36.5 = IsType                   %36.4 isA real_
  void                    Branch                   %36.5 -> BB129 (if true) | BB130 (if false)
BB35   <- [32]
  val?^ | miss    %35.0 = LdVar              eR    body_r, e73.1
  lgl$#-          %35.1 = IsType                   %35.0 isA real_
  void                    Branch                   %35.1 -> BB123 (if true) | BB124 (if false)
BB129   <- [36]
  real_           %129.0 = CastType           d     dn %36.4
  val?^ | miss    %129.1 = LdVar              eR    d, e73.1
  lgl$#-          %129.2 = IsType                   %129.1 isA int$-
  void                    Branch                   %129.2 -> BB131 (if true) | BB132 (if false)
BB130   <- [36]
  void                    Nop                !     
  val?^ | miss    %130.1 = %36.4
  dr              %130.2 = Typecheck@0x55d49965faf8[Type#131]
  goto BB37
BB123   <- [35]
  real_           %123.0 = CastType           d     dn %35.0
  val?^ | miss    %123.1 = LdVar              eR    dt, e73.1
  lgl$#-          %123.2 = IsType                   %123.1 isA real$-
  void                    Branch                   %123.2 -> BB125 (if true) | BB126 (if false)
BB124   <- [35]
  void                    Nop                !     
  val?^ | miss    %124.1 = %35.0
  dr              %124.2 = Typecheck@0x55d49965faf8[Type#147]
  goto BB33
BB131   <- [129]
  int$-           %131.0 = CastType           d     dn %129.1
  real_           %131.1 = Extract1_2D        wed   %129.0, %131.0, missingArg, elided   <real->
  val?^ | miss    %131.2 = LdVar              eR    as.vector, e73.1
  lgl$#-          %131.3 = Identical                %131.2, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %131.3 -> BB133 (if true) | BB134 (if false)
BB132   <- [129]
  void                    Nop                !     
  val?^ | miss    %132.1 = %129.1
  dr              %132.2 = Typecheck@0x55d49965faf8[Type#133]
  goto BB37
BB37   <- [130, 132]
  val?^ | miss    %37.0 = Phi                      %130.1:BB130, %132.1:BB132
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %130.2:BB130, %132.2:BB132
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x55d499f66050+1399: [1L, 4L, %36.1, %36.3], env=e73.1
  void                    Deopt              !v    %37.4, %37.3, %37.1   !
BB125   <- [123]
  real$-          %125.0 = CastType           d     dn %123.1
  val?^ | miss    %125.1 = LdVar              eR    body_v, e73.1
  lgl$#-          %125.2 = IsType                   %125.1 isA real_
  void                    Branch                   %125.2 -> BB127 (if true) | BB128 (if false)
BB126   <- [123]
  void                    Nop                !     
  val?^ | miss    %126.1 = %123.1
  dr              %126.2 = Typecheck@0x55d49965faf8[Type#148]
  goto BB33
BB33   <- [124, 126, 128]
  val?^ | miss    %33.0 = Phi                      %124.1:BB124, %126.1:BB126, %128.1:BB128
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %124.2:BB124, %126.2:BB126, %128.2:BB128
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55d499f66050+1366: [1L, 4L, %32.1], env=e73.1
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB133   <- [131]
  val?^ | miss    %133.0 = LdVar              eR    %*%, e73.1
  lgl$#-          %133.1 = Identical                %133.0, <blt %*%>
  void                    Branch                   %133.1 -> BB135 (if true) | BB136 (if false)
BB134   <- [131]
  void                    Nop                !     
  val?^ | miss    %134.1 = %131.2
  dr              %134.2 = CallTarget@0x55d49965faf8[Call#12]
  goto BB39
BB127   <- [125]
  real_           %127.0 = CastType           d     dn %125.1
  real_           %127.1 = Mul                wed   %125.0, %127.0, elided   <real_>
  real_           %127.2 = Add                wed   %123.0, %127.1, elided   <real_>
  void                    Invisible          v     
  void                    StVarSuper         lRW   body_r, %127.2, e73.1
  void                    Return             l     %127.2
BB128   <- [125]
  void                    Nop                !     
  val?^ | miss    %128.1 = %125.1
  dr              %128.2 = Typecheck@0x55d49965faf8[Type#149]
  goto BB33
BB135   <- [133]
  val?^ | miss    %135.0 = LdVar              eR    drr, e73.1
  val?            %135.1 = Force!<value>      !v    %135.0, e73.1   <real_>
  lgl$#-          %135.2 = IsType                   %135.1 isA val+   <true>
  void                    Branch                   %135.2 -> BB49 (if true) | BB41 (if false)
BB136   <- [133]
  void                    Nop                !     
  val?^ | miss    %136.1 = %133.0
  dr              %136.2 = CallTarget@0x55d49965faf8[Call#13]
  goto BB39
BB39   <- [134, 136]
  val?^ | miss    %39.0 = Phi                      %134.1:BB134, %136.1:BB136
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %134.2:BB134, %136.2:BB136
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55d499f66050+1471: [1L, 4L, %36.1, %131.1], env=e73.1
  void                    Deopt              !v    %39.4, %39.3, %39.1   !
BB49   <- [135]
  val?^ | miss    %49.0 = LdVar              eR    d, e73.1
  val?            %49.1 = Force<value>       !v    %49.0, e73.1   <int$->
  val?            %49.2 = %49.1
  goto BB42
BB41   <- [135]
  prom-           %41.0 = MkArg                    unboundValue, advance[0x55d498681700]_p18, e73.1
  prom-           %41.1 = %41.0
  goto BB42
BB42   <- [49, 41]
  val?            %42.0 = Phi                      %49.2:BB49, %41.1:BB41
  val?            %42.1 = %42.0
  val?            %42.2 = Extract1_3D        !v    %135.1, missingArg, missingArg, %42.1, e73.1   <real_>
  val?^ | miss    %42.3 = LdVar              eR    mag, e73.1
  val?            %42.4 = Force!<value>      !v    %42.3, e73.1   <real_>
  val?            %42.5 = Mul                !v    %42.2, %42.4, e73.1   <real_>
  val?^ | miss    %42.6 = LdVar              eR    body_mass, e73.1
  val?            %42.7 = Force!<value>      !v    %42.6, e73.1   <real->
  val?            %42.8 = CallBuiltin        !v    %*%(%42.5, %42.7) e73.1   <real_>
  lgl$#-          %42.9 = IsType                   %42.8 isA real_
  void                    Branch                   %42.9 -> BB137 (if true) | BB138 (if false)
BB137   <- [42]
  real_           %137.0 = CastType           d     dn %42.8
  val             %137.1 = CallSafeBuiltin    wed   as.vector(%137.0, "any")    <real->
  lgl$#-          %137.2 = IsType                   %137.1 isA real-
  void                    Branch                   %137.2 -> BB139 (if true) | BB140 (if false)
BB138   <- [42]
  prom-           %138.0 = MkArg                    %42.8, advance[0x55d498681700]_p16 (!refl), e73.1
  val?~           %138.1 = CastType                 up %138.0
  fs              %138.2 = FrameState         R     0x55d499f66050+1509: [1L, 4L, %36.1, %131.1], env=e73.1
  env             e138.3 = (MkEnv)            l     mode(miss)="any", x=%138.1, parent=R_BaseNamespace, context 0
  fs              %138.4 = FrameState         R     0x55d499f55000+9: [%42.8], env=e138.3, next=%138.2
  void                    Deopt              !v    %138.4, Typecheck@0x55d499693168[Type#0], %42.8   !
BB139   <- [137]
  real-           %139.0 = CastType           d     dn %137.1
  real_           %139.1 = Sub                wed   %131.1, %139.0, elided   <real->
  val?^ | miss    %139.2 = LdVar              eR    body_v, R_GlobalEnv   <real_>
  val?^ | miss    %139.3 = LdVar              eR    d, e73.1
  lgl$#-          %139.4 = IsType                   %139.3 isA int$-
  void                    Branch                   %139.4 -> BB141 (if true) | BB142 (if false)
BB140   <- [137]
  prom-           %140.0 = MkArg                    %137.0, advance[0x55d498681700]_p16 (!refl), e73.1
  val?~           %140.1 = CastType                 up %140.0
  fs              %140.2 = FrameState         R     0x55d499f66050+1509: [1L, 4L, %36.1, %131.1], env=e73.1
  env             e140.3 = (MkEnv)            l     mode(miss)="any", x=%140.1, parent=R_BaseNamespace, context 0
  fs              %140.4 = FrameState         R     0x55d499f55000+41: [%137.1], env=e140.3, next=%140.2
  void                    Deopt              !v    %140.4, Typecheck@0x55d49965faf8[Type#143], %137.1   !
BB141   <- [139]
  int$-           %141.0 = CastType           d     dn %139.3
  lgl$#-          %141.1 = IsType                   %139.2 isA real_
  void                    Branch                   %141.1 -> BB143 (if true) | BB144 (if false)
BB142   <- [139]
  void                    Nop                !     
  val?^ | miss    %142.1 = %139.3
  dr              %142.2 = Typecheck@0x55d49965faf8[Type#146]
  goto BB47
BB143   <- [141]
  real_           %143.0 = CastType           d     dn %139.2
  real_           %143.1 = Subassign1_2D      wed   %139.1, %143.0, %141.0, missingArg, elided
  void                    StVarSuper         lRW   body_v, %143.1, e73.1
  int$#-          %143.3 = %36.1
  goto BB32
BB144   <- [141]
  void                    Nop                !     
  val?^ | miss    %144.1 = %139.2
  dr              %144.2 = Typecheck@0x55d49965faf8[Type#145]
  goto BB47
BB47   <- [142, 144]
  val?^ | miss    %47.0 = Phi                      %142.1:BB142, %144.1:BB144
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %142.2:BB142, %144.2:BB144
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x55d499f66050+1515: [1L, 4L, %36.1, %139.1], env=e73.1
  void                    Deopt              !v    %47.4, %47.3, %47.1   !
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     colSums, <0x55d499f30438>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, advance[0x55d498681700]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     aperm, <0x55d499f37298>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, advance[0x55d498681700]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    drr, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real_>
  val?^ | miss    %0.3  = LdVar              eR    drr, e0.0
  void                    Visible            v     
  val?            %0.5  = Force<value>       !     %0.3, e0.0   <real_>
  val?            %0.6  = Mul                !     %0.2, %0.5, e0.0   <real_>
  void                    Return             l     %0.6
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     aperm, <0x55d499f37298>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, advance[0x55d498681700]_p10, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    drr, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real_>
  val?^ | miss    %0.3  = LdVar              eR    drr, e0.0
  void                    Visible            v     
  val?            %0.5  = Force<value>       !     %0.3, e0.0   <real_>
  val?            %0.6  = Mul                !     %0.2, %0.5, e0.0   <real_>
  void                    Return             l     %0.6
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %*%, <0x55d4980ab708>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, advance[0x55d498681700]_p13, e0.0
  prom-           %0.3  = MkArg                    unboundValue, advance[0x55d498681700]_p15, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real_>
  void                    Return             l     %0.4
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    drr, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    d, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, advance[0x55d498681700]_p14, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_3D        !v    %0.2, missingArg, missingArg, %3.1, e0.0   <real_>
  val?^ | miss    %3.3  = LdVar              eR    mag, e0.0
  val?            %3.4  = Force<value>       !v    %3.3, e0.0   <real_>
  val?            %3.5  = Mul                !v    %3.2, %3.4, e0.0   <real_>
  void                    Visible            v     
  void                    Return             l     %3.5
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    body_mass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %*%, <0x55d4980ab708>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, advance[0x55d498681700]_p17, e0.0
  prom-           %0.3  = MkArg                    unboundValue, advance[0x55d498681700]_p19, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real_>
  void                    Return             l     %0.4
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    drr, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    d, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, advance[0x55d498681700]_p18, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_3D        !v    %0.2, missingArg, missingArg, %3.1, e0.0   <real_>
  val?^ | miss    %3.3  = LdVar              eR    mag, e0.0
  val?            %3.4  = Force<value>       !v    %3.3, e0.0   <real_>
  val?            %3.5  = Mul                !v    %3.2, %3.4, e0.0   <real_>
  void                    Visible            v     
  void                    Return             l     %3.5
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    body_mass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     cbind, e0.0
  prom-           %0.2  = MkArg                    unboundValue, advance[0x55d498681700]_p29, e0.0
  (miss|dots)     %0.3  = LdDots             R     , e0.0
  *dots-          %0.4  = ExpandDots               %0.3
  val?            %0.5  = NamedCall          !     %0.1(%0.2, .xpandDotsTrigger=%0.4) e0.0   <val?_>
  void                    Return             l     %0.5
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    deparse.level, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ advance[0x55d498681700]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
