
┌──────────────────────────────────────────────────────────────────────────────┐
│ array[0x55d49a327630]                                                        │
│ Context: CorrOrd,!TMany,Argmatch;Eager0,NonRefl0 miss: 1                     │
│ Properties:                                                                  │
├────── Final PIR Version
array[0x55d49a327630]
BB0
  val?^ | miss    %0.0  = LdArg                    1
  val?~ | miss    %0.1  = LdArg                    0
  lgl$#-          %0.2  = Identical                %0.1, missingArg
  lgl$#-          %0.3  = Identical                %0.0, missingArg
  env             e0.4  = MkEnv              l     data=%0.1, dim=%0.0, dimnames(miss)=missingArg, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.2 -> BB2 (if true) | BB15 (if false)
BB2   <- [0]
  void                    StArg              lW    data, na-lgl, e0.4
  lgl$-           %2.1  = na-lgl
  goto BB3
BB15   <- [0]
  void                    Nop                !     
  val?~ | miss    %15.1 = %0.1
  goto BB3
BB3   <- [15, 2]
  val?~ | miss    %3.0  = Phi                      %2.1:BB2, %15.1:BB15
  val?~ | miss    %3.1  = %3.0
  void                    Branch                   %0.3 -> BB14 (if true) | BB4 (if false)
BB14   <- [3]
  prom-           %14.0 = MkArg                    unboundValue, array[0x55d49a327630]_p1, e0.4
  val?^ | miss    %14.1 = CastType                 up %14.0
  void                    StArg              lW    dim, %14.1, e0.4
  val?^ | miss    %14.3 = %14.1
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  val?^ | miss    %4.1  = %0.0
  goto BB5
BB5   <- [14, 4]
  val?^ | miss    %5.0  = Phi                      %14.3:BB14, %4.1:BB4
  val?^ | miss    %5.1  = %5.0
  void                    StArg              lW    dimnames, nil, e0.4
  val?~           %5.3  = ChkMissing         e     %3.1
  val?            %5.4  = Force<lazy>              %5.3,    <lgl$->
  lgl$#-          %5.5  = IsType                   %5.4 isA lgl$-
  void                    Branch                   %5.5 -> BB16 (if true) | BB17 (if false)
BB16   <- [5]
  val?~           %16.0 = ChkMissing         e     %3.1
  val?            %16.1 = Force!<wrapped>          %16.0,    <lgl$->
  lgl$#-          %16.2 = CallSafeBuiltin    wed   is.object(%16.1)    <lgl$->
  void                    Branch                   %16.2 -> BB13 (if true) | BB8 (if false)
BB17   <- [5]
  fs              %17.0 = FrameState         R     0x55d499f25d20+0: [], env=e0.4
  void                    Deopt              !v    %17.0, Typecheck@0x55d498cf1da0[Type#3], %5.4
BB13   <- [16]
  (cls|spec|blt)  %13.0 = LdFun              !v    as.vector, R_BaseNamespace
  fs              %13.1 = FrameState         R     0x55d499f25d20+274: [%13.0], env=e0.4
  void                    Deopt              !v    %13.1, DeadCall@0x55d498cf1da0[Call#3], %13.0
BB8   <- [16]
  val?~           %8.0  = ChkMissing         e     %3.1
  val?            %8.1  = Force!<wrapped>          %8.0,    <lgl$->
  val?^           %8.2  = ChkMissing         e     %5.1
  val?            %8.3  = Force!<lazy>       !v    %8.2, e0.4   <real->
  lgl$#-          %8.4  = IsType                   %8.3 isA real-
  void                    Branch                   %8.4 -> BB18 (if true) | BB19 (if false)
BB18   <- [8]
  real-           %18.0 = CastType           d     dn %8.3
  val?^ | miss    %18.1 = LdVar              eR    dimnames, e0.4
  val?            %18.2 = Force!<lazy>       !v    %18.1, e0.4   <nil->
  lgl$#-          %18.3 = IsType                   %18.2 isA val?-
  lgl$#-          %18.4 = IsType                   %8.1 isA lgl$-
  void                    Branch                   %18.4 -> BB20 (if true) | BB21 (if false)
BB19   <- [8]
  fs              %19.0 = FrameState         R     0x55d499f25d20+236: [%8.1, %8.3], env=e0.4
  void                    Deopt              !v    %19.0, Typecheck@0x55d498cf1da0[Type#9], %8.3   !
BB20   <- [18]
  lgl$-           %20.0 = CastType           d     dn %8.1
  void                    Branch                   %18.3 -> BB22 (if true) | BB23 (if false)
BB21   <- [18]
  void                    Nop                !     
  val?            %21.1 = %8.1
  dr              %21.2 = Typecheck@0x55d498cf1da0[Type#8]
  goto BB11
BB22   <- [20]
  val?-           %22.0 = CastType           d     dn %18.2   <nil->
  val+            %22.1 = CallSafeBuiltin    vwed  array(%20.0, %18.0, %22.0) 
  void                    Return             l     %22.1
BB23   <- [20]
  void                    Nop                !     
  val?            %23.1 = %18.2
  dr              %23.2 = Typecheck@0x55d498cf1da0[Type#10]
  goto BB11
BB11   <- [21, 23]
  val?^ | miss    %11.0 = Phi                      %21.1:BB21, %23.1:BB23
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %21.2:BB21, %23.2:BB23
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55d499f25d20+250: [%8.1, %18.0, %18.2], env=e0.4
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, array[0x55d49a327630]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ array[0x55d49a327630]                                                        │
└──────────────────────────────────────────────────────────────────────────────┘
