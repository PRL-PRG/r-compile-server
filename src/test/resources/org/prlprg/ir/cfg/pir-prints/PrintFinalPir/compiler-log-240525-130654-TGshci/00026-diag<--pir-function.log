
┌──────────────────────────────────────────────────────────────────────────────┐
│ diag<-[0x55d499fc4160]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj1,SimpleReal1│
│ Properties:                                                                  │
├────── Final PIR Version
diag<-[0x55d499fc4160]
BB0
  (real|miss)$~-  %0.0  = LdArg                    1
  val?~           %0.1  = LdArg                    0
  val?            %0.2  = Force<value>             %0.1,    <real_>
  lgl$#-          %0.3  = IsType                   %0.2 isA real_
  void                    Branch                   %0.3 -> BB13 (if true) | BB14 (if false)
BB13   <- [0]
  real_           %13.0 = CastType           d     dn %0.2
  val+            %13.1 = CallSafeBuiltin    wed   dim(%13.0)    <int->
  (int|real)$-    %13.2 = CallSafeBuiltin    wed   length(%13.1)    <int$->
  lgl$#-          %13.3 = IsType                   %13.2 isA int$-
  void                    Branch                   %13.3 -> BB15 (if true) | BB16 (if false)
BB14   <- [0]
  env             e14.0 = (MkEnv)            l     x=%0.1, value=%0.0, parent=R_BaseNamespace, context 1
  fs              %14.1 = FrameState         R     0x55d499f77e10+17: [<blt dim>, true], env=e14.0
  void                    Deopt              !v    %14.1, Typecheck@0x55d49965fdb8[Type#1], %0.2
BB15   <- [13]
  int$-           %15.0 = CastType           d     dn %13.2
  lgl$-           %15.1 = Neq                d     %15.0, 2L, elided   <lgl$->
  lgl$#-          %15.2 = CheckTrueFalse     e     %15.1
  void                    Branch                   %15.2 -> BB11 (if true) | BB5 (if false)
BB16   <- [13]
  void                    Nop                !     
  (int|real)$-    %16.1 = %13.2
  dr              %16.2 = Typecheck@0x55d49965fdb8[Type#5]
  goto BB3
BB11   <- [15]
  env             e11.0 = (MkEnv)            l     x=%0.1, value=%0.0, dx=%13.1, parent=R_BaseNamespace, context 1
  (cls|spec|blt)  %11.1 = LdFun              !v    stop, R_BaseNamespace
  fs              %11.2 = FrameState         R     0x55d499f77e10+229: [%11.1], env=e11.0
  void                    Deopt              !v    %11.2, DeadCall@0x55d49965fdb8[Call#2], %11.1
BB5   <- [15]
  lgl$#-          %5.0  = IsType                   %13.1 isA int-
  void                    Branch                   %5.0 -> BB17 (if true) | BB18 (if false)
BB3   <- [16, 18]
  val?^ | miss    %3.0  = Phi                      %16.1:BB16, %18.1:BB18
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %16.2:BB16, %18.2:BB18
  dr              %3.3  = %3.2
  env             e3.4  = (MkEnv)            l     x=%0.1, value=%0.0, dx=%13.1, parent=R_BaseNamespace, context 1
  fs              %3.5  = FrameState         R     0x55d499f77e10+196: [%13.2], env=e3.4
  void                    Deopt              !v    %3.5, %3.3, %3.1
BB17   <- [5]
  int-            %17.0 = CastType           d     dn %13.1
  int$-           %17.1 = CallSafeBuiltin    wed   min(%17.0)    <int$->
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  env             e17.3 = MkEnv              l     x=%0.1, value=%0.0, dx=%17.0, len.i=%17.1, len.v=1L, parent=R_BaseNamespace, context 1
  void                    Branch                   %17.2 -> BB8 (if true) | BB6 (if false)
BB18   <- [5]
  void                    Nop                !     
  val+            %18.1 = %13.1
  dr              %18.2 = Typecheck@0x55d49965fdb8[Type#8]
  goto BB3
BB8   <- [17]
  val+            %8.0  = CallSafeBuiltin    wed   seq_len(%17.1)    <int->
  void                    StVar              lW    i, %8.0, e17.3
  real$-          %8.2  = Force!<wrapped>          %0.0,    <real$->
  prom-           %8.3  = MkArg                    unboundValue, diag<-[0x55d499fc4160]_p0 (!refl), e17.3
  prom-           %8.4  = MkArg                    unboundValue, diag<-[0x55d499fc4160]_p1 (!refl), e17.3
  dots-           %8.5  = DotsList           l     %8.3, %8.4
  ct              %8.6  = PushContext        lCL   %8.5, cbind(i, i), function(..., deparse.level=1) <(rir::Dispatch|..., e17.3
  env             e8.7  = MkEnv              l     ...=%8.5, deparse.level(miss)=1, parent=R_BaseNamespace, context 1
  prom-           %8.8  = MkArg                    unboundValue, diag<-[0x55d499fc4160]_p3, e8.7
  val?            %8.9  = Call               !v    <spec .Internal>(%8.8) e8.7   <int+>
  val?            %8.10 = PopContext         C     %8.9, %8.6   <int+>
  lgl$#-          %8.11 = IsType                   %8.10 isA int+
  void                    Branch                   %8.11 -> BB19 (if true) | BB20 (if false)
BB6   <- [17]
  void                    Nop                !     
  val?~           %6.1  = %0.1
  goto BB7
BB19   <- [8]
  int+            %19.0 = CastType           d     dn %8.10
  real_           %19.1 = Subassign1_1D      wed   %8.2, %13.0, %19.0, elided
  void                    StVar              lW    x, %19.1, e17.3
  real_           %19.3 = %19.1
  goto BB7
BB20   <- [8]
  fs              %20.0 = FrameState         R     0x55d499f77e10+775: [%8.2, %13.0, %8.10], env=e17.3
  void                    Deopt              !v    %20.0, Typecheck@0x55d49965fdb8[Type#26], %8.10   !
BB7   <- [6, 19]
  val?~           %7.0  = Phi                      %19.3:BB19, %6.1:BB6
  val?~           %7.1  = %7.0
  val?            %7.2  = Force!<value>            %7.1,    <real_>
  void                    Visible            v     
  void                    Return             l     %7.2
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     cbind, e0.0
  prom-           %0.2  = MkArg                    unboundValue, diag<-[0x55d499fc4160]_p4, e0.0
  (miss|dots)     %0.3  = LdDots             R     , e0.0
  *dots-          %0.4  = ExpandDots               %0.3
  val?            %0.5  = NamedCall          !     %0.1(%0.2, .xpandDotsTrigger=%0.4) e0.0   <val?_>
  void                    Return             l     %0.5
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    deparse.level, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ diag<-[0x55d499fc4160]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
