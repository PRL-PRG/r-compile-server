
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55d000802670]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 5                              │
│ Properties:                                                                  │
├────── Final PIR Version
FUN[0x55d000802670]
BB0
  val?^           %0.0  = LdArg                    0
  prom-           %0.1  = MkArg                    unboundValue, FUN[0x55d000802670]_p0 (!refl), 
  val?^ | miss    %0.2  = CastType                 up %0.1
  env             e0.3  = MkEnv              l     name=%0.0, pos(miss)=%0.2, envir(miss)=missingArg, all.names(miss)=missingArg, pattern(miss)=missingArg, sorted(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %0.4  = MkArg                    unboundValue, FUN[0x55d000802670]_p1, e0.3
  val?^ | miss    %0.5  = CastType                 up %0.4
  void                    StArg              lW    envir, %0.5, e0.3
  void                    StArg              lW    all.names, false, e0.3
  void                    StArg              lW    sorted, true, e0.3
  lgl$-           %0.9  = Missing            eR    name, e0.3
  lgl$-           %0.10 = Not                d     %0.9, elided
  lgl$#-          %0.11 = CheckTrueFalse     e     %0.10
  void                    Branch                   %0.11 -> BB2 (if true) | BB16 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, FUN[0x55d000802670]_p5, e0.3
  cls             %2.1  = MkCls                    FUN@Prom(6)0, e0.3
  prom-           %2.2  = MkArg                    %2.1, FUN[0x55d000802670]_p6 (!refl), e0.3
  dots-           %2.3  = DotsList           l     error=%2.2
  val?            %2.4  = StaticCall         !v    tryCatch[0x55d00018cf60](%2.0, %2.3) { 0 1n } e0.3   <int$->
  lgl$#-          %2.5  = IsType                   %2.4 isA int$-
  void                    Branch                   %2.5 -> BB17 (if true) | BB18 (if false)
BB16   <- [0]
  void                    Nop                !     
  goto BB10
BB17   <- [2]
  int$-           %17.0 = CastType           d     dn %2.4
  void                    StVar              lW    pos, %17.0, e0.3
  val?^ | miss    %17.2 = LdVar              eR    inherits, e0.3
  lgl$#-          %17.3 = Identical                %17.2, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %17.3 -> BB19 (if true) | BB20 (if false)
BB18   <- [2]
  fs              %18.0 = FrameState         R     0x55d0003c96c0+63: [%2.4], env=e0.3
  void                    Deopt              !v    %18.0, Typecheck@0x55d000361b60[Type#3], %2.4   !
BB10   <- [16, 9]
  val?^ | miss    %10.0 = LdVar              eR    envir, e0.3
  val?            %10.1 = Force!<lazy>       !v    %10.0, e0.3   <env+>
  val?^ | miss    %10.2 = LdVar              eR    all.names, e0.3
  val?            %10.3 = Force!<lazy>       !v    %10.2, e0.3   <lgl$->
  val?^ | miss    %10.4 = LdVar              eR    sorted, e0.3
  val?            %10.5 = Force!<lazy>       !v    %10.4, e0.3   <lgl$->
  val?            %10.6 = CallBuiltin        !v    ls(%10.1, %10.3, %10.5) e0.3   <str->
  void                    StVar              lW    all.names, %10.6, e0.3
  lgl$-           %10.8 = Missing            eR    pattern, e0.3
  lgl$-           %10.9 = Not                d     %10.8, elided
  lgl$#-          %10.10 = CheckTrueFalse     e     %10.9
  void                    Branch                   %10.10 -> BB12 (if true) | BB11 (if false)
BB19   <- [17]
  val+            %19.0 = CallSafeBuiltin    wed   inherits(%17.0, "error", false)    <lgl$->
  lgl$#-          %19.1 = IsType                   %19.0 isA lgl$-
  void                    Branch                   %19.1 -> BB21 (if true) | BB22 (if false)
BB20   <- [17]
  fs              %20.0 = FrameState         R     0x55d0003c96c0+77: [], env=e0.3
  void                    Deopt              !v    %20.0, CallTarget@0x55d000361b60[Call#2], %17.2   !
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    length, e0.3
  lgl$#-          %12.1 = Identical                <blt length>, %12.0   <@?>
  void                    Branch                   %12.1 -> BB14 (if true) | BB13 (if false)
BB11   <- [10]
  val             %11.0 = ChkMissing         e     %10.6
  void                    Visible            v     
  void                    Return             l     %10.6
BB21   <- [19]
  lgl$-           %21.0 = CastType           d     dn %19.0
  lgl$#-          %21.1 = CheckTrueFalse     e     %21.0
  void                    Branch                   %21.1 -> BB15 (if true) | BB9 (if false)
BB22   <- [19]
  prom-           %22.0 = MkArg                    unboundValue, FUN[0x55d000802670]_p7 (!refl), e0.3
  val?^           %22.1 = CastType                 up %22.0
  fs              %22.2 = FrameState         R     0x55d0003c96c0+114: [], env=e0.3
  env             e22.3 = (MkEnv)            l     which(miss)=false, what="error", x=%22.1, parent=R_BaseNamespace, context 0
  fs              %22.4 = FrameState         R     0x55d0000889e0+55: [%19.0], env=e22.3, next=%22.2
  void                    Deopt              !v    %22.4, Typecheck@0x55d000361b60[Type#5], %19.0   !
BB14   <- [12]
  (cls|spec|blt)  %14.0 = LdFun              !v    grep, e0.3
  fs              %14.1 = FrameState         R     0x55d0003c96c0+560: [<blt length>, %14.0], env=e0.3
  void                    Deopt              !v    %14.1, DeadCall@0x55d000361b60[Call#11], %14.0   !
BB13   <- [12]
  (cls|spec|blt)  %13.0 = LdFun              !v    length, e0.3
  fs              %13.1 = FrameState         R     0x55d0003c96c0+523: [%13.0], env=e0.3
  void                    Deopt              !v    %13.1, DeadCall@0x55d000361b60[Call#9], %13.0   !
BB15   <- [21]
  (cls|spec|blt)  %15.0 = LdFun              !v    substitute, e0.3
  fs              %15.1 = FrameState         R     0x55d0003c96c0+135: [%15.0], env=e0.3
  void                    Deopt              !v    %15.1, DeadCall@0x55d000361b60[Call#3], %15.0   !
BB9   <- [21]
  void                    Nop                !     
  goto BB10
Prom 0:
BB0
  void                    Visible            v     
  void                    Return             l     -1L
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.environment, <0x55cffe0f1b70>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55d000802670]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    FUN@Prom(6)0, e0.0
  void                    Return             l     %0.1
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3

│ FUN[0x55d000802670]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
