
┌──────────────────────────────────────────────────────────────────────────────┐
│ sub[0x55d0000de200]                                                          │
│ Context: CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager3,Eager4,Eager5,NonRefl0,NonRefl1,NonRefl3,NonRefl4,NonRefl5,!Obj0,!Obj1,!Obj5 miss: 1│
│ Properties:  ForceOrd: 2                                                     │
├────── Final PIR Version
sub[0x55d0000de200]
BB0
  val?~+          %0.0  = LdArg                    5
  val?~ | miss    %0.1  = LdArg                    4
  val?~ | miss    %0.2  = LdArg                    3
  val?^ | miss    %0.3  = LdArg                    2
  val?~+          %0.4  = LdArg                    1
  val?~+          %0.5  = LdArg                    0
  lgl$#-          %0.6  = Identical                %0.2, missingArg
  lgl$#-          %0.7  = Identical                %0.1, missingArg
  env             e0.8  = MkEnv              l     pattern=%0.5, replacement=%0.4, x=%0.3, ignore.case=%0.2, perl=%0.1, fixed=%0.0, useBytes(miss)=missingArg, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.6 -> BB2 (if true) | BB32 (if false)
BB2   <- [0]
  void                    StArg              lW    ignore.case, false, e0.8
  goto BB3
BB32   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [32, 2]
  void                    Branch                   %0.7 -> BB31 (if true) | BB4 (if false)
BB31   <- [3]
  void                    StArg              lW    perl, false, e0.8
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [4, 31]
  void                    StArg              lW    useBytes, false, e0.8
  val?^           %5.1  = ChkMissing         e     %0.3
  val?            %5.2  = Force!<lazy>       !v    %5.1, e0.8   <str->
  lgl$#-          %5.3  = IsType                   %5.2 isA val?-
  void                    Branch                   %5.3 -> BB33 (if true) | BB34 (if false)
BB33   <- [5]
  val?-           %33.0 = CastType           d     dn %5.2   <str->
  val+            %33.1 = CallSafeBuiltin    wed   inherits(%33.0, "factor", false)    <lgl$->
  lgl$#-          %33.2 = IsType                   %33.1 isA lgl$-
  void                    Branch                   %33.2 -> BB35 (if true) | BB36 (if false)
BB34   <- [5]
  prom-           %34.0 = MkArg                    unboundValue, sub[0x55d0000de200]_p4, e0.8
  val?^           %34.1 = CastType                 up %34.0
  env             e34.2 = (MkEnv)            l     x=%34.1, parent=R_BaseNamespace, context 0
  env             e34.3 = MaterializeEnv           , e34.2   <@?>
  fs              %34.4 = FrameState         R     0x55d0003ae3e0+32: [], env=e0.8
  fs              %34.5 = FrameState         R     0x55d00008be10+37: [], env=e34.3, next=%34.4
  prom-           %34.6 = MkArg                    unboundValue, sub[0x55d0000de200]_p5, e34.3
  val?^           %34.7 = CastType                 up %34.6
  env             e34.8 = (MkEnv)            l     which(miss)=false, what="factor", x=%34.7, parent=R_BaseNamespace, context -1
  fs              %34.9 = FrameState         R     0x55d0000889e0+9: [], env=e34.8, next=%34.5
  fs              %34.10 = FrameState         R     0x55d00008d670+5(pr): [], env=e34.3, next=%34.9
  fs              %34.11 = FrameState         R     0x55d0003aaf20+5(pr): [%5.2], env=e0.8, next=%34.10
  void                    Deopt              !v    %34.11, Typecheck@0x55d0002b7260[Type#0], %5.2   !
BB35   <- [33]
  lgl$-           %35.0 = CastType           d     dn %33.1
  lgl$-           %35.1 = AsLogical                %35.0
  lgl$#-          %35.2 = Identical                %35.1, false
  void                    Branch                   %35.2 -> BB13 (if true) | BB10 (if false)
BB36   <- [33]
  void                    Nop                !     
  val+            %36.1 = %33.1
  dr              %36.2 = Typecheck@0x55cfff5d5428[Type#1]
  goto BB8
BB13   <- [35]
  lgl$#-          %13.0 = CheckTrueFalse     e     %35.1
  void                    Branch                   %13.0 -> BB30 (if true) | BB14 (if false)
BB10   <- [35]
  val?^ | miss    %10.0 = LdVar              eR    length, e0.8
  lgl$#-          %10.1 = Identical                <blt length>, %10.0   <@?>
  void                    Branch                   %10.1 -> BB12 (if true) | BB11 (if false)
BB8   <- [36, 38]
  val?^ | miss    %8.0  = Phi                      %36.1:BB36, %38.1:BB38
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %36.2:BB36, %38.2:BB38
  dr              %8.3  = %8.2
  prom-           %8.4  = MkArg                    %33.0, sub[0x55d0000de200]_p4 (!refl), e0.8
  val?~           %8.5  = CastType                 up %8.4
  env             e8.6  = (MkEnv)            l     x=%8.5, parent=R_BaseNamespace, context 0
  env             e8.7  = MaterializeEnv           , e8.6   <@?>
  fs              %8.8  = FrameState         R     0x55d0003ae3e0+32: [], env=e0.8
  fs              %8.9  = FrameState         R     0x55d00008be10+37: [], env=e8.7, next=%8.8
  prom-           %8.10 = MkArg                    %33.0, sub[0x55d0000de200]_p5 (!refl), e8.7
  val?~           %8.11 = CastType                 up %8.10
  env             e8.12 = (MkEnv)            l     which(miss)=false, what="factor", x=%8.11, parent=R_BaseNamespace, context -1
  fs              %8.13 = FrameState         R     0x55d0000889e0+55: [%33.1], env=e8.12, next=%8.9
  void                    Deopt              !v    %8.13, %8.3, %8.1   !
BB30   <- [13]
  (cls|spec|blt)  %30.0 = LdFun              !v    sub, e0.8
  fs              %30.1 = FrameState         R     0x55d0003ae3e0+771: [%30.0], env=e0.8
  void                    Deopt              !v    %30.1, DeadCall@0x55d0002b7260[Call#9], %30.0   !
BB14   <- [13]
  val?^ | miss    %14.0 = LdVar              eR    is.character, e0.8
  lgl$#-          %14.1 = Identical                <blt is.character>, %14.0   <true>
  void                    Branch                   %14.1 -> BB37 (if true) | BB38 (if false)
BB12   <- [10]
  (cls|spec|blt)  %12.0 = LdFun              !v    levels, e0.8
  fs              %12.1 = FrameState         R     0x55d0003ae3e0+109: [%35.1, <blt length>, %12.0], env=e0.8
  void                    Deopt              !v    %12.1, DeadCall@0x55d0002b7260[Call#3], %12.0   !
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    length, e0.8
  fs              %11.1 = FrameState         R     0x55d0003ae3e0+72: [%35.1, %11.0], env=e0.8
  void                    Deopt              !v    %11.1, DeadCall@0x55d0002b7260[Call#1], %11.0   !
BB37   <- [14]
  val?^ | miss    %37.0 = LdVar              eR    x, e0.8
  val?            %37.1 = Force!<wrapped>    !v    %37.0, e0.8   <str->
  lgl$#-          %37.2 = CallSafeBuiltin    wed   is.character(%37.1)    <lgl$->
  void                    Branch                   %37.2 -> BB29 (if true) | BB15 (if false)
BB38   <- [14]
  void                    Nop                !     
  lgl$#-          %38.1 = %14.1
  dr              %38.2 = DeadBranchReached@0x55d0002b7260[Test#2]
  goto BB8
BB29   <- [37]
  void                    Nop                !     
  goto BB20
BB15   <- [37]
  val?^ | miss    %15.0 = LdVar              eR    as.character, e0.8
  lgl$#-          %15.1 = Identical                <blt as.character>, %15.0   <@?>
  void                    Branch                   %15.1 -> BB17 (if true) | BB16 (if false)
BB20   <- [29, 41]
  val?^ | miss    %20.0 = LdVar              eR    as.character, e0.8
  lgl$#-          %20.1 = Identical                <blt as.character>, %20.0   <true>
  void                    Branch                   %20.1 -> BB39 (if true) | BB40 (if false)
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    x, e0.8
  val?            %17.1 = Force!             !v    %17.0, e0.8   <val?_>
  lgl$#-          %17.2 = IsType                   %17.1 isA val?+
  void                    Branch                   %17.2 -> BB41 (if true) | BB42 (if false)
BB16   <- [15]
  (cls|spec|blt)  %16.0 = LdFun              !v    as.character, e0.8
  fs              %16.1 = FrameState         R     0x55d0003ae3e0+409: [%16.0], env=e0.8
  void                    Deopt              !v    %16.1, DeadCall@0x55d0002b7260[Call#6], %16.0   !
BB39   <- [20]
  val?^ | miss    %39.0 = LdVar              eR    pattern, e0.8
  val?            %39.1 = Force!<value>      !v    %39.0, e0.8   <str$->
  lgl$#-          %39.2 = IsType                   %39.1 isA val?-
  void                    Branch                   %39.2 -> BB43 (if true) | BB44 (if false)
BB40   <- [20]
  fs              %40.0 = FrameState         R     0x55d0003ae3e0+486: [], env=e0.8
  void                    Deopt              !v    %40.0, DeadBranchReached@0x55d0002b7260[Test#4], %20.1   !
BB41   <- [17]
  val?+           %41.0 = CastType           d     dn %17.1   <val?_>
  val+            %41.1 = CallSafeBuiltin    wed   as.character(%41.0)    <val?_>
  void                    StVar              lW    x, %41.1, e0.8
  goto BB20
BB42   <- [17]
  fs              %42.0 = FrameState         R     0x55d0003ae3e0+450: [<blt as.character>, %17.1], env=e0.8
  void                    Deopt              !v    %42.0, Typecheck@0x55d0002b7260[Type#15], %17.1   !
BB43   <- [39]
  val?-           %43.0 = CastType           d     dn %39.1   <str$->
  val+            %43.1 = CallSafeBuiltin    wed   as.character(%43.0)    <str$->
  val?^ | miss    %43.2 = LdVar              eR    as.character, e0.8
  lgl$#-          %43.3 = Identical                <blt as.character>, %43.2   <true>
  void                    Branch                   %43.3 -> BB45 (if true) | BB46 (if false)
BB44   <- [39]
  fs              %44.0 = FrameState         R     0x55d0003ae3e0+555: [<blt as.character>, %39.1], env=e0.8
  void                    Deopt              !v    %44.0, Typecheck@0x55d0002b7260[Type#18], %39.1   !
BB45   <- [43]
  val?^ | miss    %45.0 = LdVar              eR    replacement, e0.8
  val?            %45.1 = Force!<value>      !v    %45.0, e0.8   <str$->
  lgl$#-          %45.2 = IsType                   %45.1 isA val?-
  void                    Branch                   %45.2 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x55d0003ae3e0+577: [%43.1], env=e0.8
  void                    Deopt              !v    %46.0, DeadBranchReached@0x55d0002b7260[Test#5], %43.3   !
BB47   <- [45]
  val?-           %47.0 = CastType           d     dn %45.1   <str$->
  val+            %47.1 = CallSafeBuiltin    wed   as.character(%47.0)    <str$->
  val?^ | miss    %47.2 = LdVar              eR    x, e0.8
  val?            %47.3 = Force!<wrapped>    !v    %47.2, e0.8   <str->
  val?^ | miss    %47.4 = LdVar              eR    ignore.case, e0.8
  val?            %47.5 = Force!<lazy>       !v    %47.4, e0.8   <lgl$->
  val?^ | miss    %47.6 = LdVar              eR    perl, e0.8
  val?            %47.7 = Force!<lazy>       !v    %47.6, e0.8   <lgl$->
  val?^ | miss    %47.8 = LdVar              eR    fixed, e0.8
  val?            %47.9 = Force!<value>      !v    %47.8, e0.8   <lgl$->
  val?^ | miss    %47.10 = LdVar              eR    useBytes, e0.8
  val?            %47.11 = Force!<lazy>       !v    %47.10, e0.8   <lgl$->
  val?            %47.12 = CallBuiltin        !     sub(%43.1, %47.1, %47.3, %47.5, %47.7, %47.9, %47.11) e0.8
  void                    Return             l     %47.12
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x55d0003ae3e0+651: [%43.1, <blt as.character>, %45.1], env=e0.8
  void                    Deopt              !v    %48.0, Typecheck@0x55d0002b7260[Type#21], %45.1   !
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|str)+>
  void                    Return             l     %0.3

│ sub[0x55d0000de200]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
