
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55d0001c10d0]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── Final PIR Version
FUN[0x55d0001c10d0]
BB0
  val?~+          %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.numeric, ?
  lgl$#-          %0.2  = Identical                <blt is.numeric>, %0.1   <true>
  val+            %0.3  = Force<wrapped>           %0.0,    <lgl->
  void                    Branch                   %0.2 -> BB27 (if true) | BB28 (if false)
BB27   <- [0]
  lgl$#-          %27.0 = CallSafeBuiltin    wed   is.numeric(%0.3)    <lgl$->
  env             e27.1 = MkEnv              l     x=%0.0, parent=?, context 1
  void                    Branch                   %27.0 -> BB25 (if true) | BB5 (if false)
BB28   <- [0]
  env             e28.0 = (MkEnv)            l     x=%0.0, parent=?, context 1
  fs              %28.1 = FrameState         R     0x55d0003a4a20+17: [<blt is.numeric>, %0.2], env=e28.0
  void                    Deopt              !v    %28.1, DeadBranchReached@0x55cfff5649f8[Test#0], %0.2
BB25   <- [27]
  void                    Nop                !     
  lgl$#-          %25.1 = %27.0
  goto BB10
BB5   <- [27]
  val?^ | miss    %5.0  = LdVar              eR    is.factor, ?
  lgl$#-          %5.1  = Identical                %5.0, function(x) <(rir::DispatchTable*)0x55d00008fe|...
  void                    Branch                   %5.1 -> BB29 (if true) | BB30 (if false)
BB10   <- [25, 37]
  lgl$-           %10.0 = Phi                      %37.3:BB37, %25.1:BB25
  lgl$-           %10.1 = %10.0
  lgl$-           %10.2 = AsLogical                %10.1
  lgl$#-          %10.3 = Identical                %10.2, true
  void                    Branch                   %10.3 -> BB24 (if true) | BB13 (if false)
BB29   <- [5]
  prom-           %29.0 = MkArg                    unboundValue, FUN[0x55d0001c10d0]_p0 (!refl), e27.1
  ct              %29.1 = PushContext        lCL   %29.0, is.factor(x), function(x) <(rir::DispatchTable*)0x55d00008fe|..., e27.1
  val?^           %29.2 = CastType                 up %29.0
  env             e29.3 = MkEnv              l     x=%29.2, parent=R_BaseNamespace, context 1
  prom-           %29.4 = MkArg                    unboundValue, FUN[0x55d0001c10d0]_p1, e29.3
  ct              %29.5 = PushContext        lCL   %29.4, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e29.3
  val?^           %29.6 = CastType                 up %29.4
  env             e29.7 = MkEnv              l     x=%29.6, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %29.8 = Force!<lazy>       !vr   %29.6,    <val?>
  val?            %29.9 = CallBuiltin        !v    inherits(%29.8, "factor", false) e29.7
  val?            %29.10 = PopContext         C     %29.9, %29.5   <lgl$->
  lgl$#-          %29.11 = IsType                   %29.10 isA lgl$-
  void                    Branch                   %29.11 -> BB33 (if true) | BB34 (if false)
BB30   <- [5]
  env             e30.0 = (MkEnv)            l     x=%0.0, parent=?, context 1
  fs              %30.1 = FrameState         R     0x55d0003a4a20+91: [%27.0], env=e30.0
  void                    Deopt              !v    %30.1, CallTarget@0x55cfff5649f8[Call#1], %5.0
BB24   <- [10]
  void                    Nop                !     
  lgl$-           %24.1 = %10.2
  goto BB16
BB13   <- [10]
  val?^ | miss    %13.0 = LdVar              eR    is.logical, e27.1
  lgl$#-          %13.1 = Identical                <blt is.logical>, %13.0   <true>
  void                    Branch                   %13.1 -> BB31 (if true) | BB32 (if false)
BB33   <- [29]
  lgl$-           %33.0 = CastType           d     dn %29.10
  val?            %33.1 = PopContext         C     %33.0, %29.1   <lgl$->
  lgl$#-          %33.2 = IsType                   %33.1 isA lgl$-
  void                    Branch                   %33.2 -> BB37 (if true) | BB38 (if false)
BB34   <- [29]
  fs              %34.0 = FrameState         R     0x55d0003a4a20+135: [%27.0], env=e27.1
  fs              %34.1 = FrameState         R     0x55d00008be10+37: [%29.10], env=e29.3, next=%34.0
  void                    Deopt              !v    %34.1, Typecheck@0x55cfff5d5428[Type#1], %29.10   !
BB16   <- [24, 35]
  lgl$-           %16.0 = Phi                      %35.3:BB35, %24.1:BB24
  lgl$-           %16.1 = %16.0
  lgl$-           %16.2 = AsLogical                %16.1
  lgl$#-          %16.3 = Identical                %16.2, false
  void                    Visible            v     
  void                    Branch                   %16.3 -> BB23 (if true) | BB19 (if false)
BB31   <- [13]
  val?^ | miss    %31.0 = LdVar              eR    x, e27.1
  val?            %31.1 = Force!<wrapped>    !v    %31.0, e27.1   <lgl->
  val+            %31.2 = CallSafeBuiltin    wed   is.logical(%31.1)    <lgl$->
  lgl$#-          %31.3 = IsType                   %31.2 isA lgl$-
  void                    Branch                   %31.3 -> BB35 (if true) | BB36 (if false)
BB32   <- [13]
  fs              %32.0 = FrameState         R     0x55d0003a4a20+142: [%10.1], env=e27.1
  void                    Deopt              !v    %32.0, DeadBranchReached@0x55cfff5649f8[Test#1], %13.1   !
BB37   <- [33]
  lgl$-           %37.0 = CastType           d     dn %33.1
  lgl$-           %37.1 = AsLogical                %37.0
  lgl$-           %37.2 = LOr                      %27.0, %37.1
  lgl$-           %37.3 = %37.2
  goto BB10
BB38   <- [33]
  fs              %38.0 = FrameState         R     0x55d0003a4a20+135: [%27.0, %33.1], env=e27.1
  void                    Deopt              !v    %38.0, Typecheck@0x55cfff5649f8[Type#4], %33.1   !
BB23   <- [16]
  void                    Nop                !     
  lgl$-           %23.1 = %16.2
  goto BB22
BB19   <- [16]
  val?^ | miss    %19.0 = LdVar              eR    is.integer, e27.1
  lgl$#-          %19.1 = Identical                <blt is.integer>, %19.0   <true>
  void                    Branch                   %19.1 -> BB39 (if true) | BB40 (if false)
BB35   <- [31]
  lgl$-           %35.0 = CastType           d     dn %31.2
  lgl$-           %35.1 = AsLogical                %35.0
  lgl$-           %35.2 = LOr                      %10.2, %35.1
  lgl$-           %35.3 = %35.2
  goto BB16
BB36   <- [31]
  fs              %36.0 = FrameState         R     0x55d0003a4a20+240: [%10.2, %31.2], env=e27.1
  void                    Deopt              !v    %36.0, Typecheck@0x55cfff5649f8[Type#7], %31.2   !
BB22   <- [23, 45]
  lgl$-           %22.0 = Phi                      %45.1:BB45, %23.1:BB23
  lgl$-           %22.1 = %22.0
  void                    Return             l     %22.1
BB39   <- [19]
  val?^ | miss    %39.0 = LdVar              eR    length, e27.1
  lgl$#-          %39.1 = Identical                <blt length>, %39.0   <true>
  void                    Branch                   %39.1 -> BB41 (if true) | BB42 (if false)
BB40   <- [19]
  void                    Nop                !     
  lgl$#-          %40.1 = %19.1
  dr              %40.2 = DeadBranchReached@0x55cfff5649f8[Test#2]
  goto BB17
BB41   <- [39]
  val?^ | miss    %41.0 = LdVar              eR    x, e27.1
  lgl$#-          %41.1 = IsType                   %41.0 isA lgl~-
  void                    Branch                   %41.1 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  void                    Nop                !     
  lgl$#-          %42.1 = %39.1
  dr              %42.2 = DeadBranchReached@0x55cfff5649f8[Test#3]
  goto BB17
BB17   <- [40, 42, 44]
  val?^ | miss    %17.0 = Phi                      %40.1:BB40, %42.1:BB42, %44.1:BB44
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %40.2:BB40, %42.2:BB42, %44.2:BB44
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x55d0003a4a20+247: [%16.1], env=e27.1
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB43   <- [41]
  lgl~-           %43.0 = CastType           d     dn %41.0
  lgl-            %43.1 = Force!<wrapped>          %43.0,    <lgl->
  (int|real)$-    %43.2 = CallSafeBuiltin    wed   length(%43.1)    <int$->
  lgl$#-          %43.3 = IsType                   %43.2 isA int$-
  void                    Branch                   %43.3 -> BB45 (if true) | BB46 (if false)
BB44   <- [41]
  void                    Nop                !     
  val?^ | miss    %44.1 = %41.0
  dr              %44.2 = Typecheck@0x55cfff5649f8[Type#11]
  goto BB17
BB45   <- [43]
  lgl$-           %45.0 = AsLogical                %16.2
  lgl$-           %45.1 = %45.0
  goto BB22
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x55d0003a4a20+406: [%16.2, <blt is.integer>, %43.2], env=e27.1
  void                    Deopt              !v    %46.0, Typecheck@0x55cfff5649f8[Type#12], %43.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|str)+>
  void                    Return             l     %0.3

│ FUN[0x55d0001c10d0]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
