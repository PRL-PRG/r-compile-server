
┌──────────────────────────────────────────────────────────────────────────────┐
│ .guessTokenFromLine[0x55d000cd52e0]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 3                              │
│ Properties:  Eager                                                           │
├────── Final PIR Version
.guessTokenFromLine[0x55d000cd52e0]
BB0
  env             e0.0  = MkEnv              l     linebuffer(miss)=missingArg, end(miss)=missingArg, update(miss)=missingArg, parent=<env 0x55cfff1f98c8>, context 1
  prom-           %0.1  = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p0, e0.0
  val?^ | miss    %0.2  = CastType                 up %0.1
  void                    StArg              lW    linebuffer, %0.2, e0.0
  prom-           %0.4  = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p1, e0.0
  val?^ | miss    %0.5  = CastType                 up %0.4
  void                    StArg              lW    end, %0.5, e0.0
  void                    StArg              lW    update, true, e0.0
  val?^ | miss    %0.8  = LdVar              eR    substr, <env 0x55cfff1f98c8>
  lgl$#-          %0.9  = Identical                %0.8, function(x, start, stop) <(rir::DispatchTable*|...
  void                    Branch                   %0.9 -> BB127 (if true) | BB128 (if false)
BB127   <- [0]
  prom-           %127.0 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p3, e0.0
  prom-           %127.1 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p4, e0.0
  ct              %127.2 = PushContext        lCL   %127.0, 1L, %127.1, substr(linebuffer, 1L, end), function(x, start, stop) <(rir::DispatchTable*|..., e0.0
  val?^           %127.3 = CastType                 up %127.1
  val?^           %127.4 = CastType                 up %127.0
  env             e127.5 = MkEnv              l     x=%127.4, start=1L, stop=%127.3, parent=R_BaseNamespace, context 1
  val?            %127.6 = Force!<lazy>       !vr   %127.4,    <str->
  lgl$#-          %127.7 = CallSafeBuiltin    wed   is.character(%127.6)    <lgl$->
  void                    Branch                   %127.7 -> BB125 (if true) | BB3 (if false)
BB128   <- [0]
  fs              %128.0 = FrameState         R     0x55d00007d1f0+0: [], env=e0.0
  void                    Deopt              !v    %128.0, CallTarget@0x55cfff218da0[Call#0], %0.8
BB125   <- [127]
  void                    Nop                !     
  val?^           %125.1 = %127.4
  goto BB6
BB3   <- [127]
  lgl$#-          %3.0  = IsType                   %127.6 isA val?+
  void                    Branch                   %3.0 -> BB129 (if true) | BB130 (if false)
BB6   <- [125, 129]
  val?^           %6.0  = Phi                      %125.1:BB125, %129.3:BB129
  val?^           %6.1  = %6.0
  val?            %6.2  = Force!<wrapped>    !v    %6.1, e127.5   <str->
  val?^ | miss    %6.3  = LdVar              eR    as.integer, e127.5
  lgl$#-          %6.4  = Identical                <blt as.integer>, %6.3   <true>
  void                    Branch                   %6.4 -> BB131 (if true) | BB132 (if false)
BB129   <- [3]
  val?+           %129.0 = CastType           d     dn %127.6   <val?_>
  val+            %129.1 = CallSafeBuiltin    wed   as.character(%129.0)    <val?_>
  void                    StVar              lW    x, %129.1, e127.5
  val+            %129.3 = %129.1
  goto BB6
BB130   <- [3]
  fs              %130.0 = FrameState         R     0x55d00007d1f0+42: [], env=e0.0
  fs              %130.1 = FrameState         R     0x55d00007eb80+177: [<blt as.character>, %127.6], env=e127.5, next=%130.0
  void                    Deopt              !v    %130.1, Typecheck@0x55cffeb28fe0[Type#4], %127.6   !
BB131   <- [6]
  val?^ | miss    %131.0 = LdVar              eR    start, e127.5
  val?            %131.1 = Force!<lazy>       !v    %131.0, e127.5   <int$->
  lgl$#-          %131.2 = IsType                   %131.1 isA int$-
  void                    Branch                   %131.2 -> BB133 (if true) | BB134 (if false)
BB132   <- [6]
  fs              %132.0 = FrameState         R     0x55d00007d1f0+42: [], env=e0.0
  fs              %132.1 = FrameState         R     0x55d00007eb80+222: [%6.2], env=e127.5, next=%132.0
  void                    Deopt              !v    %132.1, DeadBranchReached@0x55cffeb28fe0[Test#2], %6.4   !
BB133   <- [131]
  int$-           %133.0 = CastType           d     dn %131.1
  val?^ | miss    %133.1 = LdVar              eR    as.integer, e127.5
  lgl$#-          %133.2 = Identical                <blt as.integer>, %133.1   <true>
  void                    Branch                   %133.2 -> BB135 (if true) | BB136 (if false)
BB134   <- [131]
  void                    Nop                !     
  val?            %134.1 = %131.1
  dr              %134.2 = Typecheck@0x55cffeb28fe0[Type#8]
  goto BB9
BB135   <- [133]
  val?^ | miss    %135.0 = LdVar              eR    stop, e127.5
  val?            %135.1 = Force!<lazy>       !v    %135.0, e127.5   <int$->
  lgl$#-          %135.2 = IsType                   %135.1 isA int$-
  void                    Branch                   %135.2 -> BB137 (if true) | BB138 (if false)
BB136   <- [133]
  void                    Nop                !     
  lgl$#-          %136.1 = %133.2
  dr              %136.2 = DeadBranchReached@0x55cffeb28fe0[Test#3]
  goto BB9
BB9   <- [134, 136]
  val?^ | miss    %9.0  = Phi                      %134.1:BB134, %136.1:BB136
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %134.2:BB134, %136.2:BB136
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55d00007d1f0+42: [], env=e0.0
  fs              %9.5  = FrameState         R     0x55d00007eb80+296: [%6.2, <blt as.integer>, %131.1], env=e127.5, next=%9.4
  void                    Deopt              !v    %9.5, %9.3, %9.1   !
BB137   <- [135]
  int$-           %137.0 = CastType           d     dn %135.1
  val?            %137.1 = CallBuiltin        !v    substr(%6.2, %133.0, %137.0) e127.5
  val?            %137.2 = PopContext         C     %137.1, %127.2   <str$->
  void                    StVar              lW    linebuffer, %137.2, e0.0
  val?^ | miss    %137.4 = LdVar              eR    head.default, e0.0
  lgl$#-          %137.5 = Identical                %137.4, function(x, n=6L, ...) <(rir::DispatchTable*)0|...
  void                    Branch                   %137.5 -> BB139 (if true) | BB140 (if false)
BB138   <- [135]
  fs              %138.0 = FrameState         R     0x55d00007d1f0+42: [], env=e0.0
  fs              %138.1 = FrameState         R     0x55d00007eb80+392: [%6.2, %133.0, <blt as.integer>, %135.1], env=e127.5, next=%138.0
  void                    Deopt              !v    %138.1, Typecheck@0x55cffeb28fe0[Type#11], %135.1   !
BB139   <- [137]
  prom-           %139.0 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p5, e0.0
  prom-           %139.1 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p8, e0.0
  ct              %139.2 = PushContext        lCL   %139.0, %139.1, head.default(unlist(strsplit(linebuffer, "")),|..., function(x, n=6L, ...) <(rir::DispatchTable*)0|..., e0.0
  val?^           %139.3 = CastType                 up %139.1
  val?^           %139.4 = CastType                 up %139.0
  val?^ | miss    %139.5 = LdVar              eR    checkHT, <env 0x55cfff1f98c8>
  lgl$#-          %139.6 = Identical                %139.5, function(n, d) <(rir::DispatchTable*)0x55d0000|...
  void                    Branch                   %139.6 -> BB141 (if true) | BB142 (if false)
BB140   <- [137]
  fs              %140.0 = FrameState         R     0x55d00007d1f0+56: [], env=e0.0
  void                    Deopt              !v    %140.0, CallTarget@0x55cfff218da0[Call#1], %137.4   !
BB141   <- [139]
  env             e141.0 = MkEnv              l     x=%139.4, n=%139.3, ...(miss)=missingArg, parent=<env 0x55cfff1f98c8>, context 1
  prom-           %141.1 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p16, e141.0
  prom-           %141.2 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p17, e141.0
  ct              %141.3 = PushContext        lCL   %141.1, %141.2, checkHT(n, <-(dx, dim(x))), function(n, d) <(rir::DispatchTable*)0x55d0000|..., e141.0
  val?^           %141.4 = CastType                 up %141.2
  val?^           %141.5 = CastType                 up %141.1
  val?^ | miss    %141.6 = LdVar              eR    length, <env 0x55cfff1f98c8>
  lgl$#-          %141.7 = Identical                <blt length>, %141.6   <true>
  void                    Branch                   %141.7 -> BB143 (if true) | BB144 (if false)
BB142   <- [139]
  fs              %142.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  env             e142.1 = (MkEnv)            l     x=%139.4, n=%139.3, ...(miss)=missingArg, parent=<env 0x55cfff1f98c8>, context 1
  fs              %142.2 = FrameState         R     0x55d000081dd0+0: [], env=e142.1, next=%142.0
  void                    Deopt              !v    %142.2, CallTarget@0x55cffe6bc730[Call#0], %139.5   !
BB143   <- [141]
  env             e143.0 = (MkEnv)            l     n=%141.5, d=%141.4, len=unboundValue, parent=<env 0x55cfff1f98c8>, context 1
  val?            %143.1 = Force!<lazy>       !vL   %141.5, e143.0   <(int|real)$->
  lgl$#-          %143.2 = IsType                   %143.1 isA val?-
  lgl$#-          %143.3 = IsEnvStub          R     , e143.0
  void                    Branch                   %143.3 -> BB145 (if true) | BB146 (if false)
BB144   <- [141]
  fs              %144.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %144.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%144.0
  env             e144.2 = (MkEnv)            l     n=%141.5, d=%141.4, parent=<env 0x55cfff1f98c8>, context 1
  fs              %144.3 = FrameState         R     0x55d000082350+17: [<blt length>, %141.7], env=e144.2, next=%144.1
  void                    Deopt              !v    %144.3, DeadBranchReached@0x55cfff5fc738[Test#0], %141.7   !
BB145   <- [143]
  void                    Branch                   %143.2 -> BB147 (if true) | BB148 (if false)
BB146   <- [143]
  void                    Nop                !     
  env             e146.1 = e143.0
  dr              %146.2 = EnvStubMaterialized@0x55cfff5fc738[Call#unknown]
  goto BB19
BB147   <- [145]
  val?-           %147.0 = CastType           d     dn %143.1   <(int|real)$->
  (int|real)$-    %147.1 = CallSafeBuiltin    wed   length(%147.0)    <int$->
  lgl$#-          %147.2 = IsType                   %147.1 isA int$-
  void                    Branch                   %147.2 -> BB149 (if true) | BB150 (if false)
BB148   <- [145]
  void                    Nop                !     
  val?            %148.1 = %143.1
  dr              %148.2 = Typecheck@0x55cfff5fc738[Type#1]
  goto BB19
BB19   <- [146, 148]
  val?^ | miss    %19.0 = Phi                      e146.1:BB146, %148.1:BB148
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %146.2:BB146, %148.2:BB148
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %19.5 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%19.4
  fs              %19.6 = FrameState         R     0x55d000082350+69: [<blt length>, %143.1], env=e143.0, next=%19.5
  void                    Deopt              !v    %19.6, %19.3, %19.1   !
BB149   <- [147]
  int$-           %149.0 = CastType           d     dn %147.1
  void                    StVar              lWd   len, %149.0, e143.0
  lgl$-           %149.2 = Eq                 d     %149.0, 0, elided   <lgl$->
  lgl$-           %149.3 = AsLogical                %149.2
  lgl$#-          %149.4 = Identical                %149.3, true
  void                    Branch                   %149.4 -> BB124 (if true) | BB25 (if false)
BB150   <- [147]
  fs              %150.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %150.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%150.0
  fs              %150.2 = FrameState         R     0x55d000082350+91: [%147.1], env=e143.0, next=%150.1
  void                    Deopt              !v    %150.2, Typecheck@0x55cfff5fc738[Type#2], %147.1   !
BB124   <- [149]
  void                    Nop                !     
  lgl$-           %124.1 = %149.3
  goto BB30
BB25   <- [149]
  val?^ | miss    %25.0 = LdVar              eRd   all, <env 0x55cfff1f98c8>
  lgl$#-          %25.1 = Identical                <blt all>, %25.0   <true>
  void                    Branch                   %25.1 -> BB153 (if true) | BB154 (if false)
BB30   <- [124, 167]
  lgl$-           %30.0 = Phi                      %167.2:BB167, %124.1:BB124
  lgl$-           %30.1 = %30.0
  lgl$#-          %30.2 = CheckTrueFalse     e     %30.1
  void                    Branch                   %30.2 -> BB123 (if true) | BB31 (if false)
BB153   <- [25]
  val?^ | miss    %153.0 = LdVar              eRd   is.na, <env 0x55cfff1f98c8>
  lgl$#-          %153.1 = Identical                <blt is.na>, %153.0   <true>
  void                    Branch                   %153.1 -> BB155 (if true) | BB156 (if false)
BB154   <- [25]
  void                    Nop                !     
  lgl$#-          %154.1 = %25.1
  dr              %154.2 = DeadBranchReached@0x55cfff5fc738[Test#1]
  goto BB23
BB123   <- [30]
  fs              %123.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %123.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%123.0
  env             e123.2 = MaterializeEnv           , e143.0   <@?>
  (cls|spec|blt)  %123.3 = LdFun              !v    gettext, e123.2
  fs              %123.4 = FrameState         R     0x55d000082350+722: [%123.3], env=e123.2, next=%123.1
  void                    Deopt              !v    %123.4, DeadCall@0x55cfff5fc738[Call#9], %123.3   !
BB31   <- [30]
  val?            %31.0 = Force!<lazy>       !vL   %141.4, e143.0   <nil->
  lgl$-           %31.1 = Is                       %31.0, NULL
  lgl$-           %31.2 = AsLogical                %31.1
  lgl$#-          %31.3 = Identical                %31.2, false
  lgl$#-          %31.4 = IsEnvStub          R     , e143.0
  void                    Branch                   %31.4 -> BB151 (if true) | BB152 (if false)
BB155   <- [153]
  lgl-            %155.0 = CallSafeBuiltin    wed   is.na(%147.0)    <lgl$->
  lgl$#-          %155.1 = IsType                   %155.0 isA lgl$-
  void                    Branch                   %155.1 -> BB159 (if true) | BB160 (if false)
BB156   <- [153]
  void                    Nop                !     
  lgl$#-          %156.1 = %153.1
  dr              %156.2 = DeadBranchReached@0x55cfff5fc738[Test#2]
  goto BB23
BB23   <- [154, 156]
  val?^ | miss    %23.0 = Phi                      %154.1:BB154, %156.1:BB156
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %154.2:BB154, %156.2:BB156
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %23.5 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%23.4
  fs              %23.6 = FrameState         R     0x55d000082350+105: [], env=e143.0, next=%23.5
  void                    Deopt              !v    %23.6, %23.3, %23.1   !
BB151   <- [31]
  void                    Branch                   %31.3 -> BB122 (if true) | BB34 (if false)
BB152   <- [31]
  fs              %152.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %152.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%152.0
  fs              %152.2 = FrameState         R     0x55d000082350+333: [%31.0], env=e143.0, next=%152.1
  void                    Deopt              !v    %152.2, EnvStubMaterialized@0x55cfff5fc738[Call#unknown], e143.0   !
BB159   <- [155]
  lgl$-           %159.0 = CastType           d     dn %155.0
  val?            %159.1 = CallBuiltin        !vL   all(%159.0) e143.0   <lgl$->
  lgl$#-          %159.2 = IsType                   %159.1 isA lgl$-
  void                    Branch                   %159.2 -> BB165 (if true) | BB166 (if false)
BB160   <- [155]
  fs              %160.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %160.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%160.0
  fs              %160.2 = FrameState         R     0x55d000082350+289: [%149.3, <blt all>, %155.0], env=e143.0, next=%160.1
  void                    Deopt              !v    %160.2, Typecheck@0x55cfff5fc738[Type#9], %155.0   !
BB122   <- [151]
  void                    Nop                !     
  lgl$-           %122.1 = %31.2
  goto BB35
BB34   <- [151]
  lgl$-           %34.0 = Gt                 d     %149.0, 1L, elided   <lgl$->
  lgl$-           %34.1 = AsLogical                %34.0
  lgl$-           %34.2 = LAnd                     %31.2, %34.1
  lgl$-           %34.3 = %34.2
  goto BB35
BB165   <- [159]
  lgl$-           %165.0 = CastType           d     dn %159.1
  lgl$#-          %165.1 = IsEnvStub          R     , e143.0
  void                    Branch                   %165.1 -> BB167 (if true) | BB168 (if false)
BB166   <- [159]
  void                    Nop                !     
  val?            %166.1 = %159.1
  dr              %166.2 = Typecheck@0x55cfff5fc738[Type#10]
  goto BB28
BB35   <- [122, 34]
  lgl$-           %35.0 = Phi                      %34.3:BB34, %122.1:BB122
  lgl$-           %35.1 = %35.0
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB121 (if true) | BB36 (if false)
BB167   <- [165]
  lgl$-           %167.0 = AsLogical                %165.0
  lgl$-           %167.1 = LOr                      %149.3, %167.0
  lgl$-           %167.2 = %167.1
  goto BB30
BB168   <- [165]
  void                    Nop                !     
  env             e168.1 = e143.0
  dr              %168.2 = EnvStubMaterialized@0x55cfff5fc738[Call#unknown]
  goto BB28
BB28   <- [166, 168]
  val?^ | miss    %28.0 = Phi                      %166.1:BB166, e168.1:BB168
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %166.2:BB166, %168.2:BB168
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %28.5 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%28.4
  fs              %28.6 = FrameState         R     0x55d000082350+311: [%149.3, %159.1], env=e143.0, next=%28.5
  void                    Deopt              !v    %28.6, %28.3, %28.1   !
BB121   <- [35]
  fs              %121.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %121.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%121.0
  env             e121.2 = MaterializeEnv           , e143.0   <@?>
  (cls|spec|blt)  %121.3 = LdFun              !v    gettextf, e121.2
  fs              %121.4 = FrameState         R     0x55d000082350+675: [%121.3], env=e121.2, next=%121.1
  void                    Deopt              !v    %121.4, DeadCall@0x55cfff5fc738[Call#8], %121.3   !
BB36   <- [35]
  val?            %36.0 = Force!<wrapped>    !vL   %141.4, e143.0   <nil->
  lgl$-           %36.1 = Is                       %36.0, NULL
  lgl$#-          %36.2 = IsEnvStub          R     , e143.0
  void                    Branch                   %36.2 -> BB157 (if true) | BB158 (if false)
BB157   <- [36]
  lgl$-           %157.0 = Not                d     %36.1, elided
  lgl$-           %157.1 = AsLogical                %157.0
  lgl$#-          %157.2 = Identical                %157.1, false
  void                    Branch                   %157.2 -> BB120 (if true) | BB39 (if false)
BB158   <- [36]
  fs              %158.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %158.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%158.0
  fs              %158.2 = FrameState         R     0x55d000082350+393: [%36.0], env=e143.0, next=%158.1
  void                    Deopt              !v    %158.2, EnvStubMaterialized@0x55cfff5fc738[Call#unknown], e143.0   !
BB120   <- [157]
  void                    Nop                !     
  lgl$-           %120.1 = %157.1
  goto BB44
BB39   <- [157]
  val?^ | miss    %39.0 = LdVar              eRd   length, <env 0x55cfff1f98c8>
  lgl$#-          %39.1 = Identical                <blt length>, %39.0   <@?>
  void                    Branch                   %39.1 -> BB41 (if true) | BB40 (if false)
BB44   <- [120, 163]
  lgl$-           %44.0 = Phi                      %163.5:BB163, %120.1:BB120
  lgl$-           %44.1 = %44.0
  lgl$#-          %44.2 = CheckTrueFalse     e     %44.1
  void                    Branch                   %44.2 -> BB119 (if true) | BB47 (if false)
BB41   <- [39]
  val?            %41.0 = Force!             !vL   %141.4, e143.0   <val?_>
  lgl$#-          %41.1 = IsType                   %41.0 isA val?+
  lgl$#-          %41.2 = IsEnvStub          R     , e143.0
  void                    Branch                   %41.2 -> BB161 (if true) | BB162 (if false)
BB40   <- [39]
  fs              %40.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %40.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%40.0
  env             e40.2 = MaterializeEnv           , e143.0   <@?>
  (cls|spec|blt)  %40.3 = LdFun              !v    length, e40.2
  fs              %40.4 = FrameState         R     0x55d000082350+453: [%157.1, %149.0, %40.3], env=e40.2, next=%40.1
  void                    Deopt              !v    %40.4, DeadCall@0x55cfff5fc738[Call#4], %40.3   !
BB119   <- [44]
  fs              %119.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %119.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%119.0
  env             e119.2 = MaterializeEnv           , e143.0   <@?>
  (cls|spec|blt)  %119.3 = LdFun              !v    gettextf, e119.2
  fs              %119.4 = FrameState         R     0x55d000082350+623: [%119.3], env=e119.2, next=%119.1
  void                    Deopt              !v    %119.4, DeadCall@0x55cfff5fc738[Call#6], %119.3   !
BB47   <- [44]
  val?^ | miss    %47.0 = LdVar              eRd   invisible, <env 0x55cfff1f98c8>
  lgl$#-          %47.1 = Identical                <blt invisible>, %47.0   <true>
  void                    Branch                   %47.1 -> BB169 (if true) | BB170 (if false)
BB161   <- [41]
  void                    Branch                   %41.1 -> BB163 (if true) | BB164 (if false)
BB162   <- [41]
  void                    Nop                !     
  env             e162.1 = e143.0
  dr              %162.2 = EnvStubMaterialized@0x55cfff5fc738[Call#unknown]
  goto BB42
BB169   <- [47]
  val?            %169.0 = PopContext         C     nil, %141.3
  val?^ | miss    %169.1 = LdVar              eR    dx, e141.0
  lgl$#-          %169.2 = IsType                   %169.1 isA val?~- | miss
  void                    Branch                   %169.2 -> BB171 (if true) | BB172 (if false)
BB170   <- [47]
  fs              %170.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %170.1 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%170.0
  fs              %170.2 = FrameState         R     0x55d000082350+529: [%44.1], env=e143.0, next=%170.1
  void                    Deopt              !v    %170.2, DeadBranchReached@0x55cfff5fc738[Test#4], %47.1   !
BB163   <- [161]
  val?+           %163.0 = CastType           d     dn %41.0   <val?_>
  real$-          %163.1 = CallSafeBuiltin    wed   length(%163.0)    <val?_>
  lgl$-           %163.2 = Gt                 d     %149.0, %163.1, elided   <val?_>
  lgl$-           %163.3 = AsLogical                %163.2
  lgl$-           %163.4 = LAnd                     %157.1, %163.3
  lgl$-           %163.5 = %163.4
  goto BB44
BB164   <- [161]
  void                    Nop                !     
  val?            %164.1 = %41.0
  dr              %164.2 = Typecheck@0x55cfff5fc738[Type#17]
  goto BB42
BB42   <- [162, 164]
  val?^ | miss    %42.0 = Phi                      e162.1:BB162, %164.1:BB164
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %162.2:BB162, %164.2:BB164
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %42.5 = FrameState         R     0x55d000081dd0+37: [], env=e141.0, next=%42.4
  fs              %42.6 = FrameState         R     0x55d000082350+494: [%157.1, %149.0, <blt length>, %41.0], env=e143.0, next=%42.5
  void                    Deopt              !v    %42.6, %42.3, %42.1   !
BB171   <- [169]
  val?~- | miss   %171.0 = CastType           d     dn %169.1
  val?-           %171.1 = Force!<value>            %171.0,    <nil->
  lgl$-           %171.2 = Is                       %171.1, NULL
  lgl$-           %171.3 = Not                d     %171.2, elided
  lgl$#-          %171.4 = CheckTrueFalse     e     %171.3
  void                    Branch                   %171.4 -> BB118 (if true) | BB50 (if false)
BB172   <- [169]
  void                    Nop                !     
  val?^ | miss    %172.1 = %169.1
  dr              %172.2 = Typecheck@0x55cffe6bc730[Type#3]
  goto BB48
BB118   <- [171]
  fs              %118.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  (cls|spec|blt)  %118.1 = LdFun              !v    head.array, e141.0
  fs              %118.2 = FrameState         R     0x55d000081dd0+843: [%118.1], env=e141.0, next=%118.0
  void                    Deopt              !v    %118.2, DeadCall@0x55cffe6bc730[Call#16], %118.1   !
BB50   <- [171]
  val?^ | miss    %50.0 = LdVar              eR    length, e141.0
  lgl$#-          %50.1 = Identical                <blt length>, %50.0   <true>
  void                    Branch                   %50.1 -> BB173 (if true) | BB174 (if false)
BB48   <- [172, 174, 176, 178]
  val?^ | miss    %48.0 = Phi                      %172.1:BB172, %174.1:BB174, %176.1:BB176, %178.1:BB178
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %172.2:BB172, %174.2:BB174, %176.2:BB176, %178.2:BB178
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %48.5 = FrameState         R     0x55d000081dd0+37: [%169.0], env=e141.0, next=%48.4
  void                    Deopt              !v    %48.5, %48.3, %48.1   !
BB173   <- [50]
  val?^ | miss    %173.0 = LdVar              eR    n, e141.0
  lgl$#-          %173.1 = IsType                   %173.0 isA int$~-
  void                    Branch                   %173.1 -> BB175 (if true) | BB176 (if false)
BB174   <- [50]
  void                    Nop                !     
  lgl$#-          %174.1 = %50.1
  dr              %174.2 = DeadBranchReached@0x55cffe6bc730[Test#0]
  goto BB48
BB175   <- [173]
  int$~-          %175.0 = CastType           d     dn %173.0
  int$-           %175.1 = Force!<wrapped>          %175.0,    <int$->
  lgl$-           %175.2 = Lt                 d     %175.1, 0L, elided   <lgl$->
  lgl$#-          %175.3 = CheckTrueFalse     e     %175.2
  void                    Branch                   %175.3 -> BB109 (if true) | BB51 (if false)
BB176   <- [173]
  void                    Nop                !     
  val?^ | miss    %176.1 = %173.0
  dr              %176.2 = Typecheck@0x55cffe6bc730[Type#5]
  goto BB48
BB109   <- [175]
  val?^ | miss    %109.0 = LdVar              eR    max, e141.0
  lgl$#-          %109.1 = Identical                <blt max>, %109.0   <@?>
  void                    Branch                   %109.1 -> BB111 (if true) | BB110 (if false)
BB51   <- [175]
  val?^ | miss    %51.0 = LdVar              eR    min, e141.0
  lgl$#-          %51.1 = Identical                <blt min>, %51.0   <true>
  void                    Branch                   %51.1 -> BB177 (if true) | BB178 (if false)
BB111   <- [109]
  void                    Branch                   %50.1 -> BB113 (if true) | BB112 (if false)
BB110   <- [109]
  fs              %110.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  (cls|spec|blt)  %110.1 = LdFun              !v    max, e141.0
  fs              %110.2 = FrameState         R     0x55d000081dd0+495: [%110.1], env=e141.0, next=%110.0
  void                    Deopt              !v    %110.2, DeadCall@0x55cffe6bc730[Call#11], %110.1   !
BB177   <- [51]
  val?^ | miss    %177.0 = LdVar              eR    x, e141.0
  val?            %177.1 = Force!<wrapped>    !v    %177.0, e141.0   <str->
  lgl$#-          %177.2 = IsType                   %177.1 isA val?-
  void                    Branch                   %177.2 -> BB179 (if true) | BB180 (if false)
BB178   <- [51]
  void                    Nop                !     
  lgl$#-          %178.1 = %51.1
  dr              %178.2 = DeadBranchReached@0x55cffe6bc730[Test#1]
  goto BB48
BB113   <- [111]
  val?^ | miss    %113.0 = LdVar              eR    x, e141.0
  val?            %113.1 = Force!             !v    %113.0, e141.0   <val?_>
  lgl$#-          %113.2 = IsType                   %113.1 isA val?+
  void                    Branch                   %113.2 -> BB187 (if true) | BB188 (if false)
BB112   <- [111]
  fs              %112.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  (cls|spec|blt)  %112.1 = LdFun              !v    length, e141.0
  fs              %112.2 = FrameState         R     0x55d000081dd0+560: [<blt max>, %112.1], env=e141.0, next=%112.0
  void                    Deopt              !v    %112.2, DeadCall@0x55cffe6bc730[Call#13], %112.1   !
BB179   <- [177]
  val?-           %179.0 = CastType           d     dn %177.1   <str->
  (int|real)$-    %179.1 = CallSafeBuiltin    wed   length(%179.0)    <int$->
  lgl$#-          %179.2 = IsType                   %179.1 isA int$-
  void                    Branch                   %179.2 -> BB181 (if true) | BB182 (if false)
BB180   <- [177]
  fs              %180.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %180.1 = FrameState         R     0x55d000081dd0+413: [<blt min>, %175.1, <blt length>, %177.1], env=e141.0, next=%180.0
  void                    Deopt              !v    %180.1, Typecheck@0x55cffe6bc730[Type#22], %177.1   !
BB187   <- [113]
  val?+           %187.0 = CastType           d     dn %113.1   <val?_>
  (int|real)$-    %187.1 = CallSafeBuiltin    wed   length(%187.0)    <val?_>
  val?^ | miss    %187.2 = LdVar              eR    n, e141.0
  val?            %187.3 = Force!             !v    %187.2, e141.0   <val?_>
  lgl$#-          %187.4 = IsType                   %187.3 isA val?+
  void                    Branch                   %187.4 -> BB195 (if true) | BB196 (if false)
BB188   <- [113]
  fs              %188.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %188.1 = FrameState         R     0x55d000081dd0+601: [<blt max>, <blt length>, %113.1], env=e141.0, next=%188.0
  void                    Deopt              !v    %188.1, Typecheck@0x55cffe6bc730[Type#30], %113.1   !
BB181   <- [179]
  int$-           %181.0 = CastType           d     dn %179.1
  int$-           %181.1 = CallSafeBuiltin    wed   min(%175.1, %181.0)    <int$->
  int$-           %181.2 = %181.1
  goto BB56
BB182   <- [179]
  fs              %182.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %182.1 = FrameState         R     0x55d000081dd0+435: [<blt min>, %175.1, %179.1], env=e141.0, next=%182.0
  void                    Deopt              !v    %182.1, Typecheck@0x55cffe6bc730[Type#23], %179.1   !
BB195   <- [187]
  val?+           %195.0 = CastType           d     dn %187.3   <val?_>
  (int|real|complex)+ %195.1 = Add                wed   %187.1, %195.0, elided   <val?_>
  (int|real|complex)$- %195.2 = CallSafeBuiltin    wed   max(%195.1, 0L)    <val?_>
  (int|real|complex)$- %195.3 = %195.2
  goto BB56
BB196   <- [187]
  fs              %196.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %196.1 = FrameState         R     0x55d000081dd0+637: [<blt max>, %187.1, %187.3], env=e141.0, next=%196.0
  void                    Deopt              !v    %196.1, Typecheck@0x55cffe6bc730[Type#32], %187.3   !
BB56   <- [181, 195]
  (int|real|complex)$- %56.0 = Phi                      %181.2:BB181, %195.3:BB195
  (int|real|complex)$- %56.1 = %56.0
  void                    StVar              lW    n, %56.1, e141.0
  val?^ | miss    %56.3 = LdVar              eR    x, e141.0
  val?            %56.4 = Force!<wrapped>    !v    %56.3, e141.0   <str->
  lgl$#-          %56.5 = IsType                   %56.4 isA val+   <true>
  void                    Branch                   %56.5 -> BB183 (if true) | BB184 (if false)
BB183   <- [56]
  val?^ | miss    %183.0 = LdVar              eR    seq_len, e141.0
  lgl$#-          %183.1 = Identical                <blt seq_len>, %183.0   <true>
  void                    Branch                   %183.1 -> BB185 (if true) | BB186 (if false)
BB184   <- [56]
  void                    Nop                !     
  lgl$#-          %184.1 = %56.5
  dr              %184.2 = DeadBranchReached@0x55cffe6bc730[Test#5]
  goto BB57
BB185   <- [183]
  val?^ | miss    %185.0 = LdVar              eR    n, e141.0
  val?            %185.1 = Force!<value>      !v    %185.0, e141.0   <int$->
  val+            %185.2 = CallSafeBuiltin    wed   seq_len(%185.1)    <int->
  lgl$#-          %185.3 = IsType                   %56.4 isA val?-
  void                    Branch                   %185.3 -> BB189 (if true) | BB190 (if false)
BB186   <- [183]
  void                    Nop                !     
  lgl$#-          %186.1 = %183.1
  dr              %186.2 = DeadBranchReached@0x55cffe6bc730[Test#6]
  goto BB57
BB57   <- [184, 186]
  val?^ | miss    %57.0 = Phi                      %184.1:BB184, %186.1:BB186
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %184.2:BB184, %186.2:BB186
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %57.5 = FrameState         R     0x55d000081dd0+694: [%56.4], env=e141.0, next=%57.4
  void                    Deopt              !v    %57.5, %57.3, %57.1   !
BB189   <- [185]
  val?-           %189.0 = CastType           d     dn %56.4   <str->
  val?            %189.1 = Extract1_1D        wed   %189.0, %185.2, elided   <str->
  val?            %189.2 = PopContext         C     %189.1, %139.2   <str->
  void                    StVar              lW    lbss, %189.2, e0.0
  lgl$#-          %189.4 = IsType                   %189.2 isA val?-
  val?^ | miss    %189.5 = LdVar              eR    sum, e0.0
  lgl$#-          %189.6 = Identical                <blt sum>, %189.5   <true>
  void                    Branch                   %189.6 -> BB191 (if true) | BB192 (if false)
BB190   <- [185]
  fs              %190.0 = FrameState         R     0x55d00007d1f0+93: [], env=e0.0
  fs              %190.1 = FrameState         R     0x55d000081dd0+821: [%56.4, %185.2], env=e141.0, next=%190.0
  void                    Deopt              !v    %190.1, Typecheck@0x55cffe6bc730[Type#35], %56.4   !
BB191   <- [189]
  val             %191.0 = ChkMissing         e     %189.2
  void                    Branch                   %189.4 -> BB193 (if true) | BB194 (if false)
BB192   <- [189]
  void                    Nop                !     
  lgl$#-          %192.1 = %189.6
  dr              %192.2 = DeadBranchReached@0x55cfff218da0[Test#3]
  goto BB61
BB193   <- [191]
  val?-           %193.0 = CastType           d     dn %189.2   <str->
  lgl-            %193.1 = Eq                 wed   %193.0, "'", elided   <lgl->
  int$-           %193.2 = CallSafeBuiltin    wed   sum(%193.1)    <int$->
  real$-          %193.3 = Mod                d     %193.2, 2, elided   <real$->
  lgl$-           %193.4 = Eq                 d     %193.3, 1, elided   <lgl$->
  lgl$-           %193.5 = AsLogical                %193.4
  lgl$#-          %193.6 = Identical                %193.5, true
  void                    Branch                   %193.6 -> BB108 (if true) | BB63 (if false)
BB194   <- [191]
  void                    Nop                !     
  val?            %194.1 = %189.2
  dr              %194.2 = Typecheck@0x55cfff218da0[Type#12]
  goto BB61
BB61   <- [192, 194]
  val?^ | miss    %61.0 = Phi                      %192.1:BB192, %194.1:BB194
  val?^ | miss    %61.1 = %61.0
  dr              %61.2 = Phi                      %192.2:BB192, %194.2:BB194
  dr              %61.3 = %61.2
  fs              %61.4 = FrameState         R     0x55d00007d1f0+107: [], env=e0.0
  void                    Deopt              !v    %61.4, %61.3, %61.1   !
BB108   <- [193]
  void                    Nop                !     
  lgl$-           %108.1 = %193.5
  goto BB64
BB63   <- [193]
  lgl-            %63.0 = Eq                 wed   %193.0, """, elided   <lgl->
  int$-           %63.1 = CallSafeBuiltin    wed   sum(%63.0)    <int$->
  real$-          %63.2 = Mod                d     %63.1, 2, elided   <real$->
  lgl$-           %63.3 = Eq                 d     %63.2, 1, elided   <lgl$->
  lgl$-           %63.4 = AsLogical                %63.3
  lgl$-           %63.5 = LOr                      %193.5, %63.4
  lgl$-           %63.6 = %63.5
  goto BB64
BB64   <- [108, 63]
  lgl$-           %64.0 = Phi                      %63.6:BB63, %108.1:BB108
  lgl$-           %64.1 = %64.0
  void                    StVar              lW    insideQuotes, %64.1, e0.0
  lgl$#-          %64.3 = CheckTrueFalse     e     %64.1
  void                    Branch                   %64.3 -> BB107 (if true) | BB67 (if false)
BB107   <- [64]
  (cls|spec|blt)  %107.0 = LdFun              !v    suppressWarnings, e0.0
  fs              %107.1 = FrameState         R     0x55d00007d1f0+503: [%107.0], env=e0.0
  void                    Deopt              !v    %107.1, DeadCall@0x55cfff218da0[Call#8], %107.0   !
BB67   <- [64]
  val?^ | miss    %67.0 = LdVar              eR    suppressWarnings, e0.0
  lgl$#-          %67.1 = Identical                %67.0, function(expr, classes="warning") <(rir::Dispa|...
  void                    Branch                   %67.1 -> BB197 (if true) | BB198 (if false)
BB197   <- [67]
  prom-           %197.0 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p9, e0.0
  ct              %197.1 = PushContext        lCL   %197.0, suppressWarnings(gregexpr("[^\.\w:?$@[\]]+", l|..., function(expr, classes="warning") <(rir::Dispa|..., e0.0
  val?^           %197.2 = CastType                 up %197.0
  env             e197.3 = MkEnv              l     expr=%197.2, classes(miss)="warning", parent=R_BaseNamespace, context 1
  prom-           %197.4 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p20, e197.3
  cls             %197.5 = MkCls                    suppressWarnings@Prom(2)0, e197.3
  prom-           %197.6 = MkArg                    %197.5, .guessTokenFromLine[0x55d000cd52e0]_p21 (!refl), e197.3
  dots-           %197.7 = DotsList           l     warning=%197.6
  val?            %197.8 = StaticCall         !v    withCallingHandlers[0x55d0006e0db0](%197.4, %197.7) { 0 1n } e197.3   <vec$->
  val?            %197.9 = PopContext         C     %197.8, %197.1   <vec$->
  lgl$#-          %197.10 = IsType                   %197.9 isA val+   <true>
  lgl$#-          %197.11 = IsType                   %197.9 isA val?-
  void                    Branch                   %197.10 -> BB199 (if true) | BB200 (if false)
BB198   <- [67]
  fs              %198.0 = FrameState         R     0x55d00007d1f0+392: [], env=e0.0
  void                    Deopt              !v    %198.0, CallTarget@0x55cfff218da0[Call#6], %67.0   !
BB199   <- [197]
  void                    Branch                   %197.11 -> BB201 (if true) | BB202 (if false)
BB200   <- [197]
  void                    Nop                !     
  lgl$#-          %200.1 = %197.10
  dr              %200.2 = DeadBranchReached@0x55cfff218da0[Test#5]
  goto BB68
BB201   <- [199]
  val?-           %201.0 = CastType           d     dn %197.9   <vec$->
  val?            %201.1 = Extract2_1D        wed   %201.0, 1L, elided   <int$+>
  void                    StVar              lW    start, %201.1, e0.0
  lgl$#-          %201.3 = IsType                   %201.1 isA int$+
  val?^ | miss    %201.4 = LdVar              eR    all, e0.0
  lgl$#-          %201.5 = Identical                <blt all>, %201.4   <true>
  void                    Branch                   %201.5 -> BB203 (if true) | BB204 (if false)
BB202   <- [199]
  void                    Nop                !     
  val?            %202.1 = %197.9
  dr              %202.2 = Typecheck@0x55cfff218da0[Type#30]
  goto BB68
BB68   <- [200, 202]
  val?^ | miss    %68.0 = Phi                      %200.1:BB200, %202.1:BB202
  val?^ | miss    %68.1 = %68.0
  dr              %68.2 = Phi                      %200.2:BB200, %202.2:BB202
  dr              %68.3 = %68.2
  fs              %68.4 = FrameState         R     0x55d00007d1f0+444: [%197.9], env=e0.0
  void                    Deopt              !v    %68.4, %68.3, %68.1   !
BB203   <- [201]
  val             %203.0 = ChkMissing         e     %201.1
  void                    Branch                   %201.3 -> BB205 (if true) | BB206 (if false)
BB204   <- [201]
  void                    Nop                !     
  lgl$#-          %204.1 = %201.5
  dr              %204.2 = DeadBranchReached@0x55cfff218da0[Test#7]
  goto BB70
BB205   <- [203]
  int$+           %205.0 = CastType           d     dn %201.1
  lgl$            %205.1 = Lt                 wed   %205.0, 0L, elided   <lgl$->
  lgl$#-          %205.2 = IsType                   %205.1 isA lgl$-
  void                    Branch                   %205.2 -> BB207 (if true) | BB208 (if false)
BB206   <- [203]
  void                    Nop                !     
  val?            %206.1 = %201.1
  dr              %206.2 = Typecheck@0x55cfff218da0[Type#31]
  goto BB70
BB70   <- [204, 206]
  val?^ | miss    %70.0 = Phi                      %204.1:BB204, %206.1:BB206
  val?^ | miss    %70.1 = %70.0
  dr              %70.2 = Phi                      %204.2:BB204, %206.2:BB206
  dr              %70.3 = %70.2
  fs              %70.4 = FrameState         R     0x55d00007d1f0+588: [], env=e0.0
  void                    Deopt              !v    %70.4, %70.3, %70.1   !
BB207   <- [205]
  lgl$-           %207.0 = CastType           d     dn %205.1
  val?            %207.1 = CallBuiltin        !v    all(%207.0) e0.0   <lgl$->
  lgl$#-          %207.2 = IsType                   %207.1 isA lgl$-
  void                    Branch                   %207.2 -> BB209 (if true) | BB210 (if false)
BB208   <- [205]
  fs              %208.0 = FrameState         R     0x55d00007d1f0+669: [<blt all>, %205.1], env=e0.0
  void                    Deopt              !v    %208.0, Typecheck@0x55cfff218da0[Type#39], %205.1   !
BB209   <- [207]
  lgl$-           %209.0 = CastType           d     dn %207.1
  lgl$#-          %209.1 = CheckTrueFalse     e     %209.0
  void                    Branch                   %209.1 -> BB106 (if true) | BB76 (if false)
BB210   <- [207]
  void                    Nop                !     
  val?            %210.1 = %207.1
  dr              %210.2 = Typecheck@0x55cfff218da0[Type#40]
  goto BB74
BB106   <- [209]
  void                    Nop                !     
  int$#-          %106.1 = 0L
  goto BB79
BB76   <- [209]
  val?^ | miss    %76.0 = LdVar              eR    tail.default, e0.0
  lgl$#-          %76.1 = Identical                %76.0, function(x, n=6L, keepnums=FALSE, addrownums, |...
  void                    Branch                   %76.1 -> BB211 (if true) | BB212 (if false)
BB74   <- [210, 212]
  val?^ | miss    %74.0 = Phi                      %210.1:BB210, %212.1:BB212
  val?^ | miss    %74.1 = %74.0
  dr              %74.2 = Phi                      %210.2:BB210, %212.2:BB212
  dr              %74.3 = %74.2
  fs              %74.4 = FrameState         R     0x55d00007d1f0+691: [%207.1], env=e0.0
  void                    Deopt              !v    %74.4, %74.3, %74.1   !
BB79   <- [106, 221]
  int$-           %79.0 = Phi                      %221.2:BB221, %106.1:BB106
  int$-           %79.1 = %79.0
  void                    StVar              lW    start, %79.1, e0.0
  val?^ | miss    %79.3 = LdVar              eR    substr, e0.0
  lgl$#-          %79.4 = Identical                %79.3, function(x, start, stop) <(rir::DispatchTable*|...
  void                    Branch                   %79.4 -> BB213 (if true) | BB214 (if false)
BB211   <- [76]
  prom-           %211.0 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p11, e0.0
  val?            %211.1 = StaticCall         !v    tail.default[0x55d000c30930](%211.0, 1L) { 0 1 } e0.0   <int$->
  lgl$#-          %211.2 = IsType                   %211.1 isA int$-
  void                    Branch                   %211.2 -> BB221 (if true) | BB222 (if false)
BB212   <- [76]
  void                    Nop                !     
  val?^ | miss    %212.1 = %76.0
  dr              %212.2 = CallTarget@0x55cfff218da0[Call#11]
  goto BB74
BB213   <- [79]
  prom-           %213.0 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p13, e0.0
  prom-           %213.1 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p14, e0.0
  prom-           %213.2 = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p15, e0.0
  ct              %213.3 = PushContext        lCL   %213.0, %213.1, %213.2, substr(linebuffer, +(start, 1L), end), function(x, start, stop) <(rir::DispatchTable*|..., e0.0
  val?^           %213.4 = CastType                 up %213.2
  val?^           %213.5 = CastType                 up %213.1
  val?^           %213.6 = CastType                 up %213.0
  env             e213.7 = MkEnv              l     x=%213.6, start=%213.5, stop=%213.4, parent=R_BaseNamespace, context 1
  val?            %213.8 = Force!<lazy>       !vL   %213.6, e213.7   <str->
  lgl$#-          %213.9 = CallSafeBuiltin    wed   is.character(%213.8)    <lgl$->
  void                    Branch                   %213.9 -> BB105 (if true) | BB82 (if false)
BB214   <- [79]
  fs              %214.0 = FrameState         R     0x55d00007d1f0+776: [], env=e0.0
  void                    Deopt              !v    %214.0, CallTarget@0x55cfff218da0[Call#13], %79.3   !
BB221   <- [211]
  int$-           %221.0 = CastType           d     dn %211.1
  int$-           %221.1 = Sub                d     %221.0, 1L, elided   <int$->
  int$-           %221.2 = %221.1
  goto BB79
BB222   <- [211]
  fs              %222.0 = FrameState         R     0x55d00007d1f0+739: [%211.1], env=e0.0
  void                    Deopt              !v    %222.0, Typecheck@0x55cfff218da0[Type#45], %211.1   !
BB105   <- [213]
  void                    Nop                !     
  val?^           %105.1 = %213.6
  goto BB85
BB82   <- [213]
  lgl$#-          %82.0 = IsType                   %213.8 isA val?+
  void                    Branch                   %82.0 -> BB217 (if true) | BB218 (if false)
BB85   <- [105, 217]
  val?^           %85.0 = Phi                      %105.1:BB105, %217.3:BB217
  val?^           %85.1 = %85.0
  val?            %85.2 = Force!<wrapped>    !v    %85.1, e213.7   <str->
  val?^ | miss    %85.3 = LdVar              eR    as.integer, e213.7
  lgl$#-          %85.4 = Identical                <blt as.integer>, %85.3   <true>
  void                    Branch                   %85.4 -> BB215 (if true) | BB216 (if false)
BB217   <- [82]
  val?+           %217.0 = CastType           d     dn %213.8   <val?_>
  val+            %217.1 = CallSafeBuiltin    wed   as.character(%217.0)    <val?_>
  void                    StVar              lW    x, %217.1, e213.7
  val+            %217.3 = %217.1
  goto BB85
BB218   <- [82]
  fs              %218.0 = FrameState         R     0x55d00007d1f0+818: [], env=e0.0
  fs              %218.1 = FrameState         R     0x55d00007eb80+177: [<blt as.character>, %213.8], env=e213.7, next=%218.0
  void                    Deopt              !v    %218.1, Typecheck@0x55cffeb28fe0[Type#4], %213.8   !
BB215   <- [85]
  val?^ | miss    %215.0 = LdVar              eR    start, e213.7
  val?            %215.1 = Force!<lazy>       !v    %215.0, e213.7   <int$->
  lgl$#-          %215.2 = IsType                   %215.1 isA int$-
  void                    Branch                   %215.2 -> BB219 (if true) | BB220 (if false)
BB216   <- [85]
  fs              %216.0 = FrameState         R     0x55d00007d1f0+818: [], env=e0.0
  fs              %216.1 = FrameState         R     0x55d00007eb80+222: [%85.2], env=e213.7, next=%216.0
  void                    Deopt              !v    %216.1, DeadBranchReached@0x55cffeb28fe0[Test#2], %85.4   !
BB219   <- [215]
  int$-           %219.0 = CastType           d     dn %215.1
  val?^ | miss    %219.1 = LdVar              eR    as.integer, e213.7
  lgl$#-          %219.2 = Identical                <blt as.integer>, %219.1   <true>
  void                    Branch                   %219.2 -> BB223 (if true) | BB224 (if false)
BB220   <- [215]
  void                    Nop                !     
  val?            %220.1 = %215.1
  dr              %220.2 = Typecheck@0x55cffeb28fe0[Type#8]
  goto BB88
BB223   <- [219]
  val?^ | miss    %223.0 = LdVar              eR    stop, e213.7
  val?            %223.1 = Force!<lazy>       !v    %223.0, e213.7   <int$->
  lgl$#-          %223.2 = IsType                   %223.1 isA int$-
  void                    Branch                   %223.2 -> BB225 (if true) | BB226 (if false)
BB224   <- [219]
  void                    Nop                !     
  lgl$#-          %224.1 = %219.2
  dr              %224.2 = DeadBranchReached@0x55cffeb28fe0[Test#3]
  goto BB88
BB88   <- [220, 224]
  val?^ | miss    %88.0 = Phi                      %220.1:BB220, %224.1:BB224
  val?^ | miss    %88.1 = %88.0
  dr              %88.2 = Phi                      %220.2:BB220, %224.2:BB224
  dr              %88.3 = %88.2
  fs              %88.4 = FrameState         R     0x55d00007d1f0+818: [], env=e0.0
  fs              %88.5 = FrameState         R     0x55d00007eb80+296: [%85.2, <blt as.integer>, %215.1], env=e213.7, next=%88.4
  void                    Deopt              !v    %88.5, %88.3, %88.1   !
BB225   <- [223]
  int$-           %225.0 = CastType           d     dn %223.1
  val?            %225.1 = CallBuiltin        !v    substr(%85.2, %219.0, %225.0) e213.7
  val?            %225.2 = PopContext         C     %225.1, %213.3   <str$->
  void                    StVar              lW    token, %225.2, e0.0
  val?^ | miss    %225.4 = LdVar              eR    update, e0.0
  val?            %225.5 = Force!<lazy>       !v    %225.4, e0.0   <lgl$->
  lgl$#-          %225.6 = CheckTrueFalse     we    %225.5
  void                    Branch                   %225.6 -> BB98 (if true) | BB94 (if false)
BB226   <- [223]
  fs              %226.0 = FrameState         R     0x55d00007d1f0+818: [], env=e0.0
  fs              %226.1 = FrameState         R     0x55d00007eb80+392: [%85.2, %219.0, <blt as.integer>, %223.1], env=e213.7, next=%226.0
  void                    Deopt              !v    %226.1, Typecheck@0x55cffeb28fe0[Type#11], %223.1   !
BB98   <- [225]
  val?^ | miss    %98.0 = LdVar              eR    start, e0.0
  lgl$#-          %98.1 = IsType                   %98.0 isA int$-
  void                    Branch                   %98.1 -> BB227 (if true) | BB228 (if false)
BB94   <- [225]
  val?^ | miss    %94.0 = LdVar              eR    list, e0.0
  lgl$#-          %94.1 = Identical                <blt list>, %94.0   <@?>
  void                    Branch                   %94.1 -> BB96 (if true) | BB95 (if false)
BB227   <- [98]
  int$-           %227.0 = CastType           d     dn %98.0
  val?^ | miss    %227.1 = LdVar              eR    .CompletionEnv !upd, e0.0
  val?            %227.2 = Force!<wrapped>    !v    %227.1, e0.0   <env->
  lgl$#-          %227.3 = IsType                   %227.2 isA val?-
  void                    Branch                   %227.3 -> BB229 (if true) | BB230 (if false)
BB228   <- [98]
  fs              %228.0 = FrameState         R     0x55d00007d1f0+847: [%225.6], env=e0.0
  void                    Deopt              !v    %228.0, Typecheck@0x55cfff218da0[Type#58], %98.0   !
BB96   <- [94]
  val?^ | miss    %96.0 = LdVar              eR    start, e0.0
  val?            %96.1 = Force!             !v    %96.0, e0.0   <val?_>
  val?^ | miss    %96.2 = LdVar              eR    token, e0.0
  void                    Visible            v     
  val?            %96.4 = Force!             !     %96.2, e0.0   <val?_>
  val?            %96.5 = NamedCall          !     <blt list>(start=%96.1, token=%96.4) e0.0   <val?_>
  val?            %96.6 = %96.5
  goto BB97
BB95   <- [94]
  (cls|spec|blt)  %95.0 = LdFun              !v    list, e0.0
  fs              %95.1 = FrameState         R     0x55d00007d1f0+880: [%95.0], env=e0.0
  void                    Deopt              !v    %95.1, DeadCall@0x55cfff218da0[Call#14], %95.0   !
BB229   <- [227]
  val?-           %229.0 = CastType           d     dn %227.2   <env->
  val?+           %229.1 = Subassign2_1D      wed   %227.0, %229.0, "start", elided
  void                    StVar              lW    .CompletionEnv, %229.1, e0.0
  val?^ | miss    %229.3 = LdVar              eR    token, e0.0
  lgl$#-          %229.4 = IsType                   %229.3 isA val?~- | miss
  void                    Branch                   %229.4 -> BB231 (if true) | BB232 (if false)
BB230   <- [227]
  fs              %230.0 = FrameState         R     0x55d00007d1f0+1011: [%227.0, %227.2], env=e0.0
  void                    Deopt              !v    %230.0, Typecheck@0x55cfff218da0[Type#59], %227.2   !
BB97   <- [96, 235]
  val?            %97.0 = Phi                      %96.6:BB96, %235.2:BB235
  val?            %97.1 = %97.0
  void                    Return             l     %97.1
BB231   <- [229]
  val?~- | miss   %231.0 = CastType           d     dn %229.3
  val?-           %231.1 = Force!<value>            %231.0,    <str$->
  val+            %231.2 = ChkMissing         e     %229.1
  lgl$#-          %231.3 = IsType                   %231.2 isA val?~- | miss
  void                    Branch                   %231.3 -> BB233 (if true) | BB234 (if false)
BB232   <- [229]
  void                    Nop                !     
  val?^ | miss    %232.1 = %229.3
  dr              %232.2 = Typecheck@0x55cfff218da0[Type#60]
  goto BB101
BB233   <- [231]
  val-            %233.0 = CastType           d     dn %231.2   <env->
  val?+           %233.1 = Subassign2_1D      wed   %231.1, %233.0, "token", elided   <env->
  void                    StVar              lW    .CompletionEnv, %233.1, e0.0
  lgl$#-          %233.3 = IsType                   %233.1 isA val+   <true>
  val+            %233.4 = ChkMissing         e     %233.1
  void                    Branch                   %233.3 -> BB235 (if true) | BB236 (if false)
BB234   <- [231]
  void                    Nop                !     
  val+            %234.1 = %231.2
  dr              %234.2 = Typecheck@0x55cfff218da0[Type#61]
  goto BB101
BB101   <- [232, 234]
  val?^ | miss    %101.0 = Phi                      %232.1:BB232, %234.1:BB234
  val?^ | miss    %101.1 = %101.0
  dr              %101.2 = Phi                      %232.2:BB232, %234.2:BB234
  dr              %101.3 = %101.2
  fs              %101.4 = FrameState         R     0x55d00007d1f0+1032: [], env=e0.0
  void                    Deopt              !v    %101.4, %101.3, %101.1   !
BB235   <- [233]
  val?            %235.0 = Extract2_1D        wed   %233.1, "token", elided   <str$->
  void                    Visible            v     
  val?            %235.2 = %235.0
  goto BB97
BB236   <- [233]
  fs              %236.0 = FrameState         R     0x55d00007d1f0+1076: [], env=e0.0
  void                    Deopt              !v    %236.0, DeadBranchReached@0x55cfff218da0[Test#9], %233.3   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .CompletionEnv, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <env->
  val?            %0.3  = Extract2_1D        !v    %0.2, "linebuffer", e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .CompletionEnv, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <env->
  val?            %0.3  = Extract2_1D        !v    %0.2, "end", e0.0   <int$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    linebuffer, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    end, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     unlist, <0x55cffe3fb508>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     strsplit, <0x55cffe42f588>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "") e0.0   <vec$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    linebuffer, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .CompletionEnv, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <env->
  val?            %0.3  = Extract2_1D        !v    %0.2, "end", e0.0   <int$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     gregexpr, <0x55cffff63d28>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p10, e0.0
  val?            %0.3  = NamedCall          !     %0.1("[^\.\w:?$@[\]]+", %0.2, perl=true) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    linebuffer, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    start, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$+>
  (cls|spec|blt)  %0.4  = LdFun              !     attr, <0x55cffe0e5080>, e0.0
  prom-           %0.5  = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p12, e0.0
  val?            %0.6  = Call               !     %0.4(%0.5, "match.length") e0.0   <int$->
  val?            %0.7  = Add                !     %0.3, %0.6, e0.0   <int$+>
  void                    Return             l     %0.7
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    start, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    linebuffer, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    start, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1L, e0.0   <int$->
  void                    Return             l     %0.4
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    end, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    dim, <0x55cffe0e52b0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .guessTokenFromLine[0x55d000cd52e0]_p18, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <nil->
  void                    Invisible          v     
  void                    StVar              lW    dx, %0.3, e0.0
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    suppressWarnings@Prom(2)0, e0.0
  void                    Return             l     %0.1

│ .guessTokenFromLine[0x55d000cd52e0]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
