
┌──────────────────────────────────────────────────────────────────────────────┐
│ grep[0x55d000cf70b0]                                                         │
│ Context: CorrOrd,!TMany,Argmatch;Eager0,Eager2,Eager3,Eager4,Eager5,NonRefl0,NonRefl2,NonRefl3,NonRefl4,NonRefl5,!Obj0,!Obj5 miss: 2│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
grep[0x55d000cf70b0]
BB0
  val?~+          %0.0  = LdArg                    5
  val?~ | miss    %0.1  = LdArg                    4
  val?~ | miss    %0.2  = LdArg                    3
  val?~ | miss    %0.3  = LdArg                    2
  val?^ | miss    %0.4  = LdArg                    1
  val?~+          %0.5  = LdArg                    0
  lgl$#-          %0.6  = Identical                %0.3, missingArg
  lgl$#-          %0.7  = Identical                %0.2, missingArg
  env             e0.8  = MkEnv              l     pattern=%0.5, x=%0.4, ignore.case=%0.3, perl=%0.2, value=%0.1, fixed=%0.0, useBytes(miss)=missingArg, invert(miss)=missingArg, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.6 -> BB2 (if true) | BB35 (if false)
BB2   <- [0]
  void                    StArg              lW    ignore.case, false, e0.8
  goto BB3
BB35   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [35, 2]
  void                    Branch                   %0.7 -> BB34 (if true) | BB4 (if false)
BB34   <- [3]
  void                    StArg              lW    perl, false, e0.8
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [4, 34]
  lgl$#-          %5.0  = Identical                %0.1, missingArg
  void                    Branch                   %5.0 -> BB33 (if true) | BB6 (if false)
BB33   <- [5]
  void                    StArg              lW    value, false, e0.8
  goto BB7
BB6   <- [5]
  void                    Nop                !     
  goto BB7
BB7   <- [6, 33]
  void                    StArg              lW    useBytes, false, e0.8
  void                    StArg              lW    invert, false, e0.8
  val+            %7.2  = Force<lazy>              %0.5,    <str$->
  val+            %7.3  = CallSafeBuiltin    wed   as.character(%7.2)    <str$->
  void                    StVar              lW    pattern, %7.3, e0.8
  prom-           %7.5  = MkArg                    unboundValue, grep[0x55d000cf70b0]_p6, e0.8
  ct              %7.6  = PushContext        lCL   %7.5, is.factor(x), function(x) <(rir::DispatchTable*)0x55d00008fe|..., e0.8
  val?^           %7.7  = CastType                 up %7.5
  env             e7.8  = MkEnv              l     x=%7.7, parent=R_BaseNamespace, context 1
  prom-           %7.9  = MkArg                    unboundValue, grep[0x55d000cf70b0]_p7, e7.8
  ct              %7.10 = PushContext        lCL   %7.9, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e7.8
  val?^           %7.11 = CastType                 up %7.9
  env             e7.12 = MkEnv              l     x=%7.11, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %7.13 = Force!<lazy>       !vr   %7.11,    <val?>
  val?            %7.14 = CallBuiltin        !v    inherits(%7.13, "factor", false) e7.12
  val?            %7.15 = PopContext         C     %7.14, %7.10   <lgl$->
  lgl$#-          %7.16 = IsType                   %7.15 isA lgl$-
  void                    Branch                   %7.16 -> BB36 (if true) | BB37 (if false)
BB36   <- [7]
  lgl$-           %36.0 = CastType           d     dn %7.15
  val?            %36.1 = PopContext         C     %36.0, %7.6   <lgl$->
  lgl$#-          %36.2 = IsType                   %36.1 isA lgl$-
  void                    Branch                   %36.2 -> BB38 (if true) | BB39 (if false)
BB37   <- [7]
  fs              %37.0 = FrameState         R     0x55d00013d0a0+137: [], env=e0.8
  fs              %37.1 = FrameState         R     0x55d00008be10+37: [%7.15], env=e7.8, next=%37.0
  void                    Deopt              !v    %37.1, Typecheck@0x55cfff5d5428[Type#1], %7.15   !
BB38   <- [36]
  lgl$-           %38.0 = CastType           d     dn %36.1
  lgl$-           %38.1 = AsLogical                %38.0
  lgl$#-          %38.2 = Identical                %38.1, false
  lgl$-           %38.3 = AsLogical                %38.1
  lgl$#-          %38.4 = Identical                %38.3, false
  void                    Branch                   %38.2 -> BB15 (if true) | BB12 (if false)
BB39   <- [36]
  fs              %39.0 = FrameState         R     0x55d00013d0a0+137: [%36.1], env=e0.8
  void                    Deopt              !v    %39.0, Typecheck@0x55d0001dd310[Type#4], %36.1   !
BB15   <- [38]
  void                    Branch                   %38.4 -> BB32 (if true) | BB16 (if false)
BB12   <- [38]
  val?^ | miss    %12.0 = LdVar              eR    length, e0.8
  lgl$#-          %12.1 = Identical                <blt length>, %12.0   <@?>
  void                    Branch                   %12.1 -> BB14 (if true) | BB13 (if false)
BB32   <- [15]
  void                    Nop                !     
  lgl$-           %32.1 = %38.3
  goto BB23
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    is.na, e0.8
  lgl$#-          %16.1 = Identical                <blt is.na>, %16.0   <@?>
  void                    Branch                   %16.1 -> BB18 (if true) | BB17 (if false)
BB14   <- [12]
  (cls|spec|blt)  %14.0 = LdFun              !v    levels, e0.8
  fs              %14.1 = FrameState         R     0x55d00013d0a0+214: [%38.1, <blt length>, %14.0], env=e0.8
  void                    Deopt              !v    %14.1, DeadCall@0x55d0001dd310[Call#4], %14.0   !
BB13   <- [12]
  (cls|spec|blt)  %13.0 = LdFun              !v    length, e0.8
  fs              %13.1 = FrameState         R     0x55d00013d0a0+177: [%38.1, %13.0], env=e0.8
  void                    Deopt              !v    %13.1, DeadCall@0x55d0001dd310[Call#2], %13.0   !
BB23   <- [32, 44]
  lgl$-           %23.0 = Phi                      %44.5:BB44, %32.1:BB32
  lgl$-           %23.1 = %23.0
  lgl$#-          %23.2 = CheckTrueFalse     e     %23.1
  void                    Branch                   %23.2 -> BB29 (if true) | BB26 (if false)
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    pattern, e0.8
  val?            %18.1 = Force!             !v    %18.0, e0.8   <val?_>
  lgl$#-          %18.2 = IsType                   %18.1 isA val?+
  void                    Branch                   %18.2 -> BB42 (if true) | BB43 (if false)
BB17   <- [16]
  (cls|spec|blt)  %17.0 = LdFun              !v    is.na, e0.8
  fs              %17.1 = FrameState         R     0x55d00013d0a0+418: [%38.3, %17.0], env=e0.8
  void                    Deopt              !v    %17.1, DeadCall@0x55d0001dd310[Call#6], %17.0   !
BB29   <- [23]
  val?^ | miss    %29.0 = LdVar              eR    is.character, e0.8
  lgl$#-          %29.1 = Identical                <blt is.character>, %29.0   <@?>
  void                    Branch                   %29.1 -> BB31 (if true) | BB30 (if false)
BB26   <- [23]
  val?^ | miss    %26.0 = LdVar              eR    is.character, e0.8
  lgl$#-          %26.1 = Identical                <blt is.character>, %26.0   <true>
  void                    Branch                   %26.1 -> BB40 (if true) | BB41 (if false)
BB42   <- [18]
  val?+           %42.0 = CastType           d     dn %18.1   <val?_>
  val?            %42.1 = Extract1_1D        wed   %42.0, 1L, elided   <val?_>
  lgl$#-          %42.2 = IsType                   %42.1 isA val?+
  void                    Branch                   %42.2 -> BB44 (if true) | BB45 (if false)
BB43   <- [18]
  fs              %43.0 = FrameState         R     0x55d00013d0a0+459: [%38.3, <blt is.na>, %18.1], env=e0.8
  void                    Deopt              !v    %43.0, Typecheck@0x55d0001dd310[Type#16], %18.1   !
BB31   <- [29]
  (cls|spec|blt)  %31.0 = LdFun              !v    suppressWarnings, e0.8
  fs              %31.1 = FrameState         R     0x55d00013d0a0+901: [<blt is.character>, %31.0], env=e0.8
  void                    Deopt              !v    %31.1, DeadCall@0x55d0001dd310[Call#14], %31.0   !
BB30   <- [29]
  (cls|spec|blt)  %30.0 = LdFun              !v    is.character, e0.8
  fs              %30.1 = FrameState         R     0x55d00013d0a0+864: [%30.0], env=e0.8
  void                    Deopt              !v    %30.1, DeadCall@0x55d0001dd310[Call#11], %30.0   !
BB40   <- [26]
  val?^ | miss    %40.0 = LdVar              eR    x, e0.8
  val?            %40.1 = Force!<wrapped>    !v    %40.0, e0.8   <str->
  lgl$#-          %40.2 = CallSafeBuiltin    wed   is.character(%40.1)    <lgl$->
  void                    Branch                   %40.2 -> BB28 (if true) | BB27 (if false)
BB41   <- [26]
  fs              %41.0 = FrameState         R     0x55d00013d0a0+533: [%23.1], env=e0.8
  void                    Deopt              !v    %41.0, DeadBranchReached@0x55d0001dd310[Test#6], %26.1   !
BB44   <- [42]
  val?+           %44.0 = CastType           d     dn %42.1   <val?_>
  lgl+            %44.1 = CallSafeBuiltin    wed   is.na(%44.0)    <val?_>
  lgl             %44.2 = Not                wed   %44.1, elided
  lgl$-           %44.3 = AsLogical          e     %44.2
  lgl$-           %44.4 = LAnd                     %38.3, %44.3
  lgl$-           %44.5 = %44.4
  goto BB23
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x55d00013d0a0+502: [%38.3, <blt is.na>, %42.1], env=e0.8
  void                    Deopt              !v    %45.0, Typecheck@0x55d0001dd310[Type#17], %42.1   !
BB28   <- [40]
  val?^ | miss    %28.0 = LdVar              eR    pattern, e0.8
  val?            %28.1 = Force!<value>      !v    %28.0, e0.8   <str$->
  val?^ | miss    %28.2 = LdVar              eR    x, e0.8
  val?            %28.3 = Force!<wrapped>    !v    %28.2, e0.8   <str->
  val?^ | miss    %28.4 = LdVar              eR    ignore.case, e0.8
  val?            %28.5 = Force!<lazy>       !v    %28.4, e0.8   <lgl$->
  val?^ | miss    %28.6 = LdVar              eR    value, e0.8
  val?            %28.7 = Force!<lazy>       !v    %28.6, e0.8   <lgl$->
  val?^ | miss    %28.8 = LdVar              eR    perl, e0.8
  val?            %28.9 = Force!<lazy>       !v    %28.8, e0.8   <lgl$->
  val?^ | miss    %28.10 = LdVar              eR    fixed, e0.8
  val?            %28.11 = Force!<lazy>       !v    %28.10, e0.8   <lgl$->
  val?^ | miss    %28.12 = LdVar              eR    useBytes, e0.8
  val?            %28.13 = Force!<lazy>       !v    %28.12, e0.8   <lgl$->
  val?^ | miss    %28.14 = LdVar              eR    invert, e0.8
  val?            %28.15 = Force!<lazy>       !v    %28.14, e0.8   <lgl$->
  val?            %28.16 = CallBuiltin        !     grep(%28.1, %28.3, %28.5, %28.7, %28.9, %28.11, %28.13, %28.15) e0.8
  void                    Return             l     %28.16
BB27   <- [40]
  (cls|spec|blt)  %27.0 = LdFun              !v    structure, e0.8
  fs              %27.1 = FrameState         R     0x55d00013d0a0+652: [%27.0], env=e0.8
  void                    Deopt              !v    %27.1, DeadCall@0x55d0001dd310[Call#8], %27.0   !
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|str)+>
  void                    Return             l     %0.3

│ grep[0x55d000cf70b0]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
