
┌──────────────────────────────────────────────────────────────────────────────┐
│ readRDS[0x55fa0ccefb00]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1               │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
readRDS[0x55fa0ccefb00]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     file=%0.0, refhook(miss)=nil, parent=R_BaseNamespace, context 1
  val+            %0.2  = Force!<lazy>       !vr   %0.0,    <str$->
  lgl$#-          %0.3  = CallSafeBuiltin    wed   is.character(%0.2)    <lgl$->
  void                    Branch                   %0.3 -> BB2 (if true) | BB3 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, readRDS[0x55fa0ccefb00]_p1 (!refl), e0.1
  ct              %2.1  = PushContext        lCL   %2.0, "rb", gzfile(file, "rb"), function(description, open="", encoding=getOpt|..., e0.1
  val?^           %2.2  = CastType                 up %2.0
  env             e2.3  = MkEnv              l     description=%2.2, open="rb", encoding(miss)=missingArg, compression(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %2.4  = MkArg                    unboundValue, readRDS[0x55fa0ccefb00]_p4, e2.3
  val?^ | miss    %2.5  = CastType                 up %2.4
  void                    StArg              lW    encoding, %2.5, e2.3
  void                    StArg              lW    compression, 6, e2.3
  val?            %2.8  = Force!<lazy>       !vr   %2.2,    <str$->
  val?            %2.9  = Force!<lazy>       !v    %2.5, e2.3   <str$->
  val?^ | miss    %2.10 = LdVar              eR    compression, e2.3
  val?            %2.11 = Force!<lazy>       !v    %2.10, e2.3   <real$->
  val?            %2.12 = CallBuiltin        !v    gzfile(%2.8, "rb", %2.9, %2.11) e2.3
  val?            %2.13 = PopContext         C     %2.12, %2.1   <int$>
  void                    StVar              lW    con, %2.13, e0.1
  (cls|spec|blt)  %2.15 = LdFun              !v    on.exit, <0x55fa0ad53270>, e0.1
  prom-           %2.16 = MkArg                    unboundValue, readRDS[0x55fa0ccefb00]_p2, e0.1
  val?            %2.17 = Call               !v    %2.15(%2.16) e0.1
  val?^ | miss    %2.18 = LdVar              eR    con, e0.1
  val?            %2.19 = Force!<value>      !v    %2.18, e0.1   <int$>
  val?^ | miss    %2.20 = LdVar              eR    refhook, e0.1
  val?            %2.21 = Force!<lazy>       !v    %2.20, e0.1   <nil->
  val?            %2.22 = CallBuiltin        !     unserializeFromConn(%2.19, %2.21) e0.1
  void                    Return             l     %2.22
BB3   <- [0]
  (cls|spec|blt)  %3.0  = LdFun              !v    inherits, R_BaseNamespace
  fs              %3.1  = FrameState         R     0x55fa0cc48450+107: [%3.0], env=e0.1
  void                    Deopt              !v    %3.1, DeadCall@0x55fa0c2d5c48[Call#1], %3.0
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    file, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     close, e0.0
  prom-           %0.2  = MkArg                    unboundValue, readRDS[0x55fa0ccefb00]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    con, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, <0x55fa0b031558>, e0.0
  val?            %0.2  = Call               !     %0.1("encoding") e0.0   <str$->
  void                    Return             l     %0.2

│ readRDS[0x55fa0ccefb00]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
