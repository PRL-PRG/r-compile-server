
┌──────────────────────────────────────────────────────────────────────────────┐
│ tryCatch[0x55fa0d1e79f0]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
tryCatch[0x55fa0d1e79f0]
BB0
  dots+           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     expr=%0.1, ...=%0.0, finally(miss)=missingArg, parent=R_BaseNamespace, context 1
  cls             %0.3  = MkCls                    tryCatchList, e0.2
  cls             %0.4  = MkCls                    tryCatchOne, e0.2
  *dots-          %0.5  = ExpandDots               %0.0
  void                    StVar              lW    tryCatchList, %0.3, e0.2
  void                    StVar              lW    tryCatchOne, %0.4, e0.2
  val?            %0.8  = NamedCall          !v    <blt list>(.xpandDotsTrigger=%0.5) e0.2   <vec$+>
  void                    StVar              lW    handlers, %0.8, e0.2
  lgl$#-          %0.10 = IsType                   %0.8 isA val?+
  val?^ | miss    %0.11 = LdVar              eR    names, e0.2
  lgl$#-          %0.12 = Identical                <blt names>, %0.11   <true>
  void                    Branch                   %0.12 -> BB25 (if true) | BB26 (if false)
BB25   <- [0]
  val             %25.0 = ChkMissing         e     %0.8
  void                    Branch                   %0.10 -> BB27 (if true) | BB28 (if false)
BB26   <- [0]
  void                    Nop                !     
  lgl$#-          %26.1 = %0.12
  dr              %26.2 = DeadBranchReached@0x55fa0b797fe0[Test#0]
  goto BB24
BB27   <- [25]
  val?+           %27.0 = CastType           d     dn %0.8   <vec$+>
  val+            %27.1 = CallSafeBuiltin    wed   names(%27.0)    <str$->
  void                    StVar              lW    classes, %27.1, e0.2
  val?^ | miss    %27.3 = LdVar              eR    parent.frame, e0.2
  lgl$#-          %27.4 = Identical                %27.3, function(n=1) <(rir::DispatchTable*)0x55fa0cbf|...
  void                    Branch                   %27.4 -> BB29 (if true) | BB30 (if false)
BB28   <- [25]
  void                    Nop                !     
  val?            %28.1 = %0.8
  dr              %28.2 = Typecheck@0x55fa0b797fe0[Type#1]
  goto BB24
BB24   <- [26, 28]
  val?^ | miss    %24.0 = Phi                      %26.1:BB26, %28.1:BB28
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %26.2:BB26, %28.2:BB28
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x55fa0cbf5d10+151: [], env=e0.2
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB29   <- [27]
  val?            %29.0 = StaticCall         !v    parent.frame[0x55fa0cec1950]() e0.2   <env->
  void                    StVar              lW    parentenv, %29.0, e0.2
  val?^ | miss    %29.2 = LdVar              eR    length, e0.2
  lgl$#-          %29.3 = Identical                <blt length>, %29.2   <true>
  void                    Branch                   %29.3 -> BB31 (if true) | BB32 (if false)
BB30   <- [27]
  fs              %30.0 = FrameState         R     0x55fa0cbf5d10+256: [], env=e0.2
  void                    Deopt              !v    %30.0, CallTarget@0x55fa0b797fe0[Call#3], %27.3   !
BB31   <- [29]
  val?^ | miss    %31.0 = LdVar              eR    classes, e0.2
  lgl$#-          %31.1 = IsType                   %31.0 isA val?~- | miss
  void                    Branch                   %31.1 -> BB33 (if true) | BB34 (if false)
BB32   <- [29]
  void                    Nop                !     
  lgl$#-          %32.1 = %29.3
  dr              %32.2 = DeadBranchReached@0x55fa0b797fe0[Test#1]
  goto BB5
BB33   <- [31]
  val?~- | miss   %33.0 = CastType           d     dn %31.0
  val?-           %33.1 = Force!<value>            %33.0,    <str$->
  (int|real)$-    %33.2 = CallSafeBuiltin    wed   length(%33.1)    <int$->
  lgl$#-          %33.3 = IsType                   %33.2 isA int$-
  void                    Branch                   %33.3 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  void                    Nop                !     
  val?^ | miss    %34.1 = %31.0
  dr              %34.2 = Typecheck@0x55fa0b797fe0[Type#7]
  goto BB5
BB5   <- [32, 34]
  val?^ | miss    %5.0  = Phi                      %32.1:BB32, %34.1:BB34
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %32.2:BB32, %34.2:BB34
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55fa0cbf5d10+297: [], env=e0.2
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB35   <- [33]
  int$-           %35.0 = CastType           d     dn %33.2
  val?^ | miss    %35.1 = LdVar              eR    handlers, e0.2
  lgl$#-          %35.2 = IsType                   %35.1 isA val?~+ | miss
  void                    Branch                   %35.2 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  (int|real)$-    %36.1 = %33.2
  dr              %36.2 = Typecheck@0x55fa0b797fe0[Type#8]
  goto BB7
BB37   <- [35]
  val?~+ | miss   %37.0 = CastType           d     dn %35.1
  val?+           %37.1 = Force!<value>            %37.0,    <vec$+>
  (int|real)$-    %37.2 = CallSafeBuiltin    wed   length(%37.1)    <int$->
  lgl$#-          %37.3 = IsType                   %37.2 isA int$-
  void                    Branch                   %37.3 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  void                    Nop                !     
  val?^ | miss    %38.1 = %35.1
  dr              %38.2 = Typecheck@0x55fa0b797fe0[Type#10]
  goto BB7
BB7   <- [36, 38]
  val?^ | miss    %7.0  = Phi                      %36.1:BB36, %38.1:BB38
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %36.2:BB36, %38.2:BB38
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55fa0cbf5d10+388: [%33.2], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB39   <- [37]
  int$-           %39.0 = CastType           d     dn %37.2
  lgl$-           %39.1 = Neq                d     %35.0, %39.0, elided   <lgl$->
  lgl$#-          %39.2 = CheckTrueFalse     e     %39.1
  void                    Branch                   %39.2 -> BB23 (if true) | BB11 (if false)
BB40   <- [37]
  void                    Nop                !     
  (int|real)$-    %40.1 = %37.2
  dr              %40.2 = Typecheck@0x55fa0b797fe0[Type#11]
  goto BB9
BB23   <- [39]
  (cls|spec|blt)  %23.0 = LdFun              !v    stop, e0.2
  fs              %23.1 = FrameState         R     0x55fa0cbf5d10+511: [%23.0], env=e0.2
  void                    Deopt              !v    %23.1, DeadCall@0x55fa0b797fe0[Call#6], %23.0   !
BB11   <- [39]
  val?^ | miss    %11.0 = LdVar              eR    tryCatchList, e0.2
  lgl$#-          %11.1 = Identical                %11.0, %0.3
  void                    Branch                   %11.1 -> BB41 (if true) | BB42 (if false)
BB9   <- [40, 42]
  val?^ | miss    %9.0  = Phi                      %40.1:BB40, %42.1:BB42
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %40.2:BB40, %42.2:BB42
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55fa0cbf5d10+484: [%35.0, %37.2], env=e0.2
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB41   <- [11]
  prom-           %41.0 = MkArg                    unboundValue, tryCatch[0x55fa0d1e79f0]_p0, e0.2
  prom-           %41.1 = MkArg                    unboundValue, tryCatch[0x55fa0d1e79f0]_p1, e0.2
  prom-           %41.2 = MkArg                    unboundValue, tryCatch[0x55fa0d1e79f0]_p2 (!refl), e0.2
  prom-           %41.3 = MkArg                    unboundValue, tryCatch[0x55fa0d1e79f0]_p3, e0.2
  ct              %41.4 = PushContext        lCL   %41.0, %41.1, %41.2, %41.3, tryCatchList(expr, classes, parentenv, handlers), %0.3, e0.2
  val?^           %41.5 = CastType                 up %41.3
  val?^           %41.6 = CastType                 up %41.2
  val?^           %41.7 = CastType                 up %41.1
  val?^           %41.8 = CastType                 up %41.0
  env             e41.9 = MkEnv              l     expr=%41.8, names=%41.7, parentenv=%41.6, handlers=%41.5, parent=e0.2, context 1
  val?            %41.10 = Force!<lazy>       !vL   %41.7, e41.9   <str$->
  lgl$#-          %41.11 = IsType                   %41.10 isA val?-
  void                    Branch                   %41.11 -> BB43 (if true) | BB44 (if false)
BB42   <- [11]
  void                    Nop                !     
  val?^ | miss    %42.1 = %11.0
  dr              %42.2 = CallTarget@0x55fa0b797fe0[Call#7]
  goto BB9
BB43   <- [41]
  val?-           %43.0 = CastType           d     dn %41.10   <str$->
  (int|real)$-    %43.1 = CallSafeBuiltin    wed   length(%43.0)    <int$->
  lgl$#-          %43.2 = IsType                   %43.1 isA int$-
  void                    Branch                   %43.2 -> BB45 (if true) | BB46 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x55fa0cbf5d10+586: [], env=e0.2
  fs              %44.1 = FrameState         R     0x55fa0cbf0c60+69: [<blt length>, %41.10], env=e41.9, next=%44.0
  void                    Deopt              !v    %44.1, Typecheck@0x55fa0cbf15c0[Type#1], %41.10   !
BB45   <- [43]
  int$-           %45.0 = CastType           d     dn %43.1
  void                    StVar              lW    nh, %45.0, e41.9
  lgl$-           %45.2 = Gt                 d     %45.0, 1L, elided   <lgl$->
  lgl$#-          %45.3 = CheckTrueFalse     e     %45.2
  void                    Branch                   %45.3 -> BB22 (if true) | BB18 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x55fa0cbf5d10+586: [], env=e0.2
  fs              %46.1 = FrameState         R     0x55fa0cbf0c60+91: [%43.1], env=e41.9, next=%46.0
  void                    Deopt              !v    %46.1, Typecheck@0x55fa0cbf15c0[Type#2], %43.1   !
BB22   <- [45]
  fs              %22.0 = FrameState         R     0x55fa0cbf5d10+586: [], env=e0.2
  (cls|spec|blt)  %22.1 = LdFun              !v    tryCatchOne, e0.2
  fs              %22.2 = FrameState         R     0x55fa0cbf0c60+250: [%22.1], env=e41.9, next=%22.0
  void                    Deopt              !v    %22.2, DeadCall@0x55fa0cbf15c0[Call#2], %22.1   !
BB18   <- [45]
  void                    Visible            v     
  lgl$-           %18.1 = Eq                 vd    %45.0, 1L, elided   <lgl$->
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB21 (if true) | BB19 (if false)
BB21   <- [18]
  val?^ | miss    %21.0 = LdVar              eR    tryCatchOne, e41.9
  (cls|spec|blt)  %21.1 = CastType                 dn %21.0
  val+            %21.2 = CallSafeBuiltin          bodyCode(%21.1) 
  lgl$#-          %21.3 = Identical                %21.2, <(rir::DispatchTable*)0x55fa0cbd8c10>
  void                    Branch                   %21.3 -> BB47 (if true) | BB48 (if false)
BB19   <- [18]
  void                    Visible            v     
  val?            %19.1 = Force!             !L    %41.8, e41.9   <val?_>
  val?            %19.2 = %19.1
  goto BB20
BB47   <- [21]
  val?            %47.0 = Force!             d     %21.0, 
  prom-           %47.1 = MkArg                    unboundValue, tryCatch[0x55fa0d1e79f0]_p4, e41.9
  prom-           %47.2 = MkArg                    unboundValue, tryCatch[0x55fa0d1e79f0]_p5, e41.9
  prom-           %47.3 = MkArg                    unboundValue, tryCatch[0x55fa0d1e79f0]_p6, e41.9
  prom-           %47.4 = MkArg                    unboundValue, tryCatch[0x55fa0d1e79f0]_p7, e41.9
  (cls|spec|blt)  %47.5 = ChkFunction        e     %47.0
  val?            %47.6 = StaticCall         !     tryCatchOne[0x55fa0d192aa0](%47.1, %47.2, %47.3, %47.4) from %47.5 e41.9   <str+>
  val?            %47.7 = %47.6
  goto BB20
BB48   <- [21]
  fs              %48.0 = FrameState         R     0x55fa0cbf5d10+586: [], env=e0.2
  fs              %48.1 = FrameState         R     0x55fa0cbf0c60+105: [], env=e41.9, next=%48.0
  void                    Deopt              !v    %48.1, CallTarget@0x55fa0cbf15c0[Call#1], %21.2   !
BB20   <- [19, 47]
  val?            %20.0 = Phi                      %19.2:BB19, %47.7:BB47
  val?            %20.1 = %20.0
  val?            %20.2 = PopContext         C     %20.1, %41.4   <str+>
  void                    Return             l     %20.2
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classes, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parentenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handlers, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    names, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parentenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handlers, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <vec$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <cls->
  void                    Visible            v     
  void                    Return             l     %0.3

│ tryCatch[0x55fa0d1e79f0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
