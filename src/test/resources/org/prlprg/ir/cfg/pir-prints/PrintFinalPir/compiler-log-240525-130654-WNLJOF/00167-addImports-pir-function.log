
┌──────────────────────────────────────────────────────────────────────────────┐
│ addImports[0x55fa0cf9fe50]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
addImports[0x55fa0cf9fe50]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    structure, ?
  lgl$#-          %0.4  = Identical                %0.3, function(.Data, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %0.4 -> BB72 (if true) | BB73 (if false)
BB72   <- [0]
  env             e72.0 = MkEnv              l     ns=%0.2, from=%0.1, what=%0.0, parent=?, context 1
  prom-           %72.1 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p0, e72.0
  prom-           %72.2 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p2, e72.0
  dots-           %72.3 = DotsList           l     names=%72.2
  ct              %72.4 = PushContext        lCL   %72.1, %72.3, structure(list(what), names=getNamespaceName(f|..., function(.Data, ...) <(rir::DispatchTable*)0x5|..., e72.0
  val?^           %72.5 = CastType                 up %72.1
  env             e72.6 = MkEnv              l     .Data=%72.5, ...=%72.3, parent=R_BaseNamespace, context 1
  val?            %72.7 = Force!<lazy>       !vr   %72.5,    <(str|vec)+>
  lgl$-           %72.8 = Is                       %72.7, NULL
  lgl$#-          %72.9 = CheckTrueFalse     e     %72.8
  void                    Branch                   %72.9 -> BB70 (if true) | BB3 (if false)
BB73   <- [0]
  env             e73.0 = (MkEnv)            l     ns=%0.2, from=%0.1, what=%0.0, parent=?, context 1
  fs              %73.1 = FrameState         R     0x55fa0d769220+0: [], env=e73.0
  void                    Deopt              !v    %73.1, CallTarget@0x55fa0d1a7500[Call#0], %0.3
BB70   <- [72]
  fs              %70.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  (cls|spec|blt)  %70.1 = LdFun              !v    warning, R_BaseNamespace
  fs              %70.2 = FrameState         R     0x55fa0cbd97c0+35: [%70.1], env=e72.6, next=%70.0
  void                    Deopt              !v    %70.2, DeadCall@0x55fa0c33ba08[Call#0], %70.1   !
BB3   <- [72]
  val?            %3.0  = NamedCall          !v    <blt list>(names=%72.2) e72.6   <vec+>
  void                    StVar              lW    attrib, %3.0, e72.6
  lgl$#-          %3.2  = IsType                   %3.0 isA val?+
  val?^ | miss    %3.3  = LdVar              eR    length, e72.6
  lgl$#-          %3.4  = Identical                <blt length>, %3.3   <true>
  void                    Branch                   %3.4 -> BB74 (if true) | BB75 (if false)
BB74   <- [3]
  val             %74.0 = ChkMissing         e     %3.0
  void                    Branch                   %3.2 -> BB76 (if true) | BB77 (if false)
BB75   <- [3]
  void                    Nop                !     
  lgl$#-          %75.1 = %3.4
  dr              %75.2 = DeadBranchReached@0x55fa0c33ba08[Test#0]
  goto BB4
BB76   <- [74]
  val?+           %76.0 = CastType           d     dn %3.0   <vec+>
  (int|real)$-    %76.1 = CallSafeBuiltin    wed   length(%76.0)    <int$->
  lgl$#-          %76.2 = IsType                   %76.1 isA int$-
  void                    Branch                   %76.2 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  void                    Nop                !     
  val?            %77.1 = %3.0
  dr              %77.2 = Typecheck@0x55fa0c33ba08[Type#1]
  goto BB4
BB4   <- [75, 77]
  val?^ | miss    %4.0  = Phi                      %75.1:BB75, %77.1:BB77
  val?^ | miss    %4.1  = %4.0
  dr              %4.2  = Phi                      %75.2:BB75, %77.2:BB77
  dr              %4.3  = %4.2
  fs              %4.4  = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %4.5  = FrameState         R     0x55fa0cbd97c0+113: [], env=e72.6, next=%4.4
  void                    Deopt              !v    %4.5, %4.3, %4.1   !
BB78   <- [76]
  int$-           %78.0 = CastType           d     dn %76.1
  lgl$#-          %78.1 = CheckTrueFalse     e     %78.0
  void                    Branch                   %78.1 -> BB45 (if true) | BB8 (if false)
BB79   <- [76]
  void                    Nop                !     
  (int|real)$-    %79.1 = %76.1
  dr              %79.2 = Typecheck@0x55fa0c33ba08[Type#4]
  goto BB6
BB45   <- [78]
  val?^ | miss    %45.0 = LdVar              eR    c, e72.6
  lgl$#-          %45.1 = Identical                <blt c>, %45.0   <true>
  void                    Branch                   %45.1 -> BB80 (if true) | BB81 (if false)
BB8   <- [78]
  void                    Nop                !     
  goto BB9
BB6   <- [79, 81]
  val?^ | miss    %6.0  = Phi                      %79.1:BB79, %81.1:BB81
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %79.2:BB79, %81.2:BB81
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %6.5  = FrameState         R     0x55fa0cbd97c0+204: [%76.1], env=e72.6, next=%6.4
  void                    Deopt              !v    %6.5, %6.3, %6.1   !
BB80   <- [45]
  str-            %80.0 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %80.0, e72.6
  val?^ | miss    %80.2 = LdVar              eR    names, e72.6
  lgl$#-          %80.3 = Identical                <blt names>, %80.2   <true>
  void                    Branch                   %80.3 -> BB82 (if true) | BB83 (if false)
BB81   <- [45]
  void                    Nop                !     
  lgl$#-          %81.1 = %45.1
  dr              %81.2 = DeadBranchReached@0x55fa0c33ba08[Test#1]
  goto BB6
BB9   <- [8, 130]
  val?^ | miss    %9.0  = LdVar              eR    .Data, e72.6
  val?            %9.1  = Force!<value>      !v    %9.0, e72.6   <(str|vec)>
  val?            %9.2  = PopContext         C     %9.1, %72.4   <vec$+>
  void                    StVar              lW    imp, %9.2, e72.0
  val?^ | miss    %9.4  = LdVar              eR    getNamespaceImports, e72.0
  lgl$#-          %9.5  = Identical                %9.4, function(ns) <(rir::DispatchTable*)0x55fa0ce98|...
  void                    Branch                   %9.5 -> BB84 (if true) | BB85 (if false)
BB82   <- [80]
  val+            %82.0 = CallSafeBuiltin    wed   names(%76.0)    <str->
  void                    StVar              lW    attrnames, %82.0, e72.6
  val?^ | miss    %82.2 = LdVar              eR    match, e72.6
  lgl$#-          %82.3 = Identical                %82.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %82.3 -> BB86 (if true) | BB87 (if false)
BB83   <- [80]
  fs              %83.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %83.1 = FrameState         R     0x55fa0cbd97c0+361: [], env=e72.6, next=%83.0
  void                    Deopt              !v    %83.1, DeadBranchReached@0x55fa0c33ba08[Test#2], %80.3   !
BB84   <- [9]
  prom-           %84.0 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p4, e72.0
  val?            %84.1 = StaticCall         !v    getNamespaceImports[0x55fa0cd7ab40](%84.0) e72.0   <vec+>
  void                    StVar              lW    imports, %84.1, e72.0
  val?^ | miss    %84.3 = LdVar              eR    setNamespaceInfo, e72.0
  lgl$#-          %84.4 = Identical                %84.3, function(ns, which, val) <(rir::DispatchTable*|...
  void                    Branch                   %84.4 -> BB88 (if true) | BB89 (if false)
BB85   <- [9]
  fs              %85.0 = FrameState         R     0x55fa0d769220+59: [], env=e72.0
  void                    Deopt              !v    %85.0, CallTarget@0x55fa0d1a7500[Call#3], %9.4   !
BB86   <- [82]
  val+            %86.0 = CallSafeBuiltin    wed   match(%82.0, %80.0, NA, nil)    <int->
  void                    StVar              lW    m, %86.0, e72.6
  lgl$#-          %86.2 = IsType                   %86.0 isA int-
  val?^ | miss    %86.3 = LdVar              eR    is.na, e72.6
  lgl$#-          %86.4 = Identical                <blt is.na>, %86.3   <true>
  void                    Branch                   %86.4 -> BB92 (if true) | BB93 (if false)
BB87   <- [82]
  fs              %87.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %87.1 = FrameState         R     0x55fa0cbd97c0+466: [], env=e72.6, next=%87.0
  void                    Deopt              !v    %87.1, CallTarget@0x55fa0c33ba08[Call#5], %82.2   !
BB88   <- [84]
  prom-           %88.0 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p5, e72.0
  prom-           %88.1 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p6, e72.0
  ct              %88.2 = PushContext        lCL   %88.0, "imports", %88.1, setNamespaceInfo(ns, "imports", c(imports, imp)), function(ns, which, val) <(rir::DispatchTable*|..., e72.0
  val?^           %88.3 = CastType                 up %88.1
  val?^           %88.4 = CastType                 up %88.0
  env             e88.5 = MkEnv              l     ns=%88.4, which="imports", val=%88.3, parent=R_BaseNamespace, context 1
  prom-           %88.6 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p9, e88.5
  ct              %88.7 = PushContext        lCL   %88.6, false, asNamespace(ns, base.OK=FALSE), function(ns, base.OK=TRUE) <(rir::DispatchTabl|..., e88.5
  val?^           %88.8 = CastType                 up %88.6
  env             e88.9 = MkEnv              l     ns=%88.8, base.OK=false, parent=R_BaseNamespace, context 1
  val?            %88.10 = Force!<lazy>       !vL   %88.8, e88.9   <(str|env)+>
  lgl$#-          %88.11 = IsType                   %88.10 isA val?+
  void                    Branch                   %88.11 -> BB90 (if true) | BB91 (if false)
BB89   <- [84]
  fs              %89.0 = FrameState         R     0x55fa0d769220+105: [], env=e72.0
  void                    Deopt              !v    %89.0, CallTarget@0x55fa0d1a7500[Call#4], %84.3   !
BB92   <- [86]
  void                    Branch                   %86.2 -> BB94 (if true) | BB95 (if false)
BB93   <- [86]
  void                    Nop                !     
  lgl$#-          %93.1 = %86.4
  dr              %93.2 = DeadBranchReached@0x55fa0c33ba08[Test#3]
  goto BB50
BB90   <- [88]
  val?+           %90.0 = CastType           d     dn %88.10   <(str|env)+>
  lgl$#-          %90.1 = CallSafeBuiltin    wed   is.character(%90.0)    <lgl$->
  void                    Branch                   %90.1 -> BB44 (if true) | BB16 (if false)
BB91   <- [88]
  fs              %91.0 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %91.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e88.5, next=%91.0
  fs              %91.2 = FrameState         R     0x55fa0cea7590+69: [<blt is.character>, %88.10], env=e88.9, next=%91.1
  void                    Deopt              !v    %91.2, Typecheck@0x55fa0c195198[Type#1], %88.10   !
BB94   <- [92]
  int-            %94.0 = CastType           d     dn %86.0
  lgl-            %94.1 = CallSafeBuiltin    wed   is.na(%94.0)    <lgl->
  lgl-            %94.2 = Not                wed   %94.1, elided   <lgl->
  void                    StVar              lW    ok, %94.2, e72.6
  val?^ | miss    %94.4 = LdVar              eR    any, e72.6
  lgl$#-          %94.5 = Identical                <blt any>, %94.4   <true>
  void                    Branch                   %94.5 -> BB96 (if true) | BB97 (if false)
BB95   <- [92]
  void                    Nop                !     
  val+            %95.1 = %86.0
  dr              %95.2 = Typecheck@0x55fa0c33ba08[Type#11]
  goto BB50
BB50   <- [93, 95]
  val?^ | miss    %50.0 = Phi                      %93.1:BB93, %95.1:BB95
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %93.2:BB93, %95.2:BB95
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %50.5 = FrameState         R     0x55fa0cbd97c0+517: [], env=e72.6, next=%50.4
  void                    Deopt              !v    %50.5, %50.3, %50.1   !
BB44   <- [90]
  void                    Nop                !     
  lgl$#-          %44.1 = %90.1
  goto BB17
BB16   <- [90]
  lgl$#-          %16.0 = CallSafeBuiltin    wed   is.symbol(%90.0)    <lgl$->
  lgl$-           %16.1 = LOr                      %90.1, %16.0
  lgl$-           %16.2 = %16.1
  goto BB17
BB96   <- [94]
  val?            %96.0 = CallBuiltin        !v    any(%94.2) e72.6   <lgl$->
  lgl$#-          %96.1 = IsType                   %96.0 isA lgl$-
  void                    Branch                   %96.1 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  fs              %97.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %97.1 = FrameState         R     0x55fa0cbd97c0+623: [], env=e72.6, next=%97.0
  void                    Deopt              !v    %97.1, DeadBranchReached@0x55fa0c33ba08[Test#4], %94.5   !
BB17   <- [44, 16]
  lgl$-           %17.0 = Phi                      %16.2:BB16, %44.1:BB44
  lgl$-           %17.1 = %17.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB41 (if true) | BB18 (if false)
BB98   <- [96]
  lgl$-           %98.0 = CastType           d     dn %96.0
  lgl$#-          %98.1 = CheckTrueFalse     e     %98.0
  void                    Branch                   %98.1 -> BB67 (if true) | BB56 (if false)
BB99   <- [96]
  void                    Nop                !     
  val?            %99.1 = %96.0
  dr              %99.2 = Typecheck@0x55fa0c33ba08[Type#17]
  goto BB54
BB41   <- [17]
  prom-           %41.0 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p16, e88.9
  ct              %41.1 = PushContext        lCL   %41.0, getNamespace(ns), function(name) <(rir::DispatchTable*)0x55fa0cc|..., e88.9
  val?^           %41.2 = CastType                 up %41.0
  env             e41.3 = MkEnv              l     name=%41.2, parent=R_BaseNamespace, context 1
  val?            %41.4 = Force!<lazy>       !vL   %41.2, e41.3   <str$+>
  val?            %41.5 = CallBuiltin        !v    getRegisteredNamespace(%41.4) e41.3   <env->
  lgl$-           %41.6 = Is                       %41.5, NULL
  void                    StVar              lW    ns, %41.5, e41.3
  val             %41.8 = ChkMissing         e     %41.5
  lgl$-           %41.9 = Not                d     %41.6, elided
  lgl$#-          %41.10 = CheckTrueFalse     e     %41.9
  void                    Branch                   %41.10 -> BB43 (if true) | BB42 (if false)
BB18   <- [17]
  void                    Nop                !     
  goto BB19
BB67   <- [98]
  val?^ | miss    %67.0 = LdVar              eR    c, e72.6
  lgl$#-          %67.1 = Identical                <blt c>, %67.0   <@?>
  void                    Branch                   %67.1 -> BB69 (if true) | BB68 (if false)
BB56   <- [98]
  val?^ | miss    %56.0 = LdVar              eR    any, e72.6
  lgl$#-          %56.1 = Identical                <blt any>, %56.0   <true>
  void                    Branch                   %56.1 -> BB102 (if true) | BB103 (if false)
BB54   <- [99, 103]
  val?^ | miss    %54.0 = Phi                      %99.1:BB99, %103.1:BB103
  val?^ | miss    %54.1 = %54.0
  dr              %54.2 = Phi                      %99.2:BB99, %103.2:BB103
  dr              %54.3 = %54.2
  fs              %54.4 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %54.5 = FrameState         R     0x55fa0cbd97c0+714: [%96.0], env=e72.6, next=%54.4
  void                    Deopt              !v    %54.5, %54.3, %54.1   !
BB43   <- [41]
  val?            %43.0 = PopContext         C     %41.5, %41.1   <env->
  void                    StVar              lW    ns, %43.0, e88.9
  goto BB19
BB42   <- [41]
  fs              %42.0 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %42.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e88.5, next=%42.0
  fs              %42.2 = FrameState         R     0x55fa0cea7590+244: [], env=e88.9, next=%42.1
  (cls|spec|blt)  %42.3 = LdFun              !v    loadNamespace, e41.3
  fs              %42.4 = FrameState         R     0x55fa0dee70c0+67: [%42.3], env=e41.3, next=%42.2
  void                    Deopt              !v    %42.4, DeadCall@0x55fa0d3377a8[Call#0], %42.3   !
BB19   <- [18, 43]
  val?^ | miss    %19.0 = LdVar              eR    isNamespace, e88.9
  lgl$#-          %19.1 = Identical                %19.0, function(ns) <(rir::DispatchTable*)0x55fa0ce9b|...
  void                    Branch                   %19.1 -> BB100 (if true) | BB101 (if false)
BB69   <- [67]
  fs              %69.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  str-            %69.1 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %69.1, e72.6
  (cls|spec|blt)  %69.3 = LdFun              !v    <-, e72.6
  fs              %69.4 = FrameState         R     0x55fa0cbd97c0+876: [%69.3], env=e72.6, next=%69.0
  void                    Deopt              !v    %69.4, DeadCall@0x55fa0c33ba08[Call#9], %69.3   !
BB68   <- [67]
  fs              %68.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  (cls|spec|blt)  %68.1 = LdFun              !v    c, e72.6
  fs              %68.2 = FrameState         R     0x55fa0cbd97c0+758: [%68.1], env=e72.6, next=%68.0
  void                    Deopt              !v    %68.2, DeadCall@0x55fa0c33ba08[Call#8], %68.1   !
BB102   <- [56]
  (cls|spec|blt)  %102.0 = LdFun              !v    [[, <0x55fa0ad53c48>, e72.6
  prom-           %102.1 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p14, e72.6
  val?            %102.2 = NamedCall          !v    %102.0(%102.1, "class", exact=true) e72.6   <(nil|str)->
  lgl$#-          %102.3 = IsType                   %102.2 isA val?-
  void                    Branch                   %102.3 -> BB110 (if true) | BB111 (if false)
BB103   <- [56]
  void                    Nop                !     
  lgl$#-          %103.1 = %56.1
  dr              %103.2 = DeadBranchReached@0x55fa0c33ba08[Test#10]
  goto BB54
BB100   <- [19]
  prom-           %100.0 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p17, e88.9
  ct              %100.1 = PushContext        lCL   %100.0, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x55fa0ce9b|..., e88.9
  val?^           %100.2 = CastType                 up %100.0
  env             e100.3 = MkEnv              l     ns=%100.2, parent=R_BaseNamespace, context 1
  val?            %100.4 = Force!<lazy>       !vL   %100.2, e100.3   <env->
  val?            %100.5 = CallBuiltin        !v    isNamespaceEnv(%100.4) e100.3
  val?            %100.6 = PopContext         C     %100.5, %100.1   <lgl$->
  lgl$#-          %100.7 = IsType                   %100.6 isA lgl$-
  void                    Branch                   %100.7 -> BB104 (if true) | BB105 (if false)
BB101   <- [19]
  fs              %101.0 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %101.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e88.5, next=%101.0
  fs              %101.2 = FrameState         R     0x55fa0cea7590+258: [], env=e88.9, next=%101.1
  void                    Deopt              !v    %101.2, CallTarget@0x55fa0c195198[Call#3], %19.0   !
BB110   <- [102]
  val?-           %110.0 = CastType           d     dn %102.2   <(nil|str)->
  lgl-            %110.1 = Eq                 wed   %110.0, "factor", elided   <lgl->
  val?            %110.2 = CallBuiltin        !v    any(%110.1) e72.6   <lgl$->
  lgl$#-          %110.3 = IsType                   %110.2 isA lgl$-
  void                    Branch                   %110.3 -> BB116 (if true) | BB117 (if false)
BB111   <- [102]
  fs              %111.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %111.1 = FrameState         R     0x55fa0cbd97c0+1023: [<blt any>, %102.2], env=e72.6, next=%111.0
  void                    Deopt              !v    %111.1, Typecheck@0x55fa0c33ba08[Type#38], %102.2   !
BB104   <- [100]
  lgl$-           %104.0 = CastType           d     dn %100.6
  lgl$-           %104.1 = Not                d     %104.0, elided
  lgl$#-          %104.2 = CheckTrueFalse     e     %104.1
  void                    Branch                   %104.2 -> BB40 (if true) | BB24 (if false)
BB105   <- [100]
  fs              %105.0 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %105.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e88.5, next=%105.0
  fs              %105.2 = FrameState         R     0x55fa0cea7590+290: [%100.6], env=e88.9, next=%105.1
  void                    Deopt              !v    %105.2, Typecheck@0x55fa0c195198[Type#9], %100.6   !
BB116   <- [110]
  lgl$-           %116.0 = CastType           d     dn %110.2
  lgl$-           %116.1 = AsLogical                %116.0
  lgl$#-          %116.2 = Identical                %116.1, false
  void                    Branch                   %116.2 -> BB62 (if true) | BB61 (if false)
BB117   <- [110]
  void                    Nop                !     
  val?            %117.1 = %110.2
  dr              %117.2 = Typecheck@0x55fa0c33ba08[Type#40]
  goto BB59
BB40   <- [104]
  fs              %40.0 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %40.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e88.5, next=%40.0
  (cls|spec|blt)  %40.2 = LdFun              !v    stop, e88.9
  fs              %40.3 = FrameState         R     0x55fa0cea7590+435: [%40.2], env=e88.9, next=%40.1
  void                    Deopt              !v    %40.3, DeadCall@0x55fa0c195198[Call#6], %40.2   !
BB24   <- [104]
  val?^ | miss    %24.0 = LdVar              eR    base.OK, e88.9
  val?            %24.1 = Force!<lazy>       !v    %24.0, e88.9   <lgl$->
  lgl$#-          %24.2 = IsType                   %24.1 isA lgl$-
  void                    Branch                   %24.2 -> BB106 (if true) | BB107 (if false)
BB62   <- [116]
  lgl$#-          %62.0 = CheckTrueFalse     e     %116.1
  void                    Branch                   %62.0 -> BB66 (if true) | BB63 (if false)
BB61   <- [116]
  fs              %61.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  (cls|spec|blt)  %61.1 = LdFun              !v    typeof, e72.6
  fs              %61.2 = FrameState         R     0x55fa0cbd97c0+1074: [%116.1, %61.1], env=e72.6, next=%61.0
  void                    Deopt              !v    %61.2, DeadCall@0x55fa0c33ba08[Call#14], %61.1   !
BB59   <- [117, 121, 125]
  val?^ | miss    %59.0 = Phi                      %117.1:BB117, %121.1:BB121, %125.1:BB125
  val?^ | miss    %59.1 = %59.0
  dr              %59.2 = Phi                      %117.2:BB117, %121.2:BB121, %125.2:BB125
  dr              %59.3 = %59.2
  fs              %59.4 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %59.5 = FrameState         R     0x55fa0cbd97c0+1057: [%110.2], env=e72.6, next=%59.4
  void                    Deopt              !v    %59.5, %59.3, %59.1   !
BB106   <- [24]
  lgl$-           %106.0 = CastType           d     dn %24.1
  lgl$-           %106.1 = Not                d     %106.0, elided
  lgl$-           %106.2 = AsLogical                %106.1
  lgl$#-          %106.3 = Identical                %106.2, false
  void                    Branch                   %106.3 -> BB39 (if true) | BB27 (if false)
BB107   <- [24]
  void                    Nop                !     
  val?            %107.1 = %24.1
  dr              %107.2 = Typecheck@0x55fa0c195198[Type#10]
  goto BB25
BB66   <- [62]
  fs              %66.0 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  (cls|spec|blt)  %66.1 = LdFun              !v    storage.mode<-, e72.6
  fs              %66.2 = FrameState         R     0x55fa0cbd97c0+1142: ["integer", %66.1], env=e72.6, next=%66.0
  void                    Deopt              !v    %66.2, DeadCall@0x55fa0c33ba08[Call#15], %66.1   !
BB63   <- [62]
  val?^ | miss    %63.0 = LdVar              eR    c, e72.6
  lgl$#-          %63.1 = Identical                <blt c>, %63.0   <true>
  void                    Branch                   %63.1 -> BB120 (if true) | BB121 (if false)
BB39   <- [106]
  void                    Nop                !     
  lgl$-           %39.1 = %106.2
  goto BB30
BB27   <- [106]
  val?^ | miss    %27.0 = LdVar              eR    isBaseNamespace, e88.9
  lgl$#-          %27.1 = Identical                %27.0, function(ns) <(rir::DispatchTable*)0x55fa0d01a|...
  void                    Branch                   %27.1 -> BB108 (if true) | BB109 (if false)
BB25   <- [107, 109]
  val?^ | miss    %25.0 = Phi                      %107.1:BB107, %109.1:BB109
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %107.2:BB107, %109.2:BB109
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %25.5 = FrameState         R     0x55fa0d48aa10+45: [], env=e88.5, next=%25.4
  fs              %25.6 = FrameState         R     0x55fa0cea7590+311: [%24.1], env=e88.9, next=%25.5
  void                    Deopt              !v    %25.6, %25.3, %25.1   !
BB120   <- [63]
  val?^ | miss    %120.0 = LdVar              eR    attributes, e72.6
  lgl$#-          %120.1 = Identical                <blt attributes>, %120.0   <true>
  void                    Branch                   %120.1 -> BB124 (if true) | BB125 (if false)
BB121   <- [63]
  void                    Nop                !     
  lgl$#-          %121.1 = %63.1
  dr              %121.2 = DeadBranchReached@0x55fa0c33ba08[Test#11]
  goto BB59
BB30   <- [39, 112]
  lgl$-           %30.0 = Phi                      %112.3:BB112, %39.1:BB39
  lgl$-           %30.1 = %30.0
  lgl$#-          %30.2 = CheckTrueFalse     e     %30.1
  void                    Branch                   %30.2 -> BB38 (if true) | BB31 (if false)
BB108   <- [27]
  prom-           %108.0 = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p18, e88.9
  val?            %108.1 = StaticCall         !v    isBaseNamespace[0x55fa0d7d89e0](%108.0) e88.9   <lgl$->
  lgl$#-          %108.2 = IsType                   %108.1 isA lgl$-
  void                    Branch                   %108.2 -> BB112 (if true) | BB113 (if false)
BB109   <- [27]
  void                    Nop                !     
  val?^ | miss    %109.1 = %27.0
  dr              %109.2 = CallTarget@0x55fa0c195198[Call#4]
  goto BB25
BB124   <- [120]
  val?^ | miss    %124.0 = LdVar              eR    .Data, e72.6
  val?            %124.1 = Force!<wrapped>    !v    %124.0, e72.6   <(str|vec)+>
  val?            %124.2 = CallBuiltin        !v    attributes(%124.1) e72.6   <(nil|vec)+>
  lgl$#-          %124.3 = IsType                   %124.2 isA val?+
  val?^ | miss    %124.4 = LdVar              eR    attrib, e72.6
  lgl$#-          %124.5 = IsType                   %124.4 isA val?~+ | miss
  void                    Branch                   %124.5 -> BB128 (if true) | BB129 (if false)
BB125   <- [120]
  void                    Nop                !     
  lgl$#-          %125.1 = %120.1
  dr              %125.2 = DeadBranchReached@0x55fa0c33ba08[Test#12]
  goto BB59
BB38   <- [30]
  fs              %38.0 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %38.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e88.5, next=%38.0
  (cls|spec|blt)  %38.2 = LdFun              !v    stop, e88.9
  fs              %38.3 = FrameState         R     0x55fa0cea7590+393: [%38.2], env=e88.9, next=%38.1
  void                    Deopt              !v    %38.3, DeadCall@0x55fa0c195198[Call#5], %38.2   !
BB31   <- [30]
  val?^ | miss    %31.0 = LdVar              eR    ns, e88.9
  val?            %31.1 = Force!<wrapped>    !v    %31.0, e88.9   <env->
  val?            %31.2 = PopContext         C     %31.1, %88.7   <env->
  void                    StVar              lW    ns, %31.2, e88.5
  lgl$#-          %31.4 = IsType                   %31.2 isA val+   <true>
  lgl$#-          %31.5 = IsType                   %31.2 isA val?-
  val             %31.6 = ChkMissing         e     %31.2
  void                    Branch                   %31.4 -> BB114 (if true) | BB115 (if false)
BB112   <- [108]
  lgl$-           %112.0 = CastType           d     dn %108.1
  lgl$-           %112.1 = AsLogical                %112.0
  lgl$-           %112.2 = LAnd                     %106.2, %112.1
  lgl$-           %112.3 = %112.2
  goto BB30
BB113   <- [108]
  fs              %113.0 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %113.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e88.5, next=%113.0
  fs              %113.2 = FrameState         R     0x55fa0cea7590+356: [%106.2, %108.1], env=e88.9, next=%113.1
  void                    Deopt              !v    %113.2, Typecheck@0x55fa0c195198[Type#12], %108.1   !
BB128   <- [124]
  val?~+ | miss   %128.0 = CastType           d     dn %124.4
  val?+           %128.1 = Force!<value>            %128.0,    <vec+>
  void                    Branch                   %124.3 -> BB130 (if true) | BB131 (if false)
BB129   <- [124]
  void                    Nop                !     
  val?^ | miss    %129.1 = %124.4
  dr              %129.2 = Typecheck@0x55fa0c33ba08[Type#51]
  goto BB64
BB114   <- [31]
  void                    Branch                   %31.5 -> BB118 (if true) | BB119 (if false)
BB115   <- [31]
  void                    Nop                !     
  lgl$#-          %115.1 = %31.4
  dr              %115.2 = DeadBranchReached@0x55fa0cf7db20[Test#0]
  goto BB32
BB130   <- [128]
  val?+           %130.0 = CastType           d     dn %124.2   <(nil|vec)+>
  val+            %130.1 = CallSafeBuiltin    wed   c(%130.0, %128.1)    <vec+>
  (cls|spec|blt)  %130.2 = LdFun              !v    attributes<-, <0x55fa0ad54128>, e72.6
  val?^ | miss    %130.3 = LdVar              eR    .Data, e72.6
  val?            %130.4 = Force!<wrapped>    !v    %130.3, e72.6   <(str|vec)+>
  val?            %130.5 = NamedCall          !v    %130.2(%130.4, value=%130.1) e72.6
  void                    StVar              lW    .Data, %130.5, e72.6
  goto BB9
BB131   <- [128]
  void                    Nop                !     
  val?            %131.1 = %124.2
  dr              %131.2 = Typecheck@0x55fa0c33ba08[Type#50]
  goto BB64
BB64   <- [129, 131]
  val?^ | miss    %64.0 = Phi                      %129.1:BB129, %131.1:BB131
  val?^ | miss    %64.1 = %64.0
  dr              %64.2 = Phi                      %129.2:BB129, %131.2:BB131
  dr              %64.3 = %64.2
  fs              %64.4 = FrameState         R     0x55fa0d769220+45: [], env=e72.0
  fs              %64.5 = FrameState         R     0x55fa0cbd97c0+1361: [<blt c>, %124.2], env=e72.6, next=%64.4
  void                    Deopt              !v    %64.5, %64.3, %64.1   !
BB118   <- [114]
  val?-           %118.0 = CastType           d     dn %31.2   <env->
  val?            %118.1 = Extract2_1D        wed   %118.0, ".__NAMESPACE__.", elided   <env->
  void                    StVar              lW    info, %118.1, e88.5
  val?^ | miss    %118.3 = LdVar              eR    val, e88.5
  val?            %118.4 = Force!<lazy>       !v    %118.3, e88.5   <(vec|env)+>
  val?^ | miss    %118.5 = LdVar              eR    info !upd, e88.5
  lgl$#-          %118.6 = IsType                   %118.5 isA val?~- | miss
  void                    Branch                   %118.6 -> BB122 (if true) | BB123 (if false)
BB119   <- [114]
  void                    Nop                !     
  val?            %119.1 = %31.2
  dr              %119.2 = Typecheck@0x55fa0cf7db20[Type#1]
  goto BB32
BB32   <- [115, 119]
  val?^ | miss    %32.0 = Phi                      %115.1:BB115, %119.1:BB119
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %115.2:BB115, %119.2:BB119
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %32.5 = FrameState         R     0x55fa0d48aa10+59: [], env=e88.5, next=%32.4
  void                    Deopt              !v    %32.5, %32.3, %32.1   !
BB122   <- [118]
  val?~- | miss   %122.0 = CastType           d     dn %118.5
  val?-           %122.1 = Force!<value>            %122.0,    <env->
  val?^ | miss    %122.2 = LdVar              eR    which, e88.5
  val?            %122.3 = Force!<value>      !v    %122.2, e88.5   <str$->
  lgl$#-          %122.4 = IsType                   %122.3 isA val?-
  lgl$#-          %122.5 = IsType                   %118.4 isA val?+
  void                    Branch                   %122.5 -> BB126 (if true) | BB127 (if false)
BB123   <- [118]
  fs              %123.0 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %123.1 = FrameState         R     0x55fa0d48aa10+135: [%118.4], env=e88.5, next=%123.0
  void                    Deopt              !v    %123.1, Typecheck@0x55fa0cf7db20[Type#5], %118.5   !
BB126   <- [122]
  val?+           %126.0 = CastType           d     dn %118.4   <(vec|env)+>
  void                    Branch                   %122.4 -> BB132 (if true) | BB133 (if false)
BB127   <- [122]
  void                    Nop                !     
  val?            %127.1 = %118.4
  dr              %127.2 = Typecheck@0x55fa0cf7db20[Type#4]
  goto BB36
BB132   <- [126]
  val?-           %132.0 = CastType           d     dn %122.3   <str$->
  val?+           %132.1 = Subassign2_1D      wed   %126.0, %122.1, %132.0, elided
  void                    StVar              lW    info, %132.1, e88.5
  void                    Invisible          v     
  val?            %132.4 = PopContext         C     %126.0, %88.2   <vec+>
  void                    Return             l     %132.4
BB133   <- [126]
  void                    Nop                !     
  val?            %133.1 = %122.3
  dr              %133.2 = Typecheck@0x55fa0cf7db20[Type#6]
  goto BB36
BB36   <- [127, 133]
  val?^ | miss    %36.0 = Phi                      %127.1:BB127, %133.1:BB133
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %127.2:BB127, %133.2:BB133
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x55fa0d769220+147: [], env=e72.0
  fs              %36.5 = FrameState         R     0x55fa0d48aa10+165: [%118.4, %118.4, %122.1, %122.3], env=e88.5, next=%36.4
  void                    Deopt              !v    %36.5, %36.3, %36.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, <0x55fa0ad685c0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getNamespaceName, <0x55fa0bd165f8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55fa0ad54940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p7, e0.0
  prom-           %0.3  = MkArg                    unboundValue, addImports[0x55fa0cf9fe50]_p8, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    imports, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    imp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attrib, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ addImports[0x55fa0cf9fe50]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
