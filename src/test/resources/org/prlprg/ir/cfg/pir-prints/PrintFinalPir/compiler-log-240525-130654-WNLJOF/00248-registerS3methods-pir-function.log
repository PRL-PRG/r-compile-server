
┌──────────────────────────────────────────────────────────────────────────────┐
│ registerS3methods[0x55fa0cfa1590]                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2        │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
registerS3methods[0x55fa0cfa1590]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     info=%0.2, package=%0.1, env=%0.0, parent=R_BaseNamespace, context 1
  cls             %0.4  = MkCls                    assignWrapped, e0.3
  cls             %0.5  = MkCls                    .registerS3method, e0.3
  cls             %0.6  = MkCls                    registerS3methods>register_S3_method_delayed@4178, e0.3
  cls             %0.7  = MkCls                    registerS3methods>.fmt@3067, e0.3
  val?            %0.8  = Force!<lazy>       !v    %0.2, e0.3   <str_>
  lgl$#-          %0.9  = IsType                   %0.8 isA val?+
  void                    Branch                   %0.9 -> BB176 (if true) | BB177 (if false)
BB176   <- [0]
  val?+           %176.0 = CastType           d     dn %0.8   <str_>
  val+            %176.1 = CallSafeBuiltin    wed   dim(%176.0)    <int->
  (int|real)$-    %176.2 = CallSafeBuiltin    wed   length(%176.1)    <int$->
  lgl$#-          %176.3 = IsType                   %176.2 isA int$-
  void                    Branch                   %176.3 -> BB178 (if true) | BB179 (if false)
BB177   <- [0]
  prom-           %177.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p0, e0.3
  val?^           %177.1 = CastType                 up %177.0
  fs              %177.2 = FrameState         R     0x55fa0d4c14f0+32: [], env=e0.3
  env             e177.3 = (MkEnv)            l     d=unboundValue, x=%177.1, parent=R_BaseNamespace, context 0
  fs              %177.4 = FrameState         R     0x55fa0cf79690+129: [<blt length>, <blt dim>], env=e177.3, next=%177.2
  fs              %177.5 = FrameState         R     0x55fa0d1e1310+5(pr): [%0.8], env=e0.3, next=%177.4
  void                    Deopt              !v    %177.5, Typecheck@0x55fa0d006720[Type#0], %0.8   !
BB178   <- [176]
  int$-           %178.0 = CastType           d     dn %176.2
  lgl$#-          %178.1 = CheckTrueFalse     e     %178.0
  void                    Branch                   %178.1 -> BB174 (if true) | BB5 (if false)
BB179   <- [176]
  void                    Nop                !     
  (int|real)$-    %179.1 = %176.2
  dr              %179.2 = Typecheck@0x55fa0c0375c8[Type#5]
  goto BB3
BB174   <- [178]
  lgl$#-          %174.0 = IsType                   %176.1 isA int-
  void                    Branch                   %174.0 -> BB180 (if true) | BB181 (if false)
BB5   <- [178]
  (int|real)$-    %5.0  = CallSafeBuiltin    wed   length(%176.0)    <val?_>
  (int|real)$-    %5.1  = %5.0
  goto BB6
BB3   <- [179, 181]
  val?^ | miss    %3.0  = Phi                      %179.1:BB179, %181.1:BB181
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %179.2:BB179, %181.2:BB181
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55fa0d4c14f0+32: [], env=e0.3
  prom-           %3.5  = MkArg                    %176.0, registerS3methods[0x55fa0cfa1590]_p0 (!refl), e0.3
  val?~           %3.6  = CastType                 up %3.5
  env             e3.7  = (MkEnv)            l     d=%176.1, x=%3.6, parent=R_BaseNamespace, context 0
  fs              %3.8  = FrameState         R     0x55fa0cf79690+184: [%176.2], env=e3.7, next=%3.4
  void                    Deopt              !v    %3.8, %3.3, %3.1   !
BB180   <- [174]
  int-            %180.0 = CastType           d     dn %176.1
  int$-           %180.1 = Extract1_1D        wed   %180.0, 1L, elided   <int$->
  int$-           %180.2 = %180.1
  goto BB6
BB181   <- [174]
  void                    Nop                !     
  val+            %181.1 = %176.1
  dr              %181.2 = Typecheck@0x55fa0c0375c8[Type#9]
  goto BB3
BB6   <- [5, 180]
  (int|real)$-    %6.0  = Phi                      %5.1:BB5, %180.2:BB180   <int$->
  (int|real)$-    %6.1  = %6.0
  lgl$#-          %6.2  = IsType                   %6.1 isA int$-
  void                    Branch                   %6.2 -> BB182 (if true) | BB183 (if false)
BB182   <- [6]
  int$-           %182.0 = CastType           d     dn %6.1
  void                    StVar              lW    n, %182.0, e0.3
  void                    Visible            v     
  lgl$-           %182.3 = Eq                 vd    %182.0, 0L, elided   <lgl$->
  lgl$#-          %182.4 = CheckTrueFalse     e     %182.3
  void                    Branch                   %182.4 -> BB173 (if true) | BB9 (if false)
BB183   <- [6]
  fs              %183.0 = FrameState         R     0x55fa0d4c14f0+32: [], env=e0.3
  prom-           %183.1 = MkArg                    %176.0, registerS3methods[0x55fa0cfa1590]_p0 (!refl), e0.3
  val?~           %183.2 = CastType                 up %183.1
  env             e183.3 = (MkEnv)            l     d=%176.1, x=%183.2, parent=R_BaseNamespace, context 0
  fs              %183.4 = FrameState         R     0x55fa0cf79690+354: [%6.1], env=e183.3, next=%183.0
  void                    Deopt              !v    %183.4, Typecheck@0x55fa0d006720[Type#1], %6.1   !
BB173   <- [182]
  void                    Nop                !     
  nil-            %173.1 = nil
  goto BB128
BB9   <- [182]
  void                    StVar              lW    assignWrapped, %0.4, e0.3
  val?^ | miss    %9.1  = LdVar              eR    matrix, e0.3
  lgl$#-          %9.2  = Identical                %9.1, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...
  void                    Branch                   %9.2 -> BB184 (if true) | BB185 (if false)
BB128   <- [173, 362]
  val?            %128.0 = Phi                      %362.5:BB362, %173.1:BB173
  val?            %128.1 = %128.0
  void                    Return             l     %128.1
BB184   <- [9]
  val+            %184.0 = CallSafeBuiltin    wed   matrix(NA, 0, 2, false, nil, false, false)    <str_>
  void                    StVar              lW    overwrite, %184.0, e0.3
  void                    StVar              lW    .registerS3method, %0.5, e0.3
  val?^ | miss    %184.3 = LdVar              eR    paste, e0.3
  lgl$#-          %184.4 = Identical                %184.3, function(..., sep=" ", collapse=NULL, recycle0|...
  void                    Branch                   %184.4 -> BB186 (if true) | BB187 (if false)
BB185   <- [9]
  fs              %185.0 = FrameState         R     0x55fa0d4c14f0+114: [], env=e0.3
  void                    Deopt              !v    %185.0, CallTarget@0x55fa0d006720[Call#1], %9.1   !
BB186   <- [184]
  prom-           %186.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p1, e0.3
  prom-           %186.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p2, e0.3
  dots-           %186.2 = DotsList           l     %186.0, %186.1
  val?^ | miss    %186.3 = CastType                 up %186.0
  val?^ | miss    %186.4 = CastType                 up %186.1
  env             e186.5 = MkEnv              l     ...=%186.2, sep=".", collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 0
  val?            %186.6 = Force!             !vL   %186.3, e186.5
  val?            %186.7 = Force!             !vL   %186.4, e186.5
  val+            %186.8 = CallSafeBuiltin    wed   list(%186.6, %186.7)    <vec->
  val+            %186.9 = CallSafeBuiltin    wed   paste(%186.8, ".", nil, false)    <str->
  void                    StVar              lW    methname, %186.9, e0.3
  val?^ | miss    %186.11 = LdVar              eR    is.na, e0.3
  lgl$#-          %186.12 = Identical                <blt is.na>, %186.11   <true>
  void                    Branch                   %186.12 -> BB188 (if true) | BB189 (if false)
BB187   <- [184]
  fs              %187.0 = FrameState         R     0x55fa0d4c14f0+195: [], env=e0.3
  void                    Deopt              !v    %187.0, CallTarget@0x55fa0d006720[Call#2], %184.3   !
BB188   <- [186]
  val?^ | miss    %188.0 = LdVar              eR    info, e0.3
  val?            %188.1 = Force!<wrapped>    !v    %188.0, e0.3   <str_>
  lgl$#-          %188.2 = IsType                   %188.1 isA val+   <true>
  lgl$#-          %188.3 = IsType                   %188.1 isA val?+
  void                    Branch                   %188.2 -> BB190 (if true) | BB191 (if false)
BB189   <- [186]
  fs              %189.0 = FrameState         R     0x55fa0d4c14f0+263: [], env=e0.3
  void                    Deopt              !v    %189.0, DeadBranchReached@0x55fa0d006720[Test#2], %186.12   !
BB190   <- [188]
  void                    Branch                   %188.3 -> BB192 (if true) | BB193 (if false)
BB191   <- [188]
  void                    Nop                !     
  lgl$#-          %191.1 = %188.2
  dr              %191.2 = DeadBranchReached@0x55fa0d006720[Test#4]
  goto BB16
BB192   <- [190]
  val?+           %192.0 = CastType           d     dn %188.1   <str_>
  val?            %192.1 = Extract1_2D        wed   %192.0, missingArg, 3, elided   <str->
  lgl$#-          %192.2 = IsType                   %192.1 isA val?-
  void                    Branch                   %192.2 -> BB194 (if true) | BB195 (if false)
BB193   <- [190]
  void                    Nop                !     
  val?            %193.1 = %188.1
  dr              %193.2 = Typecheck@0x55fa0d006720[Type#12]
  goto BB16
BB16   <- [191, 193]
  val?^ | miss    %16.0 = Phi                      %191.1:BB191, %193.1:BB193
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %191.2:BB191, %193.2:BB193
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55fa0d4c14f0+332: [<blt is.na>, %188.1], env=e0.3
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB194   <- [192]
  val?-           %194.0 = CastType           d     dn %192.1   <str->
  lgl-            %194.1 = CallSafeBuiltin    wed   is.na(%194.0)    <lgl->
  void                    StVar              lW    z, %194.1, e0.3
  val?^ | miss    %194.3 = LdVar              eR    methname, e0.3
  lgl$#-          %194.4 = IsType                   %194.3 isA val?~- | miss
  void                    Branch                   %194.4 -> BB196 (if true) | BB197 (if false)
BB195   <- [192]
  fs              %195.0 = FrameState         R     0x55fa0d4c14f0+385: [<blt is.na>, %192.1], env=e0.3
  void                    Deopt              !v    %195.0, Typecheck@0x55fa0d006720[Type#13], %192.1   !
BB196   <- [194]
  val?~- | miss   %196.0 = CastType           d     dn %194.3
  val?-           %196.1 = Force!<value>            %196.0,    <str->
  lgl$#-          %196.2 = IsType                   %196.1 isA val+   <true>
  void                    Branch                   %196.2 -> BB198 (if true) | BB199 (if false)
BB197   <- [194]
  void                    Nop                !     
  val?^ | miss    %197.1 = %194.3
  dr              %197.2 = Typecheck@0x55fa0d006720[Type#15]
  goto BB20
BB198   <- [196]
  val?            %198.0 = Extract1_1D        wed   %196.1, %194.1, elided   <str->
  val?^ | miss    %198.1 = LdVar              eR    info !upd, e0.3
  val?            %198.2 = Force!<wrapped>    !v    %198.1, e0.3   <str_>
  lgl$#-          %198.3 = IsType                   %198.2 isA val?+
  lgl$#-          %198.4 = IsType                   %198.0 isA val?-
  val?^ | miss    %198.5 = LdVar              eR    z, e0.3
  lgl$#-          %198.6 = IsType                   %198.5 isA lgl-
  void                    Branch                   %198.6 -> BB200 (if true) | BB201 (if false)
BB199   <- [196]
  void                    Nop                !     
  lgl$#-          %199.1 = %196.2
  dr              %199.2 = DeadBranchReached@0x55fa0d006720[Test#5]
  goto BB20
BB20   <- [197, 199]
  val?^ | miss    %20.0 = Phi                      %197.1:BB197, %199.1:BB199
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %197.2:BB197, %199.2:BB199
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x55fa0d4c14f0+422: [], env=e0.3
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB200   <- [198]
  lgl-            %200.0 = CastType           d     dn %198.5
  void                    Branch                   %198.4 -> BB202 (if true) | BB203 (if false)
BB201   <- [198]
  void                    Nop                !     
  val?^ | miss    %201.1 = %198.5
  dr              %201.2 = Typecheck@0x55fa0d006720[Type#20]
  goto BB22
BB202   <- [200]
  val?-           %202.0 = CastType           d     dn %198.0   <str->
  void                    Branch                   %198.3 -> BB204 (if true) | BB205 (if false)
BB203   <- [200]
  void                    Nop                !     
  val?            %203.1 = %198.0
  dr              %203.2 = Typecheck@0x55fa0d006720[Type#18]
  goto BB22
BB22   <- [201, 203, 205]
  val?^ | miss    %22.0 = Phi                      %201.1:BB201, %203.1:BB203, %205.1:BB205
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %201.2:BB201, %203.2:BB203, %205.2:BB205
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55fa0d4c14f0+497: [%198.0, %198.2], env=e0.3
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB204   <- [202]
  val?+           %204.0 = CastType           d     dn %198.2   <str_>
  val?+           %204.1 = Subassign1_2D      wed   %202.0, %204.0, %200.0, 3, elided   <str_>
  void                    StVar              lW    info, %204.1, e0.3
  val?^ | miss    %204.3 = LdVar              eR    ncol, e0.3
  lgl$#-          %204.4 = Identical                %204.3, function(x) <(rir::DispatchTable*)0x55fa0d0f5e|...
  void                    Branch                   %204.4 -> BB206 (if true) | BB207 (if false)
BB205   <- [202]
  void                    Nop                !     
  val?            %205.1 = %198.2
  dr              %205.2 = Typecheck@0x55fa0d006720[Type#19]
  goto BB22
BB206   <- [204]
  val+            %206.0 = CallSafeBuiltin    wed   dim(%204.1)    <int->
  val?            %206.1 = Extract1_1D        wed   %206.0, 2L, elided   <int$->
  lgl$#-          %206.2 = IsType                   %206.1 isA int$-
  void                    Branch                   %206.2 -> BB208 (if true) | BB209 (if false)
BB207   <- [204]
  fs              %207.0 = FrameState         R     0x55fa0d4c14f0+532: [], env=e0.3
  void                    Deopt              !v    %207.0, CallTarget@0x55fa0d006720[Call#4], %204.3   !
BB208   <- [206]
  int$-           %208.0 = CastType           d     dn %206.1
  lgl$-           %208.1 = Eq                 d     %208.0, 3L, elided   <lgl$->
  lgl$#-          %208.2 = CheckTrueFalse     e     %208.1
  void                    Branch                   %208.2 -> BB172 (if true) | BB28 (if false)
BB209   <- [206]
  void                    Nop                !     
  val?            %209.1 = %206.1
  dr              %209.2 = Typecheck@0x55fa0c0377d8[Type#3]
  goto BB26
BB172   <- [208]
  (cls|spec|blt)  %172.0 = LdFun              !v    cbind, e0.3
  fs              %172.1 = FrameState         R     0x55fa0d4c14f0+597: [%172.0], env=e0.3
  void                    Deopt              !v    %172.1, DeadCall@0x55fa0d006720[Call#5], %172.0   !
BB28   <- [208]
  val?^ | miss    %28.0 = LdVar              eR    cbind, e0.3
  lgl$#-          %28.1 = Identical                %28.0, function(..., deparse.level=1) <(rir::Dispatch|...
  void                    Branch                   %28.1 -> BB210 (if true) | BB211 (if false)
BB26   <- [209, 211]
  val?^ | miss    %26.0 = Phi                      %209.1:BB209, %211.1:BB211
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %209.2:BB209, %211.2:BB211
  dr              %26.3 = %26.2
  prom-           %26.4 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p3 (!refl), e0.3
  val?^           %26.5 = CastType                 up %26.4
  fs              %26.6 = FrameState         R     0x55fa0d4c14f0+564: [], env=e0.3
  env             e26.7 = (MkEnv)            l     x=%26.5, parent=R_BaseNamespace, context 0
  fs              %26.8 = FrameState         R     0x55fa0cd9e450+134: [%206.1], env=e26.7, next=%26.6
  void                    Deopt              !v    %26.8, %26.3, %26.1   !
BB210   <- [28]
  prom-           %210.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p4, e0.3
  prom-           %210.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p7, e0.3
  prom-           %210.2 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p8, e0.3
  dots-           %210.3 = DotsList           l     %210.0, %210.1, %210.2
  ct              %210.4 = PushContext        lCL   %210.3, cbind([(info, R_MissingArg, :(1L, 3L), drop=FA|..., function(..., deparse.level=1) <(rir::Dispatch|..., e0.3
  env             e210.5 = MkEnv              l     ...=%210.3, deparse.level(miss)=1, parent=R_BaseNamespace, context 1
  prom-           %210.6 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p67, e210.5
  val?            %210.7 = Call               !v    <spec .Internal>(%210.6) e210.5   <str+>
  val?            %210.8 = PopContext         C     %210.7, %210.4   <str+>
  void                    StVar              lW    Info, %210.8, e0.3
  val?^ | miss    %210.10 = LdVar              eR    names, e0.3
  lgl$#-          %210.11 = Identical                <blt names>, %210.10   <true>
  void                    Branch                   %210.11 -> BB212 (if true) | BB213 (if false)
BB211   <- [28]
  void                    Nop                !     
  val?^ | miss    %211.1 = %28.0
  dr              %211.2 = CallTarget@0x55fa0d006720[Call#6]
  goto BB26
BB212   <- [210]
  val?^ | miss    %212.0 = LdVar              eR    env, e0.3
  val?            %212.1 = Force!<lazy>       !v    %212.0, e0.3   <env->
  lgl$#-          %212.2 = IsType                   %212.1 isA val?-
  void                    Branch                   %212.2 -> BB214 (if true) | BB215 (if false)
BB213   <- [210]
  fs              %213.0 = FrameState         R     0x55fa0d4c14f0+699: [], env=e0.3
  void                    Deopt              !v    %213.0, DeadBranchReached@0x55fa0d006720[Test#7], %210.11   !
BB214   <- [212]
  val?-           %214.0 = CastType           d     dn %212.1   <env->
  val+            %214.1 = CallSafeBuiltin    wed   names(%214.0)    <str->
  void                    StVar              lW    loc, %214.1, e0.3
  val?^ | miss    %214.3 = LdVar              eR    any, e0.3
  lgl$#-          %214.4 = Identical                <blt any>, %214.3   <true>
  void                    Branch                   %214.4 -> BB216 (if true) | BB217 (if false)
BB215   <- [212]
  fs              %215.0 = FrameState         R     0x55fa0d4c14f0+768: [<blt names>, %212.1], env=e0.3
  void                    Deopt              !v    %215.0, Typecheck@0x55fa0d006720[Type#34], %212.1   !
BB216   <- [214]
  val?^ | miss    %216.0 = LdVar              eR    match, e0.3
  lgl$#-          %216.1 = Identical                %216.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %216.1 -> BB218 (if true) | BB219 (if false)
BB217   <- [214]
  void                    Nop                !     
  lgl$#-          %217.1 = %214.4
  dr              %217.2 = DeadBranchReached@0x55fa0d006720[Test#8]
  goto BB33
BB218   <- [216]
  val?^ | miss    %218.0 = LdVar              eR    info, e0.3
  val?            %218.1 = Force!<value>      !v    %218.0, e0.3   <str_>
  lgl$#-          %218.2 = IsType                   %218.1 isA val?+
  void                    Branch                   %218.2 -> BB220 (if true) | BB221 (if false)
BB219   <- [216]
  void                    Nop                !     
  val?^ | miss    %219.1 = %216.0
  dr              %219.2 = CallTarget@0x55fa0d006720[Call#11]
  goto BB33
BB33   <- [217, 219]
  val?^ | miss    %33.0 = Phi                      %217.1:BB217, %219.1:BB219
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %217.2:BB217, %219.2:BB219
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55fa0d4c14f0+804: [], env=e0.3
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB220   <- [218]
  val?+           %220.0 = CastType           d     dn %218.1   <str_>
  val?            %220.1 = Extract1_2D        wed   %220.0, missingArg, 3, elided   <str->
  val?^ | miss    %220.2 = LdVar              eR    loc, e0.3
  val?            %220.3 = Force!<value>      !v    %220.2, e0.3   <str->
  lgl$#-          %220.4 = IsType                   %220.3 isA val?-
  lgl$#-          %220.5 = IsType                   %220.1 isA val?+
  void                    Branch                   %220.5 -> BB222 (if true) | BB223 (if false)
BB221   <- [218]
  prom-           %221.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p10 (!refl), e0.3
  val?^           %221.1 = CastType                 up %221.0
  prom-           %221.2 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p9, e0.3
  val?^           %221.3 = CastType                 up %221.2
  fs              %221.4 = FrameState         R     0x55fa0d4c14f0+918: [<blt any>], env=e0.3
  env             e221.5 = (MkEnv)            l     x=%221.3, table=%221.1, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %221.6 = FrameState         R     0x55fa0b568d40+9: [], env=e221.5, next=%221.4
  fs              %221.7 = FrameState         R     0x55fa0cd115a0+5(pr): [%218.1], env=e0.3, next=%221.6
  void                    Deopt              !v    %221.7, Typecheck@0x55fa0d006720[Type#41], %218.1   !
BB222   <- [220]
  val?+           %222.0 = CastType           d     dn %220.1   <(int|str)+>
  void                    Branch                   %220.4 -> BB224 (if true) | BB225 (if false)
BB223   <- [220]
  void                    Nop                !     
  val?            %223.1 = %220.1
  dr              %223.2 = Typecheck@0x55fa0b5bbcb0[Type#0]
  goto BB37
BB224   <- [222]
  val?-           %224.0 = CastType           d     dn %220.3   <str->
  val+            %224.1 = CallSafeBuiltin    wed   match(%222.0, %224.0, 0L, nil)    <int->
  lgl$#-          %224.2 = IsType                   %224.1 isA int-
  void                    Branch                   %224.2 -> BB226 (if true) | BB227 (if false)
BB225   <- [222]
  void                    Nop                !     
  val?            %225.1 = %220.3
  dr              %225.2 = Typecheck@0x55fa0b5bbcb0[Type#1]
  goto BB37
BB37   <- [223, 225]
  val?^ | miss    %37.0 = Phi                      %223.1:BB223, %225.1:BB225
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %223.2:BB223, %225.2:BB225
  dr              %37.3 = %37.2
  prom-           %37.4 = MkArg                    %220.3, registerS3methods[0x55fa0cfa1590]_p10 (!refl), e0.3
  val?~           %37.5 = CastType                 up %37.4
  prom-           %37.6 = MkArg                    %220.1, registerS3methods[0x55fa0cfa1590]_p9 (!refl), e0.3
  val?~           %37.7 = CastType                 up %37.6
  fs              %37.8 = FrameState         R     0x55fa0d4c14f0+918: [<blt any>], env=e0.3
  env             e37.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%37.5, x=%37.7, parent=R_BaseNamespace, context 0
  fs              %37.10 = FrameState         R     0x55fa0b568d40+23: [%220.1, %220.3], env=e37.9, next=%37.8
  void                    Deopt              !v    %37.10, %37.3, %37.1   !
BB226   <- [224]
  int-            %226.0 = CastType           d     dn %224.1
  lgl-            %226.1 = Eq                 wed   %226.0, 0L, elided   <lgl->
  void                    StVar              lW    notex, %226.1, e0.3
  val?            %226.3 = CallBuiltin        !v    any(%226.1) e0.3   <lgl$->
  lgl$#-          %226.4 = IsType                   %226.3 isA lgl$-
  void                    Branch                   %226.4 -> BB228 (if true) | BB229 (if false)
BB227   <- [224]
  prom-           %227.0 = MkArg                    %224.0, registerS3methods[0x55fa0cfa1590]_p10 (!refl), e0.3
  val?~           %227.1 = CastType                 up %227.0
  prom-           %227.2 = MkArg                    %222.0, registerS3methods[0x55fa0cfa1590]_p9 (!refl), e0.3
  val?~           %227.3 = CastType                 up %227.2
  fs              %227.4 = FrameState         R     0x55fa0d4c14f0+918: [<blt any>], env=e0.3
  env             e227.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%227.1, x=%227.3, parent=R_BaseNamespace, context 0
  fs              %227.6 = FrameState         R     0x55fa0b568d40+69: [%224.1], env=e227.5, next=%227.4
  void                    Deopt              !v    %227.6, Typecheck@0x55fa0d006720[Type#44], %224.1   !
BB228   <- [226]
  lgl$-           %228.0 = CastType           d     dn %226.3
  lgl$#-          %228.1 = CheckTrueFalse     e     %228.0
  void                    Branch                   %228.1 -> BB171 (if true) | BB43 (if false)
BB229   <- [226]
  void                    Nop                !     
  val?            %229.1 = %226.3
  dr              %229.2 = Typecheck@0x55fa0d006720[Type#46]
  goto BB41
BB171   <- [228]
  (cls|spec|blt)  %171.0 = LdFun              !v    warning, e0.3
  fs              %171.1 = FrameState         R     0x55fa0d4c14f0+984: [%171.0], env=e0.3
  void                    Deopt              !v    %171.1, DeadCall@0x55fa0d006720[Call#12], %171.0   !
BB43   <- [228]
  val?^ | miss    %43.0 = LdVar              eR    is.na, e0.3
  lgl$#-          %43.1 = Identical                <blt is.na>, %43.0   <true>
  void                    Branch                   %43.1 -> BB230 (if true) | BB231 (if false)
BB41   <- [229, 231, 233, 235]
  val?^ | miss    %41.0 = Phi                      %229.1:BB229, %231.1:BB231, %233.1:BB233, %235.1:BB235
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %229.2:BB229, %231.2:BB231, %233.2:BB233, %235.2:BB235
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x55fa0d4c14f0+963: [%226.3], env=e0.3
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB230   <- [43]
  val?^ | miss    %230.0 = LdVar              eR    Info, e0.3
  lgl$#-          %230.1 = IsType                   %230.0 isA val?~+ | miss
  void                    Branch                   %230.1 -> BB232 (if true) | BB233 (if false)
BB231   <- [43]
  void                    Nop                !     
  lgl$#-          %231.1 = %43.1
  dr              %231.2 = DeadBranchReached@0x55fa0d006720[Test#12]
  goto BB41
BB232   <- [230]
  val?~+ | miss   %232.0 = CastType           d     dn %230.0
  val?+           %232.1 = Force!<value>            %232.0,    <str+>
  lgl$#-          %232.2 = IsType                   %232.1 isA val+   <true>
  void                    Branch                   %232.2 -> BB234 (if true) | BB235 (if false)
BB233   <- [230]
  void                    Nop                !     
  val?^ | miss    %233.1 = %230.0
  dr              %233.2 = Typecheck@0x55fa0d006720[Type#62]
  goto BB41
BB234   <- [232]
  val?            %234.0 = Extract1_2D        wed   %232.1, missingArg, 5L, elided   <str->
  lgl$#-          %234.1 = IsType                   %234.0 isA val?-
  void                    Branch                   %234.1 -> BB236 (if true) | BB237 (if false)
BB235   <- [232]
  void                    Nop                !     
  lgl$#-          %235.1 = %232.2
  dr              %235.2 = DeadBranchReached@0x55fa0d006720[Test#14]
  goto BB41
BB236   <- [234]
  val?-           %236.0 = CastType           d     dn %234.0   <str->
  lgl-            %236.1 = CallSafeBuiltin    wed   is.na(%236.0)    <lgl->
  void                    StVar              lW    eager, %236.1, e0.3
  (cls|spec|blt)  %236.3 = LdFun              !v    [, <0x55fa0ad53c80>, e0.3
  prom-           %236.4 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p11, e0.3
  prom-           %236.5 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p12, e0.3
  val?            %236.6 = NamedCall          !v    %236.3(%236.4, %236.5, missingArg, drop=false) e0.3   <str+>
  void                    StVar              lW    delayed, %236.6, e0.3
  (cls|spec|blt)  %236.8 = LdFun              !v    [, <0x55fa0ad53c80>, e0.3
  prom-           %236.9 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p13, e0.3
  prom-           %236.10 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p14, e0.3
  val?            %236.11 = NamedCall          !v    %236.8(%236.9, %236.10, missingArg, drop=false) e0.3   <str+>
  void                    StVar              lW    Info, %236.11, e0.3
  lgl$#-          %236.13 = IsType                   %236.11 isA val?+
  val?^ | miss    %236.14 = LdVar              eR    %in%, e0.3
  lgl$#-          %236.15 = Identical                %236.14, function(x, table) <(rir::DispatchTable*)0x55f|...
  void                    Branch                   %236.15 -> BB238 (if true) | BB239 (if false)
BB237   <- [234]
  fs              %237.0 = FrameState         R     0x55fa0d4c14f0+1233: [<blt is.na>, %234.0], env=e0.3
  void                    Deopt              !v    %237.0, Typecheck@0x55fa0d006720[Type#63], %234.0   !
BB238   <- [236]
  prom-           %238.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p15, e0.3
  prom-           %238.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p16, e0.3
  val?^           %238.2 = CastType                 up %238.1
  val?^           %238.3 = CastType                 up %238.0
  env             e238.4 = MkEnv              l     x=%238.3, table=%238.2, parent=R_BaseNamespace, context 0
  prom-           %238.5 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p71, e238.4
  val?^           %238.6 = CastType                 up %238.5
  val             %238.7 = ChkMissing         e     %236.11
  void                    Branch                   %236.13 -> BB240 (if true) | BB241 (if false)
BB239   <- [236]
  void                    Nop                !     
  val?^ | miss    %239.1 = %236.14
  dr              %239.2 = CallTarget@0x55fa0d006720[Call#22]
  goto BB46
BB240   <- [238]
  val?+           %240.0 = CastType           d     dn %236.11   <str+>
  val?            %240.1 = Extract1_2D        wed   %240.0, missingArg, 1, elided   <str->
  prom-           %240.2 = MkArg                    %240.1, registerS3methods[0x55fa0cfa1590]_p15 (!refl), e0.3
  val?~           %240.3 = CastType                 up %240.2
  void                    StArg              lW    x, %240.3, e238.4
  prom-           %240.5 = MkArg                    %240.1, registerS3methods[0x55fa0cfa1590]_p70 (!refl), e238.4
  val?~           %240.6 = CastType                 up %240.5
  env             e240.7 = (MkEnv)            l     x=%240.6, table=%238.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %240.8 = IsEnvStub          R     , e240.7
  void                    Branch                   %240.8 -> BB242 (if true) | BB243 (if false)
BB241   <- [238]
  void                    Nop                !     
  val?            %241.1 = %236.11
  dr              %241.2 = Typecheck@0x55fa0d006720[Type#70]
  goto BB46
BB46   <- [239, 241]
  val?^ | miss    %46.0 = Phi                      %239.1:BB239, %241.1:BB241
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %239.2:BB239, %241.2:BB241
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x55fa0d4c14f0+1424: [], env=e0.3
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
BB242   <- [240]
  val?^ | miss    %242.0 = LdVar              eR    loc, e0.3
  val?            %242.1 = Force!<value>      !vL   %242.0, e240.7   <str->
  prom-           %242.2 = MkArg                    %242.1, registerS3methods[0x55fa0cfa1590]_p16 (!refl), e0.3
  val?~           %242.3 = CastType                 up %242.2
  void                    StArg              lW    table, %242.3, e238.4
  prom-           %242.5 = MkArg                    %242.1, registerS3methods[0x55fa0cfa1590]_p71 (!refl), e238.4
  val?~           %242.6 = CastType                 up %242.5
  void                    StArg              lWd   table, %242.6, e240.7
  lgl$#-          %242.8 = IsType                   %242.1 isA val?-
  lgl$#-          %242.9 = IsEnvStub          R     , e240.7
  void                    Branch                   %242.9 -> BB244 (if true) | BB245 (if false)
BB243   <- [240]
  fs              %243.0 = FrameState         R     0x55fa0d4c14f0+1461: [], env=e0.3
  fs              %243.1 = FrameState         R     0x55fa0b381320+54: [], env=e238.4, next=%243.0
  prom-           %243.2 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p70 (!refl), e238.4
  val?^           %243.3 = CastType                 up %243.2
  env             e243.4 = (MkEnv)            l     x=%243.3, table=%238.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %243.5 = FrameState         R     0x55fa0b568d40+9: [], env=e243.4, next=%243.1
  fs              %243.6 = FrameState         R     0x55fa0b381bc0+5(pr): [%240.1], env=e238.4, next=%243.5
  void                    Deopt              !v    %243.6, EnvStubMaterialized@0x55fa0b5bbcb0[Call#unknown], e240.7   !
BB244   <- [242]
  lgl$#-          %244.0 = IsType                   %240.1 isA val?+
  void                    Branch                   %244.0 -> BB246 (if true) | BB247 (if false)
BB245   <- [242]
  void                    Nop                !     
  env             e245.1 = e240.7
  dr              %245.2 = EnvStubMaterialized@0x55fa0b5bbcb0[Call#unknown]
  goto BB50
BB246   <- [244]
  val?+           %246.0 = CastType           d     dn %240.1   <(int|str)+>
  void                    Branch                   %242.8 -> BB248 (if true) | BB249 (if false)
BB247   <- [244]
  void                    Nop                !     
  val?            %247.1 = %240.1
  dr              %247.2 = Typecheck@0x55fa0b5bbcb0[Type#0]
  goto BB50
BB50   <- [245, 247, 249]
  val?^ | miss    %50.0 = Phi                      e245.1:BB245, %247.1:BB247, %249.1:BB249
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %245.2:BB245, %247.2:BB247, %249.2:BB249
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55fa0d4c14f0+1461: [], env=e0.3
  fs              %50.5 = FrameState         R     0x55fa0b381320+54: [], env=e238.4, next=%50.4
  fs              %50.6 = FrameState         R     0x55fa0b568d40+23: [%240.1, %242.1], env=e240.7, next=%50.5
  void                    Deopt              !v    %50.6, %50.3, %50.1   !
BB248   <- [246]
  val?-           %248.0 = CastType           d     dn %242.1   <str->
  val+            %248.1 = CallSafeBuiltin    wed   match(%246.0, %248.0, 0L, nil)    <int->
  lgl$#-          %248.2 = IsType                   %248.1 isA int-
  void                    Branch                   %248.2 -> BB250 (if true) | BB251 (if false)
BB249   <- [246]
  void                    Nop                !     
  val?            %249.1 = %242.1
  dr              %249.2 = Typecheck@0x55fa0b5bbcb0[Type#1]
  goto BB50
BB250   <- [248]
  int-            %250.0 = CastType           d     dn %248.1
  lgl-            %250.1 = Gt                 wed   %250.0, 0L, elided   <lgl->
  void                    StVar              lW    localGeneric, %250.1, e0.3
  void                    StVar              lW    l2, %250.1, e0.3
  val?^ | miss    %250.4 = LdVar              eR    .isMethodsDispatchOn, e0.3
  lgl$#-          %250.5 = Identical                <blt .isMethodsDispatchOn>, %250.4   <true>
  void                    Branch                   %250.5 -> BB252 (if true) | BB253 (if false)
BB251   <- [248]
  fs              %251.0 = FrameState         R     0x55fa0d4c14f0+1461: [], env=e0.3
  fs              %251.1 = FrameState         R     0x55fa0b381320+54: [], env=e238.4, next=%251.0
  fs              %251.2 = FrameState         R     0x55fa0b568d40+69: [%248.1], env=e240.7, next=%251.1
  void                    Deopt              !v    %251.2, Typecheck@0x55fa0c3b3688[Type#2], %248.1   !
BB252   <- [250]
  val?            %252.0 = CallBuiltin        !v    .isMethodsDispatchOn() e0.3   <lgl$->
  lgl$#-          %252.1 = IsType                   %252.0 isA lgl$-
  void                    Branch                   %252.1 -> BB254 (if true) | BB255 (if false)
BB253   <- [250]
  fs              %253.0 = FrameState         R     0x55fa0d4c14f0+1486: [], env=e0.3
  void                    Deopt              !v    %253.0, DeadBranchReached@0x55fa0d006720[Test#16], %250.5   !
BB254   <- [252]
  lgl$-           %254.0 = CastType           d     dn %252.0
  lgl$#-          %254.1 = CheckTrueFalse     e     %254.0
  void                    Branch                   %254.1 -> BB149 (if true) | BB58 (if false)
BB255   <- [252]
  void                    Nop                !     
  val?            %255.1 = %252.0
  dr              %255.2 = Typecheck@0x55fa0d006720[Type#75]
  goto BB56
BB149   <- [254]
  val?^ | miss    %149.0 = LdVar              eR    which, e0.3
  lgl$#-          %149.1 = Identical                %149.0, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %149.1 -> BB256 (if true) | BB257 (if false)
BB58   <- [254]
  void                    Nop                !     
  goto BB59
BB56   <- [255, 257, 261]
  val?^ | miss    %56.0 = Phi                      %255.1:BB255, %257.1:BB257, %261.1:BB261
  val?^ | miss    %56.1 = %56.0
  dr              %56.2 = Phi                      %255.2:BB255, %257.2:BB257, %261.2:BB261
  dr              %56.3 = %56.2
  fs              %56.4 = FrameState         R     0x55fa0d4c14f0+1558: [%252.0], env=e0.3
  void                    Deopt              !v    %56.4, %56.3, %56.1   !
BB256   <- [149]
  val?^ | miss    %256.0 = LdVar              eR    localGeneric, e0.3
  lgl$#-          %256.1 = IsType                   %256.0 isA lgl-
  void                    Branch                   %256.1 -> BB260 (if true) | BB261 (if false)
BB257   <- [149]
  void                    Nop                !     
  val?^ | miss    %257.1 = %149.0
  dr              %257.2 = CallTarget@0x55fa0d006720[Call#24]
  goto BB56
BB59   <- [58, 167]
  val?^ | miss    %59.0 = LdVar              eR    any, e0.3
  lgl$#-          %59.1 = Identical                <blt any>, %59.0   <true>
  void                    Branch                   %59.1 -> BB258 (if true) | BB259 (if false)
BB260   <- [256]
  lgl-            %260.0 = CastType           d     dn %256.0
  val+            %260.1 = CallSafeBuiltin    wed   which(%260.0)    <int->
  int$-           %260.2 = Length                   %260.1
  int$-           %260.3 = Inc                      0L
  lgl$-           %260.4 = Lt                 d     %260.2, %260.3, elided   <false>
  lgl$#-          %260.5 = Identical                %260.4, true
  void                    Branch                   %260.5 -> BB265 (if true) | BB264 (if false)
BB261   <- [256]
  void                    Nop                !     
  val?^ | miss    %261.1 = %256.0
  dr              %261.2 = Typecheck@0x55fa0d006720[Type#76]
  goto BB56
BB258   <- [59]
  val?^ | miss    %258.0 = LdVar              eR    localGeneric, e0.3
  lgl$#-          %258.1 = IsType                   %258.0 isA lgl-
  void                    Branch                   %258.1 -> BB262 (if true) | BB263 (if false)
BB259   <- [59]
  void                    Nop                !     
  lgl$#-          %259.1 = %59.1
  dr              %259.2 = DeadBranchReached@0x55fa0d006720[Test#26]
  goto BB60
BB265   <- [260]
  prom-           %265.0 = MkArg                    %260.0, registerS3methods[0x55fa0cfa1590]_p49 (!refl), e0.3
  val?~           %265.1 = CastType                 up %265.0
  fs              %265.2 = FrameState         R     0x55fa0d4c14f0+1606: [], env=e0.3
  env             e265.3 = (MkEnv)            l     wh=unboundValue, d=unboundValue, useNames(miss)=true, arr.ind(miss)=false, x=%265.1, parent=R_BaseNamespace, context 0
  fs              %265.4 = FrameState         R     0x55fa0cc2af10+27: [%260.1], env=e265.3, next=%265.2
  void                    Deopt              !v    %265.4, DeadBranchReached@0x55fa0d006720[Test#17], %260.5   !
BB264   <- [260]
  val?            %264.0 = Extract2_1D        wed   %260.1, %260.3, elided
  void                    StVar              lW    i, %264.0, e0.3
  val?^ | miss    %264.2 = LdVar              eR    get, e0.3
  lgl$#-          %264.3 = Identical                %264.2, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %264.3 -> BB266 (if true) | BB267 (if false)
BB262   <- [258]
  lgl-            %262.0 = CastType           d     dn %258.0
  val?            %262.1 = CallBuiltin        !v    any(%262.0) e0.3   <lgl$->
  lgl$#-          %262.2 = IsType                   %262.1 isA lgl$-
  void                    Branch                   %262.2 -> BB270 (if true) | BB271 (if false)
BB263   <- [258]
  void                    Nop                !     
  val?^ | miss    %263.1 = %258.0
  dr              %263.2 = Typecheck@0x55fa0d006720[Type#131]
  goto BB60
BB60   <- [259, 263]
  val?^ | miss    %60.0 = Phi                      %259.1:BB259, %263.1:BB263
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %259.2:BB259, %263.2:BB263
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x55fa0d4c14f0+2174: [], env=e0.3
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB266   <- [264]
  prom-           %266.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p50, e0.3
  prom-           %266.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p52, e0.3
  val?            %266.2 = StaticCall         !v    get[0x55fa0ceb0f20](%266.0, missingArg, %266.1) { 0 2n } e0.3   <cls->
  void                    StVar              lW    genfun, %266.2, e0.3
  (cls|spec|blt)  %266.4 = LdFun              !v    ::, <0x55fa0ad54e48>, e0.3
  prom-           %266.5 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p53, e0.3
  prom-           %266.6 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p54, e0.3
  val?            %266.7 = Call               !v    %266.4(%266.5, %266.6) e0.3   <cls->
  (cls|spec|blt)  %266.8 = ChkFunction        e     %266.7
  prom-           %266.9 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p55, e0.3
  val?            %266.10 = Call               !v    %266.8(%266.9, "genericFunction") e0.3   <lgl$->
  lgl$#-          %266.11 = IsType                   %266.10 isA lgl$-
  void                    Branch                   %266.11 -> BB268 (if true) | BB269 (if false)
BB267   <- [264]
  fs              %267.0 = FrameState         R     0x55fa0d4c14f0+1651: [%260.1, %260.2, %260.3], env=e0.3
  void                    Deopt              !v    %267.0, CallTarget@0x55fa0d006720[Call#25], %264.2   !
BB270   <- [262]
  lgl$-           %270.0 = CastType           d     dn %262.1
  lgl$#-          %270.1 = CheckTrueFalse     e     %270.0
  void                    Branch                   %270.1 -> BB142 (if true) | BB64 (if false)
BB271   <- [262]
  fs              %271.0 = FrameState         R     0x55fa0d4c14f0+2265: [%262.1], env=e0.3
  void                    Deopt              !v    %271.0, Typecheck@0x55fa0d006720[Type#132], %262.1   !
BB268   <- [266]
  lgl$-           %268.0 = CastType           d     dn %266.10
  lgl$#-          %268.1 = CheckTrueFalse     e     %268.0
  void                    Branch                   %268.1 -> BB168 (if true) | BB156 (if false)
BB269   <- [266]
  fs              %269.0 = FrameState         R     0x55fa0d4c14f0+1785: [%260.1, %260.2, %260.3, %266.10], env=e0.3
  void                    Deopt              !v    %269.0, Typecheck@0x55fa0d006720[Type#88], %266.10   !
BB142   <- [270]
  (cls|spec|blt)  %142.0 = LdFun              !v    [, <0x55fa0ad53c80>, e0.3
  prom-           %142.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p47, e0.3
  prom-           %142.2 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p48, e0.3
  val?            %142.3 = NamedCall          !v    %142.0(%142.1, %142.2, missingArg, drop=false) e0.3   <str+>
  void                    StVar              lW    lin, %142.3, e0.3
  val?^ | miss    %142.5 = LdVar              eR    env, e0.3
  val?            %142.6 = Force!<wrapped>    !v    %142.5, e0.3   <env->
  lgl$#-          %142.7 = IsType                   %142.6 isA val+   <true>
  lgl$#-          %142.8 = IsType                   %142.6 isA val?-
  void                    Branch                   %142.7 -> BB280 (if true) | BB281 (if false)
BB64   <- [270]
  void                    Nop                !     
  goto BB65
BB168   <- [268]
  val?^ | miss    %168.0 = LdVar              eR    localGeneric, e0.3
  val?            %168.1 = Force!             !v    %168.0, e0.3   <val?_>
  val?^ | miss    %168.2 = LdVar              eR    i, e0.3
  val?            %168.3 = Force!             !v    %168.2, e0.3   <val?_>
  lgl$#-          %168.4 = IsType                   %168.3 isA val?+
  lgl$#-          %168.5 = IsType                   %168.1 isA val?+
  void                    Branch                   %168.5 -> BB272 (if true) | BB273 (if false)
BB156   <- [268]
  void                    Nop                !     
  int$-           %156.1 = %260.3
  goto BB157
BB280   <- [142]
  void                    Branch                   %142.8 -> BB284 (if true) | BB285 (if false)
BB281   <- [142]
  void                    Nop                !     
  lgl$#-          %281.1 = %142.7
  dr              %281.2 = DeadBranchReached@0x55fa0d006720[Test#27]
  goto BB143
BB65   <- [64, 296]
  (cls|spec|blt)  %65.0 = LdFun              !v    [, <0x55fa0ad53c80>, e0.3
  prom-           %65.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p17, e0.3
  prom-           %65.2 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p18, e0.3
  val?            %65.3 = NamedCall          !v    %65.0(%65.1, %65.2, missingArg, drop=false) e0.3   <str+>
  void                    StVar              lW    fin, %65.3, e0.3
  lgl$#-          %65.5 = IsType                   %65.3 isA val?+
  val?^ | miss    %65.6 = LdVar              eR    seq_len, e0.3
  lgl$#-          %65.7 = Identical                <blt seq_len>, %65.6   <true>
  void                    Branch                   %65.7 -> BB282 (if true) | BB283 (if false)
BB272   <- [168]
  val?+           %272.0 = CastType           d     dn %168.1   <val?_>
  void                    Branch                   %168.4 -> BB274 (if true) | BB275 (if false)
BB273   <- [168]
  void                    Nop                !     
  val?            %273.1 = %168.1
  dr              %273.2 = Typecheck@0x55fa0d006720[Type#89]
  goto BB169
BB157   <- [156, 163]
  int$-           %157.0 = Phi                      %156.1:BB156, %163.1:BB163
  int$-           %157.1 = %157.0
  int$-           %157.2 = Inc                      %157.1
  lgl$-           %157.3 = Lt                 d     %260.2, %157.2, elided
  lgl$#-          %157.4 = Identical                %157.3, true
  void                    Branch                   %157.4 -> BB167 (if true) | BB158 (if false)
BB284   <- [280]
  val?-           %284.0 = CastType           d     dn %142.6   <env->
  val?            %284.1 = Extract2_1D        wed   %284.0, ".__S3MethodsTable__.", elided   <env->
  void                    StVar              lW    S3MethodsTable, %284.1, e0.3
  val             %284.3 = ChkMissing         e     %284.1
  val?^ | miss    %284.4 = LdVar              eR    lin, e0.3
  lgl$#-          %284.5 = IsType                   %284.4 isA val?~+ | miss
  void                    Branch                   %284.5 -> BB286 (if true) | BB287 (if false)
BB285   <- [280]
  void                    Nop                !     
  val?            %285.1 = %142.6
  dr              %285.2 = Typecheck@0x55fa0d006720[Type#136]
  goto BB143
BB143   <- [281, 285]
  val?^ | miss    %143.0 = Phi                      %281.1:BB281, %285.1:BB285
  val?^ | miss    %143.1 = %143.0
  dr              %143.2 = Phi                      %281.2:BB281, %285.2:BB285
  dr              %143.3 = %143.2
  fs              %143.4 = FrameState         R     0x55fa0d4c14f0+2367: [%142.6], env=e0.3
  void                    Deopt              !v    %143.4, %143.3, %143.1   !
BB282   <- [65]
  val?^ | miss    %282.0 = LdVar              eR    nrow, e0.3
  lgl$#-          %282.1 = Identical                %282.0, function(x) <(rir::DispatchTable*)0x55fa0cd6b6|...
  void                    Branch                   %282.1 -> BB288 (if true) | BB289 (if false)
BB283   <- [65]
  void                    Nop                !     
  lgl$#-          %283.1 = %65.7
  dr              %283.2 = DeadBranchReached@0x55fa0d006720[Test#30]
  goto BB66
BB274   <- [272]
  val?+           %274.0 = CastType           d     dn %168.3   <val?_>
  val?+           %274.1 = Subassign1_1D      wed   false, %272.0, %274.0, elided
  void                    StVar              lW    localGeneric, %274.1, e0.3
  (cls|spec|blt)  %274.3 = LdFun              !v    registerS3method, e0.3
  fs              %274.4 = FrameState         R     0x55fa0d4c14f0+1850: [%260.1, %260.2, %260.3, %274.3], env=e0.3
  void                    Deopt              !v    %274.4, DeadCall@0x55fa0d006720[Call#28], %274.3   !
BB275   <- [272]
  void                    Nop                !     
  val?            %275.1 = %168.3
  dr              %275.2 = Typecheck@0x55fa0d006720[Type#90]
  goto BB169
BB169   <- [273, 275]
  val?^ | miss    %169.0 = Phi                      %273.1:BB273, %275.1:BB275
  val?^ | miss    %169.1 = %169.0
  dr              %169.2 = Phi                      %273.2:BB273, %275.2:BB275
  dr              %169.3 = %169.2
  fs              %169.4 = FrameState         R     0x55fa0d4c14f0+1830: [%260.1, %260.2, %260.3, false, %168.1, %168.3], env=e0.3
  void                    Deopt              !v    %169.4, %169.3, %169.1   !
BB167   <- [157]
  void                    Nop                !     
  goto BB59
BB158   <- [157]
  val?            %158.0 = Extract2_1D        wed   %260.1, %157.2, elided
  void                    StVar              lW    i, %158.0, e0.3
  val?^ | miss    %158.2 = LdVar              eR    get, e0.3
  lgl$#-          %158.3 = Identical                %158.2, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %158.3 -> BB276 (if true) | BB277 (if false)
BB286   <- [284]
  val?~+ | miss   %286.0 = CastType           d     dn %284.4
  val?+           %286.1 = Force!<value>            %286.0,    <str+>
  lgl$#-          %286.2 = IsType                   %286.1 isA val+   <true>
  void                    Branch                   %286.2 -> BB292 (if true) | BB293 (if false)
BB287   <- [284]
  void                    Nop                !     
  val?^ | miss    %287.1 = %284.4
  dr              %287.2 = Typecheck@0x55fa0d006720[Type#139]
  goto BB145
BB288   <- [282]
  void                    Branch                   %65.5 -> BB290 (if true) | BB291 (if false)
BB289   <- [282]
  void                    Nop                !     
  val?^ | miss    %289.1 = %282.0
  dr              %289.2 = CallTarget@0x55fa0d006720[Call#38]
  goto BB66
BB66   <- [283, 289, 291]
  val?^ | miss    %66.0 = Phi                      %283.1:BB283, %289.1:BB289, %291.1:BB291
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %283.2:BB283, %289.2:BB289, %291.2:BB291
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55fa0d4c14f0+2680: [], env=e0.3
  void                    Deopt              !v    %66.4, %66.3, %66.1   !
BB276   <- [158]
  prom-           %276.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p56, e0.3
  prom-           %276.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p58, e0.3
  val?            %276.2 = StaticCall         !v    get[0x55fa0ceb0f20](%276.0, missingArg, %276.1) { 0 2n } e0.3   <cls->
  void                    StVar              lW    genfun, %276.2, e0.3
  (cls|spec|blt)  %276.4 = LdFun              !v    ::, <0x55fa0ad54e48>, e0.3
  prom-           %276.5 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p59, e0.3
  prom-           %276.6 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p60, e0.3
  val?            %276.7 = Call               !v    %276.4(%276.5, %276.6) e0.3   <cls->
  (cls|spec|blt)  %276.8 = ChkFunction        e     %276.7
  prom-           %276.9 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p61, e0.3
  val?            %276.10 = Call               !v    %276.8(%276.9, "genericFunction") e0.3   <lgl$->
  lgl$#-          %276.11 = IsType                   %276.10 isA lgl$-
  void                    Branch                   %276.11 -> BB278 (if true) | BB279 (if false)
BB277   <- [158]
  fs              %277.0 = FrameState         R     0x55fa0d4c14f0+1922: [%260.1, %260.2, %157.2], env=e0.3
  void                    Deopt              !v    %277.0, CallTarget@0x55fa0d006720[Call#29], %158.2   !
BB292   <- [286]
  val?            %292.0 = Extract1_2D        wed   %286.1, missingArg, 4, elided   <str->
  val?^ | miss    %292.1 = LdVar              eR    env, e0.3
  val?            %292.2 = Force!<wrapped>    !v    %292.1, e0.3   <env->
  val?^ | miss    %292.3 = LdVar              eR    lin, e0.3
  lgl$#-          %292.4 = IsType                   %292.3 isA val?~+ | miss
  void                    Branch                   %292.4 -> BB294 (if true) | BB295 (if false)
BB293   <- [286]
  void                    Nop                !     
  lgl$#-          %293.1 = %286.2
  dr              %293.2 = DeadBranchReached@0x55fa0d006720[Test#28]
  goto BB145
BB145   <- [287, 293]
  val?^ | miss    %145.0 = Phi                      %287.1:BB287, %293.1:BB293
  val?^ | miss    %145.1 = %145.0
  dr              %145.2 = Phi                      %287.2:BB287, %293.2:BB293
  dr              %145.3 = %145.2
  fs              %145.4 = FrameState         R     0x55fa0d4c14f0+2425: [], env=e0.3
  void                    Deopt              !v    %145.4, %145.3, %145.1   !
BB290   <- [288]
  val?+           %290.0 = CastType           d     dn %65.3   <str+>
  val+            %290.1 = CallSafeBuiltin    wed   dim(%290.0)    <int->
  val?            %290.2 = Extract1_1D        wed   %290.1, 1L, elided   <int$->
  lgl$#-          %290.3 = IsType                   %290.2 isA int$-
  void                    Branch                   %290.3 -> BB302 (if true) | BB303 (if false)
BB291   <- [288]
  void                    Nop                !     
  val?            %291.1 = %65.3
  dr              %291.2 = Typecheck@0x55fa0d006720[Type#146]
  goto BB66
BB278   <- [276]
  lgl$-           %278.0 = CastType           d     dn %276.10
  lgl$#-          %278.1 = CheckTrueFalse     e     %278.0
  void                    Branch                   %278.1 -> BB164 (if true) | BB163 (if false)
BB279   <- [276]
  fs              %279.0 = FrameState         R     0x55fa0d4c14f0+2056: [%260.1, %260.2, %157.2, %276.10], env=e0.3
  void                    Deopt              !v    %279.0, Typecheck@0x55fa0d006720[Type#114], %276.10   !
BB294   <- [292]
  val?~+ | miss   %294.0 = CastType           d     dn %292.3
  val?+           %294.1 = Force!<value>            %294.0,    <str+>
  lgl$#-          %294.2 = IsType                   %294.1 isA val+   <true>
  void                    Branch                   %294.2 -> BB296 (if true) | BB297 (if false)
BB295   <- [292]
  void                    Nop                !     
  val?^ | miss    %295.1 = %292.3
  dr              %295.2 = Typecheck@0x55fa0d006720[Type#142]
  goto BB147
BB302   <- [290]
  int$-           %302.0 = CastType           d     dn %290.2
  val+            %302.1 = CallSafeBuiltin    wed   seq_len(%302.0)    <int->
  int$-           %302.2 = Length                   %302.1
  int$-           %302.3 = Inc                      0L
  lgl$-           %302.4 = Lt                 d     %302.2, %302.3, elided   <false>
  lgl$#-          %302.5 = Identical                %302.4, true
  void                    Branch                   %302.5 -> BB305 (if true) | BB304 (if false)
BB303   <- [290]
  prom-           %303.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p19 (!refl), e0.3
  val?^           %303.1 = CastType                 up %303.0
  fs              %303.2 = FrameState         R     0x55fa0d4c14f0+2772: [<blt seq_len>], env=e0.3
  env             e303.3 = (MkEnv)            l     x=%303.1, parent=R_BaseNamespace, context 0
  fs              %303.4 = FrameState         R     0x55fa0cf16550+134: [%290.2], env=e303.3, next=%303.2
  void                    Deopt              !v    %303.4, Typecheck@0x55fa0deeaff8[Type#3], %290.2   !
BB164   <- [278]
  val?^ | miss    %164.0 = LdVar              eR    localGeneric, e0.3
  val?            %164.1 = Force!             !v    %164.0, e0.3   <val?_>
  val?^ | miss    %164.2 = LdVar              eR    i, e0.3
  val?            %164.3 = Force!             !v    %164.2, e0.3   <val?_>
  lgl$#-          %164.4 = IsType                   %164.3 isA val?+
  lgl$#-          %164.5 = IsType                   %164.1 isA val?+
  void                    Branch                   %164.5 -> BB298 (if true) | BB299 (if false)
BB163   <- [278]
  void                    Nop                !     
  int$-           %163.1 = %157.2
  goto BB157
BB296   <- [294]
  val?            %296.0 = Extract1_2D        wed   %294.1, missingArg, 3, elided   <str->
  val?            %296.1 = CallBuiltin        !v    importIntoEnv(%284.1, %292.0, %292.2, %296.0) e0.3
  goto BB65
BB297   <- [294]
  void                    Nop                !     
  lgl$#-          %297.1 = %294.2
  dr              %297.2 = DeadBranchReached@0x55fa0d006720[Test#29]
  goto BB147
BB147   <- [295, 297]
  val?^ | miss    %147.0 = Phi                      %295.1:BB295, %297.1:BB297
  val?^ | miss    %147.1 = %147.0
  dr              %147.2 = Phi                      %295.2:BB295, %297.2:BB297
  dr              %147.3 = %147.2
  fs              %147.4 = FrameState         R     0x55fa0d4c14f0+2516: [%284.1, %292.0, %292.2], env=e0.3
  void                    Deopt              !v    %147.4, %147.3, %147.1   !
BB305   <- [302]
  fs              %305.0 = FrameState         R     0x55fa0d4c14f0+2794: [%302.1], env=e0.3
  void                    Deopt              !v    %305.0, DeadBranchReached@0x55fa0d006720[Test#31], %302.5   !
BB304   <- [302]
  val?            %304.0 = Extract2_1D        wed   %302.1, %302.3, elided
  void                    StVar              lW    i, %304.0, e0.3
  val?^ | miss    %304.2 = LdVar              eR    .registerS3method, e0.3
  lgl$#-          %304.3 = Identical                %304.2, %0.5
  void                    Branch                   %304.3 -> BB306 (if true) | BB307 (if false)
BB298   <- [164]
  val?+           %298.0 = CastType           d     dn %164.1   <val?_>
  void                    Branch                   %164.4 -> BB300 (if true) | BB301 (if false)
BB299   <- [164]
  void                    Nop                !     
  val?            %299.1 = %164.1
  dr              %299.2 = Typecheck@0x55fa0d006720[Type#115]
  goto BB165
BB306   <- [304]
  prom-           %306.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p20, e0.3
  prom-           %306.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p22, e0.3
  prom-           %306.2 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p24, e0.3
  prom-           %306.3 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p26, e0.3
  prom-           %306.4 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p28, e0.3
  val?            %306.5 = StaticCall         !v    .registerS3method[0x55fa0ded1240](%306.0, %306.1, %306.2, %306.3, %306.4) from %0.5 e0.3
  int$-           %306.6 = %302.3
  goto BB74
BB307   <- [304]
  fs              %307.0 = FrameState         R     0x55fa0d4c14f0+2839: [%302.1, %302.2, %302.3], env=e0.3
  void                    Deopt              !v    %307.0, CallTarget@0x55fa0d006720[Call#39], %304.2   !
BB300   <- [298]
  val?+           %300.0 = CastType           d     dn %164.3   <val?_>
  val?+           %300.1 = Subassign1_1D      wed   false, %298.0, %300.0, elided
  void                    StVar              lW    localGeneric, %300.1, e0.3
  (cls|spec|blt)  %300.3 = LdFun              !v    registerS3method, e0.3
  fs              %300.4 = FrameState         R     0x55fa0d4c14f0+2121: [%260.1, %260.2, %157.2, %300.3], env=e0.3
  void                    Deopt              !v    %300.4, DeadCall@0x55fa0d006720[Call#32], %300.3   !
BB301   <- [298]
  void                    Nop                !     
  val?            %301.1 = %164.3
  dr              %301.2 = Typecheck@0x55fa0d006720[Type#116]
  goto BB165
BB165   <- [299, 301]
  val?^ | miss    %165.0 = Phi                      %299.1:BB299, %301.1:BB301
  val?^ | miss    %165.1 = %165.0
  dr              %165.2 = Phi                      %299.2:BB299, %301.2:BB301
  dr              %165.3 = %165.2
  fs              %165.4 = FrameState         R     0x55fa0d4c14f0+2101: [%260.1, %260.2, %157.2, false, %164.1, %164.3], env=e0.3
  void                    Deopt              !v    %165.4, %165.3, %165.1   !
BB74   <- [306, 316]
  int$-           %74.0 = Phi                      %306.6:BB306, %316.6:BB316
  int$-           %74.1 = %74.0
  int$-           %74.2 = Inc                      %74.1
  lgl$-           %74.3 = Lt                 d     %302.2, %74.2, elided
  lgl$#-          %74.4 = Identical                %74.3, true
  void                    Branch                   %74.4 -> BB78 (if true) | BB75 (if false)
BB78   <- [74]
  val?^ | miss    %78.0 = LdVar              eR    package, e0.3
  val?            %78.1 = Force!<lazy>       !v    %78.0, e0.3   <str$->
  lgl$#-          %78.2 = IsType                   %78.1 isA val?-
  void                    Branch                   %78.2 -> BB308 (if true) | BB309 (if false)
BB75   <- [74]
  val?            %75.0 = Extract2_1D        wed   %302.1, %74.2, elided
  void                    StVar              lW    i, %75.0, e0.3
  val?^ | miss    %75.2 = LdVar              eR    .registerS3method, e0.3
  lgl$#-          %75.3 = Identical                %75.2, %0.5
  void                    Branch                   %75.3 -> BB316 (if true) | BB317 (if false)
BB308   <- [78]
  val?-           %308.0 = CastType           d     dn %78.1   <str$->
  lgl-            %308.1 = Neq                wed   %308.0, "MASS", elided   <lgl$->
  lgl$#-          %308.2 = IsType                   %308.1 isA lgl$-
  void                    Branch                   %308.2 -> BB310 (if true) | BB311 (if false)
BB309   <- [78]
  fs              %309.0 = FrameState         R     0x55fa0d4c14f0+2993: [%78.1], env=e0.3
  void                    Deopt              !v    %309.0, Typecheck@0x55fa0d006720[Type#186], %78.1   !
BB316   <- [75]
  prom-           %316.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p29, e0.3
  prom-           %316.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p31, e0.3
  prom-           %316.2 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p33, e0.3
  prom-           %316.3 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p35, e0.3
  prom-           %316.4 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p37, e0.3
  val?            %316.5 = StaticCall         !v    .registerS3method[0x55fa0ded1240](%316.0, %316.1, %316.2, %316.3, %316.4) from %0.5 e0.3
  int$-           %316.6 = %74.2
  goto BB74
BB317   <- [75]
  fs              %317.0 = FrameState         R     0x55fa0d4c14f0+2921: [%302.1, %302.2, %74.2], env=e0.3
  void                    Deopt              !v    %317.0, CallTarget@0x55fa0d006720[Call#40], %75.2   !
BB310   <- [308]
  lgl$-           %310.0 = CastType           d     dn %308.1
  lgl$-           %310.1 = AsLogical                %310.0
  lgl$#-          %310.2 = Identical                %310.1, false
  void                    Branch                   %310.2 -> BB141 (if true) | BB83 (if false)
BB311   <- [308]
  void                    Nop                !     
  lgl-            %311.1 = %308.1
  dr              %311.2 = Typecheck@0x55fa0d006720[Type#187]
  goto BB81
BB141   <- [310]
  void                    Nop                !     
  lgl$-           %141.1 = %310.1
  goto BB86
BB83   <- [310]
  val?^ | miss    %83.0 = LdVar              eR    nrow, e0.3
  lgl$#-          %83.1 = Identical                %83.0, function(x) <(rir::DispatchTable*)0x55fa0cd6b6|...
  void                    Branch                   %83.1 -> BB312 (if true) | BB313 (if false)
BB81   <- [311, 313, 315]
  val?^ | miss    %81.0 = Phi                      %311.1:BB311, %313.1:BB313, %315.1:BB315
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %311.2:BB311, %313.2:BB313, %315.2:BB315
  dr              %81.3 = %81.2
  fs              %81.4 = FrameState         R     0x55fa0d4c14f0+3005: [%308.1], env=e0.3
  void                    Deopt              !v    %81.4, %81.3, %81.1   !
BB86   <- [141, 318]
  lgl$-           %86.0 = Phi                      %318.3:BB318, %141.1:BB141
  lgl$-           %86.1 = %86.0
  lgl$#-          %86.2 = CheckTrueFalse     e     %86.1
  void                    Branch                   %86.2 -> BB140 (if true) | BB87 (if false)
BB312   <- [83]
  val?^ | miss    %312.0 = LdVar              eR    overwrite, e0.3
  lgl$#-          %312.1 = IsType                   %312.0 isA val?~+ | miss
  void                    Branch                   %312.1 -> BB314 (if true) | BB315 (if false)
BB313   <- [83]
  void                    Nop                !     
  val?^ | miss    %313.1 = %83.0
  dr              %313.2 = CallTarget@0x55fa0d006720[Call#41]
  goto BB81
BB140   <- [86]
  void                    StVar              lW    .fmt, %0.7, e0.3
  (cls|spec|blt)  %140.1 = LdFun              !v    [, e0.3
  fs              %140.2 = FrameState         R     0x55fa0d4c14f0+3097: [%140.1], env=e0.3
  void                    Deopt              !v    %140.2, DeadCall@0x55fa0d006720[Call#42], %140.1   !
BB87   <- [86]
  void                    StVar              lW    register_S3_method_delayed, %0.6, e0.3
  val?^ | miss    %87.1 = LdVar              eR    nrow, e0.3
  lgl$#-          %87.2 = Identical                %87.1, function(x) <(rir::DispatchTable*)0x55fa0cd6b6|...
  void                    Branch                   %87.2 -> BB320 (if true) | BB321 (if false)
BB314   <- [312]
  val?~+ | miss   %314.0 = CastType           d     dn %312.0
  val?+           %314.1 = Force!<value>            %314.0,    <str_>
  val+            %314.2 = CallSafeBuiltin    wed   dim(%314.1)    <int->
  val?            %314.3 = Extract1_1D        wed   %314.2, 1L, elided   <int$->
  lgl$#-          %314.4 = IsType                   %314.3 isA int$-
  void                    Branch                   %314.4 -> BB318 (if true) | BB319 (if false)
BB315   <- [312]
  void                    Nop                !     
  val?^ | miss    %315.1 = %312.0
  dr              %315.2 = Typecheck@0x55fa0d006720[Type#188]
  goto BB81
BB320   <- [87]
  val?^ | miss    %320.0 = LdVar              eR    delayed, e0.3
  lgl$#-          %320.1 = IsType                   %320.0 isA val?~+ | miss
  void                    Branch                   %320.1 -> BB322 (if true) | BB323 (if false)
BB321   <- [87]
  void                    Nop                !     
  val?^ | miss    %321.1 = %87.1
  dr              %321.2 = CallTarget@0x55fa0d006720[Call#82]
  goto BB88
BB318   <- [314]
  int$-           %318.0 = CastType           d     dn %314.3
  lgl$-           %318.1 = AsLogical                %318.0
  lgl$-           %318.2 = LAnd                     %310.1, %318.1
  lgl$-           %318.3 = %318.2
  goto BB86
BB319   <- [314]
  prom-           %319.0 = MkArg                    %314.1, registerS3methods[0x55fa0cfa1590]_p38 (!refl), e0.3
  val?~           %319.1 = CastType                 up %319.0
  fs              %319.2 = FrameState         R     0x55fa0d4c14f0+3049: [%310.1], env=e0.3
  env             e319.3 = (MkEnv)            l     x=%319.1, parent=R_BaseNamespace, context 0
  fs              %319.4 = FrameState         R     0x55fa0cf16550+134: [%314.3], env=e319.3, next=%319.2
  void                    Deopt              !v    %319.4, Typecheck@0x55fa0deeaff8[Type#3], %314.3   !
BB322   <- [320]
  val?~+ | miss   %322.0 = CastType           d     dn %320.0
  val?+           %322.1 = Force!<value>            %322.0,    <str+>
  val+            %322.2 = CallSafeBuiltin    wed   dim(%322.1)    <int->
  val?            %322.3 = Extract1_1D        wed   %322.2, 1L, elided   <int$->
  lgl$#-          %322.4 = IsType                   %322.3 isA int$-
  void                    Branch                   %322.4 -> BB324 (if true) | BB325 (if false)
BB323   <- [320]
  void                    Nop                !     
  val?^ | miss    %323.1 = %320.0
  dr              %323.2 = Typecheck@0x55fa0d006720[Type#256]
  goto BB88
BB88   <- [321, 323]
  val?^ | miss    %88.0 = Phi                      %321.1:BB321, %323.1:BB323
  val?^ | miss    %88.1 = %88.0
  dr              %88.2 = Phi                      %321.2:BB321, %323.2:BB323
  dr              %88.3 = %88.2
  fs              %88.4 = FrameState         R     0x55fa0d4c14f0+4203: [], env=e0.3
  void                    Deopt              !v    %88.4, %88.3, %88.1   !
BB324   <- [322]
  int$-           %324.0 = CastType           d     dn %322.3
  lgl$#-          %324.1 = CheckTrueFalse     e     %324.0
  void                    Branch                   %324.1 -> BB137 (if true) | BB92 (if false)
BB325   <- [322]
  void                    Nop                !     
  val?            %325.1 = %322.3
  dr              %325.2 = Typecheck@0x55fa0deeaff8[Type#3]
  goto BB90
BB137   <- [324]
  val?^ | miss    %137.0 = LdVar              eR    seq_len, e0.3
  lgl$#-          %137.1 = Identical                <blt seq_len>, %137.0   <@?>
  void                    Branch                   %137.1 -> BB139 (if true) | BB138 (if false)
BB92   <- [324]
  val?^ | miss    %92.0 = LdVar              eR    getNamespaceInfo, e0.3
  lgl$#-          %92.1 = Identical                %92.0, function(ns, which) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %92.1 -> BB326 (if true) | BB327 (if false)
BB90   <- [325, 327]
  val?^ | miss    %90.0 = Phi                      %325.1:BB325, %327.1:BB327
  val?^ | miss    %90.1 = %90.0
  dr              %90.2 = Phi                      %325.2:BB325, %327.2:BB327
  dr              %90.3 = %90.2
  fs              %90.4 = FrameState         R     0x55fa0d4c14f0+4235: [], env=e0.3
  prom-           %90.5 = MkArg                    %322.1, registerS3methods[0x55fa0cfa1590]_p39 (!refl), e0.3
  val?~           %90.6 = CastType                 up %90.5
  env             e90.7 = (MkEnv)            l     x=%90.6, parent=R_BaseNamespace, context 0
  fs              %90.8 = FrameState         R     0x55fa0cf16550+134: [%322.3], env=e90.7, next=%90.4
  void                    Deopt              !v    %90.8, %90.3, %90.1   !
BB139   <- [137]
  (cls|spec|blt)  %139.0 = LdFun              !v    nrow, e0.3
  fs              %139.1 = FrameState         R     0x55fa0d4c14f0+4316: [<blt seq_len>, %139.0], env=e0.3
  void                    Deopt              !v    %139.1, DeadCall@0x55fa0d006720[Call#85], %139.0   !
BB138   <- [137]
  (cls|spec|blt)  %138.0 = LdFun              !v    seq_len, e0.3
  fs              %138.1 = FrameState         R     0x55fa0d4c14f0+4279: [%138.0], env=e0.3
  void                    Deopt              !v    %138.1, DeadCall@0x55fa0d006720[Call#83], %138.0   !
BB326   <- [92]
  prom-           %326.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p40, e0.3
  val?            %326.1 = StaticCall         !v    getNamespaceInfo[0x55fa0cd655a0](%326.0, "S3methods") e0.3   <str_>
  void                    StVar              lW    nsI, %326.1, e0.3
  lgl$#-          %326.3 = IsType                   %326.1 isA val?+
  val?^ | miss    %326.4 = LdVar              eR    ncol, e0.3
  lgl$#-          %326.5 = Identical                %326.4, function(x) <(rir::DispatchTable*)0x55fa0d0f5e|...
  void                    Branch                   %326.5 -> BB328 (if true) | BB329 (if false)
BB327   <- [92]
  void                    Nop                !     
  val?^ | miss    %327.1 = %92.0
  dr              %327.2 = CallTarget@0x55fa0d006720[Call#90]
  goto BB90
BB328   <- [326]
  void                    Branch                   %326.3 -> BB330 (if true) | BB331 (if false)
BB329   <- [326]
  void                    Nop                !     
  val?^ | miss    %329.1 = %326.4
  dr              %329.2 = CallTarget@0x55fa0d006720[Call#91]
  goto BB93
BB330   <- [328]
  val?+           %330.0 = CastType           d     dn %326.1   <str_>
  val+            %330.1 = CallSafeBuiltin    wed   dim(%330.0)    <int->
  val?            %330.2 = Extract1_1D        wed   %330.1, 2L, elided   <int$->
  lgl$#-          %330.3 = IsType                   %330.2 isA int$-
  void                    Branch                   %330.3 -> BB332 (if true) | BB333 (if false)
BB331   <- [328]
  void                    Nop                !     
  val?            %331.1 = %326.1
  dr              %331.2 = Typecheck@0x55fa0d006720[Type#308]
  goto BB93
BB93   <- [329, 331]
  val?^ | miss    %93.0 = Phi                      %329.1:BB329, %331.1:BB331
  val?^ | miss    %93.1 = %93.0
  dr              %93.2 = Phi                      %329.2:BB329, %331.2:BB331
  dr              %93.3 = %93.2
  fs              %93.4 = FrameState         R     0x55fa0d4c14f0+5230: [], env=e0.3
  void                    Deopt              !v    %93.4, %93.3, %93.1   !
BB332   <- [330]
  int$-           %332.0 = CastType           d     dn %330.2
  void                    StVar              lW    p1, %332.0, e0.3
  val?^ | miss    %332.2 = LdVar              eR    info, e0.3
  val?            %332.3 = Force!<value>      !v    %332.2, e0.3   <str_>
  lgl$#-          %332.4 = IsType                   %332.3 isA val?+
  void                    Branch                   %332.4 -> BB334 (if true) | BB335 (if false)
BB333   <- [330]
  prom-           %333.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p41 (!refl), e0.3
  val?^           %333.1 = CastType                 up %333.0
  fs              %333.2 = FrameState         R     0x55fa0d4c14f0+5262: [], env=e0.3
  env             e333.3 = (MkEnv)            l     x=%333.1, parent=R_BaseNamespace, context 0
  fs              %333.4 = FrameState         R     0x55fa0cd9e450+134: [%330.2], env=e333.3, next=%333.2
  void                    Deopt              !v    %333.4, Typecheck@0x55fa0c0377d8[Type#3], %330.2   !
BB334   <- [332]
  val?+           %334.0 = CastType           d     dn %332.3   <str_>
  val+            %334.1 = CallSafeBuiltin    wed   dim(%334.0)    <int->
  val?            %334.2 = Extract1_1D        wed   %334.1, 2L, elided   <int$->
  lgl$#-          %334.3 = IsType                   %334.2 isA int$-
  void                    Branch                   %334.3 -> BB336 (if true) | BB337 (if false)
BB335   <- [332]
  fs              %335.0 = FrameState         R     0x55fa0d4c14f0+5323: [true], env=e0.3
  prom-           %335.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p42, e0.3
  val?^           %335.2 = CastType                 up %335.1
  env             e335.3 = (MkEnv)            l     x=%335.2, parent=R_BaseNamespace, context 0
  fs              %335.4 = FrameState         R     0x55fa0cd9e450+69: [<blt dim>], env=e335.3, next=%335.0
  fs              %335.5 = FrameState         R     0x55fa0d0f5d80+5(pr): [%332.3], env=e0.3, next=%335.4
  void                    Deopt              !v    %335.5, Typecheck@0x55fa0c0377d8[Type#1], %332.3   !
BB336   <- [334]
  int$-           %336.0 = CastType           d     dn %334.2
  void                    StVar              lW    p2, %336.0, e0.3
  val?^ | miss    %336.2 = LdVar              eR    p1, e0.3
  lgl$#-          %336.3 = IsType                   %336.2 isA int$-
  void                    Branch                   %336.3 -> BB338 (if true) | BB339 (if false)
BB337   <- [334]
  fs              %337.0 = FrameState         R     0x55fa0d4c14f0+5323: [true], env=e0.3
  prom-           %337.1 = MkArg                    %334.0, registerS3methods[0x55fa0cfa1590]_p42 (!refl), e0.3
  val?~           %337.2 = CastType                 up %337.1
  env             e337.3 = (MkEnv)            l     x=%337.2, parent=R_BaseNamespace, context 0
  fs              %337.4 = FrameState         R     0x55fa0cd9e450+134: [%334.2], env=e337.3, next=%337.0
  void                    Deopt              !v    %337.4, Typecheck@0x55fa0c0377d8[Type#3], %334.2   !
BB338   <- [336]
  int$-           %338.0 = CastType           d     dn %336.2
  lgl$-           %338.1 = Neq                d     %338.0, %336.0, elided   <lgl$->
  lgl$-           %338.2 = AsLogical                %338.1
  lgl$-           %338.3 = AsLogical                %338.2
  lgl$#-          %338.4 = CheckTrueFalse     e     %338.3
  void                    Branch                   %338.4 -> BB136 (if true) | BB103 (if false)
BB339   <- [336]
  void                    Nop                !     
  val?^ | miss    %339.1 = %336.2
  dr              %339.2 = Typecheck@0x55fa0d006720[Type#313]
  goto BB101
BB136   <- [338]
  (cls|spec|blt)  %136.0 = LdFun              !v    stop, e0.3
  fs              %136.1 = FrameState         R     0x55fa0d4c14f0+5406: [%136.0], env=e0.3
  void                    Deopt              !v    %136.1, DeadCall@0x55fa0d006720[Call#93], %136.0   !
BB103   <- [338]
  val?^ | miss    %103.0 = LdVar              eR    setNamespaceInfo, e0.3
  lgl$#-          %103.1 = Identical                %103.0, function(ns, which, val) <(rir::DispatchTable*|...
  void                    Branch                   %103.1 -> BB340 (if true) | BB341 (if false)
BB101   <- [339, 341]
  val?^ | miss    %101.0 = Phi                      %339.1:BB339, %341.1:BB341
  val?^ | miss    %101.1 = %101.0
  dr              %101.2 = Phi                      %339.2:BB339, %341.2:BB341
  dr              %101.3 = %101.2
  fs              %101.4 = FrameState         R     0x55fa0d4c14f0+5339: [true, %336.0], env=e0.3
  void                    Deopt              !v    %101.4, %101.3, %101.1   !
BB340   <- [103]
  prom-           %340.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p43, e0.3
  prom-           %340.1 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p44, e0.3
  ct              %340.2 = PushContext        lCL   %340.0, "S3methods", %340.1, setNamespaceInfo(env, "S3methods", rbind(info,|..., function(ns, which, val) <(rir::DispatchTable*|..., e0.3
  val?^           %340.3 = CastType                 up %340.1
  val?^           %340.4 = CastType                 up %340.0
  env             e340.5 = MkEnv              l     ns=%340.4, which="S3methods", val=%340.3, parent=R_BaseNamespace, context 1
  prom-           %340.6 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p75, e340.5
  ct              %340.7 = PushContext        lCL   %340.6, false, asNamespace(ns, base.OK=FALSE), function(ns, base.OK=TRUE) <(rir::DispatchTabl|..., e340.5
  val?^           %340.8 = CastType                 up %340.6
  env             e340.9 = MkEnv              l     ns=%340.8, base.OK=false, parent=R_BaseNamespace, context 1
  val?            %340.10 = Force!<lazy>       !vL   %340.8, e340.9   <(str|env)+>
  lgl$#-          %340.11 = IsType                   %340.10 isA val?+
  void                    Branch                   %340.11 -> BB342 (if true) | BB343 (if false)
BB341   <- [103]
  void                    Nop                !     
  val?^ | miss    %341.1 = %103.0
  dr              %341.2 = CallTarget@0x55fa0d006720[Call#97]
  goto BB101
BB342   <- [340]
  val?+           %342.0 = CastType           d     dn %340.10   <(str|env)+>
  lgl$#-          %342.1 = CallSafeBuiltin    wed   is.character(%342.0)    <lgl$->
  void                    Branch                   %342.1 -> BB135 (if true) | BB106 (if false)
BB343   <- [340]
  fs              %343.0 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %343.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e340.5, next=%343.0
  fs              %343.2 = FrameState         R     0x55fa0cea7590+69: [<blt is.character>, %340.10], env=e340.9, next=%343.1
  void                    Deopt              !v    %343.2, Typecheck@0x55fa0c195198[Type#1], %340.10   !
BB135   <- [342]
  void                    Nop                !     
  lgl$#-          %135.1 = %342.1
  goto BB107
BB106   <- [342]
  lgl$#-          %106.0 = CallSafeBuiltin    wed   is.symbol(%342.0)    <lgl$->
  lgl$-           %106.1 = LOr                      %342.1, %106.0
  lgl$-           %106.2 = %106.1
  goto BB107
BB107   <- [135, 106]
  lgl$-           %107.0 = Phi                      %106.2:BB106, %135.1:BB135
  lgl$-           %107.1 = %107.0
  lgl$#-          %107.2 = CheckTrueFalse     e     %107.1
  void                    Branch                   %107.2 -> BB132 (if true) | BB108 (if false)
BB132   <- [107]
  prom-           %132.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p76, e340.9
  ct              %132.1 = PushContext        lCL   %132.0, getNamespace(ns), function(name) <(rir::DispatchTable*)0x55fa0cc|..., e340.9
  val?^           %132.2 = CastType                 up %132.0
  env             e132.3 = MkEnv              l     name=%132.2, parent=R_BaseNamespace, context 1
  val?            %132.4 = Force!<lazy>       !vL   %132.2, e132.3   <str$+>
  val?            %132.5 = CallBuiltin        !v    getRegisteredNamespace(%132.4) e132.3   <env->
  lgl$-           %132.6 = Is                       %132.5, NULL
  void                    StVar              lW    ns, %132.5, e132.3
  val             %132.8 = ChkMissing         e     %132.5
  lgl$-           %132.9 = Not                d     %132.6, elided
  lgl$#-          %132.10 = CheckTrueFalse     e     %132.9
  void                    Branch                   %132.10 -> BB134 (if true) | BB133 (if false)
BB108   <- [107]
  void                    Nop                !     
  goto BB109
BB134   <- [132]
  val?            %134.0 = PopContext         C     %132.5, %132.1   <env->
  void                    StVar              lW    ns, %134.0, e340.9
  goto BB109
BB133   <- [132]
  fs              %133.0 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %133.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e340.5, next=%133.0
  fs              %133.2 = FrameState         R     0x55fa0cea7590+244: [], env=e340.9, next=%133.1
  (cls|spec|blt)  %133.3 = LdFun              !v    loadNamespace, e132.3
  fs              %133.4 = FrameState         R     0x55fa0dee70c0+67: [%133.3], env=e132.3, next=%133.2
  void                    Deopt              !v    %133.4, DeadCall@0x55fa0d3377a8[Call#0], %133.3   !
BB109   <- [108, 134]
  val?^ | miss    %109.0 = LdVar              eR    isNamespace, e340.9
  lgl$#-          %109.1 = Identical                %109.0, function(ns) <(rir::DispatchTable*)0x55fa0ce9b|...
  void                    Branch                   %109.1 -> BB344 (if true) | BB345 (if false)
BB344   <- [109]
  prom-           %344.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p77, e340.9
  ct              %344.1 = PushContext        lCL   %344.0, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x55fa0ce9b|..., e340.9
  val?^           %344.2 = CastType                 up %344.0
  env             e344.3 = MkEnv              l     ns=%344.2, parent=R_BaseNamespace, context 1
  val?            %344.4 = Force!<lazy>       !vL   %344.2, e344.3   <env->
  val?            %344.5 = CallBuiltin        !v    isNamespaceEnv(%344.4) e344.3
  val?            %344.6 = PopContext         C     %344.5, %344.1   <lgl$->
  lgl$#-          %344.7 = IsType                   %344.6 isA lgl$-
  void                    Branch                   %344.7 -> BB346 (if true) | BB347 (if false)
BB345   <- [109]
  fs              %345.0 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %345.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e340.5, next=%345.0
  fs              %345.2 = FrameState         R     0x55fa0cea7590+258: [], env=e340.9, next=%345.1
  void                    Deopt              !v    %345.2, CallTarget@0x55fa0c195198[Call#3], %109.0   !
BB346   <- [344]
  lgl$-           %346.0 = CastType           d     dn %344.6
  lgl$-           %346.1 = Not                d     %346.0, elided
  lgl$#-          %346.2 = CheckTrueFalse     e     %346.1
  void                    Branch                   %346.2 -> BB131 (if true) | BB114 (if false)
BB347   <- [344]
  fs              %347.0 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %347.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e340.5, next=%347.0
  fs              %347.2 = FrameState         R     0x55fa0cea7590+290: [%344.6], env=e340.9, next=%347.1
  void                    Deopt              !v    %347.2, Typecheck@0x55fa0c195198[Type#9], %344.6   !
BB131   <- [346]
  fs              %131.0 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %131.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e340.5, next=%131.0
  (cls|spec|blt)  %131.2 = LdFun              !v    stop, e340.9
  fs              %131.3 = FrameState         R     0x55fa0cea7590+435: [%131.2], env=e340.9, next=%131.1
  void                    Deopt              !v    %131.3, DeadCall@0x55fa0c195198[Call#6], %131.2   !
BB114   <- [346]
  val?^ | miss    %114.0 = LdVar              eR    base.OK, e340.9
  val?            %114.1 = Force!<lazy>       !v    %114.0, e340.9   <lgl$->
  lgl$#-          %114.2 = IsType                   %114.1 isA lgl$-
  void                    Branch                   %114.2 -> BB348 (if true) | BB349 (if false)
BB348   <- [114]
  lgl$-           %348.0 = CastType           d     dn %114.1
  lgl$-           %348.1 = Not                d     %348.0, elided
  lgl$-           %348.2 = AsLogical                %348.1
  lgl$#-          %348.3 = Identical                %348.2, false
  void                    Branch                   %348.3 -> BB130 (if true) | BB117 (if false)
BB349   <- [114]
  void                    Nop                !     
  val?            %349.1 = %114.1
  dr              %349.2 = Typecheck@0x55fa0c195198[Type#10]
  goto BB115
BB130   <- [348]
  void                    Nop                !     
  lgl$-           %130.1 = %348.2
  goto BB120
BB117   <- [348]
  val?^ | miss    %117.0 = LdVar              eR    isBaseNamespace, e340.9
  lgl$#-          %117.1 = Identical                %117.0, function(ns) <(rir::DispatchTable*)0x55fa0d01a|...
  void                    Branch                   %117.1 -> BB350 (if true) | BB351 (if false)
BB115   <- [349, 351]
  val?^ | miss    %115.0 = Phi                      %349.1:BB349, %351.1:BB351
  val?^ | miss    %115.1 = %115.0
  dr              %115.2 = Phi                      %349.2:BB349, %351.2:BB351
  dr              %115.3 = %115.2
  fs              %115.4 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %115.5 = FrameState         R     0x55fa0d48aa10+45: [], env=e340.5, next=%115.4
  fs              %115.6 = FrameState         R     0x55fa0cea7590+311: [%114.1], env=e340.9, next=%115.5
  void                    Deopt              !v    %115.6, %115.3, %115.1   !
BB120   <- [130, 354]
  lgl$-           %120.0 = Phi                      %354.3:BB354, %130.1:BB130
  lgl$-           %120.1 = %120.0
  lgl$#-          %120.2 = CheckTrueFalse     e     %120.1
  void                    Branch                   %120.2 -> BB129 (if true) | BB121 (if false)
BB350   <- [117]
  prom-           %350.0 = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p78, e340.9
  val?            %350.1 = StaticCall         !v    isBaseNamespace[0x55fa0d0c4b80](%350.0) e340.9   <lgl$->
  lgl$#-          %350.2 = IsType                   %350.1 isA lgl$-
  void                    Branch                   %350.2 -> BB354 (if true) | BB355 (if false)
BB351   <- [117]
  void                    Nop                !     
  val?^ | miss    %351.1 = %117.0
  dr              %351.2 = CallTarget@0x55fa0c195198[Call#4]
  goto BB115
BB129   <- [120]
  fs              %129.0 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %129.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e340.5, next=%129.0
  (cls|spec|blt)  %129.2 = LdFun              !v    stop, e340.9
  fs              %129.3 = FrameState         R     0x55fa0cea7590+393: [%129.2], env=e340.9, next=%129.1
  void                    Deopt              !v    %129.3, DeadCall@0x55fa0c195198[Call#5], %129.2   !
BB121   <- [120]
  val?^ | miss    %121.0 = LdVar              eR    ns, e340.9
  val?            %121.1 = Force!<wrapped>    !v    %121.0, e340.9   <env->
  val?            %121.2 = PopContext         C     %121.1, %340.7   <env->
  void                    StVar              lW    ns, %121.2, e340.5
  lgl$#-          %121.4 = IsType                   %121.2 isA val+   <true>
  lgl$#-          %121.5 = IsType                   %121.2 isA val?-
  val             %121.6 = ChkMissing         e     %121.2
  void                    Branch                   %121.4 -> BB352 (if true) | BB353 (if false)
BB354   <- [350]
  lgl$-           %354.0 = CastType           d     dn %350.1
  lgl$-           %354.1 = AsLogical                %354.0
  lgl$-           %354.2 = LAnd                     %348.2, %354.1
  lgl$-           %354.3 = %354.2
  goto BB120
BB355   <- [350]
  fs              %355.0 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %355.1 = FrameState         R     0x55fa0d48aa10+45: [], env=e340.5, next=%355.0
  fs              %355.2 = FrameState         R     0x55fa0cea7590+356: [%348.2, %350.1], env=e340.9, next=%355.1
  void                    Deopt              !v    %355.2, Typecheck@0x55fa0c195198[Type#12], %350.1   !
BB352   <- [121]
  void                    Branch                   %121.5 -> BB356 (if true) | BB357 (if false)
BB353   <- [121]
  void                    Nop                !     
  lgl$#-          %353.1 = %121.4
  dr              %353.2 = DeadBranchReached@0x55fa0cf7db20[Test#0]
  goto BB122
BB356   <- [352]
  val?-           %356.0 = CastType           d     dn %121.2   <env->
  val?            %356.1 = Extract2_1D        wed   %356.0, ".__NAMESPACE__.", elided   <env->
  void                    StVar              lW    info, %356.1, e340.5
  val?^ | miss    %356.3 = LdVar              eR    val, e340.5
  val?            %356.4 = Force!<lazy>       !v    %356.3, e340.5   <(vec|env)+>
  val?^ | miss    %356.5 = LdVar              eR    info !upd, e340.5
  lgl$#-          %356.6 = IsType                   %356.5 isA val?~- | miss
  void                    Branch                   %356.6 -> BB358 (if true) | BB359 (if false)
BB357   <- [352]
  void                    Nop                !     
  val?            %357.1 = %121.2
  dr              %357.2 = Typecheck@0x55fa0cf7db20[Type#1]
  goto BB122
BB122   <- [353, 357]
  val?^ | miss    %122.0 = Phi                      %353.1:BB353, %357.1:BB357
  val?^ | miss    %122.1 = %122.0
  dr              %122.2 = Phi                      %353.2:BB353, %357.2:BB357
  dr              %122.3 = %122.2
  fs              %122.4 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %122.5 = FrameState         R     0x55fa0d48aa10+59: [], env=e340.5, next=%122.4
  void                    Deopt              !v    %122.5, %122.3, %122.1   !
BB358   <- [356]
  val?~- | miss   %358.0 = CastType           d     dn %356.5
  val?-           %358.1 = Force!<value>            %358.0,    <env->
  val?^ | miss    %358.2 = LdVar              eR    which, e340.5
  val?            %358.3 = Force!<value>      !v    %358.2, e340.5   <str$->
  lgl$#-          %358.4 = IsType                   %358.3 isA val?-
  lgl$#-          %358.5 = IsType                   %356.4 isA val?+
  void                    Branch                   %358.5 -> BB360 (if true) | BB361 (if false)
BB359   <- [356]
  fs              %359.0 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %359.1 = FrameState         R     0x55fa0d48aa10+135: [%356.4], env=e340.5, next=%359.0
  void                    Deopt              !v    %359.1, Typecheck@0x55fa0cf7db20[Type#5], %356.5   !
BB360   <- [358]
  val?+           %360.0 = CastType           d     dn %356.4   <(vec|env)+>
  void                    Branch                   %358.4 -> BB362 (if true) | BB363 (if false)
BB361   <- [358]
  void                    Nop                !     
  val?            %361.1 = %356.4
  dr              %361.2 = Typecheck@0x55fa0cf7db20[Type#4]
  goto BB126
BB362   <- [360]
  val?-           %362.0 = CastType           d     dn %358.3   <str$->
  val?+           %362.1 = Subassign2_1D      wed   %360.0, %358.1, %362.0, elided
  void                    StVar              lW    info, %362.1, e340.5
  void                    Invisible          v     
  val?            %362.4 = PopContext         C     %360.0, %340.2   <str_>
  val?            %362.5 = %362.4
  goto BB128
BB363   <- [360]
  void                    Nop                !     
  val?            %363.1 = %358.3
  dr              %363.2 = Typecheck@0x55fa0cf7db20[Type#6]
  goto BB126
BB126   <- [361, 363]
  val?^ | miss    %126.0 = Phi                      %361.1:BB361, %363.1:BB363
  val?^ | miss    %126.1 = %126.0
  dr              %126.2 = Phi                      %361.2:BB361, %363.2:BB363
  dr              %126.3 = %126.2
  fs              %126.4 = FrameState         R     0x55fa0d4c14f0+5489: [], env=e0.3
  fs              %126.5 = FrameState         R     0x55fa0d48aa10+165: [%356.4, %356.4, %358.1, %358.3], env=e340.5, next=%126.4
  void                    Deopt              !v    %126.5, %126.3, %126.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 1, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 2, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     [, <0x55fa0ad53c80>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p5, e0.0
  prom-           %0.3  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p6, 
  val?            %0.4  = NamedCall          !     %0.1(%0.2, missingArg, %0.3, drop=false) e0.0   <str_>
  void                    Return             l     %0.4
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  int-            %0.0  = Colon              vd    1L, 3L, elided   <val?_>
  void                    Return             l     %0.0
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 4L, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 3, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    loc, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eager, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eager, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 1, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    loc, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    l2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p21, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 1, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p23, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 2, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p25, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 3, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p27, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 4, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p30, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 1, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p32, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 2, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p34, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 3, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p36, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 4, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    overwrite, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    delayed, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nsI, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rbind, <0x55fa0c6e28e0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p45, e0.0
  prom-           %0.3  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p46, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str_>
  void                    Return             l     %0.4
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nsI, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    localGeneric, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    localGeneric, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl->
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p51, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 1, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    is, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    genfun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p57, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 1, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    is, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    genfun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 67:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     cbind, e0.0
  prom-           %0.2  = MkArg                    unboundValue, registerS3methods[0x55fa0cfa1590]_p68, e0.0
  (miss|dots)     %0.3  = LdDots             R     , e0.0
  *dots-          %0.4  = ExpandDots               %0.3
  val?            %0.5  = NamedCall          !     %0.1(%0.2, .xpandDotsTrigger=%0.4) e0.0   <val?_>
  void                    Return             l     %0.5
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    deparse.level, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 75:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 76:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 77:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 78:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ registerS3methods[0x55fa0cfa1590]                                            │
└──────────────────────────────────────────────────────────────────────────────┘
