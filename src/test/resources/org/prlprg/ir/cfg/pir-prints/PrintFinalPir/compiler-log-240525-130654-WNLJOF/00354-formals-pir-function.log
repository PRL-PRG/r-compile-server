
┌──────────────────────────────────────────────────────────────────────────────┐
│ formals[0x55fa0cfb8d30]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
formals[0x55fa0cfb8d30]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     fun=%0.0, envir(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %0.2  = MkArg                    unboundValue, formals[0x55fa0cfb8d30]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    envir, %0.3, e0.1
  val?            %0.5  = Force!<lazy>       !v    %0.0, e0.1   <cls->
  lgl$#-          %0.6  = IsType                   %0.5 isA val?-
  void                    Branch                   %0.6 -> BB7 (if true) | BB8 (if false)
BB7   <- [0]
  val?-           %7.0  = CastType           d     dn %0.5   <cls->
  lgl$#-          %7.1  = CallSafeBuiltin    wed   is.character(%7.0)    <lgl$->
  void                    Branch                   %7.1 -> BB5 (if true) | BB3 (if false)
BB8   <- [0]
  fs              %8.0  = FrameState         R     0x55fa0d326f40+69: [<blt is.character>, %0.5], env=e0.1
  void                    Deopt              !v    %8.0, Typecheck@0x55fa0d778c58[Type#4], %0.5   !
BB5   <- [7]
  (cls|spec|blt)  %5.0  = LdFun              !v    get, e0.1
  prom-           %5.1  = MkArg                    unboundValue, formals[0x55fa0cfb8d30]_p1, e0.1
  prom-           %5.2  = MkArg                    unboundValue, formals[0x55fa0cfb8d30]_p2, e0.1
  val?            %5.3  = NamedCall          !v    %5.0(%5.1, mode="function", envir=%5.2) e0.1   <val?_>
  void                    StVar              lW    fun, %5.3, e0.1
  goto BB4
BB3   <- [7]
  void                    Nop                !     
  goto BB4
BB4   <- [3, 5]
  val?^ | miss    %4.0  = LdVar              eR    fun, e0.1
  val?            %4.1  = Force!<wrapped>    !v    %4.0, e0.1   <cls->
  val+            %4.2  = CallSafeBuiltin    vwed  formals(%4.1) 
  void                    Return             l     %4.2
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    envir, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ formals[0x55fa0cfb8d30]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
