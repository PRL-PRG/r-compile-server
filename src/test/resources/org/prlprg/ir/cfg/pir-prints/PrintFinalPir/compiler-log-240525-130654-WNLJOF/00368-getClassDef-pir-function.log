
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x55fa0cdb2a50]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1                     │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x55fa0cdb2a50]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  lgl$#-          %0.4  = Identical                %0.0, missingArg
  env             e0.5  = MkEnv              l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=missingArg, parent=<env 0x55fa0b35b378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB34 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p0, e0.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.5
  goto BB3
BB34   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 34]
  void                    Branch                   %0.4 -> BB33 (if true) | BB4 (if false)
BB33   <- [3]
  prom-           %33.0 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p2, e0.5
  val?^ | miss    %33.1 = CastType                 up %33.0
  void                    StArg              lW    package, %33.1, e0.5
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [33, 4]
  void                    StArg              lW    inherits, true, e0.5
  val?^ | miss    %5.1  = LdVar              eR    .getClassesFromCache, <env 0x55fa0b35b378>
  lgl$#-          %5.2  = Identical                %5.1, function(name) <(rir::DispatchTable*)0x55fa0cf|...
  void                    Branch                   %5.2 -> BB35 (if true) | BB36 (if false)
BB35   <- [5]
  prom-           %35.0 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p18, e0.5
  ct              %35.1 = PushContext        lCL   %35.0, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x55fa0cf|..., e0.5
  val?^           %35.2 = CastType                 up %35.0
  val?^ | miss    %35.3 = LdVar              eR    .Call, <env 0x55fa0b35b378>
  lgl$#-          %35.4 = Identical                <blt .Call>, %35.3   <true>
  void                    Branch                   %35.4 -> BB37 (if true) | BB38 (if false)
BB36   <- [5]
  fs              %36.0 = FrameState         R     0x55fa0d117f20+0: [], env=e0.5
  void                    Deopt              !v    %36.0, CallTarget@0x55fa0d01ec50[Call#3], %5.1
BB37   <- [35]
  val?^ | miss    %37.0 = LdVar              eR    C_R_getClassFromCache, <env 0x55fa0b35b378>
  env             e37.1 = MkEnv              l     name=%35.2, parent=<env 0x55fa0b35b378>, context 1
  val?            %37.2 = Force!<value>      !v    %37.0, e37.1   <vec>
  val?^ | miss    %37.3 = LdVar              eR    name, e37.1
  val?            %37.4 = Force!<lazy>       !v    %37.3, e37.1   <str$+>
  val?^ | miss    %37.5 = LdVar              eR    .classTable, e37.1
  val?            %37.6 = Force!<wrapped>    !v    %37.5, e37.1   <env->
  val?            %37.7 = CallBuiltin        !v    .Call(%37.2, %37.4, %37.6) e37.1   <other>
  val?            %37.8 = PopContext         C     %37.7, %35.1   <other>
  lgl$-           %37.9 = Is                       %37.8, list
  void                    StVar              lW    value, %37.8, e0.5
  val             %37.11 = ChkMissing         e     %37.8
  lgl$#-          %37.12 = CheckTrueFalse     e     %37.9
  void                    Branch                   %37.12 -> BB32 (if true) | BB10 (if false)
BB38   <- [35]
  fs              %38.0 = FrameState         R     0x55fa0d117f20+72: [], env=e0.5
  env             e38.1 = (MkEnv)            l     name=%35.2, parent=<env 0x55fa0b35b378>, context 1
  fs              %38.2 = FrameState         R     0x55fa0d04a060+17: [<blt .Call>, %35.4], env=e38.1, next=%38.0
  void                    Deopt              !v    %38.2, DeadBranchReached@0x55fa0c038388[Test#0], %35.4   !
BB32   <- [37]
  (cls|spec|blt)  %32.0 = LdFun              !v    .resolveClassList, e0.5
  prom-           %32.1 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p19, e0.5
  prom-           %32.2 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p20, e0.5
  prom-           %32.3 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p21, e0.5
  val?            %32.4 = Call               !v    %32.0(%32.1, %32.2, %32.3) e0.5   <val?_>
  void                    StVar              lW    value, %32.4, e0.5
  val?            %32.6 = %32.4
  goto BB11
BB10   <- [37]
  void                    Nop                !     
  val?            %10.1 = %37.8
  goto BB11
BB11   <- [10, 32]
  val?            %11.0 = Phi                      %32.6:BB32, %10.1:BB10
  val?            %11.1 = %11.0
  val             %11.2 = ChkMissing         e     %11.1   <other>
  lgl$-           %11.3 = Is                       %11.2, NULL
  lgl$#-          %11.4 = CheckTrueFalse     e     %11.3
  void                    Branch                   %11.4 -> BB14 (if true) | BB12 (if false)
BB14   <- [11]
  (cls|spec|blt)  %14.0 = LdFun              !v    classMetaName, e0.5
  prom-           %14.1 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p5, e0.5
  val?            %14.2 = Call               !v    %14.0(%14.1) e0.5   <val?_>
  void                    StVar              lW    cname, %14.2, e0.5
  val?^ | miss    %14.4 = LdVar              eR    is.character, e0.5
  lgl$#-          %14.5 = Identical                <blt is.character>, %14.4   <@?>
  void                    Branch                   %14.5 -> BB31 (if true) | BB15 (if false)
BB12   <- [11]
  void                    Nop                !     
  goto BB13
BB31   <- [14]
  val?^ | miss    %31.0 = LdVar              eR    where, e0.5
  val?            %31.1 = Force!             !v    %31.0, e0.5   <val?_>
  lgl$#-          %31.2 = CallSafeBuiltin    wed   is.character(%31.1) 
  lgl$#-          %31.3 = %31.2
  goto BB16
BB15   <- [14]
  val?^ | miss    %15.0 = LdVar              eR    where, e0.5
  val?            %15.1 = Force!             !v    %15.0, e0.5   <val?_>
  lgl$#-          %15.2 = CallSafeBuiltin    wed   is.character(%15.1) 
  lgl$#-          %15.3 = %15.2
  goto BB16
BB13   <- [12, 25, 26]
  val?^ | miss    %13.0 = LdVar              eR    value, e0.5
  void                    Visible            v     
  val?            %13.2 = Force!<value>      !     %13.0, e0.5   <other>
  void                    Return             l     %13.2
BB16   <- [15, 31]
  lgl$#-          %16.0 = Phi                      %15.3:BB15, %31.3:BB31   <val?_>
  lgl$#-          %16.1 = %16.0
  void                    Branch                   %16.1 -> BB30 (if true) | BB17 (if false)
BB30   <- [16]
  val?^ | miss    %30.0 = LdVar              eR    where, e0.5
  val?            %30.1 = Force!             !v    %30.0, e0.5   <val?_>
  void                    StVar              lW    package, %30.1, e0.5
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  goto BB18
BB18   <- [17, 30]
  (cls|spec|blt)  %18.0 = LdFun              !v    isTRUE, e0.5
  prom-           %18.1 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p8, e0.5
  val?            %18.2 = Call               !v    %18.0(%18.1) e0.5   <val?_>
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2
  void                    Branch                   %18.3 -> BB29 (if true) | BB19 (if false)
BB29   <- [18]
  (cls|spec|blt)  %29.0 = LdFun              !v    .requirePackage, e0.5
  prom-           %29.1 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p17, e0.5
  val?            %29.2 = Call               !v    %29.0(%29.1) e0.5   <val?_>
  void                    StVar              lW    package, %29.2, e0.5
  goto BB20
BB19   <- [18]
  void                    Nop                !     
  goto BB20
BB20   <- [19, 29]
  val?^ | miss    %20.0 = LdVar              eR    is.environment, e0.5
  lgl$#-          %20.1 = Identical                <blt is.environment>, %20.0   <@?>
  void                    Branch                   %20.1 -> BB28 (if true) | BB21 (if false)
BB28   <- [20]
  val?^ | miss    %28.0 = LdVar              eR    package, e0.5
  val?            %28.1 = Force!             !v    %28.0, e0.5   <val?_>
  lgl$#-          %28.2 = CallSafeBuiltin    wed   is.environment(%28.1) 
  lgl$#-          %28.3 = %28.2
  goto BB22
BB21   <- [20]
  val?^ | miss    %21.0 = LdVar              eR    package, e0.5
  val?            %21.1 = Force!             !v    %21.0, e0.5   <val?_>
  lgl$#-          %21.2 = CallSafeBuiltin    wed   is.environment(%21.1) 
  lgl$#-          %21.3 = %21.2
  goto BB22
BB22   <- [28, 21]
  lgl$#-          %22.0 = Phi                      %21.3:BB21, %28.3:BB28   <val?_>
  lgl$#-          %22.1 = %22.0
  void                    Branch                   %22.1 -> BB27 (if true) | BB23 (if false)
BB27   <- [22]
  (cls|spec|blt)  %27.0 = LdFun              !v    get0, e0.5
  prom-           %27.1 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p14, e0.5
  prom-           %27.2 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p15, e0.5
  prom-           %27.3 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p16, e0.5
  val?            %27.4 = NamedCall          !v    %27.0(%27.1, %27.2, inherits=%27.3) e0.5   <val?_>
  void                    StVar              lW    value, %27.4, e0.5
  goto BB24
BB23   <- [22]
  void                    Nop                !     
  goto BB24
BB24   <- [23, 27]
  val?^ | miss    %24.0 = LdVar              eR    value, e0.5
  val?            %24.1 = Force!             !v    %24.0, e0.5   <val?_>
  lgl$-           %24.2 = Is                       %24.1, NULL
  lgl$#-          %24.3 = CheckTrueFalse     e     %24.2
  void                    Branch                   %24.3 -> BB26 (if true) | BB25 (if false)
BB26   <- [24]
  (cls|spec|blt)  %26.0 = LdFun              !v    get0, e0.5
  prom-           %26.1 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p11, e0.5
  prom-           %26.2 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p12, e0.5
  prom-           %26.3 = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p13, e0.5
  val?            %26.4 = NamedCall          !v    %26.0(%26.1, %26.2, inherits=%26.3) e0.5   <val?_>
  void                    StVar              lW    value, %26.4, e0.5
  goto BB13
BB25   <- [24]
  void                    Nop                !     
  goto BB13
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p6, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <val?_>
  val?            %0.4  = Gt                 !v    %0.3, 1L, e0.0   <val?_>
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    Class, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e0.0   <val?_>
  void                    Visible            v     
  val?            %2.4  = %2.2
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %4.2  = Force              !     %4.0, e0.0   <val?_>
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.3:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nzchar, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa0cdb2a50]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ getClassDef[0x55fa0cdb2a50]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
