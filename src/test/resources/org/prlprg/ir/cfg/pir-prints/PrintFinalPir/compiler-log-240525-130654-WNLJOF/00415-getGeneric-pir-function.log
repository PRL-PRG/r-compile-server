
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGeneric[0x55fa0ea02a90]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
getGeneric[0x55fa0ea02a90]
BB0
  val?^           %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    is.function, <env 0x55fa0b35b378>
  lgl$#-          %0.4  = Identical                <blt is.function>, %0.3   <true>
  void                    Branch                   %0.4 -> BB82 (if true) | BB83 (if false)
BB82   <- [0]
  env             e82.0 = MkEnv              l     f=%0.2, mustFind=%0.1, where=%0.0, package(miss)="", parent=<env 0x55fa0b35b378>, context 1
  val+            %82.1 = Force!<lazy>       !vr   %0.2,    <(str|cls)>
  lgl$#-          %82.2 = CallSafeBuiltin    wed   is.function(%82.1)    <lgl$->
  void                    Branch                   %82.2 -> BB76 (if true) | BB5 (if false)
BB83   <- [0]
  env             e83.0 = (MkEnv)            l     f=%0.2, mustFind=%0.1, where=%0.0, package(miss)="", parent=<env 0x55fa0b35b378>, context 1
  fs              %83.1 = FrameState         R     0x55fa0f4536e0+0: [], env=e83.0
  void                    Deopt              !v    %83.1, DeadBranchReached@0x55fa0ea1c140[Test#0], %0.4
BB76   <- [82]
  val?^ | miss    %76.0 = LdVar              eR    is, <env 0x55fa0b35b378>
  lgl$#-          %76.1 = Identical                %76.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %76.1 -> BB84 (if true) | BB85 (if false)
BB5   <- [82]
  lgl$-           %5.0  = Missing            eR    where, e82.0
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB75 (if true) | BB6 (if false)
BB84   <- [76]
  prom-           %84.0 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p10 (!refl), e82.0
  val?            %84.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%84.0, "genericFunction") e82.0   <lgl$->
  lgl$#-          %84.2 = IsType                   %84.1 isA lgl$-
  void                    Branch                   %84.2 -> BB88 (if true) | BB89 (if false)
BB85   <- [76]
  void                    Nop                !     
  val?^ | miss    %85.1 = %76.0
  dr              %85.2 = CallTarget@0x55fa0ea1c140[Call#1]
  goto BB3
BB75   <- [5]
  val?^ | miss    %75.0 = LdVar              eR    .getGeneric, <env 0x55fa0b35b378>
  lgl$#-          %75.1 = Identical                %75.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %75.1 -> BB86 (if true) | BB87 (if false)
BB6   <- [5]
  val?^ | miss    %6.0  = LdVar              eR    .getGeneric, <env 0x55fa0b35b378>
  lgl$#-          %6.1  = Identical                %6.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %6.1 -> BB90 (if true) | BB91 (if false)
BB88   <- [84]
  lgl$-           %88.0 = CastType           d     dn %84.1
  lgl$#-          %88.1 = CheckTrueFalse     e     %88.0
  void                    Branch                   %88.1 -> BB80 (if true) | BB79 (if false)
BB89   <- [84]
  fs              %89.0 = FrameState         R     0x55fa0f4536e0+144: [%84.1], env=e82.0
  void                    Deopt              !v    %89.0, Typecheck@0x55fa0ea1c140[Type#4], %84.1   !
BB3   <- [85, 87, 91]
  val?^ | miss    %3.0  = Phi                      %85.1:BB85, %87.1:BB87, %91.1:BB91
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %85.2:BB85, %87.2:BB87, %91.2:BB91
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55fa0f4536e0+91: [%82.2], env=e82.0
  void                    Deopt              !v    %3.4, %3.3, %3.1
BB86   <- [75]
  prom-           %86.0 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p8 (!refl), e82.0
  prom-           %86.1 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p9 (!refl), e82.0
  val?            %86.2 = StaticCall         !v    .getGeneric[0x55fa0e6e2d40](%86.0, missingArg, %86.1) e82.0   <cls>
  val?            %86.3 = %86.2
  goto BB7
BB87   <- [75]
  void                    Nop                !     
  val?^ | miss    %87.1 = %75.0
  dr              %87.2 = CallTarget@0x55fa0ea1c140[Call#7]
  goto BB3
BB90   <- [6]
  prom-           %90.0 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p1 (!refl), e82.0
  prom-           %90.1 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p2 (!refl), e82.0
  prom-           %90.2 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p3 (!refl), e82.0
  val?            %90.3 = StaticCall         !v    .getGeneric[0x55fa0d8d1ac0](%90.0, %90.1, %90.2) e82.0   <(nil|cls)>
  val?            %90.4 = %90.3
  goto BB7
BB91   <- [6]
  void                    Nop                !     
  val?^ | miss    %91.1 = %6.0
  dr              %91.2 = CallTarget@0x55fa0ea1c140[Call#6]
  goto BB3
BB80   <- [88]
  val?^ | miss    %80.0 = LdVar              eR    f, e82.0
  void                    Visible            v     
  val?            %80.2 = Force!<wrapped>    !     %80.0, e82.0   <cls>
  val?            %80.3 = %80.2
  goto BB40
BB79   <- [88]
  (cls|spec|blt)  %79.0 = LdFun              !v    is.primitive, e82.0
  fs              %79.1 = FrameState         R     0x55fa0f4536e0+160: [%79.0], env=e82.0
  void                    Deopt              !v    %79.1, DeadCall@0x55fa0ea1c140[Call#2], %79.0   !
BB7   <- [86, 90]
  val?            %7.0  = Phi                      %90.4:BB90, %86.3:BB86   <(nil|cls)>
  val?            %7.1  = %7.0
  lgl$-           %7.2  = Is                       %7.1, NULL
  lgl$-           %7.3  = AsLogical                %7.2
  lgl$#-          %7.4  = Identical                %7.3, false
  void                    StVar              lW    value, %7.1, e82.0
  val             %7.6  = ChkMissing         e     %7.1
  void                    Branch                   %7.4 -> BB74 (if true) | BB10 (if false)
BB40   <- [80, 39]
  val?            %40.0 = Phi                      %39.2:BB39, %80.3:BB80
  val?            %40.1 = %40.0
  void                    Return             l     %40.1
BB74   <- [7]
  void                    Nop                !     
  lgl$-           %74.1 = %7.3
  goto BB15
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    baseenv, e82.0
  lgl$#-          %10.1 = Identical                <blt baseenv>, %10.0   <true>
  void                    Branch                   %10.1 -> BB92 (if true) | BB93 (if false)
BB15   <- [74, 104]
  lgl$-           %15.0 = Phi                      %104.7:BB104, %74.1:BB74
  lgl$-           %15.1 = %15.0
  lgl$#-          %15.2 = CheckTrueFalse     e     %15.1
  void                    Branch                   %15.2 -> BB45 (if true) | BB18 (if false)
BB92   <- [10]
  val?            %92.0 = CallBuiltin        !v    baseenv() e82.0   <env->
  lgl$#-          %92.1 = IsType                   %92.0 isA val+   <true>
  void                    Branch                   %92.1 -> BB96 (if true) | BB97 (if false)
BB93   <- [10]
  fs              %93.0 = FrameState         R     0x55fa0f4536e0+427: [], env=e82.0
  void                    Deopt              !v    %93.0, DeadBranchReached@0x55fa0ea1c140[Test#1], %10.1   !
BB45   <- [15]
  val?^ | miss    %45.0 = LdVar              eR    is.function, e82.0
  lgl$#-          %45.1 = Identical                <blt is.function>, %45.0   <true>
  void                    Branch                   %45.1 -> BB98 (if true) | BB99 (if false)
BB18   <- [15]
  void                    Nop                !     
  goto BB19
BB96   <- [92]
  val?^ | miss    %96.0 = LdVar              eR    f, e82.0
  val?            %96.1 = Force!<wrapped>    !v    %96.0, e82.0   <str$->
  lgl$#-          %96.2 = IsType                   %96.1 isA val?-
  lgl$#-          %96.3 = IsType                   %92.0 isA val?-
  void                    Branch                   %96.3 -> BB102 (if true) | BB103 (if false)
BB97   <- [92]
  fs              %97.0 = FrameState         R     0x55fa0f4536e0+525: [%7.3, %92.0], env=e82.0
  void                    Deopt              !v    %97.0, DeadBranchReached@0x55fa0ea1c140[Test#2], %92.1   !
BB98   <- [45]
  val?^ | miss    %98.0 = LdVar              eR    baseDef, e82.0
  lgl$#-          %98.1 = IsType                   %98.0 isA val?~- | miss
  void                    Branch                   %98.1 -> BB100 (if true) | BB101 (if false)
BB99   <- [45]
  void                    Nop                !     
  lgl$#-          %99.1 = %45.1
  dr              %99.2 = DeadBranchReached@0x55fa0ea1c140[Test#3]
  goto BB16
BB19   <- [18, 48, 54, 73]
  val?^ | miss    %19.0 = LdVar              eR    is.function, e82.0
  lgl$#-          %19.1 = Identical                <blt is.function>, %19.0   <true>
  void                    Branch                   %19.1 -> BB94 (if true) | BB95 (if false)
BB102   <- [96]
  val?-           %102.0 = CastType           d     dn %92.0   <env->
  void                    Branch                   %96.2 -> BB104 (if true) | BB105 (if false)
BB103   <- [96]
  void                    Nop                !     
  val?            %103.1 = %92.0
  dr              %103.2 = Typecheck@0x55fa0ea1c140[Type#20]
  goto BB13
BB100   <- [98]
  val?~- | miss   %100.0 = CastType           d     dn %98.0
  val?-           %100.1 = Force!<value>            %100.0,    <blt->
  lgl$#-          %100.2 = CallSafeBuiltin    wed   is.function(%100.1)    <lgl$->
  void                    Branch                   %100.2 -> BB49 (if true) | BB48 (if false)
BB101   <- [98]
  void                    Nop                !     
  val?^ | miss    %101.1 = %98.0
  dr              %101.2 = Typecheck@0x55fa0ea1c140[Type#25]
  goto BB16
BB16   <- [99, 101]
  val?^ | miss    %16.0 = Phi                      %99.1:BB99, %101.1:BB101
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %99.2:BB99, %101.2:BB101
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55fa0f4536e0+601: [%15.1], env=e82.0
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB94   <- [19]
  val?^ | miss    %94.0 = LdVar              eR    value, e82.0
  val?            %94.1 = Force!<value>      !v    %94.0, e82.0   <cls>
  val?            %94.2 = CallBuiltin        !v    is.function(%94.1) e82.0   <lgl$->
  lgl$#-          %94.3 = IsType                   %94.2 isA lgl$-
  void                    Branch                   %94.3 -> BB106 (if true) | BB107 (if false)
BB95   <- [19]
  fs              %95.0 = FrameState         R     0x55fa0f4536e0+882: [], env=e82.0
  void                    Deopt              !v    %95.0, DeadBranchReached@0x55fa0ea1c140[Test#4], %19.1   !
BB104   <- [102]
  val?-           %104.0 = CastType           d     dn %96.1   <str$->
  val?            %104.1 = Extract2_1D        wed   %102.0, %104.0, elided   <blt->
  lgl$-           %104.2 = Is                       %104.1, NULL
  void                    StVar              lW    baseDef, %104.1, e82.0
  lgl$-           %104.4 = Not                d     %104.2, elided
  lgl$-           %104.5 = AsLogical                %104.4
  lgl$-           %104.6 = LAnd                     %7.3, %104.5
  lgl$-           %104.7 = %104.6
  goto BB15
BB105   <- [102]
  void                    Nop                !     
  val?            %105.1 = %96.1
  dr              %105.2 = Typecheck@0x55fa0ea1c140[Type#22]
  goto BB13
BB13   <- [103, 105]
  val?^ | miss    %13.0 = Phi                      %103.1:BB103, %105.1:BB105
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %103.2:BB103, %105.2:BB105
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55fa0f4536e0+570: [%7.3, %92.0, %96.1], env=e82.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB49   <- [100]
  val?^ | miss    %49.0 = LdVar              eR    genericForBasic, e82.0
  lgl$#-          %49.1 = Identical                %49.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %49.1 -> BB108 (if true) | BB109 (if false)
BB48   <- [100]
  void                    Nop                !     
  goto BB19
BB106   <- [94]
  lgl$-           %106.0 = CastType           d     dn %94.2
  lgl$#-          %106.1 = CheckTrueFalse     e     %106.0
  void                    Branch                   %106.1 -> BB44 (if true) | BB24 (if false)
BB107   <- [94]
  fs              %107.0 = FrameState         R     0x55fa0f4536e0+973: [%94.2], env=e82.0
  void                    Deopt              !v    %107.0, Typecheck@0x55fa0ea1c140[Type#36], %94.2   !
BB108   <- [49]
  prom-           %108.0 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p4, e82.0
  val?            %108.1 = StaticCall         !v    genericForBasic[0x55fa0b1044b0](%108.0, missingArg, false) { 0 2n } e82.0   <cls>
  void                    StVar              lW    value, %108.1, e82.0
  val?^ | miss    %108.3 = LdVar              eR    is, e82.0
  lgl$#-          %108.4 = Identical                %108.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %108.4 -> BB110 (if true) | BB111 (if false)
BB109   <- [49]
  fs              %109.0 = FrameState         R     0x55fa0f4536e0+703: [%100.2], env=e82.0
  void                    Deopt              !v    %109.0, CallTarget@0x55fa0ea1c140[Call#10], %49.0   !
BB44   <- [106]
  val?^ | miss    %44.0 = LdVar              eR    value, e82.0
  void                    Visible            v     
  val?            %44.2 = Force!<value>      !     %44.0, e82.0   <cls>
  val?            %44.3 = %44.2
  goto BB39
BB24   <- [106]
  val?^ | miss    %24.0 = LdVar              eR    nzchar, e82.0
  lgl$#-          %24.1 = Identical                <blt nzchar>, %24.0   <@?>
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB110   <- [108]
  prom-           %110.0 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p5 (!refl), e82.0
  val?            %110.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%110.0, "genericFunction") e82.0   <lgl$->
  lgl$#-          %110.2 = IsType                   %110.1 isA lgl$-
  void                    Branch                   %110.2 -> BB112 (if true) | BB113 (if false)
BB111   <- [108]
  fs              %111.0 = FrameState         R     0x55fa0f4536e0+778: [], env=e82.0
  void                    Deopt              !v    %111.0, CallTarget@0x55fa0ea1c140[Call#11], %108.3   !
BB39   <- [44, 38]
  val?            %39.0 = Phi                      %38.2:BB38, %44.3:BB44
  val?            %39.1 = %39.0
  val?            %39.2 = %39.1
  goto BB40
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    package, e82.0
  val?            %26.1 = Force!             !v    %26.0, e82.0   <val?_>
  val?            %26.2 = CallBuiltin        !v    nzchar(%26.1) e82.0   <val?_>
  lgl$-           %26.3 = AsLogical          e     %26.2
  lgl$#-          %26.4 = Identical                %26.3, false
  void                    Branch                   %26.4 -> BB30 (if true) | BB27 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    nzchar, e82.0
  fs              %25.1 = FrameState         R     0x55fa0f4536e0+1012: [%25.0], env=e82.0
  void                    Deopt              !v    %25.1, DeadCall@0x55fa0ea1c140[Call#14], %25.0   !
BB112   <- [110]
  lgl$-           %112.0 = CastType           d     dn %110.1
  lgl$#-          %112.1 = CheckTrueFalse     e     %112.0
  void                    Branch                   %112.1 -> BB55 (if true) | BB54 (if false)
BB113   <- [110]
  void                    Nop                !     
  val?            %113.1 = %110.1
  dr              %113.2 = Typecheck@0x55fa0ea1c140[Type#30]
  goto BB52
BB30   <- [26]
  lgl$#-          %30.0 = CheckTrueFalse     e     %26.3
  void                    Branch                   %30.0 -> BB43 (if true) | BB31 (if false)
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    is.na, e82.0
  lgl$#-          %27.1 = Identical                <blt is.na>, %27.0   <@?>
  void                    Branch                   %27.1 -> BB29 (if true) | BB28 (if false)
BB55   <- [112]
  val?^ | miss    %55.0 = LdVar              eR    .cacheGeneric, e82.0
  lgl$#-          %55.1 = Identical                %55.0, function(name, def) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %55.1 -> BB114 (if true) | BB115 (if false)
BB54   <- [112]
  void                    Nop                !     
  goto BB19
BB52   <- [113, 115]
  val?^ | miss    %52.0 = Phi                      %113.1:BB113, %115.1:BB115
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %113.2:BB113, %115.2:BB115
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x55fa0f4536e0+815: [%110.1], env=e82.0
  void                    Deopt              !v    %52.4, %52.3, %52.1   !
BB43   <- [30]
  (cls|spec|blt)  %43.0 = LdFun              !v    tryCatch, e82.0
  fs              %43.1 = FrameState         R     0x55fa0f4536e0+1229: [%43.0], env=e82.0
  void                    Deopt              !v    %43.1, DeadCall@0x55fa0ea1c140[Call#20], %43.0   !
BB31   <- [30]
  val?^ | miss    %31.0 = LdVar              eR    is.function, e82.0
  lgl$#-          %31.1 = Identical                <blt is.function>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB29   <- [27]
  (cls|spec|blt)  %29.0 = LdFun              !v    match, e82.0
  fs              %29.1 = FrameState         R     0x55fa0f4536e0+1152: [%26.3, <blt is.na>, %29.0], env=e82.0
  void                    Deopt              !v    %29.1, DeadCall@0x55fa0ea1c140[Call#18], %29.0   !
BB28   <- [27]
  (cls|spec|blt)  %28.0 = LdFun              !v    is.na, e82.0
  fs              %28.1 = FrameState         R     0x55fa0f4536e0+1115: [%26.3, %28.0], env=e82.0
  void                    Deopt              !v    %28.1, DeadCall@0x55fa0ea1c140[Call#15], %28.0   !
BB114   <- [55]
  prom-           %114.0 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p6, e82.0
  prom-           %114.1 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p7, e82.0
  ct              %114.2 = PushContext        lCL   %114.0, %114.1, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x55|..., e82.0
  val?^           %114.3 = CastType                 up %114.1
  val?^           %114.4 = CastType                 up %114.0
  val?^ | miss    %114.5 = LdVar              eR    .cacheGenericTable, <env 0x55fa0b35b378>
  lgl$#-          %114.6 = Identical                %114.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %114.6 -> BB118 (if true) | BB119 (if false)
BB115   <- [55]
  void                    Nop                !     
  val?^ | miss    %115.1 = %55.0
  dr              %115.2 = CallTarget@0x55fa0ea1c140[Call#12]
  goto BB52
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    value, e82.0
  val?            %33.1 = Force!             !v    %33.0, e82.0   <val?_>
  lgl$#-          %33.2 = IsType                   %33.1 isA val?+
  void                    Branch                   %33.2 -> BB116 (if true) | BB117 (if false)
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    is.function, e82.0
  fs              %32.1 = FrameState         R     0x55fa0f4536e0+1311: [%32.0], env=e82.0
  void                    Deopt              !v    %32.1, DeadCall@0x55fa0ea1c140[Call#23], %32.0   !
BB118   <- [114]
  env             e118.0 = MkEnv              l     name=%114.4, def=%114.3, parent=<env 0x55fa0b35b378>, context 1
  prom-           %118.1 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p11, e118.0
  prom-           %118.2 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p12, e118.0
  prom-           %118.3 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p13, e118.0
  ct              %118.4 = PushContext        lCL   %118.1, %118.2, %118.3, .cacheGenericTable(name, def, .genericTable), function(name, def, table) <(rir::DispatchTabl|..., e118.0
  val?^           %118.5 = CastType                 up %118.3
  val?^           %118.6 = CastType                 up %118.2
  val?^           %118.7 = CastType                 up %118.1
  env             e118.8 = MkEnv              l     name=%118.7, def=%118.6, table=%118.5, parent=<env 0x55fa0b35b378>, context 1
  val?            %118.9 = Force!<lazy>       !vL   %118.6, e118.8   <cls>
  void                    StVar              lW    fdef, %118.9, e118.8
  val?            %118.11 = Force!<lazy>       !vL   %118.5, e118.8   <env->
  lgl$#-          %118.12 = IsType                   %118.11 isA val+   <true>
  void                    Branch                   %118.12 -> BB120 (if true) | BB121 (if false)
BB119   <- [114]
  fs              %119.0 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  env             e119.1 = (MkEnv)            l     name=%114.4, def=%114.3, parent=<env 0x55fa0b35b378>, context 1
  fs              %119.2 = FrameState         R     0x55fa0dc50440+0: [], env=e119.1, next=%119.0
  void                    Deopt              !v    %119.2, CallTarget@0x55fa0d6fcf18[Call#0], %114.5   !
BB116   <- [33]
  val?+           %116.0 = CastType           d     dn %33.1   <val?_>
  lgl$#-          %116.1 = CallSafeBuiltin    wed   is.function(%116.0)    <val?_>
  void                    Branch                   %116.1 -> BB42 (if true) | BB36 (if false)
BB117   <- [33]
  fs              %117.0 = FrameState         R     0x55fa0f4536e0+1352: [<blt is.function>, %33.1], env=e82.0
  void                    Deopt              !v    %117.0, Typecheck@0x55fa0ea1c140[Type#55], %33.1   !
BB120   <- [118]
  val?            %120.0 = Force!<lazy>       !vL   %118.7, e118.8   <str$->
  lgl$#-          %120.1 = IsType                   %120.0 isA val?-
  lgl$#-          %120.2 = IsType                   %118.11 isA val?-
  void                    Branch                   %120.2 -> BB122 (if true) | BB123 (if false)
BB121   <- [118]
  fs              %121.0 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  fs              %121.1 = FrameState         R     0x55fa0dc50440+42: [], env=e118.0, next=%121.0
  fs              %121.2 = FrameState         R     0x55fa0c6f9a10+32: [%118.11], env=e118.8, next=%121.1
  void                    Deopt              !v    %121.2, DeadBranchReached@0x55fa0d3cce30[Test#0], %118.12   !
BB42   <- [116]
  val?^ | miss    %42.0 = LdVar              eR    value, e82.0
  void                    Visible            v     
  val?            %42.2 = Force!             !     %42.0, e82.0   <val?_>
  val?            %42.3 = %42.2
  goto BB38
BB36   <- [116]
  val?^ | miss    %36.0 = LdVar              eR    mustFind, e82.0
  val?            %36.1 = Force!             !v    %36.0, e82.0   <val?_>
  lgl$#-          %36.2 = CheckTrueFalse     we    %36.1
  void                    Branch                   %36.2 -> BB41 (if true) | BB37 (if false)
BB122   <- [120]
  val?-           %122.0 = CastType           d     dn %118.11   <env->
  void                    Branch                   %120.1 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?            %123.1 = %118.11
  dr              %123.2 = Typecheck@0x55fa0d3cce30[Type#1]
  goto BB60
BB38   <- [42, 37]
  val?            %38.0 = Phi                      %37.1:BB37, %42.3:BB42
  val?            %38.1 = %38.0
  val?            %38.2 = %38.1
  goto BB39
BB41   <- [36]
  (cls|spec|blt)  %41.0 = LdFun              !v    stop, e82.0
  fs              %41.1 = FrameState         R     0x55fa0f4536e0+1421: [%41.0], env=e82.0
  void                    Deopt              !v    %41.1, DeadCall@0x55fa0ea1c140[Call#24], %41.0   !
BB37   <- [36]
  void                    Visible            v     
  nil-            %37.1 = nil
  goto BB38
BB124   <- [122]
  val?-           %124.0 = CastType           d     dn %120.0   <str$->
  val?            %124.1 = Extract2_1D        wed   %122.0, %124.0, elided   <cls>
  lgl$-           %124.2 = Is                       %124.1, NULL
  void                    StVar              lW    prev, %124.1, e118.8
  lgl$-           %124.4 = Not                d     %124.2, elided
  lgl$#-          %124.5 = CheckTrueFalse     e     %124.4
  void                    Branch                   %124.5 -> BB63 (if true) | BB62 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?            %125.1 = %120.0
  dr              %125.2 = Typecheck@0x55fa0d3cce30[Type#3]
  goto BB60
BB60   <- [123, 125]
  val?^ | miss    %60.0 = Phi                      %123.1:BB123, %125.1:BB125
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %123.2:BB123, %125.2:BB125
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  fs              %60.5 = FrameState         R     0x55fa0dc50440+42: [], env=e118.0, next=%60.4
  fs              %60.6 = FrameState         R     0x55fa0c6f9a10+77: [%118.11, %120.0], env=e118.8, next=%60.5
  void                    Deopt              !v    %60.6, %60.3, %60.1   !
BB63   <- [124]
  (cls|spec|blt)  %63.0 = LdFun              !v    @, <0x55fa0ad53bd8>, <env 0x55fa0b35b378>
  prom-           %63.1 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p14, e118.8
  prom-           %63.2 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p15, e118.8
  val?            %63.3 = Call               !v    %63.0(%63.1, %63.2) e118.8   <str$->
  void                    StVar              lW    newpkg, %63.3, e118.8
  val?^ | miss    %63.5 = LdVar              eR    is.function, e118.8
  lgl$#-          %63.6 = Identical                <blt is.function>, %63.5   <true>
  void                    Branch                   %63.6 -> BB126 (if true) | BB127 (if false)
BB62   <- [124]
  fs              %62.0 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  fs              %62.1 = FrameState         R     0x55fa0dc50440+42: [], env=e118.0, next=%62.0
  (cls|spec|blt)  %62.2 = LdFun              !v    .getMethodsTable, <env 0x55fa0b35b378>
  fs              %62.3 = FrameState         R     0x55fa0c6f9a10+1059: [%62.2], env=e118.8, next=%62.1
  void                    Deopt              !v    %62.3, DeadCall@0x55fa0d3cce30[Call#11], %62.2   !
BB126   <- [63]
  val?^ | miss    %126.0 = LdVar              eR    prev, e118.8
  val?            %126.1 = Force!<value>      !v    %126.0, e118.8   <cls>
  val?            %126.2 = CallBuiltin        !v    is.function(%126.1) e118.8   <lgl$->
  lgl$#-          %126.3 = IsType                   %126.2 isA lgl$-
  void                    Branch                   %126.3 -> BB128 (if true) | BB129 (if false)
BB127   <- [63]
  fs              %127.0 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  fs              %127.1 = FrameState         R     0x55fa0dc50440+42: [], env=e118.0, next=%127.0
  fs              %127.2 = FrameState         R     0x55fa0c6f9a10+168: [], env=e118.8, next=%127.1
  void                    Deopt              !v    %127.2, DeadBranchReached@0x55fa0d3cce30[Test#1], %63.6   !
BB128   <- [126]
  lgl$-           %128.0 = CastType           d     dn %126.2
  lgl$#-          %128.1 = CheckTrueFalse     e     %128.0
  void                    Branch                   %128.1 -> BB69 (if true) | BB68 (if false)
BB129   <- [126]
  void                    Nop                !     
  val?            %129.1 = %126.2
  dr              %129.2 = Typecheck@0x55fa0d3cce30[Type#10]
  goto BB66
BB69   <- [128]
  val?^ | miss    %69.0 = LdVar              eR    identical, e118.8
  lgl$#-          %69.1 = Identical                %69.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %69.1 -> BB130 (if true) | BB131 (if false)
BB68   <- [128]
  fs              %68.0 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  fs              %68.1 = FrameState         R     0x55fa0dc50440+42: [], env=e118.0, next=%68.0
  (cls|spec|blt)  %68.2 = LdFun              !v    match, e118.8
  fs              %68.3 = FrameState         R     0x55fa0c6f9a10+706: [%68.2], env=e118.8, next=%68.1
  void                    Deopt              !v    %68.3, DeadCall@0x55fa0d3cce30[Call#7], %68.2   !
BB66   <- [129, 131]
  val?^ | miss    %66.0 = Phi                      %129.1:BB129, %131.1:BB131
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %129.2:BB129, %131.2:BB131
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  fs              %66.5 = FrameState         R     0x55fa0dc50440+42: [], env=e118.0, next=%66.4
  fs              %66.6 = FrameState         R     0x55fa0c6f9a10+259: [%126.2], env=e118.8, next=%66.5
  void                    Deopt              !v    %66.6, %66.3, %66.1   !
BB130   <- [69]
  prom-           %130.0 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p16, e118.8
  prom-           %130.1 = MkArg                    unboundValue, getGeneric[0x55fa0ea02a90]_p17, e118.8
  ct              %130.2 = PushContext        lCL   %130.0, %130.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e118.8
  val?^           %130.3 = CastType                 up %130.1
  val?^           %130.4 = CastType                 up %130.0
  env             e130.5 = MkEnv              l     x=%130.4, y=%130.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %130.6 = Force!<lazy>       !vL   %130.4, e130.5   <val?>
  val?            %130.7 = Force!<lazy>       !vL   %130.3, e130.5   <val?>
  val?            %130.8 = CallBuiltin        !v    identical(%130.6, %130.7, true, true, true, true, false, true) e130.5
  val?            %130.9 = PopContext         C     %130.8, %130.2   <lgl$->
  lgl$#-          %130.10 = IsType                   %130.9 isA lgl$-
  void                    Branch                   %130.10 -> BB132 (if true) | BB133 (if false)
BB131   <- [69]
  void                    Nop                !     
  val?^ | miss    %131.1 = %69.0
  dr              %131.2 = CallTarget@0x55fa0d3cce30[Call#2]
  goto BB66
BB132   <- [130]
  lgl$-           %132.0 = CastType           d     dn %130.9
  lgl$#-          %132.1 = CheckTrueFalse     e     %132.0
  void                    Branch                   %132.1 -> BB73 (if true) | BB72 (if false)
BB133   <- [130]
  fs              %133.0 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  fs              %133.1 = FrameState         R     0x55fa0dc50440+42: [], env=e118.0, next=%133.0
  fs              %133.2 = FrameState         R     0x55fa0c6f9a10+312: [%130.9], env=e118.8, next=%133.1
  void                    Deopt              !v    %133.2, Typecheck@0x55fa0d3cce30[Type#13], %130.9   !
BB73   <- [132]
  val?^ | miss    %73.0 = LdVar              eR    fdef, e118.8
  val?            %73.1 = Force!<value>      !v    %73.0, e118.8   <cls>
  val?            %73.2 = PopContext         C     %73.1, %118.4   <cls>
  val?            %73.3 = PopContext         C     %73.2, %114.2   <cls>
  void                    StVar              lW    value, %73.3, e82.0
  goto BB19
BB72   <- [132]
  fs              %72.0 = FrameState         R     0x55fa0f4536e0+868: [], env=e82.0
  fs              %72.1 = FrameState         R     0x55fa0dc50440+42: [], env=e118.0, next=%72.0
  (cls|spec|blt)  %72.2 = LdFun              !v    @, e118.8
  fs              %72.3 = FrameState         R     0x55fa0c6f9a10+348: [%72.2], env=e118.8, next=%72.1
  void                    Deopt              !v    %72.3, DeadCall@0x55fa0d3cce30[Call#3], %72.2   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ getGeneric[0x55fa0ea02a90]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
