
┌──────────────────────────────────────────────────────────────────────────────┐
│ .cacheGeneric[0x55fa0d560840]                                                │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0              │
│ Properties:                                                                  │
├────── Final PIR Version
.cacheGeneric[0x55fa0d560840]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    .cacheGenericTable, <env 0x55fa0b35b378>
  lgl$#-          %0.3  = Identical                %0.2, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %0.3 -> BB20 (if true) | BB21 (if false)
BB20   <- [0]
  env             e20.0 = MkEnv              l     name=%0.1, def=%0.0, parent=<env 0x55fa0b35b378>, context 1
  prom-           %20.1 = MkArg                    unboundValue, .cacheGeneric[0x55fa0d560840]_p0 (!refl), e20.0
  prom-           %20.2 = MkArg                    unboundValue, .cacheGeneric[0x55fa0d560840]_p1 (!refl), e20.0
  prom-           %20.3 = MkArg                    unboundValue, .cacheGeneric[0x55fa0d560840]_p2, e20.0
  ct              %20.4 = PushContext        lCL   %20.1, %20.2, %20.3, .cacheGenericTable(name, def, .genericTable), function(name, def, table) <(rir::DispatchTabl|..., e20.0
  val?^           %20.5 = CastType                 up %20.3
  val?^           %20.6 = CastType                 up %20.2
  val?^           %20.7 = CastType                 up %20.1
  env             e20.8 = MkEnv              l     name=%20.7, def=%20.6, table=%20.5, parent=<env 0x55fa0b35b378>, context 1
  val?            %20.9 = Force!<lazy>       !vr   %20.6,    <cls>
  void                    StVar              lW    fdef, %20.9, e20.8
  val?            %20.11 = Force!<lazy>       !vL   %20.5, e20.8   <env->
  lgl$#-          %20.12 = IsType                   %20.11 isA val+   <true>
  void                    Branch                   %20.12 -> BB22 (if true) | BB23 (if false)
BB21   <- [0]
  env             e21.0 = (MkEnv)            l     name=%0.1, def=%0.0, parent=<env 0x55fa0b35b378>, context 1
  fs              %21.1 = FrameState         R     0x55fa0dc50440+0: [], env=e21.0
  void                    Deopt              !v    %21.1, CallTarget@0x55fa0d6fcf18[Call#0], %0.2
BB22   <- [20]
  val?            %22.0 = Force!<lazy>       !vrL  %20.7, e20.8   <str$->
  lgl$#-          %22.1 = IsType                   %22.0 isA val?-
  lgl$#-          %22.2 = IsType                   %20.11 isA val?-
  void                    Branch                   %22.2 -> BB24 (if true) | BB25 (if false)
BB23   <- [20]
  fs              %23.0 = FrameState         R     0x55fa0dc50440+42: [], env=e20.0
  fs              %23.1 = FrameState         R     0x55fa0c6f9a10+32: [%20.11], env=e20.8, next=%23.0
  void                    Deopt              !v    %23.1, DeadBranchReached@0x55fa0d3cce30[Test#0], %20.12   !
BB24   <- [22]
  val?-           %24.0 = CastType           d     dn %20.11   <env->
  void                    Branch                   %22.1 -> BB26 (if true) | BB27 (if false)
BB25   <- [22]
  void                    Nop                !     
  val?            %25.1 = %20.11
  dr              %25.2 = Typecheck@0x55fa0d3cce30[Type#1]
  goto BB5
BB26   <- [24]
  val?-           %26.0 = CastType           d     dn %22.0   <str$->
  val?            %26.1 = Extract2_1D        wed   %24.0, %26.0, elided   <cls>
  lgl$-           %26.2 = Is                       %26.1, NULL
  void                    StVar              lW    prev, %26.1, e20.8
  lgl$-           %26.4 = Not                d     %26.2, elided
  lgl$#-          %26.5 = CheckTrueFalse     e     %26.4
  void                    Branch                   %26.5 -> BB8 (if true) | BB7 (if false)
BB27   <- [24]
  void                    Nop                !     
  val?            %27.1 = %22.0
  dr              %27.2 = Typecheck@0x55fa0d3cce30[Type#3]
  goto BB5
BB5   <- [25, 27]
  val?^ | miss    %5.0  = Phi                      %25.1:BB25, %27.1:BB27
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %25.2:BB25, %27.2:BB27
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55fa0dc50440+42: [], env=e20.0
  fs              %5.5  = FrameState         R     0x55fa0c6f9a10+77: [%20.11, %22.0], env=e20.8, next=%5.4
  void                    Deopt              !v    %5.5, %5.3, %5.1   !
BB8   <- [26]
  (cls|spec|blt)  %8.0  = LdFun              !v    @, <0x55fa0ad53bd8>, <env 0x55fa0b35b378>
  prom-           %8.1  = MkArg                    unboundValue, .cacheGeneric[0x55fa0d560840]_p3, e20.8
  prom-           %8.2  = MkArg                    unboundValue, .cacheGeneric[0x55fa0d560840]_p4, e20.8
  val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e20.8   <str$->
  void                    StVar              lW    newpkg, %8.3, e20.8
  val?^ | miss    %8.5  = LdVar              eR    is.function, e20.8
  lgl$#-          %8.6  = Identical                <blt is.function>, %8.5   <true>
  void                    Branch                   %8.6 -> BB28 (if true) | BB29 (if false)
BB7   <- [26]
  fs              %7.0  = FrameState         R     0x55fa0dc50440+42: [], env=e20.0
  (cls|spec|blt)  %7.1  = LdFun              !v    .getMethodsTable, <env 0x55fa0b35b378>
  fs              %7.2  = FrameState         R     0x55fa0c6f9a10+1059: [%7.1], env=e20.8, next=%7.0
  void                    Deopt              !v    %7.2, DeadCall@0x55fa0d3cce30[Call#11], %7.1   !
BB28   <- [8]
  val?^ | miss    %28.0 = LdVar              eR    prev, e20.8
  val?            %28.1 = Force!<value>      !v    %28.0, e20.8   <cls>
  val?            %28.2 = CallBuiltin        !v    is.function(%28.1) e20.8   <lgl$->
  lgl$#-          %28.3 = IsType                   %28.2 isA lgl$-
  void                    Branch                   %28.3 -> BB30 (if true) | BB31 (if false)
BB29   <- [8]
  fs              %29.0 = FrameState         R     0x55fa0dc50440+42: [], env=e20.0
  fs              %29.1 = FrameState         R     0x55fa0c6f9a10+168: [], env=e20.8, next=%29.0
  void                    Deopt              !v    %29.1, DeadBranchReached@0x55fa0d3cce30[Test#1], %8.6   !
BB30   <- [28]
  lgl$-           %30.0 = CastType           d     dn %28.2
  lgl$#-          %30.1 = CheckTrueFalse     e     %30.0
  void                    Branch                   %30.1 -> BB14 (if true) | BB13 (if false)
BB31   <- [28]
  void                    Nop                !     
  val?            %31.1 = %28.2
  dr              %31.2 = Typecheck@0x55fa0d3cce30[Type#10]
  goto BB11
BB14   <- [30]
  val?^ | miss    %14.0 = LdVar              eR    identical, e20.8
  lgl$#-          %14.1 = Identical                %14.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %14.1 -> BB32 (if true) | BB33 (if false)
BB13   <- [30]
  fs              %13.0 = FrameState         R     0x55fa0dc50440+42: [], env=e20.0
  (cls|spec|blt)  %13.1 = LdFun              !v    match, e20.8
  fs              %13.2 = FrameState         R     0x55fa0c6f9a10+706: [%13.1], env=e20.8, next=%13.0
  void                    Deopt              !v    %13.2, DeadCall@0x55fa0d3cce30[Call#7], %13.1   !
BB11   <- [31, 33]
  val?^ | miss    %11.0 = Phi                      %31.1:BB31, %33.1:BB33
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %31.2:BB31, %33.2:BB33
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55fa0dc50440+42: [], env=e20.0
  fs              %11.5 = FrameState         R     0x55fa0c6f9a10+259: [%28.2], env=e20.8, next=%11.4
  void                    Deopt              !v    %11.5, %11.3, %11.1   !
BB32   <- [14]
  prom-           %32.0 = MkArg                    unboundValue, .cacheGeneric[0x55fa0d560840]_p5, e20.8
  prom-           %32.1 = MkArg                    unboundValue, .cacheGeneric[0x55fa0d560840]_p6, e20.8
  ct              %32.2 = PushContext        lCL   %32.0, %32.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e20.8
  val?^           %32.3 = CastType                 up %32.1
  val?^           %32.4 = CastType                 up %32.0
  env             e32.5 = MkEnv              l     x=%32.4, y=%32.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %32.6 = Force!<lazy>       !vL   %32.4, e32.5   <val?>
  val?            %32.7 = Force!<lazy>       !vL   %32.3, e32.5   <val?>
  val?            %32.8 = CallBuiltin        !v    identical(%32.6, %32.7, true, true, true, true, false, true) e32.5
  val?            %32.9 = PopContext         C     %32.8, %32.2   <lgl$->
  lgl$#-          %32.10 = IsType                   %32.9 isA lgl$-
  void                    Branch                   %32.10 -> BB34 (if true) | BB35 (if false)
BB33   <- [14]
  void                    Nop                !     
  val?^ | miss    %33.1 = %14.0
  dr              %33.2 = CallTarget@0x55fa0d3cce30[Call#2]
  goto BB11
BB34   <- [32]
  lgl$-           %34.0 = CastType           d     dn %32.9
  lgl$#-          %34.1 = CheckTrueFalse     e     %34.0
  void                    Branch                   %34.1 -> BB18 (if true) | BB17 (if false)
BB35   <- [32]
  fs              %35.0 = FrameState         R     0x55fa0dc50440+42: [], env=e20.0
  fs              %35.1 = FrameState         R     0x55fa0c6f9a10+312: [%32.9], env=e20.8, next=%35.0
  void                    Deopt              !v    %35.1, Typecheck@0x55fa0d3cce30[Type#13], %32.9   !
BB18   <- [34]
  val?^ | miss    %18.0 = LdVar              eR    fdef, e20.8
  void                    Visible            v     
  val?            %18.2 = Force!<value>      !     %18.0, e20.8   <cls>
  val?            %18.3 = PopContext         C     %18.2, %20.4   <cls>
  void                    Return             l     %18.3
BB17   <- [34]
  fs              %17.0 = FrameState         R     0x55fa0dc50440+42: [], env=e20.0
  (cls|spec|blt)  %17.1 = LdFun              !v    @, e20.8
  fs              %17.2 = FrameState         R     0x55fa0c6f9a10+348: [%17.1], env=e20.8, next=%17.0
  void                    Deopt              !v    %17.2, DeadCall@0x55fa0d3cce30[Call#3], %17.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ .cacheGeneric[0x55fa0d560840]                                                │
└──────────────────────────────────────────────────────────────────────────────┘
