
┌──────────────────────────────────────────────────────────────────────────────┐
│ initialize[0x55fa0eb46190]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1                     │
│ Properties:                                                                  │
├────── Final PIR Version
initialize[0x55fa0eb46190]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    standardGeneric, <env 0x55fa0b9087a8>
  lgl$#-          %0.2  = Identical                <blt standardGeneric>, %0.1   <true>
  void                    Branch                   %0.2 -> BB14 (if true) | BB15 (if false)
BB14   <- [0]
  env             e14.0 = MkEnv              l     .Object=%0.0, ...(miss)=missingArg, parent=<env 0x55fa0b9087a8>, context 1
  val?            %14.1 = CallBuiltin        !v    standardGeneric("initialize") e14.0   <(str|cls)>
  void                    StVar              lW    value, %14.1, e14.0
  val?^ | miss    %14.3 = LdVar              eR    identical, e14.0
  lgl$#-          %14.4 = Identical                %14.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %14.4 -> BB16 (if true) | BB17 (if false)
BB15   <- [0]
  env             e15.0 = (MkEnv)            l     .Object=%0.0, ...(miss)=missingArg, parent=<env 0x55fa0b9087a8>, context 1
  fs              %15.1 = FrameState         R     0x55fa0eb0f310+0: [], env=e15.0
  void                    Deopt              !v    %15.1, DeadBranchReached@0x55fa0f6632a8[Test#0], %0.2
BB16   <- [14]
  prom-           %16.0 = MkArg                    unboundValue, initialize[0x55fa0eb46190]_p0, e14.0
  prom-           %16.1 = MkArg                    unboundValue, initialize[0x55fa0eb46190]_p2, e14.0
  ct              %16.2 = PushContext        lCL   %16.0, %16.1, identical(class(value), class(.Object)), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e14.0
  val?^           %16.3 = CastType                 up %16.1
  val?^           %16.4 = CastType                 up %16.0
  env             e16.5 = MkEnv              l     x=%16.4, y=%16.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %16.6 = Force!<lazy>       !vL   %16.4, e16.5   <val?>
  val?            %16.7 = Force!<lazy>       !vL   %16.3, e16.5   <val?>
  val?            %16.8 = CallBuiltin        !v    identical(%16.6, %16.7, true, true, true, true, false, true) e16.5
  val?            %16.9 = PopContext         C     %16.8, %16.2   <lgl$->
  lgl$#-          %16.10 = IsType                   %16.9 isA lgl$-
  void                    Branch                   %16.10 -> BB18 (if true) | BB19 (if false)
BB17   <- [14]
  fs              %17.0 = FrameState         R     0x55fa0eb0f310+97: [], env=e14.0
  void                    Deopt              !v    %17.0, CallTarget@0x55fa0f6632a8[Call#1], %14.3   !
BB18   <- [16]
  lgl$-           %18.0 = CastType           d     dn %16.9
  lgl$-           %18.1 = Not                d     %18.0, elided
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB8 (if true) | BB7 (if false)
BB19   <- [16]
  fs              %19.0 = FrameState         R     0x55fa0eb0f310+134: [%16.9], env=e14.0
  void                    Deopt              !v    %19.0, Typecheck@0x55fa0f6632a8[Type#5], %16.9   !
BB8   <- [18]
  val?^ | miss    %8.0  = LdVar              eR    class, e14.0
  lgl$#-          %8.1  = Identical                <blt class>, %8.0   <@?>
  void                    Branch                   %8.1 -> BB10 (if true) | BB9 (if false)
BB7   <- [18]
  val?^ | miss    %7.0  = LdVar              eR    value, e14.0
  void                    Visible            v     
  val?            %7.2  = Force!<value>      !     %7.0, e14.0   <(str|cls)>
  void                    Return             l     %7.2
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    value, e14.0
  val?            %10.1 = Force!             !v    %10.0, e14.0   <val?_>
  val?            %10.2 = CallBuiltin        !v    class(%10.1) e14.0   <val?_>
  void                    StVar              lW    cv, %10.2, e14.0
  val?^ | miss    %10.4 = LdVar              eR    class, e14.0
  lgl$#-          %10.5 = Identical                <blt class>, %10.4   <@?>
  void                    Branch                   %10.5 -> BB12 (if true) | BB11 (if false)
BB9   <- [8]
  (cls|spec|blt)  %9.0  = LdFun              !v    class, e14.0
  fs              %9.1  = FrameState         R     0x55fa0eb0f310+179: [%9.0], env=e14.0
  void                    Deopt              !v    %9.1, DeadCall@0x55fa0f6632a8[Call#4], %9.0   !
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    .Object, e14.0
  val?            %12.1 = Force!             !v    %12.0, e14.0   <val?_>
  val?            %12.2 = CallBuiltin        !v    class(%12.1) e14.0   <val?_>
  void                    StVar              lW    co, %12.2, e14.0
  (cls|spec|blt)  %12.4 = LdFun              !v    .identC, e14.0
  fs              %12.5 = FrameState         R     0x55fa0eb0f310+366: [%12.4], env=e14.0
  void                    Deopt              !v    %12.5, DeadCall@0x55fa0f6632a8[Call#6], %12.4   !
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    class, e14.0
  fs              %11.1 = FrameState         R     0x55fa0eb0f310+284: [%11.0], env=e14.0
  void                    Deopt              !v    %11.1, DeadCall@0x55fa0f6632a8[Call#5], %11.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55fa0ad54748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, initialize[0x55fa0eb46190]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(str|cls)>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55fa0ad54748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, initialize[0x55fa0eb46190]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(str|cls)>
  void                    Return             l     %0.3

│ initialize[0x55fa0eb46190]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
