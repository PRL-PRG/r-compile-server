
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x55fa1703fb00]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3               │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x55fa1703fb00]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     Class=%0.0, where(miss)=missingArg, package(miss)=missingArg, inherits(miss)=missingArg, parent=<env 0x55fa0b35b378>, context 1
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    where, %0.3, e0.1
  prom-           %0.5  = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p2, e0.1
  val?^ | miss    %0.6  = CastType                 up %0.5
  void                    StArg              lW    package, %0.6, e0.1
  void                    StArg              lW    inherits, true, e0.1
  val?^ | miss    %0.9  = LdVar              eR    .getClassesFromCache, <env 0x55fa0b35b378>
  lgl$#-          %0.10 = Identical                %0.9, function(name) <(rir::DispatchTable*)0x55fa0cf|...
  void                    Branch                   %0.10 -> BB38 (if true) | BB39 (if false)
BB38   <- [0]
  prom-           %38.0 = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p13 (!refl), e0.1
  ct              %38.1 = PushContext        lCL   %38.0, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x55fa0cf|..., e0.1
  val?^           %38.2 = CastType                 up %38.0
  val?^ | miss    %38.3 = LdVar              eR    .Call, <env 0x55fa0b35b378>
  lgl$#-          %38.4 = Identical                <blt .Call>, %38.3   <true>
  void                    Branch                   %38.4 -> BB40 (if true) | BB41 (if false)
BB39   <- [0]
  fs              %39.0 = FrameState         R     0x55fa0d117f20+0: [], env=e0.1
  void                    Deopt              !v    %39.0, CallTarget@0x55fa0d01ec50[Call#3], %0.9
BB40   <- [38]
  val?^ | miss    %40.0 = LdVar              eR    C_R_getClassFromCache, <env 0x55fa0b35b378>
  env             e40.1 = MkEnv              l     name=%38.2, parent=<env 0x55fa0b35b378>, context 1
  val?            %40.2 = Force!<value>      !v    %40.0, e40.1   <vec>
  val?^ | miss    %40.3 = LdVar              eR    name, e40.1
  val?            %40.4 = Force!<lazy>       !v    %40.3, e40.1   <str$+>
  val?^ | miss    %40.5 = LdVar              eR    .classTable, e40.1
  val?            %40.6 = Force!<wrapped>    !v    %40.5, e40.1   <env->
  val?            %40.7 = CallBuiltin        !v    .Call(%40.2, %40.4, %40.6) e40.1   <other>
  val?            %40.8 = PopContext         C     %40.7, %38.1   <other>
  lgl$-           %40.9 = Is                       %40.8, list
  void                    StVar              lW    value, %40.8, e0.1
  val             %40.11 = ChkMissing         e     %40.8   <other>
  lgl$#-          %40.12 = CheckTrueFalse     e     %40.9
  lgl$-           %40.13 = Is                       %40.11, NULL
  void                    Branch                   %40.12 -> BB36 (if true) | BB7 (if false)
BB41   <- [38]
  fs              %41.0 = FrameState         R     0x55fa0d117f20+72: [], env=e0.1
  env             e41.1 = (MkEnv)            l     name=%38.2, parent=<env 0x55fa0b35b378>, context 1
  fs              %41.2 = FrameState         R     0x55fa0d04a060+17: [<blt .Call>, %38.4], env=e41.1, next=%41.0
  void                    Deopt              !v    %41.2, DeadBranchReached@0x55fa0c038388[Test#0], %38.4   !
BB36   <- [40]
  (cls|spec|blt)  %36.0 = LdFun              !v    .resolveClassList, e0.1
  fs              %36.1 = FrameState         R     0x55fa0d117f20+121: [%36.0], env=e0.1
  void                    Deopt              !v    %36.1, DeadCall@0x55fa0d01ec50[Call#4], %36.0   !
BB7   <- [40]
  lgl$#-          %7.0  = CheckTrueFalse     e     %40.13
  void                    Branch                   %7.0 -> BB10 (if true) | BB8 (if false)
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    classMetaName, e0.1
  lgl$#-          %10.1 = Identical                %10.0, function(name) <(rir::DispatchTable*)0x55fa0c2|...
  void                    Branch                   %10.1 -> BB42 (if true) | BB43 (if false)
BB8   <- [7]
  void                    Nop                !     
  goto BB9
BB42   <- [10]
  prom-           %42.0 = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p5, e0.1
  ct              %42.1 = PushContext        lCL   %42.0, classMetaName(if(>(length(Class), 1L), [[(Clas|..., function(name) <(rir::DispatchTable*)0x55fa0c2|..., e0.1
  val?^           %42.2 = CastType                 up %42.0
  val?^ | miss    %42.3 = LdVar              eR    methodsPackageMetaName, <env 0x55fa0b35b378>
  lgl$#-          %42.4 = Identical                %42.3, function(prefix, name, package="") <(rir::Disp|...
  void                    Branch                   %42.4 -> BB44 (if true) | BB45 (if false)
BB43   <- [10]
  fs              %43.0 = FrameState         R     0x55fa0d117f20+86: [], env=e0.1
  void                    Deopt              !v    %43.0, CallTarget@0x55fa0d01ec50[Call#5], %10.0   !
BB9   <- [8, 31]
  val?^ | miss    %9.0  = LdVar              eR    value, e0.1
  void                    Visible            v     
  val?            %9.2  = Force!<value>      !     %9.0, e0.1   <other>
  void                    Return             l     %9.2
BB44   <- [42]
  env             e44.0 = MkEnv              l     name=%42.2, parent=<env 0x55fa0b35b378>, context 1
  prom-           %44.1 = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p14, e44.0
  ct              %44.2 = PushContext        lCL   "C", %44.1, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|..., e44.0
  val?^           %44.3 = CastType                 up %44.1
  val?^ | miss    %44.4 = LdVar              eR    .Call, <env 0x55fa0b35b378>
  lgl$#-          %44.5 = Identical                <blt .Call>, %44.4   <true>
  void                    Branch                   %44.5 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x55fa0d117f20+234: [], env=e0.1
  env             e45.1 = (MkEnv)            l     name=%42.2, parent=<env 0x55fa0b35b378>, context 1
  fs              %45.2 = FrameState         R     0x55fa0d028730+0: [], env=e45.1, next=%45.0
  void                    Deopt              !v    %45.2, CallTarget@0x55fa0eb37dd8[Call#0], %42.3   !
BB46   <- [44]
  val?^ | miss    %46.0 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x55fa0b35b378>
  env             e46.1 = MkEnv              l     prefix="C", name=%44.3, package(miss)="", parent=<env 0x55fa0b35b378>, context 1
  val?            %46.2 = Force!<value>      !v    %46.0, e46.1   <vec>
  val?^ | miss    %46.3 = LdVar              eR    prefix, e46.1
  val?            %46.4 = Force!<value>      !v    %46.3, e46.1   <str$->
  val?^ | miss    %46.5 = LdVar              eR    name, e46.1
  val?            %46.6 = Force!<lazy>       !v    %46.5, e46.1   <str$->
  val?^ | miss    %46.7 = LdVar              eR    package, e46.1
  val?            %46.8 = Force!<lazy>       !v    %46.7, e46.1   <str$->
  val?            %46.9 = CallBuiltin        !v    .Call(%46.2, %46.4, %46.6, %46.8) e46.1   <str$->
  val?            %46.10 = PopContext         C     %46.9, %44.2   <str$->
  val?            %46.11 = PopContext         C     %46.10, %42.1   <str$->
  void                    StVar              lW    cname, %46.11, e0.1
  val?^ | miss    %46.13 = LdVar              eR    is.character, e0.1
  lgl$#-          %46.14 = Identical                <blt is.character>, %46.13   <true>
  void                    Branch                   %46.14 -> BB48 (if true) | BB49 (if false)
BB47   <- [44]
  fs              %47.0 = FrameState         R     0x55fa0d117f20+234: [], env=e0.1
  fs              %47.1 = FrameState         R     0x55fa0d028730+37: [], env=e44.0, next=%47.0
  env             e47.2 = (MkEnv)            l     prefix="C", name=%44.3, package(miss)="", parent=<env 0x55fa0b35b378>, context 1
  fs              %47.3 = FrameState         R     0x55fa0d1c3850+0: [], env=e47.2, next=%47.1
  void                    Deopt              !v    %47.3, DeadBranchReached@0x55fa0c02dbe0[Test#0], %44.5   !
BB48   <- [46]
  val?^ | miss    %48.0 = LdVar              eR    where, e0.1
  val?            %48.1 = Force!<lazy>       !v    %48.0, e0.1   <env->
  lgl$#-          %48.2 = CallSafeBuiltin    wed   is.character(%48.1)    <lgl$->
  void                    Branch                   %48.2 -> BB35 (if true) | BB17 (if false)
BB49   <- [46]
  fs              %49.0 = FrameState         R     0x55fa0d117f20+248: [], env=e0.1
  void                    Deopt              !v    %49.0, DeadBranchReached@0x55fa0d01ec50[Test#1], %46.14   !
BB35   <- [48]
  val?^ | miss    %35.0 = LdVar              eR    where, e0.1
  val?            %35.1 = Force!             !v    %35.0, e0.1   <val?_>
  void                    StVar              lW    package, %35.1, e0.1
  goto BB18
BB17   <- [48]
  void                    Nop                !     
  goto BB18
BB18   <- [17, 35]
  val?^ | miss    %18.0 = LdVar              eR    isTRUE, e0.1
  lgl$#-          %18.1 = Identical                %18.0, function(x) <(rir::DispatchTable*)0x55fa0cc4d8|...
  void                    Branch                   %18.1 -> BB50 (if true) | BB51 (if false)
BB50   <- [18]
  prom-           %50.0 = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p7, e0.1
  val?            %50.1 = StaticCall         !v    isTRUE[0x55fa16eba550](%50.0) e0.1   <lgl$->
  lgl$#-          %50.2 = IsType                   %50.1 isA lgl$-
  void                    Branch                   %50.2 -> BB52 (if true) | BB53 (if false)
BB51   <- [18]
  fs              %51.0 = FrameState         R     0x55fa0d117f20+378: [], env=e0.1
  void                    Deopt              !v    %51.0, CallTarget@0x55fa0d01ec50[Call#8], %18.0   !
BB52   <- [50]
  lgl$-           %52.0 = CastType           d     dn %50.1
  lgl$#-          %52.1 = CheckTrueFalse     e     %52.0
  void                    Branch                   %52.1 -> BB34 (if true) | BB23 (if false)
BB53   <- [50]
  void                    Nop                !     
  val?            %53.1 = %50.1
  dr              %53.2 = Typecheck@0x55fa0d01ec50[Type#26]
  goto BB21
BB34   <- [52]
  val?^ | miss    %34.0 = LdVar              eR    .requirePackage, e0.1
  lgl$#-          %34.1 = Identical                %34.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Branch                   %34.1 -> BB54 (if true) | BB55 (if false)
BB23   <- [52]
  void                    Nop                !     
  goto BB24
BB21   <- [53, 55]
  val?^ | miss    %21.0 = Phi                      %53.1:BB53, %55.1:BB55
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %53.2:BB53, %55.2:BB55
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55fa0d117f20+410: [%50.1], env=e0.1
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB54   <- [34]
  prom-           %54.0 = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p12, e0.1
  val?            %54.1 = StaticCall         !v    .requirePackage[0x55fa16b6d420](%54.0) e0.1   <env->
  void                    StVar              lW    package, %54.1, e0.1
  goto BB24
BB55   <- [34]
  void                    Nop                !     
  val?^ | miss    %55.1 = %34.0
  dr              %55.2 = CallTarget@0x55fa0d01ec50[Call#10]
  goto BB21
BB24   <- [23, 54]
  val?^ | miss    %24.0 = LdVar              eR    is.environment, e0.1
  lgl$#-          %24.1 = Identical                <blt is.environment>, %24.0   <true>
  void                    Branch                   %24.1 -> BB56 (if true) | BB57 (if false)
BB56   <- [24]
  val?^ | miss    %56.0 = LdVar              eR    package, e0.1
  val?            %56.1 = Force!<value>      !v    %56.0, e0.1   <env->
  lgl$#-          %56.2 = CallSafeBuiltin    wed   is.environment(%56.1)    <lgl$->
  void                    Branch                   %56.2 -> BB33 (if true) | BB29 (if false)
BB57   <- [24]
  fs              %57.0 = FrameState         R     0x55fa0d117f20+472: [], env=e0.1
  void                    Deopt              !v    %57.0, DeadBranchReached@0x55fa0d01ec50[Test#2], %24.1   !
BB33   <- [56]
  val?^ | miss    %33.0 = LdVar              eR    get0, e0.1
  lgl$#-          %33.1 = Identical                %33.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Branch                   %33.1 -> BB58 (if true) | BB59 (if false)
BB29   <- [56]
  void                    Nop                !     
  goto BB30
BB58   <- [33]
  prom-           %58.0 = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p9, e0.1
  prom-           %58.1 = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p10, e0.1
  prom-           %58.2 = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p11, e0.1
  val?            %58.3 = StaticCall         !v    get0[0x55fa16f03e30](%58.0, %58.1, missingArg, %58.2) { 0 1 3n } e0.1   <other>
  void                    StVar              lW    value, %58.3, e0.1
  goto BB30
BB59   <- [33]
  fs              %59.0 = FrameState         R     0x55fa0d117f20+563: [%56.2], env=e0.1
  void                    Deopt              !v    %59.0, CallTarget@0x55fa0d01ec50[Call#12], %33.0   !
BB30   <- [29, 58]
  val?^ | miss    %30.0 = LdVar              eR    value, e0.1
  val?            %30.1 = Force!<value>      !v    %30.0, e0.1   <other>
  lgl$-           %30.2 = Is                       %30.1, NULL
  lgl$#-          %30.3 = CheckTrueFalse     e     %30.2
  void                    Branch                   %30.3 -> BB32 (if true) | BB31 (if false)
BB32   <- [30]
  (cls|spec|blt)  %32.0 = LdFun              !v    get0, e0.1
  fs              %32.1 = FrameState         R     0x55fa0d117f20+682: [%32.0], env=e0.1
  void                    Deopt              !v    %32.1, DeadCall@0x55fa0d01ec50[Call#13], %32.0   !
BB31   <- [30]
  void                    Nop                !     
  goto BB9
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x55fa0ad54a90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p6, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  val?            %0.4  = Gt                 !v    %0.3, 1L, e0.0   <lgl$->
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    Class, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e0.0   <val?_>
  void                    Visible            v     
  val?            %2.4  = %2.2
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e0.0   <str$+>
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.3:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nzchar, <0x55fa0ad60240>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55fa1703fb00]_p8, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ getClassDef[0x55fa1703fb00]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
