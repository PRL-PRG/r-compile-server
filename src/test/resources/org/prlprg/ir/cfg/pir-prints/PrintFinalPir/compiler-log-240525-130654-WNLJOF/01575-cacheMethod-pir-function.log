
┌──────────────────────────────────────────────────────────────────────────────┐
│ cacheMethod[0x55fa16b5a3a0]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager0,Eager3,NonRefl0,NonRefl3,!Obj0       │
│ Properties:                                                                  │
├────── Final PIR Version
cacheMethod[0x55fa16b5a3a0]
BB0
  val?^ | miss    %0.0  = LdArg                    5
  val?^ | miss    %0.1  = LdArg                    4
  val?~ | miss    %0.2  = LdArg                    3
  val?^ | miss    %0.3  = LdArg                    2
  val?^ | miss    %0.4  = LdArg                    1
  val?~+          %0.5  = LdArg                    0
  lgl$#-          %0.6  = Identical                %0.2, missingArg
  lgl$#-          %0.7  = Identical                %0.0, missingArg
  env             e0.8  = MkEnv              l     f=%0.5, sig=%0.4, def=%0.3, args=%0.2, fdef=%0.1, inherited=%0.0, parent=<env 0x55fa0b35b378>, context 1
  void                    Branch                   %0.6 -> BB2 (if true) | BB16 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p0, e0.8
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    args, %2.1, e0.8
  goto BB3
BB16   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 16]
  void                    Branch                   %0.7 -> BB15 (if true) | BB4 (if false)
BB15   <- [3]
  void                    StArg              lW    inherited, false, e0.8
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [4, 15]
  val?^ | miss    %5.0  = LdVar              eR    environment, <env 0x55fa0b35b378>
  lgl$#-          %5.1  = Identical                %5.0, function(fun=NULL) <(rir::DispatchTable*)0x55f|...
  void                    Branch                   %5.1 -> BB17 (if true) | BB18 (if false)
BB17   <- [5]
  val?^           %17.0 = ChkMissing         e     %0.1
  val?            %17.1 = Force!<lazy>       !v    %17.0, e0.8   <cls>
  prom-           %17.2 = MkArg                    %17.1, cacheMethod[0x55fa16b5a3a0]_p3 (!refl), 
  val?            %17.3 = StaticCall         !v    environment[0x55fa0cdf33a0](%17.2) e0.8   <env->
  void                    StVar              lW    ev, %17.3, e0.8
  val?^ | miss    %17.5 = LdVar              eR    .cacheMethodInTable, e0.8
  lgl$#-          %17.6 = Identical                %17.5, function(fdef, sig, def, table=get(".AllMTable|...
  void                    Branch                   %17.6 -> BB19 (if true) | BB20 (if false)
BB18   <- [5]
  fs              %18.0 = FrameState         R     0x55fa0f9c1010+0: [], env=e0.8
  void                    Deopt              !v    %18.0, CallTarget@0x55fa0ed19970[Call#1], %5.0
BB19   <- [17]
  prom-           %19.0 = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p4, e0.8
  prom-           %19.1 = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p5, e0.8
  prom-           %19.2 = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p6, e0.8
  prom-           %19.3 = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p7, e0.8
  val?            %19.4 = StaticCall         !v    .cacheMethodInTable[0x55fa17925b10](%19.0, %19.1, %19.2, %19.3) e0.8
  val?^ | miss    %19.5 = LdVar              eR    inherited, e0.8
  void                    Visible            v     
  val?            %19.7 = Force!<wrapped>    !     %19.5, e0.8   <lgl$->
  lgl$#-          %19.8 = IsType                   %19.7 isA lgl$-
  void                    Branch                   %19.8 -> BB21 (if true) | BB22 (if false)
BB20   <- [17]
  fs              %20.0 = FrameState         R     0x55fa0f9c1010+46: [], env=e0.8
  void                    Deopt              !v    %20.0, CallTarget@0x55fa0ed19970[Call#2], %17.5   !
BB21   <- [19]
  lgl$-           %21.0 = CastType           d     dn %19.7
  lgl$-           %21.1 = Not                vd    %21.0, elided
  lgl$#-          %21.2 = CheckTrueFalse     e     %21.1
  void                    Branch                   %21.2 -> BB14 (if true) | BB12 (if false)
BB22   <- [19]
  void                    Nop                !     
  val?            %22.1 = %19.7
  dr              %22.2 = Typecheck@0x55fa0ed19970[Type#11]
  goto BB10
BB14   <- [21]
  val?^ | miss    %14.0 = LdVar              eR    .cacheMethodInTable, e0.8
  lgl$#-          %14.1 = Identical                %14.0, function(fdef, sig, def, table=get(".AllMTable|...
  void                    Branch                   %14.1 -> BB23 (if true) | BB24 (if false)
BB12   <- [21]
  void                    Invisible          v     
  nil-            %12.1 = nil
  goto BB13
BB10   <- [22, 24]
  val?^ | miss    %10.0 = Phi                      %22.1:BB22, %24.1:BB24
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %22.2:BB22, %24.2:BB24
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x55fa0f9c1010+103: [%19.7], env=e0.8
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB23   <- [14]
  prom-           %23.0 = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p11, e0.8
  prom-           %23.1 = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p12, e0.8
  prom-           %23.2 = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p13, e0.8
  prom-           %23.3 = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p14, e0.8
  val?            %23.4 = StaticCall         !     .cacheMethodInTable[0x55fa17925b10](%23.0, %23.1, %23.2, %23.3) e0.8   <cls>
  val?            %23.5 = %23.4
  goto BB13
BB24   <- [14]
  void                    Nop                !     
  val?^ | miss    %24.1 = %14.0
  dr              %24.2 = CallTarget@0x55fa0ed19970[Call#4]
  goto BB10
BB13   <- [12, 23]
  val?            %13.0 = Phi                      %12.1:BB12, %23.5:BB23
  val?            %13.1 = %13.0
  void                    Return             l     %13.1
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .getMethodsTable, <0x55fa0db8cb38>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p8, e0.0
  prom-           %0.3  = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p9, e0.0
  prom-           %0.4  = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p10, e0.0
  val?            %0.5  = NamedCall          !     %0.1(%0.2, %0.3, inherited=%0.4) e0.0   <env->
  void                    Return             l     %0.5
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherited, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .getMethodsTable, <0x55fa0db8cb38>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p15, e0.0
  prom-           %0.3  = MkArg                    unboundValue, cacheMethod[0x55fa16b5a3a0]_p16, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, %0.3, inherited=true) e0.0   <env->
  void                    Return             l     %0.4
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ cacheMethod[0x55fa16b5a3a0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
