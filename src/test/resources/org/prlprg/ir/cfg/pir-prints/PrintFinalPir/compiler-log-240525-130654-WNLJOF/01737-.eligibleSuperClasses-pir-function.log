
┌──────────────────────────────────────────────────────────────────────────────┐
│ .eligibleSuperClasses[0x55fa16dd97c0]                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
.eligibleSuperClasses[0x55fa16dd97c0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    names, <env 0x55fa0b35b378>
  lgl$#-          %0.3  = Identical                <blt names>, %0.2   <true>
  void                    Branch                   %0.3 -> BB15 (if true) | BB16 (if false)
BB15   <- [0]
  env             e15.0 = MkEnv              l     contains=%0.1, simpleOnly=%0.0, parent=<env 0x55fa0b35b378>, context 1
  val?            %15.1 = Force!<lazy>       !v    %0.1, e15.0   <vec+>
  lgl$#-          %15.2 = IsType                   %15.1 isA val?+
  void                    Branch                   %15.2 -> BB17 (if true) | BB18 (if false)
BB16   <- [0]
  env             e16.0 = (MkEnv)            l     contains=%0.1, simpleOnly=%0.0, parent=<env 0x55fa0b35b378>, context 1
  fs              %16.1 = FrameState         R     0x55fa106a07f0+0: [], env=e16.0
  void                    Deopt              !v    %16.1, DeadBranchReached@0x55fa11c90868[Test#0], %0.3
BB17   <- [15]
  val?+           %17.0 = CastType           d     dn %15.1   <vec+>
  val+            %17.1 = CallSafeBuiltin    wed   names(%17.0)    <str->
  void                    StVar              lW    what, %17.1, e15.0
  val?^ | miss    %17.3 = LdVar              eR    length, e15.0
  lgl$#-          %17.4 = Identical                <blt length>, %17.3   <true>
  void                    Branch                   %17.4 -> BB19 (if true) | BB20 (if false)
BB18   <- [15]
  fs              %18.0 = FrameState         R     0x55fa106a07f0+69: [<blt names>, %15.1], env=e15.0
  void                    Deopt              !v    %18.0, Typecheck@0x55fa11c90868[Type#1], %15.1   !
BB19   <- [17]
  (int|real)$-    %19.0 = CallSafeBuiltin    wed   length(%17.1)    <int$->
  lgl$#-          %19.1 = IsType                   %19.0 isA int$-
  void                    Branch                   %19.1 -> BB21 (if true) | BB22 (if false)
BB20   <- [17]
  fs              %20.0 = FrameState         R     0x55fa106a07f0+105: [], env=e15.0
  void                    Deopt              !v    %20.0, DeadBranchReached@0x55fa11c90868[Test#1], %17.4   !
BB21   <- [19]
  int$-           %21.0 = CastType           d     dn %19.0
  lgl$-           %21.1 = Not                d     %21.0, elided
  lgl$#-          %21.2 = CheckTrueFalse     e     %21.1
  void                    Branch                   %21.2 -> BB13 (if true) | BB9 (if false)
BB22   <- [19]
  void                    Nop                !     
  (int|real)$-    %22.1 = %19.0
  dr              %22.2 = Typecheck@0x55fa11c90868[Type#5]
  goto BB7
BB13   <- [21]
  void                    Visible            v     
  val+            %13.1 = %17.1
  goto BB12
BB9   <- [21]
  val?^ | miss    %9.0  = LdVar              eR    vapply, e15.0
  lgl$#-          %9.1  = Identical                %9.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Branch                   %9.1 -> BB23 (if true) | BB24 (if false)
BB7   <- [22, 24]
  val?^ | miss    %7.0  = Phi                      %22.1:BB22, %24.1:BB24
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %22.2:BB22, %24.2:BB24
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55fa106a07f0+196: [%19.0], env=e15.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB12   <- [13, 29]
  val?            %12.0 = Phi                      %29.3:BB29, %13.1:BB13
  val?            %12.1 = %12.0
  void                    Return             l     %12.1
BB23   <- [9]
  prom-           %23.0 = MkArg                    unboundValue, .eligibleSuperClasses[0x55fa16dd97c0]_p0, e15.0
  prom-           %23.1 = MkArg                    unboundValue, .eligibleSuperClasses[0x55fa16dd97c0]_p1, e15.0
  val?            %23.2 = StaticCall         !v    vapply[0x55fa1242ded0](%23.0, %23.1, na-lgl) { 0 1 2 } e15.0   <lgl+>
  void                    StVar              lW    eligible, %23.2, e15.0
  val?^ | miss    %23.4 = LdVar              eR    what, e15.0
  lgl$#-          %23.5 = IsType                   %23.4 isA val?~- | miss
  void                    Branch                   %23.5 -> BB25 (if true) | BB26 (if false)
BB24   <- [9]
  void                    Nop                !     
  val?^ | miss    %24.1 = %9.0
  dr              %24.2 = CallTarget@0x55fa11c90868[Call#2]
  goto BB7
BB25   <- [23]
  val?~- | miss   %25.0 = CastType           d     dn %23.4
  val?-           %25.1 = Force!<value>            %25.0,    <str->
  lgl$#-          %25.2 = IsType                   %25.1 isA val+   <true>
  void                    Branch                   %25.2 -> BB27 (if true) | BB28 (if false)
BB26   <- [23]
  void                    Nop                !     
  val?^ | miss    %26.1 = %23.4
  dr              %26.2 = Typecheck@0x55fa11c90868[Type#9]
  goto BB10
BB27   <- [25]
  val             %27.0 = ChkMissing         e     %23.2
  lgl$#-          %27.1 = IsType                   %27.0 isA lgl+
  void                    Branch                   %27.1 -> BB29 (if true) | BB30 (if false)
BB28   <- [25]
  void                    Nop                !     
  lgl$#-          %28.1 = %25.2
  dr              %28.2 = DeadBranchReached@0x55fa11c90868[Test#2]
  goto BB10
BB10   <- [26, 28, 30]
  val?^ | miss    %10.0 = Phi                      %26.1:BB26, %28.1:BB28, %30.1:BB30
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %26.2:BB26, %28.2:BB28, %30.2:BB30
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x55fa106a07f0+264: [], env=e15.0
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB29   <- [27]
  lgl+            %29.0 = CastType           d     dn %27.0
  val?            %29.1 = Extract1_1D        wed   %25.1, %29.0, elided   <str->
  void                    Visible            v     
  val?            %29.3 = %29.1
  goto BB12
BB30   <- [27]
  void                    Nop                !     
  val             %30.1 = %27.0
  dr              %30.2 = Typecheck@0x55fa11c90868[Type#11]
  goto BB10
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    .eligibleSuperClasses@Prom(1)16, e0.0
  cls             %0.2  = MkCls                    .eligibleSuperClasses@Prom(1)37, e0.0
  val?^ | miss    %0.3  = LdVar              eR    simpleOnly, e0.0
  void                    Visible            v     
  val?            %0.5  = Force<lazy>        !     %0.3, e0.0   <lgl$->
  lgl$#-          %0.6  = CheckTrueFalse     we    %0.5
  void                    Branch                   %0.6 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  cls             %2.1  = %0.2
  goto BB3
BB4   <- [0]
  void                    Nop                !     
  cls             %4.1  = %0.1
  goto BB3
BB3   <- [4, 2]
  cls             %3.0  = Phi                      %4.1:BB4, %2.1:BB2
  cls             %3.1  = %3.0
  void                    Return             l     %3.1

│ .eligibleSuperClasses[0x55fa16dd97c0]                                        │
└──────────────────────────────────────────────────────────────────────────────┘
