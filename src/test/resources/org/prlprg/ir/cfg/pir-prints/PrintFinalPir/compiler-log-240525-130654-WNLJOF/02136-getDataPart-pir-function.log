
┌──────────────────────────────────────────────────────────────────────────────┐
│ getDataPart[0x55fa16b19a10]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj1│
│ Properties:                                                                  │
├────── Final PIR Version
getDataPart[0x55fa16b19a10]
BB0
  val?~+          %0.0  = LdArg                    1
  val?~           %0.1  = LdArg                    0
  val?            %0.2  = Force<lazy>              %0.1,    <(str|cls)>
  val?^ | miss    %0.3  = LdVar              eR    typeof, <env 0x55fa0b35b378>
  lgl$#-          %0.4  = Identical                %0.3, function(x) <(rir::DispatchTable*)0x55fa0cca73|...
  void                    Branch                   %0.4 -> BB72 (if true) | BB73 (if false)
BB72   <- [0]
  str$-           %72.0 = CallSafeBuiltin    wed   typeof(%0.2)    <str$->
  lgl$-           %72.1 = Eq                 d     %72.0, "S4", elided   <lgl$->
  lgl$#-          %72.2 = CheckTrueFalse     e     %72.1
  env             e72.3 = MkEnv              l     object=%0.1, NULL.for.none=%0.0, parent=<env 0x55fa0b35b378>, context 1
  void                    Branch                   %72.2 -> BB56 (if true) | BB3 (if false)
BB73   <- [0]
  env             e73.0 = (MkEnv)            l     object=%0.1, NULL.for.none=%0.0, parent=<env 0x55fa0b35b378>, context 1
  fs              %73.1 = FrameState         R     0x55fa0f7c9f50+0: [], env=e73.0
  void                    Deopt              !v    %73.1, CallTarget@0x55fa108d3a08[Call#0], %0.3
BB56   <- [72]
  val?^ | miss    %56.0 = LdVar              eR    attr, <env 0x55fa0b35b378>
  lgl$#-          %56.1 = Identical                <blt attr>, %56.0   <@?>
  void                    Branch                   %56.1 -> BB58 (if true) | BB57 (if false)
BB3   <- [72]
  (cls|spec|blt)  %3.0  = LdFun              !v    @, <0x55fa0ad53bd8>, <env 0x55fa0b35b378>
  prom-           %3.1  = MkArg                    unboundValue, getDataPart[0x55fa16b19a10]_p1, e72.3
  prom-           %3.2  = MkArg                    unboundValue, getDataPart[0x55fa16b19a10]_p4, e72.3
  val?            %3.3  = Call               !v    %3.0(%3.1, %3.2) e72.3   <vec+>
  void                    StVar              lW    temp, %3.3, e72.3
  lgl$#-          %3.5  = IsType                   %3.3 isA val?+
  val?^ | miss    %3.6  = LdVar              eR    length, e72.3
  lgl$#-          %3.7  = Identical                <blt length>, %3.6   <true>
  void                    Branch                   %3.7 -> BB74 (if true) | BB75 (if false)
BB58   <- [56]
  val?            %58.0 = CallBuiltin        !v    attr(%0.2, ".Data") e72.3   <val?_>
  lgl$-           %58.1 = Is                       %58.0, NULL
  void                    StVar              lW    value, %58.0, e72.3
  val             %58.3 = ChkMissing         e     %58.0
  lgl$#-          %58.4 = CheckTrueFalse     e     %58.1
  void                    Branch                   %58.4 -> BB61 (if true) | BB59 (if false)
BB57   <- [56]
  (cls|spec|blt)  %57.0 = LdFun              !v    attr, <env 0x55fa0b35b378>
  fs              %57.1 = FrameState         R     0x55fa0f7c9f50+88: [%57.0], env=e72.3
  void                    Deopt              !v    %57.1, DeadCall@0x55fa108d3a08[Call#1], %57.0
BB74   <- [3]
  val             %74.0 = ChkMissing         e     %3.3
  void                    Branch                   %3.5 -> BB76 (if true) | BB77 (if false)
BB75   <- [3]
  void                    Nop                !     
  lgl$#-          %75.1 = %3.7
  dr              %75.2 = DeadBranchReached@0x55fa108d3a08[Test#2]
  goto BB4
BB61   <- [58]
  val?^ | miss    %61.0 = LdVar              eR    attr, e72.3
  lgl$#-          %61.1 = Identical                <blt attr>, %61.0   <@?>
  void                    Branch                   %61.1 -> BB63 (if true) | BB62 (if false)
BB59   <- [58]
  void                    Nop                !     
  goto BB60
BB76   <- [74]
  val?+           %76.0 = CastType           d     dn %3.3   <vec+>
  (int|real)$-    %76.1 = CallSafeBuiltin    wed   length(%76.0)    <int$->
  lgl$#-          %76.2 = IsType                   %76.1 isA int$-
  void                    Branch                   %76.2 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  void                    Nop                !     
  val?            %77.1 = %3.3
  dr              %77.2 = Typecheck@0x55fa108d3a08[Type#20]
  goto BB4
BB4   <- [75, 77]
  val?^ | miss    %4.0  = Phi                      %75.1:BB75, %77.1:BB77
  val?^ | miss    %4.1  = %4.0
  dr              %4.2  = Phi                      %75.2:BB75, %77.2:BB77
  dr              %4.3  = %4.2
  fs              %4.4  = FrameState         R     0x55fa0f7c9f50+534: [], env=e72.3
  void                    Deopt              !v    %4.4, %4.3, %4.1   !
BB63   <- [61]
  val?^ | miss    %63.0 = LdVar              eR    object, e72.3
  val?            %63.1 = Force!             !v    %63.0, e72.3   <val?_>
  val?            %63.2 = CallBuiltin        !v    attr(%63.1, ".xData") e72.3   <val?_>
  lgl$-           %63.3 = Is                       %63.2, NULL
  lgl$-           %63.4 = AsLogical                %63.3
  lgl$#-          %63.5 = Identical                %63.4, false
  void                    StVar              lW    value, %63.2, e72.3
  val             %63.7 = ChkMissing         e     %63.2
  void                    Branch                   %63.5 -> BB70 (if true) | BB64 (if false)
BB62   <- [61]
  (cls|spec|blt)  %62.0 = LdFun              !v    attr, e72.3
  fs              %62.1 = FrameState         R     0x55fa0f7c9f50+234: [%62.0], env=e72.3
  void                    Deopt              !v    %62.1, DeadCall@0x55fa108d3a08[Call#2], %62.0   !
BB60   <- [59, 68]
  (cls|spec|blt)  %60.0 = LdFun              !v    identical, e72.3
  fs              %60.1 = FrameState         R     0x55fa0f7c9f50+414: [%60.0], env=e72.3
  void                    Deopt              !v    %60.1, DeadCall@0x55fa108d3a08[Call#4], %60.0   !
BB78   <- [76]
  int$-           %78.0 = CastType           d     dn %76.1
  lgl$-           %78.1 = Eq                 d     %78.0, 0L, elided   <lgl$->
  lgl$#-          %78.2 = CheckTrueFalse     e     %78.1
  void                    Branch                   %78.2 -> BB55 (if true) | BB8 (if false)
BB79   <- [76]
  void                    Nop                !     
  (int|real)$-    %79.1 = %76.1
  dr              %79.2 = Typecheck@0x55fa108d3a08[Type#23]
  goto BB6
BB70   <- [63]
  void                    Nop                !     
  lgl$-           %70.1 = %63.4
  goto BB67
BB64   <- [63]
  val?^ | miss    %64.0 = LdVar              eR    NULL.for.none, e72.3
  val?            %64.1 = Force!             !v    %64.0, e72.3   <val?_>
  lgl$#-          %64.2 = IsType                   %64.1 isA val?+
  void                    Branch                   %64.2 -> BB80 (if true) | BB81 (if false)
BB55   <- [78]
  val?^ | miss    %55.0 = LdVar              eR    object, e72.3
  void                    Visible            v     
  val?            %55.2 = Force!             !     %55.0, e72.3   <val?_>
  val?            %55.3 = %55.2
  goto BB41
BB8   <- [78]
  val?^ | miss    %8.0  = LdVar              eR    is.na, e72.3
  lgl$#-          %8.1  = Identical                <blt is.na>, %8.0   <true>
  void                    Branch                   %8.1 -> BB82 (if true) | BB83 (if false)
BB6   <- [79, 83, 85, 87, 89]
  val?^ | miss    %6.0  = Phi                      %79.1:BB79, %83.1:BB83, %85.1:BB85, %87.1:BB87, %89.1:BB89
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %79.2:BB79, %83.2:BB83, %85.2:BB85, %87.2:BB87, %89.2:BB89
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x55fa0f7c9f50+625: [%76.1], env=e72.3
  void                    Deopt              !v    %6.4, %6.3, %6.1   !
BB67   <- [70, 80]
  lgl$-           %67.0 = Phi                      %80.4:BB80, %70.1:BB70
  lgl$-           %67.1 = %67.0
  lgl$#-          %67.2 = CheckTrueFalse     e     %67.1
  void                    Branch                   %67.2 -> BB69 (if true) | BB68 (if false)
BB80   <- [64]
  val?+           %80.0 = CastType           d     dn %64.1   <val?_>
  lgl             %80.1 = Not                wed   %80.0, elided
  lgl$-           %80.2 = AsLogical          e     %80.1
  lgl$-           %80.3 = LAnd                     %63.4, %80.2
  lgl$-           %80.4 = %80.3
  goto BB67
BB81   <- [64]
  fs              %81.0 = FrameState         R     0x55fa0f7c9f50+357: [%63.4, %64.1], env=e72.3
  void                    Deopt              !v    %81.0, Typecheck@0x55fa108d3a08[Type#11], %64.1   !
BB41   <- [54, 55, 40]
  val?            %41.0 = Phi                      %40.4:BB40, %54.1:BB54, %55.3:BB55
  val?            %41.1 = %41.0
  void                    Return             l     %41.1
BB82   <- [8]
  val?^ | miss    %82.0 = LdVar              eR    match, e72.3
  lgl$#-          %82.1 = Identical                %82.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %82.1 -> BB84 (if true) | BB85 (if false)
BB83   <- [8]
  void                    Nop                !     
  lgl$#-          %83.1 = %8.1
  dr              %83.2 = DeadBranchReached@0x55fa108d3a08[Test#3]
  goto BB6
BB69   <- [67]
  (cls|spec|blt)  %69.0 = LdFun              !v    stop, e72.3
  fs              %69.1 = FrameState         R     0x55fa0f7c9f50+381: [%69.0], env=e72.3
  void                    Deopt              !v    %69.1, DeadCall@0x55fa108d3a08[Call#3], %69.0   !
BB68   <- [67]
  void                    Nop                !     
  goto BB60
BB84   <- [82]
  val?^ | miss    %84.0 = LdVar              eR    names, e72.3
  lgl$#-          %84.1 = Identical                %84.0, <blt names>
  void                    Branch                   %84.1 -> BB86 (if true) | BB87 (if false)
BB85   <- [82]
  void                    Nop                !     
  val?^ | miss    %85.1 = %82.0
  dr              %85.2 = CallTarget@0x55fa108d3a08[Call#12]
  goto BB6
BB86   <- [84]
  lgl$#-          %86.0 = IsType                   %74.0 isA val?~+ | miss
  void                    Branch                   %86.0 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  void                    Nop                !     
  val?^ | miss    %87.1 = %84.0
  dr              %87.2 = CallTarget@0x55fa108d3a08[Call#13]
  goto BB6
BB88   <- [86]
  val+            %88.0 = CastType           d     dn %74.0   <vec+>
  val+            %88.1 = CallSafeBuiltin    wed   names(%88.0)    <str->
  val+            %88.2 = CallSafeBuiltin    wed   match(".Data", %88.1, NA, nil)    <int$->
  lgl$#-          %88.3 = IsType                   %88.2 isA int$-
  void                    Branch                   %88.3 -> BB90 (if true) | BB91 (if false)
BB89   <- [86]
  void                    Nop                !     
  val             %89.1 = %74.0
  dr              %89.2 = Typecheck@0x55fa108d3a08[Type#29]
  goto BB6
BB90   <- [88]
  int$-           %90.0 = CastType           d     dn %88.2
  lgl$-           %90.1 = CallSafeBuiltin    wed   is.na(%90.0)    <lgl$->
  lgl$#-          %90.2 = CheckTrueFalse     e     %90.1
  void                    Branch                   %90.2 -> BB52 (if true) | BB11 (if false)
BB91   <- [88]
  prom-           %91.0 = MkArg                    %88.1, getDataPart[0x55fa16b19a10]_p5 (!refl), e72.3
  val?~           %91.1 = CastType                 up %91.0
  fs              %91.2 = FrameState         R     0x55fa0f7c9f50+765: [<blt is.na>], env=e72.3
  env             e91.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%91.1, x=".Data", parent=R_BaseNamespace, context 0
  fs              %91.4 = FrameState         R     0x55fa0b568d40+69: [%88.2], env=e91.3, next=%91.2
  void                    Deopt              !v    %91.4, Typecheck@0x55fa108d3a08[Type#31], %88.2   !
BB52   <- [90]
  val?^ | miss    %52.0 = LdVar              eR    NULL.for.none, e72.3
  val?            %52.1 = Force!             !v    %52.0, e72.3   <val?_>
  lgl$#-          %52.2 = CheckTrueFalse     we    %52.1
  void                    Branch                   %52.2 -> BB54 (if true) | BB53 (if false)
BB11   <- [90]
  val?            %11.0 = Extract2_1D        wed   %88.0, ".Data", elided   <str$+>
  lgl$-           %11.1 = Is                       %11.0, logical
  lgl$-           %11.2 = Is                       %11.0, integer
  lgl$-           %11.3 = Is                       %11.0, double
  lgl$-           %11.4 = Is                       %11.0, complex
  lgl$-           %11.5 = Is                       %11.0, character   <true>
  lgl$-           %11.6 = Is                       %11.0, raw
  lgl$-           %11.7 = Is                       %11.0, list
  lgl$-           %11.8 = Is                       %11.0, expression
  lgl$-           %11.9 = LOr                      %11.8, %11.7
  lgl$-           %11.10 = LOr                      %11.9, %11.6
  lgl$-           %11.11 = LOr                      %11.10, %11.5
  lgl$-           %11.12 = LOr                      %11.11, %11.4
  lgl$-           %11.13 = LOr                      %11.12, %11.3
  lgl$-           %11.14 = LOr                      %11.13, %11.2
  lgl$-           %11.15 = LOr                      %11.14, %11.1   <true>
  lgl$#-          %11.16 = Identical                %11.15, true
  int$-           %11.17 = Length                   %11.0
  lgl$-           %11.18 = Is                       %11.0, Factor   <false>
  lgl$#-          %11.19 = Identical                %11.18, false
  lgl$#-          %11.20 = Identical                %11.5, true
  void                    StVar              lW    dataPart, %11.0, e72.3
  lgl$#-          %11.22 = IsType                   %11.0 isA val?+
  val             %11.23 = ChkMissing         e     %11.0
  void                    Branch                   %11.16 -> BB92 (if true) | BB93 (if false)
BB54   <- [52]
  void                    Visible            v     
  nil-            %54.1 = nil
  goto BB41
BB53   <- [52]
  (cls|spec|blt)  %53.0 = LdFun              !v    stop, e72.3
  fs              %53.1 = FrameState         R     0x55fa0f7c9f50+828: [%53.0], env=e72.3
  void                    Deopt              !v    %53.1, DeadCall@0x55fa108d3a08[Call#14], %53.0   !
BB92   <- [11]
  lgl$-           %92.0 = Eq                 d     %11.17, 1L, elided   <true>
  lgl$#-          %92.1 = Identical                %92.0, true
  void                    Branch                   %92.1 -> BB94 (if true) | BB95 (if false)
BB93   <- [11]
  void                    Nop                !     
  lgl$#-          %93.1 = %11.16
  dr              %93.2 = DeadBranchReached@0x55fa108d3a08[Test#5]
  goto BB12
BB94   <- [92]
  void                    Branch                   %11.19 -> BB96 (if true) | BB97 (if false)
BB95   <- [92]
  void                    Nop                !     
  lgl$#-          %95.1 = %92.1
  dr              %95.2 = DeadBranchReached@0x55fa108d3a08[Test#6]
  goto BB12
BB12   <- [93, 95, 97, 99, 101]
  val?^ | miss    %12.0 = Phi                      %93.1:BB93, %95.1:BB95, %97.1:BB97, %99.1:BB99, %101.1:BB101
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %93.2:BB93, %95.2:BB95, %97.2:BB97, %99.2:BB99, %101.2:BB101
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x55fa0f7c9f50+948: [], env=e72.3
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB96   <- [94]
  void                    Branch                   %11.20 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  void                    Nop                !     
  lgl$#-          %97.1 = %11.19
  dr              %97.2 = DeadBranchReached@0x55fa108d3a08[Test#7]
  goto BB12
BB98   <- [96]
  void                    Branch                   %11.22 -> BB100 (if true) | BB101 (if false)
BB99   <- [96]
  void                    Nop                !     
  lgl$#-          %99.1 = %11.20
  dr              %99.2 = DeadBranchReached@0x55fa108d3a08[Test#8]
  goto BB12
BB100   <- [98]
  val?+           %100.0 = CastType           d     dn %11.0   <str$+>
  lgl+            %100.1 = CallSafeBuiltin    wed   is.na(%100.0) 
  lgl$#-          %100.2 = CheckTrueFalse     we    %100.1   <false>
  void                    Branch                   %100.2 -> BB103 (if true) | BB102 (if false)
BB101   <- [98]
  void                    Nop                !     
  val?            %101.1 = %11.0
  dr              %101.2 = Typecheck@0x55fa108d3a08[Type#39]
  goto BB12
BB103   <- [100]
  fs              %103.0 = FrameState         R     0x55fa0f7c9f50+1310: [%100.0, %100.2], env=e72.3
  void                    Deopt              !v    %103.0, DeadBranchReached@0x55fa108d3a08[Test#20], %100.2   !
BB102   <- [100]
  lgl             %102.0 = Eq                 wed   %100.0, numeric, elided
  lgl$#-          %102.1 = CheckTrueFalse     we    %102.0   <false>
  void                    Branch                   %102.1 -> BB105 (if true) | BB104 (if false)
BB105   <- [102]
  fs              %105.0 = FrameState         R     0x55fa0f7c9f50+1334: [%100.0, %102.1], env=e72.3
  void                    Deopt              !v    %105.0, DeadBranchReached@0x55fa108d3a08[Test#21], %102.1   !
BB104   <- [102]
  lgl             %104.0 = Eq                 wed   %100.0, vector, elided
  lgl$#-          %104.1 = CheckTrueFalse     we    %104.0   <false>
  void                    Branch                   %104.1 -> BB107 (if true) | BB106 (if false)
BB107   <- [104]
  fs              %107.0 = FrameState         R     0x55fa0f7c9f50+1352: [%100.0, %104.1], env=e72.3
  void                    Deopt              !v    %107.0, DeadBranchReached@0x55fa108d3a08[Test#22], %104.1   !
BB106   <- [104]
  lgl             %106.0 = Eq                 wed   %100.0, integer, elided
  lgl$#-          %106.1 = CheckTrueFalse     we    %106.0   <false>
  void                    Branch                   %106.1 -> BB109 (if true) | BB108 (if false)
BB109   <- [106]
  fs              %109.0 = FrameState         R     0x55fa0f7c9f50+1370: [%100.0, %106.1], env=e72.3
  void                    Deopt              !v    %109.0, DeadBranchReached@0x55fa108d3a08[Test#23], %106.1   !
BB108   <- [106]
  lgl             %108.0 = Eq                 wed   %100.0, character, elided
  lgl$#-          %108.1 = CheckTrueFalse     we    %108.0
  void                    Branch                   %108.1 -> BB51 (if true) | BB22 (if false)
BB51   <- [108]
  (cls|spec|blt)  %51.0 = LdFun              !v    attributes<-, <0x55fa0ad54128>, e72.3
  val?^ | miss    %51.1 = LdVar              eR    object, e72.3
  val?            %51.2 = Force!<wrapped>    !v    %51.1, e72.3   <str>
  val?            %51.3 = NamedCall          !v    %51.0(%51.2, value=nil) e72.3
  void                    StVar              lW    object, %51.3, e72.3
  val?            %51.5 = %51.3
  goto BB40
BB22   <- [108]
  lgl             %22.0 = Eq                 wed   %100.0, logical, elided
  lgl$#-          %22.1 = CheckTrueFalse     we    %22.0   <false>
  void                    Branch                   %22.1 -> BB111 (if true) | BB110 (if false)
BB40   <- [51, 39]
  val?            %40.0 = Phi                      %51.5:BB51, %39.5:BB39
  val?            %40.1 = %40.0
  val             %40.2 = ChkMissing         e     %40.1   <(str|cls)->
  void                    Visible            v     
  val             %40.4 = %40.2
  goto BB41
BB111   <- [22]
  fs              %111.0 = FrameState         R     0x55fa0f7c9f50+1406: [%100.0, %22.1], env=e72.3
  void                    Deopt              !v    %111.0, DeadBranchReached@0x55fa108d3a08[Test#25], %22.1   !
BB110   <- [22]
  lgl             %110.0 = Eq                 wed   %100.0, complex, elided
  lgl$#-          %110.1 = CheckTrueFalse     we    %110.0   <false>
  void                    Branch                   %110.1 -> BB113 (if true) | BB112 (if false)
BB113   <- [110]
  fs              %113.0 = FrameState         R     0x55fa0f7c9f50+1424: [%100.0, %110.1], env=e72.3
  void                    Deopt              !v    %113.0, DeadBranchReached@0x55fa108d3a08[Test#26], %110.1   !
BB112   <- [110]
  lgl             %112.0 = Eq                 wed   %100.0, list, elided
  lgl$#-          %112.1 = CheckTrueFalse     we    %112.0   <false>
  void                    Branch                   %112.1 -> BB115 (if true) | BB114 (if false)
BB115   <- [112]
  fs              %115.0 = FrameState         R     0x55fa0f7c9f50+1442: [%100.0, %112.1], env=e72.3
  void                    Deopt              !v    %115.0, DeadBranchReached@0x55fa108d3a08[Test#27], %112.1   !
BB114   <- [112]
  lgl             %114.0 = Eq                 wed   %100.0, matrix, elided
  lgl$#-          %114.1 = CheckTrueFalse     we    %114.0   <false>
  void                    Branch                   %114.1 -> BB117 (if true) | BB116 (if false)
BB117   <- [114]
  fs              %117.0 = FrameState         R     0x55fa0f7c9f50+1460: [%100.0, %114.1], env=e72.3
  void                    Deopt              !v    %117.0, DeadBranchReached@0x55fa108d3a08[Test#28], %114.1   !
BB116   <- [114]
  lgl             %116.0 = Eq                 wed   %100.0, array, elided
  lgl$#-          %116.1 = CheckTrueFalse     we    %116.0   <false>
  void                    Branch                   %116.1 -> BB119 (if true) | BB118 (if false)
BB119   <- [116]
  fs              %119.0 = FrameState         R     0x55fa0f7c9f50+1478: [%100.0, %116.1], env=e72.3
  void                    Deopt              !v    %119.0, DeadBranchReached@0x55fa108d3a08[Test#29], %116.1   !
BB118   <- [116]
  lgl             %118.0 = Eq                 wed   %100.0, ts, elided
  lgl$#-          %118.1 = CheckTrueFalse     we    %118.0   <false>
  void                    Branch                   %118.1 -> BB121 (if true) | BB120 (if false)
BB121   <- [118]
  fs              %121.0 = FrameState         R     0x55fa0f7c9f50+1496: [%100.0, %118.1], env=e72.3
  void                    Deopt              !v    %121.0, DeadBranchReached@0x55fa108d3a08[Test#30], %118.1   !
BB120   <- [118]
  val?^ | miss    %120.0 = LdVar              eR    .BasicClasses, e72.3
  val?            %120.1 = Force!<wrapped>    !v    %120.0, e72.3   <str->
  lgl$#-          %120.2 = IsType                   %120.1 isA val?+
  void                    Branch                   %120.2 -> BB122 (if true) | BB123 (if false)
BB122   <- [120]
  val?+           %122.0 = CastType           d     dn %120.1   <str->
  val+            %122.1 = CallSafeBuiltin    wed   match(%100.0, %122.0, NA, nil)    <int$->
  lgl$#-          %122.2 = IsType                   %122.1 isA int$-
  void                    Branch                   %122.2 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  prom-           %123.0 = MkArg                    %100.0, getDataPart[0x55fa16b19a10]_p7 (!refl), e72.3
  val?~           %123.1 = CastType                 up %123.0
  fs              %123.2 = FrameState         R     0x55fa0f7c9f50+2671: [<blt is.na>], env=e72.3
  prom-           %123.3 = MkArg                    unboundValue, getDataPart[0x55fa16b19a10]_p8, e72.3
  val?^           %123.4 = CastType                 up %123.3
  env             e123.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%123.4, x=%123.1, parent=R_BaseNamespace, context 0
  fs              %123.6 = FrameState         R     0x55fa0b568d40+23: [%100.0], env=e123.5, next=%123.2
  fs              %123.7 = FrameState         R     0x55fa0e955c10+5(pr): [%120.1], env=e72.3, next=%123.6
  void                    Deopt              !v    %123.7, Typecheck@0x55fa0b5bbcb0[Type#1], %120.1   !
BB124   <- [122]
  int$-           %124.0 = CastType           d     dn %122.1
  lgl$-           %124.1 = CallSafeBuiltin    wed   is.na(%124.0)    <lgl$->
  lgl$#-          %124.2 = CheckTrueFalse     e     %124.1
  void                    Branch                   %124.2 -> BB42 (if true) | BB39 (if false)
BB125   <- [122]
  prom-           %125.0 = MkArg                    %100.0, getDataPart[0x55fa16b19a10]_p7 (!refl), e72.3
  val?~           %125.1 = CastType                 up %125.0
  fs              %125.2 = FrameState         R     0x55fa0f7c9f50+2671: [<blt is.na>], env=e72.3
  prom-           %125.3 = MkArg                    %122.0, getDataPart[0x55fa16b19a10]_p8 (!refl), e72.3
  val?~           %125.4 = CastType                 up %125.3
  env             e125.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%125.4, x=%125.1, parent=R_BaseNamespace, context 0
  fs              %125.6 = FrameState         R     0x55fa0b568d40+69: [%122.1], env=e125.5, next=%125.2
  void                    Deopt              !v    %125.6, Typecheck@0x55fa108d3a08[Type#66], %122.1   !
BB42   <- [124]
  val?^ | miss    %42.0 = LdVar              eR    attributes, e72.3
  lgl$#-          %42.1 = Identical                <blt attributes>, %42.0   <@?>
  void                    Branch                   %42.1 -> BB44 (if true) | BB43 (if false)
BB39   <- [124]
  (cls|spec|blt)  %39.0 = LdFun              !v    attributes<-, <0x55fa0ad54128>, e72.3
  val?^ | miss    %39.1 = LdVar              eR    object, e72.3
  val?            %39.2 = Force!<wrapped>    !v    %39.1, e72.3   <cls>
  val?            %39.3 = NamedCall          !v    %39.0(%39.2, value=nil) e72.3
  void                    StVar              lW    object, %39.3, e72.3
  val?            %39.5 = %39.3
  goto BB40
BB44   <- [42]
  val?^ | miss    %44.0 = LdVar              eR    object, e72.3
  val?            %44.1 = Force!             !v    %44.0, e72.3   <val?_>
  val?            %44.2 = CallBuiltin        !v    attributes(%44.1) e72.3   <val?_>
  void                    StVar              lW    attrVals, %44.2, e72.3
  val?^ | miss    %44.4 = LdVar              eR    names, e72.3
  lgl$#-          %44.5 = Identical                <blt names>, %44.4   <@?>
  void                    Branch                   %44.5 -> BB48 (if true) | BB47 (if false)
BB43   <- [42]
  (cls|spec|blt)  %43.0 = LdFun              !v    attributes, e72.3
  fs              %43.1 = FrameState         R     0x55fa0f7c9f50+2817: [%43.0], env=e72.3
  void                    Deopt              !v    %43.1, DeadCall@0x55fa108d3a08[Call#31], %43.0   !
BB48   <- [44]
  val             %48.0 = ChkMissing         e     %44.2
  lgl$#-          %48.1 = IsType                   %44.2 isA val?+
  void                    Branch                   %48.1 -> BB126 (if true) | BB127 (if false)
BB47   <- [44]
  (cls|spec|blt)  %47.0 = LdFun              !v    names, e72.3
  fs              %47.1 = FrameState         R     0x55fa0f7c9f50+2922: [%47.0], env=e72.3
  void                    Deopt              !v    %47.1, DeadCall@0x55fa108d3a08[Call#32], %47.0   !
BB126   <- [48]
  val?+           %126.0 = CastType           d     dn %44.2   <val?_>
  val+            %126.1 = CallSafeBuiltin    wed   names(%126.0)    <val?_>
  void                    StVar              lW    attrs, %126.1, e72.3
  val?^ | miss    %126.3 = LdVar              eR    is.na, e72.3
  lgl$#-          %126.4 = Identical                <blt is.na>, %126.3   <@?>
  void                    Branch                   %126.4 -> BB50 (if true) | BB49 (if false)
BB127   <- [48]
  fs              %127.0 = FrameState         R     0x55fa0f7c9f50+2894: [], env=e72.3
  void                    Deopt              !v    %127.0, Typecheck@0x55fa108d3a08[Type#72], %44.2   !
BB50   <- [126]
  (cls|spec|blt)  %50.0 = LdFun              !v    match, e72.3
  fs              %50.1 = FrameState         R     0x55fa0f7c9f50+3109: [%126.1, <blt is.na>, %50.0], env=e72.3
  void                    Deopt              !v    %50.1, DeadCall@0x55fa108d3a08[Call#41], %50.0   !
BB49   <- [126]
  (cls|spec|blt)  %49.0 = LdFun              !v    is.na, e72.3
  fs              %49.1 = FrameState         R     0x55fa0f7c9f50+3072: [%126.1, %49.0], env=e72.3
  void                    Deopt              !v    %49.1, DeadCall@0x55fa108d3a08[Call#37], %49.0   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClass, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getDataPart[0x55fa16b19a10]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getDataPart[0x55fa16b19a10]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55fa0ad54470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getDataPart[0x55fa16b19a10]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dataPart, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BasicClasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3

│ getDataPart[0x55fa16b19a10]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
