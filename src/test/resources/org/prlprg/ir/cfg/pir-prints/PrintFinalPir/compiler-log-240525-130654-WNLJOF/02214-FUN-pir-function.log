
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55fa131e93b0]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0                      │
│ Properties:                                                                  │
├────── Final PIR Version
FUN[0x55fa131e93b0]
BB0
  val?~           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.logical, ?
  lgl$#-          %0.2  = Identical                <blt is.logical>, %0.1   <true>
  val?            %0.3  = Force<wrapped>           %0.0,    <other>
  void                    Branch                   %0.2 -> BB21 (if true) | BB22 (if false)
BB21   <- [0]
  val+            %21.0 = CallSafeBuiltin    wed   is.logical(%0.3)    <lgl$->
  lgl$#-          %21.1 = IsType                   %21.0 isA lgl$-
  void                    Branch                   %21.1 -> BB23 (if true) | BB24 (if false)
BB22   <- [0]
  env             e22.0 = (MkEnv)            l     x=%0.0, parent=?, context 1
  fs              %22.1 = FrameState         R     0x55fa0ef0ecf0+17: [<blt is.logical>, %0.2], env=e22.0
  void                    Deopt              !v    %22.1, DeadBranchReached@0x55fa11c909c8[Test#0], %0.2   !
BB23   <- [21]
  lgl$-           %23.0 = CastType           d     dn %21.0
  lgl$-           %23.1 = AsLogical                %23.0
  lgl$#-          %23.2 = Identical                %23.1, false
  env             e23.3 = MkEnv              l     x=%0.0, parent=?, context 1
  void                    Branch                   %23.2 -> BB19 (if true) | BB5 (if false)
BB24   <- [21]
  env             e24.0 = (MkEnv)            l     x=%0.0, parent=?, context 1
  fs              %24.1 = FrameState         R     0x55fa0ef0ecf0+91: [%21.0], env=e24.0
  void                    Deopt              !v    %24.1, Typecheck@0x55fa11c909c8[Type#2], %21.0   !
BB19   <- [23]
  void                    Nop                !     
  lgl$-           %19.1 = %23.1
  goto BB6
BB5   <- [23]
  lgl$-           %5.0  = AsLogical          e     %0.3
  lgl$-           %5.1  = LAnd                     %23.1, %5.0
  lgl$-           %5.2  = %5.1
  goto BB6
BB6   <- [19, 5]
  lgl$-           %6.0  = Phi                      %5.2:BB5, %19.1:BB19
  lgl$-           %6.1  = %6.0
  void                    Visible            v     
  lgl$-           %6.3  = AsLogical                %6.1
  lgl$#-          %6.4  = Identical                %6.3, true
  void                    Branch                   %6.4 -> BB18 (if true) | BB7 (if false)
BB18   <- [6]
  void                    Nop                !     
  lgl$-           %18.1 = %6.3
  goto BB10
BB7   <- [6]
  (cls|spec|blt)  %7.0  = LdFun              !     @, <0x55fa0ad53bd8>, ?
  prom-           %7.1  = MkArg                    unboundValue, FUN[0x55fa131e93b0]_p0 (!refl), e23.3
  prom-           %7.2  = MkArg                    unboundValue, FUN[0x55fa131e93b0]_p1, e23.3
  val?            %7.3  = Call               !     %7.0(%7.1, %7.2) e23.3   <lgl$->
  lgl$#-          %7.4  = IsType                   %7.3 isA lgl$-
  void                    Branch                   %7.4 -> BB27 (if true) | BB28 (if false)
BB10   <- [18, 27]
  lgl$-           %10.0 = Phi                      %27.3:BB27, %18.1:BB18
  lgl$-           %10.1 = %10.0
  lgl$-           %10.2 = AsLogical                %10.1
  lgl$#-          %10.3 = Identical                %10.2, true
  void                    Branch                   %10.3 -> BB17 (if true) | BB13 (if false)
BB27   <- [7]
  lgl$-           %27.0 = CastType           d     dn %7.3
  lgl$-           %27.1 = AsLogical                %27.0
  lgl$-           %27.2 = LOr                      %6.3, %27.1
  lgl$-           %27.3 = %27.2
  goto BB10
BB28   <- [7]
  fs              %28.0 = FrameState         R     0x55fa0ef0ecf0+164: [%6.3, %7.3], env=e23.3
  void                    Deopt              !v    %28.0, Typecheck@0x55fa11c909c8[Type#6], %7.3   !
BB17   <- [10]
  void                    Nop                !     
  lgl$-           %17.1 = %10.2
  goto BB16
BB13   <- [10]
  val?^ | miss    %13.0 = LdVar              eR    isTRUE, e23.3
  lgl$#-          %13.1 = Identical                %13.0, function(x) <(rir::DispatchTable*)0x55fa0cc4d8|...
  void                    Branch                   %13.1 -> BB25 (if true) | BB26 (if false)
BB16   <- [17, 29]
  lgl$-           %16.0 = Phi                      %29.3:BB29, %17.1:BB17
  lgl$-           %16.1 = %16.0
  void                    Return             l     %16.1
BB25   <- [13]
  prom-           %25.0 = MkArg                    unboundValue, FUN[0x55fa131e93b0]_p2, e23.3
  val?            %25.1 = StaticCall         !     isTRUE[0x55fa136741b0](%25.0) e23.3   <lgl$->
  lgl$#-          %25.2 = IsType                   %25.1 isA lgl$-
  void                    Branch                   %25.2 -> BB29 (if true) | BB30 (if false)
BB26   <- [13]
  fs              %26.0 = FrameState         R     0x55fa0ef0ecf0+171: [%10.1], env=e23.3
  void                    Deopt              !v    %26.0, CallTarget@0x55fa11c909c8[Call#2], %13.0   !
BB29   <- [25]
  lgl$-           %29.0 = CastType           d     dn %25.1
  lgl$-           %29.1 = AsLogical                %29.0
  lgl$-           %29.2 = LOr                      %10.2, %29.1
  lgl$-           %29.3 = %29.2
  goto BB16
BB30   <- [25]
  fs              %30.0 = FrameState         R     0x55fa0ef0ecf0+210: [%10.2, %25.1], env=e23.3
  void                    Deopt              !v    %30.0, Typecheck@0x55fa11c909c8[Type#11], %25.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     body, <0x55fa0ea220f0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55fa131e93b0]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x55fa0ad53bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55fa131e93b0]_p4, e0.0
  prom-           %0.3  = MkArg                    unboundValue, FUN[0x55fa131e93b0]_p5, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <cls->
  void                    Return             l     %0.4
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ FUN[0x55fa131e93b0]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
