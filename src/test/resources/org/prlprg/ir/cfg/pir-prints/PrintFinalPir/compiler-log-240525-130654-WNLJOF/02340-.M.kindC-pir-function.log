
┌──────────────────────────────────────────────────────────────────────────────┐
│ .M.kindC[0x55fa171e5350]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:                                                                  │
├────── Final PIR Version
.M.kindC[0x55fa171e5350]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     clx=%0.0, ex(miss)=missingArg, parent=<env 0x55fa0d1a9f20>, context 1
  prom-           %0.2  = MkArg                    unboundValue, .M.kindC[0x55fa171e5350]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    ex, %0.3, e0.1
  val?^ | miss    %0.5  = LdVar              eR    is.character, <env 0x55fa0d1a9f20>
  lgl$#-          %0.6  = Identical                <blt is.character>, %0.5   <true>
  void                    Branch                   %0.6 -> BB92 (if true) | BB93 (if false)
BB92   <- [0]
  val?            %92.0 = Force!<lazy>       !v    %0.0, e0.1   <(str|other)>
  lgl$#-          %92.1 = CallSafeBuiltin    wed   is.character(%92.0)    <lgl$->
  void                    Branch                   %92.1 -> BB90 (if true) | BB5 (if false)
BB93   <- [0]
  fs              %93.0 = FrameState         R     0x55fa171cbb30+0: [], env=e0.1
  void                    Deopt              !v    %93.0, DeadBranchReached@0x55fa10ea64e8[Test#0], %0.6
BB90   <- [92]
  val?^ | miss    %90.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %90.1 = Identical                %90.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %90.1 -> BB94 (if true) | BB95 (if false)
BB5   <- [92]
  void                    Nop                !     
  goto BB6
BB94   <- [90]
  prom-           %94.0 = MkArg                    unboundValue, .M.kindC[0x55fa171e5350]_p2, e0.1
  val?            %94.1 = StaticCall         !v    getClassDef[0x55fa11a847d0](%94.0) e0.1   <other>
  void                    StVar              lW    clx, %94.1, e0.1
  goto BB6
BB95   <- [90]
  fs              %95.0 = FrameState         R     0x55fa171cbb30+91: [%92.1], env=e0.1
  void                    Deopt              !v    %95.0, CallTarget@0x55fa10ea64e8[Call#2], %90.0   !
BB6   <- [5, 94]
  val?^ | miss    %6.0  = LdVar              eR    any, e0.1
  lgl$#-          %6.1  = Identical                <blt any>, %6.0   <true>
  void                    Branch                   %6.1 -> BB96 (if true) | BB97 (if false)
BB96   <- [6]
  val?^ | miss    %96.0 = LdVar              eR    ex, e0.1
  val?            %96.1 = Force!<lazy>       !v    %96.0, e0.1   <str->
  lgl$#-          %96.2 = IsType                   %96.1 isA val?-
  void                    Branch                   %96.2 -> BB98 (if true) | BB99 (if false)
BB97   <- [6]
  fs              %97.0 = FrameState         R     0x55fa171cbb30+153: [], env=e0.1
  void                    Deopt              !v    %97.0, DeadBranchReached@0x55fa10ea64e8[Test#1], %6.1   !
BB98   <- [96]
  val?-           %98.0 = CastType           d     dn %96.1   <str->
  lgl-            %98.1 = Eq                 wed   %98.0, "sparseVector", elided   <lgl->
  val?            %98.2 = CallBuiltin        !v    any(%98.1) e0.1   <lgl$->
  lgl$#-          %98.3 = IsType                   %98.2 isA lgl$-
  void                    Branch                   %98.3 -> BB100 (if true) | BB101 (if false)
BB99   <- [96]
  fs              %99.0 = FrameState         R     0x55fa171cbb30+222: [<blt any>, %96.1], env=e0.1
  void                    Deopt              !v    %99.0, Typecheck@0x55fa10ea64e8[Type#9], %96.1   !
BB100   <- [98]
  lgl$-           %100.0 = CastType           d     dn %98.2
  lgl$#-          %100.1 = CheckTrueFalse     e     %100.0
  void                    Branch                   %100.1 -> BB56 (if true) | BB13 (if false)
BB101   <- [98]
  void                    Nop                !     
  val?            %101.1 = %98.2
  dr              %101.2 = Typecheck@0x55fa10ea64e8[Type#11]
  goto BB11
BB56   <- [100]
  val?^ | miss    %56.0 = LdVar              eR    any, e0.1
  lgl$#-          %56.1 = Identical                <blt any>, %56.0   <@?>
  void                    Branch                   %56.1 -> BB58 (if true) | BB57 (if false)
BB13   <- [100]
  val?^ | miss    %13.0 = LdVar              eR    any, e0.1
  lgl$#-          %13.1 = Identical                <blt any>, %13.0   <true>
  void                    Branch                   %13.1 -> BB102 (if true) | BB103 (if false)
BB11   <- [101, 103]
  val?^ | miss    %11.0 = Phi                      %101.1:BB101, %103.1:BB103
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %101.2:BB101, %103.2:BB103
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55fa171cbb30+256: [%98.2], env=e0.1
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB58   <- [56]
  val?^ | miss    %58.0 = LdVar              eR    ex, e0.1
  val?            %58.1 = Force!             !v    %58.0, e0.1   <val?_>
  lgl$#-          %58.2 = IsType                   %58.1 isA val?+
  void                    Branch                   %58.2 -> BB104 (if true) | BB105 (if false)
BB57   <- [56]
  (cls|spec|blt)  %57.0 = LdFun              !v    any, e0.1
  fs              %57.1 = FrameState         R     0x55fa171cbb30+1100: [%57.0], env=e0.1
  void                    Deopt              !v    %57.1, DeadCall@0x55fa10ea64e8[Call#13], %57.0   !
BB102   <- [13]
  val?^ | miss    %102.0 = LdVar              eR    ex, e0.1
  val?            %102.1 = Force!<wrapped>    !v    %102.0, e0.1   <str->
  lgl$#-          %102.2 = IsType                   %102.1 isA val?-
  void                    Branch                   %102.2 -> BB106 (if true) | BB107 (if false)
BB103   <- [13]
  void                    Nop                !     
  lgl$#-          %103.1 = %13.1
  dr              %103.2 = DeadBranchReached@0x55fa10ea64e8[Test#2]
  goto BB11
BB104   <- [58]
  val?+           %104.0 = CastType           d     dn %58.1   <val?_>
  lgl             %104.1 = Eq                 wed   %104.0, "dsparseVector", elided   <val?_>
  val?            %104.2 = CallBuiltin        !v    any(%104.1) e0.1   <val?_>
  lgl$#-          %104.3 = CheckTrueFalse     we    %104.2
  void                    Branch                   %104.3 -> BB89 (if true) | BB61 (if false)
BB105   <- [58]
  fs              %105.0 = FrameState         R     0x55fa171cbb30+1141: [<blt any>, %58.1], env=e0.1
  void                    Deopt              !v    %105.0, Typecheck@0x55fa10ea64e8[Type#49], %58.1   !
BB106   <- [102]
  val?-           %106.0 = CastType           d     dn %102.1   <str->
  lgl-            %106.1 = Eq                 wed   %106.0, "dMatrix", elided   <lgl->
  val?            %106.2 = CallBuiltin        !v    any(%106.1) e0.1   <lgl$->
  lgl$#-          %106.3 = IsType                   %106.2 isA lgl$-
  void                    Branch                   %106.3 -> BB108 (if true) | BB109 (if false)
BB107   <- [102]
  fs              %107.0 = FrameState         R     0x55fa171cbb30+336: [<blt any>, %102.1], env=e0.1
  void                    Deopt              !v    %107.0, Typecheck@0x55fa10ea64e8[Type#14], %102.1   !
BB89   <- [104]
  void                    Visible            v     
  str$#-          %89.1 = "d"
  goto BB50
BB61   <- [104]
  val?^ | miss    %61.0 = LdVar              eR    any, e0.1
  lgl$#-          %61.1 = Identical                <blt any>, %61.0   <@?>
  void                    Branch                   %61.1 -> BB63 (if true) | BB62 (if false)
BB108   <- [106]
  lgl$-           %108.0 = CastType           d     dn %106.2
  lgl$#-          %108.1 = CheckTrueFalse     e     %108.0
  void                    Branch                   %108.1 -> BB55 (if true) | BB18 (if false)
BB109   <- [106]
  fs              %109.0 = FrameState         R     0x55fa171cbb30+370: [%106.2], env=e0.1
  void                    Deopt              !v    %109.0, Typecheck@0x55fa10ea64e8[Type#16], %106.2   !
BB50   <- [89, 49, 85]
  str$#-          %50.0 = Phi                      %49.2:BB49, %85.2:BB85, %89.1:BB89
  str$#-          %50.1 = %50.0
  void                    Return             l     %50.1
BB63   <- [61]
  val?^ | miss    %63.0 = LdVar              eR    ex, e0.1
  val?            %63.1 = Force!             !v    %63.0, e0.1   <val?_>
  lgl$#-          %63.2 = IsType                   %63.1 isA val?+
  void                    Branch                   %63.2 -> BB110 (if true) | BB111 (if false)
BB62   <- [61]
  (cls|spec|blt)  %62.0 = LdFun              !v    any, e0.1
  fs              %62.1 = FrameState         R     0x55fa171cbb30+1214: [%62.0], env=e0.1
  void                    Deopt              !v    %62.1, DeadCall@0x55fa10ea64e8[Call#14], %62.0   !
BB55   <- [108]
  void                    Visible            v     
  str$#-          %55.1 = "d"
  goto BB49
BB18   <- [108]
  val?^ | miss    %18.0 = LdVar              eR    any, e0.1
  lgl$#-          %18.1 = Identical                <blt any>, %18.0   <@?>
  void                    Branch                   %18.1 -> BB20 (if true) | BB19 (if false)
BB110   <- [63]
  val?+           %110.0 = CastType           d     dn %63.1   <val?_>
  lgl             %110.1 = Eq                 wed   %110.0, "nsparseVector", elided   <val?_>
  val?            %110.2 = CallBuiltin        !v    any(%110.1) e0.1   <val?_>
  lgl$#-          %110.3 = CheckTrueFalse     we    %110.2
  void                    Branch                   %110.3 -> BB88 (if true) | BB66 (if false)
BB111   <- [63]
  fs              %111.0 = FrameState         R     0x55fa171cbb30+1255: [<blt any>, %63.1], env=e0.1
  void                    Deopt              !v    %111.0, Typecheck@0x55fa10ea64e8[Type#54], %63.1   !
BB49   <- [55, 48]
  str$#-          %49.0 = Phi                      %48.2:BB48, %55.1:BB55
  str$#-          %49.1 = %49.0
  str$#-          %49.2 = %49.1
  goto BB50
BB20   <- [18]
  val?^ | miss    %20.0 = LdVar              eR    ex, e0.1
  val?            %20.1 = Force!             !v    %20.0, e0.1   <val?_>
  lgl$#-          %20.2 = IsType                   %20.1 isA val?+
  void                    Branch                   %20.2 -> BB112 (if true) | BB113 (if false)
BB19   <- [18]
  (cls|spec|blt)  %19.0 = LdFun              !v    any, e0.1
  fs              %19.1 = FrameState         R     0x55fa171cbb30+409: [%19.0], env=e0.1
  void                    Deopt              !v    %19.1, DeadCall@0x55fa10ea64e8[Call#5], %19.0   !
BB88   <- [110]
  void                    Visible            v     
  str$#-          %88.1 = "n"
  goto BB85
BB66   <- [110]
  val?^ | miss    %66.0 = LdVar              eR    any, e0.1
  lgl$#-          %66.1 = Identical                <blt any>, %66.0   <@?>
  void                    Branch                   %66.1 -> BB68 (if true) | BB67 (if false)
BB112   <- [20]
  val?+           %112.0 = CastType           d     dn %20.1   <val?_>
  lgl             %112.1 = Eq                 wed   %112.0, "nMatrix", elided   <val?_>
  val?            %112.2 = CallBuiltin        !v    any(%112.1) e0.1   <val?_>
  lgl$#-          %112.3 = CheckTrueFalse     we    %112.2
  void                    Branch                   %112.3 -> BB54 (if true) | BB23 (if false)
BB113   <- [20]
  fs              %113.0 = FrameState         R     0x55fa171cbb30+450: [<blt any>, %20.1], env=e0.1
  void                    Deopt              !v    %113.0, Typecheck@0x55fa10ea64e8[Type#19], %20.1   !
BB85   <- [88, 84]
  str$#-          %85.0 = Phi                      %84.2:BB84, %88.1:BB88
  str$#-          %85.1 = %85.0
  str$#-          %85.2 = %85.1
  goto BB50
BB68   <- [66]
  val?^ | miss    %68.0 = LdVar              eR    ex, e0.1
  val?            %68.1 = Force!             !v    %68.0, e0.1   <val?_>
  lgl$#-          %68.2 = IsType                   %68.1 isA val?+
  void                    Branch                   %68.2 -> BB116 (if true) | BB117 (if false)
BB67   <- [66]
  (cls|spec|blt)  %67.0 = LdFun              !v    any, e0.1
  fs              %67.1 = FrameState         R     0x55fa171cbb30+1328: [%67.0], env=e0.1
  void                    Deopt              !v    %67.1, DeadCall@0x55fa10ea64e8[Call#15], %67.0   !
BB54   <- [112]
  void                    Visible            v     
  str$#-          %54.1 = "n"
  goto BB48
BB23   <- [112]
  val?^ | miss    %23.0 = LdVar              eR    any, e0.1
  lgl$#-          %23.1 = Identical                <blt any>, %23.0   <@?>
  void                    Branch                   %23.1 -> BB25 (if true) | BB24 (if false)
BB116   <- [68]
  val?+           %116.0 = CastType           d     dn %68.1   <val?_>
  lgl             %116.1 = Eq                 wed   %116.0, "lsparseVector", elided   <val?_>
  val?            %116.2 = CallBuiltin        !v    any(%116.1) e0.1   <val?_>
  lgl$#-          %116.3 = CheckTrueFalse     we    %116.2
  void                    Branch                   %116.3 -> BB87 (if true) | BB71 (if false)
BB117   <- [68]
  fs              %117.0 = FrameState         R     0x55fa171cbb30+1369: [<blt any>, %68.1], env=e0.1
  void                    Deopt              !v    %117.0, Typecheck@0x55fa10ea64e8[Type#59], %68.1   !
BB48   <- [54, 47]
  str$#-          %48.0 = Phi                      %47.2:BB47, %54.1:BB54
  str$#-          %48.1 = %48.0
  str$#-          %48.2 = %48.1
  goto BB49
BB25   <- [23]
  val?^ | miss    %25.0 = LdVar              eR    ex, e0.1
  val?            %25.1 = Force!             !v    %25.0, e0.1   <val?_>
  lgl$#-          %25.2 = IsType                   %25.1 isA val?+
  void                    Branch                   %25.2 -> BB114 (if true) | BB115 (if false)
BB24   <- [23]
  (cls|spec|blt)  %24.0 = LdFun              !v    any, e0.1
  fs              %24.1 = FrameState         R     0x55fa171cbb30+523: [%24.0], env=e0.1
  void                    Deopt              !v    %24.1, DeadCall@0x55fa10ea64e8[Call#6], %24.0   !
BB87   <- [116]
  void                    Visible            v     
  str$#-          %87.1 = "l"
  goto BB84
BB71   <- [116]
  val?^ | miss    %71.0 = LdVar              eR    any, e0.1
  lgl$#-          %71.1 = Identical                <blt any>, %71.0   <@?>
  void                    Branch                   %71.1 -> BB73 (if true) | BB72 (if false)
BB114   <- [25]
  val?+           %114.0 = CastType           d     dn %25.1   <val?_>
  lgl             %114.1 = Eq                 wed   %114.0, "lMatrix", elided   <val?_>
  val?            %114.2 = CallBuiltin        !v    any(%114.1) e0.1   <val?_>
  lgl$#-          %114.3 = CheckTrueFalse     we    %114.2
  void                    Branch                   %114.3 -> BB53 (if true) | BB28 (if false)
BB115   <- [25]
  fs              %115.0 = FrameState         R     0x55fa171cbb30+564: [<blt any>, %25.1], env=e0.1
  void                    Deopt              !v    %115.0, Typecheck@0x55fa10ea64e8[Type#24], %25.1   !
BB84   <- [87, 83]
  str$#-          %84.0 = Phi                      %83.2:BB83, %87.1:BB87
  str$#-          %84.1 = %84.0
  str$#-          %84.2 = %84.1
  goto BB85
BB73   <- [71]
  val?^ | miss    %73.0 = LdVar              eR    ex, e0.1
  val?            %73.1 = Force!             !v    %73.0, e0.1   <val?_>
  lgl$#-          %73.2 = IsType                   %73.1 isA val?+
  void                    Branch                   %73.2 -> BB120 (if true) | BB121 (if false)
BB72   <- [71]
  (cls|spec|blt)  %72.0 = LdFun              !v    any, e0.1
  fs              %72.1 = FrameState         R     0x55fa171cbb30+1442: [%72.0], env=e0.1
  void                    Deopt              !v    %72.1, DeadCall@0x55fa10ea64e8[Call#16], %72.0   !
BB53   <- [114]
  void                    Visible            v     
  str$#-          %53.1 = "l"
  goto BB47
BB28   <- [114]
  val?^ | miss    %28.0 = LdVar              eR    any, e0.1
  lgl$#-          %28.1 = Identical                <blt any>, %28.0   <@?>
  void                    Branch                   %28.1 -> BB30 (if true) | BB29 (if false)
BB120   <- [73]
  val?+           %120.0 = CastType           d     dn %73.1   <val?_>
  lgl             %120.1 = Eq                 wed   %120.0, "zsparseVector", elided   <val?_>
  val?            %120.2 = CallBuiltin        !v    any(%120.1) e0.1   <val?_>
  lgl$#-          %120.3 = CheckTrueFalse     we    %120.2
  void                    Branch                   %120.3 -> BB86 (if true) | BB76 (if false)
BB121   <- [73]
  fs              %121.0 = FrameState         R     0x55fa171cbb30+1483: [<blt any>, %73.1], env=e0.1
  void                    Deopt              !v    %121.0, Typecheck@0x55fa10ea64e8[Type#64], %73.1   !
BB47   <- [53, 46]
  str$#-          %47.0 = Phi                      %46.2:BB46, %53.1:BB53
  str$#-          %47.1 = %47.0
  str$#-          %47.2 = %47.1
  goto BB48
BB30   <- [28]
  val?^ | miss    %30.0 = LdVar              eR    ex, e0.1
  val?            %30.1 = Force!             !v    %30.0, e0.1   <val?_>
  lgl$#-          %30.2 = IsType                   %30.1 isA val?+
  void                    Branch                   %30.2 -> BB118 (if true) | BB119 (if false)
BB29   <- [28]
  (cls|spec|blt)  %29.0 = LdFun              !v    any, e0.1
  fs              %29.1 = FrameState         R     0x55fa171cbb30+637: [%29.0], env=e0.1
  void                    Deopt              !v    %29.1, DeadCall@0x55fa10ea64e8[Call#7], %29.0   !
BB86   <- [120]
  void                    Visible            v     
  str$#-          %86.1 = "z"
  goto BB83
BB76   <- [120]
  val?^ | miss    %76.0 = LdVar              eR    any, e0.1
  lgl$#-          %76.1 = Identical                <blt any>, %76.0   <@?>
  void                    Branch                   %76.1 -> BB78 (if true) | BB77 (if false)
BB118   <- [30]
  val?+           %118.0 = CastType           d     dn %30.1   <val?_>
  lgl             %118.1 = Eq                 wed   %118.0, "indMatrix", elided   <val?_>
  val?            %118.2 = CallBuiltin        !v    any(%118.1) e0.1   <val?_>
  lgl$#-          %118.3 = CheckTrueFalse     we    %118.2
  void                    Branch                   %118.3 -> BB52 (if true) | BB33 (if false)
BB119   <- [30]
  fs              %119.0 = FrameState         R     0x55fa171cbb30+678: [<blt any>, %30.1], env=e0.1
  void                    Deopt              !v    %119.0, Typecheck@0x55fa10ea64e8[Type#29], %30.1   !
BB83   <- [86, 82]
  str$#-          %83.0 = Phi                      %82.1:BB82, %86.1:BB86
  str$#-          %83.1 = %83.0
  str$#-          %83.2 = %83.1
  goto BB84
BB78   <- [76]
  val?^ | miss    %78.0 = LdVar              eR    ex, e0.1
  val?            %78.1 = Force!             !v    %78.0, e0.1   <val?_>
  lgl$#-          %78.2 = IsType                   %78.1 isA val?+
  void                    Branch                   %78.2 -> BB124 (if true) | BB125 (if false)
BB77   <- [76]
  (cls|spec|blt)  %77.0 = LdFun              !v    any, e0.1
  fs              %77.1 = FrameState         R     0x55fa171cbb30+1556: [%77.0], env=e0.1
  void                    Deopt              !v    %77.1, DeadCall@0x55fa10ea64e8[Call#17], %77.0   !
BB52   <- [118]
  void                    Visible            v     
  str$#-          %52.1 = "n"
  goto BB46
BB33   <- [118]
  val?^ | miss    %33.0 = LdVar              eR    any, e0.1
  lgl$#-          %33.1 = Identical                <blt any>, %33.0   <@?>
  void                    Branch                   %33.1 -> BB35 (if true) | BB34 (if false)
BB124   <- [78]
  val?+           %124.0 = CastType           d     dn %78.1   <val?_>
  lgl             %124.1 = Eq                 wed   %124.0, "isparseVector", elided   <val?_>
  val?            %124.2 = CallBuiltin        !v    any(%124.1) e0.1   <val?_>
  lgl$#-          %124.3 = CheckTrueFalse     we    %124.2
  void                    Branch                   %124.3 -> BB82 (if true) | BB81 (if false)
BB125   <- [78]
  fs              %125.0 = FrameState         R     0x55fa171cbb30+1597: [<blt any>, %78.1], env=e0.1
  void                    Deopt              !v    %125.0, Typecheck@0x55fa10ea64e8[Type#69], %78.1   !
BB46   <- [52, 45]
  str$#-          %46.0 = Phi                      %45.2:BB45, %52.1:BB52
  str$#-          %46.1 = %46.0
  str$#-          %46.2 = %46.1
  goto BB47
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    ex, e0.1
  val?            %35.1 = Force!             !v    %35.0, e0.1   <val?_>
  lgl$#-          %35.2 = IsType                   %35.1 isA val?+
  void                    Branch                   %35.2 -> BB122 (if true) | BB123 (if false)
BB34   <- [33]
  (cls|spec|blt)  %34.0 = LdFun              !v    any, e0.1
  fs              %34.1 = FrameState         R     0x55fa171cbb30+751: [%34.0], env=e0.1
  void                    Deopt              !v    %34.1, DeadCall@0x55fa10ea64e8[Call#8], %34.0   !
BB82   <- [124]
  void                    Visible            v     
  str$#-          %82.1 = "i"
  goto BB83
BB81   <- [124]
  (cls|spec|blt)  %81.0 = LdFun              !v    stop, e0.1
  fs              %81.1 = FrameState         R     0x55fa171cbb30+1647: [%81.0], env=e0.1
  void                    Deopt              !v    %81.1, DeadCall@0x55fa10ea64e8[Call#18], %81.0   !
BB122   <- [35]
  val?+           %122.0 = CastType           d     dn %35.1   <val?_>
  lgl             %122.1 = Eq                 wed   %122.0, "zMatrix", elided   <val?_>
  val?            %122.2 = CallBuiltin        !v    any(%122.1) e0.1   <val?_>
  lgl$#-          %122.3 = CheckTrueFalse     we    %122.2
  void                    Branch                   %122.3 -> BB51 (if true) | BB38 (if false)
BB123   <- [35]
  fs              %123.0 = FrameState         R     0x55fa171cbb30+792: [<blt any>, %35.1], env=e0.1
  void                    Deopt              !v    %123.0, Typecheck@0x55fa10ea64e8[Type#34], %35.1   !
BB51   <- [122]
  void                    Visible            v     
  str$#-          %51.1 = "z"
  goto BB45
BB38   <- [122]
  val?^ | miss    %38.0 = LdVar              eR    any, e0.1
  lgl$#-          %38.1 = Identical                <blt any>, %38.0   <@?>
  void                    Branch                   %38.1 -> BB40 (if true) | BB39 (if false)
BB45   <- [51, 44]
  str$#-          %45.0 = Phi                      %44.1:BB44, %51.1:BB51
  str$#-          %45.1 = %45.0
  str$#-          %45.2 = %45.1
  goto BB46
BB40   <- [38]
  val?^ | miss    %40.0 = LdVar              eR    ex, e0.1
  val?            %40.1 = Force!             !v    %40.0, e0.1   <val?_>
  lgl$#-          %40.2 = IsType                   %40.1 isA val?+
  void                    Branch                   %40.2 -> BB126 (if true) | BB127 (if false)
BB39   <- [38]
  (cls|spec|blt)  %39.0 = LdFun              !v    any, e0.1
  fs              %39.1 = FrameState         R     0x55fa171cbb30+865: [%39.0], env=e0.1
  void                    Deopt              !v    %39.1, DeadCall@0x55fa10ea64e8[Call#9], %39.0   !
BB126   <- [40]
  val?+           %126.0 = CastType           d     dn %40.1   <val?_>
  lgl             %126.1 = Eq                 wed   %126.0, "iMatrix", elided   <val?_>
  val?            %126.2 = CallBuiltin        !v    any(%126.1) e0.1   <val?_>
  lgl$#-          %126.3 = CheckTrueFalse     we    %126.2
  void                    Branch                   %126.3 -> BB44 (if true) | BB43 (if false)
BB127   <- [40]
  fs              %127.0 = FrameState         R     0x55fa171cbb30+906: [<blt any>, %40.1], env=e0.1
  void                    Deopt              !v    %127.0, Typecheck@0x55fa10ea64e8[Type#39], %40.1   !
BB44   <- [126]
  void                    Visible            v     
  str$#-          %44.1 = "i"
  goto BB45
BB43   <- [126]
  (cls|spec|blt)  %43.0 = LdFun              !v    stop, e0.1
  fs              %43.1 = FrameState         R     0x55fa171cbb30+956: [%43.0], env=e0.1
  void                    Deopt              !v    %43.1, DeadCall@0x55fa10ea64e8[Call#10], %43.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     extends, <0x55fa0f4a0ff0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .M.kindC[0x55fa171e5350]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    clx, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    clx, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ .M.kindC[0x55fa171e5350]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
