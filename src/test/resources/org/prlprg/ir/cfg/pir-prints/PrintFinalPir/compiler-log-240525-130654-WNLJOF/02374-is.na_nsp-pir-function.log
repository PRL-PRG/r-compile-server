
┌──────────────────────────────────────────────────────────────────────────────┐
│ is.na_nsp[0x55fa171c7160]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
is.na_nsp[0x55fa171c7160]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, parent=<env 0x55fa0d1a9f20>, context 1
  (cls|spec|blt)  %0.2  = LdFun              !v    @, <0x55fa0ad53bd8>, <env 0x55fa0d1a9f20>
  prom-           %0.3  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p0 (!refl), e0.1
  prom-           %0.4  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p1, e0.1
  val?            %0.5  = Call               !v    %0.2(%0.3, %0.4) e0.1   <int->
  void                    StVar              lW    d, %0.5, e0.1
  (cls|spec|blt)  %0.7  = LdFun              !v    @, <0x55fa0ad53bd8>, e0.1
  prom-           %0.8  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p2, e0.1
  prom-           %0.9  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p3, e0.1
  val?            %0.10 = Call               !v    %0.7(%0.8, %0.9) e0.1   <vec->
  void                    StVar              lW    dn, %0.10, e0.1
  val?^ | miss    %0.12 = LdVar              eR    new, e0.1
  lgl$#-          %0.13 = Identical                %0.12, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %0.13 -> BB4 (if true) | BB5 (if false)
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p4, e0.1
  val?            %4.1  = StaticCall         !v    new[0x55fa1054e220](%4.0) { 0 } e0.1   <other>
  void                    StVar              lW    r, %4.1, e0.1
  (cls|spec|blt)  %4.3  = LdFun              !v    <-, <0x55fa0ad48da8>, e0.1
  prom-           %4.4  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p7, e0.1
  prom-           %4.5  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p10, e0.1
  val?            %4.6  = Call               !v    %4.3(%4.4, %4.5) e0.1
  (cls|spec|blt)  %4.7  = LdFun              !v    <-, <0x55fa0ad48da8>, e0.1
  prom-           %4.8  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p11, e0.1
  prom-           %4.9  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p14, e0.1
  val?            %4.10 = Call               !v    %4.7(%4.8, %4.9) e0.1
  (cls|spec|blt)  %4.11 = LdFun              !v    <-, <0x55fa0ad48da8>, e0.1
  prom-           %4.12 = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p15, e0.1
  prom-           %4.13 = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p18, e0.1
  val?            %4.14 = Call               !v    %4.11(%4.12, %4.13) e0.1
  val?^ | miss    %4.15 = LdVar              eR    r, e0.1
  void                    Visible            v     
  val?            %4.17 = Force!<value>      !     %4.15, e0.1   <other>
  void                    Return             l     %4.17
BB5   <- [0]
  fs              %5.0  = FrameState         R     0x55fa1793c700+102: [], env=e0.1
  void                    Deopt              !v    %5.0, CallTarget@0x55fa103a69e8[Call#2], %0.12   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dim, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dimnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int->
  val?            %0.3  = Extract1_1D        !v    %0.2, 1, e0.0   <int$->
  val?^ | miss    %0.4  = LdVar              eR    d, e0.0
  val?            %0.5  = Force<value>       !v    %0.4, e0.0   <int->
  val?            %0.6  = Extract1_1D        !v    %0.5, 2, e0.0   <int$->
  val?            %0.7  = Eq                 !v    %0.3, %0.6, e0.0   <lgl$->
  lgl$-           %0.8  = AsLogical          e     %0.7
  lgl$#-          %0.9  = Identical                %0.8, false
  void                    Branch                   %0.9 -> BB2 (if true) | BB7 (if false)
BB2   <- [0]
  void                    Nop                !     
  lgl$-           %2.1  = %0.8
  goto BB3
BB7   <- [0]
  (cls|spec|blt)  %7.0  = LdFun              !v    identical, <0x55fa0b036820>, e0.0
  prom-           %7.1  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p5, e0.0
  prom-           %7.2  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p6, e0.0
  val?            %7.3  = Call               !v    %7.0(%7.1, %7.2) e0.0   <lgl$->
  lgl$-           %7.4  = AsLogical          e     %7.3
  lgl$-           %7.5  = LAnd                     %0.8, %7.4
  lgl$-           %7.6  = %7.5
  goto BB3
BB3   <- [2, 7]
  lgl$-           %3.0  = Phi                      %7.6:BB7, %2.1:BB2
  lgl$-           %3.1  = %3.0
  lgl$#-          %3.2  = CheckTrueFalse     e     %3.1
  void                    Branch                   %3.2 -> BB6 (if true) | BB4 (if false)
BB6   <- [3]
  void                    Visible            v     
  str$#-          %6.1  = "nsCMatrix"
  goto BB5
BB4   <- [3]
  void                    Visible            v     
  str$#-          %4.1  = "ngCMatrix"
  goto BB5
BB5   <- [4, 6]
  str$#-          %5.0  = Phi                      %4.1:BB4, %6.1:BB6
  str$#-          %5.1  = %5.0
  void                    Return             l     %5.1
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <vec->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <nil->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <vec->
  val?            %0.3  = Extract2_1D        !v    %0.2, 2, e0.0   <nil->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p8, e0.0
  prom-           %0.3  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p9, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dim, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p12, e0.0
  prom-           %0.3  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p13, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dimnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p16, e0.0
  prom-           %0.3  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p17, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    p, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is.na_nsp[0x55fa171c7160]_p19, e0.0
  val?            %0.3  = Call               !     %0.1(0L, %0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Extract1_1D        !v    %0.2, 2, e0.0   <val?_>
  void                    Visible            v     
  val?            %0.5  = Add                !     %0.3, 1L, e0.0   <val?_>
  void                    Return             l     %0.5

│ is.na_nsp[0x55fa171c7160]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
