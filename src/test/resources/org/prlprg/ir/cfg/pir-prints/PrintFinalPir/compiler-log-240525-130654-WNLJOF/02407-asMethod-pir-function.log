
┌──────────────────────────────────────────────────────────────────────────────┐
│ asMethod[0x55fa170aa1d0]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
asMethod[0x55fa170aa1d0]
BB0
  val?^           %0.0  = LdArg                    0
  void                    Visible            v     
  val?^ | miss    %0.2  = LdVar              eR    as, <env 0x55fa0d1a9f20>
  lgl$#-          %0.3  = Identical                %0.2, function(object, Class, strict=TRUE, ext=possi|...
  void                    Branch                   %0.3 -> BB4 (if true) | BB5 (if false)
BB4   <- [0]
  env             e4.0  = MkEnv              l     from=%0.0, to(miss)="generalMatrix", strict(miss)=true, parent=<env 0x55fa0d1a9f20>, context 1
  prom-           %4.1  = MkArg                    unboundValue, asMethod[0x55fa170aa1d0]_p2 (!refl), e4.0
  prom-           %4.2  = MkArg                    unboundValue, asMethod[0x55fa170aa1d0]_p3, e4.0
  val?            %4.3  = Call               !     function(object, Class, strict=TRUE, ext=possi|...(%4.1, %4.2) e4.0   <other>
  void                    Return             l     %4.3
BB5   <- [0]
  env             e5.0  = (MkEnv)            l     from=%0.0, to(miss)="generalMatrix", strict(miss)=true, parent=<env 0x55fa0d1a9f20>, context 1
  fs              %5.1  = FrameState         R     0x55fa0b879d70+0: [], env=e5.0
  void                    Deopt              !v    %5.1, CallTarget@0x55fa14bf7610[Call#0], %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     paste0, <0x55fa0ae9d3c8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, asMethod[0x55fa170aa1d0]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "geMatrix") e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .M.kind, <0x55fa10e3df88>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, asMethod[0x55fa170aa1d0]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3

│ asMethod[0x55fa170aa1d0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
