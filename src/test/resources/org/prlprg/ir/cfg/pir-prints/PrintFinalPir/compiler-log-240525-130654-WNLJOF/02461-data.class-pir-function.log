
┌──────────────────────────────────────────────────────────────────────────────┐
│ data.class[0x55fa177fbee0]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
data.class[0x55fa177fbee0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.2  = Force!<lazy>       !vr   %0.0,    <val?_>
  val?            %0.3  = CallBuiltin        !v    oldClass(%0.2) e0.1   <nil->
  void                    StVar              lW    cl, %0.3, e0.1
  lgl$#-          %0.5  = IsType                   %0.3 isA val?-
  void                    Branch                   %0.5 -> BB41 (if true) | BB42 (if false)
BB41   <- [0]
  val?-           %41.0 = CastType           d     dn %0.3   <nil->
  (int|real)$-    %41.1 = CallSafeBuiltin    wed   length(%41.0)    <int$->
  lgl$#-          %41.2 = IsType                   %41.1 isA int$-
  void                    Branch                   %41.2 -> BB43 (if true) | BB44 (if false)
BB42   <- [0]
  fs              %42.0 = FrameState         R     0x55fa1762ce30+167: [<blt length>, %0.3], env=e0.1
  void                    Deopt              !v    %42.0, Typecheck@0x55fa11c297f8[Type#4], %0.3   !
BB43   <- [41]
  int$-           %43.0 = CastType           d     dn %41.1
  lgl$#-          %43.1 = CheckTrueFalse     e     %43.0
  void                    Branch                   %43.1 -> BB39 (if true) | BB5 (if false)
BB44   <- [41]
  void                    Nop                !     
  (int|real)$-    %44.1 = %41.1
  dr              %44.2 = Typecheck@0x55fa11c297f8[Type#5]
  goto BB3
BB39   <- [43]
  val-            %39.0 = ChkMissing         e     %41.0
  val?            %39.1 = Extract1_1D        wed   %41.0, 1L, elided   <val?_>
  void                    Visible            v     
  val?            %39.3 = %39.1
  goto BB30
BB5   <- [43]
  val?^ | miss    %5.0  = LdVar              eR    length, e0.1
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <true>
  void                    Branch                   %5.1 -> BB45 (if true) | BB46 (if false)
BB3   <- [44, 46, 48]
  val?^ | miss    %3.0  = Phi                      %44.1:BB44, %46.1:BB46, %48.1:BB48
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %44.2:BB44, %46.2:BB46, %48.2:BB48
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55fa1762ce30+184: [%41.1], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB30   <- [39, 29]
  val?            %30.0 = Phi                      %29.2:BB29, %39.3:BB39
  val?            %30.1 = %30.0
  void                    Return             l     %30.1
BB45   <- [5]
  val?^ | miss    %45.0 = LdVar              eR    dim, e0.1
  lgl$#-          %45.1 = Identical                <blt dim>, %45.0   <true>
  void                    Branch                   %45.1 -> BB47 (if true) | BB48 (if false)
BB46   <- [5]
  void                    Nop                !     
  lgl$#-          %46.1 = %5.1
  dr              %46.2 = DeadBranchReached@0x55fa11c297f8[Test#2]
  goto BB3
BB47   <- [45]
  val?^ | miss    %47.0 = LdVar              eR    x, e0.1
  val?            %47.1 = Force!<wrapped>    !v    %47.0, e0.1   <val?_>
  lgl$#-          %47.2 = IsType                   %47.1 isA val?+
  void                    Branch                   %47.2 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  void                    Nop                !     
  lgl$#-          %48.1 = %45.1
  dr              %48.2 = DeadBranchReached@0x55fa11c297f8[Test#3]
  goto BB3
BB49   <- [47]
  val?+           %49.0 = CastType           d     dn %47.1   <val?_>
  val+            %49.1 = CallSafeBuiltin    wed   dim(%49.0)    <(nil|int)->
  (int|real)$-    %49.2 = CallSafeBuiltin    wed   length(%49.1)    <int$->
  lgl$#-          %49.3 = IsType                   %49.2 isA int$-
  void                    Branch                   %49.3 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x55fa1762ce30+324: [<blt length>, <blt dim>, %47.1], env=e0.1
  void                    Deopt              !v    %50.0, Typecheck@0x55fa11c297f8[Type#9], %47.1   !
BB51   <- [49]
  int$-           %51.0 = CastType           d     dn %49.2
  void                    StVar              lW    l, %51.0, e0.1
  lgl$-           %51.2 = Eq                 d     %51.0, 2L, elided   <lgl$->
  lgl$#-          %51.3 = CheckTrueFalse     e     %51.2
  void                    Branch                   %51.3 -> BB38 (if true) | BB12 (if false)
BB52   <- [49]
  fs              %52.0 = FrameState         R     0x55fa1762ce30+368: [%49.2], env=e0.1
  void                    Deopt              !v    %52.0, Typecheck@0x55fa11c297f8[Type#11], %49.2   !
BB38   <- [51]
  void                    Visible            v     
  str$#-          %38.1 = "matrix"
  goto BB29
BB12   <- [51]
  lgl$#-          %12.0 = CheckTrueFalse     e     %51.0
  void                    Branch                   %12.0 -> BB37 (if true) | BB13 (if false)
BB29   <- [38, 28]
  str$-           %29.0 = Phi                      %28.2:BB28, %38.1:BB38
  str$-           %29.1 = %29.0
  str$-           %29.2 = %29.1
  goto BB30
BB37   <- [12]
  void                    Visible            v     
  str$#-          %37.1 = "array"
  goto BB28
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    mode, e0.1
  lgl$#-          %13.1 = Identical                %13.0, function(x) <(rir::DispatchTable*)0x55fa170d2f|...
  void                    Branch                   %13.1 -> BB53 (if true) | BB54 (if false)
BB28   <- [37, 27]
  str$-           %28.0 = Phi                      %27.2:BB27, %37.1:BB37
  str$-           %28.1 = %28.0
  str$-           %28.2 = %28.1
  goto BB29
BB53   <- [13]
  val?^ | miss    %53.0 = LdVar              eR    x, e0.1
  val?            %53.1 = Force!<wrapped>    !v    %53.0, e0.1   <val?->
  lgl$#-          %53.2 = IsType                   %53.1 isA val?+
  void                    Branch                   %53.2 -> BB55 (if true) | BB56 (if false)
BB54   <- [13]
  fs              %54.0 = FrameState         R     0x55fa1762ce30+382: [], env=e0.1
  void                    Deopt              !v    %54.0, CallTarget@0x55fa11c297f8[Call#6], %13.0   !
BB55   <- [53]
  val?+           %55.0 = CastType           d     dn %53.1   <val?->
  lgl$#-          %55.1 = CallSafeBuiltin    wed   is.expression(%55.0)    <lgl$->
  void                    Branch                   %55.1 -> BB36 (if true) | BB16 (if false)
BB56   <- [53]
  prom-           %56.0 = MkArg                    %53.1, data.class[0x55fa177fbee0]_p0 (!refl), e0.1
  val?~           %56.1 = CastType                 up %56.0
  fs              %56.2 = FrameState         R     0x55fa1762ce30+466: [], env=e0.1
  env             e56.3 = (MkEnv)            l     x=%56.1, parent=R_BaseNamespace, context 0
  fs              %56.4 = FrameState         R     0x55fa16ca4b80+69: [<blt is.expression>, %53.1], env=e56.3, next=%56.2
  void                    Deopt              !v    %56.4, Typecheck@0x55fa11c29748[Type#1], %53.1   !
BB36   <- [55]
  void                    Visible            v     
  str$#-          %36.1 = "expression"
  goto BB27
BB16   <- [55]
  lgl$#-          %16.0 = CallSafeBuiltin    wed   is.call(%55.0)    <lgl$->
  void                    Branch                   %16.0 -> BB35 (if true) | BB17 (if false)
BB27   <- [36, 26]
  str$-           %27.0 = Phi                      %26.2:BB26, %36.1:BB36
  str$-           %27.1 = %27.0
  str$-           %27.2 = %27.1
  goto BB28
BB35   <- [16]
  prom-           %35.0 = MkArg                    %55.0, data.class[0x55fa177fbee0]_p0 (!refl), e0.1
  val?~           %35.1 = CastType                 up %35.0
  fs              %35.2 = FrameState         R     0x55fa1762ce30+466: [], env=e0.1
  (cls|spec|blt)  %35.3 = LdFun              !v    deparse, R_BaseNamespace
  env             e35.4 = (MkEnv)            l     x=%35.1, parent=R_BaseNamespace, context 0
  fs              %35.5 = FrameState         R     0x55fa16ca4b80+226: [%35.3], env=e35.4, next=%35.2
  void                    Deopt              !v    %35.5, DeadCall@0x55fa11c29748[Call#2], %35.3   !
BB17   <- [16]
  lgl$#-          %17.0 = CallSafeBuiltin    wed   is.symbol(%55.0)    <lgl$->
  void                    Branch                   %17.0 -> BB34 (if true) | BB18 (if false)
BB34   <- [17]
  void                    Visible            v     
  str$#-          %34.1 = "name"
  goto BB26
BB18   <- [17]
  str$-           %18.0 = CallSafeBuiltin    wed   typeof(%55.0)    <str$->
  int$-           %18.1 = Length                   %18.0
  lgl$-           %18.2 = Eq                 d     %18.1, 1L, elided   <true>
  lgl$#-          %18.3 = Identical                %18.2, true
  void                    Branch                   %18.3 -> BB57 (if true) | BB58 (if false)
BB26   <- [34, 25]
  str$-           %26.0 = Phi                      %25.2:BB25, %34.1:BB34
  str$-           %26.1 = %26.0
  str$-           %26.2 = %26.1
  goto BB27
BB57   <- [18]
  lgl$-           %57.0 = CallSafeBuiltin    wed   is.na(%18.0) 
  lgl$#-          %57.1 = CheckTrueFalse     e     %57.0   <false>
  void                    Branch                   %57.1 -> BB60 (if true) | BB59 (if false)
BB58   <- [18]
  prom-           %58.0 = MkArg                    %55.0, data.class[0x55fa177fbee0]_p0 (!refl), e0.1
  val?~           %58.1 = CastType                 up %58.0
  fs              %58.2 = FrameState         R     0x55fa1762ce30+466: [], env=e0.1
  env             e58.3 = (MkEnv)            l     tx=%18.0, x=%58.1, parent=R_BaseNamespace, context 0
  fs              %58.4 = FrameState         R     0x55fa16ca4b80+708: [%18.0], env=e58.3, next=%58.2
  void                    Deopt              !v    %58.4, DeadBranchReached@0x55fa11c29748[Test#14], %18.3   !
BB60   <- [57]
  void                    Nop                !     
  lgl$#-          %60.1 = %57.1
  dr              %60.2 = DeadBranchReached@0x55fa11c29748[Test#23]
  goto BB21
BB59   <- [57]
  lgl$-           %59.0 = Eq                 d     %18.0, double, elided
  lgl$#-          %59.1 = CheckTrueFalse     e     %59.0
  void                    Branch                   %59.1 -> BB33 (if true) | BB23 (if false)
BB21   <- [60, 62, 64, 66]
  val?^ | miss    %21.0 = Phi                      %60.1:BB60, %62.1:BB62, %64.1:BB64, %66.1:BB66
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %60.2:BB60, %62.2:BB62, %64.2:BB64, %66.2:BB66
  dr              %21.3 = %21.2
  prom-           %21.4 = MkArg                    %55.0, data.class[0x55fa177fbee0]_p0 (!refl), e0.1
  val?~           %21.5 = CastType                 up %21.4
  fs              %21.6 = FrameState         R     0x55fa1762ce30+466: [], env=e0.1
  env             e21.7 = (MkEnv)            l     tx=%18.0, x=%21.5, parent=R_BaseNamespace, context 0
  fs              %21.8 = FrameState         R     0x55fa16ca4b80+965: [%18.0, %57.0], env=e21.7, next=%21.6
  void                    Deopt              !v    %21.8, %21.3, %21.1   !
BB33   <- [59]
  void                    Nop                !     
  goto BB32
BB23   <- [59]
  lgl$-           %23.0 = Eq                 d     %18.0, integer, elided
  lgl$#-          %23.1 = CheckTrueFalse     e     %23.0
  void                    Branch                   %23.1 -> BB31 (if true) | BB24 (if false)
BB32   <- [33, 31]
  void                    Visible            v     
  str$#-          %32.1 = "numeric"
  goto BB25
BB31   <- [23]
  void                    Nop                !     
  goto BB32
BB24   <- [23]
  lgl$-           %24.0 = Eq                 d     %18.0, closure, elided
  lgl$#-          %24.1 = CheckTrueFalse     e     %24.0   <false>
  void                    Branch                   %24.1 -> BB62 (if true) | BB61 (if false)
BB25   <- [32, 65]
  str$-           %25.0 = Phi                      %65.1:BB65, %32.1:BB32
  str$-           %25.1 = %25.0
  str$-           %25.2 = %25.1
  goto BB26
BB62   <- [24]
  void                    Nop                !     
  lgl$#-          %62.1 = %24.1
  dr              %62.2 = DeadBranchReached@0x55fa11c29748[Test#26]
  goto BB21
BB61   <- [24]
  lgl$-           %61.0 = Eq                 d     %18.0, builtin, elided
  lgl$#-          %61.1 = CheckTrueFalse     e     %61.0   <false>
  void                    Branch                   %61.1 -> BB64 (if true) | BB63 (if false)
BB64   <- [61]
  void                    Nop                !     
  lgl$#-          %64.1 = %61.1
  dr              %64.2 = DeadBranchReached@0x55fa11c29748[Test#27]
  goto BB21
BB63   <- [61]
  lgl$-           %63.0 = Eq                 d     %18.0, special, elided
  lgl$#-          %63.1 = CheckTrueFalse     e     %63.0   <false>
  void                    Branch                   %63.1 -> BB66 (if true) | BB65 (if false)
BB66   <- [63]
  void                    Nop                !     
  lgl$#-          %66.1 = %63.1
  dr              %66.2 = DeadBranchReached@0x55fa11c29748[Test#28]
  goto BB21
BB65   <- [63]
  void                    Visible            v     
  str$-           %65.1 = %18.0
  goto BB25
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3

│ data.class[0x55fa177fbee0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
