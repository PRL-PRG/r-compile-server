
┌──────────────────────────────────────────────────────────────────────────────┐
│ .deparseOpts[0x561ce6e46be0]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
.deparseOpts[0x561ce6e46be0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     control=%0.0, parent=R_BaseNamespace, context 1
  val?            %0.2  = Force!<lazy>       !v    %0.0, e0.1   <str->
  lgl$#-          %0.3  = IsType                   %0.2 isA val?-
  void                    Branch                   %0.3 -> BB41 (if true) | BB42 (if false)
BB41   <- [0]
  val?-           %41.0 = CastType           d     dn %0.2   <str->
  (int|real)$-    %41.1 = CallSafeBuiltin    wed   length(%41.0)    <int$->
  lgl$#-          %41.2 = IsType                   %41.1 isA int$-
  void                    Branch                   %41.2 -> BB43 (if true) | BB44 (if false)
BB42   <- [0]
  fs              %42.0 = FrameState         R     0x561ce541d320+69: [<blt length>, %0.2], env=e0.1
  void                    Deopt              !v    %42.0, Typecheck@0x561ce62151b8[Type#1], %0.2   !
BB43   <- [41]
  int$-           %43.0 = CastType           d     dn %41.1
  lgl$-           %43.1 = Not                d     %43.0, elided
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB39 (if true) | BB5 (if false)
BB44   <- [41]
  void                    Nop                !     
  (int|real)$-    %44.1 = %41.1
  dr              %44.2 = Typecheck@0x561ce62151b8[Type#2]
  goto BB3
BB39   <- [43]
  void                    Visible            v     
  real$#-         %39.1 = 0
  goto BB28
BB5   <- [43]
  val?^ | miss    %5.0  = LdVar              eR    pmatch, e0.1
  lgl$#-          %5.1  = Identical                %5.0, function(x, table, nomatch=NA, duplicates.ok=F|...
  void                    Branch                   %5.1 -> BB45 (if true) | BB46 (if false)
BB3   <- [44, 46, 48]
  val?^ | miss    %3.0  = Phi                      %44.1:BB44, %46.1:BB46, %48.1:BB48
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %44.2:BB44, %46.2:BB46, %48.2:BB48
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x561ce541d320+91: [%41.1], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB28   <- [39, 77]
  real$-          %28.0 = Phi                      %77.3:BB77, %39.1:BB39
  real$-          %28.1 = %28.0
  void                    Return             l     %28.1
BB45   <- [5]
  val?^ | miss    %45.0 = LdVar              eR    as.character, e0.1
  lgl$#-          %45.1 = Identical                %45.0, <blt as.character>
  void                    Branch                   %45.1 -> BB47 (if true) | BB48 (if false)
BB46   <- [5]
  void                    Nop                !     
  val?^ | miss    %46.1 = %5.0
  dr              %46.2 = CallTarget@0x561ce62151b8[Call#1]
  goto BB3
BB47   <- [45]
  val?^ | miss    %47.0 = LdVar              eR    control, e0.1
  val?            %47.1 = Force!<wrapped>    !v    %47.0, e0.1   <str->
  val?            %47.2 = CallBuiltin        !v    as.character(%47.1) e0.1   <str->
  lgl$#-          %47.3 = IsType                   %47.2 isA val?-
  void                    Branch                   %47.3 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  void                    Nop                !     
  val?^ | miss    %48.1 = %45.0
  dr              %48.2 = CallTarget@0x561ce62151b8[Call#2]
  goto BB3
BB49   <- [47]
  val?-           %49.0 = CastType           d     dn %47.2   <str->
  val+            %49.1 = CallSafeBuiltin    wed   as.character(%49.0)    <str->
  val?^ | miss    %49.2 = LdVar              eR    ..deparseOpts, e0.1
  val?            %49.3 = Force!<wrapped>    !v    %49.2, e0.1   <str->
  lgl$#-          %49.4 = IsType                   %49.3 isA val?-
  void                    Branch                   %49.4 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x561ce541d320+152: [], env=e0.1
  prom-           %50.1 = MkArg                    unboundValue, .deparseOpts[0x561ce6e46be0]_p2, e0.1
  val?^           %50.2 = CastType                 up %50.1
  prom-           %50.3 = MkArg                    unboundValue, .deparseOpts[0x561ce6e46be0]_p0, e0.1
  val?^           %50.4 = CastType                 up %50.3
  env             e50.5 = (MkEnv)            l     x=%50.4, table=%50.2, nomatch(miss)=NA, duplicates.ok(miss)=false, parent=R_BaseNamespace, context 0
  fs              %50.6 = FrameState         R     0x561ce51e3820+69: [<blt as.character>], env=e50.5, next=%50.0
  fs              %50.7 = FrameState         R     0x561ce4e46af0+32(pr): [%47.2], env=e0.1, next=%50.6
  void                    Deopt              !v    %50.7, Typecheck@0x561ce51e39f0[Type#1], %47.2   !
BB51   <- [49]
  val?-           %51.0 = CastType           d     dn %49.3   <str->
  val+            %51.1 = CallSafeBuiltin    wed   as.character(%51.0)    <str->
  val+            %51.2 = CallSafeBuiltin    wed   pmatch(%49.1, %51.1, NA, false)    <int->
  void                    StVar              lW    opts, %51.2, e0.1
  lgl$#-          %51.4 = IsType                   %51.2 isA int-
  val?^ | miss    %51.5 = LdVar              eR    anyNA, e0.1
  lgl$#-          %51.6 = Identical                <blt anyNA>, %51.5   <true>
  void                    Branch                   %51.6 -> BB53 (if true) | BB54 (if false)
BB52   <- [49]
  prom-           %52.0 = MkArg                    %49.0, .deparseOpts[0x561ce6e46be0]_p0 (!refl), e0.1
  val?~           %52.1 = CastType                 up %52.0
  fs              %52.2 = FrameState         R     0x561ce541d320+152: [], env=e0.1
  prom-           %52.3 = MkArg                    %49.3, .deparseOpts[0x561ce6e46be0]_p2 (!refl), e0.1
  val?~           %52.4 = CastType                 up %52.3
  env             e52.5 = (MkEnv)            l     duplicates.ok(miss)=false, nomatch(miss)=NA, table=%52.4, x=%52.1, parent=R_BaseNamespace, context 0
  fs              %52.6 = FrameState         R     0x561ce51e3820+165: [%49.1, <blt as.character>, %49.3], env=e52.5, next=%52.2
  void                    Deopt              !v    %52.6, Typecheck@0x561ce51e39f0[Type#4], %49.3   !
BB53   <- [51]
  void                    Branch                   %51.4 -> BB55 (if true) | BB56 (if false)
BB54   <- [51]
  void                    Nop                !     
  lgl$#-          %54.1 = %51.6
  dr              %54.2 = DeadBranchReached@0x561ce62151b8[Test#1]
  goto BB10
BB55   <- [53]
  int-            %55.0 = CastType           d     dn %51.2
  val+            %55.1 = CallSafeBuiltin    wed   anyNA(%55.0)    <lgl$->
  lgl$#-          %55.2 = IsType                   %55.1 isA lgl$-
  void                    Branch                   %55.2 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  void                    Nop                !     
  val+            %56.1 = %51.2
  dr              %56.2 = Typecheck@0x561ce62151b8[Type#6]
  goto BB10
BB10   <- [54, 56]
  val?^ | miss    %10.0 = Phi                      %54.1:BB54, %56.1:BB56
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %54.2:BB54, %56.2:BB56
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x561ce541d320+166: [], env=e0.1
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB57   <- [55]
  lgl$-           %57.0 = CastType           d     dn %55.1
  lgl$#-          %57.1 = CheckTrueFalse     e     %57.0
  void                    Branch                   %57.1 -> BB38 (if true) | BB14 (if false)
BB58   <- [55]
  void                    Nop                !     
  val+            %58.1 = %55.1
  dr              %58.2 = Typecheck@0x561ce62151b8[Type#9]
  goto BB12
BB38   <- [57]
  (cls|spec|blt)  %38.0 = LdFun              !v    stop, e0.1
  fs              %38.1 = FrameState         R     0x561ce541d320+278: [%38.0], env=e0.1
  void                    Deopt              !v    %38.1, DeadCall@0x561ce62151b8[Call#4], %38.0   !
BB14   <- [57]
  val?^ | miss    %14.0 = LdVar              eR    any, e0.1
  lgl$#-          %14.1 = Identical                <blt any>, %14.0   <true>
  void                    Branch                   %14.1 -> BB59 (if true) | BB60 (if false)
BB12   <- [58, 60]
  val?^ | miss    %12.0 = Phi                      %58.1:BB58, %60.1:BB60
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %58.2:BB58, %60.2:BB60
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x561ce541d320+257: [%55.1], env=e0.1
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB59   <- [14]
  lgl-            %59.0 = Eq                 wed   %55.0, 1L, elided   <lgl->
  val?            %59.1 = CallBuiltin        !v    any(%59.0) e0.1   <lgl$->
  lgl$#-          %59.2 = IsType                   %59.1 isA lgl$-
  void                    Branch                   %59.2 -> BB61 (if true) | BB62 (if false)
BB60   <- [14]
  void                    Nop                !     
  lgl$#-          %60.1 = %14.1
  dr              %60.2 = DeadBranchReached@0x561ce62151b8[Test#3]
  goto BB12
BB61   <- [59]
  lgl$-           %61.0 = CastType           d     dn %59.1
  lgl$#-          %61.1 = CheckTrueFalse     e     %61.0
  void                    Branch                   %61.1 -> BB31 (if true) | BB17 (if false)
BB62   <- [59]
  void                    Nop                !     
  val?            %62.1 = %59.1
  dr              %62.2 = Typecheck@0x561ce62151b8[Type#28]
  goto BB15
BB31   <- [61]
  val?^ | miss    %31.0 = LdVar              eR    any, e0.1
  lgl$#-          %31.1 = Identical                <blt any>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB17   <- [61]
  val?^ | miss    %17.0 = LdVar              eR    any, e0.1
  lgl$#-          %17.1 = Identical                <blt any>, %17.0   <true>
  void                    Branch                   %17.1 -> BB63 (if true) | BB64 (if false)
BB15   <- [62, 64, 66]
  val?^ | miss    %15.0 = Phi                      %62.1:BB62, %64.1:BB64, %66.1:BB66
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %62.2:BB62, %64.2:BB64, %66.2:BB66
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x561ce541d320+431: [%59.1], env=e0.1
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    opts, e0.1
  val?            %33.1 = Force!             !v    %33.0, e0.1   <val?_>
  lgl$#-          %33.2 = IsType                   %33.1 isA val?+
  void                    Branch                   %33.2 -> BB75 (if true) | BB76 (if false)
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    any, e0.1
  fs              %32.1 = FrameState         R     0x561ce541d320+640: [%32.0], env=e0.1
  void                    Deopt              !v    %32.1, DeadCall@0x561ce62151b8[Call#18], %32.0   !
BB63   <- [17]
  val?^ | miss    %63.0 = LdVar              eR    opts, e0.1
  lgl$#-          %63.1 = IsType                   %63.0 isA int-
  void                    Branch                   %63.1 -> BB65 (if true) | BB66 (if false)
BB64   <- [17]
  void                    Nop                !     
  lgl$#-          %64.1 = %17.1
  dr              %64.2 = DeadBranchReached@0x561ce62151b8[Test#4]
  goto BB15
BB75   <- [33]
  val?+           %75.0 = CastType           d     dn %33.1   <val?_>
  lgl             %75.1 = Eq                 wed   %75.0, 13L, elided   <val?_>
  val?            %75.2 = CallBuiltin        !v    any(%75.1) e0.1   <val?_>
  lgl$#-          %75.3 = CheckTrueFalse     we    %75.2
  void                    Branch                   %75.3 -> BB37 (if true) | BB36 (if false)
BB76   <- [33]
  fs              %76.0 = FrameState         R     0x561ce541d320+681: [<blt any>, %33.1], env=e0.1
  void                    Deopt              !v    %76.0, Typecheck@0x561ce62151b8[Type#45], %33.1   !
BB65   <- [63]
  int-            %65.0 = CastType           d     dn %63.0
  lgl-            %65.1 = Eq                 wed   %65.0, 13L, elided   <lgl->
  val?            %65.2 = CallBuiltin        !v    any(%65.1) e0.1   <lgl$->
  lgl$#-          %65.3 = IsType                   %65.2 isA lgl$-
  void                    Branch                   %65.3 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  void                    Nop                !     
  val?^ | miss    %66.1 = %63.0
  dr              %66.2 = Typecheck@0x561ce62151b8[Type#31]
  goto BB15
BB37   <- [75]
  (cls|spec|blt)  %37.0 = LdFun              !v    stop, e0.1
  fs              %37.1 = FrameState         R     0x561ce541d320+736: [%37.0], env=e0.1
  void                    Deopt              !v    %37.1, DeadCall@0x561ce62151b8[Call#19], %37.0   !
BB36   <- [75]
  (cls|spec|blt)  %36.0 = LdFun              !v    unique, e0.1
  fs              %36.1 = FrameState         R     0x561ce541d320+769: [%36.0], env=e0.1
  void                    Deopt              !v    %36.1, DeadCall@0x561ce62151b8[Call#20], %36.0   !
BB67   <- [65]
  lgl$-           %67.0 = CastType           d     dn %65.2
  lgl$#-          %67.1 = CheckTrueFalse     e     %67.0
  void                    Branch                   %67.1 -> BB30 (if true) | BB20 (if false)
BB68   <- [65]
  void                    Nop                !     
  val?            %68.1 = %65.2
  dr              %68.2 = Typecheck@0x561ce62151b8[Type#33]
  goto BB18
BB30   <- [67]
  (cls|spec|blt)  %30.0 = LdFun              !v    unique, e0.1
  fs              %30.1 = FrameState         R     0x561ce541d320+566: [%30.0], env=e0.1
  void                    Deopt              !v    %30.1, DeadCall@0x561ce62151b8[Call#16], %30.0   !
BB20   <- [67]
  val?^ | miss    %20.0 = LdVar              eR    %in%, e0.1
  lgl$#-          %20.1 = Identical                %20.0, function(x, table) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %20.1 -> BB69 (if true) | BB70 (if false)
BB18   <- [68, 70, 72]
  val?^ | miss    %18.0 = Phi                      %68.1:BB68, %70.1:BB70, %72.1:BB72
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %68.2:BB68, %70.2:BB70, %72.2:BB72
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x561ce541d320+545: [%65.2], env=e0.1
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB69   <- [20]
  val?^ | miss    %69.0 = LdVar              eR    opts, e0.1
  lgl$#-          %69.1 = IsType                   %69.0 isA int-
  void                    Branch                   %69.1 -> BB71 (if true) | BB72 (if false)
BB70   <- [20]
  void                    Nop                !     
  val?^ | miss    %70.1 = %20.0
  dr              %70.2 = CallTarget@0x561ce62151b8[Call#23]
  goto BB18
BB71   <- [69]
  int-            %71.0 = CastType           d     dn %69.0
  val+            %71.1 = CallSafeBuiltin    wed   match(10L, %71.0, 0L, nil)    <int->
  lgl$#-          %71.2 = IsType                   %71.1 isA int-
  void                    Branch                   %71.2 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  void                    Nop                !     
  val?^ | miss    %72.1 = %69.0
  dr              %72.2 = Typecheck@0x561ce62151b8[Type#60]
  goto BB18
BB73   <- [71]
  int-            %73.0 = CastType           d     dn %71.1
  lgl-            %73.1 = Gt                 wed   %73.0, 0L, elided   <lgl->
  lgl$-           %73.2 = AsLogical                %73.1
  lgl$#-          %73.3 = Identical                %73.2, false
  void                    Branch                   %73.3 -> BB26 (if true) | BB25 (if false)
BB74   <- [71]
  prom-           %74.0 = MkArg                    %71.0, .deparseOpts[0x561ce6e46be0]_p3 (!refl), e0.1
  val?~           %74.1 = CastType                 up %74.0
  env             e74.2 = MkEnv              l     x=10L, table=%74.1, parent=R_BaseNamespace, context 0
  prom-           %74.3 = MkArg                    unboundValue, .deparseOpts[0x561ce6e46be0]_p6 (!refl), e74.2
  val?^           %74.4 = CastType                 up %74.3
  fs              %74.5 = FrameState         R     0x561ce541d320+847: [], env=e0.1
  fs              %74.6 = FrameState         R     0x561ce51e3320+54: [], env=e74.2, next=%74.5
  prom-           %74.7 = MkArg                    %71.0, .deparseOpts[0x561ce6e46be0]_p7 (!refl), e74.2
  val?~           %74.8 = CastType                 up %74.7
  env             e74.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%74.8, x=%74.4, parent=R_BaseNamespace, context -1
  fs              %74.10 = FrameState         R     0x561ce53cad40+69: [%71.1], env=e74.9, next=%74.6
  void                    Deopt              !v    %74.10, Typecheck@0x561ce6215688[Type#2], %71.1   !
BB26   <- [73]
  lgl$#-          %26.0 = CheckTrueFalse     e     %73.2
  void                    Branch                   %26.0 -> BB29 (if true) | BB27 (if false)
BB25   <- [73]
  (cls|spec|blt)  %25.0 = LdFun              !v    %in%, e0.1
  fs              %25.1 = FrameState         R     0x561ce541d320+864: [%73.2, %25.0], env=e0.1
  void                    Deopt              !v    %25.1, DeadCall@0x561ce62151b8[Call#24], %25.0   !
BB29   <- [26]
  (cls|spec|blt)  %29.0 = LdFun              !v    stop, e0.1
  fs              %29.1 = FrameState         R     0x561ce541d320+919: [%29.0], env=e0.1
  void                    Deopt              !v    %29.1, DeadCall@0x561ce62151b8[Call#25], %29.0   !
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    sum, e0.1
  lgl$#-          %27.1 = Identical                <blt sum>, %27.0   <true>
  void                    Branch                   %27.1 -> BB77 (if true) | BB78 (if false)
BB77   <- [27]
  real-           %77.0 = Sub                wed   %71.0, 2, elided   <real->
  real-           %77.1 = Pow                wed   2, %77.0, elided   <real->
  real$-          %77.2 = CallSafeBuiltin    vwed  sum(%77.1)    <real$->
  real$-          %77.3 = %77.2
  goto BB28
BB78   <- [27]
  prom-           %78.0 = MkArg                    %71.0, .deparseOpts[0x561ce6e46be0]_p3 (!refl), e0.1
  val?~           %78.1 = CastType                 up %78.0
  fs              %78.2 = FrameState         R     0x561ce541d320+847: [], env=e0.1
  env             e78.3 = (MkEnv)            l     x=10L, table=%78.1, parent=R_BaseNamespace, context 0
  fs              %78.4 = FrameState         R     0x561ce51e3320+66: [%73.1], env=e78.3, next=%78.2
  void                    Deopt              !v    %78.4, DeadBranchReached@0x561ce62151b8[Test#8], %27.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x561ce4bc3040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .deparseOpts[0x561ce6e46be0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    control, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ..deparseOpts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    opts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3

│ .deparseOpts[0x561ce6e46be0]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
