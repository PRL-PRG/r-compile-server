
┌──────────────────────────────────────────────────────────────────────────────┐
│ .deparseOpts[0x5642d6a64d00]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0                         │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
.deparseOpts[0x5642d6a64d00]
BB0
  val?~+          %0.0  = LdArg                    0
  val+            %0.1  = Force!<lazy>             %0.0,    <str->
  lgl$#-          %0.2  = IsType                   %0.1 isA val?-
  void                    Branch                   %0.2 -> BB37 (if true) | BB38 (if false)
BB37   <- [0]
  val-            %37.0 = CastType           d     dn %0.1   <str->
  (int|real)$-    %37.1 = CallSafeBuiltin    wed   length(%37.0)    <int$->
  lgl$#-          %37.2 = IsType                   %37.1 isA int$-
  void                    Branch                   %37.2 -> BB39 (if true) | BB40 (if false)
BB38   <- [0]
  env             e38.0 = (MkEnv)            l     control=%0.0, parent=R_BaseNamespace, context 1
  fs              %38.1 = FrameState         R     0x5642d522e320+69: [<blt length>, %0.1], env=e38.0
  void                    Deopt              !v    %38.1, Typecheck@0x5642d60261b8[Type#1], %0.1
BB39   <- [37]
  int$-           %39.0 = CastType           d     dn %37.1
  lgl$-           %39.1 = Not                d     %39.0, elided
  lgl$#-          %39.2 = CheckTrueFalse     e     %39.1
  env             e39.3 = MkEnv              l     control=%0.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %39.2 -> BB35 (if true) | BB5 (if false)
BB40   <- [37]
  env             e40.0 = (MkEnv)            l     control=%0.0, parent=R_BaseNamespace, context 1
  fs              %40.1 = FrameState         R     0x5642d522e320+91: [%37.1], env=e40.0
  void                    Deopt              !v    %40.1, Typecheck@0x5642d60261b8[Type#2], %37.1
BB35   <- [39]
  void                    Visible            v     
  real$#-         %35.1 = 0
  goto BB24
BB5   <- [39]
  val+            %5.0  = CallSafeBuiltin    wed   as.character(%0.1)    <str->
  lgl$#-          %5.1  = IsType                   %5.0 isA val?-
  void                    Branch                   %5.1 -> BB41 (if true) | BB42 (if false)
BB24   <- [35, 63]
  real$-          %24.0 = Phi                      %63.3:BB63, %35.1:BB35
  real$-          %24.1 = %24.0
  void                    Return             l     %24.1
BB41   <- [5]
  val-            %41.0 = CastType           d     dn %5.0   <str->
  val+            %41.1 = CallSafeBuiltin    wed   as.character(%41.0)    <str->
  val+            %41.2 = CallSafeBuiltin    wed   pmatch(%41.1, <str [1] "all" "keepInteger">, NA, false)    <int->
  void                    StVar              lW    opts, %41.2, e39.3
  lgl$#-          %41.4 = IsType                   %41.2 isA int-
  void                    Branch                   %41.4 -> BB43 (if true) | BB44 (if false)
BB42   <- [5]
  fs              %42.0 = FrameState         R     0x5642d522e320+152: [], env=e39.3
  prom-           %42.1 = MkArg                    unboundValue, .deparseOpts[0x5642d6a64d00]_p0, e39.3
  val?^           %42.2 = CastType                 up %42.1
  prom-           %42.3 = MkArg                    unboundValue, .deparseOpts[0x5642d6a64d00]_p3, e39.3
  val?^           %42.4 = CastType                 up %42.3
  env             e42.5 = (MkEnv)            l     x=%42.4, table=%42.2, nomatch(miss)=NA, duplicates.ok(miss)=false, parent=R_BaseNamespace, context 0
  fs              %42.6 = FrameState         R     0x5642d4ff4820+69: [<blt as.character>], env=e42.5, next=%42.0
  fs              %42.7 = FrameState         R     0x5642d4c57af0+32(pr): [%5.0], env=e39.3, next=%42.6
  void                    Deopt              !v    %42.7, Typecheck@0x5642d4ff49f0[Type#1], %5.0
BB43   <- [41]
  int-            %43.0 = CastType           d     dn %41.2
  val+            %43.1 = CallSafeBuiltin    wed   anyNA(%43.0)    <lgl$->
  lgl$#-          %43.2 = IsType                   %43.1 isA lgl$-
  void                    Branch                   %43.2 -> BB45 (if true) | BB46 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x5642d522e320+166: [], env=e39.3
  void                    Deopt              !v    %44.0, Typecheck@0x5642d60261b8[Type#6], %41.2
BB45   <- [43]
  lgl$-           %45.0 = CastType           d     dn %43.1
  lgl$#-          %45.1 = CheckTrueFalse     e     %45.0
  void                    Branch                   %45.1 -> BB34 (if true) | BB12 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x5642d522e320+257: [%43.1], env=e39.3
  void                    Deopt              !v    %46.0, Typecheck@0x5642d60261b8[Type#9], %43.1
BB34   <- [45]
  (cls|spec|blt)  %34.0 = LdFun              !v    stop, R_BaseNamespace
  fs              %34.1 = FrameState         R     0x5642d522e320+278: [%34.0], env=e39.3
  void                    Deopt              !v    %34.1, DeadCall@0x5642d60261b8[Call#4], %34.0
BB12   <- [45]
  lgl-            %12.0 = Eq                 wed   %43.0, 1L, elided   <lgl->
  val?            %12.1 = CallBuiltin        !v    any(%12.0) e39.3   <lgl$->
  lgl$#-          %12.2 = IsType                   %12.1 isA lgl$-
  void                    Branch                   %12.2 -> BB47 (if true) | BB48 (if false)
BB47   <- [12]
  lgl$-           %47.0 = CastType           d     dn %12.1
  lgl$#-          %47.1 = CheckTrueFalse     e     %47.0
  void                    Branch                   %47.1 -> BB27 (if true) | BB15 (if false)
BB48   <- [12]
  void                    Nop                !     
  val?            %48.1 = %12.1
  dr              %48.2 = Typecheck@0x5642d60261b8[Type#28]
  goto BB13
BB27   <- [47]
  val?^ | miss    %27.0 = LdVar              eR    any, e39.3
  lgl$#-          %27.1 = Identical                <blt any>, %27.0   <@?>
  void                    Branch                   %27.1 -> BB29 (if true) | BB28 (if false)
BB15   <- [47]
  val?^ | miss    %15.0 = LdVar              eR    any, e39.3
  lgl$#-          %15.1 = Identical                <blt any>, %15.0   <true>
  void                    Branch                   %15.1 -> BB49 (if true) | BB50 (if false)
BB13   <- [48, 50, 52]
  val?^ | miss    %13.0 = Phi                      %48.1:BB48, %50.1:BB50, %52.1:BB52
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %48.2:BB48, %50.2:BB50, %52.2:BB52
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x5642d522e320+431: [%12.1], env=e39.3
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    opts, e39.3
  val?            %29.1 = Force!             !v    %29.0, e39.3   <val?_>
  lgl$#-          %29.2 = IsType                   %29.1 isA val?+
  void                    Branch                   %29.2 -> BB53 (if true) | BB54 (if false)
BB28   <- [27]
  (cls|spec|blt)  %28.0 = LdFun              !v    any, e39.3
  fs              %28.1 = FrameState         R     0x5642d522e320+640: [%28.0], env=e39.3
  void                    Deopt              !v    %28.1, DeadCall@0x5642d60261b8[Call#18], %28.0   !
BB49   <- [15]
  val?^ | miss    %49.0 = LdVar              eR    opts, e39.3
  lgl$#-          %49.1 = IsType                   %49.0 isA int-
  void                    Branch                   %49.1 -> BB51 (if true) | BB52 (if false)
BB50   <- [15]
  void                    Nop                !     
  lgl$#-          %50.1 = %15.1
  dr              %50.2 = DeadBranchReached@0x5642d60261b8[Test#4]
  goto BB13
BB53   <- [29]
  val?+           %53.0 = CastType           d     dn %29.1   <val?_>
  lgl             %53.1 = Eq                 wed   %53.0, 13L, elided   <val?_>
  val?            %53.2 = CallBuiltin        !v    any(%53.1) e39.3   <val?_>
  lgl$#-          %53.3 = CheckTrueFalse     we    %53.2
  void                    Branch                   %53.3 -> BB33 (if true) | BB32 (if false)
BB54   <- [29]
  fs              %54.0 = FrameState         R     0x5642d522e320+681: [<blt any>, %29.1], env=e39.3
  void                    Deopt              !v    %54.0, Typecheck@0x5642d60261b8[Type#45], %29.1   !
BB51   <- [49]
  int-            %51.0 = CastType           d     dn %49.0
  lgl-            %51.1 = Eq                 wed   %51.0, 13L, elided   <lgl->
  val?            %51.2 = CallBuiltin        !v    any(%51.1) e39.3   <lgl$->
  lgl$#-          %51.3 = IsType                   %51.2 isA lgl$-
  void                    Branch                   %51.3 -> BB55 (if true) | BB56 (if false)
BB52   <- [49]
  void                    Nop                !     
  val?^ | miss    %52.1 = %49.0
  dr              %52.2 = Typecheck@0x5642d60261b8[Type#31]
  goto BB13
BB33   <- [53]
  (cls|spec|blt)  %33.0 = LdFun              !v    stop, e39.3
  fs              %33.1 = FrameState         R     0x5642d522e320+736: [%33.0], env=e39.3
  void                    Deopt              !v    %33.1, DeadCall@0x5642d60261b8[Call#19], %33.0   !
BB32   <- [53]
  (cls|spec|blt)  %32.0 = LdFun              !v    unique, e39.3
  fs              %32.1 = FrameState         R     0x5642d522e320+769: [%32.0], env=e39.3
  void                    Deopt              !v    %32.1, DeadCall@0x5642d60261b8[Call#20], %32.0   !
BB55   <- [51]
  lgl$-           %55.0 = CastType           d     dn %51.2
  lgl$#-          %55.1 = CheckTrueFalse     e     %55.0
  void                    Branch                   %55.1 -> BB26 (if true) | BB18 (if false)
BB56   <- [51]
  void                    Nop                !     
  val?            %56.1 = %51.2
  dr              %56.2 = Typecheck@0x5642d60261b8[Type#33]
  goto BB16
BB26   <- [55]
  (cls|spec|blt)  %26.0 = LdFun              !v    unique, e39.3
  fs              %26.1 = FrameState         R     0x5642d522e320+566: [%26.0], env=e39.3
  void                    Deopt              !v    %26.1, DeadCall@0x5642d60261b8[Call#16], %26.0   !
BB18   <- [55]
  val?^ | miss    %18.0 = LdVar              eR    %in%, e39.3
  lgl$#-          %18.1 = Identical                %18.0, function(x, table) <(rir::DispatchTable*)0x564|...
  void                    Branch                   %18.1 -> BB57 (if true) | BB58 (if false)
BB16   <- [56, 58, 60]
  val?^ | miss    %16.0 = Phi                      %56.1:BB56, %58.1:BB58, %60.1:BB60
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %56.2:BB56, %58.2:BB58, %60.2:BB60
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x5642d522e320+545: [%51.2], env=e39.3
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB57   <- [18]
  val?^ | miss    %57.0 = LdVar              eR    opts, e39.3
  lgl$#-          %57.1 = IsType                   %57.0 isA int-
  void                    Branch                   %57.1 -> BB59 (if true) | BB60 (if false)
BB58   <- [18]
  void                    Nop                !     
  val?^ | miss    %58.1 = %18.0
  dr              %58.2 = CallTarget@0x5642d60261b8[Call#23]
  goto BB16
BB59   <- [57]
  int-            %59.0 = CastType           d     dn %57.0
  val+            %59.1 = CallSafeBuiltin    wed   match(10L, %59.0, 0L, nil)    <int$->
  lgl$#-          %59.2 = IsType                   %59.1 isA int$-
  void                    Branch                   %59.2 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  void                    Nop                !     
  val?^ | miss    %60.1 = %57.0
  dr              %60.2 = Typecheck@0x5642d60261b8[Type#60]
  goto BB16
BB61   <- [59]
  int$-           %61.0 = CastType           d     dn %59.1
  lgl$-           %61.1 = Gt                 d     %61.0, 0L, elided   <lgl$->
  lgl$-           %61.2 = AsLogical                %61.1
  lgl$#-          %61.3 = Identical                %61.2, false
  void                    Branch                   %61.3 -> BB22 (if true) | BB21 (if false)
BB62   <- [59]
  void                    Nop                !     
  val+            %62.1 = %59.1
  dr              %62.2 = Typecheck@0x5642d6026688[Type#2]
  goto BB19
BB22   <- [61]
  lgl$#-          %22.0 = CheckTrueFalse     e     %61.2
  void                    Branch                   %22.0 -> BB25 (if true) | BB23 (if false)
BB21   <- [61]
  (cls|spec|blt)  %21.0 = LdFun              !v    %in%, e39.3
  fs              %21.1 = FrameState         R     0x5642d522e320+864: [%61.2, %21.0], env=e39.3
  void                    Deopt              !v    %21.1, DeadCall@0x5642d60261b8[Call#24], %21.0   !
BB19   <- [62, 64]
  val?^ | miss    %19.0 = Phi                      %62.1:BB62, %64.1:BB64
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %62.2:BB62, %64.2:BB64
  dr              %19.3 = %19.2
  prom-           %19.4 = MkArg                    %59.0, .deparseOpts[0x5642d6a64d00]_p7 (!refl), e39.3
  val?~           %19.5 = CastType                 up %19.4
  env             e19.6 = MkEnv              l     x=10L, table=%19.5, parent=R_BaseNamespace, context 0
  prom-           %19.7 = MkArg                    unboundValue, .deparseOpts[0x5642d6a64d00]_p8 (!refl), e19.6
  val?^           %19.8 = CastType                 up %19.7
  fs              %19.9 = FrameState         R     0x5642d522e320+847: [], env=e39.3
  fs              %19.10 = FrameState         R     0x5642d4ff4320+54: [], env=e19.6, next=%19.9
  prom-           %19.11 = MkArg                    %59.0, .deparseOpts[0x5642d6a64d00]_p9 (!refl), e19.6
  val?~           %19.12 = CastType                 up %19.11
  env             e19.13 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%19.12, x=%19.8, parent=R_BaseNamespace, context -1
  fs              %19.14 = FrameState         R     0x5642d51dbd40+69: [%59.1], env=e19.13, next=%19.10
  void                    Deopt              !v    %19.14, %19.3, %19.1   !
BB25   <- [22]
  (cls|spec|blt)  %25.0 = LdFun              !v    stop, e39.3
  fs              %25.1 = FrameState         R     0x5642d522e320+919: [%25.0], env=e39.3
  void                    Deopt              !v    %25.1, DeadCall@0x5642d60261b8[Call#25], %25.0   !
BB23   <- [22]
  val?^ | miss    %23.0 = LdVar              eR    sum, e39.3
  lgl$#-          %23.1 = Identical                <blt sum>, %23.0   <true>
  void                    Branch                   %23.1 -> BB63 (if true) | BB64 (if false)
BB63   <- [23]
  real-           %63.0 = Sub                wed   %59.0, 2, elided   <real->
  real-           %63.1 = Pow                wed   2, %63.0, elided   <real->
  real$-          %63.2 = CallSafeBuiltin    vwed  sum(%63.1)    <real$->
  real$-          %63.3 = %63.2
  goto BB24
BB64   <- [23]
  void                    Nop                !     
  lgl$#-          %64.1 = %23.1
  dr              %64.2 = DeadBranchReached@0x5642d60261b8[Test#8]
  goto BB19
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ..deparseOpts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x5642d49d4040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .deparseOpts[0x5642d6a64d00]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    control, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    opts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)->
  void                    Return             l     %0.3

│ .deparseOpts[0x5642d6a64d00]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
