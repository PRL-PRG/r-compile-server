
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55c8e75bd930]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
FUN[0x55c8e75bd930]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     e=%0.0, parent=?, context 1
  val?            %0.2  = Force!<lazy>       !v    %0.0, e0.1   <(sym|code)->
  lgl$-           %0.3  = Is                       %0.2, pairlist
  lgl$#-          %0.4  = IsType                   %0.2 isA val?-
  void                    Branch                   %0.4 -> BB49 (if true) | BB50 (if false)
BB49   <- [0]
  lgl$#-          %49.0 = CheckTrueFalse     e     %0.3
  void                    Branch                   %49.0 -> BB47 (if true) | BB3 (if false)
BB50   <- [0]
  void                    Nop                !     
  val?            %50.1 = %0.2
  dr              %50.2 = Typecheck@0x55c8e5d8b148[Type#0]
  goto BB48
BB47   <- [49]
  (cls|spec|blt)  %47.0 = LdFun              !v    as.pairlist, e0.1
  fs              %47.1 = FrameState         R     0x55c8e6e87c70+1140: [%47.0], env=e0.1
  void                    Deopt              !v    %47.1, DeadCall@0x55c8e5d8b148[Call#13], %47.0   !
BB3   <- [49]
  val?^ | miss    %3.0  = LdVar              eR    is.call, e0.1
  lgl$#-          %3.1  = Identical                <blt is.call>, %3.0   <true>
  void                    Branch                   %3.1 -> BB51 (if true) | BB52 (if false)
BB48   <- [50, 52]
  val?^ | miss    %48.0 = Phi                      %50.1:BB50, %52.1:BB52
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %50.2:BB50, %52.2:BB52
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x55c8e6e87c70+9: [%0.2], env=e0.1
  void                    Deopt              !v    %48.4, %48.3, %48.1   !
BB51   <- [3]
  val?^ | miss    %51.0 = LdVar              eR    e, e0.1
  val?            %51.1 = Force!<wrapped>    !v    %51.0, e0.1   <(sym|code)->
  lgl$#-          %51.2 = IsType                   %51.1 isA val?-
  void                    Branch                   %51.2 -> BB53 (if true) | BB54 (if false)
BB52   <- [3]
  void                    Nop                !     
  lgl$#-          %52.1 = %3.1
  dr              %52.2 = DeadBranchReached@0x55c8e5d8b148[Test#0]
  goto BB48
BB53   <- [51]
  val?-           %53.0 = CastType           d     dn %51.1   <(sym|code)->
  lgl$#-          %53.1 = CallSafeBuiltin    wed   is.call(%53.0)    <lgl$->
  void                    Branch                   %53.1 -> BB10 (if true) | BB8 (if false)
BB54   <- [51]
  fs              %54.0 = FrameState         R     0x55c8e6e87c70+94: [<blt is.call>, %51.1], env=e0.1
  void                    Deopt              !v    %54.0, Typecheck@0x55c8e5d8b148[Type#2], %51.1   !
BB10   <- [53]
  val?^ | miss    %10.0 = LdVar              eR    is.name, e0.1
  lgl$#-          %10.1 = Identical                <blt is.symbol>, %10.0   <true>
  void                    Branch                   %10.1 -> BB55 (if true) | BB56 (if false)
BB8   <- [53]
  val?^ | miss    %8.0  = LdVar              eR    e, e0.1
  void                    Visible            v     
  val?            %8.2  = Force!<wrapped>    !     %8.0, e0.1   <sym->
  val?            %8.3  = %8.2
  goto BB9
BB55   <- [10]
  val?^ | miss    %55.0 = LdVar              eR    e, e0.1
  val?            %55.1 = Force!<wrapped>    !v    %55.0, e0.1   <code->
  lgl$#-          %55.2 = IsType                   %55.1 isA val+   <true>
  lgl$#-          %55.3 = IsType                   %55.1 isA val?-
  void                    Branch                   %55.2 -> BB57 (if true) | BB58 (if false)
BB56   <- [10]
  fs              %56.0 = FrameState         R     0x55c8e6e87c70+116: [%53.1], env=e0.1
  void                    Deopt              !v    %56.0, DeadBranchReached@0x55c8e5d8b148[Test#1], %10.1   !
BB9   <- [8, 75]
  val?            %9.0  = Phi                      %8.3:BB8, %75.4:BB75
  val?            %9.1  = %9.0
  void                    Return             l     %9.1
BB57   <- [55]
  void                    Branch                   %55.3 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  void                    Nop                !     
  lgl$#-          %58.1 = %55.2
  dr              %58.2 = DeadBranchReached@0x55c8e5d8b148[Test#3]
  goto BB11
BB59   <- [57]
  val?-           %59.0 = CastType           d     dn %55.1   <code->
  val?            %59.1 = Extract2_1D        wed   %59.0, 1L, elided   <sym->
  lgl$#-          %59.2 = CallSafeBuiltin    wed   is.symbol(%59.1)    <lgl$->
  void                    Branch                   %59.2 -> BB40 (if true) | BB15 (if false)
BB60   <- [57]
  void                    Nop                !     
  val?            %60.1 = %55.1
  dr              %60.2 = Typecheck@0x55c8e5d8b148[Type#7]
  goto BB11
BB11   <- [58, 60]
  val?^ | miss    %11.0 = Phi                      %58.1:BB58, %60.1:BB60
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %58.2:BB58, %60.2:BB60
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55c8e6e87c70+215: [<blt is.symbol>, %55.1], env=e0.1
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB40   <- [59]
  val?^ | miss    %40.0 = LdVar              eR    as.character, e0.1
  lgl$#-          %40.1 = Identical                <blt as.character>, %40.0   <true>
  void                    Branch                   %40.1 -> BB61 (if true) | BB62 (if false)
BB15   <- [59]
  void                    Nop                !     
  lgl$#-          %15.1 = %59.2
  goto BB16
BB61   <- [40]
  val?^ | miss    %61.0 = LdVar              eR    e, e0.1
  val?            %61.1 = Force!<wrapped>    !v    %61.0, e0.1   <code->
  lgl$#-          %61.2 = IsType                   %61.1 isA val+   <true>
  lgl$#-          %61.3 = IsType                   %61.1 isA val?-
  void                    Branch                   %61.2 -> BB63 (if true) | BB64 (if false)
BB62   <- [40]
  fs              %62.0 = FrameState         R     0x55c8e6e87c70+281: [%59.2], env=e0.1
  void                    Deopt              !v    %62.0, DeadBranchReached@0x55c8e5d8b148[Test#4], %40.1   !
BB16   <- [15, 69]
  lgl$-           %16.0 = Phi                      %69.3:BB69, %15.1:BB15
  lgl$-           %16.1 = %16.0
  lgl$#-          %16.2 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.2 -> BB39 (if true) | BB17 (if false)
BB63   <- [61]
  void                    Branch                   %61.3 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  void                    Nop                !     
  lgl$#-          %64.1 = %61.2
  dr              %64.2 = DeadBranchReached@0x55c8e5d8b148[Test#6]
  goto BB41
BB39   <- [16]
  (cls|spec|blt)  %39.0 = LdFun              !v    eval, e0.1
  fs              %39.1 = FrameState         R     0x55c8e6e87c70+1093: [%39.0], env=e0.1
  void                    Deopt              !v    %39.1, DeadCall@0x55c8e5d8b148[Call#12], %39.0   !
BB17   <- [16]
  val?^ | miss    %17.0 = LdVar              eR    splice, e0.1
  val?            %17.1 = Force!<lazy>       !v    %17.0, e0.1   <lgl$->
  lgl$#-          %17.2 = CheckTrueFalse     we    %17.1
  void                    Branch                   %17.2 -> BB21 (if true) | BB20 (if false)
BB65   <- [63]
  val?-           %65.0 = CastType           d     dn %61.1   <code->
  val?            %65.1 = Extract2_1D        wed   %65.0, 1, elided   <sym->
  lgl$#-          %65.2 = IsType                   %65.1 isA val?-
  void                    Branch                   %65.2 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  void                    Nop                !     
  val?            %66.1 = %61.1
  dr              %66.2 = Typecheck@0x55c8e5d8b148[Type#12]
  goto BB41
BB41   <- [64, 66]
  val?^ | miss    %41.0 = Phi                      %64.1:BB64, %66.1:BB66
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %64.2:BB64, %66.2:BB66
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x55c8e6e87c70+362: [%59.2, <blt as.character>, %61.1], env=e0.1
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB21   <- [17]
  val?^ | miss    %21.0 = LdVar              eR    is.name, e0.1
  lgl$#-          %21.1 = Identical                <blt is.symbol>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB20   <- [17]
  val?^ | miss    %20.0 = LdVar              eR    as.call, e0.1
  lgl$#-          %20.1 = Identical                <blt as.call>, %20.0   <true>
  void                    Branch                   %20.1 -> BB73 (if true) | BB74 (if false)
BB67   <- [65]
  val?-           %67.0 = CastType           d     dn %65.1   <sym->
  val+            %67.1 = CallSafeBuiltin    wed   as.character(%67.0)    <str$->
  lgl             %67.2 = Eq                 wed   %67.1, ".", elided   <lgl$->
  lgl$#-          %67.3 = IsType                   %67.2 isA lgl$-
  void                    Branch                   %67.3 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  fs              %68.0 = FrameState         R     0x55c8e6e87c70+405: [%59.2, <blt as.character>, %65.1], env=e0.1
  void                    Deopt              !v    %68.0, Typecheck@0x55c8e5d8b148[Type#13], %65.1   !
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    e, e0.1
  val?            %23.1 = Force!             !v    %23.0, e0.1   <val?_>
  lgl$#-          %23.2 = IsType                   %23.1 isA val?+
  void                    Branch                   %23.2 -> BB71 (if true) | BB72 (if false)
BB22   <- [21]
  (cls|spec|blt)  %22.0 = LdFun              !v    is.name, e0.1
  fs              %22.1 = FrameState         R     0x55c8e6e87c70+630: [%22.0], env=e0.1
  void                    Deopt              !v    %22.1, DeadCall@0x55c8e5d8b148[Call#6], %22.0   !
BB73   <- [20]
  val?^ | miss    %73.0 = LdVar              eR    lapply, e0.1
  lgl$#-          %73.1 = Identical                %73.0, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %73.1 -> BB75 (if true) | BB76 (if false)
BB74   <- [20]
  void                    Nop                !     
  lgl$#-          %74.1 = %20.1
  dr              %74.2 = DeadBranchReached@0x55c8e5d8b148[Test#7]
  goto BB18
BB69   <- [67]
  lgl$-           %69.0 = CastType           d     dn %67.2
  lgl$-           %69.1 = AsLogical                %69.0
  lgl$-           %69.2 = LAnd                     %59.2, %69.1
  lgl$-           %69.3 = %69.2
  goto BB16
BB70   <- [67]
  fs              %70.0 = FrameState         R     0x55c8e6e87c70+440: [%59.2, %67.2], env=e0.1
  void                    Deopt              !v    %70.0, Typecheck@0x55c8e5d8b148[Type#15], %67.2   !
BB71   <- [23]
  val?+           %71.0 = CastType           d     dn %23.1   <val?_>
  val?            %71.1 = Extract2_1D        wed   %71.0, 1L, elided   <val?_>
  lgl$#-          %71.2 = CallSafeBuiltin    wed   is.symbol(%71.1)    <val?_>
  void                    Branch                   %71.2 -> BB32 (if true) | BB26 (if false)
BB72   <- [23]
  fs              %72.0 = FrameState         R     0x55c8e6e87c70+671: [<blt is.symbol>, %23.1], env=e0.1
  void                    Deopt              !v    %72.0, Typecheck@0x55c8e5d8b148[Type#26], %23.1   !
BB75   <- [73]
  prom-           %75.0 = MkArg                    unboundValue, FUN[0x55c8e75bd930]_p0, e0.1
  prom-           %75.1 = MkArg                    unboundValue, FUN[0x55c8e75bd930]_p1, e0.1
  val?            %75.2 = StaticCall         !v    lapply[0x55c8e6f407a0](%75.0, %75.1) { 0 1 } e0.1   <vec->
  val?            %75.3 = CallBuiltin        !     as.call(%75.2) e0.1   <code->
  val?            %75.4 = %75.3
  goto BB9
BB76   <- [73]
  void                    Nop                !     
  val?^ | miss    %76.1 = %73.0
  dr              %76.2 = CallTarget@0x55c8e5d8b148[Call#5]
  goto BB18
BB18   <- [74, 76]
  val?^ | miss    %18.0 = Phi                      %74.1:BB74, %76.1:BB76
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %74.2:BB74, %76.2:BB76
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55c8e6e87c70+468: [%17.2], env=e0.1
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB32   <- [71]
  val?^ | miss    %32.0 = LdVar              eR    as.character, e0.1
  lgl$#-          %32.1 = Identical                <blt as.character>, %32.0   <@?>
  void                    Branch                   %32.1 -> BB34 (if true) | BB33 (if false)
BB26   <- [71]
  void                    Nop                !     
  lgl$#-          %26.1 = %71.2
  goto BB27
BB34   <- [32]
  val?^ | miss    %34.0 = LdVar              eR    e, e0.1
  val?            %34.1 = Force!             !v    %34.0, e0.1   <val?_>
  lgl$#-          %34.2 = IsType                   %34.1 isA val?+
  void                    Branch                   %34.2 -> BB77 (if true) | BB78 (if false)
BB33   <- [32]
  (cls|spec|blt)  %33.0 = LdFun              !v    as.character, e0.1
  fs              %33.1 = FrameState         R     0x55c8e6e87c70+777: [%71.2, %33.0], env=e0.1
  void                    Deopt              !v    %33.1, DeadCall@0x55c8e5d8b148[Call#7], %33.0   !
BB27   <- [26, 79]
  lgl$-           %27.0 = Phi                      %79.5:BB79, %26.1:BB26
  lgl$-           %27.1 = %27.0
  lgl$#-          %27.2 = CheckTrueFalse     e     %27.1
  void                    Branch                   %27.2 -> BB31 (if true) | BB28 (if false)
BB77   <- [34]
  val?+           %77.0 = CastType           d     dn %34.1   <val?_>
  val?            %77.1 = Extract2_1D        wed   %77.0, 1L, elided   <val?_>
  lgl$#-          %77.2 = IsType                   %77.1 isA val?+
  void                    Branch                   %77.2 -> BB79 (if true) | BB80 (if false)
BB78   <- [34]
  fs              %78.0 = FrameState         R     0x55c8e6e87c70+818: [%71.2, <blt as.character>, %34.1], env=e0.1
  void                    Deopt              !v    %78.0, Typecheck@0x55c8e5d8b148[Type#31], %34.1   !
BB31   <- [27]
  (cls|spec|blt)  %31.0 = LdFun              !v    stop, e0.1
  fs              %31.1 = FrameState         R     0x55c8e6e87c70+1038: [%31.0], env=e0.1
  void                    Deopt              !v    %31.1, DeadCall@0x55c8e5d8b148[Call#11], %31.0   !
BB28   <- [27]
  val?^ | miss    %28.0 = LdVar              eR    as.call, e0.1
  lgl$#-          %28.1 = Identical                <blt as.call>, %28.0   <@?>
  void                    Branch                   %28.1 -> BB30 (if true) | BB29 (if false)
BB79   <- [77]
  val?+           %79.0 = CastType           d     dn %77.1   <val?_>
  val+            %79.1 = CallSafeBuiltin    wed   as.character(%79.0)    <val?_>
  lgl             %79.2 = Eq                 wed   %79.1, "..", elided   <val?_>
  lgl$-           %79.3 = AsLogical          e     %79.2
  lgl$-           %79.4 = LAnd                     %71.2, %79.3
  lgl$-           %79.5 = %79.4
  goto BB27
BB80   <- [77]
  fs              %80.0 = FrameState         R     0x55c8e6e87c70+861: [%71.2, <blt as.character>, %77.1], env=e0.1
  void                    Deopt              !v    %80.0, Typecheck@0x55c8e5d8b148[Type#32], %77.1   !
BB30   <- [28]
  (cls|spec|blt)  %30.0 = LdFun              !v    unquote.list, e0.1
  fs              %30.1 = FrameState         R     0x55c8e6e87c70+974: [<blt as.call>, %30.0], env=e0.1
  void                    Deopt              !v    %30.1, DeadCall@0x55c8e5d8b148[Call#10], %30.0   !
BB29   <- [28]
  (cls|spec|blt)  %29.0 = LdFun              !v    as.call, e0.1
  fs              %29.1 = FrameState         R     0x55c8e6e87c70+937: [%29.0], env=e0.1
  void                    Deopt              !v    %29.1, DeadCall@0x55c8e5d8b148[Call#8], %29.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    unquote, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3

│ FUN[0x55c8e75bd930]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
