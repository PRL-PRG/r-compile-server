
┌──────────────────────────────────────────────────────────────────────────────┐
│ mandelbrot[0x55fe21709c10]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager                                                           │
├────── Final PIR Version
mandelbrot[0x55fe21709c10]
BB0
  env             e0.0  = (MkEnv)            l     size=10, sum=0, byteAcc=0, bitNum=0, y=0, ci=unboundValue, x=unboundValue, zr=unboundValue, zrzr=unboundValue, zi=unboundValue, zizi=unboundValue, cr=unboundValue, z=unboundValue, notDone=unboundValue, escape=unboundValue, parent=R_GlobalEnv, context 1
  real$#-         %0.1  = 0
  real$#-         %0.2  = 0
  real$#-         %0.3  = 0
  real$#-         %0.4  = 0
  goto BB2
BB2   <- [5, 0]
  real$#-         %2.0  = Phi                      %0.1:BB0, %5.3:BB5
  real$#-         %2.1  = %2.0
  real$-          %2.2  = Phi                      %0.2:BB0, %5.4:BB5
  real$-          %2.3  = %2.2
  (int|real)$-    %2.4  = Phi                      %0.3:BB0, %5.5:BB5   <int$->
  (int|real)$-    %2.5  = %2.4
  real$-          %2.6  = Phi                      %0.4:BB0, %5.6:BB5
  real$-          %2.7  = %2.6
  lgl$-           %2.8  = Lt                 d     %2.7, 10, elided   <lgl$->
  lgl$#-          %2.9  = CheckTrueFalse     e     %2.8
  void                    Branch                   %2.9 -> BB3 (if true) | BB31 (if false)
BB3   <- [2]
  real$-          %3.0  = Mul                d     2, %2.7, elided   <real$->
  real$-          %3.1  = Div                d     %3.0, 10, elided   <real$->
  real$-          %3.2  = Sub                d     %3.1, 1, elided   <real$->
  void                    StVar              lWd   ci, %3.2, e0.0
  void                    StVar              lWd   x, 0, e0.0
  real$#-         %3.5  = %2.1
  real$-          %3.6  = %2.3
  (int|real)$-    %3.7  = %2.5
  real$#-         %3.8  = 0
  goto BB4
BB31   <- [2]
  void                    Visible            v     
  void                    Return             l     %2.5
BB4   <- [3, 20]
  real$#-         %4.0  = Phi                      %3.5:BB3, %20.9:BB20
  real$#-         %4.1  = %4.0
  real$-          %4.2  = Phi                      %3.6:BB3, %20.10:BB20
  real$-          %4.3  = %4.2
  (int|real)$-    %4.4  = Phi                      %3.7:BB3, %20.11:BB20   <int$->
  (int|real)$-    %4.5  = %4.4
  real$-          %4.6  = Phi                      %3.8:BB3, %20.12:BB20
  real$-          %4.7  = %4.6
  lgl$-           %4.8  = Lt                 d     %4.7, 10, elided   <lgl$->
  lgl$#-          %4.9  = CheckTrueFalse     e     %4.8
  void                    Branch                   %4.9 -> BB6 (if true) | BB5 (if false)
BB6   <- [4]
  real$-          %6.0  = Mul                d     2, %4.7, elided   <real$->
  real$-          %6.1  = Div                d     %6.0, 10, elided   <real$->
  real$-          %6.2  = Sub                d     %6.1, 1.5, elided   <real$->
  void                    StVar              lWd   cr, %6.2, e0.0
  void                    StVar              lWd   notDone, true, e0.0
  void                    StVar              lWd   escape, 0, e0.0
  real$-          %6.6  = Add                d     0, %6.2, elided   <real$->
  void                    StVar              lWd   zr, %6.6, e0.0
  real$-          %6.8  = Mul                d     2, %6.6, elided   <real$->
  real$-          %6.9  = Mul                d     %6.8, 0, elided   <real$->
  real$-          %6.10 = Add                d     %6.9, %3.2, elided   <real$->
  void                    StVar              lWd   zi, %6.10, e0.0
  real$-          %6.12 = Mul                d     %6.6, %6.6, elided   <real$->
  void                    StVar              lWd   zrzr, %6.12, e0.0
  real$-          %6.14 = Mul                d     %6.10, %6.10, elided   <real$->
  void                    StVar              lWd   zizi, %6.14, e0.0
  real$-          %6.16 = Add                d     %6.12, %6.14, elided   <real$->
  lgl$-           %6.17 = Gt                 d     %6.16, 4, elided   <lgl$->
  lgl$#-          %6.18 = CheckTrueFalse     e     %6.17
  void                    Branch                   %6.18 -> BB30 (if true) | BB7 (if false)
BB5   <- [4]
  real$-          %5.0  = LdVar              eRd   y, e0.0
  real$-          %5.1  = Add                d     %5.0, 1, elided   <real$->
  void                    StVar              lWd   y, %5.1, e0.0
  real$#-         %5.3  = %4.1
  real$-          %5.4  = %4.3
  (int|real)$-    %5.5  = %4.5
  real$-          %5.6  = %5.1
  goto BB2
BB30   <- [6]
  void                    StVar              lWd   notDone, false, e0.0
  void                    StVar              lWd   escape, 1, e0.0
  real$#-         %30.2 = 1
  lgl$#-          %30.3 = false
  goto BB8
BB7   <- [6]
  void                    Nop                !     
  real$#-         %7.1  = 0
  lgl$#-          %7.2  = true
  goto BB8
BB8   <- [7, 30]
  real$#-         %8.0  = Phi                      %30.2:BB30, %7.1:BB7
  real$#-         %8.1  = %8.0
  lgl$#-          %8.2  = Phi                      %30.3:BB30, %7.2:BB7
  lgl$#-          %8.3  = %8.2
  void                    StVar              lWd   z, 1, e0.0
  real$#-         %8.5  = %8.1
  real$-          %8.6  = %6.10
  real$-          %8.7  = %6.14
  real$-          %8.8  = %6.12
  real$#-         %8.9  = 1
  lgl$#-          %8.10 = %8.3
  goto BB9
BB9   <- [8, 27]
  real$#-         %9.0  = Phi                      %8.5:BB8, %27.6:BB27
  real$#-         %9.1  = %9.0
  real$-          %9.2  = Phi                      %8.6:BB8, %27.7:BB27
  real$-          %9.3  = %9.2
  real$-          %9.4  = Phi                      %8.7:BB8, %27.8:BB27
  real$-          %9.5  = %9.4
  real$-          %9.6  = Phi                      %8.8:BB8, %27.9:BB27
  real$-          %9.7  = %9.6
  real$#-         %9.8  = Phi                      %8.9:BB8, %27.10:BB27
  real$#-         %9.9  = %9.8
  lgl$#-          %9.10 = Phi                      %8.10:BB8, %27.11:BB27
  lgl$#-          %9.11 = %9.10
  void                    Branch                   %9.11 -> BB29 (if true) | BB10 (if false)
BB29   <- [9]
  lgl$#-          %29.0 = Lt                 d     %9.9, 50, elided   <lgl$->
  lgl$-           %29.1 = LAnd                     %9.11, %29.0
  lgl$-           %29.2 = %29.1
  goto BB11
BB10   <- [9]
  void                    Nop                !     
  lgl$#-          %10.1 = %9.11
  goto BB11
BB11   <- [10, 29]
  lgl$-           %11.0 = Phi                      %29.2:BB29, %10.1:BB10
  lgl$-           %11.1 = %11.0
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB25 (if true) | BB14 (if false)
BB25   <- [11]
  real$-          %25.0 = Sub                d     %9.7, %9.5, elided   <real$->
  real$-          %25.1 = Add                d     %25.0, %6.2, elided   <real$->
  void                    StVar              lWd   zr, %25.1, e0.0
  real$-          %25.3 = Mul                d     2, %25.1, elided   <real$->
  real$-          %25.4 = Mul                d     %25.3, %9.3, elided   <real$->
  real$-          %25.5 = Add                d     %25.4, %3.2, elided   <real$->
  void                    StVar              lWd   zi, %25.5, e0.0
  real$-          %25.7 = Mul                d     %25.1, %25.1, elided   <real$->
  void                    StVar              lWd   zrzr, %25.7, e0.0
  real$-          %25.9 = Mul                d     %25.5, %25.5, elided   <real$->
  void                    StVar              lWd   zizi, %25.9, e0.0
  real$-          %25.11 = Add                d     %25.7, %25.9, elided   <real$->
  lgl$-           %25.12 = Gt                 d     %25.11, 4, elided   <lgl$->
  lgl$#-          %25.13 = CheckTrueFalse     e     %25.12
  void                    Branch                   %25.13 -> BB28 (if true) | BB26 (if false)
BB14   <- [11]
  val?^ | miss    %14.0 = LdVar              eR    bitwShiftL, R_GlobalEnv
  lgl$#-          %14.1 = Identical                %14.0, function(a, n) <(rir::DispatchTable*)0x55fe203|...
  void                    Branch                   %14.1 -> BB32 (if true) | BB33 (if false)
BB28   <- [25]
  void                    StVar              lWd   notDone, false, e0.0
  void                    StVar              lWd   escape, 1, e0.0
  real$#-         %28.2 = 1
  lgl$#-          %28.3 = false
  goto BB27
BB26   <- [25]
  void                    Nop                !     
  real$#-         %26.1 = %9.1
  lgl$#-          %26.2 = %9.11
  goto BB27
BB32   <- [14]
  int$-           %32.0 = CallSafeBuiltin    wed   bitwiseShiftL(%4.3, 1)    <int$->
  real$-          %32.1 = Add                d     %32.0, %9.1, elided   <real$->
  void                    StVar              lWd   byteAcc, %32.1, e0.0
  real$#-         %32.3 = Add                d     %4.1, 1, elided   <real$->
  void                    StVar              lWd   bitNum, %32.3, e0.0
  lgl$#-          %32.5 = Eq                 d     %32.3, 8, elided   <lgl$->
  void                    Branch                   %32.5 -> BB24 (if true) | BB17 (if false)
BB33   <- [14]
  fs              %33.0 = FrameState         R     0x55fe1f91c5b0+884: [%11.1], env=e0.0
  void                    Deopt              !v    %33.0, CallTarget@0x55fe20a80728[Call#0], %14.0
BB27   <- [26, 28]
  real$#-         %27.0 = Phi                      %28.2:BB28, %26.1:BB26
  real$#-         %27.1 = %27.0
  lgl$#-          %27.2 = Phi                      %28.3:BB28, %26.2:BB26
  lgl$#-          %27.3 = %27.2
  real$#-         %27.4 = Add                d     %9.9, 1, elided   <real$->
  void                    StVar              lWd   z, %27.4, e0.0
  real$#-         %27.6 = %27.1
  real$-          %27.7 = %25.5
  real$-          %27.8 = %25.9
  real$-          %27.9 = %25.7
  real$#-         %27.10 = %27.4
  lgl$#-          %27.11 = %27.3
  goto BB9
BB24   <- [32]
  val?^ | miss    %24.0 = LdVar              eR    bitwXor, R_GlobalEnv
  lgl$#-          %24.1 = Identical                %24.0, function(a, b) <(rir::DispatchTable*)0x55fe1f9|...
  void                    Branch                   %24.1 -> BB34 (if true) | BB35 (if false)
BB17   <- [32]
  lgl$-           %17.0 = Eq                 d     %4.7, 9, elided   <lgl$->
  lgl$#-          %17.1 = CheckTrueFalse     e     %17.0
  void                    Branch                   %17.1 -> BB21 (if true) | BB18 (if false)
BB34   <- [24]
  int$-           %34.0 = CallSafeBuiltin    wed   bitwiseXor(%4.5, %32.1)    <int$->
  void                    StVar              lWd   sum, %34.0, e0.0
  void                    StVar              lWd   byteAcc, 0, e0.0
  void                    StVar              lWd   bitNum, 0, e0.0
  real$#-         %34.4 = 0
  real$#-         %34.5 = 0
  int$-           %34.6 = %34.0
  goto BB20
BB35   <- [24]
  fs              %35.0 = FrameState         R     0x55fe1f91c5b0+1348: [], env=e0.0
  void                    Deopt              !v    %35.0, CallTarget@0x55fe20a80728[Call#3], %24.0
BB21   <- [17]
  real$#-         %21.0 = Sub                d     8, %32.3, elided   <real$->
  int$-           %21.1 = CallSafeBuiltin    wed   bitwiseShiftL(%32.1, %21.0)    <int$->
  void                    StVar              lWd   byteAcc, %21.1, e0.0
  val?^ | miss    %21.3 = LdVar              eR    bitwXor, R_GlobalEnv
  lgl$#-          %21.4 = Identical                %21.3, function(a, b) <(rir::DispatchTable*)0x55fe1f9|...
  void                    Branch                   %21.4 -> BB36 (if true) | BB37 (if false)
BB18   <- [17]
  void                    Nop                !     
  real$#-         %18.1 = %32.3
  real$-          %18.2 = %32.1
  (int|real)$-    %18.3 = %4.5
  goto BB19
BB20   <- [19, 34]
  real$#-         %20.0 = Phi                      %34.4:BB34, %19.6:BB19
  real$#-         %20.1 = %20.0
  real$-          %20.2 = Phi                      %34.5:BB34, %19.7:BB19
  real$-          %20.3 = %20.2
  (int|real)$-    %20.4 = Phi                      %34.6:BB34, %19.8:BB19
  (int|real)$-    %20.5 = %20.4
  real$-          %20.6 = LdVar              eRd   x, e0.0
  real$-          %20.7 = Add                d     %20.6, 1, elided   <real$->
  void                    StVar              lWd   x, %20.7, e0.0
  real$#-         %20.9 = %20.1
  real$-          %20.10 = %20.3
  (int|real)$-    %20.11 = %20.5
  real$-          %20.12 = %20.7
  goto BB4
BB36   <- [21]
  int$-           %36.0 = CallSafeBuiltin    wed   bitwiseXor(%4.5, %21.1)    <int$->
  void                    StVar              lWd   sum, %36.0, e0.0
  void                    StVar              lWd   byteAcc, 0, e0.0
  void                    StVar              lWd   bitNum, 0, e0.0
  real$#-         %36.4 = 0
  real$#-         %36.5 = 0
  int$-           %36.6 = %36.0
  goto BB19
BB37   <- [21]
  fs              %37.0 = FrameState         R     0x55fe1f91c5b0+1489: [], env=e0.0
  void                    Deopt              !v    %37.0, CallTarget@0x55fe20a80728[Call#2], %21.3
BB19   <- [18, 36]
  real$#-         %19.0 = Phi                      %36.4:BB36, %18.1:BB18
  real$#-         %19.1 = %19.0
  real$-          %19.2 = Phi                      %36.5:BB36, %18.2:BB18
  real$-          %19.3 = %19.2
  (int|real)$-    %19.4 = Phi                      %36.6:BB36, %18.3:BB18
  (int|real)$-    %19.5 = %19.4
  real$#-         %19.6 = %19.1
  real$-          %19.7 = %19.3
  (int|real)$-    %19.8 = %19.5
  goto BB20

│ mandelbrot[0x55fe21709c10]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
