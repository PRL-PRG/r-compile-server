
┌──────────────────────────────────────────────────────────────────────────────┐
│ walkCode[0x55804e905d50]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
walkCode[0x55804e905d50]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %0.3 -> BB27 (if true) | BB28 (if false)
BB27   <- [0]
  env             e27.0 = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  val?            %27.1 = Force!<lazy>       !vrd  %0.1,    <val?->
  lgl$#-          %27.2 = IsType                   %27.1 isA val?-
  void                    Branch                   %27.2 -> BB29 (if true) | BB30 (if false)
BB28   <- [0]
  env             e28.0 = (MkEnv)            l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %28.1 = FrameState         R     0x55804e2fb8e0+0: [], env=e28.0
  void                    Deopt              !v    %28.1, CallTarget@0x55804c75da98[Call#1], %0.2
BB29   <- [27]
  val?-           %29.0 = CastType           d     dn %27.1   <code->
  str$-           %29.1 = CallSafeBuiltin    wed   typeof(%29.0)    <str$->
  lgl$-           %29.2 = Eq                 d     %29.1, "language", elided   <lgl$->
  lgl$#-          %29.3 = CheckTrueFalse     e     %29.2
  void                    Branch                   %29.3 -> BB11 (if true) | BB7 (if false)
BB30   <- [27]
  prom-           %30.0 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p0 (!refl), e27.0
  val?^           %30.1 = CastType                 up %30.0
  fs              %30.2 = FrameState         R     0x55804e2fb8e0+32: [], env=e27.0
  env             e30.3 = (MkEnv)            l     x=%30.1, parent=R_BaseNamespace, context 0
  fs              %30.4 = FrameState         R     0x55804e7773a0+9: [], env=e30.3, next=%30.2
  fs              %30.5 = FrameState         R     0x55804e7ceee0+5(pr): [%27.1], env=e27.0, next=%30.4
  void                    Deopt              !v    %30.5, Typecheck@0x55804c75da98[Type#1], %27.1
BB11   <- [29]
  val?^ | miss    %11.0 = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %11.1 = Identical                %11.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %11.1 -> BB31 (if true) | BB32 (if false)
BB7   <- [29]
  (cls|spec|blt)  %7.0  = LdFun              !v    $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %7.1  = MkArg                    unboundValue, walkCode[0x55804e905d50]_p11, e27.0
  prom-           %7.2  = MkArg                    unboundValue, walkCode[0x55804e905d50]_p12, e27.0
  val?            %7.3  = Call               !v    %7.0(%7.1, %7.2) e27.0   <cls->
  (cls|spec|blt)  %7.4  = ChkFunction        e     %7.3
  lgl$#-          %7.5  = Identical                %7.4, function(e, w) <(rir::DispatchTable*)0x55804e0|...
  void                    Branch                   %7.5 -> BB35 (if true) | BB36 (if false)
BB31   <- [11]
  prom-           %31.0 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p4, e27.0
  val?^           %31.1 = CastType                 up %31.0
  val?            %31.2 = Extract2_1D        wed   %29.0, 1, elided   <sym->
  str$-           %31.3 = CallSafeBuiltin    wed   typeof(%31.2) 
  prom-           %31.4 = MkArg                    %31.3, walkCode[0x55804e905d50]_p8 (!refl), e27.0
  val?~           %31.5 = CastType                 up %31.4
  env             e31.6 = (MkEnv)            l     x=%31.5, table=%31.1, parent=R_BaseNamespace, context 0
  val?^           %31.7 = LdVar              eRd   table, e31.6
  val?            %31.8 = Force!<lazy>       !vr   %31.7,    <val?->
  lgl$#-          %31.9 = IsType                   %31.8 isA val?-
  void                    Branch                   %31.9 -> BB33 (if true) | BB34 (if false)
BB32   <- [11]
  fs              %32.0 = FrameState         R     0x55804e2fb8e0+32: [], env=e27.0
  prom-           %32.1 = MkArg                    %29.0, walkCode[0x55804e905d50]_p1 (!refl), e27.0
  val?~           %32.2 = CastType                 up %32.1
  env             e32.3 = (MkEnv)            l     x=%32.2, parent=R_BaseNamespace, context 0
  fs              %32.4 = FrameState         R     0x55804e7773a0+27: [%29.1], env=e32.3, next=%32.0
  void                    Deopt              !v    %32.4, CallTarget@0x55804c75da98[Call#4], %11.0
BB35   <- [7]
  val?^ | miss    %35.0 = LdVar              eR    character, <env 0x55804e627770>
  lgl$#-          %35.1 = Identical                %35.0, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %35.1 -> BB37 (if true) | BB38 (if false)
BB36   <- [7]
  void                    Nop                !     
  (cls|spec|blt)  %36.1 = %7.4
  dr              %36.2 = CallTarget@0x55804c75da98[Call#3]
  goto BB8
BB33   <- [31]
  val?-           %33.0 = CastType           d     dn %31.8
  val+            %33.1 = CallSafeBuiltin    wed   match(%31.3, %33.0, 0L, nil)    <int->
  lgl$#-          %33.2 = IsType                   %33.1 isA int-
  void                    Branch                   %33.2 -> BB39 (if true) | BB40 (if false)
BB34   <- [31]
  env             e34.0 = MaterializeEnv           , e31.6   <@?>
  prom-           %34.1 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p6, e34.0
  val?^           %34.2 = CastType                 up %34.1
  prom-           %34.3 = MkArg                    %31.3, walkCode[0x55804e905d50]_p10 (!refl), e34.0
  val?~           %34.4 = CastType                 up %34.3
  fs              %34.5 = FrameState         R     0x55804e2fb8e0+177: [], env=e27.0
  fs              %34.6 = FrameState         R     0x55804c50e320+54: [], env=e34.0, next=%34.5
  env             e34.7 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%34.2, x=%34.4, parent=R_BaseNamespace, context -1
  fs              %34.8 = FrameState         R     0x55804c6f5d40+23: [%31.3, %31.8], env=e34.7, next=%34.6
  void                    Deopt              !v    %34.8, Typecheck@0x55804c748cb0[Type#1], %31.8
BB37   <- [35]
  str-            %37.0 = CallSafeBuiltin    vwed  vector("character", 0)    <str->
  str-            %37.1 = %37.0
  goto BB10
BB38   <- [35]
  void                    Nop                !     
  val?^ | miss    %38.1 = %35.0
  dr              %38.2 = CallTarget@0x55804c75dbf8[Call#0]
  goto BB8
BB8   <- [36, 38]
  val?^ | miss    %8.0  = Phi                      %36.1:BB36, %38.1:BB38
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %36.2:BB36, %38.2:BB38
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55804e2fb8e0+92: [%7.3], env=e27.0
  void                    Deopt              !v    %8.4, %8.3, %8.1   !
BB39   <- [33]
  int-            %39.0 = CastType           d     dn %33.1
  lgl-            %39.1 = Gt                 wed   %39.0, 0L, elided   <lgl->
  lgl$#-          %39.2 = CheckTrueFalse     we    %39.1
  void                    Branch                   %39.2 -> BB17 (if true) | BB16 (if false)
BB40   <- [33]
  env             e40.0 = MaterializeEnv           , e31.6   <@?>
  prom-           %40.1 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p6, e40.0
  val?^           %40.2 = CastType                 up %40.1
  prom-           %40.3 = MkArg                    %31.3, walkCode[0x55804e905d50]_p10 (!refl), e40.0
  val?~           %40.4 = CastType                 up %40.3
  fs              %40.5 = FrameState         R     0x55804e2fb8e0+177: [], env=e27.0
  fs              %40.6 = FrameState         R     0x55804c50e320+54: [], env=e40.0, next=%40.5
  env             e40.7 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%40.2, x=%40.4, parent=R_BaseNamespace, context -1
  fs              %40.8 = FrameState         R     0x55804c6f5d40+69: [%33.1], env=e40.7, next=%40.6
  void                    Deopt              !v    %40.8, Typecheck@0x55804d540688[Type#2], %33.1
BB10   <- [37, 43, 45]
  val?            %10.0 = Phi                      %37.1:BB37, %45.1:BB45, %43.3:BB43
  val?            %10.1 = %10.0
  void                    Return             l     %10.1
BB17   <- [39]
  (cls|spec|blt)  %17.0 = LdFun              !v    $, <0x55804bee0c10>, e27.0
  prom-           %17.1 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p13, e27.0
  prom-           %17.2 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p14, e27.0
  val?            %17.3 = Call               !v    %17.0(%17.1, %17.2) e27.0   <cls->
  (cls|spec|blt)  %17.4 = ChkFunction        e     %17.3
  prom-           %17.5 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p15, e27.0
  prom-           %17.6 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p17, e27.0
  lgl$#-          %17.7 = Identical                %17.4, function(v, w) <(rir::DispatchTable*)0x55804e0|...
  void                    Branch                   %17.7 -> BB41 (if true) | BB42 (if false)
BB16   <- [39]
  (cls|spec|blt)  %16.0 = LdFun              !v    $, e27.0
  fs              %16.1 = FrameState         R     0x55804e2fb8e0+193: [%16.0], env=e27.0
  void                    Deopt              !v    %16.1, DeadCall@0x55804c75da98[Call#7], %16.0
BB41   <- [17]
  val?            %41.0 = StaticCall         !v    [0x55804e3ab670](%17.5, %17.6) e27.0   <nil->
  lgl$-           %41.1 = Is                       %41.0, NULL
  void                    StVar              lW    h, %41.0, e27.0
  val             %41.3 = ChkMissing         e     %41.0
  void                    Visible            v     
  lgl$-           %41.5 = Not                vd    %41.1, elided
  lgl$#-          %41.6 = CheckTrueFalse     e     %41.5
  lgl$#-          %41.7 = Identical                %41.3, function(e, w) <(rir::DispatchTable*)0x55804e9|...
  void                    Branch                   %41.6 -> BB25 (if true) | BB22 (if false)
BB42   <- [17]
  fs              %42.0 = FrameState         R     0x55804e2fb8e0+310: [%17.3], env=e27.0
  void                    Deopt              !v    %42.0, CallTarget@0x55804c75da98[Call#10], %17.4   !
BB25   <- [41]
  void                    Branch                   %41.7 -> BB43 (if true) | BB44 (if false)
BB22   <- [41]
  (cls|spec|blt)  %22.0 = LdFun              !     $, <0x55804bee0c10>, e27.0
  prom-           %22.1 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p20, e27.0
  prom-           %22.2 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p21, e27.0
  val?            %22.3 = Call               !     %22.0(%22.1, %22.2) e27.0   <cls->
  (cls|spec|blt)  %22.4 = ChkFunction        e     %22.3
  prom-           %22.5 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p22, e27.0
  prom-           %22.6 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p23, e27.0
  lgl$#-          %22.7 = Identical                %22.4, function(e, w) <(rir::DispatchTable*)0x55804e6|...
  void                    Branch                   %22.7 -> BB45 (if true) | BB46 (if false)
BB43   <- [25]
  prom-           %43.0 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p18, e27.0
  prom-           %43.1 = MkArg                    unboundValue, walkCode[0x55804e905d50]_p19, e27.0
  val?            %43.2 = StaticCall         !     h[0x55804e069d30](%43.0, %43.1) e27.0   <nil->
  val?            %43.3 = %43.2
  goto BB10
BB44   <- [25]
  fs              %44.0 = FrameState         R     0x55804e2fb8e0+362: [], env=e27.0
  void                    Deopt              !v    %44.0, CallTarget@0x55804c75da98[Call#14], %41.3   !
BB45   <- [22]
  val?            %45.0 = StaticCall         !     [0x55804e1e56a0](%22.5, %22.6) e27.0   <nil->
  val?            %45.1 = %45.0
  goto BB10
BB46   <- [22]
  fs              %46.0 = FrameState         R     0x55804e2fb8e0+425: [%22.3], env=e27.0
  void                    Deopt              !v    %46.0, CallTarget@0x55804c75da98[Call#13], %22.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("symbol", "character") e0.0   <str->
  void                    Return             l     %0.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     typeof, <0x55804e68e748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, walkCode[0x55804e905d50]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    leaf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, walkCode[0x55804e905d50]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ walkCode[0x55804e905d50]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
