
┌──────────────────────────────────────────────────────────────────────────────┐
│ walkCode[0x55804e2a35e0]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
walkCode[0x55804e2a35e0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %0.3 -> BB17 (if true) | BB18 (if false)
BB17   <- [0]
  env             e17.0 = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  val+            %17.1 = Force!<lazy>       !vr   %0.1,    <val?->
  str$-           %17.2 = CallSafeBuiltin    wed   typeof(%17.1)    <str$->
  void                    Visible            v     
  lgl$-           %17.4 = Eq                 vd    %17.2, "language", elided   <lgl$->
  lgl$#-          %17.5 = CheckTrueFalse     e     %17.4
  void                    Branch                   %17.5 -> BB7 (if true) | BB5 (if false)
BB18   <- [0]
  env             e18.0 = (MkEnv)            l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %18.1 = FrameState         R     0x55804e2fb8e0+0: [], env=e18.0
  void                    Deopt              !v    %18.1, CallTarget@0x55804c75da98[Call#1], %0.2
BB7   <- [17]
  val?^ | miss    %7.0  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %7.1  = Identical                %7.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %7.1 -> BB19 (if true) | BB20 (if false)
BB5   <- [17]
  (cls|spec|blt)  %5.0  = LdFun              !     $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %5.1  = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p1 (!refl), e17.0
  prom-           %5.2  = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p2, e17.0
  val?            %5.3  = Call               !     %5.0(%5.1, %5.2) e17.0   <cls->
  (cls|spec|blt)  %5.4  = ChkFunction        e     %5.3
  prom-           %5.5  = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p3, e17.0
  prom-           %5.6  = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p4, e17.0
  val?            %5.7  = Call               !     %5.4(%5.5, %5.6) e17.0   <str->
  val?            %5.8  = %5.7
  goto BB6
BB19   <- [7]
  lgl$#-          %19.0 = IsType                   %17.1 isA val?-
  void                    Branch                   %19.0 -> BB21 (if true) | BB22 (if false)
BB20   <- [7]
  void                    Nop                !     
  val?^ | miss    %20.1 = %7.0
  dr              %20.2 = CallTarget@0x55804c75da98[Call#4]
  goto BB3
BB6   <- [15, 5, 14]
  val?            %6.0  = Phi                      %5.8:BB5, %14.8:BB14, %15.4:BB15
  val?            %6.1  = %6.0
  void                    Return             l     %6.1
BB21   <- [19]
  val-            %21.0 = CastType           d     dn %17.1   <code->
  val?            %21.1 = Extract2_1D        wed   %21.0, 1, elided   <sym->
  str$-           %21.2 = CallSafeBuiltin    wed   typeof(%21.1) 
  prom-           %21.3 = MkArg                    %21.2, walkCode[0x55804e2a35e0]_p5 (!refl), e17.0
  val?~           %21.4 = CastType                 up %21.3
  (cls|spec|blt)  %21.5 = LdFun              !v    c, <0x55804bee1940>, <env 0x55804e699488>
  val?            %21.6 = Call               !v    %21.5("symbol", "character") e17.0   <str->
  prom-           %21.7 = MkArg                    %21.6, walkCode[0x55804e2a35e0]_p7 (!refl), e17.0
  val?~           %21.8 = CastType                 up %21.7
  lgl$#-          %21.9 = IsType                   %21.6 isA val?-
  void                    Branch                   %21.9 -> BB23 (if true) | BB24 (if false)
BB22   <- [19]
  void                    Nop                !     
  val+            %22.1 = %17.1
  dr              %22.2 = Typecheck@0x55804c75da98[Type#10]
  goto BB3
BB3   <- [20, 22]
  val?^ | miss    %3.0  = Phi                      %20.1:BB20, %22.1:BB22
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %20.2:BB20, %22.2:BB22
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55804e2fb8e0+32: [], env=e17.0
  prom-           %3.5  = MkArg                    %17.1, walkCode[0x55804e2a35e0]_p0 (!refl), e17.0
  val?~           %3.6  = CastType                 up %3.5
  env             e3.7  = (MkEnv)            l     x=%3.6, parent=R_BaseNamespace, context 0
  fs              %3.8  = FrameState         R     0x55804e7773a0+27: [%17.2], env=e3.7, next=%3.4
  void                    Deopt              !v    %3.8, %3.3, %3.1
BB23   <- [21]
  val?-           %23.0 = CastType           d     dn %21.6   <str->
  val+            %23.1 = CallSafeBuiltin    wed   match(%21.2, %23.0, 0L, nil)    <int->
  lgl$#-          %23.2 = IsType                   %23.1 isA int-
  void                    Branch                   %23.2 -> BB25 (if true) | BB26 (if false)
BB24   <- [21]
  env             e24.0 = (MkEnv)            l     x=%21.4, table=%21.8, parent=R_BaseNamespace, context 0
  env             e24.1 = MaterializeEnv           , e24.0   <@?>
  prom-           %24.2 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p20 (!refl), e24.1
  val?^           %24.3 = CastType                 up %24.2
  prom-           %24.4 = MkArg                    %21.2, walkCode[0x55804e2a35e0]_p19 (!refl), e24.1
  val?~           %24.5 = CastType                 up %24.4
  fs              %24.6 = FrameState         R     0x55804e2fb8e0+177: [], env=e17.0
  fs              %24.7 = FrameState         R     0x55804c50e320+54: [], env=e24.1, next=%24.6
  env             e24.8 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%24.3, x=%24.5, parent=R_BaseNamespace, context -1
  fs              %24.9 = FrameState         R     0x55804c6f5d40+23: [%21.2, %21.6], env=e24.8, next=%24.7
  void                    Deopt              !v    %24.9, Typecheck@0x55804c748cb0[Type#1], %21.6   !
BB25   <- [23]
  int-            %25.0 = CastType           d     dn %23.1
  lgl-            %25.1 = Gt                 wed   %25.0, 0L, elided   <lgl->
  lgl$#-          %25.2 = CheckTrueFalse     we    %25.1
  void                    Branch                   %25.2 -> BB13 (if true) | BB12 (if false)
BB26   <- [23]
  env             e26.0 = (MkEnv)            l     x=%21.4, table=%21.8, parent=R_BaseNamespace, context 0
  env             e26.1 = MaterializeEnv           , e26.0   <@?>
  prom-           %26.2 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p20 (!refl), e26.1
  val?^           %26.3 = CastType                 up %26.2
  prom-           %26.4 = MkArg                    %21.2, walkCode[0x55804e2a35e0]_p19 (!refl), e26.1
  val?~           %26.5 = CastType                 up %26.4
  fs              %26.6 = FrameState         R     0x55804e2fb8e0+177: [], env=e17.0
  fs              %26.7 = FrameState         R     0x55804c50e320+54: [], env=e26.1, next=%26.6
  env             e26.8 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%26.3, x=%26.5, parent=R_BaseNamespace, context -1
  fs              %26.9 = FrameState         R     0x55804c6f5d40+69: [%23.1], env=e26.8, next=%26.7
  void                    Deopt              !v    %26.9, Typecheck@0x55804d540688[Type#2], %23.1   !
BB13   <- [25]
  (cls|spec|blt)  %13.0 = LdFun              !v    $, <0x55804bee0c10>, e17.0
  prom-           %13.1 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p8, e17.0
  prom-           %13.2 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p9, e17.0
  val?            %13.3 = Call               !v    %13.0(%13.1, %13.2) e17.0   <cls->
  (cls|spec|blt)  %13.4 = ChkFunction        e     %13.3
  prom-           %13.5 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p10, e17.0
  prom-           %13.6 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p12, e17.0
  val?            %13.7 = Call               !v    %13.4(%13.5, %13.6) e17.0   <(nil|cls)->
  lgl$-           %13.8 = Is                       %13.7, NULL
  void                    StVar              lW    h, %13.7, e17.0
  val             %13.10 = ChkMissing         e     %13.7
  void                    Visible            v     
  lgl$-           %13.12 = Not                vd    %13.8, elided
  lgl$#-          %13.13 = CheckTrueFalse     e     %13.12
  void                    Branch                   %13.13 -> BB15 (if true) | BB14 (if false)
BB12   <- [25]
  (cls|spec|blt)  %12.0 = LdFun              !v    $, e17.0
  fs              %12.1 = FrameState         R     0x55804e2fb8e0+193: [%12.0], env=e17.0
  void                    Deopt              !v    %12.1, DeadCall@0x55804c75da98[Call#7], %12.0   !
BB15   <- [13]
  (cls|spec|blt)  %15.0 = LdFun              !     h, e17.0
  prom-           %15.1 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p17, e17.0
  prom-           %15.2 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p18, e17.0
  val?            %15.3 = Call               !     %15.0(%15.1, %15.2) e17.0   <(nil|str)->
  val?            %15.4 = %15.3
  goto BB6
BB14   <- [13]
  (cls|spec|blt)  %14.0 = LdFun              !     $, <0x55804bee0c10>, e17.0
  prom-           %14.1 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p13, e17.0
  prom-           %14.2 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p14, e17.0
  val?            %14.3 = Call               !     %14.0(%14.1, %14.2) e17.0   <cls->
  (cls|spec|blt)  %14.4 = ChkFunction        e     %14.3
  prom-           %14.5 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p15, e17.0
  prom-           %14.6 = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p16, e17.0
  val?            %14.7 = Call               !     %14.4(%14.5, %14.6) e17.0   <nil->
  val?            %14.8 = %14.7
  goto BB6
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    leaf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     typeof, <0x55804e68e748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("symbol", "character") e0.0   <str->
  void                    Return             l     %0.2
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, walkCode[0x55804e2a35e0]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3

│ walkCode[0x55804e2a35e0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
