
┌──────────────────────────────────────────────────────────────────────────────┐
│ walkCode[0x55804eb247a0]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
walkCode[0x55804eb247a0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %0.3 -> BB19 (if true) | BB20 (if false)
BB19   <- [0]
  env             e19.0 = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  val?            %19.1 = Force!<lazy>       !vrd  %0.1,    <val?->
  lgl$#-          %19.2 = IsType                   %19.1 isA val?-
  void                    Branch                   %19.2 -> BB21 (if true) | BB22 (if false)
BB20   <- [0]
  env             e20.0 = (MkEnv)            l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %20.1 = FrameState         R     0x55804e2fb8e0+0: [], env=e20.0
  void                    Deopt              !v    %20.1, CallTarget@0x55804c75da98[Call#1], %0.2
BB21   <- [19]
  val?-           %21.0 = CastType           d     dn %19.1   <code->
  str$-           %21.1 = CallSafeBuiltin    wed   typeof(%21.0)    <str$->
  void                    Visible            v     
  lgl$-           %21.3 = Eq                 vd    %21.1, "language", elided   <lgl$->
  lgl$#-          %21.4 = CheckTrueFalse     e     %21.3
  void                    Branch                   %21.4 -> BB9 (if true) | BB7 (if false)
BB22   <- [19]
  prom-           %22.0 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p0 (!refl), e19.0
  val?^           %22.1 = CastType                 up %22.0
  fs              %22.2 = FrameState         R     0x55804e2fb8e0+32: [], env=e19.0
  env             e22.3 = (MkEnv)            l     x=%22.1, parent=R_BaseNamespace, context 0
  fs              %22.4 = FrameState         R     0x55804e7773a0+9: [], env=e22.3, next=%22.2
  fs              %22.5 = FrameState         R     0x55804e7ceee0+5(pr): [%19.1], env=e19.0, next=%22.4
  void                    Deopt              !v    %22.5, Typecheck@0x55804c75da98[Type#1], %19.1
BB9   <- [21]
  val?^ | miss    %9.0  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %9.1  = Identical                %9.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %9.1 -> BB23 (if true) | BB24 (if false)
BB7   <- [21]
  (cls|spec|blt)  %7.0  = LdFun              !     $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %7.1  = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p11, e19.0
  prom-           %7.2  = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p12, e19.0
  val?            %7.3  = Call               !     %7.0(%7.1, %7.2) e19.0   <cls->
  (cls|spec|blt)  %7.4  = ChkFunction        e     %7.3
  prom-           %7.5  = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p13, e19.0
  prom-           %7.6  = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p14, e19.0
  val?            %7.7  = Call               !     %7.4(%7.5, %7.6) e19.0   <str->
  val?            %7.8  = %7.7
  goto BB8
BB23   <- [9]
  val?            %23.0 = Extract2_1D        wed   %21.0, 1, elided   <sym->
  str$-           %23.1 = CallSafeBuiltin    wed   typeof(%23.0) 
  prom-           %23.2 = MkArg                    %23.1, walkCode[0x55804eb247a0]_p8 (!refl), e19.0
  val?~           %23.3 = CastType                 up %23.2
  (cls|spec|blt)  %23.4 = LdFun              !v    c, <0x55804bee1940>, <env 0x55804e699488>
  val?            %23.5 = Call               !v    %23.4("symbol", "character") e19.0   <str->
  prom-           %23.6 = MkArg                    %23.5, walkCode[0x55804eb247a0]_p4 (!refl), e19.0
  val?~           %23.7 = CastType                 up %23.6
  lgl$#-          %23.8 = IsType                   %23.5 isA val?-
  void                    Branch                   %23.8 -> BB25 (if true) | BB26 (if false)
BB24   <- [9]
  fs              %24.0 = FrameState         R     0x55804e2fb8e0+32: [], env=e19.0
  prom-           %24.1 = MkArg                    %21.0, walkCode[0x55804eb247a0]_p1 (!refl), e19.0
  val?~           %24.2 = CastType                 up %24.1
  env             e24.3 = (MkEnv)            l     x=%24.2, parent=R_BaseNamespace, context 0
  fs              %24.4 = FrameState         R     0x55804e7773a0+27: [%21.1], env=e24.3, next=%24.0
  void                    Deopt              !v    %24.4, CallTarget@0x55804c75da98[Call#4], %9.0
BB8   <- [7, 17, 16]
  val?            %8.0  = Phi                      %7.8:BB7, %16.8:BB16, %17.4:BB17
  val?            %8.1  = %8.0
  void                    Return             l     %8.1
BB25   <- [23]
  val?-           %25.0 = CastType           d     dn %23.5   <str->
  val+            %25.1 = CallSafeBuiltin    wed   match(%23.1, %25.0, 0L, nil)    <int->
  lgl$#-          %25.2 = IsType                   %25.1 isA int-
  void                    Branch                   %25.2 -> BB27 (if true) | BB28 (if false)
BB26   <- [23]
  env             e26.0 = (MkEnv)            l     x=%23.3, table=%23.7, parent=R_BaseNamespace, context 0
  env             e26.1 = MaterializeEnv           , e26.0   <@?>
  prom-           %26.2 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p6 (!refl), e26.1
  val?^           %26.3 = CastType                 up %26.2
  prom-           %26.4 = MkArg                    %23.1, walkCode[0x55804eb247a0]_p10 (!refl), e26.1
  val?~           %26.5 = CastType                 up %26.4
  fs              %26.6 = FrameState         R     0x55804e2fb8e0+177: [], env=e19.0
  fs              %26.7 = FrameState         R     0x55804c50e320+54: [], env=e26.1, next=%26.6
  env             e26.8 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%26.3, x=%26.5, parent=R_BaseNamespace, context -1
  fs              %26.9 = FrameState         R     0x55804c6f5d40+23: [%23.1, %23.5], env=e26.8, next=%26.7
  void                    Deopt              !v    %26.9, Typecheck@0x55804c748cb0[Type#1], %23.5   !
BB27   <- [25]
  int-            %27.0 = CastType           d     dn %25.1
  lgl-            %27.1 = Gt                 wed   %27.0, 0L, elided   <lgl->
  lgl$#-          %27.2 = CheckTrueFalse     we    %27.1
  void                    Branch                   %27.2 -> BB15 (if true) | BB14 (if false)
BB28   <- [25]
  env             e28.0 = (MkEnv)            l     x=%23.3, table=%23.7, parent=R_BaseNamespace, context 0
  env             e28.1 = MaterializeEnv           , e28.0   <@?>
  prom-           %28.2 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p6 (!refl), e28.1
  val?^           %28.3 = CastType                 up %28.2
  prom-           %28.4 = MkArg                    %23.1, walkCode[0x55804eb247a0]_p10 (!refl), e28.1
  val?~           %28.5 = CastType                 up %28.4
  fs              %28.6 = FrameState         R     0x55804e2fb8e0+177: [], env=e19.0
  fs              %28.7 = FrameState         R     0x55804c50e320+54: [], env=e28.1, next=%28.6
  env             e28.8 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%28.3, x=%28.5, parent=R_BaseNamespace, context -1
  fs              %28.9 = FrameState         R     0x55804c6f5d40+69: [%25.1], env=e28.8, next=%28.7
  void                    Deopt              !v    %28.9, Typecheck@0x55804d540688[Type#2], %25.1   !
BB15   <- [27]
  (cls|spec|blt)  %15.0 = LdFun              !v    $, <0x55804bee0c10>, e19.0
  prom-           %15.1 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p15, e19.0
  prom-           %15.2 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p16, e19.0
  val?            %15.3 = Call               !v    %15.0(%15.1, %15.2) e19.0   <cls->
  (cls|spec|blt)  %15.4 = ChkFunction        e     %15.3
  prom-           %15.5 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p17, e19.0
  prom-           %15.6 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p19, e19.0
  val?            %15.7 = Call               !v    %15.4(%15.5, %15.6) e19.0   <(nil|cls)->
  lgl$-           %15.8 = Is                       %15.7, NULL
  void                    StVar              lW    h, %15.7, e19.0
  val             %15.10 = ChkMissing         e     %15.7
  void                    Visible            v     
  lgl$-           %15.12 = Not                vd    %15.8, elided
  lgl$#-          %15.13 = CheckTrueFalse     e     %15.12
  void                    Branch                   %15.13 -> BB17 (if true) | BB16 (if false)
BB14   <- [27]
  (cls|spec|blt)  %14.0 = LdFun              !v    $, e19.0
  fs              %14.1 = FrameState         R     0x55804e2fb8e0+193: [%14.0], env=e19.0
  void                    Deopt              !v    %14.1, DeadCall@0x55804c75da98[Call#7], %14.0   !
BB17   <- [15]
  (cls|spec|blt)  %17.0 = LdFun              !     h, e19.0
  prom-           %17.1 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p20, e19.0
  prom-           %17.2 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p21, e19.0
  val?            %17.3 = Call               !     %17.0(%17.1, %17.2) e19.0   <(nil|str)->
  val?            %17.4 = %17.3
  goto BB8
BB16   <- [15]
  (cls|spec|blt)  %16.0 = LdFun              !     $, <0x55804bee0c10>, e19.0
  prom-           %16.1 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p22, e19.0
  prom-           %16.2 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p23, e19.0
  val?            %16.3 = Call               !     %16.0(%16.1, %16.2) e19.0   <cls->
  (cls|spec|blt)  %16.4 = ChkFunction        e     %16.3
  prom-           %16.5 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p24, e19.0
  prom-           %16.6 = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p25, e19.0
  val?            %16.7 = Call               !     %16.4(%16.5, %16.6) e19.0   <nil->
  val?            %16.8 = %16.7
  goto BB8
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("symbol", "character") e0.0   <str->
  void                    Return             l     %0.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     typeof, <0x55804e68e748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    leaf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, walkCode[0x55804eb247a0]_p18, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ walkCode[0x55804eb247a0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
