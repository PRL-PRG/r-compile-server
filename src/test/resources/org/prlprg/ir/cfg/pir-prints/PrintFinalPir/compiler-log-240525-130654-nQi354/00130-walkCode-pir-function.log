
┌──────────────────────────────────────────────────────────────────────────────┐
│ walkCode[0x55804ebf8b70]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1                       │
│ Properties:                                                                  │
├────── Final PIR Version
walkCode[0x55804ebf8b70]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %0.3 -> BB23 (if true) | BB24 (if false)
BB23   <- [0]
  env             e23.0 = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  val?            %23.1 = Force!<lazy>       !v    %0.1, e23.0   <val?->
  lgl$#-          %23.2 = IsType                   %23.1 isA val?-
  void                    Branch                   %23.2 -> BB25 (if true) | BB26 (if false)
BB24   <- [0]
  env             e24.0 = (MkEnv)            l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %24.1 = FrameState         R     0x55804e2fb8e0+0: [], env=e24.0
  void                    Deopt              !v    %24.1, CallTarget@0x55804c75da98[Call#1], %0.2
BB25   <- [23]
  val?-           %25.0 = CastType           d     dn %23.1
  str$-           %25.1 = CallSafeBuiltin    wed   typeof(%25.0)    <str$->
  void                    Visible            v     
  lgl$-           %25.3 = Eq                 vd    %25.1, "language", elided   <lgl$->
  lgl$#-          %25.4 = CheckTrueFalse     e     %25.3
  void                    Branch                   %25.4 -> BB9 (if true) | BB7 (if false)
BB26   <- [23]
  prom-           %26.0 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p0, e23.0
  val?^           %26.1 = CastType                 up %26.0
  fs              %26.2 = FrameState         R     0x55804e2fb8e0+32: [], env=e23.0
  env             e26.3 = (MkEnv)            l     x=%26.1, parent=R_BaseNamespace, context 0
  fs              %26.4 = FrameState         R     0x55804e7773a0+9: [], env=e26.3, next=%26.2
  fs              %26.5 = FrameState         R     0x55804e7ceee0+5(pr): [%23.1], env=e23.0, next=%26.4
  void                    Deopt              !v    %26.5, Typecheck@0x55804c75da98[Type#1], %23.1   !
BB9   <- [25]
  val?^ | miss    %9.0  = LdVar              eR    %in%, e23.0
  lgl$#-          %9.1  = Identical                %9.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %9.1 -> BB27 (if true) | BB28 (if false)
BB7   <- [25]
  (cls|spec|blt)  %7.0  = LdFun              !     $, <0x55804bee0c10>, e23.0
  prom-           %7.1  = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p1, e23.0
  prom-           %7.2  = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p2, e23.0
  val?            %7.3  = Call               !     %7.0(%7.1, %7.2) e23.0   <cls->
  (cls|spec|blt)  %7.4  = ChkFunction        e     %7.3
  prom-           %7.5  = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p3, e23.0
  prom-           %7.6  = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p4, e23.0
  val?            %7.7  = Call               !     %7.4(%7.5, %7.6) e23.0   <str->
  val?            %7.8  = %7.7
  goto BB8
BB27   <- [9]
  prom-           %27.0 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p5, e23.0
  prom-           %27.1 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p7, e23.0
  val?^           %27.2 = CastType                 up %27.1
  val?^           %27.3 = CastType                 up %27.0
  env             e27.4 = MkEnv              l     x=%27.3, table=%27.2, parent=R_BaseNamespace, context 0
  prom-           %27.5 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p20, e27.4
  val?^           %27.6 = CastType                 up %27.5
  val?^ | miss    %27.7 = LdVar              eR    typeof, e23.0
  lgl$#-          %27.8 = Identical                %27.7, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %27.8 -> BB29 (if true) | BB30 (if false)
BB28   <- [9]
  void                    Nop                !     
  val?^ | miss    %28.1 = %9.0
  dr              %28.2 = CallTarget@0x55804c75da98[Call#4]
  goto BB5
BB8   <- [7, 21, 20]
  val?            %8.0  = Phi                      %7.8:BB7, %20.8:BB20, %21.4:BB21
  val?            %8.1  = %8.0
  void                    Return             l     %8.1
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    e, e23.0
  val?            %29.1 = Force!<wrapped>    !v    %29.0, e23.0   <code->
  lgl$#-          %29.2 = IsType                   %29.1 isA val?-
  void                    Branch                   %29.2 -> BB31 (if true) | BB32 (if false)
BB30   <- [27]
  void                    Nop                !     
  val?^ | miss    %30.1 = %27.7
  dr              %30.2 = CallTarget@0x55804c75da98[Call#5]
  goto BB5
BB5   <- [28, 30]
  val?^ | miss    %5.0  = Phi                      %28.1:BB28, %30.1:BB30
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %28.2:BB28, %30.2:BB30
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55804e2fb8e0+32: [], env=e23.0
  prom-           %5.5  = MkArg                    %25.0, walkCode[0x55804ebf8b70]_p0 (!refl), e23.0
  val?~           %5.6  = CastType                 up %5.5
  env             e5.7  = (MkEnv)            l     x=%5.6, parent=R_BaseNamespace, context 0
  fs              %5.8  = FrameState         R     0x55804e7773a0+27: [%25.1], env=e5.7, next=%5.4
  void                    Deopt              !v    %5.8, %5.3, %5.1   !
BB31   <- [29]
  val?-           %31.0 = CastType           d     dn %29.1   <code->
  val?            %31.1 = Extract2_1D        wed   %31.0, 1, elided   <sym->
  str$-           %31.2 = CallSafeBuiltin    wed   typeof(%31.1) 
  prom-           %31.3 = MkArg                    %31.2, walkCode[0x55804ebf8b70]_p5 (!refl), e23.0
  val?~           %31.4 = CastType                 up %31.3
  void                    StArg              lW    x, %31.4, e27.4
  prom-           %31.6 = MkArg                    %31.2, walkCode[0x55804ebf8b70]_p19 (!refl), e27.4
  val?~           %31.7 = CastType                 up %31.6
  env             e31.8 = (MkEnv)            l     x=%31.7, table=%27.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %31.9 = IsEnvStub          R     , e31.8
  void                    Branch                   %31.9 -> BB33 (if true) | BB34 (if false)
BB32   <- [29]
  prom-           %32.0 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p6, e23.0
  val?^           %32.1 = CastType                 up %32.0
  prom-           %32.2 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p19, e27.4
  val?^           %32.3 = CastType                 up %32.2
  fs              %32.4 = FrameState         R     0x55804e2fb8e0+177: [], env=e23.0
  fs              %32.5 = FrameState         R     0x55804c50e320+54: [], env=e27.4, next=%32.4
  env             e32.6 = (MkEnv)            l     x=%32.3, table=%27.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %32.7 = FrameState         R     0x55804c6f5d40+9: [], env=e32.6, next=%32.5
  fs              %32.8 = FrameState         R     0x55804c50ebc0+5(pr): [], env=e27.4, next=%32.7
  fs              %32.9 = FrameState         R     0x55804e3124a0+32(pr): [], env=e23.0, next=%32.8
  env             e32.10 = (MkEnv)            l     x=%32.1, parent=R_BaseNamespace, context 0
  fs              %32.11 = FrameState         R     0x55804e7773a0+9: [], env=e32.10, next=%32.9
  fs              %32.12 = FrameState         R     0x55804e3ec7b0+5(pr): [%29.1], env=e23.0, next=%32.11
  void                    Deopt              !v    %32.12, Typecheck@0x55804c75da98[Type#10], %29.1   !
BB33   <- [31]
  val?            %33.0 = Force!<lazy>       !vL   %27.2, e31.8   <val?->
  prom-           %33.1 = MkArg                    %33.0, walkCode[0x55804ebf8b70]_p20 (!refl), e27.4
  val?~           %33.2 = CastType                 up %33.1
  void                    StArg              lWd   table, %33.2, e31.8
  lgl$#-          %33.4 = IsType                   %33.0 isA val?-
  lgl$#-          %33.5 = IsEnvStub          R     , e31.8
  void                    Branch                   %33.5 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  fs              %34.0 = FrameState         R     0x55804e2fb8e0+177: [], env=e23.0
  fs              %34.1 = FrameState         R     0x55804c50e320+54: [], env=e27.4, next=%34.0
  env             e34.2 = (MkEnv)            l     x=%31.7, table=%27.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %34.3 = FrameState         R     0x55804c6f5d40+9: [%31.2], env=e34.2, next=%34.1
  void                    Deopt              !v    %34.3, EnvStubMaterialized@0x55804c748cb0[Call#unknown], e31.8   !
BB35   <- [33]
  void                    Branch                   %33.4 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  env             e36.1 = e31.8
  dr              %36.2 = EnvStubMaterialized@0x55804c748cb0[Call#unknown]
  goto BB14
BB37   <- [35]
  val?-           %37.0 = CastType           d     dn %33.0
  val+            %37.1 = CallSafeBuiltin    wed   match(%31.2, %37.0, 0L, nil)    <int->
  lgl$#-          %37.2 = IsType                   %37.1 isA int-
  void                    Branch                   %37.2 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  void                    Nop                !     
  val?            %38.1 = %33.0
  dr              %38.2 = Typecheck@0x55804c748cb0[Type#1]
  goto BB14
BB14   <- [36, 38]
  val?^ | miss    %14.0 = Phi                      e36.1:BB36, %38.1:BB38
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %36.2:BB36, %38.2:BB38
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55804e2fb8e0+177: [], env=e23.0
  fs              %14.5 = FrameState         R     0x55804c50e320+54: [], env=e27.4, next=%14.4
  fs              %14.6 = FrameState         R     0x55804c6f5d40+23: [%31.2, %33.0], env=e31.8, next=%14.5
  void                    Deopt              !v    %14.6, %14.3, %14.1   !
BB39   <- [37]
  int-            %39.0 = CastType           d     dn %37.1
  lgl-            %39.1 = Gt                 wed   %39.0, 0L, elided   <lgl->
  lgl$#-          %39.2 = CheckTrueFalse     we    %39.1
  void                    Branch                   %39.2 -> BB19 (if true) | BB18 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x55804e2fb8e0+177: [], env=e23.0
  fs              %40.1 = FrameState         R     0x55804c50e320+54: [], env=e27.4, next=%40.0
  fs              %40.2 = FrameState         R     0x55804c6f5d40+69: [%37.1], env=e31.8, next=%40.1
  void                    Deopt              !v    %40.2, Typecheck@0x55804d540688[Type#2], %37.1   !
BB19   <- [39]
  (cls|spec|blt)  %19.0 = LdFun              !v    $, <0x55804bee0c10>, e23.0
  prom-           %19.1 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p8, e23.0
  prom-           %19.2 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p9, e23.0
  val?            %19.3 = Call               !v    %19.0(%19.1, %19.2) e23.0   <cls->
  (cls|spec|blt)  %19.4 = ChkFunction        e     %19.3
  prom-           %19.5 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p10, e23.0
  prom-           %19.6 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p12, e23.0
  val?            %19.7 = Call               !v    %19.4(%19.5, %19.6) e23.0   <(nil|cls)->
  lgl$-           %19.8 = Is                       %19.7, NULL
  void                    StVar              lW    h, %19.7, e23.0
  val             %19.10 = ChkMissing         e     %19.7
  void                    Visible            v     
  lgl$-           %19.12 = Not                vd    %19.8, elided
  lgl$#-          %19.13 = CheckTrueFalse     e     %19.12
  void                    Branch                   %19.13 -> BB21 (if true) | BB20 (if false)
BB18   <- [39]
  (cls|spec|blt)  %18.0 = LdFun              !v    $, e23.0
  fs              %18.1 = FrameState         R     0x55804e2fb8e0+193: [%18.0], env=e23.0
  void                    Deopt              !v    %18.1, DeadCall@0x55804c75da98[Call#7], %18.0   !
BB21   <- [19]
  (cls|spec|blt)  %21.0 = LdFun              !     h, e23.0
  prom-           %21.1 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p17, e23.0
  prom-           %21.2 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p18, e23.0
  val?            %21.3 = Call               !     %21.0(%21.1, %21.2) e23.0   <(nil|str)->
  val?            %21.4 = %21.3
  goto BB8
BB20   <- [19]
  (cls|spec|blt)  %20.0 = LdFun              !     $, <0x55804bee0c10>, e23.0
  prom-           %20.1 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p13, e23.0
  prom-           %20.2 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p14, e23.0
  val?            %20.3 = Call               !     %20.0(%20.1, %20.2) e23.0   <cls->
  (cls|spec|blt)  %20.4 = ChkFunction        e     %20.3
  prom-           %20.5 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p15, e23.0
  prom-           %20.6 = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p16, e23.0
  val?            %20.7 = Call               !     %20.4(%20.5, %20.6) e23.0   <nil->
  val?            %20.8 = %20.7
  goto BB8
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    leaf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     typeof, <0x55804e68e748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("symbol", "character") e0.0   <str->
  void                    Return             l     %0.2
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, walkCode[0x55804ebf8b70]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3

│ walkCode[0x55804ebf8b70]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
