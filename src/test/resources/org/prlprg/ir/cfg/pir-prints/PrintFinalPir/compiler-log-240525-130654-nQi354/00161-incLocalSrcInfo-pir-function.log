
┌──────────────────────────────────────────────────────────────────────────────┐
│ incLocalSrcInfo[0x55804e441c60]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
incLocalSrcInfo[0x55804e441c60]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %0.3 -> BB42 (if true) | BB43 (if false)
BB42   <- [0]
  env             e42.0 = MkEnv              l     vn=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %42.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p0, e42.0
  prom-           %42.2 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p1, e42.0
  ct              %42.3 = PushContext        lCL   %42.1, %42.2, getLocalUsageEntry(vn, w), function(vn, w) <(rir::DispatchTable*)0x55804e|..., e42.0
  val?^           %42.4 = CastType                 up %42.2
  val?^           %42.5 = CastType                 up %42.1
  val?^ | miss    %42.6 = LdVar              eR    findOwnerEnv, <env 0x55804e699488>
  lgl$#-          %42.7 = Identical                %42.6, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Branch                   %42.7 -> BB44 (if true) | BB45 (if false)
BB43   <- [0]
  env             e43.0 = (MkEnv)            l     vn=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %43.1 = FrameState         R     0x55804ed682c0+0: [], env=e43.0
  void                    Deopt              !v    %43.1, CallTarget@0x55804eaea788[Call#0], %0.2
BB44   <- [42]
  env             e44.0 = MkEnv              l     vn=%42.5, w=%42.4, parent=<env 0x55804e699488>, context 1
  prom-           %44.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p12, e44.0
  prom-           %44.2 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p13, e44.0
  prom-           %44.3 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p16, e44.0
  prom-           %44.4 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p19, e44.0
  val?            %44.5 = StaticCall         !v    findOwnerEnv[0x55804e5e5550](%44.1, %44.2, %44.3, %44.4) { 0 1 2n 3n } e44.0   <env+>
  void                    StVar              lW    env, %44.5, e44.0
  val?^ | miss    %44.7 = LdVar              eR    is.baseenv, e44.0
  lgl$#-          %44.8 = Identical                %44.7, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %44.8 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  env             e45.1 = (MkEnv)            l     vn=%42.5, w=%42.4, parent=<env 0x55804e699488>, context 1
  fs              %45.2 = FrameState         R     0x55804e1e4250+0: [], env=e45.1, next=%45.0
  void                    Deopt              !v    %45.2, CallTarget@0x55804eaea998[Call#0], %42.6   !
BB46   <- [44]
  prom-           %46.0 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p20 (!refl), e44.0
  ct              %46.1 = PushContext        lCL   %46.0, is.baseenv(env), function(e) <(rir::DispatchTable*)0x55804e41e7|..., e44.0
  val?^           %46.2 = CastType                 up %46.0
  val?^ | miss    %46.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %46.4 = Identical                %46.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %46.4 -> BB48 (if true) | BB49 (if false)
BB47   <- [44]
  fs              %47.0 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  fs              %47.1 = FrameState         R     0x55804e1e4250+77: [], env=e44.0, next=%47.0
  void                    Deopt              !v    %47.1, CallTarget@0x55804eaea998[Call#3], %44.7   !
BB48   <- [46]
  env             e48.0 = MkEnv              l     e=%46.2, parent=<env 0x55804e699488>, context 1
  prom-           %48.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p26, e48.0
  prom-           %48.2 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p27, e48.0
  ct              %48.3 = PushContext        lCL   %48.1, %48.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e48.0
  val?^           %48.4 = CastType                 up %48.2
  val?^           %48.5 = CastType                 up %48.1
  env             e48.6 = MkEnv              l     x=%48.5, y=%48.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %48.7 = Force!<lazy>       !vL   %48.5, e48.6   <val?+>
  val?            %48.8 = Force!<lazy>       !vL   %48.4, e48.6   <val?+>
  val?            %48.9 = CallBuiltin        !v    identical(%48.7, %48.8, true, true, true, true, false, true) e48.6
  val?            %48.10 = PopContext         C     %48.9, %48.3   <lgl$->
  lgl$#-          %48.11 = IsType                   %48.10 isA lgl$-
  void                    Branch                   %48.11 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  fs              %49.0 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  fs              %49.1 = FrameState         R     0x55804e1e4250+109: [], env=e44.0, next=%49.0
  env             e49.2 = (MkEnv)            l     e=%46.2, parent=<env 0x55804e699488>, context 1
  fs              %49.3 = FrameState         R     0x55804eb37490+0: [], env=e49.2, next=%49.1
  void                    Deopt              !v    %49.3, CallTarget@0x55804ea246f8[Call#0], %46.3   !
BB50   <- [48]
  lgl$-           %50.0 = CastType           d     dn %48.10
  val?            %50.1 = PopContext         C     %50.0, %46.1   <lgl$->
  lgl$#-          %50.2 = IsType                   %50.1 isA lgl$-
  void                    Branch                   %50.2 -> BB52 (if true) | BB53 (if false)
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  fs              %51.1 = FrameState         R     0x55804e1e4250+109: [], env=e44.0, next=%51.0
  fs              %51.2 = FrameState         R     0x55804eb37490+37: [%48.10], env=e48.0, next=%51.1
  void                    Deopt              !v    %51.2, Typecheck@0x55804ea246f8[Type#2], %48.10   !
BB52   <- [50]
  lgl$-           %52.0 = CastType           d     dn %50.1
  lgl$#-          %52.1 = CheckTrueFalse     e     %52.0
  void                    Branch                   %52.1 -> BB40 (if true) | BB13 (if false)
BB53   <- [50]
  void                    Nop                !     
  val?            %53.1 = %50.1
  dr              %53.2 = Typecheck@0x55804eaea998[Type#10]
  goto BB11
BB40   <- [52]
  fs              %40.0 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  (cls|spec|blt)  %40.1 = LdFun              !v    stop, e44.0
  fs              %40.2 = FrameState         R     0x55804e1e4250+130: [%40.1], env=e44.0, next=%40.0
  void                    Deopt              !v    %40.2, DeadCall@0x55804eaea998[Call#4], %40.1   !
BB13   <- [52]
  val?^ | miss    %13.0 = LdVar              eR    identical, e44.0
  lgl$#-          %13.1 = Identical                %13.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %13.1 -> BB54 (if true) | BB55 (if false)
BB11   <- [53, 55]
  val?^ | miss    %11.0 = Phi                      %53.1:BB53, %55.1:BB55
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %53.2:BB53, %55.2:BB55
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  fs              %11.5 = FrameState         R     0x55804e1e4250+109: [%50.1], env=e44.0, next=%11.4
  void                    Deopt              !v    %11.5, %11.3, %11.1   !
BB54   <- [13]
  prom-           %54.0 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p21, e44.0
  prom-           %54.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p22, e44.0
  ct              %54.2 = PushContext        lCL   %54.0, %54.1, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e44.0
  val?^           %54.3 = CastType                 up %54.1
  val?^           %54.4 = CastType                 up %54.0
  env             e54.5 = MkEnv              l     x=%54.4, y=%54.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %54.6 = Force!<lazy>       !vL   %54.4, e54.5   <val?+>
  val?            %54.7 = Force!<lazy>       !vL   %54.3, e54.5   <val?+>
  val?            %54.8 = CallBuiltin        !v    identical(%54.6, %54.7, true, true, true, true, false, true) e54.5
  val?            %54.9 = PopContext         C     %54.8, %54.2   <lgl$->
  lgl$#-          %54.10 = IsType                   %54.9 isA lgl$-
  void                    Branch                   %54.10 -> BB56 (if true) | BB57 (if false)
BB55   <- [13]
  void                    Nop                !     
  val?^ | miss    %55.1 = %13.0
  dr              %55.2 = CallTarget@0x55804eaea998[Call#5]
  goto BB11
BB56   <- [54]
  lgl$-           %56.0 = CastType           d     dn %54.9
  lgl$-           %56.1 = Not                d     %56.0, elided
  lgl$#-          %56.2 = CheckTrueFalse     e     %56.1
  void                    Branch                   %56.2 -> BB39 (if true) | BB16 (if false)
BB57   <- [54]
  void                    Nop                !     
  val?            %57.1 = %54.9
  dr              %57.2 = Typecheck@0x55804eaea998[Type#14]
  goto BB14
BB39   <- [56]
  fs              %39.0 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  (cls|spec|blt)  %39.1 = LdFun              !v    stop, e44.0
  fs              %39.2 = FrameState         R     0x55804e1e4250+217: [%39.1], env=e44.0, next=%39.0
  void                    Deopt              !v    %39.2, DeadCall@0x55804eaea998[Call#7], %39.1   !
BB16   <- [56]
  val?^ | miss    %16.0 = LdVar              eR    get, e44.0
  lgl$#-          %16.1 = Identical                %16.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %16.1 -> BB58 (if true) | BB59 (if false)
BB14   <- [57, 59]
  val?^ | miss    %14.0 = Phi                      %57.1:BB57, %59.1:BB59
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %57.2:BB57, %59.2:BB59
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  fs              %14.5 = FrameState         R     0x55804e1e4250+195: [%54.9], env=e44.0, next=%14.4
  void                    Deopt              !v    %14.5, %14.3, %14.1   !
BB58   <- [16]
  prom-           %58.0 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p24, e44.0
  prom-           %58.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p25, e44.0
  val?            %58.2 = StaticCall         !v    get[0x55804e6b2120](%58.0, missingArg, %58.1, missingArg, false) { 0 2n 4n } e44.0   <env->
  void                    StVar              lW    entry, %58.2, e44.0
  val?^ | miss    %58.4 = LdVar              eR    is.environment, e44.0
  lgl$#-          %58.5 = Identical                <blt is.environment>, %58.4   <true>
  void                    Branch                   %58.5 -> BB60 (if true) | BB61 (if false)
BB59   <- [16]
  void                    Nop                !     
  val?^ | miss    %59.1 = %16.0
  dr              %59.2 = CallTarget@0x55804eaea998[Call#8]
  goto BB14
BB60   <- [58]
  val             %60.0 = ChkMissing         e     %58.2
  lgl$#-          %60.1 = CallSafeBuiltin    wed   is.environment(%58.2) 
  void                    Branch                   %60.1 -> BB20 (if true) | BB19 (if false)
BB61   <- [58]
  fs              %61.0 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  fs              %61.1 = FrameState         R     0x55804e1e4250+313: [], env=e44.0, next=%61.0
  void                    Deopt              !v    %61.1, DeadBranchReached@0x55804eaea998[Test#0], %58.5   !
BB20   <- [60]
  val?            %20.0 = PopContext         C     %58.2, %42.3   <env->
  void                    StVar              lW    entry, %20.0, e42.0
  val?^ | miss    %20.2 = LdVar              eR    get, e42.0
  lgl$#-          %20.3 = Identical                %20.2, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %20.3 -> BB62 (if true) | BB63 (if false)
BB19   <- [60]
  fs              %19.0 = FrameState         R     0x55804ed682c0+37: [], env=e42.0
  (cls|spec|blt)  %19.1 = LdFun              !v    stop, e44.0
  fs              %19.2 = FrameState         R     0x55804e1e4250+426: [%19.1], env=e44.0, next=%19.0
  void                    Deopt              !v    %19.2, DeadCall@0x55804eaea998[Call#10], %19.1   !
BB62   <- [20]
  prom-           %62.0 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p2 (!refl), e42.0
  val?            %62.1 = StaticCall         !v    get[0x55804f1719e0]("srcinfo", %62.0, missingArg, missingArg, false) { 0 1 4n } e42.0   <nil->
  void                    StVar              lW    value, %62.1, e42.0
  val?^ | miss    %62.3 = LdVar              eR    list, e42.0
  lgl$#-          %62.4 = Identical                <blt list>, %62.3   <true>
  void                    Branch                   %62.4 -> BB64 (if true) | BB65 (if false)
BB63   <- [20]
  fs              %63.0 = FrameState         R     0x55804ed682c0+51: [], env=e42.0
  void                    Deopt              !v    %63.0, CallTarget@0x55804eaea788[Call#1], %20.2   !
BB64   <- [62]
  (cls|spec|blt)  %64.0 = LdFun              !v    $, <0x55804bee0c10>, e42.0
  prom-           %64.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p3, e42.0
  prom-           %64.2 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p4, e42.0
  val?            %64.3 = Call               !v    %64.0(%64.1, %64.2) e42.0   <nil->
  lgl$-           %64.4 = Is                       %64.3, NULL
  lgl$#-          %64.5 = CheckTrueFalse     e     %64.4
  void                    Branch                   %64.5 -> BB26 (if true) | BB25 (if false)
BB65   <- [62]
  fs              %65.0 = FrameState         R     0x55804ed682c0+119: [], env=e42.0
  void                    Deopt              !v    %65.0, DeadBranchReached@0x55804eaea788[Test#0], %62.4   !
BB26   <- [64]
  (cls|spec|blt)  %26.0 = LdFun              !v    $, <0x55804bee0c10>, e42.0
  prom-           %26.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p5, e42.0
  prom-           %26.2 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p6, e42.0
  val?            %26.3 = Call               !v    %26.0(%26.1, %26.2) e42.0   <nil->
  lgl$-           %26.4 = Is                       %26.3, NULL
  lgl$#-          %26.5 = CheckTrueFalse     e     %26.4
  void                    Branch                   %26.5 -> BB28 (if true) | BB27 (if false)
BB25   <- [64]
  (cls|spec|blt)  %25.0 = LdFun              !v    $, e42.0
  fs              %25.1 = FrameState         R     0x55804ed682c0+259: [<blt list>, %25.0], env=e42.0
  void                    Deopt              !v    %25.1, DeadCall@0x55804eaea788[Call#10], %25.0   !
BB28   <- [26]
  (cls|spec|blt)  %28.0 = LdFun              !v    $, <0x55804bee0c10>, e42.0
  prom-           %28.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p7, e42.0
  prom-           %28.2 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p8, e42.0
  val?            %28.3 = Call               !v    %28.0(%28.1, %28.2) e42.0   <nil->
  lgl$-           %28.4 = Is                       %28.3, NULL
  lgl$#-          %28.5 = CheckTrueFalse     e     %28.4
  void                    Branch                   %28.5 -> BB30 (if true) | BB29 (if false)
BB27   <- [26]
  (cls|spec|blt)  %27.0 = LdFun              !v    $, e42.0
  fs              %27.1 = FrameState         R     0x55804ed682c0+365: [<blt list>, NA, %27.0], env=e42.0
  void                    Deopt              !v    %27.1, DeadCall@0x55804eaea788[Call#12], %27.0   !
BB30   <- [28]
  val?            %30.0 = NamedCall          !v    <blt list>(srcfile=NA, frow=NA, lrow=NA) e42.0   <vec+>
  void                    StVar              lW    new, %30.0, e42.0
  val?^ | miss    %30.2 = LdVar              eR    as.data.frame, e42.0
  lgl$#-          %30.3 = Identical                %30.2, function(x, row.names=NULL, optional=FALSE, ..|...
  void                    Branch                   %30.3 -> BB66 (if true) | BB67 (if false)
BB29   <- [28]
  (cls|spec|blt)  %29.0 = LdFun              !v    $, e42.0
  fs              %29.1 = FrameState         R     0x55804ed682c0+471: [<blt list>, NA, NA, %29.0], env=e42.0
  void                    Deopt              !v    %29.1, DeadCall@0x55804eaea788[Call#14], %29.0   !
BB66   <- [30]
  prom-           %66.0 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p9 (!refl), e42.0
  dots-           %66.1 = DotsList           l     stringsAsFactors=false
  val?            %66.2 = StaticCall         !v    as.data.frame[0x55804ed7ebc0](%66.0, missingArg, missingArg, %66.1) { 0 3n } e42.0   <vec>
  void                    StVar              lW    new, %66.2, e42.0
  val?^ | miss    %66.4 = LdVar              eR    value, e42.0
  lgl$#-          %66.5 = IsType                   %66.4 isA val?~- | miss
  void                    Branch                   %66.5 -> BB68 (if true) | BB69 (if false)
BB67   <- [30]
  fs              %67.0 = FrameState         R     0x55804ed682c0+562: [], env=e42.0
  void                    Deopt              !v    %67.0, CallTarget@0x55804eaea788[Call#15], %30.2   !
BB68   <- [66]
  val?~- | miss   %68.0 = CastType           d     dn %66.4
  val?-           %68.1 = Force!<value>            %68.0,    <nil->
  lgl$-           %68.2 = Is                       %68.1, NULL
  lgl$#-          %68.3 = CheckTrueFalse     e     %68.2
  void                    Branch                   %68.3 -> BB36 (if true) | BB35 (if false)
BB69   <- [66]
  fs              %69.0 = FrameState         R     0x55804ed682c0+621: [], env=e42.0
  void                    Deopt              !v    %69.0, Typecheck@0x55804eaea788[Type#44], %66.4   !
BB36   <- [68]
  val             %36.0 = ChkMissing         e     %66.2
  void                    Visible            v     
  void                    StVar              lW    value, %66.2, e42.0
  val?^ | miss    %36.3 = LdVar              eR    assign, e42.0
  lgl$#-          %36.4 = Identical                %36.3, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %36.4 -> BB70 (if true) | BB71 (if false)
BB35   <- [68]
  (cls|spec|blt)  %35.0 = LdFun              !v    rbind, e42.0
  fs              %35.1 = FrameState         R     0x55804ed682c0+651: [%35.0], env=e42.0
  void                    Deopt              !v    %35.1, DeadCall@0x55804eaea788[Call#16], %35.0   !
BB70   <- [36]
  prom-           %70.0 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p10 (!refl), e42.0
  prom-           %70.1 = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p11, e42.0
  val?            %70.2 = StaticCall         !     assign[0x55804e31c510]("srcinfo", %70.0, %70.1) e42.0   <vec>
  void                    Return             l     %70.2
BB71   <- [36]
  fs              %71.0 = FrameState         R     0x55804ed682c0+725: [], env=e42.0
  void                    Deopt              !v    %71.0, CallTarget@0x55804eaea788[Call#17], %36.3   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    srcfile, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    frow, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    lrow, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    new, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p14, e0.0
  prom-           %0.3  = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p15, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p17, e0.0
  prom-           %0.3  = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p18, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x55804bee1080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, incLocalSrcInfo[0x55804e441c60]_p23, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "checkUsageFrame") e0.0   <env+>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ incLocalSrcInfo[0x55804e441c60]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
