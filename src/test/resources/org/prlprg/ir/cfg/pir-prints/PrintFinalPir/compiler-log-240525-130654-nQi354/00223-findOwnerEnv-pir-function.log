
┌──────────────────────────────────────────────────────────────────────────────┐
│ findOwnerEnv[0x55804edb01a0]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
findOwnerEnv[0x55804edb01a0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %0.5  = Identical                %0.4, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %0.5 -> BB38 (if true) | BB39 (if false)
BB38   <- [0]
  env             e38.0 = MkEnv              l     v=%0.3, env=%0.2, stop=%0.1, default=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %38.1 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p0, e38.0
  prom-           %38.2 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p1, e38.0
  ct              %38.3 = PushContext        lCL   %38.1, %38.2, identical(env, stop), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e38.0
  val?^           %38.4 = CastType                 up %38.2
  val?^           %38.5 = CastType                 up %38.1
  env             e38.6 = MkEnv              l     x=%38.5, y=%38.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %38.7 = Force!<lazy>       !vL   %38.5, e38.6   <val?+>
  val?            %38.8 = Force!<lazy>       !vL   %38.4, e38.6   <val?+>
  val?            %38.9 = CallBuiltin        !v    identical(%38.7, %38.8, true, true, true, true, false, true) e38.6
  val?            %38.10 = PopContext         C     %38.9, %38.3   <lgl$->
  lgl$#-          %38.11 = IsType                   %38.10 isA lgl$-
  void                    Branch                   %38.11 -> BB40 (if true) | BB41 (if false)
BB39   <- [0]
  env             e39.0 = (MkEnv)            l     v=%0.3, env=%0.2, stop=%0.1, default=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %39.1 = FrameState         R     0x55804e2fb430+0: [], env=e39.0
  void                    Deopt              !v    %39.1, CallTarget@0x55804e1f95a0[Call#0], %0.4
BB40   <- [38]
  lgl$-           %40.0 = CastType           d     dn %38.10
  lgl$-           %40.1 = Not                d     %40.0, elided
  lgl$#-          %40.2 = CheckTrueFalse     e     %40.1   <true>
  void                    Branch                   %40.2 -> BB42 (if true) | BB43 (if false)
BB41   <- [38]
  void                    Nop                !     
  val?            %41.1 = %38.10
  dr              %41.2 = Typecheck@0x55804e1f95a0[Type#2]
  goto BB3
BB42   <- [40]
  val?^ | miss    %42.0 = LdVar              eR    exists, e38.0
  lgl$#-          %42.1 = Identical                %42.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %42.1 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  void                    Nop                !     
  lgl$#-          %43.1 = %40.2
  dr              %43.2 = DeadBranchReached@0x55804e1f95a0[Test#0]
  goto BB3
BB3   <- [41, 43, 45]
  val?^ | miss    %3.0  = Phi                      %41.1:BB41, %43.1:BB43, %45.1:BB45
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %41.2:BB41, %43.2:BB43, %45.2:BB45
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55804e2fb430+37: [%38.10], env=e38.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB44   <- [42]
  prom-           %44.0 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p2, e38.0
  prom-           %44.1 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p3, e38.0
  val?            %44.2 = StaticCall         !v    exists[0x55804ee22ec0](%44.0, missingArg, %44.1, missingArg, missingArg, false) { 0 2n 5n } e38.0   <lgl$->
  lgl$#-          %44.3 = IsType                   %44.2 isA lgl$-
  void                    Branch                   %44.3 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  void                    Nop                !     
  val?^ | miss    %45.1 = %42.0
  dr              %45.2 = CallTarget@0x55804e1f95a0[Call#1]
  goto BB3
BB46   <- [44]
  lgl$-           %46.0 = CastType           d     dn %44.2
  lgl$#-          %46.1 = CheckTrueFalse     e     %46.0
  void                    Branch                   %46.1 -> BB36 (if true) | BB7 (if false)
BB47   <- [44]
  void                    Nop                !     
  val?            %47.1 = %44.2
  dr              %47.2 = Typecheck@0x55804e1f95a0[Type#5]
  goto BB5
BB36   <- [46]
  val?^ | miss    %36.0 = LdVar              eR    env, e38.0
  void                    Visible            v     
  val?            %36.2 = Force!<wrapped>    !     %36.0, e38.0   <env+>
  val?            %36.3 = %36.2
  goto BB21
BB7   <- [46]
  val?^ | miss    %7.0  = LdVar              eR    is.emptyenv, e38.0
  lgl$#-          %7.1  = Identical                %7.0, function(e) <(rir::DispatchTable*)0x55804e1001|...
  void                    Branch                   %7.1 -> BB48 (if true) | BB49 (if false)
BB5   <- [47, 49]
  val?^ | miss    %5.0  = Phi                      %47.1:BB47, %49.1:BB49
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %47.2:BB47, %49.2:BB49
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55804e2fb430+108: [%44.2], env=e38.0
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB21   <- [36, 35, 20, 34, 33]
  val?            %21.0 = Phi                      %33.3:BB33, %34.3:BB34, %20.3:BB20, %35.3:BB35, %36.3:BB36
  val?            %21.1 = %21.0
  void                    Return             l     %21.1
BB48   <- [7]
  prom-           %48.0 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p4, e38.0
  ct              %48.1 = PushContext        lCL   %48.0, is.emptyenv(env), function(e) <(rir::DispatchTable*)0x55804e1001|..., e38.0
  val?^           %48.2 = CastType                 up %48.0
  val?^ | miss    %48.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %48.4 = Identical                %48.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %48.4 -> BB50 (if true) | BB51 (if false)
BB49   <- [7]
  void                    Nop                !     
  val?^ | miss    %49.1 = %7.0
  dr              %49.2 = CallTarget@0x55804e1f95a0[Call#2]
  goto BB5
BB50   <- [48]
  env             e50.0 = MkEnv              l     e=%48.2, parent=<env 0x55804e699488>, context 1
  prom-           %50.1 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p5, e50.0
  prom-           %50.2 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p6, e50.0
  ct              %50.3 = PushContext        lCL   %50.1, %50.2, identical(e, .EmptyEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e50.0
  val?^           %50.4 = CastType                 up %50.2
  val?^           %50.5 = CastType                 up %50.1
  env             e50.6 = MkEnv              l     x=%50.5, y=%50.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %50.7 = Force!<lazy>       !vL   %50.5, e50.6   <val?+>
  val?            %50.8 = Force!<lazy>       !vL   %50.4, e50.6   <val?+>
  val?            %50.9 = CallBuiltin        !v    identical(%50.7, %50.8, true, true, true, true, false, true) e50.6
  val?            %50.10 = PopContext         C     %50.9, %50.3   <lgl$->
  lgl$#-          %50.11 = IsType                   %50.10 isA lgl$-
  void                    Branch                   %50.11 -> BB52 (if true) | BB53 (if false)
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x55804e2fb430+151: [], env=e38.0
  env             e51.1 = (MkEnv)            l     e=%48.2, parent=<env 0x55804e699488>, context 1
  fs              %51.2 = FrameState         R     0x55804e8d9950+0: [], env=e51.1, next=%51.0
  void                    Deopt              !v    %51.2, CallTarget@0x55804cb6eb78[Call#0], %48.3   !
BB52   <- [50]
  lgl$-           %52.0 = CastType           d     dn %50.10
  val?            %52.1 = PopContext         C     %52.0, %48.1   <lgl$->
  lgl$#-          %52.2 = IsType                   %52.1 isA lgl$-
  void                    Branch                   %52.2 -> BB54 (if true) | BB55 (if false)
BB53   <- [50]
  fs              %53.0 = FrameState         R     0x55804e2fb430+151: [], env=e38.0
  fs              %53.1 = FrameState         R     0x55804e8d9950+37: [%50.10], env=e50.0, next=%53.0
  void                    Deopt              !v    %53.1, Typecheck@0x55804cb6eb78[Type#2], %50.10   !
BB54   <- [52]
  lgl$-           %54.0 = CastType           d     dn %52.1
  lgl$#-          %54.1 = CheckTrueFalse     e     %54.0
  void                    Branch                   %54.1 -> BB35 (if true) | BB14 (if false)
BB55   <- [52]
  void                    Nop                !     
  val?            %55.1 = %52.1
  dr              %55.2 = Typecheck@0x55804e1f95a0[Type#7]
  goto BB12
BB35   <- [54]
  val?^ | miss    %35.0 = LdVar              eR    default, e38.0
  void                    Visible            v     
  val?            %35.2 = Force!             !     %35.0, e38.0   <val?_>
  val?            %35.3 = %35.2
  goto BB21
BB14   <- [54]
  val?^ | miss    %14.0 = LdVar              eR    parent.env, e38.0
  lgl$#-          %14.1 = Identical                %14.0, function(env) <(rir::DispatchTable*)0x55804e3c|...
  void                    Branch                   %14.1 -> BB56 (if true) | BB57 (if false)
BB12   <- [55, 57]
  val?^ | miss    %12.0 = Phi                      %55.1:BB55, %57.1:BB57
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %55.2:BB55, %57.2:BB57
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x55804e2fb430+151: [%52.1], env=e38.0
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB56   <- [14]
  val?^ | miss    %56.0 = LdVar              eR    env, e38.0
  val?            %56.1 = Force!<wrapped>    !v    %56.0, e38.0   <env+>
  prom-           %56.2 = MkArg                    %56.1, findOwnerEnv[0x55804edb01a0]_p8 (!refl), 
  val?            %56.3 = StaticCall         !v    parent.env[0x55804f44da70](%56.2) e38.0   <env+>
  void                    StVar              lW    env, %56.3, e38.0
  goto BB15
BB57   <- [14]
  void                    Nop                !     
  val?^ | miss    %57.1 = %14.0
  dr              %57.2 = CallTarget@0x55804e1f95a0[Call#3]
  goto BB12
BB15   <- [56, 74]
  val?^ | miss    %15.0 = LdVar              eR    identical, e38.0
  lgl$#-          %15.1 = Identical                %15.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %15.1 -> BB58 (if true) | BB59 (if false)
BB58   <- [15]
  prom-           %58.0 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p9 (!refl), e38.0
  prom-           %58.1 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p10, e38.0
  ct              %58.2 = PushContext        lCL   %58.0, %58.1, identical(env, stop), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e38.0
  val?^           %58.3 = CastType                 up %58.1
  val?^           %58.4 = CastType                 up %58.0
  env             e58.5 = MkEnv              l     x=%58.4, y=%58.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %58.6 = Force!<lazy>       !vr   %58.4, e58.5   <val?+>
  val?^ | miss    %58.7 = LdVar              eR    y, e58.5
  val?            %58.8 = Force!<lazy>       !v    %58.7, e58.5   <val?+>
  val?^ | miss    %58.9 = LdVar              eR    num.eq, e58.5
  val?            %58.10 = Force!<lazy>       !v    %58.9, e58.5   <lgl$->
  val?^ | miss    %58.11 = LdVar              eR    single.NA, e58.5
  val?            %58.12 = Force!<lazy>       !v    %58.11, e58.5   <lgl$->
  val?^ | miss    %58.13 = LdVar              eR    attrib.as.set, e58.5
  val?            %58.14 = Force!<lazy>       !v    %58.13, e58.5   <lgl$->
  val?^ | miss    %58.15 = LdVar              eR    ignore.bytecode, e58.5
  val?            %58.16 = Force!<lazy>       !v    %58.15, e58.5   <lgl$->
  val?^ | miss    %58.17 = LdVar              eR    ignore.environment, e58.5
  val?            %58.18 = Force!<lazy>       !v    %58.17, e58.5   <lgl$->
  val?^ | miss    %58.19 = LdVar              eR    ignore.srcref, e58.5
  val?            %58.20 = Force!<lazy>       !v    %58.19, e58.5   <lgl$->
  val?            %58.21 = CallBuiltin        !v    identical(%58.6, %58.8, %58.10, %58.12, %58.14, %58.16, %58.18, %58.20) e58.5
  val?            %58.22 = PopContext         C     %58.21, %58.2   <lgl$->
  lgl$#-          %58.23 = IsType                   %58.22 isA lgl$-
  void                    Branch                   %58.23 -> BB60 (if true) | BB61 (if false)
BB59   <- [15]
  fs              %59.0 = FrameState         R     0x55804e2fb430+248: [], env=e38.0
  void                    Deopt              !v    %59.0, CallTarget@0x55804e1f95a0[Call#4], %15.0   !
BB60   <- [58]
  lgl$-           %60.0 = CastType           d     dn %58.22
  lgl$-           %60.1 = Not                d     %60.0, elided
  lgl$#-          %60.2 = CheckTrueFalse     e     %60.1
  void                    Branch                   %60.2 -> BB22 (if true) | BB20 (if false)
BB61   <- [58]
  void                    Nop                !     
  val?            %61.1 = %58.22
  dr              %61.2 = Typecheck@0x55804e1f95a0[Type#14]
  goto BB18
BB22   <- [60]
  val?^ | miss    %22.0 = LdVar              eR    exists, e38.0
  lgl$#-          %22.1 = Identical                %22.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %22.1 -> BB62 (if true) | BB63 (if false)
BB20   <- [60]
  val?^ | miss    %20.0 = LdVar              eR    default, e38.0
  void                    Visible            v     
  val?            %20.2 = Force!<lazy>       !     %20.0, e38.0   <env->
  val?            %20.3 = %20.2
  goto BB21
BB18   <- [61, 63]
  val?^ | miss    %18.0 = Phi                      %61.1:BB61, %63.1:BB63
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %61.2:BB61, %63.2:BB63
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55804e2fb430+285: [%58.22], env=e38.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB62   <- [22]
  prom-           %62.0 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p11, e38.0
  prom-           %62.1 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p12, e38.0
  val?            %62.2 = StaticCall         !v    exists[0x55804ee22ec0](%62.0, missingArg, %62.1, missingArg, missingArg, false) { 0 2n 5n } e38.0   <lgl$->
  lgl$#-          %62.3 = IsType                   %62.2 isA lgl$-
  void                    Branch                   %62.3 -> BB64 (if true) | BB65 (if false)
BB63   <- [22]
  void                    Nop                !     
  val?^ | miss    %63.1 = %22.0
  dr              %63.2 = CallTarget@0x55804e1f95a0[Call#5]
  goto BB18
BB64   <- [62]
  lgl$-           %64.0 = CastType           d     dn %62.2
  lgl$#-          %64.1 = CheckTrueFalse     e     %64.0
  void                    Branch                   %64.1 -> BB34 (if true) | BB25 (if false)
BB65   <- [62]
  void                    Nop                !     
  val?            %65.1 = %62.2
  dr              %65.2 = Typecheck@0x55804e1f95a0[Type#17]
  goto BB23
BB34   <- [64]
  val?^ | miss    %34.0 = LdVar              eR    env, e38.0
  void                    Visible            v     
  val?            %34.2 = Force!<value>      !     %34.0, e38.0   <env->
  val?            %34.3 = %34.2
  goto BB21
BB25   <- [64]
  val?^ | miss    %25.0 = LdVar              eR    is.emptyenv, e38.0
  lgl$#-          %25.1 = Identical                %25.0, function(e) <(rir::DispatchTable*)0x55804e1001|...
  void                    Branch                   %25.1 -> BB66 (if true) | BB67 (if false)
BB23   <- [65, 67]
  val?^ | miss    %23.0 = Phi                      %65.1:BB65, %67.1:BB67
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %65.2:BB65, %67.2:BB67
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x55804e2fb430+351: [%62.2], env=e38.0
  void                    Deopt              !v    %23.4, %23.3, %23.1   !
BB66   <- [25]
  prom-           %66.0 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p13, e38.0
  ct              %66.1 = PushContext        lCL   %66.0, is.emptyenv(env), function(e) <(rir::DispatchTable*)0x55804e1001|..., e38.0
  val?^           %66.2 = CastType                 up %66.0
  env             e66.3 = MkEnv              l     e=%66.2, parent=<env 0x55804e699488>, context 1
  val?^ | miss    %66.4 = LdVar              eR    identical, e66.3
  lgl$#-          %66.5 = Identical                %66.4, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %66.5 -> BB68 (if true) | BB69 (if false)
BB67   <- [25]
  void                    Nop                !     
  val?^ | miss    %67.1 = %25.0
  dr              %67.2 = CallTarget@0x55804e1f95a0[Call#6]
  goto BB23
BB68   <- [66]
  prom-           %68.0 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p14, e66.3
  prom-           %68.1 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p15, e66.3
  ct              %68.2 = PushContext        lCL   %68.0, %68.1, identical(e, .EmptyEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e66.3
  val?^           %68.3 = CastType                 up %68.1
  val?^           %68.4 = CastType                 up %68.0
  env             e68.5 = MkEnv              l     x=%68.4, y=%68.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %68.6 = Force!<lazy>       !v    %68.4, e68.5   <val?+>
  val?^ | miss    %68.7 = LdVar              eR    y, e68.5
  val?            %68.8 = Force!<lazy>       !v    %68.7, e68.5   <val?+>
  val?^ | miss    %68.9 = LdVar              eR    num.eq, e68.5
  val?            %68.10 = Force!<lazy>       !v    %68.9, e68.5   <lgl$->
  val?^ | miss    %68.11 = LdVar              eR    single.NA, e68.5
  val?            %68.12 = Force!<lazy>       !v    %68.11, e68.5   <lgl$->
  val?^ | miss    %68.13 = LdVar              eR    attrib.as.set, e68.5
  val?            %68.14 = Force!<lazy>       !v    %68.13, e68.5   <lgl$->
  val?^ | miss    %68.15 = LdVar              eR    ignore.bytecode, e68.5
  val?            %68.16 = Force!<lazy>       !v    %68.15, e68.5   <lgl$->
  val?^ | miss    %68.17 = LdVar              eR    ignore.environment, e68.5
  val?            %68.18 = Force!<lazy>       !v    %68.17, e68.5   <lgl$->
  val?^ | miss    %68.19 = LdVar              eR    ignore.srcref, e68.5
  val?            %68.20 = Force!<lazy>       !v    %68.19, e68.5   <lgl$->
  val?            %68.21 = CallBuiltin        !v    identical(%68.6, %68.8, %68.10, %68.12, %68.14, %68.16, %68.18, %68.20) e68.5
  val?            %68.22 = PopContext         C     %68.21, %68.2   <lgl$->
  lgl$#-          %68.23 = IsType                   %68.22 isA lgl$-
  void                    Branch                   %68.23 -> BB70 (if true) | BB71 (if false)
BB69   <- [66]
  fs              %69.0 = FrameState         R     0x55804e2fb430+394: [], env=e38.0
  env             e69.1 = (MkEnv)            l     e=%66.2, parent=<env 0x55804e699488>, context 1
  fs              %69.2 = FrameState         R     0x55804e8d9950+0: [], env=e69.1, next=%69.0
  void                    Deopt              !v    %69.2, CallTarget@0x55804cb6eb78[Call#0], %66.4   !
BB70   <- [68]
  lgl$-           %70.0 = CastType           d     dn %68.22
  val?            %70.1 = PopContext         C     %70.0, %66.1   <lgl$->
  lgl$#-          %70.2 = IsType                   %70.1 isA lgl$-
  void                    Branch                   %70.2 -> BB72 (if true) | BB73 (if false)
BB71   <- [68]
  fs              %71.0 = FrameState         R     0x55804e2fb430+394: [], env=e38.0
  fs              %71.1 = FrameState         R     0x55804e8d9950+37: [%68.22], env=e66.3, next=%71.0
  void                    Deopt              !v    %71.1, Typecheck@0x55804cb6eb78[Type#2], %68.22   !
BB72   <- [70]
  lgl$-           %72.0 = CastType           d     dn %70.1
  lgl$#-          %72.1 = CheckTrueFalse     e     %72.0
  void                    Branch                   %72.1 -> BB33 (if true) | BB32 (if false)
BB73   <- [70]
  void                    Nop                !     
  val?            %73.1 = %70.1
  dr              %73.2 = Typecheck@0x55804e1f95a0[Type#19]
  goto BB30
BB33   <- [72]
  val?^ | miss    %33.0 = LdVar              eR    default, e38.0
  void                    Visible            v     
  val?            %33.2 = Force!<lazy>       !     %33.0, e38.0   <lgl$->
  val?            %33.3 = %33.2
  goto BB21
BB32   <- [72]
  val?^ | miss    %32.0 = LdVar              eR    parent.env, e38.0
  lgl$#-          %32.1 = Identical                %32.0, function(env) <(rir::DispatchTable*)0x55804e3c|...
  void                    Branch                   %32.1 -> BB74 (if true) | BB75 (if false)
BB30   <- [73, 75]
  val?^ | miss    %30.0 = Phi                      %73.1:BB73, %75.1:BB75
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %73.2:BB73, %75.2:BB75
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55804e2fb430+394: [%70.1], env=e38.0
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB74   <- [32]
  prom-           %74.0 = MkArg                    unboundValue, findOwnerEnv[0x55804edb01a0]_p16, e38.0
  val?^ | miss    %74.1 = CastType                 up %74.0
  val?            %74.2 = Force              !v    %74.1, 
  prom-           %74.3 = MkArg                    %74.2, findOwnerEnv[0x55804edb01a0]_p17 (!refl), 
  val?            %74.4 = StaticCall         !v    parent.env[0x55804f44da70](%74.3) e38.0   <env+>
  void                    StVar              lW    env, %74.4, e38.0
  goto BB15
BB75   <- [32]
  void                    Nop                !     
  val?^ | miss    %75.1 = %32.0
  dr              %75.2 = CallTarget@0x55804e1f95a0[Call#7]
  goto BB30
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    stop, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .EmptyEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    stop, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(lgl|env)->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .EmptyEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3

│ findOwnerEnv[0x55804edb01a0]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
