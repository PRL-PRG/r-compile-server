
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804e3cc3e0]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804e3cc3e0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %0.3 -> BB122 (if true) | BB123 (if false)
BB122   <- [0]
  env             e122.0 = MkEnv              l     v=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  val+            %122.1 = Force!<lazy>       !vr   %0.1,    <(sym|str)->
  str$-           %122.2 = CallSafeBuiltin    wed   typeof(%122.1)    <str$->
  lgl$-           %122.3 = Eq                 d     %122.2, "symbol", elided   <lgl$->
  lgl$#-          %122.4 = CheckTrueFalse     e     %122.3
  void                    Branch                   %122.4 -> BB7 (if true) | BB5 (if false)
BB123   <- [0]
  env             e123.0 = (MkEnv)            l     v=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %123.1 = FrameState         R     0x55804e9a6630+0: [], env=e123.0
  void                    Deopt              !v    %123.1, CallTarget@0x55804f22a9e8[Call#0], %0.2
BB7   <- [122]
  val?^ | miss    %7.0  = LdVar              eR    as.character, <env 0x55804e699488>
  lgl$#-          %7.1  = Identical                <blt as.character>, %7.0   <true>
  void                    Branch                   %7.1 -> BB124 (if true) | BB125 (if false)
BB5   <- [122]
  void                    Invisible          v     
  nil-            %5.1  = nil
  goto BB6
BB124   <- [7]
  lgl$#-          %124.0 = IsType                   %122.1 isA val?-
  void                    Branch                   %124.0 -> BB126 (if true) | BB127 (if false)
BB125   <- [7]
  void                    Nop                !     
  lgl$#-          %125.1 = %7.1
  dr              %125.2 = DeadBranchReached@0x55804f22a9e8[Test#0]
  goto BB3
BB6   <- [5, 194]
  val?            %6.0  = Phi                      %5.1:BB5, %194.1:BB194
  val?            %6.1  = %6.0
  void                    Return             l     %6.1
BB126   <- [124]
  val-            %126.0 = CastType           d     dn %122.1   <sym->
  val+            %126.1 = CallSafeBuiltin    wed   as.character(%126.0)    <str$->
  void                    StVar              lW    vn, %126.1, e122.0
  lgl-            %126.3 = Eq                 wed   %126.0, "...", elided   <lgl$->
  lgl$#-          %126.4 = IsType                   %126.3 isA lgl$-
  void                    Branch                   %126.4 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  void                    Nop                !     
  val+            %127.1 = %122.1
  dr              %127.2 = Typecheck@0x55804f22a9e8[Type#4]
  goto BB3
BB3   <- [125, 127]
  val?^ | miss    %3.0  = Phi                      %125.1:BB125, %127.1:BB127
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %125.2:BB125, %127.2:BB127
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55804e9a6630+32: [], env=e122.0
  prom-           %3.5  = MkArg                    %122.1, [0x55804e3cc3e0]_p0 (!refl), e122.0
  val?~           %3.6  = CastType                 up %3.5
  env             e3.7  = (MkEnv)            l     x=%3.6, parent=R_BaseNamespace, context 0
  fs              %3.8  = FrameState         R     0x55804e7773a0+27: [%122.2], env=e3.7, next=%3.4
  void                    Deopt              !v    %3.8, %3.3, %3.1
BB128   <- [126]
  lgl$-           %128.0 = CastType           d     dn %126.3
  lgl$#-          %128.1 = CheckTrueFalse     e     %128.0
  void                    Branch                   %128.1 -> BB120 (if true) | BB10 (if false)
BB129   <- [126]
  void                    Nop                !     
  lgl-            %129.1 = %126.3
  dr              %129.2 = Typecheck@0x55804f22a9e8[Type#7]
  goto BB8
BB120   <- [128]
  (cls|spec|blt)  %120.0 = LdFun              !v    $, <env 0x55804e699488>
  fs              %120.1 = FrameState         R     0x55804e9a6630+853: [%120.0], env=e122.0
  void                    Deopt              !v    %120.1, DeadCall@0x55804f22a9e8[Call#18], %120.0
BB10   <- [128]
  val?^ | miss    %10.0 = LdVar              eR    isDDSym, <env 0x55804e699488>
  lgl$#-          %10.1 = Identical                %10.0, function(name) <(rir::DispatchTable*)0x55804e2|...
  void                    Branch                   %10.1 -> BB130 (if true) | BB131 (if false)
BB8   <- [129, 131]
  val?^ | miss    %8.0  = Phi                      %129.1:BB129, %131.1:BB131
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %129.2:BB129, %131.2:BB131
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55804e9a6630+192: [%126.3], env=e122.0
  void                    Deopt              !v    %8.4, %8.3, %8.1
BB130   <- [10]
  prom-           %130.0 = MkArg                    unboundValue, [0x55804e3cc3e0]_p1 (!refl), e122.0
  ct              %130.1 = PushContext        lCL   %130.0, isDDSym(v), function(name) <(rir::DispatchTable*)0x55804e2|..., e122.0
  val?^           %130.2 = CastType                 up %130.0
  val?^ | miss    %130.3 = LdVar              eR    is.symbol, <env 0x55804e699488>
  lgl$#-          %130.4 = Identical                <blt is.symbol>, %130.3   <true>
  void                    Branch                   %130.4 -> BB132 (if true) | BB133 (if false)
BB131   <- [10]
  void                    Nop                !     
  val?^ | miss    %131.1 = %10.0
  dr              %131.2 = CallTarget@0x55804f22a9e8[Call#2]
  goto BB8
BB132   <- [130]
  env             e132.0 = MkEnv              l     name=%130.2, parent=<env 0x55804e699488>, context 1
  val?            %132.1 = Force!<lazy>       !vr   %130.2,    <(sym|str)->
  lgl$#-          %132.2 = CallSafeBuiltin    wed   is.symbol(%132.1)    <lgl$->
  void                    Branch                   %132.2 -> BB119 (if true) | BB15 (if false)
BB133   <- [130]
  fs              %133.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  env             e133.1 = (MkEnv)            l     name=%130.2, parent=<env 0x55804e699488>, context 1
  fs              %133.2 = FrameState         R     0x55804ed96dd0+17: [<blt is.symbol>, %130.4], env=e133.1, next=%133.0
  void                    Deopt              !v    %133.2, DeadBranchReached@0x55804eaeb288[Test#0], %130.4   !
BB119   <- [132]
  void                    Nop                !     
  lgl$#-          %119.1 = %132.2
  goto BB16
BB15   <- [132]
  val?^ | miss    %15.0 = LdVar              eR    is.character, <env 0x55804e699488>
  lgl$#-          %15.1 = Identical                <blt is.character>, %15.0   <true>
  void                    Branch                   %15.1 -> BB134 (if true) | BB135 (if false)
BB16   <- [119, 134]
  lgl$-           %16.0 = Phi                      %134.2:BB134, %119.1:BB119
  lgl$-           %16.1 = %16.0
  lgl$-           %16.2 = AsLogical                %16.1
  lgl$#-          %16.3 = Identical                %16.2, false
  void                    Branch                   %16.3 -> BB118 (if true) | BB19 (if false)
BB134   <- [15]
  lgl$#-          %134.0 = CallSafeBuiltin    wed   is.character(%132.1)    <lgl$->
  lgl$-           %134.1 = LOr                      %132.2, %134.0
  lgl$-           %134.2 = %134.1
  goto BB16
BB135   <- [15]
  fs              %135.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %135.1 = FrameState         R     0x55804ed96dd0+91: [%132.2], env=e132.0, next=%135.0
  void                    Deopt              !v    %135.1, DeadBranchReached@0x55804eaeb288[Test#1], %15.1   !
BB118   <- [16]
  void                    Nop                !     
  lgl$-           %118.1 = %16.2
  goto BB45
BB19   <- [16]
  val?^ | miss    %19.0 = LdVar              eR    length, <env 0x55804e699488>
  lgl$#-          %19.1 = Identical                <blt length>, %19.0   <true>
  void                    Branch                   %19.1 -> BB136 (if true) | BB137 (if false)
BB45   <- [118, 162]
  lgl$-           %45.0 = Phi                      %162.4:BB162, %118.1:BB118
  lgl$-           %45.1 = %45.0
  val?            %45.2 = PopContext         C     %45.1, %130.1   <lgl$->
  lgl$#-          %45.3 = IsType                   %45.2 isA lgl$-
  void                    Branch                   %45.3 -> BB142 (if true) | BB143 (if false)
BB136   <- [19]
  val?^ | miss    %136.0 = LdVar              eR    grep, <env 0x55804e699488>
  lgl$#-          %136.1 = Identical                %136.0, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Branch                   %136.1 -> BB138 (if true) | BB139 (if false)
BB137   <- [19]
  void                    Nop                !     
  lgl$#-          %137.1 = %19.1
  dr              %137.2 = DeadBranchReached@0x55804eaeb288[Test#2]
  goto BB17
BB142   <- [45]
  lgl$-           %142.0 = CastType           d     dn %45.2
  lgl$#-          %142.1 = CheckTrueFalse     e     %142.0
  void                    Branch                   %142.1 -> BB113 (if true) | BB48 (if false)
BB143   <- [45]
  fs              %143.0 = FrameState         R     0x55804e9a6630+235: [%45.2], env=e122.0
  void                    Deopt              !v    %143.0, Typecheck@0x55804f22a9e8[Type#9], %45.2   !
BB138   <- [136]
  prom-           %138.0 = MkArg                    unboundValue, [0x55804e3cc3e0]_p21, e132.0
  ct              %138.1 = PushContext        lCL   "^\.\.[[:digit:]]+$", %138.0, grep("^\.\.[[:digit:]]+$", as.character(name)), function(pattern, x, ignore.case=FALSE, perl=F|..., e132.0
  val?^           %138.2 = CastType                 up %138.0
  env             e138.3 = MkEnv              l     pattern="^\.\.[[:digit:]]+$", x=%138.2, ignore.case(miss)=false, perl(miss)=false, value(miss)=false, fixed(miss)=false, useBytes(miss)=false, invert(miss)=false, parent=R_BaseNamespace, context 1
  prom-           %138.4 = MkArg                    unboundValue, [0x55804e3cc3e0]_p33, e138.3
  ct              %138.5 = PushContext        lCL   %138.4, is.factor(x), function(x) <(rir::DispatchTable*)0x55804e0cdd|..., e138.3
  val?^           %138.6 = CastType                 up %138.4
  env             e138.7 = MkEnv              l     x=%138.6, parent=R_BaseNamespace, context 1
  prom-           %138.8 = MkArg                    unboundValue, [0x55804e3cc3e0]_p34, e138.7
  ct              %138.9 = PushContext        lCL   %138.8, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e138.7
  val?^           %138.10 = CastType                 up %138.8
  env             e138.11 = MkEnv              l     x=%138.10, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %138.12 = Force!<lazy>       !vr   %138.10,    <val?>
  val?            %138.13 = CallBuiltin        !v    inherits(%138.12, "factor", false) e138.11
  val?            %138.14 = PopContext         C     %138.13, %138.9   <lgl$->
  lgl$#-          %138.15 = IsType                   %138.14 isA lgl$-
  void                    Branch                   %138.15 -> BB140 (if true) | BB141 (if false)
BB139   <- [136]
  void                    Nop                !     
  val?^ | miss    %139.1 = %136.0
  dr              %139.2 = CallTarget@0x55804eaeb288[Call#5]
  goto BB17
BB17   <- [137, 139]
  val?^ | miss    %17.0 = Phi                      %137.1:BB137, %139.1:BB139
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %137.2:BB137, %139.2:BB139
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %17.5 = FrameState         R     0x55804ed96dd0+201: [%16.1], env=e132.0, next=%17.4
  void                    Deopt              !v    %17.5, %17.3, %17.1   !
BB113   <- [142]
  (cls|spec|blt)  %113.0 = LdFun              !v    $, e122.0
  fs              %113.1 = FrameState         R     0x55804e9a6630+587: [%113.0], env=e122.0
  void                    Deopt              !v    %113.1, DeadCall@0x55804f22a9e8[Call#11], %113.0   !
BB48   <- [142]
  (cls|spec|blt)  %48.0 = LdFun              !v    $, <0x55804bee0c10>, e122.0
  prom-           %48.1 = MkArg                    unboundValue, [0x55804e3cc3e0]_p2, e122.0
  prom-           %48.2 = MkArg                    unboundValue, [0x55804e3cc3e0]_p3, e122.0
  val?            %48.3 = Call               !v    %48.0(%48.1, %48.2) e122.0   <cls->
  (cls|spec|blt)  %48.4 = ChkFunction        e     %48.3
  prom-           %48.5 = MkArg                    unboundValue, [0x55804e3cc3e0]_p4, e122.0
  prom-           %48.6 = MkArg                    unboundValue, [0x55804e3cc3e0]_p5, e122.0
  lgl$#-          %48.7 = Identical                %48.4, function(v, w) <(rir::DispatchTable*)0x55804e5|...
  val?^           %48.8 = CastType                 up %48.6
  val?^           %48.9 = CastType                 up %48.5
  void                    Branch                   %48.7 -> BB146 (if true) | BB147 (if false)
BB140   <- [138]
  lgl$-           %140.0 = CastType           d     dn %138.14
  val?            %140.1 = PopContext         C     %140.0, %138.5   <lgl$->
  lgl$#-          %140.2 = IsType                   %140.1 isA lgl$-
  void                    Branch                   %140.2 -> BB144 (if true) | BB145 (if false)
BB141   <- [138]
  fs              %141.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %141.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%141.0
  fs              %141.2 = FrameState         R     0x55804e0bd5b0+137: [], env=e138.3, next=%141.1
  fs              %141.3 = FrameState         R     0x55804e24e050+37: [%138.14], env=e138.7, next=%141.2
  void                    Deopt              !v    %141.3, Typecheck@0x55804d2fed88[Type#1], %138.14   !
BB146   <- [48]
  ct              %146.0 = PushContext        lCL   %48.5, %48.6, $(w, isLocal)(vn, w), function(v, w) <(rir::DispatchTable*)0x55804e5|..., e122.0
  val?^ | miss    %146.1 = LdVar              eR    isDDSym, <env 0x55804e699488>
  lgl$#-          %146.2 = Identical                %146.1, function(name) <(rir::DispatchTable*)0x55804e2|...
  void                    Branch                   %146.2 -> BB148 (if true) | BB149 (if false)
BB147   <- [48]
  fs              %147.0 = FrameState         R     0x55804e9a6630+283: [%48.3], env=e122.0
  void                    Deopt              !v    %147.0, CallTarget@0x55804f22a9e8[Call#4], %48.4   !
BB144   <- [140]
  lgl$-           %144.0 = CastType           d     dn %140.1
  lgl$-           %144.1 = AsLogical                %144.0
  lgl$#-          %144.2 = Identical                %144.1, false
  lgl$-           %144.3 = AsLogical                %144.1
  lgl$#-          %144.4 = Identical                %144.3, false
  void                    Branch                   %144.2 -> BB27 (if true) | BB24 (if false)
BB145   <- [140]
  fs              %145.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %145.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%145.0
  fs              %145.2 = FrameState         R     0x55804e0bd5b0+137: [%140.1], env=e138.3, next=%145.1
  void                    Deopt              !v    %145.2, Typecheck@0x55804e11a880[Type#4], %140.1   !
BB148   <- [146]
  env             e148.0 = MkEnv              l     v=%48.9, w=%48.8, parent=<env 0x55804e699488>, context 1
  prom-           %148.1 = MkArg                    unboundValue, [0x55804e3cc3e0]_p11, e148.0
  ct              %148.2 = PushContext        lCL   %148.1, isDDSym(v), function(name) <(rir::DispatchTable*)0x55804e2|..., e148.0
  val?^           %148.3 = CastType                 up %148.1
  val?^ | miss    %148.4 = LdVar              eR    is.symbol, <env 0x55804e699488>
  lgl$#-          %148.5 = Identical                <blt is.symbol>, %148.4   <true>
  void                    Branch                   %148.5 -> BB156 (if true) | BB157 (if false)
BB149   <- [146]
  fs              %149.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  env             e149.1 = (MkEnv)            l     v=%48.9, w=%48.8, parent=<env 0x55804e699488>, context 1
  fs              %149.2 = FrameState         R     0x55804eb466f0+0: [], env=e149.1, next=%149.0
  void                    Deopt              !v    %149.2, CallTarget@0x55804f22bd28[Call#0], %146.1   !
BB27   <- [144]
  void                    Branch                   %144.4 -> BB117 (if true) | BB28 (if false)
BB24   <- [144]
  val?^ | miss    %24.0 = LdVar              eR    length, e138.3
  lgl$#-          %24.1 = Identical                <blt length>, %24.0   <@?>
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB156   <- [148]
  env             e156.0 = MkEnv              l     name=%148.3, parent=<env 0x55804e699488>, context 1
  val?            %156.1 = Force!<lazy>       !vL   %148.3, e156.0   <(sym|str)->
  lgl$#-          %156.2 = CallSafeBuiltin    wed   is.symbol(%156.1)    <lgl$->
  void                    Branch                   %156.2 -> BB112 (if true) | BB57 (if false)
BB157   <- [148]
  fs              %157.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %157.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%157.0
  env             e157.2 = (MkEnv)            l     name=%148.3, parent=<env 0x55804e699488>, context 1
  fs              %157.3 = FrameState         R     0x55804ed96dd0+17: [<blt is.symbol>, %148.5], env=e157.2, next=%157.1
  void                    Deopt              !v    %157.3, DeadBranchReached@0x55804eaeb288[Test#0], %148.5   !
BB117   <- [27]
  void                    Nop                !     
  lgl$-           %117.1 = %144.3
  goto BB35
BB28   <- [27]
  val?^ | miss    %28.0 = LdVar              eR    is.na, e138.3
  lgl$#-          %28.1 = Identical                <blt is.na>, %28.0   <@?>
  void                    Branch                   %28.1 -> BB30 (if true) | BB29 (if false)
BB26   <- [24]
  fs              %26.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %26.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%26.0
  (cls|spec|blt)  %26.2 = LdFun              !v    levels, e138.3
  fs              %26.3 = FrameState         R     0x55804e0bd5b0+214: [%144.1, <blt length>, %26.2], env=e138.3, next=%26.1
  void                    Deopt              !v    %26.3, DeadCall@0x55804e11a880[Call#4], %26.2   !
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %25.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%25.0
  (cls|spec|blt)  %25.2 = LdFun              !v    length, e138.3
  fs              %25.3 = FrameState         R     0x55804e0bd5b0+177: [%144.1, %25.2], env=e138.3, next=%25.1
  void                    Deopt              !v    %25.3, DeadCall@0x55804e11a880[Call#2], %25.2   !
BB112   <- [156]
  void                    Nop                !     
  lgl$#-          %112.1 = %156.2
  goto BB58
BB57   <- [156]
  val?^ | miss    %57.0 = LdVar              eR    is.character, <env 0x55804e699488>
  lgl$#-          %57.1 = Identical                <blt is.character>, %57.0   <true>
  void                    Branch                   %57.1 -> BB160 (if true) | BB161 (if false)
BB35   <- [117, 154]
  lgl$-           %35.0 = Phi                      %154.5:BB154, %117.1:BB117
  lgl$-           %35.1 = %35.0
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB114 (if true) | BB38 (if false)
BB30   <- [28]
  val?^ | miss    %30.0 = LdVar              eR    pattern, e138.3
  val?            %30.1 = Force!             !v    %30.0, e138.3   <val?_>
  lgl$#-          %30.2 = IsType                   %30.1 isA val?+
  void                    Branch                   %30.2 -> BB152 (if true) | BB153 (if false)
BB29   <- [28]
  fs              %29.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %29.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%29.0
  (cls|spec|blt)  %29.2 = LdFun              !v    is.na, e138.3
  fs              %29.3 = FrameState         R     0x55804e0bd5b0+418: [%144.3, %29.2], env=e138.3, next=%29.1
  void                    Deopt              !v    %29.3, DeadCall@0x55804e11a880[Call#6], %29.2   !
BB58   <- [112, 160]
  lgl$-           %58.0 = Phi                      %160.2:BB160, %112.1:BB112
  lgl$-           %58.1 = %58.0
  lgl$-           %58.2 = AsLogical                %58.1
  lgl$#-          %58.3 = Identical                %58.2, false
  void                    Branch                   %58.3 -> BB111 (if true) | BB61 (if false)
BB160   <- [57]
  lgl$#-          %160.0 = CallSafeBuiltin    wed   is.character(%156.1)    <lgl$->
  lgl$-           %160.1 = LOr                      %156.2, %160.0
  lgl$-           %160.2 = %160.1
  goto BB58
BB161   <- [57]
  fs              %161.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %161.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%161.0
  fs              %161.2 = FrameState         R     0x55804ed96dd0+91: [%156.2], env=e156.0, next=%161.1
  void                    Deopt              !v    %161.2, DeadBranchReached@0x55804eaeb288[Test#1], %57.1   !
BB114   <- [35]
  val?^ | miss    %114.0 = LdVar              eR    is.character, e138.3
  lgl$#-          %114.1 = Identical                <blt is.character>, %114.0   <@?>
  void                    Branch                   %114.1 -> BB116 (if true) | BB115 (if false)
BB38   <- [35]
  val?^ | miss    %38.0 = LdVar              eR    is.character, e138.3
  lgl$#-          %38.1 = Identical                <blt is.character>, %38.0   <true>
  void                    Branch                   %38.1 -> BB150 (if true) | BB151 (if false)
BB152   <- [30]
  val?+           %152.0 = CastType           d     dn %30.1   <val?_>
  val?            %152.1 = Extract1_1D        wed   %152.0, 1L, elided   <val?_>
  lgl$#-          %152.2 = IsType                   %152.1 isA val?+
  void                    Branch                   %152.2 -> BB154 (if true) | BB155 (if false)
BB153   <- [30]
  fs              %153.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %153.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%153.0
  fs              %153.2 = FrameState         R     0x55804e0bd5b0+459: [%144.3, <blt is.na>, %30.1], env=e138.3, next=%153.1
  void                    Deopt              !v    %153.2, Typecheck@0x55804e11a880[Type#16], %30.1   !
BB111   <- [58]
  void                    Nop                !     
  lgl$-           %111.1 = %58.2
  goto BB87
BB61   <- [58]
  val?^ | miss    %61.0 = LdVar              eR    length, <env 0x55804e699488>
  lgl$#-          %61.1 = Identical                <blt length>, %61.0   <true>
  void                    Branch                   %61.1 -> BB164 (if true) | BB165 (if false)
BB116   <- [114]
  fs              %116.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %116.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%116.0
  (cls|spec|blt)  %116.2 = LdFun              !v    suppressWarnings, e138.3
  fs              %116.3 = FrameState         R     0x55804e0bd5b0+901: [<blt is.character>, %116.2], env=e138.3, next=%116.1
  void                    Deopt              !v    %116.3, DeadCall@0x55804e11a880[Call#14], %116.2   !
BB115   <- [114]
  fs              %115.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %115.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%115.0
  (cls|spec|blt)  %115.2 = LdFun              !v    is.character, e138.3
  fs              %115.3 = FrameState         R     0x55804e0bd5b0+864: [%115.2], env=e138.3, next=%115.1
  void                    Deopt              !v    %115.3, DeadCall@0x55804e11a880[Call#11], %115.2   !
BB150   <- [38]
  val?^ | miss    %150.0 = LdVar              eR    x, e138.3
  val?            %150.1 = Force!<wrapped>    !v    %150.0, e138.3   <str->
  lgl$#-          %150.2 = CallSafeBuiltin    wed   is.character(%150.1)    <lgl$->
  void                    Branch                   %150.2 -> BB40 (if true) | BB39 (if false)
BB151   <- [38]
  fs              %151.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %151.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%151.0
  fs              %151.2 = FrameState         R     0x55804e0bd5b0+533: [%35.1], env=e138.3, next=%151.1
  void                    Deopt              !v    %151.2, DeadBranchReached@0x55804e11a880[Test#6], %38.1   !
BB154   <- [152]
  val?+           %154.0 = CastType           d     dn %152.1   <val?_>
  lgl+            %154.1 = CallSafeBuiltin    wed   is.na(%154.0)    <val?_>
  lgl             %154.2 = Not                wed   %154.1, elided
  lgl$-           %154.3 = AsLogical          e     %154.2
  lgl$-           %154.4 = LAnd                     %144.3, %154.3
  lgl$-           %154.5 = %154.4
  goto BB35
BB155   <- [152]
  fs              %155.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %155.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%155.0
  fs              %155.2 = FrameState         R     0x55804e0bd5b0+502: [%144.3, <blt is.na>, %152.1], env=e138.3, next=%155.1
  void                    Deopt              !v    %155.2, Typecheck@0x55804e11a880[Type#17], %152.1   !
BB87   <- [111, 190]
  lgl$-           %87.0 = Phi                      %190.4:BB190, %111.1:BB111
  lgl$-           %87.1 = %87.0
  val?            %87.2 = PopContext         C     %87.1, %148.2   <lgl$->
  lgl$#-          %87.3 = IsType                   %87.2 isA lgl$-
  void                    Branch                   %87.3 -> BB170 (if true) | BB171 (if false)
BB164   <- [61]
  val?^ | miss    %164.0 = LdVar              eR    grep, <env 0x55804e699488>
  lgl$#-          %164.1 = Identical                %164.0, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Branch                   %164.1 -> BB166 (if true) | BB167 (if false)
BB165   <- [61]
  void                    Nop                !     
  lgl$#-          %165.1 = %61.1
  dr              %165.2 = DeadBranchReached@0x55804eaeb288[Test#2]
  goto BB59
BB40   <- [150]
  val?^ | miss    %40.0 = LdVar              eR    pattern, e138.3
  val?            %40.1 = Force!<value>      !v    %40.0, e138.3   <str$->
  val?^ | miss    %40.2 = LdVar              eR    x, e138.3
  val?            %40.3 = Force!<wrapped>    !v    %40.2, e138.3   <str->
  val?^ | miss    %40.4 = LdVar              eR    ignore.case, e138.3
  val?            %40.5 = Force!<lazy>       !v    %40.4, e138.3   <lgl$->
  val?^ | miss    %40.6 = LdVar              eR    value, e138.3
  val?            %40.7 = Force!<lazy>       !v    %40.6, e138.3   <lgl$->
  val?^ | miss    %40.8 = LdVar              eR    perl, e138.3
  val?            %40.9 = Force!<lazy>       !v    %40.8, e138.3   <lgl$->
  val?^ | miss    %40.10 = LdVar              eR    fixed, e138.3
  val?            %40.11 = Force!<lazy>       !v    %40.10, e138.3   <lgl$->
  val?^ | miss    %40.12 = LdVar              eR    useBytes, e138.3
  val?            %40.13 = Force!<lazy>       !v    %40.12, e138.3   <lgl$->
  val?^ | miss    %40.14 = LdVar              eR    invert, e138.3
  val?            %40.15 = Force!<lazy>       !v    %40.14, e138.3   <lgl$->
  val?            %40.16 = CallBuiltin        !v    grep(%40.1, %40.3, %40.5, %40.7, %40.9, %40.11, %40.13, %40.15) e138.3
  val?            %40.17 = PopContext         C     %40.16, %138.1   <int->
  lgl$#-          %40.18 = IsType                   %40.17 isA int-
  void                    Branch                   %40.18 -> BB158 (if true) | BB159 (if false)
BB39   <- [150]
  fs              %39.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %39.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>], env=e132.0, next=%39.0
  (cls|spec|blt)  %39.2 = LdFun              !v    structure, e138.3
  fs              %39.3 = FrameState         R     0x55804e0bd5b0+652: [%39.2], env=e138.3, next=%39.1
  void                    Deopt              !v    %39.3, DeadCall@0x55804e11a880[Call#8], %39.2   !
BB170   <- [87]
  lgl$-           %170.0 = CastType           d     dn %87.2
  lgl$#-          %170.1 = CheckTrueFalse     e     %170.0
  void                    Branch                   %170.1 -> BB106 (if true) | BB90 (if false)
BB171   <- [87]
  fs              %171.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %171.1 = FrameState         R     0x55804eb466f0+32: [%87.2], env=e148.0, next=%171.0
  void                    Deopt              !v    %171.1, Typecheck@0x55804f22bd28[Type#1], %87.2   !
BB166   <- [164]
  prom-           %166.0 = MkArg                    unboundValue, [0x55804e3cc3e0]_p23, e156.0
  ct              %166.1 = PushContext        lCL   "^\.\.[[:digit:]]+$", %166.0, grep("^\.\.[[:digit:]]+$", as.character(name)), function(pattern, x, ignore.case=FALSE, perl=F|..., e156.0
  val?^           %166.2 = CastType                 up %166.0
  env             e166.3 = MkEnv              l     pattern="^\.\.[[:digit:]]+$", x=%166.2, ignore.case(miss)=false, perl(miss)=false, value(miss)=false, fixed(miss)=false, useBytes(miss)=false, invert(miss)=false, parent=R_BaseNamespace, context 1
  prom-           %166.4 = MkArg                    unboundValue, [0x55804e3cc3e0]_p35, e166.3
  ct              %166.5 = PushContext        lCL   %166.4, is.factor(x), function(x) <(rir::DispatchTable*)0x55804e0cdd|..., e166.3
  val?^           %166.6 = CastType                 up %166.4
  env             e166.7 = MkEnv              l     x=%166.6, parent=R_BaseNamespace, context 1
  prom-           %166.8 = MkArg                    unboundValue, [0x55804e3cc3e0]_p36, e166.7
  ct              %166.9 = PushContext        lCL   %166.8, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e166.7
  val?^           %166.10 = CastType                 up %166.8
  env             e166.11 = MkEnv              l     x=%166.10, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %166.12 = Force!<lazy>       !vr   %166.10,    <val?>
  val?            %166.13 = CallBuiltin        !v    inherits(%166.12, "factor", false) e166.11
  val?            %166.14 = PopContext         C     %166.13, %166.9   <lgl$->
  lgl$#-          %166.15 = IsType                   %166.14 isA lgl$-
  void                    Branch                   %166.15 -> BB168 (if true) | BB169 (if false)
BB167   <- [164]
  void                    Nop                !     
  val?^ | miss    %167.1 = %164.0
  dr              %167.2 = CallTarget@0x55804eaeb288[Call#5]
  goto BB59
BB59   <- [165, 167]
  val?^ | miss    %59.0 = Phi                      %165.1:BB165, %167.1:BB167
  val?^ | miss    %59.1 = %59.0
  dr              %59.2 = Phi                      %165.2:BB165, %167.2:BB167
  dr              %59.3 = %59.2
  fs              %59.4 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %59.5 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%59.4
  fs              %59.6 = FrameState         R     0x55804ed96dd0+201: [%58.1], env=e156.0, next=%59.5
  void                    Deopt              !v    %59.6, %59.3, %59.1   !
BB158   <- [40]
  int-            %158.0 = CastType           d     dn %40.17
  (int|real)$-    %158.1 = CallSafeBuiltin    wed   length(%158.0)    <int$->
  lgl$#-          %158.2 = IsType                   %158.1 isA int$-
  void                    Branch                   %158.2 -> BB162 (if true) | BB163 (if false)
BB159   <- [40]
  fs              %159.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %159.1 = FrameState         R     0x55804ed96dd0+306: [%16.2, <blt length>, %40.17], env=e132.0, next=%159.0
  void                    Deopt              !v    %159.1, Typecheck@0x55804eaeb288[Type#11], %40.17   !
BB106   <- [170]
  void                    StVar              lW    v, "...", e148.0
  goto BB91
BB90   <- [170]
  void                    Nop                !     
  goto BB91
BB168   <- [166]
  lgl$-           %168.0 = CastType           d     dn %166.14
  val?            %168.1 = PopContext         C     %168.0, %166.5   <lgl$->
  lgl$#-          %168.2 = IsType                   %168.1 isA lgl$-
  void                    Branch                   %168.2 -> BB172 (if true) | BB173 (if false)
BB169   <- [166]
  fs              %169.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %169.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%169.0
  fs              %169.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%169.1
  fs              %169.3 = FrameState         R     0x55804e0bd5b0+137: [], env=e166.3, next=%169.2
  fs              %169.4 = FrameState         R     0x55804e24e050+37: [%166.14], env=e166.7, next=%169.3
  void                    Deopt              !v    %169.4, Typecheck@0x55804d2fed88[Type#1], %166.14   !
BB162   <- [158]
  int$-           %162.0 = CastType           d     dn %158.1
  lgl$-           %162.1 = Neq                d     %162.0, 0, elided   <lgl$->
  lgl$-           %162.2 = AsLogical                %162.1
  lgl$-           %162.3 = LAnd                     %16.2, %162.2
  lgl$-           %162.4 = %162.3
  goto BB45
BB163   <- [158]
  fs              %163.0 = FrameState         R     0x55804e9a6630+235: [], env=e122.0
  fs              %163.1 = FrameState         R     0x55804ed96dd0+328: [%16.2, %158.1], env=e132.0, next=%163.0
  void                    Deopt              !v    %163.1, Typecheck@0x55804eaeb288[Type#12], %158.1   !
BB91   <- [90, 106]
  val?^ | miss    %91.0 = LdVar              eR    is.baseenv, e148.0
  lgl$#-          %91.1 = Identical                %91.0, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %91.1 -> BB176 (if true) | BB177 (if false)
BB172   <- [168]
  lgl$-           %172.0 = CastType           d     dn %168.1
  lgl$-           %172.1 = AsLogical                %172.0
  lgl$#-          %172.2 = Identical                %172.1, false
  lgl$-           %172.3 = AsLogical                %172.1
  lgl$#-          %172.4 = Identical                %172.3, false
  void                    Branch                   %172.2 -> BB69 (if true) | BB66 (if false)
BB173   <- [168]
  fs              %173.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %173.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%173.0
  fs              %173.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%173.1
  fs              %173.3 = FrameState         R     0x55804e0bd5b0+137: [%168.1], env=e166.3, next=%173.2
  void                    Deopt              !v    %173.3, Typecheck@0x55804e11a880[Type#4], %168.1   !
BB176   <- [91]
  prom-           %176.0 = MkArg                    unboundValue, [0x55804e3cc3e0]_p12, e148.0
  ct              %176.1 = PushContext        lCL   %176.0, is.baseenv(findOwnerEnv(v, $(w, env), stop=$(w|..., function(e) <(rir::DispatchTable*)0x55804e41e7|..., e148.0
  val?^           %176.2 = CastType                 up %176.0
  val?^ | miss    %176.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %176.4 = Identical                %176.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %176.4 -> BB182 (if true) | BB183 (if false)
BB177   <- [91]
  fs              %177.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %177.1 = FrameState         R     0x55804eb466f0+63: [], env=e148.0, next=%177.0
  void                    Deopt              !v    %177.1, CallTarget@0x55804f22bd28[Call#1], %91.0   !
BB69   <- [172]
  void                    Branch                   %172.4 -> BB110 (if true) | BB70 (if false)
BB66   <- [172]
  val?^ | miss    %66.0 = LdVar              eR    length, e166.3
  lgl$#-          %66.1 = Identical                <blt length>, %66.0   <@?>
  void                    Branch                   %66.1 -> BB68 (if true) | BB67 (if false)
BB182   <- [176]
  env             e182.0 = MkEnv              l     e=%176.2, parent=<env 0x55804e699488>, context 1
  prom-           %182.1 = MkArg                    unboundValue, [0x55804e3cc3e0]_p25, e182.0
  prom-           %182.2 = MkArg                    unboundValue, [0x55804e3cc3e0]_p26, e182.0
  ct              %182.3 = PushContext        lCL   %182.1, %182.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e182.0
  val?^           %182.4 = CastType                 up %182.2
  val?^           %182.5 = CastType                 up %182.1
  env             e182.6 = MkEnv              l     x=%182.5, y=%182.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %182.7 = Force!<lazy>       !vL   %182.5, e182.6   <val?+>
  val?            %182.8 = Force!<lazy>       !vL   %182.4, e182.6   <val?+>
  val?            %182.9 = CallBuiltin        !     identical(%182.7, %182.8, true, true, true, true, false, true) e182.6
  val?            %182.10 = PopContext         C     %182.9, %182.3   <lgl$->
  lgl$#-          %182.11 = IsType                   %182.10 isA lgl$-
  void                    Branch                   %182.11 -> BB186 (if true) | BB187 (if false)
BB183   <- [176]
  fs              %183.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %183.1 = FrameState         R     0x55804eb466f0+95: [], env=e148.0, next=%183.0
  env             e183.2 = (MkEnv)            l     e=%176.2, parent=<env 0x55804e699488>, context 1
  fs              %183.3 = FrameState         R     0x55804eb37490+0: [], env=e183.2, next=%183.1
  void                    Deopt              !v    %183.3, CallTarget@0x55804ea246f8[Call#0], %176.3   !
BB110   <- [69]
  void                    Nop                !     
  lgl$-           %110.1 = %172.3
  goto BB77
BB70   <- [69]
  val?^ | miss    %70.0 = LdVar              eR    is.na, e166.3
  lgl$#-          %70.1 = Identical                <blt is.na>, %70.0   <@?>
  void                    Branch                   %70.1 -> BB72 (if true) | BB71 (if false)
BB68   <- [66]
  fs              %68.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %68.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%68.0
  fs              %68.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%68.1
  (cls|spec|blt)  %68.3 = LdFun              !v    levels, e166.3
  fs              %68.4 = FrameState         R     0x55804e0bd5b0+214: [%172.1, <blt length>, %68.3], env=e166.3, next=%68.2
  void                    Deopt              !v    %68.4, DeadCall@0x55804e11a880[Call#4], %68.3   !
BB67   <- [66]
  fs              %67.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %67.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%67.0
  fs              %67.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%67.1
  (cls|spec|blt)  %67.3 = LdFun              !v    length, e166.3
  fs              %67.4 = FrameState         R     0x55804e0bd5b0+177: [%172.1, %67.3], env=e166.3, next=%67.2
  void                    Deopt              !v    %67.4, DeadCall@0x55804e11a880[Call#2], %67.3   !
BB186   <- [182]
  lgl$-           %186.0 = CastType           d     dn %182.10
  val?            %186.1 = PopContext         C     %186.0, %176.1   <lgl$->
  lgl$#-          %186.2 = IsType                   %186.1 isA lgl$-
  void                    Branch                   %186.2 -> BB188 (if true) | BB189 (if false)
BB187   <- [182]
  fs              %187.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %187.1 = FrameState         R     0x55804eb466f0+95: [], env=e148.0, next=%187.0
  fs              %187.2 = FrameState         R     0x55804eb37490+37: [%182.10], env=e182.0, next=%187.1
  void                    Deopt              !v    %187.2, Typecheck@0x55804ea246f8[Type#2], %182.10   !
BB77   <- [110, 178]
  lgl$-           %77.0 = Phi                      %178.5:BB178, %110.1:BB110
  lgl$-           %77.1 = %77.0
  lgl$#-          %77.2 = CheckTrueFalse     e     %77.1
  void                    Branch                   %77.2 -> BB107 (if true) | BB80 (if false)
BB72   <- [70]
  val?^ | miss    %72.0 = LdVar              eR    pattern, e166.3
  val?            %72.1 = Force!             !v    %72.0, e166.3   <val?_>
  lgl$#-          %72.2 = IsType                   %72.1 isA val?+
  void                    Branch                   %72.2 -> BB174 (if true) | BB175 (if false)
BB71   <- [70]
  fs              %71.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %71.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%71.0
  fs              %71.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%71.1
  (cls|spec|blt)  %71.3 = LdFun              !v    is.na, e166.3
  fs              %71.4 = FrameState         R     0x55804e0bd5b0+418: [%172.3, %71.3], env=e166.3, next=%71.2
  void                    Deopt              !v    %71.4, DeadCall@0x55804e11a880[Call#6], %71.3   !
BB188   <- [186]
  lgl$-           %188.0 = CastType           d     dn %186.1
  lgl$-           %188.1 = Not                vd    %188.0, elided
  val?            %188.2 = PopContext         C     %188.1, %146.0   <lgl$->
  lgl$#-          %188.3 = IsType                   %188.2 isA lgl$-
  void                    Branch                   %188.3 -> BB192 (if true) | BB193 (if false)
BB189   <- [186]
  fs              %189.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %189.1 = FrameState         R     0x55804eb466f0+95: [%186.1], env=e148.0, next=%189.0
  void                    Deopt              !v    %189.1, Typecheck@0x55804f22bd28[Type#11], %186.1   !
BB107   <- [77]
  val?^ | miss    %107.0 = LdVar              eR    is.character, e166.3
  lgl$#-          %107.1 = Identical                <blt is.character>, %107.0   <@?>
  void                    Branch                   %107.1 -> BB109 (if true) | BB108 (if false)
BB80   <- [77]
  val?^ | miss    %80.0 = LdVar              eR    is.character, e166.3
  lgl$#-          %80.1 = Identical                <blt is.character>, %80.0   <true>
  void                    Branch                   %80.1 -> BB180 (if true) | BB181 (if false)
BB174   <- [72]
  val?+           %174.0 = CastType           d     dn %72.1   <val?_>
  val?            %174.1 = Extract1_1D        wed   %174.0, 1L, elided   <val?_>
  lgl$#-          %174.2 = IsType                   %174.1 isA val?+
  void                    Branch                   %174.2 -> BB178 (if true) | BB179 (if false)
BB175   <- [72]
  fs              %175.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %175.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%175.0
  fs              %175.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%175.1
  fs              %175.3 = FrameState         R     0x55804e0bd5b0+459: [%172.3, <blt is.na>, %72.1], env=e166.3, next=%175.2
  void                    Deopt              !v    %175.3, Typecheck@0x55804e11a880[Type#16], %72.1   !
BB192   <- [188]
  lgl$-           %192.0 = CastType           d     dn %188.2
  lgl$#-          %192.1 = CheckTrueFalse     e     %192.0
  void                    Branch                   %192.1 -> BB103 (if true) | BB102 (if false)
BB193   <- [188]
  fs              %193.0 = FrameState         R     0x55804e9a6630+321: [%188.2], env=e122.0
  void                    Deopt              !v    %193.0, Typecheck@0x55804f22a9e8[Type#15], %188.2   !
BB109   <- [107]
  fs              %109.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %109.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%109.0
  fs              %109.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%109.1
  (cls|spec|blt)  %109.3 = LdFun              !v    suppressWarnings, e166.3
  fs              %109.4 = FrameState         R     0x55804e0bd5b0+901: [<blt is.character>, %109.3], env=e166.3, next=%109.2
  void                    Deopt              !v    %109.4, DeadCall@0x55804e11a880[Call#14], %109.3   !
BB108   <- [107]
  fs              %108.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %108.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%108.0
  fs              %108.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%108.1
  (cls|spec|blt)  %108.3 = LdFun              !v    is.character, e166.3
  fs              %108.4 = FrameState         R     0x55804e0bd5b0+864: [%108.3], env=e166.3, next=%108.2
  void                    Deopt              !v    %108.4, DeadCall@0x55804e11a880[Call#11], %108.3   !
BB180   <- [80]
  val?^ | miss    %180.0 = LdVar              eR    x, e166.3
  val?            %180.1 = Force!<wrapped>    !v    %180.0, e166.3   <str->
  lgl$#-          %180.2 = CallSafeBuiltin    wed   is.character(%180.1)    <lgl$->
  void                    Branch                   %180.2 -> BB82 (if true) | BB81 (if false)
BB181   <- [80]
  fs              %181.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %181.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%181.0
  fs              %181.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%181.1
  fs              %181.3 = FrameState         R     0x55804e0bd5b0+533: [%77.1], env=e166.3, next=%181.2
  void                    Deopt              !v    %181.3, DeadBranchReached@0x55804e11a880[Test#6], %80.1   !
BB178   <- [174]
  val?+           %178.0 = CastType           d     dn %174.1   <val?_>
  lgl+            %178.1 = CallSafeBuiltin    wed   is.na(%178.0)    <val?_>
  lgl             %178.2 = Not                wed   %178.1, elided
  lgl$-           %178.3 = AsLogical          e     %178.2
  lgl$-           %178.4 = LAnd                     %172.3, %178.3
  lgl$-           %178.5 = %178.4
  goto BB77
BB179   <- [174]
  fs              %179.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %179.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%179.0
  fs              %179.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%179.1
  fs              %179.3 = FrameState         R     0x55804e0bd5b0+502: [%172.3, <blt is.na>, %174.1], env=e166.3, next=%179.2
  void                    Deopt              !v    %179.3, Typecheck@0x55804e11a880[Type#17], %174.1   !
BB103   <- [192]
  (cls|spec|blt)  %103.0 = LdFun              !     $, <0x55804bee0c10>, e122.0
  prom-           %103.1 = MkArg                    unboundValue, [0x55804e3cc3e0]_p6, e122.0
  prom-           %103.2 = MkArg                    unboundValue, [0x55804e3cc3e0]_p7, e122.0
  val?            %103.3 = Call               !     %103.0(%103.1, %103.2) e122.0   <cls->
  (cls|spec|blt)  %103.4 = ChkFunction        e     %103.3
  prom-           %103.5 = MkArg                    unboundValue, [0x55804e3cc3e0]_p8, e122.0
  prom-           %103.6 = MkArg                    unboundValue, [0x55804e3cc3e0]_p9, e122.0
  prom-           %103.7 = MkArg                    unboundValue, [0x55804e3cc3e0]_p10, e122.0
  lgl$#-          %103.8 = Identical                %103.4, function(type, n, e, w) <(rir::DispatchTable*)|...
  void                    Branch                   %103.8 -> BB194 (if true) | BB195 (if false)
BB102   <- [192]
  (cls|spec|blt)  %102.0 = LdFun              !v    %in%, e122.0
  fs              %102.1 = FrameState         R     0x55804e9a6630+337: [%102.0], env=e122.0
  void                    Deopt              !v    %102.1, DeadCall@0x55804f22a9e8[Call#5], %102.0   !
BB82   <- [180]
  val?^ | miss    %82.0 = LdVar              eR    pattern, e166.3
  val?            %82.1 = Force!<value>      !v    %82.0, e166.3   <str$->
  val?^ | miss    %82.2 = LdVar              eR    x, e166.3
  val?            %82.3 = Force!<wrapped>    !v    %82.2, e166.3   <str->
  val?^ | miss    %82.4 = LdVar              eR    ignore.case, e166.3
  val?            %82.5 = Force!<lazy>       !v    %82.4, e166.3   <lgl$->
  val?^ | miss    %82.6 = LdVar              eR    value, e166.3
  val?            %82.7 = Force!<lazy>       !v    %82.6, e166.3   <lgl$->
  val?^ | miss    %82.8 = LdVar              eR    perl, e166.3
  val?            %82.9 = Force!<lazy>       !v    %82.8, e166.3   <lgl$->
  val?^ | miss    %82.10 = LdVar              eR    fixed, e166.3
  val?            %82.11 = Force!<lazy>       !v    %82.10, e166.3   <lgl$->
  val?^ | miss    %82.12 = LdVar              eR    useBytes, e166.3
  val?            %82.13 = Force!<lazy>       !v    %82.12, e166.3   <lgl$->
  val?^ | miss    %82.14 = LdVar              eR    invert, e166.3
  val?            %82.15 = Force!<lazy>       !v    %82.14, e166.3   <lgl$->
  val?            %82.16 = CallBuiltin        !v    grep(%82.1, %82.3, %82.5, %82.7, %82.9, %82.11, %82.13, %82.15) e166.3
  val?            %82.17 = PopContext         C     %82.16, %166.1   <int->
  lgl$#-          %82.18 = IsType                   %82.17 isA int-
  void                    Branch                   %82.18 -> BB184 (if true) | BB185 (if false)
BB81   <- [180]
  fs              %81.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %81.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%81.0
  fs              %81.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>], env=e156.0, next=%81.1
  (cls|spec|blt)  %81.3 = LdFun              !v    structure, e166.3
  fs              %81.4 = FrameState         R     0x55804e0bd5b0+652: [%81.3], env=e166.3, next=%81.2
  void                    Deopt              !v    %81.4, DeadCall@0x55804e11a880[Call#8], %81.3   !
BB194   <- [103]
  val?            %194.0 = StaticCall         !     [0x55804e869ca0]("variable", %103.5, %103.6, %103.7) e122.0   <vec>
  val?            %194.1 = %194.0
  goto BB6
BB195   <- [103]
  fs              %195.0 = FrameState         R     0x55804e9a6630+524: [%103.3], env=e122.0
  void                    Deopt              !v    %195.0, CallTarget@0x55804f22a9e8[Call#10], %103.4   !
BB184   <- [82]
  int-            %184.0 = CastType           d     dn %82.17
  (int|real)$-    %184.1 = CallSafeBuiltin    wed   length(%184.0)    <int$->
  lgl$#-          %184.2 = IsType                   %184.1 isA int$-
  void                    Branch                   %184.2 -> BB190 (if true) | BB191 (if false)
BB185   <- [82]
  fs              %185.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %185.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%185.0
  fs              %185.2 = FrameState         R     0x55804ed96dd0+306: [%58.2, <blt length>, %82.17], env=e156.0, next=%185.1
  void                    Deopt              !v    %185.2, Typecheck@0x55804eaeb288[Type#11], %82.17   !
BB190   <- [184]
  int$-           %190.0 = CastType           d     dn %184.1
  lgl$-           %190.1 = Neq                d     %190.0, 0, elided   <lgl$->
  lgl$-           %190.2 = AsLogical                %190.1
  lgl$-           %190.3 = LAnd                     %58.2, %190.2
  lgl$-           %190.4 = %190.3
  goto BB87
BB191   <- [184]
  fs              %191.0 = FrameState         R     0x55804e9a6630+321: [], env=e122.0
  fs              %191.1 = FrameState         R     0x55804eb466f0+32: [], env=e148.0, next=%191.0
  fs              %191.2 = FrameState         R     0x55804ed96dd0+328: [%58.2, %184.1], env=e156.0, next=%191.1
  void                    Deopt              !v    %191.2, Typecheck@0x55804eaeb288[Type#12], %184.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(sym|str)->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enterLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     findOwnerEnv, <0x55804e95cf28>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804e3cc3e0]_p13, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804e3cc3e0]_p14, e0.0
  prom-           %0.4  = MkArg                    unboundValue, [0x55804e3cc3e0]_p17, e0.0
  prom-           %0.5  = MkArg                    unboundValue, [0x55804e3cc3e0]_p20, e0.0
  val?            %0.6  = NamedCall          !     %0.1(%0.2, %0.3, stop=%0.4, default=%0.5) e0.0   <env+>
  void                    Return             l     %0.6
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804e3cc3e0]_p15, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804e3cc3e0]_p16, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804e3cc3e0]_p18, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804e3cc3e0]_p19, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804e3cc3e0]_p22, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|str)->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804e3cc3e0]_p24, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|str)->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3

│ [0x55804e3cc3e0]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
