
┌──────────────────────────────────────────────────────────────────────────────┐
│ incLocalUsageValue[0x55804e49a190]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1                │
│ Properties:                                                                  │
├────── Final PIR Version
incLocalUsageValue[0x55804e49a190]
BB0
  val?^           %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %0.4  = Identical                %0.3, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %0.4 -> BB32 (if true) | BB33 (if false)
BB32   <- [0]
  env             e32.0 = MkEnv              l     vn=%0.2, which=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %32.1 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p0, e32.0
  prom-           %32.2 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p1, e32.0
  ct              %32.3 = PushContext        lCL   %32.1, %32.2, getLocalUsageEntry(vn, w), function(vn, w) <(rir::DispatchTable*)0x55804e|..., e32.0
  val?^           %32.4 = CastType                 up %32.2
  val?^           %32.5 = CastType                 up %32.1
  val?^ | miss    %32.6 = LdVar              eR    findOwnerEnv, <env 0x55804e699488>
  lgl$#-          %32.7 = Identical                %32.6, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Branch                   %32.7 -> BB34 (if true) | BB35 (if false)
BB33   <- [0]
  env             e33.0 = (MkEnv)            l     vn=%0.2, which=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %33.1 = FrameState         R     0x55804e9d77b0+0: [], env=e33.0
  void                    Deopt              !v    %33.1, CallTarget@0x55804e3d1be0[Call#0], %0.3
BB34   <- [32]
  env             e34.0 = MkEnv              l     vn=%32.5, w=%32.4, parent=<env 0x55804e699488>, context 1
  prom-           %34.1 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p7, e34.0
  prom-           %34.2 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p8, e34.0
  prom-           %34.3 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p11, e34.0
  prom-           %34.4 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p14, e34.0
  val?            %34.5 = StaticCall         !v    findOwnerEnv[0x55804e459350](%34.1, %34.2, %34.3, %34.4) { 0 1 2n 3n } e34.0   <env+>
  void                    StVar              lW    env, %34.5, e34.0
  val?^ | miss    %34.7 = LdVar              eR    is.baseenv, e34.0
  lgl$#-          %34.8 = Identical                %34.7, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %34.8 -> BB36 (if true) | BB37 (if false)
BB35   <- [32]
  fs              %35.0 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  env             e35.1 = (MkEnv)            l     vn=%32.5, w=%32.4, parent=<env 0x55804e699488>, context 1
  fs              %35.2 = FrameState         R     0x55804e1e4250+0: [], env=e35.1, next=%35.0
  void                    Deopt              !v    %35.2, CallTarget@0x55804eaea998[Call#0], %32.6   !
BB36   <- [34]
  prom-           %36.0 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p15 (!refl), e34.0
  ct              %36.1 = PushContext        lCL   %36.0, is.baseenv(env), function(e) <(rir::DispatchTable*)0x55804e41e7|..., e34.0
  val?^           %36.2 = CastType                 up %36.0
  val?^ | miss    %36.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %36.4 = Identical                %36.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %36.4 -> BB38 (if true) | BB39 (if false)
BB37   <- [34]
  fs              %37.0 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  fs              %37.1 = FrameState         R     0x55804e1e4250+77: [], env=e34.0, next=%37.0
  void                    Deopt              !v    %37.1, CallTarget@0x55804eaea998[Call#3], %34.7   !
BB38   <- [36]
  env             e38.0 = MkEnv              l     e=%36.2, parent=<env 0x55804e699488>, context 1
  prom-           %38.1 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p21, e38.0
  prom-           %38.2 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p22, e38.0
  ct              %38.3 = PushContext        lCL   %38.1, %38.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e38.0
  val?^           %38.4 = CastType                 up %38.2
  val?^           %38.5 = CastType                 up %38.1
  env             e38.6 = MkEnv              l     x=%38.5, y=%38.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %38.7 = Force!<lazy>       !vL   %38.5, e38.6   <val?+>
  val?            %38.8 = Force!<lazy>       !vL   %38.4, e38.6   <val?+>
  val?            %38.9 = CallBuiltin        !v    identical(%38.7, %38.8, true, true, true, true, false, true) e38.6
  val?            %38.10 = PopContext         C     %38.9, %38.3   <lgl$->
  lgl$#-          %38.11 = IsType                   %38.10 isA lgl$-
  void                    Branch                   %38.11 -> BB40 (if true) | BB41 (if false)
BB39   <- [36]
  fs              %39.0 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  fs              %39.1 = FrameState         R     0x55804e1e4250+109: [], env=e34.0, next=%39.0
  env             e39.2 = (MkEnv)            l     e=%36.2, parent=<env 0x55804e699488>, context 1
  fs              %39.3 = FrameState         R     0x55804eb37490+0: [], env=e39.2, next=%39.1
  void                    Deopt              !v    %39.3, CallTarget@0x55804ea246f8[Call#0], %36.3   !
BB40   <- [38]
  lgl$-           %40.0 = CastType           d     dn %38.10
  val?            %40.1 = PopContext         C     %40.0, %36.1   <lgl$->
  lgl$#-          %40.2 = IsType                   %40.1 isA lgl$-
  void                    Branch                   %40.2 -> BB42 (if true) | BB43 (if false)
BB41   <- [38]
  fs              %41.0 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  fs              %41.1 = FrameState         R     0x55804e1e4250+109: [], env=e34.0, next=%41.0
  fs              %41.2 = FrameState         R     0x55804eb37490+37: [%38.10], env=e38.0, next=%41.1
  void                    Deopt              !v    %41.2, Typecheck@0x55804ea246f8[Type#2], %38.10   !
BB42   <- [40]
  lgl$-           %42.0 = CastType           d     dn %40.1
  lgl$#-          %42.1 = CheckTrueFalse     e     %42.0
  void                    Branch                   %42.1 -> BB30 (if true) | BB13 (if false)
BB43   <- [40]
  void                    Nop                !     
  val?            %43.1 = %40.1
  dr              %43.2 = Typecheck@0x55804eaea998[Type#10]
  goto BB11
BB30   <- [42]
  fs              %30.0 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  (cls|spec|blt)  %30.1 = LdFun              !v    stop, e34.0
  fs              %30.2 = FrameState         R     0x55804e1e4250+130: [%30.1], env=e34.0, next=%30.0
  void                    Deopt              !v    %30.2, DeadCall@0x55804eaea998[Call#4], %30.1   !
BB13   <- [42]
  val?^ | miss    %13.0 = LdVar              eR    identical, e34.0
  lgl$#-          %13.1 = Identical                %13.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %13.1 -> BB44 (if true) | BB45 (if false)
BB11   <- [43, 45]
  val?^ | miss    %11.0 = Phi                      %43.1:BB43, %45.1:BB45
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %43.2:BB43, %45.2:BB45
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  fs              %11.5 = FrameState         R     0x55804e1e4250+109: [%40.1], env=e34.0, next=%11.4
  void                    Deopt              !v    %11.5, %11.3, %11.1   !
BB44   <- [13]
  prom-           %44.0 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p16, e34.0
  prom-           %44.1 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p17, e34.0
  ct              %44.2 = PushContext        lCL   %44.0, %44.1, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e34.0
  val?^           %44.3 = CastType                 up %44.1
  val?^           %44.4 = CastType                 up %44.0
  env             e44.5 = MkEnv              l     x=%44.4, y=%44.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %44.6 = Force!<lazy>       !vL   %44.4, e44.5   <val?+>
  val?            %44.7 = Force!<lazy>       !vL   %44.3, e44.5   <val?+>
  val?            %44.8 = CallBuiltin        !v    identical(%44.6, %44.7, true, true, true, true, false, true) e44.5
  val?            %44.9 = PopContext         C     %44.8, %44.2   <lgl$->
  lgl$#-          %44.10 = IsType                   %44.9 isA lgl$-
  void                    Branch                   %44.10 -> BB46 (if true) | BB47 (if false)
BB45   <- [13]
  void                    Nop                !     
  val?^ | miss    %45.1 = %13.0
  dr              %45.2 = CallTarget@0x55804eaea998[Call#5]
  goto BB11
BB46   <- [44]
  lgl$-           %46.0 = CastType           d     dn %44.9
  lgl$-           %46.1 = Not                d     %46.0, elided
  lgl$#-          %46.2 = CheckTrueFalse     e     %46.1
  void                    Branch                   %46.2 -> BB29 (if true) | BB16 (if false)
BB47   <- [44]
  void                    Nop                !     
  val?            %47.1 = %44.9
  dr              %47.2 = Typecheck@0x55804eaea998[Type#14]
  goto BB14
BB29   <- [46]
  fs              %29.0 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  (cls|spec|blt)  %29.1 = LdFun              !v    stop, e34.0
  fs              %29.2 = FrameState         R     0x55804e1e4250+217: [%29.1], env=e34.0, next=%29.0
  void                    Deopt              !v    %29.2, DeadCall@0x55804eaea998[Call#7], %29.1   !
BB16   <- [46]
  val?^ | miss    %16.0 = LdVar              eR    get, e34.0
  lgl$#-          %16.1 = Identical                %16.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %16.1 -> BB48 (if true) | BB49 (if false)
BB14   <- [47, 49]
  val?^ | miss    %14.0 = Phi                      %47.1:BB47, %49.1:BB49
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %47.2:BB47, %49.2:BB49
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  fs              %14.5 = FrameState         R     0x55804e1e4250+195: [%44.9], env=e34.0, next=%14.4
  void                    Deopt              !v    %14.5, %14.3, %14.1   !
BB48   <- [16]
  prom-           %48.0 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p19, e34.0
  prom-           %48.1 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p20, e34.0
  val?            %48.2 = StaticCall         !v    get[0x55804ea004e0](%48.0, missingArg, %48.1, missingArg, false) { 0 2n 4n } e34.0   <env->
  void                    StVar              lW    entry, %48.2, e34.0
  val?^ | miss    %48.4 = LdVar              eR    is.environment, e34.0
  lgl$#-          %48.5 = Identical                <blt is.environment>, %48.4   <true>
  void                    Branch                   %48.5 -> BB50 (if true) | BB51 (if false)
BB49   <- [16]
  void                    Nop                !     
  val?^ | miss    %49.1 = %16.0
  dr              %49.2 = CallTarget@0x55804eaea998[Call#8]
  goto BB14
BB50   <- [48]
  val             %50.0 = ChkMissing         e     %48.2
  lgl$#-          %50.1 = CallSafeBuiltin    wed   is.environment(%48.2) 
  void                    Branch                   %50.1 -> BB20 (if true) | BB19 (if false)
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  fs              %51.1 = FrameState         R     0x55804e1e4250+313: [], env=e34.0, next=%51.0
  void                    Deopt              !v    %51.1, DeadBranchReached@0x55804eaea998[Test#0], %48.5   !
BB20   <- [50]
  void                    Visible            v     
  val?            %20.1 = PopContext         C     %48.2, %32.3   <env->
  void                    StVar              lW    entry, %20.1, e32.0
  val?^ | miss    %20.3 = LdVar              eR    get, e32.0
  lgl$#-          %20.4 = Identical                %20.3, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %20.4 -> BB52 (if true) | BB53 (if false)
BB19   <- [50]
  fs              %19.0 = FrameState         R     0x55804e9d77b0+37: [], env=e32.0
  (cls|spec|blt)  %19.1 = LdFun              !v    stop, e34.0
  fs              %19.2 = FrameState         R     0x55804e1e4250+426: [%19.1], env=e34.0, next=%19.0
  void                    Deopt              !v    %19.2, DeadCall@0x55804eaea998[Call#10], %19.1   !
BB52   <- [20]
  prom-           %52.0 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p2, e32.0
  prom-           %52.1 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p3 (!refl), e32.0
  val?            %52.2 = StaticCall         !     get[0x55804e6afb70](%52.0, %52.1, missingArg, missingArg, false) { 0 1 4n } e32.0   <real$->
  lgl$#-          %52.3 = IsType                   %52.2 isA real$-
  void                    Branch                   %52.3 -> BB54 (if true) | BB55 (if false)
BB53   <- [20]
  fs              %53.0 = FrameState         R     0x55804e9d77b0+51: [], env=e32.0
  void                    Deopt              !v    %53.0, CallTarget@0x55804e3d1be0[Call#1], %20.3   !
BB54   <- [52]
  real$-          %54.0 = CastType           d     dn %52.2
  void                    StVar              lW    value, %54.0, e32.0
  val?^ | miss    %54.2 = LdVar              eR    assign, e32.0
  lgl$#-          %54.3 = Identical                %54.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %54.3 -> BB56 (if true) | BB57 (if false)
BB55   <- [52]
  fs              %55.0 = FrameState         R     0x55804e9d77b0+105: [%52.2], env=e32.0
  void                    Deopt              !v    %55.0, Typecheck@0x55804e3d1be0[Type#5], %52.2   !
BB56   <- [54]
  prom-           %56.0 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p4, e32.0
  prom-           %56.1 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p5, e32.0
  prom-           %56.2 = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p6, e32.0
  val?            %56.3 = StaticCall         !     assign[0x55804ec24890](%56.0, %56.1, %56.2) e32.0   <real$->
  lgl$#-          %56.4 = IsType                   %56.3 isA real$-
  void                    Branch                   %56.4 -> BB58 (if true) | BB59 (if false)
BB57   <- [54]
  fs              %57.0 = FrameState         R     0x55804e9d77b0+119: [], env=e32.0
  void                    Deopt              !v    %57.0, CallTarget@0x55804e3d1be0[Call#2], %54.2   !
BB58   <- [56]
  real$-          %58.0 = CastType           d     dn %56.3
  void                    Return             l     %58.0
BB59   <- [56]
  fs              %59.0 = FrameState         R     0x55804e9d77b0+161: [%56.3], env=e32.0
  void                    Deopt              !v    %59.0, Typecheck@0x55804e3d1be0[Type#10], %56.3   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p9, e0.0
  prom-           %0.3  = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p10, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p12, e0.0
  prom-           %0.3  = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p13, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x55804bee1080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, incLocalUsageValue[0x55804e49a190]_p18, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "checkUsageFrame") e0.0   <env+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ incLocalUsageValue[0x55804e49a190]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
