
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804f5fb0e0]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804f5fb0e0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    isDDSym, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(name) <(rir::DispatchTable*)0x55804e2|...
  void                    Branch                   %0.3 -> BB58 (if true) | BB59 (if false)
BB58   <- [0]
  env             e58.0 = MkEnv              l     v=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %58.1 = MkArg                    unboundValue, [0x55804f5fb0e0]_p0, e58.0
  ct              %58.2 = PushContext        lCL   %58.1, isDDSym(v), function(name) <(rir::DispatchTable*)0x55804e2|..., e58.0
  val?^           %58.3 = CastType                 up %58.1
  val?^ | miss    %58.4 = LdVar              eR    is.symbol, <env 0x55804e699488>
  lgl$#-          %58.5 = Identical                <blt is.symbol>, %58.4   <true>
  void                    Branch                   %58.5 -> BB60 (if true) | BB61 (if false)
BB59   <- [0]
  env             e59.0 = (MkEnv)            l     v=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %59.1 = FrameState         R     0x55804eb466f0+0: [], env=e59.0
  void                    Deopt              !v    %59.1, CallTarget@0x55804f22bd28[Call#0], %0.2
BB60   <- [58]
  env             e60.0 = MkEnv              l     name=%58.3, parent=<env 0x55804e699488>, context 1
  val?            %60.1 = Force!<lazy>       !vL   %58.3, e60.0   <(sym|str)->
  lgl$#-          %60.2 = CallSafeBuiltin    wed   is.symbol(%60.1)    <lgl$->
  void                    Branch                   %60.2 -> BB56 (if true) | BB7 (if false)
BB61   <- [58]
  fs              %61.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  env             e61.1 = (MkEnv)            l     name=%58.3, parent=<env 0x55804e699488>, context 1
  fs              %61.2 = FrameState         R     0x55804ed96dd0+17: [<blt is.symbol>, %58.5], env=e61.1, next=%61.0
  void                    Deopt              !v    %61.2, DeadBranchReached@0x55804eaeb288[Test#0], %58.5   !
BB56   <- [60]
  void                    Nop                !     
  lgl$#-          %56.1 = %60.2
  goto BB8
BB7   <- [60]
  val?^ | miss    %7.0  = LdVar              eR    is.character, <env 0x55804e699488>
  lgl$#-          %7.1  = Identical                <blt is.character>, %7.0   <true>
  void                    Branch                   %7.1 -> BB62 (if true) | BB63 (if false)
BB8   <- [56, 62]
  lgl$-           %8.0  = Phi                      %62.2:BB62, %56.1:BB56
  lgl$-           %8.1  = %8.0
  lgl$-           %8.2  = AsLogical                %8.1
  lgl$#-          %8.3  = Identical                %8.2, false
  void                    Branch                   %8.3 -> BB55 (if true) | BB11 (if false)
BB62   <- [7]
  lgl$#-          %62.0 = CallSafeBuiltin    wed   is.character(%60.1)    <lgl$->
  lgl$-           %62.1 = LOr                      %60.2, %62.0
  lgl$-           %62.2 = %62.1
  goto BB8
BB63   <- [7]
  fs              %63.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %63.1 = FrameState         R     0x55804ed96dd0+91: [%60.2], env=e60.0, next=%63.0
  void                    Deopt              !v    %63.1, DeadBranchReached@0x55804eaeb288[Test#1], %7.1   !
BB55   <- [8]
  void                    Nop                !     
  lgl$-           %55.1 = %8.2
  goto BB37
BB11   <- [8]
  val?^ | miss    %11.0 = LdVar              eR    length, <env 0x55804e699488>
  lgl$#-          %11.1 = Identical                <blt length>, %11.0   <true>
  void                    Branch                   %11.1 -> BB64 (if true) | BB65 (if false)
BB37   <- [55, 88]
  lgl$-           %37.0 = Phi                      %88.4:BB88, %55.1:BB55
  lgl$-           %37.1 = %37.0
  val?            %37.2 = PopContext         C     %37.1, %58.2   <lgl$->
  lgl$#-          %37.3 = IsType                   %37.2 isA lgl$-
  void                    Branch                   %37.3 -> BB72 (if true) | BB73 (if false)
BB64   <- [11]
  val?^ | miss    %64.0 = LdVar              eR    grep, <env 0x55804e699488>
  lgl$#-          %64.1 = Identical                %64.0, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Branch                   %64.1 -> BB66 (if true) | BB67 (if false)
BB65   <- [11]
  void                    Nop                !     
  lgl$#-          %65.1 = %11.1
  dr              %65.2 = DeadBranchReached@0x55804eaeb288[Test#2]
  goto BB9
BB72   <- [37]
  lgl$-           %72.0 = CastType           d     dn %37.2
  lgl$#-          %72.1 = CheckTrueFalse     e     %72.0
  void                    Branch                   %72.1 -> BB50 (if true) | BB40 (if false)
BB73   <- [37]
  fs              %73.0 = FrameState         R     0x55804eb466f0+32: [%37.2], env=e58.0
  void                    Deopt              !v    %73.0, Typecheck@0x55804f22bd28[Type#1], %37.2   !
BB66   <- [64]
  prom-           %66.0 = MkArg                    unboundValue, [0x55804f5fb0e0]_p10, e60.0
  ct              %66.1 = PushContext        lCL   "^\.\.[[:digit:]]+$", %66.0, grep("^\.\.[[:digit:]]+$", as.character(name)), function(pattern, x, ignore.case=FALSE, perl=F|..., e60.0
  val?^           %66.2 = CastType                 up %66.0
  env             e66.3 = MkEnv              l     pattern="^\.\.[[:digit:]]+$", x=%66.2, ignore.case(miss)=false, perl(miss)=false, value(miss)=false, fixed(miss)=false, useBytes(miss)=false, invert(miss)=false, parent=R_BaseNamespace, context 1
  prom-           %66.4 = MkArg                    unboundValue, [0x55804f5fb0e0]_p20, e66.3
  ct              %66.5 = PushContext        lCL   %66.4, is.factor(x), function(x) <(rir::DispatchTable*)0x55804e0cdd|..., e66.3
  val?^           %66.6 = CastType                 up %66.4
  env             e66.7 = MkEnv              l     x=%66.6, parent=R_BaseNamespace, context 1
  prom-           %66.8 = MkArg                    unboundValue, [0x55804f5fb0e0]_p21, e66.7
  ct              %66.9 = PushContext        lCL   %66.8, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e66.7
  val?^           %66.10 = CastType                 up %66.8
  env             e66.11 = MkEnv              l     x=%66.10, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %66.12 = Force!<lazy>       !vr   %66.10,    <val?>
  val?            %66.13 = CallBuiltin        !v    inherits(%66.12, "factor", false) e66.11
  val?            %66.14 = PopContext         C     %66.13, %66.9   <lgl$->
  lgl$#-          %66.15 = IsType                   %66.14 isA lgl$-
  void                    Branch                   %66.15 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  void                    Nop                !     
  val?^ | miss    %67.1 = %64.0
  dr              %67.2 = CallTarget@0x55804eaeb288[Call#5]
  goto BB9
BB9   <- [65, 67]
  val?^ | miss    %9.0  = Phi                      %65.1:BB65, %67.1:BB67
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %65.2:BB65, %67.2:BB67
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %9.5  = FrameState         R     0x55804ed96dd0+201: [%8.1], env=e60.0, next=%9.4
  void                    Deopt              !v    %9.5, %9.3, %9.1   !
BB50   <- [72]
  void                    StVar              lW    v, "...", e58.0
  goto BB41
BB40   <- [72]
  void                    Nop                !     
  goto BB41
BB68   <- [66]
  lgl$-           %68.0 = CastType           d     dn %66.14
  val?            %68.1 = PopContext         C     %68.0, %66.5   <lgl$->
  lgl$#-          %68.2 = IsType                   %68.1 isA lgl$-
  void                    Branch                   %68.2 -> BB70 (if true) | BB71 (if false)
BB69   <- [66]
  fs              %69.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %69.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%69.0
  fs              %69.2 = FrameState         R     0x55804e0bd5b0+137: [], env=e66.3, next=%69.1
  fs              %69.3 = FrameState         R     0x55804e24e050+37: [%66.14], env=e66.7, next=%69.2
  void                    Deopt              !v    %69.3, Typecheck@0x55804d2fed88[Type#1], %66.14   !
BB41   <- [40, 50]
  val?^ | miss    %41.0 = LdVar              eR    is.baseenv, e58.0
  lgl$#-          %41.1 = Identical                %41.0, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %41.1 -> BB78 (if true) | BB79 (if false)
BB70   <- [68]
  lgl$-           %70.0 = CastType           d     dn %68.1
  lgl$-           %70.1 = AsLogical                %70.0
  lgl$#-          %70.2 = Identical                %70.1, false
  lgl$-           %70.3 = AsLogical                %70.1
  lgl$#-          %70.4 = Identical                %70.3, false
  void                    Branch                   %70.2 -> BB19 (if true) | BB16 (if false)
BB71   <- [68]
  fs              %71.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %71.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%71.0
  fs              %71.2 = FrameState         R     0x55804e0bd5b0+137: [%68.1], env=e66.3, next=%71.1
  void                    Deopt              !v    %71.2, Typecheck@0x55804e11a880[Type#4], %68.1   !
BB78   <- [41]
  prom-           %78.0 = MkArg                    unboundValue, [0x55804f5fb0e0]_p1, e58.0
  ct              %78.1 = PushContext        lCL   %78.0, is.baseenv(findOwnerEnv(v, $(w, env), stop=$(w|..., function(e) <(rir::DispatchTable*)0x55804e41e7|..., e58.0
  val?^           %78.2 = CastType                 up %78.0
  val?^ | miss    %78.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %78.4 = Identical                %78.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %78.4 -> BB82 (if true) | BB83 (if false)
BB79   <- [41]
  fs              %79.0 = FrameState         R     0x55804eb466f0+63: [], env=e58.0
  void                    Deopt              !v    %79.0, CallTarget@0x55804f22bd28[Call#1], %41.0   !
BB19   <- [70]
  void                    Branch                   %70.4 -> BB54 (if true) | BB20 (if false)
BB16   <- [70]
  val?^ | miss    %16.0 = LdVar              eR    length, e66.3
  lgl$#-          %16.1 = Identical                <blt length>, %16.0   <@?>
  void                    Branch                   %16.1 -> BB18 (if true) | BB17 (if false)
BB82   <- [78]
  env             e82.0 = MkEnv              l     e=%78.2, parent=<env 0x55804e699488>, context 1
  prom-           %82.1 = MkArg                    unboundValue, [0x55804f5fb0e0]_p12, e82.0
  prom-           %82.2 = MkArg                    unboundValue, [0x55804f5fb0e0]_p13, e82.0
  ct              %82.3 = PushContext        lCL   %82.1, %82.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e82.0
  val?^           %82.4 = CastType                 up %82.2
  val?^           %82.5 = CastType                 up %82.1
  env             e82.6 = MkEnv              l     x=%82.5, y=%82.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %82.7 = Force!<lazy>       !vL   %82.5, e82.6   <val?+>
  val?            %82.8 = Force!<lazy>       !vL   %82.4, e82.6   <val?+>
  val?            %82.9 = CallBuiltin        !     identical(%82.7, %82.8, true, true, true, true, false, true) e82.6
  val?            %82.10 = PopContext         C     %82.9, %82.3   <lgl$->
  lgl$#-          %82.11 = IsType                   %82.10 isA lgl$-
  void                    Branch                   %82.11 -> BB86 (if true) | BB87 (if false)
BB83   <- [78]
  fs              %83.0 = FrameState         R     0x55804eb466f0+95: [], env=e58.0
  env             e83.1 = (MkEnv)            l     e=%78.2, parent=<env 0x55804e699488>, context 1
  fs              %83.2 = FrameState         R     0x55804eb37490+0: [], env=e83.1, next=%83.0
  void                    Deopt              !v    %83.2, CallTarget@0x55804ea246f8[Call#0], %78.3   !
BB54   <- [19]
  void                    Nop                !     
  lgl$-           %54.1 = %70.3
  goto BB27
BB20   <- [19]
  val?^ | miss    %20.0 = LdVar              eR    is.na, e66.3
  lgl$#-          %20.1 = Identical                <blt is.na>, %20.0   <@?>
  void                    Branch                   %20.1 -> BB22 (if true) | BB21 (if false)
BB18   <- [16]
  fs              %18.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %18.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%18.0
  (cls|spec|blt)  %18.2 = LdFun              !v    levels, e66.3
  fs              %18.3 = FrameState         R     0x55804e0bd5b0+214: [%70.1, <blt length>, %18.2], env=e66.3, next=%18.1
  void                    Deopt              !v    %18.3, DeadCall@0x55804e11a880[Call#4], %18.2   !
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %17.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%17.0
  (cls|spec|blt)  %17.2 = LdFun              !v    length, e66.3
  fs              %17.3 = FrameState         R     0x55804e0bd5b0+177: [%70.1, %17.2], env=e66.3, next=%17.1
  void                    Deopt              !v    %17.3, DeadCall@0x55804e11a880[Call#2], %17.2   !
BB86   <- [82]
  lgl$-           %86.0 = CastType           d     dn %82.10
  val?            %86.1 = PopContext         C     %86.0, %78.1   <lgl$->
  lgl$#-          %86.2 = IsType                   %86.1 isA lgl$-
  void                    Branch                   %86.2 -> BB90 (if true) | BB91 (if false)
BB87   <- [82]
  fs              %87.0 = FrameState         R     0x55804eb466f0+95: [], env=e58.0
  fs              %87.1 = FrameState         R     0x55804eb37490+37: [%82.10], env=e82.0, next=%87.0
  void                    Deopt              !v    %87.1, Typecheck@0x55804ea246f8[Type#2], %82.10   !
BB27   <- [54, 80]
  lgl$-           %27.0 = Phi                      %80.5:BB80, %54.1:BB54
  lgl$-           %27.1 = %27.0
  lgl$#-          %27.2 = CheckTrueFalse     e     %27.1
  void                    Branch                   %27.2 -> BB51 (if true) | BB30 (if false)
BB22   <- [20]
  val?^ | miss    %22.0 = LdVar              eR    pattern, e66.3
  val?            %22.1 = Force!             !v    %22.0, e66.3   <val?_>
  lgl$#-          %22.2 = IsType                   %22.1 isA val?+
  void                    Branch                   %22.2 -> BB76 (if true) | BB77 (if false)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %21.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%21.0
  (cls|spec|blt)  %21.2 = LdFun              !v    is.na, e66.3
  fs              %21.3 = FrameState         R     0x55804e0bd5b0+418: [%70.3, %21.2], env=e66.3, next=%21.1
  void                    Deopt              !v    %21.3, DeadCall@0x55804e11a880[Call#6], %21.2   !
BB90   <- [86]
  lgl$-           %90.0 = CastType           d     dn %86.1
  lgl$-           %90.1 = Not                vd    %90.0, elided
  void                    Return             l     %90.1
BB91   <- [86]
  fs              %91.0 = FrameState         R     0x55804eb466f0+95: [%86.1], env=e58.0
  void                    Deopt              !v    %91.0, Typecheck@0x55804f22bd28[Type#11], %86.1   !
BB51   <- [27]
  val?^ | miss    %51.0 = LdVar              eR    is.character, e66.3
  lgl$#-          %51.1 = Identical                <blt is.character>, %51.0   <@?>
  void                    Branch                   %51.1 -> BB53 (if true) | BB52 (if false)
BB30   <- [27]
  val?^ | miss    %30.0 = LdVar              eR    is.character, e66.3
  lgl$#-          %30.1 = Identical                <blt is.character>, %30.0   <true>
  void                    Branch                   %30.1 -> BB74 (if true) | BB75 (if false)
BB76   <- [22]
  val?+           %76.0 = CastType           d     dn %22.1   <val?_>
  val?            %76.1 = Extract1_1D        wed   %76.0, 1L, elided   <val?_>
  lgl$#-          %76.2 = IsType                   %76.1 isA val?+
  void                    Branch                   %76.2 -> BB80 (if true) | BB81 (if false)
BB77   <- [22]
  fs              %77.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %77.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%77.0
  fs              %77.2 = FrameState         R     0x55804e0bd5b0+459: [%70.3, <blt is.na>, %22.1], env=e66.3, next=%77.1
  void                    Deopt              !v    %77.2, Typecheck@0x55804e11a880[Type#16], %22.1   !
BB53   <- [51]
  fs              %53.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %53.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%53.0
  (cls|spec|blt)  %53.2 = LdFun              !v    suppressWarnings, e66.3
  fs              %53.3 = FrameState         R     0x55804e0bd5b0+901: [<blt is.character>, %53.2], env=e66.3, next=%53.1
  void                    Deopt              !v    %53.3, DeadCall@0x55804e11a880[Call#14], %53.2   !
BB52   <- [51]
  fs              %52.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %52.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%52.0
  (cls|spec|blt)  %52.2 = LdFun              !v    is.character, e66.3
  fs              %52.3 = FrameState         R     0x55804e0bd5b0+864: [%52.2], env=e66.3, next=%52.1
  void                    Deopt              !v    %52.3, DeadCall@0x55804e11a880[Call#11], %52.2   !
BB74   <- [30]
  val?^ | miss    %74.0 = LdVar              eR    x, e66.3
  val?            %74.1 = Force!<wrapped>    !v    %74.0, e66.3   <str->
  lgl$#-          %74.2 = CallSafeBuiltin    wed   is.character(%74.1)    <lgl$->
  void                    Branch                   %74.2 -> BB32 (if true) | BB31 (if false)
BB75   <- [30]
  fs              %75.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %75.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%75.0
  fs              %75.2 = FrameState         R     0x55804e0bd5b0+533: [%27.1], env=e66.3, next=%75.1
  void                    Deopt              !v    %75.2, DeadBranchReached@0x55804e11a880[Test#6], %30.1   !
BB80   <- [76]
  val?+           %80.0 = CastType           d     dn %76.1   <val?_>
  lgl+            %80.1 = CallSafeBuiltin    wed   is.na(%80.0)    <val?_>
  lgl             %80.2 = Not                wed   %80.1, elided
  lgl$-           %80.3 = AsLogical          e     %80.2
  lgl$-           %80.4 = LAnd                     %70.3, %80.3
  lgl$-           %80.5 = %80.4
  goto BB27
BB81   <- [76]
  fs              %81.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %81.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%81.0
  fs              %81.2 = FrameState         R     0x55804e0bd5b0+502: [%70.3, <blt is.na>, %76.1], env=e66.3, next=%81.1
  void                    Deopt              !v    %81.2, Typecheck@0x55804e11a880[Type#17], %76.1   !
BB32   <- [74]
  val?^ | miss    %32.0 = LdVar              eR    pattern, e66.3
  val?            %32.1 = Force!<value>      !v    %32.0, e66.3   <str$->
  val?^ | miss    %32.2 = LdVar              eR    x, e66.3
  val?            %32.3 = Force!<wrapped>    !v    %32.2, e66.3   <str->
  val?^ | miss    %32.4 = LdVar              eR    ignore.case, e66.3
  val?            %32.5 = Force!<lazy>       !v    %32.4, e66.3   <lgl$->
  val?^ | miss    %32.6 = LdVar              eR    value, e66.3
  val?            %32.7 = Force!<lazy>       !v    %32.6, e66.3   <lgl$->
  val?^ | miss    %32.8 = LdVar              eR    perl, e66.3
  val?            %32.9 = Force!<lazy>       !v    %32.8, e66.3   <lgl$->
  val?^ | miss    %32.10 = LdVar              eR    fixed, e66.3
  val?            %32.11 = Force!<lazy>       !v    %32.10, e66.3   <lgl$->
  val?^ | miss    %32.12 = LdVar              eR    useBytes, e66.3
  val?            %32.13 = Force!<lazy>       !v    %32.12, e66.3   <lgl$->
  val?^ | miss    %32.14 = LdVar              eR    invert, e66.3
  val?            %32.15 = Force!<lazy>       !v    %32.14, e66.3   <lgl$->
  val?            %32.16 = CallBuiltin        !v    grep(%32.1, %32.3, %32.5, %32.7, %32.9, %32.11, %32.13, %32.15) e66.3
  val?            %32.17 = PopContext         C     %32.16, %66.1   <int->
  lgl$#-          %32.18 = IsType                   %32.17 isA int-
  void                    Branch                   %32.18 -> BB84 (if true) | BB85 (if false)
BB31   <- [74]
  fs              %31.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %31.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>], env=e60.0, next=%31.0
  (cls|spec|blt)  %31.2 = LdFun              !v    structure, e66.3
  fs              %31.3 = FrameState         R     0x55804e0bd5b0+652: [%31.2], env=e66.3, next=%31.1
  void                    Deopt              !v    %31.3, DeadCall@0x55804e11a880[Call#8], %31.2   !
BB84   <- [32]
  int-            %84.0 = CastType           d     dn %32.17
  (int|real)$-    %84.1 = CallSafeBuiltin    wed   length(%84.0)    <int$->
  lgl$#-          %84.2 = IsType                   %84.1 isA int$-
  void                    Branch                   %84.2 -> BB88 (if true) | BB89 (if false)
BB85   <- [32]
  fs              %85.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %85.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>, %32.17], env=e60.0, next=%85.0
  void                    Deopt              !v    %85.1, Typecheck@0x55804eaeb288[Type#11], %32.17   !
BB88   <- [84]
  int$-           %88.0 = CastType           d     dn %84.1
  lgl$-           %88.1 = Neq                d     %88.0, 0, elided   <lgl$->
  lgl$-           %88.2 = AsLogical                %88.1
  lgl$-           %88.3 = LAnd                     %8.2, %88.2
  lgl$-           %88.4 = %88.3
  goto BB37
BB89   <- [84]
  fs              %89.0 = FrameState         R     0x55804eb466f0+32: [], env=e58.0
  fs              %89.1 = FrameState         R     0x55804ed96dd0+328: [%8.2, %84.1], env=e60.0, next=%89.0
  void                    Deopt              !v    %89.1, Typecheck@0x55804eaeb288[Type#12], %84.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     findOwnerEnv, <0x55804e95cf28>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f5fb0e0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f5fb0e0]_p3, e0.0
  prom-           %0.4  = MkArg                    unboundValue, [0x55804f5fb0e0]_p6, e0.0
  prom-           %0.5  = MkArg                    unboundValue, [0x55804f5fb0e0]_p9, e0.0
  val?            %0.6  = NamedCall          !     %0.1(%0.2, %0.3, stop=%0.4, default=%0.5) e0.0   <env+>
  void                    Return             l     %0.6
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f5fb0e0]_p4, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f5fb0e0]_p5, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f5fb0e0]_p7, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f5fb0e0]_p8, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f5fb0e0]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|str)->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3

│ [0x55804f5fb0e0]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
