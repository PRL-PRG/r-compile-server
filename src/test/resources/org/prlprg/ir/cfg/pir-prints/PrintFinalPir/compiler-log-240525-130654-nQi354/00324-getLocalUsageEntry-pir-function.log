
┌──────────────────────────────────────────────────────────────────────────────┐
│ getLocalUsageEntry[0x55804e62aaf0]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
getLocalUsageEntry[0x55804e62aaf0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    findOwnerEnv, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Branch                   %0.3 -> BB22 (if true) | BB23 (if false)
BB22   <- [0]
  env             e22.0 = MkEnv              l     vn=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %22.1 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p0, e22.0
  prom-           %22.2 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p1, e22.0
  prom-           %22.3 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p4, e22.0
  prom-           %22.4 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p7, e22.0
  val?            %22.5 = StaticCall         !v    findOwnerEnv[0x55804d014d70](%22.1, %22.2, %22.3, %22.4) { 0 1 2n 3n } e22.0   <env+>
  void                    StVar              lW    env, %22.5, e22.0
  val?^ | miss    %22.7 = LdVar              eR    is.baseenv, e22.0
  lgl$#-          %22.8 = Identical                %22.7, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %22.8 -> BB24 (if true) | BB25 (if false)
BB23   <- [0]
  env             e23.0 = (MkEnv)            l     vn=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %23.1 = FrameState         R     0x55804e1e4250+0: [], env=e23.0
  void                    Deopt              !v    %23.1, CallTarget@0x55804eaea998[Call#0], %0.2
BB24   <- [22]
  prom-           %24.0 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p8 (!refl), e22.0
  ct              %24.1 = PushContext        lCL   %24.0, is.baseenv(env), function(e) <(rir::DispatchTable*)0x55804e41e7|..., e22.0
  val?^           %24.2 = CastType                 up %24.0
  val?^ | miss    %24.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %24.4 = Identical                %24.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %24.4 -> BB26 (if true) | BB27 (if false)
BB25   <- [22]
  fs              %25.0 = FrameState         R     0x55804e1e4250+77: [], env=e22.0
  void                    Deopt              !v    %25.0, CallTarget@0x55804eaea998[Call#3], %22.7   !
BB26   <- [24]
  env             e26.0 = MkEnv              l     e=%24.2, parent=<env 0x55804e699488>, context 1
  prom-           %26.1 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p14, e26.0
  prom-           %26.2 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p15, e26.0
  ct              %26.3 = PushContext        lCL   %26.1, %26.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e26.0
  val?^           %26.4 = CastType                 up %26.2
  val?^           %26.5 = CastType                 up %26.1
  env             e26.6 = MkEnv              l     x=%26.5, y=%26.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %26.7 = Force!<lazy>       !vL   %26.5, e26.6   <val?+>
  val?            %26.8 = Force!<lazy>       !vL   %26.4, e26.6   <val?+>
  val?            %26.9 = CallBuiltin        !v    identical(%26.7, %26.8, true, true, true, true, false, true) e26.6
  val?            %26.10 = PopContext         C     %26.9, %26.3   <lgl$->
  lgl$#-          %26.11 = IsType                   %26.10 isA lgl$-
  void                    Branch                   %26.11 -> BB28 (if true) | BB29 (if false)
BB27   <- [24]
  fs              %27.0 = FrameState         R     0x55804e1e4250+109: [], env=e22.0
  env             e27.1 = (MkEnv)            l     e=%24.2, parent=<env 0x55804e699488>, context 1
  fs              %27.2 = FrameState         R     0x55804eb37490+0: [], env=e27.1, next=%27.0
  void                    Deopt              !v    %27.2, CallTarget@0x55804ea246f8[Call#0], %24.3   !
BB28   <- [26]
  lgl$-           %28.0 = CastType           d     dn %26.10
  val?            %28.1 = PopContext         C     %28.0, %24.1   <lgl$->
  lgl$#-          %28.2 = IsType                   %28.1 isA lgl$-
  void                    Branch                   %28.2 -> BB30 (if true) | BB31 (if false)
BB29   <- [26]
  fs              %29.0 = FrameState         R     0x55804e1e4250+109: [], env=e22.0
  fs              %29.1 = FrameState         R     0x55804eb37490+37: [%26.10], env=e26.0, next=%29.0
  void                    Deopt              !v    %29.1, Typecheck@0x55804ea246f8[Type#2], %26.10   !
BB30   <- [28]
  lgl$-           %30.0 = CastType           d     dn %28.1
  lgl$#-          %30.1 = CheckTrueFalse     e     %30.0
  void                    Branch                   %30.1 -> BB20 (if true) | BB11 (if false)
BB31   <- [28]
  void                    Nop                !     
  val?            %31.1 = %28.1
  dr              %31.2 = Typecheck@0x55804eaea998[Type#10]
  goto BB9
BB20   <- [30]
  (cls|spec|blt)  %20.0 = LdFun              !v    stop, e22.0
  fs              %20.1 = FrameState         R     0x55804e1e4250+130: [%20.0], env=e22.0
  void                    Deopt              !v    %20.1, DeadCall@0x55804eaea998[Call#4], %20.0   !
BB11   <- [30]
  val?^ | miss    %11.0 = LdVar              eR    identical, e22.0
  lgl$#-          %11.1 = Identical                %11.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %11.1 -> BB32 (if true) | BB33 (if false)
BB9   <- [31, 33]
  val?^ | miss    %9.0  = Phi                      %31.1:BB31, %33.1:BB33
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %31.2:BB31, %33.2:BB33
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804e1e4250+109: [%28.1], env=e22.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB32   <- [11]
  prom-           %32.0 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p9, e22.0
  prom-           %32.1 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p10, e22.0
  ct              %32.2 = PushContext        lCL   %32.0, %32.1, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e22.0
  val?^           %32.3 = CastType                 up %32.1
  val?^           %32.4 = CastType                 up %32.0
  env             e32.5 = MkEnv              l     x=%32.4, y=%32.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %32.6 = Force!<lazy>       !vL   %32.4, e32.5   <val?+>
  val?            %32.7 = Force!<lazy>       !vL   %32.3, e32.5   <val?+>
  val?            %32.8 = CallBuiltin        !v    identical(%32.6, %32.7, true, true, true, true, false, true) e32.5
  val?            %32.9 = PopContext         C     %32.8, %32.2   <lgl$->
  lgl$#-          %32.10 = IsType                   %32.9 isA lgl$-
  void                    Branch                   %32.10 -> BB34 (if true) | BB35 (if false)
BB33   <- [11]
  void                    Nop                !     
  val?^ | miss    %33.1 = %11.0
  dr              %33.2 = CallTarget@0x55804eaea998[Call#5]
  goto BB9
BB34   <- [32]
  lgl$-           %34.0 = CastType           d     dn %32.9
  lgl$-           %34.1 = Not                d     %34.0, elided
  lgl$#-          %34.2 = CheckTrueFalse     e     %34.1
  void                    Branch                   %34.2 -> BB19 (if true) | BB14 (if false)
BB35   <- [32]
  void                    Nop                !     
  val?            %35.1 = %32.9
  dr              %35.2 = Typecheck@0x55804eaea998[Type#14]
  goto BB12
BB19   <- [34]
  (cls|spec|blt)  %19.0 = LdFun              !v    stop, e22.0
  fs              %19.1 = FrameState         R     0x55804e1e4250+217: [%19.0], env=e22.0
  void                    Deopt              !v    %19.1, DeadCall@0x55804eaea998[Call#7], %19.0   !
BB14   <- [34]
  val?^ | miss    %14.0 = LdVar              eR    get, e22.0
  lgl$#-          %14.1 = Identical                %14.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %14.1 -> BB36 (if true) | BB37 (if false)
BB12   <- [35, 37]
  val?^ | miss    %12.0 = Phi                      %35.1:BB35, %37.1:BB37
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %35.2:BB35, %37.2:BB37
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x55804e1e4250+195: [%32.9], env=e22.0
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB36   <- [14]
  prom-           %36.0 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p12, e22.0
  prom-           %36.1 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p13, e22.0
  val?            %36.2 = StaticCall         !v    get[0x55804ec21800](%36.0, missingArg, %36.1, missingArg, false) { 0 2n 4n } e22.0   <env->
  void                    StVar              lW    entry, %36.2, e22.0
  val?^ | miss    %36.4 = LdVar              eR    is.environment, e22.0
  lgl$#-          %36.5 = Identical                <blt is.environment>, %36.4   <true>
  void                    Branch                   %36.5 -> BB38 (if true) | BB39 (if false)
BB37   <- [14]
  void                    Nop                !     
  val?^ | miss    %37.1 = %14.0
  dr              %37.2 = CallTarget@0x55804eaea998[Call#8]
  goto BB12
BB38   <- [36]
  val             %38.0 = ChkMissing         e     %36.2
  lgl$#-          %38.1 = CallSafeBuiltin    wed   is.environment(%36.2) 
  void                    Branch                   %38.1 -> BB18 (if true) | BB17 (if false)
BB39   <- [36]
  fs              %39.0 = FrameState         R     0x55804e1e4250+313: [], env=e22.0
  void                    Deopt              !v    %39.0, DeadBranchReached@0x55804eaea998[Test#0], %36.5   !
BB18   <- [38]
  void                    Visible            v     
  void                    Return             l     %36.2
BB17   <- [38]
  (cls|spec|blt)  %17.0 = LdFun              !v    stop, e22.0
  fs              %17.1 = FrameState         R     0x55804e1e4250+426: [%17.0], env=e22.0
  void                    Deopt              !v    %17.1, DeadCall@0x55804eaea998[Call#10], %17.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p5, e0.0
  prom-           %0.3  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p6, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x55804bee1080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e62aaf0]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "checkUsageFrame") e0.0   <env+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ getLocalUsageEntry[0x55804e62aaf0]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
