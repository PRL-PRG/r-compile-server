
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkPrimopCall[0x55804eb15080]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl2,NonRefl3             │
│ Properties:                                                                  │
├────── Final PIR Version
checkPrimopCall[0x55804eb15080]
BB0
  val?~           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    anyMissing, <env 0x55804e699488>
  lgl$#-          %0.5  = Identical                %0.4, function(args) <(rir::DispatchTable*)0x55804e9|...
  void                    Branch                   %0.5 -> BB77 (if true) | BB78 (if false)
BB77   <- [0]
  env             e77.0 = MkEnv              l     fn=%0.3, e=%0.2, isBuiltin=%0.1, signal=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %77.1 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p0, e77.0
  val?^           %77.2 = CastType                 up %77.1
  val?^ | miss    %77.3 = LdVar              eR    length, <env 0x55804e699488>
  lgl$#-          %77.4 = Identical                <blt length>, %77.3   <true>
  void                    Branch                   %77.4 -> BB79 (if true) | BB80 (if false)
BB78   <- [0]
  void                    Nop                !     
  val?^ | miss    %78.1 = %0.4
  dr              %78.2 = CallTarget@0x55804e1eb880[Call#0]
  goto BB76
BB79   <- [77]
  val?            %79.0 = Force!<lazy>       !v    %0.2, e77.0   <code->
  lgl$#-          %79.1 = IsType                   %79.0 isA val?-
  void                    Branch                   %79.1 -> BB81 (if true) | BB82 (if false)
BB80   <- [77]
  void                    Nop                !     
  lgl$#-          %80.1 = %77.4
  dr              %80.2 = DeadBranchReached@0x55804eaebc28[Test#0]
  goto BB76
BB76   <- [78, 80]
  val?^ | miss    %76.0 = Phi                      %78.1:BB78, %80.1:BB80
  val?^ | miss    %76.1 = %76.0
  dr              %76.2 = Phi                      %78.2:BB78, %80.2:BB80
  dr              %76.3 = %76.2
  env             e76.4 = (MkEnv)            l     fn=%0.3, e=%0.2, isBuiltin=%0.1, signal=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %76.5 = FrameState         R     0x55804e9fc4a0+0: [], env=e76.4
  void                    Deopt              !v    %76.5, %76.3, %76.1
BB81   <- [79]
  val?-           %81.0 = CastType           d     dn %79.0   <code->
  lgl$#-          %81.1 = IsType                   %81.0 isA val+   <true>
  env             e81.2 = (MkEnv)            l     args=%77.2, i=unboundValue, a=unboundValue, parent=<env 0x55804e699488>, context 0
  void                    Branch                   %81.1 -> BB75 (if true) | BB5 (if false)
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x55804e9fc4a0+32: [], env=e77.0
  env             e82.1 = (MkEnv)            l     args=%77.2, i=unboundValue, a=unboundValue, parent=<env 0x55804e699488>, context 0
  fs              %82.2 = FrameState         R     0x55804eb46ed0+76: [1, <blt length>], env=e82.1, next=%82.0
  fs              %82.3 = FrameState         R     0x55804e17ef70+5(pr): [%79.0], env=e77.0, next=%82.2
  void                    Deopt              !v    %82.3, Typecheck@0x55804e1eb880[Type#1], %79.0   !
BB75   <- [81]
  void                    Nop                !     
  real$#-         %75.1 = -1
  goto BB6
BB5   <- [81]
  prom-           %5.0  = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p2 (!refl), 
  prom-           %5.1  = %5.0
  goto BB6
BB6   <- [5, 75]
  (real|prom)-    %6.0  = Phi                      %75.1:BB75, %5.1:BB5
  (real|prom)-    %6.1  = %6.0
  val?            %6.2  = Extract1_1D        wed   %81.0, %6.1, elided   <code->
  prom-           %6.3  = MkArg                    %6.2, checkPrimopCall[0x55804eb15080]_p3 (!refl), e77.0
  val?~           %6.4  = CastType                 up %6.3
  void                    StArg              lWd   args, %6.4, e81.2
  lgl$#-          %6.6  = IsType                   %6.2 isA val?-
  void                    Branch                   %6.6 -> BB83 (if true) | BB84 (if false)
BB83   <- [6]
  val?-           %83.0 = CastType           d     dn %6.2   <code->
  (int|real)$-    %83.1 = CallSafeBuiltin    wed   length(%83.0)    <int$->
  lgl$#-          %83.2 = IsType                   %83.1 isA int$-
  void                    Branch                   %83.2 -> BB85 (if true) | BB86 (if false)
BB84   <- [6]
  fs              %84.0 = FrameState         R     0x55804e9fc4a0+32: [], env=e77.0
  fs              %84.1 = FrameState         R     0x55804eb46ed0+76: [1, <blt length>, %6.2], env=e81.2, next=%84.0
  void                    Deopt              !v    %84.1, Typecheck@0x55804eaebc28[Type#1], %6.2   !
BB85   <- [83]
  int$-           %85.0 = CastType           d     dn %83.1
  lgl$#-          %85.1 = ColonInputEffects        1, %85.0   <true>
  void                    Branch                   %85.1 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  void                    Nop                !     
  (int|real)$-    %86.1 = %83.1
  dr              %86.2 = Typecheck@0x55804eaebc28[Type#2]
  goto BB9
BB87   <- [85]
  int$#-          %87.0 = ColonCastRhs       e     1L, %85.0   <int$->
  lgl$#-          %87.1 = Lte                d     1L, %87.0, elided   <true>
  void                    Branch                   %87.1 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  void                    Nop                !     
  lgl$#-          %88.1 = %85.1
  dr              %88.2 = DeadBranchReached@0x55804eaebc28[Test#1]
  goto BB9
BB9   <- [86, 88, 90, 92]
  val?^ | miss    %9.0  = Phi                      %86.1:BB86, %88.1:BB88, %90.1:BB90, %92.1:BB92
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %86.2:BB86, %88.2:BB88, %90.2:BB90, %92.2:BB92
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804e9fc4a0+32: [], env=e77.0
  fs              %9.5  = FrameState         R     0x55804eb46ed0+98: [1, %83.1], env=e81.2, next=%9.4
  void                    Deopt              !v    %9.5, %9.3, %9.1   !
BB89   <- [87]
  lgl$#-          %89.0 = Neq                d     %87.0, 1L, elided   <true>
  void                    Branch                   %89.0 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  void                    Nop                !     
  lgl$#-          %90.1 = %87.1
  dr              %90.2 = DeadBranchReached@0x55804eaebc28[Test#3]
  goto BB9
BB91   <- [89]
  void                    StVar              lWd   i, 1L, e81.2
  lgl$#-          %91.1 = IsType                   %83.0 isA val+   <true>
  void                    Branch                   %91.1 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  void                    Nop                !     
  lgl$#-          %92.1 = %89.0
  dr              %92.2 = DeadBranchReached@0x55804eaebc28[Test#4]
  goto BB9
BB93   <- [91]
  val?            %93.0 = Extract2_1D        wed   %83.0, 1L, elided   <(sym|code)->
  void                    StVar              lWd   a, %93.0, e81.2
  lgl$-           %93.2 = Missing            eR    a, e81.2
  lgl$#-          %93.3 = CheckTrueFalse     e     %93.2
  void                    Branch                   %93.3 -> BB74 (if true) | BB13 (if false)
BB94   <- [91]
  fs              %94.0 = FrameState         R     0x55804e9fc4a0+32: [], env=e77.0
  fs              %94.1 = FrameState         R     0x55804eb46ed0+226: [1L, %87.0, 1L], env=e81.2, next=%94.0
  void                    Deopt              !v    %94.1, DeadBranchReached@0x55804eaebc28[Test#5], %91.1   !
BB74   <- [93]
  void                    Visible            v     
  lgl$#-          %74.1 = true
  goto BB16
BB13   <- [93]
  void                    Nop                !     
  int$#-          %13.1 = 2L
  goto BB14
BB16   <- [74, 15, 73]
  lgl$#-          %16.0 = Phi                      %73.1:BB73, %15.1:BB15, %74.1:BB74
  lgl$#-          %16.1 = %16.0
  void                    Branch                   %16.1 -> BB61 (if true) | BB17 (if false)
BB14   <- [13, 72]
  int$#-          %14.0 = Phi                      %13.1:BB13, %72.1:BB72
  int$#-          %14.1 = %14.0
  lgl$#-          %14.2 = Neq                d     %87.0, %14.1, elided
  void                    Branch                   %14.2 -> BB71 (if true) | BB15 (if false)
BB61   <- [16]
  val?^ | miss    %61.0 = LdVar              eR    isBuiltin, e77.0
  void                    Visible            v     
  val?            %61.2 = Force!             !     %61.0, e77.0   <val?_>
  lgl$-           %61.3 = AsLogical          e     %61.2
  lgl$#-          %61.4 = Identical                %61.3, true
  void                    Branch                   %61.4 -> BB70 (if true) | BB64 (if false)
BB17   <- [16]
  void                    Nop                !     
  goto BB18
BB71   <- [14]
  int$#-          %71.0 = Add                d     %14.1, 1L, elided
  val?            %71.1 = Extract2_1D        wed   %83.0, %14.1, elided   <(str|code)->
  void                    StVar              lWd   a, %71.1, e81.2
  lgl$-           %71.3 = Missing            eR    a, e81.2
  lgl$#-          %71.4 = CheckTrueFalse     e     %71.3
  void                    Branch                   %71.4 -> BB73 (if true) | BB72 (if false)
BB15   <- [14]
  void                    Visible            v     
  lgl$#-          %15.1 = false
  goto BB16
BB70   <- [61]
  void                    Nop                !     
  lgl$-           %70.1 = %61.3
  goto BB67
BB64   <- [61]
  val?^ | miss    %64.0 = LdVar              eR    %in%, e77.0
  lgl$#-          %64.1 = Identical                %64.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %64.1 -> BB115 (if true) | BB116 (if false)
BB18   <- [17, 68]
  val?^ | miss    %18.0 = LdVar              eR    exists, e77.0
  lgl$#-          %18.1 = Identical                %18.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %18.1 -> BB95 (if true) | BB96 (if false)
BB73   <- [71]
  void                    Visible            v     
  lgl$#-          %73.1 = true
  goto BB16
BB72   <- [71]
  void                    Nop                !     
  int$#-          %72.1 = %71.0
  goto BB14
BB67   <- [70, 127]
  lgl$-           %67.0 = Phi                      %127.3:BB127, %70.1:BB70
  lgl$-           %67.1 = %67.0
  lgl$#-          %67.2 = CheckTrueFalse     e     %67.1
  void                    Branch                   %67.2 -> BB69 (if true) | BB68 (if false)
BB115   <- [64]
  prom-           %115.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p6, e77.0
  val?^ | miss    %115.1 = LdVar              eR    fn, e77.0
  void                    Visible            v     
  val?            %115.3 = Force!<lazy>       !     %115.1, e77.0   <str$->
  prom-           %115.4 = MkArg                    %115.3, checkPrimopCall[0x55804eb15080]_p5 (!refl), 
  val?            %115.5 = StaticCall         !     %in%[0x55804e797a10](%115.4, %115.0) e77.0   <lgl$->
  lgl$#-          %115.6 = IsType                   %115.5 isA lgl$-
  void                    Branch                   %115.6 -> BB127 (if true) | BB128 (if false)
BB116   <- [64]
  fs              %116.0 = FrameState         R     0x55804e9fc4a0+57: [%61.2], env=e77.0
  void                    Deopt              !v    %116.0, CallTarget@0x55804e1eb880[Call#1], %64.0   !
BB95   <- [18]
  val?            %95.0 = StaticCall         !     exists[0x55804e6db960](".GenericArgsEnv") e77.0   <lgl$->
  lgl$#-          %95.1 = IsType                   %95.0 isA lgl$-
  void                    Branch                   %95.1 -> BB97 (if true) | BB98 (if false)
BB96   <- [18]
  fs              %96.0 = FrameState         R     0x55804e9fc4a0+157: [], env=e77.0
  void                    Deopt              !v    %96.0, CallTarget@0x55804e1eb880[Call#5], %18.0   !
BB69   <- [67]
  (cls|spec|blt)  %69.0 = LdFun              !v    signal, e77.0
  fs              %69.1 = FrameState         R     0x55804e9fc4a0+129: [%69.0], env=e77.0
  void                    Deopt              !v    %69.1, DeadCall@0x55804e1eb880[Call#2], %69.0   !
BB68   <- [67]
  void                    Nop                !     
  goto BB18
BB127   <- [115]
  lgl$-           %127.0 = CastType           d     dn %115.5
  lgl$-           %127.1 = AsLogical                %127.0
  lgl$-           %127.2 = LOr                      %61.3, %127.1
  lgl$-           %127.3 = %127.2
  goto BB67
BB128   <- [115]
  fs              %128.0 = FrameState         R     0x55804e9fc4a0+106: [%61.3, %115.5], env=e77.0
  void                    Deopt              !v    %128.0, Typecheck@0x55804e1eb880[Type#7], %115.5   !
BB97   <- [95]
  lgl$-           %97.0 = CastType           d     dn %95.0
  lgl$-           %97.1 = AsLogical                %97.0
  lgl$#-          %97.2 = Identical                %97.1, false
  void                    Branch                   %97.2 -> BB60 (if true) | BB23 (if false)
BB98   <- [95]
  void                    Nop                !     
  val?            %98.1 = %95.0
  dr              %98.2 = Typecheck@0x55804e1eb880[Type#11]
  goto BB21
BB60   <- [97]
  void                    Nop                !     
  lgl$-           %60.1 = %97.1
  goto BB26
BB23   <- [97]
  val?^ | miss    %23.0 = LdVar              eR    exists, e77.0
  lgl$#-          %23.1 = Identical                %23.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %23.1 -> BB103 (if true) | BB104 (if false)
BB21   <- [98, 104]
  val?^ | miss    %21.0 = Phi                      %98.1:BB98, %104.1:BB104
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %98.2:BB98, %104.2:BB104
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55804e9fc4a0+189: [%95.0], env=e77.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB26   <- [60, 119]
  lgl$-           %26.0 = Phi                      %119.3:BB119, %60.1:BB60
  lgl$-           %26.1 = %26.0
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB51 (if true) | BB29 (if false)
BB103   <- [23]
  prom-           %103.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p7, e77.0
  prom-           %103.1 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p8, e77.0
  val?            %103.2 = StaticCall         !     exists[0x55804ef6eaa0](%103.0, %103.1) e77.0   <lgl$->
  lgl$#-          %103.3 = IsType                   %103.2 isA lgl$-
  void                    Branch                   %103.3 -> BB119 (if true) | BB120 (if false)
BB104   <- [23]
  void                    Nop                !     
  val?^ | miss    %104.1 = %23.0
  dr              %104.2 = CallTarget@0x55804e1eb880[Call#6]
  goto BB21
BB51   <- [26]
  val?^ | miss    %51.0 = LdVar              eR    get, e77.0
  lgl$#-          %51.1 = Identical                %51.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %51.1 -> BB101 (if true) | BB102 (if false)
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    exists, e77.0
  lgl$#-          %29.1 = Identical                %29.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %29.1 -> BB99 (if true) | BB100 (if false)
BB119   <- [103]
  lgl$-           %119.0 = CastType           d     dn %103.2
  lgl$-           %119.1 = AsLogical                %119.0
  lgl$-           %119.2 = LAnd                     %97.1, %119.1
  lgl$-           %119.3 = %119.2
  goto BB26
BB120   <- [103]
  fs              %120.0 = FrameState         R     0x55804e9fc4a0+238: [%97.1, %103.2], env=e77.0
  void                    Deopt              !v    %120.0, Typecheck@0x55804e1eb880[Type#14], %103.2   !
BB101   <- [51]
  prom-           %101.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p11, e77.0
  prom-           %101.1 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p12, e77.0
  val?            %101.2 = StaticCall         !v    get[0x55804efcc560](%101.0, missingArg, %101.1) { 0 2n } e77.0   <cls->
  void                    StVar              lW    def, %101.2, e77.0
  val?^ | miss    %101.4 = LdVar              eR    checkCall, e77.0
  lgl$#-          %101.5 = Identical                %101.4, function(def, call, signal=warning0) <(rir::Di|...
  void                    Branch                   %101.5 -> BB111 (if true) | BB112 (if false)
BB102   <- [51]
  void                    Nop                !     
  val?^ | miss    %102.1 = %51.0
  dr              %102.2 = CallTarget@0x55804e1eb880[Call#22]
  goto BB27
BB99   <- [29]
  val?            %99.0 = StaticCall         !     exists[0x55804e6db960](".ArgsEnv") e77.0   <lgl$->
  lgl$#-          %99.1 = IsType                   %99.0 isA lgl$-
  void                    Branch                   %99.1 -> BB105 (if true) | BB106 (if false)
BB100   <- [29]
  void                    Nop                !     
  val?^ | miss    %100.1 = %29.0
  dr              %100.2 = CallTarget@0x55804e1eb880[Call#8]
  goto BB27
BB111   <- [101]
  prom-           %111.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p13 (!refl), e77.0
  prom-           %111.1 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p14, e77.0
  prom-           %111.2 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p15, e77.0
  ct              %111.3 = PushContext        lCL   %111.0, %111.1, %111.2, checkCall(def, e, signal), function(def, call, signal=warning0) <(rir::Di|..., e77.0
  val?^           %111.4 = CastType                 up %111.2
  val?^           %111.5 = CastType                 up %111.1
  val?^           %111.6 = CastType                 up %111.0
  env             e111.7 = MkEnv              l     def=%111.6, call=%111.5, signal=%111.4, parent=<env 0x55804e699488>, context 1
  cls             %111.8 = MkCls                    checkCall>testMatch@0, e111.7
  void                    StVar              lW    testMatch, %111.8, e111.7
  cls             %111.10 = MkCls                    checkCall@Prom(1)0, e111.7
  val?^ | miss    %111.11 = LdVar              eR    tryCatch, <env 0x55804e699488>
  lgl$#-          %111.12 = Identical                %111.11, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %111.12 -> BB113 (if true) | BB114 (if false)
BB112   <- [101]
  fs              %112.0 = FrameState         R     0x55804e9fc4a0+923: [], env=e77.0
  void                    Deopt              !v    %112.0, CallTarget@0x55804e1eb880[Call#24], %101.4   !
BB27   <- [100, 102]
  val?^ | miss    %27.0 = Phi                      %100.1:BB100, %102.1:BB102
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %100.2:BB100, %102.2:BB102
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x55804e9fc4a0+245: [%26.1], env=e77.0
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
BB105   <- [99]
  lgl$-           %105.0 = CastType           d     dn %99.0
  lgl$-           %105.1 = AsLogical                %105.0
  lgl$#-          %105.2 = Identical                %105.1, false
  void                    Branch                   %105.2 -> BB50 (if true) | BB32 (if false)
BB106   <- [99]
  void                    Nop                !     
  val?            %106.1 = %99.0
  dr              %106.2 = Typecheck@0x55804e1eb880[Type#15]
  goto BB30
BB113   <- [111]
  prom-           %113.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p16, e111.7
  prom-           %113.1 = MkArg                    %111.10, checkPrimopCall[0x55804eb15080]_p17 (!refl), e111.7
  dots-           %113.2 = DotsList           l     error=%113.1
  val?            %113.3 = StaticCall         !v    tryCatch[0x55804f1b56e0](%113.0, %113.2) { 0 1n } e111.7   <nil->
  lgl$-           %113.4 = Is                       %113.3, NULL
  void                    StVar              lW    msg, %113.3, e111.7
  val             %113.6 = ChkMissing         e     %113.3
  lgl$-           %113.7 = Not                d     %113.4, elided
  lgl$#-          %113.8 = CheckTrueFalse     e     %113.7
  void                    Branch                   %113.8 -> BB59 (if true) | BB56 (if false)
BB114   <- [111]
  fs              %114.0 = FrameState         R     0x55804e9fc4a0+965: [], env=e77.0
  fs              %114.1 = FrameState         R     0x55804e40e710+25: [], env=e111.7, next=%114.0
  void                    Deopt              !v    %114.1, CallTarget@0x55804e09bf70[Call#0], %111.11   !
BB50   <- [105]
  void                    Nop                !     
  lgl$-           %50.1 = %105.1
  goto BB35
BB32   <- [105]
  val?^ | miss    %32.0 = LdVar              eR    exists, e77.0
  lgl$#-          %32.1 = Identical                %32.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %32.1 -> BB107 (if true) | BB108 (if false)
BB30   <- [106, 108]
  val?^ | miss    %30.0 = Phi                      %106.1:BB106, %108.1:BB108
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %106.2:BB106, %108.2:BB108
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55804e9fc4a0+283: [%99.0], env=e77.0
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB59   <- [113]
  fs              %59.0 = FrameState         R     0x55804e9fc4a0+965: [], env=e77.0
  (cls|spec|blt)  %59.1 = LdFun              !v    paste, e111.7
  fs              %59.2 = FrameState         R     0x55804e40e710+126: [%59.1], env=e111.7, next=%59.0
  void                    Deopt              !v    %59.2, DeadCall@0x55804e09bf70[Call#2], %59.1   !
BB56   <- [113]
  void                    Visible            v     
  val?            %56.1 = PopContext         C     true, %111.3   <lgl$->
  lgl$#-          %56.2 = IsType                   %56.1 isA lgl$-
  void                    Branch                   %56.2 -> BB125 (if true) | BB126 (if false)
BB35   <- [50, 109]
  lgl$-           %35.0 = Phi                      %109.3:BB109, %50.1:BB50
  lgl$-           %35.1 = %35.0
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB45 (if true) | BB38 (if false)
BB107   <- [32]
  prom-           %107.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p9, e77.0
  prom-           %107.1 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p10, e77.0
  val?            %107.2 = StaticCall         !     exists[0x55804ef6eaa0](%107.0, %107.1) e77.0   <lgl$->
  lgl$#-          %107.3 = IsType                   %107.2 isA lgl$-
  void                    Branch                   %107.3 -> BB109 (if true) | BB110 (if false)
BB108   <- [32]
  void                    Nop                !     
  val?^ | miss    %108.1 = %32.0
  dr              %108.2 = CallTarget@0x55804e1eb880[Call#9]
  goto BB30
BB125   <- [56]
  void                    Nop                !     
  val?            %125.1 = %56.1
  goto BB43
BB126   <- [56]
  fs              %126.0 = FrameState         R     0x55804e9fc4a0+965: [%56.1], env=e77.0
  void                    Deopt              !v    %126.0, Typecheck@0x55804e1eb880[Type#53], %56.1   !
BB45   <- [35]
  val?^ | miss    %45.0 = LdVar              eR    get, e77.0
  lgl$#-          %45.1 = Identical                %45.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %45.1 -> BB117 (if true) | BB118 (if false)
BB38   <- [35]
  val?^ | miss    %38.0 = LdVar              eR    exists, e77.0
  lgl$#-          %38.1 = Identical                %38.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %38.1 -> BB121 (if true) | BB122 (if false)
BB109   <- [107]
  lgl$-           %109.0 = CastType           d     dn %107.2
  lgl$-           %109.1 = AsLogical                %109.0
  lgl$-           %109.2 = LAnd                     %105.1, %109.1
  lgl$-           %109.3 = %109.2
  goto BB35
BB110   <- [107]
  fs              %110.0 = FrameState         R     0x55804e9fc4a0+332: [%105.1, %107.2], env=e77.0
  void                    Deopt              !v    %110.0, Typecheck@0x55804e1eb880[Type#18], %107.2   !
BB43   <- [42, 125]
  val?            %43.0 = Phi                      %42.2:BB42, %125.1:BB125
  val?            %43.1 = %43.0
  void                    Return             l     %43.1
BB117   <- [45]
  prom-           %117.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p18, e77.0
  prom-           %117.1 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p19, e77.0
  val?            %117.2 = StaticCall         !     get[0x55804efcc560](%117.0, missingArg, %117.1) { 0 2n } e77.0   <cls->
  void                    StVar              lW    def, %117.2, e77.0
  val?^ | miss    %117.4 = LdVar              eR    checkCall, e77.0
  lgl$#-          %117.5 = Identical                %117.4, function(def, call, signal=warning0) <(rir::Di|...
  void                    Branch                   %117.5 -> BB123 (if true) | BB124 (if false)
BB118   <- [45]
  void                    Nop                !     
  val?^ | miss    %118.1 = %45.0
  dr              %118.2 = CallTarget@0x55804e1eb880[Call#19]
  goto BB36
BB121   <- [38]
  prom-           %121.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p20, e77.0
  prom-           %121.1 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p21, e77.0
  val?            %121.2 = StaticCall         !v    exists[0x55804f2fbb50](%121.0, missingArg, %121.1, missingArg, missingArg, false) { 0 2n 5n } e77.0   <lgl$->
  lgl$#-          %121.3 = IsType                   %121.2 isA lgl$-
  void                    Branch                   %121.3 -> BB131 (if true) | BB132 (if false)
BB122   <- [38]
  void                    Nop                !     
  val?^ | miss    %122.1 = %38.0
  dr              %122.2 = CallTarget@0x55804e1eb880[Call#11]
  goto BB36
BB123   <- [117]
  prom-           %123.0 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p22 (!refl), e77.0
  prom-           %123.1 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p23, e77.0
  prom-           %123.2 = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p24, e77.0
  val?            %123.3 = StaticCall         !     checkCall[0x55804f657060](%123.0, %123.1, %123.2) e77.0   <lgl$->
  lgl$#-          %123.4 = IsType                   %123.3 isA lgl$-
  void                    Branch                   %123.4 -> BB129 (if true) | BB130 (if false)
BB124   <- [117]
  fs              %124.0 = FrameState         R     0x55804e9fc4a0+812: [], env=e77.0
  void                    Deopt              !v    %124.0, CallTarget@0x55804e1eb880[Call#21], %117.4   !
BB36   <- [118, 122]
  val?^ | miss    %36.0 = Phi                      %118.1:BB118, %122.1:BB122
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %118.2:BB118, %122.2:BB122
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x55804e9fc4a0+339: [%35.1], env=e77.0
  void                    Deopt              !v    %36.4, %36.3, %36.1   !
BB131   <- [121]
  lgl$-           %131.0 = CastType           d     dn %121.2
  lgl$#-          %131.1 = CheckTrueFalse     e     %131.0
  void                    Branch                   %131.1 -> BB44 (if true) | BB41 (if false)
BB132   <- [121]
  fs              %132.0 = FrameState         R     0x55804e9fc4a0+399: [%121.2], env=e77.0
  void                    Deopt              !v    %132.0, Typecheck@0x55804e1eb880[Type#21], %121.2   !
BB129   <- [123]
  void                    Nop                !     
  val?            %129.1 = %123.3
  goto BB42
BB130   <- [123]
  fs              %130.0 = FrameState         R     0x55804e9fc4a0+854: [%123.3], env=e77.0
  void                    Deopt              !v    %130.0, Typecheck@0x55804e1eb880[Type#46], %123.3   !
BB44   <- [131]
  (cls|spec|blt)  %44.0 = LdFun              !v    get, e77.0
  fs              %44.1 = FrameState         R     0x55804e9fc4a0+426: [%44.0], env=e77.0
  void                    Deopt              !v    %44.1, DeadCall@0x55804e1eb880[Call#12], %44.0   !
BB41   <- [131]
  void                    Visible            v     
  lgl$#-          %41.1 = true
  goto BB42
BB42   <- [41, 129]
  val?            %42.0 = Phi                      %41.1:BB41, %129.1:BB129
  val?            %42.1 = %42.0
  val?            %42.2 = %42.1
  goto BB43
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <code->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  real$#-         %2.1  = -1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p1, 
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [2, 4]
  (real|prom)-    %3.0  = Phi                      %2.1:BB2, %4.1:BB4
  (real|prom)-    %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 1:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 2:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <code->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  real$#-         %2.1  = -1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, checkPrimopCall[0x55804eb15080]_p4, 
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [2, 4]
  (real|prom)-    %3.0  = Phi                      %2.1:BB2, %4.1:BB4
  (real|prom)-    %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 4:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    noMissingAllowed, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".GenericArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".ArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".GenericArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    testMatch, <0x55804eeff8f8>, e0.0
  val?            %0.2  = Call               !v    %0.1() e0.0
  void                    Visible            v     
  void                    Return             l     nil
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    checkCall@Prom(1)0, e0.0
  void                    Return             l     %0.1
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".ArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    primopArgCounts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ checkPrimopCall[0x55804eb15080]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
