
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804f2a42c0]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804f2a42c0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?~+          %0.3  = LdArg                    0
  val+            %0.4  = Force<value>             %0.3,    <str$->
  val?^ | miss    %0.5  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %0.6  = Identical                %0.5, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %0.6 -> BB162 (if true) | BB163 (if false)
BB162   <- [0]
  env             e162.0 = MkEnv              l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %162.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p1, e162.0
  val?            %162.2 = StaticCall         !v    %in%[0x55804e959a60](%0.4, %162.1) e162.0   <lgl$->
  lgl$#-          %162.3 = IsType                   %162.2 isA lgl$-
  void                    Branch                   %162.3 -> BB164 (if true) | BB165 (if false)
BB163   <- [0]
  env             e163.0 = (MkEnv)            l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %163.1 = FrameState         R     0x55804ec9bac0+0: [], env=e163.0
  void                    Deopt              !v    %163.1, CallTarget@0x55804e19e1f0[Call#0], %0.5
BB164   <- [162]
  lgl$-           %164.0 = CastType           d     dn %162.2
  lgl$-           %164.1 = AsLogical                %164.0
  lgl$#-          %164.2 = Identical                %164.1, false
  void                    Branch                   %164.2 -> BB160 (if true) | BB5 (if false)
BB165   <- [162]
  void                    Nop                !     
  val?            %165.1 = %162.2
  dr              %165.2 = Typecheck@0x55804e19e1f0[Type#2]
  goto BB3
BB160   <- [164]
  void                    Nop                !     
  lgl$-           %160.1 = %164.1
  goto BB8
BB5   <- [164]
  val?^ | miss    %5.0  = LdVar              eR    isSimpleFunDef, e162.0
  lgl$#-          %5.1  = Identical                %5.0, function(e, w) <(rir::DispatchTable*)0x55804e1|...
  void                    Branch                   %5.1 -> BB166 (if true) | BB167 (if false)
BB3   <- [165, 167]
  val?^ | miss    %3.0  = Phi                      %165.1:BB165, %167.1:BB167
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %165.2:BB165, %167.2:BB167
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55804ec9bac0+37: [%162.2], env=e162.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB8   <- [160, 168]
  lgl$-           %8.0  = Phi                      %168.3:BB168, %160.1:BB160
  lgl$-           %8.1  = %8.0
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1
  void                    Branch                   %8.2 -> BB159 (if true) | BB9 (if false)
BB166   <- [5]
  prom-           %166.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p2, e162.0
  prom-           %166.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p3, e162.0
  val?            %166.2 = StaticCall         !v    isSimpleFunDef[0x55804f08e900](%166.0, %166.1) e162.0   <lgl$->
  lgl$#-          %166.3 = IsType                   %166.2 isA lgl$-
  void                    Branch                   %166.3 -> BB168 (if true) | BB169 (if false)
BB167   <- [5]
  void                    Nop                !     
  val?^ | miss    %167.1 = %5.0
  dr              %167.2 = CallTarget@0x55804e19e1f0[Call#2]
  goto BB3
BB159   <- [8]
  void                    StVar              lW    type, "fundef", e162.0
  goto BB10
BB9   <- [8]
  void                    Nop                !     
  goto BB10
BB168   <- [166]
  lgl$-           %168.0 = CastType           d     dn %166.2
  lgl$-           %168.1 = AsLogical                %168.0
  lgl$-           %168.2 = LAnd                     %164.1, %168.1
  lgl$-           %168.3 = %168.2
  goto BB8
BB169   <- [166]
  fs              %169.0 = FrameState         R     0x55804ec9bac0+86: [%164.1, %166.2], env=e162.0
  void                    Deopt              !v    %169.0, Typecheck@0x55804e19e1f0[Type#5], %166.2   !
BB10   <- [9, 159]
  val?^ | miss    %10.0 = LdVar              eR    type, e162.0
  val?            %10.1 = Force!<value>      !v    %10.0, e162.0   <str$->
  lgl$-           %10.2 = Is                       %10.1, logical
  lgl$-           %10.3 = Is                       %10.1, integer
  lgl$-           %10.4 = Is                       %10.1, double
  lgl$-           %10.5 = Is                       %10.1, complex
  lgl$-           %10.6 = Is                       %10.1, character   <true>
  lgl$-           %10.7 = Is                       %10.1, raw
  lgl$-           %10.8 = Is                       %10.1, list
  lgl$-           %10.9 = Is                       %10.1, expression
  lgl$-           %10.10 = LOr                      %10.9, %10.8
  lgl$-           %10.11 = LOr                      %10.10, %10.7
  lgl$-           %10.12 = LOr                      %10.11, %10.6
  lgl$-           %10.13 = LOr                      %10.12, %10.5
  lgl$-           %10.14 = LOr                      %10.13, %10.4
  lgl$-           %10.15 = LOr                      %10.14, %10.3
  lgl$-           %10.16 = LOr                      %10.15, %10.2   <true>
  lgl$#-          %10.17 = Identical                %10.16, true
  int$-           %10.18 = Length                   %10.1
  lgl$-           %10.19 = Is                       %10.1, Factor   <false>
  lgl$#-          %10.20 = Identical                %10.19, false
  lgl$#-          %10.21 = Identical                %10.6, true
  lgl$#-          %10.22 = IsType                   %10.1 isA val?-
  void                    Branch                   %10.17 -> BB170 (if true) | BB171 (if false)
BB170   <- [10]
  lgl$-           %170.0 = Eq                 d     %10.18, 1L, elided   <true>
  lgl$#-          %170.1 = Identical                %170.0, true
  void                    Branch                   %170.1 -> BB172 (if true) | BB173 (if false)
BB171   <- [10]
  void                    Nop                !     
  lgl$#-          %171.1 = %10.17
  dr              %171.2 = DeadBranchReached@0x55804e19e1f0[Test#0]
  goto BB11
BB172   <- [170]
  void                    Branch                   %10.20 -> BB174 (if true) | BB175 (if false)
BB173   <- [170]
  void                    Nop                !     
  lgl$#-          %173.1 = %170.1
  dr              %173.2 = DeadBranchReached@0x55804e19e1f0[Test#1]
  goto BB11
BB11   <- [171, 173, 175, 177, 179]
  val?^ | miss    %11.0 = Phi                      %171.1:BB171, %173.1:BB173, %175.1:BB175, %177.1:BB177, %179.1:BB179
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %171.2:BB171, %173.2:BB173, %175.2:BB175, %177.2:BB177, %179.2:BB179
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55804ec9bac0+128: [%10.1], env=e162.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB174   <- [172]
  void                    Branch                   %10.21 -> BB176 (if true) | BB177 (if false)
BB175   <- [172]
  void                    Nop                !     
  lgl$#-          %175.1 = %10.20
  dr              %175.2 = DeadBranchReached@0x55804e19e1f0[Test#2]
  goto BB11
BB176   <- [174]
  void                    Branch                   %10.22 -> BB178 (if true) | BB179 (if false)
BB177   <- [174]
  void                    Nop                !     
  lgl$#-          %177.1 = %10.21
  dr              %177.2 = DeadBranchReached@0x55804e19e1f0[Test#3]
  goto BB11
BB178   <- [176]
  val?-           %178.0 = CastType           d     dn %10.1   <str$->
  lgl-            %178.1 = CallSafeBuiltin    vwed  is.na(%178.0) 
  lgl$#-          %178.2 = CheckTrueFalse     we    %178.1   <false>
  void                    Branch                   %178.2 -> BB181 (if true) | BB180 (if false)
BB179   <- [176]
  void                    Nop                !     
  val?            %179.1 = %10.1
  dr              %179.2 = Typecheck@0x55804e19e1f0[Type#6]
  goto BB11
BB181   <- [178]
  fs              %181.0 = FrameState         R     0x55804ec9bac0+391: [%178.0, %178.2], env=e162.0
  void                    Deopt              !v    %181.0, DeadBranchReached@0x55804e19e1f0[Test#10], %178.2   !
BB180   <- [178]
  lgl-            %180.0 = Eq                 vwed  %178.0, <-, elided
  lgl$#-          %180.1 = CheckTrueFalse     we    %180.0
  void                    Branch                   %180.1 -> BB117 (if true) | BB17 (if false)
BB117   <- [180]
  val?^ | miss    %117.0 = LdVar              eR    incLocalUsageValue, e162.0
  lgl$#-          %117.1 = Identical                %117.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %117.1 -> BB182 (if true) | BB183 (if false)
BB17   <- [180]
  lgl-            %17.0 = Eq                 vwed  %178.0, <<-, elided
  lgl$#-          %17.1 = CheckTrueFalse     we    %17.0   <false>
  void                    Branch                   %17.1 -> BB187 (if true) | BB186 (if false)
BB182   <- [117]
  prom-           %182.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p13, e162.0
  prom-           %182.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p14, e162.0
  ct              %182.2 = PushContext        lCL   %182.0, "assigns", %182.1, incLocalUsageValue(n, "assigns", w), function(vn, which, w) <(rir::DispatchTable*)0|..., e162.0
  val?^           %182.3 = CastType                 up %182.1
  val?^           %182.4 = CastType                 up %182.0
  val?^ | miss    %182.5 = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %182.6 = Identical                %182.5, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %182.6 -> BB184 (if true) | BB185 (if false)
BB183   <- [117]
  fs              %183.0 = FrameState         R     0x55804ec9bac0+415: [%178.0, %180.1], env=e162.0
  void                    Deopt              !v    %183.0, CallTarget@0x55804e19e1f0[Call#3], %117.0   !
BB187   <- [17]
  fs              %187.0 = FrameState         R     0x55804ec9bac0+433: [%178.0, %17.1], env=e162.0
  void                    Deopt              !v    %187.0, DeadBranchReached@0x55804e19e1f0[Test#12], %17.1   !
BB186   <- [17]
  lgl-            %186.0 = Eq                 vwed  %178.0, variable, elided
  lgl$#-          %186.1 = CheckTrueFalse     we    %186.0
  void                    Branch                   %186.1 -> BB75 (if true) | BB22 (if false)
BB184   <- [182]
  env             e184.0 = MkEnv              l     vn=%182.4, which="assigns", w=%182.3, parent=<env 0x55804e699488>, context 1
  prom-           %184.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p15, e184.0
  prom-           %184.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p16, e184.0
  ct              %184.3 = PushContext        lCL   %184.1, %184.2, getLocalUsageEntry(vn, w), function(vn, w) <(rir::DispatchTable*)0x55804e|..., e184.0
  val?^           %184.4 = CastType                 up %184.2
  val?^           %184.5 = CastType                 up %184.1
  val?^ | miss    %184.6 = LdVar              eR    findOwnerEnv, <env 0x55804e699488>
  lgl$#-          %184.7 = Identical                %184.6, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Branch                   %184.7 -> BB188 (if true) | BB189 (if false)
BB185   <- [182]
  fs              %185.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  env             e185.1 = (MkEnv)            l     vn=%182.4, which="assigns", w=%182.3, parent=<env 0x55804e699488>, context 1
  fs              %185.2 = FrameState         R     0x55804e9d77b0+0: [], env=e185.1, next=%185.0
  void                    Deopt              !v    %185.2, CallTarget@0x55804e3d1be0[Call#0], %182.5   !
BB75   <- [186]
  val?^ | miss    %75.0 = LdVar              eR    incLocalUsageValue, e162.0
  lgl$#-          %75.1 = Identical                %75.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %75.1 -> BB192 (if true) | BB193 (if false)
BB22   <- [186]
  lgl-            %22.0 = Eq                 vwed  %178.0, function, elided
  lgl$#-          %22.1 = CheckTrueFalse     we    %22.0
  void                    Branch                   %22.1 -> BB33 (if true) | BB25 (if false)
BB188   <- [184]
  env             e188.0 = MkEnv              l     vn=%184.5, w=%184.4, parent=<env 0x55804e699488>, context 1
  prom-           %188.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p36, e188.0
  prom-           %188.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p37, e188.0
  prom-           %188.3 = MkArg                    unboundValue, [0x55804f2a42c0]_p40, e188.0
  prom-           %188.4 = MkArg                    unboundValue, [0x55804f2a42c0]_p43, e188.0
  val?            %188.5 = StaticCall         !v    findOwnerEnv[0x55804f68bba0](%188.1, %188.2, %188.3, %188.4) { 0 1 2n 3n } e188.0   <env+>
  void                    StVar              lW    env, %188.5, e188.0
  val?^ | miss    %188.7 = LdVar              eR    is.baseenv, e188.0
  lgl$#-          %188.8 = Identical                %188.7, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %188.8 -> BB190 (if true) | BB191 (if false)
BB189   <- [184]
  fs              %189.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %189.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%189.0
  env             e189.2 = (MkEnv)            l     vn=%184.5, w=%184.4, parent=<env 0x55804e699488>, context 1
  fs              %189.3 = FrameState         R     0x55804e1e4250+0: [], env=e189.2, next=%189.1
  void                    Deopt              !v    %189.3, CallTarget@0x55804eaea998[Call#0], %184.6   !
BB192   <- [75]
  prom-           %192.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p11, e162.0
  prom-           %192.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p12, e162.0
  ct              %192.2 = PushContext        lCL   %192.0, "varuses", %192.1, incLocalUsageValue(n, "varuses", w), function(vn, which, w) <(rir::DispatchTable*)0|..., e162.0
  val?^           %192.3 = CastType                 up %192.1
  val?^           %192.4 = CastType                 up %192.0
  val?^ | miss    %192.5 = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %192.6 = Identical                %192.5, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %192.6 -> BB194 (if true) | BB195 (if false)
BB193   <- [75]
  fs              %193.0 = FrameState         R     0x55804ec9bac0+451: [%178.0, %186.1], env=e162.0
  void                    Deopt              !v    %193.0, CallTarget@0x55804e19e1f0[Call#4], %75.0   !
BB33   <- [22]
  val?^ | miss    %33.0 = LdVar              eR    incLocalUsageValue, e162.0
  lgl$#-          %33.1 = Identical                %33.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %33.1 -> BB200 (if true) | BB201 (if false)
BB25   <- [22]
  lgl-            %25.0 = Eq                 vwed  %178.0, for, elided
  lgl$#-          %25.1 = CheckTrueFalse     we    %25.0   <false>
  void                    Branch                   %25.1 -> BB205 (if true) | BB204 (if false)
BB190   <- [188]
  prom-           %190.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p44 (!refl), e188.0
  ct              %190.1 = PushContext        lCL   %190.0, is.baseenv(env), function(e) <(rir::DispatchTable*)0x55804e41e7|..., e188.0
  val?^           %190.2 = CastType                 up %190.0
  val?^ | miss    %190.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %190.4 = Identical                %190.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %190.4 -> BB196 (if true) | BB197 (if false)
BB191   <- [188]
  fs              %191.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %191.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%191.0
  fs              %191.2 = FrameState         R     0x55804e1e4250+77: [], env=e188.0, next=%191.1
  void                    Deopt              !v    %191.2, CallTarget@0x55804eaea998[Call#3], %188.7   !
BB194   <- [192]
  env             e194.0 = MkEnv              l     vn=%192.4, which="varuses", w=%192.3, parent=<env 0x55804e699488>, context 1
  prom-           %194.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p22, e194.0
  prom-           %194.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p23, e194.0
  ct              %194.3 = PushContext        lCL   %194.1, %194.2, getLocalUsageEntry(vn, w), function(vn, w) <(rir::DispatchTable*)0x55804e|..., e194.0
  val?^           %194.4 = CastType                 up %194.2
  val?^           %194.5 = CastType                 up %194.1
  val?^ | miss    %194.6 = LdVar              eR    findOwnerEnv, <env 0x55804e699488>
  lgl$#-          %194.7 = Identical                %194.6, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Branch                   %194.7 -> BB206 (if true) | BB207 (if false)
BB195   <- [192]
  fs              %195.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  env             e195.1 = (MkEnv)            l     vn=%192.4, which="varuses", w=%192.3, parent=<env 0x55804e699488>, context 1
  fs              %195.2 = FrameState         R     0x55804e9d77b0+0: [], env=e195.1, next=%195.0
  void                    Deopt              !v    %195.2, CallTarget@0x55804e3d1be0[Call#0], %192.5   !
BB200   <- [33]
  prom-           %200.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p9, e162.0
  prom-           %200.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p10, e162.0
  ct              %200.2 = PushContext        lCL   %200.0, "funuses", %200.1, incLocalUsageValue(n, "funuses", w), function(vn, which, w) <(rir::DispatchTable*)0|..., e162.0
  val?^           %200.3 = CastType                 up %200.1
  val?^           %200.4 = CastType                 up %200.0
  val?^ | miss    %200.5 = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %200.6 = Identical                %200.5, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %200.6 -> BB202 (if true) | BB203 (if false)
BB201   <- [33]
  fs              %201.0 = FrameState         R     0x55804ec9bac0+469: [%178.0, %22.1], env=e162.0
  void                    Deopt              !v    %201.0, CallTarget@0x55804e19e1f0[Call#5], %33.0   !
BB205   <- [25]
  fs              %205.0 = FrameState         R     0x55804ec9bac0+487: [%178.0, %25.1], env=e162.0
  void                    Deopt              !v    %205.0, DeadBranchReached@0x55804e19e1f0[Test#15], %25.1   !
BB204   <- [25]
  lgl-            %204.0 = Eq                 vwed  %178.0, fundef, elided
  lgl$#-          %204.1 = CheckTrueFalse     we    %204.0   <true>
  void                    Branch                   %204.1 -> BB212 (if true) | BB213 (if false)
BB196   <- [190]
  env             e196.0 = MkEnv              l     e=%190.2, parent=<env 0x55804e699488>, context 1
  prom-           %196.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p45, e196.0
  prom-           %196.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p46, e196.0
  ct              %196.3 = PushContext        lCL   %196.1, %196.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e196.0
  val?^           %196.4 = CastType                 up %196.2
  val?^           %196.5 = CastType                 up %196.1
  env             e196.6 = MkEnv              l     x=%196.5, y=%196.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %196.7 = Force!<lazy>       !vL   %196.5, e196.6   <val?+>
  val?            %196.8 = Force!<lazy>       !vL   %196.4, e196.6   <val?+>
  val?            %196.9 = CallBuiltin        !v    identical(%196.7, %196.8, true, true, true, true, false, true) e196.6
  val?            %196.10 = PopContext         C     %196.9, %196.3   <lgl$->
  lgl$#-          %196.11 = IsType                   %196.10 isA lgl$-
  void                    Branch                   %196.11 -> BB198 (if true) | BB199 (if false)
BB197   <- [190]
  fs              %197.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %197.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%197.0
  fs              %197.2 = FrameState         R     0x55804e1e4250+109: [], env=e188.0, next=%197.1
  env             e197.3 = (MkEnv)            l     e=%190.2, parent=<env 0x55804e699488>, context 1
  fs              %197.4 = FrameState         R     0x55804eb37490+0: [], env=e197.3, next=%197.2
  void                    Deopt              !v    %197.4, CallTarget@0x55804ea246f8[Call#0], %190.3   !
BB206   <- [194]
  env             e206.0 = MkEnv              l     vn=%194.5, w=%194.4, parent=<env 0x55804e699488>, context 1
  prom-           %206.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p64, e206.0
  prom-           %206.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p65, e206.0
  prom-           %206.3 = MkArg                    unboundValue, [0x55804f2a42c0]_p68, e206.0
  prom-           %206.4 = MkArg                    unboundValue, [0x55804f2a42c0]_p71, e206.0
  val?            %206.5 = StaticCall         !v    findOwnerEnv[0x55804f68bba0](%206.1, %206.2, %206.3, %206.4) { 0 1 2n 3n } e206.0   <env+>
  void                    StVar              lW    env, %206.5, e206.0
  val?^ | miss    %206.7 = LdVar              eR    is.baseenv, e206.0
  lgl$#-          %206.8 = Identical                %206.7, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %206.8 -> BB208 (if true) | BB209 (if false)
BB207   <- [194]
  fs              %207.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %207.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%207.0
  env             e207.2 = (MkEnv)            l     vn=%194.5, w=%194.4, parent=<env 0x55804e699488>, context 1
  fs              %207.3 = FrameState         R     0x55804e1e4250+0: [], env=e207.2, next=%207.1
  void                    Deopt              !v    %207.3, CallTarget@0x55804eaea998[Call#0], %194.6   !
BB202   <- [200]
  env             e202.0 = MkEnv              l     vn=%200.4, which="funuses", w=%200.3, parent=<env 0x55804e699488>, context 1
  prom-           %202.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p29, e202.0
  prom-           %202.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p30, e202.0
  ct              %202.3 = PushContext        lCL   %202.1, %202.2, getLocalUsageEntry(vn, w), function(vn, w) <(rir::DispatchTable*)0x55804e|..., e202.0
  val?^           %202.4 = CastType                 up %202.2
  val?^           %202.5 = CastType                 up %202.1
  val?^ | miss    %202.6 = LdVar              eR    findOwnerEnv, <env 0x55804e699488>
  lgl$#-          %202.7 = Identical                %202.6, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Branch                   %202.7 -> BB218 (if true) | BB219 (if false)
BB203   <- [200]
  fs              %203.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  env             e203.1 = (MkEnv)            l     vn=%200.4, which="funuses", w=%200.3, parent=<env 0x55804e699488>, context 1
  fs              %203.2 = FrameState         R     0x55804e9d77b0+0: [], env=e203.1, next=%203.0
  void                    Deopt              !v    %203.2, CallTarget@0x55804e3d1be0[Call#0], %200.5   !
BB212   <- [204]
  val?^ | miss    %212.0 = LdVar              eR    addLocalFunDef, e162.0
  lgl$#-          %212.1 = Identical                %212.0, function(vn, e, w) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %212.1 -> BB220 (if true) | BB221 (if false)
BB213   <- [204]
  void                    Nop                !     
  lgl$#-          %213.1 = %204.1
  dr              %213.2 = DeadBranchReached@0x55804e19e1f0[Test#16]
  goto BB28
BB198   <- [196]
  lgl$-           %198.0 = CastType           d     dn %196.10
  val?            %198.1 = PopContext         C     %198.0, %190.1   <lgl$->
  lgl$#-          %198.2 = IsType                   %198.1 isA lgl$-
  void                    Branch                   %198.2 -> BB210 (if true) | BB211 (if false)
BB199   <- [196]
  fs              %199.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %199.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%199.0
  fs              %199.2 = FrameState         R     0x55804e1e4250+109: [], env=e188.0, next=%199.1
  fs              %199.3 = FrameState         R     0x55804eb37490+37: [%196.10], env=e196.0, next=%199.2
  void                    Deopt              !v    %199.3, Typecheck@0x55804ea246f8[Type#2], %196.10   !
BB208   <- [206]
  prom-           %208.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p72 (!refl), e206.0
  ct              %208.1 = PushContext        lCL   %208.0, is.baseenv(env), function(e) <(rir::DispatchTable*)0x55804e41e7|..., e206.0
  val?^           %208.2 = CastType                 up %208.0
  val?^ | miss    %208.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %208.4 = Identical                %208.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %208.4 -> BB214 (if true) | BB215 (if false)
BB209   <- [206]
  fs              %209.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %209.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%209.0
  fs              %209.2 = FrameState         R     0x55804e1e4250+77: [], env=e206.0, next=%209.1
  void                    Deopt              !v    %209.2, CallTarget@0x55804eaea998[Call#3], %206.7   !
BB218   <- [202]
  env             e218.0 = MkEnv              l     vn=%202.5, w=%202.4, parent=<env 0x55804e699488>, context 1
  prom-           %218.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p92, e218.0
  prom-           %218.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p93, e218.0
  prom-           %218.3 = MkArg                    unboundValue, [0x55804f2a42c0]_p96, e218.0
  prom-           %218.4 = MkArg                    unboundValue, [0x55804f2a42c0]_p99, e218.0
  val?            %218.5 = StaticCall         !v    findOwnerEnv[0x55804f68bba0](%218.1, %218.2, %218.3, %218.4) { 0 1 2n 3n } e218.0   <env+>
  void                    StVar              lW    env, %218.5, e218.0
  val?^ | miss    %218.7 = LdVar              eR    is.baseenv, e218.0
  lgl$#-          %218.8 = Identical                %218.7, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %218.8 -> BB222 (if true) | BB223 (if false)
BB219   <- [202]
  fs              %219.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %219.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%219.0
  env             e219.2 = (MkEnv)            l     vn=%202.5, w=%202.4, parent=<env 0x55804e699488>, context 1
  fs              %219.3 = FrameState         R     0x55804e1e4250+0: [], env=e219.2, next=%219.1
  void                    Deopt              !v    %219.3, CallTarget@0x55804eaea998[Call#0], %202.6   !
BB220   <- [212]
  prom-           %220.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p4, e162.0
  prom-           %220.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p5, e162.0
  prom-           %220.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p6, e162.0
  val?            %220.3 = StaticCall         !     addLocalFunDef[0x55804f228fa0](%220.0, %220.1, %220.2) e162.0   <vec$->
  val?            %220.4 = %220.3
  goto BB30
BB221   <- [212]
  void                    Nop                !     
  val?^ | miss    %221.1 = %212.0
  dr              %221.2 = CallTarget@0x55804e19e1f0[Call#7]
  goto BB28
BB28   <- [213, 221]
  val?^ | miss    %28.0 = Phi                      %213.1:BB213, %221.1:BB221
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %213.2:BB213, %221.2:BB221
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55804ec9bac0+505: [%178.0, %204.1], env=e162.0
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB210   <- [198]
  lgl$-           %210.0 = CastType           d     dn %198.1
  lgl$#-          %210.1 = CheckTrueFalse     e     %210.0
  void                    Branch                   %210.1 -> BB158 (if true) | BB130 (if false)
BB211   <- [198]
  fs              %211.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %211.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%211.0
  fs              %211.2 = FrameState         R     0x55804e1e4250+109: [%198.1], env=e188.0, next=%211.1
  void                    Deopt              !v    %211.2, Typecheck@0x55804eaea998[Type#10], %198.1   !
BB214   <- [208]
  env             e214.0 = MkEnv              l     e=%208.2, parent=<env 0x55804e699488>, context 1
  prom-           %214.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p73, e214.0
  prom-           %214.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p74, e214.0
  ct              %214.3 = PushContext        lCL   %214.1, %214.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e214.0
  val?^           %214.4 = CastType                 up %214.2
  val?^           %214.5 = CastType                 up %214.1
  env             e214.6 = MkEnv              l     x=%214.5, y=%214.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %214.7 = Force!<lazy>       !vL   %214.5, e214.6   <val?+>
  val?            %214.8 = Force!<lazy>       !vL   %214.4, e214.6   <val?+>
  val?            %214.9 = CallBuiltin        !v    identical(%214.7, %214.8, true, true, true, true, false, true) e214.6
  val?            %214.10 = PopContext         C     %214.9, %214.3   <lgl$->
  lgl$#-          %214.11 = IsType                   %214.10 isA lgl$-
  void                    Branch                   %214.11 -> BB216 (if true) | BB217 (if false)
BB215   <- [208]
  fs              %215.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %215.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%215.0
  fs              %215.2 = FrameState         R     0x55804e1e4250+109: [], env=e206.0, next=%215.1
  env             e215.3 = (MkEnv)            l     e=%208.2, parent=<env 0x55804e699488>, context 1
  fs              %215.4 = FrameState         R     0x55804eb37490+0: [], env=e215.3, next=%215.2
  void                    Deopt              !v    %215.4, CallTarget@0x55804ea246f8[Call#0], %208.3   !
BB222   <- [218]
  prom-           %222.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p100 (!refl), e218.0
  ct              %222.1 = PushContext        lCL   %222.0, is.baseenv(env), function(e) <(rir::DispatchTable*)0x55804e41e7|..., e218.0
  val?^           %222.2 = CastType                 up %222.0
  val?^ | miss    %222.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %222.4 = Identical                %222.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %222.4 -> BB226 (if true) | BB227 (if false)
BB223   <- [218]
  fs              %223.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %223.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%223.0
  fs              %223.2 = FrameState         R     0x55804e1e4250+77: [], env=e218.0, next=%223.1
  void                    Deopt              !v    %223.2, CallTarget@0x55804eaea998[Call#3], %218.7   !
BB30   <- [220, 282, 288, 292]
  val?            %30.0 = Phi                      %220.4:BB220, %288.1:BB288, %292.1:BB292, %282.1:BB282
  val?            %30.1 = %30.0
  val?^ | miss    %30.2 = LdVar              eR    incLocalSrcInfo, e162.0
  lgl$#-          %30.3 = Identical                %30.2, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %30.3 -> BB234 (if true) | BB235 (if false)
BB158   <- [210]
  (cls|spec|blt)  %158.0 = LdFun              !v    stop, e188.0
  val?            %158.1 = Call               !v    %158.0("no local variable entry") e188.0
  goto BB131
BB130   <- [210]
  void                    Nop                !     
  goto BB131
BB216   <- [214]
  lgl$-           %216.0 = CastType           d     dn %214.10
  val?            %216.1 = PopContext         C     %216.0, %208.1   <lgl$->
  lgl$#-          %216.2 = IsType                   %216.1 isA lgl$-
  void                    Branch                   %216.2 -> BB224 (if true) | BB225 (if false)
BB217   <- [214]
  fs              %217.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %217.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%217.0
  fs              %217.2 = FrameState         R     0x55804e1e4250+109: [], env=e206.0, next=%217.1
  fs              %217.3 = FrameState         R     0x55804eb37490+37: [%214.10], env=e214.0, next=%217.2
  void                    Deopt              !v    %217.3, Typecheck@0x55804ea246f8[Type#2], %214.10   !
BB226   <- [222]
  env             e226.0 = MkEnv              l     e=%222.2, parent=<env 0x55804e699488>, context 1
  prom-           %226.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p101, e226.0
  prom-           %226.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p102, e226.0
  ct              %226.3 = PushContext        lCL   %226.1, %226.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e226.0
  val?^           %226.4 = CastType                 up %226.2
  val?^           %226.5 = CastType                 up %226.1
  env             e226.6 = MkEnv              l     x=%226.5, y=%226.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %226.7 = Force!<lazy>       !vL   %226.5, e226.6   <val?+>
  val?            %226.8 = Force!<lazy>       !vL   %226.4, e226.6   <val?+>
  val?            %226.9 = CallBuiltin        !v    identical(%226.7, %226.8, true, true, true, true, false, true) e226.6
  val?            %226.10 = PopContext         C     %226.9, %226.3   <lgl$->
  lgl$#-          %226.11 = IsType                   %226.10 isA lgl$-
  void                    Branch                   %226.11 -> BB228 (if true) | BB229 (if false)
BB227   <- [222]
  fs              %227.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %227.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%227.0
  fs              %227.2 = FrameState         R     0x55804e1e4250+109: [], env=e218.0, next=%227.1
  env             e227.3 = (MkEnv)            l     e=%222.2, parent=<env 0x55804e699488>, context 1
  fs              %227.4 = FrameState         R     0x55804eb37490+0: [], env=e227.3, next=%227.2
  void                    Deopt              !v    %227.4, CallTarget@0x55804ea246f8[Call#0], %222.3   !
BB234   <- [30]
  prom-           %234.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p7, e162.0
  prom-           %234.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p8, e162.0
  val?            %234.2 = StaticCall         !     incLocalSrcInfo[0x55804e28ca60](%234.0, %234.1) e162.0   <vec>
  void                    Return             l     %234.2
BB235   <- [30]
  fs              %235.0 = FrameState         R     0x55804ec9bac0+815: [%30.1], env=e162.0
  void                    Deopt              !v    %235.0, CallTarget@0x55804e19e1f0[Call#8], %30.2   !
BB131   <- [130, 158]
  val?^ | miss    %131.0 = LdVar              eR    identical, e188.0
  lgl$#-          %131.1 = Identical                %131.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %131.1 -> BB230 (if true) | BB231 (if false)
BB224   <- [216]
  lgl$-           %224.0 = CastType           d     dn %216.1
  lgl$#-          %224.1 = CheckTrueFalse     e     %224.0
  void                    Branch                   %224.1 -> BB116 (if true) | BB88 (if false)
BB225   <- [216]
  fs              %225.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %225.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%225.0
  fs              %225.2 = FrameState         R     0x55804e1e4250+109: [%216.1], env=e206.0, next=%225.1
  void                    Deopt              !v    %225.2, Typecheck@0x55804eaea998[Type#10], %216.1   !
BB228   <- [226]
  lgl$-           %228.0 = CastType           d     dn %226.10
  val?            %228.1 = PopContext         C     %228.0, %222.1   <lgl$->
  lgl$#-          %228.2 = IsType                   %228.1 isA lgl$-
  void                    Branch                   %228.2 -> BB232 (if true) | BB233 (if false)
BB229   <- [226]
  fs              %229.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %229.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%229.0
  fs              %229.2 = FrameState         R     0x55804e1e4250+109: [], env=e218.0, next=%229.1
  fs              %229.3 = FrameState         R     0x55804eb37490+37: [%226.10], env=e226.0, next=%229.2
  void                    Deopt              !v    %229.3, Typecheck@0x55804ea246f8[Type#2], %226.10   !
BB230   <- [131]
  prom-           %230.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p53, e188.0
  prom-           %230.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p54, e188.0
  ct              %230.2 = PushContext        lCL   %230.0, %230.1, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e188.0
  val?^           %230.3 = CastType                 up %230.1
  val?^           %230.4 = CastType                 up %230.0
  env             e230.5 = MkEnv              l     x=%230.4, y=%230.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %230.6 = Force!<lazy>       !vL   %230.4, e230.5   <val?+>
  val?            %230.7 = Force!<lazy>       !vL   %230.3, e230.5   <val?+>
  val?            %230.8 = CallBuiltin        !v    identical(%230.6, %230.7, true, true, true, true, false, true) e230.5
  val?            %230.9 = PopContext         C     %230.8, %230.2   <lgl$->
  lgl$#-          %230.10 = IsType                   %230.9 isA lgl$-
  void                    Branch                   %230.10 -> BB240 (if true) | BB241 (if false)
BB231   <- [131]
  fs              %231.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %231.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%231.0
  fs              %231.2 = FrameState         R     0x55804e1e4250+158: [], env=e188.0, next=%231.1
  void                    Deopt              !v    %231.2, CallTarget@0x55804eaea998[Call#5], %131.0   !
BB116   <- [224]
  (cls|spec|blt)  %116.0 = LdFun              !v    stop, e206.0
  val?            %116.1 = Call               !v    %116.0("no local variable entry") e206.0
  goto BB89
BB88   <- [224]
  void                    Nop                !     
  goto BB89
BB232   <- [228]
  lgl$-           %232.0 = CastType           d     dn %228.1
  lgl$#-          %232.1 = CheckTrueFalse     e     %232.0
  void                    Branch                   %232.1 -> BB74 (if true) | BB46 (if false)
BB233   <- [228]
  fs              %233.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %233.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%233.0
  fs              %233.2 = FrameState         R     0x55804e1e4250+109: [%228.1], env=e218.0, next=%233.1
  void                    Deopt              !v    %233.2, Typecheck@0x55804eaea998[Type#10], %228.1   !
BB240   <- [230]
  lgl$-           %240.0 = CastType           d     dn %230.9
  lgl$-           %240.1 = Not                d     %240.0, elided
  lgl$#-          %240.2 = CheckTrueFalse     e     %240.1
  void                    Branch                   %240.2 -> BB157 (if true) | BB136 (if false)
BB241   <- [230]
  fs              %241.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %241.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%241.0
  fs              %241.2 = FrameState         R     0x55804e1e4250+195: [%230.9], env=e188.0, next=%241.1
  void                    Deopt              !v    %241.2, Typecheck@0x55804eaea998[Type#14], %230.9   !
BB89   <- [88, 116]
  val?^ | miss    %89.0 = LdVar              eR    identical, e206.0
  lgl$#-          %89.1 = Identical                %89.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %89.1 -> BB236 (if true) | BB237 (if false)
BB74   <- [232]
  (cls|spec|blt)  %74.0 = LdFun              !v    stop, e218.0
  val?            %74.1 = Call               !v    %74.0("no local variable entry") e218.0
  goto BB47
BB46   <- [232]
  void                    Nop                !     
  goto BB47
BB157   <- [240]
  (cls|spec|blt)  %157.0 = LdFun              !v    stop, e188.0
  val?            %157.1 = Call               !v    %157.0("sanity check on local usage frame failed") e188.0
  goto BB137
BB136   <- [240]
  void                    Nop                !     
  goto BB137
BB236   <- [89]
  prom-           %236.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p81, e206.0
  prom-           %236.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p82, e206.0
  ct              %236.2 = PushContext        lCL   %236.0, %236.1, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e206.0
  val?^           %236.3 = CastType                 up %236.1
  val?^           %236.4 = CastType                 up %236.0
  env             e236.5 = MkEnv              l     x=%236.4, y=%236.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %236.6 = Force!<lazy>       !vL   %236.4, e236.5   <val?+>
  val?            %236.7 = Force!<lazy>       !vL   %236.3, e236.5   <val?+>
  val?            %236.8 = CallBuiltin        !v    identical(%236.6, %236.7, true, true, true, true, false, true) e236.5
  val?            %236.9 = PopContext         C     %236.8, %236.2   <lgl$->
  lgl$#-          %236.10 = IsType                   %236.9 isA lgl$-
  void                    Branch                   %236.10 -> BB244 (if true) | BB245 (if false)
BB237   <- [89]
  fs              %237.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %237.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%237.0
  fs              %237.2 = FrameState         R     0x55804e1e4250+158: [], env=e206.0, next=%237.1
  void                    Deopt              !v    %237.2, CallTarget@0x55804eaea998[Call#5], %89.0   !
BB47   <- [46, 74]
  val?^ | miss    %47.0 = LdVar              eR    identical, e218.0
  lgl$#-          %47.1 = Identical                %47.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %47.1 -> BB238 (if true) | BB239 (if false)
BB137   <- [136, 157]
  val?^ | miss    %137.0 = LdVar              eR    get, e188.0
  lgl$#-          %137.1 = Identical                %137.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %137.1 -> BB246 (if true) | BB247 (if false)
BB244   <- [236]
  lgl$-           %244.0 = CastType           d     dn %236.9
  lgl$-           %244.1 = Not                d     %244.0, elided
  lgl$#-          %244.2 = CheckTrueFalse     e     %244.1
  void                    Branch                   %244.2 -> BB115 (if true) | BB94 (if false)
BB245   <- [236]
  fs              %245.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %245.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%245.0
  fs              %245.2 = FrameState         R     0x55804e1e4250+195: [%236.9], env=e206.0, next=%245.1
  void                    Deopt              !v    %245.2, Typecheck@0x55804eaea998[Type#14], %236.9   !
BB238   <- [47]
  prom-           %238.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p109, e218.0
  prom-           %238.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p110, e218.0
  ct              %238.2 = PushContext        lCL   %238.0, %238.1, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e218.0
  val?^           %238.3 = CastType                 up %238.1
  val?^           %238.4 = CastType                 up %238.0
  env             e238.5 = MkEnv              l     x=%238.4, y=%238.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %238.6 = Force!<lazy>       !vL   %238.4, e238.5   <val?+>
  val?            %238.7 = Force!<lazy>       !vL   %238.3, e238.5   <val?+>
  val?            %238.8 = CallBuiltin        !v    identical(%238.6, %238.7, true, true, true, true, false, true) e238.5
  val?            %238.9 = PopContext         C     %238.8, %238.2   <lgl$->
  lgl$#-          %238.10 = IsType                   %238.9 isA lgl$-
  void                    Branch                   %238.10 -> BB242 (if true) | BB243 (if false)
BB239   <- [47]
  fs              %239.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %239.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%239.0
  fs              %239.2 = FrameState         R     0x55804e1e4250+158: [], env=e218.0, next=%239.1
  void                    Deopt              !v    %239.2, CallTarget@0x55804eaea998[Call#5], %47.0   !
BB246   <- [137]
  prom-           %246.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p62, e188.0
  prom-           %246.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p63, e188.0
  val?            %246.2 = StaticCall         !v    get[0x55804f644cf0](%246.0, missingArg, %246.1, missingArg, false) { 0 2n 4n } e188.0   <env->
  void                    StVar              lW    entry, %246.2, e188.0
  val?^ | miss    %246.4 = LdVar              eR    is.environment, e188.0
  lgl$#-          %246.5 = Identical                <blt is.environment>, %246.4   <true>
  void                    Branch                   %246.5 -> BB248 (if true) | BB249 (if false)
BB247   <- [137]
  fs              %247.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %247.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%247.0
  fs              %247.2 = FrameState         R     0x55804e1e4250+245: [], env=e188.0, next=%247.1
  void                    Deopt              !v    %247.2, CallTarget@0x55804eaea998[Call#8], %137.0   !
BB115   <- [244]
  (cls|spec|blt)  %115.0 = LdFun              !v    stop, e206.0
  val?            %115.1 = Call               !v    %115.0("sanity check on local usage frame failed") e206.0
  goto BB95
BB94   <- [244]
  void                    Nop                !     
  goto BB95
BB242   <- [238]
  lgl$-           %242.0 = CastType           d     dn %238.9
  lgl$-           %242.1 = Not                d     %242.0, elided
  lgl$#-          %242.2 = CheckTrueFalse     e     %242.1
  void                    Branch                   %242.2 -> BB73 (if true) | BB52 (if false)
BB243   <- [238]
  fs              %243.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %243.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%243.0
  fs              %243.2 = FrameState         R     0x55804e1e4250+195: [%238.9], env=e218.0, next=%243.1
  void                    Deopt              !v    %243.2, Typecheck@0x55804eaea998[Type#14], %238.9   !
BB248   <- [246]
  val             %248.0 = ChkMissing         e     %246.2
  lgl$#-          %248.1 = CallSafeBuiltin    wed   is.environment(%246.2) 
  void                    Branch                   %248.1 -> BB156 (if true) | BB142 (if false)
BB249   <- [246]
  fs              %249.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %249.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%249.0
  fs              %249.2 = FrameState         R     0x55804e1e4250+313: [], env=e188.0, next=%249.1
  void                    Deopt              !v    %249.2, DeadBranchReached@0x55804eaea998[Test#0], %246.5   !
BB95   <- [94, 115]
  val?^ | miss    %95.0 = LdVar              eR    get, e206.0
  lgl$#-          %95.1 = Identical                %95.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %95.1 -> BB256 (if true) | BB257 (if false)
BB73   <- [242]
  (cls|spec|blt)  %73.0 = LdFun              !v    stop, e218.0
  val?            %73.1 = Call               !v    %73.0("sanity check on local usage frame failed") e218.0
  goto BB53
BB52   <- [242]
  void                    Nop                !     
  goto BB53
BB156   <- [248]
  void                    Nop                !     
  goto BB143
BB142   <- [248]
  (cls|spec|blt)  %142.0 = LdFun              !v    stop, e188.0
  val?            %142.1 = Call               !v    %142.0("bad local variable entry") e188.0
  goto BB143
BB256   <- [95]
  prom-           %256.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p90, e206.0
  prom-           %256.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p91, e206.0
  val?            %256.2 = StaticCall         !v    get[0x55804f644cf0](%256.0, missingArg, %256.1, missingArg, false) { 0 2n 4n } e206.0   <env->
  void                    StVar              lW    entry, %256.2, e206.0
  val?^ | miss    %256.4 = LdVar              eR    is.environment, e206.0
  lgl$#-          %256.5 = Identical                <blt is.environment>, %256.4   <true>
  void                    Branch                   %256.5 -> BB258 (if true) | BB259 (if false)
BB257   <- [95]
  fs              %257.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %257.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%257.0
  fs              %257.2 = FrameState         R     0x55804e1e4250+245: [], env=e206.0, next=%257.1
  void                    Deopt              !v    %257.2, CallTarget@0x55804eaea998[Call#8], %95.0   !
BB53   <- [52, 73]
  val?^ | miss    %53.0 = LdVar              eR    get, e218.0
  lgl$#-          %53.1 = Identical                %53.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %53.1 -> BB254 (if true) | BB255 (if false)
BB143   <- [156, 142]
  val?^ | miss    %143.0 = LdVar              eR    entry, e188.0
  lgl$#-          %143.1 = IsType                   %143.0 isA val?~- | miss
  void                    Branch                   %143.1 -> BB250 (if true) | BB251 (if false)
BB258   <- [256]
  val             %258.0 = ChkMissing         e     %256.2
  lgl$#-          %258.1 = CallSafeBuiltin    wed   is.environment(%256.2) 
  void                    Branch                   %258.1 -> BB114 (if true) | BB100 (if false)
BB259   <- [256]
  fs              %259.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %259.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%259.0
  fs              %259.2 = FrameState         R     0x55804e1e4250+313: [], env=e206.0, next=%259.1
  void                    Deopt              !v    %259.2, DeadBranchReached@0x55804eaea998[Test#0], %256.5   !
BB254   <- [53]
  prom-           %254.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p118, e218.0
  prom-           %254.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p119, e218.0
  val?            %254.2 = StaticCall         !v    get[0x55804f644cf0](%254.0, missingArg, %254.1, missingArg, false) { 0 2n 4n } e218.0   <env->
  void                    StVar              lW    entry, %254.2, e218.0
  val?^ | miss    %254.4 = LdVar              eR    is.environment, e218.0
  lgl$#-          %254.5 = Identical                <blt is.environment>, %254.4   <true>
  void                    Branch                   %254.5 -> BB262 (if true) | BB263 (if false)
BB255   <- [53]
  fs              %255.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %255.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%255.0
  fs              %255.2 = FrameState         R     0x55804e1e4250+245: [], env=e218.0, next=%255.1
  void                    Deopt              !v    %255.2, CallTarget@0x55804eaea998[Call#8], %53.0   !
BB250   <- [143]
  val?~- | miss   %250.0 = CastType           d     dn %143.0
  void                    Visible            v     
  val?-           %250.2 = Force!<value>            %250.0,    <env->
  val?            %250.3 = PopContext         C     %250.2, %184.3   <env->
  void                    StVar              lW    entry, %250.3, e184.0
  val?^ | miss    %250.5 = LdVar              eR    get, e184.0
  lgl$#-          %250.6 = Identical                %250.5, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %250.6 -> BB252 (if true) | BB253 (if false)
BB251   <- [143]
  fs              %251.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %251.1 = FrameState         R     0x55804e9d77b0+37: [], env=e184.0, next=%251.0
  fs              %251.2 = FrameState         R     0x55804e1e4250+454: [], env=e188.0, next=%251.1
  void                    Deopt              !v    %251.2, Typecheck@0x55804eaea998[Type#21], %143.0   !
BB114   <- [258]
  void                    Nop                !     
  goto BB101
BB100   <- [258]
  (cls|spec|blt)  %100.0 = LdFun              !v    stop, e206.0
  val?            %100.1 = Call               !v    %100.0("bad local variable entry") e206.0
  goto BB101
BB262   <- [254]
  val             %262.0 = ChkMissing         e     %254.2
  lgl$#-          %262.1 = CallSafeBuiltin    wed   is.environment(%254.2) 
  void                    Branch                   %262.1 -> BB72 (if true) | BB58 (if false)
BB263   <- [254]
  fs              %263.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %263.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%263.0
  fs              %263.2 = FrameState         R     0x55804e1e4250+313: [], env=e218.0, next=%263.1
  void                    Deopt              !v    %263.2, DeadBranchReached@0x55804eaea998[Test#0], %254.5   !
BB252   <- [250]
  prom-           %252.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p17, e184.0
  prom-           %252.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p18 (!refl), e184.0
  val?            %252.2 = StaticCall         !     get[0x55804ee59ef0](%252.0, %252.1, missingArg, missingArg, false) { 0 1 4n } e184.0   <real$->
  lgl$#-          %252.3 = IsType                   %252.2 isA real$-
  void                    Branch                   %252.3 -> BB260 (if true) | BB261 (if false)
BB253   <- [250]
  fs              %253.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %253.1 = FrameState         R     0x55804e9d77b0+51: [], env=e184.0, next=%253.0
  void                    Deopt              !v    %253.1, CallTarget@0x55804e3d1be0[Call#1], %250.5   !
BB101   <- [114, 100]
  val?^ | miss    %101.0 = LdVar              eR    entry, e206.0
  lgl$#-          %101.1 = IsType                   %101.0 isA val?~- | miss
  void                    Branch                   %101.1 -> BB264 (if true) | BB265 (if false)
BB72   <- [262]
  void                    Nop                !     
  goto BB59
BB58   <- [262]
  (cls|spec|blt)  %58.0 = LdFun              !v    stop, e218.0
  val?            %58.1 = Call               !v    %58.0("bad local variable entry") e218.0
  goto BB59
BB260   <- [252]
  real$-          %260.0 = CastType           d     dn %252.2
  void                    StVar              lW    value, %260.0, e184.0
  val?^ | miss    %260.2 = LdVar              eR    assign, e184.0
  lgl$#-          %260.3 = Identical                %260.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %260.3 -> BB266 (if true) | BB267 (if false)
BB261   <- [252]
  fs              %261.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %261.1 = FrameState         R     0x55804e9d77b0+105: [%252.2], env=e184.0, next=%261.0
  void                    Deopt              !v    %261.1, Typecheck@0x55804e3d1be0[Type#5], %252.2   !
BB264   <- [101]
  val?~- | miss   %264.0 = CastType           d     dn %101.0
  void                    Visible            v     
  val?-           %264.2 = Force!<value>            %264.0,    <env->
  val?            %264.3 = PopContext         C     %264.2, %194.3   <env->
  void                    StVar              lW    entry, %264.3, e194.0
  val?^ | miss    %264.5 = LdVar              eR    get, e194.0
  lgl$#-          %264.6 = Identical                %264.5, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %264.6 -> BB270 (if true) | BB271 (if false)
BB265   <- [101]
  fs              %265.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %265.1 = FrameState         R     0x55804e9d77b0+37: [], env=e194.0, next=%265.0
  fs              %265.2 = FrameState         R     0x55804e1e4250+454: [], env=e206.0, next=%265.1
  void                    Deopt              !v    %265.2, Typecheck@0x55804eaea998[Type#21], %101.0   !
BB59   <- [72, 58]
  val?^ | miss    %59.0 = LdVar              eR    entry, e218.0
  lgl$#-          %59.1 = IsType                   %59.0 isA val?~- | miss
  void                    Branch                   %59.1 -> BB268 (if true) | BB269 (if false)
BB266   <- [260]
  prom-           %266.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p19, e184.0
  prom-           %266.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p20, e184.0
  prom-           %266.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p21, e184.0
  val?            %266.3 = StaticCall         !     assign[0x55804f8f72e0](%266.0, %266.1, %266.2) e184.0   <real$->
  lgl$#-          %266.4 = IsType                   %266.3 isA real$-
  void                    Branch                   %266.4 -> BB274 (if true) | BB275 (if false)
BB267   <- [260]
  fs              %267.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %267.1 = FrameState         R     0x55804e9d77b0+119: [], env=e184.0, next=%267.0
  void                    Deopt              !v    %267.1, CallTarget@0x55804e3d1be0[Call#2], %260.2   !
BB270   <- [264]
  prom-           %270.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p24, e194.0
  prom-           %270.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p25 (!refl), e194.0
  val?            %270.2 = StaticCall         !     get[0x55804ee59ef0](%270.0, %270.1, missingArg, missingArg, false) { 0 1 4n } e194.0   <real$->
  lgl$#-          %270.3 = IsType                   %270.2 isA real$-
  void                    Branch                   %270.3 -> BB272 (if true) | BB273 (if false)
BB271   <- [264]
  fs              %271.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %271.1 = FrameState         R     0x55804e9d77b0+51: [], env=e194.0, next=%271.0
  void                    Deopt              !v    %271.1, CallTarget@0x55804e3d1be0[Call#1], %264.5   !
BB268   <- [59]
  val?~- | miss   %268.0 = CastType           d     dn %59.0
  void                    Visible            v     
  val?-           %268.2 = Force!<value>            %268.0,    <env->
  val?            %268.3 = PopContext         C     %268.2, %202.3   <env->
  void                    StVar              lW    entry, %268.3, e202.0
  val?^ | miss    %268.5 = LdVar              eR    get, e202.0
  lgl$#-          %268.6 = Identical                %268.5, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %268.6 -> BB276 (if true) | BB277 (if false)
BB269   <- [59]
  fs              %269.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %269.1 = FrameState         R     0x55804e9d77b0+37: [], env=e202.0, next=%269.0
  fs              %269.2 = FrameState         R     0x55804e1e4250+454: [], env=e218.0, next=%269.1
  void                    Deopt              !v    %269.2, Typecheck@0x55804eaea998[Type#21], %59.0   !
BB274   <- [266]
  real$-          %274.0 = CastType           d     dn %266.3
  val?            %274.1 = PopContext         C     %274.0, %182.2   <real$->
  lgl$#-          %274.2 = IsType                   %274.1 isA real$-
  void                    Branch                   %274.2 -> BB282 (if true) | BB283 (if false)
BB275   <- [266]
  fs              %275.0 = FrameState         R     0x55804ec9bac0+587: [], env=e162.0
  fs              %275.1 = FrameState         R     0x55804e9d77b0+161: [%266.3], env=e184.0, next=%275.0
  void                    Deopt              !v    %275.1, Typecheck@0x55804e3d1be0[Type#10], %266.3   !
BB272   <- [270]
  real$-          %272.0 = CastType           d     dn %270.2
  void                    StVar              lW    value, %272.0, e194.0
  val?^ | miss    %272.2 = LdVar              eR    assign, e194.0
  lgl$#-          %272.3 = Identical                %272.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %272.3 -> BB280 (if true) | BB281 (if false)
BB273   <- [270]
  fs              %273.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %273.1 = FrameState         R     0x55804e9d77b0+105: [%270.2], env=e194.0, next=%273.0
  void                    Deopt              !v    %273.1, Typecheck@0x55804e3d1be0[Type#5], %270.2   !
BB276   <- [268]
  prom-           %276.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p31, e202.0
  prom-           %276.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p32 (!refl), e202.0
  val?            %276.2 = StaticCall         !     get[0x55804ee59ef0](%276.0, %276.1, missingArg, missingArg, false) { 0 1 4n } e202.0   <real$->
  lgl$#-          %276.3 = IsType                   %276.2 isA real$-
  void                    Branch                   %276.3 -> BB278 (if true) | BB279 (if false)
BB277   <- [268]
  fs              %277.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %277.1 = FrameState         R     0x55804e9d77b0+51: [], env=e202.0, next=%277.0
  void                    Deopt              !v    %277.1, CallTarget@0x55804e3d1be0[Call#1], %268.5   !
BB282   <- [274]
  void                    Nop                !     
  val?            %282.1 = %274.1
  goto BB30
BB283   <- [274]
  fs              %283.0 = FrameState         R     0x55804ec9bac0+587: [%274.1], env=e162.0
  void                    Deopt              !v    %283.0, Typecheck@0x55804e19e1f0[Type#9], %274.1   !
BB280   <- [272]
  prom-           %280.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p26, e194.0
  prom-           %280.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p27, e194.0
  prom-           %280.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p28, e194.0
  val?            %280.3 = StaticCall         !     assign[0x55804f8f72e0](%280.0, %280.1, %280.2) e194.0   <real$->
  lgl$#-          %280.4 = IsType                   %280.3 isA real$-
  void                    Branch                   %280.4 -> BB290 (if true) | BB291 (if false)
BB281   <- [272]
  fs              %281.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %281.1 = FrameState         R     0x55804e9d77b0+119: [], env=e194.0, next=%281.0
  void                    Deopt              !v    %281.1, CallTarget@0x55804e3d1be0[Call#2], %272.2   !
BB278   <- [276]
  real$-          %278.0 = CastType           d     dn %276.2
  void                    StVar              lW    value, %278.0, e202.0
  val?^ | miss    %278.2 = LdVar              eR    assign, e202.0
  lgl$#-          %278.3 = Identical                %278.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %278.3 -> BB284 (if true) | BB285 (if false)
BB279   <- [276]
  fs              %279.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %279.1 = FrameState         R     0x55804e9d77b0+105: [%276.2], env=e202.0, next=%279.0
  void                    Deopt              !v    %279.1, Typecheck@0x55804e3d1be0[Type#5], %276.2   !
BB290   <- [280]
  real$-          %290.0 = CastType           d     dn %280.3
  val?            %290.1 = PopContext         C     %290.0, %192.2   <real$->
  lgl$#-          %290.2 = IsType                   %290.1 isA real$-
  void                    Branch                   %290.2 -> BB292 (if true) | BB293 (if false)
BB291   <- [280]
  fs              %291.0 = FrameState         R     0x55804ec9bac0+640: [], env=e162.0
  fs              %291.1 = FrameState         R     0x55804e9d77b0+161: [%280.3], env=e194.0, next=%291.0
  void                    Deopt              !v    %291.1, Typecheck@0x55804e3d1be0[Type#10], %280.3   !
BB284   <- [278]
  prom-           %284.0 = MkArg                    unboundValue, [0x55804f2a42c0]_p33, e202.0
  prom-           %284.1 = MkArg                    unboundValue, [0x55804f2a42c0]_p34, e202.0
  prom-           %284.2 = MkArg                    unboundValue, [0x55804f2a42c0]_p35, e202.0
  val?            %284.3 = StaticCall         !     assign[0x55804f8f72e0](%284.0, %284.1, %284.2) e202.0   <real$->
  lgl$#-          %284.4 = IsType                   %284.3 isA real$-
  void                    Branch                   %284.4 -> BB286 (if true) | BB287 (if false)
BB285   <- [278]
  fs              %285.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %285.1 = FrameState         R     0x55804e9d77b0+119: [], env=e202.0, next=%285.0
  void                    Deopt              !v    %285.1, CallTarget@0x55804e3d1be0[Call#2], %278.2   !
BB292   <- [290]
  void                    Nop                !     
  val?            %292.1 = %290.1
  goto BB30
BB293   <- [290]
  fs              %293.0 = FrameState         R     0x55804ec9bac0+640: [%290.1], env=e162.0
  void                    Deopt              !v    %293.0, Typecheck@0x55804e19e1f0[Type#12], %290.1   !
BB286   <- [284]
  real$-          %286.0 = CastType           d     dn %284.3
  val?            %286.1 = PopContext         C     %286.0, %200.2   <real$->
  lgl$#-          %286.2 = IsType                   %286.1 isA real$-
  void                    Branch                   %286.2 -> BB288 (if true) | BB289 (if false)
BB287   <- [284]
  fs              %287.0 = FrameState         R     0x55804ec9bac0+693: [], env=e162.0
  fs              %287.1 = FrameState         R     0x55804e9d77b0+161: [%284.3], env=e202.0, next=%287.0
  void                    Deopt              !v    %287.1, Typecheck@0x55804e3d1be0[Type#10], %284.3   !
BB288   <- [286]
  void                    Nop                !     
  val?            %288.1 = %286.1
  goto BB30
BB289   <- [286]
  fs              %289.0 = FrameState         R     0x55804ec9bac0+693: [%286.1], env=e162.0
  void                    Deopt              !v    %289.0, Typecheck@0x55804e19e1f0[Type#15], %286.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("<-", "<<-") e0.0   <str->
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p38, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f2a42c0]_p39, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p41, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f2a42c0]_p42, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x55804bee1080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p55, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "checkUsageFrame") e0.0   <env+>
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 62:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 63:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p66, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f2a42c0]_p67, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 67:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p69, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f2a42c0]_p70, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 69:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 72:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 74:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 81:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 82:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x55804bee1080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p83, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "checkUsageFrame") e0.0   <env+>
  void                    Return             l     %0.3
Prom 83:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 90:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 91:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 92:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 93:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p94, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f2a42c0]_p95, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 94:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 95:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 96:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p97, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804f2a42c0]_p98, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 97:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 98:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 99:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 100:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 101:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 102:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 109:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 110:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x55804bee1080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804f2a42c0]_p111, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "checkUsageFrame") e0.0   <env+>
  void                    Return             l     %0.3
Prom 111:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 118:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 119:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3

│ [0x55804f2a42c0]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
