
┌──────────────────────────────────────────────────────────────────────────────┐
│ ls[0x55804ee67600]                                                           │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,Eager2,Eager3,NonRefl1,NonRefl2,NonRefl3,!Obj3 miss: 2│
│ Properties:                                                                  │
├────── Final PIR Version
ls[0x55804ee67600]
BB0
  val?~+          %0.0  = LdArg                    3
  val?~ | miss    %0.1  = LdArg                    2
  val?~ | miss    %0.2  = LdArg                    1
  val?^ | miss    %0.3  = LdArg                    0
  lgl$#-          %0.4  = Identical                %0.2, missingArg
  lgl$#-          %0.5  = Identical                %0.1, missingArg
  env             e0.6  = MkEnv              l     name=%0.3, pos=%0.2, envir=%0.1, all.names=%0.0, pattern(miss)=missingArg, sorted(miss)=missingArg, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.4 -> BB2 (if true) | BB20 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, ls[0x55804ee67600]_p0 (!refl), 
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    pos, %2.1, e0.6
  goto BB3
BB20   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 20]
  void                    Branch                   %0.5 -> BB19 (if true) | BB4 (if false)
BB19   <- [3]
  prom-           %19.0 = MkArg                    unboundValue, ls[0x55804ee67600]_p1, e0.6
  val?^ | miss    %19.1 = CastType                 up %19.0
  void                    StArg              lW    envir, %19.1, e0.6
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [19, 4]
  void                    StArg              lW    sorted, true, e0.6
  lgl$-           %5.1  = Missing            eR    name, e0.6
  lgl$-           %5.2  = Not                d     %5.1, elided
  lgl$#-          %5.3  = CheckTrueFalse     e     %5.2
  void                    Branch                   %5.3 -> BB12 (if true) | BB6 (if false)
BB12   <- [5]
  prom-           %12.0 = MkArg                    unboundValue, ls[0x55804ee67600]_p5, e0.6
  cls             %12.1 = MkCls                    ls@Prom(6)0, e0.6
  prom-           %12.2 = MkArg                    %12.1, ls[0x55804ee67600]_p6 (!refl), e0.6
  dots-           %12.3 = DotsList           l     error=%12.2
  val?            %12.4 = StaticCall         !v    tryCatch[0x55804f3851c0](%12.0, %12.3) { 0 1n } e0.6   <env+>
  void                    StVar              lW    pos, %12.4, e0.6
  lgl$#-          %12.6 = IsType                   %12.4 isA val?+
  val?^ | miss    %12.7 = LdVar              eR    inherits, e0.6
  lgl$#-          %12.8 = Identical                %12.7, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %12.8 -> BB21 (if true) | BB22 (if false)
BB6   <- [5]
  void                    Nop                !     
  goto BB7
BB21   <- [12]
  void                    Branch                   %12.6 -> BB23 (if true) | BB24 (if false)
BB22   <- [12]
  void                    Nop                !     
  val?^ | miss    %22.1 = %12.7
  dr              %22.2 = CallTarget@0x55804e875c40[Call#2]
  goto BB13
BB7   <- [6, 17]
  val?^ | miss    %7.0  = LdVar              eR    envir, e0.6
  val?            %7.1  = Force!<lazy>       !v    %7.0, e0.6   <env+>
  val?^ | miss    %7.2  = LdVar              eR    all.names, e0.6
  val?            %7.3  = Force!<value>      !v    %7.2, e0.6   <lgl$->
  val?^ | miss    %7.4  = LdVar              eR    sorted, e0.6
  val?            %7.5  = Force!<lazy>       !v    %7.4, e0.6   <lgl$->
  val?            %7.6  = CallBuiltin        !v    ls(%7.1, %7.3, %7.5) e0.6   <str->
  void                    StVar              lW    all.names, %7.6, e0.6
  lgl$-           %7.8  = Missing            eR    pattern, e0.6
  lgl$-           %7.9  = Not                d     %7.8, elided
  lgl$#-          %7.10 = CheckTrueFalse     e     %7.9
  void                    Branch                   %7.10 -> BB9 (if true) | BB8 (if false)
BB23   <- [21]
  val?+           %23.0 = CastType           d     dn %12.4   <env+>
  val+            %23.1 = CallSafeBuiltin    wed   inherits(%23.0, "error", false)    <lgl$->
  lgl$#-          %23.2 = IsType                   %23.1 isA lgl$-
  void                    Branch                   %23.2 -> BB25 (if true) | BB26 (if false)
BB24   <- [21]
  void                    Nop                !     
  val?            %24.1 = %12.4
  dr              %24.2 = Typecheck@0x55804e875c40[Type#3]
  goto BB13
BB13   <- [22, 24]
  val?^ | miss    %13.0 = Phi                      %22.1:BB22, %24.1:BB24
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %22.2:BB22, %24.2:BB24
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55804e24b790+77: [], env=e0.6
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB9   <- [7]
  val?^ | miss    %9.0  = LdVar              eR    length, e0.6
  lgl$#-          %9.1  = Identical                <blt length>, %9.0   <@?>
  void                    Branch                   %9.1 -> BB11 (if true) | BB10 (if false)
BB8   <- [7]
  val             %8.0  = ChkMissing         e     %7.6
  void                    Visible            v     
  void                    Return             l     %7.6
BB25   <- [23]
  lgl$-           %25.0 = CastType           d     dn %23.1
  lgl$#-          %25.1 = CheckTrueFalse     e     %25.0
  void                    Branch                   %25.1 -> BB18 (if true) | BB17 (if false)
BB26   <- [23]
  prom-           %26.0 = MkArg                    unboundValue, ls[0x55804ee67600]_p7 (!refl), e0.6
  val?^           %26.1 = CastType                 up %26.0
  fs              %26.2 = FrameState         R     0x55804e24b790+114: [], env=e0.6
  env             e26.3 = (MkEnv)            l     which(miss)=false, what="error", x=%26.1, parent=R_BaseNamespace, context 0
  fs              %26.4 = FrameState         R     0x55804e0a27d0+55: [%23.1], env=e26.3, next=%26.2
  void                    Deopt              !v    %26.4, Typecheck@0x55804e875c40[Type#5], %23.1   !
BB11   <- [9]
  (cls|spec|blt)  %11.0 = LdFun              !v    grep, e0.6
  fs              %11.1 = FrameState         R     0x55804e24b790+560: [<blt length>, %11.0], env=e0.6
  void                    Deopt              !v    %11.1, DeadCall@0x55804e875c40[Call#11], %11.0   !
BB10   <- [9]
  (cls|spec|blt)  %10.0 = LdFun              !v    length, e0.6
  fs              %10.1 = FrameState         R     0x55804e24b790+523: [%10.0], env=e0.6
  void                    Deopt              !v    %10.1, DeadCall@0x55804e875c40[Call#9], %10.0   !
BB18   <- [25]
  (cls|spec|blt)  %18.0 = LdFun              !v    substitute, e0.6
  fs              %18.1 = FrameState         R     0x55804e24b790+135: [%18.0], env=e0.6
  void                    Deopt              !v    %18.1, DeadCall@0x55804e875c40[Call#3], %18.0   !
BB17   <- [25]
  void                    Nop                !     
  goto BB7
Prom 0:
BB0
  void                    Visible            v     
  void                    Return             l     -1L
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.environment, <0x55804beedb70>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, ls[0x55804ee67600]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    ls@Prom(6)0, e0.0
  void                    Return             l     %0.1
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3

│ ls[0x55804ee67600]                                                           │
└──────────────────────────────────────────────────────────────────────────────┘
