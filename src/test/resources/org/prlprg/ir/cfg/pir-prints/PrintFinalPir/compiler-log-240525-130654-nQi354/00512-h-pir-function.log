
┌──────────────────────────────────────────────────────────────────────────────┐
│ h[0x55804f7ecdd0]                                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
h[0x55804f7ecdd0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  (cls|spec|blt)  %0.3  = LdFun              !v    $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %0.4  = MkArg                    unboundValue, h[0x55804f7ecdd0]_p0 (!refl), e0.2
  prom-           %0.5  = MkArg                    unboundValue, h[0x55804f7ecdd0]_p1, e0.2
  val?            %0.6  = Call               !v    %0.3(%0.4, %0.5) e0.2   <cls->
  (cls|spec|blt)  %0.7  = ChkFunction        e     %0.6
  prom-           %0.8  = MkArg                    unboundValue, h[0x55804f7ecdd0]_p2, e0.2
  prom-           %0.9  = MkArg                    unboundValue, h[0x55804f7ecdd0]_p3, e0.2
  lgl$#-          %0.10 = Identical                %0.7, function(type, n, e, w) <(rir::DispatchTable*)|...
  void                    Branch                   %0.10 -> BB57 (if true) | BB58 (if false)
BB57   <- [0]
  val?            %57.0 = StaticCall         !v    [0x55804e097880]("function", "if", %0.8, %0.9) e0.2
  val?^ | miss    %57.1 = LdVar              eR    constantFoldEnv, e0.2
  lgl$#-          %57.2 = Identical                %57.1, function(e, env=.GlobalEnv, fail=NULL) <(rir::|...
  void                    Branch                   %57.2 -> BB59 (if true) | BB60 (if false)
BB58   <- [0]
  fs              %58.0 = FrameState         R     0x55804e410570+37: [%0.6], env=e0.2
  void                    Deopt              !v    %58.0, CallTarget@0x55804ed23418[Call#1], %0.7   !
BB59   <- [57]
  prom-           %59.0 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p4, e0.2
  prom-           %59.1 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p5, e0.2
  ct              %59.2 = PushContext        lCL   %59.0, %59.1, constantFoldEnv([[(e, 2), $(w, env)), function(e, env=.GlobalEnv, fail=NULL) <(rir::|..., e0.2
  val?^           %59.3 = CastType                 up %59.1
  val?^           %59.4 = CastType                 up %59.0
  env             e59.5 = MkEnv              l     e=%59.4, env=%59.3, fail(miss)=nil, parent=<env 0x55804e699488>, context 1
  cls             %59.6 = MkCls                    , e59.5
  cls             %59.7 = MkCls                    constantFoldEnv>job@25, e59.5
  cls             %59.8 = MkCls                    constantFoldEnv@Prom(3)0, e59.5
  void                    StVar              lW    isLocal, %59.6, e59.5
  void                    StVar              lW    job, %59.7, e59.5
  val?^ | miss    %59.11 = LdVar              eR    tryCatch, e59.5
  lgl$#-          %59.12 = Identical                %59.11, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %59.12 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x55804e410570+85: [%57.0], env=e0.2
  void                    Deopt              !v    %60.0, CallTarget@0x55804ed23418[Call#2], %57.1   !
BB61   <- [59]
  prom-           %61.0 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p11, e59.5
  prom-           %61.1 = MkArg                    %59.8, h[0x55804f7ecdd0]_p13 (!refl), e59.5
  dots-           %61.2 = DotsList           l     error=%61.1
  val?            %61.3 = StaticCall         !v    tryCatch[0x55804ee7d3d0](%61.0, %61.2) { 0 1n } e59.5   <nil->
  val?            %61.4 = PopContext         C     %61.3, %59.2   <nil->
  void                    StVar              lW    test, %61.4, e0.2
  val?^ | miss    %61.6 = LdVar              eR    is.logical, e0.2
  lgl$#-          %61.7 = Identical                <blt is.logical>, %61.6   <true>
  void                    Branch                   %61.7 -> BB63 (if true) | BB64 (if false)
BB62   <- [59]
  fs              %62.0 = FrameState         R     0x55804e410570+123: [], env=e0.2
  fs              %62.1 = FrameState         R     0x55804e74bec0+50: [], env=e59.5, next=%62.0
  void                    Deopt              !v    %62.1, CallTarget@0x55804edf6930[Call#0], %59.11   !
BB63   <- [61]
  val             %63.0 = ChkMissing         e     %61.4
  val+            %63.1 = CallSafeBuiltin    wed   is.logical(%61.4)    <lgl$->
  lgl$#-          %63.2 = IsType                   %63.1 isA lgl$-
  void                    Branch                   %63.2 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  fs              %64.0 = FrameState         R     0x55804e410570+137: [], env=e0.2
  void                    Deopt              !v    %64.0, DeadBranchReached@0x55804ed23418[Test#1], %61.7   !
BB65   <- [63]
  lgl$-           %65.0 = CastType           d     dn %63.1
  lgl$-           %65.1 = AsLogical                %65.0
  lgl$#-          %65.2 = Identical                %65.1, false
  void                    Branch                   %65.2 -> BB55 (if true) | BB11 (if false)
BB66   <- [63]
  void                    Nop                !     
  val+            %66.1 = %63.1
  dr              %66.2 = Typecheck@0x55804ed23418[Type#13]
  goto BB9
BB55   <- [65]
  void                    Nop                !     
  lgl$-           %55.1 = %65.1
  goto BB14
BB11   <- [65]
  val?^ | miss    %11.0 = LdVar              eR    length, e0.2
  lgl$#-          %11.1 = Identical                <blt length>, %11.0   <@?>
  void                    Branch                   %11.1 -> BB13 (if true) | BB12 (if false)
BB9   <- [66, 68]
  val?^ | miss    %9.0  = Phi                      %66.1:BB66, %68.1:BB68
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %66.2:BB66, %68.2:BB68
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804e410570+228: [%63.1], env=e0.2
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB14   <- [55, 67]
  lgl$-           %14.0 = Phi                      %67.5:BB67, %55.1:BB55
  lgl$-           %14.1 = %14.0
  lgl$-           %14.2 = AsLogical                %14.1
  lgl$#-          %14.3 = Identical                %14.2, false
  void                    Branch                   %14.3 -> BB54 (if true) | BB17 (if false)
BB13   <- [11]
  lgl$#-          %13.0 = IsType                   %61.4 isA val?-
  void                    Branch                   %13.0 -> BB67 (if true) | BB68 (if false)
BB12   <- [11]
  (cls|spec|blt)  %12.0 = LdFun              !v    length, e0.2
  fs              %12.1 = FrameState         R     0x55804e410570+268: [%65.1, %12.0], env=e0.2
  void                    Deopt              !v    %12.1, DeadCall@0x55804ed23418[Call#5], %12.0   !
BB54   <- [14]
  void                    Nop                !     
  lgl$-           %54.1 = %14.2
  goto BB20
BB17   <- [14]
  val?^ | miss    %17.0 = LdVar              eR    is.na, e0.2
  lgl$#-          %17.1 = Identical                <blt is.na>, %17.0   <@?>
  void                    Branch                   %17.1 -> BB19 (if true) | BB18 (if false)
BB67   <- [13]
  val?-           %67.0 = CastType           d     dn %61.4   <nil->
  real$-          %67.1 = CallSafeBuiltin    wed   length(%67.0)    <val?_>
  lgl$-           %67.2 = Eq                 d     %67.1, 1, elided   <val?_>
  lgl$-           %67.3 = AsLogical                %67.2
  lgl$-           %67.4 = LAnd                     %65.1, %67.3
  lgl$-           %67.5 = %67.4
  goto BB14
BB68   <- [13]
  void                    Nop                !     
  val?            %68.1 = %61.4
  dr              %68.2 = Typecheck@0x55804ed23418[Type#10]
  goto BB9
BB20   <- [54, 69]
  lgl$-           %20.0 = Phi                      %69.5:BB69, %54.1:BB54
  lgl$-           %20.1 = %20.0
  lgl$#-          %20.2 = CheckTrueFalse     e     %20.1
  void                    Branch                   %20.2 -> BB53 (if true) | BB23 (if false)
BB19   <- [17]
  lgl$#-          %19.0 = IsType                   %61.4 isA val?+
  void                    Branch                   %19.0 -> BB69 (if true) | BB70 (if false)
BB18   <- [17]
  (cls|spec|blt)  %18.0 = LdFun              !v    is.na, e0.2
  fs              %18.1 = FrameState         R     0x55804e410570+385: [%14.2, %18.0], env=e0.2
  void                    Deopt              !v    %18.1, DeadCall@0x55804ed23418[Call#6], %18.0   !
BB53   <- [20]
  (cls|spec|blt)  %53.0 = LdFun              !v    walkCode, e0.2
  fs              %53.1 = FrameState         R     0x55804e410570+514: [%53.0], env=e0.2
  void                    Deopt              !v    %53.1, DeadCall@0x55804ed23418[Call#8], %53.0   !
BB23   <- [20]
  val?^ | miss    %23.0 = LdVar              eR    collectUsageArgs, e0.2
  lgl$#-          %23.1 = Identical                %23.0, function(e, w) <(rir::DispatchTable*)0x55804eb|...
  void                    Branch                   %23.1 -> BB71 (if true) | BB72 (if false)
BB69   <- [19]
  val?+           %69.0 = CastType           d     dn %61.4   <val?_>
  lgl+            %69.1 = CallSafeBuiltin    wed   is.na(%69.0)    <val?_>
  lgl             %69.2 = Not                wed   %69.1, elided
  lgl$-           %69.3 = AsLogical          e     %69.2
  lgl$-           %69.4 = LAnd                     %14.2, %69.3
  lgl$-           %69.5 = %69.4
  goto BB20
BB70   <- [19]
  fs              %70.0 = FrameState         R     0x55804e410570+350: [%14.1], env=e0.2
  void                    Deopt              !v    %70.0, Typecheck@0x55804ed23418[Type#19], %61.4   !
BB71   <- [23]
  prom-           %71.0 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p8, e0.2
  prom-           %71.1 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p9, e0.2
  ct              %71.2 = PushContext        lCL   %71.0, %71.1, collectUsageArgs(e, w), function(e, w) <(rir::DispatchTable*)0x55804eb|..., e0.2
  val?^           %71.3 = CastType                 up %71.1
  val?^           %71.4 = CastType                 up %71.0
  val?^ | miss    %71.5 = LdVar              eR    dropMissings, <env 0x55804e699488>
  lgl$#-          %71.6 = Identical                %71.5, function(x) <(rir::DispatchTable*)0x55804ea145|...
  void                    Branch                   %71.6 -> BB73 (if true) | BB74 (if false)
BB72   <- [23]
  void                    Nop                !     
  val?^ | miss    %72.1 = %23.0
  dr              %72.2 = CallTarget@0x55804ed23418[Call#7]
  goto BB21
BB73   <- [71]
  env             e73.0 = MkEnv              l     e=%71.4, w=%71.3, parent=<env 0x55804e699488>, context 1
  prom-           %73.1 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p14, e73.0
  val?            %73.2 = StaticCall         !v    dropMissings[0x55804ff6ebd0](%73.1) e73.0   <vec->
  val?+           %73.3 = ToForSeq           e     %73.2
  int$-           %73.4 = Length                   %73.3
  int$-           %73.5 = Inc                      0L
  lgl$-           %73.6 = Lt                 d     %73.4, %73.5, elided   <false>
  lgl$#-          %73.7 = Identical                %73.6, true
  void                    Branch                   %73.7 -> BB76 (if true) | BB75 (if false)
BB74   <- [71]
  void                    DropContext        C     
  val?^ | miss    %74.1 = %71.5
  dr              %74.2 = CallTarget@0x55804f22ab48[Call#0]
  goto BB21
BB21   <- [72, 74]
  val?^ | miss    %21.0 = Phi                      %72.1:BB72, %74.1:BB74
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %72.2:BB72, %74.2:BB74
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55804e410570+456: [%20.1], env=e0.2
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB76   <- [73]
  fs              %76.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  fs              %76.1 = FrameState         R     0x55804f459ab0+32: [%73.2], env=e73.0, next=%76.0
  void                    Deopt              !v    %76.1, DeadBranchReached@0x55804f22ab48[Test#1], %73.7   !
BB75   <- [73]
  val?            %75.0 = Extract2_1D        wed   %73.3, %73.5, elided   <(sym|code)->
  void                    StVar              lW    a, %75.0, e73.0
  val?^ | miss    %75.2 = LdVar              eR    typeof, e73.0
  lgl$#-          %75.3 = Identical                %75.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %75.3 -> BB77 (if true) | BB78 (if false)
BB77   <- [75]
  val             %77.0 = ChkMissing         e     %75.0
  str$-           %77.1 = CallSafeBuiltin    wed   typeof(%75.0)    <str$->
  lgl$-           %77.2 = Eq                 d     %77.1, "symbol", elided   <lgl$->
  lgl$-           %77.3 = AsLogical                %77.2
  lgl$#-          %77.4 = Identical                %77.3, false
  void                    Branch                   %77.4 -> BB52 (if true) | BB30 (if false)
BB78   <- [75]
  fs              %78.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  fs              %78.1 = FrameState         R     0x55804f459ab0+77: [%73.3, %73.4, %73.5], env=e73.0, next=%78.0
  void                    Deopt              !v    %78.1, CallTarget@0x55804f22ab48[Call#1], %75.2   !
BB52   <- [77]
  void                    Nop                !     
  lgl$-           %52.1 = %77.3
  goto BB33
BB30   <- [77]
  lgl$#-          %30.0 = IsType                   %75.0 isA val?-
  void                    Branch                   %30.0 -> BB79 (if true) | BB80 (if false)
BB33   <- [52, 81]
  lgl$-           %33.0 = Phi                      %81.3:BB81, %52.1:BB52
  lgl$-           %33.1 = %33.0
  lgl$#-          %33.2 = CheckTrueFalse     e     %33.1
  void                    Branch                   %33.2 -> BB51 (if true) | BB36 (if false)
BB79   <- [30]
  val?-           %79.0 = CastType           d     dn %75.0   <(sym|code)->
  lgl-            %79.1 = Eq                 wed   %79.0, "...", elided   <lgl$->
  lgl$#-          %79.2 = IsType                   %79.1 isA lgl$-
  void                    Branch                   %79.2 -> BB81 (if true) | BB82 (if false)
BB80   <- [30]
  fs              %80.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  prom-           %80.1 = MkArg                    %75.0, h[0x55804f7ecdd0]_p16 (!refl), e73.0
  val?~           %80.2 = CastType                 up %80.1
  fs              %80.3 = FrameState         R     0x55804f459ab0+109: [%73.3, %73.4, %73.5], env=e73.0, next=%80.0
  env             e80.4 = (MkEnv)            l     x=%80.2, parent=R_BaseNamespace, context 0
  fs              %80.5 = FrameState         R     0x55804e7773a0+27: [%77.1], env=e80.4, next=%80.3
  void                    Deopt              !v    %80.5, Typecheck@0x55804f22ab48[Type#3], %75.0   !
BB51   <- [33]
  fs              %51.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  (cls|spec|blt)  %51.1 = LdFun              !v    $, e73.0
  fs              %51.2 = FrameState         R     0x55804f459ab0+215: [%73.3, %73.4, %73.5, %51.1], env=e73.0, next=%51.0
  void                    Deopt              !v    %51.2, DeadCall@0x55804f22ab48[Call#3], %51.1   !
BB36   <- [33]
  val?^ | miss    %36.0 = LdVar              eR    walkCode, e73.0
  lgl$#-          %36.1 = Identical                %36.0, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %36.1 -> BB83 (if true) | BB84 (if false)
BB81   <- [79]
  lgl$-           %81.0 = CastType           d     dn %79.1
  lgl$-           %81.1 = AsLogical                %81.0
  lgl$-           %81.2 = LAnd                     %77.3, %81.1
  lgl$-           %81.3 = %81.2
  goto BB33
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  fs              %82.1 = FrameState         R     0x55804f459ab0+154: [%73.3, %73.4, %73.5, %77.3, %79.1], env=e73.0, next=%82.0
  void                    Deopt              !v    %82.1, Typecheck@0x55804f22ab48[Type#7], %79.1   !
BB83   <- [36]
  prom-           %83.0 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p17 (!refl), e73.0
  prom-           %83.1 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p18, e73.0
  val?            %83.2 = StaticCall         !v    walkCode[0x55804f5154e0](%83.0, %83.1) e73.0
  int$-           %83.3 = %73.5
  goto BB37
BB84   <- [36]
  fs              %84.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  fs              %84.1 = FrameState         R     0x55804f459ab0+161: [%73.3, %73.4, %73.5, %33.1], env=e73.0, next=%84.0
  void                    Deopt              !v    %84.1, CallTarget@0x55804f22ab48[Call#2], %36.0   !
BB37   <- [83, 89]
  int$-           %37.0 = Phi                      %83.3:BB83, %89.3:BB89
  int$-           %37.1 = %37.0
  int$-           %37.2 = Inc                      %37.1
  lgl$-           %37.3 = Lt                 d     %73.4, %37.2, elided
  lgl$#-          %37.4 = Identical                %37.3, true
  void                    Branch                   %37.4 -> BB50 (if true) | BB38 (if false)
BB50   <- [37]
  void                    Invisible          v     
  val?            %50.1 = PopContext         C     nil, %71.2   <nil->
  void                    Return             l     %50.1
BB38   <- [37]
  val?            %38.0 = Extract2_1D        wed   %73.3, %37.2, elided   <val?->
  void                    StVar              lW    a, %38.0, e73.0
  val?^ | miss    %38.2 = LdVar              eR    typeof, e73.0
  lgl$#-          %38.3 = Identical                %38.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %38.3 -> BB85 (if true) | BB86 (if false)
BB85   <- [38]
  val             %85.0 = ChkMissing         e     %38.0
  str$-           %85.1 = CallSafeBuiltin    wed   typeof(%38.0)    <str$->
  lgl$-           %85.2 = Eq                 d     %85.1, "symbol", elided   <lgl$->
  lgl$-           %85.3 = AsLogical                %85.2
  lgl$#-          %85.4 = Identical                %85.3, false
  void                    Branch                   %85.4 -> BB49 (if true) | BB43 (if false)
BB86   <- [38]
  fs              %86.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  fs              %86.1 = FrameState         R     0x55804f459ab0+492: [%73.3, %73.4, %37.2], env=e73.0, next=%86.0
  void                    Deopt              !v    %86.1, CallTarget@0x55804f22ab48[Call#11], %38.2   !
BB49   <- [85]
  void                    Nop                !     
  lgl$-           %49.1 = %85.3
  goto BB44
BB43   <- [85]
  val             %43.0 = ChkMissing         e     %38.0
  lgl$#-          %43.1 = IsType                   %38.0 isA val?-
  void                    Branch                   %43.1 -> BB87 (if true) | BB88 (if false)
BB44   <- [49, 87]
  lgl$-           %44.0 = Phi                      %87.4:BB87, %49.1:BB49
  lgl$-           %44.1 = %44.0
  lgl$#-          %44.2 = CheckTrueFalse     e     %44.1
  void                    Branch                   %44.2 -> BB48 (if true) | BB47 (if false)
BB87   <- [43]
  val?-           %87.0 = CastType           d     dn %38.0
  lgl-            %87.1 = Eq                 wed   %87.0, "...", elided   <val?_>
  lgl$-           %87.2 = AsLogical                %87.1
  lgl$-           %87.3 = LAnd                     %85.3, %87.2
  lgl$-           %87.4 = %87.3
  goto BB44
BB88   <- [43]
  fs              %88.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  prom-           %88.1 = MkArg                    %38.0, h[0x55804f7ecdd0]_p19 (!refl), e73.0
  val?~           %88.2 = CastType                 up %88.1
  fs              %88.3 = FrameState         R     0x55804f459ab0+524: [%73.3, %73.4, %37.2], env=e73.0, next=%88.0
  env             e88.4 = (MkEnv)            l     x=%88.2, parent=R_BaseNamespace, context 0
  fs              %88.5 = FrameState         R     0x55804e7773a0+27: [%85.1], env=e88.4, next=%88.3
  void                    Deopt              !v    %88.5, Typecheck@0x55804f22ab48[Type#28], %38.0   !
BB48   <- [44]
  fs              %48.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  (cls|spec|blt)  %48.1 = LdFun              !v    $, e73.0
  fs              %48.2 = FrameState         R     0x55804f459ab0+630: [%73.3, %73.4, %37.2, %48.1], env=e73.0, next=%48.0
  void                    Deopt              !v    %48.2, DeadCall@0x55804f22ab48[Call#13], %48.1   !
BB47   <- [44]
  val?^ | miss    %47.0 = LdVar              eR    walkCode, e73.0
  lgl$#-          %47.1 = Identical                %47.0, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %47.1 -> BB89 (if true) | BB90 (if false)
BB89   <- [47]
  prom-           %89.0 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p20 (!refl), e73.0
  prom-           %89.1 = MkArg                    unboundValue, h[0x55804f7ecdd0]_p21, e73.0
  val?            %89.2 = StaticCall         !v    walkCode[0x55804f5154e0](%89.0, %89.1) e73.0
  int$-           %89.3 = %37.2
  goto BB37
BB90   <- [47]
  fs              %90.0 = FrameState         R     0x55804e410570+499: [], env=e0.2
  fs              %90.1 = FrameState         R     0x55804f459ab0+576: [%73.3, %73.4, %37.2, %44.1], env=e73.0, next=%90.0
  void                    Deopt              !v    %90.1, CallTarget@0x55804f22ab48[Call#12], %47.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enterGlobal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 2, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, h[0x55804f7ecdd0]_p6, e0.0
  prom-           %0.3  = MkArg                    unboundValue, h[0x55804f7ecdd0]_p7, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     callCC, <0x55804ec3c3d8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, h[0x55804f7ecdd0]_p12, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    job, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    constantFoldEnv@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <code->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  real$#-         %2.1  = -1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, h[0x55804f7ecdd0]_p15, 
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  (real|prom)-    %3.0  = Phi                      %2.1:BB2, %4.1:BB4
  (real|prom)-    %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 15:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ h[0x55804f7ecdd0]                                                            │
└──────────────────────────────────────────────────────────────────────────────┘
