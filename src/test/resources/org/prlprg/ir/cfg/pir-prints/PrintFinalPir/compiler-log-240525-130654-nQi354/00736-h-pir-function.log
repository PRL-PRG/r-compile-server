
┌──────────────────────────────────────────────────────────────────────────────┐
│ h[0x55804fb04e20]                                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
h[0x55804fb04e20]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  (cls|spec|blt)  %0.3  = LdFun              !     $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %0.4  = MkArg                    unboundValue, h[0x55804fb04e20]_p0 (!refl), e0.2
  prom-           %0.5  = MkArg                    unboundValue, h[0x55804fb04e20]_p1, e0.2
  val?            %0.6  = Call               !     %0.3(%0.4, %0.5) e0.2   <cls->
  (cls|spec|blt)  %0.7  = ChkFunction        e     %0.6
  prom-           %0.8  = MkArg                    unboundValue, h[0x55804fb04e20]_p2, e0.2
  prom-           %0.9  = MkArg                    unboundValue, h[0x55804fb04e20]_p4, e0.2
  prom-           %0.10 = MkArg                    unboundValue, h[0x55804fb04e20]_p5, e0.2
  val?            %0.11 = Call               !     %0.7(%0.8, %0.9, %0.10) e0.2
  val?^ | miss    %0.12 = LdVar              eR    walkCode, e0.2
  lgl$#-          %0.13 = Identical                %0.12, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %0.13 -> BB6 (if true) | BB7 (if false)
BB6   <- [0]
  prom-           %6.0  = MkArg                    unboundValue, h[0x55804fb04e20]_p6, e0.2
  prom-           %6.1  = MkArg                    unboundValue, h[0x55804fb04e20]_p7, e0.2
  val?            %6.2  = StaticCall         !     walkCode[0x55804f19cd10](%6.0, %6.1) e0.2
  val?^ | miss    %6.3  = LdVar              eR    walkCode, e0.2
  lgl$#-          %6.4  = Identical                %6.3, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %6.4 -> BB8 (if true) | BB9 (if false)
BB7   <- [0]
  fs              %7.0  = FrameState         R     0x55804e8c54e0+80: [%0.11], env=e0.2
  void                    Deopt              !v    %7.0, CallTarget@0x55804c64f098[Call#3], %0.12   !
BB8   <- [6]
  prom-           %8.0  = MkArg                    unboundValue, h[0x55804fb04e20]_p8, e0.2
  prom-           %8.1  = MkArg                    unboundValue, h[0x55804fb04e20]_p9, e0.2
  val?            %8.2  = StaticCall         !     walkCode[0x55804f19cd10](%8.0, %8.1) e0.2   <nil->
  void                    Return             l     %8.2
BB9   <- [6]
  fs              %9.0  = FrameState         R     0x55804e8c54e0+118: [%6.2], env=e0.2
  void                    Deopt              !v    %9.0, CallTarget@0x55804c64f098[Call#4], %6.3   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    collect, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getAssignedVar, <0x55804e596bb0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, h[0x55804fb04e20]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 2, e0.0   <(sym|code)->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 3, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ h[0x55804fb04e20]                                                            │
└──────────────────────────────────────────────────────────────────────────────┘
