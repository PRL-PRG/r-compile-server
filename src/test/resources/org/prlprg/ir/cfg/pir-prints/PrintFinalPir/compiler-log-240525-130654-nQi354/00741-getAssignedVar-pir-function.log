
┌──────────────────────────────────────────────────────────────────────────────┐
│ getAssignedVar[0x55804e960ba0]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
getAssignedVar[0x55804e960ba0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     e=%0.0, parent=<env 0x55804e699488>, context 1
  val+            %0.2  = Force!<lazy>       !vr   %0.0,    <code->
  val?            %0.3  = Extract2_1D        wed   %0.2, 2, elided   <(sym|code)->
  void                    StVar              lW    v, %0.3, e0.1
  lgl$-           %0.5  = Missing            eR    v, e0.1
  lgl$#-          %0.6  = CheckTrueFalse     e     %0.5
  void                    Branch                   %0.6 -> BB32 (if true) | BB3 (if false)
BB32   <- [0]
  (cls|spec|blt)  %32.0 = LdFun              !v    stop0, <env 0x55804e699488>
  fs              %32.1 = FrameState         R     0x55804e7e9290+1085: [%32.0], env=e0.1
  void                    Deopt              !v    %32.1, DeadCall@0x55804c64f618[Call#25], %32.0
BB3   <- [0]
  val?^ | miss    %3.0  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %3.1  = Identical                %3.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %3.1 -> BB34 (if true) | BB35 (if false)
BB34   <- [3]
  prom-           %34.0 = MkArg                    unboundValue, getAssignedVar[0x55804e960ba0]_p0, e0.1
  prom-           %34.1 = MkArg                    unboundValue, getAssignedVar[0x55804e960ba0]_p2, e0.1
  val?            %34.2 = StaticCall         !v    %in%[0x55804e1423c0](%34.0, %34.1) e0.1   <lgl$->
  lgl$#-          %34.3 = IsType                   %34.2 isA lgl$-
  void                    Branch                   %34.3 -> BB36 (if true) | BB37 (if false)
BB35   <- [3]
  fs              %35.0 = FrameState         R     0x55804e7e9290+67: [], env=e0.1
  void                    Deopt              !v    %35.0, CallTarget@0x55804c64f618[Call#0], %3.0
BB36   <- [34]
  lgl$-           %36.0 = CastType           d     dn %34.2
  lgl$#-          %36.1 = CheckTrueFalse     e     %36.0
  void                    Branch                   %36.1 -> BB31 (if true) | BB6 (if false)
BB37   <- [34]
  void                    Nop                !     
  val?            %37.1 = %34.2
  dr              %37.2 = Typecheck@0x55804c64f618[Type#5]
  goto BB4
BB31   <- [36]
  val?^ | miss    %31.0 = LdVar              eR    as.character, e0.1
  lgl$#-          %31.1 = Identical                <blt as.character>, %31.0   <true>
  void                    Branch                   %31.1 -> BB38 (if true) | BB39 (if false)
BB6   <- [36]
  val?^ | miss    %6.0  = LdVar              eR    typeof, e0.1
  lgl$#-          %6.1  = Identical                %6.0, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %6.1 -> BB42 (if true) | BB43 (if false)
BB4   <- [37, 39, 41, 43, 45]
  val?^ | miss    %4.0  = Phi                      %37.1:BB37, %39.1:BB39, %41.1:BB41, %43.1:BB43, %45.1:BB45
  val?^ | miss    %4.1  = %4.0
  dr              %4.2  = Phi                      %37.2:BB37, %39.2:BB39, %41.2:BB41, %43.2:BB43, %45.2:BB45
  dr              %4.3  = %4.2
  fs              %4.4  = FrameState         R     0x55804e7e9290+116: [%34.2], env=e0.1
  void                    Deopt              !v    %4.4, %4.3, %4.1   !
BB38   <- [31]
  val?^ | miss    %38.0 = LdVar              eR    v, e0.1
  lgl$#-          %38.1 = IsType                   %38.0 isA val?~- | miss
  void                    Branch                   %38.1 -> BB40 (if true) | BB41 (if false)
BB39   <- [31]
  void                    Nop                !     
  lgl$#-          %39.1 = %31.1
  dr              %39.2 = DeadBranchReached@0x55804c64f618[Test#7]
  goto BB4
BB42   <- [6]
  val?^ | miss    %42.0 = LdVar              eR    v, e0.1
  lgl$#-          %42.1 = IsType                   %42.0 isA val?~- | miss
  void                    Branch                   %42.1 -> BB44 (if true) | BB45 (if false)
BB43   <- [6]
  void                    Nop                !     
  val?^ | miss    %43.1 = %6.0
  dr              %43.2 = CallTarget@0x55804c64f618[Call#3]
  goto BB4
BB40   <- [38]
  val?~- | miss   %40.0 = CastType           d     dn %38.0
  val?-           %40.1 = Force!<value>            %40.0,    <sym->
  val+            %40.2 = CallSafeBuiltin    vwed  as.character(%40.1)    <str$->
  val+            %40.3 = %40.2
  goto BB18
BB41   <- [38]
  void                    Nop                !     
  val?^ | miss    %41.1 = %38.0
  dr              %41.2 = Typecheck@0x55804c64f618[Type#46]
  goto BB4
BB44   <- [42]
  val?~- | miss   %44.0 = CastType           d     dn %42.0
  val?-           %44.1 = Force!<value>            %44.0,    <code->
  str$-           %44.2 = CallSafeBuiltin    wed   typeof(%44.1)    <str$->
  lgl$-           %44.3 = Eq                 d     %44.2, "language", elided   <lgl$->
  lgl$#-          %44.4 = CheckTrueFalse     e     %44.3   <true>
  void                    Branch                   %44.4 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  void                    Nop                !     
  val?^ | miss    %45.1 = %42.0
  dr              %45.2 = Typecheck@0x55804c64f618[Type#6]
  goto BB4
BB18   <- [40, 60]
  val+            %18.0 = Phi                      %60.2:BB60, %40.3:BB40
  val+            %18.1 = %18.0
  void                    Return             l     %18.1
BB46   <- [44]
  val?^ | miss    %46.0 = LdVar              eR    length, e0.1
  lgl$#-          %46.1 = Identical                <blt length>, %46.0   <@?>
  void                    Branch                   %46.1 -> BB48 (if true) | BB49 (if false)
BB47   <- [44]
  void                    Nop                !     
  lgl$#-          %47.1 = %44.4
  dr              %47.2 = DeadBranchReached@0x55804c64f618[Test#1]
  goto BB7
BB48   <- [46]
  (int|real)$-    %48.0 = CallSafeBuiltin    wed   length(%44.1)    <int$->
  lgl$#-          %48.1 = IsType                   %48.0 isA int$-
  void                    Branch                   %48.1 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  void                    Nop                !     
  lgl$#-          %49.1 = %46.1
  dr              %49.2 = DeadBranchReached@0x55804c64f618[Test#2]
  goto BB7
BB7   <- [47, 49]
  val?^ | miss    %7.0  = Phi                      %47.1:BB47, %49.1:BB49
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %47.2:BB47, %49.2:BB49
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55804e7e9290+159: [], env=e0.1
  prom-           %7.5  = MkArg                    %44.1, getAssignedVar[0x55804e960ba0]_p3 (!refl), e0.1
  val?~           %7.6  = CastType                 up %7.5
  env             e7.7  = (MkEnv)            l     x=%7.6, parent=R_BaseNamespace, context 0
  fs              %7.8  = FrameState         R     0x55804e7773a0+27: [%44.2], env=e7.7, next=%7.4
  void                    Deopt              !v    %7.8, %7.3, %7.1   !
BB50   <- [48]
  int$-           %50.0 = CastType           d     dn %48.0
  lgl$-           %50.1 = Lt                 d     %50.0, 2, elided   <lgl$->
  lgl$#-          %50.2 = CheckTrueFalse     e     %50.1
  void                    Branch                   %50.2 -> BB30 (if true) | BB11 (if false)
BB51   <- [48]
  void                    Nop                !     
  (int|real)$-    %51.1 = %48.0
  dr              %51.2 = Typecheck@0x55804c64f618[Type#11]
  goto BB9
BB30   <- [50]
  (cls|spec|blt)  %30.0 = LdFun              !v    stop0, e0.1
  fs              %30.1 = FrameState         R     0x55804e7e9290+311: [%30.0], env=e0.1
  void                    Deopt              !v    %30.1, DeadCall@0x55804c64f618[Call#5], %30.0   !
BB11   <- [50]
  lgl$#-          %11.0 = IsType                   %44.1 isA val+   <true>
  void                    Branch                   %11.0 -> BB52 (if true) | BB53 (if false)
BB9   <- [51, 53]
  val?^ | miss    %9.0  = Phi                      %51.1:BB51, %53.1:BB53
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %51.2:BB51, %53.2:BB53
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804e7e9290+278: [%48.0], env=e0.1
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB52   <- [11]
  val?            %52.0 = Extract2_1D        wed   %44.1, 2, elided   <sym->
  void                    StVar              lW    v, %52.0, e0.1
  lgl$-           %52.2 = Missing            eR    v, e0.1
  lgl$#-          %52.3 = CheckTrueFalse     e     %52.2
  void                    Branch                   %52.3 -> BB29 (if true) | BB12 (if false)
BB53   <- [11]
  void                    Nop                !     
  lgl$#-          %53.1 = %11.0
  dr              %53.2 = DeadBranchReached@0x55804c64f618[Test#3]
  goto BB9
BB29   <- [52]
  (cls|spec|blt)  %29.0 = LdFun              !v    stop0, e0.1
  fs              %29.1 = FrameState         R     0x55804e7e9290+428: [%29.0], env=e0.1
  void                    Deopt              !v    %29.1, DeadCall@0x55804c64f618[Call#8], %29.0   !
BB12   <- [52]
  void                    Nop                !     
  val?            %12.1 = %52.0
  goto BB13
BB13   <- [12, 26]
  val?            %13.0 = Phi                      %12.1:BB12, %26.1:BB26
  val?            %13.1 = %13.0
  val             %13.2 = ChkMissing         e     %13.1   <sym->
  str$-           %13.3 = CallSafeBuiltin    wed   typeof(%13.2)    <str$->
  lgl$-           %13.4 = Eq                 d     %13.3, "language", elided   <lgl$->
  lgl$#-          %13.5 = CheckTrueFalse     e     %13.4
  void                    Branch                   %13.5 -> BB20 (if true) | BB16 (if false)
BB20   <- [13]
  void                    Branch                   %46.1 -> BB22 (if true) | BB21 (if false)
BB16   <- [13]
  lgl$-           %16.0 = Neq                d     %13.3, "symbol", elided   <lgl$->
  lgl$#-          %16.1 = CheckTrueFalse     e     %16.0
  void                    Branch                   %16.1 -> BB19 (if true) | BB17 (if false)
BB22   <- [20]
  lgl$#-          %22.0 = IsType                   %13.2 isA val-
  void                    Branch                   %22.0 -> BB54 (if true) | BB55 (if false)
BB21   <- [20]
  (cls|spec|blt)  %21.0 = LdFun              !v    length, e0.1
  fs              %21.1 = FrameState         R     0x55804e7e9290+539: [%21.0], env=e0.1
  void                    Deopt              !v    %21.1, DeadCall@0x55804c64f618[Call#12], %21.0   !
BB19   <- [16]
  (cls|spec|blt)  %19.0 = LdFun              !v    stop0, e0.1
  fs              %19.1 = FrameState         R     0x55804e7e9290+850: [%19.0], env=e0.1
  void                    Deopt              !v    %19.1, DeadCall@0x55804c64f618[Call#20], %19.0   !
BB17   <- [16]
  val?^ | miss    %17.0 = LdVar              eR    as.character, e0.1
  lgl$#-          %17.1 = Identical                <blt as.character>, %17.0   <true>
  void                    Branch                   %17.1 -> BB56 (if true) | BB57 (if false)
BB54   <- [22]
  val-            %54.0 = CastType           d     dn %13.2   <sym->
  (int|real)$-    %54.1 = CallSafeBuiltin    wed   length(%54.0)    <val?_>
  lgl$-           %54.2 = Lt                 d     %54.1, 2, elided   <val?_>
  lgl$#-          %54.3 = CheckTrueFalse     e     %54.2
  void                    Branch                   %54.3 -> BB28 (if true) | BB25 (if false)
BB55   <- [22]
  void                    Nop                !     
  val             %55.1 = %13.2
  dr              %55.2 = Typecheck@0x55804c64f618[Type#21]
  goto BB14
BB56   <- [17]
  lgl$#-          %56.0 = IsType                   %13.2 isA val-
  void                    Branch                   %56.0 -> BB60 (if true) | BB61 (if false)
BB57   <- [17]
  void                    Nop                !     
  lgl$#-          %57.1 = %17.1
  dr              %57.2 = DeadBranchReached@0x55804c64f618[Test#6]
  goto BB14
BB28   <- [54]
  (cls|spec|blt)  %28.0 = LdFun              !v    stop0, e0.1
  fs              %28.1 = FrameState         R     0x55804e7e9290+635: [%28.0], env=e0.1
  void                    Deopt              !v    %28.1, DeadCall@0x55804c64f618[Call#13], %28.0   !
BB25   <- [54]
  val             %25.0 = ChkMissing         e     %13.1   <val?_>
  lgl$#-          %25.1 = IsType                   %25.0 isA val?+
  void                    Branch                   %25.1 -> BB58 (if true) | BB59 (if false)
BB14   <- [55, 57, 61]
  val?^ | miss    %14.0 = Phi                      %55.1:BB55, %57.1:BB57, %61.1:BB61
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %55.2:BB55, %57.2:BB57, %61.2:BB61
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55804e7e9290+488: [], env=e0.1
  prom-           %14.5 = MkArg                    %13.2, getAssignedVar[0x55804e960ba0]_p4 (!refl), e0.1
  val?~           %14.6 = CastType                 up %14.5
  env             e14.7 = (MkEnv)            l     x=%14.6, parent=R_BaseNamespace, context 0
  fs              %14.8 = FrameState         R     0x55804e7773a0+27: [%13.3], env=e14.7, next=%14.4
  void                    Deopt              !v    %14.8, %14.3, %14.1   !
BB60   <- [56]
  val-            %60.0 = CastType           d     dn %13.2   <sym->
  val+            %60.1 = CallSafeBuiltin    vwed  as.character(%60.0)    <str$->
  val+            %60.2 = %60.1
  goto BB18
BB61   <- [56]
  void                    Nop                !     
  val             %61.1 = %13.2
  dr              %61.2 = Typecheck@0x55804c64f618[Type#21]
  goto BB14
BB58   <- [25]
  val+            %58.0 = CastType           d     dn %25.0   <val?_>
  val?            %58.1 = Extract2_1D        wed   %58.0, 2, elided   <val?_>
  void                    StVar              lW    v, %58.1, e0.1
  lgl$-           %58.3 = Missing            eR    v, e0.1
  lgl$#-          %58.4 = CheckTrueFalse     e     %58.3
  void                    Branch                   %58.4 -> BB27 (if true) | BB26 (if false)
BB59   <- [25]
  fs              %59.0 = FrameState         R     0x55804e7e9290+602: [%54.1], env=e0.1
  void                    Deopt              !v    %59.0, Typecheck@0x55804c64f618[Type#31], %25.0   !
BB27   <- [58]
  (cls|spec|blt)  %27.0 = LdFun              !v    stop0, e0.1
  fs              %27.1 = FrameState         R     0x55804e7e9290+752: [%27.0], env=e0.1
  void                    Deopt              !v    %27.1, DeadCall@0x55804c64f618[Call#16], %27.0   !
BB26   <- [58]
  void                    Nop                !     
  val?            %26.1 = %58.1
  goto BB13
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     typeof, <0x55804e68e748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getAssignedVar[0x55804e960ba0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("symbol", "character") e0.0   <str->
  void                    Return             l     %0.2
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3

│ getAssignedVar[0x55804e960ba0]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
