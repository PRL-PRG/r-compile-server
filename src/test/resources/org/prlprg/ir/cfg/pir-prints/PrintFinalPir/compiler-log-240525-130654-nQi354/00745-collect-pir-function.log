
┌──────────────────────────────────────────────────────────────────────────────┐
│ collect[0x55804e07e040]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2        │
│ Properties:                                                                  │
├────── Final PIR Version
collect[0x55804e07e040]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    assign, ?
  lgl$#-          %0.4  = Identical                %0.3, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %0.4 -> BB6 (if true) | BB7 (if false)
BB6   <- [0]
  env             e6.0  = MkEnv              l     v=%0.2, e=%0.1, w=%0.0, parent=?, context 1
  prom-           %6.1  = MkArg                    unboundValue, collect[0x55804e07e040]_p0, e6.0
  prom-           %6.2  = MkArg                    unboundValue, collect[0x55804e07e040]_p1, e6.0
  val?            %6.3  = StaticCall         !     assign[0x55804f470ab0](%6.1, true, missingArg, %6.2) { 0 1 3n } e6.0   <lgl$->
  lgl$#-          %6.4  = IsType                   %6.3 isA lgl$-
  void                    Branch                   %6.4 -> BB8 (if true) | BB9 (if false)
BB7   <- [0]
  env             e7.0  = (MkEnv)            l     v=%0.2, e=%0.1, w=%0.0, parent=?, context 1
  fs              %7.1  = FrameState         R     0x55804eda3520+0: [], env=e7.0
  void                    Deopt              !v    %7.1, CallTarget@0x55804e811d10[Call#0], %0.3   !
BB8   <- [6]
  lgl$-           %8.0  = CastType           d     dn %6.3
  void                    Return             l     %8.0
BB9   <- [6]
  fs              %9.0  = FrameState         R     0x55804eda3520+54: [%6.3], env=e6.0
  void                    Deopt              !v    %9.0, Typecheck@0x55804e811d10[Type#2], %6.3   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ collect[0x55804e07e040]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
