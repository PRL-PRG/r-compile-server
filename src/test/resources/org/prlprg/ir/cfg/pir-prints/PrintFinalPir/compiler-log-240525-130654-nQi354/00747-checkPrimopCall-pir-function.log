
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkPrimopCall[0x55804fb449b0]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
checkPrimopCall[0x55804fb449b0]
BB0
  val?~+          %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    anyMissing, <env 0x55804e699488>
  lgl$#-          %0.5  = Identical                %0.4, function(args) <(rir::DispatchTable*)0x55804e9|...
  void                    Branch                   %0.5 -> BB83 (if true) | BB84 (if false)
BB83   <- [0]
  val?^ | miss    %83.0 = LdVar              eR    length, <env 0x55804e699488>
  lgl$#-          %83.1 = Identical                <blt length>, %83.0   <true>
  void                    Branch                   %83.1 -> BB85 (if true) | BB86 (if false)
BB84   <- [0]
  void                    Nop                !     
  val?^ | miss    %84.1 = %0.4
  dr              %84.2 = CallTarget@0x55804e1eb880[Call#0]
  goto BB82
BB85   <- [83]
  env             e85.0 = MkEnv              l     fn=%0.3, e=%0.2, isBuiltin=%0.1, signal=%0.0, parent=<env 0x55804e699488>, context 1
  val+            %85.1 = Force!<lazy>       !vr   %0.2,    <code->
  val?            %85.2 = Extract1_1D        wed   %85.1, -1, elided   <code->
  prom-           %85.3 = MkArg                    %85.2, checkPrimopCall[0x55804fb449b0]_p0 (!refl), e85.0
  val?~           %85.4 = CastType                 up %85.3
  lgl$#-          %85.5 = IsType                   %85.2 isA val?-
  void                    Branch                   %85.5 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  void                    Nop                !     
  lgl$#-          %86.1 = %83.1
  dr              %86.2 = DeadBranchReached@0x55804eaebc28[Test#0]
  goto BB82
BB82   <- [84, 86]
  val?^ | miss    %82.0 = Phi                      %84.1:BB84, %86.1:BB86
  val?^ | miss    %82.1 = %82.0
  dr              %82.2 = Phi                      %84.2:BB84, %86.2:BB86
  dr              %82.3 = %82.2
  env             e82.4 = (MkEnv)            l     fn=%0.3, e=%0.2, isBuiltin=%0.1, signal=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %82.5 = FrameState         R     0x55804e9fc4a0+0: [], env=e82.4
  void                    Deopt              !v    %82.5, %82.3, %82.1
BB87   <- [85]
  val?-           %87.0 = CastType           d     dn %85.2   <code->
  (int|real)$-    %87.1 = CallSafeBuiltin    wed   length(%87.0)    <int$->
  lgl$#-          %87.2 = IsType                   %87.1 isA int$-
  lgl$#-          %87.3 = IsType                   %87.0 isA val+   <true>
  void                    Branch                   %87.2 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  fs              %88.0 = FrameState         R     0x55804e9fc4a0+32: [], env=e85.0
  env             e88.1 = (MkEnv)            l     args=%85.4, i=unboundValue, a=unboundValue, parent=<env 0x55804e699488>, context 0
  fs              %88.2 = FrameState         R     0x55804eb46ed0+76: [1, <blt length>, %85.2], env=e88.1, next=%88.0
  void                    Deopt              !v    %88.2, Typecheck@0x55804eaebc28[Type#1], %85.2
BB89   <- [87]
  int$-           %89.0 = CastType           d     dn %87.1
  lgl$#-          %89.1 = ColonInputEffects        1, %89.0   <true>
  void                    Branch                   %89.1 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  void                    Nop                !     
  (int|real)$-    %90.1 = %87.1
  dr              %90.2 = Typecheck@0x55804eaebc28[Type#2]
  goto BB5
BB91   <- [89]
  int$#-          %91.0 = ColonCastRhs       e     1L, %89.0   <int$->
  lgl$#-          %91.1 = Lte                d     1L, %91.0, elided   <true>
  void                    Branch                   %91.1 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  void                    Nop                !     
  lgl$#-          %92.1 = %89.1
  dr              %92.2 = DeadBranchReached@0x55804eaebc28[Test#1]
  goto BB5
BB5   <- [90, 92, 94, 96, 98]
  val?^ | miss    %5.0  = Phi                      %90.1:BB90, %92.1:BB92, %94.1:BB94, %96.1:BB96, %98.1:BB98
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %90.2:BB90, %92.2:BB92, %94.2:BB94, %96.2:BB96, %98.2:BB98
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55804e9fc4a0+32: [], env=e85.0
  env             e5.5  = (MkEnv)            l     args=%85.4, i=unboundValue, a=unboundValue, parent=<env 0x55804e699488>, context 0
  fs              %5.6  = FrameState         R     0x55804eb46ed0+98: [1, %87.1], env=e5.5, next=%5.4
  void                    Deopt              !v    %5.6, %5.3, %5.1
BB93   <- [91]
  lgl$#-          %93.0 = Neq                d     %91.0, 1L, elided   <true>
  void                    Branch                   %93.0 -> BB95 (if true) | BB96 (if false)
BB94   <- [91]
  void                    Nop                !     
  lgl$#-          %94.1 = %91.1
  dr              %94.2 = DeadBranchReached@0x55804eaebc28[Test#3]
  goto BB5
BB95   <- [93]
  void                    Branch                   %87.3 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  void                    Nop                !     
  lgl$#-          %96.1 = %93.0
  dr              %96.2 = DeadBranchReached@0x55804eaebc28[Test#4]
  goto BB5
BB97   <- [95]
  val?            %97.0 = Extract2_1D        wed   %87.0, 1L, elided   <val?->
  env             e97.1 = (MkEnv)            l     args=%85.4, i=1L, a=%97.0, parent=<env 0x55804e699488>, context 0
  lgl$-           %97.2 = Missing            eR    a, e97.1
  lgl$#-          %97.3 = CheckTrueFalse     e     %97.2
  void                    Branch                   %97.3 -> BB81 (if true) | BB7 (if false)
BB98   <- [95]
  void                    Nop                !     
  lgl$#-          %98.1 = %87.3
  dr              %98.2 = DeadBranchReached@0x55804eaebc28[Test#5]
  goto BB5
BB81   <- [97]
  void                    Visible            v     
  lgl$#-          %81.1 = true
  goto BB10
BB7   <- [97]
  void                    Nop                !     
  int$#-          %7.1  = 2L
  goto BB8
BB10   <- [81, 80, 9]
  lgl$#-          %10.0 = Phi                      %80.1:BB80, %9.1:BB9, %81.1:BB81
  lgl$#-          %10.1 = %10.0
  void                    Branch                   %10.1 -> BB68 (if true) | BB11 (if false)
BB8   <- [7, 79]
  int$#-          %8.0  = Phi                      %7.1:BB7, %79.1:BB79
  int$#-          %8.1  = %8.0
  lgl$#-          %8.2  = Neq                d     %91.0, %8.1, elided
  void                    Branch                   %8.2 -> BB78 (if true) | BB9 (if false)
BB68   <- [10]
  void                    Visible            v     
  val+            %68.1 = Force!             !r    %0.1,    <val?_>
  lgl$-           %68.2 = AsLogical          e     %68.1
  lgl$#-          %68.3 = Identical                %68.2, true
  void                    Branch                   %68.3 -> BB77 (if true) | BB71 (if false)
BB11   <- [10]
  void                    Nop                !     
  goto BB12
BB78   <- [8]
  int$#-          %78.0 = Add                d     %8.1, 1L, elided
  val?            %78.1 = Extract2_1D        wed   %87.0, %8.1, elided   <val?->
  void                    StVar              lWd   a, %78.1, e97.1
  lgl$-           %78.3 = Missing            eR    a, e97.1
  lgl$#-          %78.4 = CheckTrueFalse     e     %78.3
  void                    Branch                   %78.4 -> BB80 (if true) | BB79 (if false)
BB9   <- [8]
  void                    Visible            v     
  lgl$#-          %9.1  = false
  goto BB10
BB77   <- [68]
  void                    Nop                !     
  lgl$-           %77.1 = %68.2
  goto BB74
BB71   <- [68]
  val?^ | miss    %71.0 = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %71.1 = Identical                %71.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %71.1 -> BB99 (if true) | BB100 (if false)
BB12   <- [11, 75]
  val?^ | miss    %12.0 = LdVar              eR    exists, e85.0
  lgl$#-          %12.1 = Identical                %12.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %12.1 -> BB103 (if true) | BB104 (if false)
BB80   <- [78]
  void                    Visible            v     
  lgl$#-          %80.1 = true
  goto BB10
BB79   <- [78]
  void                    Nop                !     
  int$#-          %79.1 = %78.0
  goto BB8
BB74   <- [77, 101]
  lgl$-           %74.0 = Phi                      %101.3:BB101, %77.1:BB77
  lgl$-           %74.1 = %74.0
  lgl$#-          %74.2 = CheckTrueFalse     e     %74.1
  void                    Branch                   %74.2 -> BB76 (if true) | BB75 (if false)
BB99   <- [71]
  prom-           %99.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p21, e85.0
  void                    Visible            v     
  val+            %99.2 = Force!<lazy>       !r    %0.3,    <str$->
  val?            %99.3 = StaticCall         !     %in%[0x55804ecb64d0](%99.2, %99.0) e85.0   <lgl$->
  lgl$#-          %99.4 = IsType                   %99.3 isA lgl$-
  void                    Branch                   %99.4 -> BB101 (if true) | BB102 (if false)
BB100   <- [71]
  fs              %100.0 = FrameState         R     0x55804e9fc4a0+57: [%68.1], env=e85.0
  void                    Deopt              !v    %100.0, CallTarget@0x55804e1eb880[Call#1], %71.0
BB103   <- [12]
  val?            %103.0 = StaticCall         !     exists[0x55804d4547e0](".GenericArgsEnv") e85.0   <lgl$->
  lgl$#-          %103.1 = IsType                   %103.0 isA lgl$-
  void                    Branch                   %103.1 -> BB105 (if true) | BB106 (if false)
BB104   <- [12]
  fs              %104.0 = FrameState         R     0x55804e9fc4a0+157: [], env=e85.0
  void                    Deopt              !v    %104.0, CallTarget@0x55804e1eb880[Call#5], %12.0   !
BB76   <- [74]
  (cls|spec|blt)  %76.0 = LdFun              !v    signal, e85.0
  fs              %76.1 = FrameState         R     0x55804e9fc4a0+129: [%76.0], env=e85.0
  void                    Deopt              !v    %76.1, DeadCall@0x55804e1eb880[Call#2], %76.0   !
BB75   <- [74]
  void                    Nop                !     
  goto BB12
BB101   <- [99]
  lgl$-           %101.0 = CastType           d     dn %99.3
  lgl$-           %101.1 = AsLogical                %101.0
  lgl$-           %101.2 = LOr                      %68.2, %101.1
  lgl$-           %101.3 = %101.2
  goto BB74
BB102   <- [99]
  fs              %102.0 = FrameState         R     0x55804e9fc4a0+106: [%68.2, %99.3], env=e85.0
  void                    Deopt              !v    %102.0, Typecheck@0x55804e1eb880[Type#7], %99.3   !
BB105   <- [103]
  lgl$-           %105.0 = CastType           d     dn %103.0
  lgl$-           %105.1 = AsLogical                %105.0
  lgl$#-          %105.2 = Identical                %105.1, false
  void                    Branch                   %105.2 -> BB67 (if true) | BB17 (if false)
BB106   <- [103]
  void                    Nop                !     
  val?            %106.1 = %103.0
  dr              %106.2 = Typecheck@0x55804e1eb880[Type#11]
  goto BB15
BB67   <- [105]
  void                    Nop                !     
  lgl$-           %67.1 = %105.1
  goto BB20
BB17   <- [105]
  val?^ | miss    %17.0 = LdVar              eR    exists, e85.0
  lgl$#-          %17.1 = Identical                %17.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %17.1 -> BB107 (if true) | BB108 (if false)
BB15   <- [106, 108]
  val?^ | miss    %15.0 = Phi                      %106.1:BB106, %108.1:BB108
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %106.2:BB106, %108.2:BB108
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55804e9fc4a0+189: [%103.0], env=e85.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB20   <- [67, 109]
  lgl$-           %20.0 = Phi                      %109.3:BB109, %67.1:BB67
  lgl$-           %20.1 = %20.0
  lgl$#-          %20.2 = CheckTrueFalse     e     %20.1
  void                    Branch                   %20.2 -> BB58 (if true) | BB23 (if false)
BB107   <- [17]
  prom-           %107.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p2, e85.0
  prom-           %107.1 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p3, e85.0
  val?            %107.2 = StaticCall         !     exists[0x55804f4ac5d0](%107.0, %107.1) e85.0   <lgl$->
  lgl$#-          %107.3 = IsType                   %107.2 isA lgl$-
  void                    Branch                   %107.3 -> BB109 (if true) | BB110 (if false)
BB108   <- [17]
  void                    Nop                !     
  val?^ | miss    %108.1 = %17.0
  dr              %108.2 = CallTarget@0x55804e1eb880[Call#6]
  goto BB15
BB58   <- [20]
  val?^ | miss    %58.0 = LdVar              eR    get, e85.0
  lgl$#-          %58.1 = Identical                %58.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %58.1 -> BB111 (if true) | BB112 (if false)
BB23   <- [20]
  val?^ | miss    %23.0 = LdVar              eR    exists, e85.0
  lgl$#-          %23.1 = Identical                %23.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %23.1 -> BB113 (if true) | BB114 (if false)
BB109   <- [107]
  lgl$-           %109.0 = CastType           d     dn %107.2
  lgl$-           %109.1 = AsLogical                %109.0
  lgl$-           %109.2 = LAnd                     %105.1, %109.1
  lgl$-           %109.3 = %109.2
  goto BB20
BB110   <- [107]
  fs              %110.0 = FrameState         R     0x55804e9fc4a0+238: [%105.1, %107.2], env=e85.0
  void                    Deopt              !v    %110.0, Typecheck@0x55804e1eb880[Type#14], %107.2   !
BB111   <- [58]
  prom-           %111.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p15, e85.0
  prom-           %111.1 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p16, e85.0
  val?            %111.2 = StaticCall         !v    get[0x55804f89cac0](%111.0, missingArg, %111.1) { 0 2n } e85.0   <cls->
  void                    StVar              lW    def, %111.2, e85.0
  val?^ | miss    %111.4 = LdVar              eR    checkCall, e85.0
  lgl$#-          %111.5 = Identical                %111.4, function(def, call, signal=warning0) <(rir::Di|...
  void                    Branch                   %111.5 -> BB115 (if true) | BB116 (if false)
BB112   <- [58]
  void                    Nop                !     
  val?^ | miss    %112.1 = %58.0
  dr              %112.2 = CallTarget@0x55804e1eb880[Call#22]
  goto BB21
BB113   <- [23]
  val?            %113.0 = StaticCall         !     exists[0x55804d4547e0](".ArgsEnv") e85.0   <lgl$->
  lgl$#-          %113.1 = IsType                   %113.0 isA lgl$-
  void                    Branch                   %113.1 -> BB117 (if true) | BB118 (if false)
BB114   <- [23]
  void                    Nop                !     
  val?^ | miss    %114.1 = %23.0
  dr              %114.2 = CallTarget@0x55804e1eb880[Call#8]
  goto BB21
BB115   <- [111]
  prom-           %115.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p17 (!refl), e85.0
  prom-           %115.1 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p18, e85.0
  prom-           %115.2 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p19, e85.0
  ct              %115.3 = PushContext        lCL   %115.0, %115.1, %115.2, checkCall(def, e, signal), function(def, call, signal=warning0) <(rir::Di|..., e85.0
  val?^           %115.4 = CastType                 up %115.2
  val?^           %115.5 = CastType                 up %115.1
  val?^           %115.6 = CastType                 up %115.0
  env             e115.7 = MkEnv              l     def=%115.6, call=%115.5, signal=%115.4, parent=<env 0x55804e699488>, context 1
  cls             %115.8 = MkCls                    checkCall>testMatch@0, e115.7
  void                    StVar              lW    testMatch, %115.8, e115.7
  cls             %115.10 = MkCls                    checkCall@Prom(1)0, e115.7
  val?^ | miss    %115.11 = LdVar              eR    tryCatch, <env 0x55804e699488>
  lgl$#-          %115.12 = Identical                %115.11, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %115.12 -> BB123 (if true) | BB124 (if false)
BB116   <- [111]
  fs              %116.0 = FrameState         R     0x55804e9fc4a0+923: [], env=e85.0
  void                    Deopt              !v    %116.0, CallTarget@0x55804e1eb880[Call#24], %111.4   !
BB21   <- [112, 114]
  val?^ | miss    %21.0 = Phi                      %112.1:BB112, %114.1:BB114
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %112.2:BB112, %114.2:BB114
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55804e9fc4a0+245: [%20.1], env=e85.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB117   <- [113]
  lgl$-           %117.0 = CastType           d     dn %113.0
  lgl$-           %117.1 = AsLogical                %117.0
  lgl$#-          %117.2 = Identical                %117.1, false
  void                    Branch                   %117.2 -> BB57 (if true) | BB26 (if false)
BB118   <- [113]
  void                    Nop                !     
  val?            %118.1 = %113.0
  dr              %118.2 = Typecheck@0x55804e1eb880[Type#15]
  goto BB24
BB123   <- [115]
  prom-           %123.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p22, e115.7
  prom-           %123.1 = MkArg                    %115.10, checkPrimopCall[0x55804fb449b0]_p23 (!refl), e115.7
  dots-           %123.2 = DotsList           l     error=%123.1
  val?            %123.3 = StaticCall         !v    tryCatch[0x55804e811e80](%123.0, %123.2) { 0 1n } e115.7   <nil->
  lgl$-           %123.4 = Is                       %123.3, NULL
  void                    StVar              lW    msg, %123.3, e115.7
  val             %123.6 = ChkMissing         e     %123.3
  lgl$-           %123.7 = Not                d     %123.4, elided
  lgl$#-          %123.8 = CheckTrueFalse     e     %123.7
  void                    Branch                   %123.8 -> BB66 (if true) | BB63 (if false)
BB124   <- [115]
  fs              %124.0 = FrameState         R     0x55804e9fc4a0+965: [], env=e85.0
  fs              %124.1 = FrameState         R     0x55804e40e710+25: [], env=e115.7, next=%124.0
  void                    Deopt              !v    %124.1, CallTarget@0x55804e09bf70[Call#0], %115.11   !
BB57   <- [117]
  void                    Nop                !     
  lgl$-           %57.1 = %117.1
  goto BB29
BB26   <- [117]
  val?^ | miss    %26.0 = LdVar              eR    exists, e85.0
  lgl$#-          %26.1 = Identical                %26.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %26.1 -> BB119 (if true) | BB120 (if false)
BB24   <- [118, 120]
  val?^ | miss    %24.0 = Phi                      %118.1:BB118, %120.1:BB120
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %118.2:BB118, %120.2:BB120
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x55804e9fc4a0+283: [%113.0], env=e85.0
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB66   <- [123]
  fs              %66.0 = FrameState         R     0x55804e9fc4a0+965: [], env=e85.0
  (cls|spec|blt)  %66.1 = LdFun              !v    paste, e115.7
  fs              %66.2 = FrameState         R     0x55804e40e710+126: [%66.1], env=e115.7, next=%66.0
  void                    Deopt              !v    %66.2, DeadCall@0x55804e09bf70[Call#2], %66.1   !
BB63   <- [123]
  void                    Visible            v     
  val?            %63.1 = PopContext         C     true, %115.3   <lgl$->
  lgl$#-          %63.2 = IsType                   %63.1 isA lgl$-
  void                    Branch                   %63.2 -> BB135 (if true) | BB136 (if false)
BB29   <- [57, 121]
  lgl$-           %29.0 = Phi                      %121.3:BB121, %57.1:BB57
  lgl$-           %29.1 = %29.0
  lgl$#-          %29.2 = CheckTrueFalse     e     %29.1
  void                    Branch                   %29.2 -> BB52 (if true) | BB32 (if false)
BB119   <- [26]
  prom-           %119.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p4, e85.0
  prom-           %119.1 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p5, e85.0
  val?            %119.2 = StaticCall         !     exists[0x55804f4ac5d0](%119.0, %119.1) e85.0   <lgl$->
  lgl$#-          %119.3 = IsType                   %119.2 isA lgl$-
  void                    Branch                   %119.3 -> BB121 (if true) | BB122 (if false)
BB120   <- [26]
  void                    Nop                !     
  val?^ | miss    %120.1 = %26.0
  dr              %120.2 = CallTarget@0x55804e1eb880[Call#9]
  goto BB24
BB135   <- [63]
  void                    Nop                !     
  val?            %135.1 = %63.1
  goto BB38
BB136   <- [63]
  fs              %136.0 = FrameState         R     0x55804e9fc4a0+965: [%63.1], env=e85.0
  void                    Deopt              !v    %136.0, Typecheck@0x55804e1eb880[Type#53], %63.1   !
BB52   <- [29]
  val?^ | miss    %52.0 = LdVar              eR    get, e85.0
  lgl$#-          %52.1 = Identical                %52.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %52.1 -> BB127 (if true) | BB128 (if false)
BB32   <- [29]
  val?^ | miss    %32.0 = LdVar              eR    exists, e85.0
  lgl$#-          %32.1 = Identical                %32.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %32.1 -> BB125 (if true) | BB126 (if false)
BB121   <- [119]
  lgl$-           %121.0 = CastType           d     dn %119.2
  lgl$-           %121.1 = AsLogical                %121.0
  lgl$-           %121.2 = LAnd                     %117.1, %121.1
  lgl$-           %121.3 = %121.2
  goto BB29
BB122   <- [119]
  fs              %122.0 = FrameState         R     0x55804e9fc4a0+332: [%117.1, %119.2], env=e85.0
  void                    Deopt              !v    %122.0, Typecheck@0x55804e1eb880[Type#18], %119.2   !
BB38   <- [37, 135]
  val?            %38.0 = Phi                      %37.2:BB37, %135.1:BB135
  val?            %38.1 = %38.0
  void                    Return             l     %38.1
BB127   <- [52]
  prom-           %127.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p10, e85.0
  prom-           %127.1 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p11, e85.0
  val?            %127.2 = StaticCall         !     get[0x55804f89cac0](%127.0, missingArg, %127.1) { 0 2n } e85.0   <cls->
  void                    StVar              lW    def, %127.2, e85.0
  val?^ | miss    %127.4 = LdVar              eR    checkCall, e85.0
  lgl$#-          %127.5 = Identical                %127.4, function(def, call, signal=warning0) <(rir::Di|...
  void                    Branch                   %127.5 -> BB129 (if true) | BB130 (if false)
BB128   <- [52]
  void                    Nop                !     
  val?^ | miss    %128.1 = %52.0
  dr              %128.2 = CallTarget@0x55804e1eb880[Call#19]
  goto BB30
BB125   <- [32]
  prom-           %125.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p6, e85.0
  prom-           %125.1 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p7, e85.0
  val?            %125.2 = StaticCall         !v    exists[0x55804f9bd570](%125.0, missingArg, %125.1, missingArg, missingArg, false) { 0 2n 5n } e85.0   <lgl$->
  lgl$#-          %125.3 = IsType                   %125.2 isA lgl$-
  void                    Branch                   %125.3 -> BB131 (if true) | BB132 (if false)
BB126   <- [32]
  void                    Nop                !     
  val?^ | miss    %126.1 = %32.0
  dr              %126.2 = CallTarget@0x55804e1eb880[Call#11]
  goto BB30
BB129   <- [127]
  prom-           %129.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p12 (!refl), e85.0
  prom-           %129.1 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p13, e85.0
  prom-           %129.2 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p14, e85.0
  val?            %129.3 = StaticCall         !     checkCall[0x55804d207180](%129.0, %129.1, %129.2) e85.0   <lgl$->
  lgl$#-          %129.4 = IsType                   %129.3 isA lgl$-
  void                    Branch                   %129.4 -> BB137 (if true) | BB138 (if false)
BB130   <- [127]
  fs              %130.0 = FrameState         R     0x55804e9fc4a0+812: [], env=e85.0
  void                    Deopt              !v    %130.0, CallTarget@0x55804e1eb880[Call#21], %127.4   !
BB30   <- [126, 128]
  val?^ | miss    %30.0 = Phi                      %126.1:BB126, %128.1:BB128
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %126.2:BB126, %128.2:BB128
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55804e9fc4a0+339: [%29.1], env=e85.0
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB131   <- [125]
  lgl$-           %131.0 = CastType           d     dn %125.2
  lgl$#-          %131.1 = CheckTrueFalse     e     %131.0
  void                    Branch                   %131.1 -> BB39 (if true) | BB35 (if false)
BB132   <- [125]
  void                    Nop                !     
  val?            %132.1 = %125.2
  dr              %132.2 = Typecheck@0x55804e1eb880[Type#21]
  goto BB33
BB137   <- [129]
  void                    Nop                !     
  val?            %137.1 = %129.3
  goto BB37
BB138   <- [129]
  fs              %138.0 = FrameState         R     0x55804e9fc4a0+854: [%129.3], env=e85.0
  void                    Deopt              !v    %138.0, Typecheck@0x55804e1eb880[Type#46], %129.3   !
BB39   <- [131]
  val?^ | miss    %39.0 = LdVar              eR    get, e85.0
  lgl$#-          %39.1 = Identical                %39.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %39.1 -> BB133 (if true) | BB134 (if false)
BB35   <- [131]
  void                    Visible            v     
  goto BB36
BB33   <- [132, 134]
  val?^ | miss    %33.0 = Phi                      %132.1:BB132, %134.1:BB134
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %132.2:BB132, %134.2:BB134
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55804e9fc4a0+399: [%125.2], env=e85.0
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB37   <- [36, 137]
  val?            %37.0 = Phi                      %36.1:BB36, %137.1:BB137
  val?            %37.1 = %37.0
  val?            %37.2 = %37.1
  goto BB38
BB133   <- [39]
  prom-           %133.0 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p8, e85.0
  prom-           %133.1 = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p9, e85.0
  val?            %133.2 = StaticCall         !v    get[0x55804f89cac0](%133.0, missingArg, %133.1) { 0 2n } e85.0   <real$->
  lgl$#-          %133.3 = IsType                   %133.2 isA real$-
  void                    Branch                   %133.3 -> BB139 (if true) | BB140 (if false)
BB134   <- [39]
  void                    Nop                !     
  val?^ | miss    %134.1 = %39.0
  dr              %134.2 = CallTarget@0x55804e1eb880[Call#12]
  goto BB33
BB36   <- [35, 50]
  void                    Nop                !     
  lgl$#-          %36.1 = true
  goto BB37
BB139   <- [133]
  real$-          %139.0 = CastType           d     dn %133.2
  void                    StVar              lW    argc, %139.0, e85.0
  val?^ | miss    %139.2 = LdVar              eR    any, e85.0
  lgl$#-          %139.3 = Identical                <blt any>, %139.2   <true>
  void                    Branch                   %139.3 -> BB141 (if true) | BB142 (if false)
BB140   <- [133]
  fs              %140.0 = FrameState         R     0x55804e9fc4a0+466: [%133.2], env=e85.0
  void                    Deopt              !v    %140.0, Typecheck@0x55804e1eb880[Type#24], %133.2   !
BB141   <- [139]
  val?^ | miss    %141.0 = LdVar              eR    length, e85.0
  lgl$#-          %141.1 = Identical                <blt length>, %141.0   <true>
  void                    Branch                   %141.1 -> BB143 (if true) | BB144 (if false)
BB142   <- [139]
  void                    Nop                !     
  lgl$#-          %142.1 = %139.3
  dr              %142.2 = DeadBranchReached@0x55804e1eb880[Test#1]
  goto BB42
BB143   <- [141]
  val?^ | miss    %143.0 = LdVar              eR    e, e85.0
  val?            %143.1 = Force!<wrapped>    !v    %143.0, e85.0   <code->
  lgl$#-          %143.2 = IsType                   %143.1 isA val?-
  void                    Branch                   %143.2 -> BB145 (if true) | BB146 (if false)
BB144   <- [141]
  void                    Nop                !     
  lgl$#-          %144.1 = %141.1
  dr              %144.2 = DeadBranchReached@0x55804e1eb880[Test#2]
  goto BB42
BB42   <- [142, 144]
  val?^ | miss    %42.0 = Phi                      %142.1:BB142, %144.1:BB144
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %142.2:BB142, %144.2:BB144
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55804e9fc4a0+480: [], env=e85.0
  void                    Deopt              !v    %42.4, %42.3, %42.1   !
BB145   <- [143]
  val?-           %145.0 = CastType           d     dn %143.1   <code->
  (int|real)$-    %145.1 = CallSafeBuiltin    wed   length(%145.0)    <int$->
  lgl$#-          %145.2 = IsType                   %145.1 isA int$-
  void                    Branch                   %145.2 -> BB147 (if true) | BB148 (if false)
BB146   <- [143]
  fs              %146.0 = FrameState         R     0x55804e9fc4a0+623: [<blt any>, %139.0, <blt length>, %143.1], env=e85.0
  void                    Deopt              !v    %146.0, Typecheck@0x55804e1eb880[Type#32], %143.1   !
BB147   <- [145]
  int$-           %147.0 = CastType           d     dn %145.1
  real$-          %147.1 = Sub                d     %147.0, 1, elided   <real$->
  lgl$-           %147.2 = Eq                 d     %139.0, %147.1, elided   <lgl$->
  val?            %147.3 = CallBuiltin        !v    any(%147.2) e85.0   <lgl$->
  lgl$#-          %147.4 = IsType                   %147.3 isA lgl$-
  void                    Branch                   %147.4 -> BB149 (if true) | BB150 (if false)
BB148   <- [145]
  fs              %148.0 = FrameState         R     0x55804e9fc4a0+645: [<blt any>, %139.0, %145.1], env=e85.0
  void                    Deopt              !v    %148.0, Typecheck@0x55804e1eb880[Type#33], %145.1   !
BB149   <- [147]
  lgl$-           %149.0 = CastType           d     dn %147.3
  lgl$-           %149.1 = Not                d     %149.0, elided
  lgl$#-          %149.2 = CheckTrueFalse     e     %149.1
  void                    Branch                   %149.2 -> BB51 (if true) | BB50 (if false)
BB150   <- [147]
  fs              %150.0 = FrameState         R     0x55804e9fc4a0+686: [%147.3], env=e85.0
  void                    Deopt              !v    %150.0, Typecheck@0x55804e1eb880[Type#36], %147.3   !
BB51   <- [149]
  (cls|spec|blt)  %51.0 = LdFun              !v    signal, e85.0
  fs              %51.1 = FrameState         R     0x55804e9fc4a0+714: [%51.0], env=e85.0
  void                    Deopt              !v    %51.1, DeadCall@0x55804e1eb880[Call#16], %51.0   !
BB50   <- [149]
  void                    Visible            v     
  goto BB36
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <code->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  real$#-         %2.1  = -1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, checkPrimopCall[0x55804fb449b0]_p1, 
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  (real|prom)-    %3.0  = Phi                      %2.1:BB2, %4.1:BB4
  (real|prom)-    %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 1:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".GenericArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".ArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    primopArgCounts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    primopArgCounts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".ArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".GenericArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    noMissingAllowed, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    testMatch, <0x55804eeff8f8>, e0.0
  val?            %0.2  = Call               !v    %0.1() e0.0
  void                    Visible            v     
  void                    Return             l     nil
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    checkCall@Prom(1)0, e0.0
  void                    Return             l     %0.1

│ checkPrimopCall[0x55804fb449b0]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
