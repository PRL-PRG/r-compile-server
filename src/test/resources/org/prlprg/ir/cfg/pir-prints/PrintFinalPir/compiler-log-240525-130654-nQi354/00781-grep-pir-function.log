
┌──────────────────────────────────────────────────────────────────────────────┐
│ grep[0x55804e071dc0]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 6        │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
grep[0x55804e071dc0]
BB0
  val?^           %0.0  = LdArg                    1
  val?~+          %0.1  = LdArg                    0
  val+            %0.2  = Force<lazy>              %0.1,    <str$->
  val+            %0.3  = CallSafeBuiltin    wed   as.character(%0.2)    <str$->
  env             e0.4  = MkEnv              l     pattern=%0.3, x=%0.0, ignore.case(miss)=false, perl(miss)=false, value(miss)=false, fixed(miss)=false, useBytes(miss)=false, invert(miss)=false, parent=R_BaseNamespace, context 1
  prom-           %0.5  = MkArg                    unboundValue, grep[0x55804e071dc0]_p6, e0.4
  ct              %0.6  = PushContext        lCL   %0.5, is.factor(x), function(x) <(rir::DispatchTable*)0x55804e0cdd|..., e0.4
  val?^           %0.7  = CastType                 up %0.5
  env             e0.8  = MkEnv              l     x=%0.7, parent=R_BaseNamespace, context 1
  prom-           %0.9  = MkArg                    unboundValue, grep[0x55804e071dc0]_p7, e0.8
  ct              %0.10 = PushContext        lCL   %0.9, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.8
  val?^           %0.11 = CastType                 up %0.9
  env             e0.12 = MkEnv              l     x=%0.11, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %0.13 = Force!<lazy>       !vr   %0.11,    <val?>
  val?            %0.14 = CallBuiltin        !v    inherits(%0.13, "factor", false) e0.12
  val?            %0.15 = PopContext         C     %0.14, %0.10   <lgl$->
  lgl$#-          %0.16 = IsType                   %0.15 isA lgl$-
  void                    Branch                   %0.16 -> BB27 (if true) | BB28 (if false)
BB27   <- [0]
  lgl$-           %27.0 = CastType           d     dn %0.15
  val?            %27.1 = PopContext         C     %27.0, %0.6   <lgl$->
  lgl$#-          %27.2 = IsType                   %27.1 isA lgl$-
  void                    Branch                   %27.2 -> BB29 (if true) | BB30 (if false)
BB28   <- [0]
  fs              %28.0 = FrameState         R     0x55804e0bd5b0+137: [], env=e0.4
  fs              %28.1 = FrameState         R     0x55804e24e050+37: [%0.15], env=e0.8, next=%28.0
  void                    Deopt              !v    %28.1, Typecheck@0x55804d2fed88[Type#1], %0.15   !
BB29   <- [27]
  lgl$-           %29.0 = CastType           d     dn %27.1
  lgl$-           %29.1 = AsLogical                %29.0
  lgl$#-          %29.2 = Identical                %29.1, false
  lgl$-           %29.3 = AsLogical                %29.1
  lgl$#-          %29.4 = Identical                %29.3, false
  void                    Branch                   %29.2 -> BB8 (if true) | BB5 (if false)
BB30   <- [27]
  fs              %30.0 = FrameState         R     0x55804e0bd5b0+137: [%27.1], env=e0.4
  void                    Deopt              !v    %30.0, Typecheck@0x55804e11a880[Type#4], %27.1   !
BB8   <- [29]
  void                    Branch                   %29.4 -> BB25 (if true) | BB9 (if false)
BB5   <- [29]
  val?^ | miss    %5.0  = LdVar              eR    length, e0.4
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <@?>
  void                    Branch                   %5.1 -> BB7 (if true) | BB6 (if false)
BB25   <- [8]
  void                    Nop                !     
  lgl$-           %25.1 = %29.3
  goto BB16
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    is.na, e0.4
  lgl$#-          %9.1  = Identical                <blt is.na>, %9.0   <@?>
  void                    Branch                   %9.1 -> BB11 (if true) | BB10 (if false)
BB7   <- [5]
  (cls|spec|blt)  %7.0  = LdFun              !v    levels, e0.4
  fs              %7.1  = FrameState         R     0x55804e0bd5b0+214: [%29.1, <blt length>, %7.0], env=e0.4
  void                    Deopt              !v    %7.1, DeadCall@0x55804e11a880[Call#4], %7.0   !
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    length, e0.4
  fs              %6.1  = FrameState         R     0x55804e0bd5b0+177: [%29.1, %6.0], env=e0.4
  void                    Deopt              !v    %6.1, DeadCall@0x55804e11a880[Call#2], %6.0   !
BB16   <- [25, 35]
  lgl$-           %16.0 = Phi                      %35.5:BB35, %25.1:BB25
  lgl$-           %16.1 = %16.0
  lgl$#-          %16.2 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.2 -> BB22 (if true) | BB19 (if false)
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    pattern, e0.4
  val?            %11.1 = Force!             !v    %11.0, e0.4   <val?_>
  lgl$#-          %11.2 = IsType                   %11.1 isA val?+
  void                    Branch                   %11.2 -> BB33 (if true) | BB34 (if false)
BB10   <- [9]
  (cls|spec|blt)  %10.0 = LdFun              !v    is.na, e0.4
  fs              %10.1 = FrameState         R     0x55804e0bd5b0+418: [%29.3, %10.0], env=e0.4
  void                    Deopt              !v    %10.1, DeadCall@0x55804e11a880[Call#6], %10.0   !
BB22   <- [16]
  val?^ | miss    %22.0 = LdVar              eR    is.character, e0.4
  lgl$#-          %22.1 = Identical                <blt is.character>, %22.0   <@?>
  void                    Branch                   %22.1 -> BB24 (if true) | BB23 (if false)
BB19   <- [16]
  val?^ | miss    %19.0 = LdVar              eR    is.character, e0.4
  lgl$#-          %19.1 = Identical                <blt is.character>, %19.0   <true>
  void                    Branch                   %19.1 -> BB31 (if true) | BB32 (if false)
BB33   <- [11]
  val?+           %33.0 = CastType           d     dn %11.1   <val?_>
  val?            %33.1 = Extract1_1D        wed   %33.0, 1L, elided   <val?_>
  lgl$#-          %33.2 = IsType                   %33.1 isA val?+
  void                    Branch                   %33.2 -> BB35 (if true) | BB36 (if false)
BB34   <- [11]
  fs              %34.0 = FrameState         R     0x55804e0bd5b0+459: [%29.3, <blt is.na>, %11.1], env=e0.4
  void                    Deopt              !v    %34.0, Typecheck@0x55804e11a880[Type#16], %11.1   !
BB24   <- [22]
  (cls|spec|blt)  %24.0 = LdFun              !v    suppressWarnings, e0.4
  fs              %24.1 = FrameState         R     0x55804e0bd5b0+901: [<blt is.character>, %24.0], env=e0.4
  void                    Deopt              !v    %24.1, DeadCall@0x55804e11a880[Call#14], %24.0   !
BB23   <- [22]
  (cls|spec|blt)  %23.0 = LdFun              !v    is.character, e0.4
  fs              %23.1 = FrameState         R     0x55804e0bd5b0+864: [%23.0], env=e0.4
  void                    Deopt              !v    %23.1, DeadCall@0x55804e11a880[Call#11], %23.0   !
BB31   <- [19]
  val?^ | miss    %31.0 = LdVar              eR    x, e0.4
  val?            %31.1 = Force!<wrapped>    !v    %31.0, e0.4   <str->
  lgl$#-          %31.2 = CallSafeBuiltin    wed   is.character(%31.1)    <lgl$->
  void                    Branch                   %31.2 -> BB21 (if true) | BB20 (if false)
BB32   <- [19]
  fs              %32.0 = FrameState         R     0x55804e0bd5b0+533: [%16.1], env=e0.4
  void                    Deopt              !v    %32.0, DeadBranchReached@0x55804e11a880[Test#6], %19.1   !
BB35   <- [33]
  val?+           %35.0 = CastType           d     dn %33.1   <val?_>
  lgl+            %35.1 = CallSafeBuiltin    wed   is.na(%35.0)    <val?_>
  lgl             %35.2 = Not                wed   %35.1, elided
  lgl$-           %35.3 = AsLogical          e     %35.2
  lgl$-           %35.4 = LAnd                     %29.3, %35.3
  lgl$-           %35.5 = %35.4
  goto BB16
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x55804e0bd5b0+502: [%29.3, <blt is.na>, %33.1], env=e0.4
  void                    Deopt              !v    %36.0, Typecheck@0x55804e11a880[Type#17], %33.1   !
BB21   <- [31]
  val?^ | miss    %21.0 = LdVar              eR    pattern, e0.4
  val?            %21.1 = Force!<value>      !v    %21.0, e0.4   <str$->
  val?^ | miss    %21.2 = LdVar              eR    x, e0.4
  val?            %21.3 = Force!<wrapped>    !v    %21.2, e0.4   <str->
  val?^ | miss    %21.4 = LdVar              eR    ignore.case, e0.4
  val?            %21.5 = Force!<lazy>       !v    %21.4, e0.4   <lgl$->
  val?^ | miss    %21.6 = LdVar              eR    value, e0.4
  val?            %21.7 = Force!<lazy>       !v    %21.6, e0.4   <lgl$->
  val?^ | miss    %21.8 = LdVar              eR    perl, e0.4
  val?            %21.9 = Force!<lazy>       !v    %21.8, e0.4   <lgl$->
  val?^ | miss    %21.10 = LdVar              eR    fixed, e0.4
  val?            %21.11 = Force!<lazy>       !v    %21.10, e0.4   <lgl$->
  val?^ | miss    %21.12 = LdVar              eR    useBytes, e0.4
  val?            %21.13 = Force!<lazy>       !v    %21.12, e0.4   <lgl$->
  val?^ | miss    %21.14 = LdVar              eR    invert, e0.4
  val?            %21.15 = Force!<lazy>       !v    %21.14, e0.4   <lgl$->
  val?            %21.16 = CallBuiltin        !     grep(%21.1, %21.3, %21.5, %21.7, %21.9, %21.11, %21.13, %21.15) e0.4
  void                    Return             l     %21.16
BB20   <- [31]
  (cls|spec|blt)  %20.0 = LdFun              !v    structure, e0.4
  fs              %20.1 = FrameState         R     0x55804e0bd5b0+652: [%20.0], env=e0.4
  void                    Deopt              !v    %20.1, DeadCall@0x55804e11a880[Call#8], %20.0   !
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3

│ grep[0x55804e071dc0]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
