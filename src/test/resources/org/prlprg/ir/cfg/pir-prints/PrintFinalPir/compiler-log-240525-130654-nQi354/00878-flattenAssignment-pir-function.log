
┌──────────────────────────────────────────────────────────────────────────────┐
│ flattenAssignment[0x55804f094290]                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
flattenAssignment[0x55804f094290]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %0.2  = Identical                %0.1, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %0.2 -> BB60 (if true) | BB61 (if false)
BB60   <- [0]
  env             e60.0 = MkEnv              l     e=%0.0, parent=<env 0x55804e699488>, context 1
  val?            %60.1 = Force!<lazy>       !v    %0.0, e60.0   <code->
  lgl$#-          %60.2 = IsType                   %60.1 isA val?-
  void                    Branch                   %60.2 -> BB62 (if true) | BB63 (if false)
BB61   <- [0]
  env             e61.0 = (MkEnv)            l     e=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %61.1 = FrameState         R     0x55804f21ed40+0: [], env=e61.0
  void                    Deopt              !v    %61.1, CallTarget@0x55804f05b028[Call#0], %0.1
BB62   <- [60]
  val?-           %62.0 = CastType           d     dn %60.1   <code->
  str$-           %62.1 = CallSafeBuiltin    wed   typeof(%62.0)    <str$->
  lgl$-           %62.2 = Eq                 d     %62.1, "language", elided   <lgl$->
  lgl$#-          %62.3 = CheckTrueFalse     e     %62.2
  void                    Branch                   %62.3 -> BB11 (if true) | BB7 (if false)
BB63   <- [60]
  prom-           %63.0 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p0, e60.0
  val?^           %63.1 = CastType                 up %63.0
  fs              %63.2 = FrameState         R     0x55804f21ed40+32: [], env=e60.0
  env             e63.3 = (MkEnv)            l     x=%63.1, parent=R_BaseNamespace, context 0
  fs              %63.4 = FrameState         R     0x55804e7773a0+9: [], env=e63.3, next=%63.2
  fs              %63.5 = FrameState         R     0x55804e4673d0+5(pr): [%60.1], env=e60.0, next=%63.4
  void                    Deopt              !v    %63.5, Typecheck@0x55804f05b028[Type#0], %60.1   !
BB11   <- [62]
  val?^ | miss    %11.0 = LdVar              eR    list, e60.0
  lgl$#-          %11.1 = Identical                <blt list>, %11.0   <true>
  void                    Branch                   %11.1 -> BB64 (if true) | BB65 (if false)
BB7   <- [62]
  val?^ | miss    %7.0  = LdVar              eR    list, e60.0
  lgl$#-          %7.1  = Identical                <blt list>, %7.0   <@?>
  void                    Branch                   %7.1 -> BB9 (if true) | BB8 (if false)
BB64   <- [11]
  val?^ | miss    %64.0 = LdVar              eR    evalseq, e60.0
  lgl$#-          %64.1 = Identical                %64.0, function(e) <(rir::DispatchTable*)0x55804ed18d|...
  void                    Branch                   %64.1 -> BB66 (if true) | BB67 (if false)
BB65   <- [11]
  void                    Nop                !     
  lgl$#-          %65.1 = %11.1
  dr              %65.2 = DeadBranchReached@0x55804f05b028[Test#1]
  goto BB5
BB9   <- [7]
  val+            %9.0  = CallSafeBuiltin    vwed  list(nil, nil)    <val?_>
  val+            %9.1  = %9.0
  goto BB10
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    list, e60.0
  fs              %8.1  = FrameState         R     0x55804f21ed40+83: [%8.0], env=e60.0
  void                    Deopt              !v    %8.1, DeadCall@0x55804f05b028[Call#1], %8.0   !
BB66   <- [64]
  prom-           %66.0 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p1, e60.0
  val?^           %66.1 = CastType                 up %66.0
  val?^ | miss    %66.2 = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %66.3 = Identical                %66.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %66.3 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  void                    Nop                !     
  val?^ | miss    %67.1 = %64.0
  dr              %67.2 = CallTarget@0x55804f05b028[Call#5]
  goto BB5
BB5   <- [65, 67, 69]
  val?^ | miss    %5.0  = Phi                      %65.1:BB65, %67.1:BB67, %69.1:BB69
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %65.2:BB65, %67.2:BB67, %69.2:BB69
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55804f21ed40+32: [], env=e60.0
  prom-           %5.5  = MkArg                    %62.0, flattenAssignment[0x55804f094290]_p0 (!refl), e60.0
  val?~           %5.6  = CastType                 up %5.5
  env             e5.7  = (MkEnv)            l     x=%5.6, parent=R_BaseNamespace, context 0
  fs              %5.8  = FrameState         R     0x55804e7773a0+27: [%62.1], env=e5.7, next=%5.4
  void                    Deopt              !v    %5.8, %5.3, %5.1   !
BB10   <- [9, 53]
  val+            %10.0 = Phi                      %9.1:BB9, %53.4:BB53
  val+            %10.1 = %10.0
  void                    Return             l     %10.1
BB68   <- [66]
  env             e68.0 = MkEnv              l     e=%66.1, parent=<env 0x55804e699488>, context 0
  prom-           %68.1 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p3, e68.0
  val?^           %68.2 = CastType                 up %68.1
  val?^ | miss    %68.3 = LdVar              eR    e, e60.0
  env             e68.4 = (MkEnv)            l     x=%68.2, parent=R_BaseNamespace, context -1
  val?            %68.5 = Force!<wrapped>    !vL   %68.3, e68.4   <code->
  lgl$#-          %68.6 = IsType                   %68.5 isA val?-
  void                    Branch                   %68.6 -> BB70 (if true) | BB71 (if false)
BB69   <- [66]
  void                    Nop                !     
  val?^ | miss    %69.1 = %66.2
  dr              %69.2 = CallTarget@0x55804f05ae18[Call#0]
  goto BB5
BB70   <- [68]
  val?-           %70.0 = CastType           d     dn %68.5   <code->
  val?            %70.1 = Extract2_1D        wed   %70.0, 2, elided   <sym->
  prom-           %70.2 = MkArg                    %70.1, flattenAssignment[0x55804f094290]_p1 (!refl), e60.0
  val?~           %70.3 = CastType                 up %70.2
  void                    StArg              lW    e, %70.3, e68.0
  lgl$#-          %70.5 = IsEnvStub          R     , e68.4
  void                    Branch                   %70.5 -> BB72 (if true) | BB73 (if false)
BB71   <- [68]
  fs              %71.0 = FrameState         R     0x55804f21ed40+256: [<blt list>], env=e60.0
  fs              %71.1 = FrameState         R     0x55804fb1b0e0+32: [], env=e68.0, next=%71.0
  fs              %71.2 = FrameState         R     0x55804e7773a0+9: [], env=e68.4, next=%71.1
  fs              %71.3 = FrameState         R     0x55804e9b7410+5(pr): [], env=e68.0, next=%71.2
  fs              %71.4 = FrameState         R     0x55804f274a60+5(pr): [%68.5], env=e60.0, next=%71.3
  void                    Deopt              !v    %71.4, Typecheck@0x55804f05b028[Type#9], %68.5   !
BB72   <- [70]
  prom-           %72.0 = MkArg                    %70.1, flattenAssignment[0x55804f094290]_p3 (!refl), e68.0
  val?~           %72.1 = CastType                 up %72.0
  void                    StArg              lWd   x, %72.1, e68.4
  str$-           %72.3 = CallSafeBuiltin    wed   typeof(%70.1)    <str$->
  lgl$-           %72.4 = Eq                 d     %72.3, "language", elided   <lgl$->
  lgl$#-          %72.5 = CheckTrueFalse     e     %72.4
  void                    Branch                   %72.5 -> BB58 (if true) | BB18 (if false)
BB73   <- [70]
  fs              %73.0 = FrameState         R     0x55804f21ed40+256: [<blt list>], env=e60.0
  fs              %73.1 = FrameState         R     0x55804fb1b0e0+32: [], env=e68.0, next=%73.0
  fs              %73.2 = FrameState         R     0x55804e7773a0+9: [], env=e68.4, next=%73.1
  fs              %73.3 = FrameState         R     0x55804e9b7410+5(pr): [%70.1], env=e68.0, next=%73.2
  void                    Deopt              !v    %73.3, EnvStubMaterialized@0x55804d175bf8[Call#unknown], e68.4   !
BB58   <- [72]
  fs              %58.0 = FrameState         R     0x55804f21ed40+256: [<blt list>], env=e60.0
  (cls|spec|blt)  %58.1 = LdFun              !v    evalseq, <env 0x55804e699488>
  fs              %58.2 = FrameState         R     0x55804fb1b0e0+161: [%58.1], env=e68.0, next=%58.0
  void                    Deopt              !v    %58.2, DeadCall@0x55804f05ae18[Call#2], %58.1   !
BB18   <- [72]
  val?^ | miss    %18.0 = LdVar              eR    list, <env 0x55804e699488>
  lgl$#-          %18.1 = Identical                <blt list>, %18.0   <true>
  void                    Branch                   %18.1 -> BB74 (if true) | BB75 (if false)
BB74   <- [18]
  val+            %74.0 = CallSafeBuiltin    wed   list(%70.1)    <vec$->
  val?^ | miss    %74.1 = LdVar              eR    apdef, e60.0
  lgl$#-          %74.2 = Identical                %74.1, function(e) <(rir::DispatchTable*)0x5580500fbf|...
  void                    Branch                   %74.2 -> BB76 (if true) | BB77 (if false)
BB75   <- [18]
  fs              %75.0 = FrameState         R     0x55804f21ed40+256: [<blt list>], env=e60.0
  fs              %75.1 = FrameState         R     0x55804fb1b0e0+32: [], env=e68.0, next=%75.0
  fs              %75.2 = FrameState         R     0x55804e7773a0+27: [%72.3], env=e68.4, next=%75.1
  void                    Deopt              !v    %75.2, DeadBranchReached@0x55804f05ae18[Test#0], %18.1   !
BB76   <- [74]
  prom-           %76.0 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p2, e60.0
  ct              %76.1 = PushContext        lCL   %76.0, apdef(e), function(e) <(rir::DispatchTable*)0x5580500fbf|..., e60.0
  val?^           %76.2 = CastType                 up %76.0
  val?^ | miss    %76.3 = LdVar              eR    as.name, <env 0x55804e699488>
  lgl$#-          %76.4 = Identical                %76.3, function(x) <(rir::DispatchTable*)0x55804e19a4|...
  void                    Branch                   %76.4 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  void                    Nop                !     
  val?^ | miss    %77.1 = %74.1
  dr              %77.2 = CallTarget@0x55804f05b028[Call#6]
  goto BB19
BB78   <- [76]
  val             %78.0 = CallSafeBuiltin    wed   as.vector("*tmp*", "symbol")    <sym->
  val             %78.1 = CallSafeBuiltin    wed   as.vector("*tmpv*", "symbol")    <sym->
  val?^ | miss    %78.2 = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %78.3 = Identical                %78.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %78.3 -> BB80 (if true) | BB81 (if false)
BB79   <- [76]
  void                    DropContext        C     
  val?^ | miss    %79.1 = %76.3
  dr              %79.2 = CallTarget@0x55804f05ac08[Call#0]
  goto BB19
BB19   <- [77, 79]
  val?^ | miss    %19.0 = Phi                      %77.1:BB77, %79.1:BB79
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %77.2:BB77, %79.2:BB79
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55804f21ed40+256: [<blt list>], env=e60.0
  fs              %19.5 = FrameState         R     0x55804fb1b0e0+146: [%74.0], env=e68.0, next=%19.4
  void                    Deopt              !v    %19.5, %19.3, %19.1   !
BB80   <- [78]
  env             e80.0 = MkEnv              l     e=%76.2, v=nil, tmp=%78.0, tmpv=%78.1, parent=<env 0x55804e699488>, context 1
  val?            %80.1 = Force!<lazy>       !vL   %76.2, e80.0   <code->
  lgl$#-          %80.2 = IsType                   %80.1 isA val?-
  void                    Branch                   %80.2 -> BB82 (if true) | BB83 (if false)
BB81   <- [78]
  fs              %81.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  env             e81.1 = (MkEnv)            l     e=%76.2, v=nil, tmp=%78.0, parent=<env 0x55804e699488>, context 1
  fs              %81.2 = FrameState         R     0x55804ecce970+93: [], env=e81.1, next=%81.0
  env             e81.3 = (MkEnv)            l     x="*tmpv*", parent=R_BaseNamespace, context 0
  fs              %81.4 = FrameState         R     0x55804e19a3a0+33: [%78.1], env=e81.3, next=%81.2
  void                    Deopt              !v    %81.4, CallTarget@0x55804f05ac08[Call#2], %78.2   !
BB82   <- [80]
  val?-           %82.0 = CastType           d     dn %80.1   <code->
  str$-           %82.1 = CallSafeBuiltin    wed   typeof(%82.0)    <str$->
  lgl$-           %82.2 = Eq                 d     %82.1, "language", elided   <lgl$->
  lgl$#-          %82.3 = CheckTrueFalse     e     %82.2   <true>
  void                    Branch                   %82.3 -> BB84 (if true) | BB85 (if false)
BB83   <- [80]
  prom-           %83.0 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p4, e80.0
  val?^           %83.1 = CastType                 up %83.0
  fs              %83.2 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %83.3 = FrameState         R     0x55804ecce970+139: [], env=e80.0, next=%83.2
  env             e83.4 = (MkEnv)            l     x=%83.1, parent=R_BaseNamespace, context 0
  fs              %83.5 = FrameState         R     0x55804e7773a0+9: [], env=e83.4, next=%83.3
  fs              %83.6 = FrameState         R     0x55804f045ff0+5(pr): [%80.1], env=e80.0, next=%83.5
  void                    Deopt              !v    %83.6, Typecheck@0x55804f05ac08[Type#2], %80.1   !
BB84   <- [82]
  void                    StVar              lW    ef, %82.0, e80.0
  val?^ | miss    %84.1 = LdVar              eR    makeAssgnFcn, <env 0x55804e699488>
  lgl$#-          %84.2 = Identical                %84.1, function(fun) <(rir::DispatchTable*)0x55804fb5|...
  void                    Branch                   %84.2 -> BB86 (if true) | BB87 (if false)
BB85   <- [82]
  fs              %85.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %85.1 = FrameState         R     0x55804ecce970+139: [], env=e80.0, next=%85.0
  prom-           %85.2 = MkArg                    %82.0, flattenAssignment[0x55804f094290]_p5 (!refl), e80.0
  val?~           %85.3 = CastType                 up %85.2
  env             e85.4 = (MkEnv)            l     x=%85.3, parent=R_BaseNamespace, context 0
  fs              %85.5 = FrameState         R     0x55804e7773a0+27: [%82.1], env=e85.4, next=%85.1
  void                    Deopt              !v    %85.5, DeadBranchReached@0x55804f05ac08[Test#0], %82.3   !
BB86   <- [84]
  prom-           %86.0 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p6, e80.0
  ct              %86.1 = PushContext        lCL   %86.0, makeAssgnFcn([[(e, 1)), function(fun) <(rir::DispatchTable*)0x55804fb5|..., e80.0
  val?^           %86.2 = CastType                 up %86.0
  val?^ | miss    %86.3 = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %86.4 = Identical                %86.3, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %86.4 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  fs              %87.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %87.1 = FrameState         R     0x55804ecce970+190: [], env=e80.0, next=%87.0
  void                    Deopt              !v    %87.1, CallTarget@0x55804f05ac08[Call#3], %84.1   !
BB88   <- [86]
  env             e88.0 = MkEnv              l     fun=%86.2, parent=<env 0x55804e699488>, context 1
  val?            %88.1 = Force!<lazy>       !vL   %86.2, e88.0   <sym->
  str$-           %88.2 = CallSafeBuiltin    wed   typeof(%88.1)    <str$->
  lgl$-           %88.3 = Eq                 d     %88.2, "symbol", elided   <lgl$->
  lgl$#-          %88.4 = CheckTrueFalse     e     %88.3
  void                    Branch                   %88.4 -> BB34 (if true) | BB33 (if false)
BB89   <- [86]
  fs              %89.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %89.1 = FrameState         R     0x55804ecce970+222: [], env=e80.0, next=%89.0
  env             e89.2 = (MkEnv)            l     fun=%86.2, parent=<env 0x55804e699488>, context 1
  fs              %89.3 = FrameState         R     0x55804f0b0750+0: [], env=e89.2, next=%89.1
  void                    Deopt              !v    %89.3, CallTarget@0x55804f05a688[Call#0], %86.3   !
BB34   <- [88]
  val?^ | miss    %34.0 = LdVar              eR    as.name, <env 0x55804e699488>
  lgl$#-          %34.1 = Identical                %34.0, function(x) <(rir::DispatchTable*)0x55804e19a4|...
  void                    Branch                   %34.1 -> BB90 (if true) | BB91 (if false)
BB33   <- [88]
  fs              %33.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %33.1 = FrameState         R     0x55804ecce970+222: [], env=e80.0, next=%33.0
  (cls|spec|blt)  %33.2 = LdFun              !v    getRversion, <env 0x55804e699488>
  fs              %33.3 = FrameState         R     0x55804f0b0750+60: [%33.2], env=e88.0, next=%33.1
  void                    Deopt              !v    %33.3, DeadCall@0x55804f05a688[Call#1], %33.2   !
BB90   <- [34]
  val?^ | miss    %90.0 = LdVar              eR    paste0, <env 0x55804e699488>
  lgl$#-          %90.1 = Identical                %90.0, function(..., collapse=NULL, recycle0=FALSE) <|...
  void                    Branch                   %90.1 -> BB92 (if true) | BB93 (if false)
BB91   <- [34]
  void                    Nop                !     
  val?^ | miss    %91.1 = %34.0
  dr              %91.2 = CallTarget@0x55804f05a688[Call#15]
  goto BB31
BB92   <- [90]
  prom-           %92.0 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p9, e88.0
  dots-           %92.1 = DotsList           l     %92.0, "<-"
  ct              %92.2 = PushContext        lCL   %92.1, paste0(as.character(fun), "<-"), function(..., collapse=NULL, recycle0=FALSE) <|..., e88.0
  val?^ | miss    %92.3 = CastType                 up %92.0
  env             e92.4 = MkEnv              l     ...=%92.1, collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 1
  val?            %92.5 = Force!             !vL   %92.3, e92.4
  val+            %92.6 = CallSafeBuiltin    wed   list(%92.5, "<-")    <vec->
  val?            %92.7 = CallBuiltin        !v    paste0(%92.6, nil, false) e92.4
  val?            %92.8 = PopContext         C     %92.7, %92.2   <str$->
  lgl$#-          %92.9 = IsType                   %92.8 isA val?-
  void                    Branch                   %92.9 -> BB94 (if true) | BB95 (if false)
BB93   <- [90]
  void                    Nop                !     
  val?^ | miss    %93.1 = %90.0
  dr              %93.2 = CallTarget@0x55804f05a688[Call#16]
  goto BB31
BB31   <- [91, 93]
  val?^ | miss    %31.0 = Phi                      %91.1:BB91, %93.1:BB93
  val?^ | miss    %31.1 = %31.0
  dr              %31.2 = Phi                      %91.2:BB91, %93.2:BB93
  dr              %31.3 = %31.2
  fs              %31.4 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %31.5 = FrameState         R     0x55804ecce970+222: [], env=e80.0, next=%31.4
  fs              %31.6 = FrameState         R     0x55804f0b0750+32: [], env=e88.0, next=%31.5
  prom-           %31.7 = MkArg                    %88.1, flattenAssignment[0x55804f094290]_p8 (!refl), e88.0
  val?~           %31.8 = CastType                 up %31.7
  env             e31.9 = (MkEnv)            l     x=%31.8, parent=R_BaseNamespace, context 0
  fs              %31.10 = FrameState         R     0x55804e7773a0+27: [%88.2], env=e31.9, next=%31.6
  void                    Deopt              !v    %31.10, %31.3, %31.1   !
BB94   <- [92]
  val?-           %94.0 = CastType           d     dn %92.8   <str$->
  val             %94.1 = CallSafeBuiltin    wed   as.vector(%94.0, "symbol")    <sym->
  val?            %94.2 = PopContext         C     %94.1, %86.1   <sym->
  lgl$#-          %94.3 = IsType                   %94.2 isA val?-
  val?^ | miss    %94.4 = LdVar              eR    ef !upd, e80.0
  lgl$#-          %94.5 = IsType                   %94.4 isA val?~- | miss
  void                    Branch                   %94.5 -> BB96 (if true) | BB97 (if false)
BB95   <- [92]
  fs              %95.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %95.1 = FrameState         R     0x55804ecce970+222: [], env=e80.0, next=%95.0
  fs              %95.2 = FrameState         R     0x55804f0b0750+623: [], env=e88.0, next=%95.1
  prom-           %95.3 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p11, e88.0
  val?^           %95.4 = CastType                 up %95.3
  env             e95.5 = (MkEnv)            l     x=%95.4, parent=R_BaseNamespace, context 0
  fs              %95.6 = FrameState         R     0x55804e19a3a0+9: [], env=e95.5, next=%95.2
  fs              %95.7 = FrameState         R     0x55804ec75f30+37(pr): [%92.8], env=e88.0, next=%95.6
  void                    Deopt              !v    %95.7, Typecheck@0x55804d1769b8[Type#0], %92.8   !
BB96   <- [94]
  val?~- | miss   %96.0 = CastType           d     dn %94.4
  val?-           %96.1 = Force!<value>            %96.0,    <code->
  void                    Branch                   %94.3 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  void                    Nop                !     
  val?^ | miss    %97.1 = %94.4
  dr              %97.2 = Typecheck@0x55804f05ac08[Type#9]
  goto BB37
BB98   <- [96]
  val?-           %98.0 = CastType           d     dn %94.2   <sym->
  val?-           %98.1 = Subassign2_1D      wed   %98.0, %96.1, 1, elided   <code->
  void                    StVar              lW    ef, %98.1, e80.0
  val?^ | miss    %98.3 = LdVar              eR    typeof, e80.0
  lgl$#-          %98.4 = Identical                %98.3, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %98.4 -> BB100 (if true) | BB101 (if false)
BB99   <- [96]
  void                    Nop                !     
  val?            %99.1 = %94.2
  dr              %99.2 = Typecheck@0x55804f05ac08[Type#8]
  goto BB37
BB37   <- [97, 99]
  val?^ | miss    %37.0 = Phi                      %97.1:BB97, %99.1:BB99
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %97.2:BB97, %99.2:BB99
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %37.5 = FrameState         R     0x55804ecce970+222: [%94.2], env=e80.0, next=%37.4
  void                    Deopt              !v    %37.5, %37.3, %37.1   !
BB100   <- [98]
  val-            %100.0 = ChkMissing         e     %98.1
  val?            %100.1 = Extract2_1D        wed   %98.1, 2, elided   <sym->
  str$-           %100.2 = CallSafeBuiltin    wed   typeof(%100.1)    <str$->
  lgl$-           %100.3 = Eq                 d     %100.2, "language", elided   <lgl$->
  lgl$#-          %100.4 = CheckTrueFalse     e     %100.3
  void                    Branch                   %100.4 -> BB55 (if true) | BB41 (if false)
BB101   <- [98]
  fs              %101.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %101.1 = FrameState         R     0x55804ecce970+257: [], env=e80.0, next=%101.0
  void                    Deopt              !v    %101.1, CallTarget@0x55804f05ac08[Call#4], %98.3   !
BB55   <- [100]
  val?^ | miss    %55.0 = LdVar              eR    tmp, e80.0
  val?            %55.1 = Force!             !v    %55.0, e80.0   <val?_>
  val?^ | miss    %55.2 = LdVar              eR    ef, e80.0
  val?            %55.3 = Force!             !v    %55.2, e80.0   <val?_>
  lgl$#-          %55.4 = IsType                   %55.3 isA val?+
  lgl$#-          %55.5 = IsType                   %55.1 isA val?+
  void                    Branch                   %55.5 -> BB104 (if true) | BB105 (if false)
BB41   <- [100]
  void                    Nop                !     
  goto BB42
BB104   <- [55]
  val?+           %104.0 = CastType           d     dn %55.1   <val?_>
  void                    Branch                   %55.4 -> BB106 (if true) | BB107 (if false)
BB105   <- [55]
  void                    Nop                !     
  val?            %105.1 = %55.1
  dr              %105.2 = Typecheck@0x55804f05ac08[Type#14]
  goto BB56
BB42   <- [41, 106]
  (cls|spec|blt)  %42.0 = LdFun              !v    <-, <0x55804bed5da8>, e80.0
  prom-           %42.1 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p14, e80.0
  prom-           %42.2 = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p17, e80.0
  val?            %42.3 = Call               !v    %42.0(%42.1, %42.2) e80.0
  val?^ | miss    %42.4 = LdVar              eR    c, e80.0
  lgl$#-          %42.5 = Identical                <blt c>, %42.4   <true>
  void                    Branch                   %42.5 -> BB102 (if true) | BB103 (if false)
BB106   <- [104]
  val?+           %106.0 = CastType           d     dn %55.3   <val?_>
  val?+           %106.1 = Subassign2_1D      wed   %104.0, %106.0, 2, elided
  void                    StVar              lW    ef, %106.1, e80.0
  goto BB42
BB107   <- [104]
  void                    Nop                !     
  val?            %107.1 = %55.3
  dr              %107.2 = Typecheck@0x55804f05ac08[Type#15]
  goto BB56
BB56   <- [105, 107]
  val?^ | miss    %56.0 = Phi                      %105.1:BB105, %107.1:BB107
  val?^ | miss    %56.1 = %56.0
  dr              %56.2 = Phi                      %105.2:BB105, %107.2:BB107
  dr              %56.3 = %56.2
  fs              %56.4 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %56.5 = FrameState         R     0x55804ecce970+340: [%55.1, %55.3], env=e80.0, next=%56.4
  void                    Deopt              !v    %56.5, %56.3, %56.1   !
BB102   <- [42]
  val?^ | miss    %102.0 = LdVar              eR    v, e80.0
  val?            %102.1 = Force!<value>      !v    %102.0, e80.0   <nil->
  val?^ | miss    %102.2 = LdVar              eR    list, e80.0
  lgl$#-          %102.3 = Identical                <blt list>, %102.2   <true>
  void                    Branch                   %102.3 -> BB108 (if true) | BB109 (if false)
BB103   <- [42]
  fs              %103.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %103.1 = FrameState         R     0x55804ecce970+398: [%42.3], env=e80.0, next=%103.0
  void                    Deopt              !v    %103.1, DeadBranchReached@0x55804f05ac08[Test#3], %42.5   !
BB108   <- [102]
  val?^ | miss    %108.0 = LdVar              eR    ef, e80.0
  lgl$#-          %108.1 = IsType                   %108.0 isA val?~- | miss
  void                    Branch                   %108.1 -> BB110 (if true) | BB111 (if false)
BB109   <- [102]
  void                    Nop                !     
  lgl$#-          %109.1 = %102.3
  dr              %109.2 = DeadBranchReached@0x55804f05ac08[Test#4]
  goto BB45
BB110   <- [108]
  val?~- | miss   %110.0 = CastType           d     dn %108.0
  val?-           %110.1 = Force!<value>            %110.0,    <code->
  val+            %110.2 = CallSafeBuiltin    wed   list(%110.1)    <vec$->
  lgl$#-          %110.3 = IsType                   %102.1 isA val?-
  void                    Branch                   %110.3 -> BB112 (if true) | BB113 (if false)
BB111   <- [108]
  void                    Nop                !     
  val?^ | miss    %111.1 = %108.0
  dr              %111.2 = Typecheck@0x55804f05ac08[Type#25]
  goto BB45
BB45   <- [109, 111]
  val?^ | miss    %45.0 = Phi                      %109.1:BB109, %111.1:BB111
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %109.2:BB109, %111.2:BB111
  dr              %45.3 = %45.2
  fs              %45.4 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %45.5 = FrameState         R     0x55804ecce970+473: [<blt c>, %102.1], env=e80.0, next=%45.4
  void                    Deopt              !v    %45.5, %45.3, %45.1   !
BB112   <- [110]
  val?-           %112.0 = CastType           d     dn %102.1   <nil->
  val+            %112.1 = CallSafeBuiltin    wed   c(%112.0, %110.2)    <vec$->
  void                    StVar              lW    v, %112.1, e80.0
  val?^ | miss    %112.3 = LdVar              eR    e, e80.0
  val?            %112.4 = Force!<wrapped>    !v    %112.3, e80.0   <code->
  lgl$#-          %112.5 = IsType                   %112.4 isA val+   <true>
  lgl$#-          %112.6 = IsType                   %112.4 isA val?-
  void                    Branch                   %112.5 -> BB114 (if true) | BB115 (if false)
BB113   <- [110]
  fs              %113.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %113.1 = FrameState         R     0x55804ecce970+569: [<blt c>, %102.1, %110.2], env=e80.0, next=%113.0
  void                    Deopt              !v    %113.1, Typecheck@0x55804f05ac08[Type#23], %102.1   !
BB114   <- [112]
  void                    Branch                   %112.6 -> BB116 (if true) | BB117 (if false)
BB115   <- [112]
  void                    Nop                !     
  lgl$#-          %115.1 = %112.5
  dr              %115.2 = DeadBranchReached@0x55804f05ac08[Test#5]
  goto BB49
BB116   <- [114]
  val?-           %116.0 = CastType           d     dn %112.4   <code->
  val?            %116.1 = Extract2_1D        wed   %116.0, 2, elided   <sym->
  void                    StVar              lW    e, %116.1, e80.0
  val?^ | miss    %116.3 = LdVar              eR    typeof, e80.0
  lgl$#-          %116.4 = Identical                %116.3, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %116.4 -> BB118 (if true) | BB119 (if false)
BB117   <- [114]
  void                    Nop                !     
  val?            %117.1 = %112.4
  dr              %117.2 = Typecheck@0x55804f05ac08[Type#28]
  goto BB49
BB49   <- [115, 117]
  val?^ | miss    %49.0 = Phi                      %115.1:BB115, %117.1:BB117
  val?^ | miss    %49.1 = %49.0
  dr              %49.2 = Phi                      %115.2:BB115, %117.2:BB117
  dr              %49.3 = %49.2
  fs              %49.4 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %49.5 = FrameState         R     0x55804ecce970+614: [%112.4], env=e80.0, next=%49.4
  void                    Deopt              !v    %49.5, %49.3, %49.1   !
BB118   <- [116]
  val             %118.0 = ChkMissing         e     %116.1
  str$-           %118.1 = CallSafeBuiltin    wed   typeof(%116.1)    <str$->
  lgl$-           %118.2 = Eq                 d     %118.1, "language", elided   <lgl$->
  lgl$#-          %118.3 = CheckTrueFalse     e     %118.2
  void                    Branch                   %118.3 -> BB54 (if true) | BB53 (if false)
BB119   <- [116]
  fs              %119.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  fs              %119.1 = FrameState         R     0x55804ecce970+672: [], env=e80.0, next=%119.0
  void                    Deopt              !v    %119.1, CallTarget@0x55804f05ac08[Call#10], %116.3   !
BB54   <- [118]
  fs              %54.0 = FrameState         R     0x55804f21ed40+293: [<blt list>, %74.0], env=e60.0
  void                    StVar              lW    ef, %116.1, e80.0
  (cls|spec|blt)  %54.2 = LdFun              !v    makeAssgnFcn, e80.0
  fs              %54.3 = FrameState         R     0x55804ecce970+755: [%54.2], env=e80.0, next=%54.0
  void                    Deopt              !v    %54.3, DeadCall@0x55804f05ac08[Call#11], %54.2   !
BB53   <- [118]
  val?^ | miss    %53.0 = LdVar              eR    v, e80.0
  val?            %53.1 = Force!<value>      !v    %53.0, e80.0   <vec$->
  val?            %53.2 = PopContext         C     %53.1, %76.1   <vec$->
  val+            %53.3 = CallSafeBuiltin    vwed  list(%74.0, %53.2)    <vec->
  val+            %53.4 = %53.3
  goto BB10
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 2, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p10, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     paste0, <0x55804c02a3c8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p12, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "<-") e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p15, e0.0
  prom-           %0.3  = MkArg                    unboundValue, flattenAssignment[0x55804f094290]_p16, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    tmpv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ flattenAssignment[0x55804f094290]                                            │
└──────────────────────────────────────────────────────────────────────────────┘
