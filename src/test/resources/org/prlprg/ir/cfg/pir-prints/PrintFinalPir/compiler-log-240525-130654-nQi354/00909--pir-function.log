
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804f38be50]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804f38be50]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     parnames=%0.2, locals=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  cls             %0.4  = MkCls                    >mkentry@246, e0.3
  (cls|spec|blt)  %0.5  = LdFun              !v    $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %0.6  = MkArg                    unboundValue, [0x55804f38be50]_p0, e0.3
  prom-           %0.7  = MkArg                    unboundValue, [0x55804f38be50]_p1, e0.3
  val?            %0.8  = Call               !v    %0.5(%0.6, %0.7) e0.3   <env->
  void                    StVar              lW    env, %0.8, e0.3
  val?^ | miss    %0.10 = LdVar              eR    locals, e0.3
  val?            %0.11 = Force!<lazy>       !v    %0.10, e0.3   <str->
  lgl$#-          %0.12 = IsType                   %0.11 isA val+   <true>
  void                    Branch                   %0.12 -> BB30 (if true) | BB31 (if false)
BB30   <- [0]
  val?^ | miss    %30.0 = LdVar              eR    %in%, e0.3
  lgl$#-          %30.1 = Identical                %30.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %30.1 -> BB32 (if true) | BB33 (if false)
BB31   <- [0]
  void                    Nop                !     
  lgl$#-          %31.1 = %0.12
  dr              %31.2 = DeadBranchReached@0x55804ec47a70[Test#0]
  goto BB29
BB32   <- [30]
  prom-           %32.0 = MkArg                    unboundValue, [0x55804f38be50]_p3, e0.3
  val?^ | miss    %32.1 = LdVar              eR    locals, e0.3
  val?            %32.2 = Force!<wrapped>    !v    %32.1, e0.3   <str->
  prom-           %32.3 = MkArg                    %32.2, [0x55804f38be50]_p2 (!refl), 
  val?            %32.4 = StaticCall         !v    %in%[0x55804f44b920](%32.3, %32.0) e0.3   <lgl->
  lgl$#-          %32.5 = IsType                   %32.4 isA lgl-
  void                    Branch                   %32.5 -> BB34 (if true) | BB35 (if false)
BB33   <- [30]
  void                    Nop                !     
  val?^ | miss    %33.1 = %30.0
  dr              %33.2 = CallTarget@0x55804ec47a70[Call#2]
  goto BB29
BB29   <- [31, 33]
  val?^ | miss    %29.0 = Phi                      %31.1:BB31, %33.1:BB33
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %31.2:BB31, %33.2:BB33
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x55804e6fe0f0+60: [%0.11], env=e0.3
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
BB34   <- [32]
  lgl-            %34.0 = CastType           d     dn %32.4
  lgl-            %34.1 = Not                wed   %34.0, elided
  lgl$#-          %34.2 = IsType                   %0.11 isA val?-
  void                    Branch                   %34.2 -> BB36 (if true) | BB37 (if false)
BB35   <- [32]
  fs              %35.0 = FrameState         R     0x55804e6fe0f0+133: [%0.11, %32.4], env=e0.3
  void                    Deopt              !v    %35.0, Typecheck@0x55804ec47a70[Type#9], %32.4   !
BB36   <- [34]
  val?-           %36.0 = CastType           d     dn %0.11   <str->
  val?            %36.1 = Extract1_1D        wed   %36.0, %34.1, elided   <str->
  void                    StVar              lW    nplocals, %36.1, e0.3
  val?^ | miss    %36.3 = LdVar              eR    env, e0.3
  lgl$#-          %36.4 = IsType                   %36.3 isA val?~- | miss
  void                    Branch                   %36.4 -> BB38 (if true) | BB39 (if false)
BB37   <- [34]
  fs              %37.0 = FrameState         R     0x55804e6fe0f0+139: [%0.11, %34.1], env=e0.3
  void                    Deopt              !v    %37.0, Typecheck@0x55804ec47a70[Type#3], %0.11   !
BB38   <- [36]
  val?~- | miss   %38.0 = CastType           d     dn %36.3
  val?-           %38.1 = Force!<value>            %38.0,    <env->
  (cls|spec|blt)  %38.2 = LdFun              !v    attr<-, <0x55804bee4e08>, e0.3
  val?^ | miss    %38.3 = LdVar              eR    env, e0.3
  lgl$#-          %38.4 = IsType                   %38.3 isA val?~- | miss
  void                    Branch                   %38.4 -> BB40 (if true) | BB41 (if false)
BB39   <- [36]
  fs              %39.0 = FrameState         R     0x55804e6fe0f0+155: [], env=e0.3
  void                    Deopt              !v    %39.0, Typecheck@0x55804ec47a70[Type#11], %36.3   !
BB40   <- [38]
  val?~- | miss   %40.0 = CastType           d     dn %38.3
  val?-           %40.1 = Force!<value>            %40.0,    <env->
  val?            %40.2 = NamedCall          !v    %38.2(%40.1, "checkUsageFrame", value=%38.1) e0.3
  void                    StVar              lW    env, %40.2, e0.3
  void                    StVar              lW    mkentry, %0.4, e0.3
  val?^ | miss    %40.5 = LdVar              eR    parnames, e0.3
  val?            %40.6 = Force!<wrapped>    !v    %40.5, e0.3   <str$->
  val?+           %40.7 = ToForSeq           e     %40.6
  int$-           %40.8 = Length                   %40.7
  int$-           %40.9 = Inc                      0L
  lgl$-           %40.10 = Lt                 d     %40.8, %40.9, elided   <false>
  lgl$#-          %40.11 = Identical                %40.10, true
  void                    Branch                   %40.11 -> BB43 (if true) | BB42 (if false)
BB41   <- [38]
  fs              %41.0 = FrameState         R     0x55804e6fe0f0+169: [%38.1], env=e0.3
  void                    Deopt              !v    %41.0, Typecheck@0x55804ec47a70[Type#12], %38.3   !
BB43   <- [40]
  fs              %43.0 = FrameState         R     0x55804e6fe0f0+280: [%40.6], env=e0.3
  void                    Deopt              !v    %43.0, DeadBranchReached@0x55804ec47a70[Test#1], %40.11   !
BB42   <- [40]
  val?            %42.0 = Extract2_1D        wed   %40.7, %40.9, elided
  void                    StVar              lW    v, %42.0, e0.3
  val?^ | miss    %42.2 = LdVar              eR    assign, e0.3
  lgl$#-          %42.3 = Identical                %42.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %42.3 -> BB44 (if true) | BB45 (if false)
BB44   <- [42]
  prom-           %44.0 = MkArg                    unboundValue, [0x55804f38be50]_p5 (!refl), e0.3
  prom-           %44.1 = MkArg                    unboundValue, [0x55804f38be50]_p6, e0.3
  prom-           %44.2 = MkArg                    unboundValue, [0x55804f38be50]_p7, e0.3
  val?            %44.3 = StaticCall         !v    assign[0x55804f38bf80](%44.0, %44.1, missingArg, %44.2) { 0 1 3n } e0.3
  int$-           %44.4 = %40.9
  goto BB15
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x55804e6fe0f0+325: [%40.7, %40.8, %40.9], env=e0.3
  void                    Deopt              !v    %45.0, CallTarget@0x55804ec47a70[Call#4], %42.2   !
BB15   <- [44, 50]
  int$-           %15.0 = Phi                      %44.4:BB44, %50.4:BB50
  int$-           %15.1 = %15.0
  int$-           %15.2 = Inc                      %15.1
  lgl$-           %15.3 = Lt                 d     %40.8, %15.2, elided
  lgl$#-          %15.4 = Identical                %15.3, true
  void                    Branch                   %15.4 -> BB21 (if true) | BB18 (if false)
BB21   <- [15]
  val?^ | miss    %21.0 = LdVar              eR    nplocals, e0.3
  lgl$#-          %21.1 = IsType                   %21.0 isA val?~- | miss
  void                    Branch                   %21.1 -> BB46 (if true) | BB47 (if false)
BB18   <- [15]
  val?            %18.0 = Extract2_1D        wed   %40.7, %15.2, elided
  void                    StVar              lW    v, %18.0, e0.3
  val?^ | miss    %18.2 = LdVar              eR    assign, e0.3
  lgl$#-          %18.3 = Identical                %18.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %18.3 -> BB50 (if true) | BB51 (if false)
BB46   <- [21]
  val?~- | miss   %46.0 = CastType           d     dn %21.0
  val?-           %46.1 = Force!<value>            %46.0,    <str->
  int$-           %46.2 = Length                   %46.1
  lgl$-           %46.3 = Lt                 d     %46.2, %40.9, elided
  lgl$#-          %46.4 = Identical                %46.3, true
  void                    Branch                   %46.4 -> BB28 (if true) | BB22 (if false)
BB47   <- [21]
  fs              %47.0 = FrameState         R     0x55804e6fe0f0+380: [%40.7, %40.8, %15.1], env=e0.3
  void                    Deopt              !v    %47.0, Typecheck@0x55804ec47a70[Type#20], %21.0   !
BB50   <- [18]
  prom-           %50.0 = MkArg                    unboundValue, [0x55804f38be50]_p8 (!refl), e0.3
  prom-           %50.1 = MkArg                    unboundValue, [0x55804f38be50]_p9, e0.3
  prom-           %50.2 = MkArg                    unboundValue, [0x55804f38be50]_p10, e0.3
  val?            %50.3 = StaticCall         !v    assign[0x55804f38bf80](%50.0, %50.1, missingArg, %50.2) { 0 1 3n } e0.3
  int$-           %50.4 = %15.2
  goto BB15
BB51   <- [18]
  fs              %51.0 = FrameState         R     0x55804e6fe0f0+409: [%40.7, %40.8, %15.2], env=e0.3
  void                    Deopt              !v    %51.0, CallTarget@0x55804ec47a70[Call#6], %18.2   !
BB28   <- [46]
  void                    Nop                !     
  goto BB27
BB22   <- [46]
  val?            %22.0 = Extract2_1D        wed   %46.1, %40.9, elided
  void                    StVar              lW    v, %22.0, e0.3
  val?^ | miss    %22.2 = LdVar              eR    assign, e0.3
  lgl$#-          %22.3 = Identical                %22.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %22.3 -> BB48 (if true) | BB49 (if false)
BB27   <- [26, 28]
  void                    Invisible          v     
  void                    Return             l     nil
BB48   <- [22]
  prom-           %48.0 = MkArg                    unboundValue, [0x55804f38be50]_p11 (!refl), e0.3
  prom-           %48.1 = MkArg                    unboundValue, [0x55804f38be50]_p12, e0.3
  prom-           %48.2 = MkArg                    unboundValue, [0x55804f38be50]_p13, e0.3
  val?            %48.3 = StaticCall         !v    assign[0x55804f38bf80](%48.0, %48.1, missingArg, %48.2) { 0 1 3n } e0.3
  int$-           %48.4 = Inc                      %40.9
  lgl$-           %48.5 = Lt                 d     %46.2, %48.4, elided
  lgl$#-          %48.6 = Identical                %48.5, true
  void                    Branch                   %48.6 -> BB26 (if true) | BB25 (if false)
BB49   <- [22]
  fs              %49.0 = FrameState         R     0x55804e6fe0f0+528: [%46.1, %46.2, %40.9], env=e0.3
  void                    Deopt              !v    %49.0, CallTarget@0x55804ec47a70[Call#8], %22.2   !
BB26   <- [48]
  void                    Nop                !     
  goto BB27
BB25   <- [48]
  val?            %25.0 = Extract2_1D        wed   %46.1, %48.4, elided
  void                    StVar              lW    v, %25.0, e0.3
  (cls|spec|blt)  %25.2 = LdFun              !v    assign, e0.3
  fs              %25.3 = FrameState         R     0x55804e6fe0f0+617: [%46.1, %46.2, %48.4, %25.2], env=e0.3
  void                    Deopt              !v    %25.3, DeadCall@0x55804ec47a70[Call#10], %25.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    locals, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804f03e6a0>, e0.0
  val?            %0.2  = Call               !     %0.1(true) e0.0   <env->
  void                    Return             l     %0.2
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804c4bcd58>, e0.0
  val?            %0.2  = Call               !     %0.1(true) e0.0   <env->
  void                    Return             l     %0.2
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804f03e6a0>, e0.0
  val?            %0.2  = Call               !     %0.1(false) e0.0   <env->
  void                    Return             l     %0.2
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3

│ [0x55804f38be50]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
