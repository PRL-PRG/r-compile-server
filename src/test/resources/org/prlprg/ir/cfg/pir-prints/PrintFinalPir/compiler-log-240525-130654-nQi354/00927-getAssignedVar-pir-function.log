
┌──────────────────────────────────────────────────────────────────────────────┐
│ getAssignedVar[0x55804fbaf740]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
getAssignedVar[0x55804fbaf740]
BB0
  val?^           %0.0  = LdArg                    0
  val?            %0.1  = Force!<lazy>             %0.0,    <code->
  lgl$#-          %0.2  = IsType                   %0.1 isA val+   <true>
  lgl$#-          %0.3  = IsType                   %0.1 isA val?-
  void                    Branch                   %0.3 -> BB36 (if true) | BB37 (if false)
BB36   <- [0]
  val?-           %36.0 = CastType           d     dn %0.1   <code->
  void                    Branch                   %0.2 -> BB38 (if true) | BB39 (if false)
BB37   <- [0]
  void                    Nop                !     
  val?            %37.1 = %0.1
  dr              %37.2 = Typecheck@0x55804c64f618[Type#0]
  goto BB35
BB38   <- [36]
  val?            %38.0 = Extract2_1D        wed   %36.0, 2, elided   <(sym|code)->
  env             e38.1 = MkEnv              l     e=%0.0, v=%38.0, parent=<env 0x55804e699488>, context 1
  lgl$-           %38.2 = Missing            eR    v, e38.1
  lgl$#-          %38.3 = CheckTrueFalse     e     %38.2
  void                    Branch                   %38.3 -> BB34 (if true) | BB5 (if false)
BB39   <- [36]
  void                    Nop                !     
  lgl$#-          %39.1 = %0.2
  dr              %39.2 = DeadBranchReached@0x55804c64f618[Test#0]
  goto BB35
BB35   <- [37, 39]
  val?^ | miss    %35.0 = Phi                      %37.1:BB37, %39.1:BB39
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %37.2:BB37, %39.2:BB39
  dr              %35.3 = %35.2
  env             e35.4 = (MkEnv)            l     e=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %35.5 = FrameState         R     0x55804e7e9290+9: [%0.1], env=e35.4
  void                    Deopt              !v    %35.5, %35.3, %35.1
BB34   <- [38]
  (cls|spec|blt)  %34.0 = LdFun              !v    stop0, <env 0x55804e699488>
  fs              %34.1 = FrameState         R     0x55804e7e9290+1085: [%34.0], env=e38.1
  void                    Deopt              !v    %34.1, DeadCall@0x55804c64f618[Call#25], %34.0
BB5   <- [38]
  val?^ | miss    %5.0  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %5.1  = Identical                %5.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %5.1 -> BB40 (if true) | BB41 (if false)
BB40   <- [5]
  prom-           %40.0 = MkArg                    unboundValue, getAssignedVar[0x55804fbaf740]_p0, e38.1
  prom-           %40.1 = MkArg                    unboundValue, getAssignedVar[0x55804fbaf740]_p2, e38.1
  val?            %40.2 = StaticCall         !v    %in%[0x55804f4bf740](%40.0, %40.1) e38.1   <lgl$->
  lgl$#-          %40.3 = IsType                   %40.2 isA lgl$-
  void                    Branch                   %40.3 -> BB42 (if true) | BB43 (if false)
BB41   <- [5]
  env             e41.0 = (MkEnv)            l     e=%0.0, v=%38.0, parent=<env 0x55804e699488>, context 1
  fs              %41.1 = FrameState         R     0x55804e7e9290+67: [], env=e41.0
  void                    Deopt              !v    %41.1, CallTarget@0x55804c64f618[Call#0], %5.0
BB42   <- [40]
  lgl$-           %42.0 = CastType           d     dn %40.2
  lgl$#-          %42.1 = CheckTrueFalse     e     %42.0
  void                    Branch                   %42.1 -> BB33 (if true) | BB8 (if false)
BB43   <- [40]
  void                    Nop                !     
  val?            %43.1 = %40.2
  dr              %43.2 = Typecheck@0x55804c64f618[Type#5]
  goto BB6
BB33   <- [42]
  val?^ | miss    %33.0 = LdVar              eR    as.character, e38.1
  lgl$#-          %33.1 = Identical                <blt as.character>, %33.0   <true>
  void                    Branch                   %33.1 -> BB44 (if true) | BB45 (if false)
BB8   <- [42]
  val?^ | miss    %8.0  = LdVar              eR    typeof, e38.1
  lgl$#-          %8.1  = Identical                %8.0, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %8.1 -> BB46 (if true) | BB47 (if false)
BB6   <- [43, 45, 47, 49, 51]
  val?^ | miss    %6.0  = Phi                      %43.1:BB43, %45.1:BB45, %47.1:BB47, %49.1:BB49, %51.1:BB51
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %43.2:BB43, %45.2:BB45, %47.2:BB47, %49.2:BB49, %51.2:BB51
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x55804e7e9290+116: [%40.2], env=e38.1
  void                    Deopt              !v    %6.4, %6.3, %6.1   !
BB44   <- [33]
  val?^ | miss    %44.0 = LdVar              eR    v, e38.1
  lgl$#-          %44.1 = IsType                   %44.0 isA val?~- | miss
  void                    Branch                   %44.1 -> BB50 (if true) | BB51 (if false)
BB45   <- [33]
  void                    Nop                !     
  lgl$#-          %45.1 = %33.1
  dr              %45.2 = DeadBranchReached@0x55804c64f618[Test#7]
  goto BB6
BB46   <- [8]
  val?^ | miss    %46.0 = LdVar              eR    v, e38.1
  lgl$#-          %46.1 = IsType                   %46.0 isA val?~- | miss
  void                    Branch                   %46.1 -> BB48 (if true) | BB49 (if false)
BB47   <- [8]
  void                    Nop                !     
  val?^ | miss    %47.1 = %8.0
  dr              %47.2 = CallTarget@0x55804c64f618[Call#3]
  goto BB6
BB50   <- [44]
  val?~- | miss   %50.0 = CastType           d     dn %44.0
  val?-           %50.1 = Force!<value>            %50.0,    <sym->
  val+            %50.2 = CallSafeBuiltin    vwed  as.character(%50.1)    <str$->
  val+            %50.3 = %50.2
  goto BB20
BB51   <- [44]
  void                    Nop                !     
  val?^ | miss    %51.1 = %44.0
  dr              %51.2 = Typecheck@0x55804c64f618[Type#46]
  goto BB6
BB48   <- [46]
  val?~- | miss   %48.0 = CastType           d     dn %46.0
  val?-           %48.1 = Force!<value>            %48.0,    <code->
  str$-           %48.2 = CallSafeBuiltin    wed   typeof(%48.1)    <str$->
  lgl$-           %48.3 = Eq                 d     %48.2, "language", elided   <lgl$->
  lgl$#-          %48.4 = CheckTrueFalse     e     %48.3   <true>
  void                    Branch                   %48.4 -> BB52 (if true) | BB53 (if false)
BB49   <- [46]
  void                    Nop                !     
  val?^ | miss    %49.1 = %46.0
  dr              %49.2 = Typecheck@0x55804c64f618[Type#6]
  goto BB6
BB20   <- [50, 66]
  val+            %20.0 = Phi                      %66.2:BB66, %50.3:BB50
  val+            %20.1 = %20.0
  void                    Return             l     %20.1
BB52   <- [48]
  val?^ | miss    %52.0 = LdVar              eR    length, e38.1
  lgl$#-          %52.1 = Identical                <blt length>, %52.0   <@?>
  void                    Branch                   %52.1 -> BB54 (if true) | BB55 (if false)
BB53   <- [48]
  void                    Nop                !     
  lgl$#-          %53.1 = %48.4
  dr              %53.2 = DeadBranchReached@0x55804c64f618[Test#1]
  goto BB9
BB54   <- [52]
  (int|real)$-    %54.0 = CallSafeBuiltin    wed   length(%48.1)    <int$->
  lgl$#-          %54.1 = IsType                   %54.0 isA int$-
  void                    Branch                   %54.1 -> BB56 (if true) | BB57 (if false)
BB55   <- [52]
  void                    Nop                !     
  lgl$#-          %55.1 = %52.1
  dr              %55.2 = DeadBranchReached@0x55804c64f618[Test#2]
  goto BB9
BB9   <- [53, 55]
  val?^ | miss    %9.0  = Phi                      %53.1:BB53, %55.1:BB55
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %53.2:BB53, %55.2:BB55
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804e7e9290+159: [], env=e38.1
  prom-           %9.5  = MkArg                    %48.1, getAssignedVar[0x55804fbaf740]_p3 (!refl), e38.1
  val?~           %9.6  = CastType                 up %9.5
  env             e9.7  = (MkEnv)            l     x=%9.6, parent=R_BaseNamespace, context 0
  fs              %9.8  = FrameState         R     0x55804e7773a0+27: [%48.2], env=e9.7, next=%9.4
  void                    Deopt              !v    %9.8, %9.3, %9.1   !
BB56   <- [54]
  int$-           %56.0 = CastType           d     dn %54.0
  lgl$-           %56.1 = Lt                 d     %56.0, 2, elided   <lgl$->
  lgl$#-          %56.2 = CheckTrueFalse     e     %56.1
  void                    Branch                   %56.2 -> BB32 (if true) | BB13 (if false)
BB57   <- [54]
  void                    Nop                !     
  (int|real)$-    %57.1 = %54.0
  dr              %57.2 = Typecheck@0x55804c64f618[Type#11]
  goto BB11
BB32   <- [56]
  (cls|spec|blt)  %32.0 = LdFun              !v    stop0, e38.1
  fs              %32.1 = FrameState         R     0x55804e7e9290+311: [%32.0], env=e38.1
  void                    Deopt              !v    %32.1, DeadCall@0x55804c64f618[Call#5], %32.0   !
BB13   <- [56]
  lgl$#-          %13.0 = IsType                   %48.1 isA val+   <true>
  void                    Branch                   %13.0 -> BB58 (if true) | BB59 (if false)
BB11   <- [57, 59]
  val?^ | miss    %11.0 = Phi                      %57.1:BB57, %59.1:BB59
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %57.2:BB57, %59.2:BB59
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55804e7e9290+278: [%54.0], env=e38.1
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB58   <- [13]
  val?            %58.0 = Extract2_1D        wed   %48.1, 2, elided   <sym->
  void                    StVar              lW    v, %58.0, e38.1
  lgl$-           %58.2 = Missing            eR    v, e38.1
  lgl$#-          %58.3 = CheckTrueFalse     e     %58.2
  void                    Branch                   %58.3 -> BB31 (if true) | BB14 (if false)
BB59   <- [13]
  void                    Nop                !     
  lgl$#-          %59.1 = %13.0
  dr              %59.2 = DeadBranchReached@0x55804c64f618[Test#3]
  goto BB11
BB31   <- [58]
  (cls|spec|blt)  %31.0 = LdFun              !v    stop0, e38.1
  fs              %31.1 = FrameState         R     0x55804e7e9290+428: [%31.0], env=e38.1
  void                    Deopt              !v    %31.1, DeadCall@0x55804c64f618[Call#8], %31.0   !
BB14   <- [58]
  void                    Nop                !     
  val?            %14.1 = %58.0
  goto BB15
BB15   <- [14, 28]
  val?            %15.0 = Phi                      %14.1:BB14, %28.1:BB28
  val?            %15.1 = %15.0
  val             %15.2 = ChkMissing         e     %15.1   <sym->
  str$-           %15.3 = CallSafeBuiltin    wed   typeof(%15.2)    <str$->
  lgl$-           %15.4 = Eq                 d     %15.3, "language", elided   <lgl$->
  lgl$#-          %15.5 = CheckTrueFalse     e     %15.4
  void                    Branch                   %15.5 -> BB22 (if true) | BB18 (if false)
BB22   <- [15]
  void                    Branch                   %52.1 -> BB24 (if true) | BB23 (if false)
BB18   <- [15]
  lgl$-           %18.0 = Neq                d     %15.3, "symbol", elided   <lgl$->
  lgl$#-          %18.1 = CheckTrueFalse     e     %18.0
  void                    Branch                   %18.1 -> BB21 (if true) | BB19 (if false)
BB24   <- [22]
  lgl$#-          %24.0 = IsType                   %15.2 isA val-
  void                    Branch                   %24.0 -> BB60 (if true) | BB61 (if false)
BB23   <- [22]
  (cls|spec|blt)  %23.0 = LdFun              !v    length, e38.1
  fs              %23.1 = FrameState         R     0x55804e7e9290+539: [%23.0], env=e38.1
  void                    Deopt              !v    %23.1, DeadCall@0x55804c64f618[Call#12], %23.0   !
BB21   <- [18]
  (cls|spec|blt)  %21.0 = LdFun              !v    stop0, e38.1
  fs              %21.1 = FrameState         R     0x55804e7e9290+850: [%21.0], env=e38.1
  void                    Deopt              !v    %21.1, DeadCall@0x55804c64f618[Call#20], %21.0   !
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    as.character, e38.1
  lgl$#-          %19.1 = Identical                <blt as.character>, %19.0   <true>
  void                    Branch                   %19.1 -> BB64 (if true) | BB65 (if false)
BB60   <- [24]
  val-            %60.0 = CastType           d     dn %15.2   <sym->
  (int|real)$-    %60.1 = CallSafeBuiltin    wed   length(%60.0)    <val?_>
  lgl$-           %60.2 = Lt                 d     %60.1, 2, elided   <val?_>
  lgl$#-          %60.3 = CheckTrueFalse     e     %60.2
  void                    Branch                   %60.3 -> BB30 (if true) | BB27 (if false)
BB61   <- [24]
  void                    Nop                !     
  val             %61.1 = %15.2
  dr              %61.2 = Typecheck@0x55804c64f618[Type#21]
  goto BB16
BB64   <- [19]
  lgl$#-          %64.0 = IsType                   %15.2 isA val-
  void                    Branch                   %64.0 -> BB66 (if true) | BB67 (if false)
BB65   <- [19]
  void                    Nop                !     
  lgl$#-          %65.1 = %19.1
  dr              %65.2 = DeadBranchReached@0x55804c64f618[Test#6]
  goto BB16
BB30   <- [60]
  (cls|spec|blt)  %30.0 = LdFun              !v    stop0, e38.1
  fs              %30.1 = FrameState         R     0x55804e7e9290+635: [%30.0], env=e38.1
  void                    Deopt              !v    %30.1, DeadCall@0x55804c64f618[Call#13], %30.0   !
BB27   <- [60]
  val             %27.0 = ChkMissing         e     %15.1   <val?_>
  lgl$#-          %27.1 = IsType                   %27.0 isA val?+
  void                    Branch                   %27.1 -> BB62 (if true) | BB63 (if false)
BB16   <- [61, 65, 67]
  val?^ | miss    %16.0 = Phi                      %61.1:BB61, %65.1:BB65, %67.1:BB67
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %61.2:BB61, %65.2:BB65, %67.2:BB67
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55804e7e9290+488: [], env=e38.1
  prom-           %16.5 = MkArg                    %15.2, getAssignedVar[0x55804fbaf740]_p4 (!refl), e38.1
  val?~           %16.6 = CastType                 up %16.5
  env             e16.7 = (MkEnv)            l     x=%16.6, parent=R_BaseNamespace, context 0
  fs              %16.8 = FrameState         R     0x55804e7773a0+27: [%15.3], env=e16.7, next=%16.4
  void                    Deopt              !v    %16.8, %16.3, %16.1   !
BB66   <- [64]
  val-            %66.0 = CastType           d     dn %15.2   <sym->
  val+            %66.1 = CallSafeBuiltin    vwed  as.character(%66.0)    <str$->
  val+            %66.2 = %66.1
  goto BB20
BB67   <- [64]
  void                    Nop                !     
  val             %67.1 = %15.2
  dr              %67.2 = Typecheck@0x55804c64f618[Type#21]
  goto BB16
BB62   <- [27]
  val+            %62.0 = CastType           d     dn %27.0   <val?_>
  val?            %62.1 = Extract2_1D        wed   %62.0, 2, elided   <val?_>
  void                    StVar              lW    v, %62.1, e38.1
  lgl$-           %62.3 = Missing            eR    v, e38.1
  lgl$#-          %62.4 = CheckTrueFalse     e     %62.3
  void                    Branch                   %62.4 -> BB29 (if true) | BB28 (if false)
BB63   <- [27]
  fs              %63.0 = FrameState         R     0x55804e7e9290+602: [%60.1], env=e38.1
  void                    Deopt              !v    %63.0, Typecheck@0x55804c64f618[Type#31], %27.0   !
BB29   <- [62]
  (cls|spec|blt)  %29.0 = LdFun              !v    stop0, e38.1
  fs              %29.1 = FrameState         R     0x55804e7e9290+752: [%29.0], env=e38.1
  void                    Deopt              !v    %29.1, DeadCall@0x55804c64f618[Call#16], %29.0   !
BB28   <- [62]
  void                    Nop                !     
  val?            %28.1 = %62.1
  goto BB15
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     typeof, <0x55804e68e748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getAssignedVar[0x55804fbaf740]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("symbol", "character") e0.0   <str->
  void                    Return             l     %0.2
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3

│ getAssignedVar[0x55804fbaf740]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
