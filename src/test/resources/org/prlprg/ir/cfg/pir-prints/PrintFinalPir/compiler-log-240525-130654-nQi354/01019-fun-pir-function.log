
┌──────────────────────────────────────────────────────────────────────────────┐
│ fun[0x55804cd0efd0]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
fun[0x55804cd0efd0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     exit=%0.0, parent=?, context 1
  cls             %0.2  = MkCls                    , e0.1
  void                    StVar              lW    doExit, %0.2, e0.1
  val?^ | miss    %0.4  = LdVar              eR    makeConstantFolder, ?
  lgl$#-          %0.5  = Identical                %0.4, function(..., leaf=foldLeaf, handler=function(|...
  void                    Branch                   %0.5 -> BB6 (if true) | BB7 (if false)
BB6   <- [0]
  prom-           %6.0  = MkArg                    unboundValue, fun[0x55804cd0efd0]_p0, e0.1
  prom-           %6.1  = MkArg                    unboundValue, fun[0x55804cd0efd0]_p1 (!refl), e0.1
  ct              %6.2  = PushContext        lCL   missingArg, missingArg, missingArg, missingArg, %6.1, %6.0, makeConstantFolder(isLocal=isLocal, exit=doExit), function(..., leaf=foldLeaf, handler=function(|..., e0.1
  val?^           %6.3  = CastType                 up %6.0
  val?^           %6.4  = CastType                 up %6.1
  env             e6.5  = MkEnv              l     ...(miss)=missingArg, leaf(miss)=missingArg, handler(miss)=missingArg, call(miss)=missingArg, exit=%6.4, isLocal=%6.3, foldable(miss)=missingArg, isConstant(miss)=missingArg, signal(miss)=missingArg, parent=<env 0x55804e699488>, context 1
  prom-           %6.6  = MkArg                    unboundValue, fun[0x55804cd0efd0]_p4, e6.5
  val?^ | miss    %6.7  = CastType                 up %6.6
  void                    StArg              lW    leaf, %6.7, e6.5
  cls             %6.9  = MkCls                    makeConstantFolder@Prom(1)0, e6.5
  prom-           %6.10 = MkArg                    %6.9, fun[0x55804cd0efd0]_p6 (!refl), e6.5
  val?^ | miss    %6.11 = CastType                 up %6.10
  void                    StArg              lW    handler, %6.11, e6.5
  cls             %6.13 = MkCls                    makeConstantFolder@Prom(2)0, e6.5
  prom-           %6.14 = MkArg                    %6.13, fun[0x55804cd0efd0]_p5 (!refl), e6.5
  val?^ | miss    %6.15 = CastType                 up %6.14
  void                    StArg              lW    call, %6.15, e6.5
  prom-           %6.17 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p8, e6.5
  val?^ | miss    %6.18 = CastType                 up %6.17
  void                    StArg              lW    foldable, %6.18, e6.5
  prom-           %6.20 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p9, e6.5
  val?^ | miss    %6.21 = CastType                 up %6.20
  void                    StArg              lW    isConstant, %6.21, e6.5
  cls             %6.23 = MkCls                    makeConstantFolder@Prom(7)0, e6.5
  prom-           %6.24 = MkArg                    %6.23, fun[0x55804cd0efd0]_p11 (!refl), e6.5
  val?^ | miss    %6.25 = CastType                 up %6.24
  void                    StArg              lW    signal, %6.25, e6.5
  (cls|spec|blt)  %6.27 = LdFun              !     list, <0x55804bef55c0>, <env 0x55804e699488>
  prom-           %6.28 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p12 (!refl), e6.5
  prom-           %6.29 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p13 (!refl), e6.5
  prom-           %6.30 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p14, e6.5
  prom-           %6.31 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p15, e6.5
  prom-           %6.32 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p16, e6.5
  prom-           %6.33 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p17, e6.5
  prom-           %6.34 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p18, e6.5
  prom-           %6.35 = MkArg                    unboundValue, fun[0x55804cd0efd0]_p19 (!refl), e6.5
  val?            %6.36 = NamedCall          !     %6.27(handler=%6.28, call=%6.29, exit=%6.30, leaf=%6.31, isLocal=%6.32, foldable=%6.33, isConstant=%6.34, signal=%6.35) e6.5   <vec+>
  val?            %6.37 = PopContext         C     %6.36, %6.2   <vec+>
  void                    StVar              lW    w, %6.37, e0.1
  val?^ | miss    %6.39 = LdVar              eR    walkCode, e0.1
  lgl$#-          %6.40 = Identical                %6.39, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %6.40 -> BB8 (if true) | BB9 (if false)
BB7   <- [0]
  fs              %7.0  = FrameState         R     0x55804efe4190+25: [], env=e0.1
  void                    Deopt              !v    %7.0, CallTarget@0x55804e398988[Call#0], %0.4
BB8   <- [6]
  prom-           %8.0  = MkArg                    unboundValue, fun[0x55804cd0efd0]_p2, e0.1
  prom-           %8.1  = MkArg                    unboundValue, fun[0x55804cd0efd0]_p3 (!refl), e0.1
  val?            %8.2  = StaticCall         !     walkCode[0x55804e81c400](%8.0, %8.1) e0.1   <val?_>
  void                    Return             l     %8.2
BB9   <- [6]
  fs              %9.0  = FrameState         R     0x55804efe4190+84: [], env=e0.1
  void                    Deopt              !v    %9.0, CallTarget@0x55804e398988[Call#1], %6.39   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    doExit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    foldLeaf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    makeConstantFolder@Prom(2)0, e0.0
  void                    Return             l     %0.1
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    makeConstantFolder@Prom(1)0, e0.0
  void                    Return             l     %0.1
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isFoldable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isConstantValue, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    makeConstantFolder@Prom(7)0, e0.0
  void                    Return             l     %0.1
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    leaf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isFoldable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isConstant, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3

│ fun[0x55804cd0efd0]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
