
┌──────────────────────────────────────────────────────────────────────────────┐
│ exists[0x55804eeed550]                                                       │
│ Context: CorrOrd,!TMany,Argmatch;Eager2,Eager3,Eager4,Eager5,NonRefl2,NonRefl3,NonRefl4,NonRefl5,!Obj5│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
exists[0x55804eeed550]
BB0
  val?~+          %0.0  = LdArg                    5
  val?~ | miss    %0.1  = LdArg                    4
  val?~ | miss    %0.2  = LdArg                    3
  val?~ | miss    %0.3  = LdArg                    2
  val?^ | miss    %0.4  = LdArg                    1
  val?^ | miss    %0.5  = LdArg                    0
  lgl$#-          %0.6  = Identical                %0.4, missingArg
  lgl$#-          %0.7  = Identical                %0.3, missingArg
  env             e0.8  = MkEnv              l     x=%0.5, where=%0.4, envir=%0.3, frame=%0.2, mode=%0.1, inherits=%0.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.6 -> BB2 (if true) | BB12 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, exists[0x55804eeed550]_p0 (!refl), 
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.8
  goto BB3
BB12   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 12]
  void                    Branch                   %0.7 -> BB11 (if true) | BB4 (if false)
BB11   <- [3]
  prom-           %11.0 = MkArg                    unboundValue, exists[0x55804eeed550]_p1, e0.8
  val?^ | miss    %11.1 = CastType                 up %11.0
  void                    StArg              lW    envir, %11.1, e0.8
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [11, 4]
  lgl$#-          %5.0  = Identical                %0.1, missingArg
  void                    Branch                   %5.0 -> BB10 (if true) | BB6 (if false)
BB10   <- [5]
  void                    StArg              lW    mode, "any", e0.8
  goto BB7
BB6   <- [5]
  void                    Nop                !     
  goto BB7
BB7   <- [6, 10]
  val?^           %7.0  = ChkMissing         e     %0.5
  val?            %7.1  = Force!<lazy>       !v    %7.0, e0.8   <str$->
  lgl$#-          %7.2  = IsType                   %7.1 isA val?-
  void                    Branch                   %7.2 -> BB13 (if true) | BB14 (if false)
BB13   <- [7]
  val?-           %13.0 = CastType           d     dn %7.1   <str$->
  val?^ | miss    %13.1 = LdVar              eR    envir, e0.8
  val?            %13.2 = Force!<lazy>       !v    %13.1, e0.8   <env+>
  val?^ | miss    %13.3 = LdVar              eR    mode, e0.8
  val?            %13.4 = Force!<lazy>       !v    %13.3, e0.8   <str$->
  val?^ | miss    %13.5 = LdVar              eR    inherits, e0.8
  val?            %13.6 = Force!<lazy>       !v    %13.5, e0.8   <lgl$->
  val?            %13.7 = CallBuiltin        !     exists(%13.0, %13.2, %13.4, %13.6) e0.8
  void                    Return             l     %13.7
BB14   <- [7]
  fs              %14.0 = FrameState         R     0x55804e24ca60+9: [%7.1], env=e0.8
  void                    Deopt              !v    %14.0, Typecheck@0x55804e11fd40[Type#4], %7.1   !
Prom 0:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  lgl$-           %0.1  = Missing            eR    frame, e0.0
  void                    Visible            v     
  lgl$#-          %0.3  = CheckTrueFalse     e     %0.1
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  (cls|spec|blt)  %2.0  = LdFun              !     as.environment, <0x55804beedb70>, e0.0
  prom-           %2.1  = MkArg                    unboundValue, exists[0x55804eeed550]_p3, e0.0
  val?            %2.2  = Call               !     %2.0(%2.1) e0.0   <env+>
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  (cls|spec|blt)  %4.0  = LdFun              !     sys.frame, e0.0
  prom-           %4.1  = MkArg                    unboundValue, exists[0x55804eeed550]_p2, e0.0
  val?            %4.2  = Call               !     %4.0(%4.1) e0.0   <val?_>
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.3:BB4, %2.3:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    frame, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|env)+>
  void                    Return             l     %0.3

│ exists[0x55804eeed550]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
