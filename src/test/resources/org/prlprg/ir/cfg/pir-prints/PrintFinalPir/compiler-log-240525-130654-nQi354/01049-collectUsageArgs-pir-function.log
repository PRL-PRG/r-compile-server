
┌──────────────────────────────────────────────────────────────────────────────┐
│ collectUsageArgs[0x55804f652f20]                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
collectUsageArgs[0x55804f652f20]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    dropMissings, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(x) <(rir::DispatchTable*)0x55804ea145|...
  void                    Branch                   %0.3 -> BB33 (if true) | BB34 (if false)
BB33   <- [0]
  env             e33.0 = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %33.1 = MkArg                    unboundValue, collectUsageArgs[0x55804f652f20]_p0, e33.0
  val?            %33.2 = StaticCall         !v    dropMissings[0x55804f8ab260](%33.1) e33.0   <vec->
  val?+           %33.3 = ToForSeq           e     %33.2
  int$-           %33.4 = Length                   %33.3
  int$-           %33.5 = Inc                      0L
  lgl$-           %33.6 = Lt                 d     %33.4, %33.5, elided   <false>
  lgl$#-          %33.7 = Identical                %33.6, true
  void                    Branch                   %33.7 -> BB36 (if true) | BB35 (if false)
BB34   <- [0]
  env             e34.0 = (MkEnv)            l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %34.1 = FrameState         R     0x55804f459ab0+0: [], env=e34.0
  void                    Deopt              !v    %34.1, CallTarget@0x55804f22ab48[Call#0], %0.2
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x55804f459ab0+32: [%33.2], env=e33.0
  void                    Deopt              !v    %36.0, DeadBranchReached@0x55804f22ab48[Test#1], %33.7   !
BB35   <- [33]
  val?            %35.0 = Extract2_1D        wed   %33.3, %33.5, elided   <(sym|code)->
  void                    StVar              lW    a, %35.0, e33.0
  val?^ | miss    %35.2 = LdVar              eR    typeof, e33.0
  lgl$#-          %35.3 = Identical                %35.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %35.3 -> BB37 (if true) | BB38 (if false)
BB37   <- [35]
  val             %37.0 = ChkMissing         e     %35.0
  str$-           %37.1 = CallSafeBuiltin    wed   typeof(%35.0)    <str$->
  lgl$-           %37.2 = Eq                 d     %37.1, "symbol", elided   <lgl$->
  lgl$-           %37.3 = AsLogical                %37.2
  lgl$#-          %37.4 = Identical                %37.3, false
  void                    Branch                   %37.4 -> BB31 (if true) | BB9 (if false)
BB38   <- [35]
  fs              %38.0 = FrameState         R     0x55804f459ab0+77: [%33.3, %33.4, %33.5], env=e33.0
  void                    Deopt              !v    %38.0, CallTarget@0x55804f22ab48[Call#1], %35.2   !
BB31   <- [37]
  void                    Nop                !     
  lgl$-           %31.1 = %37.3
  goto BB12
BB9   <- [37]
  lgl$#-          %9.0  = IsType                   %35.0 isA val?-
  void                    Branch                   %9.0 -> BB39 (if true) | BB40 (if false)
BB12   <- [31, 43]
  lgl$-           %12.0 = Phi                      %43.3:BB43, %31.1:BB31
  lgl$-           %12.1 = %12.0
  lgl$#-          %12.2 = CheckTrueFalse     e     %12.1
  void                    Branch                   %12.2 -> BB30 (if true) | BB15 (if false)
BB39   <- [9]
  val?-           %39.0 = CastType           d     dn %35.0   <(sym|code)->
  lgl-            %39.1 = Eq                 wed   %39.0, "...", elided   <lgl$->
  lgl$#-          %39.2 = IsType                   %39.1 isA lgl$-
  void                    Branch                   %39.2 -> BB43 (if true) | BB44 (if false)
BB40   <- [9]
  prom-           %40.0 = MkArg                    %35.0, collectUsageArgs[0x55804f652f20]_p2 (!refl), e33.0
  val?~           %40.1 = CastType                 up %40.0
  fs              %40.2 = FrameState         R     0x55804f459ab0+109: [%33.3, %33.4, %33.5], env=e33.0
  env             e40.3 = (MkEnv)            l     x=%40.1, parent=R_BaseNamespace, context 0
  fs              %40.4 = FrameState         R     0x55804e7773a0+27: [%37.1], env=e40.3, next=%40.2
  void                    Deopt              !v    %40.4, Typecheck@0x55804f22ab48[Type#3], %35.0   !
BB30   <- [12]
  (cls|spec|blt)  %30.0 = LdFun              !v    $, e33.0
  fs              %30.1 = FrameState         R     0x55804f459ab0+215: [%33.3, %33.4, %33.5, %30.0], env=e33.0
  void                    Deopt              !v    %30.1, DeadCall@0x55804f22ab48[Call#3], %30.0   !
BB15   <- [12]
  val?^ | miss    %15.0 = LdVar              eR    walkCode, e33.0
  lgl$#-          %15.1 = Identical                %15.0, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %15.1 -> BB41 (if true) | BB42 (if false)
BB43   <- [39]
  lgl$-           %43.0 = CastType           d     dn %39.1
  lgl$-           %43.1 = AsLogical                %43.0
  lgl$-           %43.2 = LAnd                     %37.3, %43.1
  lgl$-           %43.3 = %43.2
  goto BB12
BB44   <- [39]
  fs              %44.0 = FrameState         R     0x55804f459ab0+154: [%33.3, %33.4, %33.5, %37.3, %39.1], env=e33.0
  void                    Deopt              !v    %44.0, Typecheck@0x55804f22ab48[Type#7], %39.1   !
BB41   <- [15]
  prom-           %41.0 = MkArg                    unboundValue, collectUsageArgs[0x55804f652f20]_p3 (!refl), e33.0
  prom-           %41.1 = MkArg                    unboundValue, collectUsageArgs[0x55804f652f20]_p4, e33.0
  val?            %41.2 = StaticCall         !v    walkCode[0x55804f1c8a10](%41.0, %41.1) e33.0
  int$-           %41.3 = %33.5
  goto BB16
BB42   <- [15]
  fs              %42.0 = FrameState         R     0x55804f459ab0+161: [%33.3, %33.4, %33.5, %12.1], env=e33.0
  void                    Deopt              !v    %42.0, CallTarget@0x55804f22ab48[Call#2], %15.0   !
BB16   <- [41, 49]
  int$-           %16.0 = Phi                      %41.3:BB41, %49.3:BB49
  int$-           %16.1 = %16.0
  int$-           %16.2 = Inc                      %16.1
  lgl$-           %16.3 = Lt                 d     %33.4, %16.2, elided
  lgl$#-          %16.4 = Identical                %16.3, true
  void                    Branch                   %16.4 -> BB29 (if true) | BB17 (if false)
BB29   <- [16]
  void                    Invisible          v     
  void                    Return             l     nil
BB17   <- [16]
  val?            %17.0 = Extract2_1D        wed   %33.3, %16.2, elided   <val?->
  void                    StVar              lW    a, %17.0, e33.0
  val?^ | miss    %17.2 = LdVar              eR    typeof, e33.0
  lgl$#-          %17.3 = Identical                %17.2, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %17.3 -> BB45 (if true) | BB46 (if false)
BB45   <- [17]
  val             %45.0 = ChkMissing         e     %17.0
  str$-           %45.1 = CallSafeBuiltin    wed   typeof(%17.0)    <str$->
  lgl$-           %45.2 = Eq                 d     %45.1, "symbol", elided   <lgl$->
  lgl$-           %45.3 = AsLogical                %45.2
  lgl$#-          %45.4 = Identical                %45.3, false
  void                    Branch                   %45.4 -> BB28 (if true) | BB22 (if false)
BB46   <- [17]
  fs              %46.0 = FrameState         R     0x55804f459ab0+492: [%33.3, %33.4, %16.2], env=e33.0
  void                    Deopt              !v    %46.0, CallTarget@0x55804f22ab48[Call#11], %17.2   !
BB28   <- [45]
  void                    Nop                !     
  lgl$-           %28.1 = %45.3
  goto BB23
BB22   <- [45]
  val             %22.0 = ChkMissing         e     %17.0
  lgl$#-          %22.1 = IsType                   %17.0 isA val?-
  void                    Branch                   %22.1 -> BB47 (if true) | BB48 (if false)
BB23   <- [28, 47]
  lgl$-           %23.0 = Phi                      %47.4:BB47, %28.1:BB28
  lgl$-           %23.1 = %23.0
  lgl$#-          %23.2 = CheckTrueFalse     e     %23.1
  void                    Branch                   %23.2 -> BB27 (if true) | BB26 (if false)
BB47   <- [22]
  val?-           %47.0 = CastType           d     dn %17.0
  lgl-            %47.1 = Eq                 wed   %47.0, "...", elided   <val?_>
  lgl$-           %47.2 = AsLogical                %47.1
  lgl$-           %47.3 = LAnd                     %45.3, %47.2
  lgl$-           %47.4 = %47.3
  goto BB23
BB48   <- [22]
  prom-           %48.0 = MkArg                    %17.0, collectUsageArgs[0x55804f652f20]_p5 (!refl), e33.0
  val?~           %48.1 = CastType                 up %48.0
  fs              %48.2 = FrameState         R     0x55804f459ab0+524: [%33.3, %33.4, %16.2], env=e33.0
  env             e48.3 = (MkEnv)            l     x=%48.1, parent=R_BaseNamespace, context 0
  fs              %48.4 = FrameState         R     0x55804e7773a0+27: [%45.1], env=e48.3, next=%48.2
  void                    Deopt              !v    %48.4, Typecheck@0x55804f22ab48[Type#28], %17.0   !
BB27   <- [23]
  (cls|spec|blt)  %27.0 = LdFun              !v    $, e33.0
  fs              %27.1 = FrameState         R     0x55804f459ab0+630: [%33.3, %33.4, %16.2, %27.0], env=e33.0
  void                    Deopt              !v    %27.1, DeadCall@0x55804f22ab48[Call#13], %27.0   !
BB26   <- [23]
  val?^ | miss    %26.0 = LdVar              eR    walkCode, e33.0
  lgl$#-          %26.1 = Identical                %26.0, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %26.1 -> BB49 (if true) | BB50 (if false)
BB49   <- [26]
  prom-           %49.0 = MkArg                    unboundValue, collectUsageArgs[0x55804f652f20]_p6 (!refl), e33.0
  prom-           %49.1 = MkArg                    unboundValue, collectUsageArgs[0x55804f652f20]_p7, e33.0
  val?            %49.2 = StaticCall         !v    walkCode[0x55804f1c8a10](%49.0, %49.1) e33.0
  int$-           %49.3 = %16.2
  goto BB16
BB50   <- [26]
  fs              %50.0 = FrameState         R     0x55804f459ab0+576: [%33.3, %33.4, %16.2, %23.1], env=e33.0
  void                    Deopt              !v    %50.0, CallTarget@0x55804f22ab48[Call#12], %26.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <code->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  real$#-         %2.1  = -1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, collectUsageArgs[0x55804f652f20]_p1, 
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  (real|prom)-    %3.0  = Phi                      %2.1:BB2, %4.1:BB4
  (real|prom)-    %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 1:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ collectUsageArgs[0x55804f652f20]                                             │
└──────────────────────────────────────────────────────────────────────────────┘
