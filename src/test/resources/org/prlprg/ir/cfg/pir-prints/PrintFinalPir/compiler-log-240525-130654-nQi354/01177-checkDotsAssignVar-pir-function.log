
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkDotsAssignVar[0x55804e65ec80]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
checkDotsAssignVar[0x55804e65ec80]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     v=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  val+            %0.3  = Force!<lazy>       !vr   %0.1,    <str$->
  lgl             %0.4  = Eq                 wed   %0.3, "...", elided   <lgl$->
  lgl$#-          %0.5  = IsType                   %0.4 isA lgl$-
  void                    Branch                   %0.5 -> BB26 (if true) | BB27 (if false)
BB26   <- [0]
  lgl$-           %26.0 = CastType           d     dn %0.4
  lgl$#-          %26.1 = CheckTrueFalse     e     %26.0
  void                    Branch                   %26.1 -> BB24 (if true) | BB3 (if false)
BB27   <- [0]
  void                    Nop                !     
  lgl             %27.1 = %0.4
  dr              %27.2 = Typecheck@0x55804eaeb5f8[Type#1]
  goto BB25
BB24   <- [26]
  (cls|spec|blt)  %24.0 = LdFun              !v    $, <env 0x55804e699488>
  fs              %24.1 = FrameState         R     0x55804e1317f0+178: [%24.0], env=e0.2
  void                    Deopt              !v    %24.1, DeadCall@0x55804eaeb5f8[Call#4], %24.0   !
BB3   <- [26]
  val?^ | miss    %3.0  = LdVar              eR    isDDSym, <env 0x55804e699488>
  lgl$#-          %3.1  = Identical                %3.0, function(name) <(rir::DispatchTable*)0x55804e2|...
  void                    Branch                   %3.1 -> BB28 (if true) | BB29 (if false)
BB25   <- [27, 29]
  val?^ | miss    %25.0 = Phi                      %27.1:BB27, %29.1:BB29
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %27.2:BB27, %29.2:BB29
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55804e1317f0+21: [%0.4], env=e0.2
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB28   <- [3]
  prom-           %28.0 = MkArg                    unboundValue, checkDotsAssignVar[0x55804e65ec80]_p0 (!refl), e0.2
  ct              %28.1 = PushContext        lCL   %28.0, isDDSym(v), function(name) <(rir::DispatchTable*)0x55804e2|..., e0.2
  val?^           %28.2 = CastType                 up %28.0
  val?^ | miss    %28.3 = LdVar              eR    is.symbol, <env 0x55804e699488>
  lgl$#-          %28.4 = Identical                <blt is.symbol>, %28.3   <true>
  void                    Branch                   %28.4 -> BB30 (if true) | BB31 (if false)
BB29   <- [3]
  void                    Nop                !     
  val?^ | miss    %29.1 = %3.0
  dr              %29.2 = CallTarget@0x55804eaeb5f8[Call#0]
  goto BB25
BB30   <- [28]
  env             e30.0 = MkEnv              l     name=%28.2, parent=<env 0x55804e699488>, context 1
  val?            %30.1 = Force!<lazy>       !vr   %28.2,    <(sym|str)->
  lgl$#-          %30.2 = CallSafeBuiltin    wed   is.symbol(%30.1)    <lgl$->
  void                    Branch                   %30.2 -> BB23 (if true) | BB8 (if false)
BB31   <- [28]
  fs              %31.0 = FrameState         R     0x55804e1317f0+64: [], env=e0.2
  env             e31.1 = (MkEnv)            l     name=%28.2, parent=<env 0x55804e699488>, context 1
  fs              %31.2 = FrameState         R     0x55804ed96dd0+17: [<blt is.symbol>, %28.4], env=e31.1, next=%31.0
  void                    Deopt              !v    %31.2, DeadBranchReached@0x55804eaeb288[Test#0], %28.4   !
BB23   <- [30]
  void                    Nop                !     
  lgl$#-          %23.1 = %30.2
  goto BB9
BB8   <- [30]
  val?^ | miss    %8.0  = LdVar              eR    is.character, <env 0x55804e699488>
  lgl$#-          %8.1  = Identical                <blt is.character>, %8.0   <true>
  void                    Branch                   %8.1 -> BB32 (if true) | BB33 (if false)
BB9   <- [23, 32]
  lgl$-           %9.0  = Phi                      %32.2:BB32, %23.1:BB23
  lgl$-           %9.1  = %9.0
  lgl$-           %9.2  = AsLogical                %9.1
  lgl$#-          %9.3  = Identical                %9.2, false
  void                    Branch                   %9.3 -> BB22 (if true) | BB12 (if false)
BB32   <- [8]
  lgl$#-          %32.0 = CallSafeBuiltin    wed   is.character(%30.1)    <lgl$->
  lgl$-           %32.1 = LOr                      %30.2, %32.0
  lgl$-           %32.2 = %32.1
  goto BB9
BB33   <- [8]
  fs              %33.0 = FrameState         R     0x55804e1317f0+64: [], env=e0.2
  fs              %33.1 = FrameState         R     0x55804ed96dd0+91: [%30.2], env=e30.0, next=%33.0
  void                    Deopt              !v    %33.1, DeadBranchReached@0x55804eaeb288[Test#1], %8.1   !
BB22   <- [9]
  void                    Nop                !     
  lgl$-           %22.1 = %9.2
  goto BB17
BB12   <- [9]
  val?^ | miss    %12.0 = LdVar              eR    length, <env 0x55804e699488>
  lgl$#-          %12.1 = Identical                <blt length>, %12.0   <true>
  void                    Branch                   %12.1 -> BB34 (if true) | BB35 (if false)
BB17   <- [22, 42]
  lgl$-           %17.0 = Phi                      %42.4:BB42, %22.1:BB22
  lgl$-           %17.1 = %17.0
  val?            %17.2 = PopContext         C     %17.1, %28.1   <lgl$->
  lgl$#-          %17.3 = IsType                   %17.2 isA lgl$-
  void                    Branch                   %17.3 -> BB38 (if true) | BB39 (if false)
BB34   <- [12]
  val?^ | miss    %34.0 = LdVar              eR    grep, <env 0x55804e699488>
  lgl$#-          %34.1 = Identical                %34.0, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Branch                   %34.1 -> BB36 (if true) | BB37 (if false)
BB35   <- [12]
  void                    Nop                !     
  lgl$#-          %35.1 = %12.1
  dr              %35.2 = DeadBranchReached@0x55804eaeb288[Test#2]
  goto BB10
BB38   <- [17]
  lgl$-           %38.0 = CastType           d     dn %17.2
  lgl$#-          %38.1 = CheckTrueFalse     e     %38.0
  void                    Branch                   %38.1 -> BB21 (if true) | BB20 (if false)
BB39   <- [17]
  fs              %39.0 = FrameState         R     0x55804e1317f0+64: [%17.2], env=e0.2
  void                    Deopt              !v    %39.0, Typecheck@0x55804eaeb5f8[Type#3], %17.2   !
BB36   <- [34]
  prom-           %36.0 = MkArg                    unboundValue, checkDotsAssignVar[0x55804e65ec80]_p1, e30.0
  val?            %36.1 = StaticCall         !v    grep[0x55804f9286a0]("^\.\.[[:digit:]]+$", %36.0) e30.0   <int->
  lgl$#-          %36.2 = IsType                   %36.1 isA int-
  void                    Branch                   %36.2 -> BB40 (if true) | BB41 (if false)
BB37   <- [34]
  void                    Nop                !     
  val?^ | miss    %37.1 = %34.0
  dr              %37.2 = CallTarget@0x55804eaeb288[Call#5]
  goto BB10
BB10   <- [35, 37]
  val?^ | miss    %10.0 = Phi                      %35.1:BB35, %37.1:BB37
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %35.2:BB35, %37.2:BB37
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x55804e1317f0+64: [], env=e0.2
  fs              %10.5 = FrameState         R     0x55804ed96dd0+201: [%9.1], env=e30.0, next=%10.4
  void                    Deopt              !v    %10.5, %10.3, %10.1   !
BB21   <- [38]
  (cls|spec|blt)  %21.0 = LdFun              !v    $, e0.2
  fs              %21.1 = FrameState         R     0x55804e1317f0+91: [%21.0], env=e0.2
  void                    Deopt              !v    %21.1, DeadCall@0x55804eaeb5f8[Call#1], %21.0   !
BB20   <- [38]
  void                    Visible            v     
  void                    Return             l     true
BB40   <- [36]
  int-            %40.0 = CastType           d     dn %36.1
  (int|real)$-    %40.1 = CallSafeBuiltin    wed   length(%40.0)    <int$->
  lgl$#-          %40.2 = IsType                   %40.1 isA int$-
  void                    Branch                   %40.2 -> BB42 (if true) | BB43 (if false)
BB41   <- [36]
  fs              %41.0 = FrameState         R     0x55804e1317f0+64: [], env=e0.2
  fs              %41.1 = FrameState         R     0x55804ed96dd0+306: [%9.2, <blt length>, %36.1], env=e30.0, next=%41.0
  void                    Deopt              !v    %41.1, Typecheck@0x55804eaeb288[Type#11], %36.1   !
BB42   <- [40]
  int$-           %42.0 = CastType           d     dn %40.1
  lgl$-           %42.1 = Neq                d     %42.0, 0, elided   <lgl$->
  lgl$-           %42.2 = AsLogical                %42.1
  lgl$-           %42.3 = LAnd                     %9.2, %42.2
  lgl$-           %42.4 = %42.3
  goto BB17
BB43   <- [40]
  fs              %43.0 = FrameState         R     0x55804e1317f0+64: [], env=e0.2
  fs              %43.1 = FrameState         R     0x55804ed96dd0+328: [%9.2, %40.1], env=e30.0, next=%43.0
  void                    Deopt              !v    %43.1, Typecheck@0x55804eaeb288[Type#12], %40.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, checkDotsAssignVar[0x55804e65ec80]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|str)->
  void                    Return             l     %0.3

│ checkDotsAssignVar[0x55804e65ec80]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
