
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804e304600]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
[0x55804e304600]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?~+          %0.3  = LdArg                    0
  val+            %0.4  = Force<value>             %0.3,    <str$->
  lgl             %0.5  = Eq                 wed   %0.4, "function", elided   <lgl$->
  lgl$#-          %0.6  = IsType                   %0.5 isA lgl$-
  void                    Branch                   %0.6 -> BB36 (if true) | BB37 (if false)
BB36   <- [0]
  lgl$-           %36.0 = CastType           d     dn %0.5
  lgl$#-          %36.1 = CheckTrueFalse     e     %36.0
  env             e36.2 = MkEnv              l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  void                    Branch                   %36.1 -> BB18 (if true) | BB3 (if false)
BB37   <- [0]
  void                    Nop                !     
  lgl             %37.1 = %0.5
  dr              %37.2 = Typecheck@0x55804e0a05d0[Type#1]
  goto BB35
BB18   <- [36]
  val?^ | miss    %18.0 = LdVar              eR    exists, <env 0x55804e699488>
  lgl$#-          %18.1 = Identical                %18.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %18.1 -> BB40 (if true) | BB41 (if false)
BB3   <- [36]
  lgl             %3.0  = Eq                 wed   %0.4, "variable", elided   <val?_>
  lgl$#-          %3.1  = CheckTrueFalse     we    %3.0
  void                    Branch                   %3.1 -> BB11 (if true) | BB6 (if false)
BB35   <- [37, 41]
  val?^ | miss    %35.0 = Phi                      %37.1:BB37, %41.1:BB41
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %37.2:BB37, %41.2:BB41
  dr              %35.3 = %35.2
  env             e35.4 = (MkEnv)            l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %35.5 = FrameState         R     0x55804ebda4e0+21: [%0.5], env=e35.4
  void                    Deopt              !v    %35.5, %35.3, %35.1
BB40   <- [18]
  prom-           %40.0 = MkArg                    unboundValue, [0x55804e304600]_p4, e36.2
  prom-           %40.1 = MkArg                    unboundValue, [0x55804e304600]_p5, e36.2
  val?            %40.2 = StaticCall         !v    exists[0x55804fbd3e20](%40.0, missingArg, %40.1, missingArg, "function") { 0 2n 4n } e36.2   <lgl$->
  lgl$#-          %40.3 = IsType                   %40.2 isA lgl$-
  void                    Branch                   %40.3 -> BB44 (if true) | BB45 (if false)
BB41   <- [18]
  void                    Nop                !     
  val?^ | miss    %41.1 = %18.0
  dr              %41.2 = CallTarget@0x55804e0a05d0[Call#14]
  goto BB35
BB11   <- [3]
  val?^ | miss    %11.0 = LdVar              eR    exists, <env 0x55804e699488>
  lgl$#-          %11.1 = Identical                %11.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %11.1 -> BB38 (if true) | BB39 (if false)
BB6   <- [3]
  lgl             %6.0  = Eq                 wed   %0.4, "<<-", elided   <val?_>
  lgl$#-          %6.1  = CheckTrueFalse     we    %6.0
  void                    Branch                   %6.1 -> BB10 (if true) | BB7 (if false)
BB44   <- [40]
  lgl$-           %44.0 = CastType           d     dn %40.2
  lgl$#-          %44.1 = CheckTrueFalse     e     %44.0
  void                    Branch                   %44.1 -> BB22 (if true) | BB21 (if false)
BB45   <- [40]
  void                    Nop                !     
  val?            %45.1 = %40.2
  dr              %45.2 = Typecheck@0x55804e0a05d0[Type#41]
  goto BB19
BB38   <- [11]
  prom-           %38.0 = MkArg                    unboundValue, [0x55804e304600]_p0, e36.2
  prom-           %38.1 = MkArg                    unboundValue, [0x55804e304600]_p1, e36.2
  val?            %38.2 = StaticCall         !v    exists[0x55804fad0a50](%38.0, %38.1) e36.2   <lgl$->
  lgl$#-          %38.3 = IsType                   %38.2 isA lgl$-
  void                    Branch                   %38.3 -> BB42 (if true) | BB43 (if false)
BB39   <- [11]
  fs              %39.0 = FrameState         R     0x55804ebda4e0+59: [%3.1], env=e36.2
  void                    Deopt              !v    %39.0, CallTarget@0x55804e0a05d0[Call#6], %11.0
BB10   <- [6]
  (cls|spec|blt)  %10.0 = LdFun              !v    exists, <env 0x55804e699488>
  fs              %10.1 = FrameState         R     0x55804ebda4e0+112: [%10.0], env=e36.2
  void                    Deopt              !v    %10.1, DeadCall@0x55804e0a05d0[Call#0], %10.0
BB7   <- [6]
  void                    Invisible          v     
  goto BB8
BB22   <- [44]
  val?^ | miss    %22.0 = LdVar              eR    get, e36.2
  lgl$#-          %22.1 = Identical                %22.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %22.1 -> BB46 (if true) | BB47 (if false)
BB21   <- [44]
  (cls|spec|blt)  %21.0 = LdFun              !v    suppressVar, e36.2
  fs              %21.1 = FrameState         R     0x55804ebda4e0+519: [%21.0], env=e36.2
  void                    Deopt              !v    %21.1, DeadCall@0x55804e0a05d0[Call#16], %21.0   !
BB19   <- [45, 47]
  val?^ | miss    %19.0 = Phi                      %45.1:BB45, %47.1:BB47
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %45.2:BB45, %47.2:BB47
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55804ebda4e0+503: [%40.2], env=e36.2
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB42   <- [38]
  lgl$-           %42.0 = CastType           d     dn %38.2
  lgl$-           %42.1 = Not                d     %42.0, elided
  lgl$-           %42.2 = AsLogical                %42.1
  lgl$#-          %42.3 = Identical                %42.2, false
  void                    Branch                   %42.3 -> BB15 (if true) | BB14 (if false)
BB43   <- [38]
  fs              %43.0 = FrameState         R     0x55804ebda4e0+289: [%38.2], env=e36.2
  void                    Deopt              !v    %43.0, Typecheck@0x55804e0a05d0[Type#23], %38.2   !
BB8   <- [16, 7]
  void                    Nop                !     
  nil-            %8.1  = nil
  goto BB9
BB46   <- [22]
  prom-           %46.0 = MkArg                    unboundValue, [0x55804e304600]_p8, e36.2
  prom-           %46.1 = MkArg                    unboundValue, [0x55804e304600]_p9, e36.2
  val?            %46.2 = StaticCall         !v    get[0x55804f4bf3d0](%46.0, missingArg, %46.1, "function") { 0 2n 3n } e36.2   <val?->
  void                    StVar              lW    def, %46.2, e36.2
  val?^ | miss    %46.4 = LdVar              eR    typeof, e36.2
  lgl$#-          %46.5 = Identical                %46.4, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %46.5 -> BB48 (if true) | BB49 (if false)
BB47   <- [22]
  void                    Nop                !     
  val?^ | miss    %47.1 = %22.0
  dr              %47.2 = CallTarget@0x55804e0a05d0[Call#22]
  goto BB19
BB15   <- [42]
  lgl$#-          %15.0 = CheckTrueFalse     e     %42.2
  void                    Branch                   %15.0 -> BB17 (if true) | BB16 (if false)
BB14   <- [42]
  (cls|spec|blt)  %14.0 = LdFun              !v    suppressVar, e36.2
  fs              %14.1 = FrameState         R     0x55804ebda4e0+307: [%42.2, %14.0], env=e36.2
  void                    Deopt              !v    %14.1, DeadCall@0x55804e0a05d0[Call#8], %14.0   !
BB9   <- [8, 54, 56]
  val?            %9.0  = Phi                      %8.1:BB8, %56.1:BB56, %54.1:BB54
  val?            %9.1  = %9.0
  void                    Return             l     %9.1
BB48   <- [46]
  val             %48.0 = ChkMissing         e     %46.2
  str$-           %48.1 = CallSafeBuiltin    wed   typeof(%46.2)    <str$->
  void                    Visible            v     
  lgl$-           %48.3 = Eq                 vd    %48.1, "closure", elided   <lgl$->
  lgl$#-          %48.4 = CheckTrueFalse     e     %48.3
  void                    Branch                   %48.4 -> BB32 (if true) | BB27 (if false)
BB49   <- [46]
  fs              %49.0 = FrameState         R     0x55804ebda4e0+727: [], env=e36.2
  void                    Deopt              !v    %49.0, CallTarget@0x55804e0a05d0[Call#24], %46.4   !
BB17   <- [15]
  (cls|spec|blt)  %17.0 = LdFun              !v    $, e36.2
  fs              %17.1 = FrameState         R     0x55804ebda4e0+369: [%17.0], env=e36.2
  void                    Deopt              !v    %17.1, DeadCall@0x55804e0a05d0[Call#10], %17.0   !
BB16   <- [15]
  void                    Invisible          v     
  goto BB8
BB32   <- [48]
  val?^ | miss    %32.0 = LdVar              eR    checkCall, e36.2
  lgl$#-          %32.1 = Identical                %32.0, function(def, call, signal=warning0) <(rir::Di|...
  void                    Branch                   %32.1 -> BB50 (if true) | BB51 (if false)
BB27   <- [48]
  void                    Visible            v     
  lgl$-           %27.1 = Eq                 vd    %48.1, "builtin", elided   <lgl$->
  void                    StVar              lW    isBuiltin, %27.1, e36.2
  val?^ | miss    %27.3 = LdVar              eR    checkPrimopCall, e36.2
  lgl$#-          %27.4 = Identical                %27.3, function(fn, e, isBuiltin, signal=warning0) <(|...
  void                    Branch                   %27.4 -> BB52 (if true) | BB53 (if false)
BB50   <- [32]
  prom-           %50.0 = MkArg                    unboundValue, [0x55804e304600]_p18 (!refl), e36.2
  prom-           %50.1 = MkArg                    unboundValue, [0x55804e304600]_p19, e36.2
  cls             %50.2 = MkCls                    @Prom(20)0, e36.2
  prom-           %50.3 = MkArg                    %50.2, [0x55804e304600]_p20 (!refl), e36.2
  val?            %50.4 = StaticCall         !     checkCall[0x55804f10a310](%50.0, %50.1, %50.3) e36.2   <lgl$->
  lgl$#-          %50.5 = IsType                   %50.4 isA lgl$-
  void                    Branch                   %50.5 -> BB54 (if true) | BB55 (if false)
BB51   <- [32]
  prom-           %51.0 = MkArg                    %46.2, [0x55804e304600]_p12 (!refl), e36.2
  val?~           %51.1 = CastType                 up %51.0
  fs              %51.2 = FrameState         R     0x55804ebda4e0+759: [], env=e36.2
  env             e51.3 = (MkEnv)            l     x=%51.1, parent=R_BaseNamespace, context 0
  fs              %51.4 = FrameState         R     0x55804e7773a0+27: [%48.1], env=e51.3, next=%51.2
  void                    Deopt              !v    %51.4, CallTarget@0x55804e0a05d0[Call#27], %32.0   !
BB52   <- [27]
  prom-           %52.0 = MkArg                    unboundValue, [0x55804e304600]_p14, e36.2
  prom-           %52.1 = MkArg                    unboundValue, [0x55804e304600]_p15, e36.2
  prom-           %52.2 = MkArg                    unboundValue, [0x55804e304600]_p16 (!refl), e36.2
  cls             %52.3 = MkCls                    @Prom(17)0, e36.2
  prom-           %52.4 = MkArg                    %52.3, [0x55804e304600]_p17 (!refl), e36.2
  val?            %52.5 = StaticCall         !     checkPrimopCall[0x55804f202620](%52.0, %52.1, %52.2, %52.4) e36.2   <lgl$->
  lgl$#-          %52.6 = IsType                   %52.5 isA lgl$-
  void                    Branch                   %52.6 -> BB56 (if true) | BB57 (if false)
BB53   <- [27]
  fs              %53.0 = FrameState         R     0x55804ebda4e0+840: [], env=e36.2
  void                    Deopt              !v    %53.0, CallTarget@0x55804e0a05d0[Call#26], %27.3   !
BB54   <- [50]
  void                    Nop                !     
  val?            %54.1 = %50.4
  goto BB9
BB55   <- [50]
  fs              %55.0 = FrameState         R     0x55804ebda4e0+939: [%50.4], env=e36.2
  void                    Deopt              !v    %55.0, Typecheck@0x55804e0a05d0[Type#72], %50.4   !
BB56   <- [52]
  void                    Nop                !     
  val?            %56.1 = %52.5
  goto BB9
BB57   <- [52]
  fs              %57.0 = FrameState         R     0x55804ebda4e0+887: [%52.5], env=e36.2
  void                    Deopt              !v    %57.0, Typecheck@0x55804e0a05d0[Type#69], %52.5   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804e304600]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804e304600]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804e304600]_p6, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804e304600]_p7, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804e304600]_p10, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804e304600]_p11, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isBuiltin, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    @Prom(17)0, e0.0
  void                    Return             l     %0.1
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    @Prom(20)0, e0.0
  void                    Return             l     %0.1

│ [0x55804e304600]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
