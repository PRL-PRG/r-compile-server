
┌──────────────────────────────────────────────────────────────────────────────┐
│ findLocalsList[0x55804fbbf7c0]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:                                                                  │
├────── Final PIR Version
findLocalsList[0x55804fbbf7c0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     elist=%0.0, envir(miss)=missingArg, parent=<env 0x55804e699488>, context 1
  prom-           %0.2  = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    envir, %0.3, e0.1
  cls             %0.5  = MkCls                    findLocalsList>collect@661, e0.1
  cls             %0.6  = MkCls                    findLocalsList>isLocal@686, e0.1
  val?^ | miss    %0.7  = LdVar              eR    c, <env 0x55804e699488>
  lgl$#-          %0.8  = Identical                <blt c>, %0.7   <true>
  void                    Branch                   %0.8 -> BB136 (if true) | BB137 (if false)
BB136   <- [0]
  str-            %136.0 = CallSafeBuiltin    wed   c("expression", "quote", "Quote", "local")    <str->
  void                    StVar              lW    localStopFuns, %136.0, e0.1
  val?^ | miss    %136.2 = LdVar              eR    is.character, <env 0x55804e699488>
  lgl$#-          %136.3 = Identical                <blt is.character>, %136.2   <true>
  void                    Branch                   %136.3 -> BB138 (if true) | BB139 (if false)
BB137   <- [0]
  fs              %137.0 = FrameState         R     0x55804e9bafc0+0: [], env=e0.1
  void                    Deopt              !v    %137.0, DeadBranchReached@0x55804ead21f8[Test#0], %0.8
BB138   <- [136]
  val?            %138.0 = Force!<lazy>       !v    %0.3, e0.1   <env->
  lgl$#-          %138.1 = CallSafeBuiltin    wed   is.character(%138.0)    <lgl$->
  void                    Branch                   %138.1 -> BB134 (if true) | BB7 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x55804e9bafc0+130: [], env=e0.1
  void                    Deopt              !v    %139.0, DeadBranchReached@0x55804ead21f8[Test#1], %136.3
BB134   <- [138]
  val?^ | miss    %134.0 = LdVar              eR    envir, e0.1
  val?            %134.1 = Force!             !v    %134.0, e0.1   <val?_>
  void                    StVar              lW    locals, %134.1, e0.1
  goto BB36
BB7   <- [138]
  val?^ | miss    %7.0  = LdVar              eR    localStopFuns, e0.1
  lgl$#-          %7.1  = IsType                   %7.0 isA val?~- | miss
  void                    Branch                   %7.1 -> BB140 (if true) | BB141 (if false)
BB36   <- [134, 202]
  val?^ | miss    %36.0 = LdVar              eR    c, e0.1
  lgl$#-          %36.1 = Identical                <blt c>, %36.0   <true>
  void                    Branch                   %36.1 -> BB142 (if true) | BB143 (if false)
BB140   <- [7]
  val?~- | miss   %140.0 = CastType           d     dn %7.0
  val?-           %140.1 = Force!<value>            %140.0,    <str->
  lgl$#-          %140.2 = IsType                   %140.1 isA val+   <true>
  void                    Branch                   %140.2 -> BB144 (if true) | BB145 (if false)
BB141   <- [7]
  void                    Nop                !     
  val?^ | miss    %141.1 = %7.0
  dr              %141.2 = Typecheck@0x55804ead21f8[Type#5]
  goto BB5
BB142   <- [36]
  str-            %142.0 = CallSafeBuiltin    wed   c("~", "<-", "=", "for", "function")    <str->
  void                    StVar              lW    specialSyntaxFuns, %142.0, e0.1
  val?^ | miss    %142.2 = LdVar              eR    unique, e0.1
  lgl$#-          %142.3 = Identical                %142.2, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %142.3 -> BB148 (if true) | BB149 (if false)
BB143   <- [36]
  fs              %143.0 = FrameState         R     0x55804e9bafc0+369: [], env=e0.1
  void                    Deopt              !v    %143.0, DeadBranchReached@0x55804ead21f8[Test#3], %36.1   !
BB144   <- [140]
  val?^ | miss    %144.0 = LdVar              eR    sapply, e0.1
  lgl$#-          %144.1 = Identical                %144.0, function(X, FUN, ..., simplify=TRUE, USE.NAMES|...
  void                    Branch                   %144.1 -> BB146 (if true) | BB147 (if false)
BB145   <- [140]
  void                    Nop                !     
  lgl$#-          %145.1 = %140.2
  dr              %145.2 = DeadBranchReached@0x55804ead21f8[Test#2]
  goto BB5
BB5   <- [141, 145, 147]
  val?^ | miss    %5.0  = Phi                      %141.1:BB141, %145.1:BB145, %147.1:BB147
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %141.2:BB141, %145.2:BB145, %147.2:BB147
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55804e9bafc0+221: [%138.1], env=e0.1
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB148   <- [142]
  (cls|spec|blt)  %148.0 = LdFun              !v    c, <0x55804bee1940>, e0.1
  lgl$#-          %148.1 = Identical                %148.0, <blt c>
  void                    Branch                   %148.1 -> BB150 (if true) | BB151 (if false)
BB149   <- [142]
  void                    Nop                !     
  val?^ | miss    %149.1 = %142.2
  dr              %149.2 = CallTarget@0x55804ead21f8[Call#5]
  goto BB39
BB146   <- [144]
  prom-           %146.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p1, e0.1
  prom-           %146.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p2, e0.1
  prom-           %146.2 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p3, e0.1
  dots-           %146.3 = DotsList           l     %146.2
  ct              %146.4 = PushContext        lCL   %146.0, %146.1, %146.3, sapply(localStopFuns, isBaseVar, envir), function(X, FUN, ..., simplify=TRUE, USE.NAMES|..., e0.1
  val?^           %146.5 = CastType                 up %146.1
  val?^           %146.6 = CastType                 up %146.0
  env             e146.7 = MkEnv              l     X=%146.6, FUN=%146.5, ...=%146.3, simplify(miss)=true, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %146.8 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p37, e146.7
  val?            %146.9 = StaticCall         !v    match.fun[0x55804f4ed100](%146.8) e146.7   <cls->
  void                    StVar              lW    FUN, %146.9, e146.7
  val?^ | miss    %146.11 = LdVar              eR    lapply, e146.7
  lgl$#-          %146.12 = Identical                %146.11, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %146.12 -> BB152 (if true) | BB153 (if false)
BB147   <- [144]
  void                    Nop                !     
  val?^ | miss    %147.1 = %144.0
  dr              %147.2 = CallTarget@0x55804ead21f8[Call#3]
  goto BB5
BB150   <- [148]
  val?^ | miss    %150.0 = LdVar              eR    locals, e0.1
  val?            %150.1 = Force!<value>      !v    %150.0, e0.1   <str$->
  val?^ | miss    %150.2 = LdVar              eR    localStopFuns, e0.1
  val?            %150.3 = Force!<value>      !v    %150.2, e0.1   <str->
  val?            %150.4 = CallBuiltin        !v    c(%150.1, %150.3) e0.1   <str->
  val?            %150.5 = StaticCall         !v    unique[0x55804ed10b50](%150.4) { 0 } e0.1   <str->
  void                    StVar              lW    sf, %150.5, e0.1
  lgl$#-          %150.7 = IsType                   %150.5 isA val?-
  val?^ | miss    %150.8 = LdVar              eR    length, e0.1
  lgl$#-          %150.9 = Identical                <blt length>, %150.8   <true>
  void                    Branch                   %150.9 -> BB154 (if true) | BB155 (if false)
BB151   <- [148]
  void                    Nop                !     
  (cls|spec|blt)  %151.1 = %148.0
  dr              %151.2 = CallTarget@0x55804ead21f8[Call#6]
  goto BB39
BB39   <- [149, 151]
  val?^ | miss    %39.0 = Phi                      %149.1:BB149, %151.1:BB151
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %149.2:BB149, %151.2:BB151
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55804e9bafc0+510: [], env=e0.1
  void                    Deopt              !v    %39.4, %39.3, %39.1   !
BB152   <- [146]
  prom-           %152.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p38, e146.7
  prom-           %152.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p39 (!refl), e146.7
  (miss|dots)     %152.2 = LdDots             R     , e146.7
  *dots-          %152.3 = ExpandDots               %152.2
  val?            %152.4 = NamedCall          !v    function(X, FUN, ...) <(rir::DispatchTable*)0x|...(X=%152.0, FUN=%152.1, .xpandDotsTrigger=%152.3) e146.7   <vec->
  void                    StVar              lW    answer, %152.4, e146.7
  val?^ | miss    %152.6 = LdVar              eR    USE.NAMES, e146.7
  val?            %152.7 = Force!<lazy>       !v    %152.6, e146.7   <lgl$->
  lgl$-           %152.8 = AsLogical          e     %152.7
  lgl$#-          %152.9 = Identical                %152.8, false
  void                    Branch                   %152.9 -> BB133 (if true) | BB12 (if false)
BB153   <- [146]
  fs              %153.0 = FrameState         R     0x55804e9bafc0+319: [%140.1], env=e0.1
  fs              %153.1 = FrameState         R     0x55804e7e0a40+46: [], env=e146.7, next=%153.0
  void                    Deopt              !v    %153.1, CallTarget@0x55804e65d750[Call#1], %146.11   !
BB154   <- [150]
  val             %154.0 = ChkMissing         e     %150.5
  void                    Branch                   %150.7 -> BB158 (if true) | BB159 (if false)
BB155   <- [150]
  void                    Nop                !     
  lgl$#-          %155.1 = %150.9
  dr              %155.2 = DeadBranchReached@0x55804ead21f8[Test#4]
  goto BB41
BB133   <- [152]
  void                    Nop                !     
  lgl$-           %133.1 = %152.8
  goto BB13
BB12   <- [152]
  val?^ | miss    %12.0 = LdVar              eR    is.character, e146.7
  lgl$#-          %12.1 = Identical                <blt is.character>, %12.0   <true>
  void                    Branch                   %12.1 -> BB156 (if true) | BB157 (if false)
BB158   <- [154]
  val?-           %158.0 = CastType           d     dn %150.5   <str->
  (int|real)$-    %158.1 = CallSafeBuiltin    wed   length(%158.0)    <int$->
  lgl$#-          %158.2 = IsType                   %158.1 isA int$-
  void                    Branch                   %158.2 -> BB162 (if true) | BB163 (if false)
BB159   <- [154]
  void                    Nop                !     
  val?            %159.1 = %150.5
  dr              %159.2 = Typecheck@0x55804ead21f8[Type#20]
  goto BB41
BB41   <- [155, 159]
  val?^ | miss    %41.0 = Phi                      %155.1:BB155, %159.1:BB159
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %155.2:BB155, %159.2:BB159
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x55804e9bafc0+556: [], env=e0.1
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB13   <- [133, 156]
  lgl$-           %13.0 = Phi                      %156.4:BB156, %133.1:BB133
  lgl$-           %13.1 = %13.0
  lgl$-           %13.2 = AsLogical                %13.1
  lgl$#-          %13.3 = Identical                %13.2, false
  void                    Branch                   %13.3 -> BB132 (if true) | BB16 (if false)
BB156   <- [12]
  val?^ | miss    %156.0 = LdVar              eR    X, e146.7
  val?            %156.1 = Force!<wrapped>    !v    %156.0, e146.7   <str->
  lgl$#-          %156.2 = CallSafeBuiltin    wed   is.character(%156.1)    <lgl$->
  lgl$-           %156.3 = LAnd                     %152.8, %156.2
  lgl$-           %156.4 = %156.3
  goto BB13
BB157   <- [12]
  fs              %157.0 = FrameState         R     0x55804e9bafc0+319: [%140.1], env=e0.1
  fs              %157.1 = FrameState         R     0x55804e7e0a40+123: [%152.7], env=e146.7, next=%157.0
  void                    Deopt              !v    %157.1, DeadBranchReached@0x55804e65d750[Test#0], %12.1   !
BB162   <- [158]
  int$-           %162.0 = CastType           d     dn %158.1
  void                    StVar              lW    nsf, %162.0, e0.1
  void                    StVar              lW    collect, %0.5, e0.1
  void                    StVar              lW    isLocal, %0.6, e0.1
  val?^ | miss    %162.4 = LdVar              eR    makeLocalsCollector, e0.1
  lgl$#-          %162.5 = Identical                %162.4, function(..., leaf=function(<lst e=R_MissingAr|...
  void                    Branch                   %162.5 -> BB164 (if true) | BB165 (if false)
BB163   <- [158]
  fs              %163.0 = FrameState         R     0x55804e9bafc0+647: [%158.1], env=e0.1
  void                    Deopt              !v    %163.0, Typecheck@0x55804ead21f8[Type#23], %158.1   !
BB132   <- [13]
  void                    Nop                !     
  lgl$-           %132.1 = %13.2
  goto BB17
BB16   <- [13]
  val?^ | miss    %16.0 = LdVar              eR    names, e146.7
  lgl$#-          %16.1 = Identical                <blt names>, %16.0   <true>
  void                    Branch                   %16.1 -> BB160 (if true) | BB161 (if false)
BB164   <- [162]
  prom-           %164.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p12 (!refl), e0.1
  prom-           %164.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p13 (!refl), e0.1
  ct              %164.2 = PushContext        lCL   missingArg, missingArg, missingArg, %164.1, missingArg, %164.0, makeLocalsCollector(collect=collect, isLocal=i|..., function(..., leaf=function(<lst e=R_MissingAr|..., e0.1
  val?^           %164.3 = CastType                 up %164.0
  val?^           %164.4 = CastType                 up %164.1
  env             e164.5 = MkEnv              l     ...(miss)=missingArg, leaf(miss)=missingArg, handler(miss)=missingArg, isLocal=%164.4, exit(miss)=missingArg, collect=%164.3, parent=<env 0x55804e699488>, context 1
  cls             %164.6 = MkCls                    makeLocalsCollector@Prom(0)0, e164.5
  prom-           %164.7 = MkArg                    %164.6, findLocalsList[0x55804fbbf7c0]_p44 (!refl), e164.5
  val?^ | miss    %164.8 = CastType                 up %164.7
  void                    StArg              lW    leaf, %164.8, e164.5
  prom-           %164.10 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p45, e164.5
  val?^ | miss    %164.11 = CastType                 up %164.10
  void                    StArg              lW    handler, %164.11, e164.5
  cls             %164.13 = MkCls                    makeLocalsCollector@Prom(3)0, e164.5
  prom-           %164.14 = MkArg                    %164.13, findLocalsList[0x55804fbbf7c0]_p47 (!refl), e164.5
  val?^ | miss    %164.15 = CastType                 up %164.14
  void                    StArg              lW    exit, %164.15, e164.5
  val?^ | miss    %164.17 = LdVar              eR    makeCodeWalker, <env 0x55804e699488>
  lgl$#-          %164.18 = Identical                %164.17, function(..., handler=function(<lst v=R_Missin|...
  void                    Branch                   %164.18 -> BB170 (if true) | BB171 (if false)
BB165   <- [162]
  fs              %165.0 = FrameState         R     0x55804e9bafc0+711: [], env=e0.1
  void                    Deopt              !v    %165.0, CallTarget@0x55804ead21f8[Call#8], %162.4   !
BB17   <- [132, 166]
  lgl$-           %17.0 = Phi                      %166.6:BB166, %132.1:BB132
  lgl$-           %17.1 = %17.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB129 (if true) | BB18 (if false)
BB160   <- [16]
  val?^ | miss    %160.0 = LdVar              eR    answer, e146.7
  lgl$#-          %160.1 = IsType                   %160.0 isA val?~- | miss
  void                    Branch                   %160.1 -> BB166 (if true) | BB167 (if false)
BB161   <- [16]
  void                    Nop                !     
  lgl$#-          %161.1 = %16.1
  dr              %161.2 = DeadBranchReached@0x55804e65d750[Test#1]
  goto BB14
BB170   <- [164]
  prom-           %170.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p49 (!refl), e164.5
  prom-           %170.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p50, e164.5
  prom-           %170.2 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p51, e164.5
  prom-           %170.3 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p52, e164.5
  prom-           %170.4 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p53 (!refl), e164.5
  dots-           %170.5 = DotsList           l     collect=%170.2, isLocal=%170.3, exit=%170.4
  ct              %170.6 = PushContext        lCL   %170.5, %170.1, missingArg, %170.0, makeCodeWalker(leaf=leaf, handler=handler, col|..., function(..., handler=function(<lst v=R_Missin|..., e164.5
  val?^           %170.7 = CastType                 up %170.0
  val?^           %170.8 = CastType                 up %170.1
  env             e170.9 = MkEnv              l     ...=%170.5, handler=%170.8, call(miss)=missingArg, leaf=%170.7, parent=<env 0x55804e699488>, context 1
  cls             %170.10 = MkCls                    , e170.9
  prom-           %170.11 = MkArg                    %170.10, findLocalsList[0x55804fbbf7c0]_p55 (!refl), e170.9
  val?^ | miss    %170.12 = CastType                 up %170.11
  void                    StArg              lW    call, %170.12, e170.9
  (cls|spec|blt)  %170.14 = LdFun              !v    list, <0x55804bef55c0>, <env 0x55804e699488>
  prom-           %170.15 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p57, e170.9
  prom-           %170.16 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p58 (!refl), e170.9
  prom-           %170.17 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p59, e170.9
  val?            %170.18 = NamedCall          !v    %170.14(handler=%170.15, call=%170.16, leaf=%170.17, collect=%170.2, isLocal=%170.3, exit=%170.4) e170.9   <vec+>
  val?            %170.19 = PopContext         C     %170.18, %170.6   <vec+>
  val?            %170.20 = PopContext         C     %170.19, %164.2   <vec+>
  void                    StVar              lW    w, %170.20, e0.1
  goto BB49
BB171   <- [164]
  fs              %171.0 = FrameState         R     0x55804e9bafc0+756: [], env=e0.1
  fs              %171.1 = FrameState         R     0x55804ecfd130+0: [], env=e164.5, next=%171.0
  void                    Deopt              !v    %171.1, CallTarget@0x55804e8697b0[Call#0], %164.17   !
BB129   <- [17]
  val?^ | miss    %129.0 = LdVar              eR    X, e146.7
  val?            %129.1 = Force!<wrapped>    !v    %129.0, e146.7   <str->
  (cls|spec|blt)  %129.2 = LdFun              !v    names<-, <0x55804bee1438>, e146.7
  val?^ | miss    %129.3 = LdVar              eR    answer, e146.7
  lgl$#-          %129.4 = IsType                   %129.3 isA val?~- | miss
  void                    Branch                   %129.4 -> BB168 (if true) | BB169 (if false)
BB18   <- [17]
  void                    Nop                !     
  goto BB19
BB166   <- [160]
  val?~- | miss   %166.0 = CastType           d     dn %160.0
  val?-           %166.1 = Force!<value>            %166.0,    <vec->
  val+            %166.2 = CallSafeBuiltin    wed   names(%166.1)    <nil->
  lgl$-           %166.3 = Is                       %166.2, NULL
  lgl$-           %166.4 = AsLogical                %166.3
  lgl$-           %166.5 = LAnd                     %13.2, %166.4
  lgl$-           %166.6 = %166.5
  goto BB17
BB167   <- [160]
  void                    Nop                !     
  val?^ | miss    %167.1 = %160.0
  dr              %167.2 = Typecheck@0x55804e65d750[Type#10]
  goto BB14
BB14   <- [161, 167]
  val?^ | miss    %14.0 = Phi                      %161.1:BB161, %167.1:BB167
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %161.2:BB161, %167.2:BB167
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55804e9bafc0+319: [%140.1], env=e0.1
  fs              %14.5 = FrameState         R     0x55804e7e0a40+233: [%13.1], env=e146.7, next=%14.4
  void                    Deopt              !v    %14.5, %14.3, %14.1   !
BB49   <- [105, 170]
  val?^ | miss    %49.0 = LdVar              eR    mkHash, e0.1
  lgl$#-          %49.1 = Identical                %49.0, function() <(rir::DispatchTable*)0x55804ed28dd|...
  void                    Branch                   %49.1 -> BB174 (if true) | BB175 (if false)
BB168   <- [129]
  val?~- | miss   %168.0 = CastType           d     dn %129.3
  val?-           %168.1 = Force!<value>            %168.0,    <vec->
  val?            %168.2 = NamedCall          !v    %129.2(%168.1, value=%129.1) e146.7
  void                    StVar              lW    answer, %168.2, e146.7
  goto BB19
BB169   <- [129]
  fs              %169.0 = FrameState         R     0x55804e9bafc0+319: [%140.1], env=e0.1
  fs              %169.1 = FrameState         R     0x55804e7e0a40+368: [%129.1], env=e146.7, next=%169.0
  void                    Deopt              !v    %169.1, Typecheck@0x55804e65d750[Type#13], %129.3   !
BB19   <- [18, 168]
  val?^ | miss    %19.0 = LdVar              eR    isFALSE, e146.7
  lgl$#-          %19.1 = Identical                %19.0, function(x) <(rir::DispatchTable*)0x55804e8d48|...
  void                    Branch                   %19.1 -> BB172 (if true) | BB173 (if false)
BB174   <- [49]
  env             e174.0 = MkEnv              l     parent=<env 0x55804e699488>, context 0
  val?^ | miss    %174.1 = LdVar              eR    new.env, e174.0
  lgl$#-          %174.2 = Identical                %174.1, function(hash=TRUE, parent=parent.frame(), siz|...
  void                    Branch                   %174.2 -> BB176 (if true) | BB177 (if false)
BB175   <- [49]
  void                    Nop                !     
  val?^ | miss    %175.1 = %49.0
  dr              %175.2 = CallTarget@0x55804ead21f8[Call#9]
  goto BB50
BB172   <- [19]
  val?^ | miss    %172.0 = LdVar              eR    simplify, e146.7
  val?            %172.1 = Force!<lazy>       !v    %172.0, e146.7   <lgl$->
  prom-           %172.2 = MkArg                    %172.1, findLocalsList[0x55804fbbf7c0]_p41 (!refl), e146.7
  val?~           %172.3 = CastType                 up %172.2
  val+            %172.4 = CallSafeBuiltin    wed   is.logical(%172.1)    <lgl$->
  lgl$#-          %172.5 = IsType                   %172.4 isA lgl$-
  void                    Branch                   %172.5 -> BB178 (if true) | BB179 (if false)
BB173   <- [19]
  fs              %173.0 = FrameState         R     0x55804e9bafc0+319: [%140.1], env=e0.1
  fs              %173.1 = FrameState         R     0x55804e7e0a40+436: [], env=e146.7, next=%173.0
  void                    Deopt              !v    %173.1, CallTarget@0x55804e65d750[Call#5], %19.0   !
BB176   <- [174]
  prom-           %176.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p60, e174.0
  val?^           %176.1 = CastType                 up %176.0
  val?^ | miss    %176.2 = LdVar              eR    .EmptyEnv, e174.0
  env             e176.3 = (MkEnv)            l     hash=true, parent=%176.1, size(miss)=29L, parent=R_BaseNamespace, context -1
  val?            %176.4 = Force!<wrapped>    !vL   %176.2, e176.3   <env->
  prom-           %176.5 = MkArg                    %176.4, findLocalsList[0x55804fbbf7c0]_p60 (!refl), e174.0
  val?~           %176.6 = CastType                 up %176.5
  void                    StArg              lWd   parent, %176.6, e176.3
  lgl$#-          %176.8 = IsType                   %176.4 isA val?+
  lgl$#-          %176.9 = IsEnvStub          R     , e176.3
  void                    Branch                   %176.9 -> BB182 (if true) | BB183 (if false)
BB177   <- [174]
  void                    Nop                !     
  val?^ | miss    %177.1 = %174.1
  dr              %177.2 = CallTarget@0x55804ead14e8[Call#0]
  goto BB50
BB50   <- [175, 177]
  val?^ | miss    %50.0 = Phi                      %175.1:BB175, %177.1:BB177
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %175.2:BB175, %177.2:BB177
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55804e9bafc0+770: [], env=e0.1
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB178   <- [172]
  lgl$-           %178.0 = CastType           d     dn %172.4
  lgl$-           %178.1 = AsLogical                %178.0
  lgl$#-          %178.2 = Identical                %178.1, false
  env             e178.3 = (MkEnv)            l     x=%172.3, parent=R_BaseNamespace, context 0
  void                    Branch                   %178.2 -> BB128 (if true) | BB24 (if false)
BB179   <- [172]
  void                    Nop                !     
  val+            %179.1 = %172.4
  dr              %179.2 = Typecheck@0x55804ead2098[Type#2]
  goto BB22
BB182   <- [176]
  void                    Branch                   %176.8 -> BB186 (if true) | BB187 (if false)
BB183   <- [176]
  void                    Nop                !     
  env             e183.1 = e176.3
  dr              %183.2 = EnvStubMaterialized@0x55804e0c4330[Call#unknown]
  goto BB52
BB128   <- [178]
  void                    Nop                !     
  lgl$-           %128.1 = %178.1
  goto BB25
BB24   <- [178]
  val?^ | miss    %24.0 = LdVar              eRd   length, R_BaseNamespace
  lgl$#-          %24.1 = Identical                <blt length>, %24.0   <true>
  void                    Branch                   %24.1 -> BB180 (if true) | BB181 (if false)
BB22   <- [179, 181, 185, 191, 197]
  val?^ | miss    %22.0 = Phi                      %179.1:BB179, %181.1:BB181, %185.1:BB185, %191.1:BB191, %197.1:BB197
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %179.2:BB179, %181.2:BB181, %185.2:BB185, %191.2:BB191, %197.2:BB197
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55804e9bafc0+319: [%140.1], env=e0.1
  fs              %22.5 = FrameState         R     0x55804e7e0a40+468: [], env=e146.7, next=%22.4
  env             e22.6 = (MkEnv)            l     x=%172.3, parent=R_BaseNamespace, context 0
  fs              %22.7 = FrameState         R     0x55804c1cd3e0+91: [%172.4], env=e22.6, next=%22.5
  void                    Deopt              !v    %22.7, %22.3, %22.1   !
BB186   <- [182]
  val?+           %186.0 = CastType           d     dn %176.4   <env+>
  val+            %186.1 = CallSafeBuiltin    wed   new.env(true, %186.0, 29L)    <env->
  void                    StVar              lW    env, %186.1, e0.1
  val?^ | miss    %186.3 = LdVar              eR    elist, e0.1
  val?            %186.4 = Force!<lazy>       !v    %186.3, e0.1   <vec+>
  val?+           %186.5 = ToForSeq           e     %186.4
  int$-           %186.6 = Length                   %186.5
  int$-           %186.7 = Inc                      0L
  lgl$-           %186.8 = Lt                 d     %186.6, %186.7, elided   <false>
  lgl$#-          %186.9 = Identical                %186.8, true
  void                    Branch                   %186.9 -> BB189 (if true) | BB188 (if false)
BB187   <- [182]
  void                    Nop                !     
  val?            %187.1 = %176.4
  dr              %187.2 = Typecheck@0x55804e0c4330[Type#2]
  goto BB52
BB52   <- [183, 187]
  val?^ | miss    %52.0 = Phi                      e183.1:BB183, %187.1:BB187
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %183.2:BB183, %187.2:BB187
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x55804e9bafc0+797: [], env=e0.1
  fs              %52.5 = FrameState         R     0x55804ed28cc0+45: [], env=e174.0, next=%52.4
  fs              %52.6 = FrameState         R     0x55804e232740+23: [true, %176.4], env=e176.3, next=%52.5
  void                    Deopt              !v    %52.6, %52.3, %52.1   !
BB25   <- [128, 184]
  lgl$-           %25.0 = Phi                      %184.1:BB184, %128.1:BB128
  lgl$-           %25.1 = %25.0
  lgl$-           %25.2 = AsLogical                %25.1
  lgl$#-          %25.3 = Identical                %25.2, false
  void                    Branch                   %25.3 -> BB127 (if true) | BB26 (if false)
BB180   <- [24]
  lgl$#-          %180.0 = IsType                   %172.1 isA lgl$-
  void                    Branch                   %180.0 -> BB184 (if true) | BB185 (if false)
BB181   <- [24]
  void                    Nop                !     
  lgl$#-          %181.1 = %24.1
  dr              %181.2 = DeadBranchReached@0x55804ead2098[Test#1]
  goto BB22
BB189   <- [186]
  fs              %189.0 = FrameState         R     0x55804e9bafc0+820: [%186.4], env=e0.1
  void                    Deopt              !v    %189.0, DeadBranchReached@0x55804ead21f8[Test#5], %186.9   !
BB188   <- [186]
  val?            %188.0 = Extract2_1D        wed   %186.5, %186.7, elided
  void                    StVar              lW    e, %188.0, e0.1
  val?^ | miss    %188.2 = LdVar              eR    walkCode, e0.1
  lgl$#-          %188.3 = Identical                %188.2, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %188.3 -> BB192 (if true) | BB193 (if false)
BB127   <- [25]
  void                    Nop                !     
  lgl$-           %127.1 = %25.2
  goto BB27
BB26   <- [25]
  val?^ | miss    %26.0 = LdVar              eRd   is.na, R_BaseNamespace
  lgl$#-          %26.1 = Identical                <blt is.na>, %26.0   <true>
  void                    Branch                   %26.1 -> BB190 (if true) | BB191 (if false)
BB184   <- [180]
  lgl$-           %184.0 = AsLogical                %178.1
  lgl$-           %184.1 = %184.0
  goto BB25
BB185   <- [180]
  void                    Nop                !     
  val?            %185.1 = %172.1
  dr              %185.2 = Typecheck@0x55804ead2098[Type#4]
  goto BB22
BB192   <- [188]
  prom-           %192.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p14 (!refl), e0.1
  prom-           %192.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p15, e0.1
  val?            %192.2 = StaticCall         !v    walkCode[0x55804eeafb30](%192.0, %192.1) e0.1
  int$-           %192.3 = %186.7
  goto BB58
BB193   <- [188]
  fs              %193.0 = FrameState         R     0x55804e9bafc0+865: [%186.5, %186.6, %186.7], env=e0.1
  void                    Deopt              !v    %193.0, CallTarget@0x55804ead21f8[Call#10], %188.2   !
BB27   <- [127, 196]
  lgl$-           %27.0 = Phi                      %196.5:BB196, %127.1:BB127
  lgl$-           %27.1 = %27.0
  lgl$-           %27.2 = AsLogical                %27.1
  lgl$#-          %27.3 = Identical                %27.2, false
  void                    Branch                   %27.3 -> BB126 (if true) | BB30 (if false)
BB190   <- [26]
  lgl$#-          %190.0 = IsType                   %172.1 isA lgl$-
  void                    Branch                   %190.0 -> BB196 (if true) | BB197 (if false)
BB191   <- [26]
  void                    Nop                !     
  lgl$#-          %191.1 = %26.1
  dr              %191.2 = DeadBranchReached@0x55804ead2098[Test#2]
  goto BB22
BB58   <- [192, 208]
  int$-           %58.0 = Phi                      %192.3:BB192, %208.3:BB208
  int$-           %58.1 = %58.0
  int$-           %58.2 = Inc                      %58.1
  lgl$-           %58.3 = Lt                 d     %186.6, %58.2, elided
  lgl$#-          %58.4 = Identical                %58.3, true
  void                    Branch                   %58.4 -> BB64 (if true) | BB61 (if false)
BB126   <- [27]
  void                    Nop                !     
  lgl$-           %126.1 = %27.2
  goto BB31
BB30   <- [27]
  lgl$#-          %30.0 = IsType                   %172.1 isA lgl$-
  void                    Branch                   %30.0 -> BB194 (if true) | BB195 (if false)
BB196   <- [190]
  lgl$-           %196.0 = CastType           d     dn %172.1
  lgl$-           %196.1 = CallSafeBuiltin    wed   is.na(%196.0)    <lgl$->
  lgl$-           %196.2 = Not                d     %196.1, elided
  lgl$-           %196.3 = AsLogical                %196.2
  lgl$-           %196.4 = LAnd                     %25.2, %196.3
  lgl$-           %196.5 = %196.4
  goto BB27
BB197   <- [190]
  void                    Nop                !     
  val?            %197.1 = %172.1
  dr              %197.2 = Typecheck@0x55804ead2098[Type#8]
  goto BB22
BB64   <- [58]
  val?^ | miss    %64.0 = LdVar              eR    sapply, e0.1
  lgl$#-          %64.1 = Identical                %64.0, function(X, FUN, ..., simplify=TRUE, USE.NAMES|...
  void                    Branch                   %64.1 -> BB198 (if true) | BB199 (if false)
BB61   <- [58]
  val?            %61.0 = Extract2_1D        wed   %186.5, %58.2, elided
  void                    StVar              lW    e, %61.0, e0.1
  val?^ | miss    %61.2 = LdVar              eR    walkCode, e0.1
  lgl$#-          %61.3 = Identical                %61.2, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %61.3 -> BB208 (if true) | BB209 (if false)
BB31   <- [126, 194]
  lgl$-           %31.0 = Phi                      %194.4:BB194, %126.1:BB126
  lgl$-           %31.1 = %31.0
  lgl$-           %31.2 = Not                d     %31.1, elided
  lgl$#-          %31.3 = CheckTrueFalse     e     %31.2
  void                    Branch                   %31.3 -> BB125 (if true) | BB32 (if false)
BB194   <- [30]
  lgl$-           %194.0 = CastType           d     dn %172.1
  lgl$-           %194.1 = Not                d     %194.0, elided
  lgl$-           %194.2 = AsLogical                %194.1
  lgl$-           %194.3 = LAnd                     %27.2, %194.2
  lgl$-           %194.4 = %194.3
  goto BB31
BB195   <- [30]
  fs              %195.0 = FrameState         R     0x55804e9bafc0+319: [%140.1], env=e0.1
  fs              %195.1 = FrameState         R     0x55804e7e0a40+468: [], env=e146.7, next=%195.0
  fs              %195.2 = FrameState         R     0x55804c1cd3e0+319: [%27.1], env=e178.3, next=%195.1
  void                    Deopt              !v    %195.2, Typecheck@0x55804ead2098[Type#10], %172.1   !
BB198   <- [64]
  prom-           %198.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p18, e0.1
  prom-           %198.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p19, e0.1
  prom-           %198.2 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p20, e0.1
  dots-           %198.3 = DotsList           l     envir=%198.2, inherits=false
  ct              %198.4 = PushContext        lCL   %198.0, %198.1, %198.3, sapply(sf, exists, envir=env, inherits=FALSE), function(X, FUN, ..., simplify=TRUE, USE.NAMES|..., e0.1
  val?^           %198.5 = CastType                 up %198.1
  val?^           %198.6 = CastType                 up %198.0
  env             e198.7 = MkEnv              l     X=%198.6, FUN=%198.5, ...=%198.3, simplify(miss)=true, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  val?^ | miss    %198.8 = LdVar              eR    match.fun, e198.7
  lgl$#-          %198.9 = Identical                %198.8, function(FUN, descend=TRUE) <(rir::DispatchTab|...
  void                    Branch                   %198.9 -> BB200 (if true) | BB201 (if false)
BB199   <- [64]
  fs              %199.0 = FrameState         R     0x55804e9bafc0+903: [%186.5, %186.6, %58.1], env=e0.1
  void                    Deopt              !v    %199.0, CallTarget@0x55804ead21f8[Call#12], %64.0   !
BB208   <- [61]
  prom-           %208.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p16 (!refl), e0.1
  prom-           %208.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p17, e0.1
  val?            %208.2 = StaticCall         !v    walkCode[0x55804eeafb30](%208.0, %208.1) e0.1
  int$-           %208.3 = %58.2
  goto BB58
BB209   <- [61]
  fs              %209.0 = FrameState         R     0x55804e9bafc0+932: [%186.5, %186.6, %58.2], env=e0.1
  void                    Deopt              !v    %209.0, CallTarget@0x55804ead21f8[Call#11], %61.2   !
BB125   <- [31]
  (cls|spec|blt)  %125.0 = LdFun              !v    simplify2array, <0x55804cf9a438>, e146.7
  prom-           %125.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p42, e146.7
  prom-           %125.2 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p43, e146.7
  val?            %125.3 = NamedCall          !v    %125.0(%125.1, higher=%125.2) e146.7   <lgl+>
  val?            %125.4 = %125.3
  goto BB33
BB32   <- [31]
  val?^ | miss    %32.0 = LdVar              eR    answer, e146.7
  val?            %32.1 = Force!             !v    %32.0, e146.7   <val?_>
  val?            %32.2 = %32.1
  goto BB33
BB200   <- [198]
  prom-           %200.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p64, e198.7
  val?            %200.1 = StaticCall         !v    match.fun[0x55804f4ed100](%200.0) e198.7   <cls->
  void                    StVar              lW    FUN, %200.1, e198.7
  val?^ | miss    %200.3 = LdVar              eR    lapply, e198.7
  lgl$#-          %200.4 = Identical                %200.3, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %200.4 -> BB204 (if true) | BB205 (if false)
BB201   <- [198]
  fs              %201.0 = FrameState         R     0x55804e9bafc0+1043: [], env=e0.1
  env             e201.1 = (MkEnv)            l     X=%198.6, FUN=%198.5, ...=%198.3, simplify(miss)=true, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  fs              %201.2 = FrameState         R     0x55804e7e0a40+0: [], env=e201.1, next=%201.0
  void                    Deopt              !v    %201.2, CallTarget@0x55804e65d750[Call#0], %198.8   !
BB33   <- [32, 125]
  val?            %33.0 = Phi                      %32.2:BB32, %125.4:BB125
  val?            %33.1 = %33.0
  val?            %33.2 = PopContext         C     %33.1, %146.4   <lgl+>
  lgl$#-          %33.3 = IsType                   %33.2 isA lgl+
  void                    Branch                   %33.3 -> BB202 (if true) | BB203 (if false)
BB204   <- [200]
  prom-           %204.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p65, e198.7
  prom-           %204.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p66 (!refl), e198.7
  (miss|dots)     %204.2 = LdDots             R     , e198.7
  *dots-          %204.3 = ExpandDots               %204.2
  val?            %204.4 = NamedCall          !v    function(X, FUN, ...) <(rir::DispatchTable*)0x|...(X=%204.0, FUN=%204.1, .xpandDotsTrigger=%204.3) e198.7   <vec->
  void                    StVar              lW    answer, %204.4, e198.7
  val?^ | miss    %204.6 = LdVar              eR    USE.NAMES, e198.7
  val?            %204.7 = Force!<lazy>       !v    %204.6, e198.7   <lgl$->
  lgl$-           %204.8 = AsLogical          e     %204.7
  lgl$#-          %204.9 = Identical                %204.8, false
  void                    Branch                   %204.9 -> BB124 (if true) | BB71 (if false)
BB205   <- [200]
  fs              %205.0 = FrameState         R     0x55804e9bafc0+1043: [], env=e0.1
  fs              %205.1 = FrameState         R     0x55804e7e0a40+46: [], env=e198.7, next=%205.0
  void                    Deopt              !v    %205.1, CallTarget@0x55804e65d750[Call#1], %200.3   !
BB202   <- [33]
  lgl+            %202.0 = CastType           d     dn %33.2
  lgl             %202.1 = Not                wed   %202.0, elided
  val?            %202.2 = Extract1_1D        wed   %140.1, %202.1, e0.1   <str$->
  void                    StVar              lW    locals, %202.2, e0.1
  goto BB36
BB203   <- [33]
  fs              %203.0 = FrameState         R     0x55804e9bafc0+319: [%140.1, %33.2], env=e0.1
  void                    Deopt              !v    %203.0, Typecheck@0x55804ead21f8[Type#13], %33.2   !
BB124   <- [204]
  void                    Nop                !     
  lgl$-           %124.1 = %204.8
  goto BB72
BB71   <- [204]
  val?^ | miss    %71.0 = LdVar              eR    is.character, e198.7
  lgl$#-          %71.1 = Identical                <blt is.character>, %71.0   <true>
  void                    Branch                   %71.1 -> BB206 (if true) | BB207 (if false)
BB72   <- [124, 206]
  lgl$-           %72.0 = Phi                      %206.4:BB206, %124.1:BB124
  lgl$-           %72.1 = %72.0
  lgl$-           %72.2 = AsLogical                %72.1
  lgl$#-          %72.3 = Identical                %72.2, false
  void                    Branch                   %72.3 -> BB123 (if true) | BB75 (if false)
BB206   <- [71]
  val?^ | miss    %206.0 = LdVar              eR    X, e198.7
  val?            %206.1 = Force!<wrapped>    !v    %206.0, e198.7   <str->
  lgl$#-          %206.2 = CallSafeBuiltin    wed   is.character(%206.1)    <lgl$->
  lgl$-           %206.3 = LAnd                     %204.8, %206.2
  lgl$-           %206.4 = %206.3
  goto BB72
BB207   <- [71]
  fs              %207.0 = FrameState         R     0x55804e9bafc0+1043: [], env=e0.1
  fs              %207.1 = FrameState         R     0x55804e7e0a40+123: [%204.7], env=e198.7, next=%207.0
  void                    Deopt              !v    %207.1, DeadBranchReached@0x55804e65d750[Test#0], %71.1   !
BB123   <- [72]
  void                    Nop                !     
  lgl$-           %123.1 = %72.2
  goto BB76
BB75   <- [72]
  val?^ | miss    %75.0 = LdVar              eR    names, e198.7
  lgl$#-          %75.1 = Identical                <blt names>, %75.0   <true>
  void                    Branch                   %75.1 -> BB210 (if true) | BB211 (if false)
BB76   <- [123, 212]
  lgl$-           %76.0 = Phi                      %212.6:BB212, %123.1:BB123
  lgl$-           %76.1 = %76.0
  lgl$#-          %76.2 = CheckTrueFalse     e     %76.1
  void                    Branch                   %76.2 -> BB120 (if true) | BB77 (if false)
BB210   <- [75]
  val?^ | miss    %210.0 = LdVar              eR    answer, e198.7
  lgl$#-          %210.1 = IsType                   %210.0 isA val?~- | miss
  void                    Branch                   %210.1 -> BB212 (if true) | BB213 (if false)
BB211   <- [75]
  void                    Nop                !     
  lgl$#-          %211.1 = %75.1
  dr              %211.2 = DeadBranchReached@0x55804e65d750[Test#1]
  goto BB73
BB120   <- [76]
  val?^ | miss    %120.0 = LdVar              eR    X, e198.7
  val?            %120.1 = Force!<wrapped>    !v    %120.0, e198.7   <str->
  (cls|spec|blt)  %120.2 = LdFun              !v    names<-, <0x55804bee1438>, e198.7
  val?^ | miss    %120.3 = LdVar              eR    answer, e198.7
  lgl$#-          %120.4 = IsType                   %120.3 isA val?~- | miss
  void                    Branch                   %120.4 -> BB214 (if true) | BB215 (if false)
BB77   <- [76]
  void                    Nop                !     
  goto BB78
BB212   <- [210]
  val?~- | miss   %212.0 = CastType           d     dn %210.0
  val?-           %212.1 = Force!<value>            %212.0,    <vec->
  val+            %212.2 = CallSafeBuiltin    wed   names(%212.1)    <nil->
  lgl$-           %212.3 = Is                       %212.2, NULL
  lgl$-           %212.4 = AsLogical                %212.3
  lgl$-           %212.5 = LAnd                     %72.2, %212.4
  lgl$-           %212.6 = %212.5
  goto BB76
BB213   <- [210]
  void                    Nop                !     
  val?^ | miss    %213.1 = %210.0
  dr              %213.2 = Typecheck@0x55804e65d750[Type#10]
  goto BB73
BB73   <- [211, 213]
  val?^ | miss    %73.0 = Phi                      %211.1:BB211, %213.1:BB213
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %211.2:BB211, %213.2:BB213
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x55804e9bafc0+1043: [], env=e0.1
  fs              %73.5 = FrameState         R     0x55804e7e0a40+233: [%72.1], env=e198.7, next=%73.4
  void                    Deopt              !v    %73.5, %73.3, %73.1   !
BB214   <- [120]
  val?~- | miss   %214.0 = CastType           d     dn %120.3
  val?-           %214.1 = Force!<value>            %214.0,    <vec->
  val?            %214.2 = NamedCall          !v    %120.2(%214.1, value=%120.1) e198.7
  void                    StVar              lW    answer, %214.2, e198.7
  goto BB78
BB215   <- [120]
  fs              %215.0 = FrameState         R     0x55804e9bafc0+1043: [], env=e0.1
  fs              %215.1 = FrameState         R     0x55804e7e0a40+368: [%120.1], env=e198.7, next=%215.0
  void                    Deopt              !v    %215.1, Typecheck@0x55804e65d750[Type#13], %120.3   !
BB78   <- [77, 214]
  val?^ | miss    %78.0 = LdVar              eR    isFALSE, e198.7
  lgl$#-          %78.1 = Identical                %78.0, function(x) <(rir::DispatchTable*)0x55804e8d48|...
  void                    Branch                   %78.1 -> BB216 (if true) | BB217 (if false)
BB216   <- [78]
  val?^ | miss    %216.0 = LdVar              eR    simplify, e198.7
  val?            %216.1 = Force!<lazy>       !v    %216.0, e198.7   <lgl$->
  prom-           %216.2 = MkArg                    %216.1, findLocalsList[0x55804fbbf7c0]_p68 (!refl), e198.7
  val?~           %216.3 = CastType                 up %216.2
  val+            %216.4 = CallSafeBuiltin    wed   is.logical(%216.1)    <lgl$->
  lgl$#-          %216.5 = IsType                   %216.4 isA lgl$-
  void                    Branch                   %216.5 -> BB218 (if true) | BB219 (if false)
BB217   <- [78]
  fs              %217.0 = FrameState         R     0x55804e9bafc0+1043: [], env=e0.1
  fs              %217.1 = FrameState         R     0x55804e7e0a40+436: [], env=e198.7, next=%217.0
  void                    Deopt              !v    %217.1, CallTarget@0x55804e65d750[Call#5], %78.0   !
BB218   <- [216]
  lgl$-           %218.0 = CastType           d     dn %216.4
  lgl$-           %218.1 = AsLogical                %218.0
  lgl$#-          %218.2 = Identical                %218.1, false
  env             e218.3 = (MkEnv)            l     x=%216.3, parent=R_BaseNamespace, context 0
  void                    Branch                   %218.2 -> BB119 (if true) | BB83 (if false)
BB219   <- [216]
  void                    Nop                !     
  val+            %219.1 = %216.4
  dr              %219.2 = Typecheck@0x55804ead2098[Type#2]
  goto BB81
BB119   <- [218]
  void                    Nop                !     
  lgl$-           %119.1 = %218.1
  goto BB84
BB83   <- [218]
  val?^ | miss    %83.0 = LdVar              eRd   length, R_BaseNamespace
  lgl$#-          %83.1 = Identical                <blt length>, %83.0   <true>
  void                    Branch                   %83.1 -> BB220 (if true) | BB221 (if false)
BB81   <- [219, 221, 223, 225, 229]
  val?^ | miss    %81.0 = Phi                      %219.1:BB219, %221.1:BB221, %223.1:BB223, %225.1:BB225, %229.1:BB229
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %219.2:BB219, %221.2:BB221, %223.2:BB223, %225.2:BB225, %229.2:BB229
  dr              %81.3 = %81.2
  fs              %81.4 = FrameState         R     0x55804e9bafc0+1043: [], env=e0.1
  fs              %81.5 = FrameState         R     0x55804e7e0a40+468: [], env=e198.7, next=%81.4
  env             e81.6 = (MkEnv)            l     x=%216.3, parent=R_BaseNamespace, context 0
  fs              %81.7 = FrameState         R     0x55804c1cd3e0+91: [%216.4], env=e81.6, next=%81.5
  void                    Deopt              !v    %81.7, %81.3, %81.1   !
BB84   <- [119, 222]
  lgl$-           %84.0 = Phi                      %222.1:BB222, %119.1:BB119
  lgl$-           %84.1 = %84.0
  lgl$-           %84.2 = AsLogical                %84.1
  lgl$#-          %84.3 = Identical                %84.2, false
  void                    Branch                   %84.3 -> BB118 (if true) | BB85 (if false)
BB220   <- [83]
  lgl$#-          %220.0 = IsType                   %216.1 isA lgl$-
  void                    Branch                   %220.0 -> BB222 (if true) | BB223 (if false)
BB221   <- [83]
  void                    Nop                !     
  lgl$#-          %221.1 = %83.1
  dr              %221.2 = DeadBranchReached@0x55804ead2098[Test#1]
  goto BB81
BB118   <- [84]
  void                    Nop                !     
  lgl$-           %118.1 = %84.2
  goto BB86
BB85   <- [84]
  val?^ | miss    %85.0 = LdVar              eRd   is.na, R_BaseNamespace
  lgl$#-          %85.1 = Identical                <blt is.na>, %85.0   <true>
  void                    Branch                   %85.1 -> BB224 (if true) | BB225 (if false)
BB222   <- [220]
  lgl$-           %222.0 = AsLogical                %218.1
  lgl$-           %222.1 = %222.0
  goto BB84
BB223   <- [220]
  void                    Nop                !     
  val?            %223.1 = %216.1
  dr              %223.2 = Typecheck@0x55804ead2098[Type#4]
  goto BB81
BB86   <- [118, 228]
  lgl$-           %86.0 = Phi                      %228.5:BB228, %118.1:BB118
  lgl$-           %86.1 = %86.0
  lgl$-           %86.2 = AsLogical                %86.1
  lgl$#-          %86.3 = Identical                %86.2, false
  void                    Branch                   %86.3 -> BB117 (if true) | BB89 (if false)
BB224   <- [85]
  lgl$#-          %224.0 = IsType                   %216.1 isA lgl$-
  void                    Branch                   %224.0 -> BB228 (if true) | BB229 (if false)
BB225   <- [85]
  void                    Nop                !     
  lgl$#-          %225.1 = %85.1
  dr              %225.2 = DeadBranchReached@0x55804ead2098[Test#2]
  goto BB81
BB117   <- [86]
  void                    Nop                !     
  lgl$-           %117.1 = %86.2
  goto BB90
BB89   <- [86]
  lgl$#-          %89.0 = IsType                   %216.1 isA lgl$-
  void                    Branch                   %89.0 -> BB226 (if true) | BB227 (if false)
BB228   <- [224]
  lgl$-           %228.0 = CastType           d     dn %216.1
  lgl$-           %228.1 = CallSafeBuiltin    wed   is.na(%228.0)    <lgl$->
  lgl$-           %228.2 = Not                d     %228.1, elided
  lgl$-           %228.3 = AsLogical                %228.2
  lgl$-           %228.4 = LAnd                     %84.2, %228.3
  lgl$-           %228.5 = %228.4
  goto BB86
BB229   <- [224]
  void                    Nop                !     
  val?            %229.1 = %216.1
  dr              %229.2 = Typecheck@0x55804ead2098[Type#8]
  goto BB81
BB90   <- [117, 226]
  lgl$-           %90.0 = Phi                      %226.4:BB226, %117.1:BB117
  lgl$-           %90.1 = %90.0
  lgl$-           %90.2 = Not                d     %90.1, elided
  lgl$#-          %90.3 = CheckTrueFalse     e     %90.2
  void                    Branch                   %90.3 -> BB116 (if true) | BB91 (if false)
BB226   <- [89]
  lgl$-           %226.0 = CastType           d     dn %216.1
  lgl$-           %226.1 = Not                d     %226.0, elided
  lgl$-           %226.2 = AsLogical                %226.1
  lgl$-           %226.3 = LAnd                     %86.2, %226.2
  lgl$-           %226.4 = %226.3
  goto BB90
BB227   <- [89]
  fs              %227.0 = FrameState         R     0x55804e9bafc0+1043: [], env=e0.1
  fs              %227.1 = FrameState         R     0x55804e7e0a40+468: [], env=e198.7, next=%227.0
  fs              %227.2 = FrameState         R     0x55804c1cd3e0+319: [%86.1], env=e218.3, next=%227.1
  void                    Deopt              !v    %227.2, Typecheck@0x55804ead2098[Type#10], %216.1   !
BB116   <- [90]
  (cls|spec|blt)  %116.0 = LdFun              !v    simplify2array, <0x55804cf9a438>, e198.7
  prom-           %116.1 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p69, e198.7
  prom-           %116.2 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p70, e198.7
  val?            %116.3 = NamedCall          !v    %116.0(%116.1, higher=%116.2) e198.7   <lgl+>
  val?            %116.4 = %116.3
  goto BB92
BB91   <- [90]
  val?^ | miss    %91.0 = LdVar              eR    answer, e198.7
  val?            %91.1 = Force!             !v    %91.0, e198.7   <val?_>
  val?            %91.2 = %91.1
  goto BB92
BB92   <- [91, 116]
  val?            %92.0 = Phi                      %91.2:BB91, %116.4:BB116
  val?            %92.1 = %92.0
  val?            %92.2 = PopContext         C     %92.1, %198.4   <lgl+>
  void                    StVar              lW    isloc, %92.2, e0.1
  val?^ | miss    %92.4 = LdVar              eR    nsf, e0.1
  lgl$#-          %92.5 = IsType                   %92.4 isA int$-
  void                    Branch                   %92.5 -> BB230 (if true) | BB231 (if false)
BB230   <- [92]
  int$-           %230.0 = CastType           d     dn %92.4
  void                    StVar              lW    last.nsf, %230.0, e0.1
  val?^ | miss    %230.2 = LdVar              eR    unique, e0.1
  lgl$#-          %230.3 = Identical                %230.2, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %230.3 -> BB232 (if true) | BB233 (if false)
BB231   <- [92]
  fs              %231.0 = FrameState         R     0x55804e9bafc0+1057: [], env=e0.1
  void                    Deopt              !v    %231.0, Typecheck@0x55804ead21f8[Type#37], %92.4   !
BB232   <- [230]
  (cls|spec|blt)  %232.0 = LdFun              !v    c, <0x55804bee1940>, e0.1
  lgl$#-          %232.1 = Identical                %232.0, <blt c>
  void                    Branch                   %232.1 -> BB234 (if true) | BB235 (if false)
BB233   <- [230]
  void                    Nop                !     
  val?^ | miss    %233.1 = %230.2
  dr              %233.2 = CallTarget@0x55804ead21f8[Call#13]
  goto BB95
BB234   <- [232]
  val?^ | miss    %234.0 = LdVar              eR    locals, e0.1
  val?            %234.1 = Force!<value>      !v    %234.0, e0.1   <str$->
  val?^ | miss    %234.2 = LdVar              eR    sf, e0.1
  val?            %234.3 = Force!<value>      !v    %234.2, e0.1   <str->
  lgl$#-          %234.4 = IsType                   %234.3 isA val+   <true>
  void                    Branch                   %234.4 -> BB115 (if true) | BB97 (if false)
BB235   <- [232]
  void                    Nop                !     
  (cls|spec|blt)  %235.1 = %232.0
  dr              %235.2 = CallTarget@0x55804ead21f8[Call#14]
  goto BB95
BB95   <- [233, 235]
  val?^ | miss    %95.0 = Phi                      %233.1:BB233, %235.1:BB235
  val?^ | miss    %95.1 = %95.0
  dr              %95.2 = Phi                      %233.2:BB233, %235.2:BB235
  dr              %95.3 = %95.2
  fs              %95.4 = FrameState         R     0x55804e9bafc0+1080: [], env=e0.1
  void                    Deopt              !v    %95.4, %95.3, %95.1   !
BB115   <- [234]
  val?^ | miss    %115.0 = LdVar              eR    isloc, e0.1
  val?            %115.1 = Force!<value>      !v    %115.0, e0.1   <lgl+>
  val?            %115.2 = %115.1
  goto BB98
BB97   <- [234]
  prom-           %97.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p31, e0.1
  prom-           %97.1 = %97.0
  goto BB98
BB98   <- [97, 115]
  val?            %98.0 = Phi                      %115.2:BB115, %97.1:BB97
  val?            %98.1 = %98.0
  val?            %98.2 = Extract1_1D        !v    %234.3, %98.1, e0.1   <str->
  val?            %98.3 = CallBuiltin        !v    c(%234.1, %98.2) e0.1   <str$->
  val?            %98.4 = StaticCall         !v    unique[0x55804ed10b50](%98.3) { 0 } e0.1   <str$->
  void                    StVar              lW    sf, %98.4, e0.1
  lgl$#-          %98.6 = IsType                   %98.4 isA val?-
  val?^ | miss    %98.7 = LdVar              eR    length, e0.1
  lgl$#-          %98.8 = Identical                <blt length>, %98.7   <true>
  void                    Branch                   %98.8 -> BB236 (if true) | BB237 (if false)
BB236   <- [98]
  val             %236.0 = ChkMissing         e     %98.4
  void                    Branch                   %98.6 -> BB238 (if true) | BB239 (if false)
BB237   <- [98]
  void                    Nop                !     
  lgl$#-          %237.1 = %98.8
  dr              %237.2 = DeadBranchReached@0x55804ead21f8[Test#7]
  goto BB99
BB238   <- [236]
  val?-           %238.0 = CastType           d     dn %98.4   <str$->
  (int|real)$-    %238.1 = CallSafeBuiltin    wed   length(%238.0)    <int$->
  lgl$#-          %238.2 = IsType                   %238.1 isA int$-
  void                    Branch                   %238.2 -> BB240 (if true) | BB241 (if false)
BB239   <- [236]
  void                    Nop                !     
  val?            %239.1 = %98.4
  dr              %239.2 = Typecheck@0x55804ead21f8[Type#44]
  goto BB99
BB99   <- [237, 239]
  val?^ | miss    %99.0 = Phi                      %237.1:BB237, %239.1:BB239
  val?^ | miss    %99.1 = %99.0
  dr              %99.2 = Phi                      %237.2:BB237, %239.2:BB239
  dr              %99.3 = %99.2
  fs              %99.4 = FrameState         R     0x55804e9bafc0+1126: [], env=e0.1
  void                    Deopt              !v    %99.4, %99.3, %99.1   !
BB240   <- [238]
  int$-           %240.0 = CastType           d     dn %238.1
  void                    StVar              lW    nsf, %240.0, e0.1
  val?^ | miss    %240.2 = LdVar              eR    last.nsf, e0.1
  lgl$#-          %240.3 = IsType                   %240.2 isA int$-
  void                    Branch                   %240.3 -> BB242 (if true) | BB243 (if false)
BB241   <- [238]
  fs              %241.0 = FrameState         R     0x55804e9bafc0+1217: [%238.1], env=e0.1
  void                    Deopt              !v    %241.0, Typecheck@0x55804ead21f8[Type#47], %238.1   !
BB242   <- [240]
  int$-           %242.0 = CastType           d     dn %240.2
  lgl$-           %242.1 = Eq                 d     %242.0, %240.0, elided   <lgl$->
  lgl$#-          %242.2 = CheckTrueFalse     e     %242.1
  void                    Branch                   %242.2 -> BB106 (if true) | BB105 (if false)
BB243   <- [240]
  void                    Nop                !     
  val?^ | miss    %243.1 = %240.2
  dr              %243.2 = Typecheck@0x55804ead21f8[Type#48]
  goto BB103
BB106   <- [242]
  val?^ | miss    %106.0 = LdVar              eR    ls, e0.1
  lgl$#-          %106.1 = Identical                %106.0, function(name, pos=-(1L), envir=as.environment|...
  void                    Branch                   %106.1 -> BB244 (if true) | BB245 (if false)
BB105   <- [242]
  void                    Nop                !     
  goto BB49
BB103   <- [243, 245]
  val?^ | miss    %103.0 = Phi                      %243.1:BB243, %245.1:BB245
  val?^ | miss    %103.1 = %103.0
  dr              %103.2 = Phi                      %243.2:BB243, %245.2:BB245
  dr              %103.3 = %103.2
  fs              %103.4 = FrameState         R     0x55804e9bafc0+1231: [], env=e0.1
  void                    Deopt              !v    %103.4, %103.3, %103.1   !
BB244   <- [106]
  prom-           %244.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p32, e0.1
  val?            %244.1 = StaticCall         !v    ls[0x55804e1f90e0](%244.0, missingArg, missingArg, true) { 0 3n } e0.1   <str->
  void                    StVar              lW    vals, %244.1, e0.1
  val?^ | miss    %244.3 = LdVar              eR    %in%, e0.1
  lgl$#-          %244.4 = Identical                %244.3, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %244.4 -> BB246 (if true) | BB247 (if false)
BB245   <- [106]
  void                    Nop                !     
  val?^ | miss    %245.1 = %106.0
  dr              %245.2 = CallTarget@0x55804ead21f8[Call#16]
  goto BB103
BB246   <- [244]
  prom-           %246.0 = MkArg                    unboundValue, findLocalsList[0x55804fbbf7c0]_p34, e0.1
  val             %246.1 = ChkMissing         e     %244.1
  prom-           %246.2 = MkArg                    %244.1, findLocalsList[0x55804fbbf7c0]_p33 (!refl), 
  val?            %246.3 = StaticCall         !v    %in%[0x55804eb503d0](%246.2, %246.0) e0.1   <lgl->
  void                    StVar              lW    rdsf, %246.3, e0.1
  val?^ | miss    %246.5 = LdVar              eR    any, e0.1
  lgl$#-          %246.6 = Identical                <blt any>, %246.5   <true>
  void                    Branch                   %246.6 -> BB248 (if true) | BB249 (if false)
BB247   <- [244]
  fs              %247.0 = FrameState         R     0x55804e9bafc0+1335: [], env=e0.1
  void                    Deopt              !v    %247.0, CallTarget@0x55804ead21f8[Call#17], %244.3   !
BB248   <- [246]
  val             %248.0 = ChkMissing         e     %246.3
  val?            %248.1 = CallBuiltin        !v    any(%246.3) e0.1   <lgl$->
  lgl$#-          %248.2 = IsType                   %248.1 isA lgl$-
  void                    Branch                   %248.2 -> BB250 (if true) | BB251 (if false)
BB249   <- [246]
  fs              %249.0 = FrameState         R     0x55804e9bafc0+1386: [], env=e0.1
  void                    Deopt              !v    %249.0, DeadBranchReached@0x55804ead21f8[Test#8], %246.6   !
BB250   <- [248]
  lgl$-           %250.0 = CastType           d     dn %248.1
  lgl$#-          %250.1 = CheckTrueFalse     e     %250.0
  void                    Branch                   %250.1 -> BB114 (if true) | BB113 (if false)
BB251   <- [248]
  void                    Nop                !     
  val?            %251.1 = %248.1
  dr              %251.2 = Typecheck@0x55804ead21f8[Type#58]
  goto BB111
BB114   <- [250]
  (cls|spec|blt)  %114.0 = LdFun              !v    warning0, e0.1
  fs              %114.1 = FrameState         R     0x55804e9bafc0+1498: [%114.0], env=e0.1
  void                    Deopt              !v    %114.1, DeadCall@0x55804ead21f8[Call#19], %114.0   !
BB113   <- [250]
  val?^ | miss    %113.0 = LdVar              eR    vals, e0.1
  lgl$#-          %113.1 = IsType                   %113.0 isA val?~- | miss
  void                    Branch                   %113.1 -> BB252 (if true) | BB253 (if false)
BB111   <- [251, 253]
  val?^ | miss    %111.0 = Phi                      %251.1:BB251, %253.1:BB253
  val?^ | miss    %111.1 = %111.0
  dr              %111.2 = Phi                      %251.2:BB251, %253.2:BB253
  dr              %111.3 = %111.2
  fs              %111.4 = FrameState         R     0x55804e9bafc0+1477: [%248.1], env=e0.1
  void                    Deopt              !v    %111.4, %111.3, %111.1   !
BB252   <- [113]
  val?~- | miss   %252.0 = CastType           d     dn %113.0
  void                    Visible            v     
  val?-           %252.2 = Force!<value>            %252.0,    <str->
  void                    Return             l     %252.2
BB253   <- [113]
  void                    Nop                !     
  val?^ | miss    %253.1 = %113.0
  dr              %253.2 = Typecheck@0x55804ead21f8[Type#64]
  goto BB111
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    localStopFuns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isBaseVar, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    envir, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    collect, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(nil|sym)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exists, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isloc, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vals, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    specialSyntaxFuns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simplify, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    answer, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simplify, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Eq                 !v    %0.2, "array", e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    makeLocalsCollector@Prom(0)0, e0.0
  void                    Return             l     %0.1
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    getCollectLocalsHandler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    makeLocalsCollector@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    leaf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    collect, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    , e0.0
  void                    Return             l     %0.1
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    leaf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .EmptyEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simplify, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 69:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    answer, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simplify, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Eq                 !v    %0.2, "array", e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3

│ findLocalsList[0x55804fbbf7c0]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
