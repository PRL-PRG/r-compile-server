
┌──────────────────────────────────────────────────────────────────────────────┐
│ vapply[0x55804e259cb0]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2,SimpleInt2 miss: 2│
│ Properties:                                                                  │
├────── Final PIR Version
vapply[0x55804e259cb0]
BB0
  (int|miss)$~-   %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     X=%0.2, FUN=%0.1, FUN.VALUE=%0.0, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %0.4  = MkArg                    unboundValue, vapply[0x55804e259cb0]_p1, e0.3
  val?            %0.5  = StaticCall         !v    match.fun[0x55804ebf3180](%0.4) e0.3   <(cls|blt)->
  void                    StVar              lW    FUN, %0.5, e0.3
  val?^ | miss    %0.7  = LdVar              eR    is.vector, e0.3
  lgl$#-          %0.8  = Identical                %0.7, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %0.8 -> BB11 (if true) | BB12 (if false)
BB11   <- [0]
  val?^ | miss    %11.0 = LdVar              eR    X, e0.3
  val?            %11.1 = Force!<lazy>       !v    %11.0, e0.3   <(str|vec)+>
  lgl$#-          %11.2 = CallSafeBuiltin    vwed  is.vector(%11.1, "any")    <lgl$->
  lgl$#-          %11.3 = Not                vd    %11.2, elided
  void                    Branch                   %11.2 -> BB9 (if true) | BB5 (if false)
BB12   <- [0]
  fs              %12.0 = FrameState         R     0x55804e06f1e0+46: [], env=e0.3
  void                    Deopt              !v    %12.0, CallTarget@0x55804e0a1610[Call#1], %0.7   !
BB9   <- [11]
  val?^ | miss    %9.0  = LdVar              eR    is.object, e0.3
  lgl$#-          %9.1  = Identical                <blt is.object>, %9.0   <true>
  void                    Branch                   %9.1 -> BB13 (if true) | BB14 (if false)
BB5   <- [11]
  void                    Nop                !     
  lgl$#-          %5.1  = %11.3
  goto BB6
BB13   <- [9]
  val?^ | miss    %13.0 = LdVar              eR    X, e0.3
  val?            %13.1 = Force!<wrapped>    !v    %13.0, e0.3   <(str|vec)+>
  lgl$#-          %13.2 = CallSafeBuiltin    vwed  is.object(%13.1)    <lgl$->
  lgl$-           %13.3 = LOr                      %11.3, %13.2
  lgl$-           %13.4 = %13.3
  goto BB6
BB14   <- [9]
  fs              %14.0 = FrameState         R     0x55804e06f1e0+78: [], env=e0.3
  prom-           %14.1 = MkArg                    %11.1, vapply[0x55804e259cb0]_p2 (!refl), e0.3
  val?~           %14.2 = CastType                 up %14.1
  env             e14.3 = (MkEnv)            l     mode(miss)="any", x=%14.2, parent=R_BaseNamespace, context 0
  fs              %14.4 = FrameState         R     0x55804e348380+41: [%11.2], env=e14.3, next=%14.0
  void                    Deopt              !v    %14.4, DeadBranchReached@0x55804e0a1610[Test#0], %9.1   !
BB6   <- [5, 13]
  lgl$-           %6.0  = Phi                      %13.4:BB13, %5.1:BB5
  lgl$-           %6.1  = %6.0
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB8 (if true) | BB7 (if false)
BB8   <- [6]
  (cls|spec|blt)  %8.0  = LdFun              !v    as.list, e0.3
  fs              %8.1  = FrameState         R     0x55804e06f1e0+205: [%8.0], env=e0.3
  void                    Deopt              !v    %8.1, DeadCall@0x55804e0a1610[Call#3], %8.0   !
BB7   <- [6]
  (cls|spec|blt)  %7.0  = LdFun              !     .Internal, <0x55804bee0698>, e0.3
  prom-           %7.1  = MkArg                    unboundValue, vapply[0x55804e259cb0]_p3, e0.3
  val?            %7.2  = Call               !     %7.0(%7.1) e0.3   <val?+>
  void                    Return             l     %7.2
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|vec)+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, vapply[0x55804e259cb0]_p4, e0.0
  prom-           %0.3  = MkArg                    unboundValue, vapply[0x55804e259cb0]_p5, e0.0
  prom-           %0.4  = MkArg                    unboundValue, vapply[0x55804e259cb0]_p6, e0.0
  prom-           %0.5  = MkArg                    unboundValue, vapply[0x55804e259cb0]_p7, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ vapply[0x55804e259cb0]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
