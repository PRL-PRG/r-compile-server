
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804efd8650]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804efd8650]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?~+          %0.3  = LdArg                    0
  val+            %0.4  = Force<value>             %0.3,    <str$->
  val?^ | miss    %0.5  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %0.6  = Identical                %0.5, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %0.6 -> BB49 (if true) | BB50 (if false)
BB49   <- [0]
  env             e49.0 = MkEnv              l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %49.1 = MkArg                    unboundValue, [0x55804efd8650]_p1, e49.0
  val?            %49.2 = StaticCall         !v    %in%[0x55804e8cd4e0](%0.4, %49.1) e49.0   <lgl$->
  lgl$#-          %49.3 = IsType                   %49.2 isA lgl$-
  void                    Branch                   %49.3 -> BB51 (if true) | BB52 (if false)
BB50   <- [0]
  env             e50.0 = (MkEnv)            l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %50.1 = FrameState         R     0x55804ec9bac0+0: [], env=e50.0
  void                    Deopt              !v    %50.1, CallTarget@0x55804e19e1f0[Call#0], %0.5
BB51   <- [49]
  lgl$-           %51.0 = CastType           d     dn %49.2
  lgl$-           %51.1 = AsLogical                %51.0
  lgl$#-          %51.2 = Identical                %51.1, false
  void                    Branch                   %51.2 -> BB47 (if true) | BB5 (if false)
BB52   <- [49]
  void                    Nop                !     
  val?            %52.1 = %49.2
  dr              %52.2 = Typecheck@0x55804e19e1f0[Type#2]
  goto BB3
BB47   <- [51]
  void                    Nop                !     
  lgl$-           %47.1 = %51.1
  goto BB8
BB5   <- [51]
  val?^ | miss    %5.0  = LdVar              eR    isSimpleFunDef, e49.0
  lgl$#-          %5.1  = Identical                %5.0, function(e, w) <(rir::DispatchTable*)0x55804e1|...
  void                    Branch                   %5.1 -> BB53 (if true) | BB54 (if false)
BB3   <- [52, 54]
  val?^ | miss    %3.0  = Phi                      %52.1:BB52, %54.1:BB54
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %52.2:BB52, %54.2:BB54
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55804ec9bac0+37: [%49.2], env=e49.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB8   <- [47, 55]
  lgl$-           %8.0  = Phi                      %55.3:BB55, %47.1:BB47
  lgl$-           %8.1  = %8.0
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1
  void                    Branch                   %8.2 -> BB46 (if true) | BB9 (if false)
BB53   <- [5]
  prom-           %53.0 = MkArg                    unboundValue, [0x55804efd8650]_p2, e49.0
  prom-           %53.1 = MkArg                    unboundValue, [0x55804efd8650]_p3, e49.0
  val?            %53.2 = StaticCall         !v    isSimpleFunDef[0x55804f93a040](%53.0, %53.1) e49.0   <lgl$->
  lgl$#-          %53.3 = IsType                   %53.2 isA lgl$-
  void                    Branch                   %53.3 -> BB55 (if true) | BB56 (if false)
BB54   <- [5]
  void                    Nop                !     
  val?^ | miss    %54.1 = %5.0
  dr              %54.2 = CallTarget@0x55804e19e1f0[Call#2]
  goto BB3
BB46   <- [8]
  void                    StVar              lW    type, "fundef", e49.0
  goto BB10
BB9   <- [8]
  void                    Nop                !     
  goto BB10
BB55   <- [53]
  lgl$-           %55.0 = CastType           d     dn %53.2
  lgl$-           %55.1 = AsLogical                %55.0
  lgl$-           %55.2 = LAnd                     %51.1, %55.1
  lgl$-           %55.3 = %55.2
  goto BB8
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x55804ec9bac0+86: [%51.1, %53.2], env=e49.0
  void                    Deopt              !v    %56.0, Typecheck@0x55804e19e1f0[Type#5], %53.2   !
BB10   <- [9, 46]
  val?^ | miss    %10.0 = LdVar              eR    type, e49.0
  val?            %10.1 = Force!<value>      !v    %10.0, e49.0   <str$->
  lgl$-           %10.2 = Is                       %10.1, logical
  lgl$-           %10.3 = Is                       %10.1, integer
  lgl$-           %10.4 = Is                       %10.1, double
  lgl$-           %10.5 = Is                       %10.1, complex
  lgl$-           %10.6 = Is                       %10.1, character   <true>
  lgl$-           %10.7 = Is                       %10.1, raw
  lgl$-           %10.8 = Is                       %10.1, list
  lgl$-           %10.9 = Is                       %10.1, expression
  lgl$-           %10.10 = LOr                      %10.9, %10.8
  lgl$-           %10.11 = LOr                      %10.10, %10.7
  lgl$-           %10.12 = LOr                      %10.11, %10.6
  lgl$-           %10.13 = LOr                      %10.12, %10.5
  lgl$-           %10.14 = LOr                      %10.13, %10.4
  lgl$-           %10.15 = LOr                      %10.14, %10.3
  lgl$-           %10.16 = LOr                      %10.15, %10.2   <true>
  lgl$#-          %10.17 = Identical                %10.16, true
  int$-           %10.18 = Length                   %10.1
  lgl$-           %10.19 = Is                       %10.1, Factor   <false>
  lgl$#-          %10.20 = Identical                %10.19, false
  lgl$#-          %10.21 = Identical                %10.6, true
  lgl$#-          %10.22 = IsType                   %10.1 isA val?-
  void                    Branch                   %10.17 -> BB57 (if true) | BB58 (if false)
BB57   <- [10]
  lgl$-           %57.0 = Eq                 d     %10.18, 1L, elided   <true>
  lgl$#-          %57.1 = Identical                %57.0, true
  void                    Branch                   %57.1 -> BB59 (if true) | BB60 (if false)
BB58   <- [10]
  void                    Nop                !     
  lgl$#-          %58.1 = %10.17
  dr              %58.2 = DeadBranchReached@0x55804e19e1f0[Test#0]
  goto BB11
BB59   <- [57]
  void                    Branch                   %10.20 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  void                    Nop                !     
  lgl$#-          %60.1 = %57.1
  dr              %60.2 = DeadBranchReached@0x55804e19e1f0[Test#1]
  goto BB11
BB11   <- [58, 60, 62, 64, 66]
  val?^ | miss    %11.0 = Phi                      %58.1:BB58, %60.1:BB60, %62.1:BB62, %64.1:BB64, %66.1:BB66
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %58.2:BB58, %60.2:BB60, %62.2:BB62, %64.2:BB64, %66.2:BB66
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55804ec9bac0+128: [%10.1], env=e49.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB61   <- [59]
  void                    Branch                   %10.21 -> BB63 (if true) | BB64 (if false)
BB62   <- [59]
  void                    Nop                !     
  lgl$#-          %62.1 = %10.20
  dr              %62.2 = DeadBranchReached@0x55804e19e1f0[Test#2]
  goto BB11
BB63   <- [61]
  void                    Branch                   %10.22 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  void                    Nop                !     
  lgl$#-          %64.1 = %10.21
  dr              %64.2 = DeadBranchReached@0x55804e19e1f0[Test#3]
  goto BB11
BB65   <- [63]
  val?-           %65.0 = CastType           d     dn %10.1   <str$->
  lgl-            %65.1 = CallSafeBuiltin    vwed  is.na(%65.0) 
  lgl$#-          %65.2 = CheckTrueFalse     we    %65.1   <false>
  void                    Branch                   %65.2 -> BB68 (if true) | BB67 (if false)
BB66   <- [63]
  void                    Nop                !     
  val?            %66.1 = %10.1
  dr              %66.2 = Typecheck@0x55804e19e1f0[Type#6]
  goto BB11
BB68   <- [65]
  fs              %68.0 = FrameState         R     0x55804ec9bac0+391: [%65.0, %65.2], env=e49.0
  void                    Deopt              !v    %68.0, DeadBranchReached@0x55804e19e1f0[Test#10], %65.2   !
BB67   <- [65]
  lgl-            %67.0 = Eq                 vwed  %65.0, <-, elided
  lgl$#-          %67.1 = CheckTrueFalse     we    %67.0
  void                    Branch                   %67.1 -> BB43 (if true) | BB17 (if false)
BB43   <- [67]
  val?^ | miss    %43.0 = LdVar              eR    incLocalUsageValue, e49.0
  lgl$#-          %43.1 = Identical                %43.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %43.1 -> BB69 (if true) | BB70 (if false)
BB17   <- [67]
  lgl-            %17.0 = Eq                 vwed  %65.0, <<-, elided
  lgl$#-          %17.1 = CheckTrueFalse     we    %17.0   <false>
  void                    Branch                   %17.1 -> BB74 (if true) | BB73 (if false)
BB69   <- [43]
  prom-           %69.0 = MkArg                    unboundValue, [0x55804efd8650]_p15, e49.0
  prom-           %69.1 = MkArg                    unboundValue, [0x55804efd8650]_p16, e49.0
  val?            %69.2 = StaticCall         !     incLocalUsageValue[0x55804ed51b00](%69.0, "assigns", %69.1) e49.0   <real$->
  lgl$#-          %69.3 = IsType                   %69.2 isA real$-
  void                    Branch                   %69.3 -> BB71 (if true) | BB72 (if false)
BB70   <- [43]
  fs              %70.0 = FrameState         R     0x55804ec9bac0+415: [%65.0, %67.1], env=e49.0
  void                    Deopt              !v    %70.0, CallTarget@0x55804e19e1f0[Call#3], %43.0   !
BB74   <- [17]
  fs              %74.0 = FrameState         R     0x55804ec9bac0+433: [%65.0, %17.1], env=e49.0
  void                    Deopt              !v    %74.0, DeadBranchReached@0x55804e19e1f0[Test#12], %17.1   !
BB73   <- [17]
  lgl-            %73.0 = Eq                 vwed  %65.0, variable, elided
  lgl$#-          %73.1 = CheckTrueFalse     we    %73.0
  void                    Branch                   %73.1 -> BB40 (if true) | BB22 (if false)
BB71   <- [69]
  void                    Nop                !     
  val?            %71.1 = %69.2
  goto BB31
BB72   <- [69]
  fs              %72.0 = FrameState         R     0x55804ec9bac0+587: [%69.2], env=e49.0
  void                    Deopt              !v    %72.0, Typecheck@0x55804e19e1f0[Type#9], %69.2   !
BB40   <- [73]
  val?^ | miss    %40.0 = LdVar              eR    incLocalUsageValue, e49.0
  lgl$#-          %40.1 = Identical                %40.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %40.1 -> BB77 (if true) | BB78 (if false)
BB22   <- [73]
  lgl-            %22.0 = Eq                 vwed  %65.0, function, elided
  lgl$#-          %22.1 = CheckTrueFalse     we    %22.0
  void                    Branch                   %22.1 -> BB37 (if true) | BB25 (if false)
BB31   <- [71, 81, 85, 89, 91]
  val?            %31.0 = Phi                      %91.4:BB91, %89.1:BB89, %85.1:BB85, %81.1:BB81, %71.1:BB71
  val?            %31.1 = %31.0
  val?^ | miss    %31.2 = LdVar              eR    incLocalSrcInfo, e49.0
  lgl$#-          %31.3 = Identical                %31.2, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %31.3 -> BB75 (if true) | BB76 (if false)
BB77   <- [40]
  prom-           %77.0 = MkArg                    unboundValue, [0x55804efd8650]_p13, e49.0
  prom-           %77.1 = MkArg                    unboundValue, [0x55804efd8650]_p14, e49.0
  val?            %77.2 = StaticCall         !     incLocalUsageValue[0x55804ed51b00](%77.0, "varuses", %77.1) e49.0   <real$->
  lgl$#-          %77.3 = IsType                   %77.2 isA real$-
  void                    Branch                   %77.3 -> BB81 (if true) | BB82 (if false)
BB78   <- [40]
  fs              %78.0 = FrameState         R     0x55804ec9bac0+451: [%65.0, %73.1], env=e49.0
  void                    Deopt              !v    %78.0, CallTarget@0x55804e19e1f0[Call#4], %40.0   !
BB37   <- [22]
  val?^ | miss    %37.0 = LdVar              eR    incLocalUsageValue, e49.0
  lgl$#-          %37.1 = Identical                %37.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %37.1 -> BB79 (if true) | BB80 (if false)
BB25   <- [22]
  lgl-            %25.0 = Eq                 vwed  %65.0, for, elided
  lgl$#-          %25.1 = CheckTrueFalse     we    %25.0
  void                    Branch                   %25.1 -> BB34 (if true) | BB28 (if false)
BB75   <- [31]
  prom-           %75.0 = MkArg                    unboundValue, [0x55804efd8650]_p7, e49.0
  prom-           %75.1 = MkArg                    unboundValue, [0x55804efd8650]_p8, e49.0
  val?            %75.2 = StaticCall         !     incLocalSrcInfo[0x55804cf8b440](%75.0, %75.1) e49.0   <vec>
  void                    Return             l     %75.2
BB76   <- [31]
  fs              %76.0 = FrameState         R     0x55804ec9bac0+815: [%31.1], env=e49.0
  void                    Deopt              !v    %76.0, CallTarget@0x55804e19e1f0[Call#8], %31.2   !
BB81   <- [77]
  void                    Nop                !     
  val?            %81.1 = %77.2
  goto BB31
BB82   <- [77]
  fs              %82.0 = FrameState         R     0x55804ec9bac0+640: [%77.2], env=e49.0
  void                    Deopt              !v    %82.0, Typecheck@0x55804e19e1f0[Type#12], %77.2   !
BB79   <- [37]
  prom-           %79.0 = MkArg                    unboundValue, [0x55804efd8650]_p11, e49.0
  prom-           %79.1 = MkArg                    unboundValue, [0x55804efd8650]_p12, e49.0
  val?            %79.2 = StaticCall         !     incLocalUsageValue[0x55804ed51b00](%79.0, "funuses", %79.1) e49.0   <real$->
  lgl$#-          %79.3 = IsType                   %79.2 isA real$-
  void                    Branch                   %79.3 -> BB85 (if true) | BB86 (if false)
BB80   <- [37]
  fs              %80.0 = FrameState         R     0x55804ec9bac0+469: [%65.0, %22.1], env=e49.0
  void                    Deopt              !v    %80.0, CallTarget@0x55804e19e1f0[Call#5], %37.0   !
BB34   <- [25]
  val?^ | miss    %34.0 = LdVar              eR    incLocalUsageValue, e49.0
  lgl$#-          %34.1 = Identical                %34.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %34.1 -> BB83 (if true) | BB84 (if false)
BB28   <- [25]
  lgl-            %28.0 = Eq                 vwed  %65.0, fundef, elided
  lgl$#-          %28.1 = CheckTrueFalse     we    %28.0   <true>
  void                    Branch                   %28.1 -> BB87 (if true) | BB88 (if false)
BB85   <- [79]
  void                    Nop                !     
  val?            %85.1 = %79.2
  goto BB31
BB86   <- [79]
  fs              %86.0 = FrameState         R     0x55804ec9bac0+693: [%79.2], env=e49.0
  void                    Deopt              !v    %86.0, Typecheck@0x55804e19e1f0[Type#15], %79.2   !
BB83   <- [34]
  prom-           %83.0 = MkArg                    unboundValue, [0x55804efd8650]_p9, e49.0
  prom-           %83.1 = MkArg                    unboundValue, [0x55804efd8650]_p10, e49.0
  val?            %83.2 = StaticCall         !     incLocalUsageValue[0x55804ed51b00](%83.0, "loopvars", %83.1) e49.0   <real$->
  lgl$#-          %83.3 = IsType                   %83.2 isA real$-
  void                    Branch                   %83.3 -> BB89 (if true) | BB90 (if false)
BB84   <- [34]
  fs              %84.0 = FrameState         R     0x55804ec9bac0+487: [%65.0, %25.1], env=e49.0
  void                    Deopt              !v    %84.0, CallTarget@0x55804e19e1f0[Call#6], %34.0   !
BB87   <- [28]
  val?^ | miss    %87.0 = LdVar              eR    addLocalFunDef, e49.0
  lgl$#-          %87.1 = Identical                %87.0, function(vn, e, w) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %87.1 -> BB91 (if true) | BB92 (if false)
BB88   <- [28]
  void                    Nop                !     
  lgl$#-          %88.1 = %28.1
  dr              %88.2 = DeadBranchReached@0x55804e19e1f0[Test#16]
  goto BB29
BB89   <- [83]
  void                    Nop                !     
  val?            %89.1 = %83.2
  goto BB31
BB90   <- [83]
  fs              %90.0 = FrameState         R     0x55804ec9bac0+746: [%83.2], env=e49.0
  void                    Deopt              !v    %90.0, Typecheck@0x55804e19e1f0[Type#18], %83.2   !
BB91   <- [87]
  prom-           %91.0 = MkArg                    unboundValue, [0x55804efd8650]_p4, e49.0
  prom-           %91.1 = MkArg                    unboundValue, [0x55804efd8650]_p5, e49.0
  prom-           %91.2 = MkArg                    unboundValue, [0x55804efd8650]_p6, e49.0
  val?            %91.3 = StaticCall         !     addLocalFunDef[0x55804e4190c0](%91.0, %91.1, %91.2) e49.0   <vec$->
  val?            %91.4 = %91.3
  goto BB31
BB92   <- [87]
  void                    Nop                !     
  val?^ | miss    %92.1 = %87.0
  dr              %92.2 = CallTarget@0x55804e19e1f0[Call#7]
  goto BB29
BB29   <- [88, 92]
  val?^ | miss    %29.0 = Phi                      %88.1:BB88, %92.1:BB92
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %88.2:BB88, %92.2:BB92
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x55804ec9bac0+505: [%65.0, %28.1], env=e49.0
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("<-", "<<-") e0.0   <str->
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ [0x55804efd8650]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
