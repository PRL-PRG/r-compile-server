
┌──────────────────────────────────────────────────────────────────────────────┐
│ getLocalUsageEntry[0x55804e0b7e40]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
getLocalUsageEntry[0x55804e0b7e40]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    findOwnerEnv, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Branch                   %0.3 -> BB31 (if true) | BB32 (if false)
BB31   <- [0]
  env             e31.0 = MkEnv              l     vn=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %31.1 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p0, e31.0
  prom-           %31.2 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p1, e31.0
  prom-           %31.3 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p4, e31.0
  prom-           %31.4 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p7, e31.0
  val?            %31.5 = StaticCall         !v    findOwnerEnv[0x55804f841000](%31.1, %31.2, %31.3, %31.4) { 0 1 2n 3n } e31.0   <env+>
  void                    StVar              lW    env, %31.5, e31.0
  val?^ | miss    %31.7 = LdVar              eR    is.baseenv, e31.0
  lgl$#-          %31.8 = Identical                %31.7, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %31.8 -> BB33 (if true) | BB34 (if false)
BB32   <- [0]
  env             e32.0 = (MkEnv)            l     vn=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %32.1 = FrameState         R     0x55804e1e4250+0: [], env=e32.0
  void                    Deopt              !v    %32.1, CallTarget@0x55804eaea998[Call#0], %0.2
BB33   <- [31]
  prom-           %33.0 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p8 (!refl), e31.0
  ct              %33.1 = PushContext        lCL   %33.0, is.baseenv(env), function(e) <(rir::DispatchTable*)0x55804e41e7|..., e31.0
  val?^           %33.2 = CastType                 up %33.0
  val?^ | miss    %33.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %33.4 = Identical                %33.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %33.4 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  fs              %34.0 = FrameState         R     0x55804e1e4250+77: [], env=e31.0
  void                    Deopt              !v    %34.0, CallTarget@0x55804eaea998[Call#3], %31.7   !
BB35   <- [33]
  env             e35.0 = MkEnv              l     e=%33.2, parent=<env 0x55804e699488>, context 1
  prom-           %35.1 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p14, e35.0
  prom-           %35.2 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p15, e35.0
  ct              %35.3 = PushContext        lCL   %35.1, %35.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e35.0
  val?^           %35.4 = CastType                 up %35.2
  val?^           %35.5 = CastType                 up %35.1
  env             e35.6 = MkEnv              l     x=%35.5, y=%35.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %35.7 = Force!<lazy>       !vL   %35.5, e35.6   <val?+>
  val?            %35.8 = Force!<lazy>       !vL   %35.4, e35.6   <val?+>
  val?            %35.9 = CallBuiltin        !v    identical(%35.7, %35.8, true, true, true, true, false, true) e35.6
  val?            %35.10 = PopContext         C     %35.9, %35.3   <lgl$->
  lgl$#-          %35.11 = IsType                   %35.10 isA lgl$-
  void                    Branch                   %35.11 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x55804e1e4250+109: [], env=e31.0
  env             e36.1 = (MkEnv)            l     e=%33.2, parent=<env 0x55804e699488>, context 1
  fs              %36.2 = FrameState         R     0x55804eb37490+0: [], env=e36.1, next=%36.0
  void                    Deopt              !v    %36.2, CallTarget@0x55804ea246f8[Call#0], %33.3   !
BB37   <- [35]
  lgl$-           %37.0 = CastType           d     dn %35.10
  val?            %37.1 = PopContext         C     %37.0, %33.1   <lgl$->
  lgl$#-          %37.2 = IsType                   %37.1 isA lgl$-
  void                    Branch                   %37.2 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  fs              %38.0 = FrameState         R     0x55804e1e4250+109: [], env=e31.0
  fs              %38.1 = FrameState         R     0x55804eb37490+37: [%35.10], env=e35.0, next=%38.0
  void                    Deopt              !v    %38.1, Typecheck@0x55804ea246f8[Type#2], %35.10   !
BB39   <- [37]
  lgl$-           %39.0 = CastType           d     dn %37.1
  lgl$#-          %39.1 = CheckTrueFalse     e     %39.0
  void                    Branch                   %39.1 -> BB29 (if true) | BB11 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x55804e1e4250+109: [%37.1], env=e31.0
  void                    Deopt              !v    %40.0, Typecheck@0x55804eaea998[Type#10], %37.1   !
BB29   <- [39]
  (cls|spec|blt)  %29.0 = LdFun              !v    stop, e31.0
  val?            %29.1 = Call               !v    %29.0("no local variable entry") e31.0
  goto BB12
BB11   <- [39]
  void                    Nop                !     
  goto BB12
BB12   <- [11, 29]
  val?^ | miss    %12.0 = LdVar              eR    identical, e31.0
  lgl$#-          %12.1 = Identical                %12.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %12.1 -> BB41 (if true) | BB42 (if false)
BB41   <- [12]
  prom-           %41.0 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p9, e31.0
  prom-           %41.1 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p10, e31.0
  ct              %41.2 = PushContext        lCL   %41.0, %41.1, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e31.0
  val?^           %41.3 = CastType                 up %41.1
  val?^           %41.4 = CastType                 up %41.0
  env             e41.5 = MkEnv              l     x=%41.4, y=%41.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %41.6 = Force!<lazy>       !vL   %41.4, e41.5   <val?+>
  val?            %41.7 = Force!<lazy>       !vL   %41.3, e41.5   <val?+>
  val?            %41.8 = CallBuiltin        !v    identical(%41.6, %41.7, true, true, true, true, false, true) e41.5
  val?            %41.9 = PopContext         C     %41.8, %41.2   <lgl$->
  lgl$#-          %41.10 = IsType                   %41.9 isA lgl$-
  void                    Branch                   %41.10 -> BB43 (if true) | BB44 (if false)
BB42   <- [12]
  fs              %42.0 = FrameState         R     0x55804e1e4250+158: [], env=e31.0
  void                    Deopt              !v    %42.0, CallTarget@0x55804eaea998[Call#5], %12.0   !
BB43   <- [41]
  lgl$-           %43.0 = CastType           d     dn %41.9
  lgl$-           %43.1 = Not                d     %43.0, elided
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB28 (if true) | BB17 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x55804e1e4250+195: [%41.9], env=e31.0
  void                    Deopt              !v    %44.0, Typecheck@0x55804eaea998[Type#14], %41.9   !
BB28   <- [43]
  (cls|spec|blt)  %28.0 = LdFun              !v    stop, e31.0
  val?            %28.1 = Call               !v    %28.0("sanity check on local usage frame failed") e31.0
  goto BB18
BB17   <- [43]
  void                    Nop                !     
  goto BB18
BB18   <- [17, 28]
  val?^ | miss    %18.0 = LdVar              eR    get, e31.0
  lgl$#-          %18.1 = Identical                %18.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %18.1 -> BB45 (if true) | BB46 (if false)
BB45   <- [18]
  prom-           %45.0 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p12, e31.0
  prom-           %45.1 = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p13, e31.0
  val?            %45.2 = StaticCall         !v    get[0x55804ec4e6f0](%45.0, missingArg, %45.1, missingArg, false) { 0 2n 4n } e31.0   <env->
  void                    StVar              lW    entry, %45.2, e31.0
  val?^ | miss    %45.4 = LdVar              eR    is.environment, e31.0
  lgl$#-          %45.5 = Identical                <blt is.environment>, %45.4   <true>
  void                    Branch                   %45.5 -> BB47 (if true) | BB48 (if false)
BB46   <- [18]
  fs              %46.0 = FrameState         R     0x55804e1e4250+245: [], env=e31.0
  void                    Deopt              !v    %46.0, CallTarget@0x55804eaea998[Call#8], %18.0   !
BB47   <- [45]
  val             %47.0 = ChkMissing         e     %45.2
  lgl$#-          %47.1 = CallSafeBuiltin    wed   is.environment(%45.2) 
  void                    Branch                   %47.1 -> BB27 (if true) | BB23 (if false)
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x55804e1e4250+313: [], env=e31.0
  void                    Deopt              !v    %48.0, DeadBranchReached@0x55804eaea998[Test#0], %45.5   !
BB27   <- [47]
  void                    Nop                !     
  goto BB24
BB23   <- [47]
  (cls|spec|blt)  %23.0 = LdFun              !v    stop, e31.0
  val?            %23.1 = Call               !v    %23.0("bad local variable entry") e31.0
  goto BB24
BB24   <- [27, 23]
  val?^ | miss    %24.0 = LdVar              eR    entry, e31.0
  lgl$#-          %24.1 = IsType                   %24.0 isA val?~- | miss
  void                    Branch                   %24.1 -> BB49 (if true) | BB50 (if false)
BB49   <- [24]
  val?~- | miss   %49.0 = CastType           d     dn %24.0
  void                    Visible            v     
  val?-           %49.2 = Force!<value>            %49.0,    <env->
  void                    Return             l     %49.2
BB50   <- [24]
  fs              %50.0 = FrameState         R     0x55804e1e4250+454: [], env=e31.0
  void                    Deopt              !v    %50.0, Typecheck@0x55804eaea998[Type#21], %24.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p5, e0.0
  prom-           %0.3  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p6, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x55804bee1080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getLocalUsageEntry[0x55804e0b7e40]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "checkUsageFrame") e0.0   <env+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ getLocalUsageEntry[0x55804e0b7e40]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
