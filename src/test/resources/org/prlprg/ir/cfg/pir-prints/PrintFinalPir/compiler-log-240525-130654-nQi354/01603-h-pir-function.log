
┌──────────────────────────────────────────────────────────────────────────────┐
│ h[0x55804e727900]                                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
h[0x55804e727900]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  (cls|spec|blt)  %0.3  = LdFun              !v    $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %0.4  = MkArg                    unboundValue, h[0x55804e727900]_p0 (!refl), e0.2
  prom-           %0.5  = MkArg                    unboundValue, h[0x55804e727900]_p1, e0.2
  val?            %0.6  = Call               !v    %0.3(%0.4, %0.5) e0.2   <cls->
  (cls|spec|blt)  %0.7  = ChkFunction        e     %0.6
  prom-           %0.8  = MkArg                    unboundValue, h[0x55804e727900]_p2, e0.2
  prom-           %0.9  = MkArg                    unboundValue, h[0x55804e727900]_p3, e0.2
  lgl$#-          %0.10 = Identical                %0.7, function(type, n, e, w) <(rir::DispatchTable*)|...
  void                    Branch                   %0.10 -> BB16 (if true) | BB17 (if false)
BB16   <- [0]
  val?            %16.0 = StaticCall         !v    [0x558050a28900]("function", "for", %0.8, %0.9) e0.2
  val?^ | miss    %16.1 = LdVar              eR    as.character, e0.2
  lgl$#-          %16.2 = Identical                <blt as.character>, %16.1   <true>
  void                    Branch                   %16.2 -> BB18 (if true) | BB19 (if false)
BB17   <- [0]
  fs              %17.0 = FrameState         R     0x55804edc8020+37: [%0.6], env=e0.2
  void                    Deopt              !v    %17.0, CallTarget@0x558050c2c4a8[Call#1], %0.7   !
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    e, e0.2
  val?            %18.1 = Force!<wrapped>    !v    %18.0, e0.2   <code->
  lgl$#-          %18.2 = IsType                   %18.1 isA val+   <true>
  lgl$#-          %18.3 = IsType                   %18.1 isA val?-
  void                    Branch                   %18.2 -> BB20 (if true) | BB21 (if false)
BB19   <- [16]
  fs              %19.0 = FrameState         R     0x55804edc8020+85: [%16.0], env=e0.2
  void                    Deopt              !v    %19.0, DeadBranchReached@0x558050c2c4a8[Test#0], %16.2   !
BB20   <- [18]
  void                    Branch                   %18.3 -> BB22 (if true) | BB23 (if false)
BB21   <- [18]
  void                    Nop                !     
  lgl$#-          %21.1 = %18.2
  dr              %21.2 = DeadBranchReached@0x558050c2c4a8[Test#2]
  goto BB5
BB22   <- [20]
  val?-           %22.0 = CastType           d     dn %18.1   <code->
  val?            %22.1 = Extract2_1D        wed   %22.0, 2, elided   <sym->
  lgl$#-          %22.2 = IsType                   %22.1 isA val?-
  void                    Branch                   %22.2 -> BB24 (if true) | BB25 (if false)
BB23   <- [20]
  void                    Nop                !     
  val?            %23.1 = %18.1
  dr              %23.2 = Typecheck@0x558050c2c4a8[Type#7]
  goto BB5
BB5   <- [21, 23]
  val?^ | miss    %5.0  = Phi                      %21.1:BB21, %23.1:BB23
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %21.2:BB21, %23.2:BB23
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55804edc8020+155: [<blt as.character>, %18.1], env=e0.2
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB24   <- [22]
  val?-           %24.0 = CastType           d     dn %22.1   <sym->
  val+            %24.1 = CallSafeBuiltin    vwed  as.character(%24.0)    <str$->
  void                    StVar              lW    v, %24.1, e0.2
  (cls|spec|blt)  %24.3 = LdFun              !     $, <0x55804bee0c10>, e0.2
  prom-           %24.4 = MkArg                    unboundValue, h[0x55804e727900]_p4, e0.2
  prom-           %24.5 = MkArg                    unboundValue, h[0x55804e727900]_p5, e0.2
  val?            %24.6 = Call               !     %24.3(%24.4, %24.5) e0.2   <cls->
  (cls|spec|blt)  %24.7 = ChkFunction        e     %24.6
  prom-           %24.8 = MkArg                    unboundValue, h[0x55804e727900]_p6, e0.2
  prom-           %24.9 = MkArg                    unboundValue, h[0x55804e727900]_p7, e0.2
  prom-           %24.10 = MkArg                    unboundValue, h[0x55804e727900]_p8, e0.2
  lgl$#-          %24.11 = Identical                %24.7, function(type, n, e, w) <(rir::DispatchTable*)|...
  void                    Branch                   %24.11 -> BB26 (if true) | BB27 (if false)
BB25   <- [22]
  fs              %25.0 = FrameState         R     0x55804edc8020+198: [<blt as.character>, %22.1], env=e0.2
  void                    Deopt              !v    %25.0, Typecheck@0x558050c2c4a8[Type#8], %22.1   !
BB26   <- [24]
  val?            %26.0 = StaticCall         !     [0x55804efc9880]("for", %24.8, %24.9, %24.10) e0.2
  val?^ | miss    %26.1 = LdVar              eR    walkCode, e0.2
  lgl$#-          %26.2 = Identical                %26.1, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %26.2 -> BB28 (if true) | BB29 (if false)
BB27   <- [24]
  fs              %27.0 = FrameState         R     0x55804edc8020+272: [%24.6], env=e0.2
  void                    Deopt              !v    %27.0, CallTarget@0x558050c2c4a8[Call#4], %24.7   !
BB28   <- [26]
  prom-           %28.0 = MkArg                    unboundValue, h[0x55804e727900]_p9, e0.2
  prom-           %28.1 = MkArg                    unboundValue, h[0x55804e727900]_p10, e0.2
  val?            %28.2 = StaticCall         !     walkCode[0x55804ec53970](%28.0, %28.1) e0.2
  val?^ | miss    %28.3 = LdVar              eR    walkCode, e0.2
  lgl$#-          %28.4 = Identical                %28.3, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %28.4 -> BB30 (if true) | BB31 (if false)
BB29   <- [26]
  fs              %29.0 = FrameState         R     0x55804edc8020+320: [%26.0], env=e0.2
  void                    Deopt              !v    %29.0, CallTarget@0x558050c2c4a8[Call#5], %26.1   !
BB30   <- [28]
  prom-           %30.0 = MkArg                    unboundValue, h[0x55804e727900]_p11, e0.2
  prom-           %30.1 = MkArg                    unboundValue, h[0x55804e727900]_p12, e0.2
  val?            %30.2 = StaticCall         !     walkCode[0x55804ec53970](%30.0, %30.1) e0.2   <nil->
  void                    Return             l     %30.2
BB31   <- [28]
  fs              %31.0 = FrameState         R     0x55804edc8020+358: [%28.2], env=e0.2
  void                    Deopt              !v    %31.0, CallTarget@0x558050c2c4a8[Call#6], %28.3   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enterGlobal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enterLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 3, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 4, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ h[0x55804e727900]                                                            │
└──────────────────────────────────────────────────────────────────────────────┘
