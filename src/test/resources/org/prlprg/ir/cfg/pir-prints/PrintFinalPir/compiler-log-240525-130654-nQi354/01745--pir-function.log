
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804ebe5360]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1                       │
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804ebe5360]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     v=%0.1, w=%0.0, parent=?, context 1
  (cls|spec|blt)  %0.3  = LdFun              !v    $, <0x55804bee0c10>, ?
  prom-           %0.4  = MkArg                    unboundValue, [0x55804ebe5360]_p0 (!refl), e0.2
  prom-           %0.5  = MkArg                    unboundValue, [0x55804ebe5360]_p1, e0.2
  val?            %0.6  = Call               !v    %0.3(%0.4, %0.5) e0.2   <cls->
  (cls|spec|blt)  %0.7  = ChkFunction        e     %0.6
  prom-           %0.8  = MkArg                    unboundValue, [0x55804ebe5360]_p2, e0.2
  prom-           %0.9  = MkArg                    unboundValue, [0x55804ebe5360]_p3, e0.2
  lgl$#-          %0.10 = Identical                %0.7, function(v, w) <(rir::DispatchTable*)0x55804f3|...
  val?^           %0.11 = CastType                 up %0.9
  val?^           %0.12 = CastType                 up %0.8
  void                    Branch                   %0.10 -> BB28 (if true) | BB29 (if false)
BB28   <- [0]
  ct              %28.0 = PushContext        lCL   %0.8, %0.9, $(w, foldable)(v, w), function(v, w) <(rir::DispatchTable*)0x55804f3|..., e0.2
  val?^ | miss    %28.1 = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %28.2 = Identical                %28.1, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %28.2 -> BB30 (if true) | BB31 (if false)
BB29   <- [0]
  fs              %29.0 = FrameState         R     0x55804e669bc0+37: [%0.6], env=e0.2
  void                    Deopt              !v    %29.0, CallTarget@0x55804e398148[Call#1], %0.7   !
BB30   <- [28]
  env             e30.0 = MkEnv              l     v=%0.12, w=%0.11, parent=<env 0x55804e699488>, context 1
  val?            %30.1 = Force!<lazy>       !vL   %0.12, e30.0   <str$->
  str$-           %30.2 = CallSafeBuiltin    wed   typeof(%30.1)    <str$->
  lgl$-           %30.3 = Eq                 d     %30.2, "symbol", elided   <lgl$->
  lgl$-           %30.4 = AsLogical                %30.3
  lgl$#-          %30.5 = Identical                %30.4, true
  void                    Branch                   %30.5 -> BB26 (if true) | BB7 (if false)
BB31   <- [28]
  fs              %31.0 = FrameState         R     0x55804e669bc0+75: [], env=e0.2
  env             e31.1 = (MkEnv)            l     v=%0.12, w=%0.11, parent=<env 0x55804e699488>, context 1
  fs              %31.2 = FrameState         R     0x55804f23f890+0: [], env=e31.1, next=%31.0
  void                    Deopt              !v    %31.2, CallTarget@0x55804e397858[Call#0], %28.1   !
BB26   <- [30]
  void                    Nop                !     
  lgl$-           %26.1 = %30.4
  goto BB8
BB7   <- [30]
  val?^ | miss    %7.0  = LdVar              eR    typeof, <env 0x55804e699488>
  lgl$#-          %7.1  = Identical                %7.0, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %7.1 -> BB32 (if true) | BB33 (if false)
BB8   <- [26, 32]
  lgl$-           %8.0  = Phi                      %32.3:BB32, %26.1:BB26
  lgl$-           %8.1  = %8.0
  lgl$-           %8.2  = AsLogical                %8.1
  lgl$#-          %8.3  = Identical                %8.2, false
  void                    Branch                   %8.3 -> BB25 (if true) | BB9 (if false)
BB32   <- [7]
  lgl$-           %32.0 = Eq                 d     %30.2, "character", elided   <lgl$->
  lgl$-           %32.1 = AsLogical                %32.0
  lgl$-           %32.2 = LOr                      %30.4, %32.1
  lgl$-           %32.3 = %32.2
  goto BB8
BB33   <- [7]
  void                    Nop                !     
  val?^ | miss    %33.1 = %7.0
  dr              %33.2 = CallTarget@0x55804e397858[Call#1]
  goto BB5
BB25   <- [8]
  void                    Nop                !     
  lgl$-           %25.1 = %8.2
  goto BB12
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %9.1  = Identical                %9.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %9.1 -> BB34 (if true) | BB35 (if false)
BB5   <- [33, 35]
  val?^ | miss    %5.0  = Phi                      %33.1:BB33, %35.1:BB35
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %33.2:BB33, %35.2:BB35
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55804e669bc0+75: [], env=e0.2
  fs              %5.5  = FrameState         R     0x55804f23f890+32: [], env=e30.0, next=%5.4
  prom-           %5.6  = MkArg                    %30.1, [0x55804ebe5360]_p4 (!refl), e30.0
  val?~           %5.7  = CastType                 up %5.6
  env             e5.8  = (MkEnv)            l     x=%5.7, parent=R_BaseNamespace, context 0
  fs              %5.9  = FrameState         R     0x55804e7773a0+27: [%30.2], env=e5.8, next=%5.5
  void                    Deopt              !v    %5.9, %5.3, %5.1   !
BB12   <- [25, 36]
  lgl$-           %12.0 = Phi                      %36.3:BB36, %25.1:BB25
  lgl$-           %12.1 = %12.0
  lgl$-           %12.2 = AsLogical                %12.1
  lgl$#-          %12.3 = Identical                %12.2, false
  void                    Branch                   %12.3 -> BB24 (if true) | BB13 (if false)
BB34   <- [9]
  prom-           %34.0 = MkArg                    unboundValue, [0x55804ebe5360]_p6, e30.0
  prom-           %34.1 = MkArg                    unboundValue, [0x55804ebe5360]_p8, e30.0
  val?            %34.2 = StaticCall         !v    %in%[0x55804fb5f860](%34.0, %34.1) e30.0   <lgl$->
  lgl$#-          %34.3 = IsType                   %34.2 isA lgl$-
  void                    Branch                   %34.3 -> BB36 (if true) | BB37 (if false)
BB35   <- [9]
  void                    Nop                !     
  val?^ | miss    %35.1 = %9.0
  dr              %35.2 = CallTarget@0x55804e397858[Call#2]
  goto BB5
BB24   <- [12]
  void                    Nop                !     
  lgl$-           %24.1 = %12.2
  goto BB18
BB13   <- [12]
  (cls|spec|blt)  %13.0 = LdFun              !v    $, <0x55804bee0c10>, e30.0
  prom-           %13.1 = MkArg                    unboundValue, [0x55804ebe5360]_p9, e30.0
  prom-           %13.2 = MkArg                    unboundValue, [0x55804ebe5360]_p10, e30.0
  val?            %13.3 = Call               !v    %13.0(%13.1, %13.2) e30.0   <cls->
  (cls|spec|blt)  %13.4 = ChkFunction        e     %13.3
  prom-           %13.5 = MkArg                    unboundValue, [0x55804ebe5360]_p11, e30.0
  prom-           %13.6 = MkArg                    unboundValue, [0x55804ebe5360]_p12, e30.0
  val+            %13.7 = CallSafeBuiltin          bodyCode(%13.4) 
  lgl$#-          %13.8 = Identical                %13.7, <(rir::DispatchTable*)0x55804edf3270>
  void                    Branch                   %13.8 -> BB38 (if true) | BB39 (if false)
BB36   <- [34]
  lgl$-           %36.0 = CastType           d     dn %34.2
  lgl$-           %36.1 = AsLogical                %36.0
  lgl$-           %36.2 = LAnd                     %8.2, %36.1
  lgl$-           %36.3 = %36.2
  goto BB12
BB37   <- [34]
  fs              %37.0 = FrameState         R     0x55804e669bc0+75: [], env=e0.2
  fs              %37.1 = FrameState         R     0x55804f23f890+152: [%8.2, %34.2], env=e30.0, next=%37.0
  void                    Deopt              !v    %37.1, Typecheck@0x55804e397858[Type#9], %34.2   !
BB18   <- [24, 42]
  lgl$-           %18.0 = Phi                      %42.4:BB42, %24.1:BB24
  lgl$-           %18.1 = %18.0
  val?            %18.2 = PopContext         C     %18.1, %28.0   <lgl$->
  lgl$#-          %18.3 = IsType                   %18.2 isA lgl$-
  void                    Branch                   %18.3 -> BB40 (if true) | BB41 (if false)
BB38   <- [13]
  val?            %38.0 = StaticCall         !v    [0x55804cab1170](%13.5, %13.6) from %13.4 e30.0   <lgl$->
  lgl$#-          %38.1 = IsType                   %38.0 isA lgl$-
  void                    Branch                   %38.1 -> BB42 (if true) | BB43 (if false)
BB39   <- [13]
  fs              %39.0 = FrameState         R     0x55804e669bc0+75: [], env=e0.2
  fs              %39.1 = FrameState         R     0x55804f23f890+203: [%12.2, %13.3], env=e30.0, next=%39.0
  void                    Deopt              !v    %39.1, CallTarget@0x55804e397858[Call#5], %13.7   !
BB40   <- [18]
  lgl$-           %40.0 = CastType           d     dn %18.2
  lgl$#-          %40.1 = CheckTrueFalse     e     %40.0
  void                    Branch                   %40.1 -> BB23 (if true) | BB21 (if false)
BB41   <- [18]
  fs              %41.0 = FrameState         R     0x55804e669bc0+75: [%18.2], env=e0.2
  void                    Deopt              !v    %41.0, Typecheck@0x55804e398148[Type#5], %18.2   !
BB42   <- [38]
  lgl$-           %42.0 = CastType           d     dn %38.0
  lgl$-           %42.1 = Not                d     %42.0, elided
  lgl$-           %42.2 = AsLogical                %42.1
  lgl$-           %42.3 = LAnd                     %12.2, %42.2
  lgl$-           %42.4 = %42.3
  goto BB18
BB43   <- [38]
  fs              %43.0 = FrameState         R     0x55804e669bc0+75: [], env=e0.2
  fs              %43.1 = FrameState         R     0x55804f23f890+241: [%12.2, %38.0], env=e30.0, next=%43.0
  void                    Deopt              !v    %43.1, Typecheck@0x55804e397858[Type#15], %38.0   !
BB23   <- [40]
  val?^ | miss    %23.0 = LdVar              eR    foldCall, e0.2
  void                    Visible            v     
  val?            %23.2 = Force!             !     %23.0, e0.2   <val?_>
  val?            %23.3 = %23.2
  goto BB22
BB21   <- [40]
  void                    Invisible          v     
  nil-            %21.1 = nil
  goto BB22
BB22   <- [21, 23]
  val?            %22.0 = Phi                      %21.1:BB21, %23.3:BB23
  val?            %22.1 = %22.0
  void                    Return             l     %22.1
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    foldable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804ebe5360]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    foldFuns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ [0x55804ebe5360]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
