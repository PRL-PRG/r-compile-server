
┌──────────────────────────────────────────────────────────────────────────────┐
│ isLocal[0x55804eb62c60]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
isLocal[0x55804eb62c60]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    as.character, ?
  lgl$#-          %0.3  = Identical                <blt as.character>, %0.2   <true>
  void                    Branch                   %0.3 -> BB24 (if true) | BB25 (if false)
BB24   <- [0]
  env             e24.0 = MkEnv              l     v=%0.1, w=%0.0, parent=?, context 1
  val+            %24.1 = Force!<lazy>       !vr   %0.1,    <str$->
  val+            %24.2 = CallSafeBuiltin    wed   as.character(%24.1)    <str$->
  void                    StVar              lW    vname, %24.2, e24.0
  val?^ | miss    %24.4 = LdVar              eR    identical, ?
  lgl$#-          %24.5 = Identical                %24.4, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %24.5 -> BB26 (if true) | BB27 (if false)
BB25   <- [0]
  env             e25.0 = (MkEnv)            l     v=%0.1, w=%0.0, parent=?, context 1
  fs              %25.1 = FrameState         R     0x55804fb8e120+17: [<blt as.character>, %0.3], env=e25.0
  void                    Deopt              !v    %25.1, DeadBranchReached@0x55804e398b98[Test#0], %0.3
BB26   <- [24]
  prom-           %26.0 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p0, e24.0
  prom-           %26.1 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p1, e24.0
  ct              %26.2 = PushContext        lCL   %26.0, %26.1, identical(env, .GlobalEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e24.0
  val?^           %26.3 = CastType                 up %26.1
  val?^           %26.4 = CastType                 up %26.0
  env             e26.5 = MkEnv              l     x=%26.4, y=%26.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %26.6 = Force!<lazy>       !vL   %26.4, e26.5   <val?+>
  val?            %26.7 = Force!<lazy>       !vL   %26.3, e26.5   <val?+>
  val?            %26.8 = CallBuiltin        !v    identical(%26.6, %26.7, true, true, true, true, false, true) e26.5
  val?            %26.9 = PopContext         C     %26.8, %26.2   <lgl$->
  lgl$#-          %26.10 = IsType                   %26.9 isA lgl$-
  void                    Branch                   %26.10 -> BB28 (if true) | BB29 (if false)
BB27   <- [24]
  fs              %27.0 = FrameState         R     0x55804fb8e120+105: [], env=e24.0
  void                    Deopt              !v    %27.0, CallTarget@0x55804e398b98[Call#1], %24.4
BB28   <- [26]
  lgl$-           %28.0 = CastType           d     dn %26.9
  lgl$-           %28.1 = Not                d     %28.0, elided
  lgl$#-          %28.2 = CheckTrueFalse     e     %28.1   <true>
  void                    Branch                   %28.2 -> BB30 (if true) | BB31 (if false)
BB29   <- [26]
  void                    Nop                !     
  val?            %29.1 = %26.9
  dr              %29.2 = Typecheck@0x55804e398b98[Type#5]
  goto BB5
BB30   <- [28]
  val?^ | miss    %30.0 = LdVar              eR    exists, e24.0
  lgl$#-          %30.1 = Identical                %30.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %30.1 -> BB32 (if true) | BB33 (if false)
BB31   <- [28]
  void                    Nop                !     
  lgl$#-          %31.1 = %28.2
  dr              %31.2 = DeadBranchReached@0x55804e398b98[Test#1]
  goto BB5
BB5   <- [29, 31, 33]
  val?^ | miss    %5.0  = Phi                      %29.1:BB29, %31.1:BB31, %33.1:BB33
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %29.2:BB29, %31.2:BB31, %33.2:BB33
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55804fb8e120+142: [%26.9], env=e24.0
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB32   <- [30]
  prom-           %32.0 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p2, e24.0
  prom-           %32.1 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p3, e24.0
  val?            %32.2 = StaticCall         !v    exists[0x55804e111800](%32.0, %32.1, missingArg, missingArg, missingArg, false) { 0 1 5n } e24.0   <lgl$->
  lgl$#-          %32.3 = IsType                   %32.2 isA lgl$-
  void                    Branch                   %32.3 -> BB34 (if true) | BB35 (if false)
BB33   <- [30]
  void                    Nop                !     
  val?^ | miss    %33.1 = %30.0
  dr              %33.2 = CallTarget@0x55804e398b98[Call#2]
  goto BB5
BB34   <- [32]
  lgl$-           %34.0 = CastType           d     dn %32.2
  lgl$#-          %34.1 = CheckTrueFalse     e     %34.0
  void                    Branch                   %34.1 -> BB22 (if true) | BB9 (if false)
BB35   <- [32]
  void                    Nop                !     
  val?            %35.1 = %32.2
  dr              %35.2 = Typecheck@0x55804e398b98[Type#8]
  goto BB7
BB22   <- [34]
  void                    Visible            v     
  lgl$#-          %22.1 = true
  goto BB16
BB9   <- [34]
  val?^ | miss    %9.0  = LdVar              eR    parent.env, e24.0
  lgl$#-          %9.1  = Identical                %9.0, function(env) <(rir::DispatchTable*)0x55804e3c|...
  void                    Branch                   %9.1 -> BB36 (if true) | BB37 (if false)
BB7   <- [35, 37]
  val?^ | miss    %7.0  = Phi                      %35.1:BB35, %37.1:BB37
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %35.2:BB35, %37.2:BB37
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55804fb8e120+213: [%32.2], env=e24.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB16   <- [21, 22, 15]
  lgl$#-          %16.0 = Phi                      %21.1:BB21, %15.1:BB15, %22.1:BB22
  lgl$#-          %16.1 = %16.0
  void                    Return             l     %16.1
BB36   <- [9]
  val?^ | miss    %36.0 = LdVar              eR    env, e24.0
  val?            %36.1 = Force!<wrapped>    !v    %36.0, e24.0   <env+>
  prom-           %36.2 = MkArg                    %36.1, isLocal[0x55804eb62c60]_p4 (!refl), 
  val?            %36.3 = StaticCall         !v    parent.env[0x55804e586320](%36.2) e24.0   <env+>
  void                    StVar              lW    env, %36.3, e24.0
  goto BB10
BB37   <- [9]
  void                    Nop                !     
  val?^ | miss    %37.1 = %9.0
  dr              %37.2 = CallTarget@0x55804e398b98[Call#3]
  goto BB7
BB10   <- [36, 46]
  val?^ | miss    %10.0 = LdVar              eR    identical, e24.0
  lgl$#-          %10.1 = Identical                %10.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %10.1 -> BB38 (if true) | BB39 (if false)
BB38   <- [10]
  prom-           %38.0 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p5 (!refl), e24.0
  prom-           %38.1 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p6, e24.0
  ct              %38.2 = PushContext        lCL   %38.0, %38.1, identical(env, .GlobalEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e24.0
  val?^           %38.3 = CastType                 up %38.1
  val?^           %38.4 = CastType                 up %38.0
  env             e38.5 = MkEnv              l     x=%38.4, y=%38.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %38.6 = Force!<lazy>       !vr   %38.4, e38.5   <val?+>
  val?^ | miss    %38.7 = LdVar              eR    y, e38.5
  val?            %38.8 = Force!<lazy>       !v    %38.7, e38.5   <val?+>
  val?^ | miss    %38.9 = LdVar              eR    num.eq, e38.5
  val?            %38.10 = Force!<lazy>       !v    %38.9, e38.5   <lgl$->
  val?^ | miss    %38.11 = LdVar              eR    single.NA, e38.5
  val?            %38.12 = Force!<lazy>       !v    %38.11, e38.5   <lgl$->
  val?^ | miss    %38.13 = LdVar              eR    attrib.as.set, e38.5
  val?            %38.14 = Force!<lazy>       !v    %38.13, e38.5   <lgl$->
  val?^ | miss    %38.15 = LdVar              eR    ignore.bytecode, e38.5
  val?            %38.16 = Force!<lazy>       !v    %38.15, e38.5   <lgl$->
  val?^ | miss    %38.17 = LdVar              eR    ignore.environment, e38.5
  val?            %38.18 = Force!<lazy>       !v    %38.17, e38.5   <lgl$->
  val?^ | miss    %38.19 = LdVar              eR    ignore.srcref, e38.5
  val?            %38.20 = Force!<lazy>       !v    %38.19, e38.5   <lgl$->
  val?            %38.21 = CallBuiltin        !v    identical(%38.6, %38.8, %38.10, %38.12, %38.14, %38.16, %38.18, %38.20) e38.5
  val?            %38.22 = PopContext         C     %38.21, %38.2   <lgl$->
  lgl$#-          %38.23 = IsType                   %38.22 isA lgl$-
  void                    Branch                   %38.23 -> BB40 (if true) | BB41 (if false)
BB39   <- [10]
  fs              %39.0 = FrameState         R     0x55804fb8e120+282: [], env=e24.0
  void                    Deopt              !v    %39.0, CallTarget@0x55804e398b98[Call#4], %10.0   !
BB40   <- [38]
  lgl$-           %40.0 = CastType           d     dn %38.22
  lgl$-           %40.1 = Not                d     %40.0, elided
  lgl$#-          %40.2 = CheckTrueFalse     e     %40.1
  void                    Branch                   %40.2 -> BB17 (if true) | BB15 (if false)
BB41   <- [38]
  void                    Nop                !     
  val?            %41.1 = %38.22
  dr              %41.2 = Typecheck@0x55804e398b98[Type#13]
  goto BB13
BB17   <- [40]
  val?^ | miss    %17.0 = LdVar              eR    exists, e24.0
  lgl$#-          %17.1 = Identical                %17.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %17.1 -> BB42 (if true) | BB43 (if false)
BB15   <- [40]
  void                    Visible            v     
  lgl$#-          %15.1 = false
  goto BB16
BB13   <- [41, 43]
  val?^ | miss    %13.0 = Phi                      %41.1:BB41, %43.1:BB43
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %41.2:BB41, %43.2:BB43
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55804fb8e120+319: [%38.22], env=e24.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB42   <- [17]
  prom-           %42.0 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p7, e24.0
  prom-           %42.1 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p8, e24.0
  val?            %42.2 = StaticCall         !v    exists[0x55804e111800](%42.0, %42.1, missingArg, missingArg, missingArg, false) { 0 1 5n } e24.0   <lgl$->
  lgl$#-          %42.3 = IsType                   %42.2 isA lgl$-
  void                    Branch                   %42.3 -> BB44 (if true) | BB45 (if false)
BB43   <- [17]
  void                    Nop                !     
  val?^ | miss    %43.1 = %17.0
  dr              %43.2 = CallTarget@0x55804e398b98[Call#5]
  goto BB13
BB44   <- [42]
  lgl$-           %44.0 = CastType           d     dn %42.2
  lgl$#-          %44.1 = CheckTrueFalse     e     %44.0
  void                    Branch                   %44.1 -> BB21 (if true) | BB20 (if false)
BB45   <- [42]
  void                    Nop                !     
  val?            %45.1 = %42.2
  dr              %45.2 = Typecheck@0x55804e398b98[Type#16]
  goto BB18
BB21   <- [44]
  void                    Visible            v     
  lgl$#-          %21.1 = true
  goto BB16
BB20   <- [44]
  val?^ | miss    %20.0 = LdVar              eR    parent.env, e24.0
  lgl$#-          %20.1 = Identical                %20.0, function(env) <(rir::DispatchTable*)0x55804e3c|...
  void                    Branch                   %20.1 -> BB46 (if true) | BB47 (if false)
BB18   <- [45, 47]
  val?^ | miss    %18.0 = Phi                      %45.1:BB45, %47.1:BB47
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %45.2:BB45, %47.2:BB47
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55804fb8e120+385: [%42.2], env=e24.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB46   <- [20]
  prom-           %46.0 = MkArg                    unboundValue, isLocal[0x55804eb62c60]_p9, e24.0
  val?^ | miss    %46.1 = CastType                 up %46.0
  val?            %46.2 = Force              !v    %46.1, 
  prom-           %46.3 = MkArg                    %46.2, isLocal[0x55804eb62c60]_p9 (!refl), 
  val?            %46.4 = StaticCall         !v    parent.env[0x55804e586320](%46.3) e24.0   <env+>
  void                    StVar              lW    env, %46.4, e24.0
  goto BB10
BB47   <- [20]
  void                    Nop                !     
  val?^ | miss    %47.1 = %20.0
  dr              %47.2 = CallTarget@0x55804e398b98[Call#6]
  goto BB18
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .GlobalEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .GlobalEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3

│ isLocal[0x55804eb62c60]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
