
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804f273fb0]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2│
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804f273fb0]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     parnames=%0.2, locals=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  cls             %0.4  = MkCls                    >mkentry@246, e0.3
  (cls|spec|blt)  %0.5  = LdFun              !v    $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %0.6  = MkArg                    unboundValue, [0x55804f273fb0]_p0 (!refl), e0.3
  prom-           %0.7  = MkArg                    unboundValue, [0x55804f273fb0]_p1, e0.3
  val?            %0.8  = Call               !v    %0.5(%0.6, %0.7) e0.3   <env->
  void                    StVar              lW    env, %0.8, e0.3
  val?^ | miss    %0.10 = LdVar              eR    locals, e0.3
  val?            %0.11 = Force!<lazy>       !v    %0.10, e0.3   <str->
  lgl$#-          %0.12 = IsType                   %0.11 isA val+   <true>
  void                    Branch                   %0.12 -> BB33 (if true) | BB34 (if false)
BB33   <- [0]
  val?^ | miss    %33.0 = LdVar              eR    %in%, e0.3
  lgl$#-          %33.1 = Identical                %33.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %33.1 -> BB35 (if true) | BB36 (if false)
BB34   <- [0]
  void                    Nop                !     
  lgl$#-          %34.1 = %0.12
  dr              %34.2 = DeadBranchReached@0x55804ec47a70[Test#0]
  goto BB32
BB35   <- [33]
  prom-           %35.0 = MkArg                    unboundValue, [0x55804f273fb0]_p3, e0.3
  val?^ | miss    %35.1 = LdVar              eR    locals, e0.3
  val?            %35.2 = Force!<wrapped>    !v    %35.1, e0.3   <str->
  prom-           %35.3 = MkArg                    %35.2, [0x55804f273fb0]_p2 (!refl), 
  val?            %35.4 = StaticCall         !v    %in%[0x55804eadde50](%35.3, %35.0) e0.3   <lgl->
  lgl$#-          %35.5 = IsType                   %35.4 isA lgl-
  void                    Branch                   %35.5 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  val?^ | miss    %36.1 = %33.0
  dr              %36.2 = CallTarget@0x55804ec47a70[Call#2]
  goto BB32
BB32   <- [34, 36]
  val?^ | miss    %32.0 = Phi                      %34.1:BB34, %36.1:BB36
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %34.2:BB34, %36.2:BB36
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x55804e6fe0f0+60: [%0.11], env=e0.3
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB37   <- [35]
  lgl-            %37.0 = CastType           d     dn %35.4
  lgl-            %37.1 = Not                wed   %37.0, elided
  lgl$#-          %37.2 = IsType                   %0.11 isA val?-
  void                    Branch                   %37.2 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  fs              %38.0 = FrameState         R     0x55804e6fe0f0+133: [%0.11, %35.4], env=e0.3
  void                    Deopt              !v    %38.0, Typecheck@0x55804ec47a70[Type#9], %35.4   !
BB39   <- [37]
  val?-           %39.0 = CastType           d     dn %0.11   <str->
  val?            %39.1 = Extract1_1D        wed   %39.0, %37.1, elided   <str->
  void                    StVar              lW    nplocals, %39.1, e0.3
  val?^ | miss    %39.3 = LdVar              eR    env, e0.3
  lgl$#-          %39.4 = IsType                   %39.3 isA val?~- | miss
  void                    Branch                   %39.4 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x55804e6fe0f0+139: [%0.11, %37.1], env=e0.3
  void                    Deopt              !v    %40.0, Typecheck@0x55804ec47a70[Type#3], %0.11   !
BB41   <- [39]
  val?~- | miss   %41.0 = CastType           d     dn %39.3
  val?-           %41.1 = Force!<value>            %41.0,    <env->
  (cls|spec|blt)  %41.2 = LdFun              !v    attr<-, <0x55804bee4e08>, e0.3
  val?^ | miss    %41.3 = LdVar              eR    env, e0.3
  lgl$#-          %41.4 = IsType                   %41.3 isA val?~- | miss
  void                    Branch                   %41.4 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x55804e6fe0f0+155: [], env=e0.3
  void                    Deopt              !v    %42.0, Typecheck@0x55804ec47a70[Type#11], %39.3   !
BB43   <- [41]
  val?~- | miss   %43.0 = CastType           d     dn %41.3
  val?-           %43.1 = Force!<value>            %43.0,    <env->
  val?            %43.2 = NamedCall          !v    %41.2(%43.1, "checkUsageFrame", value=%41.1) e0.3
  void                    StVar              lW    env, %43.2, e0.3
  void                    StVar              lW    mkentry, %0.4, e0.3
  val?^ | miss    %43.5 = LdVar              eR    parnames, e0.3
  val?            %43.6 = Force!<wrapped>    !v    %43.5, e0.3   <str->
  val?+           %43.7 = ToForSeq           e     %43.6
  int$-           %43.8 = Length                   %43.7
  int$-           %43.9 = Inc                      0L
  lgl$-           %43.10 = Lt                 d     %43.8, %43.9, elided   <false>
  lgl$#-          %43.11 = Identical                %43.10, true
  void                    Branch                   %43.11 -> BB46 (if true) | BB45 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x55804e6fe0f0+169: [%41.1], env=e0.3
  void                    Deopt              !v    %44.0, Typecheck@0x55804ec47a70[Type#12], %41.3   !
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x55804e6fe0f0+280: [%43.6], env=e0.3
  void                    Deopt              !v    %46.0, DeadBranchReached@0x55804ec47a70[Test#1], %43.11   !
BB45   <- [43]
  val?            %45.0 = Extract2_1D        wed   %43.7, %43.9, elided
  void                    StVar              lW    v, %45.0, e0.3
  val?^ | miss    %45.2 = LdVar              eR    assign, e0.3
  lgl$#-          %45.3 = Identical                %45.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %45.3 -> BB47 (if true) | BB48 (if false)
BB47   <- [45]
  prom-           %47.0 = MkArg                    unboundValue, [0x55804f273fb0]_p5 (!refl), e0.3
  prom-           %47.1 = MkArg                    unboundValue, [0x55804f273fb0]_p6, e0.3
  prom-           %47.2 = MkArg                    unboundValue, [0x55804f273fb0]_p7, e0.3
  val?            %47.3 = StaticCall         !v    assign[0x558051bfbd50](%47.0, %47.1, missingArg, %47.2) { 0 1 3n } e0.3
  int$-           %47.4 = %43.9
  goto BB15
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x55804e6fe0f0+325: [%43.7, %43.8, %43.9], env=e0.3
  void                    Deopt              !v    %48.0, CallTarget@0x55804ec47a70[Call#4], %45.2   !
BB15   <- [47, 53]
  int$-           %15.0 = Phi                      %47.4:BB47, %53.4:BB53
  int$-           %15.1 = %15.0
  int$-           %15.2 = Inc                      %15.1
  lgl$-           %15.3 = Lt                 d     %43.8, %15.2, elided
  lgl$#-          %15.4 = Identical                %15.3, true
  void                    Branch                   %15.4 -> BB21 (if true) | BB18 (if false)
BB21   <- [15]
  val?^ | miss    %21.0 = LdVar              eR    nplocals, e0.3
  lgl$#-          %21.1 = IsType                   %21.0 isA val?~- | miss
  void                    Branch                   %21.1 -> BB49 (if true) | BB50 (if false)
BB18   <- [15]
  val?            %18.0 = Extract2_1D        wed   %43.7, %15.2, elided
  void                    StVar              lW    v, %18.0, e0.3
  val?^ | miss    %18.2 = LdVar              eR    assign, e0.3
  lgl$#-          %18.3 = Identical                %18.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %18.3 -> BB53 (if true) | BB54 (if false)
BB49   <- [21]
  val?~- | miss   %49.0 = CastType           d     dn %21.0
  val?-           %49.1 = Force!<value>            %49.0,    <str->
  int$-           %49.2 = Length                   %49.1
  lgl$-           %49.3 = Lt                 d     %49.2, %43.9, elided
  lgl$#-          %49.4 = Identical                %49.3, true
  void                    Branch                   %49.4 -> BB31 (if true) | BB22 (if false)
BB50   <- [21]
  fs              %50.0 = FrameState         R     0x55804e6fe0f0+380: [%43.7, %43.8, %15.1], env=e0.3
  void                    Deopt              !v    %50.0, Typecheck@0x55804ec47a70[Type#20], %21.0   !
BB53   <- [18]
  prom-           %53.0 = MkArg                    unboundValue, [0x55804f273fb0]_p8 (!refl), e0.3
  prom-           %53.1 = MkArg                    unboundValue, [0x55804f273fb0]_p9, e0.3
  prom-           %53.2 = MkArg                    unboundValue, [0x55804f273fb0]_p10, e0.3
  val?            %53.3 = StaticCall         !v    assign[0x558051bfbd50](%53.0, %53.1, missingArg, %53.2) { 0 1 3n } e0.3
  int$-           %53.4 = %15.2
  goto BB15
BB54   <- [18]
  fs              %54.0 = FrameState         R     0x55804e6fe0f0+409: [%43.7, %43.8, %15.2], env=e0.3
  void                    Deopt              !v    %54.0, CallTarget@0x55804ec47a70[Call#6], %18.2   !
BB31   <- [49]
  void                    Nop                !     
  goto BB30
BB22   <- [49]
  val?            %22.0 = Extract2_1D        wed   %49.1, %43.9, elided
  void                    StVar              lW    v, %22.0, e0.3
  val?^ | miss    %22.2 = LdVar              eR    assign, e0.3
  lgl$#-          %22.3 = Identical                %22.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %22.3 -> BB51 (if true) | BB52 (if false)
BB30   <- [29, 31]
  void                    Invisible          v     
  void                    Return             l     nil
BB51   <- [22]
  prom-           %51.0 = MkArg                    unboundValue, [0x55804f273fb0]_p11 (!refl), e0.3
  prom-           %51.1 = MkArg                    unboundValue, [0x55804f273fb0]_p12, e0.3
  prom-           %51.2 = MkArg                    unboundValue, [0x55804f273fb0]_p13, e0.3
  val?            %51.3 = StaticCall         !v    assign[0x558051bfbd50](%51.0, %51.1, missingArg, %51.2) { 0 1 3n } e0.3
  int$-           %51.4 = %43.9
  goto BB25
BB52   <- [22]
  fs              %52.0 = FrameState         R     0x55804e6fe0f0+528: [%49.1, %49.2, %43.9], env=e0.3
  void                    Deopt              !v    %52.0, CallTarget@0x55804ec47a70[Call#8], %22.2   !
BB25   <- [51, 55]
  int$-           %25.0 = Phi                      %51.4:BB51, %55.4:BB55
  int$-           %25.1 = %25.0
  int$-           %25.2 = Inc                      %25.1
  lgl$-           %25.3 = Lt                 d     %49.2, %25.2, elided
  lgl$#-          %25.4 = Identical                %25.3, true
  void                    Branch                   %25.4 -> BB29 (if true) | BB26 (if false)
BB29   <- [25]
  void                    Nop                !     
  goto BB30
BB26   <- [25]
  val?            %26.0 = Extract2_1D        wed   %49.1, %25.2, elided
  void                    StVar              lW    v, %26.0, e0.3
  val?^ | miss    %26.2 = LdVar              eR    assign, e0.3
  lgl$#-          %26.3 = Identical                %26.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %26.3 -> BB55 (if true) | BB56 (if false)
BB55   <- [26]
  prom-           %55.0 = MkArg                    unboundValue, [0x55804f273fb0]_p14 (!refl), e0.3
  prom-           %55.1 = MkArg                    unboundValue, [0x55804f273fb0]_p15, e0.3
  prom-           %55.2 = MkArg                    unboundValue, [0x55804f273fb0]_p16, e0.3
  val?            %55.3 = StaticCall         !v    assign[0x558051bfbd50](%55.0, %55.1, missingArg, %55.2) { 0 1 3n } e0.3
  int$-           %55.4 = %25.2
  goto BB25
BB56   <- [26]
  fs              %56.0 = FrameState         R     0x55804e6fe0f0+612: [%49.1, %49.2, %25.2], env=e0.3
  void                    Deopt              !v    %56.0, CallTarget@0x55804ec47a70[Call#10], %26.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    locals, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804f03e6a0>, e0.0
  val?            %0.2  = Call               !     %0.1(true) e0.0   <env->
  void                    Return             l     %0.2
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804c4bcd58>, e0.0
  val?            %0.2  = Call               !     %0.1(true) e0.0   <env->
  void                    Return             l     %0.2
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804f03e6a0>, e0.0
  val?            %0.2  = Call               !     %0.1(false) e0.0   <env->
  void                    Return             l     %0.2
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804ef3f350>, e0.0
  val?            %0.2  = Call               !     %0.1(false) e0.0   <env->
  void                    Return             l     %0.2
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3

│ [0x55804f273fb0]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
