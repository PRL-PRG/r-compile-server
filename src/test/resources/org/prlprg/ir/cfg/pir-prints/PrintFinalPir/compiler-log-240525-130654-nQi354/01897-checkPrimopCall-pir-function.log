
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkPrimopCall[0x55805001e730]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl2,NonRefl3             │
│ Properties:                                                                  │
├────── Final PIR Version
checkPrimopCall[0x55805001e730]
BB0
  val?~           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    anyMissing, <env 0x55804e699488>
  lgl$#-          %0.5  = Identical                %0.4, function(args) <(rir::DispatchTable*)0x55804e9|...
  void                    Branch                   %0.5 -> BB93 (if true) | BB94 (if false)
BB93   <- [0]
  env             e93.0 = MkEnv              l     fn=%0.3, e=%0.2, isBuiltin=%0.1, signal=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %93.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p0, e93.0
  val?^           %93.2 = CastType                 up %93.1
  val?^ | miss    %93.3 = LdVar              eR    length, <env 0x55804e699488>
  lgl$#-          %93.4 = Identical                <blt length>, %93.3   <true>
  void                    Branch                   %93.4 -> BB95 (if true) | BB96 (if false)
BB94   <- [0]
  void                    Nop                !     
  val?^ | miss    %94.1 = %0.4
  dr              %94.2 = CallTarget@0x55804e1eb880[Call#0]
  goto BB92
BB95   <- [93]
  val?            %95.0 = Force!<lazy>       !v    %0.2, e93.0   <code->
  lgl$#-          %95.1 = IsType                   %95.0 isA val?-
  void                    Branch                   %95.1 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  void                    Nop                !     
  lgl$#-          %96.1 = %93.4
  dr              %96.2 = DeadBranchReached@0x55804eaebc28[Test#0]
  goto BB92
BB92   <- [94, 96]
  val?^ | miss    %92.0 = Phi                      %94.1:BB94, %96.1:BB96
  val?^ | miss    %92.1 = %92.0
  dr              %92.2 = Phi                      %94.2:BB94, %96.2:BB96
  dr              %92.3 = %92.2
  env             e92.4 = (MkEnv)            l     fn=%0.3, e=%0.2, isBuiltin=%0.1, signal=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %92.5 = FrameState         R     0x55804e9fc4a0+0: [], env=e92.4
  void                    Deopt              !v    %92.5, %92.3, %92.1
BB97   <- [95]
  val?-           %97.0 = CastType           d     dn %95.0   <code->
  lgl$#-          %97.1 = IsType                   %97.0 isA val+   <true>
  env             e97.2 = (MkEnv)            l     args=%93.2, i=unboundValue, a=unboundValue, parent=<env 0x55804e699488>, context 0
  void                    Branch                   %97.1 -> BB91 (if true) | BB5 (if false)
BB98   <- [95]
  fs              %98.0 = FrameState         R     0x55804e9fc4a0+32: [], env=e93.0
  env             e98.1 = (MkEnv)            l     args=%93.2, i=unboundValue, a=unboundValue, parent=<env 0x55804e699488>, context 0
  fs              %98.2 = FrameState         R     0x55804eb46ed0+76: [1, <blt length>], env=e98.1, next=%98.0
  fs              %98.3 = FrameState         R     0x55804e17ef70+5(pr): [%95.0], env=e93.0, next=%98.2
  void                    Deopt              !v    %98.3, Typecheck@0x55804e1eb880[Type#1], %95.0   !
BB91   <- [97]
  void                    Nop                !     
  real$#-         %91.1 = -1
  goto BB6
BB5   <- [97]
  prom-           %5.0  = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p2 (!refl), 
  prom-           %5.1  = %5.0
  goto BB6
BB6   <- [5, 91]
  (real|prom)-    %6.0  = Phi                      %91.1:BB91, %5.1:BB5
  (real|prom)-    %6.1  = %6.0
  val?            %6.2  = Extract1_1D        wed   %97.0, %6.1, elided   <code->
  prom-           %6.3  = MkArg                    %6.2, checkPrimopCall[0x55805001e730]_p3 (!refl), e93.0
  val?~           %6.4  = CastType                 up %6.3
  void                    StArg              lWd   args, %6.4, e97.2
  lgl$#-          %6.6  = IsType                   %6.2 isA val?-
  void                    Branch                   %6.6 -> BB99 (if true) | BB100 (if false)
BB99   <- [6]
  val?-           %99.0 = CastType           d     dn %6.2   <code->
  (int|real)$-    %99.1 = CallSafeBuiltin    wed   length(%99.0)    <int$->
  lgl$#-          %99.2 = IsType                   %99.1 isA int$-
  void                    Branch                   %99.2 -> BB101 (if true) | BB102 (if false)
BB100   <- [6]
  fs              %100.0 = FrameState         R     0x55804e9fc4a0+32: [], env=e93.0
  fs              %100.1 = FrameState         R     0x55804eb46ed0+76: [1, <blt length>, %6.2], env=e97.2, next=%100.0
  void                    Deopt              !v    %100.1, Typecheck@0x55804eaebc28[Type#1], %6.2   !
BB101   <- [99]
  int$-           %101.0 = CastType           d     dn %99.1
  lgl$#-          %101.1 = ColonInputEffects        1, %101.0   <true>
  void                    Branch                   %101.1 -> BB103 (if true) | BB104 (if false)
BB102   <- [99]
  void                    Nop                !     
  (int|real)$-    %102.1 = %99.1
  dr              %102.2 = Typecheck@0x55804eaebc28[Type#2]
  goto BB9
BB103   <- [101]
  int$#-          %103.0 = ColonCastRhs       e     1L, %101.0   <int$->
  lgl$#-          %103.1 = Lte                d     1L, %103.0, elided
  void                    Branch                   %103.1 -> BB90 (if true) | BB11 (if false)
BB104   <- [101]
  void                    Nop                !     
  lgl$#-          %104.1 = %101.1
  dr              %104.2 = DeadBranchReached@0x55804eaebc28[Test#1]
  goto BB9
BB9   <- [102, 104, 106]
  val?^ | miss    %9.0  = Phi                      %102.1:BB102, %104.1:BB104, %106.1:BB106
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %102.2:BB102, %104.2:BB104, %106.2:BB106
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804e9fc4a0+32: [], env=e93.0
  fs              %9.5  = FrameState         R     0x55804eb46ed0+98: [1, %99.1], env=e97.2, next=%9.4
  void                    Deopt              !v    %9.5, %9.3, %9.1   !
BB90   <- [103]
  void                    Nop                !     
  int$#-          %90.1 = 1L
  goto BB12
BB11   <- [103]
  void                    Nop                !     
  int$#-          %11.1 = -1L
  goto BB12
BB12   <- [90, 11]
  int$#-          %12.0 = Phi                      %90.1:BB90, %11.1:BB11
  int$#-          %12.1 = %12.0
  lgl$#-          %12.2 = Neq                d     %103.0, 1L, elided   <true>
  void                    Branch                   %12.2 -> BB105 (if true) | BB106 (if false)
BB105   <- [12]
  void                    StVar              lWd   i, 1L, e97.2
  int$-           %105.1 = Add                d     1L, %12.1, elided
  lgl$#-          %105.2 = IsType                   %99.0 isA val+   <true>
  void                    Branch                   %105.2 -> BB107 (if true) | BB108 (if false)
BB106   <- [12]
  void                    Nop                !     
  lgl$#-          %106.1 = %12.2
  dr              %106.2 = DeadBranchReached@0x55804eaebc28[Test#4]
  goto BB9
BB107   <- [105]
  val?            %107.0 = Extract2_1D        wed   %99.0, 1L, elided   <val?->
  void                    StVar              lWd   a, %107.0, e97.2
  lgl$-           %107.2 = Missing            eR    a, e97.2
  lgl$#-          %107.3 = CheckTrueFalse     e     %107.2
  void                    Branch                   %107.3 -> BB89 (if true) | BB15 (if false)
BB108   <- [105]
  fs              %108.0 = FrameState         R     0x55804e9fc4a0+32: [], env=e93.0
  fs              %108.1 = FrameState         R     0x55804eb46ed0+226: [%12.1, %103.0, 1L], env=e97.2, next=%108.0
  void                    Deopt              !v    %108.1, DeadBranchReached@0x55804eaebc28[Test#5], %105.2   !
BB89   <- [107]
  void                    Visible            v     
  lgl$#-          %89.1 = true
  goto BB20
BB15   <- [107]
  void                    Nop                !     
  int$-           %15.1 = %105.1
  goto BB16
BB20   <- [89, 88, 19]
  lgl$#-          %20.0 = Phi                      %19.1:BB19, %88.1:BB88, %89.1:BB89
  lgl$#-          %20.1 = %20.0
  void                    Branch                   %20.1 -> BB78 (if true) | BB21 (if false)
BB16   <- [15, 18]
  int$-           %16.0 = Phi                      %15.1:BB15, %18.1:BB18
  int$-           %16.1 = %16.0
  lgl$-           %16.2 = Neq                d     %103.0, %16.1, elided
  lgl$#-          %16.3 = Identical                %16.2, false
  void                    Branch                   %16.3 -> BB88 (if true) | BB17 (if false)
BB78   <- [20]
  val?^ | miss    %78.0 = LdVar              eR    isBuiltin, e93.0
  void                    Visible            v     
  val?            %78.2 = Force!             !     %78.0, e93.0   <val?_>
  lgl$-           %78.3 = AsLogical          e     %78.2
  lgl$#-          %78.4 = Identical                %78.3, true
  void                    Branch                   %78.4 -> BB87 (if true) | BB81 (if false)
BB21   <- [20]
  void                    Nop                !     
  goto BB22
BB88   <- [16]
  void                    Visible            v     
  lgl$#-          %88.1 = false
  goto BB20
BB17   <- [16]
  int$-           %17.0 = Add                d     %16.1, %12.1, elided
  val?            %17.1 = Extract2_1D        wed   %99.0, %16.1, elided   <val?->
  void                    StVar              lWd   a, %17.1, e97.2
  lgl$-           %17.3 = Missing            eR    a, e97.2
  lgl$#-          %17.4 = CheckTrueFalse     e     %17.3
  void                    Branch                   %17.4 -> BB19 (if true) | BB18 (if false)
BB87   <- [78]
  void                    Nop                !     
  lgl$-           %87.1 = %78.3
  goto BB84
BB81   <- [78]
  val?^ | miss    %81.0 = LdVar              eR    %in%, e93.0
  lgl$#-          %81.1 = Identical                %81.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %81.1 -> BB115 (if true) | BB116 (if false)
BB22   <- [21, 85]
  val?^ | miss    %22.0 = LdVar              eR    exists, e93.0
  lgl$#-          %22.1 = Identical                %22.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %22.1 -> BB109 (if true) | BB110 (if false)
BB19   <- [17]
  void                    Visible            v     
  lgl$#-          %19.1 = true
  goto BB20
BB18   <- [17]
  void                    Nop                !     
  int$-           %18.1 = %17.0
  goto BB16
BB84   <- [87, 121]
  lgl$-           %84.0 = Phi                      %121.3:BB121, %87.1:BB87
  lgl$-           %84.1 = %84.0
  lgl$#-          %84.2 = CheckTrueFalse     e     %84.1
  void                    Branch                   %84.2 -> BB86 (if true) | BB85 (if false)
BB115   <- [81]
  prom-           %115.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p6, e93.0
  val?^ | miss    %115.1 = LdVar              eR    fn, e93.0
  void                    Visible            v     
  val?            %115.3 = Force!<lazy>       !     %115.1, e93.0   <str$->
  prom-           %115.4 = MkArg                    %115.3, checkPrimopCall[0x55805001e730]_p5 (!refl), 
  val?            %115.5 = StaticCall         !     %in%[0x55805028ab10](%115.4, %115.0) e93.0   <lgl$->
  lgl$#-          %115.6 = IsType                   %115.5 isA lgl$-
  void                    Branch                   %115.6 -> BB121 (if true) | BB122 (if false)
BB116   <- [81]
  fs              %116.0 = FrameState         R     0x55804e9fc4a0+57: [%78.2], env=e93.0
  void                    Deopt              !v    %116.0, CallTarget@0x55804e1eb880[Call#1], %81.0   !
BB109   <- [22]
  val?            %109.0 = StaticCall         !     exists[0x55804e1423c0](".GenericArgsEnv") e93.0   <lgl$->
  lgl$#-          %109.1 = IsType                   %109.0 isA lgl$-
  void                    Branch                   %109.1 -> BB111 (if true) | BB112 (if false)
BB110   <- [22]
  fs              %110.0 = FrameState         R     0x55804e9fc4a0+157: [], env=e93.0
  void                    Deopt              !v    %110.0, CallTarget@0x55804e1eb880[Call#5], %22.0   !
BB86   <- [84]
  (cls|spec|blt)  %86.0 = LdFun              !v    signal, e93.0
  fs              %86.1 = FrameState         R     0x55804e9fc4a0+129: [%86.0], env=e93.0
  void                    Deopt              !v    %86.1, DeadCall@0x55804e1eb880[Call#2], %86.0   !
BB85   <- [84]
  void                    Nop                !     
  goto BB22
BB121   <- [115]
  lgl$-           %121.0 = CastType           d     dn %115.5
  lgl$-           %121.1 = AsLogical                %121.0
  lgl$-           %121.2 = LOr                      %78.3, %121.1
  lgl$-           %121.3 = %121.2
  goto BB84
BB122   <- [115]
  fs              %122.0 = FrameState         R     0x55804e9fc4a0+106: [%78.3, %115.5], env=e93.0
  void                    Deopt              !v    %122.0, Typecheck@0x55804e1eb880[Type#7], %115.5   !
BB111   <- [109]
  lgl$-           %111.0 = CastType           d     dn %109.0
  lgl$-           %111.1 = AsLogical                %111.0
  lgl$#-          %111.2 = Identical                %111.1, false
  void                    Branch                   %111.2 -> BB77 (if true) | BB27 (if false)
BB112   <- [109]
  void                    Nop                !     
  val?            %112.1 = %109.0
  dr              %112.2 = Typecheck@0x55804e1eb880[Type#11]
  goto BB25
BB77   <- [111]
  void                    Nop                !     
  lgl$-           %77.1 = %111.1
  goto BB30
BB27   <- [111]
  val?^ | miss    %27.0 = LdVar              eR    exists, e93.0
  lgl$#-          %27.1 = Identical                %27.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %27.1 -> BB113 (if true) | BB114 (if false)
BB25   <- [112, 114]
  val?^ | miss    %25.0 = Phi                      %112.1:BB112, %114.1:BB114
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %112.2:BB112, %114.2:BB114
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55804e9fc4a0+189: [%109.0], env=e93.0
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB30   <- [77, 123]
  lgl$-           %30.0 = Phi                      %123.3:BB123, %77.1:BB77
  lgl$-           %30.1 = %30.0
  lgl$#-          %30.2 = CheckTrueFalse     e     %30.1
  void                    Branch                   %30.2 -> BB68 (if true) | BB33 (if false)
BB113   <- [27]
  prom-           %113.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p7, e93.0
  prom-           %113.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p8, e93.0
  val?            %113.2 = StaticCall         !     exists[0x55804f573420](%113.0, %113.1) e93.0   <lgl$->
  lgl$#-          %113.3 = IsType                   %113.2 isA lgl$-
  void                    Branch                   %113.3 -> BB123 (if true) | BB124 (if false)
BB114   <- [27]
  void                    Nop                !     
  val?^ | miss    %114.1 = %27.0
  dr              %114.2 = CallTarget@0x55804e1eb880[Call#6]
  goto BB25
BB68   <- [30]
  val?^ | miss    %68.0 = LdVar              eR    get, e93.0
  lgl$#-          %68.1 = Identical                %68.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %68.1 -> BB117 (if true) | BB118 (if false)
BB33   <- [30]
  val?^ | miss    %33.0 = LdVar              eR    exists, e93.0
  lgl$#-          %33.1 = Identical                %33.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %33.1 -> BB119 (if true) | BB120 (if false)
BB123   <- [113]
  lgl$-           %123.0 = CastType           d     dn %113.2
  lgl$-           %123.1 = AsLogical                %123.0
  lgl$-           %123.2 = LAnd                     %111.1, %123.1
  lgl$-           %123.3 = %123.2
  goto BB30
BB124   <- [113]
  fs              %124.0 = FrameState         R     0x55804e9fc4a0+238: [%111.1, %113.2], env=e93.0
  void                    Deopt              !v    %124.0, Typecheck@0x55804e1eb880[Type#14], %113.2   !
BB117   <- [68]
  prom-           %117.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p9, e93.0
  prom-           %117.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p10, e93.0
  val?            %117.2 = StaticCall         !v    get[0x55804f4be590](%117.0, missingArg, %117.1) { 0 2n } e93.0   <cls->
  void                    StVar              lW    def, %117.2, e93.0
  val?^ | miss    %117.4 = LdVar              eR    checkCall, e93.0
  lgl$#-          %117.5 = Identical                %117.4, function(def, call, signal=warning0) <(rir::Di|...
  void                    Branch                   %117.5 -> BB125 (if true) | BB126 (if false)
BB118   <- [68]
  void                    Nop                !     
  val?^ | miss    %118.1 = %68.0
  dr              %118.2 = CallTarget@0x55804e1eb880[Call#22]
  goto BB31
BB119   <- [33]
  val?            %119.0 = StaticCall         !     exists[0x55804e1423c0](".ArgsEnv") e93.0   <lgl$->
  lgl$#-          %119.1 = IsType                   %119.0 isA lgl$-
  void                    Branch                   %119.1 -> BB129 (if true) | BB130 (if false)
BB120   <- [33]
  void                    Nop                !     
  val?^ | miss    %120.1 = %33.0
  dr              %120.2 = CallTarget@0x55804e1eb880[Call#8]
  goto BB31
BB125   <- [117]
  prom-           %125.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p11 (!refl), e93.0
  prom-           %125.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p12, e93.0
  prom-           %125.2 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p13, e93.0
  ct              %125.3 = PushContext        lCL   %125.0, %125.1, %125.2, checkCall(def, e, signal), function(def, call, signal=warning0) <(rir::Di|..., e93.0
  val?^           %125.4 = CastType                 up %125.2
  val?^           %125.5 = CastType                 up %125.1
  val?^           %125.6 = CastType                 up %125.0
  env             e125.7 = MkEnv              l     def=%125.6, call=%125.5, signal=%125.4, parent=<env 0x55804e699488>, context 1
  cls             %125.8 = MkCls                    checkCall>testMatch@0, e125.7
  void                    StVar              lW    testMatch, %125.8, e125.7
  cls             %125.10 = MkCls                    checkCall@Prom(1)0, e125.7
  val?^ | miss    %125.11 = LdVar              eR    tryCatch, <env 0x55804e699488>
  lgl$#-          %125.12 = Identical                %125.11, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %125.12 -> BB127 (if true) | BB128 (if false)
BB126   <- [117]
  fs              %126.0 = FrameState         R     0x55804e9fc4a0+923: [], env=e93.0
  void                    Deopt              !v    %126.0, CallTarget@0x55804e1eb880[Call#24], %117.4   !
BB31   <- [118, 120]
  val?^ | miss    %31.0 = Phi                      %118.1:BB118, %120.1:BB120
  val?^ | miss    %31.1 = %31.0
  dr              %31.2 = Phi                      %118.2:BB118, %120.2:BB120
  dr              %31.3 = %31.2
  fs              %31.4 = FrameState         R     0x55804e9fc4a0+245: [%30.1], env=e93.0
  void                    Deopt              !v    %31.4, %31.3, %31.1   !
BB129   <- [119]
  lgl$-           %129.0 = CastType           d     dn %119.0
  lgl$-           %129.1 = AsLogical                %129.0
  lgl$#-          %129.2 = Identical                %129.1, false
  void                    Branch                   %129.2 -> BB67 (if true) | BB36 (if false)
BB130   <- [119]
  void                    Nop                !     
  val?            %130.1 = %119.0
  dr              %130.2 = Typecheck@0x55804e1eb880[Type#15]
  goto BB34
BB127   <- [125]
  prom-           %127.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p14, e125.7
  prom-           %127.1 = MkArg                    %125.10, checkPrimopCall[0x55805001e730]_p15 (!refl), e125.7
  dots-           %127.2 = DotsList           l     error=%127.1
  val?            %127.3 = StaticCall         !v    tryCatch[0x55804f351900](%127.0, %127.2) { 0 1n } e125.7   <nil->
  lgl$-           %127.4 = Is                       %127.3, NULL
  void                    StVar              lW    msg, %127.3, e125.7
  val             %127.6 = ChkMissing         e     %127.3
  lgl$-           %127.7 = Not                d     %127.4, elided
  lgl$#-          %127.8 = CheckTrueFalse     e     %127.7
  void                    Branch                   %127.8 -> BB76 (if true) | BB73 (if false)
BB128   <- [125]
  fs              %128.0 = FrameState         R     0x55804e9fc4a0+965: [], env=e93.0
  fs              %128.1 = FrameState         R     0x55804e40e710+25: [], env=e125.7, next=%128.0
  void                    Deopt              !v    %128.1, CallTarget@0x55804e09bf70[Call#0], %125.11   !
BB67   <- [129]
  void                    Nop                !     
  lgl$-           %67.1 = %129.1
  goto BB39
BB36   <- [129]
  val?^ | miss    %36.0 = LdVar              eR    exists, e93.0
  lgl$#-          %36.1 = Identical                %36.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %36.1 -> BB135 (if true) | BB136 (if false)
BB34   <- [130, 136]
  val?^ | miss    %34.0 = Phi                      %130.1:BB130, %136.1:BB136
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %130.2:BB130, %136.2:BB136
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x55804e9fc4a0+283: [%119.0], env=e93.0
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB76   <- [127]
  fs              %76.0 = FrameState         R     0x55804e9fc4a0+965: [], env=e93.0
  (cls|spec|blt)  %76.1 = LdFun              !v    paste, e125.7
  fs              %76.2 = FrameState         R     0x55804e40e710+126: [%76.1], env=e125.7, next=%76.0
  void                    Deopt              !v    %76.2, DeadCall@0x55804e09bf70[Call#2], %76.1   !
BB73   <- [127]
  void                    Visible            v     
  val?            %73.1 = PopContext         C     true, %125.3   <lgl$->
  lgl$#-          %73.2 = IsType                   %73.1 isA lgl$-
  void                    Branch                   %73.2 -> BB131 (if true) | BB132 (if false)
BB39   <- [67, 137]
  lgl$-           %39.0 = Phi                      %137.3:BB137, %67.1:BB67
  lgl$-           %39.1 = %39.0
  lgl$#-          %39.2 = CheckTrueFalse     e     %39.1
  void                    Branch                   %39.2 -> BB62 (if true) | BB42 (if false)
BB135   <- [36]
  prom-           %135.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p16, e93.0
  prom-           %135.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p17, e93.0
  val?            %135.2 = StaticCall         !     exists[0x55804f573420](%135.0, %135.1) e93.0   <lgl$->
  lgl$#-          %135.3 = IsType                   %135.2 isA lgl$-
  void                    Branch                   %135.3 -> BB137 (if true) | BB138 (if false)
BB136   <- [36]
  void                    Nop                !     
  val?^ | miss    %136.1 = %36.0
  dr              %136.2 = CallTarget@0x55804e1eb880[Call#9]
  goto BB34
BB131   <- [73]
  void                    Nop                !     
  val?            %131.1 = %73.1
  goto BB48
BB132   <- [73]
  fs              %132.0 = FrameState         R     0x55804e9fc4a0+965: [%73.1], env=e93.0
  void                    Deopt              !v    %132.0, Typecheck@0x55804e1eb880[Type#53], %73.1   !
BB62   <- [39]
  val?^ | miss    %62.0 = LdVar              eR    get, e93.0
  lgl$#-          %62.1 = Identical                %62.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %62.1 -> BB133 (if true) | BB134 (if false)
BB42   <- [39]
  val?^ | miss    %42.0 = LdVar              eR    exists, e93.0
  lgl$#-          %42.1 = Identical                %42.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %42.1 -> BB139 (if true) | BB140 (if false)
BB137   <- [135]
  lgl$-           %137.0 = CastType           d     dn %135.2
  lgl$-           %137.1 = AsLogical                %137.0
  lgl$-           %137.2 = LAnd                     %129.1, %137.1
  lgl$-           %137.3 = %137.2
  goto BB39
BB138   <- [135]
  fs              %138.0 = FrameState         R     0x55804e9fc4a0+332: [%129.1, %135.2], env=e93.0
  void                    Deopt              !v    %138.0, Typecheck@0x55804e1eb880[Type#18], %135.2   !
BB48   <- [47, 131]
  val?            %48.0 = Phi                      %47.2:BB47, %131.1:BB131
  val?            %48.1 = %48.0
  void                    Return             l     %48.1
BB133   <- [62]
  prom-           %133.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p20, e93.0
  prom-           %133.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p21, e93.0
  val?            %133.2 = StaticCall         !     get[0x55804f4be590](%133.0, missingArg, %133.1) { 0 2n } e93.0   <cls->
  void                    StVar              lW    def, %133.2, e93.0
  val?^ | miss    %133.4 = LdVar              eR    checkCall, e93.0
  lgl$#-          %133.5 = Identical                %133.4, function(def, call, signal=warning0) <(rir::Di|...
  void                    Branch                   %133.5 -> BB143 (if true) | BB144 (if false)
BB134   <- [62]
  void                    Nop                !     
  val?^ | miss    %134.1 = %62.0
  dr              %134.2 = CallTarget@0x55804e1eb880[Call#19]
  goto BB40
BB139   <- [42]
  prom-           %139.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p18, e93.0
  prom-           %139.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p19, e93.0
  val?            %139.2 = StaticCall         !v    exists[0x55804e0475e0](%139.0, missingArg, %139.1, missingArg, missingArg, false) { 0 2n 5n } e93.0   <lgl$->
  lgl$#-          %139.3 = IsType                   %139.2 isA lgl$-
  void                    Branch                   %139.3 -> BB141 (if true) | BB142 (if false)
BB140   <- [42]
  void                    Nop                !     
  val?^ | miss    %140.1 = %42.0
  dr              %140.2 = CallTarget@0x55804e1eb880[Call#11]
  goto BB40
BB143   <- [133]
  prom-           %143.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p22 (!refl), e93.0
  prom-           %143.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p23, e93.0
  prom-           %143.2 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p24, e93.0
  val?            %143.3 = StaticCall         !     checkCall[0x55804f720850](%143.0, %143.1, %143.2) e93.0   <lgl$->
  lgl$#-          %143.4 = IsType                   %143.3 isA lgl$-
  void                    Branch                   %143.4 -> BB145 (if true) | BB146 (if false)
BB144   <- [133]
  fs              %144.0 = FrameState         R     0x55804e9fc4a0+812: [], env=e93.0
  void                    Deopt              !v    %144.0, CallTarget@0x55804e1eb880[Call#21], %133.4   !
BB40   <- [134, 140]
  val?^ | miss    %40.0 = Phi                      %134.1:BB134, %140.1:BB140
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %134.2:BB134, %140.2:BB140
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x55804e9fc4a0+339: [%39.1], env=e93.0
  void                    Deopt              !v    %40.4, %40.3, %40.1   !
BB141   <- [139]
  lgl$-           %141.0 = CastType           d     dn %139.2
  lgl$#-          %141.1 = CheckTrueFalse     e     %141.0
  void                    Branch                   %141.1 -> BB49 (if true) | BB45 (if false)
BB142   <- [139]
  void                    Nop                !     
  val?            %142.1 = %139.2
  dr              %142.2 = Typecheck@0x55804e1eb880[Type#21]
  goto BB43
BB145   <- [143]
  void                    Nop                !     
  val?            %145.1 = %143.3
  goto BB47
BB146   <- [143]
  fs              %146.0 = FrameState         R     0x55804e9fc4a0+854: [%143.3], env=e93.0
  void                    Deopt              !v    %146.0, Typecheck@0x55804e1eb880[Type#46], %143.3   !
BB49   <- [141]
  val?^ | miss    %49.0 = LdVar              eR    get, e93.0
  lgl$#-          %49.1 = Identical                %49.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %49.1 -> BB147 (if true) | BB148 (if false)
BB45   <- [141]
  void                    Visible            v     
  goto BB46
BB43   <- [142, 148]
  val?^ | miss    %43.0 = Phi                      %142.1:BB142, %148.1:BB148
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %142.2:BB142, %148.2:BB148
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x55804e9fc4a0+399: [%139.2], env=e93.0
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB47   <- [46, 145]
  val?            %47.0 = Phi                      %46.1:BB46, %145.1:BB145
  val?            %47.1 = %47.0
  val?            %47.2 = %47.1
  goto BB48
BB147   <- [49]
  prom-           %147.0 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p25, e93.0
  prom-           %147.1 = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p26, e93.0
  val?            %147.2 = StaticCall         !v    get[0x55804f4be590](%147.0, missingArg, %147.1) { 0 2n } e93.0   <real$->
  lgl$#-          %147.3 = IsType                   %147.2 isA real$-
  void                    Branch                   %147.3 -> BB149 (if true) | BB150 (if false)
BB148   <- [49]
  void                    Nop                !     
  val?^ | miss    %148.1 = %49.0
  dr              %148.2 = CallTarget@0x55804e1eb880[Call#12]
  goto BB43
BB46   <- [45, 60]
  void                    Nop                !     
  lgl$#-          %46.1 = true
  goto BB47
BB149   <- [147]
  real$-          %149.0 = CastType           d     dn %147.2
  void                    StVar              lW    argc, %149.0, e93.0
  val?^ | miss    %149.2 = LdVar              eR    any, e93.0
  lgl$#-          %149.3 = Identical                <blt any>, %149.2   <true>
  void                    Branch                   %149.3 -> BB151 (if true) | BB152 (if false)
BB150   <- [147]
  fs              %150.0 = FrameState         R     0x55804e9fc4a0+466: [%147.2], env=e93.0
  void                    Deopt              !v    %150.0, Typecheck@0x55804e1eb880[Type#24], %147.2   !
BB151   <- [149]
  val?^ | miss    %151.0 = LdVar              eR    length, e93.0
  lgl$#-          %151.1 = Identical                <blt length>, %151.0   <true>
  void                    Branch                   %151.1 -> BB153 (if true) | BB154 (if false)
BB152   <- [149]
  void                    Nop                !     
  lgl$#-          %152.1 = %149.3
  dr              %152.2 = DeadBranchReached@0x55804e1eb880[Test#1]
  goto BB52
BB153   <- [151]
  val?^ | miss    %153.0 = LdVar              eR    e, e93.0
  val?            %153.1 = Force!<wrapped>    !v    %153.0, e93.0   <code->
  lgl$#-          %153.2 = IsType                   %153.1 isA val?-
  void                    Branch                   %153.2 -> BB155 (if true) | BB156 (if false)
BB154   <- [151]
  void                    Nop                !     
  lgl$#-          %154.1 = %151.1
  dr              %154.2 = DeadBranchReached@0x55804e1eb880[Test#2]
  goto BB52
BB52   <- [152, 154]
  val?^ | miss    %52.0 = Phi                      %152.1:BB152, %154.1:BB154
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %152.2:BB152, %154.2:BB154
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x55804e9fc4a0+480: [], env=e93.0
  void                    Deopt              !v    %52.4, %52.3, %52.1   !
BB155   <- [153]
  val?-           %155.0 = CastType           d     dn %153.1   <code->
  (int|real)$-    %155.1 = CallSafeBuiltin    wed   length(%155.0)    <int$->
  lgl$#-          %155.2 = IsType                   %155.1 isA int$-
  void                    Branch                   %155.2 -> BB157 (if true) | BB158 (if false)
BB156   <- [153]
  fs              %156.0 = FrameState         R     0x55804e9fc4a0+623: [<blt any>, %149.0, <blt length>, %153.1], env=e93.0
  void                    Deopt              !v    %156.0, Typecheck@0x55804e1eb880[Type#32], %153.1   !
BB157   <- [155]
  int$-           %157.0 = CastType           d     dn %155.1
  real$-          %157.1 = Sub                d     %157.0, 1, elided   <real$->
  lgl$-           %157.2 = Eq                 d     %149.0, %157.1, elided   <lgl$->
  val?            %157.3 = CallBuiltin        !v    any(%157.2) e93.0   <lgl$->
  lgl$#-          %157.4 = IsType                   %157.3 isA lgl$-
  void                    Branch                   %157.4 -> BB159 (if true) | BB160 (if false)
BB158   <- [155]
  fs              %158.0 = FrameState         R     0x55804e9fc4a0+645: [<blt any>, %149.0, %155.1], env=e93.0
  void                    Deopt              !v    %158.0, Typecheck@0x55804e1eb880[Type#33], %155.1   !
BB159   <- [157]
  lgl$-           %159.0 = CastType           d     dn %157.3
  lgl$-           %159.1 = Not                d     %159.0, elided
  lgl$#-          %159.2 = CheckTrueFalse     e     %159.1
  void                    Branch                   %159.2 -> BB61 (if true) | BB60 (if false)
BB160   <- [157]
  fs              %160.0 = FrameState         R     0x55804e9fc4a0+686: [%157.3], env=e93.0
  void                    Deopt              !v    %160.0, Typecheck@0x55804e1eb880[Type#36], %157.3   !
BB61   <- [159]
  (cls|spec|blt)  %61.0 = LdFun              !v    signal, e93.0
  fs              %61.1 = FrameState         R     0x55804e9fc4a0+714: [%61.0], env=e93.0
  void                    Deopt              !v    %61.1, DeadCall@0x55804e1eb880[Call#16], %61.0   !
BB60   <- [159]
  void                    Visible            v     
  goto BB46
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <code->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  real$#-         %2.1  = -1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p1, 
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [2, 4]
  (real|prom)-    %3.0  = Phi                      %2.1:BB2, %4.1:BB4
  (real|prom)-    %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 1:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 2:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <code->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  real$#-         %2.1  = -1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, checkPrimopCall[0x55805001e730]_p4, 
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [2, 4]
  (real|prom)-    %3.0  = Phi                      %2.1:BB2, %4.1:BB4
  (real|prom)-    %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 4:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    noMissingAllowed, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".GenericArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".GenericArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    testMatch, <0x55804eeff8f8>, e0.0
  val?            %0.2  = Call               !v    %0.1() e0.0
  void                    Visible            v     
  void                    Return             l     nil
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    checkCall@Prom(1)0, e0.0
  void                    Return             l     %0.1
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".ArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    primopArgCounts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     get, <0x55804ce06e78>, e0.0
  val?            %0.2  = Call               !     %0.1(".ArgsEnv") e0.0   <env->
  void                    Return             l     %0.2
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    primopArgCounts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ checkPrimopCall[0x55805001e730]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
