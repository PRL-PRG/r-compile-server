
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804f20d030]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804f20d030]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?~+          %0.3  = LdArg                    0
  val+            %0.4  = Force<value>             %0.3,    <str$->
  val?^ | miss    %0.5  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %0.6  = Identical                %0.5, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %0.6 -> BB50 (if true) | BB51 (if false)
BB50   <- [0]
  env             e50.0 = MkEnv              l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %50.1 = MkArg                    unboundValue, [0x55804f20d030]_p1, e50.0
  val?            %50.2 = StaticCall         !v    %in%[0x55804d1fbc40](%0.4, %50.1) e50.0   <lgl$->
  lgl$#-          %50.3 = IsType                   %50.2 isA lgl$-
  void                    Branch                   %50.3 -> BB52 (if true) | BB53 (if false)
BB51   <- [0]
  env             e51.0 = (MkEnv)            l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %51.1 = FrameState         R     0x55804ec9bac0+0: [], env=e51.0
  void                    Deopt              !v    %51.1, CallTarget@0x55804e19e1f0[Call#0], %0.5
BB52   <- [50]
  lgl$-           %52.0 = CastType           d     dn %50.2
  lgl$-           %52.1 = AsLogical                %52.0
  lgl$#-          %52.2 = Identical                %52.1, false
  void                    Branch                   %52.2 -> BB48 (if true) | BB5 (if false)
BB53   <- [50]
  void                    Nop                !     
  val?            %53.1 = %50.2
  dr              %53.2 = Typecheck@0x55804e19e1f0[Type#2]
  goto BB3
BB48   <- [52]
  void                    Nop                !     
  lgl$-           %48.1 = %52.1
  goto BB8
BB5   <- [52]
  val?^ | miss    %5.0  = LdVar              eR    isSimpleFunDef, e50.0
  lgl$#-          %5.1  = Identical                %5.0, function(e, w) <(rir::DispatchTable*)0x55804e1|...
  void                    Branch                   %5.1 -> BB54 (if true) | BB55 (if false)
BB3   <- [53, 55]
  val?^ | miss    %3.0  = Phi                      %53.1:BB53, %55.1:BB55
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %53.2:BB53, %55.2:BB55
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55804ec9bac0+37: [%50.2], env=e50.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB8   <- [48, 56]
  lgl$-           %8.0  = Phi                      %56.3:BB56, %48.1:BB48
  lgl$-           %8.1  = %8.0
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1
  void                    Branch                   %8.2 -> BB47 (if true) | BB9 (if false)
BB54   <- [5]
  prom-           %54.0 = MkArg                    unboundValue, [0x55804f20d030]_p2, e50.0
  prom-           %54.1 = MkArg                    unboundValue, [0x55804f20d030]_p3, e50.0
  val?            %54.2 = StaticCall         !v    isSimpleFunDef[0x558052141090](%54.0, %54.1) e50.0   <lgl$->
  lgl$#-          %54.3 = IsType                   %54.2 isA lgl$-
  void                    Branch                   %54.3 -> BB56 (if true) | BB57 (if false)
BB55   <- [5]
  void                    Nop                !     
  val?^ | miss    %55.1 = %5.0
  dr              %55.2 = CallTarget@0x55804e19e1f0[Call#2]
  goto BB3
BB47   <- [8]
  void                    StVar              lW    type, "fundef", e50.0
  goto BB10
BB9   <- [8]
  void                    Nop                !     
  goto BB10
BB56   <- [54]
  lgl$-           %56.0 = CastType           d     dn %54.2
  lgl$-           %56.1 = AsLogical                %56.0
  lgl$-           %56.2 = LAnd                     %52.1, %56.1
  lgl$-           %56.3 = %56.2
  goto BB8
BB57   <- [54]
  fs              %57.0 = FrameState         R     0x55804ec9bac0+86: [%52.1, %54.2], env=e50.0
  void                    Deopt              !v    %57.0, Typecheck@0x55804e19e1f0[Type#5], %54.2   !
BB10   <- [9, 47]
  val?^ | miss    %10.0 = LdVar              eR    type, e50.0
  val?            %10.1 = Force!<value>      !v    %10.0, e50.0   <str$->
  lgl$-           %10.2 = Is                       %10.1, logical
  lgl$-           %10.3 = Is                       %10.1, integer
  lgl$-           %10.4 = Is                       %10.1, double
  lgl$-           %10.5 = Is                       %10.1, complex
  lgl$-           %10.6 = Is                       %10.1, character   <true>
  lgl$-           %10.7 = Is                       %10.1, raw
  lgl$-           %10.8 = Is                       %10.1, list
  lgl$-           %10.9 = Is                       %10.1, expression
  lgl$-           %10.10 = LOr                      %10.9, %10.8
  lgl$-           %10.11 = LOr                      %10.10, %10.7
  lgl$-           %10.12 = LOr                      %10.11, %10.6
  lgl$-           %10.13 = LOr                      %10.12, %10.5
  lgl$-           %10.14 = LOr                      %10.13, %10.4
  lgl$-           %10.15 = LOr                      %10.14, %10.3
  lgl$-           %10.16 = LOr                      %10.15, %10.2   <true>
  lgl$#-          %10.17 = Identical                %10.16, true
  int$-           %10.18 = Length                   %10.1
  lgl$-           %10.19 = Is                       %10.1, Factor   <false>
  lgl$#-          %10.20 = Identical                %10.19, false
  lgl$#-          %10.21 = Identical                %10.6, true
  lgl$#-          %10.22 = IsType                   %10.1 isA val?-
  void                    Branch                   %10.17 -> BB58 (if true) | BB59 (if false)
BB58   <- [10]
  lgl$-           %58.0 = Eq                 d     %10.18, 1L, elided   <true>
  lgl$#-          %58.1 = Identical                %58.0, true
  void                    Branch                   %58.1 -> BB60 (if true) | BB61 (if false)
BB59   <- [10]
  void                    Nop                !     
  lgl$#-          %59.1 = %10.17
  dr              %59.2 = DeadBranchReached@0x55804e19e1f0[Test#0]
  goto BB11
BB60   <- [58]
  void                    Branch                   %10.20 -> BB62 (if true) | BB63 (if false)
BB61   <- [58]
  void                    Nop                !     
  lgl$#-          %61.1 = %58.1
  dr              %61.2 = DeadBranchReached@0x55804e19e1f0[Test#1]
  goto BB11
BB11   <- [59, 61, 63, 65, 67]
  val?^ | miss    %11.0 = Phi                      %59.1:BB59, %61.1:BB61, %63.1:BB63, %65.1:BB65, %67.1:BB67
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %59.2:BB59, %61.2:BB61, %63.2:BB63, %65.2:BB65, %67.2:BB67
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55804ec9bac0+128: [%10.1], env=e50.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB62   <- [60]
  void                    Branch                   %10.21 -> BB64 (if true) | BB65 (if false)
BB63   <- [60]
  void                    Nop                !     
  lgl$#-          %63.1 = %10.20
  dr              %63.2 = DeadBranchReached@0x55804e19e1f0[Test#2]
  goto BB11
BB64   <- [62]
  void                    Branch                   %10.22 -> BB66 (if true) | BB67 (if false)
BB65   <- [62]
  void                    Nop                !     
  lgl$#-          %65.1 = %10.21
  dr              %65.2 = DeadBranchReached@0x55804e19e1f0[Test#3]
  goto BB11
BB66   <- [64]
  val?-           %66.0 = CastType           d     dn %10.1   <str$->
  lgl-            %66.1 = CallSafeBuiltin    vwed  is.na(%66.0) 
  lgl$#-          %66.2 = CheckTrueFalse     we    %66.1   <false>
  void                    Branch                   %66.2 -> BB69 (if true) | BB68 (if false)
BB67   <- [64]
  void                    Nop                !     
  val?            %67.1 = %10.1
  dr              %67.2 = Typecheck@0x55804e19e1f0[Type#6]
  goto BB11
BB69   <- [66]
  fs              %69.0 = FrameState         R     0x55804ec9bac0+391: [%66.0, %66.2], env=e50.0
  void                    Deopt              !v    %69.0, DeadBranchReached@0x55804e19e1f0[Test#10], %66.2   !
BB68   <- [66]
  lgl-            %68.0 = Eq                 vwed  %66.0, <-, elided
  lgl$#-          %68.1 = CheckTrueFalse     we    %68.0
  void                    Branch                   %68.1 -> BB46 (if true) | BB15 (if false)
BB46   <- [68]
  void                    Nop                !     
  goto BB41
BB15   <- [68]
  lgl-            %15.0 = Eq                 vwed  %66.0, <<-, elided
  lgl$#-          %15.1 = CheckTrueFalse     we    %15.0
  void                    Branch                   %15.1 -> BB40 (if true) | BB16 (if false)
BB41   <- [40, 46]
  val?^ | miss    %41.0 = LdVar              eR    incLocalUsageValue, e50.0
  lgl$#-          %41.1 = Identical                %41.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %41.1 -> BB76 (if true) | BB77 (if false)
BB40   <- [15]
  void                    Nop                !     
  goto BB41
BB16   <- [15]
  lgl-            %16.0 = Eq                 vwed  %66.0, variable, elided
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0
  void                    Branch                   %16.1 -> BB37 (if true) | BB19 (if false)
BB76   <- [41]
  prom-           %76.0 = MkArg                    unboundValue, [0x55804f20d030]_p15, e50.0
  prom-           %76.1 = MkArg                    unboundValue, [0x55804f20d030]_p16, e50.0
  val?            %76.2 = StaticCall         !     incLocalUsageValue[0x55804f8c5780](%76.0, "assigns", %76.1) e50.0   <real$->
  lgl$#-          %76.3 = IsType                   %76.2 isA real$-
  void                    Branch                   %76.3 -> BB84 (if true) | BB85 (if false)
BB77   <- [41]
  fs              %77.0 = FrameState         R     0x55804ec9bac0+544: [%66.0], env=e50.0
  void                    Deopt              !v    %77.0, CallTarget@0x55804e19e1f0[Call#3], %41.0   !
BB37   <- [16]
  val?^ | miss    %37.0 = LdVar              eR    incLocalUsageValue, e50.0
  lgl$#-          %37.1 = Identical                %37.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %37.1 -> BB74 (if true) | BB75 (if false)
BB19   <- [16]
  lgl-            %19.0 = Eq                 vwed  %66.0, function, elided
  lgl$#-          %19.1 = CheckTrueFalse     we    %19.0
  void                    Branch                   %19.1 -> BB34 (if true) | BB22 (if false)
BB84   <- [76]
  void                    Nop                !     
  val?            %84.1 = %76.2
  goto BB28
BB85   <- [76]
  fs              %85.0 = FrameState         R     0x55804ec9bac0+587: [%76.2], env=e50.0
  void                    Deopt              !v    %85.0, Typecheck@0x55804e19e1f0[Type#9], %76.2   !
BB74   <- [37]
  prom-           %74.0 = MkArg                    unboundValue, [0x55804f20d030]_p13, e50.0
  prom-           %74.1 = MkArg                    unboundValue, [0x55804f20d030]_p14, e50.0
  val?            %74.2 = StaticCall         !     incLocalUsageValue[0x55804f8c5780](%74.0, "varuses", %74.1) e50.0   <real$->
  lgl$#-          %74.3 = IsType                   %74.2 isA real$-
  void                    Branch                   %74.3 -> BB80 (if true) | BB81 (if false)
BB75   <- [37]
  fs              %75.0 = FrameState         R     0x55804ec9bac0+451: [%66.0, %16.1], env=e50.0
  void                    Deopt              !v    %75.0, CallTarget@0x55804e19e1f0[Call#4], %37.0   !
BB34   <- [19]
  val?^ | miss    %34.0 = LdVar              eR    incLocalUsageValue, e50.0
  lgl$#-          %34.1 = Identical                %34.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %34.1 -> BB70 (if true) | BB71 (if false)
BB22   <- [19]
  lgl-            %22.0 = Eq                 vwed  %66.0, for, elided
  lgl$#-          %22.1 = CheckTrueFalse     we    %22.0
  void                    Branch                   %22.1 -> BB31 (if true) | BB25 (if false)
BB28   <- [72, 80, 84, 88, 90]
  val?            %28.0 = Phi                      %90.4:BB90, %88.1:BB88, %72.1:BB72, %80.1:BB80, %84.1:BB84
  val?            %28.1 = %28.0
  val?^ | miss    %28.2 = LdVar              eR    incLocalSrcInfo, e50.0
  lgl$#-          %28.3 = Identical                %28.2, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %28.3 -> BB78 (if true) | BB79 (if false)
BB80   <- [74]
  void                    Nop                !     
  val?            %80.1 = %74.2
  goto BB28
BB81   <- [74]
  fs              %81.0 = FrameState         R     0x55804ec9bac0+640: [%74.2], env=e50.0
  void                    Deopt              !v    %81.0, Typecheck@0x55804e19e1f0[Type#12], %74.2   !
BB70   <- [34]
  prom-           %70.0 = MkArg                    unboundValue, [0x55804f20d030]_p11, e50.0
  prom-           %70.1 = MkArg                    unboundValue, [0x55804f20d030]_p12, e50.0
  val?            %70.2 = StaticCall         !     incLocalUsageValue[0x55804f8c5780](%70.0, "funuses", %70.1) e50.0   <real$->
  lgl$#-          %70.3 = IsType                   %70.2 isA real$-
  void                    Branch                   %70.3 -> BB72 (if true) | BB73 (if false)
BB71   <- [34]
  fs              %71.0 = FrameState         R     0x55804ec9bac0+469: [%66.0, %19.1], env=e50.0
  void                    Deopt              !v    %71.0, CallTarget@0x55804e19e1f0[Call#5], %34.0   !
BB31   <- [22]
  val?^ | miss    %31.0 = LdVar              eR    incLocalUsageValue, e50.0
  lgl$#-          %31.1 = Identical                %31.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %31.1 -> BB82 (if true) | BB83 (if false)
BB25   <- [22]
  lgl-            %25.0 = Eq                 vwed  %66.0, fundef, elided
  lgl$#-          %25.1 = CheckTrueFalse     we    %25.0   <true>
  void                    Branch                   %25.1 -> BB86 (if true) | BB87 (if false)
BB78   <- [28]
  prom-           %78.0 = MkArg                    unboundValue, [0x55804f20d030]_p7, e50.0
  prom-           %78.1 = MkArg                    unboundValue, [0x55804f20d030]_p8, e50.0
  val?            %78.2 = StaticCall         !     incLocalSrcInfo[0x55804ec0a530](%78.0, %78.1) e50.0   <vec>
  void                    Return             l     %78.2
BB79   <- [28]
  fs              %79.0 = FrameState         R     0x55804ec9bac0+815: [%28.1], env=e50.0
  void                    Deopt              !v    %79.0, CallTarget@0x55804e19e1f0[Call#8], %28.2   !
BB72   <- [70]
  void                    Nop                !     
  val?            %72.1 = %70.2
  goto BB28
BB73   <- [70]
  fs              %73.0 = FrameState         R     0x55804ec9bac0+693: [%70.2], env=e50.0
  void                    Deopt              !v    %73.0, Typecheck@0x55804e19e1f0[Type#15], %70.2   !
BB82   <- [31]
  prom-           %82.0 = MkArg                    unboundValue, [0x55804f20d030]_p9, e50.0
  prom-           %82.1 = MkArg                    unboundValue, [0x55804f20d030]_p10, e50.0
  val?            %82.2 = StaticCall         !     incLocalUsageValue[0x55804f8c5780](%82.0, "loopvars", %82.1) e50.0   <real$->
  lgl$#-          %82.3 = IsType                   %82.2 isA real$-
  void                    Branch                   %82.3 -> BB88 (if true) | BB89 (if false)
BB83   <- [31]
  fs              %83.0 = FrameState         R     0x55804ec9bac0+487: [%66.0, %22.1], env=e50.0
  void                    Deopt              !v    %83.0, CallTarget@0x55804e19e1f0[Call#6], %31.0   !
BB86   <- [25]
  val?^ | miss    %86.0 = LdVar              eR    addLocalFunDef, e50.0
  lgl$#-          %86.1 = Identical                %86.0, function(vn, e, w) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %86.1 -> BB90 (if true) | BB91 (if false)
BB87   <- [25]
  void                    Nop                !     
  lgl$#-          %87.1 = %25.1
  dr              %87.2 = DeadBranchReached@0x55804e19e1f0[Test#16]
  goto BB26
BB88   <- [82]
  void                    Nop                !     
  val?            %88.1 = %82.2
  goto BB28
BB89   <- [82]
  fs              %89.0 = FrameState         R     0x55804ec9bac0+746: [%82.2], env=e50.0
  void                    Deopt              !v    %89.0, Typecheck@0x55804e19e1f0[Type#18], %82.2   !
BB90   <- [86]
  prom-           %90.0 = MkArg                    unboundValue, [0x55804f20d030]_p4, e50.0
  prom-           %90.1 = MkArg                    unboundValue, [0x55804f20d030]_p5, e50.0
  prom-           %90.2 = MkArg                    unboundValue, [0x55804f20d030]_p6, e50.0
  val?            %90.3 = StaticCall         !     addLocalFunDef[0x5580502fdce0](%90.0, %90.1, %90.2) e50.0   <vec$->
  val?            %90.4 = %90.3
  goto BB28
BB91   <- [86]
  void                    Nop                !     
  val?^ | miss    %91.1 = %86.0
  dr              %91.2 = CallTarget@0x55804e19e1f0[Call#7]
  goto BB26
BB26   <- [87, 91]
  val?^ | miss    %26.0 = Phi                      %87.1:BB87, %91.1:BB91
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %87.2:BB87, %91.2:BB91
  dr              %26.3 = %26.2
  fs              %26.4 = FrameState         R     0x55804ec9bac0+505: [%66.0, %25.1], env=e50.0
  void                    Deopt              !v    %26.4, %26.3, %26.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("<-", "<<-") e0.0   <str->
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3

│ [0x55804f20d030]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
