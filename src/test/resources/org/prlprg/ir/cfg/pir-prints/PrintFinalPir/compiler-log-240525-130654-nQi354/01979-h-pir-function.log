
┌──────────────────────────────────────────────────────────────────────────────┐
│ h[0x5580509beb00]                                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
h[0x5580509beb00]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  (cls|spec|blt)  %0.3  = LdFun              !v    $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %0.4  = MkArg                    unboundValue, h[0x5580509beb00]_p0 (!refl), e0.2
  prom-           %0.5  = MkArg                    unboundValue, h[0x5580509beb00]_p1, e0.2
  val?            %0.6  = Call               !v    %0.3(%0.4, %0.5) e0.2   <cls->
  (cls|spec|blt)  %0.7  = ChkFunction        e     %0.6
  prom-           %0.8  = MkArg                    unboundValue, h[0x5580509beb00]_p2, e0.2
  prom-           %0.9  = MkArg                    unboundValue, h[0x5580509beb00]_p3, e0.2
  lgl$#-          %0.10 = Identical                %0.7, function(type, n, e, w) <(rir::DispatchTable*)|...
  void                    Branch                   %0.10 -> BB81 (if true) | BB82 (if false)
BB81   <- [0]
  val?            %81.0 = StaticCall         !v    [0x55804f8c5780]("function", "<<-", %0.8, %0.9) e0.2
  val?^ | miss    %81.1 = LdVar              eR    getAssignedVar, e0.2
  lgl$#-          %81.2 = Identical                %81.1, function(e) <(rir::DispatchTable*)0x55804e1c05|...
  void                    Branch                   %81.2 -> BB83 (if true) | BB84 (if false)
BB82   <- [0]
  fs              %82.0 = FrameState         R     0x55804cf5ff80+37: [%0.6], env=e0.2
  void                    Deopt              !v    %82.0, CallTarget@0x558050255978[Call#1], %0.7   !
BB83   <- [81]
  val?^ | miss    %83.0 = LdVar              eR    e, e0.2
  val?            %83.1 = Force!<wrapped>    !v    %83.0, e0.2   <code->
  prom-           %83.2 = MkArg                    %83.1, h[0x5580509beb00]_p4 (!refl), 
  val?            %83.3 = StaticCall         !v    getAssignedVar[0x558050083e70](%83.2) e0.2   <str$->
  void                    StVar              lW    v, %83.3, e0.2
  val?^ | miss    %83.5 = LdVar              eR    checkDotsAssignVar, e0.2
  lgl$#-          %83.6 = Identical                %83.5, function(v, w) <(rir::DispatchTable*)0x55804e2|...
  void                    Branch                   %83.6 -> BB85 (if true) | BB86 (if false)
BB84   <- [81]
  fs              %84.0 = FrameState         R     0x55804cf5ff80+85: [%81.0], env=e0.2
  void                    Deopt              !v    %84.0, CallTarget@0x558050255978[Call#2], %81.1   !
BB85   <- [83]
  prom-           %85.0 = MkArg                    unboundValue, h[0x5580509beb00]_p5 (!refl), e0.2
  prom-           %85.1 = MkArg                    unboundValue, h[0x5580509beb00]_p6, e0.2
  ct              %85.2 = PushContext        lCL   %85.0, %85.1, checkDotsAssignVar(v, w), function(v, w) <(rir::DispatchTable*)0x55804e2|..., e0.2
  val?^           %85.3 = CastType                 up %85.1
  val?^           %85.4 = CastType                 up %85.0
  lgl$#-          %85.5 = IsType                   %83.3 isA val?-
  void                    Branch                   %85.5 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  fs              %86.0 = FrameState         R     0x55804cf5ff80+132: [], env=e0.2
  void                    Deopt              !v    %86.0, CallTarget@0x558050255978[Call#3], %83.5   !
BB87   <- [85]
  val?-           %87.0 = CastType           d     dn %83.3   <str$->
  lgl-            %87.1 = Eq                 wed   %87.0, "...", elided   <lgl$->
  lgl$#-          %87.2 = IsType                   %87.1 isA lgl$-
  void                    Branch                   %87.2 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  fs              %88.0 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  env             e88.1 = (MkEnv)            l     v=%85.4, w=%85.3, parent=<env 0x55804e699488>, context 1
  fs              %88.2 = FrameState         R     0x55804e1317f0+9: [%83.3], env=e88.1, next=%88.0
  void                    Deopt              !v    %88.2, Typecheck@0x558050255978[Type#6], %83.3   !
BB89   <- [87]
  lgl$-           %89.0 = CastType           d     dn %87.1
  lgl$#-          %89.1 = CheckTrueFalse     e     %89.0
  void                    Branch                   %89.1 -> BB79 (if true) | BB11 (if false)
BB90   <- [87]
  void                    Nop                !     
  lgl-            %90.1 = %87.1
  dr              %90.2 = Typecheck@0x55804eaeb5f8[Type#1]
  goto BB9
BB79   <- [89]
  env             e79.0 = (MkEnv)            l     v=%85.4, w=%85.3, parent=<env 0x55804e699488>, context 1
  (cls|spec|blt)  %79.1 = LdFun              !v    $, <env 0x55804e699488>
  fs              %79.2 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  fs              %79.3 = FrameState         R     0x55804e1317f0+178: [%79.1], env=e79.0, next=%79.2
  void                    Deopt              !v    %79.3, DeadCall@0x55804eaeb5f8[Call#4], %79.1   !
BB11   <- [89]
  env             e11.0 = MkEnv              l     v=%85.4, w=%85.3, parent=<env 0x55804e699488>, context 1
  val?^ | miss    %11.1 = LdVar              eR    isDDSym, e11.0
  lgl$#-          %11.2 = Identical                %11.1, function(name) <(rir::DispatchTable*)0x55804e2|...
  void                    Branch                   %11.2 -> BB91 (if true) | BB92 (if false)
BB9   <- [90, 92]
  val?^ | miss    %9.0  = Phi                      %90.1:BB90, %92.1:BB92
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %90.2:BB90, %92.2:BB92
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  env             e9.5  = (MkEnv)            l     v=%85.4, w=%85.3, parent=<env 0x55804e699488>, context 1
  fs              %9.6  = FrameState         R     0x55804e1317f0+21: [%87.1], env=e9.5, next=%9.4
  void                    Deopt              !v    %9.6, %9.3, %9.1   !
BB91   <- [11]
  prom-           %91.0 = MkArg                    unboundValue, h[0x5580509beb00]_p31, e11.0
  ct              %91.1 = PushContext        lCL   %91.0, isDDSym(v), function(name) <(rir::DispatchTable*)0x55804e2|..., e11.0
  val?^           %91.2 = CastType                 up %91.0
  val?^ | miss    %91.3 = LdVar              eR    is.symbol, <env 0x55804e699488>
  lgl$#-          %91.4 = Identical                <blt is.symbol>, %91.3   <true>
  void                    Branch                   %91.4 -> BB93 (if true) | BB94 (if false)
BB92   <- [11]
  void                    Nop                !     
  val?^ | miss    %92.1 = %11.1
  dr              %92.2 = CallTarget@0x55804eaeb5f8[Call#0]
  goto BB9
BB93   <- [91]
  env             e93.0 = MkEnv              l     name=%91.2, parent=<env 0x55804e699488>, context 1
  val?            %93.1 = Force!<lazy>       !vL   %91.2, e93.0   <(sym|str)->
  lgl$#-          %93.2 = CallSafeBuiltin    wed   is.symbol(%93.1)    <lgl$->
  void                    Branch                   %93.2 -> BB78 (if true) | BB16 (if false)
BB94   <- [91]
  fs              %94.0 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  fs              %94.1 = FrameState         R     0x55804e1317f0+64: [], env=e11.0, next=%94.0
  env             e94.2 = (MkEnv)            l     name=%91.2, parent=<env 0x55804e699488>, context 1
  fs              %94.3 = FrameState         R     0x55804ed96dd0+17: [<blt is.symbol>, %91.4], env=e94.2, next=%94.1
  void                    Deopt              !v    %94.3, DeadBranchReached@0x55804eaeb288[Test#0], %91.4   !
BB78   <- [93]
  void                    Nop                !     
  lgl$#-          %78.1 = %93.2
  goto BB17
BB16   <- [93]
  val?^ | miss    %16.0 = LdVar              eR    is.character, e93.0
  lgl$#-          %16.1 = Identical                <blt is.character>, %16.0   <true>
  void                    Branch                   %16.1 -> BB95 (if true) | BB96 (if false)
BB17   <- [78, 95]
  lgl$-           %17.0 = Phi                      %95.2:BB95, %78.1:BB78
  lgl$-           %17.1 = %17.0
  lgl$-           %17.2 = AsLogical                %17.1
  lgl$#-          %17.3 = Identical                %17.2, false
  void                    Branch                   %17.3 -> BB77 (if true) | BB20 (if false)
BB95   <- [16]
  lgl$#-          %95.0 = CallSafeBuiltin    wed   is.character(%93.1)    <lgl$->
  lgl$-           %95.1 = LOr                      %93.2, %95.0
  lgl$-           %95.2 = %95.1
  goto BB17
BB96   <- [16]
  fs              %96.0 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  fs              %96.1 = FrameState         R     0x55804e1317f0+64: [], env=e11.0, next=%96.0
  fs              %96.2 = FrameState         R     0x55804ed96dd0+91: [%93.2], env=e93.0, next=%96.1
  void                    Deopt              !v    %96.2, DeadBranchReached@0x55804eaeb288[Test#1], %16.1   !
BB77   <- [17]
  void                    Nop                !     
  lgl$-           %77.1 = %17.2
  goto BB25
BB20   <- [17]
  val?^ | miss    %20.0 = LdVar              eR    length, e93.0
  lgl$#-          %20.1 = Identical                <blt length>, %20.0   <true>
  void                    Branch                   %20.1 -> BB97 (if true) | BB98 (if false)
BB25   <- [77, 107]
  lgl$-           %25.0 = Phi                      %107.4:BB107, %77.1:BB77
  lgl$-           %25.1 = %25.0
  val?            %25.2 = PopContext         C     %25.1, %91.1   <lgl$->
  lgl$#-          %25.3 = IsType                   %25.2 isA lgl$-
  void                    Branch                   %25.3 -> BB103 (if true) | BB104 (if false)
BB97   <- [20]
  val?^ | miss    %97.0 = LdVar              eR    grep, e93.0
  lgl$#-          %97.1 = Identical                %97.0, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Branch                   %97.1 -> BB99 (if true) | BB100 (if false)
BB98   <- [20]
  void                    Nop                !     
  lgl$#-          %98.1 = %20.1
  dr              %98.2 = DeadBranchReached@0x55804eaeb288[Test#2]
  goto BB18
BB103   <- [25]
  lgl$-           %103.0 = CastType           d     dn %25.2
  lgl$#-          %103.1 = CheckTrueFalse     e     %103.0
  void                    Branch                   %103.1 -> BB76 (if true) | BB28 (if false)
BB104   <- [25]
  fs              %104.0 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  fs              %104.1 = FrameState         R     0x55804e1317f0+64: [%25.2], env=e11.0, next=%104.0
  void                    Deopt              !v    %104.1, Typecheck@0x55804eaeb5f8[Type#3], %25.2   !
BB99   <- [97]
  prom-           %99.0 = MkArg                    unboundValue, h[0x5580509beb00]_p32, e93.0
  val?            %99.1 = StaticCall         !v    grep[0x55804f3899c0]("^\.\.[[:digit:]]+$", %99.0) e93.0   <int->
  lgl$#-          %99.2 = IsType                   %99.1 isA int-
  void                    Branch                   %99.2 -> BB101 (if true) | BB102 (if false)
BB100   <- [97]
  void                    Nop                !     
  val?^ | miss    %100.1 = %97.0
  dr              %100.2 = CallTarget@0x55804eaeb288[Call#5]
  goto BB18
BB18   <- [98, 100]
  val?^ | miss    %18.0 = Phi                      %98.1:BB98, %100.1:BB100
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %98.2:BB98, %100.2:BB100
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  fs              %18.5 = FrameState         R     0x55804e1317f0+64: [], env=e11.0, next=%18.4
  fs              %18.6 = FrameState         R     0x55804ed96dd0+201: [%17.1], env=e93.0, next=%18.5
  void                    Deopt              !v    %18.6, %18.3, %18.1   !
BB76   <- [103]
  fs              %76.0 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  (cls|spec|blt)  %76.1 = LdFun              !v    $, e11.0
  fs              %76.2 = FrameState         R     0x55804e1317f0+91: [%76.1], env=e11.0, next=%76.0
  void                    Deopt              !v    %76.2, DeadCall@0x55804eaeb5f8[Call#1], %76.1   !
BB28   <- [103]
  val?            %28.0 = PopContext         C     true, %85.2
  (cls|spec|blt)  %28.1 = LdFun              !v    $, <0x55804bee0c10>, e0.2
  prom-           %28.2 = MkArg                    unboundValue, h[0x5580509beb00]_p7, e0.2
  prom-           %28.3 = MkArg                    unboundValue, h[0x5580509beb00]_p8, e0.2
  val?            %28.4 = Call               !v    %28.1(%28.2, %28.3) e0.2   <cls->
  (cls|spec|blt)  %28.5 = ChkFunction        e     %28.4
  prom-           %28.6 = MkArg                    unboundValue, h[0x5580509beb00]_p9, e0.2
  prom-           %28.7 = MkArg                    unboundValue, h[0x5580509beb00]_p10, e0.2
  lgl$#-          %28.8 = Identical                %28.5, function(v, w) <(rir::DispatchTable*)0x55804e5|...
  val?^           %28.9 = CastType                 up %28.7
  val?^           %28.10 = CastType                 up %28.6
  void                    Branch                   %28.8 -> BB105 (if true) | BB106 (if false)
BB101   <- [99]
  int-            %101.0 = CastType           d     dn %99.1
  (int|real)$-    %101.1 = CallSafeBuiltin    wed   length(%101.0)    <int$->
  lgl$#-          %101.2 = IsType                   %101.1 isA int$-
  void                    Branch                   %101.2 -> BB107 (if true) | BB108 (if false)
BB102   <- [99]
  fs              %102.0 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  fs              %102.1 = FrameState         R     0x55804e1317f0+64: [], env=e11.0, next=%102.0
  fs              %102.2 = FrameState         R     0x55804ed96dd0+306: [%17.2, <blt length>, %99.1], env=e93.0, next=%102.1
  void                    Deopt              !v    %102.2, Typecheck@0x55804eaeb288[Type#11], %99.1   !
BB105   <- [28]
  ct              %105.0 = PushContext        lCL   %28.6, %28.7, $(w, isLocal)(v, w), function(v, w) <(rir::DispatchTable*)0x55804e5|..., e0.2
  env             e105.1 = MkEnv              l     v=%28.10, w=%28.9, parent=<env 0x55804e699488>, context 1
  val?^ | miss    %105.2 = LdVar              eR    isDDSym, e105.1
  lgl$#-          %105.3 = Identical                %105.2, function(name) <(rir::DispatchTable*)0x55804e2|...
  void                    Branch                   %105.3 -> BB109 (if true) | BB110 (if false)
BB106   <- [28]
  fs              %106.0 = FrameState         R     0x55804cf5ff80+207: [%28.4], env=e0.2
  void                    Deopt              !v    %106.0, CallTarget@0x558050255978[Call#5], %28.5   !
BB107   <- [101]
  int$-           %107.0 = CastType           d     dn %101.1
  lgl$-           %107.1 = Neq                d     %107.0, 0, elided   <lgl$->
  lgl$-           %107.2 = AsLogical                %107.1
  lgl$-           %107.3 = LAnd                     %17.2, %107.2
  lgl$-           %107.4 = %107.3
  goto BB25
BB108   <- [101]
  fs              %108.0 = FrameState         R     0x55804cf5ff80+169: [], env=e0.2
  fs              %108.1 = FrameState         R     0x55804e1317f0+64: [], env=e11.0, next=%108.0
  fs              %108.2 = FrameState         R     0x55804ed96dd0+328: [%17.2, %101.1], env=e93.0, next=%108.1
  void                    Deopt              !v    %108.2, Typecheck@0x55804eaeb288[Type#12], %101.1   !
BB109   <- [105]
  prom-           %109.0 = MkArg                    unboundValue, h[0x5580509beb00]_p19, e105.1
  ct              %109.1 = PushContext        lCL   %109.0, isDDSym(v), function(name) <(rir::DispatchTable*)0x55804e2|..., e105.1
  val?^           %109.2 = CastType                 up %109.0
  val?^ | miss    %109.3 = LdVar              eR    is.symbol, <env 0x55804e699488>
  lgl$#-          %109.4 = Identical                <blt is.symbol>, %109.3   <true>
  void                    Branch                   %109.4 -> BB111 (if true) | BB112 (if false)
BB110   <- [105]
  fs              %110.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  env             e110.1 = (MkEnv)            l     v=%28.10, w=%28.9, parent=<env 0x55804e699488>, context 1
  fs              %110.2 = FrameState         R     0x55804eb466f0+0: [], env=e110.1, next=%110.0
  void                    Deopt              !v    %110.2, CallTarget@0x55804f22bd28[Call#0], %105.2   !
BB111   <- [109]
  env             e111.0 = MkEnv              l     name=%109.2, parent=<env 0x55804e699488>, context 1
  val?            %111.1 = Force!<lazy>       !vL   %109.2, e111.0   <(sym|str)->
  lgl$#-          %111.2 = CallSafeBuiltin    wed   is.symbol(%111.1)    <lgl$->
  void                    Branch                   %111.2 -> BB75 (if true) | BB37 (if false)
BB112   <- [109]
  fs              %112.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %112.1 = FrameState         R     0x55804eb466f0+32: [], env=e105.1, next=%112.0
  env             e112.2 = (MkEnv)            l     name=%109.2, parent=<env 0x55804e699488>, context 1
  fs              %112.3 = FrameState         R     0x55804ed96dd0+17: [<blt is.symbol>, %109.4], env=e112.2, next=%112.1
  void                    Deopt              !v    %112.3, DeadBranchReached@0x55804eaeb288[Test#0], %109.4   !
BB75   <- [111]
  void                    Nop                !     
  lgl$#-          %75.1 = %111.2
  goto BB38
BB37   <- [111]
  val?^ | miss    %37.0 = LdVar              eR    is.character, e111.0
  lgl$#-          %37.1 = Identical                <blt is.character>, %37.0   <true>
  void                    Branch                   %37.1 -> BB113 (if true) | BB114 (if false)
BB38   <- [75, 113]
  lgl$-           %38.0 = Phi                      %113.2:BB113, %75.1:BB75
  lgl$-           %38.1 = %38.0
  lgl$-           %38.2 = AsLogical                %38.1
  lgl$#-          %38.3 = Identical                %38.2, false
  void                    Branch                   %38.3 -> BB74 (if true) | BB41 (if false)
BB113   <- [37]
  lgl$#-          %113.0 = CallSafeBuiltin    wed   is.character(%111.1)    <lgl$->
  lgl$-           %113.1 = LOr                      %111.2, %113.0
  lgl$-           %113.2 = %113.1
  goto BB38
BB114   <- [37]
  fs              %114.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %114.1 = FrameState         R     0x55804eb466f0+32: [], env=e105.1, next=%114.0
  fs              %114.2 = FrameState         R     0x55804ed96dd0+91: [%111.2], env=e111.0, next=%114.1
  void                    Deopt              !v    %114.2, DeadBranchReached@0x55804eaeb288[Test#1], %37.1   !
BB74   <- [38]
  void                    Nop                !     
  lgl$-           %74.1 = %38.2
  goto BB46
BB41   <- [38]
  val?^ | miss    %41.0 = LdVar              eR    length, e111.0
  lgl$#-          %41.1 = Identical                <blt length>, %41.0   <true>
  void                    Branch                   %41.1 -> BB115 (if true) | BB116 (if false)
BB46   <- [74, 123]
  lgl$-           %46.0 = Phi                      %123.4:BB123, %74.1:BB74
  lgl$-           %46.1 = %46.0
  val?            %46.2 = PopContext         C     %46.1, %109.1   <lgl$->
  lgl$#-          %46.3 = IsType                   %46.2 isA lgl$-
  void                    Branch                   %46.3 -> BB121 (if true) | BB122 (if false)
BB115   <- [41]
  val?^ | miss    %115.0 = LdVar              eR    grep, e111.0
  lgl$#-          %115.1 = Identical                %115.0, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Branch                   %115.1 -> BB117 (if true) | BB118 (if false)
BB116   <- [41]
  void                    Nop                !     
  lgl$#-          %116.1 = %41.1
  dr              %116.2 = DeadBranchReached@0x55804eaeb288[Test#2]
  goto BB39
BB121   <- [46]
  lgl$-           %121.0 = CastType           d     dn %46.2
  lgl$#-          %121.1 = CheckTrueFalse     e     %121.0
  void                    Branch                   %121.1 -> BB73 (if true) | BB49 (if false)
BB122   <- [46]
  fs              %122.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %122.1 = FrameState         R     0x55804eb466f0+32: [%46.2], env=e105.1, next=%122.0
  void                    Deopt              !v    %122.1, Typecheck@0x55804f22bd28[Type#1], %46.2   !
BB117   <- [115]
  prom-           %117.0 = MkArg                    unboundValue, h[0x5580509beb00]_p29, e111.0
  val?            %117.1 = StaticCall         !v    grep[0x55804f3899c0]("^\.\.[[:digit:]]+$", %117.0) e111.0   <int->
  lgl$#-          %117.2 = IsType                   %117.1 isA int-
  void                    Branch                   %117.2 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  void                    Nop                !     
  val?^ | miss    %118.1 = %115.0
  dr              %118.2 = CallTarget@0x55804eaeb288[Call#5]
  goto BB39
BB39   <- [116, 118]
  val?^ | miss    %39.0 = Phi                      %116.1:BB116, %118.1:BB118
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %116.2:BB116, %118.2:BB118
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %39.5 = FrameState         R     0x55804eb466f0+32: [], env=e105.1, next=%39.4
  fs              %39.6 = FrameState         R     0x55804ed96dd0+201: [%38.1], env=e111.0, next=%39.5
  void                    Deopt              !v    %39.6, %39.3, %39.1   !
BB73   <- [121]
  void                    StVar              lW    v, "...", e105.1
  goto BB50
BB49   <- [121]
  void                    Nop                !     
  goto BB50
BB119   <- [117]
  int-            %119.0 = CastType           d     dn %117.1
  (int|real)$-    %119.1 = CallSafeBuiltin    wed   length(%119.0)    <int$->
  lgl$#-          %119.2 = IsType                   %119.1 isA int$-
  void                    Branch                   %119.2 -> BB123 (if true) | BB124 (if false)
BB120   <- [117]
  fs              %120.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %120.1 = FrameState         R     0x55804eb466f0+32: [], env=e105.1, next=%120.0
  fs              %120.2 = FrameState         R     0x55804ed96dd0+306: [%38.2, <blt length>, %117.1], env=e111.0, next=%120.1
  void                    Deopt              !v    %120.2, Typecheck@0x55804eaeb288[Type#11], %117.1   !
BB50   <- [49, 73]
  val?^ | miss    %50.0 = LdVar              eR    is.baseenv, e105.1
  lgl$#-          %50.1 = Identical                %50.0, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %50.1 -> BB125 (if true) | BB126 (if false)
BB123   <- [119]
  int$-           %123.0 = CastType           d     dn %119.1
  lgl$-           %123.1 = Neq                d     %123.0, 0, elided   <lgl$->
  lgl$-           %123.2 = AsLogical                %123.1
  lgl$-           %123.3 = LAnd                     %38.2, %123.2
  lgl$-           %123.4 = %123.3
  goto BB46
BB124   <- [119]
  fs              %124.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %124.1 = FrameState         R     0x55804eb466f0+32: [], env=e105.1, next=%124.0
  fs              %124.2 = FrameState         R     0x55804ed96dd0+328: [%38.2, %119.1], env=e111.0, next=%124.1
  void                    Deopt              !v    %124.2, Typecheck@0x55804eaeb288[Type#12], %119.1   !
BB125   <- [50]
  prom-           %125.0 = MkArg                    unboundValue, h[0x5580509beb00]_p20, e105.1
  ct              %125.1 = PushContext        lCL   %125.0, is.baseenv(findOwnerEnv(v, $(w, env), stop=$(w|..., function(e) <(rir::DispatchTable*)0x55804e41e7|..., e105.1
  val?^           %125.2 = CastType                 up %125.0
  val?^ | miss    %125.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %125.4 = Identical                %125.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %125.4 -> BB127 (if true) | BB128 (if false)
BB126   <- [50]
  fs              %126.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %126.1 = FrameState         R     0x55804eb466f0+63: [], env=e105.1, next=%126.0
  void                    Deopt              !v    %126.1, CallTarget@0x55804f22bd28[Call#1], %50.0   !
BB127   <- [125]
  env             e127.0 = MkEnv              l     e=%125.2, parent=<env 0x55804e699488>, context 1
  prom-           %127.1 = MkArg                    unboundValue, h[0x5580509beb00]_p34, e127.0
  prom-           %127.2 = MkArg                    unboundValue, h[0x5580509beb00]_p35, e127.0
  ct              %127.3 = PushContext        lCL   %127.1, %127.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e127.0
  val?^           %127.4 = CastType                 up %127.2
  val?^           %127.5 = CastType                 up %127.1
  env             e127.6 = MkEnv              l     x=%127.5, y=%127.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %127.7 = Force!<lazy>       !vL   %127.5, e127.6   <val?+>
  val?            %127.8 = Force!<lazy>       !vL   %127.4, e127.6   <val?+>
  val?            %127.9 = CallBuiltin        !v    identical(%127.7, %127.8, true, true, true, true, false, true) e127.6
  val?            %127.10 = PopContext         C     %127.9, %127.3   <lgl$->
  lgl$#-          %127.11 = IsType                   %127.10 isA lgl$-
  void                    Branch                   %127.11 -> BB129 (if true) | BB130 (if false)
BB128   <- [125]
  fs              %128.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %128.1 = FrameState         R     0x55804eb466f0+95: [], env=e105.1, next=%128.0
  env             e128.2 = (MkEnv)            l     e=%125.2, parent=<env 0x55804e699488>, context 1
  fs              %128.3 = FrameState         R     0x55804eb37490+0: [], env=e128.2, next=%128.1
  void                    Deopt              !v    %128.3, CallTarget@0x55804ea246f8[Call#0], %125.3   !
BB129   <- [127]
  lgl$-           %129.0 = CastType           d     dn %127.10
  val?            %129.1 = PopContext         C     %129.0, %125.1   <lgl$->
  lgl$#-          %129.2 = IsType                   %129.1 isA lgl$-
  void                    Branch                   %129.2 -> BB131 (if true) | BB132 (if false)
BB130   <- [127]
  fs              %130.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %130.1 = FrameState         R     0x55804eb466f0+95: [], env=e105.1, next=%130.0
  fs              %130.2 = FrameState         R     0x55804eb37490+37: [%127.10], env=e127.0, next=%130.1
  void                    Deopt              !v    %130.2, Typecheck@0x55804ea246f8[Type#2], %127.10   !
BB131   <- [129]
  lgl$-           %131.0 = CastType           d     dn %129.1
  lgl$-           %131.1 = Not                d     %131.0, elided
  val?            %131.2 = PopContext         C     %131.1, %105.0   <lgl$->
  lgl$#-          %131.3 = IsType                   %131.2 isA lgl$-
  void                    Branch                   %131.3 -> BB133 (if true) | BB134 (if false)
BB132   <- [129]
  fs              %132.0 = FrameState         R     0x55804cf5ff80+245: [], env=e0.2
  fs              %132.1 = FrameState         R     0x55804eb466f0+95: [%129.1], env=e105.1, next=%132.0
  void                    Deopt              !v    %132.1, Typecheck@0x55804f22bd28[Type#11], %129.1   !
BB133   <- [131]
  lgl$-           %133.0 = CastType           d     dn %131.2
  lgl$#-          %133.1 = CheckTrueFalse     e     %133.0
  void                    Branch                   %133.1 -> BB62 (if true) | BB61 (if false)
BB134   <- [131]
  fs              %134.0 = FrameState         R     0x55804cf5ff80+245: [%131.2], env=e0.2
  void                    Deopt              !v    %134.0, Typecheck@0x558050255978[Type#14], %131.2   !
BB62   <- [133]
  (cls|spec|blt)  %62.0 = LdFun              !v    $, <0x55804bee0c10>, e0.2
  prom-           %62.1 = MkArg                    unboundValue, h[0x5580509beb00]_p11, e0.2
  prom-           %62.2 = MkArg                    unboundValue, h[0x5580509beb00]_p12, e0.2
  val?            %62.3 = Call               !v    %62.0(%62.1, %62.2) e0.2   <cls->
  (cls|spec|blt)  %62.4 = ChkFunction        e     %62.3
  prom-           %62.5 = MkArg                    unboundValue, h[0x5580509beb00]_p13, e0.2
  prom-           %62.6 = MkArg                    unboundValue, h[0x5580509beb00]_p14, e0.2
  prom-           %62.7 = MkArg                    unboundValue, h[0x5580509beb00]_p15, e0.2
  lgl$#-          %62.8 = Identical                %62.4, function(type, n, e, w) <(rir::DispatchTable*)|...
  void                    Branch                   %62.8 -> BB135 (if true) | BB136 (if false)
BB61   <- [133]
  (cls|spec|blt)  %61.0 = LdFun              !v    $, e0.2
  fs              %61.1 = FrameState         R     0x55804cf5ff80+261: [%61.0], env=e0.2
  void                    Deopt              !v    %61.1, DeadCall@0x558050255978[Call#6], %61.0   !
BB135   <- [62]
  val?            %135.0 = StaticCall         !v    [0x55804c1b4320]("<<-", %62.5, %62.6, %62.7) e0.2
  val?^ | miss    %135.1 = LdVar              eR    typeof, e0.2
  lgl$#-          %135.2 = Identical                %135.1, function(x) <(rir::DispatchTable*)0x55804e1c3c|...
  void                    Branch                   %135.2 -> BB137 (if true) | BB138 (if false)
BB136   <- [62]
  fs              %136.0 = FrameState         R     0x55804cf5ff80+384: [%62.3], env=e0.2
  void                    Deopt              !v    %136.0, CallTarget@0x558050255978[Call#9], %62.4   !
BB137   <- [135]
  val?^ | miss    %137.0 = LdVar              eR    e, e0.2
  val?            %137.1 = Force!<wrapped>    !v    %137.0, e0.2   <code->
  lgl$#-          %137.2 = IsType                   %137.1 isA val?-
  void                    Branch                   %137.2 -> BB139 (if true) | BB140 (if false)
BB138   <- [135]
  fs              %138.0 = FrameState         R     0x55804cf5ff80+432: [%135.0], env=e0.2
  void                    Deopt              !v    %138.0, CallTarget@0x558050255978[Call#10], %135.1   !
BB139   <- [137]
  val?-           %139.0 = CastType           d     dn %137.1   <code->
  val?            %139.1 = Extract2_1D        wed   %139.0, 2, elided   <sym->
  str$-           %139.2 = CallSafeBuiltin    wed   typeof(%139.1)    <str$->
  void                    Visible            v     
  lgl$-           %139.4 = Eq                 vd    %139.2, "language", elided   <lgl$->
  lgl$#-          %139.5 = CheckTrueFalse     e     %139.4
  void                    Branch                   %139.5 -> BB72 (if true) | BB71 (if false)
BB140   <- [137]
  prom-           %140.0 = MkArg                    unboundValue, h[0x5580509beb00]_p16, e0.2
  val?^           %140.1 = CastType                 up %140.0
  fs              %140.2 = FrameState         R     0x55804cf5ff80+465: [], env=e0.2
  env             e140.3 = (MkEnv)            l     x=%140.1, parent=R_BaseNamespace, context 0
  fs              %140.4 = FrameState         R     0x55804e7773a0+9: [], env=e140.3, next=%140.2
  fs              %140.5 = FrameState         R     0x55804dc8c870+5(pr): [%137.1], env=e0.2, next=%140.4
  void                    Deopt              !v    %140.5, Typecheck@0x558050255978[Type#27], %137.1   !
BB72   <- [139]
  (cls|spec|blt)  %72.0 = LdFun              !v    flattenAssignment, e0.2
  fs              %72.1 = FrameState         R     0x55804cf5ff80+498: [%72.0], env=e0.2
  void                    Deopt              !v    %72.1, DeadCall@0x558050255978[Call#11], %72.0   !
BB71   <- [139]
  val?^ | miss    %71.0 = LdVar              eR    walkCode, e0.2
  lgl$#-          %71.1 = Identical                %71.0, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Branch                   %71.1 -> BB141 (if true) | BB142 (if false)
BB141   <- [71]
  prom-           %141.0 = MkArg                    unboundValue, h[0x5580509beb00]_p17, e0.2
  prom-           %141.1 = MkArg                    unboundValue, h[0x5580509beb00]_p18, e0.2
  val?            %141.2 = StaticCall         !     walkCode[0x55804fa9c9f0](%141.0, %141.1) e0.2   <(nil|vec)>
  void                    Return             l     %141.2
BB142   <- [71]
  fs              %142.0 = FrameState         R     0x55804cf5ff80+465: [], env=e0.2
  prom-           %142.1 = MkArg                    %139.1, h[0x5580509beb00]_p16 (!refl), e0.2
  val?~           %142.2 = CastType                 up %142.1
  env             e142.3 = (MkEnv)            l     x=%142.2, parent=R_BaseNamespace, context 0
  fs              %142.4 = FrameState         R     0x55804e7773a0+27: [%139.2], env=e142.3, next=%142.0
  void                    Deopt              !v    %142.4, CallTarget@0x558050255978[Call#14], %71.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enterGlobal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enterLocal, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 2, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 3, e0.0   <(sym|code)->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     findOwnerEnv, <0x55804e95cf28>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, h[0x5580509beb00]_p21, e0.0
  prom-           %0.3  = MkArg                    unboundValue, h[0x5580509beb00]_p22, e0.0
  prom-           %0.4  = MkArg                    unboundValue, h[0x5580509beb00]_p25, e0.0
  prom-           %0.5  = MkArg                    unboundValue, h[0x5580509beb00]_p28, e0.0
  val?            %0.6  = NamedCall          !     %0.1(%0.2, %0.3, stop=%0.4, default=%0.5) e0.0   <env+>
  void                    Return             l     %0.6
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, h[0x5580509beb00]_p23, e0.0
  prom-           %0.3  = MkArg                    unboundValue, h[0x5580509beb00]_p24, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, h[0x5580509beb00]_p26, e0.0
  prom-           %0.3  = MkArg                    unboundValue, h[0x5580509beb00]_p27, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, h[0x5580509beb00]_p30, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|str)->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, h[0x5580509beb00]_p33, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|str)->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ h[0x5580509beb00]                                                            │
└──────────────────────────────────────────────────────────────────────────────┘
