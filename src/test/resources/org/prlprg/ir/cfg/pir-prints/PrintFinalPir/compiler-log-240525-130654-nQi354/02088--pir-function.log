
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804ff27be0]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804ff27be0]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     parnames=%0.2, locals=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  cls             %0.4  = MkCls                    >mkentry@246, e0.3
  (cls|spec|blt)  %0.5  = LdFun              !v    $, <0x55804bee0c10>, <env 0x55804e699488>
  prom-           %0.6  = MkArg                    unboundValue, [0x55804ff27be0]_p0, e0.3
  prom-           %0.7  = MkArg                    unboundValue, [0x55804ff27be0]_p1, e0.3
  val?            %0.8  = Call               !v    %0.5(%0.6, %0.7) e0.3   <env->
  void                    StVar              lW    env, %0.8, e0.3
  val?^ | miss    %0.10 = LdVar              eR    locals, e0.3
  val?            %0.11 = Force!<lazy>       !v    %0.10, e0.3   <str->
  lgl$#-          %0.12 = IsType                   %0.11 isA val+   <true>
  void                    Branch                   %0.12 -> BB34 (if true) | BB35 (if false)
BB34   <- [0]
  val?^ | miss    %34.0 = LdVar              eR    %in%, e0.3
  lgl$#-          %34.1 = Identical                %34.0, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %34.1 -> BB36 (if true) | BB37 (if false)
BB35   <- [0]
  void                    Nop                !     
  lgl$#-          %35.1 = %0.12
  dr              %35.2 = DeadBranchReached@0x55804ec47a70[Test#0]
  goto BB33
BB36   <- [34]
  prom-           %36.0 = MkArg                    unboundValue, [0x55804ff27be0]_p3, e0.3
  val?^ | miss    %36.1 = LdVar              eR    locals, e0.3
  val?            %36.2 = Force!<wrapped>    !v    %36.1, e0.3   <str->
  prom-           %36.3 = MkArg                    %36.2, [0x55804ff27be0]_p2 (!refl), 
  val?            %36.4 = StaticCall         !v    %in%[0x55804ee10020](%36.3, %36.0) e0.3   <lgl->
  lgl$#-          %36.5 = IsType                   %36.4 isA lgl-
  void                    Branch                   %36.5 -> BB38 (if true) | BB39 (if false)
BB37   <- [34]
  void                    Nop                !     
  val?^ | miss    %37.1 = %34.0
  dr              %37.2 = CallTarget@0x55804ec47a70[Call#2]
  goto BB33
BB33   <- [35, 37]
  val?^ | miss    %33.0 = Phi                      %35.1:BB35, %37.1:BB37
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %35.2:BB35, %37.2:BB37
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55804e6fe0f0+60: [%0.11], env=e0.3
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB38   <- [36]
  lgl-            %38.0 = CastType           d     dn %36.4
  lgl-            %38.1 = Not                wed   %38.0, elided
  lgl$#-          %38.2 = IsType                   %0.11 isA val?-
  void                    Branch                   %38.2 -> BB40 (if true) | BB41 (if false)
BB39   <- [36]
  fs              %39.0 = FrameState         R     0x55804e6fe0f0+133: [%0.11, %36.4], env=e0.3
  void                    Deopt              !v    %39.0, Typecheck@0x55804ec47a70[Type#9], %36.4   !
BB40   <- [38]
  val?-           %40.0 = CastType           d     dn %0.11   <str->
  val?            %40.1 = Extract1_1D        wed   %40.0, %38.1, elided   <str->
  void                    StVar              lW    nplocals, %40.1, e0.3
  val?^ | miss    %40.3 = LdVar              eR    env, e0.3
  lgl$#-          %40.4 = IsType                   %40.3 isA val?~- | miss
  void                    Branch                   %40.4 -> BB42 (if true) | BB43 (if false)
BB41   <- [38]
  fs              %41.0 = FrameState         R     0x55804e6fe0f0+139: [%0.11, %38.1], env=e0.3
  void                    Deopt              !v    %41.0, Typecheck@0x55804ec47a70[Type#3], %0.11   !
BB42   <- [40]
  val?~- | miss   %42.0 = CastType           d     dn %40.3
  val?-           %42.1 = Force!<value>            %42.0,    <env->
  (cls|spec|blt)  %42.2 = LdFun              !v    attr<-, <0x55804bee4e08>, e0.3
  val?^ | miss    %42.3 = LdVar              eR    env, e0.3
  lgl$#-          %42.4 = IsType                   %42.3 isA val?~- | miss
  void                    Branch                   %42.4 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  fs              %43.0 = FrameState         R     0x55804e6fe0f0+155: [], env=e0.3
  void                    Deopt              !v    %43.0, Typecheck@0x55804ec47a70[Type#11], %40.3   !
BB44   <- [42]
  val?~- | miss   %44.0 = CastType           d     dn %42.3
  val?-           %44.1 = Force!<value>            %44.0,    <env->
  val?            %44.2 = NamedCall          !v    %42.2(%44.1, "checkUsageFrame", value=%42.1) e0.3
  void                    StVar              lW    env, %44.2, e0.3
  void                    StVar              lW    mkentry, %0.4, e0.3
  val?^ | miss    %44.5 = LdVar              eR    parnames, e0.3
  val?            %44.6 = Force!<wrapped>    !v    %44.5, e0.3   <(nil|str)->
  val?+           %44.7 = ToForSeq           e     %44.6
  int$-           %44.8 = Length                   %44.7
  int$-           %44.9 = Inc                      0L
  lgl$-           %44.10 = Lt                 d     %44.8, %44.9, elided
  lgl$#-          %44.11 = Identical                %44.10, true
  void                    Branch                   %44.11 -> BB32 (if true) | BB11 (if false)
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x55804e6fe0f0+169: [%42.1], env=e0.3
  void                    Deopt              !v    %45.0, Typecheck@0x55804ec47a70[Type#12], %42.3   !
BB32   <- [44]
  void                    Nop                !     
  int$-           %32.1 = %44.9
  goto BB19
BB11   <- [44]
  val?            %11.0 = Extract2_1D        wed   %44.7, %44.9, elided
  void                    StVar              lW    v, %11.0, e0.3
  val?^ | miss    %11.2 = LdVar              eR    assign, e0.3
  lgl$#-          %11.3 = Identical                %11.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %11.3 -> BB46 (if true) | BB47 (if false)
BB19   <- [18, 32]
  int$-           %19.0 = Phi                      %18.1:BB18, %32.1:BB32
  int$-           %19.1 = %19.0
  val?^ | miss    %19.2 = LdVar              eR    nplocals, e0.3
  lgl$#-          %19.3 = IsType                   %19.2 isA val?~- | miss
  void                    Branch                   %19.3 -> BB48 (if true) | BB49 (if false)
BB46   <- [11]
  prom-           %46.0 = MkArg                    unboundValue, [0x55804ff27be0]_p5 (!refl), e0.3
  prom-           %46.1 = MkArg                    unboundValue, [0x55804ff27be0]_p6, e0.3
  prom-           %46.2 = MkArg                    unboundValue, [0x55804ff27be0]_p7, e0.3
  val?            %46.3 = StaticCall         !v    assign[0x55804f865ca0](%46.0, %46.1, missingArg, %46.2) { 0 1 3n } e0.3
  int$-           %46.4 = %44.9
  goto BB14
BB47   <- [11]
  fs              %47.0 = FrameState         R     0x55804e6fe0f0+325: [%44.7, %44.8, %44.9], env=e0.3
  void                    Deopt              !v    %47.0, CallTarget@0x55804ec47a70[Call#4], %11.2   !
BB48   <- [19]
  val?~- | miss   %48.0 = CastType           d     dn %19.2
  val?-           %48.1 = Force!<value>            %48.0,    <str->
  int$-           %48.2 = Length                   %48.1
  lgl$-           %48.3 = Lt                 d     %48.2, %44.9, elided
  lgl$#-          %48.4 = Identical                %48.3, true
  void                    Branch                   %48.4 -> BB31 (if true) | BB22 (if false)
BB49   <- [19]
  fs              %49.0 = FrameState         R     0x55804e6fe0f0+469: [%44.7, %44.8, %19.1], env=e0.3
  void                    Deopt              !v    %49.0, Typecheck@0x55804ec47a70[Type#20], %19.2   !
BB14   <- [46, 52]
  int$-           %14.0 = Phi                      %46.4:BB46, %52.4:BB52
  int$-           %14.1 = %14.0
  int$-           %14.2 = Inc                      %14.1
  lgl$-           %14.3 = Lt                 d     %44.8, %14.2, elided
  lgl$#-          %14.4 = Identical                %14.3, true
  void                    Branch                   %14.4 -> BB18 (if true) | BB15 (if false)
BB31   <- [48]
  void                    Nop                !     
  goto BB30
BB22   <- [48]
  val?            %22.0 = Extract2_1D        wed   %48.1, %44.9, elided
  void                    StVar              lW    v, %22.0, e0.3
  val?^ | miss    %22.2 = LdVar              eR    assign, e0.3
  lgl$#-          %22.3 = Identical                %22.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %22.3 -> BB50 (if true) | BB51 (if false)
BB18   <- [14]
  void                    Nop                !     
  int$-           %18.1 = %14.2
  goto BB19
BB15   <- [14]
  val?            %15.0 = Extract2_1D        wed   %44.7, %14.2, elided
  void                    StVar              lW    v, %15.0, e0.3
  val?^ | miss    %15.2 = LdVar              eR    assign, e0.3
  lgl$#-          %15.3 = Identical                %15.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %15.3 -> BB52 (if true) | BB53 (if false)
BB30   <- [29, 31]
  void                    Invisible          v     
  void                    Return             l     nil
BB50   <- [22]
  prom-           %50.0 = MkArg                    unboundValue, [0x55804ff27be0]_p11 (!refl), e0.3
  prom-           %50.1 = MkArg                    unboundValue, [0x55804ff27be0]_p12, e0.3
  prom-           %50.2 = MkArg                    unboundValue, [0x55804ff27be0]_p13, e0.3
  val?            %50.3 = StaticCall         !v    assign[0x55804f865ca0](%50.0, %50.1, missingArg, %50.2) { 0 1 3n } e0.3
  int$-           %50.4 = %44.9
  goto BB25
BB51   <- [22]
  fs              %51.0 = FrameState         R     0x55804e6fe0f0+528: [%48.1, %48.2, %44.9], env=e0.3
  void                    Deopt              !v    %51.0, CallTarget@0x55804ec47a70[Call#8], %22.2   !
BB52   <- [15]
  prom-           %52.0 = MkArg                    unboundValue, [0x55804ff27be0]_p8 (!refl), e0.3
  prom-           %52.1 = MkArg                    unboundValue, [0x55804ff27be0]_p9, e0.3
  prom-           %52.2 = MkArg                    unboundValue, [0x55804ff27be0]_p10, e0.3
  val?            %52.3 = StaticCall         !v    assign[0x55804f865ca0](%52.0, %52.1, missingArg, %52.2) { 0 1 3n } e0.3
  int$-           %52.4 = %14.2
  goto BB14
BB53   <- [15]
  fs              %53.0 = FrameState         R     0x55804e6fe0f0+409: [%44.7, %44.8, %14.2], env=e0.3
  void                    Deopt              !v    %53.0, CallTarget@0x55804ec47a70[Call#6], %15.2   !
BB25   <- [50, 54]
  int$-           %25.0 = Phi                      %50.4:BB50, %54.4:BB54
  int$-           %25.1 = %25.0
  int$-           %25.2 = Inc                      %25.1
  lgl$-           %25.3 = Lt                 d     %48.2, %25.2, elided
  lgl$#-          %25.4 = Identical                %25.3, true
  void                    Branch                   %25.4 -> BB29 (if true) | BB26 (if false)
BB29   <- [25]
  void                    Nop                !     
  goto BB30
BB26   <- [25]
  val?            %26.0 = Extract2_1D        wed   %48.1, %25.2, elided
  void                    StVar              lW    v, %26.0, e0.3
  val?^ | miss    %26.2 = LdVar              eR    assign, e0.3
  lgl$#-          %26.3 = Identical                %26.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %26.3 -> BB54 (if true) | BB55 (if false)
BB54   <- [26]
  prom-           %54.0 = MkArg                    unboundValue, [0x55804ff27be0]_p14 (!refl), e0.3
  prom-           %54.1 = MkArg                    unboundValue, [0x55804ff27be0]_p15, e0.3
  prom-           %54.2 = MkArg                    unboundValue, [0x55804ff27be0]_p16, e0.3
  val?            %54.3 = StaticCall         !v    assign[0x55804f865ca0](%54.0, %54.1, missingArg, %54.2) { 0 1 3n } e0.3
  int$-           %54.4 = %25.2
  goto BB25
BB55   <- [26]
  fs              %55.0 = FrameState         R     0x55804e6fe0f0+612: [%48.1, %48.2, %25.2], env=e0.3
  void                    Deopt              !v    %55.0, CallTarget@0x55804ec47a70[Call#10], %26.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    locals, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804f03e6a0>, e0.0
  val?            %0.2  = Call               !     %0.1(true) e0.0   <env->
  void                    Return             l     %0.2
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804c4bcd58>, e0.0
  val?            %0.2  = Call               !     %0.1(true) e0.0   <env->
  void                    Return             l     %0.2
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804f03e6a0>, e0.0
  val?            %0.2  = Call               !     %0.1(false) e0.0   <env->
  void                    Return             l     %0.2
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mkentry, <0x55804ef3f350>, e0.0
  val?            %0.2  = Call               !     %0.1(false) e0.0   <env->
  void                    Return             l     %0.2
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3

│ [0x55804ff27be0]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
