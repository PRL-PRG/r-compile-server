
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804e863490]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1│
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804e863490]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?~+          %0.2  = LdArg                    1
  val?~+          %0.3  = LdArg                    0
  val+            %0.4  = Force<value>             %0.3,    <str$->
  val?^ | miss    %0.5  = LdVar              eR    %in%, <env 0x55804e699488>
  lgl$#-          %0.6  = Identical                %0.5, function(x, table) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %0.6 -> BB90 (if true) | BB91 (if false)
BB90   <- [0]
  env             e90.0 = MkEnv              l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %90.1 = MkArg                    unboundValue, [0x55804e863490]_p1, e90.0
  val?            %90.2 = StaticCall         !v    %in%[0x55804ef7ad30](%0.4, %90.1) e90.0   <lgl$->
  lgl$#-          %90.3 = IsType                   %90.2 isA lgl$-
  void                    Branch                   %90.3 -> BB92 (if true) | BB93 (if false)
BB91   <- [0]
  env             e91.0 = (MkEnv)            l     type=%0.3, n=%0.2, e=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %91.1 = FrameState         R     0x55804ec9bac0+0: [], env=e91.0
  void                    Deopt              !v    %91.1, CallTarget@0x55804e19e1f0[Call#0], %0.5
BB92   <- [90]
  lgl$-           %92.0 = CastType           d     dn %90.2
  lgl$-           %92.1 = AsLogical                %92.0
  lgl$#-          %92.2 = Identical                %92.1, false
  void                    Branch                   %92.2 -> BB88 (if true) | BB5 (if false)
BB93   <- [90]
  void                    Nop                !     
  val?            %93.1 = %90.2
  dr              %93.2 = Typecheck@0x55804e19e1f0[Type#2]
  goto BB3
BB88   <- [92]
  void                    Nop                !     
  lgl$-           %88.1 = %92.1
  goto BB8
BB5   <- [92]
  val?^ | miss    %5.0  = LdVar              eR    isSimpleFunDef, e90.0
  lgl$#-          %5.1  = Identical                %5.0, function(e, w) <(rir::DispatchTable*)0x55804e1|...
  void                    Branch                   %5.1 -> BB94 (if true) | BB95 (if false)
BB3   <- [93, 95]
  val?^ | miss    %3.0  = Phi                      %93.1:BB93, %95.1:BB95
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %93.2:BB93, %95.2:BB95
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55804ec9bac0+37: [%90.2], env=e90.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB8   <- [88, 96]
  lgl$-           %8.0  = Phi                      %96.3:BB96, %88.1:BB88
  lgl$-           %8.1  = %8.0
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1
  void                    Branch                   %8.2 -> BB87 (if true) | BB9 (if false)
BB94   <- [5]
  prom-           %94.0 = MkArg                    unboundValue, [0x55804e863490]_p2, e90.0
  prom-           %94.1 = MkArg                    unboundValue, [0x55804e863490]_p3, e90.0
  val?            %94.2 = StaticCall         !v    isSimpleFunDef[0x55804f116420](%94.0, %94.1) e90.0   <lgl$->
  lgl$#-          %94.3 = IsType                   %94.2 isA lgl$-
  void                    Branch                   %94.3 -> BB96 (if true) | BB97 (if false)
BB95   <- [5]
  void                    Nop                !     
  val?^ | miss    %95.1 = %5.0
  dr              %95.2 = CallTarget@0x55804e19e1f0[Call#2]
  goto BB3
BB87   <- [8]
  void                    StVar              lW    type, "fundef", e90.0
  goto BB10
BB9   <- [8]
  void                    Nop                !     
  goto BB10
BB96   <- [94]
  lgl$-           %96.0 = CastType           d     dn %94.2
  lgl$-           %96.1 = AsLogical                %96.0
  lgl$-           %96.2 = LAnd                     %92.1, %96.1
  lgl$-           %96.3 = %96.2
  goto BB8
BB97   <- [94]
  fs              %97.0 = FrameState         R     0x55804ec9bac0+86: [%92.1, %94.2], env=e90.0
  void                    Deopt              !v    %97.0, Typecheck@0x55804e19e1f0[Type#5], %94.2   !
BB10   <- [9, 87]
  val?^ | miss    %10.0 = LdVar              eR    type, e90.0
  val?            %10.1 = Force!<value>      !v    %10.0, e90.0   <str$->
  lgl$-           %10.2 = Is                       %10.1, logical
  lgl$-           %10.3 = Is                       %10.1, integer
  lgl$-           %10.4 = Is                       %10.1, double
  lgl$-           %10.5 = Is                       %10.1, complex
  lgl$-           %10.6 = Is                       %10.1, character   <true>
  lgl$-           %10.7 = Is                       %10.1, raw
  lgl$-           %10.8 = Is                       %10.1, list
  lgl$-           %10.9 = Is                       %10.1, expression
  lgl$-           %10.10 = LOr                      %10.9, %10.8
  lgl$-           %10.11 = LOr                      %10.10, %10.7
  lgl$-           %10.12 = LOr                      %10.11, %10.6
  lgl$-           %10.13 = LOr                      %10.12, %10.5
  lgl$-           %10.14 = LOr                      %10.13, %10.4
  lgl$-           %10.15 = LOr                      %10.14, %10.3
  lgl$-           %10.16 = LOr                      %10.15, %10.2   <true>
  lgl$#-          %10.17 = Identical                %10.16, true
  int$-           %10.18 = Length                   %10.1
  lgl$-           %10.19 = Is                       %10.1, Factor   <false>
  lgl$#-          %10.20 = Identical                %10.19, false
  lgl$#-          %10.21 = Identical                %10.6, true
  lgl$#-          %10.22 = IsType                   %10.1 isA val?-
  void                    Branch                   %10.17 -> BB98 (if true) | BB99 (if false)
BB98   <- [10]
  lgl$-           %98.0 = Eq                 d     %10.18, 1L, elided   <true>
  lgl$#-          %98.1 = Identical                %98.0, true
  void                    Branch                   %98.1 -> BB100 (if true) | BB101 (if false)
BB99   <- [10]
  void                    Nop                !     
  lgl$#-          %99.1 = %10.17
  dr              %99.2 = DeadBranchReached@0x55804e19e1f0[Test#0]
  goto BB11
BB100   <- [98]
  void                    Branch                   %10.20 -> BB102 (if true) | BB103 (if false)
BB101   <- [98]
  void                    Nop                !     
  lgl$#-          %101.1 = %98.1
  dr              %101.2 = DeadBranchReached@0x55804e19e1f0[Test#1]
  goto BB11
BB11   <- [99, 101, 103, 105, 107]
  val?^ | miss    %11.0 = Phi                      %99.1:BB99, %101.1:BB101, %103.1:BB103, %105.1:BB105, %107.1:BB107
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %99.2:BB99, %101.2:BB101, %103.2:BB103, %105.2:BB105, %107.2:BB107
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55804ec9bac0+128: [%10.1], env=e90.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB102   <- [100]
  void                    Branch                   %10.21 -> BB104 (if true) | BB105 (if false)
BB103   <- [100]
  void                    Nop                !     
  lgl$#-          %103.1 = %10.20
  dr              %103.2 = DeadBranchReached@0x55804e19e1f0[Test#2]
  goto BB11
BB104   <- [102]
  void                    Branch                   %10.22 -> BB106 (if true) | BB107 (if false)
BB105   <- [102]
  void                    Nop                !     
  lgl$#-          %105.1 = %10.21
  dr              %105.2 = DeadBranchReached@0x55804e19e1f0[Test#3]
  goto BB11
BB106   <- [104]
  val?-           %106.0 = CastType           d     dn %10.1   <str$->
  lgl-            %106.1 = CallSafeBuiltin    vwed  is.na(%106.0) 
  lgl$#-          %106.2 = CheckTrueFalse     we    %106.1   <false>
  void                    Branch                   %106.2 -> BB109 (if true) | BB108 (if false)
BB107   <- [104]
  void                    Nop                !     
  val?            %107.1 = %10.1
  dr              %107.2 = Typecheck@0x55804e19e1f0[Type#6]
  goto BB11
BB109   <- [106]
  fs              %109.0 = FrameState         R     0x55804ec9bac0+391: [%106.0, %106.2], env=e90.0
  void                    Deopt              !v    %109.0, DeadBranchReached@0x55804e19e1f0[Test#10], %106.2   !
BB108   <- [106]
  lgl-            %108.0 = Eq                 vwed  %106.0, <-, elided
  lgl$#-          %108.1 = CheckTrueFalse     we    %108.0
  void                    Branch                   %108.1 -> BB86 (if true) | BB15 (if false)
BB86   <- [108]
  void                    Nop                !     
  goto BB71
BB15   <- [108]
  lgl-            %15.0 = Eq                 vwed  %106.0, <<-, elided
  lgl$#-          %15.1 = CheckTrueFalse     we    %15.0
  void                    Branch                   %15.1 -> BB70 (if true) | BB16 (if false)
BB71   <- [70, 86]
  val?^ | miss    %71.0 = LdVar              eR    incLocalUsageValue, e90.0
  lgl$#-          %71.1 = Identical                %71.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %71.1 -> BB118 (if true) | BB119 (if false)
BB70   <- [15]
  void                    Nop                !     
  goto BB71
BB16   <- [15]
  lgl-            %16.0 = Eq                 vwed  %106.0, variable, elided
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0
  void                    Branch                   %16.1 -> BB57 (if true) | BB19 (if false)
BB118   <- [71]
  prom-           %118.0 = MkArg                    unboundValue, [0x55804e863490]_p15, e90.0
  prom-           %118.1 = MkArg                    unboundValue, [0x55804e863490]_p16, e90.0
  ct              %118.2 = PushContext        lCL   %118.0, "assigns", %118.1, incLocalUsageValue(n, "assigns", w), function(vn, which, w) <(rir::DispatchTable*)0|..., e90.0
  val?^           %118.3 = CastType                 up %118.1
  val?^           %118.4 = CastType                 up %118.0
  val?^ | miss    %118.5 = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %118.6 = Identical                %118.5, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %118.6 -> BB122 (if true) | BB123 (if false)
BB119   <- [71]
  fs              %119.0 = FrameState         R     0x55804ec9bac0+544: [%106.0], env=e90.0
  void                    Deopt              !v    %119.0, CallTarget@0x55804e19e1f0[Call#3], %71.0   !
BB57   <- [16]
  val?^ | miss    %57.0 = LdVar              eR    incLocalUsageValue, e90.0
  lgl$#-          %57.1 = Identical                %57.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %57.1 -> BB116 (if true) | BB117 (if false)
BB19   <- [16]
  lgl-            %19.0 = Eq                 vwed  %106.0, function, elided
  lgl$#-          %19.1 = CheckTrueFalse     we    %19.0
  void                    Branch                   %19.1 -> BB44 (if true) | BB22 (if false)
BB122   <- [118]
  env             e122.0 = MkEnv              l     vn=%118.4, which="assigns", w=%118.3, parent=<env 0x55804e699488>, context 1
  prom-           %122.1 = MkArg                    unboundValue, [0x55804e863490]_p17, e122.0
  prom-           %122.2 = MkArg                    unboundValue, [0x55804e863490]_p18, e122.0
  val?            %122.3 = StaticCall         !     getLocalUsageEntry[0x55804d10e9e0](%122.1, %122.2) e122.0   <env->
  void                    StVar              lW    entry, %122.3, e122.0
  val?^ | miss    %122.5 = LdVar              eR    get, e122.0
  lgl$#-          %122.6 = Identical                %122.5, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %122.6 -> BB136 (if true) | BB137 (if false)
BB123   <- [118]
  fs              %123.0 = FrameState         R     0x55804ec9bac0+587: [], env=e90.0
  env             e123.1 = (MkEnv)            l     vn=%118.4, which="assigns", w=%118.3, parent=<env 0x55804e699488>, context 1
  fs              %123.2 = FrameState         R     0x55804e9d77b0+0: [], env=e123.1, next=%123.0
  void                    Deopt              !v    %123.2, CallTarget@0x55804e3d1be0[Call#0], %118.5   !
BB116   <- [57]
  prom-           %116.0 = MkArg                    unboundValue, [0x55804e863490]_p13, e90.0
  prom-           %116.1 = MkArg                    unboundValue, [0x55804e863490]_p14, e90.0
  ct              %116.2 = PushContext        lCL   %116.0, "varuses", %116.1, incLocalUsageValue(n, "varuses", w), function(vn, which, w) <(rir::DispatchTable*)0|..., e90.0
  val?^           %116.3 = CastType                 up %116.1
  val?^           %116.4 = CastType                 up %116.0
  val?^ | miss    %116.5 = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %116.6 = Identical                %116.5, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %116.6 -> BB120 (if true) | BB121 (if false)
BB117   <- [57]
  fs              %117.0 = FrameState         R     0x55804ec9bac0+451: [%106.0, %16.1], env=e90.0
  void                    Deopt              !v    %117.0, CallTarget@0x55804e19e1f0[Call#4], %57.0   !
BB44   <- [19]
  val?^ | miss    %44.0 = LdVar              eR    incLocalUsageValue, e90.0
  lgl$#-          %44.1 = Identical                %44.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %44.1 -> BB110 (if true) | BB111 (if false)
BB22   <- [19]
  lgl-            %22.0 = Eq                 vwed  %106.0, for, elided
  lgl$#-          %22.1 = CheckTrueFalse     we    %22.0
  void                    Branch                   %22.1 -> BB31 (if true) | BB25 (if false)
BB136   <- [122]
  prom-           %136.0 = MkArg                    unboundValue, [0x55804e863490]_p19, e122.0
  prom-           %136.1 = MkArg                    unboundValue, [0x55804e863490]_p20 (!refl), e122.0
  val?            %136.2 = StaticCall         !     get[0x55804e190130](%136.0, %136.1, missingArg, missingArg, false) { 0 1 4n } e122.0   <real$->
  lgl$#-          %136.3 = IsType                   %136.2 isA real$-
  void                    Branch                   %136.3 -> BB138 (if true) | BB139 (if false)
BB137   <- [122]
  fs              %137.0 = FrameState         R     0x55804ec9bac0+587: [], env=e90.0
  fs              %137.1 = FrameState         R     0x55804e9d77b0+51: [], env=e122.0, next=%137.0
  void                    Deopt              !v    %137.1, CallTarget@0x55804e3d1be0[Call#1], %122.5   !
BB120   <- [116]
  env             e120.0 = MkEnv              l     vn=%116.4, which="varuses", w=%116.3, parent=<env 0x55804e699488>, context 1
  prom-           %120.1 = MkArg                    unboundValue, [0x55804e863490]_p24, e120.0
  prom-           %120.2 = MkArg                    unboundValue, [0x55804e863490]_p25, e120.0
  val?            %120.3 = StaticCall         !     getLocalUsageEntry[0x55804d10e9e0](%120.1, %120.2) e120.0   <env->
  void                    StVar              lW    entry, %120.3, e120.0
  val?^ | miss    %120.5 = LdVar              eR    get, e120.0
  lgl$#-          %120.6 = Identical                %120.5, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %120.6 -> BB128 (if true) | BB129 (if false)
BB121   <- [116]
  fs              %121.0 = FrameState         R     0x55804ec9bac0+640: [], env=e90.0
  env             e121.1 = (MkEnv)            l     vn=%116.4, which="varuses", w=%116.3, parent=<env 0x55804e699488>, context 1
  fs              %121.2 = FrameState         R     0x55804e9d77b0+0: [], env=e121.1, next=%121.0
  void                    Deopt              !v    %121.2, CallTarget@0x55804e3d1be0[Call#0], %116.5   !
BB110   <- [44]
  prom-           %110.0 = MkArg                    unboundValue, [0x55804e863490]_p11, e90.0
  prom-           %110.1 = MkArg                    unboundValue, [0x55804e863490]_p12, e90.0
  ct              %110.2 = PushContext        lCL   %110.0, "funuses", %110.1, incLocalUsageValue(n, "funuses", w), function(vn, which, w) <(rir::DispatchTable*)0|..., e90.0
  val?^           %110.3 = CastType                 up %110.1
  val?^           %110.4 = CastType                 up %110.0
  val?^ | miss    %110.5 = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %110.6 = Identical                %110.5, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %110.6 -> BB112 (if true) | BB113 (if false)
BB111   <- [44]
  fs              %111.0 = FrameState         R     0x55804ec9bac0+469: [%106.0, %19.1], env=e90.0
  void                    Deopt              !v    %111.0, CallTarget@0x55804e19e1f0[Call#5], %44.0   !
BB31   <- [22]
  val?^ | miss    %31.0 = LdVar              eR    incLocalUsageValue, e90.0
  lgl$#-          %31.1 = Identical                %31.0, function(vn, which, w) <(rir::DispatchTable*)0|...
  void                    Branch                   %31.1 -> BB130 (if true) | BB131 (if false)
BB25   <- [22]
  lgl-            %25.0 = Eq                 vwed  %106.0, fundef, elided
  lgl$#-          %25.1 = CheckTrueFalse     we    %25.0   <true>
  void                    Branch                   %25.1 -> BB144 (if true) | BB145 (if false)
BB138   <- [136]
  real$-          %138.0 = CastType           d     dn %136.2
  void                    StVar              lW    value, %138.0, e122.0
  val?^ | miss    %138.2 = LdVar              eR    assign, e122.0
  lgl$#-          %138.3 = Identical                %138.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %138.3 -> BB140 (if true) | BB141 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x55804ec9bac0+587: [], env=e90.0
  fs              %139.1 = FrameState         R     0x55804e9d77b0+105: [%136.2], env=e122.0, next=%139.0
  void                    Deopt              !v    %139.1, Typecheck@0x55804e3d1be0[Type#5], %136.2   !
BB128   <- [120]
  prom-           %128.0 = MkArg                    unboundValue, [0x55804e863490]_p26, e120.0
  prom-           %128.1 = MkArg                    unboundValue, [0x55804e863490]_p27 (!refl), e120.0
  val?            %128.2 = StaticCall         !     get[0x55804e190130](%128.0, %128.1, missingArg, missingArg, false) { 0 1 4n } e120.0   <real$->
  lgl$#-          %128.3 = IsType                   %128.2 isA real$-
  void                    Branch                   %128.3 -> BB134 (if true) | BB135 (if false)
BB129   <- [120]
  fs              %129.0 = FrameState         R     0x55804ec9bac0+640: [], env=e90.0
  fs              %129.1 = FrameState         R     0x55804e9d77b0+51: [], env=e120.0, next=%129.0
  void                    Deopt              !v    %129.1, CallTarget@0x55804e3d1be0[Call#1], %120.5   !
BB112   <- [110]
  env             e112.0 = MkEnv              l     vn=%110.4, which="funuses", w=%110.3, parent=<env 0x55804e699488>, context 1
  prom-           %112.1 = MkArg                    unboundValue, [0x55804e863490]_p38, e112.0
  prom-           %112.2 = MkArg                    unboundValue, [0x55804e863490]_p39, e112.0
  val?            %112.3 = StaticCall         !     getLocalUsageEntry[0x55804d10e9e0](%112.1, %112.2) e112.0   <env->
  void                    StVar              lW    entry, %112.3, e112.0
  val?^ | miss    %112.5 = LdVar              eR    get, e112.0
  lgl$#-          %112.6 = Identical                %112.5, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %112.6 -> BB114 (if true) | BB115 (if false)
BB113   <- [110]
  fs              %113.0 = FrameState         R     0x55804ec9bac0+693: [], env=e90.0
  env             e113.1 = (MkEnv)            l     vn=%110.4, which="funuses", w=%110.3, parent=<env 0x55804e699488>, context 1
  fs              %113.2 = FrameState         R     0x55804e9d77b0+0: [], env=e113.1, next=%113.0
  void                    Deopt              !v    %113.2, CallTarget@0x55804e3d1be0[Call#0], %110.5   !
BB130   <- [31]
  prom-           %130.0 = MkArg                    unboundValue, [0x55804e863490]_p9, e90.0
  prom-           %130.1 = MkArg                    unboundValue, [0x55804e863490]_p10, e90.0
  ct              %130.2 = PushContext        lCL   %130.0, "loopvars", %130.1, incLocalUsageValue(n, "loopvars", w), function(vn, which, w) <(rir::DispatchTable*)0|..., e90.0
  val?^           %130.3 = CastType                 up %130.1
  val?^           %130.4 = CastType                 up %130.0
  val?^ | miss    %130.5 = LdVar              eR    getLocalUsageEntry, <env 0x55804e699488>
  lgl$#-          %130.6 = Identical                %130.5, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %130.6 -> BB142 (if true) | BB143 (if false)
BB131   <- [31]
  fs              %131.0 = FrameState         R     0x55804ec9bac0+487: [%106.0, %22.1], env=e90.0
  void                    Deopt              !v    %131.0, CallTarget@0x55804e19e1f0[Call#6], %31.0   !
BB144   <- [25]
  val?^ | miss    %144.0 = LdVar              eR    addLocalFunDef, e90.0
  lgl$#-          %144.1 = Identical                %144.0, function(vn, e, w) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %144.1 -> BB150 (if true) | BB151 (if false)
BB145   <- [25]
  void                    Nop                !     
  lgl$#-          %145.1 = %25.1
  dr              %145.2 = DeadBranchReached@0x55804e19e1f0[Test#16]
  goto BB26
BB140   <- [138]
  prom-           %140.0 = MkArg                    unboundValue, [0x55804e863490]_p21, e122.0
  prom-           %140.1 = MkArg                    unboundValue, [0x55804e863490]_p22, e122.0
  prom-           %140.2 = MkArg                    unboundValue, [0x55804e863490]_p23, e122.0
  val?            %140.3 = StaticCall         !     assign[0x55804e74cc10](%140.0, %140.1, %140.2) e122.0   <real$->
  lgl$#-          %140.4 = IsType                   %140.3 isA real$-
  void                    Branch                   %140.4 -> BB148 (if true) | BB149 (if false)
BB141   <- [138]
  fs              %141.0 = FrameState         R     0x55804ec9bac0+587: [], env=e90.0
  fs              %141.1 = FrameState         R     0x55804e9d77b0+119: [], env=e122.0, next=%141.0
  void                    Deopt              !v    %141.1, CallTarget@0x55804e3d1be0[Call#2], %138.2   !
BB134   <- [128]
  real$-          %134.0 = CastType           d     dn %128.2
  void                    StVar              lW    value, %134.0, e120.0
  val?^ | miss    %134.2 = LdVar              eR    assign, e120.0
  lgl$#-          %134.3 = Identical                %134.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %134.3 -> BB146 (if true) | BB147 (if false)
BB135   <- [128]
  fs              %135.0 = FrameState         R     0x55804ec9bac0+640: [], env=e90.0
  fs              %135.1 = FrameState         R     0x55804e9d77b0+105: [%128.2], env=e120.0, next=%135.0
  void                    Deopt              !v    %135.1, Typecheck@0x55804e3d1be0[Type#5], %128.2   !
BB114   <- [112]
  prom-           %114.0 = MkArg                    unboundValue, [0x55804e863490]_p40, e112.0
  prom-           %114.1 = MkArg                    unboundValue, [0x55804e863490]_p41 (!refl), e112.0
  val?            %114.2 = StaticCall         !     get[0x55804e190130](%114.0, %114.1, missingArg, missingArg, false) { 0 1 4n } e112.0   <real$->
  lgl$#-          %114.3 = IsType                   %114.2 isA real$-
  void                    Branch                   %114.3 -> BB124 (if true) | BB125 (if false)
BB115   <- [112]
  fs              %115.0 = FrameState         R     0x55804ec9bac0+693: [], env=e90.0
  fs              %115.1 = FrameState         R     0x55804e9d77b0+51: [], env=e112.0, next=%115.0
  void                    Deopt              !v    %115.1, CallTarget@0x55804e3d1be0[Call#1], %112.5   !
BB142   <- [130]
  env             e142.0 = MkEnv              l     vn=%130.4, which="loopvars", w=%130.3, parent=<env 0x55804e699488>, context 1
  prom-           %142.1 = MkArg                    unboundValue, [0x55804e863490]_p31, e142.0
  prom-           %142.2 = MkArg                    unboundValue, [0x55804e863490]_p32, e142.0
  val?            %142.3 = StaticCall         !     getLocalUsageEntry[0x55804d10e9e0](%142.1, %142.2) e142.0   <env->
  void                    StVar              lW    entry, %142.3, e142.0
  val?^ | miss    %142.5 = LdVar              eR    get, e142.0
  lgl$#-          %142.6 = Identical                %142.5, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %142.6 -> BB156 (if true) | BB157 (if false)
BB143   <- [130]
  fs              %143.0 = FrameState         R     0x55804ec9bac0+746: [], env=e90.0
  env             e143.1 = (MkEnv)            l     vn=%130.4, which="loopvars", w=%130.3, parent=<env 0x55804e699488>, context 1
  fs              %143.2 = FrameState         R     0x55804e9d77b0+0: [], env=e143.1, next=%143.0
  void                    Deopt              !v    %143.2, CallTarget@0x55804e3d1be0[Call#0], %130.5   !
BB150   <- [144]
  prom-           %150.0 = MkArg                    unboundValue, [0x55804e863490]_p4, e90.0
  prom-           %150.1 = MkArg                    unboundValue, [0x55804e863490]_p5, e90.0
  prom-           %150.2 = MkArg                    unboundValue, [0x55804e863490]_p6, e90.0
  val?            %150.3 = StaticCall         !     addLocalFunDef[0x558050b1b090](%150.0, %150.1, %150.2) e90.0   <vec$->
  val?            %150.4 = %150.3
  goto BB28
BB151   <- [144]
  void                    Nop                !     
  val?^ | miss    %151.1 = %144.0
  dr              %151.2 = CallTarget@0x55804e19e1f0[Call#7]
  goto BB26
BB26   <- [145, 151]
  val?^ | miss    %26.0 = Phi                      %145.1:BB145, %151.1:BB151
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %145.2:BB145, %151.2:BB151
  dr              %26.3 = %26.2
  fs              %26.4 = FrameState         R     0x55804ec9bac0+505: [%106.0, %25.1], env=e90.0
  void                    Deopt              !v    %26.4, %26.3, %26.1   !
BB148   <- [140]
  real$-          %148.0 = CastType           d     dn %140.3
  val?            %148.1 = PopContext         C     %148.0, %118.2   <real$->
  lgl$#-          %148.2 = IsType                   %148.1 isA real$-
  void                    Branch                   %148.2 -> BB162 (if true) | BB163 (if false)
BB149   <- [140]
  fs              %149.0 = FrameState         R     0x55804ec9bac0+587: [], env=e90.0
  fs              %149.1 = FrameState         R     0x55804e9d77b0+161: [%140.3], env=e122.0, next=%149.0
  void                    Deopt              !v    %149.1, Typecheck@0x55804e3d1be0[Type#10], %140.3   !
BB146   <- [134]
  prom-           %146.0 = MkArg                    unboundValue, [0x55804e863490]_p28, e120.0
  prom-           %146.1 = MkArg                    unboundValue, [0x55804e863490]_p29, e120.0
  prom-           %146.2 = MkArg                    unboundValue, [0x55804e863490]_p30, e120.0
  val?            %146.3 = StaticCall         !     assign[0x55804e74cc10](%146.0, %146.1, %146.2) e120.0   <real$->
  lgl$#-          %146.4 = IsType                   %146.3 isA real$-
  void                    Branch                   %146.4 -> BB154 (if true) | BB155 (if false)
BB147   <- [134]
  fs              %147.0 = FrameState         R     0x55804ec9bac0+640: [], env=e90.0
  fs              %147.1 = FrameState         R     0x55804e9d77b0+119: [], env=e120.0, next=%147.0
  void                    Deopt              !v    %147.1, CallTarget@0x55804e3d1be0[Call#2], %134.2   !
BB124   <- [114]
  real$-          %124.0 = CastType           d     dn %114.2
  void                    StVar              lW    value, %124.0, e112.0
  val?^ | miss    %124.2 = LdVar              eR    assign, e112.0
  lgl$#-          %124.3 = Identical                %124.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %124.3 -> BB126 (if true) | BB127 (if false)
BB125   <- [114]
  fs              %125.0 = FrameState         R     0x55804ec9bac0+693: [], env=e90.0
  fs              %125.1 = FrameState         R     0x55804e9d77b0+105: [%114.2], env=e112.0, next=%125.0
  void                    Deopt              !v    %125.1, Typecheck@0x55804e3d1be0[Type#5], %114.2   !
BB156   <- [142]
  prom-           %156.0 = MkArg                    unboundValue, [0x55804e863490]_p33, e142.0
  prom-           %156.1 = MkArg                    unboundValue, [0x55804e863490]_p34 (!refl), e142.0
  val?            %156.2 = StaticCall         !     get[0x55804e190130](%156.0, %156.1, missingArg, missingArg, false) { 0 1 4n } e142.0   <real$->
  lgl$#-          %156.3 = IsType                   %156.2 isA real$-
  void                    Branch                   %156.3 -> BB164 (if true) | BB165 (if false)
BB157   <- [142]
  fs              %157.0 = FrameState         R     0x55804ec9bac0+746: [], env=e90.0
  fs              %157.1 = FrameState         R     0x55804e9d77b0+51: [], env=e142.0, next=%157.0
  void                    Deopt              !v    %157.1, CallTarget@0x55804e3d1be0[Call#1], %142.5   !
BB28   <- [150, 152, 160, 162, 170]
  val?            %28.0 = Phi                      %150.4:BB150, %170.1:BB170, %152.1:BB152, %160.1:BB160, %162.1:BB162
  val?            %28.1 = %28.0
  val?^ | miss    %28.2 = LdVar              eR    incLocalSrcInfo, e90.0
  lgl$#-          %28.3 = Identical                %28.2, function(vn, w) <(rir::DispatchTable*)0x55804e|...
  void                    Branch                   %28.3 -> BB158 (if true) | BB159 (if false)
BB162   <- [148]
  void                    Nop                !     
  val?            %162.1 = %148.1
  goto BB28
BB163   <- [148]
  fs              %163.0 = FrameState         R     0x55804ec9bac0+587: [%148.1], env=e90.0
  void                    Deopt              !v    %163.0, Typecheck@0x55804e19e1f0[Type#9], %148.1   !
BB154   <- [146]
  real$-          %154.0 = CastType           d     dn %146.3
  val?            %154.1 = PopContext         C     %154.0, %116.2   <real$->
  lgl$#-          %154.2 = IsType                   %154.1 isA real$-
  void                    Branch                   %154.2 -> BB160 (if true) | BB161 (if false)
BB155   <- [146]
  fs              %155.0 = FrameState         R     0x55804ec9bac0+640: [], env=e90.0
  fs              %155.1 = FrameState         R     0x55804e9d77b0+161: [%146.3], env=e120.0, next=%155.0
  void                    Deopt              !v    %155.1, Typecheck@0x55804e3d1be0[Type#10], %146.3   !
BB126   <- [124]
  prom-           %126.0 = MkArg                    unboundValue, [0x55804e863490]_p42, e112.0
  prom-           %126.1 = MkArg                    unboundValue, [0x55804e863490]_p43, e112.0
  prom-           %126.2 = MkArg                    unboundValue, [0x55804e863490]_p44, e112.0
  val?            %126.3 = StaticCall         !     assign[0x55804e74cc10](%126.0, %126.1, %126.2) e112.0   <real$->
  lgl$#-          %126.4 = IsType                   %126.3 isA real$-
  void                    Branch                   %126.4 -> BB132 (if true) | BB133 (if false)
BB127   <- [124]
  fs              %127.0 = FrameState         R     0x55804ec9bac0+693: [], env=e90.0
  fs              %127.1 = FrameState         R     0x55804e9d77b0+119: [], env=e112.0, next=%127.0
  void                    Deopt              !v    %127.1, CallTarget@0x55804e3d1be0[Call#2], %124.2   !
BB164   <- [156]
  real$-          %164.0 = CastType           d     dn %156.2
  void                    StVar              lW    value, %164.0, e142.0
  val?^ | miss    %164.2 = LdVar              eR    assign, e142.0
  lgl$#-          %164.3 = Identical                %164.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %164.3 -> BB166 (if true) | BB167 (if false)
BB165   <- [156]
  fs              %165.0 = FrameState         R     0x55804ec9bac0+746: [], env=e90.0
  fs              %165.1 = FrameState         R     0x55804e9d77b0+105: [%156.2], env=e142.0, next=%165.0
  void                    Deopt              !v    %165.1, Typecheck@0x55804e3d1be0[Type#5], %156.2   !
BB158   <- [28]
  prom-           %158.0 = MkArg                    unboundValue, [0x55804e863490]_p7, e90.0
  prom-           %158.1 = MkArg                    unboundValue, [0x55804e863490]_p8, e90.0
  val?            %158.2 = StaticCall         !     incLocalSrcInfo[0x55804f341f60](%158.0, %158.1) e90.0   <vec>
  void                    Return             l     %158.2
BB159   <- [28]
  fs              %159.0 = FrameState         R     0x55804ec9bac0+815: [%28.1], env=e90.0
  void                    Deopt              !v    %159.0, CallTarget@0x55804e19e1f0[Call#8], %28.2   !
BB160   <- [154]
  void                    Nop                !     
  val?            %160.1 = %154.1
  goto BB28
BB161   <- [154]
  fs              %161.0 = FrameState         R     0x55804ec9bac0+640: [%154.1], env=e90.0
  void                    Deopt              !v    %161.0, Typecheck@0x55804e19e1f0[Type#12], %154.1   !
BB132   <- [126]
  real$-          %132.0 = CastType           d     dn %126.3
  val?            %132.1 = PopContext         C     %132.0, %110.2   <real$->
  lgl$#-          %132.2 = IsType                   %132.1 isA real$-
  void                    Branch                   %132.2 -> BB152 (if true) | BB153 (if false)
BB133   <- [126]
  fs              %133.0 = FrameState         R     0x55804ec9bac0+693: [], env=e90.0
  fs              %133.1 = FrameState         R     0x55804e9d77b0+161: [%126.3], env=e112.0, next=%133.0
  void                    Deopt              !v    %133.1, Typecheck@0x55804e3d1be0[Type#10], %126.3   !
BB166   <- [164]
  prom-           %166.0 = MkArg                    unboundValue, [0x55804e863490]_p35, e142.0
  prom-           %166.1 = MkArg                    unboundValue, [0x55804e863490]_p36, e142.0
  prom-           %166.2 = MkArg                    unboundValue, [0x55804e863490]_p37, e142.0
  val?            %166.3 = StaticCall         !     assign[0x55804e74cc10](%166.0, %166.1, %166.2) e142.0   <real$->
  lgl$#-          %166.4 = IsType                   %166.3 isA real$-
  void                    Branch                   %166.4 -> BB168 (if true) | BB169 (if false)
BB167   <- [164]
  fs              %167.0 = FrameState         R     0x55804ec9bac0+746: [], env=e90.0
  fs              %167.1 = FrameState         R     0x55804e9d77b0+119: [], env=e142.0, next=%167.0
  void                    Deopt              !v    %167.1, CallTarget@0x55804e3d1be0[Call#2], %164.2   !
BB152   <- [132]
  void                    Nop                !     
  val?            %152.1 = %132.1
  goto BB28
BB153   <- [132]
  fs              %153.0 = FrameState         R     0x55804ec9bac0+693: [%132.1], env=e90.0
  void                    Deopt              !v    %153.0, Typecheck@0x55804e19e1f0[Type#15], %132.1   !
BB168   <- [166]
  real$-          %168.0 = CastType           d     dn %166.3
  val?            %168.1 = PopContext         C     %168.0, %130.2   <real$->
  lgl$#-          %168.2 = IsType                   %168.1 isA real$-
  void                    Branch                   %168.2 -> BB170 (if true) | BB171 (if false)
BB169   <- [166]
  fs              %169.0 = FrameState         R     0x55804ec9bac0+746: [], env=e90.0
  fs              %169.1 = FrameState         R     0x55804e9d77b0+161: [%166.3], env=e142.0, next=%169.0
  void                    Deopt              !v    %169.1, Typecheck@0x55804e3d1be0[Type#10], %166.3   !
BB170   <- [168]
  void                    Nop                !     
  val?            %170.1 = %168.1
  goto BB28
BB171   <- [168]
  fs              %171.0 = FrameState         R     0x55804ec9bac0+746: [%168.1], env=e90.0
  void                    Deopt              !v    %171.0, Typecheck@0x55804e19e1f0[Type#18], %168.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55804bee1940>, e0.0
  val?            %0.2  = Call               !     %0.1("<-", "<<-") e0.0   <str->
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    entry, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ [0x55804e863490]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
