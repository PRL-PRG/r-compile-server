
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55804ff9e580]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── Final PIR Version
[0x55804ff9e580]
BB0
  val?^           %0.0  = LdArg                    1
  val?~+          %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    isDDSym, <env 0x55804e699488>
  lgl$#-          %0.3  = Identical                %0.2, function(name) <(rir::DispatchTable*)0x55804e2|...
  void                    Branch                   %0.3 -> BB33 (if true) | BB34 (if false)
BB33   <- [0]
  env             e33.0 = MkEnv              l     v=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  prom-           %33.1 = MkArg                    unboundValue, [0x55804ff9e580]_p0 (!refl), e33.0
  ct              %33.2 = PushContext        lCL   %33.1, isDDSym(v), function(name) <(rir::DispatchTable*)0x55804e2|..., e33.0
  val?^           %33.3 = CastType                 up %33.1
  val?^ | miss    %33.4 = LdVar              eR    is.symbol, <env 0x55804e699488>
  lgl$#-          %33.5 = Identical                <blt is.symbol>, %33.4   <true>
  void                    Branch                   %33.5 -> BB35 (if true) | BB36 (if false)
BB34   <- [0]
  env             e34.0 = (MkEnv)            l     v=%0.1, w=%0.0, parent=<env 0x55804e699488>, context 1
  fs              %34.1 = FrameState         R     0x55804eb466f0+0: [], env=e34.0
  void                    Deopt              !v    %34.1, CallTarget@0x55804f22bd28[Call#0], %0.2
BB35   <- [33]
  env             e35.0 = MkEnv              l     name=%33.3, parent=<env 0x55804e699488>, context 1
  val?            %35.1 = Force!<lazy>       !vr   %33.3,    <(sym|str)->
  lgl$#-          %35.2 = CallSafeBuiltin    wed   is.symbol(%35.1)    <lgl$->
  void                    Branch                   %35.2 -> BB31 (if true) | BB7 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x55804eb466f0+32: [], env=e33.0
  env             e36.1 = (MkEnv)            l     name=%33.3, parent=<env 0x55804e699488>, context 1
  fs              %36.2 = FrameState         R     0x55804ed96dd0+17: [<blt is.symbol>, %33.5], env=e36.1, next=%36.0
  void                    Deopt              !v    %36.2, DeadBranchReached@0x55804eaeb288[Test#0], %33.5   !
BB31   <- [35]
  void                    Nop                !     
  lgl$#-          %31.1 = %35.2
  goto BB8
BB7   <- [35]
  val?^ | miss    %7.0  = LdVar              eR    is.character, <env 0x55804e699488>
  lgl$#-          %7.1  = Identical                <blt is.character>, %7.0   <true>
  void                    Branch                   %7.1 -> BB37 (if true) | BB38 (if false)
BB8   <- [31, 37]
  lgl$-           %8.0  = Phi                      %37.2:BB37, %31.1:BB31
  lgl$-           %8.1  = %8.0
  lgl$-           %8.2  = AsLogical                %8.1
  lgl$#-          %8.3  = Identical                %8.2, false
  void                    Branch                   %8.3 -> BB30 (if true) | BB11 (if false)
BB37   <- [7]
  lgl$#-          %37.0 = CallSafeBuiltin    wed   is.character(%35.1)    <lgl$->
  lgl$-           %37.1 = LOr                      %35.2, %37.0
  lgl$-           %37.2 = %37.1
  goto BB8
BB38   <- [7]
  fs              %38.0 = FrameState         R     0x55804eb466f0+32: [], env=e33.0
  fs              %38.1 = FrameState         R     0x55804ed96dd0+91: [%35.2], env=e35.0, next=%38.0
  void                    Deopt              !v    %38.1, DeadBranchReached@0x55804eaeb288[Test#1], %7.1   !
BB30   <- [8]
  void                    Nop                !     
  lgl$-           %30.1 = %8.2
  goto BB16
BB11   <- [8]
  val?^ | miss    %11.0 = LdVar              eR    length, <env 0x55804e699488>
  lgl$#-          %11.1 = Identical                <blt length>, %11.0   <true>
  void                    Branch                   %11.1 -> BB39 (if true) | BB40 (if false)
BB16   <- [30, 45]
  lgl$-           %16.0 = Phi                      %45.4:BB45, %30.1:BB30
  lgl$-           %16.1 = %16.0
  val?            %16.2 = PopContext         C     %16.1, %33.2   <lgl$->
  lgl$#-          %16.3 = IsType                   %16.2 isA lgl$-
  void                    Branch                   %16.3 -> BB47 (if true) | BB48 (if false)
BB39   <- [11]
  val?^ | miss    %39.0 = LdVar              eR    grep, <env 0x55804e699488>
  lgl$#-          %39.1 = Identical                %39.0, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Branch                   %39.1 -> BB41 (if true) | BB42 (if false)
BB40   <- [11]
  void                    Nop                !     
  lgl$#-          %40.1 = %11.1
  dr              %40.2 = DeadBranchReached@0x55804eaeb288[Test#2]
  goto BB9
BB47   <- [16]
  lgl$-           %47.0 = CastType           d     dn %16.2
  lgl$#-          %47.1 = CheckTrueFalse     e     %47.0
  void                    Branch                   %47.1 -> BB29 (if true) | BB19 (if false)
BB48   <- [16]
  fs              %48.0 = FrameState         R     0x55804eb466f0+32: [%16.2], env=e33.0
  void                    Deopt              !v    %48.0, Typecheck@0x55804f22bd28[Type#1], %16.2   !
BB41   <- [39]
  prom-           %41.0 = MkArg                    unboundValue, [0x55804ff9e580]_p10, e35.0
  val?            %41.1 = StaticCall         !v    grep[0x55804f67f750]("^\.\.[[:digit:]]+$", %41.0) e35.0   <int->
  lgl$#-          %41.2 = IsType                   %41.1 isA int-
  void                    Branch                   %41.2 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  void                    Nop                !     
  val?^ | miss    %42.1 = %39.0
  dr              %42.2 = CallTarget@0x55804eaeb288[Call#5]
  goto BB9
BB9   <- [40, 42]
  val?^ | miss    %9.0  = Phi                      %40.1:BB40, %42.1:BB42
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %40.2:BB40, %42.2:BB42
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55804eb466f0+32: [], env=e33.0
  fs              %9.5  = FrameState         R     0x55804ed96dd0+201: [%8.1], env=e35.0, next=%9.4
  void                    Deopt              !v    %9.5, %9.3, %9.1   !
BB29   <- [47]
  void                    StVar              lW    v, "...", e33.0
  goto BB20
BB19   <- [47]
  void                    Nop                !     
  goto BB20
BB43   <- [41]
  int-            %43.0 = CastType           d     dn %41.1
  (int|real)$-    %43.1 = CallSafeBuiltin    wed   length(%43.0)    <int$->
  lgl$#-          %43.2 = IsType                   %43.1 isA int$-
  void                    Branch                   %43.2 -> BB45 (if true) | BB46 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x55804eb466f0+32: [], env=e33.0
  fs              %44.1 = FrameState         R     0x55804ed96dd0+306: [%8.2, <blt length>, %41.1], env=e35.0, next=%44.0
  void                    Deopt              !v    %44.1, Typecheck@0x55804eaeb288[Type#11], %41.1   !
BB20   <- [19, 29]
  val?^ | miss    %20.0 = LdVar              eR    is.baseenv, e33.0
  lgl$#-          %20.1 = Identical                %20.0, function(e) <(rir::DispatchTable*)0x55804e41e7|...
  void                    Branch                   %20.1 -> BB49 (if true) | BB50 (if false)
BB45   <- [43]
  int$-           %45.0 = CastType           d     dn %43.1
  lgl$-           %45.1 = Neq                d     %45.0, 0, elided   <lgl$->
  lgl$-           %45.2 = AsLogical                %45.1
  lgl$-           %45.3 = LAnd                     %8.2, %45.2
  lgl$-           %45.4 = %45.3
  goto BB16
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x55804eb466f0+32: [], env=e33.0
  fs              %46.1 = FrameState         R     0x55804ed96dd0+328: [%8.2, %43.1], env=e35.0, next=%46.0
  void                    Deopt              !v    %46.1, Typecheck@0x55804eaeb288[Type#12], %43.1   !
BB49   <- [20]
  prom-           %49.0 = MkArg                    unboundValue, [0x55804ff9e580]_p1, e33.0
  ct              %49.1 = PushContext        lCL   %49.0, is.baseenv(findOwnerEnv(v, $(w, env), stop=$(w|..., function(e) <(rir::DispatchTable*)0x55804e41e7|..., e33.0
  val?^           %49.2 = CastType                 up %49.0
  val?^ | miss    %49.3 = LdVar              eR    identical, <env 0x55804e699488>
  lgl$#-          %49.4 = Identical                %49.3, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %49.4 -> BB51 (if true) | BB52 (if false)
BB50   <- [20]
  fs              %50.0 = FrameState         R     0x55804eb466f0+63: [], env=e33.0
  void                    Deopt              !v    %50.0, CallTarget@0x55804f22bd28[Call#1], %20.0   !
BB51   <- [49]
  env             e51.0 = MkEnv              l     e=%49.2, parent=<env 0x55804e699488>, context 1
  prom-           %51.1 = MkArg                    unboundValue, [0x55804ff9e580]_p12, e51.0
  prom-           %51.2 = MkArg                    unboundValue, [0x55804ff9e580]_p13, e51.0
  ct              %51.3 = PushContext        lCL   %51.1, %51.2, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e51.0
  val?^           %51.4 = CastType                 up %51.2
  val?^           %51.5 = CastType                 up %51.1
  env             e51.6 = MkEnv              l     x=%51.5, y=%51.4, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %51.7 = Force!<lazy>       !vL   %51.5, e51.6   <val?+>
  val?            %51.8 = Force!<lazy>       !vL   %51.4, e51.6   <val?+>
  val?            %51.9 = CallBuiltin        !     identical(%51.7, %51.8, true, true, true, true, false, true) e51.6
  val?            %51.10 = PopContext         C     %51.9, %51.3   <lgl$->
  lgl$#-          %51.11 = IsType                   %51.10 isA lgl$-
  void                    Branch                   %51.11 -> BB53 (if true) | BB54 (if false)
BB52   <- [49]
  fs              %52.0 = FrameState         R     0x55804eb466f0+95: [], env=e33.0
  env             e52.1 = (MkEnv)            l     e=%49.2, parent=<env 0x55804e699488>, context 1
  fs              %52.2 = FrameState         R     0x55804eb37490+0: [], env=e52.1, next=%52.0
  void                    Deopt              !v    %52.2, CallTarget@0x55804ea246f8[Call#0], %49.3   !
BB53   <- [51]
  lgl$-           %53.0 = CastType           d     dn %51.10
  val?            %53.1 = PopContext         C     %53.0, %49.1   <lgl$->
  lgl$#-          %53.2 = IsType                   %53.1 isA lgl$-
  void                    Branch                   %53.2 -> BB55 (if true) | BB56 (if false)
BB54   <- [51]
  fs              %54.0 = FrameState         R     0x55804eb466f0+95: [], env=e33.0
  fs              %54.1 = FrameState         R     0x55804eb37490+37: [%51.10], env=e51.0, next=%54.0
  void                    Deopt              !v    %54.1, Typecheck@0x55804ea246f8[Type#2], %51.10   !
BB55   <- [53]
  lgl$-           %55.0 = CastType           d     dn %53.1
  lgl$-           %55.1 = Not                vd    %55.0, elided
  void                    Return             l     %55.1
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x55804eb466f0+95: [%53.1], env=e33.0
  void                    Deopt              !v    %56.0, Typecheck@0x55804f22bd28[Type#11], %53.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     findOwnerEnv, <0x55804e95cf28>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804ff9e580]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804ff9e580]_p3, e0.0
  prom-           %0.4  = MkArg                    unboundValue, [0x55804ff9e580]_p6, e0.0
  prom-           %0.5  = MkArg                    unboundValue, [0x55804ff9e580]_p9, e0.0
  val?            %0.6  = NamedCall          !     %0.1(%0.2, %0.3, stop=%0.4, default=%0.5) e0.0   <env+>
  void                    Return             l     %0.6
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    v, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804ff9e580]_p4, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804ff9e580]_p5, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env+>
  void                    Return             l     %0.4
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55804bee0c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804ff9e580]_p7, e0.0
  prom-           %0.3  = MkArg                    unboundValue, [0x55804ff9e580]_p8, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <env->
  void                    Return             l     %0.4
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    w, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    globalenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55804beee040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, [0x55804ff9e580]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|str)->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|env)+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ [0x55804ff9e580]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
