
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55de2b31b5f0]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0                      │
│ Properties:                                                                  │
├────── Final PIR Version
FUN[0x55de2b31b5f0]
BB0
  val?~           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    isTRUE, ?
  lgl$#-          %0.2  = Identical                %0.1, function(x) <(rir::DispatchTable*)0x55de2a40ca|...
  void                    Branch                   %0.2 -> BB11 (if true) | BB12 (if false)
BB11   <- [0]
  val?^ | miss    %11.0 = LdVar              eR    body, ?
  lgl$#-          %11.1 = Identical                %11.0, function(fun=sys.function(sys.parent())) <(rir|...
  void                    Branch                   %11.1 -> BB13 (if true) | BB14 (if false)
BB12   <- [0]
  void                    Nop                !     
  val?^ | miss    %12.1 = %0.1
  dr              %12.2 = CallTarget@0x55de2c742608[Call#0]
  goto BB10
BB13   <- [11]
  env             e13.0 = MkEnv              l     obj=%0.0, parent=?, context 1
  (cls|spec|blt)  %13.1 = LdFun              !v    @, <0x55de2854ebd8>, ?
  prom-           %13.2 = MkArg                    unboundValue, FUN[0x55de2b31b5f0]_p2 (!refl), e13.0
  prom-           %13.3 = MkArg                    unboundValue, FUN[0x55de2b31b5f0]_p3, e13.0
  val?            %13.4 = Call               !v    %13.1(%13.2, %13.3) e13.0   <cls->
  lgl$#-          %13.5 = CallSafeBuiltin    wed   is.character(%13.4)    <lgl$->
  void                    Branch                   %13.5 -> BB9 (if true) | BB3 (if false)
BB14   <- [11]
  void                    Nop                !     
  val?^ | miss    %14.1 = %11.0
  dr              %14.2 = CallTarget@0x55de2c742608[Call#1]
  goto BB10
BB10   <- [12, 14]
  val?^ | miss    %10.0 = Phi                      %12.1:BB12, %14.1:BB14
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %12.2:BB12, %14.2:BB14
  dr              %10.3 = %10.2
  env             e10.4 = (MkEnv)            l     obj=%0.0, parent=?, context 1
  fs              %10.5 = FrameState         R     0x55de2b2c10f0+0: [], env=e10.4
  void                    Deopt              !v    %10.5, %10.3, %10.1
BB9   <- [13]
  prom-           %9.0  = MkArg                    %13.4, FUN[0x55de2b31b5f0]_p1 (!refl), e13.0
  val?~           %9.1  = CastType                 up %9.0
  fs              %9.2  = FrameState         R     0x55de2b2c10f0+32: [], env=e13.0
  prom-           %9.3  = MkArg                    unboundValue, FUN[0x55de2b31b5f0]_p0, e13.0
  val?^           %9.4  = CastType                 up %9.3
  env             e9.5  = (MkEnv)            l     fun=%9.1, parent=R_BaseNamespace, context 0
  env             e9.6  = MaterializeEnv           , e9.5   <@?>
  (cls|spec|blt)  %9.7  = LdFun              !v    get, e9.6
  env             e9.8  = (MkEnv)            l     x=%9.4, parent=R_BaseNamespace, context 0
  fs              %9.9  = FrameState         R     0x55de289a06d0+69: [<blt is.logical>], env=e9.8, next=%9.2
  fs              %9.10 = FrameState         R     0x55de2a914350+32(pr): [], env=e13.0, next=%9.9
  fs              %9.11 = FrameState         R     0x55de2be44b00+112: [%9.7], env=e9.6, next=%9.10
  void                    Deopt              !v    %9.11, DeadCall@0x55de2c0a0758[Call#3], %9.7   !
BB3   <- [13]
  val+            %3.0  = CallSafeBuiltin    wed   body(%13.4)    <lgl$->
  lgl$#-          %3.1  = IsType                   %3.0 isA lgl$-
  void                    Branch                   %3.1 -> BB15 (if true) | BB16 (if false)
BB15   <- [3]
  lgl$-           %15.0 = CastType           d     dn %3.0
  lgl$-           %15.1 = AsLogical                %15.0
  lgl$-           %15.2 = CallSafeBuiltin    vwed  is.na(%15.0)    <lgl$->
  lgl$-           %15.3 = Not                vd    %15.2, elided
  lgl$-           %15.4 = AsLogical                %15.3
  lgl$-           %15.5 = AsLogical                %15.4
  lgl$-           %15.6 = AsLogical                %15.5
  lgl$#-          %15.7 = Identical                %15.6, false
  lgl$-           %15.8 = LAnd                     %15.6, %15.1
  void                    Branch                   %15.7 -> BB8 (if true) | BB6 (if false)
BB16   <- [3]
  prom-           %16.0 = MkArg                    %13.4, FUN[0x55de2b31b5f0]_p1 (!refl), e13.0
  val?~           %16.1 = CastType                 up %16.0
  fs              %16.2 = FrameState         R     0x55de2b2c10f0+32: [], env=e13.0
  prom-           %16.3 = MkArg                    unboundValue, FUN[0x55de2b31b5f0]_p0, e13.0
  val?^           %16.4 = CastType                 up %16.3
  env             e16.5 = (MkEnv)            l     x=%16.4, parent=R_BaseNamespace, context 0
  fs              %16.6 = FrameState         R     0x55de289a06d0+69: [<blt is.logical>], env=e16.5, next=%16.2
  fs              %16.7 = FrameState         R     0x55de2a914350+32(pr): [], env=e13.0, next=%16.6
  env             e16.8 = (MkEnv)            l     fun=%16.1, parent=R_BaseNamespace, context 0
  fs              %16.9 = FrameState         R     0x55de2be44b00+202: [%3.0], env=e16.8, next=%16.7
  void                    Deopt              !v    %16.9, Typecheck@0x55de2c742608[Type#3], %3.0   !
BB8   <- [15]
  void                    Nop                !     
  lgl$-           %8.1  = %15.6
  goto BB7
BB6   <- [15]
  void                    Visible            v     
  lgl$-           %6.1  = %15.8
  goto BB7
BB7   <- [8, 6]
  lgl$-           %7.0  = Phi                      %6.1:BB6, %8.1:BB8
  lgl$-           %7.1  = %7.0
  void                    Return             l     %7.1
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     body, <0x55de2c09d960>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55de2b31b5f0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x55de2854ebd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55de2b31b5f0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, FUN[0x55de2b31b5f0]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <cls->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ FUN[0x55de2b31b5f0]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
