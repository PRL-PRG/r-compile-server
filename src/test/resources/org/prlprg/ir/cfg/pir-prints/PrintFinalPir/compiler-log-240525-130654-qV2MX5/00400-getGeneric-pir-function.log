
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGeneric[0x55de29a7d4c0]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3               │
│ Properties:                                                                  │
├────── Final PIR Version
getGeneric[0x55de29a7d4c0]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.function, <env 0x55de28b56378>
  lgl$#-          %0.2  = Identical                <blt is.function>, %0.1   <true>
  void                    Branch                   %0.2 -> BB79 (if true) | BB80 (if false)
BB79   <- [0]
  env             e79.0 = MkEnv              l     f=%0.0, mustFind(miss)=false, where(miss)=missingArg, package(miss)="", parent=<env 0x55de28b56378>, context 1
  val+            %79.1 = Force!<lazy>       !vr   %0.0,    <(str|cls)>
  lgl$#-          %79.2 = CallSafeBuiltin    wed   is.function(%79.1)    <lgl$->
  void                    Branch                   %79.2 -> BB73 (if true) | BB5 (if false)
BB80   <- [0]
  env             e80.0 = (MkEnv)            l     f=%0.0, mustFind(miss)=false, where(miss)=missingArg, package(miss)="", parent=<env 0x55de28b56378>, context 1
  fs              %80.1 = FrameState         R     0x55de2aa8f4a0+0: [], env=e80.0
  void                    Deopt              !v    %80.1, DeadBranchReached@0x55de2b187e70[Test#0], %0.2
BB73   <- [79]
  val?^ | miss    %73.0 = LdVar              eR    is, <env 0x55de28b56378>
  lgl$#-          %73.1 = Identical                %73.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %73.1 -> BB81 (if true) | BB82 (if false)
BB5   <- [79]
  val?^ | miss    %5.0  = LdVar              eR    .getGeneric, <env 0x55de28b56378>
  lgl$#-          %5.1  = Identical                %5.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %5.1 -> BB83 (if true) | BB84 (if false)
BB81   <- [73]
  prom-           %81.0 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p11 (!refl), e79.0
  val?            %81.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%81.0, "genericFunction") e79.0   <lgl$->
  lgl$#-          %81.2 = IsType                   %81.1 isA lgl$-
  void                    Branch                   %81.2 -> BB85 (if true) | BB86 (if false)
BB82   <- [73]
  void                    Nop                !     
  val?^ | miss    %82.1 = %73.0
  dr              %82.2 = CallTarget@0x55de2b187e70[Call#1]
  goto BB3
BB83   <- [5]
  prom-           %83.0 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p9 (!refl), e79.0
  prom-           %83.1 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p10 (!refl), e79.0
  val?            %83.2 = StaticCall         !v    .getGeneric[0x55de2b5e0db0](%83.0, missingArg, %83.1) e79.0   <cls>
  lgl$-           %83.3 = Is                       %83.2, NULL
  lgl$-           %83.4 = AsLogical                %83.3
  lgl$#-          %83.5 = Identical                %83.4, false
  void                    StVar              lW    value, %83.2, e79.0
  val             %83.7 = ChkMissing         e     %83.2
  void                    Branch                   %83.5 -> BB72 (if true) | BB8 (if false)
BB84   <- [5]
  void                    Nop                !     
  val?^ | miss    %84.1 = %5.0
  dr              %84.2 = CallTarget@0x55de2b187e70[Call#7]
  goto BB3
BB85   <- [81]
  lgl$-           %85.0 = CastType           d     dn %81.1
  lgl$#-          %85.1 = CheckTrueFalse     e     %85.0
  void                    Branch                   %85.1 -> BB77 (if true) | BB76 (if false)
BB86   <- [81]
  fs              %86.0 = FrameState         R     0x55de2aa8f4a0+144: [%81.1], env=e79.0
  void                    Deopt              !v    %86.0, Typecheck@0x55de2b187e70[Type#4], %81.1   !
BB3   <- [82, 84]
  val?^ | miss    %3.0  = Phi                      %82.1:BB82, %84.1:BB84
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %82.2:BB82, %84.2:BB84
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55de2aa8f4a0+91: [%79.2], env=e79.0
  void                    Deopt              !v    %3.4, %3.3, %3.1
BB72   <- [83]
  void                    Nop                !     
  lgl$-           %72.1 = %83.4
  goto BB13
BB8   <- [83]
  val?^ | miss    %8.0  = LdVar              eR    baseenv, e79.0
  lgl$#-          %8.1  = Identical                <blt baseenv>, %8.0   <true>
  void                    Branch                   %8.1 -> BB87 (if true) | BB88 (if false)
BB77   <- [85]
  val?^ | miss    %77.0 = LdVar              eR    f, e79.0
  void                    Visible            v     
  val?            %77.2 = Force!<wrapped>    !     %77.0, e79.0   <cls>
  val?            %77.3 = %77.2
  goto BB38
BB76   <- [85]
  (cls|spec|blt)  %76.0 = LdFun              !v    is.primitive, e79.0
  fs              %76.1 = FrameState         R     0x55de2aa8f4a0+160: [%76.0], env=e79.0
  void                    Deopt              !v    %76.1, DeadCall@0x55de2b187e70[Call#2], %76.0   !
BB13   <- [72, 93]
  lgl$-           %13.0 = Phi                      %93.7:BB93, %72.1:BB72
  lgl$-           %13.1 = %13.0
  lgl$#-          %13.2 = CheckTrueFalse     e     %13.1
  void                    Branch                   %13.2 -> BB43 (if true) | BB16 (if false)
BB87   <- [8]
  val?            %87.0 = CallBuiltin        !v    baseenv() e79.0   <env->
  lgl$#-          %87.1 = IsType                   %87.0 isA val+   <true>
  void                    Branch                   %87.1 -> BB89 (if true) | BB90 (if false)
BB88   <- [8]
  fs              %88.0 = FrameState         R     0x55de2aa8f4a0+427: [], env=e79.0
  void                    Deopt              !v    %88.0, DeadBranchReached@0x55de2b187e70[Test#1], %8.1   !
BB38   <- [77, 37]
  val?            %38.0 = Phi                      %37.2:BB37, %77.3:BB77
  val?            %38.1 = %38.0
  void                    Return             l     %38.1
BB43   <- [13]
  val?^ | miss    %43.0 = LdVar              eR    is.function, e79.0
  lgl$#-          %43.1 = Identical                <blt is.function>, %43.0   <true>
  void                    Branch                   %43.1 -> BB95 (if true) | BB96 (if false)
BB16   <- [13]
  void                    Nop                !     
  goto BB17
BB89   <- [87]
  val?^ | miss    %89.0 = LdVar              eR    f, e79.0
  val?            %89.1 = Force!<wrapped>    !v    %89.0, e79.0   <str$->
  lgl$#-          %89.2 = IsType                   %89.1 isA val?-
  lgl$#-          %89.3 = IsType                   %87.0 isA val?-
  void                    Branch                   %89.3 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x55de2aa8f4a0+525: [%83.4, %87.0], env=e79.0
  void                    Deopt              !v    %90.0, DeadBranchReached@0x55de2b187e70[Test#2], %87.1   !
BB95   <- [43]
  val?^ | miss    %95.0 = LdVar              eR    baseDef, e79.0
  lgl$#-          %95.1 = IsType                   %95.0 isA val?~- | miss
  void                    Branch                   %95.1 -> BB97 (if true) | BB98 (if false)
BB96   <- [43]
  void                    Nop                !     
  lgl$#-          %96.1 = %43.1
  dr              %96.2 = DeadBranchReached@0x55de2b187e70[Test#3]
  goto BB14
BB17   <- [16, 46, 52, 71]
  val?^ | miss    %17.0 = LdVar              eR    is.function, e79.0
  lgl$#-          %17.1 = Identical                <blt is.function>, %17.0   <true>
  void                    Branch                   %17.1 -> BB99 (if true) | BB100 (if false)
BB91   <- [89]
  val?-           %91.0 = CastType           d     dn %87.0   <env->
  void                    Branch                   %89.2 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  void                    Nop                !     
  val?            %92.1 = %87.0
  dr              %92.2 = Typecheck@0x55de2b187e70[Type#20]
  goto BB11
BB97   <- [95]
  val?~- | miss   %97.0 = CastType           d     dn %95.0
  val?-           %97.1 = Force!<value>            %97.0,    <blt->
  lgl$#-          %97.2 = CallSafeBuiltin    wed   is.function(%97.1)    <lgl$->
  void                    Branch                   %97.2 -> BB47 (if true) | BB46 (if false)
BB98   <- [95]
  void                    Nop                !     
  val?^ | miss    %98.1 = %95.0
  dr              %98.2 = Typecheck@0x55de2b187e70[Type#25]
  goto BB14
BB14   <- [96, 98]
  val?^ | miss    %14.0 = Phi                      %96.1:BB96, %98.1:BB98
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %96.2:BB96, %98.2:BB98
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55de2aa8f4a0+601: [%13.1], env=e79.0
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB99   <- [17]
  val?^ | miss    %99.0 = LdVar              eR    value, e79.0
  val?            %99.1 = Force!<value>      !v    %99.0, e79.0   <cls>
  val?            %99.2 = CallBuiltin        !v    is.function(%99.1) e79.0   <lgl$->
  lgl$#-          %99.3 = IsType                   %99.2 isA lgl$-
  void                    Branch                   %99.3 -> BB101 (if true) | BB102 (if false)
BB100   <- [17]
  fs              %100.0 = FrameState         R     0x55de2aa8f4a0+882: [], env=e79.0
  void                    Deopt              !v    %100.0, DeadBranchReached@0x55de2b187e70[Test#4], %17.1   !
BB93   <- [91]
  val?-           %93.0 = CastType           d     dn %89.1   <str$->
  val?            %93.1 = Extract2_1D        wed   %91.0, %93.0, elided   <blt->
  lgl$-           %93.2 = Is                       %93.1, NULL
  void                    StVar              lW    baseDef, %93.1, e79.0
  lgl$-           %93.4 = Not                d     %93.2, elided
  lgl$-           %93.5 = AsLogical                %93.4
  lgl$-           %93.6 = LAnd                     %83.4, %93.5
  lgl$-           %93.7 = %93.6
  goto BB13
BB94   <- [91]
  void                    Nop                !     
  val?            %94.1 = %89.1
  dr              %94.2 = Typecheck@0x55de2b187e70[Type#22]
  goto BB11
BB11   <- [92, 94]
  val?^ | miss    %11.0 = Phi                      %92.1:BB92, %94.1:BB94
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %92.2:BB92, %94.2:BB94
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55de2aa8f4a0+570: [%83.4, %87.0, %89.1], env=e79.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB47   <- [97]
  val?^ | miss    %47.0 = LdVar              eR    genericForBasic, e79.0
  lgl$#-          %47.1 = Identical                %47.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %47.1 -> BB103 (if true) | BB104 (if false)
BB46   <- [97]
  void                    Nop                !     
  goto BB17
BB101   <- [99]
  lgl$-           %101.0 = CastType           d     dn %99.2
  lgl$#-          %101.1 = CheckTrueFalse     e     %101.0
  void                    Branch                   %101.1 -> BB42 (if true) | BB22 (if false)
BB102   <- [99]
  fs              %102.0 = FrameState         R     0x55de2aa8f4a0+973: [%99.2], env=e79.0
  void                    Deopt              !v    %102.0, Typecheck@0x55de2b187e70[Type#36], %99.2   !
BB103   <- [47]
  prom-           %103.0 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p5, e79.0
  val?            %103.1 = StaticCall         !v    genericForBasic[0x55de2a47f180](%103.0, missingArg, false) { 0 2n } e79.0   <cls>
  void                    StVar              lW    value, %103.1, e79.0
  val?^ | miss    %103.3 = LdVar              eR    is, e79.0
  lgl$#-          %103.4 = Identical                %103.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %103.4 -> BB105 (if true) | BB106 (if false)
BB104   <- [47]
  fs              %104.0 = FrameState         R     0x55de2aa8f4a0+703: [%97.2], env=e79.0
  void                    Deopt              !v    %104.0, CallTarget@0x55de2b187e70[Call#10], %47.0   !
BB42   <- [101]
  val?^ | miss    %42.0 = LdVar              eR    value, e79.0
  void                    Visible            v     
  val?            %42.2 = Force!<value>      !     %42.0, e79.0   <cls>
  val?            %42.3 = %42.2
  goto BB37
BB22   <- [101]
  val?^ | miss    %22.0 = LdVar              eR    nzchar, e79.0
  lgl$#-          %22.1 = Identical                <blt nzchar>, %22.0   <@?>
  void                    Branch                   %22.1 -> BB24 (if true) | BB23 (if false)
BB105   <- [103]
  prom-           %105.0 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p6 (!refl), e79.0
  val?            %105.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%105.0, "genericFunction") e79.0   <lgl$->
  lgl$#-          %105.2 = IsType                   %105.1 isA lgl$-
  void                    Branch                   %105.2 -> BB109 (if true) | BB110 (if false)
BB106   <- [103]
  fs              %106.0 = FrameState         R     0x55de2aa8f4a0+778: [], env=e79.0
  void                    Deopt              !v    %106.0, CallTarget@0x55de2b187e70[Call#11], %103.3   !
BB37   <- [42, 36]
  val?            %37.0 = Phi                      %36.2:BB36, %42.3:BB42
  val?            %37.1 = %37.0
  val?            %37.2 = %37.1
  goto BB38
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    package, e79.0
  val?            %24.1 = Force!             !v    %24.0, e79.0   <val?_>
  val?            %24.2 = CallBuiltin        !v    nzchar(%24.1) e79.0   <val?_>
  lgl$-           %24.3 = AsLogical          e     %24.2
  lgl$#-          %24.4 = Identical                %24.3, false
  void                    Branch                   %24.4 -> BB28 (if true) | BB25 (if false)
BB23   <- [22]
  (cls|spec|blt)  %23.0 = LdFun              !v    nzchar, e79.0
  fs              %23.1 = FrameState         R     0x55de2aa8f4a0+1012: [%23.0], env=e79.0
  void                    Deopt              !v    %23.1, DeadCall@0x55de2b187e70[Call#14], %23.0   !
BB109   <- [105]
  lgl$-           %109.0 = CastType           d     dn %105.1
  lgl$#-          %109.1 = CheckTrueFalse     e     %109.0
  void                    Branch                   %109.1 -> BB53 (if true) | BB52 (if false)
BB110   <- [105]
  void                    Nop                !     
  val?            %110.1 = %105.1
  dr              %110.2 = Typecheck@0x55de2b187e70[Type#30]
  goto BB50
BB28   <- [24]
  lgl$#-          %28.0 = CheckTrueFalse     e     %24.3
  void                    Branch                   %28.0 -> BB41 (if true) | BB29 (if false)
BB25   <- [24]
  val?^ | miss    %25.0 = LdVar              eR    is.na, e79.0
  lgl$#-          %25.1 = Identical                <blt is.na>, %25.0   <@?>
  void                    Branch                   %25.1 -> BB27 (if true) | BB26 (if false)
BB53   <- [109]
  val?^ | miss    %53.0 = LdVar              eR    .cacheGeneric, e79.0
  lgl$#-          %53.1 = Identical                %53.0, function(name, def) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %53.1 -> BB111 (if true) | BB112 (if false)
BB52   <- [109]
  void                    Nop                !     
  goto BB17
BB50   <- [110, 112]
  val?^ | miss    %50.0 = Phi                      %110.1:BB110, %112.1:BB112
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %110.2:BB110, %112.2:BB112
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55de2aa8f4a0+815: [%105.1], env=e79.0
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB41   <- [28]
  (cls|spec|blt)  %41.0 = LdFun              !v    tryCatch, e79.0
  fs              %41.1 = FrameState         R     0x55de2aa8f4a0+1229: [%41.0], env=e79.0
  void                    Deopt              !v    %41.1, DeadCall@0x55de2b187e70[Call#20], %41.0   !
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    is.function, e79.0
  lgl$#-          %29.1 = Identical                <blt is.function>, %29.0   <@?>
  void                    Branch                   %29.1 -> BB31 (if true) | BB30 (if false)
BB27   <- [25]
  (cls|spec|blt)  %27.0 = LdFun              !v    match, e79.0
  fs              %27.1 = FrameState         R     0x55de2aa8f4a0+1152: [%24.3, <blt is.na>, %27.0], env=e79.0
  void                    Deopt              !v    %27.1, DeadCall@0x55de2b187e70[Call#18], %27.0   !
BB26   <- [25]
  (cls|spec|blt)  %26.0 = LdFun              !v    is.na, e79.0
  fs              %26.1 = FrameState         R     0x55de2aa8f4a0+1115: [%24.3, %26.0], env=e79.0
  void                    Deopt              !v    %26.1, DeadCall@0x55de2b187e70[Call#15], %26.0   !
BB111   <- [53]
  prom-           %111.0 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p7, e79.0
  prom-           %111.1 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p8, e79.0
  ct              %111.2 = PushContext        lCL   %111.0, %111.1, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x55|..., e79.0
  val?^           %111.3 = CastType                 up %111.1
  val?^           %111.4 = CastType                 up %111.0
  val?^ | miss    %111.5 = LdVar              eR    .cacheGenericTable, <env 0x55de28b56378>
  lgl$#-          %111.6 = Identical                %111.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %111.6 -> BB113 (if true) | BB114 (if false)
BB112   <- [53]
  void                    Nop                !     
  val?^ | miss    %112.1 = %53.0
  dr              %112.2 = CallTarget@0x55de2b187e70[Call#12]
  goto BB50
BB31   <- [29]
  val?^ | miss    %31.0 = LdVar              eR    value, e79.0
  val?            %31.1 = Force!             !v    %31.0, e79.0   <val?_>
  lgl$#-          %31.2 = IsType                   %31.1 isA val?+
  void                    Branch                   %31.2 -> BB107 (if true) | BB108 (if false)
BB30   <- [29]
  (cls|spec|blt)  %30.0 = LdFun              !v    is.function, e79.0
  fs              %30.1 = FrameState         R     0x55de2aa8f4a0+1311: [%30.0], env=e79.0
  void                    Deopt              !v    %30.1, DeadCall@0x55de2b187e70[Call#23], %30.0   !
BB113   <- [111]
  env             e113.0 = MkEnv              l     name=%111.4, def=%111.3, parent=<env 0x55de28b56378>, context 1
  prom-           %113.1 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p12, e113.0
  prom-           %113.2 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p13, e113.0
  prom-           %113.3 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p14, e113.0
  ct              %113.4 = PushContext        lCL   %113.1, %113.2, %113.3, .cacheGenericTable(name, def, .genericTable), function(name, def, table) <(rir::DispatchTabl|..., e113.0
  val?^           %113.5 = CastType                 up %113.3
  val?^           %113.6 = CastType                 up %113.2
  val?^           %113.7 = CastType                 up %113.1
  env             e113.8 = MkEnv              l     name=%113.7, def=%113.6, table=%113.5, parent=<env 0x55de28b56378>, context 1
  val?            %113.9 = Force!<lazy>       !vL   %113.6, e113.8   <cls>
  void                    StVar              lW    fdef, %113.9, e113.8
  val?            %113.11 = Force!<lazy>       !vL   %113.5, e113.8   <env->
  lgl$#-          %113.12 = IsType                   %113.11 isA val+   <true>
  void                    Branch                   %113.12 -> BB115 (if true) | BB116 (if false)
BB114   <- [111]
  fs              %114.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  env             e114.1 = (MkEnv)            l     name=%111.4, def=%111.3, parent=<env 0x55de28b56378>, context 1
  fs              %114.2 = FrameState         R     0x55de2b0b39a0+0: [], env=e114.1, next=%114.0
  void                    Deopt              !v    %114.2, CallTarget@0x55de2b70b9e8[Call#0], %111.5   !
BB107   <- [31]
  val?+           %107.0 = CastType           d     dn %31.1   <val?_>
  lgl$#-          %107.1 = CallSafeBuiltin    wed   is.function(%107.0)    <val?_>
  void                    Branch                   %107.1 -> BB40 (if true) | BB34 (if false)
BB108   <- [31]
  fs              %108.0 = FrameState         R     0x55de2aa8f4a0+1352: [<blt is.function>, %31.1], env=e79.0
  void                    Deopt              !v    %108.0, Typecheck@0x55de2b187e70[Type#55], %31.1   !
BB115   <- [113]
  val?            %115.0 = Force!<lazy>       !vL   %113.7, e113.8   <str$->
  lgl$#-          %115.1 = IsType                   %115.0 isA val?-
  lgl$#-          %115.2 = IsType                   %113.11 isA val?-
  void                    Branch                   %115.2 -> BB117 (if true) | BB118 (if false)
BB116   <- [113]
  fs              %116.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  fs              %116.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e113.0, next=%116.0
  fs              %116.2 = FrameState         R     0x55de2bbfb610+32: [%113.11], env=e113.8, next=%116.1
  void                    Deopt              !v    %116.2, DeadBranchReached@0x55de2b5dbd60[Test#0], %113.12   !
BB40   <- [107]
  val?^ | miss    %40.0 = LdVar              eR    value, e79.0
  void                    Visible            v     
  val?            %40.2 = Force!             !     %40.0, e79.0   <val?_>
  val?            %40.3 = %40.2
  goto BB36
BB34   <- [107]
  val?^ | miss    %34.0 = LdVar              eR    mustFind, e79.0
  val?            %34.1 = Force!             !v    %34.0, e79.0   <val?_>
  lgl$#-          %34.2 = CheckTrueFalse     we    %34.1
  void                    Branch                   %34.2 -> BB39 (if true) | BB35 (if false)
BB117   <- [115]
  val?-           %117.0 = CastType           d     dn %113.11   <env->
  void                    Branch                   %115.1 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  void                    Nop                !     
  val?            %118.1 = %113.11
  dr              %118.2 = Typecheck@0x55de2b5dbd60[Type#1]
  goto BB58
BB36   <- [35, 40]
  val?            %36.0 = Phi                      %35.1:BB35, %40.3:BB40
  val?            %36.1 = %36.0
  val?            %36.2 = %36.1
  goto BB37
BB39   <- [34]
  (cls|spec|blt)  %39.0 = LdFun              !v    stop, e79.0
  fs              %39.1 = FrameState         R     0x55de2aa8f4a0+1421: [%39.0], env=e79.0
  void                    Deopt              !v    %39.1, DeadCall@0x55de2b187e70[Call#24], %39.0   !
BB35   <- [34]
  void                    Visible            v     
  nil-            %35.1 = nil
  goto BB36
BB119   <- [117]
  val?-           %119.0 = CastType           d     dn %115.0   <str$->
  val?            %119.1 = Extract2_1D        wed   %117.0, %119.0, elided   <cls>
  lgl$-           %119.2 = Is                       %119.1, NULL
  void                    StVar              lW    prev, %119.1, e113.8
  lgl$-           %119.4 = Not                d     %119.2, elided
  lgl$#-          %119.5 = CheckTrueFalse     e     %119.4
  void                    Branch                   %119.5 -> BB61 (if true) | BB60 (if false)
BB120   <- [117]
  void                    Nop                !     
  val?            %120.1 = %115.0
  dr              %120.2 = Typecheck@0x55de2b5dbd60[Type#3]
  goto BB58
BB58   <- [118, 120]
  val?^ | miss    %58.0 = Phi                      %118.1:BB118, %120.1:BB120
  val?^ | miss    %58.1 = %58.0
  dr              %58.2 = Phi                      %118.2:BB118, %120.2:BB120
  dr              %58.3 = %58.2
  fs              %58.4 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  fs              %58.5 = FrameState         R     0x55de2b0b39a0+42: [], env=e113.0, next=%58.4
  fs              %58.6 = FrameState         R     0x55de2bbfb610+77: [%113.11, %115.0], env=e113.8, next=%58.5
  void                    Deopt              !v    %58.6, %58.3, %58.1   !
BB61   <- [119]
  (cls|spec|blt)  %61.0 = LdFun              !v    @, <0x55de2854ebd8>, <env 0x55de28b56378>
  prom-           %61.1 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p15, e113.8
  prom-           %61.2 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p16, e113.8
  val?            %61.3 = Call               !v    %61.0(%61.1, %61.2) e113.8   <str$->
  void                    StVar              lW    newpkg, %61.3, e113.8
  val?^ | miss    %61.5 = LdVar              eR    is.function, e113.8
  lgl$#-          %61.6 = Identical                <blt is.function>, %61.5   <true>
  void                    Branch                   %61.6 -> BB121 (if true) | BB122 (if false)
BB60   <- [119]
  fs              %60.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  fs              %60.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e113.0, next=%60.0
  (cls|spec|blt)  %60.2 = LdFun              !v    .getMethodsTable, <env 0x55de28b56378>
  fs              %60.3 = FrameState         R     0x55de2bbfb610+1059: [%60.2], env=e113.8, next=%60.1
  void                    Deopt              !v    %60.3, DeadCall@0x55de2b5dbd60[Call#11], %60.2   !
BB121   <- [61]
  val?^ | miss    %121.0 = LdVar              eR    prev, e113.8
  val?            %121.1 = Force!<value>      !v    %121.0, e113.8   <cls>
  val?            %121.2 = CallBuiltin        !v    is.function(%121.1) e113.8   <lgl$->
  lgl$#-          %121.3 = IsType                   %121.2 isA lgl$-
  void                    Branch                   %121.3 -> BB123 (if true) | BB124 (if false)
BB122   <- [61]
  fs              %122.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  fs              %122.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e113.0, next=%122.0
  fs              %122.2 = FrameState         R     0x55de2bbfb610+168: [], env=e113.8, next=%122.1
  void                    Deopt              !v    %122.2, DeadBranchReached@0x55de2b5dbd60[Test#1], %61.6   !
BB123   <- [121]
  lgl$-           %123.0 = CastType           d     dn %121.2
  lgl$#-          %123.1 = CheckTrueFalse     e     %123.0
  void                    Branch                   %123.1 -> BB67 (if true) | BB66 (if false)
BB124   <- [121]
  void                    Nop                !     
  val?            %124.1 = %121.2
  dr              %124.2 = Typecheck@0x55de2b5dbd60[Type#10]
  goto BB64
BB67   <- [123]
  val?^ | miss    %67.0 = LdVar              eR    identical, e113.8
  lgl$#-          %67.1 = Identical                %67.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %67.1 -> BB125 (if true) | BB126 (if false)
BB66   <- [123]
  fs              %66.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  fs              %66.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e113.0, next=%66.0
  (cls|spec|blt)  %66.2 = LdFun              !v    match, e113.8
  fs              %66.3 = FrameState         R     0x55de2bbfb610+706: [%66.2], env=e113.8, next=%66.1
  void                    Deopt              !v    %66.3, DeadCall@0x55de2b5dbd60[Call#7], %66.2   !
BB64   <- [124, 126]
  val?^ | miss    %64.0 = Phi                      %124.1:BB124, %126.1:BB126
  val?^ | miss    %64.1 = %64.0
  dr              %64.2 = Phi                      %124.2:BB124, %126.2:BB126
  dr              %64.3 = %64.2
  fs              %64.4 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  fs              %64.5 = FrameState         R     0x55de2b0b39a0+42: [], env=e113.0, next=%64.4
  fs              %64.6 = FrameState         R     0x55de2bbfb610+259: [%121.2], env=e113.8, next=%64.5
  void                    Deopt              !v    %64.6, %64.3, %64.1   !
BB125   <- [67]
  prom-           %125.0 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p17, e113.8
  prom-           %125.1 = MkArg                    unboundValue, getGeneric[0x55de29a7d4c0]_p18, e113.8
  ct              %125.2 = PushContext        lCL   %125.0, %125.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e113.8
  val?^           %125.3 = CastType                 up %125.1
  val?^           %125.4 = CastType                 up %125.0
  env             e125.5 = MkEnv              l     x=%125.4, y=%125.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %125.6 = Force!<lazy>       !vL   %125.4, e125.5   <val?>
  val?            %125.7 = Force!<lazy>       !vL   %125.3, e125.5   <val?>
  val?            %125.8 = CallBuiltin        !v    identical(%125.6, %125.7, true, true, true, true, false, true) e125.5
  val?            %125.9 = PopContext         C     %125.8, %125.2   <lgl$->
  lgl$#-          %125.10 = IsType                   %125.9 isA lgl$-
  void                    Branch                   %125.10 -> BB127 (if true) | BB128 (if false)
BB126   <- [67]
  void                    Nop                !     
  val?^ | miss    %126.1 = %67.0
  dr              %126.2 = CallTarget@0x55de2b5dbd60[Call#2]
  goto BB64
BB127   <- [125]
  lgl$-           %127.0 = CastType           d     dn %125.9
  lgl$#-          %127.1 = CheckTrueFalse     e     %127.0
  void                    Branch                   %127.1 -> BB71 (if true) | BB70 (if false)
BB128   <- [125]
  fs              %128.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  fs              %128.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e113.0, next=%128.0
  fs              %128.2 = FrameState         R     0x55de2bbfb610+312: [%125.9], env=e113.8, next=%128.1
  void                    Deopt              !v    %128.2, Typecheck@0x55de2b5dbd60[Type#13], %125.9   !
BB71   <- [127]
  val?^ | miss    %71.0 = LdVar              eR    fdef, e113.8
  val?            %71.1 = Force!<value>      !v    %71.0, e113.8   <cls>
  val?            %71.2 = PopContext         C     %71.1, %113.4   <cls>
  val?            %71.3 = PopContext         C     %71.2, %111.2   <cls>
  void                    StVar              lW    value, %71.3, e79.0
  goto BB17
BB70   <- [127]
  fs              %70.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e79.0
  fs              %70.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e113.0, next=%70.0
  (cls|spec|blt)  %70.2 = LdFun              !v    @, e113.8
  fs              %70.3 = FrameState         R     0x55de2bbfb610+348: [%70.2], env=e113.8, next=%70.1
  void                    Deopt              !v    %70.3, DeadCall@0x55de2b5dbd60[Call#3], %70.2   !
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ getGeneric[0x55de29a7d4c0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
