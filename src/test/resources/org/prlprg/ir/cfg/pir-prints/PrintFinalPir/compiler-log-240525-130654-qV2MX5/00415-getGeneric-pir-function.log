
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGeneric[0x55de2a76d1e0]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 3                              │
│ Properties:                                                                  │
├────── Final PIR Version
getGeneric[0x55de2a76d1e0]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.function, <env 0x55de28b56378>
  lgl$#-          %0.2  = Identical                <blt is.function>, %0.1   <true>
  void                    Branch                   %0.2 -> BB82 (if true) | BB83 (if false)
BB82   <- [0]
  env             e82.0 = MkEnv              l     f=%0.0, mustFind(miss)=false, where(miss)=missingArg, package(miss)="", parent=<env 0x55de28b56378>, context 1
  val?            %82.1 = Force!<lazy>       !v    %0.0, e82.0   <(str|cls)>
  val?            %82.2 = CallBuiltin        !v    is.function(%82.1) e82.0   <lgl$->
  lgl$#-          %82.3 = IsType                   %82.2 isA lgl$-
  void                    Branch                   %82.3 -> BB84 (if true) | BB85 (if false)
BB83   <- [0]
  env             e83.0 = (MkEnv)            l     f=%0.0, mustFind(miss)=false, where(miss)=missingArg, package(miss)="", parent=<env 0x55de28b56378>, context 1
  fs              %83.1 = FrameState         R     0x55de2aa8f4a0+0: [], env=e83.0
  void                    Deopt              !v    %83.1, DeadBranchReached@0x55de2b187e70[Test#0], %0.2
BB84   <- [82]
  lgl$-           %84.0 = CastType           d     dn %82.2
  lgl$#-          %84.1 = CheckTrueFalse     e     %84.0
  void                    Branch                   %84.1 -> BB76 (if true) | BB5 (if false)
BB85   <- [82]
  void                    Nop                !     
  val?            %85.1 = %82.2
  dr              %85.2 = Typecheck@0x55de2b187e70[Type#2]
  goto BB3
BB76   <- [84]
  val?^ | miss    %76.0 = LdVar              eR    is, e82.0
  lgl$#-          %76.1 = Identical                %76.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %76.1 -> BB86 (if true) | BB87 (if false)
BB5   <- [84]
  lgl$-           %5.0  = Missing            eR    where, e82.0
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB75 (if true) | BB6 (if false)
BB3   <- [85, 87, 89, 91]
  val?^ | miss    %3.0  = Phi                      %85.1:BB85, %87.1:BB87, %89.1:BB89, %91.1:BB91
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %85.2:BB85, %87.2:BB87, %89.2:BB89, %91.2:BB91
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55de2aa8f4a0+91: [%82.2], env=e82.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB86   <- [76]
  prom-           %86.0 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p11, e82.0
  val?            %86.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%86.0, "genericFunction") e82.0   <lgl$->
  lgl$#-          %86.2 = IsType                   %86.1 isA lgl$-
  void                    Branch                   %86.2 -> BB92 (if true) | BB93 (if false)
BB87   <- [76]
  void                    Nop                !     
  val?^ | miss    %87.1 = %76.0
  dr              %87.2 = CallTarget@0x55de2b187e70[Call#1]
  goto BB3
BB75   <- [5]
  val?^ | miss    %75.0 = LdVar              eR    .getGeneric, e82.0
  lgl$#-          %75.1 = Identical                %75.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %75.1 -> BB88 (if true) | BB89 (if false)
BB6   <- [5]
  val?^ | miss    %6.0  = LdVar              eR    .getGeneric, e82.0
  lgl$#-          %6.1  = Identical                %6.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %6.1 -> BB90 (if true) | BB91 (if false)
BB92   <- [86]
  lgl$-           %92.0 = CastType           d     dn %86.1
  lgl$#-          %92.1 = CheckTrueFalse     e     %92.0
  void                    Branch                   %92.1 -> BB80 (if true) | BB79 (if false)
BB93   <- [86]
  fs              %93.0 = FrameState         R     0x55de2aa8f4a0+144: [%86.1], env=e82.0
  void                    Deopt              !v    %93.0, Typecheck@0x55de2b187e70[Type#4], %86.1   !
BB88   <- [75]
  prom-           %88.0 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p9, e82.0
  prom-           %88.1 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p10, e82.0
  val?            %88.2 = StaticCall         !v    .getGeneric[0x55de285d23f0](%88.0, missingArg, %88.1) e82.0   <cls>
  val?            %88.3 = %88.2
  goto BB7
BB89   <- [75]
  void                    Nop                !     
  val?^ | miss    %89.1 = %75.0
  dr              %89.2 = CallTarget@0x55de2b187e70[Call#7]
  goto BB3
BB90   <- [6]
  prom-           %90.0 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p2, e82.0
  prom-           %90.1 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p3, e82.0
  prom-           %90.2 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p4, e82.0
  val?            %90.3 = StaticCall         !v    .getGeneric[0x55de2bb27dc0](%90.0, %90.1, %90.2) e82.0   <(nil|cls)>
  val?            %90.4 = %90.3
  goto BB7
BB91   <- [6]
  void                    Nop                !     
  val?^ | miss    %91.1 = %6.0
  dr              %91.2 = CallTarget@0x55de2b187e70[Call#6]
  goto BB3
BB80   <- [92]
  val?^ | miss    %80.0 = LdVar              eR    f, e82.0
  void                    Visible            v     
  val?            %80.2 = Force!<wrapped>    !     %80.0, e82.0   <cls>
  val?            %80.3 = %80.2
  goto BB40
BB79   <- [92]
  (cls|spec|blt)  %79.0 = LdFun              !v    is.primitive, e82.0
  fs              %79.1 = FrameState         R     0x55de2aa8f4a0+160: [%79.0], env=e82.0
  void                    Deopt              !v    %79.1, DeadCall@0x55de2b187e70[Call#2], %79.0   !
BB7   <- [88, 90]
  val?            %7.0  = Phi                      %90.4:BB90, %88.3:BB88   <(nil|cls)>
  val?            %7.1  = %7.0
  lgl$-           %7.2  = Is                       %7.1, NULL
  lgl$-           %7.3  = AsLogical                %7.2
  lgl$#-          %7.4  = Identical                %7.3, false
  void                    StVar              lW    value, %7.1, e82.0
  val             %7.6  = ChkMissing         e     %7.1
  void                    Branch                   %7.4 -> BB74 (if true) | BB10 (if false)
BB40   <- [80, 39]
  val?            %40.0 = Phi                      %39.2:BB39, %80.3:BB80
  val?            %40.1 = %40.0
  void                    Return             l     %40.1
BB74   <- [7]
  void                    Nop                !     
  lgl$-           %74.1 = %7.3
  goto BB15
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    baseenv, e82.0
  lgl$#-          %10.1 = Identical                <blt baseenv>, %10.0   <true>
  void                    Branch                   %10.1 -> BB94 (if true) | BB95 (if false)
BB15   <- [74, 104]
  lgl$-           %15.0 = Phi                      %104.7:BB104, %74.1:BB74
  lgl$-           %15.1 = %15.0
  lgl$#-          %15.2 = CheckTrueFalse     e     %15.1
  void                    Branch                   %15.2 -> BB45 (if true) | BB18 (if false)
BB94   <- [10]
  val?            %94.0 = CallBuiltin        !v    baseenv() e82.0   <env->
  lgl$#-          %94.1 = IsType                   %94.0 isA val+   <true>
  void                    Branch                   %94.1 -> BB96 (if true) | BB97 (if false)
BB95   <- [10]
  fs              %95.0 = FrameState         R     0x55de2aa8f4a0+427: [], env=e82.0
  void                    Deopt              !v    %95.0, DeadBranchReached@0x55de2b187e70[Test#1], %10.1   !
BB45   <- [15]
  val?^ | miss    %45.0 = LdVar              eR    is.function, e82.0
  lgl$#-          %45.1 = Identical                <blt is.function>, %45.0   <true>
  void                    Branch                   %45.1 -> BB100 (if true) | BB101 (if false)
BB18   <- [15]
  void                    Nop                !     
  goto BB19
BB96   <- [94]
  val?^ | miss    %96.0 = LdVar              eR    f, e82.0
  val?            %96.1 = Force!<wrapped>    !v    %96.0, e82.0   <str$->
  lgl$#-          %96.2 = IsType                   %96.1 isA val?-
  lgl$#-          %96.3 = IsType                   %94.0 isA val?-
  void                    Branch                   %96.3 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  fs              %97.0 = FrameState         R     0x55de2aa8f4a0+525: [%7.3, %94.0], env=e82.0
  void                    Deopt              !v    %97.0, DeadBranchReached@0x55de2b187e70[Test#2], %94.1   !
BB100   <- [45]
  val?^ | miss    %100.0 = LdVar              eR    baseDef, e82.0
  lgl$#-          %100.1 = IsType                   %100.0 isA val?~- | miss
  void                    Branch                   %100.1 -> BB102 (if true) | BB103 (if false)
BB101   <- [45]
  void                    Nop                !     
  lgl$#-          %101.1 = %45.1
  dr              %101.2 = DeadBranchReached@0x55de2b187e70[Test#3]
  goto BB16
BB19   <- [18, 48, 54, 73]
  val?^ | miss    %19.0 = LdVar              eR    is.function, e82.0
  lgl$#-          %19.1 = Identical                <blt is.function>, %19.0   <true>
  void                    Branch                   %19.1 -> BB108 (if true) | BB109 (if false)
BB98   <- [96]
  val?-           %98.0 = CastType           d     dn %94.0   <env->
  void                    Branch                   %96.2 -> BB104 (if true) | BB105 (if false)
BB99   <- [96]
  void                    Nop                !     
  val?            %99.1 = %94.0
  dr              %99.2 = Typecheck@0x55de2b187e70[Type#20]
  goto BB13
BB102   <- [100]
  val?~- | miss   %102.0 = CastType           d     dn %100.0
  val?-           %102.1 = Force!<value>            %102.0,    <blt->
  lgl$#-          %102.2 = CallSafeBuiltin    wed   is.function(%102.1)    <lgl$->
  void                    Branch                   %102.2 -> BB49 (if true) | BB48 (if false)
BB103   <- [100]
  void                    Nop                !     
  val?^ | miss    %103.1 = %100.0
  dr              %103.2 = Typecheck@0x55de2b187e70[Type#25]
  goto BB16
BB16   <- [101, 103]
  val?^ | miss    %16.0 = Phi                      %101.1:BB101, %103.1:BB103
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %101.2:BB101, %103.2:BB103
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55de2aa8f4a0+601: [%15.1], env=e82.0
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB108   <- [19]
  val?^ | miss    %108.0 = LdVar              eR    value, e82.0
  val?            %108.1 = Force!<value>      !v    %108.0, e82.0   <cls>
  val?            %108.2 = CallBuiltin        !v    is.function(%108.1) e82.0   <lgl$->
  lgl$#-          %108.3 = IsType                   %108.2 isA lgl$-
  void                    Branch                   %108.3 -> BB110 (if true) | BB111 (if false)
BB109   <- [19]
  fs              %109.0 = FrameState         R     0x55de2aa8f4a0+882: [], env=e82.0
  void                    Deopt              !v    %109.0, DeadBranchReached@0x55de2b187e70[Test#4], %19.1   !
BB104   <- [98]
  val?-           %104.0 = CastType           d     dn %96.1   <str$->
  val?            %104.1 = Extract2_1D        wed   %98.0, %104.0, elided   <blt->
  lgl$-           %104.2 = Is                       %104.1, NULL
  void                    StVar              lW    baseDef, %104.1, e82.0
  lgl$-           %104.4 = Not                d     %104.2, elided
  lgl$-           %104.5 = AsLogical                %104.4
  lgl$-           %104.6 = LAnd                     %7.3, %104.5
  lgl$-           %104.7 = %104.6
  goto BB15
BB105   <- [98]
  void                    Nop                !     
  val?            %105.1 = %96.1
  dr              %105.2 = Typecheck@0x55de2b187e70[Type#22]
  goto BB13
BB13   <- [99, 105]
  val?^ | miss    %13.0 = Phi                      %99.1:BB99, %105.1:BB105
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %99.2:BB99, %105.2:BB105
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55de2aa8f4a0+570: [%7.3, %94.0, %96.1], env=e82.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB49   <- [102]
  val?^ | miss    %49.0 = LdVar              eR    genericForBasic, e82.0
  lgl$#-          %49.1 = Identical                %49.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %49.1 -> BB106 (if true) | BB107 (if false)
BB48   <- [102]
  void                    Nop                !     
  goto BB19
BB110   <- [108]
  lgl$-           %110.0 = CastType           d     dn %108.2
  lgl$#-          %110.1 = CheckTrueFalse     e     %110.0
  void                    Branch                   %110.1 -> BB44 (if true) | BB24 (if false)
BB111   <- [108]
  fs              %111.0 = FrameState         R     0x55de2aa8f4a0+973: [%108.2], env=e82.0
  void                    Deopt              !v    %111.0, Typecheck@0x55de2b187e70[Type#36], %108.2   !
BB106   <- [49]
  prom-           %106.0 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p5, e82.0
  val?            %106.1 = StaticCall         !v    genericForBasic[0x55de2a702480](%106.0, missingArg, false) { 0 2n } e82.0   <cls>
  void                    StVar              lW    value, %106.1, e82.0
  val?^ | miss    %106.3 = LdVar              eR    is, e82.0
  lgl$#-          %106.4 = Identical                %106.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %106.4 -> BB112 (if true) | BB113 (if false)
BB107   <- [49]
  fs              %107.0 = FrameState         R     0x55de2aa8f4a0+703: [%102.2], env=e82.0
  void                    Deopt              !v    %107.0, CallTarget@0x55de2b187e70[Call#10], %49.0   !
BB44   <- [110]
  val?^ | miss    %44.0 = LdVar              eR    value, e82.0
  void                    Visible            v     
  val?            %44.2 = Force!<value>      !     %44.0, e82.0   <cls>
  val?            %44.3 = %44.2
  goto BB39
BB24   <- [110]
  val?^ | miss    %24.0 = LdVar              eR    nzchar, e82.0
  lgl$#-          %24.1 = Identical                <blt nzchar>, %24.0   <@?>
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB112   <- [106]
  prom-           %112.0 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p6 (!refl), e82.0
  val?            %112.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%112.0, "genericFunction") e82.0   <lgl$->
  lgl$#-          %112.2 = IsType                   %112.1 isA lgl$-
  void                    Branch                   %112.2 -> BB114 (if true) | BB115 (if false)
BB113   <- [106]
  fs              %113.0 = FrameState         R     0x55de2aa8f4a0+778: [], env=e82.0
  void                    Deopt              !v    %113.0, CallTarget@0x55de2b187e70[Call#11], %106.3   !
BB39   <- [44, 38]
  val?            %39.0 = Phi                      %38.2:BB38, %44.3:BB44
  val?            %39.1 = %39.0
  val?            %39.2 = %39.1
  goto BB40
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    package, e82.0
  val?            %26.1 = Force!             !v    %26.0, e82.0   <val?_>
  val?            %26.2 = CallBuiltin        !v    nzchar(%26.1) e82.0   <val?_>
  lgl$-           %26.3 = AsLogical          e     %26.2
  lgl$#-          %26.4 = Identical                %26.3, false
  void                    Branch                   %26.4 -> BB30 (if true) | BB27 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    nzchar, e82.0
  fs              %25.1 = FrameState         R     0x55de2aa8f4a0+1012: [%25.0], env=e82.0
  void                    Deopt              !v    %25.1, DeadCall@0x55de2b187e70[Call#14], %25.0   !
BB114   <- [112]
  lgl$-           %114.0 = CastType           d     dn %112.1
  lgl$#-          %114.1 = CheckTrueFalse     e     %114.0
  void                    Branch                   %114.1 -> BB55 (if true) | BB54 (if false)
BB115   <- [112]
  void                    Nop                !     
  val?            %115.1 = %112.1
  dr              %115.2 = Typecheck@0x55de2b187e70[Type#30]
  goto BB52
BB30   <- [26]
  lgl$#-          %30.0 = CheckTrueFalse     e     %26.3
  void                    Branch                   %30.0 -> BB43 (if true) | BB31 (if false)
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    is.na, e82.0
  lgl$#-          %27.1 = Identical                <blt is.na>, %27.0   <@?>
  void                    Branch                   %27.1 -> BB29 (if true) | BB28 (if false)
BB55   <- [114]
  val?^ | miss    %55.0 = LdVar              eR    .cacheGeneric, e82.0
  lgl$#-          %55.1 = Identical                %55.0, function(name, def) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %55.1 -> BB116 (if true) | BB117 (if false)
BB54   <- [114]
  void                    Nop                !     
  goto BB19
BB52   <- [115, 117]
  val?^ | miss    %52.0 = Phi                      %115.1:BB115, %117.1:BB117
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %115.2:BB115, %117.2:BB117
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x55de2aa8f4a0+815: [%112.1], env=e82.0
  void                    Deopt              !v    %52.4, %52.3, %52.1   !
BB43   <- [30]
  (cls|spec|blt)  %43.0 = LdFun              !v    tryCatch, e82.0
  fs              %43.1 = FrameState         R     0x55de2aa8f4a0+1229: [%43.0], env=e82.0
  void                    Deopt              !v    %43.1, DeadCall@0x55de2b187e70[Call#20], %43.0   !
BB31   <- [30]
  val?^ | miss    %31.0 = LdVar              eR    is.function, e82.0
  lgl$#-          %31.1 = Identical                <blt is.function>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB29   <- [27]
  (cls|spec|blt)  %29.0 = LdFun              !v    match, e82.0
  fs              %29.1 = FrameState         R     0x55de2aa8f4a0+1152: [%26.3, <blt is.na>, %29.0], env=e82.0
  void                    Deopt              !v    %29.1, DeadCall@0x55de2b187e70[Call#18], %29.0   !
BB28   <- [27]
  (cls|spec|blt)  %28.0 = LdFun              !v    is.na, e82.0
  fs              %28.1 = FrameState         R     0x55de2aa8f4a0+1115: [%26.3, %28.0], env=e82.0
  void                    Deopt              !v    %28.1, DeadCall@0x55de2b187e70[Call#15], %28.0   !
BB116   <- [55]
  prom-           %116.0 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p7, e82.0
  prom-           %116.1 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p8, e82.0
  ct              %116.2 = PushContext        lCL   %116.0, %116.1, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x55|..., e82.0
  val?^           %116.3 = CastType                 up %116.1
  val?^           %116.4 = CastType                 up %116.0
  val?^ | miss    %116.5 = LdVar              eR    .cacheGenericTable, <env 0x55de28b56378>
  lgl$#-          %116.6 = Identical                %116.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %116.6 -> BB118 (if true) | BB119 (if false)
BB117   <- [55]
  void                    Nop                !     
  val?^ | miss    %117.1 = %55.0
  dr              %117.2 = CallTarget@0x55de2b187e70[Call#12]
  goto BB52
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    value, e82.0
  val?            %33.1 = Force!             !v    %33.0, e82.0   <val?_>
  lgl$#-          %33.2 = IsType                   %33.1 isA val?+
  void                    Branch                   %33.2 -> BB120 (if true) | BB121 (if false)
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    is.function, e82.0
  fs              %32.1 = FrameState         R     0x55de2aa8f4a0+1311: [%32.0], env=e82.0
  void                    Deopt              !v    %32.1, DeadCall@0x55de2b187e70[Call#23], %32.0   !
BB118   <- [116]
  env             e118.0 = MkEnv              l     name=%116.4, def=%116.3, parent=<env 0x55de28b56378>, context 1
  prom-           %118.1 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p12, e118.0
  prom-           %118.2 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p13, e118.0
  prom-           %118.3 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p14, e118.0
  ct              %118.4 = PushContext        lCL   %118.1, %118.2, %118.3, .cacheGenericTable(name, def, .genericTable), function(name, def, table) <(rir::DispatchTabl|..., e118.0
  val?^           %118.5 = CastType                 up %118.3
  val?^           %118.6 = CastType                 up %118.2
  val?^           %118.7 = CastType                 up %118.1
  env             e118.8 = MkEnv              l     name=%118.7, def=%118.6, table=%118.5, parent=<env 0x55de28b56378>, context 1
  val?            %118.9 = Force!<lazy>       !vL   %118.6, e118.8   <cls>
  void                    StVar              lW    fdef, %118.9, e118.8
  val?            %118.11 = Force!<lazy>       !vL   %118.5, e118.8   <env->
  lgl$#-          %118.12 = IsType                   %118.11 isA val+   <true>
  void                    Branch                   %118.12 -> BB122 (if true) | BB123 (if false)
BB119   <- [116]
  fs              %119.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  env             e119.1 = (MkEnv)            l     name=%116.4, def=%116.3, parent=<env 0x55de28b56378>, context 1
  fs              %119.2 = FrameState         R     0x55de2b0b39a0+0: [], env=e119.1, next=%119.0
  void                    Deopt              !v    %119.2, CallTarget@0x55de2b70b9e8[Call#0], %116.5   !
BB120   <- [33]
  val?+           %120.0 = CastType           d     dn %33.1   <val?_>
  lgl$#-          %120.1 = CallSafeBuiltin    wed   is.function(%120.0)    <val?_>
  void                    Branch                   %120.1 -> BB42 (if true) | BB36 (if false)
BB121   <- [33]
  fs              %121.0 = FrameState         R     0x55de2aa8f4a0+1352: [<blt is.function>, %33.1], env=e82.0
  void                    Deopt              !v    %121.0, Typecheck@0x55de2b187e70[Type#55], %33.1   !
BB122   <- [118]
  val?            %122.0 = Force!<lazy>       !vL   %118.7, e118.8   <str$->
  lgl$#-          %122.1 = IsType                   %122.0 isA val?-
  lgl$#-          %122.2 = IsType                   %118.11 isA val?-
  void                    Branch                   %122.2 -> BB124 (if true) | BB125 (if false)
BB123   <- [118]
  fs              %123.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  fs              %123.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e118.0, next=%123.0
  fs              %123.2 = FrameState         R     0x55de2bbfb610+32: [%118.11], env=e118.8, next=%123.1
  void                    Deopt              !v    %123.2, DeadBranchReached@0x55de2b5dbd60[Test#0], %118.12   !
BB42   <- [120]
  val?^ | miss    %42.0 = LdVar              eR    value, e82.0
  void                    Visible            v     
  val?            %42.2 = Force!             !     %42.0, e82.0   <val?_>
  val?            %42.3 = %42.2
  goto BB38
BB36   <- [120]
  val?^ | miss    %36.0 = LdVar              eR    mustFind, e82.0
  val?            %36.1 = Force!             !v    %36.0, e82.0   <val?_>
  lgl$#-          %36.2 = CheckTrueFalse     we    %36.1
  void                    Branch                   %36.2 -> BB41 (if true) | BB37 (if false)
BB124   <- [122]
  val?-           %124.0 = CastType           d     dn %118.11   <env->
  void                    Branch                   %122.1 -> BB126 (if true) | BB127 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?            %125.1 = %118.11
  dr              %125.2 = Typecheck@0x55de2b5dbd60[Type#1]
  goto BB60
BB38   <- [37, 42]
  val?            %38.0 = Phi                      %37.1:BB37, %42.3:BB42
  val?            %38.1 = %38.0
  val?            %38.2 = %38.1
  goto BB39
BB41   <- [36]
  (cls|spec|blt)  %41.0 = LdFun              !v    stop, e82.0
  fs              %41.1 = FrameState         R     0x55de2aa8f4a0+1421: [%41.0], env=e82.0
  void                    Deopt              !v    %41.1, DeadCall@0x55de2b187e70[Call#24], %41.0   !
BB37   <- [36]
  void                    Visible            v     
  nil-            %37.1 = nil
  goto BB38
BB126   <- [124]
  val?-           %126.0 = CastType           d     dn %122.0   <str$->
  val?            %126.1 = Extract2_1D        wed   %124.0, %126.0, elided   <cls>
  lgl$-           %126.2 = Is                       %126.1, NULL
  void                    StVar              lW    prev, %126.1, e118.8
  lgl$-           %126.4 = Not                d     %126.2, elided
  lgl$#-          %126.5 = CheckTrueFalse     e     %126.4
  void                    Branch                   %126.5 -> BB63 (if true) | BB62 (if false)
BB127   <- [124]
  void                    Nop                !     
  val?            %127.1 = %122.0
  dr              %127.2 = Typecheck@0x55de2b5dbd60[Type#3]
  goto BB60
BB60   <- [125, 127]
  val?^ | miss    %60.0 = Phi                      %125.1:BB125, %127.1:BB127
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %125.2:BB125, %127.2:BB127
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  fs              %60.5 = FrameState         R     0x55de2b0b39a0+42: [], env=e118.0, next=%60.4
  fs              %60.6 = FrameState         R     0x55de2bbfb610+77: [%118.11, %122.0], env=e118.8, next=%60.5
  void                    Deopt              !v    %60.6, %60.3, %60.1   !
BB63   <- [126]
  (cls|spec|blt)  %63.0 = LdFun              !v    @, <0x55de2854ebd8>, <env 0x55de28b56378>
  prom-           %63.1 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p15, e118.8
  prom-           %63.2 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p16, e118.8
  val?            %63.3 = Call               !v    %63.0(%63.1, %63.2) e118.8   <str$->
  void                    StVar              lW    newpkg, %63.3, e118.8
  val?^ | miss    %63.5 = LdVar              eR    is.function, e118.8
  lgl$#-          %63.6 = Identical                <blt is.function>, %63.5   <true>
  void                    Branch                   %63.6 -> BB128 (if true) | BB129 (if false)
BB62   <- [126]
  fs              %62.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  fs              %62.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e118.0, next=%62.0
  (cls|spec|blt)  %62.2 = LdFun              !v    .getMethodsTable, <env 0x55de28b56378>
  fs              %62.3 = FrameState         R     0x55de2bbfb610+1059: [%62.2], env=e118.8, next=%62.1
  void                    Deopt              !v    %62.3, DeadCall@0x55de2b5dbd60[Call#11], %62.2   !
BB128   <- [63]
  val?^ | miss    %128.0 = LdVar              eR    prev, e118.8
  val?            %128.1 = Force!<value>      !v    %128.0, e118.8   <cls>
  val?            %128.2 = CallBuiltin        !v    is.function(%128.1) e118.8   <lgl$->
  lgl$#-          %128.3 = IsType                   %128.2 isA lgl$-
  void                    Branch                   %128.3 -> BB130 (if true) | BB131 (if false)
BB129   <- [63]
  fs              %129.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  fs              %129.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e118.0, next=%129.0
  fs              %129.2 = FrameState         R     0x55de2bbfb610+168: [], env=e118.8, next=%129.1
  void                    Deopt              !v    %129.2, DeadBranchReached@0x55de2b5dbd60[Test#1], %63.6   !
BB130   <- [128]
  lgl$-           %130.0 = CastType           d     dn %128.2
  lgl$#-          %130.1 = CheckTrueFalse     e     %130.0
  void                    Branch                   %130.1 -> BB69 (if true) | BB68 (if false)
BB131   <- [128]
  void                    Nop                !     
  val?            %131.1 = %128.2
  dr              %131.2 = Typecheck@0x55de2b5dbd60[Type#10]
  goto BB66
BB69   <- [130]
  val?^ | miss    %69.0 = LdVar              eR    identical, e118.8
  lgl$#-          %69.1 = Identical                %69.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %69.1 -> BB132 (if true) | BB133 (if false)
BB68   <- [130]
  fs              %68.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  fs              %68.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e118.0, next=%68.0
  (cls|spec|blt)  %68.2 = LdFun              !v    match, e118.8
  fs              %68.3 = FrameState         R     0x55de2bbfb610+706: [%68.2], env=e118.8, next=%68.1
  void                    Deopt              !v    %68.3, DeadCall@0x55de2b5dbd60[Call#7], %68.2   !
BB66   <- [131, 133]
  val?^ | miss    %66.0 = Phi                      %131.1:BB131, %133.1:BB133
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %131.2:BB131, %133.2:BB133
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  fs              %66.5 = FrameState         R     0x55de2b0b39a0+42: [], env=e118.0, next=%66.4
  fs              %66.6 = FrameState         R     0x55de2bbfb610+259: [%128.2], env=e118.8, next=%66.5
  void                    Deopt              !v    %66.6, %66.3, %66.1   !
BB132   <- [69]
  prom-           %132.0 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p17, e118.8
  prom-           %132.1 = MkArg                    unboundValue, getGeneric[0x55de2a76d1e0]_p18, e118.8
  ct              %132.2 = PushContext        lCL   %132.0, %132.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e118.8
  val?^           %132.3 = CastType                 up %132.1
  val?^           %132.4 = CastType                 up %132.0
  env             e132.5 = MkEnv              l     x=%132.4, y=%132.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %132.6 = Force!<lazy>       !vL   %132.4, e132.5   <val?>
  val?            %132.7 = Force!<lazy>       !vL   %132.3, e132.5   <val?>
  val?            %132.8 = CallBuiltin        !v    identical(%132.6, %132.7, true, true, true, true, false, true) e132.5
  val?            %132.9 = PopContext         C     %132.8, %132.2   <lgl$->
  lgl$#-          %132.10 = IsType                   %132.9 isA lgl$-
  void                    Branch                   %132.10 -> BB134 (if true) | BB135 (if false)
BB133   <- [69]
  void                    Nop                !     
  val?^ | miss    %133.1 = %69.0
  dr              %133.2 = CallTarget@0x55de2b5dbd60[Call#2]
  goto BB66
BB134   <- [132]
  lgl$-           %134.0 = CastType           d     dn %132.9
  lgl$#-          %134.1 = CheckTrueFalse     e     %134.0
  void                    Branch                   %134.1 -> BB73 (if true) | BB72 (if false)
BB135   <- [132]
  fs              %135.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  fs              %135.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e118.0, next=%135.0
  fs              %135.2 = FrameState         R     0x55de2bbfb610+312: [%132.9], env=e118.8, next=%135.1
  void                    Deopt              !v    %135.2, Typecheck@0x55de2b5dbd60[Type#13], %132.9   !
BB73   <- [134]
  val?^ | miss    %73.0 = LdVar              eR    fdef, e118.8
  val?            %73.1 = Force!<value>      !v    %73.0, e118.8   <cls>
  val?            %73.2 = PopContext         C     %73.1, %118.4   <cls>
  val?            %73.3 = PopContext         C     %73.2, %116.2   <cls>
  void                    StVar              lW    value, %73.3, e82.0
  goto BB19
BB72   <- [134]
  fs              %72.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e82.0
  fs              %72.1 = FrameState         R     0x55de2b0b39a0+42: [], env=e118.0, next=%72.0
  (cls|spec|blt)  %72.2 = LdFun              !v    @, e118.8
  fs              %72.3 = FrameState         R     0x55de2bbfb610+348: [%72.2], env=e118.8, next=%72.1
  void                    Deopt              !v    %72.3, DeadCall@0x55de2b5dbd60[Call#3], %72.2   !
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ getGeneric[0x55de2a76d1e0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
