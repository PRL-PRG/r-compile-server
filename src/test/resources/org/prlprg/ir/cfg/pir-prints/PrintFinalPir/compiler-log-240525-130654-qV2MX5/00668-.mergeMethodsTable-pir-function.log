
┌──────────────────────────────────────────────────────────────────────────────┐
│ .mergeMethodsTable[0x55de2af15900]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
.mergeMethodsTable[0x55de2af15900]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    environment, <env 0x55de28b56378>
  lgl$#-          %0.5  = Identical                %0.4, function(fun=NULL) <(rir::DispatchTable*)0x55d|...
  void                    Branch                   %0.5 -> BB155 (if true) | BB156 (if false)
BB155   <- [0]
  env             e155.0 = MkEnv              l     generic=%0.3, table=%0.2, newtable=%0.1, add=%0.0, parent=<env 0x55de28b56378>, context 1
  val?            %155.1 = Force!<lazy>       !vr   %0.3,    <cls>
  prom-           %155.2 = MkArg                    %155.1, .mergeMethodsTable[0x55de2af15900]_p0 (!refl), 
  val?            %155.3 = StaticCall         !v    environment[0x55de2af3dca0](%155.2) e155.0   <env->
  void                    StVar              lW    fenv, %155.3, e155.0
  val?^ | miss    %155.5 = LdVar              eR    exists, e155.0
  lgl$#-          %155.6 = Identical                %155.5, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %155.6 -> BB157 (if true) | BB158 (if false)
BB156   <- [0]
  env             e156.0 = (MkEnv)            l     generic=%0.3, table=%0.2, newtable=%0.1, add=%0.0, parent=<env 0x55de28b56378>, context 1
  fs              %156.1 = FrameState         R     0x55de286ab8f0+0: [], env=e156.0
  void                    Deopt              !v    %156.1, CallTarget@0x55de2b69a940[Call#0], %0.4
BB157   <- [155]
  prom-           %157.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p1 (!refl), e155.0
  val?            %157.1 = StaticCall         !v    exists[0x55de2abea4f0](".SigLength", missingArg, %157.0, missingArg, missingArg, false) { 0 2n 5n } e155.0   <lgl$->
  lgl$#-          %157.2 = IsType                   %157.1 isA lgl$-
  void                    Branch                   %157.2 -> BB159 (if true) | BB160 (if false)
BB158   <- [155]
  fs              %158.0 = FrameState         R     0x55de286ab8f0+46: [], env=e155.0
  void                    Deopt              !v    %158.0, CallTarget@0x55de2b69a940[Call#1], %155.5   !
BB159   <- [157]
  lgl$-           %159.0 = CastType           d     dn %157.1
  lgl$-           %159.1 = Not                d     %159.0, elided
  lgl$#-          %159.2 = CheckTrueFalse     e     %159.1
  void                    Branch                   %159.2 -> BB153 (if true) | BB7 (if false)
BB160   <- [157]
  fs              %160.0 = FrameState         R     0x55de286ab8f0+100: [%157.1], env=e155.0
  void                    Deopt              !v    %160.0, Typecheck@0x55de2b69a940[Type#3], %157.1   !
BB153   <- [159]
  (cls|spec|blt)  %153.0 = LdFun              !v    .setupMethodsTables, e155.0
  fs              %153.1 = FrameState         R     0x55de286ab8f0+122: [%153.0], env=e155.0
  void                    Deopt              !v    %153.1, DeadCall@0x55de2b69a940[Call#2], %153.0   !
BB7   <- [159]
  val?^ | miss    %7.0  = LdVar              eR    add, e155.0
  val?            %7.1  = Force!<lazy>       !v    %7.0, e155.0   <lgl$->
  lgl$#-          %7.2  = IsType                   %7.1 isA lgl$-
  void                    Branch                   %7.2 -> BB161 (if true) | BB162 (if false)
BB161   <- [7]
  lgl$-           %161.0 = CastType           d     dn %7.1
  lgl$-           %161.1 = Not                d     %161.0, elided
  lgl$#-          %161.2 = CheckTrueFalse     e     %161.1
  void                    Branch                   %161.2 -> BB152 (if true) | BB10 (if false)
BB162   <- [7]
  fs              %162.0 = FrameState         R     0x55de286ab8f0+159: [%7.1], env=e155.0
  void                    Deopt              !v    %162.0, Typecheck@0x55de2b69a940[Type#5], %7.1   !
BB152   <- [161]
  (cls|spec|blt)  %152.0 = LdFun              !v    get, e155.0
  fs              %152.1 = FrameState         R     0x55de286ab8f0+187: [%152.0], env=e155.0
  void                    Deopt              !v    %152.1, DeadCall@0x55de2b69a940[Call#3], %152.0   !
BB10   <- [161]
  void                    StVar              lW    allTable, nil, e155.0
  val?^ | miss    %10.1 = LdVar              eR    get, e155.0
  lgl$#-          %10.2 = Identical                %10.1, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %10.2 -> BB163 (if true) | BB164 (if false)
BB163   <- [10]
  prom-           %163.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p2, e155.0
  val?            %163.1 = StaticCall         !v    get[0x55de2b226940](".SigLength", missingArg, %163.0) { 0 2n } e155.0   <(int|real)$->
  void                    StVar              lW    n, %163.1, e155.0
  (cls|spec|blt)  %163.3 = LdFun              !v    rep, <0x55de285639b0>, e155.0
  prom-           %163.4 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p3, e155.0
  val?            %163.5 = Call               !v    %163.3("ANY", %163.4) e155.0   <str->
  void                    StVar              lW    anySig, %163.5, e155.0
  val?^ | miss    %163.7 = LdVar              eR    names, e155.0
  lgl$#-          %163.8 = Identical                <blt names>, %163.7   <true>
  void                    Branch                   %163.8 -> BB165 (if true) | BB166 (if false)
BB164   <- [10]
  fs              %164.0 = FrameState         R     0x55de286ab8f0+241: [], env=e155.0
  void                    Deopt              !v    %164.0, CallTarget@0x55de2b69a940[Call#4], %10.1   !
BB165   <- [163]
  val?^ | miss    %165.0 = LdVar              eR    newtable, e155.0
  val?            %165.1 = Force!<lazy>       !v    %165.0, e155.0   <env->
  lgl$#-          %165.2 = IsType                   %165.1 isA val?-
  void                    Branch                   %165.2 -> BB167 (if true) | BB168 (if false)
BB166   <- [163]
  fs              %166.0 = FrameState         R     0x55de286ab8f0+351: [], env=e155.0
  void                    Deopt              !v    %166.0, DeadBranchReached@0x55de2b69a940[Test#0], %163.8   !
BB167   <- [165]
  val?-           %167.0 = CastType           d     dn %165.1   <env->
  val+            %167.1 = CallSafeBuiltin    wed   names(%167.0)    <str->
  int$-           %167.2 = Length                   %167.1
  void                    StVar              lW    newMethods, %167.1, e155.0
  int$-           %167.4 = Inc                      0L
  lgl$-           %167.5 = Lt                 d     %167.2, %167.4, elided   <false>
  lgl$#-          %167.6 = Identical                %167.5, true
  void                    Branch                   %167.6 -> BB170 (if true) | BB169 (if false)
BB168   <- [165]
  fs              %168.0 = FrameState         R     0x55de286ab8f0+420: [<blt names>, %165.1], env=e155.0
  void                    Deopt              !v    %168.0, Typecheck@0x55de2b69a940[Type#13], %165.1   !
BB170   <- [167]
  fs              %170.0 = FrameState         R     0x55de286ab8f0+456: [], env=e155.0
  void                    Deopt              !v    %170.0, DeadBranchReached@0x55de2b69a940[Test#1], %167.6   !
BB169   <- [167]
  val?            %169.0 = Extract2_1D        wed   %167.1, %167.4, elided
  void                    StVar              lW    what, %169.0, e155.0
  val?^ | miss    %169.2 = LdVar              eR    newtable, e155.0
  val?            %169.3 = Force!<wrapped>    !v    %169.2, e155.0   <env->
  lgl$#-          %169.4 = IsType                   %169.3 isA val+   <true>
  lgl$#-          %169.5 = IsType                   %169.3 isA val?-
  void                    Branch                   %169.4 -> BB171 (if true) | BB172 (if false)
BB171   <- [169]
  val?^ | miss    %171.0 = LdVar              eR    what, e155.0
  lgl$#-          %171.1 = IsType                   %171.0 isA val?~- | miss
  void                    Branch                   %171.1 -> BB173 (if true) | BB174 (if false)
BB172   <- [169]
  void                    Nop                !     
  lgl$#-          %172.1 = %169.4
  dr              %172.2 = DeadBranchReached@0x55de2b69a940[Test#2]
  goto BB19
BB173   <- [171]
  val?~- | miss   %173.0 = CastType           d     dn %171.0
  val?-           %173.1 = Force!<value>            %173.0,    <str$->
  void                    Branch                   %169.5 -> BB175 (if true) | BB176 (if false)
BB174   <- [171]
  void                    Nop                !     
  val?^ | miss    %174.1 = %171.0
  dr              %174.2 = Typecheck@0x55de2b69a940[Type#18]
  goto BB19
BB19   <- [172, 174, 176]
  val?^ | miss    %19.0 = Phi                      %172.1:BB172, %174.1:BB174, %176.1:BB176
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %172.2:BB172, %174.2:BB174, %176.2:BB176
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55de286ab8f0+519: [%167.1, %167.2, %167.4, %169.3], env=e155.0
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB175   <- [173]
  val?-           %175.0 = CastType           d     dn %169.3   <env->
  val?            %175.1 = Extract2_1D        wed   %175.0, %173.1, elided   <cls>
  void                    StVar              lW    obj, %175.1, e155.0
  val?^ | miss    %175.3 = LdVar              eR    is.primitive, e155.0
  lgl$#-          %175.4 = Identical                %175.3, function(x) <(rir::DispatchTable*)0x55de2ac9a9|...
  void                    Branch                   %175.4 -> BB177 (if true) | BB178 (if false)
BB176   <- [173]
  void                    Nop                !     
  val?            %176.1 = %169.3
  dr              %176.2 = Typecheck@0x55de2b69a940[Type#16]
  goto BB19
BB177   <- [175]
  val             %177.0 = ChkMissing         e     %175.1
  str$-           %177.1 = CallSafeBuiltin    wed   typeof(%175.1)    <str$->
  int$-           %177.2 = Length                   %177.1
  lgl$-           %177.3 = Eq                 d     %177.2, 1L, elided   <true>
  lgl$#-          %177.4 = Identical                %177.3, true
  void                    Branch                   %177.4 -> BB179 (if true) | BB180 (if false)
BB178   <- [175]
  fs              %178.0 = FrameState         R     0x55de286ab8f0+585: [%167.1, %167.2, %167.4], env=e155.0
  void                    Deopt              !v    %178.0, CallTarget@0x55de2b69a940[Call#7], %175.3   !
BB179   <- [177]
  lgl$-           %179.0 = CallSafeBuiltin    wed   is.na(%177.1) 
  lgl$#-          %179.1 = CheckTrueFalse     e     %179.0   <false>
  void                    Branch                   %179.1 -> BB182 (if true) | BB181 (if false)
BB180   <- [177]
  prom-           %180.0 = MkArg                    %175.1, .mergeMethodsTable[0x55de2af15900]_p4 (!refl), e155.0
  val?~           %180.1 = CastType                 up %180.0
  env             e180.2 = (MkEnv)            l     x=%180.1, parent=R_BaseNamespace, context 0
  env             e180.3 = MaterializeEnv           , e180.2   <@?>
  prom-           %180.4 = MkArg                    %175.1, .mergeMethodsTable[0x55de2af15900]_p29 (!refl), e180.3
  val?~           %180.5 = CastType                 up %180.4
  fs              %180.6 = FrameState         R     0x55de286ab8f0+617: [%167.1, %167.2, %167.4], env=e155.0
  fs              %180.7 = FrameState         R     0x55de2c9144e0+32: [], env=e180.3, next=%180.6
  env             e180.8 = (MkEnv)            l     x=%180.5, parent=R_BaseNamespace, context -1
  fs              %180.9 = FrameState         R     0x55de2a4e4290+27: [%177.1], env=e180.8, next=%180.7
  void                    Deopt              !v    %180.9, DeadBranchReached@0x55de2ccbb258[Test#1], %177.4   !
BB182   <- [179]
  void                    Nop                !     
  lgl$#-          %182.1 = %179.1
  dr              %182.2 = DeadBranchReached@0x55de2ccbb258[Test#7]
  goto BB25
BB181   <- [179]
  lgl$-           %181.0 = Eq                 d     %177.1, special, elided
  lgl$#-          %181.1 = CheckTrueFalse     e     %181.0
  void                    Branch                   %181.1 -> BB151 (if true) | BB27 (if false)
BB25   <- [182, 184]
  val?^ | miss    %25.0 = Phi                      %182.1:BB182, %184.1:BB184
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %182.2:BB182, %184.2:BB184
  dr              %25.3 = %25.2
  prom-           %25.4 = MkArg                    %175.1, .mergeMethodsTable[0x55de2af15900]_p4 (!refl), e155.0
  val?~           %25.5 = CastType                 up %25.4
  fs              %25.6 = FrameState         R     0x55de286ab8f0+617: [%167.1, %167.2, %167.4], env=e155.0
  env             e25.7 = (MkEnv)            l     x=%25.5, parent=R_BaseNamespace, context 0
  fs              %25.8 = FrameState         R     0x55de2c9144e0+240: [%177.1, %179.0], env=e25.7, next=%25.6
  void                    Deopt              !v    %25.8, %25.3, %25.1   !
BB151   <- [181]
  void                    Nop                !     
  goto BB150
BB27   <- [181]
  lgl$-           %27.0 = Eq                 d     %177.1, builtin, elided
  lgl$#-          %27.1 = CheckTrueFalse     e     %27.0
  void                    Branch                   %27.1 -> BB149 (if true) | BB28 (if false)
BB150   <- [151, 149]
  void                    Nop                !     
  lgl$#-          %150.1 = true
  goto BB29
BB149   <- [27]
  void                    Nop                !     
  goto BB150
BB28   <- [27]
  void                    Nop                !     
  lgl$#-          %28.1 = false
  goto BB29
BB29   <- [28, 150]
  lgl$#-          %29.0 = Phi                      %28.1:BB28, %150.1:BB150
  lgl$#-          %29.1 = %29.0
  void                    Branch                   %29.1 -> BB148 (if true) | BB30 (if false)
BB148   <- [29]
  val?^ | miss    %148.0 = LdVar              eR    anySig, e155.0
  val?            %148.1 = Force!             !v    %148.0, e155.0   <val?_>
  void                    StVar              lW    sig, %148.1, e155.0
  val?            %148.3 = %148.1
  goto BB39
BB30   <- [29]
  val?^ | miss    %30.0 = LdVar              eR    is, e155.0
  lgl$#-          %30.1 = Identical                %30.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %30.1 -> BB183 (if true) | BB184 (if false)
BB39   <- [148, 38]
  val?            %39.0 = Phi                      %148.3:BB148, %38.5:BB38
  val?            %39.1 = %39.0
  val?^ | miss    %39.2 = LdVar              eR    length, e155.0
  lgl$#-          %39.3 = Identical                <blt length>, %39.2   <true>
  void                    Branch                   %39.3 -> BB185 (if true) | BB186 (if false)
BB183   <- [30]
  prom-           %183.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p5 (!refl), e155.0
  val?            %183.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%183.0, "MethodDefinition") e155.0   <lgl$->
  lgl$#-          %183.2 = IsType                   %183.1 isA lgl$-
  void                    Branch                   %183.2 -> BB187 (if true) | BB188 (if false)
BB184   <- [30]
  void                    Nop                !     
  val?^ | miss    %184.1 = %30.0
  dr              %184.2 = CallTarget@0x55de2b69a940[Call#8]
  goto BB25
BB185   <- [39]
  val             %185.0 = ChkMissing         e     %39.1   <str>
  val?            %185.1 = CallBuiltin        !v    length(%185.0) e155.0   <int$->
  lgl$#-          %185.2 = IsType                   %185.1 isA int$-
  void                    Branch                   %185.2 -> BB189 (if true) | BB190 (if false)
BB186   <- [39]
  fs              %186.0 = FrameState         R     0x55de286ab8f0+1352: [%167.1, %167.2, %167.4], env=e155.0
  void                    Deopt              !v    %186.0, DeadBranchReached@0x55de2b69a940[Test#7], %39.3   !
BB187   <- [183]
  lgl$-           %187.0 = CastType           d     dn %183.1
  lgl$#-          %187.1 = CheckTrueFalse     e     %187.0
  void                    Branch                   %187.1 -> BB38 (if true) | BB33 (if false)
BB188   <- [183]
  fs              %188.0 = FrameState         R     0x55de286ab8f0+665: [%167.1, %167.2, %167.4, %183.1], env=e155.0
  void                    Deopt              !v    %188.0, Typecheck@0x55de2b69a940[Type#23], %183.1   !
BB189   <- [185]
  int$-           %189.0 = CastType           d     dn %185.1
  void                    StVar              lW    ns, %189.0, e155.0
  val?^ | miss    %189.2 = LdVar              eR    n, e155.0
  lgl$#-          %189.3 = IsType                   %189.2 isA val?~- | miss
  void                    Branch                   %189.3 -> BB191 (if true) | BB192 (if false)
BB190   <- [185]
  fs              %190.0 = FrameState         R     0x55de286ab8f0+1443: [%167.1, %167.2, %167.4, %185.1], env=e155.0
  void                    Deopt              !v    %190.0, Typecheck@0x55de2b69a940[Type#73], %185.1   !
BB38   <- [187]
  (cls|spec|blt)  %38.0 = LdFun              !v    @, <0x55de2854ebd8>, e155.0
  prom-           %38.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p6, e155.0
  prom-           %38.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p7, e155.0
  val?            %38.3 = Call               !v    %38.0(%38.1, %38.2) e155.0   <str>
  void                    StVar              lW    sig, %38.3, e155.0
  val?            %38.5 = %38.3
  goto BB39
BB33   <- [187]
  val?^ | miss    %33.0 = LdVar              eR    is.environment, e155.0
  lgl$#-          %33.1 = Identical                <blt is.environment>, %33.0   <@?>
  void                    Branch                   %33.1 -> BB35 (if true) | BB34 (if false)
BB191   <- [189]
  val?~- | miss   %191.0 = CastType           d     dn %189.2
  val?-           %191.1 = Force!<value>            %191.0,    <(int|real)$->
  lgl-            %191.2 = Eq                 wed   %189.0, %191.1, elided   <lgl$->
  lgl$#-          %191.3 = IsType                   %191.2 isA lgl$-
  void                    Branch                   %191.3 -> BB193 (if true) | BB194 (if false)
BB192   <- [189]
  fs              %192.0 = FrameState         R     0x55de286ab8f0+1457: [%167.1, %167.2, %167.4], env=e155.0
  void                    Deopt              !v    %192.0, Typecheck@0x55de2b69a940[Type#75], %189.2   !
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    obj, e155.0
  val?            %35.1 = Force!             !v    %35.0, e155.0   <val?_>
  lgl$#-          %35.2 = CallSafeBuiltin    wed   is.environment(%35.1)    <val?_>
  void                    Branch                   %35.2 -> BB37 (if true) | BB36 (if false)
BB34   <- [33]
  (cls|spec|blt)  %34.0 = LdFun              !v    is.environment, e155.0
  fs              %34.1 = FrameState         R     0x55de286ab8f0+704: [%167.1, %167.2, %167.4, %34.0], env=e155.0
  void                    Deopt              !v    %34.1, DeadCall@0x55de2b69a940[Call#9], %34.0   !
BB193   <- [191]
  lgl$-           %193.0 = CastType           d     dn %191.2
  lgl$#-          %193.1 = CheckTrueFalse     e     %193.0
  void                    Branch                   %193.1 -> BB147 (if true) | BB48 (if false)
BB194   <- [191]
  void                    Nop                !     
  lgl-            %194.1 = %191.2
  dr              %194.2 = Typecheck@0x55de2b69a940[Type#76]
  goto BB46
BB37   <- [35]
  (cls|spec|blt)  %37.0 = LdFun              !v    as.list, e155.0
  fs              %37.1 = FrameState         R     0x55de286ab8f0+834: [%167.1, %167.2, %167.4, %37.0], env=e155.0
  void                    Deopt              !v    %37.1, DeadCall@0x55de2b69a940[Call#17], %37.0   !
BB36   <- [35]
  (cls|spec|blt)  %36.0 = LdFun              !v    stop, e155.0
  fs              %36.1 = FrameState         R     0x55de286ab8f0+783: [%167.1, %167.2, %167.4, %36.0], env=e155.0
  void                    Deopt              !v    %36.1, DeadCall@0x55de2b69a940[Call#10], %36.0   !
BB147   <- [193]
  void                    Nop                !     
  goto BB52
BB48   <- [193]
  lgl$#-          %48.0 = IsType                   %191.0 isA real$-
  void                    Branch                   %48.0 -> BB195 (if true) | BB196 (if false)
BB46   <- [194, 196]
  val?^ | miss    %46.0 = Phi                      %194.1:BB194, %196.1:BB196
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %194.2:BB194, %196.2:BB196
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x55de286ab8f0+1486: [%167.1, %167.2, %167.4, %191.2], env=e155.0
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
BB52   <- [147, 51]
  val?^ | miss    %52.0 = LdVar              eR    add, e155.0
  val?            %52.1 = Force!<wrapped>    !v    %52.0, e155.0   <lgl$->
  lgl$#-          %52.2 = CheckTrueFalse     we    %52.1
  void                    Branch                   %52.2 -> BB56 (if true) | BB55 (if false)
BB195   <- [48]
  real$-          %195.0 = CastType           d     dn %191.0
  lgl$-           %195.1 = Lt                 d     %189.0, %195.0, elided   <lgl$->
  lgl$#-          %195.2 = CheckTrueFalse     e     %195.1
  void                    Branch                   %195.2 -> BB146 (if true) | BB49 (if false)
BB196   <- [48]
  void                    Nop                !     
  val?~- | miss   %196.1 = %191.0
  dr              %196.2 = Typecheck@0x55de2b69a940[Type#78]
  goto BB46
BB56   <- [52]
  val?^ | miss    %56.0 = LdVar              eR    exists, e155.0
  lgl$#-          %56.1 = Identical                %56.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %56.1 -> BB197 (if true) | BB198 (if false)
BB55   <- [52]
  (cls|spec|blt)  %55.0 = LdFun              !v    exists, e155.0
  fs              %55.1 = FrameState         R     0x55de286ab8f0+2396: [%167.1, %167.2, %167.4, %55.0], env=e155.0
  void                    Deopt              !v    %55.1, DeadCall@0x55de2b69a940[Call#49], %55.0   !
BB146   <- [195]
  real$-          %146.0 = Sub                d     %195.0, %189.0, elided   <val?_>
  void                    StVar              lW    nadd, %146.0, e155.0
  (cls|spec|blt)  %146.2 = LdFun              !v    packageSlot, e155.0
  fs              %146.3 = FrameState         R     0x55de286ab8f0+1858: [%167.1, %167.2, %167.4, %146.2], env=e155.0
  void                    Deopt              !v    %146.3, DeadCall@0x55de2b69a940[Call#34], %146.2   !
BB49   <- [195]
  val?^ | miss    %49.0 = LdVar              eR    add, e155.0
  val?            %49.1 = Force!<wrapped>    !v    %49.0, e155.0   <lgl$->
  lgl$#-          %49.2 = CheckTrueFalse     we    %49.1
  void                    Branch                   %49.2 -> BB137 (if true) | BB50 (if false)
BB197   <- [56]
  prom-           %197.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p8, e155.0
  prom-           %197.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p9, e155.0
  val?            %197.2 = StaticCall         !v    exists[0x55de2b55fb60](%197.0, missingArg, %197.1, missingArg, missingArg, false) { 0 2n 5n } e155.0   <lgl$->
  lgl$#-          %197.3 = IsType                   %197.2 isA lgl$-
  void                    Branch                   %197.3 -> BB205 (if true) | BB206 (if false)
BB198   <- [56]
  fs              %198.0 = FrameState         R     0x55de286ab8f0+2386: [%167.1, %167.2, %167.4, %52.2], env=e155.0
  void                    Deopt              !v    %198.0, CallTarget@0x55de2b69a940[Call#55], %56.0   !
BB137   <- [49]
  (cls|spec|blt)  %137.0 = LdFun              !v    @, <0x55de2854ebd8>, e155.0
  prom-           %137.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p23, e155.0
  prom-           %137.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p24, e155.0
  val?            %137.3 = Call               !v    %137.0(%137.1, %137.2) e155.0   <str->
  void                    StVar              lW    signames, %137.3, e155.0
  val?^ | miss    %137.5 = LdVar              eR    ns, e155.0
  lgl$#-          %137.6 = IsType                   %137.5 isA int$-
  void                    Branch                   %137.6 -> BB199 (if true) | BB200 (if false)
BB50   <- [49]
  void                    Nop                !     
  goto BB51
BB205   <- [197]
  lgl$-           %205.0 = CastType           d     dn %197.2
  lgl$#-          %205.1 = CheckTrueFalse     e     %205.0
  void                    Branch                   %205.1 -> BB129 (if true) | BB59 (if false)
BB206   <- [197]
  void                    Nop                !     
  val?            %206.1 = %197.2
  dr              %206.2 = Typecheck@0x55de2b69a940[Type#160]
  goto BB57
BB199   <- [137]
  int$-           %199.0 = CastType           d     dn %137.5
  (cls|spec|blt)  %199.1 = LdFun              !v    length<-, <0x55de2854f9e8>, e155.0
  val?^ | miss    %199.2 = LdVar              eR    signames, e155.0
  lgl$#-          %199.3 = IsType                   %199.2 isA val?~- | miss
  void                    Branch                   %199.3 -> BB201 (if true) | BB202 (if false)
BB200   <- [137]
  fs              %200.0 = FrameState         R     0x55de286ab8f0+1613: [%167.1, %167.2, %167.4], env=e155.0
  void                    Deopt              !v    %200.0, Typecheck@0x55de2b69a940[Type#84], %137.5   !
BB51   <- [50, 211]
  void                    Nop                !     
  goto BB52
BB129   <- [205]
  val?^ | miss    %129.0 = LdVar              eR    .newOrMultipleMethod, e155.0
  lgl$#-          %129.1 = Identical                %129.0, function(obj, what, table) <(rir::DispatchTabl|...
  void                    Branch                   %129.1 -> BB209 (if true) | BB210 (if false)
BB59   <- [205]
  void                    Nop                !     
  goto BB60
BB57   <- [206, 210]
  val?^ | miss    %57.0 = Phi                      %206.1:BB206, %210.1:BB210
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %206.2:BB206, %210.2:BB210
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x55de286ab8f0+2776: [%167.1, %167.2, %167.4, %197.2], env=e155.0
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB201   <- [199]
  val?~- | miss   %201.0 = CastType           d     dn %199.2
  val?-           %201.1 = Force!<value>            %201.0,    <str->
  val?            %201.2 = NamedCall          !v    %199.1(%201.1, value=%199.0) e155.0
  void                    StVar              lW    signames, %201.2, e155.0
  val?^ | miss    %201.4 = LdVar              eR    .resetTable, e155.0
  lgl$#-          %201.5 = Identical                %201.4, function(table, n, signames) <(rir::DispatchTa|...
  void                    Branch                   %201.5 -> BB203 (if true) | BB204 (if false)
BB202   <- [199]
  fs              %202.0 = FrameState         R     0x55de286ab8f0+1627: [%167.1, %167.2, %167.4, %199.0], env=e155.0
  void                    Deopt              !v    %202.0, Typecheck@0x55de2b69a940[Type#85], %199.2   !
BB209   <- [129]
  prom-           %209.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p19, e155.0
  prom-           %209.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p20, e155.0
  prom-           %209.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p21, e155.0
  val?            %209.3 = StaticCall         !v    .newOrMultipleMethod[0x55de2a6c9260](%209.0, %209.1, %209.2) e155.0   <cls>
  void                    StVar              lW    obj, %209.3, e155.0
  val?^ | miss    %209.5 = LdVar              eR    allTable, e155.0
  lgl$#-          %209.6 = IsType                   %209.5 isA val?~- | miss
  void                    Branch                   %209.6 -> BB213 (if true) | BB214 (if false)
BB210   <- [129]
  void                    Nop                !     
  val?^ | miss    %210.1 = %129.0
  dr              %210.2 = CallTarget@0x55de2b69a940[Call#56]
  goto BB57
BB60   <- [59, 229]
  val?^ | miss    %60.0 = LdVar              eR    obj, e155.0
  val?            %60.1 = Force!<value>      !v    %60.0, e155.0   <cls>
  val?^ | miss    %60.2 = LdVar              eR    table, e155.0
  val?            %60.3 = Force!<wrapped>    !v    %60.2, e155.0   <env->
  val?^ | miss    %60.4 = LdVar              eR    what, e155.0
  lgl$#-          %60.5 = IsType                   %60.4 isA val?~- | miss
  void                    Branch                   %60.5 -> BB215 (if true) | BB216 (if false)
BB203   <- [201]
  prom-           %203.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p26, e155.0
  prom-           %203.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p27, e155.0
  prom-           %203.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p28 (!refl), e155.0
  val?            %203.3 = Call               !v    function(table, n, signames) <(rir::DispatchTa|...(%203.0, %203.1, %203.2) e155.0
  val?^ | miss    %203.4 = LdVar              eR    ns, e155.0
  lgl$#-          %203.5 = IsType                   %203.4 isA int$-
  void                    Branch                   %203.5 -> BB207 (if true) | BB208 (if false)
BB204   <- [201]
  fs              %204.0 = FrameState         R     0x55de286ab8f0+1695: [%167.1, %167.2, %167.4], env=e155.0
  void                    Deopt              !v    %204.0, CallTarget@0x55de2b69a940[Call#33], %201.4   !
BB213   <- [209]
  val?~- | miss   %213.0 = CastType           d     dn %209.5
  val?-           %213.1 = Force!<value>            %213.0,    <nil->
  lgl$-           %213.2 = Is                       %213.1, NULL
  lgl$#-          %213.3 = CheckTrueFalse     e     %213.2
  void                    Branch                   %213.3 -> BB136 (if true) | BB132 (if false)
BB214   <- [209]
  void                    Nop                !     
  val?^ | miss    %214.1 = %209.5
  dr              %214.2 = Typecheck@0x55de2b69a940[Type#165]
  goto BB130
BB215   <- [60]
  val?~- | miss   %215.0 = CastType           d     dn %60.4
  val?-           %215.1 = Force!<value>            %215.0,    <str$->
  val?            %215.2 = Subassign2_1D      !v    %60.1, %60.3, %215.1, e155.0
  void                    StVar              lW    table, %215.2, e155.0
  int$-           %215.4 = %167.4
  goto BB63
BB216   <- [60]
  fs              %216.0 = FrameState         R     0x55de286ab8f0+3012: [%167.1, %167.2, %167.4, %60.1, %60.3], env=e155.0
  void                    Deopt              !v    %216.0, Typecheck@0x55de2b69a940[Type#173], %60.4   !
BB207   <- [203]
  int$-           %207.0 = CastType           d     dn %203.4
  val?^ | miss    %207.1 = LdVar              eR    fenv !upd, e155.0
  lgl$#-          %207.2 = IsType                   %207.1 isA val?~- | miss
  void                    Branch                   %207.2 -> BB211 (if true) | BB212 (if false)
BB208   <- [203]
  void                    Nop                !     
  val?^ | miss    %208.1 = %203.4
  dr              %208.2 = Typecheck@0x55de2b69a940[Type#89]
  goto BB144
BB136   <- [213]
  val?^ | miss    %136.0 = LdVar              eR    get, e155.0
  lgl$#-          %136.1 = Identical                %136.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %136.1 -> BB221 (if true) | BB222 (if false)
BB132   <- [213]
  void                    Nop                !     
  goto BB133
BB130   <- [214, 222]
  val?^ | miss    %130.0 = Phi                      %214.1:BB214, %222.1:BB222
  val?^ | miss    %130.1 = %130.0
  dr              %130.2 = Phi                      %214.2:BB214, %222.2:BB222
  dr              %130.3 = %130.2
  fs              %130.4 = FrameState         R     0x55de286ab8f0+2848: [%167.1, %167.2, %167.4], env=e155.0
  void                    Deopt              !v    %130.4, %130.3, %130.1   !
BB63   <- [215, 259]
  int$-           %63.0 = Phi                      %215.4:BB215, %259.4:BB259
  int$-           %63.1 = %63.0
  int$-           %63.2 = Inc                      %63.1
  lgl$-           %63.3 = Lt                 d     %167.2, %63.2, elided
  lgl$#-          %63.4 = Identical                %63.3, true
  void                    Branch                   %63.4 -> BB128 (if true) | BB64 (if false)
BB211   <- [207]
  val?~- | miss   %211.0 = CastType           d     dn %207.1
  val?-           %211.1 = Force!<value>            %211.0,    <env->
  val?+           %211.2 = Subassign2_1D      wed   %207.0, %211.1, ".SigLength", elided
  void                    StVar              lW    fenv, %211.2, e155.0
  void                    StVar              lW    n, %207.0, e155.0
  goto BB51
BB212   <- [207]
  void                    Nop                !     
  val?^ | miss    %212.1 = %207.1
  dr              %212.2 = Typecheck@0x55de2b69a940[Type#90]
  goto BB144
BB144   <- [208, 212]
  val?^ | miss    %144.0 = Phi                      %208.1:BB208, %212.1:BB212
  val?^ | miss    %144.1 = %144.0
  dr              %144.2 = Phi                      %208.2:BB208, %212.2:BB212
  dr              %144.3 = %144.2
  fs              %144.4 = FrameState         R     0x55de286ab8f0+1737: [%167.1, %167.2, %167.4, %203.3], env=e155.0
  void                    Deopt              !v    %144.4, %144.3, %144.1   !
BB221   <- [136]
  prom-           %221.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p22, e155.0
  val?            %221.1 = StaticCall         !v    get[0x55de2b226940](".AllMTable", missingArg, %221.0) { 0 2n } e155.0   <env->
  void                    StVar              lW    allTable, %221.1, e155.0
  goto BB133
BB222   <- [136]
  void                    Nop                !     
  val?^ | miss    %222.1 = %136.0
  dr              %222.2 = CallTarget@0x55de2b69a940[Call#57]
  goto BB130
BB133   <- [132, 221]
  val?^ | miss    %133.0 = LdVar              eR    obj, e155.0
  val?            %133.1 = Force!<value>      !v    %133.0, e155.0   <cls>
  val?^ | miss    %133.2 = LdVar              eR    allTable !upd, e155.0
  lgl$#-          %133.3 = IsType                   %133.2 isA val?~- | miss
  void                    Branch                   %133.3 -> BB225 (if true) | BB226 (if false)
BB128   <- [63]
  void                    Visible            v     
  void                    Return             l     nil
BB64   <- [63]
  val?            %64.0 = Extract2_1D        wed   %167.1, %63.2, elided
  void                    StVar              lW    what, %64.0, e155.0
  val?^ | miss    %64.2 = LdVar              eR    newtable, e155.0
  val?            %64.3 = Force!<wrapped>    !v    %64.2, e155.0   <env->
  lgl$#-          %64.4 = IsType                   %64.3 isA val+   <true>
  lgl$#-          %64.5 = IsType                   %64.3 isA val?-
  void                    Branch                   %64.4 -> BB217 (if true) | BB218 (if false)
BB225   <- [133]
  val?~- | miss   %225.0 = CastType           d     dn %133.2
  val?-           %225.1 = Force!<value>            %225.0,    <env->
  val?^ | miss    %225.2 = LdVar              eR    what, e155.0
  lgl$#-          %225.3 = IsType                   %225.2 isA val?~- | miss
  void                    Branch                   %225.3 -> BB229 (if true) | BB230 (if false)
BB226   <- [133]
  void                    Nop                !     
  val?^ | miss    %226.1 = %133.2
  dr              %226.2 = Typecheck@0x55de2b69a940[Type#169]
  goto BB134
BB217   <- [64]
  val?^ | miss    %217.0 = LdVar              eR    what, e155.0
  lgl$#-          %217.1 = IsType                   %217.0 isA val?~- | miss
  void                    Branch                   %217.1 -> BB219 (if true) | BB220 (if false)
BB218   <- [64]
  void                    Nop                !     
  lgl$#-          %218.1 = %64.4
  dr              %218.2 = DeadBranchReached@0x55de2b69a940[Test#12]
  goto BB65
BB229   <- [225]
  val?~- | miss   %229.0 = CastType           d     dn %225.2
  val?-           %229.1 = Force!<value>            %229.0,    <str$->
  val?            %229.2 = Subassign2_1D      !v    %133.1, %225.1, %229.1, e155.0
  void                    StVar              lW    allTable, %229.2, e155.0
  goto BB60
BB230   <- [225]
  void                    Nop                !     
  val?^ | miss    %230.1 = %225.2
  dr              %230.2 = Typecheck@0x55de2b69a940[Type#170]
  goto BB134
BB134   <- [226, 230]
  val?^ | miss    %134.0 = Phi                      %226.1:BB226, %230.1:BB230
  val?^ | miss    %134.1 = %134.0
  dr              %134.2 = Phi                      %226.2:BB226, %230.2:BB230
  dr              %134.3 = %134.2
  fs              %134.4 = FrameState         R     0x55de286ab8f0+2946: [%167.1, %167.2, %167.4, %133.1], env=e155.0
  void                    Deopt              !v    %134.4, %134.3, %134.1   !
BB219   <- [217]
  val?~- | miss   %219.0 = CastType           d     dn %217.0
  val?-           %219.1 = Force!<value>            %219.0,    <str$->
  void                    Branch                   %64.5 -> BB223 (if true) | BB224 (if false)
BB220   <- [217]
  void                    Nop                !     
  val?^ | miss    %220.1 = %217.0
  dr              %220.2 = Typecheck@0x55de2b69a940[Type#176]
  goto BB65
BB65   <- [218, 220, 224]
  val?^ | miss    %65.0 = Phi                      %218.1:BB218, %220.1:BB220, %224.1:BB224
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %218.2:BB218, %220.2:BB220, %224.2:BB224
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x55de286ab8f0+3079: [%167.1, %167.2, %63.2, %64.3], env=e155.0
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB223   <- [219]
  val?-           %223.0 = CastType           d     dn %64.3   <env->
  val?            %223.1 = Extract2_1D        wed   %223.0, %219.1, elided   <cls>
  void                    StVar              lW    obj, %223.1, e155.0
  val?^ | miss    %223.3 = LdVar              eR    is.primitive, e155.0
  lgl$#-          %223.4 = Identical                %223.3, function(x) <(rir::DispatchTable*)0x55de2ac9a9|...
  void                    Branch                   %223.4 -> BB227 (if true) | BB228 (if false)
BB224   <- [219]
  void                    Nop                !     
  val?            %224.1 = %64.3
  dr              %224.2 = Typecheck@0x55de2b69a940[Type#174]
  goto BB65
BB227   <- [223]
  val             %227.0 = ChkMissing         e     %223.1
  str$-           %227.1 = CallSafeBuiltin    wed   typeof(%223.1)    <str$->
  int$-           %227.2 = Length                   %227.1
  lgl$-           %227.3 = Eq                 d     %227.2, 1L, elided   <true>
  lgl$#-          %227.4 = Identical                %227.3, true
  void                    Branch                   %227.4 -> BB231 (if true) | BB232 (if false)
BB228   <- [223]
  fs              %228.0 = FrameState         R     0x55de286ab8f0+3145: [%167.1, %167.2, %63.2], env=e155.0
  void                    Deopt              !v    %228.0, CallTarget@0x55de2b69a940[Call#58], %223.3   !
BB231   <- [227]
  lgl$-           %231.0 = CallSafeBuiltin    wed   is.na(%227.1) 
  lgl$#-          %231.1 = CheckTrueFalse     e     %231.0   <false>
  void                    Branch                   %231.1 -> BB234 (if true) | BB233 (if false)
BB232   <- [227]
  prom-           %232.0 = MkArg                    %223.1, .mergeMethodsTable[0x55de2af15900]_p10 (!refl), e155.0
  val?~           %232.1 = CastType                 up %232.0
  env             e232.2 = MkEnv              l     x=%232.1, parent=R_BaseNamespace, context 0
  prom-           %232.3 = MkArg                    %223.1, .mergeMethodsTable[0x55de2af15900]_p30 (!refl), e232.2
  val?~           %232.4 = CastType                 up %232.3
  fs              %232.5 = FrameState         R     0x55de286ab8f0+3177: [%167.1, %167.2, %63.2], env=e155.0
  fs              %232.6 = FrameState         R     0x55de2c9144e0+32: [], env=e232.2, next=%232.5
  env             e232.7 = (MkEnv)            l     x=%232.4, parent=R_BaseNamespace, context -1
  fs              %232.8 = FrameState         R     0x55de2a4e4290+27: [%227.1], env=e232.7, next=%232.6
  void                    Deopt              !v    %232.8, DeadBranchReached@0x55de2ccbb258[Test#1], %227.4   !
BB234   <- [231]
  void                    Nop                !     
  lgl$#-          %234.1 = %231.1
  dr              %234.2 = DeadBranchReached@0x55de2ccbb258[Test#7]
  goto BB71
BB233   <- [231]
  lgl$-           %233.0 = Eq                 d     %227.1, special, elided
  lgl$#-          %233.1 = CheckTrueFalse     e     %233.0
  void                    Branch                   %233.1 -> BB127 (if true) | BB73 (if false)
BB71   <- [234, 236]
  val?^ | miss    %71.0 = Phi                      %234.1:BB234, %236.1:BB236
  val?^ | miss    %71.1 = %71.0
  dr              %71.2 = Phi                      %234.2:BB234, %236.2:BB236
  dr              %71.3 = %71.2
  prom-           %71.4 = MkArg                    %223.1, .mergeMethodsTable[0x55de2af15900]_p10 (!refl), e155.0
  val?~           %71.5 = CastType                 up %71.4
  fs              %71.6 = FrameState         R     0x55de286ab8f0+3177: [%167.1, %167.2, %63.2], env=e155.0
  env             e71.7 = (MkEnv)            l     x=%71.5, parent=R_BaseNamespace, context 0
  fs              %71.8 = FrameState         R     0x55de2c9144e0+240: [%227.1, %231.0], env=e71.7, next=%71.6
  void                    Deopt              !v    %71.8, %71.3, %71.1   !
BB127   <- [233]
  void                    Nop                !     
  goto BB126
BB73   <- [233]
  lgl$-           %73.0 = Eq                 d     %227.1, builtin, elided
  lgl$#-          %73.1 = CheckTrueFalse     e     %73.0
  void                    Branch                   %73.1 -> BB125 (if true) | BB74 (if false)
BB126   <- [127, 125]
  void                    Nop                !     
  lgl$#-          %126.1 = true
  goto BB75
BB125   <- [73]
  void                    Nop                !     
  goto BB126
BB74   <- [73]
  void                    Nop                !     
  lgl$#-          %74.1 = false
  goto BB75
BB75   <- [74, 126]
  lgl$#-          %75.0 = Phi                      %74.1:BB74, %126.1:BB126
  lgl$#-          %75.1 = %75.0
  void                    Branch                   %75.1 -> BB124 (if true) | BB76 (if false)
BB124   <- [75]
  val?^ | miss    %124.0 = LdVar              eR    anySig, e155.0
  val?            %124.1 = Force!             !v    %124.0, e155.0   <val?_>
  void                    StVar              lW    sig, %124.1, e155.0
  val?            %124.3 = %124.1
  goto BB85
BB76   <- [75]
  val?^ | miss    %76.0 = LdVar              eR    is, e155.0
  lgl$#-          %76.1 = Identical                %76.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %76.1 -> BB235 (if true) | BB236 (if false)
BB85   <- [124, 84]
  val?            %85.0 = Phi                      %124.3:BB124, %84.5:BB84
  val?            %85.1 = %85.0
  val?^ | miss    %85.2 = LdVar              eR    length, e155.0
  lgl$#-          %85.3 = Identical                <blt length>, %85.2   <true>
  void                    Branch                   %85.3 -> BB239 (if true) | BB240 (if false)
BB235   <- [76]
  prom-           %235.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p11 (!refl), e155.0
  val?            %235.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%235.0, "MethodDefinition") e155.0   <lgl$->
  lgl$#-          %235.2 = IsType                   %235.1 isA lgl$-
  void                    Branch                   %235.2 -> BB237 (if true) | BB238 (if false)
BB236   <- [76]
  void                    Nop                !     
  val?^ | miss    %236.1 = %76.0
  dr              %236.2 = CallTarget@0x55de2b69a940[Call#59]
  goto BB71
BB239   <- [85]
  val             %239.0 = ChkMissing         e     %85.1   <str>
  val?            %239.1 = CallBuiltin        !v    length(%239.0) e155.0   <int$->
  lgl$#-          %239.2 = IsType                   %239.1 isA int$-
  void                    Branch                   %239.2 -> BB241 (if true) | BB242 (if false)
BB240   <- [85]
  fs              %240.0 = FrameState         R     0x55de286ab8f0+3912: [%167.1, %167.2, %63.2], env=e155.0
  void                    Deopt              !v    %240.0, DeadBranchReached@0x55de2b69a940[Test#17], %85.3   !
BB237   <- [235]
  lgl$-           %237.0 = CastType           d     dn %235.1
  lgl$#-          %237.1 = CheckTrueFalse     e     %237.0
  void                    Branch                   %237.1 -> BB84 (if true) | BB79 (if false)
BB238   <- [235]
  fs              %238.0 = FrameState         R     0x55de286ab8f0+3225: [%167.1, %167.2, %63.2, %235.1], env=e155.0
  void                    Deopt              !v    %238.0, Typecheck@0x55de2b69a940[Type#181], %235.1   !
BB241   <- [239]
  int$-           %241.0 = CastType           d     dn %239.1
  void                    StVar              lW    ns, %241.0, e155.0
  val?^ | miss    %241.2 = LdVar              eR    n, e155.0
  lgl$#-          %241.3 = IsType                   %241.2 isA val?~- | miss
  void                    Branch                   %241.3 -> BB243 (if true) | BB244 (if false)
BB242   <- [239]
  fs              %242.0 = FrameState         R     0x55de286ab8f0+4003: [%167.1, %167.2, %63.2, %239.1], env=e155.0
  void                    Deopt              !v    %242.0, Typecheck@0x55de2b69a940[Type#231], %239.1   !
BB84   <- [237]
  (cls|spec|blt)  %84.0 = LdFun              !v    @, <0x55de2854ebd8>, e155.0
  prom-           %84.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p12, e155.0
  prom-           %84.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p13, e155.0
  val?            %84.3 = Call               !v    %84.0(%84.1, %84.2) e155.0   <str>
  void                    StVar              lW    sig, %84.3, e155.0
  val?            %84.5 = %84.3
  goto BB85
BB79   <- [237]
  val?^ | miss    %79.0 = LdVar              eR    is.environment, e155.0
  lgl$#-          %79.1 = Identical                <blt is.environment>, %79.0   <@?>
  void                    Branch                   %79.1 -> BB81 (if true) | BB80 (if false)
BB243   <- [241]
  val?~- | miss   %243.0 = CastType           d     dn %241.2
  val?-           %243.1 = Force!<value>            %243.0,    <(int|real)$->
  lgl-            %243.2 = Eq                 wed   %241.0, %243.1, elided   <lgl$->
  lgl$#-          %243.3 = IsType                   %243.2 isA lgl$-
  void                    Branch                   %243.3 -> BB245 (if true) | BB246 (if false)
BB244   <- [241]
  fs              %244.0 = FrameState         R     0x55de286ab8f0+4017: [%167.1, %167.2, %63.2], env=e155.0
  void                    Deopt              !v    %244.0, Typecheck@0x55de2b69a940[Type#233], %241.2   !
BB81   <- [79]
  val?^ | miss    %81.0 = LdVar              eR    obj, e155.0
  val?            %81.1 = Force!             !v    %81.0, e155.0   <val?_>
  lgl$#-          %81.2 = CallSafeBuiltin    wed   is.environment(%81.1)    <val?_>
  void                    Branch                   %81.2 -> BB83 (if true) | BB82 (if false)
BB80   <- [79]
  (cls|spec|blt)  %80.0 = LdFun              !v    is.environment, e155.0
  fs              %80.1 = FrameState         R     0x55de286ab8f0+3264: [%167.1, %167.2, %63.2, %80.0], env=e155.0
  void                    Deopt              !v    %80.1, DeadCall@0x55de2b69a940[Call#60], %80.0   !
BB245   <- [243]
  lgl$-           %245.0 = CastType           d     dn %243.2
  lgl$#-          %245.1 = CheckTrueFalse     e     %245.0
  void                    Branch                   %245.1 -> BB123 (if true) | BB94 (if false)
BB246   <- [243]
  fs              %246.0 = FrameState         R     0x55de286ab8f0+4046: [%167.1, %167.2, %63.2, %243.2], env=e155.0
  void                    Deopt              !v    %246.0, Typecheck@0x55de2b69a940[Type#234], %243.2   !
BB83   <- [81]
  (cls|spec|blt)  %83.0 = LdFun              !v    as.list, e155.0
  fs              %83.1 = FrameState         R     0x55de286ab8f0+3394: [%167.1, %167.2, %63.2, %83.0], env=e155.0
  void                    Deopt              !v    %83.1, DeadCall@0x55de2b69a940[Call#68], %83.0   !
BB82   <- [81]
  (cls|spec|blt)  %82.0 = LdFun              !v    stop, e155.0
  fs              %82.1 = FrameState         R     0x55de286ab8f0+3343: [%167.1, %167.2, %63.2, %82.0], env=e155.0
  void                    Deopt              !v    %82.1, DeadCall@0x55de2b69a940[Call#61], %82.0   !
BB123   <- [245]
  void                    Nop                !     
  goto BB97
BB94   <- [245]
  lgl-            %94.0 = Lt                 wed   %241.0, %243.1, elided   <val?_>
  lgl$#-          %94.1 = CheckTrueFalse     we    %94.0
  void                    Branch                   %94.1 -> BB122 (if true) | BB95 (if false)
BB97   <- [123, 96]
  val?^ | miss    %97.0 = LdVar              eR    add, e155.0
  val?            %97.1 = Force!<wrapped>    !v    %97.0, e155.0   <lgl$->
  lgl$#-          %97.2 = CheckTrueFalse     we    %97.1
  void                    Branch                   %97.2 -> BB101 (if true) | BB100 (if false)
BB122   <- [94]
  (int|real|complex)- %122.0 = Sub                wed   %243.1, %241.0, elided   <val?_>
  void                    StVar              lW    nadd, %122.0, e155.0
  (cls|spec|blt)  %122.2 = LdFun              !v    packageSlot, e155.0
  fs              %122.3 = FrameState         R     0x55de286ab8f0+4418: [%167.1, %167.2, %63.2, %122.2], env=e155.0
  void                    Deopt              !v    %122.3, DeadCall@0x55de2b69a940[Call#85], %122.2   !
BB95   <- [94]
  val?^ | miss    %95.0 = LdVar              eR    add, e155.0
  val?            %95.1 = Force!             !v    %95.0, e155.0   <val?_>
  lgl$#-          %95.2 = CheckTrueFalse     we    %95.1
  void                    Branch                   %95.2 -> BB121 (if true) | BB96 (if false)
BB101   <- [97]
  val?^ | miss    %101.0 = LdVar              eR    exists, e155.0
  lgl$#-          %101.1 = Identical                %101.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %101.1 -> BB247 (if true) | BB248 (if false)
BB100   <- [97]
  (cls|spec|blt)  %100.0 = LdFun              !v    exists, e155.0
  fs              %100.1 = FrameState         R     0x55de286ab8f0+4956: [%167.1, %167.2, %63.2, %100.0], env=e155.0
  void                    Deopt              !v    %100.1, DeadCall@0x55de2b69a940[Call#100], %100.0   !
BB121   <- [95]
  (cls|spec|blt)  %121.0 = LdFun              !v    @, e155.0
  fs              %121.1 = FrameState         R     0x55de286ab8f0+4127: [%167.1, %167.2, %63.2, %121.0], env=e155.0
  void                    Deopt              !v    %121.1, DeadCall@0x55de2b69a940[Call#82], %121.0   !
BB96   <- [95]
  void                    Nop                !     
  goto BB97
BB247   <- [101]
  prom-           %247.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p14, e155.0
  prom-           %247.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p15, e155.0
  val?            %247.2 = StaticCall         !v    exists[0x55de2b55fb60](%247.0, missingArg, %247.1, missingArg, missingArg, false) { 0 2n 5n } e155.0   <lgl$->
  lgl$#-          %247.3 = IsType                   %247.2 isA lgl$-
  void                    Branch                   %247.3 -> BB249 (if true) | BB250 (if false)
BB248   <- [101]
  fs              %248.0 = FrameState         R     0x55de286ab8f0+4946: [%167.1, %167.2, %63.2, %97.2], env=e155.0
  void                    Deopt              !v    %248.0, CallTarget@0x55de2b69a940[Call#106], %101.0   !
BB249   <- [247]
  lgl$-           %249.0 = CastType           d     dn %247.2
  lgl$#-          %249.1 = CheckTrueFalse     e     %249.0
  void                    Branch                   %249.1 -> BB108 (if true) | BB104 (if false)
BB250   <- [247]
  void                    Nop                !     
  val?            %250.1 = %247.2
  dr              %250.2 = Typecheck@0x55de2b69a940[Type#318]
  goto BB102
BB108   <- [249]
  val?^ | miss    %108.0 = LdVar              eR    .newOrMultipleMethod, e155.0
  lgl$#-          %108.1 = Identical                %108.0, function(obj, what, table) <(rir::DispatchTabl|...
  void                    Branch                   %108.1 -> BB251 (if true) | BB252 (if false)
BB104   <- [249]
  void                    Nop                !     
  goto BB105
BB102   <- [250, 252]
  val?^ | miss    %102.0 = Phi                      %250.1:BB250, %252.1:BB252
  val?^ | miss    %102.1 = %102.0
  dr              %102.2 = Phi                      %250.2:BB250, %252.2:BB252
  dr              %102.3 = %102.2
  fs              %102.4 = FrameState         R     0x55de286ab8f0+5336: [%167.1, %167.2, %63.2, %247.2], env=e155.0
  void                    Deopt              !v    %102.4, %102.3, %102.1   !
BB251   <- [108]
  prom-           %251.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p16, e155.0
  prom-           %251.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p17, e155.0
  prom-           %251.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2af15900]_p18, e155.0
  ct              %251.3 = PushContext        lCL   %251.0, %251.1, %251.2, .newOrMultipleMethod(obj, what, table), function(obj, what, table) <(rir::DispatchTabl|..., e155.0
  val?^           %251.4 = CastType                 up %251.2
  val?^           %251.5 = CastType                 up %251.1
  val?^           %251.6 = CastType                 up %251.0
  val?^ | miss    %251.7 = LdVar              eRd   .duplicateClassesExist, <env 0x55de28b56378>
  lgl$#-          %251.8 = Identical                %251.7, function(on) <(rir::DispatchTable*)0x55de2cdf4|...
  void                    Branch                   %251.8 -> BB253 (if true) | BB254 (if false)
BB252   <- [108]
  void                    Nop                !     
  val?^ | miss    %252.1 = %108.0
  dr              %252.2 = CallTarget@0x55de2b69a940[Call#107]
  goto BB102
BB105   <- [104, 265]
  val?^ | miss    %105.0 = LdVar              eR    obj, e155.0
  val?            %105.1 = Force!<value>      !v    %105.0, e155.0   <cls>
  val?^ | miss    %105.2 = LdVar              eR    table, e155.0
  val?            %105.3 = Force!<value>      !v    %105.2, e155.0   <env->
  val?^ | miss    %105.4 = LdVar              eR    what, e155.0
  lgl$#-          %105.5 = IsType                   %105.4 isA val?~- | miss
  void                    Branch                   %105.5 -> BB259 (if true) | BB260 (if false)
BB253   <- [251]
  env             e253.0 = (MkEnv)            l     obj=%251.6, what=%251.5, table=%251.4, parent=<env 0x55de28b56378>, context 1
  val?            %253.1 = StaticCall         !v    .duplicateClassesExist[0x55de2d22ddd0]() e253.0   <lgl$->
  lgl$#-          %253.2 = IsType                   %253.1 isA lgl$-
  void                    Branch                   %253.2 -> BB255 (if true) | BB256 (if false)
BB254   <- [251]
  fs              %254.0 = FrameState         R     0x55de286ab8f0+5394: [%167.1, %167.2, %63.2], env=e155.0
  env             e254.1 = (MkEnv)            l     obj=%251.6, what=%251.5, table=%251.4, parent=<env 0x55de28b56378>, context 1
  fs              %254.2 = FrameState         R     0x55de2e14da90+0: [], env=e254.1, next=%254.0
  void                    Deopt              !v    %254.2, CallTarget@0x55de2ab46460[Call#0], %251.7   !
BB259   <- [105]
  val?~- | miss   %259.0 = CastType           d     dn %105.4
  val?-           %259.1 = Force!<value>            %259.0,    <str$->
  val?            %259.2 = Subassign2_1D      !v    %105.1, %105.3, %259.1, e155.0
  void                    StVar              lW    table, %259.2, e155.0
  int$-           %259.4 = %63.2
  goto BB63
BB260   <- [105]
  fs              %260.0 = FrameState         R     0x55de286ab8f0+5572: [%167.1, %167.2, %63.2, %105.1, %105.3], env=e155.0
  void                    Deopt              !v    %260.0, Typecheck@0x55de2b69a940[Type#331], %105.4   !
BB255   <- [253]
  lgl$-           %255.0 = CastType           d     dn %253.1
  lgl$#-          %255.1 = IsEnvStub          R     , e253.0
  void                    Branch                   %255.1 -> BB257 (if true) | BB258 (if false)
BB256   <- [253]
  void                    Nop                !     
  val?            %256.1 = %253.1
  dr              %256.2 = Typecheck@0x55de2ab46460[Type#0]
  goto BB111
BB257   <- [255]
  lgl$-           %257.0 = Not                d     %255.0, elided
  lgl$#-          %257.1 = CheckTrueFalse     e     %257.0
  void                    Branch                   %257.1 -> BB114 (if true) | BB113 (if false)
BB258   <- [255]
  void                    Nop                !     
  env             e258.1 = e253.0
  dr              %258.2 = EnvStubMaterialized@0x55de2ab46460[Call#unknown]
  goto BB111
BB111   <- [256, 258]
  val?^ | miss    %111.0 = Phi                      %256.1:BB256, e258.1:BB258
  val?^ | miss    %111.1 = %111.0
  dr              %111.2 = Phi                      %256.2:BB256, %258.2:BB258
  dr              %111.3 = %111.2
  fs              %111.4 = FrameState         R     0x55de286ab8f0+5394: [%167.1, %167.2, %63.2], env=e155.0
  fs              %111.5 = FrameState         R     0x55de2e14da90+27: [%253.1], env=e253.0, next=%111.4
  void                    Deopt              !v    %111.5, %111.3, %111.1   !
BB114   <- [257]
  val?^ | miss    %114.0 = LdVar              eRd   obj, e253.0
  val?            %114.1 = Force!<lazy>       !v    %114.0, e253.0   <cls>
  lgl$#-          %114.2 = IsEnvStub          R     , e253.0
  void                    Branch                   %114.2 -> BB261 (if true) | BB262 (if false)
BB113   <- [257]
  env             e113.0 = MaterializeEnv           , e253.0   <@?>
  (cls|spec|blt)  %113.1 = LdFun              !v    get, e113.0
  fs              %113.2 = FrameState         R     0x55de286ab8f0+5394: [%167.1, %167.2, %63.2], env=e155.0
  fs              %113.3 = FrameState         R     0x55de2e14da90+64: [%113.1], env=e113.0, next=%113.2
  void                    Deopt              !v    %113.3, DeadCall@0x55de2ab46460[Call#1], %113.1   !
BB261   <- [114]
  val?            %261.0 = PopContext         C     %114.1, %251.3   <cls>
  void                    StVar              lW    obj, %261.0, e155.0
  val?^ | miss    %261.2 = LdVar              eR    allTable, e155.0
  lgl$#-          %261.3 = IsType                   %261.2 isA val?~- | miss
  void                    Branch                   %261.3 -> BB263 (if true) | BB264 (if false)
BB262   <- [114]
  fs              %262.0 = FrameState         R     0x55de286ab8f0+5394: [%167.1, %167.2, %63.2], env=e155.0
  fs              %262.1 = FrameState         R     0x55de2e14da90+53: [%114.1], env=e253.0, next=%262.0
  void                    Deopt              !v    %262.1, EnvStubMaterialized@0x55de2ab46460[Call#unknown], e253.0   !
BB263   <- [261]
  val?~- | miss   %263.0 = CastType           d     dn %261.2
  val?-           %263.1 = Force!<value>            %263.0,    <env->
  lgl$-           %263.2 = Is                       %263.1, NULL
  lgl$#-          %263.3 = CheckTrueFalse     e     %263.2
  void                    Branch                   %263.3 -> BB120 (if true) | BB119 (if false)
BB264   <- [261]
  void                    Nop                !     
  val?^ | miss    %264.1 = %261.2
  dr              %264.2 = Typecheck@0x55de2b69a940[Type#323]
  goto BB117
BB120   <- [263]
  (cls|spec|blt)  %120.0 = LdFun              !v    get, e155.0
  fs              %120.1 = FrameState         R     0x55de286ab8f0+5443: [%167.1, %167.2, %63.2, %120.0], env=e155.0
  void                    Deopt              !v    %120.1, DeadCall@0x55de2b69a940[Call#108], %120.0   !
BB119   <- [263]
  val             %119.0 = ChkMissing         e     %261.0
  val?^ | miss    %119.1 = LdVar              eR    what, e155.0
  lgl$#-          %119.2 = IsType                   %119.1 isA val?~- | miss
  void                    Branch                   %119.2 -> BB265 (if true) | BB266 (if false)
BB117   <- [264, 266]
  val?^ | miss    %117.0 = Phi                      %264.1:BB264, %266.1:BB266
  val?^ | miss    %117.1 = %117.0
  dr              %117.2 = Phi                      %264.2:BB264, %266.2:BB266
  dr              %117.3 = %117.2
  fs              %117.4 = FrameState         R     0x55de286ab8f0+5408: [%167.1, %167.2, %63.2], env=e155.0
  void                    Deopt              !v    %117.4, %117.3, %117.1   !
BB265   <- [119]
  val?~- | miss   %265.0 = CastType           d     dn %119.1
  val?-           %265.1 = Force!<value>            %265.0,    <str$->
  val?            %265.2 = Subassign2_1D      !v    %261.0, %263.1, %265.1, e155.0
  void                    StVar              lW    allTable, %265.2, e155.0
  goto BB105
BB266   <- [119]
  void                    Nop                !     
  val?^ | miss    %266.1 = %119.1
  dr              %266.2 = Typecheck@0x55de2b69a940[Type#328]
  goto BB117
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3

│ .mergeMethodsTable[0x55de2af15900]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
