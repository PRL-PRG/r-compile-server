
┌──────────────────────────────────────────────────────────────────────────────┐
│ .cacheMethodInTable[0x55de2b0e8ed0]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
.cacheMethodInTable[0x55de2b0e8ed0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    environment, <env 0x55de28b56378>
  lgl$#-          %0.5  = Identical                %0.4, function(fun=NULL) <(rir::DispatchTable*)0x55d|...
  void                    Branch                   %0.5 -> BB31 (if true) | BB32 (if false)
BB31   <- [0]
  env             e31.0 = MkEnv              l     fdef=%0.3, sig=%0.2, def=%0.1, table=%0.0, parent=<env 0x55de28b56378>, context 1
  val?            %31.1 = Force!<lazy>       !v    %0.3, e31.0   <cls>
  prom-           %31.2 = MkArg                    %31.1, .cacheMethodInTable[0x55de2b0e8ed0]_p0 (!refl), 
  val?            %31.3 = StaticCall         !v    environment[0x55de2b7dedb0](%31.2) e31.0   <env->
  void                    StVar              lW    fenv, %31.3, e31.0
  lgl$-           %31.5 = Missing            eR    table, e31.0
  lgl$-           %31.6 = AsLogical                %31.5
  lgl$#-          %31.7 = Identical                %31.6, false
  void                    Branch                   %31.7 -> BB6 (if true) | BB5 (if false)
BB32   <- [0]
  env             e32.0 = (MkEnv)            l     fdef=%0.3, sig=%0.2, def=%0.1, table=%0.0, parent=<env 0x55de28b56378>, context 1
  fs              %32.1 = FrameState         R     0x55de2d143210+0: [], env=e32.0
  void                    Deopt              !v    %32.1, CallTarget@0x55de2c2f1ee0[Call#1], %0.4
BB6   <- [31]
  lgl$#-          %6.0  = CheckTrueFalse     e     %31.6
  void                    Branch                   %6.0 -> BB29 (if true) | BB7 (if false)
BB5   <- [31]
  (cls|spec|blt)  %5.0  = LdFun              !v    exists, e31.0
  fs              %5.1  = FrameState         R     0x55de2d143210+64: [%31.6, %5.0], env=e31.0
  void                    Deopt              !v    %5.1, DeadCall@0x55de2c2f1ee0[Call#2], %5.0   !
BB29   <- [6]
  (cls|spec|blt)  %29.0 = LdFun              !v    .setupMethodsTables, e31.0
  fs              %29.1 = FrameState         R     0x55de2d143210+137: [%29.0], env=e31.0
  void                    Deopt              !v    %29.1, DeadCall@0x55de2c2f1ee0[Call#3], %29.0   !
BB7   <- [6]
  val?^ | miss    %7.0  = LdVar              eR    .matchSigLength, e31.0
  lgl$#-          %7.1  = Identical                %7.0, function(sig, fdef, fenv, reset=FALSE) <(rir::|...
  void                    Branch                   %7.1 -> BB33 (if true) | BB34 (if false)
BB33   <- [7]
  prom-           %33.0 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p1, e31.0
  prom-           %33.1 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p2, e31.0
  prom-           %33.2 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p3 (!refl), e31.0
  val?            %33.3 = StaticCall         !v    .matchSigLength[0x55de28fcb9b0](%33.0, %33.1, %33.2, true) e31.0   <str+>
  void                    StVar              lW    sig, %33.3, e31.0
  val?^ | miss    %33.5 = LdVar              eR    .sigLabel, e31.0
  lgl$#-          %33.6 = Identical                %33.5, function(sig) <(rir::DispatchTable*)0x55de2b41|...
  void                    Branch                   %33.6 -> BB35 (if true) | BB36 (if false)
BB34   <- [7]
  fs              %34.0 = FrameState         R     0x55de2d143210+46: [], env=e31.0
  void                    Deopt              !v    %34.0, CallTarget@0x55de2c2f1ee0[Call#4], %7.0   !
BB35   <- [33]
  prom-           %35.0 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p4 (!refl), e31.0
  val?^           %35.1 = CastType                 up %35.0
  val?^ | miss    %35.2 = LdVar              eR    paste, <env 0x55de28b56378>
  lgl$#-          %35.3 = Identical                %35.2, function(..., sep=" ", collapse=NULL, recycle0|...
  void                    Branch                   %35.3 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  val?^ | miss    %36.1 = %33.5
  dr              %36.2 = CallTarget@0x55de2c2f1ee0[Call#5]
  goto BB8
BB37   <- [35]
  env             e37.0 = MkEnv              l     sig=%35.1, parent=<env 0x55de28b56378>, context 0
  prom-           %37.1 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p15, e37.0
  dots-           %37.2 = DotsList           l     %37.1
  val?^ | miss    %37.3 = CastType                 up %37.1
  env             e37.4 = MkEnv              l     ...=%37.2, sep(miss)=" ", collapse="#", recycle0(miss)=false, parent=R_BaseNamespace, context -1
  val?            %37.5 = Force!             !vL   %37.3, e37.4
  val+            %37.6 = CallSafeBuiltin    wed   list(%37.5)    <vec->
  val+            %37.7 = CallSafeBuiltin    wed   paste(%37.6, " ", "#", false)    <str$->
  void                    StVar              lW    label, %37.7, e31.0
  val?^ | miss    %37.9 = LdVar              eR    exists, e31.0
  lgl$#-          %37.10 = Identical                %37.9, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %37.10 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  void                    Nop                !     
  val?^ | miss    %38.1 = %35.2
  dr              %38.2 = CallTarget@0x55de2b0fcef8[Call#0]
  goto BB8
BB8   <- [36, 38]
  val?^ | miss    %8.0  = Phi                      %36.1:BB36, %38.1:BB38
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %36.2:BB36, %38.2:BB38
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55de2d143210+226: [], env=e31.0
  void                    Deopt              !v    %8.4, %8.3, %8.1   !
BB39   <- [37]
  prom-           %39.0 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p5 (!refl), e31.0
  prom-           %39.1 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p6, e31.0
  val?            %39.2 = StaticCall         !v    exists[0x55de2ab011d0](%39.0, missingArg, %39.1, missingArg, missingArg, false) { 0 2n 5n } e31.0   <lgl$->
  lgl$#-          %39.3 = IsType                   %39.2 isA lgl$-
  void                    Branch                   %39.3 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x55de2d143210+272: [], env=e31.0
  void                    Deopt              !v    %40.0, CallTarget@0x55de2c2f1ee0[Call#6], %37.9   !
BB41   <- [39]
  lgl$-           %41.0 = CastType           d     dn %39.2
  void                    StVar              lW    isCurrent, %41.0, e31.0
  val?^ | miss    %41.2 = LdVar              eR    def, e31.0
  val?            %41.3 = Force!<lazy>       !v    %41.2, e31.0   <cls>
  lgl$-           %41.4 = Is                       %41.3, NULL
  lgl$#-          %41.5 = CheckTrueFalse     e     %41.4
  void                    Branch                   %41.5 -> BB26 (if true) | BB16 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x55de2d143210+326: [%39.2], env=e31.0
  void                    Deopt              !v    %42.0, Typecheck@0x55de2c2f1ee0[Type#15], %39.2   !
BB26   <- [41]
  val?^ | miss    %26.0 = LdVar              eR    isCurrent, e31.0
  val?            %26.1 = Force!             !v    %26.0, e31.0   <val?_>
  lgl$#-          %26.2 = CheckTrueFalse     we    %26.1
  void                    Branch                   %26.2 -> BB28 (if true) | BB27 (if false)
BB16   <- [41]
  val?^ | miss    %16.0 = LdVar              eR    .duplicateClassesExist, e31.0
  lgl$#-          %16.1 = Identical                %16.0, function(on) <(rir::DispatchTable*)0x55de2cdf4|...
  void                    Branch                   %16.1 -> BB43 (if true) | BB44 (if false)
BB28   <- [26]
  (cls|spec|blt)  %28.0 = LdFun              !v    remove, e31.0
  fs              %28.1 = FrameState         R     0x55de2d143210+581: [%28.0], env=e31.0
  void                    Deopt              !v    %28.1, DeadCall@0x55de2c2f1ee0[Call#10], %28.0   !
BB27   <- [26]
  void                    Invisible          v     
  nil-            %27.1 = nil
  goto BB24
BB43   <- [16]
  val?            %43.0 = StaticCall         !v    .duplicateClassesExist[0x55de2ab25ca0]() e31.0   <lgl$->
  lgl$#-          %43.1 = IsType                   %43.0 isA lgl$-
  void                    Branch                   %43.1 -> BB45 (if true) | BB46 (if false)
BB44   <- [16]
  fs              %44.0 = FrameState         R     0x55de2d143210+349: [%41.3], env=e31.0
  void                    Deopt              !v    %44.0, CallTarget@0x55de2c2f1ee0[Call#7], %16.0   !
BB24   <- [27, 49]
  val?            %24.0 = Phi                      %49.4:BB49, %27.1:BB27
  val?            %24.1 = %24.0
  void                    Return             l     %24.1
BB45   <- [43]
  lgl$-           %45.0 = CastType           d     dn %43.0
  void                    StVar              lW    dupl, %45.0, e31.0
  val?^ | miss    %45.2 = LdVar              eR    .methodPackageSlots, e31.0
  lgl$#-          %45.3 = Identical                %45.2, function(def, label, table, duplicatesExist, i|...
  void                    Branch                   %45.3 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x55de2d143210+392: [%43.0], env=e31.0
  void                    Deopt              !v    %46.0, Typecheck@0x55de2c2f1ee0[Type#17], %43.0   !
BB47   <- [45]
  prom-           %47.0 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p7, e31.0
  prom-           %47.1 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p8, e31.0
  prom-           %47.2 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p9, e31.0
  prom-           %47.3 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p10 (!refl), e31.0
  prom-           %47.4 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p11, e31.0
  ct              %47.5 = PushContext        lCL   %47.0, %47.1, %47.2, %47.3, %47.4, .methodPackageSlots(def, label, table, dupl, i|..., function(def, label, table, duplicatesExist, i|..., e31.0
  val?^           %47.6 = CastType                 up %47.4
  val?^           %47.7 = CastType                 up %47.3
  val?^           %47.8 = CastType                 up %47.2
  val?^           %47.9 = CastType                 up %47.1
  val?^           %47.10 = CastType                 up %47.0
  env             e47.11 = MkEnv              l     def=%47.10, label=%47.9, table=%47.8, duplicatesExist=%47.7, isCurrent=%47.6, parent=<env 0x55de28b56378>, context 1
  (cls|spec|blt)  %47.12 = LdFun              !v    @, <0x55de2854ebd8>, <env 0x55de28b56378>
  prom-           %47.13 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p19, e47.11
  prom-           %47.14 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p20, e47.11
  val?            %47.15 = Call               !v    %47.12(%47.13, %47.14) e47.11   <str>
  void                    StVar              lW    sig, %47.15, e47.11
  void                    StVar              lW    dups, false, e47.11
  val?^ | miss    %47.18 = LdVar              eR    duplicatesExist, e47.11
  val?            %47.19 = Force!<lazy>       !v    %47.18, e47.11   <lgl$->
  lgl$#-          %47.20 = CheckTrueFalse     we    %47.19
  void                    Branch                   %47.20 -> BB25 (if true) | BB21 (if false)
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x55de2d143210+406: [], env=e31.0
  void                    Deopt              !v    %48.0, CallTarget@0x55de2c2f1ee0[Call#8], %45.2   !
BB25   <- [47]
  fs              %25.0 = FrameState         R     0x55de2d143210+458: [], env=e31.0
  (cls|spec|blt)  %25.1 = LdFun              !v    .fixPackageSlot, e47.11
  fs              %25.2 = FrameState         R     0x55de2cb057a0+110: [%25.1], env=e47.11, next=%25.0
  void                    Deopt              !v    %25.2, DeadCall@0x55de2a573ab0[Call#1], %25.1   !
BB21   <- [47]
  val?^ | miss    %21.0 = LdVar              eR    def, e47.11
  void                    Visible            v     
  val?            %21.2 = Force!<wrapped>    !     %21.0, e47.11   <cls>
  val?            %21.3 = PopContext         C     %21.2, %47.5   <cls>
  void                    StVar              lW    def, %21.3, e31.0
  val?^ | miss    %21.5 = LdVar              eR    assign, e31.0
  lgl$#-          %21.6 = Identical                %21.5, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %21.6 -> BB49 (if true) | BB50 (if false)
BB49   <- [21]
  prom-           %49.0 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p12, e31.0
  prom-           %49.1 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p13 (!refl), e31.0
  prom-           %49.2 = MkArg                    unboundValue, .cacheMethodInTable[0x55de2b0e8ed0]_p14, e31.0
  val?            %49.3 = StaticCall         !     assign[0x55de2cf09260](%49.0, %49.1, missingArg, %49.2) { 0 1 3n } e31.0   <cls>
  val?            %49.4 = %49.3
  goto BB24
BB50   <- [21]
  fs              %50.0 = FrameState         R     0x55de2d143210+472: [], env=e31.0
  void                    Deopt              !v    %50.0, CallTarget@0x55de2c2f1ee0[Call#9], %21.5   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dupl, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isCurrent, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|vec)>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    target, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ .cacheMethodInTable[0x55de2b0e8ed0]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
