
┌──────────────────────────────────────────────────────────────────────────────┐
│ .mergeMethodsTable[0x55de2e9bb6f0]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
.mergeMethodsTable[0x55de2e9bb6f0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    environment, <env 0x55de28b56378>
  lgl$#-          %0.5  = Identical                %0.4, function(fun=NULL) <(rir::DispatchTable*)0x55d|...
  void                    Branch                   %0.5 -> BB150 (if true) | BB151 (if false)
BB150   <- [0]
  env             e150.0 = MkEnv              l     generic=%0.3, table=%0.2, newtable=%0.1, add=%0.0, parent=<env 0x55de28b56378>, context 1
  val?            %150.1 = Force!<lazy>       !vr   %0.3,    <cls>
  prom-           %150.2 = MkArg                    %150.1, .mergeMethodsTable[0x55de2e9bb6f0]_p0 (!refl), 
  val?            %150.3 = StaticCall         !v    environment[0x55de29e02010](%150.2) e150.0   <env->
  void                    StVar              lW    fenv, %150.3, e150.0
  val?^ | miss    %150.5 = LdVar              eR    exists, e150.0
  lgl$#-          %150.6 = Identical                %150.5, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %150.6 -> BB152 (if true) | BB153 (if false)
BB151   <- [0]
  env             e151.0 = (MkEnv)            l     generic=%0.3, table=%0.2, newtable=%0.1, add=%0.0, parent=<env 0x55de28b56378>, context 1
  fs              %151.1 = FrameState         R     0x55de286ab8f0+0: [], env=e151.0
  void                    Deopt              !v    %151.1, CallTarget@0x55de2b69a940[Call#0], %0.4
BB152   <- [150]
  prom-           %152.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p1 (!refl), e150.0
  val?            %152.1 = StaticCall         !v    exists[0x55de2c887130](".SigLength", missingArg, %152.0, missingArg, missingArg, false) { 0 2n 5n } e150.0   <lgl$->
  lgl$#-          %152.2 = IsType                   %152.1 isA lgl$-
  void                    Branch                   %152.2 -> BB154 (if true) | BB155 (if false)
BB153   <- [150]
  fs              %153.0 = FrameState         R     0x55de286ab8f0+46: [], env=e150.0
  void                    Deopt              !v    %153.0, CallTarget@0x55de2b69a940[Call#1], %150.5   !
BB154   <- [152]
  lgl$-           %154.0 = CastType           d     dn %152.1
  lgl$-           %154.1 = Not                d     %154.0, elided
  lgl$#-          %154.2 = CheckTrueFalse     e     %154.1
  void                    Branch                   %154.2 -> BB148 (if true) | BB7 (if false)
BB155   <- [152]
  fs              %155.0 = FrameState         R     0x55de286ab8f0+100: [%152.1], env=e150.0
  void                    Deopt              !v    %155.0, Typecheck@0x55de2b69a940[Type#3], %152.1   !
BB148   <- [154]
  (cls|spec|blt)  %148.0 = LdFun              !v    .setupMethodsTables, e150.0
  fs              %148.1 = FrameState         R     0x55de286ab8f0+122: [%148.0], env=e150.0
  void                    Deopt              !v    %148.1, DeadCall@0x55de2b69a940[Call#2], %148.0   !
BB7   <- [154]
  val?^ | miss    %7.0  = LdVar              eR    add, e150.0
  val?            %7.1  = Force!<lazy>       !v    %7.0, e150.0   <lgl$->
  lgl$#-          %7.2  = IsType                   %7.1 isA lgl$-
  void                    Branch                   %7.2 -> BB156 (if true) | BB157 (if false)
BB156   <- [7]
  lgl$-           %156.0 = CastType           d     dn %7.1
  lgl$-           %156.1 = Not                d     %156.0, elided
  lgl$#-          %156.2 = CheckTrueFalse     e     %156.1
  void                    Branch                   %156.2 -> BB147 (if true) | BB10 (if false)
BB157   <- [7]
  fs              %157.0 = FrameState         R     0x55de286ab8f0+159: [%7.1], env=e150.0
  void                    Deopt              !v    %157.0, Typecheck@0x55de2b69a940[Type#5], %7.1   !
BB147   <- [156]
  (cls|spec|blt)  %147.0 = LdFun              !v    get, e150.0
  fs              %147.1 = FrameState         R     0x55de286ab8f0+187: [%147.0], env=e150.0
  void                    Deopt              !v    %147.1, DeadCall@0x55de2b69a940[Call#3], %147.0   !
BB10   <- [156]
  void                    StVar              lW    allTable, nil, e150.0
  val?^ | miss    %10.1 = LdVar              eR    get, e150.0
  lgl$#-          %10.2 = Identical                %10.1, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %10.2 -> BB158 (if true) | BB159 (if false)
BB158   <- [10]
  prom-           %158.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p2, e150.0
  val?            %158.1 = StaticCall         !v    get[0x55de2b44d4c0](".SigLength", missingArg, %158.0) { 0 2n } e150.0   <(int|real)$->
  void                    StVar              lW    n, %158.1, e150.0
  (cls|spec|blt)  %158.3 = LdFun              !v    rep, <0x55de285639b0>, e150.0
  prom-           %158.4 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p3, e150.0
  val?            %158.5 = Call               !v    %158.3("ANY", %158.4) e150.0   <str->
  void                    StVar              lW    anySig, %158.5, e150.0
  val?^ | miss    %158.7 = LdVar              eR    names, e150.0
  lgl$#-          %158.8 = Identical                <blt names>, %158.7   <true>
  void                    Branch                   %158.8 -> BB160 (if true) | BB161 (if false)
BB159   <- [10]
  fs              %159.0 = FrameState         R     0x55de286ab8f0+241: [], env=e150.0
  void                    Deopt              !v    %159.0, CallTarget@0x55de2b69a940[Call#4], %10.1   !
BB160   <- [158]
  val?^ | miss    %160.0 = LdVar              eR    newtable, e150.0
  val?            %160.1 = Force!<lazy>       !v    %160.0, e150.0   <env->
  lgl$#-          %160.2 = IsType                   %160.1 isA val?-
  void                    Branch                   %160.2 -> BB162 (if true) | BB163 (if false)
BB161   <- [158]
  fs              %161.0 = FrameState         R     0x55de286ab8f0+351: [], env=e150.0
  void                    Deopt              !v    %161.0, DeadBranchReached@0x55de2b69a940[Test#0], %158.8   !
BB162   <- [160]
  val?-           %162.0 = CastType           d     dn %160.1   <env->
  val+            %162.1 = CallSafeBuiltin    wed   names(%162.0)    <str->
  int$-           %162.2 = Length                   %162.1
  void                    StVar              lW    newMethods, %162.1, e150.0
  int$-           %162.4 = Inc                      0L
  lgl$-           %162.5 = Lt                 d     %162.2, %162.4, elided   <false>
  lgl$#-          %162.6 = Identical                %162.5, true
  void                    Branch                   %162.6 -> BB165 (if true) | BB164 (if false)
BB163   <- [160]
  fs              %163.0 = FrameState         R     0x55de286ab8f0+420: [<blt names>, %160.1], env=e150.0
  void                    Deopt              !v    %163.0, Typecheck@0x55de2b69a940[Type#13], %160.1   !
BB165   <- [162]
  fs              %165.0 = FrameState         R     0x55de286ab8f0+456: [], env=e150.0
  void                    Deopt              !v    %165.0, DeadBranchReached@0x55de2b69a940[Test#1], %162.6   !
BB164   <- [162]
  val?            %164.0 = Extract2_1D        wed   %162.1, %162.4, elided
  void                    StVar              lW    what, %164.0, e150.0
  val?^ | miss    %164.2 = LdVar              eR    newtable, e150.0
  val?            %164.3 = Force!<wrapped>    !v    %164.2, e150.0   <env->
  lgl$#-          %164.4 = IsType                   %164.3 isA val+   <true>
  lgl$#-          %164.5 = IsType                   %164.3 isA val?-
  void                    Branch                   %164.4 -> BB166 (if true) | BB167 (if false)
BB166   <- [164]
  val?^ | miss    %166.0 = LdVar              eR    what, e150.0
  lgl$#-          %166.1 = IsType                   %166.0 isA val?~- | miss
  void                    Branch                   %166.1 -> BB168 (if true) | BB169 (if false)
BB167   <- [164]
  void                    Nop                !     
  lgl$#-          %167.1 = %164.4
  dr              %167.2 = DeadBranchReached@0x55de2b69a940[Test#2]
  goto BB19
BB168   <- [166]
  val?~- | miss   %168.0 = CastType           d     dn %166.0
  val?-           %168.1 = Force!<value>            %168.0,    <str$->
  void                    Branch                   %164.5 -> BB170 (if true) | BB171 (if false)
BB169   <- [166]
  void                    Nop                !     
  val?^ | miss    %169.1 = %166.0
  dr              %169.2 = Typecheck@0x55de2b69a940[Type#18]
  goto BB19
BB19   <- [167, 169, 171]
  val?^ | miss    %19.0 = Phi                      %167.1:BB167, %169.1:BB169, %171.1:BB171
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %167.2:BB167, %169.2:BB169, %171.2:BB171
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55de286ab8f0+519: [%162.1, %162.2, %162.4, %164.3], env=e150.0
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB170   <- [168]
  val?-           %170.0 = CastType           d     dn %164.3   <env->
  val?            %170.1 = Extract2_1D        wed   %170.0, %168.1, elided   <cls>
  void                    StVar              lW    obj, %170.1, e150.0
  val?^ | miss    %170.3 = LdVar              eR    is.primitive, e150.0
  lgl$#-          %170.4 = Identical                %170.3, function(x) <(rir::DispatchTable*)0x55de2ac9a9|...
  void                    Branch                   %170.4 -> BB172 (if true) | BB173 (if false)
BB171   <- [168]
  void                    Nop                !     
  val?            %171.1 = %164.3
  dr              %171.2 = Typecheck@0x55de2b69a940[Type#16]
  goto BB19
BB172   <- [170]
  val             %172.0 = ChkMissing         e     %170.1
  str$-           %172.1 = CallSafeBuiltin    wed   typeof(%170.1)    <str$->
  int$-           %172.2 = Length                   %172.1
  lgl$-           %172.3 = Eq                 d     %172.2, 1L, elided   <true>
  lgl$#-          %172.4 = Identical                %172.3, true
  void                    Branch                   %172.4 -> BB174 (if true) | BB175 (if false)
BB173   <- [170]
  fs              %173.0 = FrameState         R     0x55de286ab8f0+585: [%162.1, %162.2, %162.4], env=e150.0
  void                    Deopt              !v    %173.0, CallTarget@0x55de2b69a940[Call#7], %170.3   !
BB174   <- [172]
  lgl$-           %174.0 = CallSafeBuiltin    wed   is.na(%172.1) 
  lgl$#-          %174.1 = CheckTrueFalse     e     %174.0   <false>
  void                    Branch                   %174.1 -> BB177 (if true) | BB176 (if false)
BB175   <- [172]
  prom-           %175.0 = MkArg                    %170.1, .mergeMethodsTable[0x55de2e9bb6f0]_p4 (!refl), e150.0
  val?~           %175.1 = CastType                 up %175.0
  env             e175.2 = (MkEnv)            l     x=%175.1, parent=R_BaseNamespace, context 0
  env             e175.3 = MaterializeEnv           , e175.2   <@?>
  prom-           %175.4 = MkArg                    %170.1, .mergeMethodsTable[0x55de2e9bb6f0]_p30 (!refl), e175.3
  val?~           %175.5 = CastType                 up %175.4
  fs              %175.6 = FrameState         R     0x55de286ab8f0+617: [%162.1, %162.2, %162.4], env=e150.0
  fs              %175.7 = FrameState         R     0x55de2c9144e0+32: [], env=e175.3, next=%175.6
  env             e175.8 = (MkEnv)            l     x=%175.5, parent=R_BaseNamespace, context -1
  fs              %175.9 = FrameState         R     0x55de2a4e4290+27: [%172.1], env=e175.8, next=%175.7
  void                    Deopt              !v    %175.9, DeadBranchReached@0x55de2ccbb258[Test#1], %172.4   !
BB177   <- [174]
  void                    Nop                !     
  lgl$#-          %177.1 = %174.1
  dr              %177.2 = DeadBranchReached@0x55de2ccbb258[Test#7]
  goto BB25
BB176   <- [174]
  lgl$-           %176.0 = Eq                 d     %172.1, special, elided
  lgl$#-          %176.1 = CheckTrueFalse     e     %176.0
  void                    Branch                   %176.1 -> BB146 (if true) | BB27 (if false)
BB25   <- [177, 179]
  val?^ | miss    %25.0 = Phi                      %177.1:BB177, %179.1:BB179
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %177.2:BB177, %179.2:BB179
  dr              %25.3 = %25.2
  prom-           %25.4 = MkArg                    %170.1, .mergeMethodsTable[0x55de2e9bb6f0]_p4 (!refl), e150.0
  val?~           %25.5 = CastType                 up %25.4
  fs              %25.6 = FrameState         R     0x55de286ab8f0+617: [%162.1, %162.2, %162.4], env=e150.0
  env             e25.7 = (MkEnv)            l     x=%25.5, parent=R_BaseNamespace, context 0
  fs              %25.8 = FrameState         R     0x55de2c9144e0+240: [%172.1, %174.0], env=e25.7, next=%25.6
  void                    Deopt              !v    %25.8, %25.3, %25.1   !
BB146   <- [176]
  void                    Nop                !     
  goto BB145
BB27   <- [176]
  lgl$-           %27.0 = Eq                 d     %172.1, builtin, elided
  lgl$#-          %27.1 = CheckTrueFalse     e     %27.0
  void                    Branch                   %27.1 -> BB144 (if true) | BB28 (if false)
BB145   <- [146, 144]
  void                    Nop                !     
  lgl$#-          %145.1 = true
  goto BB29
BB144   <- [27]
  void                    Nop                !     
  goto BB145
BB28   <- [27]
  void                    Nop                !     
  lgl$#-          %28.1 = false
  goto BB29
BB29   <- [28, 145]
  lgl$#-          %29.0 = Phi                      %28.1:BB28, %145.1:BB145
  lgl$#-          %29.1 = %29.0
  void                    Branch                   %29.1 -> BB143 (if true) | BB30 (if false)
BB143   <- [29]
  val?^ | miss    %143.0 = LdVar              eR    anySig, e150.0
  val?            %143.1 = Force!             !v    %143.0, e150.0   <val?_>
  void                    StVar              lW    sig, %143.1, e150.0
  val?            %143.3 = %143.1
  goto BB39
BB30   <- [29]
  val?^ | miss    %30.0 = LdVar              eR    is, e150.0
  lgl$#-          %30.1 = Identical                %30.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %30.1 -> BB178 (if true) | BB179 (if false)
BB39   <- [143, 38]
  val?            %39.0 = Phi                      %143.3:BB143, %38.5:BB38
  val?            %39.1 = %39.0
  val?^ | miss    %39.2 = LdVar              eR    length, e150.0
  lgl$#-          %39.3 = Identical                <blt length>, %39.2   <true>
  void                    Branch                   %39.3 -> BB180 (if true) | BB181 (if false)
BB178   <- [30]
  prom-           %178.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p5 (!refl), e150.0
  val?            %178.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%178.0, "MethodDefinition") e150.0   <lgl$->
  lgl$#-          %178.2 = IsType                   %178.1 isA lgl$-
  void                    Branch                   %178.2 -> BB182 (if true) | BB183 (if false)
BB179   <- [30]
  void                    Nop                !     
  val?^ | miss    %179.1 = %30.0
  dr              %179.2 = CallTarget@0x55de2b69a940[Call#8]
  goto BB25
BB180   <- [39]
  val             %180.0 = ChkMissing         e     %39.1   <str>
  val?            %180.1 = CallBuiltin        !v    length(%180.0) e150.0   <int$->
  lgl$#-          %180.2 = IsType                   %180.1 isA int$-
  void                    Branch                   %180.2 -> BB184 (if true) | BB185 (if false)
BB181   <- [39]
  fs              %181.0 = FrameState         R     0x55de286ab8f0+1352: [%162.1, %162.2, %162.4], env=e150.0
  void                    Deopt              !v    %181.0, DeadBranchReached@0x55de2b69a940[Test#7], %39.3   !
BB182   <- [178]
  lgl$-           %182.0 = CastType           d     dn %178.1
  lgl$#-          %182.1 = CheckTrueFalse     e     %182.0
  void                    Branch                   %182.1 -> BB38 (if true) | BB33 (if false)
BB183   <- [178]
  fs              %183.0 = FrameState         R     0x55de286ab8f0+665: [%162.1, %162.2, %162.4, %178.1], env=e150.0
  void                    Deopt              !v    %183.0, Typecheck@0x55de2b69a940[Type#23], %178.1   !
BB184   <- [180]
  int$-           %184.0 = CastType           d     dn %180.1
  void                    StVar              lW    ns, %184.0, e150.0
  val?^ | miss    %184.2 = LdVar              eR    n, e150.0
  lgl$#-          %184.3 = IsType                   %184.2 isA val?~- | miss
  void                    Branch                   %184.3 -> BB186 (if true) | BB187 (if false)
BB185   <- [180]
  fs              %185.0 = FrameState         R     0x55de286ab8f0+1443: [%162.1, %162.2, %162.4, %180.1], env=e150.0
  void                    Deopt              !v    %185.0, Typecheck@0x55de2b69a940[Type#73], %180.1   !
BB38   <- [182]
  (cls|spec|blt)  %38.0 = LdFun              !v    @, <0x55de2854ebd8>, e150.0
  prom-           %38.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p6, e150.0
  prom-           %38.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p7, e150.0
  val?            %38.3 = Call               !v    %38.0(%38.1, %38.2) e150.0   <str>
  void                    StVar              lW    sig, %38.3, e150.0
  val?            %38.5 = %38.3
  goto BB39
BB33   <- [182]
  val?^ | miss    %33.0 = LdVar              eR    is.environment, e150.0
  lgl$#-          %33.1 = Identical                <blt is.environment>, %33.0   <@?>
  void                    Branch                   %33.1 -> BB35 (if true) | BB34 (if false)
BB186   <- [184]
  val?~- | miss   %186.0 = CastType           d     dn %184.2
  val?-           %186.1 = Force!<value>            %186.0,    <(int|real)$->
  lgl-            %186.2 = Eq                 wed   %184.0, %186.1, elided   <lgl$->
  lgl$#-          %186.3 = IsType                   %186.2 isA lgl$-
  void                    Branch                   %186.3 -> BB188 (if true) | BB189 (if false)
BB187   <- [184]
  fs              %187.0 = FrameState         R     0x55de286ab8f0+1457: [%162.1, %162.2, %162.4], env=e150.0
  void                    Deopt              !v    %187.0, Typecheck@0x55de2b69a940[Type#75], %184.2   !
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    obj, e150.0
  val?            %35.1 = Force!             !v    %35.0, e150.0   <val?_>
  lgl$#-          %35.2 = CallSafeBuiltin    wed   is.environment(%35.1)    <val?_>
  void                    Branch                   %35.2 -> BB37 (if true) | BB36 (if false)
BB34   <- [33]
  (cls|spec|blt)  %34.0 = LdFun              !v    is.environment, e150.0
  fs              %34.1 = FrameState         R     0x55de286ab8f0+704: [%162.1, %162.2, %162.4, %34.0], env=e150.0
  void                    Deopt              !v    %34.1, DeadCall@0x55de2b69a940[Call#9], %34.0   !
BB188   <- [186]
  lgl$-           %188.0 = CastType           d     dn %186.2
  lgl$#-          %188.1 = CheckTrueFalse     e     %188.0
  void                    Branch                   %188.1 -> BB142 (if true) | BB48 (if false)
BB189   <- [186]
  void                    Nop                !     
  lgl-            %189.1 = %186.2
  dr              %189.2 = Typecheck@0x55de2b69a940[Type#76]
  goto BB46
BB37   <- [35]
  (cls|spec|blt)  %37.0 = LdFun              !v    as.list, e150.0
  fs              %37.1 = FrameState         R     0x55de286ab8f0+834: [%162.1, %162.2, %162.4, %37.0], env=e150.0
  void                    Deopt              !v    %37.1, DeadCall@0x55de2b69a940[Call#17], %37.0   !
BB36   <- [35]
  (cls|spec|blt)  %36.0 = LdFun              !v    stop, e150.0
  fs              %36.1 = FrameState         R     0x55de286ab8f0+783: [%162.1, %162.2, %162.4, %36.0], env=e150.0
  void                    Deopt              !v    %36.1, DeadCall@0x55de2b69a940[Call#10], %36.0   !
BB142   <- [188]
  void                    Nop                !     
  goto BB52
BB48   <- [188]
  lgl$#-          %48.0 = IsType                   %186.0 isA real$-
  void                    Branch                   %48.0 -> BB190 (if true) | BB191 (if false)
BB46   <- [189, 191]
  val?^ | miss    %46.0 = Phi                      %189.1:BB189, %191.1:BB191
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %189.2:BB189, %191.2:BB191
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x55de286ab8f0+1486: [%162.1, %162.2, %162.4, %186.2], env=e150.0
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
BB52   <- [142, 51]
  val?^ | miss    %52.0 = LdVar              eR    add, e150.0
  val?            %52.1 = Force!<wrapped>    !v    %52.0, e150.0   <lgl$->
  lgl$#-          %52.2 = CheckTrueFalse     we    %52.1
  void                    Branch                   %52.2 -> BB56 (if true) | BB55 (if false)
BB190   <- [48]
  real$-          %190.0 = CastType           d     dn %186.0
  lgl$-           %190.1 = Lt                 d     %184.0, %190.0, elided   <lgl$->
  lgl$#-          %190.2 = CheckTrueFalse     e     %190.1
  void                    Branch                   %190.2 -> BB141 (if true) | BB49 (if false)
BB191   <- [48]
  void                    Nop                !     
  val?~- | miss   %191.1 = %186.0
  dr              %191.2 = Typecheck@0x55de2b69a940[Type#78]
  goto BB46
BB56   <- [52]
  val?^ | miss    %56.0 = LdVar              eR    exists, e150.0
  lgl$#-          %56.1 = Identical                %56.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %56.1 -> BB192 (if true) | BB193 (if false)
BB55   <- [52]
  (cls|spec|blt)  %55.0 = LdFun              !v    exists, e150.0
  fs              %55.1 = FrameState         R     0x55de286ab8f0+2396: [%162.1, %162.2, %162.4, %55.0], env=e150.0
  void                    Deopt              !v    %55.1, DeadCall@0x55de2b69a940[Call#49], %55.0   !
BB141   <- [190]
  real$-          %141.0 = Sub                d     %190.0, %184.0, elided   <val?_>
  void                    StVar              lW    nadd, %141.0, e150.0
  (cls|spec|blt)  %141.2 = LdFun              !v    packageSlot, e150.0
  fs              %141.3 = FrameState         R     0x55de286ab8f0+1858: [%162.1, %162.2, %162.4, %141.2], env=e150.0
  void                    Deopt              !v    %141.3, DeadCall@0x55de2b69a940[Call#34], %141.2   !
BB49   <- [190]
  val?^ | miss    %49.0 = LdVar              eR    add, e150.0
  val?            %49.1 = Force!<wrapped>    !v    %49.0, e150.0   <lgl$->
  lgl$#-          %49.2 = CheckTrueFalse     we    %49.1
  void                    Branch                   %49.2 -> BB132 (if true) | BB50 (if false)
BB192   <- [56]
  prom-           %192.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p8, e150.0
  prom-           %192.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p9, e150.0
  val?            %192.2 = StaticCall         !v    exists[0x55de2a3c8820](%192.0, missingArg, %192.1, missingArg, missingArg, false) { 0 2n 5n } e150.0   <lgl$->
  lgl$#-          %192.3 = IsType                   %192.2 isA lgl$-
  void                    Branch                   %192.3 -> BB200 (if true) | BB201 (if false)
BB193   <- [56]
  fs              %193.0 = FrameState         R     0x55de286ab8f0+2386: [%162.1, %162.2, %162.4, %52.2], env=e150.0
  void                    Deopt              !v    %193.0, CallTarget@0x55de2b69a940[Call#55], %56.0   !
BB132   <- [49]
  (cls|spec|blt)  %132.0 = LdFun              !v    @, <0x55de2854ebd8>, e150.0
  prom-           %132.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p24, e150.0
  prom-           %132.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p25, e150.0
  val?            %132.3 = Call               !v    %132.0(%132.1, %132.2) e150.0   <str->
  void                    StVar              lW    signames, %132.3, e150.0
  val?^ | miss    %132.5 = LdVar              eR    ns, e150.0
  lgl$#-          %132.6 = IsType                   %132.5 isA int$-
  void                    Branch                   %132.6 -> BB194 (if true) | BB195 (if false)
BB50   <- [49]
  void                    Nop                !     
  goto BB51
BB200   <- [192]
  lgl$-           %200.0 = CastType           d     dn %192.2
  lgl$#-          %200.1 = CheckTrueFalse     e     %200.0
  void                    Branch                   %200.1 -> BB124 (if true) | BB59 (if false)
BB201   <- [192]
  void                    Nop                !     
  val?            %201.1 = %192.2
  dr              %201.2 = Typecheck@0x55de2b69a940[Type#160]
  goto BB57
BB194   <- [132]
  int$-           %194.0 = CastType           d     dn %132.5
  (cls|spec|blt)  %194.1 = LdFun              !v    length<-, <0x55de2854f9e8>, e150.0
  val?^ | miss    %194.2 = LdVar              eR    signames, e150.0
  lgl$#-          %194.3 = IsType                   %194.2 isA val?~- | miss
  void                    Branch                   %194.3 -> BB196 (if true) | BB197 (if false)
BB195   <- [132]
  fs              %195.0 = FrameState         R     0x55de286ab8f0+1613: [%162.1, %162.2, %162.4], env=e150.0
  void                    Deopt              !v    %195.0, Typecheck@0x55de2b69a940[Type#84], %132.5   !
BB51   <- [50, 206]
  void                    Nop                !     
  goto BB52
BB124   <- [200]
  val?^ | miss    %124.0 = LdVar              eR    .newOrMultipleMethod, e150.0
  lgl$#-          %124.1 = Identical                %124.0, function(obj, what, table) <(rir::DispatchTabl|...
  void                    Branch                   %124.1 -> BB204 (if true) | BB205 (if false)
BB59   <- [200]
  void                    Nop                !     
  goto BB60
BB57   <- [201, 205]
  val?^ | miss    %57.0 = Phi                      %201.1:BB201, %205.1:BB205
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %201.2:BB201, %205.2:BB205
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x55de286ab8f0+2776: [%162.1, %162.2, %162.4, %192.2], env=e150.0
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB196   <- [194]
  val?~- | miss   %196.0 = CastType           d     dn %194.2
  val?-           %196.1 = Force!<value>            %196.0,    <str->
  val?            %196.2 = NamedCall          !v    %194.1(%196.1, value=%194.0) e150.0
  void                    StVar              lW    signames, %196.2, e150.0
  val?^ | miss    %196.4 = LdVar              eR    .resetTable, e150.0
  lgl$#-          %196.5 = Identical                %196.4, function(table, n, signames) <(rir::DispatchTa|...
  void                    Branch                   %196.5 -> BB198 (if true) | BB199 (if false)
BB197   <- [194]
  fs              %197.0 = FrameState         R     0x55de286ab8f0+1627: [%162.1, %162.2, %162.4, %194.0], env=e150.0
  void                    Deopt              !v    %197.0, Typecheck@0x55de2b69a940[Type#85], %194.2   !
BB204   <- [124]
  prom-           %204.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p20, e150.0
  prom-           %204.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p21, e150.0
  prom-           %204.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p22, e150.0
  val?            %204.3 = StaticCall         !v    .newOrMultipleMethod[0x55de2ac73790](%204.0, %204.1, %204.2) e150.0   <cls>
  void                    StVar              lW    obj, %204.3, e150.0
  val?^ | miss    %204.5 = LdVar              eR    allTable, e150.0
  lgl$#-          %204.6 = IsType                   %204.5 isA val?~- | miss
  void                    Branch                   %204.6 -> BB208 (if true) | BB209 (if false)
BB205   <- [124]
  void                    Nop                !     
  val?^ | miss    %205.1 = %124.0
  dr              %205.2 = CallTarget@0x55de2b69a940[Call#56]
  goto BB57
BB60   <- [59, 224]
  val?^ | miss    %60.0 = LdVar              eR    obj, e150.0
  val?            %60.1 = Force!<value>      !v    %60.0, e150.0   <cls>
  val?^ | miss    %60.2 = LdVar              eR    table, e150.0
  val?            %60.3 = Force!<wrapped>    !v    %60.2, e150.0   <env->
  val?^ | miss    %60.4 = LdVar              eR    what, e150.0
  lgl$#-          %60.5 = IsType                   %60.4 isA val?~- | miss
  void                    Branch                   %60.5 -> BB210 (if true) | BB211 (if false)
BB198   <- [196]
  prom-           %198.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p27, e150.0
  prom-           %198.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p28, e150.0
  prom-           %198.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p29 (!refl), e150.0
  val?            %198.3 = Call               !v    function(table, n, signames) <(rir::DispatchTa|...(%198.0, %198.1, %198.2) e150.0
  val?^ | miss    %198.4 = LdVar              eR    ns, e150.0
  lgl$#-          %198.5 = IsType                   %198.4 isA int$-
  void                    Branch                   %198.5 -> BB202 (if true) | BB203 (if false)
BB199   <- [196]
  fs              %199.0 = FrameState         R     0x55de286ab8f0+1695: [%162.1, %162.2, %162.4], env=e150.0
  void                    Deopt              !v    %199.0, CallTarget@0x55de2b69a940[Call#33], %196.4   !
BB208   <- [204]
  val?~- | miss   %208.0 = CastType           d     dn %204.5
  val?-           %208.1 = Force!<value>            %208.0,    <nil->
  lgl$-           %208.2 = Is                       %208.1, NULL
  lgl$#-          %208.3 = CheckTrueFalse     e     %208.2
  void                    Branch                   %208.3 -> BB131 (if true) | BB127 (if false)
BB209   <- [204]
  void                    Nop                !     
  val?^ | miss    %209.1 = %204.5
  dr              %209.2 = Typecheck@0x55de2b69a940[Type#165]
  goto BB125
BB210   <- [60]
  val?~- | miss   %210.0 = CastType           d     dn %60.4
  val?-           %210.1 = Force!<value>            %210.0,    <str$->
  val?            %210.2 = Subassign2_1D      !v    %60.1, %60.3, %210.1, e150.0
  void                    StVar              lW    table, %210.2, e150.0
  int$-           %210.4 = %162.4
  goto BB63
BB211   <- [60]
  fs              %211.0 = FrameState         R     0x55de286ab8f0+3012: [%162.1, %162.2, %162.4, %60.1, %60.3], env=e150.0
  void                    Deopt              !v    %211.0, Typecheck@0x55de2b69a940[Type#173], %60.4   !
BB202   <- [198]
  int$-           %202.0 = CastType           d     dn %198.4
  val?^ | miss    %202.1 = LdVar              eR    fenv !upd, e150.0
  lgl$#-          %202.2 = IsType                   %202.1 isA val?~- | miss
  void                    Branch                   %202.2 -> BB206 (if true) | BB207 (if false)
BB203   <- [198]
  void                    Nop                !     
  val?^ | miss    %203.1 = %198.4
  dr              %203.2 = Typecheck@0x55de2b69a940[Type#89]
  goto BB139
BB131   <- [208]
  val?^ | miss    %131.0 = LdVar              eR    get, e150.0
  lgl$#-          %131.1 = Identical                %131.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %131.1 -> BB216 (if true) | BB217 (if false)
BB127   <- [208]
  void                    Nop                !     
  goto BB128
BB125   <- [209, 217]
  val?^ | miss    %125.0 = Phi                      %209.1:BB209, %217.1:BB217
  val?^ | miss    %125.1 = %125.0
  dr              %125.2 = Phi                      %209.2:BB209, %217.2:BB217
  dr              %125.3 = %125.2
  fs              %125.4 = FrameState         R     0x55de286ab8f0+2848: [%162.1, %162.2, %162.4], env=e150.0
  void                    Deopt              !v    %125.4, %125.3, %125.1   !
BB63   <- [210, 256]
  int$-           %63.0 = Phi                      %210.4:BB210, %256.4:BB256
  int$-           %63.1 = %63.0
  int$-           %63.2 = Inc                      %63.1
  lgl$-           %63.3 = Lt                 d     %162.2, %63.2, elided
  lgl$#-          %63.4 = Identical                %63.3, true
  void                    Branch                   %63.4 -> BB123 (if true) | BB64 (if false)
BB206   <- [202]
  val?~- | miss   %206.0 = CastType           d     dn %202.1
  val?-           %206.1 = Force!<value>            %206.0,    <env->
  val?+           %206.2 = Subassign2_1D      wed   %202.0, %206.1, ".SigLength", elided
  void                    StVar              lW    fenv, %206.2, e150.0
  void                    StVar              lW    n, %202.0, e150.0
  goto BB51
BB207   <- [202]
  void                    Nop                !     
  val?^ | miss    %207.1 = %202.1
  dr              %207.2 = Typecheck@0x55de2b69a940[Type#90]
  goto BB139
BB139   <- [203, 207]
  val?^ | miss    %139.0 = Phi                      %203.1:BB203, %207.1:BB207
  val?^ | miss    %139.1 = %139.0
  dr              %139.2 = Phi                      %203.2:BB203, %207.2:BB207
  dr              %139.3 = %139.2
  fs              %139.4 = FrameState         R     0x55de286ab8f0+1737: [%162.1, %162.2, %162.4, %198.3], env=e150.0
  void                    Deopt              !v    %139.4, %139.3, %139.1   !
BB216   <- [131]
  prom-           %216.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p23, e150.0
  val?            %216.1 = StaticCall         !v    get[0x55de2b44d4c0](".AllMTable", missingArg, %216.0) { 0 2n } e150.0   <env->
  void                    StVar              lW    allTable, %216.1, e150.0
  goto BB128
BB217   <- [131]
  void                    Nop                !     
  val?^ | miss    %217.1 = %131.0
  dr              %217.2 = CallTarget@0x55de2b69a940[Call#57]
  goto BB125
BB128   <- [127, 216]
  val?^ | miss    %128.0 = LdVar              eR    obj, e150.0
  val?            %128.1 = Force!<value>      !v    %128.0, e150.0   <cls>
  val?^ | miss    %128.2 = LdVar              eR    allTable !upd, e150.0
  lgl$#-          %128.3 = IsType                   %128.2 isA val?~- | miss
  void                    Branch                   %128.3 -> BB220 (if true) | BB221 (if false)
BB123   <- [63]
  void                    Visible            v     
  void                    Return             l     nil
BB64   <- [63]
  val?            %64.0 = Extract2_1D        wed   %162.1, %63.2, elided
  void                    StVar              lW    what, %64.0, e150.0
  val?^ | miss    %64.2 = LdVar              eR    newtable, e150.0
  val?            %64.3 = Force!<wrapped>    !v    %64.2, e150.0   <env->
  lgl$#-          %64.4 = IsType                   %64.3 isA val+   <true>
  lgl$#-          %64.5 = IsType                   %64.3 isA val?-
  void                    Branch                   %64.4 -> BB212 (if true) | BB213 (if false)
BB220   <- [128]
  val?~- | miss   %220.0 = CastType           d     dn %128.2
  val?-           %220.1 = Force!<value>            %220.0,    <env->
  val?^ | miss    %220.2 = LdVar              eR    what, e150.0
  lgl$#-          %220.3 = IsType                   %220.2 isA val?~- | miss
  void                    Branch                   %220.3 -> BB224 (if true) | BB225 (if false)
BB221   <- [128]
  void                    Nop                !     
  val?^ | miss    %221.1 = %128.2
  dr              %221.2 = Typecheck@0x55de2b69a940[Type#169]
  goto BB129
BB212   <- [64]
  val?^ | miss    %212.0 = LdVar              eR    what, e150.0
  lgl$#-          %212.1 = IsType                   %212.0 isA val?~- | miss
  void                    Branch                   %212.1 -> BB214 (if true) | BB215 (if false)
BB213   <- [64]
  void                    Nop                !     
  lgl$#-          %213.1 = %64.4
  dr              %213.2 = DeadBranchReached@0x55de2b69a940[Test#12]
  goto BB65
BB224   <- [220]
  val?~- | miss   %224.0 = CastType           d     dn %220.2
  val?-           %224.1 = Force!<value>            %224.0,    <str$->
  val?            %224.2 = Subassign2_1D      !v    %128.1, %220.1, %224.1, e150.0
  void                    StVar              lW    allTable, %224.2, e150.0
  goto BB60
BB225   <- [220]
  void                    Nop                !     
  val?^ | miss    %225.1 = %220.2
  dr              %225.2 = Typecheck@0x55de2b69a940[Type#170]
  goto BB129
BB129   <- [221, 225]
  val?^ | miss    %129.0 = Phi                      %221.1:BB221, %225.1:BB225
  val?^ | miss    %129.1 = %129.0
  dr              %129.2 = Phi                      %221.2:BB221, %225.2:BB225
  dr              %129.3 = %129.2
  fs              %129.4 = FrameState         R     0x55de286ab8f0+2946: [%162.1, %162.2, %162.4, %128.1], env=e150.0
  void                    Deopt              !v    %129.4, %129.3, %129.1   !
BB214   <- [212]
  val?~- | miss   %214.0 = CastType           d     dn %212.0
  val?-           %214.1 = Force!<value>            %214.0,    <str$->
  void                    Branch                   %64.5 -> BB218 (if true) | BB219 (if false)
BB215   <- [212]
  void                    Nop                !     
  val?^ | miss    %215.1 = %212.0
  dr              %215.2 = Typecheck@0x55de2b69a940[Type#176]
  goto BB65
BB65   <- [213, 215, 219]
  val?^ | miss    %65.0 = Phi                      %213.1:BB213, %215.1:BB215, %219.1:BB219
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %213.2:BB213, %215.2:BB215, %219.2:BB219
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x55de286ab8f0+3079: [%162.1, %162.2, %63.2, %64.3], env=e150.0
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB218   <- [214]
  val?-           %218.0 = CastType           d     dn %64.3   <env->
  val?            %218.1 = Extract2_1D        wed   %218.0, %214.1, elided   <cls>
  void                    StVar              lW    obj, %218.1, e150.0
  val?^ | miss    %218.3 = LdVar              eR    is.primitive, e150.0
  lgl$#-          %218.4 = Identical                %218.3, function(x) <(rir::DispatchTable*)0x55de2ac9a9|...
  void                    Branch                   %218.4 -> BB222 (if true) | BB223 (if false)
BB219   <- [214]
  void                    Nop                !     
  val?            %219.1 = %64.3
  dr              %219.2 = Typecheck@0x55de2b69a940[Type#174]
  goto BB65
BB222   <- [218]
  val             %222.0 = ChkMissing         e     %218.1
  str$-           %222.1 = CallSafeBuiltin    wed   typeof(%218.1)    <str$->
  int$-           %222.2 = Length                   %222.1
  lgl$-           %222.3 = Eq                 d     %222.2, 1L, elided   <true>
  lgl$#-          %222.4 = Identical                %222.3, true
  void                    Branch                   %222.4 -> BB226 (if true) | BB227 (if false)
BB223   <- [218]
  fs              %223.0 = FrameState         R     0x55de286ab8f0+3145: [%162.1, %162.2, %63.2], env=e150.0
  void                    Deopt              !v    %223.0, CallTarget@0x55de2b69a940[Call#58], %218.3   !
BB226   <- [222]
  lgl$-           %226.0 = CallSafeBuiltin    wed   is.na(%222.1) 
  lgl$#-          %226.1 = CheckTrueFalse     e     %226.0   <false>
  void                    Branch                   %226.1 -> BB229 (if true) | BB228 (if false)
BB227   <- [222]
  prom-           %227.0 = MkArg                    %218.1, .mergeMethodsTable[0x55de2e9bb6f0]_p10 (!refl), e150.0
  val?~           %227.1 = CastType                 up %227.0
  env             e227.2 = MkEnv              l     x=%227.1, parent=R_BaseNamespace, context 0
  prom-           %227.3 = MkArg                    %218.1, .mergeMethodsTable[0x55de2e9bb6f0]_p31 (!refl), e227.2
  val?~           %227.4 = CastType                 up %227.3
  fs              %227.5 = FrameState         R     0x55de286ab8f0+3177: [%162.1, %162.2, %63.2], env=e150.0
  fs              %227.6 = FrameState         R     0x55de2c9144e0+32: [], env=e227.2, next=%227.5
  env             e227.7 = (MkEnv)            l     x=%227.4, parent=R_BaseNamespace, context -1
  fs              %227.8 = FrameState         R     0x55de2a4e4290+27: [%222.1], env=e227.7, next=%227.6
  void                    Deopt              !v    %227.8, DeadBranchReached@0x55de2ccbb258[Test#1], %222.4   !
BB229   <- [226]
  void                    Nop                !     
  lgl$#-          %229.1 = %226.1
  dr              %229.2 = DeadBranchReached@0x55de2ccbb258[Test#7]
  goto BB71
BB228   <- [226]
  lgl$-           %228.0 = Eq                 d     %222.1, special, elided
  lgl$#-          %228.1 = CheckTrueFalse     e     %228.0
  void                    Branch                   %228.1 -> BB122 (if true) | BB73 (if false)
BB71   <- [229, 231]
  val?^ | miss    %71.0 = Phi                      %229.1:BB229, %231.1:BB231
  val?^ | miss    %71.1 = %71.0
  dr              %71.2 = Phi                      %229.2:BB229, %231.2:BB231
  dr              %71.3 = %71.2
  prom-           %71.4 = MkArg                    %218.1, .mergeMethodsTable[0x55de2e9bb6f0]_p10 (!refl), e150.0
  val?~           %71.5 = CastType                 up %71.4
  fs              %71.6 = FrameState         R     0x55de286ab8f0+3177: [%162.1, %162.2, %63.2], env=e150.0
  env             e71.7 = (MkEnv)            l     x=%71.5, parent=R_BaseNamespace, context 0
  fs              %71.8 = FrameState         R     0x55de2c9144e0+240: [%222.1, %226.0], env=e71.7, next=%71.6
  void                    Deopt              !v    %71.8, %71.3, %71.1   !
BB122   <- [228]
  void                    Nop                !     
  goto BB121
BB73   <- [228]
  lgl$-           %73.0 = Eq                 d     %222.1, builtin, elided
  lgl$#-          %73.1 = CheckTrueFalse     e     %73.0
  void                    Branch                   %73.1 -> BB120 (if true) | BB74 (if false)
BB121   <- [122, 120]
  void                    Nop                !     
  lgl$#-          %121.1 = true
  goto BB75
BB120   <- [73]
  void                    Nop                !     
  goto BB121
BB74   <- [73]
  void                    Nop                !     
  lgl$#-          %74.1 = false
  goto BB75
BB75   <- [74, 121]
  lgl$#-          %75.0 = Phi                      %74.1:BB74, %121.1:BB121
  lgl$#-          %75.1 = %75.0
  void                    Branch                   %75.1 -> BB119 (if true) | BB76 (if false)
BB119   <- [75]
  val?^ | miss    %119.0 = LdVar              eR    anySig, e150.0
  val?            %119.1 = Force!             !v    %119.0, e150.0   <val?_>
  void                    StVar              lW    sig, %119.1, e150.0
  val?            %119.3 = %119.1
  goto BB85
BB76   <- [75]
  val?^ | miss    %76.0 = LdVar              eR    is, e150.0
  lgl$#-          %76.1 = Identical                %76.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %76.1 -> BB230 (if true) | BB231 (if false)
BB85   <- [119, 84]
  val?            %85.0 = Phi                      %119.3:BB119, %84.5:BB84
  val?            %85.1 = %85.0
  val?^ | miss    %85.2 = LdVar              eR    length, e150.0
  lgl$#-          %85.3 = Identical                <blt length>, %85.2   <true>
  void                    Branch                   %85.3 -> BB234 (if true) | BB235 (if false)
BB230   <- [76]
  prom-           %230.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p11 (!refl), e150.0
  val?            %230.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%230.0, "MethodDefinition") e150.0   <lgl$->
  lgl$#-          %230.2 = IsType                   %230.1 isA lgl$-
  void                    Branch                   %230.2 -> BB232 (if true) | BB233 (if false)
BB231   <- [76]
  void                    Nop                !     
  val?^ | miss    %231.1 = %76.0
  dr              %231.2 = CallTarget@0x55de2b69a940[Call#59]
  goto BB71
BB234   <- [85]
  val             %234.0 = ChkMissing         e     %85.1   <str>
  val?            %234.1 = CallBuiltin        !v    length(%234.0) e150.0   <int$->
  lgl$#-          %234.2 = IsType                   %234.1 isA int$-
  void                    Branch                   %234.2 -> BB236 (if true) | BB237 (if false)
BB235   <- [85]
  fs              %235.0 = FrameState         R     0x55de286ab8f0+3912: [%162.1, %162.2, %63.2], env=e150.0
  void                    Deopt              !v    %235.0, DeadBranchReached@0x55de2b69a940[Test#17], %85.3   !
BB232   <- [230]
  lgl$-           %232.0 = CastType           d     dn %230.1
  lgl$#-          %232.1 = CheckTrueFalse     e     %232.0
  void                    Branch                   %232.1 -> BB84 (if true) | BB79 (if false)
BB233   <- [230]
  fs              %233.0 = FrameState         R     0x55de286ab8f0+3225: [%162.1, %162.2, %63.2, %230.1], env=e150.0
  void                    Deopt              !v    %233.0, Typecheck@0x55de2b69a940[Type#181], %230.1   !
BB236   <- [234]
  int$-           %236.0 = CastType           d     dn %234.1
  void                    StVar              lW    ns, %236.0, e150.0
  val?^ | miss    %236.2 = LdVar              eR    n, e150.0
  lgl$#-          %236.3 = IsType                   %236.2 isA val?~- | miss
  void                    Branch                   %236.3 -> BB238 (if true) | BB239 (if false)
BB237   <- [234]
  fs              %237.0 = FrameState         R     0x55de286ab8f0+4003: [%162.1, %162.2, %63.2, %234.1], env=e150.0
  void                    Deopt              !v    %237.0, Typecheck@0x55de2b69a940[Type#231], %234.1   !
BB84   <- [232]
  (cls|spec|blt)  %84.0 = LdFun              !v    @, <0x55de2854ebd8>, e150.0
  prom-           %84.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p12, e150.0
  prom-           %84.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p13, e150.0
  val?            %84.3 = Call               !v    %84.0(%84.1, %84.2) e150.0   <str>
  void                    StVar              lW    sig, %84.3, e150.0
  val?            %84.5 = %84.3
  goto BB85
BB79   <- [232]
  val?^ | miss    %79.0 = LdVar              eR    is.environment, e150.0
  lgl$#-          %79.1 = Identical                <blt is.environment>, %79.0   <@?>
  void                    Branch                   %79.1 -> BB81 (if true) | BB80 (if false)
BB238   <- [236]
  val?~- | miss   %238.0 = CastType           d     dn %236.2
  val?-           %238.1 = Force!<value>            %238.0,    <(int|real)$->
  lgl-            %238.2 = Eq                 wed   %236.0, %238.1, elided   <lgl$->
  lgl$#-          %238.3 = IsType                   %238.2 isA lgl$-
  void                    Branch                   %238.3 -> BB240 (if true) | BB241 (if false)
BB239   <- [236]
  fs              %239.0 = FrameState         R     0x55de286ab8f0+4017: [%162.1, %162.2, %63.2], env=e150.0
  void                    Deopt              !v    %239.0, Typecheck@0x55de2b69a940[Type#233], %236.2   !
BB81   <- [79]
  val?^ | miss    %81.0 = LdVar              eR    obj, e150.0
  val?            %81.1 = Force!             !v    %81.0, e150.0   <val?_>
  lgl$#-          %81.2 = CallSafeBuiltin    wed   is.environment(%81.1)    <val?_>
  void                    Branch                   %81.2 -> BB83 (if true) | BB82 (if false)
BB80   <- [79]
  (cls|spec|blt)  %80.0 = LdFun              !v    is.environment, e150.0
  fs              %80.1 = FrameState         R     0x55de286ab8f0+3264: [%162.1, %162.2, %63.2, %80.0], env=e150.0
  void                    Deopt              !v    %80.1, DeadCall@0x55de2b69a940[Call#60], %80.0   !
BB240   <- [238]
  lgl$-           %240.0 = CastType           d     dn %238.2
  lgl$#-          %240.1 = CheckTrueFalse     e     %240.0
  void                    Branch                   %240.1 -> BB118 (if true) | BB94 (if false)
BB241   <- [238]
  fs              %241.0 = FrameState         R     0x55de286ab8f0+4046: [%162.1, %162.2, %63.2, %238.2], env=e150.0
  void                    Deopt              !v    %241.0, Typecheck@0x55de2b69a940[Type#234], %238.2   !
BB83   <- [81]
  (cls|spec|blt)  %83.0 = LdFun              !v    as.list, e150.0
  fs              %83.1 = FrameState         R     0x55de286ab8f0+3394: [%162.1, %162.2, %63.2, %83.0], env=e150.0
  void                    Deopt              !v    %83.1, DeadCall@0x55de2b69a940[Call#68], %83.0   !
BB82   <- [81]
  (cls|spec|blt)  %82.0 = LdFun              !v    stop, e150.0
  fs              %82.1 = FrameState         R     0x55de286ab8f0+3343: [%162.1, %162.2, %63.2, %82.0], env=e150.0
  void                    Deopt              !v    %82.1, DeadCall@0x55de2b69a940[Call#61], %82.0   !
BB118   <- [240]
  void                    Nop                !     
  goto BB97
BB94   <- [240]
  lgl-            %94.0 = Lt                 wed   %236.0, %238.1, elided   <val?_>
  lgl$#-          %94.1 = CheckTrueFalse     we    %94.0
  void                    Branch                   %94.1 -> BB117 (if true) | BB95 (if false)
BB97   <- [118, 96]
  val?^ | miss    %97.0 = LdVar              eR    add, e150.0
  val?            %97.1 = Force!<wrapped>    !v    %97.0, e150.0   <lgl$->
  lgl$#-          %97.2 = CheckTrueFalse     we    %97.1
  void                    Branch                   %97.2 -> BB101 (if true) | BB100 (if false)
BB117   <- [94]
  (int|real|complex)- %117.0 = Sub                wed   %238.1, %236.0, elided   <val?_>
  void                    StVar              lW    nadd, %117.0, e150.0
  (cls|spec|blt)  %117.2 = LdFun              !v    packageSlot, e150.0
  fs              %117.3 = FrameState         R     0x55de286ab8f0+4418: [%162.1, %162.2, %63.2, %117.2], env=e150.0
  void                    Deopt              !v    %117.3, DeadCall@0x55de2b69a940[Call#85], %117.2   !
BB95   <- [94]
  val?^ | miss    %95.0 = LdVar              eR    add, e150.0
  val?            %95.1 = Force!             !v    %95.0, e150.0   <val?_>
  lgl$#-          %95.2 = CheckTrueFalse     we    %95.1
  void                    Branch                   %95.2 -> BB116 (if true) | BB96 (if false)
BB101   <- [97]
  val?^ | miss    %101.0 = LdVar              eR    exists, e150.0
  lgl$#-          %101.1 = Identical                %101.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %101.1 -> BB242 (if true) | BB243 (if false)
BB100   <- [97]
  (cls|spec|blt)  %100.0 = LdFun              !v    exists, e150.0
  fs              %100.1 = FrameState         R     0x55de286ab8f0+4956: [%162.1, %162.2, %63.2, %100.0], env=e150.0
  void                    Deopt              !v    %100.1, DeadCall@0x55de2b69a940[Call#100], %100.0   !
BB116   <- [95]
  (cls|spec|blt)  %116.0 = LdFun              !v    @, e150.0
  fs              %116.1 = FrameState         R     0x55de286ab8f0+4127: [%162.1, %162.2, %63.2, %116.0], env=e150.0
  void                    Deopt              !v    %116.1, DeadCall@0x55de2b69a940[Call#82], %116.0   !
BB96   <- [95]
  void                    Nop                !     
  goto BB97
BB242   <- [101]
  prom-           %242.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p14, e150.0
  prom-           %242.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p15, e150.0
  val?            %242.2 = StaticCall         !v    exists[0x55de2a3c8820](%242.0, missingArg, %242.1, missingArg, missingArg, false) { 0 2n 5n } e150.0   <lgl$->
  lgl$#-          %242.3 = IsType                   %242.2 isA lgl$-
  void                    Branch                   %242.3 -> BB244 (if true) | BB245 (if false)
BB243   <- [101]
  fs              %243.0 = FrameState         R     0x55de286ab8f0+4946: [%162.1, %162.2, %63.2, %97.2], env=e150.0
  void                    Deopt              !v    %243.0, CallTarget@0x55de2b69a940[Call#106], %101.0   !
BB244   <- [242]
  lgl$-           %244.0 = CastType           d     dn %242.2
  lgl$#-          %244.1 = CheckTrueFalse     e     %244.0
  void                    Branch                   %244.1 -> BB108 (if true) | BB104 (if false)
BB245   <- [242]
  void                    Nop                !     
  val?            %245.1 = %242.2
  dr              %245.2 = Typecheck@0x55de2b69a940[Type#318]
  goto BB102
BB108   <- [244]
  val?^ | miss    %108.0 = LdVar              eR    .newOrMultipleMethod, e150.0
  lgl$#-          %108.1 = Identical                %108.0, function(obj, what, table) <(rir::DispatchTabl|...
  void                    Branch                   %108.1 -> BB246 (if true) | BB247 (if false)
BB104   <- [244]
  void                    Nop                !     
  goto BB105
BB102   <- [245, 247]
  val?^ | miss    %102.0 = Phi                      %245.1:BB245, %247.1:BB247
  val?^ | miss    %102.1 = %102.0
  dr              %102.2 = Phi                      %245.2:BB245, %247.2:BB247
  dr              %102.3 = %102.2
  fs              %102.4 = FrameState         R     0x55de286ab8f0+5336: [%162.1, %162.2, %63.2, %242.2], env=e150.0
  void                    Deopt              !v    %102.4, %102.3, %102.1   !
BB246   <- [108]
  prom-           %246.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p16, e150.0
  prom-           %246.1 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p17, e150.0
  prom-           %246.2 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p18, e150.0
  val?            %246.3 = StaticCall         !v    .newOrMultipleMethod[0x55de2ac73790](%246.0, %246.1, %246.2) e150.0   <cls>
  void                    StVar              lW    obj, %246.3, e150.0
  val?^ | miss    %246.5 = LdVar              eR    allTable, e150.0
  lgl$#-          %246.6 = IsType                   %246.5 isA val?~- | miss
  void                    Branch                   %246.6 -> BB248 (if true) | BB249 (if false)
BB247   <- [108]
  void                    Nop                !     
  val?^ | miss    %247.1 = %108.0
  dr              %247.2 = CallTarget@0x55de2b69a940[Call#107]
  goto BB102
BB105   <- [104, 254]
  val?^ | miss    %105.0 = LdVar              eR    obj, e150.0
  val?            %105.1 = Force!<value>      !v    %105.0, e150.0   <cls>
  val?^ | miss    %105.2 = LdVar              eR    table, e150.0
  val?            %105.3 = Force!<value>      !v    %105.2, e150.0   <env->
  val?^ | miss    %105.4 = LdVar              eR    what, e150.0
  lgl$#-          %105.5 = IsType                   %105.4 isA val?~- | miss
  void                    Branch                   %105.5 -> BB256 (if true) | BB257 (if false)
BB248   <- [246]
  val?~- | miss   %248.0 = CastType           d     dn %246.5
  val?-           %248.1 = Force!<value>            %248.0,    <env->
  lgl$-           %248.2 = Is                       %248.1, NULL
  lgl$#-          %248.3 = CheckTrueFalse     e     %248.2
  void                    Branch                   %248.3 -> BB115 (if true) | BB111 (if false)
BB249   <- [246]
  void                    Nop                !     
  val?^ | miss    %249.1 = %246.5
  dr              %249.2 = Typecheck@0x55de2b69a940[Type#323]
  goto BB109
BB256   <- [105]
  val?~- | miss   %256.0 = CastType           d     dn %105.4
  val?-           %256.1 = Force!<value>            %256.0,    <str$->
  val?            %256.2 = Subassign2_1D      !v    %105.1, %105.3, %256.1, e150.0
  void                    StVar              lW    table, %256.2, e150.0
  int$-           %256.4 = %63.2
  goto BB63
BB257   <- [105]
  fs              %257.0 = FrameState         R     0x55de286ab8f0+5572: [%162.1, %162.2, %63.2, %105.1, %105.3], env=e150.0
  void                    Deopt              !v    %257.0, Typecheck@0x55de2b69a940[Type#331], %105.4   !
BB115   <- [248]
  val?^ | miss    %115.0 = LdVar              eR    get, e150.0
  lgl$#-          %115.1 = Identical                %115.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %115.1 -> BB250 (if true) | BB251 (if false)
BB111   <- [248]
  void                    Nop                !     
  goto BB112
BB109   <- [249, 251]
  val?^ | miss    %109.0 = Phi                      %249.1:BB249, %251.1:BB251
  val?^ | miss    %109.1 = %109.0
  dr              %109.2 = Phi                      %249.2:BB249, %251.2:BB251
  dr              %109.3 = %109.2
  fs              %109.4 = FrameState         R     0x55de286ab8f0+5408: [%162.1, %162.2, %63.2], env=e150.0
  void                    Deopt              !v    %109.4, %109.3, %109.1   !
BB250   <- [115]
  prom-           %250.0 = MkArg                    unboundValue, .mergeMethodsTable[0x55de2e9bb6f0]_p19, e150.0
  val?            %250.1 = StaticCall         !v    get[0x55de2b44d4c0](".AllMTable", missingArg, %250.0) { 0 2n } e150.0   <env->
  void                    StVar              lW    allTable, %250.1, e150.0
  goto BB112
BB251   <- [115]
  void                    Nop                !     
  val?^ | miss    %251.1 = %115.0
  dr              %251.2 = CallTarget@0x55de2b69a940[Call#108]
  goto BB109
BB112   <- [111, 250]
  val?^ | miss    %112.0 = LdVar              eR    obj, e150.0
  val?            %112.1 = Force!<value>      !v    %112.0, e150.0   <cls>
  val?^ | miss    %112.2 = LdVar              eR    allTable !upd, e150.0
  lgl$#-          %112.3 = IsType                   %112.2 isA val?~- | miss
  void                    Branch                   %112.3 -> BB252 (if true) | BB253 (if false)
BB252   <- [112]
  val?~- | miss   %252.0 = CastType           d     dn %112.2
  val?-           %252.1 = Force!<value>            %252.0,    <env->
  val?^ | miss    %252.2 = LdVar              eR    what, e150.0
  lgl$#-          %252.3 = IsType                   %252.2 isA val?~- | miss
  void                    Branch                   %252.3 -> BB254 (if true) | BB255 (if false)
BB253   <- [112]
  void                    Nop                !     
  val?^ | miss    %253.1 = %112.2
  dr              %253.2 = Typecheck@0x55de2b69a940[Type#327]
  goto BB113
BB254   <- [252]
  val?~- | miss   %254.0 = CastType           d     dn %252.2
  val?-           %254.1 = Force!<value>            %254.0,    <str$->
  val?            %254.2 = Subassign2_1D      !v    %112.1, %252.1, %254.1, e150.0
  void                    StVar              lW    allTable, %254.2, e150.0
  goto BB105
BB255   <- [252]
  void                    Nop                !     
  val?^ | miss    %255.1 = %252.2
  dr              %255.2 = Typecheck@0x55de2b69a940[Type#328]
  goto BB113
BB113   <- [253, 255]
  val?^ | miss    %113.0 = Phi                      %253.1:BB253, %255.1:BB255
  val?^ | miss    %113.1 = %113.0
  dr              %113.2 = Phi                      %253.2:BB253, %255.2:BB255
  dr              %113.3 = %113.2
  fs              %113.4 = FrameState         R     0x55de286ab8f0+5506: [%162.1, %162.2, %63.2, %112.1], env=e150.0
  void                    Deopt              !v    %113.4, %113.3, %113.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3

│ .mergeMethodsTable[0x55de2e9bb6f0]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
