
┌──────────────────────────────────────────────────────────────────────────────┐
│ implicitGeneric[0x55de2aad9540]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
implicitGeneric[0x55de2aad9540]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     name=%0.1, where=%0.0, generic(miss)=missingArg, parent=<env 0x55de28b56378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p0, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    generic, %0.4, e0.2
  val?^ | miss    %0.6  = LdVar              eR    nzchar, <env 0x55de28b56378>
  lgl$#-          %0.7  = Identical                <blt nzchar>, %0.6   <true>
  void                    Branch                   %0.7 -> BB117 (if true) | BB118 (if false)
BB117   <- [0]
  val+            %117.0 = Force!<lazy>       !vr   %0.1,    <str$->
  val?            %117.1 = CallBuiltin        !v    nzchar(%117.0) e0.2   <lgl$->
  lgl$#-          %117.2 = IsType                   %117.1 isA lgl$-
  void                    Branch                   %117.2 -> BB119 (if true) | BB120 (if false)
BB118   <- [0]
  fs              %118.0 = FrameState         R     0x55de2e77be60+0: [], env=e0.2
  void                    Deopt              !v    %118.0, DeadBranchReached@0x55de2adfb6f0[Test#0], %0.7
BB119   <- [117]
  lgl$-           %119.0 = CastType           d     dn %117.1
  lgl$-           %119.1 = Not                d     %119.0, elided
  lgl$#-          %119.2 = CheckTrueFalse     e     %119.1
  void                    Branch                   %119.2 -> BB115 (if true) | BB5 (if false)
BB120   <- [117]
  void                    Nop                !     
  val?            %120.1 = %117.1
  dr              %120.2 = Typecheck@0x55de2adfb6f0[Type#7]
  goto BB3
BB115   <- [119]
  (cls|spec|blt)  %115.0 = LdFun              !v    stop, e0.2
  fs              %115.1 = FrameState         R     0x55de2e77be60+113: [%115.0], env=e0.2
  void                    Deopt              !v    %115.1, DeadCall@0x55de2adfb6f0[Call#4], %115.0   !
BB5   <- [119]
  lgl$-           %5.0  = Missing            eR    generic, e0.2
  lgl$-           %5.1  = Not                d     %5.0, elided
  lgl$-           %5.2  = AsLogical                %5.1
  lgl$#-          %5.3  = Identical                %5.2, false
  lgl$-           %5.4  = AsLogical                %5.2
  lgl$#-          %5.5  = Identical                %5.4, false
  void                    Branch                   %5.3 -> BB7 (if true) | BB6 (if false)
BB3   <- [120, 122]
  val?^ | miss    %3.0  = Phi                      %120.1:BB120, %122.1:BB122
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %120.2:BB120, %122.2:BB122
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55de2e77be60+91: [%117.1], env=e0.2
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB7   <- [5]
  void                    Branch                   %5.5 -> BB9 (if true) | BB8 (if false)
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    is, e0.2
  fs              %6.1  = FrameState         R     0x55de2e77be60+173: [%5.2, %6.0], env=e0.2
  void                    Deopt              !v    %6.1, DeadCall@0x55de2adfb6f0[Call#6], %6.0   !
BB9   <- [7]
  lgl$#-          %9.0  = CheckTrueFalse     e     %5.4
  void                    Branch                   %9.0 -> BB114 (if true) | BB10 (if false)
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    .identC, e0.2
  fs              %8.1  = FrameState         R     0x55de2e77be60+224: [%5.4, %8.0], env=e0.2
  void                    Deopt              !v    %8.1, DeadCall@0x55de2adfb6f0[Call#7], %8.0   !
BB114   <- [9]
  (cls|spec|blt)  %114.0 = LdFun              !v    stop, e0.2
  fs              %114.1 = FrameState         R     0x55de2e77be60+280: [%114.0], env=e0.2
  void                    Deopt              !v    %114.1, DeadCall@0x55de2adfb6f0[Call#9], %114.0   !
BB10   <- [9]
  lgl$-           %10.0 = Missing            eR    generic, e0.2
  lgl$-           %10.1 = AsLogical                %10.0
  lgl$#-          %10.2 = Identical                %10.1, true
  lgl$-           %10.3 = AsLogical                %10.1
  lgl$#-          %10.4 = Identical                %10.3, false
  void                    Branch                   %10.2 -> BB12 (if true) | BB11 (if false)
BB12   <- [10]
  void                    Branch                   %10.4 -> BB113 (if true) | BB13 (if false)
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    is, e0.2
  fs              %11.1 = FrameState         R     0x55de2e77be60+339: [%10.1, %11.0], env=e0.2
  void                    Deopt              !v    %11.1, DeadCall@0x55de2adfb6f0[Call#12], %11.0   !
BB113   <- [12]
  void                    Nop                !     
  lgl$-           %113.1 = %10.3
  goto BB16
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    isGeneric, e0.2
  lgl$#-          %13.1 = Identical                %13.0, function(f, where=topenv(parent.frame()), fdef|...
  void                    Branch                   %13.1 -> BB121 (if true) | BB122 (if false)
BB16   <- [113, 123]
  lgl$-           %16.0 = Phi                      %123.4:BB123, %113.1:BB113
  lgl$-           %16.1 = %16.0
  void                    StVar              lW    createGeneric, %16.1, e0.2
  lgl$#-          %16.3 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.3 -> BB22 (if true) | BB19 (if false)
BB121   <- [13]
  prom-           %121.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p3, e0.2
  prom-           %121.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p4, e0.2
  val?            %121.2 = StaticCall         !v    isGeneric[0x55de2e095ac0](%121.0, %121.1) e0.2   <lgl$->
  lgl$#-          %121.3 = IsType                   %121.2 isA lgl$-
  void                    Branch                   %121.3 -> BB123 (if true) | BB124 (if false)
BB122   <- [13]
  void                    Nop                !     
  val?^ | miss    %122.1 = %13.0
  dr              %122.2 = CallTarget@0x55de2adfb6f0[Call#13]
  goto BB3
BB22   <- [16]
  val?^ | miss    %22.0 = LdVar              eR    getFunction, e0.2
  lgl$#-          %22.1 = Identical                %22.0, function(name, generic=TRUE, mustFind=TRUE, wh|...
  void                    Branch                   %22.1 -> BB125 (if true) | BB126 (if false)
BB19   <- [16]
  void                    Nop                !     
  goto BB20
BB123   <- [121]
  lgl$-           %123.0 = CastType           d     dn %121.2
  lgl$-           %123.1 = Not                d     %123.0, elided
  lgl$-           %123.2 = AsLogical                %123.1
  lgl$-           %123.3 = LAnd                     %10.3, %123.2
  lgl$-           %123.4 = %123.3
  goto BB16
BB124   <- [121]
  fs              %124.0 = FrameState         R     0x55de2e77be60+424: [%10.3, %121.2], env=e0.2
  void                    Deopt              !v    %124.0, Typecheck@0x55de2adfb6f0[Type#23], %121.2   !
BB125   <- [22]
  prom-           %125.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p5, e0.2
  prom-           %125.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p6, e0.2
  val?            %125.2 = StaticCall         !v    getFunction[0x55de2c12dcf0](%125.0, missingArg, false, %125.1) { 0 3n 2n } e0.2   <cls->
  lgl$-           %125.3 = Is                       %125.2, NULL
  void                    StVar              lW    fdefault, %125.2, e0.2
  val             %125.5 = ChkMissing         e     %125.2
  lgl$#-          %125.6 = CheckTrueFalse     e     %125.3
  void                    Branch                   %125.6 -> BB112 (if true) | BB25 (if false)
BB126   <- [22]
  fs              %126.0 = FrameState         R     0x55de2e77be60+441: [], env=e0.2
  void                    Deopt              !v    %126.0, CallTarget@0x55de2adfb6f0[Call#14], %22.0   !
BB20   <- [19, 79, 197]
  val?^ | miss    %20.0 = LdVar              eR    generic, e0.2
  void                    Visible            v     
  val?            %20.2 = Force!<value>      !     %20.0, e0.2   <cls>
  val?            %20.3 = %20.2
  goto BB21
BB112   <- [125]
  void                    Visible            v     
  nil-            %112.1 = nil
  goto BB21
BB25   <- [125]
  val?^ | miss    %25.0 = LdVar              eR    environment, e0.2
  lgl$#-          %25.1 = Identical                %25.0, function(fun=NULL) <(rir::DispatchTable*)0x55d|...
  void                    Branch                   %25.1 -> BB127 (if true) | BB128 (if false)
BB21   <- [112, 20]
  val?            %21.0 = Phi                      %20.3:BB20, %112.1:BB112
  val?            %21.1 = %21.0
  void                    Return             l     %21.1
BB127   <- [25]
  prom-           %127.0 = MkArg                    %125.2, implicitGeneric[0x55de2aad9540]_p7 (!refl), 
  val?            %127.1 = StaticCall         !v    environment[0x55de2c78df90](%127.0) e0.2   <env->
  void                    StVar              lW    env, %127.1, e0.2
  val?^ | miss    %127.3 = LdVar              eR    .derivedDefaultMethod, e0.2
  lgl$#-          %127.4 = Identical                %127.3, function(fdef, internal=NULL) <(rir::DispatchT|...
  void                    Branch                   %127.4 -> BB129 (if true) | BB130 (if false)
BB128   <- [25]
  fs              %128.0 = FrameState         R     0x55de2e77be60+534: [], env=e0.2
  void                    Deopt              !v    %128.0, CallTarget@0x55de2adfb6f0[Call#15], %25.0   !
BB129   <- [127]
  prom-           %129.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p8, e0.2
  ct              %129.1 = PushContext        lCL   %129.0, .derivedDefaultMethod(fdefault), function(fdef, internal=NULL) <(rir::DispatchT|..., e0.2
  val?^           %129.2 = CastType                 up %129.0
  val?^ | miss    %129.3 = LdVar              eR    is.function, <env 0x55de28b56378>
  lgl$#-          %129.4 = Identical                <blt is.function>, %129.3   <true>
  void                    Branch                   %129.4 -> BB131 (if true) | BB132 (if false)
BB130   <- [127]
  void                    Nop                !     
  val?^ | miss    %130.1 = %127.3
  dr              %130.2 = CallTarget@0x55de2adfb6f0[Call#16]
  goto BB26
BB131   <- [129]
  env             e131.0 = MkEnv              l     fdef=%129.2, internal(miss)=nil, parent=<env 0x55de28b56378>, context 1
  val?            %131.1 = Force!<lazy>       !vL   %129.2, e131.0   <cls->
  lgl$#-          %131.2 = IsType                   %131.1 isA val?-
  void                    Branch                   %131.2 -> BB133 (if true) | BB134 (if false)
BB132   <- [129]
  void                    DropContext        C     
  lgl$#-          %132.1 = %129.4
  dr              %132.2 = DeadBranchReached@0x55de2ee04bf8[Test#0]
  goto BB26
BB26   <- [130, 132]
  val?^ | miss    %26.0 = Phi                      %130.1:BB130, %132.1:BB132
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %130.2:BB130, %132.2:BB132
  dr              %26.3 = %26.2
  fs              %26.4 = FrameState         R     0x55de2e77be60+617: [], env=e0.2
  void                    Deopt              !v    %26.4, %26.3, %26.1   !
BB133   <- [131]
  val?-           %133.0 = CastType           d     dn %131.1   <cls->
  lgl$#-          %133.1 = CallSafeBuiltin    wed   is.function(%133.0)    <lgl$->
  void                    Branch                   %133.1 -> BB101 (if true) | BB32 (if false)
BB134   <- [131]
  fs              %134.0 = FrameState         R     0x55de2e77be60+649: [], env=e0.2
  fs              %134.1 = FrameState         R     0x55de2f2cdd50+69: [<blt is.function>, %131.1], env=e131.0, next=%134.0
  void                    Deopt              !v    %134.1, Typecheck@0x55de2ee04bf8[Type#1], %131.1   !
BB101   <- [133]
  val?^ | miss    %101.0 = LdVar              eR    is.primitive, <env 0x55de28b56378>
  lgl$#-          %101.1 = Identical                %101.0, function(x) <(rir::DispatchTable*)0x55de2ac9a9|...
  void                    Branch                   %101.1 -> BB135 (if true) | BB136 (if false)
BB32   <- [133]
  void                    Nop                !     
  lgl$#-          %32.1 = %133.1
  goto BB33
BB135   <- [101]
  str$-           %135.0 = CallSafeBuiltin    wed   typeof(%133.0)    <str$->
  int$-           %135.1 = Length                   %135.0
  lgl$-           %135.2 = Eq                 d     %135.1, 1L, elided   <true>
  lgl$#-          %135.3 = Identical                %135.2, true
  void                    Branch                   %135.3 -> BB137 (if true) | BB138 (if false)
BB136   <- [101]
  fs              %136.0 = FrameState         R     0x55de2e77be60+649: [], env=e0.2
  fs              %136.1 = FrameState         R     0x55de2f2cdd50+91: [%133.1], env=e131.0, next=%136.0
  void                    Deopt              !v    %136.1, CallTarget@0x55de2ee04bf8[Call#1], %101.0   !
BB33   <- [32, 108]
  lgl$-           %33.0 = Phi                      %108.4:BB108, %32.1:BB32
  lgl$-           %33.1 = %33.0
  lgl$#-          %33.2 = CheckTrueFalse     e     %33.1
  void                    Branch                   %33.2 -> BB98 (if true) | BB34 (if false)
BB137   <- [135]
  lgl$-           %137.0 = CallSafeBuiltin    wed   is.na(%135.0) 
  lgl$#-          %137.1 = CheckTrueFalse     e     %137.0   <false>
  void                    Branch                   %137.1 -> BB140 (if true) | BB139 (if false)
BB138   <- [135]
  prom-           %138.0 = MkArg                    %133.0, implicitGeneric[0x55de2aad9540]_p36 (!refl), e131.0
  val?~           %138.1 = CastType                 up %138.0
  env             e138.2 = (MkEnv)            l     x=%138.1, parent=R_BaseNamespace, context 0
  env             e138.3 = MaterializeEnv           , e138.2   <@?>
  fs              %138.4 = FrameState         R     0x55de2e77be60+649: [], env=e0.2
  fs              %138.5 = FrameState         R     0x55de2f2cdd50+135: [%133.1], env=e131.0, next=%138.4
  fs              %138.6 = FrameState         R     0x55de2c9144e0+32: [], env=e138.3, next=%138.5
  prom-           %138.7 = MkArg                    %133.0, implicitGeneric[0x55de2aad9540]_p37 (!refl), e138.3
  val?~           %138.8 = CastType                 up %138.7
  env             e138.9 = (MkEnv)            l     x=%138.8, parent=R_BaseNamespace, context -1
  fs              %138.10 = FrameState         R     0x55de2a4e4290+27: [%135.0], env=e138.9, next=%138.6
  void                    Deopt              !v    %138.10, DeadBranchReached@0x55de2ccbb258[Test#1], %135.3   !
BB98   <- [33]
  val?^ | miss    %98.0 = LdVar              eR    new, <env 0x55de28b56378>
  lgl$#-          %98.1 = Identical                %98.0, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %98.1 -> BB141 (if true) | BB142 (if false)
BB34   <- [33]
  void                    Nop                !     
  val?-           %34.1 = %133.0
  goto BB35
BB140   <- [137]
  prom-           %140.0 = MkArg                    %133.0, implicitGeneric[0x55de2aad9540]_p36 (!refl), e131.0
  val?~           %140.1 = CastType                 up %140.0
  fs              %140.2 = FrameState         R     0x55de2e77be60+649: [], env=e0.2
  fs              %140.3 = FrameState         R     0x55de2f2cdd50+135: [%133.1], env=e131.0, next=%140.2
  env             e140.4 = (MkEnv)            l     x=%140.1, parent=R_BaseNamespace, context 0
  fs              %140.5 = FrameState         R     0x55de2c9144e0+240: [%135.0, %137.0], env=e140.4, next=%140.3
  void                    Deopt              !v    %140.5, DeadBranchReached@0x55de2ccbb258[Test#7], %137.1   !
BB139   <- [137]
  lgl$-           %139.0 = Eq                 d     %135.0, special, elided
  lgl$#-          %139.1 = CheckTrueFalse     e     %139.0
  void                    Branch                   %139.1 -> BB111 (if true) | BB106 (if false)
BB141   <- [98]
  val?            %141.0 = StaticCall         !v    new[0x55de28c319d0]("derivedDefaultMethod") { 0 } e131.0   <cls>
  void                    StVar              lW    value, %141.0, e131.0
  (cls|spec|blt)  %141.2 = LdFun              !v    <-, <0x55de28543da8>, e131.0
  prom-           %141.3 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p38, e131.0
  prom-           %141.4 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p41, e131.0
  val?            %141.5 = Call               !v    %141.2(%141.3, %141.4) e131.0
  (cls|spec|blt)  %141.6 = LdFun              !v    <-, <0x55de28543da8>, e131.0
  prom-           %141.7 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p42, e131.0
  prom-           %141.8 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p45, e131.0
  val?            %141.9 = Call               !v    %141.6(%141.7, %141.8) e131.0
  val?^ | miss    %141.10 = LdVar              eR    value, e131.0
  val?            %141.11 = Force!<value>      !v    %141.10, e131.0   <cls>
  val?            %141.12 = %141.11
  goto BB35
BB142   <- [98]
  fs              %142.0 = FrameState         R     0x55de2e77be60+649: [], env=e0.2
  fs              %142.1 = FrameState         R     0x55de2f2cdd50+177: [nil], env=e131.0, next=%142.0
  void                    Deopt              !v    %142.1, CallTarget@0x55de2ee04bf8[Call#2], %98.0   !
BB35   <- [34, 141]
  val?            %35.0 = Phi                      %34.1:BB34, %141.12:BB141
  val?            %35.1 = %35.0
  val?            %35.2 = PopContext         C     %35.1, %129.1   <cls>
  void                    StVar              lW    fdefault, %35.2, e0.2
  val?^ | miss    %35.4 = LdVar              eR    isBaseFun, e0.2
  lgl$#-          %35.5 = Identical                %35.4, function(fun) <(rir::DispatchTable*)0x55de2bef|...
  void                    Branch                   %35.5 -> BB143 (if true) | BB144 (if false)
BB111   <- [139]
  void                    Nop                !     
  goto BB110
BB106   <- [139]
  lgl$-           %106.0 = Eq                 d     %135.0, builtin, elided
  lgl$#-          %106.1 = CheckTrueFalse     e     %106.0
  void                    Branch                   %106.1 -> BB109 (if true) | BB107 (if false)
BB143   <- [35]
  prom-           %143.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p9 (!refl), e0.2
  val?            %143.1 = StaticCall         !v    isBaseFun[0x55de2c7d9650](%143.0) e0.2   <lgl$->
  lgl$#-          %143.2 = IsType                   %143.1 isA lgl$-
  void                    Branch                   %143.2 -> BB145 (if true) | BB146 (if false)
BB144   <- [35]
  fs              %144.0 = FrameState         R     0x55de2e77be60+663: [], env=e0.2
  void                    Deopt              !v    %144.0, CallTarget@0x55de2adfb6f0[Call#17], %35.4   !
BB110   <- [111, 109]
  void                    Nop                !     
  lgl$#-          %110.1 = true
  goto BB108
BB109   <- [106]
  void                    Nop                !     
  goto BB110
BB107   <- [106]
  void                    Nop                !     
  lgl$#-          %107.1 = false
  goto BB108
BB145   <- [143]
  lgl$-           %145.0 = CastType           d     dn %143.1
  lgl$#-          %145.1 = CheckTrueFalse     e     %145.0
  void                    Branch                   %145.1 -> BB41 (if true) | BB40 (if false)
BB146   <- [143]
  void                    Nop                !     
  val?            %146.1 = %143.1
  dr              %146.2 = Typecheck@0x55de2adfb6f0[Type#34]
  goto BB38
BB108   <- [107, 110]
  lgl$#-          %108.0 = Phi                      %107.1:BB107, %110.1:BB110
  lgl$#-          %108.1 = %108.0
  lgl$#-          %108.2 = Not                d     %108.1, elided
  lgl$-           %108.3 = LAnd                     %133.1, %108.2
  lgl$-           %108.4 = %108.3
  goto BB33
BB41   <- [145]
  val?^ | miss    %41.0 = LdVar              eR    genericForBasic, e0.2
  lgl$#-          %41.1 = Identical                %41.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %41.1 -> BB147 (if true) | BB148 (if false)
BB40   <- [145]
  (cls|spec|blt)  %40.0 = LdFun              !v    getPackageName, e0.2
  fs              %40.1 = FrameState         R     0x55de2e77be60+711: [%40.0], env=e0.2
  void                    Deopt              !v    %40.1, DeadCall@0x55de2adfb6f0[Call#18], %40.0   !
BB38   <- [146, 148]
  val?^ | miss    %38.0 = Phi                      %146.1:BB146, %148.1:BB148
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %146.2:BB146, %148.2:BB148
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x55de2e77be60+695: [%143.1], env=e0.2
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB147   <- [41]
  prom-           %147.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p10, e0.2
  val?            %147.1 = StaticCall         !v    genericForBasic[0x55de2e0ec5b0](%147.0) e0.2   <nil->
  void                    StVar              lW    value, %147.1, e0.2
  lgl$#-          %147.3 = IsType                   %147.1 isA val?-
  val?^ | miss    %147.4 = LdVar              eR    is.function, e0.2
  lgl$#-          %147.5 = Identical                <blt is.function>, %147.4   <true>
  void                    Branch                   %147.5 -> BB149 (if true) | BB150 (if false)
BB148   <- [41]
  void                    Nop                !     
  val?^ | miss    %148.1 = %41.0
  dr              %148.2 = CallTarget@0x55de2adfb6f0[Call#19]
  goto BB38
BB149   <- [147]
  val             %149.0 = ChkMissing         e     %147.1
  void                    Branch                   %147.3 -> BB151 (if true) | BB152 (if false)
BB150   <- [147]
  void                    Nop                !     
  lgl$#-          %150.1 = %147.5
  dr              %150.2 = DeadBranchReached@0x55de2adfb6f0[Test#1]
  goto BB42
BB151   <- [149]
  val?-           %151.0 = CastType           d     dn %147.1   <nil->
  lgl$#-          %151.1 = CallSafeBuiltin    wed   is.function(%151.0)    <lgl$->
  void                    Branch                   %151.1 -> BB93 (if true) | BB44 (if false)
BB152   <- [149]
  void                    Nop                !     
  val?            %152.1 = %147.1
  dr              %152.2 = Typecheck@0x55de2adfb6f0[Type#38]
  goto BB42
BB42   <- [150, 152]
  val?^ | miss    %42.0 = Phi                      %150.1:BB150, %152.1:BB152
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %150.2:BB150, %152.2:BB152
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55de2e77be60+803: [], env=e0.2
  void                    Deopt              !v    %42.4, %42.3, %42.1   !
BB93   <- [151]
  lgl$-           %93.0 = Missing            eR    generic, e0.2
  lgl$-           %93.1 = Not                d     %93.0, elided
  lgl$-           %93.2 = AsLogical                %93.1
  lgl$#-          %93.3 = Identical                %93.2, false
  void                    Branch                   %93.3 -> BB95 (if true) | BB94 (if false)
BB44   <- [151]
  void                    StVar              lW    package, "base", e0.2
  val?^ | miss    %44.1 = LdVar              eR    .getImplicitGroup, e0.2
  lgl$#-          %44.2 = Identical                %44.1, function(name, where) <(rir::DispatchTable*)0x|...
  void                    Branch                   %44.2 -> BB153 (if true) | BB154 (if false)
BB95   <- [93]
  lgl$#-          %95.0 = CheckTrueFalse     e     %93.2
  void                    Branch                   %95.0 -> BB97 (if true) | BB96 (if false)
BB94   <- [93]
  (cls|spec|blt)  %94.0 = LdFun              !v    identical, e0.2
  fs              %94.1 = FrameState         R     0x55de2e77be60+929: [%93.2, %94.0], env=e0.2
  void                    Deopt              !v    %94.1, DeadCall@0x55de2adfb6f0[Call#21], %94.0   !
BB153   <- [44]
  prom-           %153.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p11, e0.2
  prom-           %153.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p12, e0.2
  val?^           %153.2 = CastType                 up %153.1
  val?^           %153.3 = CastType                 up %153.0
  val?^ | miss    %153.4 = LdVar              eR    identical, e0.2
  lgl$#-          %153.5 = Identical                %153.4, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %153.5 -> BB155 (if true) | BB156 (if false)
BB154   <- [44]
  void                    Nop                !     
  val?^ | miss    %154.1 = %44.1
  dr              %154.2 = CallTarget@0x55de2adfb6f0[Call#26]
  goto BB45
BB97   <- [95]
  (cls|spec|blt)  %97.0 = LdFun              !v    stop, e0.2
  fs              %97.1 = FrameState         R     0x55de2e77be60+985: [%97.0], env=e0.2
  void                    Deopt              !v    %97.1, DeadCall@0x55de2adfb6f0[Call#22], %97.0   !
BB96   <- [95]
  void                    StVar              lW    generic, %151.0, e0.2
  (cls|spec|blt)  %96.1 = LdFun              !v    @, e0.2
  fs              %96.2 = FrameState         R     0x55de2e77be60+1054: [%96.1], env=e0.2
  void                    Deopt              !v    %96.2, DeadCall@0x55de2adfb6f0[Call#25], %96.1   !
BB155   <- [153]
  prom-           %155.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p13 (!refl), e0.2
  ct              %155.1 = PushContext        lCL   %155.0, "base", identical(package, "base"), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.2
  val?^           %155.2 = CastType                 up %155.0
  env             e155.3 = MkEnv              l     x=%155.2, y="base", num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  env             e155.4 = (MkEnv)            l     name=%153.3, where=%153.2, tbl=unboundValue, r=unboundValue, parent=<env 0x55de28b56378>, context 1
  val?            %155.5 = CallBuiltin        !v    identical("base", "base", true, true, true, true, false, true) e155.3
  val?            %155.6 = PopContext         C     %155.5, %155.1   <lgl$->
  lgl$#-          %155.7 = IsType                   %155.6 isA lgl$-
  void                    Branch                   %155.7 -> BB157 (if true) | BB158 (if false)
BB156   <- [153]
  void                    Nop                !     
  val?^ | miss    %156.1 = %153.4
  dr              %156.2 = CallTarget@0x55de2adfb6f0[Call#27]
  goto BB45
BB45   <- [154, 156]
  val?^ | miss    %45.0 = Phi                      %154.1:BB154, %156.1:BB156
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %154.2:BB154, %156.2:BB156
  dr              %45.3 = %45.2
  fs              %45.4 = FrameState         R     0x55de2e77be60+1115: [], env=e0.2
  void                    Deopt              !v    %45.4, %45.3, %45.1   !
BB157   <- [155]
  lgl$-           %157.0 = CastType           d     dn %155.6
  lgl$#-          %157.1 = CheckTrueFalse     e     %157.0
  void                    Branch                   %157.1 -> BB92 (if true) | BB49 (if false)
BB158   <- [155]
  void                    Nop                !     
  val?            %158.1 = %155.6
  dr              %158.2 = Typecheck@0x55de2adfb6f0[Type#54]
  goto BB47
BB92   <- [157]
  val?^ | miss    %92.0 = LdVar              eR    .methodsNamespace, e0.2
  lgl$#-          %92.1 = IsType                   %92.0 isA val?~- | miss
  void                    Branch                   %92.1 -> BB159 (if true) | BB160 (if false)
BB49   <- [157]
  (cls|spec|blt)  %49.0 = LdFun              !v    environment, e0.2
  prom-           %49.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p14, e0.2
  val?            %49.2 = Call               !v    %49.0(%49.1) e0.2   <val?_>
  val?            %49.3 = %49.2
  goto BB50
BB47   <- [158, 160]
  val?^ | miss    %47.0 = Phi                      %158.1:BB158, %160.1:BB160
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %158.2:BB158, %160.2:BB160
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x55de2e77be60+1152: [], env=e0.2
  fs              %47.5 = FrameState         R     0x55de2e0ff7d0+9: [], env=e155.4, next=%47.4
  fs              %47.6 = FrameState         R     0x55de2c05a440+37(pr): [%155.6], env=e0.2, next=%47.5
  void                    Deopt              !v    %47.6, %47.3, %47.1   !
BB159   <- [92]
  val?~- | miss   %159.0 = CastType           d     dn %92.0
  val?-           %159.1 = Force!<value>            %159.0,    <env->
  val?-           %159.2 = %159.1
  goto BB50
BB160   <- [92]
  void                    Nop                !     
  val?^ | miss    %160.1 = %92.0
  dr              %160.2 = Typecheck@0x55de2adfb6f0[Type#57]
  goto BB47
BB50   <- [49, 159]
  val?            %50.0 = Phi                      %49.3:BB49, %159.2:BB159   <env->
  val?            %50.1 = %50.0
  lgl$#-          %50.2 = IsType                   %50.1 isA val+   <true>
  prom-           %50.3 = MkArg                    %50.1, implicitGeneric[0x55de2aad9540]_p12 (!refl), e0.2
  val?~           %50.4 = CastType                 up %50.3
  void                    StArg              lWd   where, %50.4, e155.4
  lgl$#-          %50.6 = IsEnvStub          R     , e155.4
  void                    Branch                   %50.6 -> BB161 (if true) | BB162 (if false)
BB161   <- [50]
  void                    Branch                   %50.2 -> BB163 (if true) | BB164 (if false)
BB162   <- [50]
  void                    Nop                !     
  env             e162.1 = e155.4
  dr              %162.2 = EnvStubMaterialized@0x55de2ee49158[Call#unknown]
  goto BB51
BB163   <- [161]
  val?^ | miss    %163.0 = LdVar              eRd   .ImplicitGroupMetaName, <env 0x55de28b56378>
  val?            %163.1 = Force!<wrapped>    !vL   %163.0, e155.4   <str$->
  lgl$#-          %163.2 = IsType                   %163.1 isA val?-
  lgl$#-          %163.3 = IsEnvStub          R     , e155.4
  void                    Branch                   %163.3 -> BB165 (if true) | BB166 (if false)
BB164   <- [161]
  void                    Nop                !     
  lgl$#-          %164.1 = %50.2
  dr              %164.2 = DeadBranchReached@0x55de2ee49158[Test#0]
  goto BB51
BB51   <- [162, 164]
  val?^ | miss    %51.0 = Phi                      e162.1:BB162, %164.1:BB164
  val?^ | miss    %51.1 = %51.0
  dr              %51.2 = Phi                      %162.2:BB162, %164.2:BB164
  dr              %51.3 = %51.2
  fs              %51.4 = FrameState         R     0x55de2e77be60+1152: [], env=e0.2
  fs              %51.5 = FrameState         R     0x55de2e0ff7d0+9: [%50.1], env=e155.4, next=%51.4
  void                    Deopt              !v    %51.5, %51.3, %51.1   !
BB165   <- [163]
  lgl$#-          %165.0 = IsType                   %50.1 isA val?-
  void                    Branch                   %165.0 -> BB167 (if true) | BB168 (if false)
BB166   <- [163]
  void                    Nop                !     
  env             e166.1 = e155.4
  dr              %166.2 = EnvStubMaterialized@0x55de2ee49158[Call#unknown]
  goto BB53
BB167   <- [165]
  val?-           %167.0 = CastType           d     dn %50.1   <env->
  void                    Branch                   %163.2 -> BB169 (if true) | BB170 (if false)
BB168   <- [165]
  void                    Nop                !     
  val?            %168.1 = %50.1
  dr              %168.2 = Typecheck@0x55de2ee49158[Type#0]
  goto BB53
BB53   <- [166, 168, 170]
  val?            %53.0 = Phi                      e166.1:BB166, %168.1:BB168, %170.1:BB170
  val?            %53.1 = %53.0
  dr              %53.2 = Phi                      %166.2:BB166, %168.2:BB168, %170.2:BB170
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x55de2e77be60+1152: [], env=e0.2
  fs              %53.5 = FrameState         R     0x55de2e0ff7d0+54: [%50.1, %163.1], env=e155.4, next=%53.4
  void                    Deopt              !v    %53.5, %53.3, %53.1   !
BB169   <- [167]
  val?-           %169.0 = CastType           d     dn %163.1   <str$->
  val?            %169.1 = Extract2_1D        wed   %167.0, %169.0, elided   <env->
  lgl$-           %169.2 = Is                       %169.1, NULL
  void                    StVar              lWd   tbl, %169.1, e155.4
  lgl$-           %169.4 = Not                d     %169.2, elided
  lgl$#-          %169.5 = CheckTrueFalse     e     %169.4
  void                    Branch                   %169.5 -> BB87 (if true) | BB57 (if false)
BB170   <- [167]
  void                    Nop                !     
  val?            %170.1 = %163.1
  dr              %170.2 = Typecheck@0x55de2ee49158[Type#2]
  goto BB53
BB87   <- [169]
  val             %87.0 = ChkMissing         e     %169.1
  lgl$#-          %87.1 = IsType                   %169.1 isA val+   <true>
  void                    Branch                   %87.1 -> BB171 (if true) | BB172 (if false)
BB57   <- [169]
  void                    Nop                !     
  goto BB58
BB171   <- [87]
  val?            %171.0 = Force!<lazy>       !vL   %153.3, e155.4   <str$->
  lgl$#-          %171.1 = IsType                   %171.0 isA val?-
  lgl$#-          %171.2 = IsEnvStub          R     , e155.4
  void                    Branch                   %171.2 -> BB173 (if true) | BB174 (if false)
BB172   <- [87]
  fs              %172.0 = FrameState         R     0x55de2e77be60+1152: [], env=e0.2
  fs              %172.1 = FrameState         R     0x55de2e0ff7d0+77: [%169.1], env=e155.4, next=%172.0
  void                    Deopt              !v    %172.1, DeadBranchReached@0x55de2ee49158[Test#1], %87.1   !
BB58   <- [57, 90]
  val?^ | miss    %58.0 = LdVar              eRd   list, <env 0x55de28b56378>
  lgl$#-          %58.1 = Identical                <blt list>, %58.0   <true>
  void                    Branch                   %58.1 -> BB179 (if true) | BB180 (if false)
BB173   <- [171]
  lgl$#-          %173.0 = IsType                   %169.1 isA val?-
  void                    Branch                   %173.0 -> BB175 (if true) | BB176 (if false)
BB174   <- [171]
  void                    Nop                !     
  env             e174.1 = e155.4
  dr              %174.2 = EnvStubMaterialized@0x55de2ee49158[Call#unknown]
  goto BB88
BB179   <- [58]
  void                    Nop                !     
  vec#-           %179.1 = list()
  goto BB61
BB180   <- [58]
  fs              %180.0 = FrameState         R     0x55de2e77be60+1152: [], env=e0.2
  fs              %180.1 = FrameState         R     0x55de2e0ff7d0+203: [], env=e155.4, next=%180.0
  void                    Deopt              !v    %180.1, DeadBranchReached@0x55de2ee49158[Test#2], %58.1   !
BB175   <- [173]
  val?-           %175.0 = CastType           d     dn %169.1   <env->
  void                    Branch                   %171.1 -> BB177 (if true) | BB178 (if false)
BB176   <- [173]
  void                    Nop                !     
  val?            %176.1 = %169.1
  dr              %176.2 = Typecheck@0x55de2ee49158[Type#3]
  goto BB88
BB88   <- [174, 176, 178]
  val?^ | miss    %88.0 = Phi                      e174.1:BB174, %176.1:BB176, %178.1:BB178
  val?^ | miss    %88.1 = %88.0
  dr              %88.2 = Phi                      %174.2:BB174, %176.2:BB176, %178.2:BB178
  dr              %88.3 = %88.2
  fs              %88.4 = FrameState         R     0x55de2e77be60+1152: [], env=e0.2
  fs              %88.5 = FrameState         R     0x55de2e0ff7d0+148: [%169.1, %171.0], env=e155.4, next=%88.4
  void                    Deopt              !v    %88.5, %88.3, %88.1   !
BB61   <- [91, 179]
  val?            %61.0 = Phi                      %179.1:BB179, %91.1:BB91   <vec->
  val?            %61.1 = %61.0
  void                    StVar              lW    group, %61.1, e0.2
  lgl$-           %61.3 = Missing            eR    generic, e0.2
  lgl$#-          %61.4 = CheckTrueFalse     e     %61.3
  void                    Branch                   %61.4 -> BB65 (if true) | BB64 (if false)
BB177   <- [175]
  val?-           %177.0 = CastType           d     dn %171.0   <str$->
  val?            %177.1 = Extract2_1D        wed   %175.0, %177.0, elided   <nil->
  lgl$-           %177.2 = Is                       %177.1, NULL
  void                    StVar              lWd   r, %177.1, e155.4
  lgl$-           %177.4 = Not                d     %177.2, elided
  lgl$#-          %177.5 = CheckTrueFalse     e     %177.4
  void                    Branch                   %177.5 -> BB91 (if true) | BB90 (if false)
BB178   <- [175]
  void                    Nop                !     
  val?            %178.1 = %171.0
  dr              %178.2 = Typecheck@0x55de2ee49158[Type#6]
  goto BB88
BB65   <- [61]
  val?^ | miss    %65.0 = LdVar              eR    .getImplicitGeneric, e0.2
  lgl$#-          %65.1 = Identical                %65.0, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %65.1 -> BB181 (if true) | BB182 (if false)
BB64   <- [61]
  (cls|spec|blt)  %64.0 = LdFun              !v    makeGeneric, e0.2
  fs              %64.1 = FrameState         R     0x55de2e77be60+1183: [%64.0], env=e0.2
  void                    Deopt              !v    %64.1, DeadCall@0x55de2adfb6f0[Call#29], %64.0   !
BB91   <- [177]
  val             %91.0 = ChkMissing         e     %177.1
  val?            %91.1 = %177.1
  goto BB61
BB90   <- [177]
  void                    Nop                !     
  goto BB58
BB181   <- [65]
  prom-           %181.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p15, e0.2
  prom-           %181.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p16, e0.2
  prom-           %181.2 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p17, e0.2
  ct              %181.3 = PushContext        lCL   %181.0, %181.1, %181.2, .getImplicitGeneric(name, env, package), function(name, where, pkg="") <(rir::DispatchT|..., e0.2
  val?^           %181.4 = CastType                 up %181.2
  val?^           %181.5 = CastType                 up %181.1
  val?^           %181.6 = CastType                 up %181.0
  val?^ | miss    %181.7 = LdVar              eR    .getImplicitGenericFromCache, <env 0x55de28b56378>
  lgl$#-          %181.8 = Identical                %181.7, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %181.8 -> BB183 (if true) | BB184 (if false)
BB182   <- [65]
  fs              %182.0 = FrameState         R     0x55de2e77be60+1166: [], env=e0.2
  void                    Deopt              !v    %182.0, CallTarget@0x55de2adfb6f0[Call#31], %65.0   !
BB183   <- [181]
  env             e183.0 = MkEnv              l     name=%181.6, where=%181.5, pkg=%181.4, parent=<env 0x55de28b56378>, context 1
  prom-           %183.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p24, e183.0
  prom-           %183.2 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p25, e183.0
  prom-           %183.3 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p26, e183.0
  ct              %183.4 = PushContext        lCL   %183.1, %183.2, %183.3, .getImplicitGenericFromCache(name, where, pkg), function(name, where, pkg="") <(rir::DispatchT|..., e183.0
  val?^           %183.5 = CastType                 up %183.3
  val?^           %183.6 = CastType                 up %183.2
  val?^           %183.7 = CastType                 up %183.1
  val?^ | miss    %183.8 = LdVar              eR    .getGenericFromCacheTable, <env 0x55de28b56378>
  lgl$#-          %183.9 = Identical                %183.8, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %183.9 -> BB185 (if true) | BB186 (if false)
BB184   <- [181]
  fs              %184.0 = FrameState         R     0x55de2e77be60+1349: [], env=e0.2
  env             e184.1 = (MkEnv)            l     name=%181.6, where=%181.5, pkg=%181.4, parent=<env 0x55de28b56378>, context 1
  fs              %184.2 = FrameState         R     0x55de2b26ee50+0: [], env=e184.1, next=%184.0
  void                    Deopt              !v    %184.2, CallTarget@0x55de2b5a0a00[Call#0], %181.7   !
BB185   <- [183]
  env             e185.0 = MkEnv              l     name=%183.7, where=%183.6, pkg=%183.5, parent=<env 0x55de28b56378>, context 1
  prom-           %185.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p30, e185.0
  prom-           %185.2 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p31, e185.0
  prom-           %185.3 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p32, e185.0
  prom-           %185.4 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p33, e185.0
  val?            %185.5 = StaticCall         !v    .getGenericFromCacheTable[0x55de2b40bdc0](%185.1, %185.2, %185.3, %185.4) e185.0   <nil->
  val?            %185.6 = PopContext         C     %185.5, %183.4   <nil->
  lgl$-           %185.7 = Is                       %185.6, NULL
  lgl$-           %185.8 = AsLogical                %185.7
  lgl$#-          %185.9 = Identical                %185.8, false
  void                    StVar              lW    value, %185.6, e183.0
  val             %185.11 = ChkMissing         e     %185.6
  void                    Branch                   %185.9 -> BB86 (if true) | BB70 (if false)
BB186   <- [183]
  fs              %186.0 = FrameState         R     0x55de2e77be60+1349: [], env=e0.2
  fs              %186.1 = FrameState         R     0x55de2b26ee50+42: [], env=e183.0, next=%186.0
  env             e186.2 = (MkEnv)            l     name=%183.7, where=%183.6, pkg=%183.5, parent=<env 0x55de28b56378>, context 1
  fs              %186.3 = FrameState         R     0x55de2e5bee20+0: [], env=e186.2, next=%186.1
  void                    Deopt              !v    %186.3, CallTarget@0x55de2ac194a0[Call#0], %183.8   !
BB86   <- [185]
  void                    Nop                !     
  lgl$-           %86.1 = %185.8
  goto BB75
BB70   <- [185]
  val?^ | miss    %70.0 = LdVar              eR    where, e183.0
  val?            %70.1 = Force!<lazy>       !v    %70.0, e183.0   <env->
  lgl$#-          %70.2 = IsType                   %70.1 isA val+   <true>
  void                    Branch                   %70.2 -> BB187 (if true) | BB188 (if false)
BB75   <- [86, 191]
  lgl$-           %75.0 = Phi                      %191.7:BB191, %86.1:BB86
  lgl$-           %75.1 = %75.0
  lgl$#-          %75.2 = CheckTrueFalse     e     %75.1
  void                    Branch                   %75.2 -> BB85 (if true) | BB78 (if false)
BB187   <- [70]
  val?^ | miss    %187.0 = LdVar              eR    .ImplicitGenericsMetaName, e183.0
  val?            %187.1 = Force!<wrapped>    !v    %187.0, e183.0   <str$->
  lgl$#-          %187.2 = IsType                   %187.1 isA val?-
  lgl$#-          %187.3 = IsType                   %70.1 isA val?-
  void                    Branch                   %187.3 -> BB189 (if true) | BB190 (if false)
BB188   <- [70]
  fs              %188.0 = FrameState         R     0x55de2e77be60+1349: [], env=e0.2
  fs              %188.1 = FrameState         R     0x55de2b26ee50+91: [%185.8, %70.1], env=e183.0, next=%188.0
  void                    Deopt              !v    %188.1, DeadBranchReached@0x55de2b5a0a00[Test#0], %70.2   !
BB85   <- [75]
  fs              %85.0 = FrameState         R     0x55de2e77be60+1349: [], env=e0.2
  (cls|spec|blt)  %85.1 = LdFun              !v    .getGenericFromCacheTable, e183.0
  fs              %85.2 = FrameState         R     0x55de2b26ee50+197: [%85.1], env=e183.0, next=%85.0
  void                    Deopt              !v    %85.2, DeadCall@0x55de2b5a0a00[Call#1], %85.1   !
BB78   <- [75]
  val?^ | miss    %78.0 = LdVar              eR    value, e183.0
  lgl$#-          %78.1 = IsType                   %78.0 isA val?~- | miss
  void                    Branch                   %78.1 -> BB193 (if true) | BB194 (if false)
BB189   <- [187]
  val?-           %189.0 = CastType           d     dn %70.1   <env->
  void                    Branch                   %187.2 -> BB191 (if true) | BB192 (if false)
BB190   <- [187]
  void                    Nop                !     
  val?            %190.1 = %70.1
  dr              %190.2 = Typecheck@0x55de2b5a0a00[Type#5]
  goto BB73
BB193   <- [78]
  val?~- | miss   %193.0 = CastType           d     dn %78.0
  val?-           %193.1 = Force!<value>            %193.0,    <nil->
  val?            %193.2 = PopContext         C     %193.1, %181.3   <nil->
  lgl$-           %193.3 = Is                       %193.2, NULL
  void                    StVar              lW    generic, %193.2, e0.2
  val             %193.5 = ChkMissing         e     %193.2
  lgl$#-          %193.6 = CheckTrueFalse     e     %193.3
  void                    Branch                   %193.6 -> BB80 (if true) | BB79 (if false)
BB194   <- [78]
  fs              %194.0 = FrameState         R     0x55de2e77be60+1349: [], env=e0.2
  fs              %194.1 = FrameState         R     0x55de2b26ee50+167: [%75.1], env=e183.0, next=%194.0
  void                    Deopt              !v    %194.1, Typecheck@0x55de2b5a0a00[Type#9], %78.0   !
BB191   <- [189]
  val?-           %191.0 = CastType           d     dn %187.1   <str$->
  val?            %191.1 = Extract2_1D        wed   %189.0, %191.0, elided   <nil->
  lgl$-           %191.2 = Is                       %191.1, NULL
  void                    StVar              lW    tbl, %191.1, e183.0
  lgl$-           %191.4 = Not                d     %191.2, elided
  lgl$-           %191.5 = AsLogical                %191.4
  lgl$-           %191.6 = LAnd                     %185.8, %191.5
  lgl$-           %191.7 = %191.6
  goto BB75
BB192   <- [189]
  void                    Nop                !     
  val?            %192.1 = %187.1
  dr              %192.2 = Typecheck@0x55de2b5a0a00[Type#7]
  goto BB73
BB73   <- [190, 192]
  val?^ | miss    %73.0 = Phi                      %190.1:BB190, %192.1:BB192
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %190.2:BB190, %192.2:BB192
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x55de2e77be60+1349: [], env=e0.2
  fs              %73.5 = FrameState         R     0x55de2b26ee50+136: [%185.8, %70.1, %187.1], env=e183.0, next=%73.4
  void                    Deopt              !v    %73.5, %73.3, %73.1   !
BB80   <- [193]
  (cls|spec|blt)  %80.0 = LdFun              !v    makeGeneric, <0x55de2e67ed80>, e0.2
  prom-           %80.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p18, e0.2
  prom-           %80.2 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p19, e0.2
  prom-           %80.3 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p20, e0.2
  prom-           %80.4 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p21, e0.2
  val?            %80.5 = NamedCall          !v    %80.0(%80.1, fdefault=%80.2, package=%80.3, group=%80.4) e0.2   <cls>
  void                    StVar              lW    generic, %80.5, e0.2
  val?^ | miss    %80.7 = LdVar              eR    .cacheImplicitGeneric, e0.2
  lgl$#-          %80.8 = Identical                %80.7, function(name, def) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %80.8 -> BB195 (if true) | BB196 (if false)
BB79   <- [193]
  void                    Nop                !     
  goto BB20
BB195   <- [80]
  prom-           %195.0 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p22, e0.2
  prom-           %195.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p23 (!refl), e0.2
  ct              %195.2 = PushContext        lCL   %195.0, %195.1, .cacheImplicitGeneric(name, generic), function(name, def) <(rir::DispatchTable*)0x55|..., e0.2
  val?^           %195.3 = CastType                 up %195.1
  val?^           %195.4 = CastType                 up %195.0
  val?^ | miss    %195.5 = LdVar              eR    .cacheGenericTable, <env 0x55de28b56378>
  lgl$#-          %195.6 = Identical                %195.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %195.6 -> BB197 (if true) | BB198 (if false)
BB196   <- [80]
  fs              %196.0 = FrameState         R     0x55de2e77be60+1470: [], env=e0.2
  void                    Deopt              !v    %196.0, CallTarget@0x55de2adfb6f0[Call#33], %80.7   !
BB197   <- [195]
  env             e197.0 = MkEnv              l     name=%195.4, def=%195.3, parent=<env 0x55de28b56378>, context 1
  prom-           %197.1 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p27, e197.0
  prom-           %197.2 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p28, e197.0
  prom-           %197.3 = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p29, e197.0
  val?            %197.4 = StaticCall         !v    .cacheGenericTable[0x55de2d51f6b0](%197.1, %197.2, %197.3) e197.0   <cls>
  val?            %197.5 = PopContext         C     %197.4, %195.2
  goto BB20
BB198   <- [195]
  fs              %198.0 = FrameState         R     0x55de2e77be60+1507: [], env=e0.2
  env             e198.1 = (MkEnv)            l     name=%195.4, def=%195.3, parent=<env 0x55de28b56378>, context 1
  fs              %198.2 = FrameState         R     0x55de2d767d00+0: [], env=e198.1, next=%198.0
  void                    Deopt              !v    %198.2, CallTarget@0x55de2e453268[Call#0], %195.5   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getGeneric, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p2, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, where=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     identical, <0x55de28831820>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "base") e0.0   <lgl$->
  lgl$#-          %0.4  = CheckTrueFalse     we    %0.3
  void                    Branch                   %0.4 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    .methodsNamespace, e0.0
  void                    Visible            v     
  val?            %2.2  = Force<value>       !     %2.0, e0.0   <env->
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  (cls|spec|blt)  %4.0  = LdFun              !     environment, e0.0
  prom-           %4.1  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p14, e0.0
  val?            %4.2  = Call               !     %4.0(%4.1) e0.0   <val?_>
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.3:BB4, %2.3:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .implicitTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .implicitTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p39, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p40, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p43, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p44, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    target, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     <-, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p46, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p49, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p47, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p48, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .newSignature, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p50, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p52, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p51, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .anyClassName, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     formalArgs, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x55de2aad9540]_p53, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ implicitGeneric[0x55de2aad9540]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
