
┌──────────────────────────────────────────────────────────────────────────────┐
│ validObject[0x55de32458cb0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
validObject[0x55de32458cb0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, test(miss)=false, complete(miss)=false, parent=<env 0x55de28b56378>, context 1
  cls             %0.2  = MkCls                    anyStrings, e0.1
  val?^ | miss    %0.3  = LdVar              eR    class, <env 0x55de28b56378>
  lgl$#-          %0.4  = Identical                <blt class>, %0.3   <true>
  void                    Branch                   %0.4 -> BB264 (if true) | BB265 (if false)
BB264   <- [0]
  val?            %264.0 = Force!<lazy>       !vr   %0.0,    <(cls|other)>
  val?            %264.1 = CallBuiltin        !v    class(%264.0) e0.1   <str$+>
  void                    StVar              lW    Class, %264.1, e0.1
  val?^ | miss    %264.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %264.4 = Identical                %264.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %264.4 -> BB266 (if true) | BB267 (if false)
BB265   <- [0]
  fs              %265.0 = FrameState         R     0x55de34de0470+0: [], env=e0.1
  void                    Deopt              !v    %265.0, DeadBranchReached@0x55de34c80830[Test#0], %0.4
BB266   <- [264]
  prom-           %266.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p2 (!refl), e0.1
  val?            %266.1 = StaticCall         !v    getClassDef[0x55de294c0820](%266.0) e0.1   <other>
  void                    StVar              lW    classDef, %266.1, e0.1
  val?^ | miss    %266.3 = LdVar              eR    .classEnv, e0.1
  lgl$#-          %266.4 = Identical                %266.3, function(Class, default=.requirePackage("metho|...
  void                    Branch                   %266.4 -> BB268 (if true) | BB269 (if false)
BB267   <- [264]
  fs              %267.0 = FrameState         R     0x55de34de0470+105: [], env=e0.1
  void                    Deopt              !v    %267.0, CallTarget@0x55de34c80830[Call#1], %264.3   !
BB268   <- [266]
  prom-           %268.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p3 (!refl), e0.1
  val?            %268.1 = StaticCall         !v    .classEnv[0x55de2d1d64e0](%268.0) e0.1   <env->
  void                    StVar              lW    where, %268.1, e0.1
  void                    StVar              lW    anyStrings, %0.2, e0.1
  val?^ | miss    %268.4 = LdVar              eR    character, e0.1
  lgl$#-          %268.5 = Identical                %268.4, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %268.5 -> BB270 (if true) | BB271 (if false)
BB269   <- [266]
  fs              %269.0 = FrameState         R     0x55de34de0470+151: [], env=e0.1
  void                    Deopt              !v    %269.0, CallTarget@0x55de34c80830[Call#2], %266.3   !
BB270   <- [268]
  str-            %270.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    errors, %270.0, e0.1
  (cls|spec|blt)  %270.2 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %270.3 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p4, e0.1
  prom-           %270.4 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p5, e0.1
  val?            %270.5 = Call               !v    %270.2(%270.3, %270.4) e0.1   <vec+>
  void                    StVar              lW    slotTypes, %270.5, e0.1
  lgl$#-          %270.7 = IsType                   %270.5 isA val?+
  val?^ | miss    %270.8 = LdVar              eR    names, e0.1
  lgl$#-          %270.9 = Identical                <blt names>, %270.8   <true>
  void                    Branch                   %270.9 -> BB272 (if true) | BB273 (if false)
BB271   <- [268]
  fs              %271.0 = FrameState         R     0x55de34de0470+222: [], env=e0.1
  void                    Deopt              !v    %271.0, CallTarget@0x55de34c80830[Call#3], %268.4   !
BB272   <- [270]
  val             %272.0 = ChkMissing         e     %270.5
  void                    Branch                   %270.7 -> BB274 (if true) | BB275 (if false)
BB273   <- [270]
  void                    Nop                !     
  lgl$#-          %273.1 = %270.9
  dr              %273.2 = DeadBranchReached@0x55de34c80830[Test#1]
  goto BB9
BB274   <- [272]
  val?+           %274.0 = CastType           d     dn %270.5   <vec+>
  val+            %274.1 = CallSafeBuiltin    wed   names(%274.0)    <str->
  void                    StVar              lW    slotNames, %274.1, e0.1
  val?^ | miss    %274.3 = LdVar              eR    c, e0.1
  lgl$#-          %274.4 = Identical                <blt c>, %274.3   <true>
  void                    Branch                   %274.4 -> BB276 (if true) | BB277 (if false)
BB275   <- [272]
  void                    Nop                !     
  val?            %275.1 = %270.5
  dr              %275.2 = Typecheck@0x55de34c80830[Type#10]
  goto BB9
BB9   <- [273, 275]
  val?^ | miss    %9.0  = Phi                      %273.1:BB273, %275.1:BB275
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %273.2:BB273, %275.2:BB275
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55de34de0470+314: [], env=e0.1
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB276   <- [274]
  val?^ | miss    %276.0 = LdVar              eR    attributes, e0.1
  lgl$#-          %276.1 = Identical                <blt attributes>, %276.0   <true>
  void                    Branch                   %276.1 -> BB278 (if true) | BB279 (if false)
BB277   <- [274]
  void                    Nop                !     
  lgl$#-          %277.1 = %274.4
  dr              %277.2 = DeadBranchReached@0x55de34c80830[Test#2]
  goto BB11
BB278   <- [276]
  val?^ | miss    %278.0 = LdVar              eR    object, e0.1
  val?            %278.1 = Force!<wrapped>    !v    %278.0, e0.1   <(cls|other)>
  val?            %278.2 = CallBuiltin        !v    attributes(%278.1) e0.1   <vec+>
  lgl$#-          %278.3 = IsType                   %278.2 isA val?+
  void                    Branch                   %278.3 -> BB280 (if true) | BB281 (if false)
BB279   <- [276]
  void                    Nop                !     
  lgl$#-          %279.1 = %276.1
  dr              %279.2 = DeadBranchReached@0x55de34c80830[Test#4]
  goto BB11
BB11   <- [277, 279]
  val?^ | miss    %11.0 = Phi                      %277.1:BB277, %279.1:BB279
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %277.2:BB277, %279.2:BB279
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55de34de0470+419: [], env=e0.1
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB280   <- [278]
  val?+           %280.0 = CastType           d     dn %278.2   <vec+>
  val+            %280.1 = CallSafeBuiltin    wed   names(%280.0)    <str->
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %280.2 = CallSafeBuiltin    wed   c(".Data", ".S3Class", %280.1)    <str->
  void                    StVar              lW    attrNames, %280.2, e0.1
  lgl$#-          %280.4 = IsType                   %280.2 isA val?-
  val?^ | miss    %280.5 = LdVar              eR    anyNA, e0.1
  lgl$#-          %280.6 = Identical                <blt anyNA>, %280.5   <true>
  void                    Branch                   %280.6 -> BB282 (if true) | BB283 (if false)
BB281   <- [278]
  fs              %281.0 = FrameState         R     0x55de34de0470+652: [<blt c>, ".Data", ".S3Class", <blt names>, %278.2], env=e0.1
  void                    Deopt              !v    %281.0, Typecheck@0x55de34c80830[Type#21], %278.2   !
BB282   <- [280]
  val?^ | miss    %282.0 = LdVar              eR    match, e0.1
  lgl$#-          %282.1 = Identical                %282.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %282.1 -> BB284 (if true) | BB285 (if false)
BB283   <- [280]
  void                    Nop                !     
  lgl$#-          %283.1 = %280.6
  dr              %283.2 = DeadBranchReached@0x55de34c80830[Test#5]
  goto BB15
BB284   <- [282]
  val?^ | miss    %284.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %284.1 = IsType                   %284.0 isA val?~- | miss
  void                    Branch                   %284.1 -> BB286 (if true) | BB287 (if false)
BB285   <- [282]
  void                    Nop                !     
  val?^ | miss    %285.1 = %282.0
  dr              %285.2 = CallTarget@0x55de34c80830[Call#14]
  goto BB15
BB15   <- [283, 285, 287, 289]
  val?^ | miss    %15.0 = Phi                      %283.1:BB283, %285.1:BB285, %287.1:BB287, %289.1:BB289
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %283.2:BB283, %285.2:BB285, %287.2:BB287, %289.2:BB289
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55de34de0470+710: [], env=e0.1
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB286   <- [284]
  val?~- | miss   %286.0 = CastType           d     dn %284.0
  val?-           %286.1 = Force!<value>            %286.0,    <str->
  void                    Branch                   %280.4 -> BB288 (if true) | BB289 (if false)
BB287   <- [284]
  void                    Nop                !     
  val?^ | miss    %287.1 = %284.0
  dr              %287.2 = Typecheck@0x55de34c80830[Type#27]
  goto BB15
BB288   <- [286]
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)- %288.0 = CastType           d     dn %280.2
  val+            %288.1 = CallSafeBuiltin    wed   match(%286.1, %288.0, NA, nil)    <int->
  void                    StVar              lW    idx, %288.1, e0.1
  lgl$#-          %288.3 = IsType                   %288.1 isA int-
  void                    Branch                   %288.3 -> BB290 (if true) | BB291 (if false)
BB289   <- [286]
  void                    Nop                !     
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %289.1 = %280.2
  dr              %289.2 = Typecheck@0x55de28db6cb0[Type#1]
  goto BB15
BB290   <- [288]
  int-            %290.0 = CastType           d     dn %288.1
  val+            %290.1 = CallSafeBuiltin    wed   anyNA(%290.0)    <lgl$->
  lgl$#-          %290.2 = IsType                   %290.1 isA lgl$-
  void                    Branch                   %290.2 -> BB292 (if true) | BB293 (if false)
BB291   <- [288]
  fs              %291.0 = FrameState         R     0x55de34de0470+823: [<blt anyNA>, %288.1], env=e0.1
  void                    Deopt              !v    %291.0, Typecheck@0x55de34c80830[Type#29], %288.1   !
BB292   <- [290]
  lgl$-           %292.0 = CastType           d     dn %290.1
  lgl$#-          %292.1 = CheckTrueFalse     e     %292.0
  void                    Branch                   %292.1 -> BB258 (if true) | BB21 (if false)
BB293   <- [290]
  void                    Nop                !     
  val+            %293.1 = %290.1
  dr              %293.2 = Typecheck@0x55de34c80830[Type#30]
  goto BB19
BB258   <- [292]
  val?^ | miss    %258.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %258.1 = Identical                <blt is.na>, %258.0   <@?>
  void                    Branch                   %258.1 -> BB260 (if true) | BB259 (if false)
BB21   <- [292]
  val?^ | miss    %21.0 = LdVar              eR    seq_along, e0.1
  lgl$#-          %21.1 = Identical                <blt seq_along>, %21.0   <true>
  void                    Branch                   %21.1 -> BB294 (if true) | BB295 (if false)
BB19   <- [293, 295, 297]
  val?^ | miss    %19.0 = Phi                      %293.1:BB293, %295.1:BB295, %297.1:BB297
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %293.2:BB293, %295.2:BB295, %297.2:BB297
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55de34de0470+840: [%290.1], env=e0.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB260   <- [258]
  lgl-            %260.0 = CallSafeBuiltin    wed   is.na(%290.0)    <val?_>
  void                    StVar              lW    badSlots, %260.0, e0.1
  val?^ | miss    %260.2 = LdVar              eR    c, e0.1
  lgl$#-          %260.3 = Identical                <blt c>, %260.2   <@?>
  void                    Branch                   %260.3 -> BB262 (if true) | BB261 (if false)
BB259   <- [258]
  (cls|spec|blt)  %259.0 = LdFun              !v    is.na, e0.1
  fs              %259.1 = FrameState         R     0x55de34de0470+884: [%259.0], env=e0.1
  void                    Deopt              !v    %259.1, DeadCall@0x55de34c80830[Call#15], %259.0   !
BB294   <- [21]
  val?^ | miss    %294.0 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %294.1 = IsType                   %294.0 isA val?~+ | miss
  void                    Branch                   %294.1 -> BB296 (if true) | BB297 (if false)
BB295   <- [21]
  void                    Nop                !     
  lgl$#-          %295.1 = %21.1
  dr              %295.2 = DeadBranchReached@0x55de34c80830[Test#12]
  goto BB19
BB262   <- [260]
  val?^ | miss    %262.0 = LdVar              eR    errors, e0.1
  val?            %262.1 = Force!             !v    %262.0, e0.1   <val?_>
  (cls|spec|blt)  %262.2 = LdFun              !v    paste, e0.1
  fs              %262.3 = FrameState         R     0x55de34de0470+1045: [<blt c>, %262.1, %262.2], env=e0.1
  void                    Deopt              !v    %262.3, DeadCall@0x55de34c80830[Call#19], %262.2   !
BB261   <- [260]
  (cls|spec|blt)  %261.0 = LdFun              !v    c, e0.1
  fs              %261.1 = FrameState         R     0x55de34de0470+989: [%261.0], env=e0.1
  void                    Deopt              !v    %261.1, DeadCall@0x55de34c80830[Call#16], %261.0   !
BB296   <- [294]
  val?~+ | miss   %296.0 = CastType           d     dn %294.0
  val?+           %296.1 = Force!<value>            %296.0,    <vec+>
  val?            %296.2 = CallBuiltin        !v    seq_along(%296.1) e0.1   <int->
  val?+           %296.3 = ToForSeq           e     %296.2
  int$-           %296.4 = Length                   %296.3
  int$-           %296.5 = Inc                      0L
  lgl$-           %296.6 = Lt                 d     %296.4, %296.5, elided   <false>
  lgl$#-          %296.7 = Identical                %296.6, true
  void                    Branch                   %296.7 -> BB299 (if true) | BB298 (if false)
BB297   <- [294]
  void                    Nop                !     
  val?^ | miss    %297.1 = %294.0
  dr              %297.2 = Typecheck@0x55de34c80830[Type#58]
  goto BB19
BB299   <- [296]
  fs              %299.0 = FrameState         R     0x55de34de0470+1356: [%296.2], env=e0.1
  void                    Deopt              !v    %299.0, DeadBranchReached@0x55de34c80830[Test#13], %296.7   !
BB298   <- [296]
  val?            %298.0 = Extract2_1D        wed   %296.3, %296.5, elided
  void                    StVar              lW    i, %298.0, e0.1
  val?^ | miss    %298.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %298.3 = IsType                   %298.2 isA val?~+ | miss
  void                    Branch                   %298.3 -> BB300 (if true) | BB301 (if false)
BB300   <- [298]
  val?~+ | miss   %300.0 = CastType           d     dn %298.2
  val?+           %300.1 = Force!<value>            %300.0,    <vec+>
  lgl$#-          %300.2 = IsType                   %300.1 isA val+   <true>
  void                    Branch                   %300.2 -> BB302 (if true) | BB303 (if false)
BB301   <- [298]
  void                    Nop                !     
  val?^ | miss    %301.1 = %298.2
  dr              %301.2 = Typecheck@0x55de34c80830[Type#60]
  goto BB24
BB302   <- [300]
  val             %302.0 = ChkMissing         e     %298.0
  lgl$#-          %302.1 = IsType                   %302.0 isA int$-
  void                    Branch                   %302.1 -> BB304 (if true) | BB305 (if false)
BB303   <- [300]
  void                    Nop                !     
  lgl$#-          %303.1 = %300.2
  dr              %303.2 = DeadBranchReached@0x55de34c80830[Test#14]
  goto BB24
BB24   <- [301, 303, 305]
  val?^ | miss    %24.0 = Phi                      %301.1:BB301, %303.1:BB303, %305.1:BB305
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %301.2:BB301, %303.2:BB303, %305.2:BB305
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x55de34de0470+1401: [%296.3, %296.4, %296.5], env=e0.1
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB304   <- [302]
  int$-           %304.0 = CastType           d     dn %302.0
  val?            %304.1 = Extract2_1D        wed   %300.1, %304.0, elided   <str$+>
  void                    StVar              lW    classi, %304.1, e0.1
  val?^ | miss    %304.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %304.4 = Identical                %304.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %304.4 -> BB306 (if true) | BB307 (if false)
BB305   <- [302]
  void                    Nop                !     
  val             %305.1 = %302.0
  dr              %305.2 = Typecheck@0x55de34c80830[Type#62]
  goto BB24
BB306   <- [304]
  prom-           %306.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p8 (!refl), e0.1
  prom-           %306.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p9, e0.1
  val?            %306.2 = StaticCall         !v    getClassDef[0x55de2fda2600](%306.0, %306.1) { 0 1n } e0.1   <other>
  lgl$-           %306.3 = Is                       %306.2, NULL
  void                    StVar              lW    classDefi, %306.2, e0.1
  val             %306.5 = ChkMissing         e     %306.2
  lgl$#-          %306.6 = CheckTrueFalse     e     %306.3
  void                    Branch                   %306.6 -> BB255 (if true) | BB30 (if false)
BB307   <- [304]
  fs              %307.0 = FrameState         R     0x55de34de0470+1476: [%296.3, %296.4, %296.5], env=e0.1
  void                    Deopt              !v    %307.0, CallTarget@0x55de34c80830[Call#22], %304.3   !
BB255   <- [306]
  val?^ | miss    %255.0 = LdVar              eR    c, e0.1
  lgl$#-          %255.1 = Identical                <blt c>, %255.0   <@?>
  void                    Branch                   %255.1 -> BB257 (if true) | BB256 (if false)
BB30   <- [306]
  val?^ | miss    %30.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %30.1 = IsType                   %30.0 isA val?~- | miss
  void                    Branch                   %30.1 -> BB308 (if true) | BB309 (if false)
BB257   <- [255]
  val?^ | miss    %257.0 = LdVar              eR    errors, e0.1
  val?            %257.1 = Force!             !v    %257.0, e0.1   <val?_>
  (cls|spec|blt)  %257.2 = LdFun              !v    paste0, e0.1
  fs              %257.3 = FrameState         R     0x55de34de0470+1649: [%296.3, %296.4, %296.5, <blt c>, %257.1, %257.2], env=e0.1
  void                    Deopt              !v    %257.3, DeadCall@0x55de34c80830[Call#25], %257.2   !
BB256   <- [255]
  (cls|spec|blt)  %256.0 = LdFun              !v    c, e0.1
  fs              %256.1 = FrameState         R     0x55de34de0470+1593: [%296.3, %296.4, %296.5, %256.0], env=e0.1
  void                    Deopt              !v    %256.1, DeadCall@0x55de34c80830[Call#23], %256.0   !
BB308   <- [30]
  val?~- | miss   %308.0 = CastType           d     dn %30.0
  val?-           %308.1 = Force!<value>            %308.0,    <str->
  lgl$#-          %308.2 = IsType                   %308.1 isA val+   <true>
  void                    Branch                   %308.2 -> BB310 (if true) | BB311 (if false)
BB309   <- [30]
  void                    Nop                !     
  val?^ | miss    %309.1 = %30.0
  dr              %309.2 = Typecheck@0x55de34c80830[Type#83]
  goto BB28
BB310   <- [308]
  val?^ | miss    %310.0 = LdVar              eR    i, e0.1
  lgl$#-          %310.1 = IsType                   %310.0 isA int$-
  void                    Branch                   %310.1 -> BB312 (if true) | BB313 (if false)
BB311   <- [308]
  void                    Nop                !     
  lgl$#-          %311.1 = %308.2
  dr              %311.2 = DeadBranchReached@0x55de34c80830[Test#18]
  goto BB28
BB28   <- [309, 311, 313]
  val?^ | miss    %28.0 = Phi                      %309.1:BB309, %311.1:BB311, %313.1:BB313
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %309.2:BB309, %311.2:BB311, %313.2:BB313
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55de34de0470+1535: [%296.3, %296.4, %296.5], env=e0.1
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB312   <- [310]
  int$-           %312.0 = CastType           d     dn %310.0
  val?            %312.1 = Extract2_1D        wed   %308.1, %312.0, elided   <str$->
  void                    StVar              lW    namei, %312.1, e0.1
  val?^ | miss    %312.3 = LdVar              eR    try, e0.1
  lgl$#-          %312.4 = Identical                %312.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %312.4 -> BB314 (if true) | BB315 (if false)
BB313   <- [310]
  void                    Nop                !     
  val?^ | miss    %313.1 = %310.0
  dr              %313.2 = Typecheck@0x55de34c80830[Type#85]
  goto BB28
BB314   <- [312]
  prom-           %314.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p10, e0.1
  ct              %314.1 = PushContext        lCL   %314.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %314.2 = CastType                 up %314.0
  env             e314.3 = MkEnv              l     expr=%314.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %314.4 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p63, e314.3
  val?^ | miss    %314.5 = CastType                 up %314.4
  void                    StArg              lW    outFile, %314.5, e314.3
  cls             %314.7 = MkCls                    try@Prom(3)0, e314.3
  prom-           %314.8 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p65, e314.3
  prom-           %314.9 = MkArg                    %314.7, validObject[0x55de32458cb0]_p66 (!refl), e314.3
  dots-           %314.10 = DotsList           l     error=%314.9
  val?            %314.11 = StaticCall         !v    tryCatch[0x55de2a823dd0](%314.8, %314.10) { 0 1n } e314.3   <val?+>
  val?            %314.12 = PopContext         C     %314.11, %314.1   <(str|cls)->
  void                    StVar              lW    sloti, %314.12, e0.1
  lgl$#-          %314.14 = IsType                   %314.12 isA val?-
  val?^ | miss    %314.15 = LdVar              eR    inherits, e0.1
  lgl$#-          %314.16 = Identical                %314.15, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %314.16 -> BB316 (if true) | BB317 (if false)
BB315   <- [312]
  fs              %315.0 = FrameState         R     0x55de34de0470+1817: [%296.3, %296.4, %296.5], env=e0.1
  void                    Deopt              !v    %315.0, CallTarget@0x55de34c80830[Call#26], %312.3   !
BB316   <- [314]
  void                    Branch                   %314.14 -> BB318 (if true) | BB319 (if false)
BB317   <- [314]
  void                    Nop                !     
  val?^ | miss    %317.1 = %314.15
  dr              %317.2 = CallTarget@0x55de34c80830[Call#29]
  goto BB33
BB318   <- [316]
  val?-           %318.0 = CastType           d     dn %314.12   <(str|cls)->
  val+            %318.1 = CallSafeBuiltin    wed   inherits(%318.0, "try-error", false)    <lgl$->
  lgl$#-          %318.2 = IsType                   %318.1 isA lgl$-
  void                    Branch                   %318.2 -> BB320 (if true) | BB321 (if false)
BB319   <- [316]
  void                    Nop                !     
  val?            %319.1 = %314.12
  dr              %319.2 = Typecheck@0x55de34c80830[Type#93]
  goto BB33
BB33   <- [317, 319]
  val?^ | miss    %33.0 = Phi                      %317.1:BB317, %319.1:BB319
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %317.2:BB317, %319.2:BB319
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55de34de0470+1876: [%296.3, %296.4, %296.5], env=e0.1
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB320   <- [318]
  lgl$-           %320.0 = CastType           d     dn %318.1
  lgl$#-          %320.1 = CheckTrueFalse     e     %320.0
  void                    Branch                   %320.1 -> BB250 (if true) | BB37 (if false)
BB321   <- [318]
  void                    Nop                !     
  val+            %321.1 = %318.1
  dr              %321.2 = Typecheck@0x55de34c80830[Type#95]
  goto BB35
BB250   <- [320]
  val?^ | miss    %250.0 = LdVar              eR    c, e0.1
  lgl$#-          %250.1 = Identical                <blt c>, %250.0   <@?>
  void                    Branch                   %250.1 -> BB252 (if true) | BB251 (if false)
BB37   <- [320]
  val?^ | miss    %37.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %37.1 = Identical                %37.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %37.1 -> BB322 (if true) | BB323 (if false)
BB35   <- [321, 323]
  val?^ | miss    %35.0 = Phi                      %321.1:BB321, %323.1:BB323
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %321.2:BB321, %323.2:BB323
  dr              %35.3 = %35.2
  prom-           %35.4 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p14 (!refl), e0.1
  val?^           %35.5 = CastType                 up %35.4
  fs              %35.6 = FrameState         R     0x55de34de0470+1913: [%296.3, %296.4, %296.5], env=e0.1
  env             e35.7 = (MkEnv)            l     which(miss)=false, what="try-error", x=%35.5, parent=R_BaseNamespace, context 0
  fs              %35.8 = FrameState         R     0x55de2a3e50a0+55: [%318.1], env=e35.7, next=%35.6
  void                    Deopt              !v    %35.8, %35.3, %35.1   !
BB252   <- [250]
  val?^ | miss    %252.0 = LdVar              eR    errors, e0.1
  val?            %252.1 = Force!             !v    %252.0, e0.1   <val?_>
  val?^ | miss    %252.2 = LdVar              eR    sloti, e0.1
  val?            %252.3 = Force!             !v    %252.2, e0.1   <val?_>
  lgl$#-          %252.4 = IsType                   %252.3 isA val?+
  lgl$#-          %252.5 = IsType                   %252.1 isA val?+
  void                    Branch                   %252.5 -> BB324 (if true) | BB325 (if false)
BB251   <- [250]
  (cls|spec|blt)  %251.0 = LdFun              !v    c, e0.1
  fs              %251.1 = FrameState         R     0x55de34de0470+1957: [%296.3, %296.4, %296.5, %251.0], env=e0.1
  void                    Deopt              !v    %251.1, DeadCall@0x55de34c80830[Call#30], %251.0   !
BB322   <- [37]
  prom-           %322.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p15, e0.1
  prom-           %322.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p17, e0.1
  prom-           %322.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p18, e0.1
  val?            %322.3 = StaticCall         !v    possibleExtends[0x55de2cd57800](%322.0, %322.1, missingArg, %322.2) { 0 1 3n } e0.1   <lgl$->
  lgl$#-          %322.4 = IsType                   %322.3 isA lgl$-
  void                    Branch                   %322.4 -> BB328 (if true) | BB329 (if false)
BB323   <- [37]
  void                    Nop                !     
  val?^ | miss    %323.1 = %37.0
  dr              %323.2 = CallTarget@0x55de34c80830[Call#31]
  goto BB35
BB324   <- [252]
  val?+           %324.0 = CastType           d     dn %252.1   <val?_>
  void                    Branch                   %252.4 -> BB326 (if true) | BB327 (if false)
BB325   <- [252]
  void                    Nop                !     
  val?            %325.1 = %252.1
  dr              %325.2 = Typecheck@0x55de34c80830[Type#98]
  goto BB253
BB328   <- [322]
  lgl$-           %328.0 = CastType           d     dn %322.3
  void                    StVar              lW    ok, %328.0, e0.1
  val?^ | miss    %328.2 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %328.3 = Identical                %328.2, function(x) <(rir::DispatchTable*)0x55de2b7a37|...
  void                    Branch                   %328.3 -> BB330 (if true) | BB331 (if false)
BB329   <- [322]
  fs              %329.0 = FrameState         R     0x55de34de0470+2117: [%296.3, %296.4, %296.5, %322.3], env=e0.1
  void                    Deopt              !v    %329.0, Typecheck@0x55de34c80830[Type#105], %322.3   !
BB326   <- [324]
  val?+           %326.0 = CastType           d     dn %252.3   <val?_>
  val+            %326.1 = CallSafeBuiltin    wed   c(%324.0, %326.0)    <val?_>
  void                    StVar              lW    errors, %326.1, e0.1
  int$-           %326.3 = %296.5
  goto BB49
BB327   <- [324]
  void                    Nop                !     
  val?            %327.1 = %252.3
  dr              %327.2 = Typecheck@0x55de34c80830[Type#99]
  goto BB253
BB253   <- [325, 327]
  val?^ | miss    %253.0 = Phi                      %325.1:BB325, %327.1:BB327
  val?^ | miss    %253.1 = %253.0
  dr              %253.2 = Phi                      %325.2:BB325, %327.2:BB327
  dr              %253.3 = %253.2
  fs              %253.4 = FrameState         R     0x55de34de0470+2017: [%296.3, %296.4, %296.5, <blt c>, %252.1, %252.3], env=e0.1
  void                    Deopt              !v    %253.4, %253.3, %253.1   !
BB330   <- [328]
  lgl$-           %330.0 = CallSafeBuiltin    wed   is.na(%328.0)    <lgl$->
  lgl$-           %330.1 = Not                d     %330.0, elided
  lgl$-           %330.2 = AsLogical                %330.1
  lgl$-           %330.3 = AsLogical                %330.2
  lgl$-           %330.4 = AsLogical                %330.3
  lgl$#-          %330.5 = Identical                %330.4, false
  void                    Branch                   %330.5 -> BB249 (if true) | BB42 (if false)
BB331   <- [328]
  fs              %331.0 = FrameState         R     0x55de34de0470+2131: [%296.3, %296.4, %296.5], env=e0.1
  void                    Deopt              !v    %331.0, CallTarget@0x55de34c80830[Call#33], %328.2   !
BB49   <- [48, 125, 326, 410]
  int$-           %49.0 = Phi                      %48.1:BB48, %125.1:BB125, %410.3:BB410, %326.3:BB326
  int$-           %49.1 = %49.0
  int$-           %49.2 = Inc                      %49.1
  lgl$-           %49.3 = Lt                 d     %296.4, %49.2, elided
  lgl$#-          %49.4 = Identical                %49.3, true
  void                    Branch                   %49.4 -> BB154 (if true) | BB52 (if false)
BB249   <- [330]
  void                    Nop                !     
  lgl$-           %249.1 = %330.4
  goto BB43
BB42   <- [330]
  lgl$-           %42.0 = Not                d     %328.0, elided
  lgl$-           %42.1 = AsLogical                %42.0
  lgl$-           %42.2 = LAnd                     %330.4, %42.1
  lgl$-           %42.3 = %42.2
  goto BB43
BB154   <- [49]
  val?^ | miss    %154.0 = LdVar              eR    rev, e0.1
  lgl$#-          %154.1 = Identical                %154.0, function(x) <(rir::DispatchTable*)0x55de2f7df9|...
  void                    Branch                   %154.1 -> BB332 (if true) | BB333 (if false)
BB52   <- [49]
  val?            %52.0 = Extract2_1D        wed   %296.3, %49.2, elided
  void                    StVar              lW    i, %52.0, e0.1
  val?^ | miss    %52.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %52.3 = IsType                   %52.2 isA val?~+ | miss
  void                    Branch                   %52.3 -> BB336 (if true) | BB337 (if false)
BB43   <- [249, 42]
  lgl$-           %43.0 = Phi                      %42.3:BB42, %249.1:BB249
  lgl$-           %43.1 = %43.0
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB246 (if true) | BB44 (if false)
BB332   <- [154]
  (cls|spec|blt)  %332.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %332.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p38, e0.1
  prom-           %332.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p39, e0.1
  val?            %332.3 = Call               !v    %332.0(%332.1, %332.2) e0.1   <vec+>
  val?            %332.4 = StaticCall         !v    rev[0x55de2b183fc0](%332.3) e0.1   <vec+>
  void                    StVar              lW    extends, %332.4, e0.1
  val?^ | miss    %332.6 = LdVar              eR    seq_along, e0.1
  lgl$#-          %332.7 = Identical                <blt seq_along>, %332.6   <true>
  void                    Branch                   %332.7 -> BB338 (if true) | BB339 (if false)
BB333   <- [154]
  fs              %333.0 = FrameState         R     0x55de34de0470+2760: [%296.3, %296.4, %49.1], env=e0.1
  void                    Deopt              !v    %333.0, CallTarget@0x55de34c80830[Call#68], %154.0   !
BB336   <- [52]
  val?~+ | miss   %336.0 = CastType           d     dn %52.2
  val?+           %336.1 = Force!<value>            %336.0,    <vec+>
  lgl$#-          %336.2 = IsType                   %336.1 isA val+   <true>
  void                    Branch                   %336.2 -> BB342 (if true) | BB343 (if false)
BB337   <- [52]
  void                    Nop                !     
  val?^ | miss    %337.1 = %52.2
  dr              %337.2 = Typecheck@0x55de34c80830[Type#151]
  goto BB53
BB246   <- [43]
  val?^ | miss    %246.0 = LdVar              eR    c, e0.1
  lgl$#-          %246.1 = Identical                <blt c>, %246.0   <@?>
  void                    Branch                   %246.1 -> BB248 (if true) | BB247 (if false)
BB44   <- [43]
  val?^ | miss    %44.0 = LdVar              eR    complete, e0.1
  val?            %44.1 = Force!<lazy>       !v    %44.0, e0.1   <lgl$->
  lgl$#-          %44.2 = IsType                   %44.1 isA lgl$-
  void                    Branch                   %44.2 -> BB334 (if true) | BB335 (if false)
BB338   <- [332]
  val             %338.0 = ChkMissing         e     %332.4
  val?            %338.1 = CallBuiltin        !v    seq_along(%332.4) e0.1   <int->
  val?+           %338.2 = ToForSeq           e     %338.1
  int$-           %338.3 = Length                   %338.2
  lgl$-           %338.4 = Lt                 d     %338.3, %296.5, elided   <false>
  lgl$#-          %338.5 = Identical                %338.4, true
  void                    Branch                   %338.5 -> BB341 (if true) | BB340 (if false)
BB339   <- [332]
  fs              %339.0 = FrameState         R     0x55de34de0470+4204: [], env=e0.1
  void                    Deopt              !v    %339.0, DeadBranchReached@0x55de34c80830[Test#58], %332.7   !
BB342   <- [336]
  val             %342.0 = ChkMissing         e     %52.0
  lgl$#-          %342.1 = IsType                   %342.0 isA int$-
  void                    Branch                   %342.1 -> BB344 (if true) | BB345 (if false)
BB343   <- [336]
  void                    Nop                !     
  lgl$#-          %343.1 = %336.2
  dr              %343.2 = DeadBranchReached@0x55de34c80830[Test#36]
  goto BB53
BB53   <- [337, 343, 345]
  val?^ | miss    %53.0 = Phi                      %337.1:BB337, %343.1:BB343, %345.1:BB345
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %337.2:BB337, %343.2:BB343, %345.2:BB345
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x55de34de0470+2789: [%296.3, %296.4, %49.2], env=e0.1
  void                    Deopt              !v    %53.4, %53.3, %53.1   !
BB248   <- [246]
  val?^ | miss    %248.0 = LdVar              eR    errors, e0.1
  val?            %248.1 = Force!             !v    %248.0, e0.1   <val?_>
  (cls|spec|blt)  %248.2 = LdFun              !v    paste0, e0.1
  fs              %248.3 = FrameState         R     0x55de34de0470+2263: [%296.3, %296.4, %296.5, <blt c>, %248.1, %248.2], env=e0.1
  void                    Deopt              !v    %248.3, DeadCall@0x55de34c80830[Call#37], %248.2   !
BB247   <- [246]
  (cls|spec|blt)  %247.0 = LdFun              !v    c, e0.1
  fs              %247.1 = FrameState         R     0x55de34de0470+2207: [%296.3, %296.4, %296.5, %247.0], env=e0.1
  void                    Deopt              !v    %247.1, DeadCall@0x55de34c80830[Call#34], %247.0   !
BB334   <- [44]
  lgl$-           %334.0 = CastType           d     dn %44.1
  lgl$-           %334.1 = Not                d     %334.0, elided
  lgl$#-          %334.2 = CheckTrueFalse     e     %334.1
  void                    Branch                   %334.2 -> BB48 (if true) | BB47 (if false)
BB335   <- [44]
  fs              %335.0 = FrameState         R     0x55de34de0470+2385: [%296.3, %296.4, %296.5, %44.1], env=e0.1
  void                    Deopt              !v    %335.0, Typecheck@0x55de34c80830[Type#131], %44.1   !
BB341   <- [338]
  fs              %341.0 = FrameState         R     0x55de34de0470+4295: [%338.1], env=e0.1
  void                    Deopt              !v    %341.0, DeadBranchReached@0x55de34c80830[Test#59], %338.5   !
BB340   <- [338]
  val?            %340.0 = Extract2_1D        wed   %338.2, %296.5, elided
  void                    StVar              lW    i, %340.0, e0.1
  val?^ | miss    %340.2 = LdVar              eR    extends, e0.1
  lgl$#-          %340.3 = IsType                   %340.2 isA val?~+ | miss
  void                    Branch                   %340.3 -> BB346 (if true) | BB347 (if false)
BB344   <- [342]
  int$-           %344.0 = CastType           d     dn %342.0
  val?            %344.1 = Extract2_1D        wed   %336.1, %344.0, elided   <str$+>
  void                    StVar              lW    classi, %344.1, e0.1
  val?^ | miss    %344.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %344.4 = Identical                %344.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %344.4 -> BB348 (if true) | BB349 (if false)
BB345   <- [342]
  void                    Nop                !     
  val             %345.1 = %342.0
  dr              %345.2 = Typecheck@0x55de34c80830[Type#153]
  goto BB53
BB48   <- [334]
  void                    Nop                !     
  int$-           %48.1 = %296.5
  goto BB49
BB47   <- [334]
  (cls|spec|blt)  %47.0 = LdFun              !v    anyStrings, e0.1
  fs              %47.1 = FrameState         R     0x55de34de0470+2417: [%296.3, %296.4, %296.5, %47.0], env=e0.1
  void                    Deopt              !v    %47.1, DeadCall@0x55de34c80830[Call#39], %47.0   !
BB346   <- [340]
  val?~+ | miss   %346.0 = CastType           d     dn %340.2
  val?+           %346.1 = Force!<value>            %346.0,    <vec+>
  lgl$#-          %346.2 = IsType                   %346.1 isA val+   <true>
  void                    Branch                   %346.2 -> BB350 (if true) | BB351 (if false)
BB347   <- [340]
  void                    Nop                !     
  val?^ | miss    %347.1 = %340.2
  dr              %347.2 = Typecheck@0x55de34c80830[Type#249]
  goto BB159
BB348   <- [344]
  prom-           %348.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p20 (!refl), e0.1
  prom-           %348.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p21, e0.1
  val?            %348.2 = StaticCall         !v    getClassDef[0x55de2fda2600](%348.0, %348.1) { 0 1n } e0.1   <other>
  lgl$-           %348.3 = Is                       %348.2, NULL
  void                    StVar              lW    classDefi, %348.2, e0.1
  val             %348.5 = ChkMissing         e     %348.2
  lgl$#-          %348.6 = CheckTrueFalse     e     %348.3
  void                    Branch                   %348.6 -> BB151 (if true) | BB59 (if false)
BB349   <- [344]
  fs              %349.0 = FrameState         R     0x55de34de0470+2864: [%296.3, %296.4, %49.2], env=e0.1
  void                    Deopt              !v    %349.0, CallTarget@0x55de34c80830[Call#45], %344.3   !
BB350   <- [346]
  val             %350.0 = ChkMissing         e     %340.0
  lgl$#-          %350.1 = IsType                   %350.0 isA int$-
  void                    Branch                   %350.1 -> BB352 (if true) | BB353 (if false)
BB351   <- [346]
  void                    Nop                !     
  lgl$#-          %351.1 = %346.2
  dr              %351.2 = DeadBranchReached@0x55de34c80830[Test#60]
  goto BB159
BB159   <- [347, 351, 353]
  val?^ | miss    %159.0 = Phi                      %347.1:BB347, %351.1:BB351, %353.1:BB353
  val?^ | miss    %159.1 = %159.0
  dr              %159.2 = Phi                      %347.2:BB347, %351.2:BB351, %353.2:BB353
  dr              %159.3 = %159.2
  fs              %159.4 = FrameState         R     0x55de34de0470+4340: [%338.2, %338.3, %296.5], env=e0.1
  void                    Deopt              !v    %159.4, %159.3, %159.1   !
BB151   <- [348]
  val?^ | miss    %151.0 = LdVar              eR    c, e0.1
  lgl$#-          %151.1 = Identical                <blt c>, %151.0   <@?>
  void                    Branch                   %151.1 -> BB153 (if true) | BB152 (if false)
BB59   <- [348]
  val?^ | miss    %59.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %59.1 = IsType                   %59.0 isA val?~- | miss
  void                    Branch                   %59.1 -> BB354 (if true) | BB355 (if false)
BB352   <- [350]
  int$-           %352.0 = CastType           d     dn %350.0
  val?            %352.1 = Extract2_1D        wed   %346.1, %352.0, elided   <other>
  void                    StVar              lW    exti, %352.1, e0.1
  (cls|spec|blt)  %352.3 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %352.4 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p40, e0.1
  prom-           %352.5 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p41, e0.1
  val?            %352.6 = Call               !v    %352.3(%352.4, %352.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %352.6, e0.1
  (cls|spec|blt)  %352.8 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %352.9 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p42, e0.1
  prom-           %352.10 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p43, e0.1
  val?            %352.11 = Call               !v    %352.8(%352.9, %352.10) e0.1   <lgl$->
  lgl$#-          %352.12 = IsType                   %352.11 isA lgl$-
  void                    Branch                   %352.12 -> BB358 (if true) | BB359 (if false)
BB353   <- [350]
  void                    Nop                !     
  val             %353.1 = %350.0
  dr              %353.2 = Typecheck@0x55de34c80830[Type#251]
  goto BB159
BB153   <- [151]
  val?^ | miss    %153.0 = LdVar              eR    errors, e0.1
  val?            %153.1 = Force!             !v    %153.0, e0.1   <val?_>
  (cls|spec|blt)  %153.2 = LdFun              !v    paste0, e0.1
  fs              %153.3 = FrameState         R     0x55de34de0470+3037: [%296.3, %296.4, %49.2, <blt c>, %153.1, %153.2], env=e0.1
  void                    Deopt              !v    %153.3, DeadCall@0x55de34c80830[Call#48], %153.2   !
BB152   <- [151]
  (cls|spec|blt)  %152.0 = LdFun              !v    c, e0.1
  fs              %152.1 = FrameState         R     0x55de34de0470+2981: [%296.3, %296.4, %49.2, %152.0], env=e0.1
  void                    Deopt              !v    %152.1, DeadCall@0x55de34c80830[Call#46], %152.0   !
BB354   <- [59]
  val?~- | miss   %354.0 = CastType           d     dn %59.0
  val?-           %354.1 = Force!<value>            %354.0,    <str->
  lgl$#-          %354.2 = IsType                   %354.1 isA val+   <true>
  void                    Branch                   %354.2 -> BB356 (if true) | BB357 (if false)
BB355   <- [59]
  void                    Nop                !     
  val?^ | miss    %355.1 = %59.0
  dr              %355.2 = Typecheck@0x55de34c80830[Type#174]
  goto BB57
BB358   <- [352]
  lgl$-           %358.0 = CastType           d     dn %352.11
  lgl$-           %358.1 = Not                d     %358.0, elided
  lgl$-           %358.2 = AsLogical                %358.1
  lgl$#-          %358.3 = Identical                %358.2, false
  void                    Branch                   %358.3 -> BB164 (if true) | BB163 (if false)
BB359   <- [352]
  void                    Nop                !     
  val?            %359.1 = %352.11
  dr              %359.2 = Typecheck@0x55de34c80830[Type#258]
  goto BB161
BB356   <- [354]
  val?^ | miss    %356.0 = LdVar              eR    i, e0.1
  lgl$#-          %356.1 = IsType                   %356.0 isA int$-
  void                    Branch                   %356.1 -> BB360 (if true) | BB361 (if false)
BB357   <- [354]
  void                    Nop                !     
  lgl$#-          %357.1 = %354.2
  dr              %357.2 = DeadBranchReached@0x55de34c80830[Test#40]
  goto BB57
BB57   <- [355, 357, 361]
  val?^ | miss    %57.0 = Phi                      %355.1:BB355, %357.1:BB357, %361.1:BB361
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %355.2:BB355, %357.2:BB357, %361.2:BB361
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x55de34de0470+2923: [%296.3, %296.4, %49.2], env=e0.1
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB164   <- [358]
  lgl$#-          %164.0 = CheckTrueFalse     e     %358.2
  void                    Branch                   %164.0 -> BB245 (if true) | BB165 (if false)
BB163   <- [358]
  (cls|spec|blt)  %163.0 = LdFun              !v    is, e0.1
  fs              %163.1 = FrameState         R     0x55de34de0470+4521: [%338.2, %338.3, %296.5, %358.2, %163.0], env=e0.1
  void                    Deopt              !v    %163.1, DeadCall@0x55de34c80830[Call#73], %163.0   !
BB161   <- [359, 363]
  val?^ | miss    %161.0 = Phi                      %359.1:BB359, %363.1:BB363
  val?^ | miss    %161.1 = %161.0
  dr              %161.2 = Phi                      %359.2:BB359, %363.2:BB363
  dr              %161.3 = %161.2
  fs              %161.4 = FrameState         R     0x55de34de0470+4503: [%338.2, %338.3, %296.5, %352.11], env=e0.1
  void                    Deopt              !v    %161.4, %161.3, %161.1   !
BB360   <- [356]
  int$-           %360.0 = CastType           d     dn %356.0
  val?            %360.1 = Extract2_1D        wed   %354.1, %360.0, elided   <str$->
  void                    StVar              lW    namei, %360.1, e0.1
  val?^ | miss    %360.3 = LdVar              eR    try, e0.1
  lgl$#-          %360.4 = Identical                %360.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %360.4 -> BB364 (if true) | BB365 (if false)
BB361   <- [356]
  void                    Nop                !     
  val?^ | miss    %361.1 = %356.0
  dr              %361.2 = Typecheck@0x55de34c80830[Type#176]
  goto BB57
BB245   <- [164]
  void                    Nop                !     
  int$-           %245.1 = %296.5
  goto BB170
BB165   <- [164]
  val?^ | miss    %165.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %165.1 = Identical                %165.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %165.1 -> BB362 (if true) | BB363 (if false)
BB364   <- [360]
  prom-           %364.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p22, e0.1
  ct              %364.1 = PushContext        lCL   %364.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %364.2 = CastType                 up %364.0
  env             e364.3 = MkEnv              l     expr=%364.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %364.4 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p68, e364.3
  val?^ | miss    %364.5 = CastType                 up %364.4
  void                    StArg              lW    outFile, %364.5, e364.3
  cls             %364.7 = MkCls                    try@Prom(3)0, e364.3
  val?^ | miss    %364.8 = LdVar              eR    tryCatch, e364.3
  lgl$#-          %364.9 = Identical                %364.8, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %364.9 -> BB366 (if true) | BB367 (if false)
BB365   <- [360]
  fs              %365.0 = FrameState         R     0x55de34de0470+3205: [%296.3, %296.4, %49.2], env=e0.1
  void                    Deopt              !v    %365.0, CallTarget@0x55de34c80830[Call#49], %360.3   !
BB170   <- [169, 237, 245, 185]
  int$-           %170.0 = Phi                      %169.1:BB169, %185.1:BB185, %237.1:BB237, %245.1:BB245
  int$-           %170.1 = %170.0
  int$-           %170.2 = Inc                      %170.1
  lgl$-           %170.3 = Lt                 d     %338.3, %170.2, elided
  lgl$#-          %170.4 = Identical                %170.3, true
  void                    Branch                   %170.4 -> BB238 (if true) | BB171 (if false)
BB362   <- [165]
  prom-           %362.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p44, e0.1
  val?            %362.1 = StaticCall         !v    getClassDef[0x55de294c0820](%362.0) e0.1   <other>
  lgl$-           %362.2 = Is                       %362.1, NULL
  void                    StVar              lW    superDef, %362.1, e0.1
  val             %362.4 = ChkMissing         e     %362.1
  lgl$#-          %362.5 = CheckTrueFalse     e     %362.2
  void                    Branch                   %362.5 -> BB242 (if true) | BB166 (if false)
BB363   <- [165]
  void                    Nop                !     
  val?^ | miss    %363.1 = %165.0
  dr              %363.2 = CallTarget@0x55de34c80830[Call#74]
  goto BB161
BB366   <- [364]
  prom-           %366.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p70, e364.3
  prom-           %366.1 = MkArg                    %364.7, validObject[0x55de32458cb0]_p71 (!refl), e364.3
  dots-           %366.2 = DotsList           l     error=%366.1
  val?            %366.3 = StaticCall         !v    tryCatch[0x55de2a823dd0](%366.0, %366.2) { 0 1n } e364.3   <val?+>
  val?            %366.4 = PopContext         C     %366.3, %364.1
  void                    StVar              lW    sloti, %366.4, e0.1
  val?^ | miss    %366.6 = LdVar              eR    inherits, e0.1
  lgl$#-          %366.7 = Identical                %366.6, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %366.7 -> BB372 (if true) | BB373 (if false)
BB367   <- [364]
  fs              %367.0 = FrameState         R     0x55de34de0470+3250: [%296.3, %296.4, %49.2], env=e0.1
  fs              %367.1 = FrameState         R     0x55de2a6c7b30+0: [], env=e364.3, next=%367.0
  void                    Deopt              !v    %367.1, CallTarget@0x55de2a4942a0[Call#2], %364.8   !
BB238   <- [170]
  void                    Nop                !     
  goto BB213
BB171   <- [170]
  val?            %171.0 = Extract2_1D        wed   %338.2, %170.2, elided
  void                    StVar              lW    i, %171.0, e0.1
  val?^ | miss    %171.2 = LdVar              eR    extends, e0.1
  lgl$#-          %171.3 = IsType                   %171.2 isA val?~+ | miss
  void                    Branch                   %171.3 -> BB368 (if true) | BB369 (if false)
BB242   <- [362]
  val?^ | miss    %242.0 = LdVar              eR    c, e0.1
  lgl$#-          %242.1 = Identical                <blt c>, %242.0   <@?>
  void                    Branch                   %242.1 -> BB244 (if true) | BB243 (if false)
BB166   <- [362]
  (cls|spec|blt)  %166.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %166.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p45, e0.1
  prom-           %166.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p46, e0.1
  val?            %166.3 = Call               !v    %166.0(%166.1, %166.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %166.3, e0.1
  lgl$#-          %166.5 = IsType                   %166.3 isA val?-
  val?^ | miss    %166.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %166.7 = Identical                <blt is.function>, %166.6   <true>
  void                    Branch                   %166.7 -> BB370 (if true) | BB371 (if false)
BB372   <- [366]
  prom-           %372.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p26 (!refl), e0.1
  ct              %372.1 = PushContext        lCL   %372.0, "try-error", inherits(sloti, "try-error"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.1
  val?^           %372.2 = CastType                 up %372.0
  env             e372.3 = MkEnv              l     x=%372.2, what="try-error", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %372.4 = Force!<lazy>       !vr   %372.2, e372.3   <val?>
  val?^ | miss    %372.5 = LdVar              eR    what, e372.3
  val?            %372.6 = Force!<value>      !v    %372.5, e372.3   <str$->
  val?^ | miss    %372.7 = LdVar              eR    which, e372.3
  val?            %372.8 = Force!<lazy>       !v    %372.7, e372.3   <lgl$->
  lgl$#-          %372.9 = IsType                   %372.8 isA lgl$-
  lgl$#-          %372.10 = IsType                   %372.6 isA val?-
  void                    Branch                   %372.10 -> BB380 (if true) | BB381 (if false)
BB373   <- [366]
  fs              %373.0 = FrameState         R     0x55de34de0470+3264: [%296.3, %296.4, %49.2], env=e0.1
  void                    Deopt              !v    %373.0, CallTarget@0x55de34c80830[Call#52], %366.6   !
BB213   <- [212, 238]
  (cls|spec|blt)  %213.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %213.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p58, e0.1
  prom-           %213.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p59, e0.1
  val?            %213.3 = Call               !v    %213.0(%213.1, %213.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %213.3, e0.1
  val?^ | miss    %213.5 = LdVar              eR    length, e0.1
  lgl$#-          %213.6 = Identical                <blt length>, %213.5   <true>
  void                    Branch                   %213.6 -> BB376 (if true) | BB377 (if false)
BB368   <- [171]
  val?~+ | miss   %368.0 = CastType           d     dn %171.2
  val?+           %368.1 = Force!<value>            %368.0,    <vec+>
  lgl$#-          %368.2 = IsType                   %368.1 isA val+   <true>
  void                    Branch                   %368.2 -> BB374 (if true) | BB375 (if false)
BB369   <- [171]
  void                    Nop                !     
  val?^ | miss    %369.1 = %171.2
  dr              %369.2 = Typecheck@0x55de34c80830[Type#294]
  goto BB172
BB244   <- [242]
  val?^ | miss    %244.0 = LdVar              eR    errors, e0.1
  val?            %244.1 = Force!             !v    %244.0, e0.1   <val?_>
  (cls|spec|blt)  %244.2 = LdFun              !v    paste0, e0.1
  fs              %244.3 = FrameState         R     0x55de34de0470+4742: [%338.2, %338.3, %296.5, <blt c>, %244.1, %244.2], env=e0.1
  void                    Deopt              !v    %244.3, DeadCall@0x55de34c80830[Call#77], %244.2   !
BB243   <- [242]
  (cls|spec|blt)  %243.0 = LdFun              !v    c, e0.1
  fs              %243.1 = FrameState         R     0x55de34de0470+4686: [%338.2, %338.3, %296.5, %243.0], env=e0.1
  void                    Deopt              !v    %243.1, DeadCall@0x55de34c80830[Call#75], %243.0   !
BB370   <- [166]
  val             %370.0 = ChkMissing         e     %166.3
  void                    Branch                   %166.5 -> BB378 (if true) | BB379 (if false)
BB371   <- [166]
  void                    Nop                !     
  lgl$#-          %371.1 = %166.7
  dr              %371.2 = DeadBranchReached@0x55de34c80830[Test#62]
  goto BB167
BB380   <- [372]
  val?-           %380.0 = CastType           d     dn %372.6   <str$->
  void                    Branch                   %372.9 -> BB388 (if true) | BB389 (if false)
BB381   <- [372]
  void                    Nop                !     
  val?            %381.1 = %372.6
  dr              %381.2 = Typecheck@0x55de2a4055a0[Type#1]
  goto BB66
BB376   <- [213]
  val?^ | miss    %376.0 = LdVar              eR    errors, e0.1
  lgl$#-          %376.1 = IsType                   %376.0 isA val?~- | miss
  void                    Branch                   %376.1 -> BB386 (if true) | BB387 (if false)
BB377   <- [213]
  void                    Nop                !     
  lgl$#-          %377.1 = %213.6
  dr              %377.2 = DeadBranchReached@0x55de34c80830[Test#70]
  goto BB214
BB374   <- [368]
  val             %374.0 = ChkMissing         e     %171.0
  lgl$#-          %374.1 = IsType                   %374.0 isA int$-
  void                    Branch                   %374.1 -> BB382 (if true) | BB383 (if false)
BB375   <- [368]
  void                    Nop                !     
  lgl$#-          %375.1 = %368.2
  dr              %375.2 = DeadBranchReached@0x55de34c80830[Test#65]
  goto BB172
BB172   <- [369, 375, 383]
  val?^ | miss    %172.0 = Phi                      %369.1:BB369, %375.1:BB375, %383.1:BB383
  val?^ | miss    %172.1 = %172.0
  dr              %172.2 = Phi                      %369.2:BB369, %375.2:BB375, %383.2:BB383
  dr              %172.3 = %172.2
  fs              %172.4 = FrameState         R     0x55de34de0470+5276: [%338.2, %338.3, %170.2], env=e0.1
  void                    Deopt              !v    %172.4, %172.3, %172.1   !
BB378   <- [370]
  val?-           %378.0 = CastType           d     dn %166.3   <nil->
  lgl$#-          %378.1 = CallSafeBuiltin    wed   is.function(%378.0)    <lgl$->
  void                    Branch                   %378.1 -> BB239 (if true) | BB169 (if false)
BB379   <- [370]
  void                    Nop                !     
  val?            %379.1 = %166.3
  dr              %379.2 = Typecheck@0x55de34c80830[Type#274]
  goto BB167
BB167   <- [371, 379]
  val?^ | miss    %167.0 = Phi                      %371.1:BB371, %379.1:BB379
  val?^ | miss    %167.1 = %167.0
  dr              %167.2 = Phi                      %371.2:BB371, %379.2:BB379
  dr              %167.3 = %167.2
  fs              %167.4 = FrameState         R     0x55de34de0470+4876: [%338.2, %338.3, %296.5], env=e0.1
  void                    Deopt              !v    %167.4, %167.3, %167.1   !
BB388   <- [380]
  lgl$-           %388.0 = CastType           d     dn %372.8
  val?            %388.1 = CallBuiltin        !v    inherits(%372.4, %380.0, %388.0) e372.3
  val?            %388.2 = PopContext         C     %388.1, %372.1   <lgl$->
  lgl$#-          %388.3 = IsType                   %388.2 isA lgl$-
  void                    Branch                   %388.3 -> BB392 (if true) | BB393 (if false)
BB389   <- [380]
  void                    Nop                !     
  val?            %389.1 = %372.8
  dr              %389.2 = Typecheck@0x55de2a4055a0[Type#2]
  goto BB66
BB66   <- [381, 389]
  val?^ | miss    %66.0 = Phi                      %381.1:BB381, %389.1:BB389
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %381.2:BB381, %389.2:BB389
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55de34de0470+3301: [%296.3, %296.4, %49.2], env=e0.1
  fs              %66.5 = FrameState         R     0x55de2a3e50a0+37: [%372.4, %372.6, %372.8], env=e372.3, next=%66.4
  void                    Deopt              !v    %66.5, %66.3, %66.1   !
BB386   <- [376]
  val?~- | miss   %386.0 = CastType           d     dn %376.0
  val?-           %386.1 = Force!<value>            %386.0,    <str->
  (int|real)$-    %386.2 = CallSafeBuiltin    wed   length(%386.1)    <int$->
  lgl$#-          %386.3 = IsType                   %386.2 isA int$-
  void                    Branch                   %386.3 -> BB400 (if true) | BB401 (if false)
BB387   <- [376]
  void                    Nop                !     
  val?^ | miss    %387.1 = %376.0
  dr              %387.2 = Typecheck@0x55de34c80830[Type#343]
  goto BB214
BB214   <- [377, 387]
  val?^ | miss    %214.0 = Phi                      %377.1:BB377, %387.1:BB387
  val?^ | miss    %214.1 = %214.0
  dr              %214.2 = Phi                      %377.2:BB377, %387.2:BB387
  dr              %214.3 = %214.2
  fs              %214.4 = FrameState         R     0x55de34de0470+6244: [], env=e0.1
  void                    Deopt              !v    %214.4, %214.3, %214.1   !
BB382   <- [374]
  int$-           %382.0 = CastType           d     dn %374.0
  val?            %382.1 = Extract2_1D        wed   %368.1, %382.0, elided   <other>
  void                    StVar              lW    exti, %382.1, e0.1
  (cls|spec|blt)  %382.3 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %382.4 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p47, e0.1
  prom-           %382.5 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p48, e0.1
  val?            %382.6 = Call               !v    %382.3(%382.4, %382.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %382.6, e0.1
  (cls|spec|blt)  %382.8 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %382.9 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p49, e0.1
  prom-           %382.10 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p50, e0.1
  val?            %382.11 = Call               !v    %382.8(%382.9, %382.10) e0.1   <lgl$->
  lgl$#-          %382.12 = IsType                   %382.11 isA lgl$-
  void                    Branch                   %382.12 -> BB384 (if true) | BB385 (if false)
BB383   <- [374]
  void                    Nop                !     
  val             %383.1 = %374.0
  dr              %383.2 = Typecheck@0x55de34c80830[Type#296]
  goto BB172
BB239   <- [378]
  val?^ | miss    %239.0 = LdVar              eR    c, e0.1
  lgl$#-          %239.1 = Identical                <blt c>, %239.0   <@?>
  void                    Branch                   %239.1 -> BB241 (if true) | BB240 (if false)
BB169   <- [378]
  void                    Nop                !     
  int$-           %169.1 = %296.5
  goto BB170
BB392   <- [388]
  lgl$-           %392.0 = CastType           d     dn %388.2
  lgl$#-          %392.1 = CheckTrueFalse     e     %392.0
  void                    Branch                   %392.1 -> BB146 (if true) | BB70 (if false)
BB393   <- [388]
  void                    Nop                !     
  val?            %393.1 = %388.2
  dr              %393.2 = Typecheck@0x55de34c80830[Type#186]
  goto BB68
BB400   <- [386]
  int$-           %400.0 = CastType           d     dn %386.2
  lgl$-           %400.1 = Eq                 d     %400.0, 0L, elided   <lgl$->
  lgl$-           %400.2 = AsLogical                %400.1
  lgl$#-          %400.3 = Identical                %400.2, false
  void                    Branch                   %400.3 -> BB229 (if true) | BB218 (if false)
BB401   <- [386]
  void                    Nop                !     
  (int|real)$-    %401.1 = %386.2
  dr              %401.2 = Typecheck@0x55de34c80830[Type#344]
  goto BB216
BB384   <- [382]
  lgl$-           %384.0 = CastType           d     dn %382.11
  lgl$-           %384.1 = Not                d     %384.0, elided
  lgl$-           %384.2 = AsLogical                %384.1
  lgl$#-          %384.3 = Identical                %384.2, false
  void                    Branch                   %384.3 -> BB177 (if true) | BB176 (if false)
BB385   <- [382]
  void                    Nop                !     
  val?            %385.1 = %382.11
  dr              %385.2 = Typecheck@0x55de34c80830[Type#303]
  goto BB174
BB241   <- [239]
  val?^ | miss    %241.0 = LdVar              eR    errors, e0.1
  val?            %241.1 = Force!             !v    %241.0, e0.1   <val?_>
  (cls|spec|blt)  %241.2 = LdFun              !v    anyStrings, e0.1
  fs              %241.3 = FrameState         R     0x55de34de0470+5067: [%338.2, %338.3, %296.5, <blt c>, %241.1, %241.2], env=e0.1
  void                    Deopt              !v    %241.3, DeadCall@0x55de34c80830[Call#84], %241.2   !
BB240   <- [239]
  (cls|spec|blt)  %240.0 = LdFun              !v    c, e0.1
  fs              %240.1 = FrameState         R     0x55de34de0470+5011: [%338.2, %338.3, %296.5, %240.0], env=e0.1
  void                    Deopt              !v    %240.1, DeadCall@0x55de34c80830[Call#80], %240.0   !
BB146   <- [392]
  val?^ | miss    %146.0 = LdVar              eR    c, e0.1
  lgl$#-          %146.1 = Identical                <blt c>, %146.0   <@?>
  void                    Branch                   %146.1 -> BB148 (if true) | BB147 (if false)
BB70   <- [392]
  val?^ | miss    %70.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %70.1 = Identical                %70.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %70.1 -> BB394 (if true) | BB395 (if false)
BB68   <- [393, 395]
  val?^ | miss    %68.0 = Phi                      %393.1:BB393, %395.1:BB395
  val?^ | miss    %68.1 = %68.0
  dr              %68.2 = Phi                      %393.2:BB393, %395.2:BB395
  dr              %68.3 = %68.2
  fs              %68.4 = FrameState         R     0x55de34de0470+3301: [%296.3, %296.4, %49.2, %388.2], env=e0.1
  void                    Deopt              !v    %68.4, %68.3, %68.1   !
BB229   <- [400]
  void                    Nop                !     
  lgl$-           %229.1 = %400.2
  goto BB219
BB218   <- [400]
  val?^ | miss    %218.0 = LdVar              eR    is.function, e0.1
  lgl$#-          %218.1 = Identical                <blt is.function>, %218.0   <true>
  void                    Branch                   %218.1 -> BB416 (if true) | BB417 (if false)
BB216   <- [401, 417, 421]
  val?^ | miss    %216.0 = Phi                      %401.1:BB401, %417.1:BB417, %421.1:BB421
  val?^ | miss    %216.1 = %216.0
  dr              %216.2 = Phi                      %401.2:BB401, %417.2:BB417, %421.2:BB421
  dr              %216.3 = %216.2
  fs              %216.4 = FrameState         R     0x55de34de0470+6335: [%386.2], env=e0.1
  void                    Deopt              !v    %216.4, %216.3, %216.1   !
BB177   <- [384]
  lgl$#-          %177.0 = CheckTrueFalse     e     %384.2
  void                    Branch                   %177.0 -> BB237 (if true) | BB178 (if false)
BB176   <- [384]
  (cls|spec|blt)  %176.0 = LdFun              !v    is, e0.1
  fs              %176.1 = FrameState         R     0x55de34de0470+5457: [%338.2, %338.3, %170.2, %384.2, %176.0], env=e0.1
  void                    Deopt              !v    %176.1, DeadCall@0x55de34c80830[Call#90], %176.0   !
BB174   <- [385, 391]
  val?^ | miss    %174.0 = Phi                      %385.1:BB385, %391.1:BB391
  val?^ | miss    %174.1 = %174.0
  dr              %174.2 = Phi                      %385.2:BB385, %391.2:BB391
  dr              %174.3 = %174.2
  fs              %174.4 = FrameState         R     0x55de34de0470+5439: [%338.2, %338.3, %170.2, %382.11], env=e0.1
  void                    Deopt              !v    %174.4, %174.3, %174.1   !
BB148   <- [146]
  val?^ | miss    %148.0 = LdVar              eR    errors, e0.1
  val?            %148.1 = Force!             !v    %148.0, e0.1   <val?_>
  val?^ | miss    %148.2 = LdVar              eR    sloti, e0.1
  val?            %148.3 = Force!             !v    %148.2, e0.1   <val?_>
  lgl$#-          %148.4 = IsType                   %148.3 isA val?+
  lgl$#-          %148.5 = IsType                   %148.1 isA val?+
  void                    Branch                   %148.5 -> BB402 (if true) | BB403 (if false)
BB147   <- [146]
  (cls|spec|blt)  %147.0 = LdFun              !v    c, e0.1
  fs              %147.1 = FrameState         R     0x55de34de0470+3345: [%296.3, %296.4, %49.2, %147.0], env=e0.1
  void                    Deopt              !v    %147.1, DeadCall@0x55de34c80830[Call#53], %147.0   !
BB394   <- [70]
  prom-           %394.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p27, e0.1
  prom-           %394.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p29, e0.1
  prom-           %394.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p30, e0.1
  ct              %394.3 = PushContext        lCL   %394.0, %394.1, missingArg, %394.2, possibleExtends(class(sloti), classi, ClassDef|..., function(class1, class2, ClassDef1=getClassDef|..., e0.1
  val?^           %394.4 = CastType                 up %394.2
  val?^           %394.5 = CastType                 up %394.1
  val?^           %394.6 = CastType                 up %394.0
  env             e394.7 = MkEnv              l     class1=%394.6, class2=%394.5, ClassDef1(miss)=missingArg, ClassDef2=%394.4, parent=<env 0x55de28b56378>, context 1
  prom-           %394.8 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p73, e394.7
  val?^ | miss    %394.9 = CastType                 up %394.8
  void                    StArg              lW    ClassDef1, %394.9, e394.7
  val?^ | miss    %394.11 = LdVar              eR    .identC, e394.7
  lgl$#-          %394.12 = Identical                %394.11, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %394.12 -> BB412 (if true) | BB413 (if false)
BB395   <- [70]
  void                    Nop                !     
  val?^ | miss    %395.1 = %70.0
  dr              %395.2 = CallTarget@0x55de34c80830[Call#54]
  goto BB68
BB219   <- [229, 420]
  lgl$-           %219.0 = Phi                      %420.3:BB420, %229.1:BB229
  lgl$-           %219.1 = %219.0
  lgl$#-          %219.2 = CheckTrueFalse     e     %219.1
  void                    Branch                   %219.2 -> BB226 (if true) | BB220 (if false)
BB416   <- [218]
  val             %416.0 = ChkMissing         e     %213.3
  lgl$#-          %416.1 = IsType                   %416.0 isA val?~- | miss
  void                    Branch                   %416.1 -> BB420 (if true) | BB421 (if false)
BB417   <- [218]
  void                    Nop                !     
  lgl$#-          %417.1 = %218.1
  dr              %417.2 = DeadBranchReached@0x55de34c80830[Test#71]
  goto BB216
BB237   <- [177]
  void                    Nop                !     
  int$-           %237.1 = %170.2
  goto BB170
BB178   <- [177]
  val?^ | miss    %178.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %178.1 = Identical                %178.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %178.1 -> BB390 (if true) | BB391 (if false)
BB402   <- [148]
  val?+           %402.0 = CastType           d     dn %148.1   <val?_>
  void                    Branch                   %148.4 -> BB410 (if true) | BB411 (if false)
BB403   <- [148]
  void                    Nop                !     
  val?            %403.1 = %148.1
  dr              %403.2 = Typecheck@0x55de34c80830[Type#189]
  goto BB149
BB412   <- [394]
  prom-           %412.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p79, e394.7
  prom-           %412.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p80, e394.7
  val?            %412.2 = StaticCall         !v    .identC[0x55de2e426eb0](%412.0, %412.1) e394.7   <lgl$->
  lgl$#-          %412.3 = IsType                   %412.2 isA lgl$-
  void                    Branch                   %412.3 -> BB418 (if true) | BB419 (if false)
BB413   <- [394]
  fs              %413.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %413.1 = FrameState         R     0x55de2d664760+0: [], env=e394.7, next=%413.0
  void                    Deopt              !v    %413.1, CallTarget@0x55de2b209930[Call#3], %394.11   !
BB226   <- [219]
  val?^ | miss    %226.0 = LdVar              eR    c, e0.1
  lgl$#-          %226.1 = Identical                <blt c>, %226.0   <@?>
  void                    Branch                   %226.1 -> BB228 (if true) | BB227 (if false)
BB220   <- [219]
  lgl$#-          %220.0 = CheckTrueFalse     e     %400.0
  void                    Branch                   %220.0 -> BB223 (if true) | BB221 (if false)
BB420   <- [416]
  val-            %420.0 = CastType           d     dn %416.0   <nil->
  lgl$#-          %420.1 = CallSafeBuiltin    wed   is.function(%420.0)    <lgl$->
  lgl$-           %420.2 = LAnd                     %400.2, %420.1
  lgl$-           %420.3 = %420.2
  goto BB219
BB421   <- [416]
  void                    Nop                !     
  val             %421.1 = %416.0
  dr              %421.2 = Typecheck@0x55de34c80830[Type#347]
  goto BB216
BB390   <- [178]
  prom-           %390.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p51, e0.1
  val?            %390.1 = StaticCall         !v    getClassDef[0x55de294c0820](%390.0) e0.1   <other>
  lgl$-           %390.2 = Is                       %390.1, NULL
  void                    StVar              lW    superDef, %390.1, e0.1
  val             %390.4 = ChkMissing         e     %390.1
  lgl$#-          %390.5 = CheckTrueFalse     e     %390.2
  void                    Branch                   %390.5 -> BB234 (if true) | BB179 (if false)
BB391   <- [178]
  void                    Nop                !     
  val?^ | miss    %391.1 = %178.0
  dr              %391.2 = CallTarget@0x55de34c80830[Call#91]
  goto BB174
BB410   <- [402]
  val?+           %410.0 = CastType           d     dn %148.3   <val?_>
  val+            %410.1 = CallSafeBuiltin    wed   c(%402.0, %410.0)    <val?_>
  void                    StVar              lW    errors, %410.1, e0.1
  int$-           %410.3 = %49.2
  goto BB49
BB411   <- [402]
  void                    Nop                !     
  val?            %411.1 = %148.3
  dr              %411.2 = Typecheck@0x55de34c80830[Type#190]
  goto BB149
BB149   <- [403, 411]
  val?^ | miss    %149.0 = Phi                      %403.1:BB403, %411.1:BB411
  val?^ | miss    %149.1 = %149.0
  dr              %149.2 = Phi                      %403.2:BB403, %411.2:BB411
  dr              %149.3 = %149.2
  fs              %149.4 = FrameState         R     0x55de34de0470+3405: [%296.3, %296.4, %49.2, <blt c>, %148.1, %148.3], env=e0.1
  void                    Deopt              !v    %149.4, %149.3, %149.1   !
BB418   <- [412]
  lgl$-           %418.0 = CastType           d     dn %412.2
  lgl$-           %418.1 = AsLogical                %418.0
  lgl$#-          %418.2 = Identical                %418.1, true
  void                    Branch                   %418.2 -> BB145 (if true) | BB75 (if false)
BB419   <- [412]
  void                    Nop                !     
  val?            %419.1 = %412.2
  dr              %419.2 = Typecheck@0x55de2b209930[Type#9]
  goto BB73
BB228   <- [226]
  (cls|spec|blt)  %228.0 = LdFun              !v    anyStrings, e0.1
  fs              %228.1 = FrameState         R     0x55de34de0470+6552: [<blt c>, %386.1, %228.0], env=e0.1
  void                    Deopt              !v    %228.1, DeadCall@0x55de34c80830[Call#111], %228.0   !
BB227   <- [226]
  (cls|spec|blt)  %227.0 = LdFun              !v    c, e0.1
  fs              %227.1 = FrameState         R     0x55de34de0470+6496: [%227.0], env=e0.1
  void                    Deopt              !v    %227.1, DeadCall@0x55de34c80830[Call#108], %227.0   !
BB223   <- [220]
  val?^ | miss    %223.0 = LdVar              eR    test, e0.1
  val?            %223.1 = Force!             !v    %223.0, e0.1   <val?_>
  lgl$#-          %223.2 = CheckTrueFalse     we    %223.1
  void                    Branch                   %223.2 -> BB225 (if true) | BB224 (if false)
BB221   <- [220]
  void                    Visible            v     
  lgl$#-          %221.1 = true
  goto BB222
BB234   <- [390]
  val?^ | miss    %234.0 = LdVar              eR    c, e0.1
  lgl$#-          %234.1 = Identical                <blt c>, %234.0   <@?>
  void                    Branch                   %234.1 -> BB236 (if true) | BB235 (if false)
BB179   <- [390]
  (cls|spec|blt)  %179.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %179.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p52, e0.1
  prom-           %179.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p53, e0.1
  val?            %179.3 = Call               !v    %179.0(%179.1, %179.2) e0.1   <(nil|cls)->
  void                    StVar              lW    validityMethod, %179.3, e0.1
  lgl$#-          %179.5 = IsType                   %179.3 isA val?-
  val?^ | miss    %179.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %179.7 = Identical                <blt is.function>, %179.6   <true>
  void                    Branch                   %179.7 -> BB396 (if true) | BB397 (if false)
BB145   <- [418]
  void                    Nop                !     
  lgl$-           %145.1 = %418.1
  goto BB78
BB75   <- [418]
  val?^ | miss    %75.0 = LdVar              eR    .identC, e394.7
  lgl$#-          %75.1 = Identical                %75.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %75.1 -> BB424 (if true) | BB425 (if false)
BB73   <- [419, 425]
  val?^ | miss    %73.0 = Phi                      %419.1:BB419, %425.1:BB425
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %419.2:BB419, %425.2:BB425
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %73.5 = FrameState         R     0x55de2d664760+37: [%412.2], env=e394.7, next=%73.4
  void                    Deopt              !v    %73.5, %73.3, %73.1   !
BB225   <- [223]
  val?^ | miss    %225.0 = LdVar              eR    errors, e0.1
  void                    Visible            v     
  val?            %225.2 = Force!             !     %225.0, e0.1   <val?_>
  val?            %225.3 = %225.2
  goto BB222
BB224   <- [223]
  (cls|spec|blt)  %224.0 = LdFun              !v    gettextf, e0.1
  fs              %224.1 = FrameState         R     0x55de34de0470+6753: [%224.0], env=e0.1
  void                    Deopt              !v    %224.1, DeadCall@0x55de34c80830[Call#114], %224.0   !
BB222   <- [221, 225]
  val?            %222.0 = Phi                      %221.1:BB221, %225.3:BB225
  val?            %222.1 = %222.0
  void                    Return             l     %222.1
BB236   <- [234]
  val?^ | miss    %236.0 = LdVar              eR    errors, e0.1
  val?            %236.1 = Force!             !v    %236.0, e0.1   <val?_>
  (cls|spec|blt)  %236.2 = LdFun              !v    paste0, e0.1
  fs              %236.3 = FrameState         R     0x55de34de0470+5678: [%338.2, %338.3, %170.2, <blt c>, %236.1, %236.2], env=e0.1
  void                    Deopt              !v    %236.3, DeadCall@0x55de34c80830[Call#94], %236.2   !
BB235   <- [234]
  (cls|spec|blt)  %235.0 = LdFun              !v    c, e0.1
  fs              %235.1 = FrameState         R     0x55de34de0470+5622: [%338.2, %338.3, %170.2, %235.0], env=e0.1
  void                    Deopt              !v    %235.1, DeadCall@0x55de34c80830[Call#92], %235.0   !
BB396   <- [179]
  val             %396.0 = ChkMissing         e     %179.3
  void                    Branch                   %179.5 -> BB398 (if true) | BB399 (if false)
BB397   <- [179]
  void                    Nop                !     
  lgl$#-          %397.1 = %179.7
  dr              %397.2 = DeadBranchReached@0x55de34c80830[Test#67]
  goto BB180
BB78   <- [145, 426]
  lgl$-           %78.0 = Phi                      %426.3:BB426, %145.1:BB145
  lgl$-           %78.1 = %78.0
  lgl$#-          %78.2 = CheckTrueFalse     e     %78.1
  void                    Branch                   %78.2 -> BB144 (if true) | BB79 (if false)
BB424   <- [75]
  prom-           %424.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p81, e394.7
  val?            %424.1 = StaticCall         !v    .identC[0x55de34c90b00](%424.0, "ANY") e394.7   <lgl$->
  lgl$#-          %424.2 = IsType                   %424.1 isA lgl$-
  void                    Branch                   %424.2 -> BB426 (if true) | BB427 (if false)
BB425   <- [75]
  void                    Nop                !     
  val?^ | miss    %425.1 = %75.0
  dr              %425.2 = CallTarget@0x55de2b209930[Call#4]
  goto BB73
BB398   <- [396]
  val?-           %398.0 = CastType           d     dn %179.3   <(nil|cls)->
  lgl$#-          %398.1 = CallSafeBuiltin    wed   is.function(%398.0)    <lgl$->
  void                    Branch                   %398.1 -> BB186 (if true) | BB184 (if false)
BB399   <- [396]
  void                    Nop                !     
  val?            %399.1 = %179.3
  dr              %399.2 = Typecheck@0x55de34c80830[Type#319]
  goto BB180
BB180   <- [397, 399]
  val?^ | miss    %180.0 = Phi                      %397.1:BB397, %399.1:BB399
  val?^ | miss    %180.1 = %180.0
  dr              %180.2 = Phi                      %397.2:BB397, %399.2:BB399
  dr              %180.3 = %180.2
  fs              %180.4 = FrameState         R     0x55de34de0470+5812: [%338.2, %338.3, %170.2], env=e0.1
  void                    Deopt              !v    %180.4, %180.3, %180.1   !
BB144   <- [78]
  void                    Nop                !     
  lgl$#-          %144.1 = true
  goto BB110
BB79   <- [78]
  val?^ | miss    %79.0 = LdVar              eR    ClassDef1, e394.7
  val?            %79.1 = Force!<lazy>       !v    %79.0, e394.7   <other>
  lgl$-           %79.2 = Is                       %79.1, NULL
  lgl$#-          %79.3 = CheckTrueFalse     e     %79.2
  void                    Branch                   %79.3 -> BB143 (if true) | BB80 (if false)
BB426   <- [424]
  lgl$-           %426.0 = CastType           d     dn %424.1
  lgl$-           %426.1 = AsLogical                %426.0
  lgl$-           %426.2 = LOr                      %418.1, %426.1
  lgl$-           %426.3 = %426.2
  goto BB78
BB427   <- [424]
  fs              %427.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %427.1 = FrameState         R     0x55de2d664760+86: [%418.1, %424.1], env=e394.7, next=%427.0
  void                    Deopt              !v    %427.1, Typecheck@0x55de2b209930[Type#11], %424.1   !
BB186   <- [398]
  val?^ | miss    %186.0 = LdVar              eR    c, e0.1
  lgl$#-          %186.1 = Identical                <blt c>, %186.0   <true>
  void                    Branch                   %186.1 -> BB404 (if true) | BB405 (if false)
BB184   <- [398]
  void                    Nop                !     
  goto BB185
BB110   <- [144, 143, 109]
  val?            %110.0 = Phi                      %109.2:BB109, %143.1:BB143, %144.1:BB144
  val?            %110.1 = %110.0
  val?            %110.2 = PopContext         C     %110.1, %394.3   <(lgl|other)>
  void                    StVar              lW    ok, %110.2, e0.1
  val?^ | miss    %110.4 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %110.5 = Identical                %110.4, function(x) <(rir::DispatchTable*)0x55de2b7a37|...
  void                    Branch                   %110.5 -> BB428 (if true) | BB429 (if false)
BB143   <- [79]
  void                    Nop                !     
  lgl$#-          %143.1 = false
  goto BB110
BB80   <- [79]
  (cls|spec|blt)  %80.0 = LdFun              !v    @, <0x55de2854ebd8>, e394.7
  prom-           %80.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p82, e394.7
  prom-           %80.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p83, e394.7
  val?            %80.3 = Call               !v    %80.0(%80.1, %80.2) e394.7   <vec+>
  void                    StVar              lW    ext, %80.3, e394.7
  lgl$#-          %80.5 = IsType                   %80.3 isA val+   <true>
  val             %80.6 = ChkMissing         e     %80.3
  void                    Branch                   %80.5 -> BB440 (if true) | BB441 (if false)
BB404   <- [186]
  val?^ | miss    %404.0 = LdVar              eR    errors, e0.1
  lgl$#-          %404.1 = IsType                   %404.0 isA val?~- | miss
  void                    Branch                   %404.1 -> BB406 (if true) | BB407 (if false)
BB405   <- [186]
  void                    Nop                !     
  lgl$#-          %405.1 = %186.1
  dr              %405.2 = DeadBranchReached@0x55de34c80830[Test#68]
  goto BB182
BB185   <- [184, 211]
  void                    Nop                !     
  int$-           %185.1 = %170.2
  goto BB170
BB428   <- [110]
  val             %428.0 = ChkMissing         e     %110.2
  val+            %428.1 = CallSafeBuiltin    wed   is.logical(%110.2)    <lgl$->
  lgl$#-          %428.2 = IsType                   %428.1 isA lgl$-
  void                    Branch                   %428.2 -> BB430 (if true) | BB431 (if false)
BB429   <- [110]
  fs              %429.0 = FrameState         R     0x55de34de0470+3519: [%296.3, %296.4, %49.2], env=e0.1
  void                    Deopt              !v    %429.0, CallTarget@0x55de34c80830[Call#56], %110.4   !
BB440   <- [80]
  val?^ | miss    %440.0 = LdVar              eR    class2, e394.7
  val?            %440.1 = Force!<wrapped>    !v    %440.0, e394.7   <str$+>
  lgl$#-          %440.2 = IsType                   %440.1 isA val?+
  lgl$#-          %440.3 = IsType                   %80.3 isA val?+
  void                    Branch                   %440.3 -> BB444 (if true) | BB445 (if false)
BB441   <- [80]
  fs              %441.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %441.1 = FrameState         R     0x55de2d664760+199: [], env=e394.7, next=%441.0
  void                    Deopt              !v    %441.1, DeadBranchReached@0x55de2b209930[Test#1], %80.5   !
BB406   <- [404]
  val?~- | miss   %406.0 = CastType           d     dn %404.0
  val?-           %406.1 = Force!<value>            %406.0,    <str->
  val?^ | miss    %406.2 = LdVar              eR    anyStrings, e0.1
  lgl$#-          %406.3 = Identical                %406.2, %0.2
  void                    Branch                   %406.3 -> BB408 (if true) | BB409 (if false)
BB407   <- [404]
  void                    Nop                !     
  val?^ | miss    %407.1 = %404.0
  dr              %407.2 = Typecheck@0x55de34c80830[Type#329]
  goto BB182
BB182   <- [405, 407, 409, 415]
  val?^ | miss    %182.0 = Phi                      %405.1:BB405, %407.1:BB407, %409.1:BB409, %415.1:BB415
  val?^ | miss    %182.1 = %182.0
  dr              %182.2 = Phi                      %405.2:BB405, %407.2:BB407, %409.2:BB409, %415.2:BB415
  dr              %182.3 = %182.2
  fs              %182.4 = FrameState         R     0x55de34de0470+5903: [%338.2, %338.3, %170.2, %398.1], env=e0.1
  void                    Deopt              !v    %182.4, %182.3, %182.1   !
BB430   <- [428]
  lgl$-           %430.0 = CastType           d     dn %428.1
  lgl$-           %430.1 = AsLogical                %430.0
  lgl$#-          %430.2 = Identical                %430.1, false
  void                    Branch                   %430.2 -> BB131 (if true) | BB115 (if false)
BB431   <- [428]
  void                    Nop                !     
  val+            %431.1 = %428.1
  dr              %431.2 = Typecheck@0x55de2c253078[Type#2]
  goto BB113
BB444   <- [440]
  val?+           %444.0 = CastType           d     dn %80.3   <vec+>
  void                    Branch                   %440.2 -> BB446 (if true) | BB447 (if false)
BB445   <- [440]
  void                    Nop                !     
  val?            %445.1 = %80.3
  dr              %445.2 = Typecheck@0x55de2b209930[Type#15]
  goto BB83
BB408   <- [406]
  prom-           %408.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p54, e0.1
  val?^           %408.1 = CastType                 up %408.0
  env             e408.2 = MkEnv              l     x=%408.1, parent=e0.1, context 0
  val?^ | miss    %408.3 = LdVar              eR    isTRUE, e408.2
  lgl$#-          %408.4 = Identical                %408.3, function(x) <(rir::DispatchTable*)0x55de2a40ca|...
  void                    Branch                   %408.4 -> BB414 (if true) | BB415 (if false)
BB409   <- [406]
  void                    Nop                !     
  val?^ | miss    %409.1 = %406.2
  dr              %409.2 = CallTarget@0x55de34c80830[Call#101]
  goto BB182
BB131   <- [430]
  void                    Nop                !     
  lgl$-           %131.1 = %430.1
  goto BB116
BB115   <- [430]
  lgl$#-          %115.0 = IsType                   %110.2 isA lgl$-
  void                    Branch                   %115.0 -> BB436 (if true) | BB437 (if false)
BB113   <- [431, 433, 437]
  val?^ | miss    %113.0 = Phi                      %431.1:BB431, %433.1:BB433, %437.1:BB437
  val?^ | miss    %113.1 = %113.0
  dr              %113.2 = Phi                      %431.2:BB431, %433.2:BB433, %437.2:BB437
  dr              %113.3 = %113.2
  prom-           %113.4 = MkArg                    %110.2, validObject[0x55de32458cb0]_p31 (!refl), e0.1
  val?~           %113.5 = CastType                 up %113.4
  fs              %113.6 = FrameState         R     0x55de34de0470+3551: [%296.3, %296.4, %49.2], env=e0.1
  env             e113.7 = (MkEnv)            l     x=%113.5, parent=R_BaseNamespace, context 0
  fs              %113.8 = FrameState         R     0x55de2b0d00a0+91: [%428.1], env=e113.7, next=%113.6
  void                    Deopt              !v    %113.8, %113.3, %113.1   !
BB446   <- [444]
  val?+           %446.0 = CastType           d     dn %440.1   <str$+>
  val?            %446.1 = Extract2_1D        wed   %444.0, %446.0, elided   <(nil|other)>
  lgl$-           %446.2 = Is                       %446.1, NULL
  void                    StVar              lW    contained, %446.1, e394.7
  lgl$-           %446.4 = Not                d     %446.2, elided
  lgl$#-          %446.5 = CheckTrueFalse     e     %446.4
  void                    Branch                   %446.5 -> BB142 (if true) | BB85 (if false)
BB447   <- [444]
  void                    Nop                !     
  val?            %447.1 = %440.1
  dr              %447.2 = Typecheck@0x55de2b209930[Type#18]
  goto BB83
BB83   <- [445, 447]
  val?^ | miss    %83.0 = Phi                      %445.1:BB445, %447.1:BB447
  val?^ | miss    %83.1 = %83.0
  dr              %83.2 = Phi                      %445.2:BB445, %447.2:BB447
  dr              %83.3 = %83.2
  fs              %83.4 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %83.5 = FrameState         R     0x55de2d664760+253: [%80.3, %440.1], env=e394.7, next=%83.4
  void                    Deopt              !v    %83.5, %83.3, %83.1   !
BB414   <- [408]
  prom-           %414.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p92, e408.2
  val?^           %414.1 = CastType                 up %414.0
  env             e414.2 = (MkEnv)            l     x=%414.1, parent=R_BaseNamespace, context -1
  val?            %414.3 = Force!<lazy>       !vL   %408.1, e414.2   <lgl$->
  prom-           %414.4 = MkArg                    %414.3, validObject[0x55de32458cb0]_p92 (!refl), e408.2
  val?~           %414.5 = CastType                 up %414.4
  void                    StArg              lWd   x, %414.5, e414.2
  lgl$#-          %414.7 = IsEnvStub          R     , e414.2
  void                    Branch                   %414.7 -> BB422 (if true) | BB423 (if false)
BB415   <- [408]
  void                    Nop                !     
  val?^ | miss    %415.1 = %408.3
  dr              %415.2 = CallTarget@0x55de34e2c628[Call#0]
  goto BB182
BB116   <- [131, 436]
  lgl$-           %116.0 = Phi                      %436.1:BB436, %131.1:BB131
  lgl$-           %116.1 = %116.0
  lgl$-           %116.2 = AsLogical                %116.1
  lgl$#-          %116.3 = Identical                %116.2, false
  void                    Branch                   %116.3 -> BB130 (if true) | BB117 (if false)
BB436   <- [115]
  lgl$-           %436.0 = AsLogical                %430.1
  lgl$-           %436.1 = %436.0
  goto BB116
BB437   <- [115]
  void                    Nop                !     
  val?            %437.1 = %110.2
  dr              %437.2 = Typecheck@0x55de2c253078[Type#4]
  goto BB113
BB142   <- [446]
  val             %142.0 = ChkMissing         e     %446.1
  val?            %142.1 = %446.1
  goto BB109
BB85   <- [446]
  val?^ | miss    %85.0 = LdVar              eR    ClassDef2, e394.7
  val?            %85.1 = Force!<lazy>       !v    %85.0, e394.7   <other>
  lgl$-           %85.2 = Is                       %85.1, NULL
  lgl$#-          %85.3 = CheckTrueFalse     e     %85.2
  void                    Branch                   %85.3 -> BB141 (if true) | BB86 (if false)
BB422   <- [414]
  val+            %422.0 = CallSafeBuiltin    wed   is.logical(%414.3)    <lgl$->
  lgl$#-          %422.1 = IsType                   %422.0 isA lgl$-
  void                    Branch                   %422.1 -> BB434 (if true) | BB435 (if false)
BB423   <- [414]
  fs              %423.0 = FrameState         R     0x55de34de0470+6030: [%338.2, %338.3, %170.2, <blt c>, %406.1], env=e0.1
  fs              %423.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e408.2, next=%423.0
  fs              %423.2 = FrameState         R     0x55de289a06d0+69: [<blt is.logical>, %414.3], env=e414.2, next=%423.1
  void                    Deopt              !v    %423.2, EnvStubMaterialized@0x55de29b046d8[Call#unknown], e414.2   !
BB130   <- [116]
  void                    Nop                !     
  lgl$-           %130.1 = %116.2
  goto BB118
BB117   <- [116]
  lgl$#-          %117.0 = IsType                   %110.2 isA lgl$-
  void                    Branch                   %117.0 -> BB432 (if true) | BB433 (if false)
BB109   <- [142, 108]
  val?            %109.0 = Phi                      %108.2:BB108, %142.1:BB142
  val?            %109.1 = %109.0
  val?            %109.2 = %109.1
  goto BB110
BB141   <- [85]
  void                    Nop                !     
  lgl$#-          %141.1 = false
  goto BB108
BB86   <- [85]
  (cls|spec|blt)  %86.0 = LdFun              !v    @, <0x55de2854ebd8>, e394.7
  prom-           %86.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p84, e394.7
  prom-           %86.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p85, e394.7
  val?            %86.3 = Call               !v    %86.0(%86.1, %86.2) e394.7   <vec$+>
  void                    StVar              lW    subs, %86.3, e394.7
  val?^ | miss    %86.5 = LdVar              eR    .identC, e394.7
  lgl$#-          %86.6 = Identical                %86.5, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %86.6 -> BB454 (if true) | BB455 (if false)
BB434   <- [422]
  lgl$-           %434.0 = CastType           d     dn %422.0
  lgl$-           %434.1 = AsLogical                %434.0
  lgl$#-          %434.2 = Identical                %434.1, false
  void                    Branch                   %434.2 -> BB233 (if true) | BB191 (if false)
BB435   <- [422]
  void                    Nop                !     
  val+            %435.1 = %422.0
  dr              %435.2 = Typecheck@0x55de29b046d8[Type#2]
  goto BB189
BB118   <- [130, 432]
  lgl$-           %118.0 = Phi                      %432.5:BB432, %130.1:BB130
  lgl$-           %118.1 = %118.0
  lgl$-           %118.2 = AsLogical                %118.1
  lgl$#-          %118.3 = Identical                %118.2, false
  void                    Branch                   %118.3 -> BB129 (if true) | BB121 (if false)
BB432   <- [117]
  lgl$-           %432.0 = CastType           d     dn %110.2
  lgl$-           %432.1 = CallSafeBuiltin    wed   is.na(%432.0)    <lgl$->
  lgl$-           %432.2 = Not                d     %432.1, elided
  lgl$-           %432.3 = AsLogical                %432.2
  lgl$-           %432.4 = LAnd                     %116.2, %432.3
  lgl$-           %432.5 = %432.4
  goto BB118
BB433   <- [117]
  void                    Nop                !     
  val?            %433.1 = %110.2
  dr              %433.2 = Typecheck@0x55de2c253078[Type#8]
  goto BB113
BB108   <- [141, 107]
  val?            %108.0 = Phi                      %107.2:BB107, %141.1:BB141
  val?            %108.1 = %108.0
  val?            %108.2 = %108.1
  goto BB109
BB454   <- [86]
  prom-           %454.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p86, e394.7
  val?            %454.1 = StaticCall         !v    .identC[0x55de34c90b00](%454.0, "classRepresentation") e394.7   <lgl$->
  lgl$#-          %454.2 = IsType                   %454.1 isA lgl$-
  void                    Branch                   %454.2 -> BB456 (if true) | BB457 (if false)
BB455   <- [86]
  fs              %455.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %455.1 = FrameState         R     0x55de2d664760+364: [], env=e394.7, next=%455.0
  void                    Deopt              !v    %455.1, CallTarget@0x55de2b209930[Call#7], %86.5   !
BB233   <- [434]
  void                    Nop                !     
  lgl$-           %233.1 = %434.1
  goto BB194
BB191   <- [434]
  lgl$#-          %191.0 = IsType                   %414.3 isA lgl-
  void                    Branch                   %191.0 -> BB450 (if true) | BB451 (if false)
BB189   <- [435, 451]
  val?^ | miss    %189.0 = Phi                      %435.1:BB435, %451.1:BB451
  val?^ | miss    %189.1 = %189.0
  dr              %189.2 = Phi                      %435.2:BB435, %451.2:BB451
  dr              %189.3 = %189.2
  fs              %189.4 = FrameState         R     0x55de34de0470+6030: [%338.2, %338.3, %170.2, <blt c>, %406.1], env=e0.1
  fs              %189.5 = FrameState         R     0x55de2f51d9c0+32: [], env=e408.2, next=%189.4
  fs              %189.6 = FrameState         R     0x55de289a06d0+91: [%422.0], env=e414.2, next=%189.5
  void                    Deopt              !v    %189.6, %189.3, %189.1   !
BB129   <- [118]
  void                    Nop                !     
  lgl$-           %129.1 = %118.2
  goto BB122
BB121   <- [118]
  lgl$#-          %121.0 = IsType                   %110.2 isA lgl$-
  void                    Branch                   %121.0 -> BB438 (if true) | BB439 (if false)
BB456   <- [454]
  lgl$-           %456.0 = CastType           d     dn %454.1
  lgl$-           %456.1 = Not                d     %456.0, elided
  lgl$-           %456.2 = AsLogical                %456.1
  lgl$#-          %456.3 = Identical                %456.2, false
  void                    Branch                   %456.3 -> BB92 (if true) | BB91 (if false)
BB457   <- [454]
  void                    Nop                !     
  val?            %457.1 = %454.1
  dr              %457.2 = Typecheck@0x55de2b209930[Type#26]
  goto BB89
BB194   <- [233, 452]
  lgl$-           %194.0 = Phi                      %452.4:BB452, %233.1:BB233
  lgl$-           %194.1 = %194.0
  lgl$-           %194.2 = AsLogical                %194.1
  lgl$#-          %194.3 = Identical                %194.2, false
  void                    Branch                   %194.3 -> BB232 (if true) | BB197 (if false)
BB450   <- [191]
  lgl-            %450.0 = CastType           d     dn %414.3   <lgl$->
  (int|real)$-    %450.1 = CallSafeBuiltin    wed   length(%450.0)    <int$->
  lgl$#-          %450.2 = IsType                   %450.1 isA int$-
  void                    Branch                   %450.2 -> BB452 (if true) | BB453 (if false)
BB451   <- [191]
  void                    Nop                !     
  val?            %451.1 = %414.3
  dr              %451.2 = Typecheck@0x55de29b046d8[Type#4]
  goto BB189
BB122   <- [129, 438]
  lgl$-           %122.0 = Phi                      %438.4:BB438, %129.1:BB129
  lgl$-           %122.1 = %122.0
  lgl$#-          %122.2 = CheckTrueFalse     e     %122.1
  void                    Branch                   %122.2 -> BB126 (if true) | BB123 (if false)
BB438   <- [121]
  lgl$-           %438.0 = CastType           d     dn %110.2
  lgl$-           %438.1 = Not                d     %438.0, elided
  lgl$-           %438.2 = AsLogical                %438.1
  lgl$-           %438.3 = LAnd                     %118.2, %438.2
  lgl$-           %438.4 = %438.3
  goto BB122
BB439   <- [121]
  void                    Nop                !     
  val?            %439.1 = %110.2
  dr              %439.2 = Typecheck@0x55de2c253078[Type#10]
  goto BB119
BB92   <- [456]
  lgl$#-          %92.0 = CheckTrueFalse     e     %456.2
  void                    Branch                   %92.0 -> BB138 (if true) | BB93 (if false)
BB91   <- [456]
  (cls|spec|blt)  %91.0 = LdFun              !v    isClassUnion, e394.7
  fs              %91.1 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %91.2 = FrameState         R     0x55de2d664760+419: [%456.2, %91.0], env=e394.7, next=%91.1
  void                    Deopt              !v    %91.2, DeadCall@0x55de2b209930[Call#9], %91.0   !
BB89   <- [457, 461]
  val?^ | miss    %89.0 = Phi                      %457.1:BB457, %461.1:BB461
  val?^ | miss    %89.1 = %89.0
  dr              %89.2 = Phi                      %457.2:BB457, %461.2:BB461
  dr              %89.3 = %89.2
  fs              %89.4 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %89.5 = FrameState         R     0x55de2d664760+401: [%454.1], env=e394.7, next=%89.4
  void                    Deopt              !v    %89.5, %89.3, %89.1   !
BB232   <- [194]
  void                    Nop                !     
  lgl$-           %232.1 = %194.2
  goto BB198
BB197   <- [194]
  lgl$#-          %197.0 = IsType                   %414.3 isA lgl$-
  void                    Branch                   %197.0 -> BB448 (if true) | BB449 (if false)
BB452   <- [450]
  int$-           %452.0 = CastType           d     dn %450.1
  lgl$-           %452.1 = Eq                 d     %452.0, 1L, elided   <lgl$->
  lgl$-           %452.2 = AsLogical                %452.1
  lgl$-           %452.3 = LAnd                     %434.1, %452.2
  lgl$-           %452.4 = %452.3
  goto BB194
BB453   <- [450]
  fs              %453.0 = FrameState         R     0x55de34de0470+6030: [%338.2, %338.3, %170.2, <blt c>, %406.1], env=e0.1
  fs              %453.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e408.2, next=%453.0
  fs              %453.2 = FrameState         R     0x55de289a06d0+194: [%434.1, %450.1], env=e414.2, next=%453.1
  void                    Deopt              !v    %453.2, Typecheck@0x55de29b046d8[Type#5], %450.1   !
BB126   <- [122]
  val?^ | miss    %126.0 = LdVar              eR    c, e0.1
  lgl$#-          %126.1 = Identical                <blt c>, %126.0   <@?>
  void                    Branch                   %126.1 -> BB128 (if true) | BB127 (if false)
BB123   <- [122]
  val?^ | miss    %123.0 = LdVar              eR    complete, e0.1
  lgl$#-          %123.1 = IsType                   %123.0 isA lgl$~-
  void                    Branch                   %123.1 -> BB442 (if true) | BB443 (if false)
BB119   <- [439, 443]
  val?^ | miss    %119.0 = Phi                      %439.1:BB439, %443.1:BB443
  val?^ | miss    %119.1 = %119.0
  dr              %119.2 = Phi                      %439.2:BB439, %443.2:BB443
  dr              %119.3 = %119.2
  prom-           %119.4 = MkArg                    %110.2, validObject[0x55de32458cb0]_p31 (!refl), e0.1
  val?~           %119.5 = CastType                 up %119.4
  fs              %119.6 = FrameState         R     0x55de34de0470+3551: [%296.3, %296.4, %49.2], env=e0.1
  env             e119.7 = (MkEnv)            l     x=%119.5, parent=R_BaseNamespace, context 0
  fs              %119.8 = FrameState         R     0x55de2b0d00a0+319: [%118.1], env=e119.7, next=%119.6
  void                    Deopt              !v    %119.8, %119.3, %119.1   !
BB138   <- [92]
  val?^ | miss    %138.0 = LdVar              eR    any, e394.7
  lgl$#-          %138.1 = Identical                <blt any>, %138.0   <@?>
  void                    Branch                   %138.1 -> BB140 (if true) | BB139 (if false)
BB93   <- [92]
  val?^ | miss    %93.0 = LdVar              eR    match, e394.7
  lgl$#-          %93.1 = Identical                %93.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %93.1 -> BB460 (if true) | BB461 (if false)
BB198   <- [232, 448]
  lgl$-           %198.0 = Phi                      %448.5:BB448, %232.1:BB232
  lgl$-           %198.1 = %198.0
  lgl$-           %198.2 = AsLogical                %198.1
  lgl$#-          %198.3 = Identical                %198.2, false
  void                    Branch                   %198.3 -> BB231 (if true) | BB199 (if false)
BB448   <- [197]
  lgl$-           %448.0 = CastType           d     dn %414.3
  lgl$-           %448.1 = CallSafeBuiltin    wed   is.na(%448.0)    <lgl$->
  lgl$-           %448.2 = Not                d     %448.1, elided
  lgl$-           %448.3 = AsLogical                %448.2
  lgl$-           %448.4 = LAnd                     %194.2, %448.3
  lgl$-           %448.5 = %448.4
  goto BB198
BB449   <- [197]
  fs              %449.0 = FrameState         R     0x55de34de0470+6030: [%338.2, %338.3, %170.2, <blt c>, %406.1], env=e0.1
  fs              %449.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e408.2, next=%449.0
  fs              %449.2 = FrameState         R     0x55de289a06d0+213: [%194.1], env=e414.2, next=%449.1
  void                    Deopt              !v    %449.2, Typecheck@0x55de29b046d8[Type#8], %414.3   !
BB128   <- [126]
  val?^ | miss    %128.0 = LdVar              eR    errors, e0.1
  val?            %128.1 = Force!             !v    %128.0, e0.1   <val?_>
  (cls|spec|blt)  %128.2 = LdFun              !v    paste0, e0.1
  fs              %128.3 = FrameState         R     0x55de34de0470+3651: [%296.3, %296.4, %49.2, <blt c>, %128.1, %128.2], env=e0.1
  void                    Deopt              !v    %128.3, DeadCall@0x55de34c80830[Call#60], %128.2   !
BB127   <- [126]
  (cls|spec|blt)  %127.0 = LdFun              !v    c, e0.1
  fs              %127.1 = FrameState         R     0x55de34de0470+3595: [%296.3, %296.4, %49.2, %127.0], env=e0.1
  void                    Deopt              !v    %127.1, DeadCall@0x55de34c80830[Call#57], %127.0   !
BB442   <- [123]
  lgl$~-          %442.0 = CastType           d     dn %123.0
  lgl$-           %442.1 = Force!<wrapped>          %442.0,    <lgl$->
  lgl$-           %442.2 = Not                d     %442.1, elided
  lgl$#-          %442.3 = CheckTrueFalse     e     %442.2
  void                    Branch                   %442.3 -> BB125 (if true) | BB124 (if false)
BB443   <- [123]
  void                    Nop                !     
  val?^ | miss    %443.1 = %123.0
  dr              %443.2 = Typecheck@0x55de34c80830[Type#222]
  goto BB119
BB140   <- [138]
  (cls|spec|blt)  %140.0 = LdFun              !v    %in%, e394.7
  fs              %140.1 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %140.2 = FrameState         R     0x55de2d664760+961: [<blt any>, %140.0], env=e394.7, next=%140.1
  void                    Deopt              !v    %140.2, DeadCall@0x55de2b209930[Call#20], %140.0   !
BB139   <- [138]
  (cls|spec|blt)  %139.0 = LdFun              !v    any, e394.7
  fs              %139.1 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %139.2 = FrameState         R     0x55de2d664760+924: [%139.0], env=e394.7, next=%139.1
  void                    Deopt              !v    %139.2, DeadCall@0x55de2b209930[Call#15], %139.0   !
BB460   <- [93]
  prom-           %460.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p89, e394.7
  val?^           %460.1 = CastType                 up %460.0
  val?^ | miss    %460.2 = LdVar              eR    class1, e394.7
  val?            %460.3 = Force!<wrapped>    !v    %460.2, e394.7   <str$+>
  prom-           %460.4 = MkArg                    %460.3, validObject[0x55de32458cb0]_p88 (!refl), e394.7
  val?~           %460.5 = CastType                 up %460.4
  env             e460.6 = (MkEnv)            l     x=%460.5, table=%460.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  lgl$#-          %460.7 = IsEnvStub          R     , e460.6
  void                    Branch                   %460.7 -> BB462 (if true) | BB463 (if false)
BB461   <- [93]
  void                    Nop                !     
  val?^ | miss    %461.1 = %93.0
  dr              %461.2 = CallTarget@0x55de2b209930[Call#10]
  goto BB89
BB231   <- [198]
  void                    Nop                !     
  lgl$-           %231.1 = %198.2
  goto BB200
BB199   <- [198]
  lgl$-           %199.0 = AsLogical          e     %414.3
  lgl$-           %199.1 = LAnd                     %198.2, %199.0
  lgl$-           %199.2 = %199.1
  goto BB200
BB125   <- [442]
  void                    Nop                !     
  int$-           %125.1 = %49.2
  goto BB49
BB124   <- [442]
  (cls|spec|blt)  %124.0 = LdFun              !v    anyStrings, e0.1
  fs              %124.1 = FrameState         R     0x55de34de0470+3805: [%296.3, %296.4, %49.2, %124.0], env=e0.1
  void                    Deopt              !v    %124.1, DeadCall@0x55de34c80830[Call#62], %124.0   !
BB462   <- [460]
  val?            %462.0 = Force!<lazy>       !vL   %460.1, e460.6   <val?->
  lgl$#-          %462.1 = IsType                   %462.0 isA val?-
  lgl$#-          %462.2 = IsEnvStub          R     , e460.6
  void                    Branch                   %462.2 -> BB466 (if true) | BB467 (if false)
BB463   <- [460]
  fs              %463.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %463.1 = FrameState         R     0x55de2d664760+496: [], env=e394.7, next=%463.0
  env             e463.2 = (MkEnv)            l     x=%460.5, table=%460.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %463.3 = FrameState         R     0x55de28d63d40+9: [%460.3], env=e463.2, next=%463.1
  void                    Deopt              !v    %463.3, EnvStubMaterialized@0x55de28db6cb0[Call#unknown], e460.6   !
BB200   <- [231, 199]
  lgl$-           %200.0 = Phi                      %199.2:BB199, %231.1:BB231
  lgl$-           %200.1 = %200.0
  lgl$#-          %200.2 = CheckTrueFalse     e     %200.1
  void                    Branch                   %200.2 -> BB230 (if true) | BB203 (if false)
BB466   <- [462]
  lgl$#-          %466.0 = IsType                   %460.3 isA val?+
  void                    Branch                   %466.0 -> BB468 (if true) | BB469 (if false)
BB467   <- [462]
  void                    Nop                !     
  env             e467.1 = e460.6
  dr              %467.2 = EnvStubMaterialized@0x55de28db6cb0[Call#unknown]
  goto BB96
BB230   <- [200]
  val?^ | miss    %230.0 = LdVar              eR    character, e408.2
  lgl$#-          %230.1 = Identical                %230.0, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %230.1 -> BB458 (if true) | BB459 (if false)
BB203   <- [200]
  void                    Nop                !     
  val?            %203.1 = %414.3
  goto BB204
BB468   <- [466]
  val?+           %468.0 = CastType           d     dn %460.3   <(int|str)+>
  void                    Branch                   %462.1 -> BB470 (if true) | BB471 (if false)
BB469   <- [466]
  void                    Nop                !     
  val?            %469.1 = %460.3
  dr              %469.2 = Typecheck@0x55de28db6cb0[Type#0]
  goto BB96
BB96   <- [467, 469, 471]
  val?^ | miss    %96.0 = Phi                      e467.1:BB467, %469.1:BB469, %471.1:BB471
  val?^ | miss    %96.1 = %96.0
  dr              %96.2 = Phi                      %467.2:BB467, %469.2:BB469, %471.2:BB471
  dr              %96.3 = %96.2
  fs              %96.4 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %96.5 = FrameState         R     0x55de2d664760+496: [], env=e394.7, next=%96.4
  fs              %96.6 = FrameState         R     0x55de28d63d40+23: [%460.3, %462.0], env=e460.6, next=%96.5
  void                    Deopt              !v    %96.6, %96.3, %96.1   !
BB458   <- [230]
  str-            %458.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  str-            %458.1 = %458.0
  goto BB204
BB459   <- [230]
  fs              %459.0 = FrameState         R     0x55de34de0470+6030: [%338.2, %338.3, %170.2, <blt c>, %406.1], env=e0.1
  fs              %459.1 = FrameState         R     0x55de2f51d9c0+38: [%200.2], env=e408.2, next=%459.0
  void                    Deopt              !v    %459.1, CallTarget@0x55de34e2c628[Call#1], %230.0   !
BB204   <- [203, 458]
  val?            %204.0 = Phi                      %203.1:BB203, %458.1:BB458   <str->
  val?            %204.1 = %204.0
  lgl$#-          %204.2 = IsType                   %204.1 isA val?-
  void                    Branch                   %204.2 -> BB464 (if true) | BB465 (if false)
BB470   <- [468]
  val?-           %470.0 = CastType           d     dn %462.0
  val+            %470.1 = CallSafeBuiltin    wed   match(%468.0, %470.0, NA, nil)    <int$->
  lgl$#-          %470.2 = IsType                   %470.1 isA int$-
  void                    Branch                   %470.2 -> BB476 (if true) | BB477 (if false)
BB471   <- [468]
  void                    Nop                !     
  val?            %471.1 = %462.0
  dr              %471.2 = Typecheck@0x55de28db6cb0[Type#1]
  goto BB96
BB464   <- [204]
  val?-           %464.0 = CastType           d     dn %204.1   <str->
  val+            %464.1 = CallSafeBuiltin    wed   c(%406.1, %464.0)    <str->
  void                    StVar              lW    errors, %464.1, e0.1
  val?^ | miss    %464.3 = LdVar              eR    length, e0.1
  lgl$#-          %464.4 = Identical                <blt length>, %464.3   <true>
  void                    Branch                   %464.4 -> BB472 (if true) | BB473 (if false)
BB465   <- [204]
  fs              %465.0 = FrameState         R     0x55de34de0470+6030: [%338.2, %338.3, %170.2, <blt c>, %406.1], env=e0.1
  fs              %465.1 = FrameState         R     0x55de2f51d9c0+94: [%204.1], env=e408.2, next=%465.0
  void                    Deopt              !v    %465.1, Typecheck@0x55de34c80830[Type#334], %204.1   !
BB476   <- [470]
  int$-           %476.0 = CastType           d     dn %470.1
  void                    StVar              lW    i, %476.0, e394.7
  val?^ | miss    %476.2 = LdVar              eR    is.na, e394.7
  lgl$#-          %476.3 = Identical                <blt is.na>, %476.2   <true>
  void                    Branch                   %476.3 -> BB478 (if true) | BB479 (if false)
BB477   <- [470]
  fs              %477.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %477.1 = FrameState         R     0x55de2d664760+496: [], env=e394.7, next=%477.0
  fs              %477.2 = FrameState         R     0x55de28d63d40+69: [%470.1], env=e460.6, next=%477.1
  void                    Deopt              !v    %477.2, Typecheck@0x55de2b209930[Type#32], %470.1   !
BB472   <- [464]
  (int|real)$-    %472.0 = CallSafeBuiltin    wed   length(%464.1)    <int$->
  lgl$#-          %472.1 = IsType                   %472.0 isA int$-
  void                    Branch                   %472.1 -> BB474 (if true) | BB475 (if false)
BB473   <- [464]
  fs              %473.0 = FrameState         R     0x55de34de0470+6066: [%338.2, %338.3, %170.2], env=e0.1
  void                    Deopt              !v    %473.0, DeadBranchReached@0x55de34c80830[Test#69], %464.4   !
BB478   <- [476]
  lgl$-           %478.0 = CallSafeBuiltin    wed   is.na(%476.0)    <lgl$->
  lgl$-           %478.1 = Not                d     %478.0, elided
  int-            %478.2 = Extract1_1D        wed   %476.0, %478.1, elided   <int->
  void                    StVar              lW    i, %478.2, e394.7
  val?^ | miss    %478.4 = LdVar              eR    length, e394.7
  lgl$#-          %478.5 = Identical                <blt length>, %478.4   <true>
  void                    Branch                   %478.5 -> BB480 (if true) | BB481 (if false)
BB479   <- [476]
  fs              %479.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %479.1 = FrameState         R     0x55de2d664760+510: [], env=e394.7, next=%479.0
  void                    Deopt              !v    %479.1, DeadBranchReached@0x55de2b209930[Test#3], %476.3   !
BB474   <- [472]
  int$-           %474.0 = CastType           d     dn %472.0
  lgl$#-          %474.1 = CheckTrueFalse     e     %474.0
  void                    Branch                   %474.1 -> BB212 (if true) | BB211 (if false)
BB475   <- [472]
  fs              %475.0 = FrameState         R     0x55de34de0470+6157: [%338.2, %338.3, %170.2, %472.0], env=e0.1
  void                    Deopt              !v    %475.0, Typecheck@0x55de34c80830[Type#338], %472.0   !
BB480   <- [478]
  (int|real)$-    %480.0 = CallSafeBuiltin    wed   length(%478.2)    <int$->
  lgl$#-          %480.1 = IsType                   %480.0 isA int$-
  void                    Branch                   %480.1 -> BB482 (if true) | BB483 (if false)
BB481   <- [478]
  fs              %481.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %481.1 = FrameState         R     0x55de2d664760+668: [], env=e394.7, next=%481.0
  void                    Deopt              !v    %481.1, DeadBranchReached@0x55de2b209930[Test#4], %478.5   !
BB212   <- [474]
  void                    Nop                !     
  goto BB213
BB211   <- [474]
  void                    Nop                !     
  goto BB185
BB482   <- [480]
  int$-           %482.0 = CastType           d     dn %480.0
  lgl$#-          %482.1 = CheckTrueFalse     e     %482.0
  void                    Branch                   %482.1 -> BB132 (if true) | BB106 (if false)
BB483   <- [480]
  fs              %483.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %483.1 = FrameState         R     0x55de2d664760+759: [%480.0], env=e394.7, next=%483.0
  void                    Deopt              !v    %483.1, Typecheck@0x55de2b209930[Type#42], %480.0   !
BB132   <- [482]
  val?^ | miss    %132.0 = LdVar              eR    subs, e394.7
  val?            %132.1 = Force!             !v    %132.0, e394.7   <val?_>
  lgl$#-          %132.2 = IsType                   %132.1 isA val+   <@?>
  void                    Branch                   %132.2 -> BB135 (if true) | BB133 (if false)
BB106   <- [482]
  void                    Nop                !     
  lgl$#-          %106.1 = false
  goto BB107
BB135   <- [132]
  val?^ | miss    %135.0 = LdVar              eR    i, e394.7
  val?            %135.1 = Force!             !v    %135.0, e394.7   <val?_>
  lgl$#-          %135.2 = IsType                   %135.1 isA val?+
  void                    Branch                   %135.2 -> BB484 (if true) | BB485 (if false)
BB133   <- [132]
  prom-           %133.0 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p91, e394.7
  prom-           %133.1 = %133.0
  goto BB134
BB107   <- [106, 134]
  val?            %107.0 = Phi                      %106.1:BB106, %134.3:BB134
  val?            %107.1 = %107.0
  val?            %107.2 = %107.1
  goto BB108
BB484   <- [135]
  val?+           %484.0 = CastType           d     dn %135.1   <val?_>
  val?            %484.1 = Extract1_1D        wed   %484.0, 1L, elided   <val?_>
  val?            %484.2 = %484.1
  goto BB134
BB485   <- [135]
  fs              %485.0 = FrameState         R     0x55de34de0470+3505: [%296.3, %296.4, %49.2], env=e0.1
  fs              %485.1 = FrameState         R     0x55de2d664760+835: [%132.1, %135.1], env=e394.7, next=%485.0
  void                    Deopt              !v    %485.1, Typecheck@0x55de2b209930[Type#46], %135.1   !
BB134   <- [133, 484]
  val?            %134.0 = Phi                      %484.2:BB484, %133.1:BB133
  val?            %134.1 = %134.0
  val?            %134.2 = Extract2_1D        !v    %132.1, %134.1, e394.7   <val?_>
  val?            %134.3 = %134.2
  goto BB107
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p13, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x55de35175340>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p11, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p12, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <(str|cls)->
  val?            %13.4 = %13.3
  goto BB11
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(str|cls)->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55de2854f748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(str|cls)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p25, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x55de35175340>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p23, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x55de32458cb0]_p24, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?>
  val?            %13.4 = %13.3
  goto BB11
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55de2854f748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(lgl|other)>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     validityMethod, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p55, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as, <0x55de2ab1fd38>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p56, e0.0
  prom-           %0.3  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p57, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <other>
  void                    Return             l     %0.4
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 63:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p64, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p69, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 69:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, <0x55de296f8cd0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p74, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <other>
  void                    Return             l     %0.3
Prom 74:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 79:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 80:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 81:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 82:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 83:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 84:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 85:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 86:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55de2854f748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p87, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 87:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 88:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 89:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55de2854f470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de32458cb0]_p90, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 90:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 91:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 92:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3

│ validObject[0x55de32458cb0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
