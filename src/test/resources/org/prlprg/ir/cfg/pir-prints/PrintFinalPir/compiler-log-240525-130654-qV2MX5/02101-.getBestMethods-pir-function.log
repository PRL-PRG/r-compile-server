
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getBestMethods[0x55de3311a2e0]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
.getBestMethods[0x55de3311a2e0]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    length, <env 0x55de28b56378>
  lgl$#-          %0.5  = Identical                <blt length>, %0.4   <true>
  void                    Branch                   %0.5 -> BB182 (if true) | BB183 (if false)
BB182   <- [0]
  env             e182.0 = MkEnv              l     methods=%0.3, supersList=%0.2, fromGroup=%0.1, verbose=%0.0, parent=<env 0x55de28b56378>, context 1
  val+            %182.1 = Force!<lazy>       !vr   %0.3,    <vec+>
  (int|real)$-    %182.2 = CallSafeBuiltin    wed   length(%182.1)    <int$->
  lgl$#-          %182.3 = IsType                   %182.2 isA int$-
  void                    Branch                   %182.3 -> BB184 (if true) | BB185 (if false)
BB183   <- [0]
  env             e183.0 = (MkEnv)            l     methods=%0.3, supersList=%0.2, fromGroup=%0.1, verbose=%0.0, parent=<env 0x55de28b56378>, context 1
  fs              %183.1 = FrameState         R     0x55de3518ec00+17: [<blt length>, %0.5], env=e183.0
  void                    Deopt              !v    %183.1, DeadBranchReached@0x55de34dfe540[Test#0], %0.5
BB184   <- [182]
  int$-           %184.0 = CastType           d     dn %182.2
  void                    StVar              lW    n, %184.0, e182.0
  val+            %184.2 = Force!<lazy>       !vr   %0.2,    <vec->
  lgl$#-          %184.3 = IsType                   %184.2 isA val?-
  void                    Branch                   %184.3 -> BB186 (if true) | BB187 (if false)
BB185   <- [182]
  fs              %185.0 = FrameState         R     0x55de3518ec00+91: [%182.2], env=e182.0
  void                    Deopt              !v    %185.0, Typecheck@0x55de34dfe540[Type#2], %182.2
BB186   <- [184]
  val-            %186.0 = CastType           d     dn %184.2   <vec->
  (int|real)$-    %186.1 = CallSafeBuiltin    wed   length(%186.0)    <int$->
  lgl$#-          %186.2 = IsType                   %186.1 isA int$-
  void                    Branch                   %186.2 -> BB188 (if true) | BB189 (if false)
BB187   <- [184]
  fs              %187.0 = FrameState         R     0x55de3518ec00+174: [<blt length>, %184.2], env=e182.0
  void                    Deopt              !v    %187.0, Typecheck@0x55de34dfe540[Type#4], %184.2
BB188   <- [186]
  int$-           %188.0 = CastType           d     dn %186.1
  void                    StVar              lW    nArg, %188.0, e182.0
  val?^ | miss    %188.2 = LdVar              eR    matrix, <env 0x55de28b56378>
  lgl$#-          %188.3 = Identical                %188.2, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...
  void                    Branch                   %188.3 -> BB190 (if true) | BB191 (if false)
BB189   <- [186]
  fs              %189.0 = FrameState         R     0x55de3518ec00+196: [%186.1], env=e182.0
  void                    Deopt              !v    %189.0, Typecheck@0x55de34dfe540[Type#5], %186.1
BB190   <- [188]
  prom-           %190.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p0 (!refl), e182.0
  val?^           %190.1 = CastType                 up %190.0
  prom-           %190.2 = MkArg                    %184.0, .getBestMethods[0x55de3311a2e0]_p1 (!refl), e182.0
  val?~           %190.3 = CastType                 up %190.2
  lgl$#-          %190.4 = ColonInputEffects        1, %184.0   <true>
  env             e190.5 = (MkEnv)            l     data="ANY", nrow=%190.1, ncol=%190.3, byrow(miss)=false, dimnames(miss)=nil, parent=R_BaseNamespace, context 0
  lgl$-           %190.6 = Missing            eR    nrow, e190.5
  val+            %190.7 = CallSafeBuiltin    wed   matrix("ANY", %188.0, %184.0, false, nil, %190.6, false)    <str_>
  void                    StVar              lW    sigs, %190.7, e182.0
  void                    Branch                   %190.4 -> BB192 (if true) | BB193 (if false)
BB191   <- [188]
  fs              %191.0 = FrameState         R     0x55de3518ec00+210: [], env=e182.0
  void                    Deopt              !v    %191.0, CallTarget@0x55de34dfe540[Call#2], %188.2
BB192   <- [190]
  int$#-          %192.0 = ColonCastRhs       e     1L, %184.0   <int$->
  lgl$#-          %192.1 = Lte                d     1L, %192.0, elided   <true>
  void                    Branch                   %192.1 -> BB194 (if true) | BB195 (if false)
BB193   <- [190]
  void                    Nop                !     
  lgl$#-          %193.1 = %190.4
  dr              %193.2 = DeadBranchReached@0x55de34dfe540[Test#2]
  goto BB11
BB194   <- [192]
  lgl$#-          %194.0 = Neq                d     %192.0, 1L, elided   <true>
  void                    Branch                   %194.0 -> BB196 (if true) | BB197 (if false)
BB195   <- [192]
  void                    Nop                !     
  lgl$#-          %195.1 = %192.1
  dr              %195.2 = DeadBranchReached@0x55de34dfe540[Test#4]
  goto BB11
BB11   <- [193, 195, 197]
  val?^ | miss    %11.0 = Phi                      %193.1:BB193, %195.1:BB195, %197.1:BB197
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %193.2:BB193, %195.2:BB195, %197.2:BB197
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55de3518ec00+266: [], env=e182.0
  void                    Deopt              !v    %11.4, %11.3, %11.1
BB196   <- [194]
  void                    StVar              lW    i, 1L, e182.0
  (cls|spec|blt)  %196.1 = LdFun              !v    @, <0x55de2854ebd8>, <env 0x55de28b56378>
  prom-           %196.2 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p2, e182.0
  prom-           %196.3 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p4, e182.0
  val?            %196.4 = Call               !v    %196.1(%196.2, %196.3) e182.0   <str>
  void                    StVar              lW    sig, %196.4, e182.0
  val?^ | miss    %196.6 = LdVar              eR    length, e182.0
  lgl$#-          %196.7 = Identical                <blt length>, %196.6   <true>
  void                    Branch                   %196.7 -> BB198 (if true) | BB199 (if false)
BB197   <- [194]
  void                    Nop                !     
  lgl$#-          %197.1 = %194.0
  dr              %197.2 = DeadBranchReached@0x55de34dfe540[Test#5]
  goto BB11
BB198   <- [196]
  val             %198.0 = ChkMissing         e     %196.4
  val?            %198.1 = CallBuiltin        !v    length(%196.4) e182.0   <int$->
  lgl$#-          %198.2 = IsType                   %198.1 isA int$-
  void                    Branch                   %198.2 -> BB200 (if true) | BB201 (if false)
BB199   <- [196]
  fs              %199.0 = FrameState         R     0x55de3518ec00+468: [1L, %192.0, 2L], env=e182.0
  void                    Deopt              !v    %199.0, DeadBranchReached@0x55de34dfe540[Test#7], %196.7   !
BB200   <- [198]
  int$-           %200.0 = CastType           d     dn %198.1
  val?^ | miss    %200.1 = LdVar              eR    nArg, e182.0
  lgl$#-          %200.2 = IsType                   %200.1 isA int$-
  void                    Branch                   %200.2 -> BB202 (if true) | BB203 (if false)
BB201   <- [198]
  void                    Nop                !     
  val?            %201.1 = %198.1
  dr              %201.2 = Typecheck@0x55de34dfe540[Type#46]
  goto BB15
BB202   <- [200]
  int$-           %202.0 = CastType           d     dn %200.1
  lgl$-           %202.1 = Lt                 d     %200.0, %202.0, elided   <lgl$->
  lgl$#-          %202.2 = CheckTrueFalse     e     %202.1
  void                    Branch                   %202.2 -> BB174 (if true) | BB17 (if false)
BB203   <- [200]
  void                    Nop                !     
  val?^ | miss    %203.1 = %200.1
  dr              %203.2 = Typecheck@0x55de34dfe540[Type#47]
  goto BB15
BB15   <- [201, 203]
  val?^ | miss    %15.0 = Phi                      %201.1:BB201, %203.1:BB203
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %201.2:BB201, %203.2:BB203
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55de3518ec00+559: [1L, %192.0, 2L, %198.1], env=e182.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB174   <- [202]
  val?^ | miss    %174.0 = LdVar              eR    verbose, e182.0
  val?            %174.1 = Force!             !v    %174.0, e182.0   <val?_>
  lgl$#-          %174.2 = CheckTrueFalse     we    %174.1
  void                    Branch                   %174.2 -> BB180 (if true) | BB175 (if false)
BB17   <- [202]
  val?^ | miss    %17.0 = LdVar              eR    sig, e182.0
  val?            %17.1 = Force!<value>      !v    %17.0, e182.0   <str>
  val?^ | miss    %17.2 = LdVar              eR    sigs !upd, e182.0
  lgl$#-          %17.3 = IsType                   %17.2 isA val?~+ | miss
  void                    Branch                   %17.3 -> BB204 (if true) | BB205 (if false)
BB180   <- [174]
  (cls|spec|blt)  %180.0 = LdFun              !v    cat, e182.0
  fs              %180.1 = FrameState         R     0x55de3518ec00+682: [1L, %192.0, 2L, %180.0], env=e182.0
  void                    Deopt              !v    %180.1, DeadCall@0x55de34dfe540[Call#11], %180.0   !
BB175   <- [174]
  val?^ | miss    %175.0 = LdVar              eR    sig, e182.0
  val?            %175.1 = Force!             !v    %175.0, e182.0   <val?_>
  val?^ | miss    %175.2 = LdVar              eR    sigs !upd, e182.0
  val?            %175.3 = Force!             !v    %175.2, e182.0   <val?_>
  val?^ | miss    %175.4 = LdVar              eR    seq_along, e182.0
  lgl$#-          %175.5 = Identical                <blt seq_along>, %175.4   <@?>
  void                    Branch                   %175.5 -> BB177 (if true) | BB176 (if false)
BB204   <- [17]
  val?~+ | miss   %204.0 = CastType           d     dn %17.2
  val?+           %204.1 = Force!<value>            %204.0,    <str_>
  val?^ | miss    %204.2 = LdVar              eR    i, e182.0
  lgl$#-          %204.3 = IsType                   %204.2 isA int$-
  void                    Branch                   %204.3 -> BB206 (if true) | BB207 (if false)
BB205   <- [17]
  void                    Nop                !     
  val?^ | miss    %205.1 = %17.2
  dr              %205.2 = Typecheck@0x55de34dfe540[Type#50]
  goto BB18
BB177   <- [175]
  val?^ | miss    %177.0 = LdVar              eR    sig, e182.0
  val?            %177.1 = Force!             !v    %177.0, e182.0   <val?_>
  val?            %177.2 = CallBuiltin        !v    seq_along(%177.1) e182.0   <val?_>
  val?^ | miss    %177.3 = LdVar              eR    i, e182.0
  val?            %177.4 = Force!             !v    %177.3, e182.0   <val?_>
  lgl$#-          %177.5 = IsType                   %177.4 isA val?+
  lgl$#-          %177.6 = IsType                   %177.2 isA val?+
  lgl$#-          %177.7 = IsType                   %175.1 isA val?+
  void                    Branch                   %177.7 -> BB208 (if true) | BB209 (if false)
BB176   <- [175]
  (cls|spec|blt)  %176.0 = LdFun              !v    seq_along, e182.0
  fs              %176.1 = FrameState         R     0x55de3518ec00+766: [1L, %192.0, 2L, %175.1, %175.3, %176.0], env=e182.0
  void                    Deopt              !v    %176.1, DeadCall@0x55de34dfe540[Call#14], %176.0   !
BB206   <- [204]
  int$-           %206.0 = CastType           d     dn %204.2
  val?            %206.1 = Subassign1_2D      !v    %17.1, %204.1, missingArg, %206.0, e182.0
  void                    StVar              lW    sigs, %206.1, e182.0
  val?            %206.3 = %206.1
  int$#-          %206.4 = 2L
  goto BB20
BB207   <- [204]
  void                    Nop                !     
  val?^ | miss    %207.1 = %204.2
  dr              %207.2 = Typecheck@0x55de34dfe540[Type#51]
  goto BB18
BB18   <- [205, 207]
  val?^ | miss    %18.0 = Phi                      %205.1:BB205, %207.1:BB207
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %205.2:BB205, %207.2:BB207
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55de3518ec00+599: [1L, %192.0, 2L, %17.1], env=e182.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB208   <- [177]
  val?+           %208.0 = CastType           d     dn %175.1   <val?_>
  lgl$#-          %208.1 = IsType                   %175.3 isA val?+
  void                    Branch                   %208.1 -> BB210 (if true) | BB211 (if false)
BB209   <- [177]
  void                    Nop                !     
  val?            %209.1 = %175.1
  dr              %209.2 = Typecheck@0x55de34dfe540[Type#58]
  goto BB178
BB20   <- [166, 206, 214]
  val?            %20.0 = Phi                      %214.3:BB214, %206.3:BB206, %166.2:BB166
  val?            %20.1 = %20.0
  int$#-          %20.2 = Phi                      %206.4:BB206, %166.3:BB166, %214.4:BB214
  int$#-          %20.3 = %20.2
  lgl$#-          %20.4 = Neq                d     %192.0, %20.3, elided
  void                    Branch                   %20.4 -> BB158 (if true) | BB23 (if false)
BB210   <- [208]
  val?+           %210.0 = CastType           d     dn %175.3   <val?_>
  void                    Branch                   %177.6 -> BB212 (if true) | BB213 (if false)
BB211   <- [208]
  void                    Nop                !     
  val?            %211.1 = %175.3
  dr              %211.2 = Typecheck@0x55de34dfe540[Type#59]
  goto BB178
BB178   <- [209, 211, 213, 215]
  val?^ | miss    %178.0 = Phi                      %209.1:BB209, %211.1:BB211, %213.1:BB213, %215.1:BB215
  val?^ | miss    %178.1 = %178.0
  dr              %178.2 = Phi                      %209.2:BB209, %211.2:BB211, %213.2:BB213, %215.2:BB215
  dr              %178.3 = %178.2
  fs              %178.4 = FrameState         R     0x55de3518ec00+843: [1L, %192.0, 2L, %175.1, %175.3, %177.2, %177.4], env=e182.0
  void                    Deopt              !v    %178.4, %178.3, %178.1   !
BB158   <- [20]
  void                    StVar              lW    i, %20.3, e182.0
  int$#-          %158.1 = Add                d     %20.3, 1L, elided
  (cls|spec|blt)  %158.2 = LdFun              !v    @, <0x55de2854ebd8>, e182.0
  prom-           %158.3 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p5, e182.0
  prom-           %158.4 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p7, e182.0
  val?            %158.5 = Call               !v    %158.2(%158.3, %158.4) e182.0   <str>
  void                    StVar              lW    sig, %158.5, e182.0
  val?^ | miss    %158.7 = LdVar              eR    length, e182.0
  lgl$#-          %158.8 = Identical                <blt length>, %158.7   <true>
  void                    Branch                   %158.8 -> BB218 (if true) | BB219 (if false)
BB23   <- [20]
  val?^ | miss    %23.0 = LdVar              eR    nArg, e182.0
  lgl$#-          %23.1 = IsType                   %23.0 isA int$-
  void                    Branch                   %23.1 -> BB216 (if true) | BB217 (if false)
BB212   <- [210]
  val?+           %212.0 = CastType           d     dn %177.2   <val?_>
  void                    Branch                   %177.5 -> BB214 (if true) | BB215 (if false)
BB213   <- [210]
  void                    Nop                !     
  val?            %213.1 = %177.2
  dr              %213.2 = Typecheck@0x55de34dfe540[Type#62]
  goto BB178
BB218   <- [158]
  val             %218.0 = ChkMissing         e     %158.5
  val?            %218.1 = CallBuiltin        !v    length(%158.5) e182.0   <int$->
  lgl$#-          %218.2 = IsType                   %218.1 isA int$-
  void                    Branch                   %218.2 -> BB220 (if true) | BB221 (if false)
BB219   <- [158]
  fs              %219.0 = FrameState         R     0x55de3518ec00+933: [1L, %192.0, %158.1], env=e182.0
  void                    Deopt              !v    %219.0, DeadBranchReached@0x55de34dfe540[Test#10], %158.8   !
BB216   <- [23]
  int$-           %216.0 = CastType           d     dn %23.0
  lgl$-           %216.1 = Lt                 d     %216.0, 2, elided   <lgl$->
  lgl$#-          %216.2 = CheckTrueFalse     e     %216.1
  void                    Branch                   %216.2 -> BB155 (if true) | BB24 (if false)
BB217   <- [23]
  void                    Nop                !     
  val?^ | miss    %217.1 = %23.0
  dr              %217.2 = Typecheck@0x55de34dfe540[Type#90]
  goto BB21
BB214   <- [212]
  val?+           %214.0 = CastType           d     dn %177.4   <val?_>
  val?+           %214.1 = Subassign1_2D      wed   %208.0, %210.0, %212.0, %214.0, elided
  void                    StVar              lW    sigs, %214.1, e182.0
  val?+           %214.3 = %214.1
  int$#-          %214.4 = 2L
  goto BB20
BB215   <- [212]
  void                    Nop                !     
  val?            %215.1 = %177.4
  dr              %215.2 = Typecheck@0x55de34dfe540[Type#63]
  goto BB178
BB220   <- [218]
  int$-           %220.0 = CastType           d     dn %218.1
  val?^ | miss    %220.1 = LdVar              eR    nArg, e182.0
  lgl$#-          %220.2 = IsType                   %220.1 isA int$-
  void                    Branch                   %220.2 -> BB230 (if true) | BB231 (if false)
BB221   <- [218]
  void                    Nop                !     
  val?            %221.1 = %218.1
  dr              %221.2 = Typecheck@0x55de34dfe540[Type#72]
  goto BB161
BB155   <- [216]
  val?^ | miss    %155.0 = LdVar              eR    which.min, e182.0
  lgl$#-          %155.1 = Identical                %155.0, function(x) <(rir::DispatchTable*)0x55de32bdac|...
  void                    Branch                   %155.1 -> BB222 (if true) | BB223 (if false)
BB24   <- [216]
  val?^ | miss    %24.0 = LdVar              eR    matrix, e182.0
  lgl$#-          %24.1 = Identical                %24.0, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...
  void                    Branch                   %24.1 -> BB224 (if true) | BB225 (if false)
BB21   <- [217, 223, 225, 227]
  val?^ | miss    %21.0 = Phi                      %217.1:BB217, %223.1:BB223, %225.1:BB225, %227.1:BB227
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %217.2:BB217, %223.2:BB223, %225.2:BB225, %227.2:BB227
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55de3518ec00+858: [1L, %192.0, %20.3], env=e182.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB230   <- [220]
  int$-           %230.0 = CastType           d     dn %220.1
  lgl$-           %230.1 = Lt                 d     %220.0, %230.0, elided   <lgl$->
  lgl$#-          %230.2 = CheckTrueFalse     e     %230.1
  void                    Branch                   %230.2 -> BB167 (if true) | BB163 (if false)
BB231   <- [220]
  void                    Nop                !     
  val?^ | miss    %231.1 = %220.1
  dr              %231.2 = Typecheck@0x55de34dfe540[Type#73]
  goto BB161
BB161   <- [221, 231]
  val?^ | miss    %161.0 = Phi                      %221.1:BB221, %231.1:BB231
  val?^ | miss    %161.1 = %161.0
  dr              %161.2 = Phi                      %221.2:BB221, %231.2:BB231
  dr              %161.3 = %161.2
  fs              %161.4 = FrameState         R     0x55de3518ec00+1024: [1L, %192.0, %158.1, %218.1], env=e182.0
  void                    Deopt              !v    %161.4, %161.3, %161.1   !
BB222   <- [155]
  prom-           %222.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p25, e182.0
  ct              %222.1 = PushContext        lCL   %222.0, which.min(match([(sigs, 1L, R_MissingArg), [[(|..., function(x) <(rir::DispatchTable*)0x55de32bdac|..., e182.0
  val?^           %222.2 = CastType                 up %222.0
  env             e222.3 = MkEnv              l     x=%222.2, parent=R_BaseNamespace, context 1
  val?            %222.4 = Force!<lazy>       !vL   %222.2, e222.3   <int->
  val?            %222.5 = CallBuiltin        !     which.min(%222.4) e222.3
  val?            %222.6 = PopContext         C     %222.5, %222.1   <int$->
  lgl$#-          %222.7 = IsType                   %222.6 isA int$-
  void                    Branch                   %222.7 -> BB232 (if true) | BB233 (if false)
BB223   <- [155]
  void                    Nop                !     
  val?^ | miss    %223.1 = %155.0
  dr              %223.2 = CallTarget@0x55de34dfe540[Call#21]
  goto BB21
BB224   <- [24]
  val?^ | miss    %224.0 = LdVar              eR    n, e182.0
  lgl$#-          %224.1 = IsType                   %224.0 isA int$-
  void                    Branch                   %224.1 -> BB226 (if true) | BB227 (if false)
BB225   <- [24]
  void                    Nop                !     
  val?^ | miss    %225.1 = %24.0
  dr              %225.2 = CallTarget@0x55de34dfe540[Call#23]
  goto BB21
BB167   <- [230]
  val?^ | miss    %167.0 = LdVar              eR    verbose, e182.0
  val?            %167.1 = Force!             !v    %167.0, e182.0   <val?_>
  lgl$#-          %167.2 = CheckTrueFalse     we    %167.1
  void                    Branch                   %167.2 -> BB173 (if true) | BB168 (if false)
BB163   <- [230]
  val?^ | miss    %163.0 = LdVar              eR    sig, e182.0
  val?            %163.1 = Force!<value>      !v    %163.0, e182.0   <str>
  val?^ | miss    %163.2 = LdVar              eR    sigs !upd, e182.0
  lgl$#-          %163.3 = IsType                   %163.2 isA val?~+ | miss
  void                    Branch                   %163.3 -> BB238 (if true) | BB239 (if false)
BB232   <- [222]
  void                    Nop                !     
  val?            %232.1 = %222.6
  goto BB134
BB233   <- [222]
  fs              %233.0 = FrameState         R     0x55de3518ec00+1402: [%222.6], env=e182.0
  void                    Deopt              !v    %233.0, Typecheck@0x55de34dfe540[Type#97], %222.6   !
BB226   <- [224]
  int$-           %226.0 = CastType           d     dn %224.0
  val+            %226.1 = CallSafeBuiltin    wed   matrix(0L, %216.0, %226.0, false, nil, false, false)    <int_>
  void                    StVar              lW    pos, %226.1, e182.0
  lgl$#-          %226.3 = ColonInputEffects        1, %216.0   <true>
  void                    Branch                   %226.3 -> BB228 (if true) | BB229 (if false)
BB227   <- [224]
  void                    Nop                !     
  val?^ | miss    %227.1 = %224.0
  dr              %227.2 = Typecheck@0x55de34dfe540[Type#99]
  goto BB21
BB173   <- [167]
  (cls|spec|blt)  %173.0 = LdFun              !v    cat, e182.0
  fs              %173.1 = FrameState         R     0x55de3518ec00+1147: [1L, %192.0, %158.1, %173.0], env=e182.0
  void                    Deopt              !v    %173.1, DeadCall@0x55de34dfe540[Call#17], %173.0   !
BB168   <- [167]
  val?^ | miss    %168.0 = LdVar              eR    sig, e182.0
  val?            %168.1 = Force!             !v    %168.0, e182.0   <val?_>
  val?^ | miss    %168.2 = LdVar              eR    sigs !upd, e182.0
  val?            %168.3 = Force!             !v    %168.2, e182.0   <val?_>
  val?^ | miss    %168.4 = LdVar              eR    seq_along, e182.0
  lgl$#-          %168.5 = Identical                <blt seq_along>, %168.4   <@?>
  void                    Branch                   %168.5 -> BB170 (if true) | BB169 (if false)
BB238   <- [163]
  val?~+ | miss   %238.0 = CastType           d     dn %163.2
  val?+           %238.1 = Force!<value>            %238.0,    <str_>
  val?^ | miss    %238.2 = LdVar              eR    i, e182.0
  lgl$#-          %238.3 = IsType                   %238.2 isA int$-
  void                    Branch                   %238.3 -> BB240 (if true) | BB241 (if false)
BB239   <- [163]
  void                    Nop                !     
  val?^ | miss    %239.1 = %163.2
  dr              %239.2 = Typecheck@0x55de34dfe540[Type#76]
  goto BB164
BB134   <- [133, 232]
  val?            %134.0 = Phi                      %133.2:BB133, %232.1:BB232
  val?            %134.1 = %134.0
  void                    Return             l     %134.1
BB228   <- [226]
  int$#-          %228.0 = ColonCastRhs       e     1L, %216.0   <int$->
  lgl$#-          %228.1 = Lte                d     1L, %228.0, elided   <true>
  void                    Branch                   %228.1 -> BB234 (if true) | BB235 (if false)
BB229   <- [226]
  void                    Nop                !     
  lgl$#-          %229.1 = %226.3
  dr              %229.2 = DeadBranchReached@0x55de34dfe540[Test#14]
  goto BB25
BB170   <- [168]
  val?^ | miss    %170.0 = LdVar              eR    sig, e182.0
  val?            %170.1 = Force!             !v    %170.0, e182.0   <val?_>
  val?            %170.2 = CallBuiltin        !v    seq_along(%170.1) e182.0   <val?_>
  val?^ | miss    %170.3 = LdVar              eR    i, e182.0
  val?            %170.4 = Force!             !v    %170.3, e182.0   <val?_>
  lgl$#-          %170.5 = IsType                   %170.4 isA val?+
  lgl$#-          %170.6 = IsType                   %170.2 isA val?+
  lgl$#-          %170.7 = IsType                   %168.1 isA val?+
  void                    Branch                   %170.7 -> BB236 (if true) | BB237 (if false)
BB169   <- [168]
  (cls|spec|blt)  %169.0 = LdFun              !v    seq_along, e182.0
  fs              %169.1 = FrameState         R     0x55de3518ec00+1231: [1L, %192.0, %158.1, %168.1, %168.3, %169.0], env=e182.0
  void                    Deopt              !v    %169.1, DeadCall@0x55de34dfe540[Call#20], %169.0   !
BB240   <- [238]
  int$-           %240.0 = CastType           d     dn %238.2
  val?            %240.1 = Subassign1_2D      !v    %163.1, %238.1, missingArg, %240.0, e182.0
  void                    StVar              lW    sigs, %240.1, e182.0
  val?            %240.3 = %240.1
  goto BB166
BB241   <- [238]
  void                    Nop                !     
  val?^ | miss    %241.1 = %238.2
  dr              %241.2 = Typecheck@0x55de34dfe540[Type#77]
  goto BB164
BB164   <- [239, 241]
  val?^ | miss    %164.0 = Phi                      %239.1:BB239, %241.1:BB241
  val?^ | miss    %164.1 = %164.0
  dr              %164.2 = Phi                      %239.2:BB239, %241.2:BB241
  dr              %164.3 = %164.2
  fs              %164.4 = FrameState         R     0x55de3518ec00+1064: [1L, %192.0, %158.1, %163.1], env=e182.0
  void                    Deopt              !v    %164.4, %164.3, %164.1   !
BB234   <- [228]
  lgl$#-          %234.0 = Neq                d     %228.0, 1L, elided   <true>
  void                    Branch                   %234.0 -> BB242 (if true) | BB243 (if false)
BB235   <- [228]
  void                    Nop                !     
  lgl$#-          %235.1 = %228.1
  dr              %235.2 = DeadBranchReached@0x55de34dfe540[Test#17]
  goto BB25
BB25   <- [229, 235, 243]
  val?^ | miss    %25.0 = Phi                      %229.1:BB229, %235.1:BB235, %243.1:BB243
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %229.2:BB229, %235.2:BB235, %243.2:BB243
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55de3518ec00+1464: [], env=e182.0
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB236   <- [170]
  val?+           %236.0 = CastType           d     dn %168.1   <val?_>
  lgl$#-          %236.1 = IsType                   %168.3 isA val?+
  void                    Branch                   %236.1 -> BB244 (if true) | BB245 (if false)
BB237   <- [170]
  void                    Nop                !     
  val?            %237.1 = %168.1
  dr              %237.2 = Typecheck@0x55de34dfe540[Type#84]
  goto BB171
BB166   <- [240, 252]
  val?            %166.0 = Phi                      %252.3:BB252, %240.3:BB240
  val?            %166.1 = %166.0
  val?            %166.2 = %166.1
  int$#-          %166.3 = %158.1
  goto BB20
BB242   <- [234]
  void                    StVar              lW    i, 1L, e182.0
  val?^ | miss    %242.1 = LdVar              eR    match, e182.0
  lgl$#-          %242.2 = Identical                %242.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %242.2 -> BB246 (if true) | BB247 (if false)
BB243   <- [234]
  void                    Nop                !     
  lgl$#-          %243.1 = %234.0
  dr              %243.2 = DeadBranchReached@0x55de34dfe540[Test#18]
  goto BB25
BB244   <- [236]
  val?+           %244.0 = CastType           d     dn %168.3   <val?_>
  void                    Branch                   %170.6 -> BB248 (if true) | BB249 (if false)
BB245   <- [236]
  void                    Nop                !     
  val?            %245.1 = %168.3
  dr              %245.2 = Typecheck@0x55de34dfe540[Type#85]
  goto BB171
BB171   <- [237, 245, 249, 253]
  val?^ | miss    %171.0 = Phi                      %237.1:BB237, %245.1:BB245, %249.1:BB249, %253.1:BB253
  val?^ | miss    %171.1 = %171.0
  dr              %171.2 = Phi                      %237.2:BB237, %245.2:BB245, %249.2:BB249, %253.2:BB253
  dr              %171.3 = %171.2
  fs              %171.4 = FrameState         R     0x55de3518ec00+1308: [1L, %192.0, %158.1, %168.1, %168.3, %170.2, %170.4], env=e182.0
  void                    Deopt              !v    %171.4, %171.3, %171.1   !
BB246   <- [242]
  val             %246.0 = ChkMissing         e     %20.1
  lgl$#-          %246.1 = IsType                   %246.0 isA val?~+ | miss
  void                    Branch                   %246.1 -> BB250 (if true) | BB251 (if false)
BB247   <- [242]
  void                    Nop                !     
  val?^ | miss    %247.1 = %242.1
  dr              %247.2 = CallTarget@0x55de34dfe540[Call#25]
  goto BB27
BB248   <- [244]
  val?+           %248.0 = CastType           d     dn %170.2   <val?_>
  void                    Branch                   %170.5 -> BB252 (if true) | BB253 (if false)
BB249   <- [244]
  void                    Nop                !     
  val?            %249.1 = %170.2
  dr              %249.2 = Typecheck@0x55de34dfe540[Type#88]
  goto BB171
BB250   <- [246]
  val+            %250.0 = CastType           d     dn %246.0   <str_>
  val?            %250.1 = Extract1_2D        wed   %250.0, 1L, missingArg, elided   <str->
  val?^ | miss    %250.2 = LdVar              eR    supersList, e182.0
  val?            %250.3 = Force!<wrapped>    !v    %250.2, e182.0   <vec->
  lgl$#-          %250.4 = IsType                   %250.3 isA val+   <true>
  void                    Branch                   %250.4 -> BB154 (if true) | BB31 (if false)
BB251   <- [246]
  void                    Nop                !     
  val             %251.1 = %246.0
  dr              %251.2 = Typecheck@0x55de34dfe540[Type#117]
  goto BB27
BB27   <- [247, 251]
  val?^ | miss    %27.0 = Phi                      %247.1:BB247, %251.1:BB251
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %247.2:BB247, %251.2:BB251
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x55de3518ec00+1608: [1L, %228.0, 1L], env=e182.0
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
BB252   <- [248]
  val?+           %252.0 = CastType           d     dn %170.4   <val?_>
  val?+           %252.1 = Subassign1_2D      wed   %236.0, %244.0, %248.0, %252.0, elided
  void                    StVar              lW    sigs, %252.1, e182.0
  val?+           %252.3 = %252.1
  goto BB166
BB253   <- [248]
  void                    Nop                !     
  val?            %253.1 = %170.4
  dr              %253.2 = Typecheck@0x55de34dfe540[Type#89]
  goto BB171
BB154   <- [250]
  val?^ | miss    %154.0 = LdVar              eR    i, e182.0
  lgl$#-          %154.1 = IsType                   %154.0 isA int$-
  void                    Branch                   %154.1 -> BB254 (if true) | BB255 (if false)
BB31   <- [250]
  prom-           %31.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p13, e182.0
  prom-           %31.1 = %31.0
  goto BB32
BB254   <- [154]
  int$-           %254.0 = CastType           d     dn %154.0
  int$-           %254.1 = %254.0
  goto BB32
BB255   <- [154]
  void                    Nop                !     
  val?^ | miss    %255.1 = %154.0
  dr              %255.2 = Typecheck@0x55de34dfe540[Type#123]
  goto BB29
BB32   <- [31, 254]
  (int|prom)-     %32.0 = Phi                      %254.1:BB254, %31.1:BB31
  (int|prom)-     %32.1 = %32.0
  lgl$#-          %32.2 = IsType                   %250.3 isA val?-
  void                    Branch                   %32.2 -> BB256 (if true) | BB257 (if false)
BB29   <- [255, 257]
  val?^ | miss    %29.0 = Phi                      %255.1:BB255, %257.1:BB257
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %255.2:BB255, %257.2:BB257
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x55de3518ec00+1652: [1L, %228.0, 2L], env=e182.0
  prom-           %29.5 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p12, e182.0
  val?^           %29.6 = CastType                 up %29.5
  prom-           %29.7 = MkArg                    %250.1, .getBestMethods[0x55de3311a2e0]_p10 (!refl), e182.0
  val?~           %29.8 = CastType                 up %29.7
  env             e29.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%29.6, x=%29.8, parent=R_BaseNamespace, context 0
  fs              %29.10 = FrameState         R     0x55de28d63d40+23: [%250.1], env=e29.9, next=%29.4
  fs              %29.11 = FrameState         R     0x55de2c04d640+5(pr): [%250.3], env=e182.0, next=%29.10
  void                    Deopt              !v    %29.11, %29.3, %29.1   !
BB256   <- [32]
  val?-           %256.0 = CastType           d     dn %250.3   <vec->
  val?            %256.1 = Extract2_1D        wed   %256.0, %32.1, elided   <str->
  lgl$#-          %256.2 = IsType                   %256.1 isA val?+
  lgl$#-          %256.3 = IsType                   %250.1 isA val?+
  void                    Branch                   %256.3 -> BB258 (if true) | BB259 (if false)
BB257   <- [32]
  void                    Nop                !     
  val?            %257.1 = %250.3
  dr              %257.2 = Typecheck@0x55de34dfe540[Type#121]
  goto BB29
BB258   <- [256]
  val?+           %258.0 = CastType           d     dn %250.1   <(int|str)+>
  void                    Branch                   %256.2 -> BB260 (if true) | BB261 (if false)
BB259   <- [256]
  void                    Nop                !     
  val?            %259.1 = %250.1
  dr              %259.2 = Typecheck@0x55de28db6cb0[Type#0]
  goto BB33
BB260   <- [258]
  val?+           %260.0 = CastType           d     dn %256.1   <str->
  val+            %260.1 = CallSafeBuiltin    wed   match(%258.0, %260.0, NA, nil)    <int->
  lgl$#-          %260.2 = IsType                   %260.1 isA int-
  val?^ | miss    %260.3 = LdVar              eR    pos !upd, e182.0
  lgl$#-          %260.4 = IsType                   %260.3 isA int_
  void                    Branch                   %260.4 -> BB262 (if true) | BB263 (if false)
BB261   <- [258]
  void                    Nop                !     
  val?            %261.1 = %256.1
  dr              %261.2 = Typecheck@0x55de28db6cb0[Type#1]
  goto BB33
BB33   <- [259, 261]
  val?^ | miss    %33.0 = Phi                      %259.1:BB259, %261.1:BB261
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %259.2:BB259, %261.2:BB261
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55de3518ec00+1652: [1L, %228.0, 2L], env=e182.0
  prom-           %33.5 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p12, e182.0
  val?^           %33.6 = CastType                 up %33.5
  prom-           %33.7 = MkArg                    %250.1, .getBestMethods[0x55de3311a2e0]_p10 (!refl), e182.0
  val?~           %33.8 = CastType                 up %33.7
  env             e33.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%33.6, x=%33.8, parent=R_BaseNamespace, context 0
  fs              %33.10 = FrameState         R     0x55de28d63d40+23: [%250.1], env=e33.9, next=%33.4
  fs              %33.11 = FrameState         R     0x55de2c04d640+52(pr): [%256.1], env=e182.0, next=%33.10
  void                    Deopt              !v    %33.11, %33.3, %33.1   !
BB262   <- [260]
  int_            %262.0 = CastType           d     dn %260.3
  val?^ | miss    %262.1 = LdVar              eR    i, e182.0
  lgl$#-          %262.2 = IsType                   %262.1 isA int$-
  void                    Branch                   %262.2 -> BB264 (if true) | BB265 (if false)
BB263   <- [260]
  void                    Nop                !     
  val?^ | miss    %263.1 = %260.3
  dr              %263.2 = Typecheck@0x55de34dfe540[Type#126]
  goto BB35
BB264   <- [262]
  int$-           %264.0 = CastType           d     dn %262.1
  void                    Branch                   %260.2 -> BB266 (if true) | BB267 (if false)
BB265   <- [262]
  void                    Nop                !     
  val?^ | miss    %265.1 = %262.1
  dr              %265.2 = Typecheck@0x55de34dfe540[Type#127]
  goto BB35
BB35   <- [263, 265, 267]
  val?^ | miss    %35.0 = Phi                      %263.1:BB263, %265.1:BB265, %267.1:BB267
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %263.2:BB263, %265.2:BB265, %267.2:BB267
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x55de3518ec00+1652: [1L, %228.0, 2L], env=e182.0
  prom-           %35.5 = MkArg                    %260.0, .getBestMethods[0x55de3311a2e0]_p12 (!refl), e182.0
  val?~           %35.6 = CastType                 up %35.5
  prom-           %35.7 = MkArg                    %258.0, .getBestMethods[0x55de3311a2e0]_p10 (!refl), e182.0
  val?~           %35.8 = CastType                 up %35.7
  env             e35.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%35.6, x=%35.8, parent=R_BaseNamespace, context 0
  fs              %35.10 = FrameState         R     0x55de28d63d40+69: [%260.1], env=e35.9, next=%35.4
  void                    Deopt              !v    %35.10, %35.3, %35.1   !
BB266   <- [264]
  int-            %266.0 = CastType           d     dn %260.1
  int_            %266.1 = Subassign1_2D      wed   %266.0, %262.0, %264.0, missingArg, elided
  void                    StVar              lW    pos, %266.1, e182.0
  int$#-          %266.3 = 2L
  goto BB37
BB267   <- [264]
  void                    Nop                !     
  val+            %267.1 = %260.1
  dr              %267.2 = Typecheck@0x55de34dfe540[Type#125]
  goto BB35
BB37   <- [266, 302]
  int$#-          %37.0 = Phi                      %266.3:BB266, %302.3:BB302
  int$#-          %37.1 = %37.0
  lgl$#-          %37.2 = Neq                d     %228.0, %37.1, elided
  void                    Branch                   %37.2 -> BB142 (if true) | BB40 (if false)
BB142   <- [37]
  void                    StVar              lW    i, %37.1, e182.0
  int$#-          %142.1 = Add                d     %37.1, 1L, elided
  val?^ | miss    %142.2 = LdVar              eR    match, e182.0
  lgl$#-          %142.3 = Identical                %142.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %142.3 -> BB268 (if true) | BB269 (if false)
BB40   <- [37]
  val?^ | miss    %40.0 = LdVar              eR    colSums, e182.0
  lgl$#-          %40.1 = Identical                %40.0, function(x, na.rm=FALSE, dims=1L) <(rir::Dispa|...
  void                    Branch                   %40.1 -> BB270 (if true) | BB271 (if false)
BB268   <- [142]
  prom-           %268.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p14, e182.0
  prom-           %268.1 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p16, e182.0
  val?^           %268.2 = CastType                 up %268.1
  val?^           %268.3 = CastType                 up %268.0
  val?^ | miss    %268.4 = LdVar              eR    sigs, e182.0
  val?            %268.5 = Force!<value>      !v    %268.4, e182.0   <str_>
  lgl$#-          %268.6 = IsType                   %268.5 isA val+   <true>
  env             e268.7 = (MkEnv)            l     x=%268.3, table=%268.2, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  void                    Branch                   %268.6 -> BB153 (if true) | BB145 (if false)
BB269   <- [142]
  fs              %269.0 = FrameState         R     0x55de3518ec00+1717: [1L, %228.0, %37.1], env=e182.0
  void                    Deopt              !v    %269.0, CallTarget@0x55de34dfe540[Call#26], %142.2   !
BB270   <- [40]
  prom-           %270.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p18, e182.0
  val?            %270.1 = Call               !v    function(x, na.rm=FALSE, dims=1L) <(rir::Dispa|...(%270.0) e182.0   <real->
  lgl$#-          %270.2 = IsType                   %270.1 isA real-
  void                    Branch                   %270.2 -> BB272 (if true) | BB273 (if false)
BB271   <- [40]
  fs              %271.0 = FrameState         R     0x55de3518ec00+1700: [1L, %228.0, %37.1], env=e182.0
  void                    Deopt              !v    %271.0, CallTarget@0x55de34dfe540[Call#27], %40.0   !
BB153   <- [268]
  val?^ | miss    %153.0 = LdVar              eR    i, e182.0
  val?            %153.1 = Force!<value>      !v    %153.0, e182.0   <int$->
  val?            %153.2 = %153.1
  goto BB146
BB145   <- [268]
  prom-           %145.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p15, e182.0
  prom-           %145.1 = %145.0
  goto BB146
BB272   <- [270]
  real-           %272.0 = CastType           d     dn %270.1
  lgl-            %272.1 = Eq                 wed   %272.0, 0L, elided   <lgl->
  void                    StVar              lW    valid, %272.1, e182.0
  void                    StVar              lW    best, %272.1, e182.0
  lgl-            %272.4 = Not                wed   %272.1, elided
  void                    StVar              lW    dominated, %272.4, e182.0
  val?^ | miss    %272.6 = LdVar              eR    seq_len, e182.0
  lgl$#-          %272.7 = Identical                <blt seq_len>, %272.6   <true>
  void                    Branch                   %272.7 -> BB274 (if true) | BB275 (if false)
BB273   <- [270]
  fs              %273.0 = FrameState         R     0x55de3518ec00+1851: [%270.1], env=e182.0
  void                    Deopt              !v    %273.0, Typecheck@0x55de34dfe540[Type#141], %270.1   !
BB146   <- [145, 153]
  val?            %146.0 = Phi                      %153.2:BB153, %145.1:BB145
  val?            %146.1 = %146.0
  val?            %146.2 = Extract1_2D        !v    %268.5, %146.1, missingArg, e182.0   <str->
  prom-           %146.3 = MkArg                    %146.2, .getBestMethods[0x55de3311a2e0]_p14 (!refl), e182.0
  val?~           %146.4 = CastType                 up %146.3
  void                    StArg              lWd   x, %146.4, e268.7
  lgl$#-          %146.6 = IsEnvStub          R     , e268.7
  void                    Branch                   %146.6 -> BB276 (if true) | BB277 (if false)
BB274   <- [272]
  val?^ | miss    %274.0 = LdVar              eR    n, e182.0
  lgl$#-          %274.1 = IsType                   %274.0 isA int$-
  void                    Branch                   %274.1 -> BB278 (if true) | BB279 (if false)
BB275   <- [272]
  void                    Nop                !     
  lgl$#-          %275.1 = %272.7
  dr              %275.2 = DeadBranchReached@0x55de34dfe540[Test#23]
  goto BB43
BB276   <- [146]
  val?            %276.0 = Force!<lazy>       !vL   %268.2, e268.7   <val?+>
  lgl$#-          %276.1 = IsType                   %276.0 isA val?+
  lgl$#-          %276.2 = IsEnvStub          R     , e268.7
  void                    Branch                   %276.2 -> BB280 (if true) | BB281 (if false)
BB277   <- [146]
  fs              %277.0 = FrameState         R     0x55de3518ec00+1761: [1L, %228.0, %142.1], env=e182.0
  fs              %277.1 = FrameState         R     0x55de28d63d40+9: [%146.2], env=e268.7, next=%277.0
  void                    Deopt              !v    %277.1, EnvStubMaterialized@0x55de28db6cb0[Call#unknown], e268.7   !
BB278   <- [274]
  int$-           %278.0 = CastType           d     dn %274.0
  val+            %278.1 = CallSafeBuiltin    wed   seq_len(%278.0)    <int->
  void                    StVar              lW    seqn, %278.1, e182.0
  val?            %278.3 = Extract1_1D        wed   %278.1, %272.1, elided   <int->
  val?+           %278.4 = ToForSeq           e     %278.3
  int$-           %278.5 = Length                   %278.4
  int$#-          %278.6 = 0L
  goto BB45
BB279   <- [274]
  void                    Nop                !     
  val?^ | miss    %279.1 = %274.0
  dr              %279.2 = Typecheck@0x55de34dfe540[Type#146]
  goto BB43
BB43   <- [275, 279]
  val?^ | miss    %43.0 = Phi                      %275.1:BB275, %279.1:BB279
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %275.2:BB275, %279.2:BB279
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x55de3518ec00+1924: [], env=e182.0
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB280   <- [276]
  lgl$#-          %280.0 = IsType                   %146.2 isA val?+
  void                    Branch                   %280.0 -> BB282 (if true) | BB283 (if false)
BB281   <- [276]
  void                    Nop                !     
  env             e281.1 = e268.7
  dr              %281.2 = EnvStubMaterialized@0x55de28db6cb0[Call#unknown]
  goto BB149
BB45   <- [97, 278]
  int$-           %45.0 = Phi                      %278.6:BB278, %97.1:BB97
  int$-           %45.1 = %45.0
  int$-           %45.2 = Inc                      %45.1
  lgl$-           %45.3 = Lt                 d     %278.5, %45.2, elided
  lgl$#-          %45.4 = Identical                %45.3, true
  void                    Branch                   %45.4 -> BB124 (if true) | BB46 (if false)
BB282   <- [280]
  val?+           %282.0 = CastType           d     dn %146.2   <(int|str)+>
  void                    Branch                   %276.1 -> BB284 (if true) | BB285 (if false)
BB283   <- [280]
  void                    Nop                !     
  val?            %283.1 = %146.2
  dr              %283.2 = Typecheck@0x55de28db6cb0[Type#0]
  goto BB149
BB149   <- [281, 283, 285]
  val?^ | miss    %149.0 = Phi                      e281.1:BB281, %283.1:BB283, %285.1:BB285
  val?^ | miss    %149.1 = %149.0
  dr              %149.2 = Phi                      %281.2:BB281, %283.2:BB283, %285.2:BB285
  dr              %149.3 = %149.2
  fs              %149.4 = FrameState         R     0x55de3518ec00+1761: [1L, %228.0, %142.1], env=e182.0
  fs              %149.5 = FrameState         R     0x55de28d63d40+23: [%146.2, %276.0], env=e268.7, next=%149.4
  void                    Deopt              !v    %149.5, %149.3, %149.1   !
BB124   <- [45]
  val?^ | miss    %124.0 = LdVar              eR    verbose, e182.0
  val?            %124.1 = Force!<lazy>       !v    %124.0, e182.0   <lgl$->
  lgl$#-          %124.2 = CheckTrueFalse     we    %124.1
  void                    Branch                   %124.2 -> BB141 (if true) | BB127 (if false)
BB46   <- [45]
  val?            %46.0 = Extract2_1D        wed   %278.4, %45.2, elided
  void                    StVar              lW    i, %46.0, e182.0
  val?^ | miss    %46.2 = LdVar              eR    seqn, e182.0
  lgl$#-          %46.3 = IsType                   %46.2 isA int-
  void                    Branch                   %46.3 -> BB294 (if true) | BB295 (if false)
BB284   <- [282]
  val?+           %284.0 = CastType           d     dn %276.0
  val+            %284.1 = CallSafeBuiltin    wed   match(%282.0, %284.0, NA, nil)    <int->
  lgl$#-          %284.2 = IsType                   %284.1 isA int-
  val?^ | miss    %284.3 = LdVar              eR    pos !upd, e182.0
  lgl$#-          %284.4 = IsType                   %284.3 isA int_
  void                    Branch                   %284.4 -> BB290 (if true) | BB291 (if false)
BB285   <- [282]
  void                    Nop                !     
  val?            %285.1 = %276.0
  dr              %285.2 = Typecheck@0x55de28db6cb0[Type#1]
  goto BB149
BB141   <- [124]
  (cls|spec|blt)  %141.0 = LdFun              !v    cat, e182.0
  fs              %141.1 = FrameState         R     0x55de3518ec00+3757: [%141.0], env=e182.0
  void                    Deopt              !v    %141.1, DeadCall@0x55de34dfe540[Call#34], %141.0   !
BB127   <- [124]
  val?^ | miss    %127.0 = LdVar              eR    any, e182.0
  lgl$#-          %127.1 = Identical                <blt any>, %127.0   <true>
  void                    Branch                   %127.1 -> BB286 (if true) | BB287 (if false)
BB294   <- [46]
  int-            %294.0 = CastType           d     dn %46.2
  val             %294.1 = ChkMissing         e     %46.0
  lgl$#-          %294.2 = IsType                   %294.1 isA int$-
  void                    Branch                   %294.2 -> BB304 (if true) | BB305 (if false)
BB295   <- [46]
  void                    Nop                !     
  val?^ | miss    %295.1 = %46.2
  dr              %295.2 = Typecheck@0x55de34dfe540[Type#152]
  goto BB47
BB290   <- [284]
  int_            %290.0 = CastType           d     dn %284.3
  val?^ | miss    %290.1 = LdVar              eR    i, e182.0
  lgl$#-          %290.2 = IsType                   %290.1 isA int$-
  void                    Branch                   %290.2 -> BB292 (if true) | BB293 (if false)
BB291   <- [284]
  void                    Nop                !     
  val?^ | miss    %291.1 = %284.3
  dr              %291.2 = Typecheck@0x55de34dfe540[Type#137]
  goto BB151
BB286   <- [127]
  val?^ | miss    %286.0 = LdVar              eR    best, e182.0
  lgl$#-          %286.1 = IsType                   %286.0 isA lgl-
  void                    Branch                   %286.1 -> BB288 (if true) | BB289 (if false)
BB287   <- [127]
  void                    Nop                !     
  lgl$#-          %287.1 = %127.1
  dr              %287.2 = DeadBranchReached@0x55de34dfe540[Test#44]
  goto BB125
BB304   <- [294]
  int$-           %304.0 = CastType           d     dn %294.1
  int$-           %304.1 = Minus              d     %304.0, elided
  int-            %304.2 = Extract1_1D        wed   %294.0, %304.1, elided   <int$->
  lgl$#-          %304.3 = IsType                   %304.2 isA int$-
  void                    Branch                   %304.3 -> BB306 (if true) | BB307 (if false)
BB305   <- [294]
  void                    Nop                !     
  val             %305.1 = %294.1
  dr              %305.2 = Typecheck@0x55de34dfe540[Type#154]
  goto BB47
BB47   <- [295, 305]
  val?^ | miss    %47.0 = Phi                      %295.1:BB295, %305.1:BB305
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %295.2:BB295, %305.2:BB305
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x55de3518ec00+2130: [%278.4, %278.5, %45.2], env=e182.0
  void                    Deopt              !v    %47.4, %47.3, %47.1   !
BB292   <- [290]
  int$-           %292.0 = CastType           d     dn %290.1
  void                    Branch                   %284.2 -> BB302 (if true) | BB303 (if false)
BB293   <- [290]
  void                    Nop                !     
  val?^ | miss    %293.1 = %290.1
  dr              %293.2 = Typecheck@0x55de34dfe540[Type#138]
  goto BB151
BB151   <- [291, 293, 303]
  val?^ | miss    %151.0 = Phi                      %291.1:BB291, %293.1:BB293, %303.1:BB303
  val?^ | miss    %151.1 = %151.0
  dr              %151.2 = Phi                      %291.2:BB291, %293.2:BB293, %303.2:BB303
  dr              %151.3 = %151.2
  fs              %151.4 = FrameState         R     0x55de3518ec00+1761: [1L, %228.0, %142.1], env=e182.0
  fs              %151.5 = FrameState         R     0x55de28d63d40+69: [%284.1], env=e268.7, next=%151.4
  void                    Deopt              !v    %151.5, %151.3, %151.1   !
BB288   <- [286]
  lgl-            %288.0 = CastType           d     dn %286.0
  val?            %288.1 = CallBuiltin        !v    any(%288.0) e182.0   <lgl$->
  lgl$#-          %288.2 = IsType                   %288.1 isA lgl$-
  void                    Branch                   %288.2 -> BB296 (if true) | BB297 (if false)
BB289   <- [286]
  void                    Nop                !     
  val?^ | miss    %289.1 = %286.0
  dr              %289.2 = Typecheck@0x55de34dfe540[Type#247]
  goto BB125
BB125   <- [287, 289]
  val?^ | miss    %125.0 = Phi                      %287.1:BB287, %289.1:BB289
  val?^ | miss    %125.1 = %125.0
  dr              %125.2 = Phi                      %287.2:BB287, %289.2:BB289
  dr              %125.3 = %125.2
  fs              %125.4 = FrameState         R     0x55de3518ec00+3742: [%124.2], env=e182.0
  void                    Deopt              !v    %125.4, %125.3, %125.1   !
BB306   <- [304]
  int$-           %306.0 = CastType           d     dn %304.2
  val?^ | miss    %306.1 = LdVar              eR    valid, e182.0
  lgl$#-          %306.2 = IsType                   %306.1 isA lgl-
  void                    Branch                   %306.2 -> BB308 (if true) | BB309 (if false)
BB307   <- [304]
  void                    Nop                !     
  int-            %307.1 = %304.2
  dr              %307.2 = Typecheck@0x55de34dfe540[Type#155]
  goto BB49
BB302   <- [292]
  int-            %302.0 = CastType           d     dn %284.1
  int_            %302.1 = Subassign1_2D      wed   %302.0, %290.0, %292.0, missingArg, elided
  void                    StVar              lW    pos, %302.1, e182.0
  int$#-          %302.3 = %142.1
  goto BB37
BB303   <- [292]
  void                    Nop                !     
  val+            %303.1 = %284.1
  dr              %303.2 = Typecheck@0x55de34dfe540[Type#136]
  goto BB151
BB296   <- [288]
  lgl$-           %296.0 = CastType           d     dn %288.1
  lgl$#-          %296.1 = CheckTrueFalse     e     %296.0
  void                    Branch                   %296.1 -> BB138 (if true) | BB130 (if false)
BB297   <- [288]
  void                    Nop                !     
  val?            %297.1 = %288.1
  dr              %297.2 = Typecheck@0x55de34dfe540[Type#248]
  goto BB128
BB308   <- [306]
  lgl-            %308.0 = CastType           d     dn %306.1
  val             %308.1 = ChkMissing         e     %46.0
  lgl$#-          %308.2 = IsType                   %308.1 isA int$-
  void                    Branch                   %308.2 -> BB310 (if true) | BB311 (if false)
BB309   <- [306]
  void                    Nop                !     
  val?^ | miss    %309.1 = %306.1
  dr              %309.2 = Typecheck@0x55de34dfe540[Type#160]
  goto BB49
BB49   <- [307, 309, 311]
  val?^ | miss    %49.0 = Phi                      %307.1:BB307, %309.1:BB309, %311.1:BB311
  val?^ | miss    %49.1 = %49.0
  dr              %49.2 = Phi                      %307.2:BB307, %309.2:BB309, %311.2:BB311
  dr              %49.3 = %49.2
  fs              %49.4 = FrameState         R     0x55de3518ec00+2191: [%278.4, %278.5, %45.2, %304.2], env=e182.0
  void                    Deopt              !v    %49.4, %49.3, %49.1   !
BB138   <- [296]
  val?^ | miss    %138.0 = LdVar              eR    seqn, e182.0
  lgl$#-          %138.1 = IsType                   %138.0 isA int-
  void                    Branch                   %138.1 -> BB298 (if true) | BB299 (if false)
BB130   <- [296]
  val?^ | miss    %130.0 = LdVar              eR    seqn, e182.0
  val?            %130.1 = Force!             !v    %130.0, e182.0   <val?_>
  lgl$#-          %130.2 = IsType                   %130.1 isA val+   <@?>
  void                    Branch                   %130.2 -> BB135 (if true) | BB131 (if false)
BB128   <- [297, 299, 301]
  val?^ | miss    %128.0 = Phi                      %297.1:BB297, %299.1:BB299, %301.1:BB301
  val?^ | miss    %128.1 = %128.0
  dr              %128.2 = Phi                      %297.2:BB297, %299.2:BB299, %301.2:BB301
  dr              %128.3 = %128.2
  fs              %128.4 = FrameState         R     0x55de3518ec00+3881: [%288.1], env=e182.0
  void                    Deopt              !v    %128.4, %128.3, %128.1   !
BB310   <- [308]
  int$-           %310.0 = CastType           d     dn %308.1
  int$-           %310.1 = Minus              d     %310.0, elided
  lgl-            %310.2 = Extract1_1D        wed   %308.0, %310.1, elided   <lgl$->
  lgl$#-          %310.3 = IsType                   %310.2 isA lgl$-
  void                    Branch                   %310.3 -> BB316 (if true) | BB317 (if false)
BB311   <- [308]
  void                    Nop                !     
  val             %311.1 = %308.1
  dr              %311.2 = Typecheck@0x55de34dfe540[Type#162]
  goto BB49
BB298   <- [138]
  int-            %298.0 = CastType           d     dn %138.0
  val?^ | miss    %298.1 = LdVar              eR    best, e182.0
  lgl$#-          %298.2 = IsType                   %298.1 isA lgl-
  void                    Branch                   %298.2 -> BB300 (if true) | BB301 (if false)
BB299   <- [138]
  void                    Nop                !     
  val?^ | miss    %299.1 = %138.0
  dr              %299.2 = Typecheck@0x55de34dfe540[Type#253]
  goto BB128
BB135   <- [130]
  val?^ | miss    %135.0 = LdVar              eR    dominated, e182.0
  val?            %135.1 = Force!             !v    %135.0, e182.0   <val?_>
  lgl$#-          %135.2 = IsType                   %135.1 isA val?+
  void                    Branch                   %135.2 -> BB314 (if true) | BB315 (if false)
BB131   <- [130]
  prom-           %131.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p24, e182.0
  prom-           %131.1 = %131.0
  goto BB132
BB316   <- [310]
  lgl$-           %316.0 = CastType           d     dn %310.2
  int-            %316.1 = Extract1_1D        wed   %306.0, %316.0, elided   <int$->
  lgl$#-          %316.2 = IsType                   %316.1 isA int$-
  void                    Branch                   %316.2 -> BB318 (if true) | BB319 (if false)
BB317   <- [310]
  fs              %317.0 = FrameState         R     0x55de3518ec00+2289: [%278.4, %278.5, %45.2, %306.0, %310.2], env=e182.0
  void                    Deopt              !v    %317.0, Typecheck@0x55de34dfe540[Type#163], %310.2   !
BB300   <- [298]
  lgl-            %300.0 = CastType           d     dn %298.1
  int-            %300.1 = Extract1_1D        wed   %298.0, %300.0, elided   <int$->
  lgl$#-          %300.2 = IsType                   %300.1 isA int$-
  void                    Branch                   %300.2 -> BB312 (if true) | BB313 (if false)
BB301   <- [298]
  void                    Nop                !     
  val?^ | miss    %301.1 = %298.1
  dr              %301.2 = Typecheck@0x55de34dfe540[Type#255]
  goto BB128
BB314   <- [135]
  val?+           %314.0 = CastType           d     dn %135.1   <val?_>
  lgl             %314.1 = Not                wed   %314.0, elided
  lgl             %314.2 = %314.1
  goto BB132
BB315   <- [135]
  fs              %315.0 = FrameState         R     0x55de3518ec00+3946: [%130.1, %135.1], env=e182.0
  void                    Deopt              !v    %315.0, Typecheck@0x55de34dfe540[Type#251], %135.1   !
BB132   <- [131, 314]
  (lgl|prom)      %132.0 = Phi                      %314.2:BB314, %131.1:BB131
  (lgl|prom)      %132.1 = %132.0
  val?            %132.2 = Extract1_1D        !v    %130.1, %132.1, e182.0   <val?_>
  void                    Visible            v     
  val?            %132.4 = %132.2
  goto BB133
BB318   <- [316]
  int$-           %318.0 = CastType           d     dn %316.1
  int$-           %318.1 = Inc                      0L
  lgl$-           %318.2 = Lt                 d     1L, %318.1, elided   <false>
  lgl$#-          %318.3 = Identical                %318.2, true
  void                    Branch                   %318.3 -> BB321 (if true) | BB320 (if false)
BB319   <- [316]
  void                    Nop                !     
  int-            %319.1 = %316.1
  dr              %319.2 = Typecheck@0x55de34dfe540[Type#164]
  goto BB53
BB312   <- [300]
  void                    Visible            v     
  int-            %312.1 = %300.1
  goto BB133
BB313   <- [300]
  fs              %313.0 = FrameState         R     0x55de3518ec00+4024: [%300.1], env=e182.0
  void                    Deopt              !v    %313.0, Typecheck@0x55de34dfe540[Type#256], %300.1   !
BB133   <- [132, 312]
  val?            %133.0 = Phi                      %132.4:BB132, %312.1:BB312
  val?            %133.1 = %133.0
  val?            %133.2 = %133.1
  goto BB134
BB321   <- [318]
  void                    Nop                !     
  lgl$#-          %321.1 = %318.3
  dr              %321.2 = DeadBranchReached@0x55de34dfe540[Test#29]
  goto BB53
BB320   <- [318]
  int$-           %320.0 = Extract2_1D        wed   %318.0, %318.1, elided
  void                    StVar              lW    j, %320.0, e182.0
  val?^ | miss    %320.2 = LdVar              eR    pos, e182.0
  lgl$#-          %320.3 = IsType                   %320.2 isA int_
  void                    Branch                   %320.3 -> BB322 (if true) | BB323 (if false)
BB53   <- [319, 321]
  val?^ | miss    %53.0 = Phi                      %319.1:BB319, %321.1:BB321
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %319.2:BB319, %321.2:BB321
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x55de3518ec00+2296: [%278.4, %278.5, %45.2, %316.1], env=e182.0
  void                    Deopt              !v    %53.4, %53.3, %53.1   !
BB322   <- [320]
  int_            %322.0 = CastType           d     dn %320.2
  int_            %322.1 = Extract1_2D        wed   %322.0, missingArg, %320.0, elided   <int->
  val             %322.2 = ChkMissing         e     %46.0
  lgl$#-          %322.3 = IsType                   %322.2 isA int$-
  void                    Branch                   %322.3 -> BB324 (if true) | BB325 (if false)
BB323   <- [320]
  fs              %323.0 = FrameState         R     0x55de3518ec00+2342: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1], env=e182.0
  void                    Deopt              !v    %323.0, Typecheck@0x55de34dfe540[Type#165], %320.2   !
BB324   <- [322]
  int$-           %324.0 = CastType           d     dn %322.2
  int_            %324.1 = Extract1_2D        wed   %322.0, missingArg, %324.0, elided   <int->
  int_            %324.2 = Sub                wed   %322.1, %324.1, elided   <int->
  void                    StVar              lW    diffs, %324.2, e182.0
  val?^ | miss    %324.4 = LdVar              eR    any, e182.0
  lgl$#-          %324.5 = Identical                <blt any>, %324.4   <true>
  void                    Branch                   %324.5 -> BB326 (if true) | BB327 (if false)
BB325   <- [322]
  fs              %325.0 = FrameState         R     0x55de3518ec00+2412: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1, %322.1], env=e182.0
  void                    Deopt              !v    %325.0, Typecheck@0x55de34dfe540[Type#171], %322.2   !
BB326   <- [324]
  lgl             %326.0 = Lt                 wed   %324.2, 0, elided   <lgl->
  val?            %326.1 = CallBuiltin        !v    any(%326.0) e182.0   <lgl$->
  lgl$#-          %326.2 = IsType                   %326.1 isA lgl$-
  void                    Branch                   %326.2 -> BB328 (if true) | BB329 (if false)
BB327   <- [324]
  fs              %327.0 = FrameState         R     0x55de3518ec00+2509: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1], env=e182.0
  void                    Deopt              !v    %327.0, DeadBranchReached@0x55de34dfe540[Test#32], %324.5   !
BB328   <- [326]
  lgl$-           %328.0 = CastType           d     dn %326.1
  lgl$#-          %328.1 = CheckTrueFalse     e     %328.0
  void                    Branch                   %328.1 -> BB117 (if true) | BB63 (if false)
BB329   <- [326]
  void                    Nop                !     
  val?            %329.1 = %326.1
  dr              %329.2 = Typecheck@0x55de34dfe540[Type#178]
  goto BB61
BB117   <- [328]
  val?^ | miss    %117.0 = LdVar              eR    best !upd, e182.0
  lgl$#-          %117.1 = IsType                   %117.0 isA lgl-
  void                    Branch                   %117.1 -> BB330 (if true) | BB331 (if false)
BB63   <- [328]
  void                    Nop                !     
  goto BB64
BB61   <- [329, 331, 333]
  val?^ | miss    %61.0 = Phi                      %329.1:BB329, %331.1:BB331, %333.1:BB333
  val?^ | miss    %61.1 = %61.0
  dr              %61.2 = Phi                      %329.2:BB329, %331.2:BB331, %333.2:BB333
  dr              %61.3 = %61.2
  fs              %61.4 = FrameState         R     0x55de3518ec00+2612: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1, %326.1], env=e182.0
  void                    Deopt              !v    %61.4, %61.3, %61.1   !
BB330   <- [117]
  lgl-            %330.0 = CastType           d     dn %117.0
  val?^ | miss    %330.1 = LdVar              eR    i, e182.0
  lgl$#-          %330.2 = IsType                   %330.1 isA int$-
  void                    Branch                   %330.2 -> BB332 (if true) | BB333 (if false)
BB331   <- [117]
  void                    Nop                !     
  val?^ | miss    %331.1 = %117.0
  dr              %331.2 = Typecheck@0x55de34dfe540[Type#179]
  goto BB61
BB64   <- [63, 122]
  val?^ | miss    %64.0 = LdVar              eR    all, e182.0
  lgl$#-          %64.1 = Identical                <blt all>, %64.0   <true>
  void                    Branch                   %64.1 -> BB334 (if true) | BB335 (if false)
BB332   <- [330]
  int$-           %332.0 = CastType           d     dn %330.1
  lgl-            %332.1 = Subassign1_1D      wed   false, %330.0, %332.0, elided
  void                    StVar              lW    best, %332.1, e182.0
  val?^ | miss    %332.3 = LdVar              eR    dominated, e182.0
  lgl$#-          %332.4 = IsType                   %332.3 isA lgl-
  void                    Branch                   %332.4 -> BB344 (if true) | BB345 (if false)
BB333   <- [330]
  void                    Nop                !     
  val?^ | miss    %333.1 = %330.1
  dr              %333.2 = Typecheck@0x55de34dfe540[Type#180]
  goto BB61
BB334   <- [64]
  val?^ | miss    %334.0 = LdVar              eR    diffs, e182.0
  lgl$#-          %334.1 = IsType                   %334.0 isA int-
  void                    Branch                   %334.1 -> BB336 (if true) | BB337 (if false)
BB335   <- [64]
  void                    Nop                !     
  lgl$#-          %335.1 = %64.1
  dr              %335.2 = DeadBranchReached@0x55de34dfe540[Test#34]
  goto BB65
BB344   <- [332]
  lgl-            %344.0 = CastType           d     dn %332.3
  lgl-            %344.1 = Extract1_1D        wed   %344.0, %332.0, elided   <lgl$->
  lgl$#-          %344.2 = IsType                   %344.1 isA lgl$-
  void                    Branch                   %344.2 -> BB350 (if true) | BB351 (if false)
BB345   <- [332]
  fs              %345.0 = FrameState         R     0x55de3518ec00+2672: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1], env=e182.0
  void                    Deopt              !v    %345.0, Typecheck@0x55de34dfe540[Type#181], %332.3   !
BB336   <- [334]
  int-            %336.0 = CastType           d     dn %334.0
  lgl-            %336.1 = Lte                wed   %336.0, 0, elided   <lgl->
  val?            %336.2 = CallBuiltin        !v    all(%336.1) e182.0   <lgl$->
  lgl$#-          %336.3 = IsType                   %336.2 isA lgl$-
  void                    Branch                   %336.3 -> BB338 (if true) | BB339 (if false)
BB337   <- [334]
  void                    Nop                !     
  val?^ | miss    %337.1 = %334.0
  dr              %337.2 = Typecheck@0x55de34dfe540[Type#187]
  goto BB65
BB65   <- [335, 337]
  val?^ | miss    %65.0 = Phi                      %335.1:BB335, %337.1:BB337
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %335.2:BB335, %337.2:BB337
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x55de3518ec00+2759: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1], env=e182.0
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB350   <- [344]
  lgl$-           %350.0 = CastType           d     dn %344.1
  lgl$#-          %350.1 = CheckTrueFalse     e     %350.0
  void                    Branch                   %350.1 -> BB123 (if true) | BB122 (if false)
BB351   <- [344]
  fs              %351.0 = FrameState         R     0x55de3518ec00+2732: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1, %344.1], env=e182.0
  void                    Deopt              !v    %351.0, Typecheck@0x55de34dfe540[Type#184], %344.1   !
BB338   <- [336]
  lgl$-           %338.0 = CastType           d     dn %336.2
  lgl$#-          %338.1 = CheckTrueFalse     e     %338.0
  void                    Branch                   %338.1 -> BB110 (if true) | BB69 (if false)
BB339   <- [336]
  void                    Nop                !     
  val?            %339.1 = %336.2
  dr              %339.2 = Typecheck@0x55de34dfe540[Type#189]
  goto BB67
BB123   <- [350]
  void                    Nop                !     
  goto BB97
BB122   <- [350]
  void                    Nop                !     
  goto BB64
BB110   <- [338]
  val?^ | miss    %110.0 = LdVar              eR    dominated !upd, e182.0
  lgl$#-          %110.1 = IsType                   %110.0 isA lgl-
  void                    Branch                   %110.1 -> BB340 (if true) | BB341 (if false)
BB69   <- [338]
  void                    Nop                !     
  int$-           %69.1 = %318.1
  goto BB70
BB67   <- [339, 341, 343]
  val?^ | miss    %67.0 = Phi                      %339.1:BB339, %341.1:BB341, %343.1:BB343
  val?^ | miss    %67.1 = %67.0
  dr              %67.2 = Phi                      %339.2:BB339, %341.2:BB341, %343.2:BB343
  dr              %67.3 = %67.2
  fs              %67.4 = FrameState         R     0x55de3518ec00+2862: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1, %336.2], env=e182.0
  void                    Deopt              !v    %67.4, %67.3, %67.1   !
BB97   <- [96, 105, 109, 116, 123]
  void                    Nop                !     
  int$-           %97.1 = %45.2
  goto BB45
BB340   <- [110]
  lgl-            %340.0 = CastType           d     dn %110.0
  val?^ | miss    %340.1 = LdVar              eR    i, e182.0
  lgl$#-          %340.2 = IsType                   %340.1 isA int$-
  void                    Branch                   %340.2 -> BB342 (if true) | BB343 (if false)
BB341   <- [110]
  void                    Nop                !     
  val?^ | miss    %341.1 = %110.0
  dr              %341.2 = Typecheck@0x55de34dfe540[Type#190]
  goto BB67
BB70   <- [69, 115, 87]
  int$-           %70.0 = Phi                      %69.1:BB69, %87.1:BB87, %115.1:BB115
  int$-           %70.1 = %70.0
  int$-           %70.2 = Inc                      %70.1
  lgl$-           %70.3 = Lt                 d     1L, %70.2, elided
  lgl$#-          %70.4 = Identical                %70.3, true
  void                    Branch                   %70.4 -> BB109 (if true) | BB71 (if false)
BB342   <- [340]
  int$-           %342.0 = CastType           d     dn %340.1
  lgl-            %342.1 = Subassign1_1D      wed   true, %340.0, %342.0, elided
  void                    StVar              lW    dominated, %342.1, e182.0
  val?^ | miss    %342.3 = LdVar              eR    best, e182.0
  lgl$#-          %342.4 = IsType                   %342.3 isA lgl-
  void                    Branch                   %342.4 -> BB346 (if true) | BB347 (if false)
BB343   <- [340]
  void                    Nop                !     
  val?^ | miss    %343.1 = %340.1
  dr              %343.2 = Typecheck@0x55de34dfe540[Type#191]
  goto BB67
BB109   <- [70]
  void                    Nop                !     
  goto BB97
BB71   <- [70]
  int$-           %71.0 = Extract2_1D        wed   %318.0, %70.2, elided
  void                    StVar              lW    j, %71.0, e182.0
  val?^ | miss    %71.2 = LdVar              eR    pos, e182.0
  val?            %71.3 = Force!             !v    %71.2, e182.0   <val?_>
  lgl$#-          %71.4 = IsType                   %71.3 isA val+   <@?>
  void                    Branch                   %71.4 -> BB108 (if true) | BB72 (if false)
BB346   <- [342]
  lgl-            %346.0 = CastType           d     dn %342.3
  lgl-            %346.1 = Extract1_1D        wed   %346.0, %342.0, elided   <lgl$->
  lgl$#-          %346.2 = IsType                   %346.1 isA lgl$-
  void                    Branch                   %346.2 -> BB348 (if true) | BB349 (if false)
BB347   <- [342]
  fs              %347.0 = FrameState         R     0x55de3518ec00+2922: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1], env=e182.0
  void                    Deopt              !v    %347.0, Typecheck@0x55de34dfe540[Type#192], %342.3   !
BB108   <- [71]
  val?^ | miss    %108.0 = LdVar              eR    j, e182.0
  val?            %108.1 = Force!             !v    %108.0, e182.0   <val?_>
  val?            %108.2 = %108.1
  goto BB73
BB72   <- [71]
  prom-           %72.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p23, e182.0
  prom-           %72.1 = %72.0
  goto BB73
BB348   <- [346]
  lgl$-           %348.0 = CastType           d     dn %346.1
  lgl$-           %348.1 = Not                d     %348.0, elided
  lgl$#-          %348.2 = CheckTrueFalse     e     %348.1
  void                    Branch                   %348.2 -> BB116 (if true) | BB115 (if false)
BB349   <- [346]
  fs              %349.0 = FrameState         R     0x55de3518ec00+2982: [%278.4, %278.5, %45.2, %318.0, 1L, %318.1, %346.1], env=e182.0
  void                    Deopt              !v    %349.0, Typecheck@0x55de34dfe540[Type#195], %346.1   !
BB73   <- [72, 108]
  val?            %73.0 = Phi                      %108.2:BB108, %72.1:BB72
  val?            %73.1 = %73.0
  val?            %73.2 = Extract1_2D        !v    %71.3, missingArg, %73.1, e182.0   <val?_>
  val?^ | miss    %73.3 = LdVar              eR    pos, e182.0
  val?            %73.4 = Force!             !v    %73.3, e182.0   <val?_>
  lgl$#-          %73.5 = IsType                   %73.4 isA val+   <@?>
  void                    Branch                   %73.5 -> BB107 (if true) | BB74 (if false)
BB116   <- [348]
  void                    Nop                !     
  goto BB97
BB115   <- [348]
  void                    Nop                !     
  int$-           %115.1 = %318.1
  goto BB70
BB107   <- [73]
  val?^ | miss    %107.0 = LdVar              eR    i, e182.0
  val?            %107.1 = Force!             !v    %107.0, e182.0   <val?_>
  val?            %107.2 = %107.1
  goto BB75
BB74   <- [73]
  prom-           %74.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p22, e182.0
  prom-           %74.1 = %74.0
  goto BB75
BB75   <- [74, 107]
  val?            %75.0 = Phi                      %107.2:BB107, %74.1:BB74
  val?            %75.1 = %75.0
  val?            %75.2 = Extract1_2D        !v    %73.4, missingArg, %75.1, e182.0   <val?_>
  lgl$#-          %75.3 = IsType                   %75.2 isA val?+
  lgl$#-          %75.4 = IsType                   %73.2 isA val?+
  void                    Branch                   %75.4 -> BB352 (if true) | BB353 (if false)
BB352   <- [75]
  val?+           %352.0 = CastType           d     dn %73.2   <val?_>
  void                    Branch                   %75.3 -> BB354 (if true) | BB355 (if false)
BB353   <- [75]
  void                    Nop                !     
  val?            %353.1 = %73.2
  dr              %353.2 = Typecheck@0x55de34dfe540[Type#199]
  goto BB76
BB354   <- [352]
  val?+           %354.0 = CastType           d     dn %75.2   <val?_>
  (int|real|complex)+ %354.1 = Sub                wed   %352.0, %354.0, elided   <val?_>
  void                    StVar              lW    diffs, %354.1, e182.0
  val?^ | miss    %354.3 = LdVar              eR    any, e182.0
  lgl$#-          %354.4 = Identical                <blt any>, %354.3   <@?>
  void                    Branch                   %354.4 -> BB79 (if true) | BB78 (if false)
BB355   <- [352]
  void                    Nop                !     
  val?            %355.1 = %75.2
  dr              %355.2 = Typecheck@0x55de34dfe540[Type#203]
  goto BB76
BB76   <- [353, 355]
  val?^ | miss    %76.0 = Phi                      %353.1:BB353, %355.1:BB355
  val?^ | miss    %76.1 = %76.0
  dr              %76.2 = Phi                      %353.2:BB353, %355.2:BB355
  dr              %76.3 = %76.2
  fs              %76.4 = FrameState         R     0x55de3518ec00+3185: [%278.4, %278.5, %45.2, %318.0, 1L, %70.2, %73.2, %75.2], env=e182.0
  void                    Deopt              !v    %76.4, %76.3, %76.1   !
BB79   <- [354]
  lgl             %79.0 = Lt                 wed   %354.1, 0, elided   <val?_>
  val?            %79.1 = CallBuiltin        !v    any(%79.0) e182.0   <val?_>
  lgl$#-          %79.2 = CheckTrueFalse     we    %79.1
  void                    Branch                   %79.2 -> BB99 (if true) | BB80 (if false)
BB78   <- [354]
  (cls|spec|blt)  %78.0 = LdFun              !v    any, e182.0
  fs              %78.1 = FrameState         R     0x55de3518ec00+3234: [%278.4, %278.5, %45.2, %318.0, 1L, %70.2, %78.0], env=e182.0
  void                    Deopt              !v    %78.1, DeadCall@0x55de34dfe540[Call#32], %78.0   !
BB99   <- [79]
  val?^ | miss    %99.0 = LdVar              eR    best, e182.0
  val?            %99.1 = Force!             !v    %99.0, e182.0   <val?_>
  val?^ | miss    %99.2 = LdVar              eR    i, e182.0
  val?            %99.3 = Force!             !v    %99.2, e182.0   <val?_>
  lgl$#-          %99.4 = IsType                   %99.3 isA val?+
  lgl$#-          %99.5 = IsType                   %99.1 isA val?+
  void                    Branch                   %99.5 -> BB356 (if true) | BB357 (if false)
BB80   <- [79]
  void                    Nop                !     
  goto BB81
BB356   <- [99]
  val?+           %356.0 = CastType           d     dn %99.1   <val?_>
  void                    Branch                   %99.4 -> BB360 (if true) | BB361 (if false)
BB357   <- [99]
  void                    Nop                !     
  val?            %357.1 = %99.1
  dr              %357.2 = Typecheck@0x55de34dfe540[Type#210]
  goto BB100
BB81   <- [80, 104]
  val?^ | miss    %81.0 = LdVar              eR    all, e182.0
  lgl$#-          %81.1 = Identical                <blt all>, %81.0   <@?>
  void                    Branch                   %81.1 -> BB83 (if true) | BB82 (if false)
BB360   <- [356]
  val?+           %360.0 = CastType           d     dn %99.3   <val?_>
  val?+           %360.1 = Subassign1_1D      wed   false, %356.0, %360.0, elided
  void                    StVar              lW    best, %360.1, e182.0
  val?^ | miss    %360.3 = LdVar              eR    dominated, e182.0
  val?            %360.4 = Force!             !v    %360.3, e182.0   <val?_>
  lgl$#-          %360.5 = IsType                   %360.4 isA val+   <@?>
  void                    Branch                   %360.5 -> BB106 (if true) | BB102 (if false)
BB361   <- [356]
  void                    Nop                !     
  val?            %361.1 = %99.3
  dr              %361.2 = Typecheck@0x55de34dfe540[Type#211]
  goto BB100
BB100   <- [357, 361]
  val?^ | miss    %100.0 = Phi                      %357.1:BB357, %361.1:BB361
  val?^ | miss    %100.1 = %100.0
  dr              %100.2 = Phi                      %357.2:BB357, %361.2:BB361
  dr              %100.3 = %100.2
  fs              %100.4 = FrameState         R     0x55de3518ec00+3354: [%278.4, %278.5, %45.2, %318.0, 1L, %70.2, false, %99.1, %99.3], env=e182.0
  void                    Deopt              !v    %100.4, %100.3, %100.1   !
BB83   <- [81]
  val?^ | miss    %83.0 = LdVar              eR    diffs, e182.0
  val?            %83.1 = Force!             !v    %83.0, e182.0   <val?_>
  lgl$#-          %83.2 = IsType                   %83.1 isA val?+
  void                    Branch                   %83.2 -> BB358 (if true) | BB359 (if false)
BB82   <- [81]
  (cls|spec|blt)  %82.0 = LdFun              !v    all, e182.0
  fs              %82.1 = FrameState         R     0x55de3518ec00+3484: [%278.4, %278.5, %45.2, %318.0, 1L, %70.2, %82.0], env=e182.0
  void                    Deopt              !v    %82.1, DeadCall@0x55de34dfe540[Call#33], %82.0   !
BB106   <- [360]
  val?^ | miss    %106.0 = LdVar              eR    i, e182.0
  val?            %106.1 = Force!             !v    %106.0, e182.0   <val?_>
  val?            %106.2 = %106.1
  goto BB103
BB102   <- [360]
  prom-           %102.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p21, e182.0
  prom-           %102.1 = %102.0
  goto BB103
BB358   <- [83]
  val?+           %358.0 = CastType           d     dn %83.1   <val?_>
  lgl             %358.1 = Lte                wed   %358.0, 0, elided   <val?_>
  val?            %358.2 = CallBuiltin        !v    all(%358.1) e182.0   <val?_>
  lgl$#-          %358.3 = CheckTrueFalse     we    %358.2
  void                    Branch                   %358.3 -> BB88 (if true) | BB86 (if false)
BB359   <- [83]
  fs              %359.0 = FrameState         R     0x55de3518ec00+3525: [%278.4, %278.5, %45.2, %318.0, 1L, %70.2, <blt all>, %83.1], env=e182.0
  void                    Deopt              !v    %359.0, Typecheck@0x55de34dfe540[Type#218], %83.1   !
BB103   <- [102, 106]
  val?            %103.0 = Phi                      %106.2:BB106, %102.1:BB102
  val?            %103.1 = %103.0
  val?            %103.2 = Extract1_1D        !v    %360.4, %103.1, e182.0   <val?_>
  lgl$#-          %103.3 = CheckTrueFalse     we    %103.2
  void                    Branch                   %103.3 -> BB105 (if true) | BB104 (if false)
BB88   <- [358]
  val?^ | miss    %88.0 = LdVar              eR    dominated, e182.0
  val?            %88.1 = Force!             !v    %88.0, e182.0   <val?_>
  val?^ | miss    %88.2 = LdVar              eR    i, e182.0
  val?            %88.3 = Force!             !v    %88.2, e182.0   <val?_>
  lgl$#-          %88.4 = IsType                   %88.3 isA val?+
  lgl$#-          %88.5 = IsType                   %88.1 isA val?+
  void                    Branch                   %88.5 -> BB362 (if true) | BB363 (if false)
BB86   <- [358]
  void                    Nop                !     
  goto BB87
BB105   <- [103]
  void                    Nop                !     
  goto BB97
BB104   <- [103]
  void                    Nop                !     
  goto BB81
BB362   <- [88]
  val?+           %362.0 = CastType           d     dn %88.1   <val?_>
  void                    Branch                   %88.4 -> BB364 (if true) | BB365 (if false)
BB363   <- [88]
  void                    Nop                !     
  val?            %363.1 = %88.1
  dr              %363.2 = Typecheck@0x55de34dfe540[Type#221]
  goto BB89
BB87   <- [86, 95]
  void                    Nop                !     
  int$-           %87.1 = %70.2
  goto BB70
BB364   <- [362]
  val?+           %364.0 = CastType           d     dn %88.3   <val?_>
  val?+           %364.1 = Subassign1_1D      wed   true, %362.0, %364.0, elided
  void                    StVar              lW    dominated, %364.1, e182.0
  val?^ | miss    %364.3 = LdVar              eR    best, e182.0
  val?            %364.4 = Force!             !v    %364.3, e182.0   <val?_>
  lgl$#-          %364.5 = IsType                   %364.4 isA val+   <@?>
  void                    Branch                   %364.5 -> BB98 (if true) | BB91 (if false)
BB365   <- [362]
  void                    Nop                !     
  val?            %365.1 = %88.3
  dr              %365.2 = Typecheck@0x55de34dfe540[Type#222]
  goto BB89
BB89   <- [363, 365]
  val?^ | miss    %89.0 = Phi                      %363.1:BB363, %365.1:BB365
  val?^ | miss    %89.1 = %89.0
  dr              %89.2 = Phi                      %363.2:BB363, %365.2:BB365
  dr              %89.3 = %89.2
  fs              %89.4 = FrameState         R     0x55de3518ec00+3604: [%278.4, %278.5, %45.2, %318.0, 1L, %70.2, true, %88.1, %88.3], env=e182.0
  void                    Deopt              !v    %89.4, %89.3, %89.1   !
BB98   <- [364]
  val?^ | miss    %98.0 = LdVar              eR    i, e182.0
  val?            %98.1 = Force!             !v    %98.0, e182.0   <val?_>
  val?            %98.2 = %98.1
  goto BB92
BB91   <- [364]
  prom-           %91.0 = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p20, e182.0
  prom-           %91.1 = %91.0
  goto BB92
BB92   <- [91, 98]
  val?            %92.0 = Phi                      %98.2:BB98, %91.1:BB91
  val?            %92.1 = %92.0
  val?            %92.2 = Extract1_1D        !v    %364.4, %92.1, e182.0   <val?_>
  lgl$#-          %92.3 = IsType                   %92.2 isA val?+
  void                    Branch                   %92.3 -> BB366 (if true) | BB367 (if false)
BB366   <- [92]
  val?+           %366.0 = CastType           d     dn %92.2   <val?_>
  lgl             %366.1 = Not                wed   %366.0, elided
  lgl$#-          %366.2 = CheckTrueFalse     we    %366.1
  void                    Branch                   %366.2 -> BB96 (if true) | BB95 (if false)
BB367   <- [92]
  fs              %367.0 = FrameState         R     0x55de3518ec00+3679: [%278.4, %278.5, %45.2, %318.0, 1L, %70.2, %92.2], env=e182.0
  void                    Deopt              !v    %367.0, Typecheck@0x55de34dfe540[Type#226], %92.2   !
BB96   <- [366]
  void                    Nop                !     
  goto BB97
BB95   <- [366]
  void                    Nop                !     
  goto BB87
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nArg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p3, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p6, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sigs, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p11, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, missingArg, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    supersList, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <vec->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p13, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sigs, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p15, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, missingArg, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    supersList, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <vec->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p17, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <str+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is.na, <0x55de285640e8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p19, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dominated, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     match, <0x55de2a37af38>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p26, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .getBestMethods[0x55de3311a2e0]_p27, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <int->
  void                    Return             l     %0.4
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sigs, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, 1L, missingArg, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    supersList, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <vec$->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3

│ .getBestMethods[0x55de3311a2e0]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
