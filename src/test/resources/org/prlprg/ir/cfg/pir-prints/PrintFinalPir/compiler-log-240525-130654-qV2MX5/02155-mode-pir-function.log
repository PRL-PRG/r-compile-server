
┌──────────────────────────────────────────────────────────────────────────────┐
│ mode[0x55de2ec43e20]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
mode[0x55de2ec43e20]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.2  = Force!<lazy>       !vr   %0.0,    <val?->
  lgl$#-          %0.3  = CallSafeBuiltin    wed   is.expression(%0.2)    <lgl$->
  void                    Branch                   %0.3 -> BB26 (if true) | BB3 (if false)
BB26   <- [0]
  void                    Visible            v     
  str$#-          %26.1 = "expression"
  goto BB11
BB3   <- [0]
  lgl$#-          %3.0  = IsType                   %0.0 isA val?~-
  void                    Branch                   %3.0 -> BB28 (if true) | BB29 (if false)
BB11   <- [26, 10, 56]
  str$#-          %11.0 = Phi                      %10.2:BB10, %56.1:BB56, %26.1:BB26
  str$#-          %11.1 = %11.0
  void                    Return             l     %11.1
BB28   <- [3]
  lgl$#-          %28.0 = CallSafeBuiltin    wed   is.call(%0.2)    <lgl$->
  void                    Branch                   %28.0 -> BB13 (if true) | BB4 (if false)
BB29   <- [3]
  fs              %29.0 = FrameState         R     0x55de2e118020+91: [%0.3], env=e0.1
  void                    Deopt              !v    %29.0, Typecheck@0x55de34550038[Type#4], %0.0
BB13   <- [28]
  prom-           %13.0 = MkArg                    unboundValue, mode[0x55de2ec43e20]_p1, e0.1
  ct              %13.1 = PushContext        lCL   %13.0, deparse([[(x, 1L)), function(expr, width.cutoff=60L, backtick=%in%|..., e0.1
  val?^           %13.2 = CastType                 up %13.0
  env             e13.3 = MkEnv              l     expr=%13.2, width.cutoff(miss)=60L, backtick(miss)=missingArg, control(miss)=missingArg, nlines(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %13.4 = MkArg                    unboundValue, mode[0x55de2ec43e20]_p3, e13.3
  val?^ | miss    %13.5 = CastType                 up %13.4
  void                    StArg              lW    backtick, %13.5, e13.3
  prom-           %13.7 = MkArg                    unboundValue, mode[0x55de2ec43e20]_p7, e13.3
  val?^ | miss    %13.8 = CastType                 up %13.7
  void                    StArg              lW    control, %13.8, e13.3
  prom-           %13.10 = MkArg                    unboundValue, mode[0x55de2ec43e20]_p8 (!refl), 
  val?^ | miss    %13.11 = CastType                 up %13.10
  void                    StArg              lW    nlines, %13.11, e13.3
  val?            %13.13 = Force!<lazy>       !vL   %13.2, e13.3   <sym->
  val?            %13.14 = Force!<lazy>       !v    %13.5, e13.3   <lgl$->
  val?^ | miss    %13.15 = LdVar              eR    .deparseOpts, e13.3
  lgl$#-          %13.16 = Identical                %13.15, function(control) <(rir::DispatchTable*)0x55de|...
  void                    Branch                   %13.16 -> BB30 (if true) | BB31 (if false)
BB4   <- [28]
  lgl$#-          %4.0  = CallSafeBuiltin    wed   is.symbol(%0.2)    <lgl$->
  void                    Branch                   %4.0 -> BB12 (if true) | BB5 (if false)
BB30   <- [13]
  val?^ | miss    %30.0 = LdVar              eR    control, e13.3
  val?            %30.1 = Force!<lazy>       !v    %30.0, e13.3   <str->
  prom-           %30.2 = MkArg                    %30.1, mode[0x55de2ec43e20]_p9 (!refl), 
  val?            %30.3 = StaticCall         !v    .deparseOpts[0x55de288b6430](%30.2) e13.3   <real$->
  lgl$#-          %30.4 = IsType                   %30.3 isA real$-
  void                    Branch                   %30.4 -> BB34 (if true) | BB35 (if false)
BB31   <- [13]
  fs              %31.0 = FrameState         R     0x55de2e118020+253: [], env=e0.1
  fs              %31.1 = FrameState         R     0x55de3465b090+37: [%13.13, 60L, %13.14], env=e13.3, next=%31.0
  void                    Deopt              !v    %31.1, CallTarget@0x55de289a54a0[Call#4], %13.15   !
BB12   <- [4]
  void                    Visible            v     
  str$#-          %12.1 = "name"
  goto BB10
BB5   <- [4]
  str$-           %5.0  = CallSafeBuiltin    wed   typeof(%0.2)    <str$->
  int$-           %5.1  = Length                   %5.0
  void                    StVar              lW    tx, %5.0, e0.1
  lgl$-           %5.3  = Eq                 d     %5.1, 1L, elided   <true>
  lgl$#-          %5.4  = Identical                %5.3, true
  void                    Branch                   %5.4 -> BB32 (if true) | BB33 (if false)
BB34   <- [30]
  real$-          %34.0 = CastType           d     dn %30.3
  val?^ | miss    %34.1 = LdVar              eR    nlines, e13.3
  val?            %34.2 = Force!<lazy>       !v    %34.1, e13.3   <int$->
  val?            %34.3 = CallBuiltin        !v    deparse(%13.13, 60L, %13.14, %34.0, %34.2) e13.3
  val?            %34.4 = PopContext         C     %34.3, %13.1   <str$->
  lgl$#-          %34.5 = IsType                   %34.4 isA val+   <true>
  lgl$#-          %34.6 = IsType                   %34.4 isA val?-
  void                    Branch                   %34.5 -> BB36 (if true) | BB37 (if false)
BB35   <- [30]
  fs              %35.0 = FrameState         R     0x55de2e118020+253: [], env=e0.1
  fs              %35.1 = FrameState         R     0x55de3465b090+74: [%13.13, 60L, %13.14, %30.3], env=e13.3, next=%35.0
  void                    Deopt              !v    %35.1, Typecheck@0x55de289a54a0[Type#9], %30.3   !
BB10   <- [12, 52]
  str$#-          %10.0 = Phi                      %52.1:BB52, %12.1:BB12
  str$#-          %10.1 = %10.0
  str$#-          %10.2 = %10.1
  goto BB11
BB32   <- [5]
  lgl$-           %32.0 = CallSafeBuiltin    wed   is.na(%5.0) 
  lgl$#-          %32.1 = CheckTrueFalse     e     %32.0   <false>
  void                    Branch                   %32.1 -> BB47 (if true) | BB46 (if false)
BB33   <- [5]
  fs              %33.0 = FrameState         R     0x55de2e118020+708: [%5.0], env=e0.1
  void                    Deopt              !v    %33.0, DeadBranchReached@0x55de34550038[Test#14], %5.4
BB36   <- [34]
  void                    Branch                   %34.6 -> BB38 (if true) | BB39 (if false)
BB37   <- [34]
  void                    Nop                !     
  lgl$#-          %37.1 = %34.5
  dr              %37.2 = DeadBranchReached@0x55de34550038[Test#3]
  goto BB18
BB47   <- [32]
  void                    Nop                !     
  lgl$#-          %47.1 = %32.1
  dr              %47.2 = DeadBranchReached@0x55de34550038[Test#23]
  goto BB8
BB46   <- [32]
  lgl$-           %46.0 = Eq                 d     %5.0, double, elided
  lgl$#-          %46.1 = CheckTrueFalse     e     %46.0   <true>
  void                    Branch                   %46.1 -> BB52 (if true) | BB53 (if false)
BB38   <- [36]
  val?-           %38.0 = CastType           d     dn %34.4   <str$->
  val?            %38.1 = Extract1_1D        wed   %38.0, 1L, elided   <str$->
  lgl$-           %38.2 = Is                       %38.1, logical
  lgl$-           %38.3 = Is                       %38.1, integer
  lgl$-           %38.4 = Is                       %38.1, double
  lgl$-           %38.5 = Is                       %38.1, complex
  lgl$-           %38.6 = Is                       %38.1, character   <true>
  lgl$-           %38.7 = Is                       %38.1, raw
  lgl$-           %38.8 = Is                       %38.1, list
  lgl$-           %38.9 = Is                       %38.1, expression
  lgl$-           %38.10 = LOr                      %38.9, %38.8
  lgl$-           %38.11 = LOr                      %38.10, %38.7
  lgl$-           %38.12 = LOr                      %38.11, %38.6
  lgl$-           %38.13 = LOr                      %38.12, %38.5
  lgl$-           %38.14 = LOr                      %38.13, %38.4
  lgl$-           %38.15 = LOr                      %38.14, %38.3
  lgl$-           %38.16 = LOr                      %38.15, %38.2   <true>
  lgl$#-          %38.17 = Identical                %38.16, true
  int$-           %38.18 = Length                   %38.1
  lgl$-           %38.19 = Is                       %38.1, Factor   <false>
  lgl$#-          %38.20 = Identical                %38.19, false
  lgl$#-          %38.21 = Identical                %38.6, true
  lgl$#-          %38.22 = IsType                   %38.1 isA val?-
  void                    Branch                   %38.17 -> BB40 (if true) | BB41 (if false)
BB39   <- [36]
  void                    Nop                !     
  val?            %39.1 = %34.4
  dr              %39.2 = Typecheck@0x55de34550038[Type#8]
  goto BB18
BB18   <- [37, 39]
  val?^ | miss    %18.0 = Phi                      %37.1:BB37, %39.1:BB39
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %37.2:BB37, %39.2:BB39
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55de2e118020+253: [%34.4], env=e0.1
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB8   <- [47, 53]
  val?^ | miss    %8.0  = Phi                      %47.1:BB47, %53.1:BB53
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %47.2:BB47, %53.2:BB53
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55de2e118020+965: [%5.0, %32.0], env=e0.1
  void                    Deopt              !v    %8.4, %8.3, %8.1
BB52   <- [46]
  void                    Visible            v     
  str$#-          %52.1 = "numeric"
  goto BB10
BB53   <- [46]
  void                    Nop                !     
  lgl$#-          %53.1 = %46.1
  dr              %53.2 = DeadBranchReached@0x55de34550038[Test#24]
  goto BB8
BB40   <- [38]
  lgl$-           %40.0 = Eq                 d     %38.18, 1L, elided   <true>
  lgl$#-          %40.1 = Identical                %40.0, true
  void                    Branch                   %40.1 -> BB42 (if true) | BB43 (if false)
BB41   <- [38]
  void                    Nop                !     
  lgl$#-          %41.1 = %38.17
  dr              %41.2 = DeadBranchReached@0x55de34550038[Test#4]
  goto BB20
BB42   <- [40]
  void                    Branch                   %38.20 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  void                    Nop                !     
  lgl$#-          %43.1 = %40.1
  dr              %43.2 = DeadBranchReached@0x55de34550038[Test#5]
  goto BB20
BB20   <- [41, 43, 45, 49, 51]
  val?^ | miss    %20.0 = Phi                      %41.1:BB41, %43.1:BB43, %45.1:BB45, %49.1:BB49, %51.1:BB51
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %41.2:BB41, %43.2:BB43, %45.2:BB45, %49.2:BB49, %51.2:BB51
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x55de2e118020+296: [%38.1], env=e0.1
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB44   <- [42]
  void                    Branch                   %38.21 -> BB48 (if true) | BB49 (if false)
BB45   <- [42]
  void                    Nop                !     
  lgl$#-          %45.1 = %38.20
  dr              %45.2 = DeadBranchReached@0x55de34550038[Test#6]
  goto BB20
BB48   <- [44]
  void                    Branch                   %38.22 -> BB50 (if true) | BB51 (if false)
BB49   <- [44]
  void                    Nop                !     
  lgl$#-          %49.1 = %38.21
  dr              %49.2 = DeadBranchReached@0x55de34550038[Test#7]
  goto BB20
BB50   <- [48]
  val?-           %50.0 = CastType           d     dn %38.1   <str$->
  lgl-            %50.1 = CallSafeBuiltin    wed   is.na(%50.0) 
  lgl$#-          %50.2 = CheckTrueFalse     we    %50.1   <false>
  void                    Branch                   %50.2 -> BB55 (if true) | BB54 (if false)
BB51   <- [48]
  void                    Nop                !     
  val?            %51.1 = %38.1
  dr              %51.2 = Typecheck@0x55de34550038[Type#9]
  goto BB20
BB55   <- [50]
  fs              %55.0 = FrameState         R     0x55de2e118020+488: [%50.0, %50.2], env=e0.1
  void                    Deopt              !v    %55.0, DeadBranchReached@0x55de34550038[Test#10], %50.2   !
BB54   <- [50]
  lgl-            %54.0 = Eq                 wed   %50.0, (, elided
  lgl$#-          %54.1 = CheckTrueFalse     we    %54.0   <false>
  void                    Branch                   %54.1 -> BB57 (if true) | BB56 (if false)
BB57   <- [54]
  fs              %57.0 = FrameState         R     0x55de2e118020+512: [%50.0, %54.1], env=e0.1
  void                    Deopt              !v    %57.0, DeadBranchReached@0x55de34550038[Test#11], %54.1   !
BB56   <- [54]
  void                    Visible            v     
  str$#-          %56.1 = "call"
  goto BB11
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %in%, <0x55de28865c40>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mode[0x55de2ec43e20]_p4, e0.0
  prom-           %0.3  = MkArg                    unboundValue, mode[0x55de2ec43e20]_p6, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <lgl$->
  void                    Return             l     %0.4
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mode, <0x55de29633140>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mode[0x55de2ec43e20]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55de2854f940>, e0.0
  val?            %0.2  = Call               !     %0.1("call", "expression", "(", "function") e0.0   <str->
  void                    Return             l     %0.2
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55de2854f940>, e0.0
  val?            %0.2  = Call               !     %0.1("keepNA", "keepInteger", "niceNames", "showAttributes") e0.0   <str->
  void                    Return             l     %0.2
Prom 8:
BB0
  void                    Visible            v     
  void                    Return             l     -1L
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    control, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3

│ mode[0x55de2ec43e20]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
