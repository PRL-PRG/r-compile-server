
┌──────────────────────────────────────────────────────────────────────────────┐
│ extends[0x55de2cdf3de0]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1 miss: 2│
│ Properties:                                                                  │
├────── Final PIR Version
extends[0x55de2cdf3de0]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    is.character, <env 0x55de28b56378>
  lgl$#-          %0.3  = Identical                <blt is.character>, %0.2   <true>
  void                    Branch                   %0.3 -> BB146 (if true) | BB147 (if false)
BB146   <- [0]
  env             e146.0 = MkEnv              l     class1=%0.1, class2=%0.0, maybe(miss)=true, fullInfo(miss)=false, parent=<env 0x55de28b56378>, context 1
  val?            %146.1 = Force!<lazy>       !vr   %0.1,    <(str|other)>
  lgl$#-          %146.2 = CallSafeBuiltin    wed   is.character(%146.1)    <lgl$->
  void                    Branch                   %146.2 -> BB137 (if true) | BB5 (if false)
BB147   <- [0]
  env             e147.0 = (MkEnv)            l     class1=%0.1, class2=%0.0, maybe(miss)=true, fullInfo(miss)=false, parent=<env 0x55de28b56378>, context 1
  fs              %147.1 = FrameState         R     0x55de2be693a0+0: [], env=e147.0
  void                    Deopt              !v    %147.1, DeadBranchReached@0x55de2b5c6a30[Test#0], %0.3
BB137   <- [146]
  val?^ | miss    %137.0 = LdVar              eR    length, <env 0x55de28b56378>
  lgl$#-          %137.1 = Identical                <blt length>, %137.0   <true>
  void                    Branch                   %137.1 -> BB148 (if true) | BB149 (if false)
BB5   <- [146]
  val?^ | miss    %5.0  = LdVar              eR    is, <env 0x55de28b56378>
  lgl$#-          %5.1  = Identical                %5.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %5.1 -> BB152 (if true) | BB153 (if false)
BB148   <- [137]
  lgl$#-          %148.0 = IsType                   %146.1 isA val?+
  void                    Branch                   %148.0 -> BB150 (if true) | BB151 (if false)
BB149   <- [137]
  void                    Nop                !     
  lgl$#-          %149.1 = %137.1
  dr              %149.2 = DeadBranchReached@0x55de2b5c6a30[Test#1]
  goto BB3
BB152   <- [5]
  prom-           %152.0 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p2 (!refl), e146.0
  val?            %152.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%152.0, "classRepresentation") e146.0   <lgl$->
  lgl$#-          %152.2 = IsType                   %152.1 isA lgl$-
  void                    Branch                   %152.2 -> BB154 (if true) | BB155 (if false)
BB153   <- [5]
  void                    Nop                !     
  val?^ | miss    %153.1 = %5.0
  dr              %153.2 = CallTarget@0x55de2b5c6a30[Call#1]
  goto BB3
BB150   <- [148]
  val?+           %150.0 = CastType           d     dn %146.1   <str$+>
  (int|real)$-    %150.1 = CallSafeBuiltin    wed   length(%150.0)    <int$->
  lgl$#-          %150.2 = IsType                   %150.1 isA int$-
  void                    Branch                   %150.2 -> BB156 (if true) | BB157 (if false)
BB151   <- [148]
  void                    Nop                !     
  val?            %151.1 = %146.1
  dr              %151.2 = Typecheck@0x55de2b5c6a30[Type#10]
  goto BB3
BB3   <- [149, 151, 153]
  val?^ | miss    %3.0  = Phi                      %149.1:BB149, %151.1:BB151, %153.1:BB153
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %149.2:BB149, %151.2:BB151, %153.2:BB153
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55de2be693a0+91: [%146.2], env=e146.0
  void                    Deopt              !v    %3.4, %3.3, %3.1
BB154   <- [152]
  lgl$-           %154.0 = CastType           d     dn %152.1
  lgl$#-          %154.1 = CheckTrueFalse     e     %154.0
  void                    Branch                   %154.1 -> BB9 (if true) | BB8 (if false)
BB155   <- [152]
  fs              %155.0 = FrameState         R     0x55de2be693a0+139: [%152.1], env=e146.0
  void                    Deopt              !v    %155.0, Typecheck@0x55de2b5c6a30[Type#4], %152.1   !
BB156   <- [150]
  int$-           %156.0 = CastType           d     dn %150.1
  lgl$-           %156.1 = Gt                 d     %156.0, 1L, elided   <lgl$->
  lgl$#-          %156.2 = CheckTrueFalse     e     %156.1
  void                    Branch                   %156.2 -> BB144 (if true) | BB140 (if false)
BB157   <- [150]
  fs              %157.0 = FrameState         R     0x55de2be693a0+358: [%150.1], env=e146.0
  void                    Deopt              !v    %157.0, Typecheck@0x55de2b5c6a30[Type#11], %150.1
BB9   <- [154]
  val?^ | miss    %9.0  = LdVar              eR    class1, e146.0
  val?            %9.1  = Force!<wrapped>    !v    %9.0, e146.0   <other>
  void                    StVar              lW    classDef1, %9.1, e146.0
  (cls|spec|blt)  %9.3  = LdFun              !v    @, <0x55de2854ebd8>, e146.0
  prom-           %9.4  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p3, e146.0
  prom-           %9.5  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p4, e146.0
  val?            %9.6  = Call               !v    %9.3(%9.4, %9.5) e146.0   <str$+>
  void                    StVar              lW    class1, %9.6, e146.0
  goto BB10
BB8   <- [154]
  (cls|spec|blt)  %8.0  = LdFun              !v    stop, e146.0
  fs              %8.1  = FrameState         R     0x55de2be693a0+155: [%8.0], env=e146.0
  void                    Deopt              !v    %8.1, DeadCall@0x55de2b5c6a30[Call#2], %8.0   !
BB144   <- [156]
  val?            %144.0 = Extract2_1D        wed   %150.0, 1L, elided   <val?_>
  void                    StVar              lW    class1, %144.0, e146.0
  goto BB141
BB140   <- [156]
  void                    Nop                !     
  goto BB141
BB10   <- [9, 160]
  lgl$-           %10.0 = Missing            eR    class2, e146.0
  lgl$#-          %10.1 = CheckTrueFalse     e     %10.0
  void                    Branch                   %10.1 -> BB81 (if true) | BB11 (if false)
BB141   <- [140, 144]
  val?^ | miss    %141.0 = LdVar              eR    getClassDef, <env 0x55de28b56378>
  lgl$#-          %141.1 = Identical                %141.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %141.1 -> BB160 (if true) | BB161 (if false)
BB81   <- [10]
  val?^ | miss    %81.0 = LdVar              eR    classDef1, e146.0
  val?            %81.1 = Force!<value>      !v    %81.0, e146.0   <other>
  lgl$-           %81.2 = Is                       %81.1, NULL
  lgl$#-          %81.3 = CheckTrueFalse     e     %81.2
  void                    Branch                   %81.3 -> BB136 (if true) | BB82 (if false)
BB11   <- [10]
  void                    StVar              lW    value, nil, e146.0
  val?^ | miss    %11.1 = LdVar              eR    is.character, e146.0
  lgl$#-          %11.2 = Identical                <blt is.character>, %11.1   <true>
  void                    Branch                   %11.2 -> BB158 (if true) | BB159 (if false)
BB160   <- [141]
  prom-           %160.0 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p27 (!refl), e146.0
  val?            %160.1 = StaticCall         !v    getClassDef[0x55de2ab25960](%160.0) e146.0   <(nil|other)>
  void                    StVar              lW    classDef1, %160.1, e146.0
  goto BB10
BB161   <- [141]
  fs              %161.0 = FrameState         R     0x55de2be693a0+453: [], env=e146.0
  void                    Deopt              !v    %161.0, CallTarget@0x55de2b5c6a30[Call#5], %141.0
BB136   <- [81]
  val?^ | miss    %136.0 = LdVar              eR    class1, e146.0
  void                    Visible            v     
  val?            %136.2 = Force!             !     %136.0, e146.0   <val?_>
  val?            %136.3 = %136.2
  goto BB61
BB82   <- [81]
  (cls|spec|blt)  %82.0 = LdFun              !v    @, <0x55de2854ebd8>, e146.0
  prom-           %82.1 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p22, e146.0
  prom-           %82.2 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p23, e146.0
  val?            %82.3 = Call               !v    %82.0(%82.1, %82.2) e146.0   <vec+>
  void                    StVar              lW    ext, %82.3, e146.0
  val?^ | miss    %82.5 = LdVar              eR    isTRUE, e146.0
  lgl$#-          %82.6 = Identical                %82.5, function(x) <(rir::DispatchTable*)0x55de2a40ca|...
  void                    Branch                   %82.6 -> BB162 (if true) | BB163 (if false)
BB158   <- [11]
  val?^ | miss    %158.0 = LdVar              eR    class2, e146.0
  val?            %158.1 = Force!<lazy>       !v    %158.0, e146.0   <str$+>
  lgl$#-          %158.2 = CallSafeBuiltin    wed   is.character(%158.1)    <lgl$->
  void                    Branch                   %158.2 -> BB76 (if true) | BB16 (if false)
BB159   <- [11]
  fs              %159.0 = FrameState         R     0x55de2be693a0+1206: [], env=e146.0
  void                    Deopt              !v    %159.0, DeadBranchReached@0x55de2b5c6a30[Test#7], %11.2   !
BB61   <- [74, 136, 60, 220, 234]
  val?            %61.0 = Phi                      %60.2:BB60, %74.1:BB74, %234.2:BB234, %220.5:BB220, %136.3:BB136
  val?            %61.1 = %61.0
  void                    Return             l     %61.1
BB162   <- [82]
  val?^ | miss    %162.0 = LdVar              eR    maybe, e146.0
  val?            %162.1 = Force!<value>      !v    %162.0, e146.0   <lgl$->
  val+            %162.2 = CallSafeBuiltin    wed   is.logical(%162.1)    <lgl$->
  lgl$#-          %162.3 = IsType                   %162.2 isA lgl$-
  void                    Branch                   %162.3 -> BB164 (if true) | BB165 (if false)
BB163   <- [82]
  fs              %163.0 = FrameState         R     0x55de2be693a0+612: [], env=e146.0
  void                    Deopt              !v    %163.0, CallTarget@0x55de2b5c6a30[Call#7], %82.5   !
BB76   <- [158]
  val?^ | miss    %76.0 = LdVar              eR    length, e146.0
  lgl$#-          %76.1 = Identical                <blt length>, %76.0   <true>
  void                    Branch                   %76.1 -> BB170 (if true) | BB171 (if false)
BB16   <- [158]
  void                    Nop                !     
  lgl$#-          %16.1 = %158.2
  goto BB17
BB164   <- [162]
  lgl$-           %164.0 = CastType           d     dn %162.2
  lgl$-           %164.1 = AsLogical                %164.0
  lgl$#-          %164.2 = Identical                %164.1, false
  void                    Branch                   %164.2 -> BB135 (if true) | BB87 (if false)
BB165   <- [162]
  void                    Nop                !     
  val+            %165.1 = %162.2
  dr              %165.2 = Typecheck@0x55de29b046d8[Type#2]
  goto BB85
BB170   <- [76]
  val?^ | miss    %170.0 = LdVar              eR    class2, e146.0
  val?            %170.1 = Force!<wrapped>    !v    %170.0, e146.0   <str$+>
  lgl$#-          %170.2 = IsType                   %170.1 isA val?+
  void                    Branch                   %170.2 -> BB174 (if true) | BB175 (if false)
BB171   <- [76]
  fs              %171.0 = FrameState         R     0x55de2be693a0+1297: [%158.2], env=e146.0
  void                    Deopt              !v    %171.0, DeadBranchReached@0x55de2b5c6a30[Test#8], %76.1   !
BB17   <- [16, 186]
  lgl$-           %17.0 = Phi                      %186.4:BB186, %16.1:BB16
  lgl$-           %17.1 = %17.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB21 (if true) | BB20 (if false)
BB135   <- [164]
  void                    Nop                !     
  lgl$-           %135.1 = %164.1
  goto BB90
BB87   <- [164]
  lgl$#-          %87.0 = IsType                   %162.1 isA lgl-
  void                    Branch                   %87.0 -> BB166 (if true) | BB167 (if false)
BB85   <- [165, 167]
  val?^ | miss    %85.0 = Phi                      %165.1:BB165, %167.1:BB167
  val?^ | miss    %85.1 = %85.0
  dr              %85.2 = Phi                      %165.2:BB165, %167.2:BB167
  dr              %85.3 = %85.2
  fs              %85.4 = FrameState         R     0x55de2be693a0+644: [], env=e146.0
  prom-           %85.5 = MkArg                    %162.1, extends[0x55de2cdf3de0]_p24 (!refl), e146.0
  val?~           %85.6 = CastType                 up %85.5
  env             e85.7 = (MkEnv)            l     x=%85.6, parent=R_BaseNamespace, context 0
  fs              %85.8 = FrameState         R     0x55de289a06d0+91: [%162.2], env=e85.7, next=%85.4
  void                    Deopt              !v    %85.8, %85.3, %85.1   !
BB174   <- [170]
  val?+           %174.0 = CastType           d     dn %170.1   <str$+>
  (int|real)$-    %174.1 = CallSafeBuiltin    wed   length(%174.0)    <int$->
  lgl$#-          %174.2 = IsType                   %174.1 isA int$-
  void                    Branch                   %174.2 -> BB186 (if true) | BB187 (if false)
BB175   <- [170]
  fs              %175.0 = FrameState         R     0x55de2be693a0+1378: [%158.2, <blt length>, %170.1], env=e146.0
  void                    Deopt              !v    %175.0, Typecheck@0x55de2b5c6a30[Type#50], %170.1   !
BB21   <- [17]
  val?^ | miss    %21.0 = LdVar              eR    .identC, e146.0
  lgl$#-          %21.1 = Identical                %21.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %21.1 -> BB172 (if true) | BB173 (if false)
BB20   <- [17]
  (cls|spec|blt)  %20.0 = LdFun              !v    is, e146.0
  fs              %20.1 = FrameState         R     0x55de2be693a0+1430: [%20.0], env=e146.0
  void                    Deopt              !v    %20.1, DeadCall@0x55de2b5c6a30[Call#15], %20.0   !
BB90   <- [135, 168]
  lgl$-           %90.0 = Phi                      %168.4:BB168, %135.1:BB135
  lgl$-           %90.1 = %90.0
  lgl$-           %90.2 = AsLogical                %90.1
  lgl$#-          %90.3 = Identical                %90.2, false
  void                    Branch                   %90.3 -> BB134 (if true) | BB93 (if false)
BB166   <- [87]
  lgl-            %166.0 = CastType           d     dn %162.1   <lgl$->
  (int|real)$-    %166.1 = CallSafeBuiltin    wed   length(%166.0)    <int$->
  lgl$#-          %166.2 = IsType                   %166.1 isA int$-
  void                    Branch                   %166.2 -> BB168 (if true) | BB169 (if false)
BB167   <- [87]
  void                    Nop                !     
  val?            %167.1 = %162.1
  dr              %167.2 = Typecheck@0x55de29b046d8[Type#4]
  goto BB85
BB186   <- [174]
  int$-           %186.0 = CastType           d     dn %174.1
  lgl$-           %186.1 = Eq                 d     %186.0, 1L, elided   <lgl$->
  lgl$-           %186.2 = AsLogical                %186.1
  lgl$-           %186.3 = LAnd                     %158.2, %186.2
  lgl$-           %186.4 = %186.3
  goto BB17
BB187   <- [174]
  fs              %187.0 = FrameState         R     0x55de2be693a0+1400: [%158.2, %174.1], env=e146.0
  void                    Deopt              !v    %187.0, Typecheck@0x55de2b5c6a30[Type#51], %174.1   !
BB172   <- [21]
  prom-           %172.0 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p5, e146.0
  prom-           %172.1 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p6, e146.0
  val?            %172.2 = StaticCall         !v    .identC[0x55de2c93e950](%172.0, %172.1) e146.0   <lgl$->
  lgl$#-          %172.3 = IsType                   %172.2 isA lgl$-
  void                    Branch                   %172.3 -> BB182 (if true) | BB183 (if false)
BB173   <- [21]
  fs              %173.0 = FrameState         R     0x55de2be693a0+1419: [%17.1], env=e146.0
  void                    Deopt              !v    %173.0, CallTarget@0x55de2b5c6a30[Call#18], %21.0   !
BB134   <- [90]
  void                    Nop                !     
  lgl$-           %134.1 = %90.2
  goto BB94
BB93   <- [90]
  lgl$#-          %93.0 = IsType                   %162.1 isA lgl$-
  void                    Branch                   %93.0 -> BB180 (if true) | BB181 (if false)
BB168   <- [166]
  int$-           %168.0 = CastType           d     dn %166.1
  lgl$-           %168.1 = Eq                 d     %168.0, 1L, elided   <lgl$->
  lgl$-           %168.2 = AsLogical                %168.1
  lgl$-           %168.3 = LAnd                     %164.1, %168.2
  lgl$-           %168.4 = %168.3
  goto BB90
BB169   <- [166]
  fs              %169.0 = FrameState         R     0x55de2be693a0+644: [], env=e146.0
  prom-           %169.1 = MkArg                    %166.0, extends[0x55de2cdf3de0]_p24 (!refl), e146.0
  val?~           %169.2 = CastType                 up %169.1
  env             e169.3 = (MkEnv)            l     x=%169.2, parent=R_BaseNamespace, context 0
  fs              %169.4 = FrameState         R     0x55de289a06d0+194: [%164.1, %166.1], env=e169.3, next=%169.0
  void                    Deopt              !v    %169.4, Typecheck@0x55de29b046d8[Type#5], %166.1   !
BB182   <- [172]
  lgl$-           %182.0 = CastType           d     dn %172.2
  lgl$-           %182.1 = AsLogical                %182.0
  lgl$#-          %182.2 = Identical                %182.1, true
  void                    Branch                   %182.2 -> BB75 (if true) | BB24 (if false)
BB183   <- [172]
  void                    Nop                !     
  val?            %183.1 = %172.2
  dr              %183.2 = Typecheck@0x55de2b5c6a30[Type#62]
  goto BB22
BB94   <- [134, 180]
  lgl$-           %94.0 = Phi                      %180.5:BB180, %134.1:BB134
  lgl$-           %94.1 = %94.0
  lgl$-           %94.2 = AsLogical                %94.1
  lgl$#-          %94.3 = Identical                %94.2, false
  void                    Branch                   %94.3 -> BB133 (if true) | BB95 (if false)
BB180   <- [93]
  lgl$-           %180.0 = CastType           d     dn %162.1
  lgl$-           %180.1 = CallSafeBuiltin    wed   is.na(%180.0)    <lgl$->
  lgl$-           %180.2 = Not                d     %180.1, elided
  lgl$-           %180.3 = AsLogical                %180.2
  lgl$-           %180.4 = LAnd                     %90.2, %180.3
  lgl$-           %180.5 = %180.4
  goto BB94
BB181   <- [93]
  fs              %181.0 = FrameState         R     0x55de2be693a0+644: [], env=e146.0
  prom-           %181.1 = MkArg                    %162.1, extends[0x55de2cdf3de0]_p24 (!refl), e146.0
  val?~           %181.2 = CastType                 up %181.1
  env             e181.3 = (MkEnv)            l     x=%181.2, parent=R_BaseNamespace, context 0
  fs              %181.4 = FrameState         R     0x55de289a06d0+213: [%90.1], env=e181.3, next=%181.0
  void                    Deopt              !v    %181.4, Typecheck@0x55de29b046d8[Type#8], %162.1   !
BB75   <- [182]
  void                    Nop                !     
  lgl$-           %75.1 = %182.1
  goto BB27
BB24   <- [182]
  val?^ | miss    %24.0 = LdVar              eR    .identC, e146.0
  lgl$#-          %24.1 = Identical                %24.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %24.1 -> BB188 (if true) | BB189 (if false)
BB22   <- [183, 189]
  val?^ | miss    %22.0 = Phi                      %183.1:BB183, %189.1:BB189
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %183.2:BB183, %189.2:BB189
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55de2be693a0+1627: [%172.2], env=e146.0
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB133   <- [94]
  void                    Nop                !     
  lgl$-           %133.1 = %94.2
  goto BB96
BB95   <- [94]
  lgl$-           %95.0 = AsLogical          e     %162.1
  lgl$-           %95.1 = LAnd                     %94.2, %95.0
  lgl$-           %95.2 = %95.1
  goto BB96
BB27   <- [75, 198]
  lgl$-           %27.0 = Phi                      %198.3:BB198, %75.1:BB75
  lgl$-           %27.1 = %27.0
  lgl$#-          %27.2 = CheckTrueFalse     e     %27.1
  void                    Branch                   %27.2 -> BB74 (if true) | BB28 (if false)
BB188   <- [24]
  prom-           %188.0 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p7, e146.0
  val?            %188.1 = StaticCall         !v    .identC[0x55de34b3fd40](%188.0, "ANY") e146.0   <lgl$->
  lgl$#-          %188.2 = IsType                   %188.1 isA lgl$-
  void                    Branch                   %188.2 -> BB198 (if true) | BB199 (if false)
BB189   <- [24]
  void                    Nop                !     
  val?^ | miss    %189.1 = %24.0
  dr              %189.2 = CallTarget@0x55de2b5c6a30[Call#19]
  goto BB22
BB96   <- [133, 95]
  lgl$-           %96.0 = Phi                      %95.2:BB95, %133.1:BB133
  lgl$-           %96.1 = %96.0
  lgl$-           %96.2 = Not                d     %96.1, elided
  lgl$-           %96.3 = AsLogical                %96.2
  lgl$#-          %96.4 = Identical                %96.3, false
  void                    Branch                   %96.4 -> BB132 (if true) | BB99 (if false)
BB74   <- [27]
  void                    Visible            v     
  lgl$#-          %74.1 = true
  goto BB61
BB28   <- [27]
  val?^ | miss    %28.0 = LdVar              eR    classDef1, e146.0
  val?            %28.1 = Force!<value>      !v    %28.0, e146.0   <other>
  lgl$-           %28.2 = Is                       %28.1, NULL
  lgl$-           %28.3 = Not                d     %28.2, elided
  lgl$-           %28.4 = AsLogical                %28.3
  lgl$#-          %28.5 = Identical                %28.4, false
  void                    Branch                   %28.5 -> BB73 (if true) | BB31 (if false)
BB198   <- [188]
  lgl$-           %198.0 = CastType           d     dn %188.1
  lgl$-           %198.1 = AsLogical                %198.0
  lgl$-           %198.2 = LOr                      %182.1, %198.1
  lgl$-           %198.3 = %198.2
  goto BB27
BB199   <- [188]
  fs              %199.0 = FrameState         R     0x55de2be693a0+1676: [%182.1, %188.1], env=e146.0
  void                    Deopt              !v    %199.0, Typecheck@0x55de2b5c6a30[Type#64], %188.1   !
BB132   <- [96]
  void                    Nop                !     
  lgl$-           %132.1 = %96.3
  goto BB102
BB99   <- [96]
  val?^ | miss    %99.0 = LdVar              eR    length, e146.0
  lgl$#-          %99.1 = Identical                <blt length>, %99.0   <true>
  void                    Branch                   %99.1 -> BB176 (if true) | BB177 (if false)
BB73   <- [28]
  void                    Nop                !     
  lgl$-           %73.1 = %28.4
  goto BB38
BB31   <- [28]
  val?^ | miss    %31.0 = LdVar              eR    %in%, e146.0
  lgl$#-          %31.1 = Identical                %31.0, function(x, table) <(rir::DispatchTable*)0x55d|...
  void                    Branch                   %31.1 -> BB190 (if true) | BB191 (if false)
BB102   <- [132, 184]
  lgl$-           %102.0 = Phi                      %184.4:BB184, %132.1:BB132
  lgl$-           %102.1 = %102.0
  lgl$#-          %102.2 = CheckTrueFalse     e     %102.1
  void                    Branch                   %102.2 -> BB117 (if true) | BB105 (if false)
BB176   <- [99]
  val?^ | miss    %176.0 = LdVar              eR    ext, e146.0
  lgl$#-          %176.1 = IsType                   %176.0 isA val?~+ | miss
  void                    Branch                   %176.1 -> BB178 (if true) | BB179 (if false)
BB177   <- [99]
  void                    Nop                !     
  lgl$#-          %177.1 = %99.1
  dr              %177.2 = DeadBranchReached@0x55de2b5c6a30[Test#3]
  goto BB97
BB38   <- [73, 242]
  lgl$-           %38.0 = Phi                      %242.4:BB242, %73.1:BB73
  lgl$-           %38.1 = %38.0
  lgl$#-          %38.2 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.2 -> BB68 (if true) | BB41 (if false)
BB190   <- [31]
  prom-           %190.0 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p8, e146.0
  prom-           %190.1 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p9, e146.0
  val?^           %190.2 = CastType                 up %190.1
  val?^           %190.3 = CastType                 up %190.0
  env             e190.4 = MkEnv              l     x=%190.3, table=%190.2, parent=R_BaseNamespace, context 0
  prom-           %190.5 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p29, e190.4
  val?^           %190.6 = CastType                 up %190.5
  val?^ | miss    %190.7 = LdVar              eR    class2, e146.0
  val?            %190.8 = Force!<wrapped>    !v    %190.7, e146.0   <str$+>
  prom-           %190.9 = MkArg                    %190.8, extends[0x55de2cdf3de0]_p8 (!refl), e146.0
  val?~           %190.10 = CastType                 up %190.9
  void                    StArg              lW    x, %190.10, e190.4
  prom-           %190.12 = MkArg                    %190.8, extends[0x55de2cdf3de0]_p28 (!refl), e190.4
  val?~           %190.13 = CastType                 up %190.12
  env             e190.14 = (MkEnv)            l     x=%190.13, table=%190.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %190.15 = IsEnvStub          R     , e190.14
  void                    Branch                   %190.15 -> BB196 (if true) | BB197 (if false)
BB191   <- [31]
  fs              %191.0 = FrameState         R     0x55de2be693a0+1710: [%28.1], env=e146.0
  void                    Deopt              !v    %191.0, CallTarget@0x55de2b5c6a30[Call#20], %31.0   !
BB117   <- [102]
  val?^ | miss    %117.0 = LdVar              eR    vapply, e146.0
  lgl$#-          %117.1 = Identical                %117.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Branch                   %117.1 -> BB192 (if true) | BB193 (if false)
BB105   <- [102]
  void                    Nop                !     
  goto BB106
BB178   <- [176]
  val?~+ | miss   %178.0 = CastType           d     dn %176.0
  val?+           %178.1 = Force!<value>            %178.0,    <vec+>
  (int|real)$-    %178.2 = CallSafeBuiltin    wed   length(%178.1)    <int$->
  lgl$#-          %178.3 = IsType                   %178.2 isA int$-
  void                    Branch                   %178.3 -> BB184 (if true) | BB185 (if false)
BB179   <- [176]
  void                    Nop                !     
  val?^ | miss    %179.1 = %176.0
  dr              %179.2 = Typecheck@0x55de2b5c6a30[Type#25]
  goto BB97
BB97   <- [177, 179]
  val?^ | miss    %97.0 = Phi                      %177.1:BB177, %179.1:BB179
  val?^ | miss    %97.1 = %97.0
  dr              %97.2 = Phi                      %177.2:BB177, %179.2:BB179
  dr              %97.3 = %97.2
  fs              %97.4 = FrameState         R     0x55de2be693a0+650: [%96.2], env=e146.0
  void                    Deopt              !v    %97.4, %97.3, %97.1   !
BB68   <- [38]
  (cls|spec|blt)  %68.0 = LdFun              !v    @, <0x55de2854ebd8>, e146.0
  prom-           %68.1 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p20, e146.0
  prom-           %68.2 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p21, e146.0
  val?            %68.3 = Call               !v    %68.0(%68.1, %68.2) e146.0   <vec+>
  lgl$#-          %68.4 = IsType                   %68.3 isA val+   <true>
  void                    Branch                   %68.4 -> BB202 (if true) | BB203 (if false)
BB41   <- [38]
  val?^ | miss    %41.0 = LdVar              eR    getClassDef, e146.0
  lgl$#-          %41.1 = Identical                %41.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %41.1 -> BB210 (if true) | BB211 (if false)
BB196   <- [190]
  val?            %196.0 = Force!<lazy>       !vL   %190.2, e190.14   <val?->
  prom-           %196.1 = MkArg                    %196.0, extends[0x55de2cdf3de0]_p29 (!refl), e190.4
  val?~           %196.2 = CastType                 up %196.1
  void                    StArg              lWd   table, %196.2, e190.14
  lgl$#-          %196.4 = IsType                   %196.0 isA val?+
  lgl$#-          %196.5 = IsEnvStub          R     , e190.14
  void                    Branch                   %196.5 -> BB204 (if true) | BB205 (if false)
BB197   <- [190]
  fs              %197.0 = FrameState         R     0x55de2be693a0+1765: [%28.4], env=e146.0
  fs              %197.1 = FrameState         R     0x55de28b7c320+54: [], env=e190.4, next=%197.0
  env             e197.2 = (MkEnv)            l     x=%190.13, table=%190.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %197.3 = FrameState         R     0x55de28d63d40+9: [%190.8], env=e197.2, next=%197.1
  void                    Deopt              !v    %197.3, EnvStubMaterialized@0x55de28db6cb0[Call#unknown], e190.14   !
BB192   <- [117]
  prom-           %192.0 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p25, e146.0
  cls             %192.1 = MkCls                    extends@Prom(26)0, e146.0
  prom-           %192.2 = MkArg                    %192.1, extends[0x55de2cdf3de0]_p26 (!refl), e146.0
  ct              %192.3 = PushContext        lCL   %192.0, %192.2, na-lgl, vapply(ext, function(<lst obj=R_MissingArg>, i|..., function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|..., e146.0
  cls~            %192.4 = CastType                 up %192.2
  val?^           %192.5 = CastType                 up %192.0
  env             e192.6 = MkEnv              l     X=%192.5, FUN=%192.4, FUN.VALUE=na-lgl, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %192.7 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p30 (!refl), e192.6
  val?            %192.8 = StaticCall         !v    match.fun[0x55de2fdc8830](%192.7) e192.6   <(cls|blt)>
  void                    StVar              lW    FUN, %192.8, e192.6
  val?^ | miss    %192.10 = LdVar              eR    is.vector, e192.6
  lgl$#-          %192.11 = Identical                %192.10, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %192.11 -> BB194 (if true) | BB195 (if false)
BB193   <- [117]
  fs              %193.0 = FrameState         R     0x55de2be693a0+767: [%102.1], env=e146.0
  void                    Deopt              !v    %193.0, CallTarget@0x55de2b5c6a30[Call#9], %117.0   !
BB106   <- [105, 238]
  val?^ | miss    %106.0 = LdVar              eR    fullInfo, e146.0
  val?            %106.1 = Force!<lazy>       !v    %106.0, e146.0   <lgl$->
  lgl$#-          %106.2 = CheckTrueFalse     we    %106.1
  void                    Branch                   %106.2 -> BB114 (if true) | BB109 (if false)
BB184   <- [178]
  int$-           %184.0 = CastType           d     dn %178.2
  lgl$-           %184.1 = Gt                 d     %184.0, 0, elided   <lgl$->
  lgl$-           %184.2 = AsLogical                %184.1
  lgl$-           %184.3 = LAnd                     %96.3, %184.2
  lgl$-           %184.4 = %184.3
  goto BB102
BB185   <- [178]
  fs              %185.0 = FrameState         R     0x55de2be693a0+748: [%96.3, %178.2], env=e146.0
  void                    Deopt              !v    %185.0, Typecheck@0x55de2b5c6a30[Type#26], %178.2   !
BB202   <- [68]
  val?^ | miss    %202.0 = LdVar              eR    class2, e146.0
  val?            %202.1 = Force!<wrapped>    !v    %202.0, e146.0   <str$+>
  lgl$#-          %202.2 = IsType                   %202.1 isA val?+
  lgl$#-          %202.3 = IsType                   %68.3 isA val?+
  void                    Branch                   %202.3 -> BB212 (if true) | BB213 (if false)
BB203   <- [68]
  fs              %203.0 = FrameState         R     0x55de2be693a0+1866: [%68.3], env=e146.0
  void                    Deopt              !v    %203.0, DeadBranchReached@0x55de2b5c6a30[Test#10], %68.4   !
BB210   <- [41]
  prom-           %210.0 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p13, e146.0
  val?            %210.1 = StaticCall         !v    getClassDef[0x55de2ab25960](%210.0) e146.0   <other>
  void                    StVar              lW    classDef2, %210.1, e146.0
  goto BB42
BB211   <- [41]
  fs              %211.0 = FrameState         R     0x55de2be693a0+1772: [%38.1], env=e146.0
  void                    Deopt              !v    %211.0, CallTarget@0x55de2b5c6a30[Call#23], %41.0   !
BB204   <- [196]
  lgl$#-          %204.0 = IsType                   %190.8 isA val?+
  void                    Branch                   %204.0 -> BB214 (if true) | BB215 (if false)
BB205   <- [196]
  void                    Nop                !     
  env             e205.1 = e190.14
  dr              %205.2 = EnvStubMaterialized@0x55de28db6cb0[Call#unknown]
  goto BB34
BB194   <- [192]
  val?^ | miss    %194.0 = LdVar              eR    X, e192.6
  val?            %194.1 = Force!<lazy>       !v    %194.0, e192.6   <val?>
  lgl$#-          %194.2 = CallSafeBuiltin    wed   is.vector(%194.1, "any")    <lgl$->
  lgl$#-          %194.3 = Not                d     %194.2, elided
  void                    Branch                   %194.2 -> BB131 (if true) | BB122 (if false)
BB195   <- [192]
  fs              %195.0 = FrameState         R     0x55de2be693a0+820: [], env=e146.0
  fs              %195.1 = FrameState         R     0x55de2a50ef70+46: [], env=e192.6, next=%195.0
  void                    Deopt              !v    %195.1, CallTarget@0x55de2a4f5340[Call#1], %192.10   !
BB114   <- [106]
  val?^ | miss    %114.0 = LdVar              eR    ext !upd, e146.0
  val?            %114.1 = Force!             !v    %114.0, e146.0   <val?_>
  val?^ | miss    %114.2 = LdVar              eR    class1, e146.0
  val?            %114.3 = Force!             !v    %114.2, e146.0   <val?_>
  lgl$#-          %114.4 = IsType                   %114.3 isA val?+
  lgl$#-          %114.5 = IsType                   %114.1 isA val?+
  void                    Branch                   %114.5 -> BB208 (if true) | BB209 (if false)
BB109   <- [106]
  val?^ | miss    %109.0 = LdVar              eR    c, e146.0
  lgl$#-          %109.1 = Identical                <blt c>, %109.0   <true>
  void                    Branch                   %109.1 -> BB200 (if true) | BB201 (if false)
BB212   <- [202]
  val?+           %212.0 = CastType           d     dn %68.3   <vec+>
  void                    Branch                   %202.2 -> BB224 (if true) | BB225 (if false)
BB213   <- [202]
  void                    Nop                !     
  val?            %213.1 = %68.3
  dr              %213.2 = Typecheck@0x55de2b5c6a30[Type#76]
  goto BB71
BB42   <- [210, 224]
  val?^ | miss    %42.0 = LdVar              eR    value, e146.0
  val?            %42.1 = Force!<value>      !v    %42.0, e146.0   <(nil|other)>
  lgl$-           %42.2 = Is                       %42.1, NULL
  lgl$#-          %42.3 = CheckTrueFalse     e     %42.2
  void                    Branch                   %42.3 -> BB65 (if true) | BB45 (if false)
BB214   <- [204]
  val?+           %214.0 = CastType           d     dn %190.8   <(int|str)+>
  void                    Branch                   %196.4 -> BB226 (if true) | BB227 (if false)
BB215   <- [204]
  void                    Nop                !     
  val?            %215.1 = %190.8
  dr              %215.2 = Typecheck@0x55de28db6cb0[Type#0]
  goto BB34
BB34   <- [205, 215, 227]
  val?^ | miss    %34.0 = Phi                      e205.1:BB205, %215.1:BB215, %227.1:BB227
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %205.2:BB205, %215.2:BB215, %227.2:BB227
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x55de2be693a0+1765: [%28.4], env=e146.0
  fs              %34.5 = FrameState         R     0x55de28b7c320+54: [], env=e190.4, next=%34.4
  fs              %34.6 = FrameState         R     0x55de28d63d40+23: [%190.8, %196.0], env=e190.14, next=%34.5
  void                    Deopt              !v    %34.6, %34.3, %34.1   !
BB131   <- [194]
  val?^ | miss    %131.0 = LdVar              eR    is.object, e192.6
  lgl$#-          %131.1 = Identical                <blt is.object>, %131.0   <true>
  void                    Branch                   %131.1 -> BB216 (if true) | BB217 (if false)
BB122   <- [194]
  void                    Nop                !     
  lgl$#-          %122.1 = %194.3
  goto BB123
BB208   <- [114]
  val?+           %208.0 = CastType           d     dn %114.1   <val?_>
  void                    Branch                   %114.4 -> BB220 (if true) | BB221 (if false)
BB209   <- [114]
  void                    Nop                !     
  val?            %209.1 = %114.1
  dr              %209.2 = Typecheck@0x55de2b5c6a30[Type#43]
  goto BB115
BB200   <- [109]
  val?^ | miss    %200.0 = LdVar              eR    class1, e146.0
  val?            %200.1 = Force!<wrapped>    !v    %200.0, e146.0   <str$+>
  val?^ | miss    %200.2 = LdVar              eR    names, e146.0
  lgl$#-          %200.3 = Identical                <blt names>, %200.2   <true>
  void                    Branch                   %200.3 -> BB206 (if true) | BB207 (if false)
BB201   <- [109]
  fs              %201.0 = FrameState         R     0x55de2be693a0+924: [%106.2], env=e146.0
  void                    Deopt              !v    %201.0, DeadBranchReached@0x55de2b5c6a30[Test#5], %109.1   !
BB224   <- [212]
  val?+           %224.0 = CastType           d     dn %202.1   <str$+>
  val?            %224.1 = Extract2_1D        wed   %212.0, %224.0, elided   <other>
  void                    StVar              lW    value, %224.1, e146.0
  goto BB42
BB225   <- [212]
  void                    Nop                !     
  val?            %225.1 = %202.1
  dr              %225.2 = Typecheck@0x55de2b5c6a30[Type#78]
  goto BB71
BB71   <- [213, 225]
  val?^ | miss    %71.0 = Phi                      %213.1:BB213, %225.1:BB225
  val?^ | miss    %71.1 = %71.0
  dr              %71.2 = Phi                      %213.2:BB213, %225.2:BB225
  dr              %71.3 = %71.2
  fs              %71.4 = FrameState         R     0x55de2be693a0+1911: [%68.3, %202.1], env=e146.0
  void                    Deopt              !v    %71.4, %71.3, %71.1   !
BB65   <- [42]
  val?^ | miss    %65.0 = LdVar              eR    possibleExtends, e146.0
  lgl$#-          %65.1 = Identical                %65.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %65.1 -> BB222 (if true) | BB223 (if false)
BB45   <- [42]
  void                    Nop                !     
  goto BB46
BB226   <- [214]
  val?+           %226.0 = CastType           d     dn %196.0   <val?->
  val+            %226.1 = CallSafeBuiltin    wed   match(%214.0, %226.0, 0L, nil)    <int->
  lgl$#-          %226.2 = IsType                   %226.1 isA int-
  void                    Branch                   %226.2 -> BB242 (if true) | BB243 (if false)
BB227   <- [214]
  void                    Nop                !     
  val?            %227.1 = %196.0
  dr              %227.2 = Typecheck@0x55de28db6cb0[Type#1]
  goto BB34
BB216   <- [131]
  val?^ | miss    %216.0 = LdVar              eR    X, e192.6
  val?            %216.1 = Force!<wrapped>    !v    %216.0, e192.6   <val?+>
  lgl$#-          %216.2 = CallSafeBuiltin    wed   is.object(%216.1)    <lgl$->
  lgl$-           %216.3 = LOr                      %194.3, %216.2
  lgl$-           %216.4 = %216.3
  goto BB123
BB217   <- [131]
  fs              %217.0 = FrameState         R     0x55de2be693a0+820: [], env=e146.0
  fs              %217.1 = FrameState         R     0x55de2a50ef70+78: [], env=e192.6, next=%217.0
  prom-           %217.2 = MkArg                    %194.1, extends[0x55de2cdf3de0]_p32 (!refl), e192.6
  val?~           %217.3 = CastType                 up %217.2
  env             e217.4 = (MkEnv)            l     mode(miss)="any", x=%217.3, parent=R_BaseNamespace, context 0
  fs              %217.5 = FrameState         R     0x55de2a3f0820+41: [%194.2], env=e217.4, next=%217.1
  void                    Deopt              !v    %217.5, DeadBranchReached@0x55de2a4f5340[Test#0], %131.1   !
BB123   <- [122, 216]
  lgl$-           %123.0 = Phi                      %216.4:BB216, %122.1:BB122
  lgl$-           %123.1 = %123.0
  lgl$#-          %123.2 = CheckTrueFalse     e     %123.1
  void                    Branch                   %123.2 -> BB130 (if true) | BB126 (if false)
BB220   <- [208]
  val?+           %220.0 = CastType           d     dn %114.3   <val?_>
  val?+           %220.1 = Subassign2_1D      wed   true, %208.0, %220.0, elided   <val?_>
  void                    StVar              lW    ext, %220.1, e146.0
  val+            %220.3 = ChkMissing         e     %220.1
  void                    Visible            v     
  val?+           %220.5 = %220.1
  goto BB61
BB221   <- [208]
  void                    Nop                !     
  val?            %221.1 = %114.3
  dr              %221.2 = Typecheck@0x55de2b5c6a30[Type#44]
  goto BB115
BB115   <- [209, 221]
  val?^ | miss    %115.0 = Phi                      %209.1:BB209, %221.1:BB221
  val?^ | miss    %115.1 = %115.0
  dr              %115.2 = Phi                      %209.2:BB209, %221.2:BB221
  dr              %115.3 = %115.2
  fs              %115.4 = FrameState         R     0x55de2be693a0+1161: [true, %114.1, %114.3], env=e146.0
  void                    Deopt              !v    %115.4, %115.3, %115.1   !
BB206   <- [200]
  val?^ | miss    %206.0 = LdVar              eR    ext, e146.0
  lgl$#-          %206.1 = IsType                   %206.0 isA val?~+ | miss
  void                    Branch                   %206.1 -> BB218 (if true) | BB219 (if false)
BB207   <- [200]
  void                    Nop                !     
  lgl$#-          %207.1 = %200.3
  dr              %207.2 = DeadBranchReached@0x55de2b5c6a30[Test#6]
  goto BB110
BB222   <- [65]
  prom-           %222.0 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p16, e146.0
  prom-           %222.1 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p17, e146.0
  prom-           %222.2 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p18, e146.0
  prom-           %222.3 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p19, e146.0
  val?            %222.4 = StaticCall         !v    possibleExtends[0x55de30694ba0](%222.0, %222.1, %222.2, %222.3) e146.0   <lgl$->
  lgl$#-          %222.5 = IsType                   %222.4 isA lgl$-
  void                    Branch                   %222.5 -> BB236 (if true) | BB237 (if false)
BB223   <- [65]
  fs              %223.0 = FrameState         R     0x55de2be693a0+1941: [%42.1], env=e146.0
  void                    Deopt              !v    %223.0, CallTarget@0x55de2b5c6a30[Call#25], %65.0   !
BB46   <- [45, 236]
  val?^ | miss    %46.0 = LdVar              eR    fullInfo, e146.0
  val?            %46.1 = Force!<lazy>       !v    %46.0, e146.0   <lgl$->
  lgl$#-          %46.2 = CheckTrueFalse     we    %46.1
  void                    Branch                   %46.2 -> BB64 (if true) | BB49 (if false)
BB242   <- [226]
  int-            %242.0 = CastType           d     dn %226.1
  lgl-            %242.1 = Gt                 wed   %242.0, 0L, elided   <lgl->
  lgl$-           %242.2 = AsLogical                %242.1
  lgl$-           %242.3 = LAnd                     %28.4, %242.2
  lgl$-           %242.4 = %242.3
  goto BB38
BB243   <- [226]
  fs              %243.0 = FrameState         R     0x55de2be693a0+1765: [%28.4], env=e146.0
  fs              %243.1 = FrameState         R     0x55de28b7c320+54: [], env=e190.4, next=%243.0
  fs              %243.2 = FrameState         R     0x55de28d63d40+69: [%226.1], env=e190.14, next=%243.1
  void                    Deopt              !v    %243.2, Typecheck@0x55de29bae688[Type#2], %226.1   !
BB130   <- [123]
  val?^ | miss    %130.0 = LdVar              eR    as.list, e192.6
  lgl$#-          %130.1 = Identical                %130.0, function(x, ...) <(rir::DispatchTable*)0x55de2|...
  void                    Branch                   %130.1 -> BB228 (if true) | BB229 (if false)
BB126   <- [123]
  void                    Nop                !     
  goto BB127
BB218   <- [206]
  val?~+ | miss   %218.0 = CastType           d     dn %206.0
  val?+           %218.1 = Force!<value>            %218.0,    <vec+>
  val+            %218.2 = CallSafeBuiltin    wed   names(%218.1)    <str->
  lgl$#-          %218.3 = IsType                   %200.1 isA val?+
  void                    Branch                   %218.3 -> BB234 (if true) | BB235 (if false)
BB219   <- [206]
  void                    Nop                !     
  val?^ | miss    %219.1 = %206.0
  dr              %219.2 = Typecheck@0x55de2b5c6a30[Type#40]
  goto BB110
BB110   <- [207, 219]
  val?^ | miss    %110.0 = Phi                      %207.1:BB207, %219.1:BB219
  val?^ | miss    %110.1 = %110.0
  dr              %110.2 = Phi                      %207.2:BB207, %219.2:BB219
  dr              %110.3 = %110.2
  fs              %110.4 = FrameState         R     0x55de2be693a0+1003: [<blt c>, %200.1], env=e146.0
  void                    Deopt              !v    %110.4, %110.3, %110.1   !
BB236   <- [222]
  lgl$-           %236.0 = CastType           d     dn %222.4
  void                    StVar              lW    value, %236.0, e146.0
  goto BB46
BB237   <- [222]
  fs              %237.0 = FrameState         R     0x55de2be693a0+2009: [%222.4], env=e146.0
  void                    Deopt              !v    %237.0, Typecheck@0x55de2b5c6a30[Type#85], %222.4   !
BB64   <- [46]
  val?^ | miss    %64.0 = LdVar              eR    value, e146.0
  void                    Visible            v     
  val?            %64.2 = Force!<value>      !     %64.0, e146.0   <other>
  val?            %64.3 = %64.2
  goto BB60
BB49   <- [46]
  val?^ | miss    %49.0 = LdVar              eR    is.logical, e146.0
  lgl$#-          %49.1 = Identical                <blt is.logical>, %49.0   <true>
  void                    Branch                   %49.1 -> BB240 (if true) | BB241 (if false)
BB228   <- [130]
  val?^ | miss    %228.0 = LdVar              eR    X, e192.6
  val?            %228.1 = Force!<wrapped>    !v    %228.0, e192.6   <vec>
  val?            %228.2 = StaticCall         !v    as.list[0x55de2fa15c70](%228.1) { 0 } e192.6   <vec>
  void                    StVar              lW    X, %228.2, e192.6
  goto BB127
BB229   <- [130]
  fs              %229.0 = FrameState         R     0x55de2be693a0+820: [], env=e146.0
  fs              %229.1 = FrameState         R     0x55de2a50ef70+189: [%123.1], env=e192.6, next=%229.0
  void                    Deopt              !v    %229.1, CallTarget@0x55de2a4f5340[Call#3], %130.0   !
BB127   <- [126, 228]
  (cls|spec|blt)  %127.0 = LdFun              !v    .Internal, <0x55de2854e698>, e192.6
  prom-           %127.1 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p33, e192.6
  val?            %127.2 = Call               !v    %127.0(%127.1) e192.6   <val?+>
  val?            %127.3 = PopContext         C     %127.2, %192.3   <lgl+>
  void                    StVar              lW    noTest, %127.3, e146.0
  val?^ | miss    %127.5 = LdVar              eR    ext, e146.0
  lgl$#-          %127.6 = IsType                   %127.5 isA val?~+ | miss
  void                    Branch                   %127.6 -> BB230 (if true) | BB231 (if false)
BB234   <- [218]
  val?+           %234.0 = CastType           d     dn %200.1   <str$+>
  val+            %234.1 = CallSafeBuiltin    vwed  c(%234.0, %218.2)    <str->
  val+            %234.2 = %234.1
  goto BB61
BB235   <- [218]
  fs              %235.0 = FrameState         R     0x55de2be693a0+1099: [<blt c>, %200.1, %218.2], env=e146.0
  void                    Deopt              !v    %235.0, Typecheck@0x55de2b5c6a30[Type#38], %200.1   !
BB60   <- [64, 59]
  val?            %60.0 = Phi                      %59.2:BB59, %64.3:BB64
  val?            %60.1 = %60.0
  val?            %60.2 = %60.1
  goto BB61
BB240   <- [49]
  val?^ | miss    %240.0 = LdVar              eR    value, e146.0
  val?            %240.1 = Force!<value>      !v    %240.0, e146.0   <(lgl|other)>
  val+            %240.2 = CallSafeBuiltin    wed   is.logical(%240.1)    <lgl$->
  lgl$#-          %240.3 = IsType                   %240.2 isA lgl$-
  void                    Branch                   %240.3 -> BB244 (if true) | BB245 (if false)
BB241   <- [49]
  fs              %241.0 = FrameState         R     0x55de2be693a0+2038: [%46.2], env=e146.0
  void                    Deopt              !v    %241.0, DeadBranchReached@0x55de2b5c6a30[Test#11], %49.1   !
BB230   <- [127]
  val?~+ | miss   %230.0 = CastType           d     dn %127.5
  val?+           %230.1 = Force!<value>            %230.0,    <vec+>
  lgl$#-          %230.2 = IsType                   %230.1 isA val+   <true>
  void                    Branch                   %230.2 -> BB232 (if true) | BB233 (if false)
BB231   <- [127]
  void                    Nop                !     
  val?^ | miss    %231.1 = %127.5
  dr              %231.2 = Typecheck@0x55de2b5c6a30[Type#30]
  goto BB128
BB244   <- [240]
  lgl$-           %244.0 = CastType           d     dn %240.2
  lgl$#-          %244.1 = CheckTrueFalse     e     %244.0
  void                    Branch                   %244.1 -> BB63 (if true) | BB52 (if false)
BB245   <- [240]
  void                    Nop                !     
  val+            %245.1 = %240.2
  dr              %245.2 = Typecheck@0x55de2b5c6a30[Type#89]
  goto BB50
BB232   <- [230]
  val             %232.0 = ChkMissing         e     %127.3
  lgl$#-          %232.1 = IsType                   %232.0 isA lgl+
  void                    Branch                   %232.1 -> BB238 (if true) | BB239 (if false)
BB233   <- [230]
  void                    Nop                !     
  lgl$#-          %233.1 = %230.2
  dr              %233.2 = DeadBranchReached@0x55de2b5c6a30[Test#4]
  goto BB128
BB128   <- [231, 233, 239]
  val?^ | miss    %128.0 = Phi                      %231.1:BB231, %233.1:BB233, %239.1:BB239
  val?^ | miss    %128.1 = %128.0
  dr              %128.2 = Phi                      %231.2:BB231, %233.2:BB233, %239.2:BB239
  dr              %128.3 = %128.2
  fs              %128.4 = FrameState         R     0x55de2be693a0+834: [], env=e146.0
  void                    Deopt              !v    %128.4, %128.3, %128.1   !
BB63   <- [244]
  val?^ | miss    %63.0 = LdVar              eR    value, e146.0
  lgl$#-          %63.1 = IsType                   %63.0 isA lgl$-
  void                    Branch                   %63.1 -> BB246 (if true) | BB247 (if false)
BB52   <- [244]
  (cls|spec|blt)  %52.0 = LdFun              !v    @, <0x55de2854ebd8>, e146.0
  prom-           %52.1 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p14, e146.0
  prom-           %52.2 = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p15, e146.0
  val?            %52.3 = Call               !v    %52.0(%52.1, %52.2) e146.0   <lgl$->
  lgl$#-          %52.4 = IsType                   %52.3 isA lgl$-
  void                    Branch                   %52.4 -> BB248 (if true) | BB249 (if false)
BB50   <- [245, 247]
  val?^ | miss    %50.0 = Phi                      %245.1:BB245, %247.1:BB247
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %245.2:BB245, %247.2:BB247
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55de2be693a0+2134: [%240.2], env=e146.0
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB238   <- [232]
  lgl+            %238.0 = CastType           d     dn %232.0
  val?            %238.1 = Extract1_1D        wed   %230.1, %238.0, elided   <vec+>
  void                    StVar              lW    ext, %238.1, e146.0
  goto BB106
BB239   <- [232]
  void                    Nop                !     
  val             %239.1 = %232.0
  dr              %239.2 = Typecheck@0x55de2b5c6a30[Type#32]
  goto BB128
BB246   <- [63]
  lgl$-           %246.0 = CastType           d     dn %63.0
  void                    Visible            v     
  lgl$-           %246.2 = %246.0
  goto BB59
BB247   <- [63]
  void                    Nop                !     
  val?^ | miss    %247.1 = %63.0
  dr              %247.2 = Typecheck@0x55de2b5c6a30[Type#99]
  goto BB50
BB248   <- [52]
  lgl$-           %248.0 = CastType           d     dn %52.3
  lgl$-           %248.1 = AsLogical                %248.0
  lgl$#-          %248.2 = Identical                %248.1, true
  void                    Branch                   %248.2 -> BB56 (if true) | BB55 (if false)
BB249   <- [52]
  fs              %249.0 = FrameState         R     0x55de2be693a0+2182: [%52.3], env=e146.0
  void                    Deopt              !v    %249.0, Typecheck@0x55de2b5c6a30[Type#92], %52.3   !
BB59   <- [58, 246]
  val?            %59.0 = Phi                      %58.2:BB58, %246.2:BB246
  val?            %59.1 = %59.0
  val?            %59.2 = %59.1
  goto BB60
BB56   <- [248]
  lgl$#-          %56.0 = CheckTrueFalse     e     %248.1
  void                    Branch                   %56.0 -> BB62 (if true) | BB57 (if false)
BB55   <- [248]
  (cls|spec|blt)  %55.0 = LdFun              !v    isTRUE, e146.0
  fs              %55.1 = FrameState         R     0x55de2be693a0+2199: [%248.1, %55.0], env=e146.0
  void                    Deopt              !v    %55.1, DeadCall@0x55de2b5c6a30[Call#28], %55.0   !
BB62   <- [56]
  void                    Visible            v     
  lgl$#-          %62.1 = true
  goto BB58
BB57   <- [56]
  val?^ | miss    %57.0 = LdVar              eR    maybe, e146.0
  void                    Visible            v     
  val?            %57.2 = Force!             !     %57.0, e146.0   <val?_>
  val?            %57.3 = %57.2
  goto BB58
BB58   <- [62, 57]
  val?            %58.0 = Phi                      %57.3:BB57, %62.1:BB62
  val?            %58.1 = %58.0
  val?            %58.2 = %58.1
  goto BB59
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    className, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55de2854f470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p10, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x55de2854ebd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p11, e0.0
  prom-           %0.3  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p12, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    maybe, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ext, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    extends@Prom(26)0, e0.0
  void                    Return             l     %0.1
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p34, e0.0
  prom-           %0.3  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p35, e0.0
  prom-           %0.4  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p36, e0.0
  prom-           %0.5  = MkArg                    unboundValue, extends[0x55de2cdf3de0]_p37, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ extends[0x55de2cdf3de0]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
