
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkSlotAssignment[0x55de3520f6a0]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2           │
│ Properties:                                                                  │
├────── Final PIR Version
checkSlotAssignment[0x55de3520f6a0]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    class, <env 0x55de28b56378>
  lgl$#-          %0.4  = Identical                <blt class>, %0.3   <true>
  void                    Branch                   %0.4 -> BB20 (if true) | BB21 (if false)
BB20   <- [0]
  env             e20.0 = MkEnv              l     obj=%0.2, name=%0.1, value=%0.0, parent=<env 0x55de28b56378>, context 1
  val?            %20.1 = Force!<lazy>       !vrd  %0.2,    <cls>
  val?            %20.2 = CallBuiltin        !v    class(%20.1) e20.0   <str$+>
  void                    StVar              lW    cl, %20.2, e20.0
  val?^ | miss    %20.4 = LdVar              eR    getClass, e20.0
  lgl$#-          %20.5 = Identical                %20.4, function(Class, .Force=FALSE, where=.classEnv(|...
  void                    Branch                   %20.5 -> BB22 (if true) | BB23 (if false)
BB21   <- [0]
  env             e21.0 = (MkEnv)            l     obj=%0.2, name=%0.1, value=%0.0, parent=<env 0x55de28b56378>, context 1
  fs              %21.1 = FrameState         R     0x55de34f406e0+0: [], env=e21.0
  void                    Deopt              !v    %21.1, DeadBranchReached@0x55de354aa730[Test#0], %0.4
BB22   <- [20]
  prom-           %22.0 = MkArg                    unboundValue, checkSlotAssignment[0x55de3520f6a0]_p0 (!refl), e20.0
  val?            %22.1 = StaticCall         !v    getClass[0x55de2ac66ff0](%22.0) e20.0   <other>
  void                    StVar              lW    ClassDef, %22.1, e20.0
  (cls|spec|blt)  %22.3 = LdFun              !v    @, <0x55de2854ebd8>, e20.0
  prom-           %22.4 = MkArg                    unboundValue, checkSlotAssignment[0x55de3520f6a0]_p1, e20.0
  prom-           %22.5 = MkArg                    unboundValue, checkSlotAssignment[0x55de3520f6a0]_p2, e20.0
  val?            %22.6 = Call               !v    %22.3(%22.4, %22.5) e20.0   <vec+>
  lgl$#-          %22.7 = IsType                   %22.6 isA val+   <true>
  void                    Branch                   %22.7 -> BB24 (if true) | BB25 (if false)
BB23   <- [20]
  fs              %23.0 = FrameState         R     0x55de34f406e0+105: [], env=e20.0
  void                    Deopt              !v    %23.0, CallTarget@0x55de354aa730[Call#1], %20.4   !
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    name, e20.0
  val?            %24.1 = Force!<lazy>       !v    %24.0, e20.0   <str$->
  lgl$#-          %24.2 = IsType                   %24.1 isA val?-
  lgl$#-          %24.3 = IsType                   %22.6 isA val?+
  void                    Branch                   %24.3 -> BB26 (if true) | BB27 (if false)
BB25   <- [22]
  fs              %25.0 = FrameState         R     0x55de34f406e0+188: [%22.6], env=e20.0
  void                    Deopt              !v    %25.0, DeadBranchReached@0x55de354aa730[Test#1], %22.7   !
BB26   <- [24]
  val?+           %26.0 = CastType           d     dn %22.6   <vec+>
  void                    Branch                   %24.2 -> BB28 (if true) | BB29 (if false)
BB27   <- [24]
  void                    Nop                !     
  val?            %27.1 = %22.6
  dr              %27.2 = Typecheck@0x55de354aa730[Type#7]
  goto BB7
BB28   <- [26]
  val?-           %28.0 = CastType           d     dn %24.1   <str$->
  val?            %28.1 = Extract2_1D        wed   %26.0, %28.0, elided   <str$+>
  lgl$-           %28.2 = Is                       %28.1, NULL
  void                    StVar              lW    slotClass, %28.1, e20.0
  val             %28.4 = ChkMissing         e     %28.1
  lgl$#-          %28.5 = CheckTrueFalse     e     %28.2
  void                    Branch                   %28.5 -> BB18 (if true) | BB11 (if false)
BB29   <- [26]
  void                    Nop                !     
  val?            %29.1 = %24.1
  dr              %29.2 = Typecheck@0x55de354aa730[Type#9]
  goto BB7
BB7   <- [27, 29]
  val?^ | miss    %7.0  = Phi                      %27.1:BB27, %29.1:BB29
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %27.2:BB27, %29.2:BB29
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55de34f406e0+233: [%22.6, %24.1], env=e20.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB18   <- [28]
  (cls|spec|blt)  %18.0 = LdFun              !v    stop, e20.0
  fs              %18.1 = FrameState         R     0x55de34f406e0+289: [%18.0], env=e20.0
  void                    Deopt              !v    %18.1, DeadCall@0x55de354aa730[Call#3], %18.0   !
BB11   <- [28]
  val?^ | miss    %11.0 = LdVar              eR    class, e20.0
  lgl$#-          %11.1 = Identical                <blt class>, %11.0   <true>
  void                    Branch                   %11.1 -> BB30 (if true) | BB31 (if false)
BB30   <- [11]
  val?^ | miss    %30.0 = LdVar              eR    value, e20.0
  val?            %30.1 = Force!<lazy>       !v    %30.0, e20.0   <(str|cls)>
  val?            %30.2 = CallBuiltin        !v    class(%30.1) e20.0   <str$+>
  void                    StVar              lW    valueClass, %30.2, e20.0
  val?^ | miss    %30.4 = LdVar              eR    .identC, e20.0
  lgl$#-          %30.5 = Identical                %30.4, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %30.5 -> BB32 (if true) | BB33 (if false)
BB31   <- [11]
  fs              %31.0 = FrameState         R     0x55de34f406e0+254: [], env=e20.0
  void                    Deopt              !v    %31.0, DeadBranchReached@0x55de354aa730[Test#2], %11.1   !
BB32   <- [30]
  prom-           %32.0 = MkArg                    unboundValue, checkSlotAssignment[0x55de3520f6a0]_p3, e20.0
  prom-           %32.1 = MkArg                    unboundValue, checkSlotAssignment[0x55de3520f6a0]_p4 (!refl), e20.0
  val?            %32.2 = StaticCall         !v    .identC[0x55de2d4515d0](%32.0, %32.1) e20.0   <lgl$->
  lgl$#-          %32.3 = IsType                   %32.2 isA lgl$-
  void                    Branch                   %32.3 -> BB34 (if true) | BB35 (if false)
BB33   <- [30]
  fs              %33.0 = FrameState         R     0x55de34f406e0+435: [], env=e20.0
  void                    Deopt              !v    %33.0, CallTarget@0x55de354aa730[Call#8], %30.4   !
BB34   <- [32]
  lgl$-           %34.0 = CastType           d     dn %32.2
  lgl$#-          %34.1 = CheckTrueFalse     e     %34.0
  void                    Branch                   %34.1 -> BB17 (if true) | BB16 (if false)
BB35   <- [32]
  fs              %35.0 = FrameState         R     0x55de34f406e0+472: [%32.2], env=e20.0
  void                    Deopt              !v    %35.0, Typecheck@0x55de354aa730[Type#22], %32.2   !
BB17   <- [34]
  val?^ | miss    %17.0 = LdVar              eR    value, e20.0
  void                    Visible            v     
  val?            %17.2 = Force!<wrapped>    !     %17.0, e20.0   <(str|cls)>
  void                    Return             l     %17.2
BB16   <- [34]
  (cls|spec|blt)  %16.0 = LdFun              !v    possibleExtends, e20.0
  fs              %16.1 = FrameState         R     0x55de34f406e0+508: [%16.0], env=e20.0
  void                    Deopt              !v    %16.1, DeadCall@0x55de354aa730[Call#9], %16.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cl, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slotClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    valueClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ checkSlotAssignment[0x55de3520f6a0]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
