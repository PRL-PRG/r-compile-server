
┌──────────────────────────────────────────────────────────────────────────────┐
│ slot<-[0x55de2f6b9d40]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2│
│ Properties:                                                                  │
├────── Final PIR Version
slot<-[0x55de2f6b9d40]
BB0
  val?^           %0.0  = LdArg                    3
  val?~+          %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val+            %0.4  = Force<lazy>              %0.1,    <lgl$->
  lgl$#-          %0.5  = IsType                   %0.4 isA lgl$-
  void                    Branch                   %0.5 -> BB9 (if true) | BB10 (if false)
BB9   <- [0]
  lgl$-           %9.0  = CastType           d     dn %0.4
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0
  env             e9.2  = MkEnv              l     object=%0.3, name=%0.2, check=%0.1, value=%0.0, parent=<env 0x55de28b56378>, context 1
  void                    Branch                   %9.1 -> BB7 (if true) | BB3 (if false)
BB10   <- [0]
  void                    Nop                !     
  val+            %10.1 = %0.4
  dr              %10.2 = Typecheck@0x55de357a0770[Type#0]
  goto BB8
BB7   <- [9]
  val?^ | miss    %7.0  = LdVar              eR    checkSlotAssignment, <env 0x55de28b56378>
  lgl$#-          %7.1  = Identical                %7.0, function(obj, name, value) <(rir::DispatchTabl|...
  void                    Branch                   %7.1 -> BB11 (if true) | BB12 (if false)
BB3   <- [9]
  void                    Nop                !     
  goto BB4
BB8   <- [10, 12]
  val?^ | miss    %8.0  = Phi                      %10.1:BB10, %12.1:BB12
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %10.2:BB10, %12.2:BB12
  dr              %8.3  = %8.2
  env             e8.4  = (MkEnv)            l     object=%0.3, name=%0.2, check=%0.1, value=%0.0, parent=<env 0x55de28b56378>, context 1
  fs              %8.5  = FrameState         R     0x55de35b02d20+0: [], env=e8.4
  void                    Deopt              !v    %8.5, %8.3, %8.1
BB11   <- [7]
  prom-           %11.0 = MkArg                    unboundValue, slot<-[0x55de2f6b9d40]_p0 (!refl), e9.2
  prom-           %11.1 = MkArg                    unboundValue, slot<-[0x55de2f6b9d40]_p1 (!refl), e9.2
  prom-           %11.2 = MkArg                    unboundValue, slot<-[0x55de2f6b9d40]_p2, e9.2
  val?            %11.3 = StaticCall         !v    checkSlotAssignment[0x55de2a81d1d0](%11.0, %11.1, %11.2) e9.2   <(str|cls)>
  void                    StVar              lW    value, %11.3, e9.2
  goto BB4
BB12   <- [7]
  void                    Nop                !     
  val?^ | miss    %12.1 = %7.0
  dr              %12.2 = CallTarget@0x55de357a0770[Call#0]
  goto BB8
BB4   <- [3, 11]
  val?^ | miss    %4.0  = LdVar              eR    .Call, e9.2
  lgl$#-          %4.1  = Identical                <blt .Call>, %4.0   <true>
  void                    Branch                   %4.1 -> BB13 (if true) | BB14 (if false)
BB13   <- [4]
  val?^ | miss    %13.0 = LdVar              eR    C_R_set_slot, e9.2
  val?            %13.1 = Force!<value>      !v    %13.0, e9.2   <vec>
  val?^ | miss    %13.2 = LdVar              eR    object, e9.2
  val?            %13.3 = Force!<lazy>       !v    %13.2, e9.2   <(cls|other)>
  val?^ | miss    %13.4 = LdVar              eR    name, e9.2
  val?            %13.5 = Force!<lazy>       !v    %13.4, e9.2   <str$->
  val?^ | miss    %13.6 = LdVar              eR    value, e9.2
  val?            %13.7 = Force!<lazy>       !v    %13.6, e9.2   <val?>
  val?            %13.8 = CallBuiltin        !     .Call(%13.1, %13.3, %13.5, %13.7) e9.2   <(cls|other)>
  void                    Return             l     %13.8
BB14   <- [4]
  fs              %14.0 = FrameState         R     0x55de35b02d20+81: [], env=e9.2
  void                    Deopt              !v    %14.0, DeadBranchReached@0x55de357a0770[Test#0], %4.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|cls)>
  void                    Return             l     %0.3

│ slot<-[0x55de2f6b9d40]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
