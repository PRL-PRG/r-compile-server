
┌──────────────────────────────────────────────────────────────────────────────┐
│ validityMethod[0x55de2943ae00]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
validityMethod[0x55de2943ae00]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, parent=<env 0x55de2a7fa958>, context 1
  (cls|spec|blt)  %0.2  = LdFun              !v    @, <0x55de2854ebd8>, <env 0x55de2a7fa958>
  prom-           %0.3  = MkArg                    unboundValue, validityMethod[0x55de2943ae00]_p0, e0.1
  prom-           %0.4  = MkArg                    unboundValue, validityMethod[0x55de2943ae00]_p1, e0.1
  val?            %0.5  = Call               !v    %0.2(%0.3, %0.4) e0.1   <int$->
  lgl$#-          %0.6  = IsType                   %0.5 isA int$-
  void                    Branch                   %0.6 -> BB53 (if true) | BB54 (if false)
BB53   <- [0]
  int$-           %53.0 = CastType           d     dn %0.5
  void                    StVar              lW    n, %53.0, e0.1
  val?^ | miss    %53.2 = LdVar              eR    anyNA, e0.1
  lgl$#-          %53.3 = Identical                <blt anyNA>, %53.2   <true>
  void                    Branch                   %53.3 -> BB55 (if true) | BB56 (if false)
BB54   <- [0]
  fs              %54.0 = FrameState         R     0x55de34b46730+37: [%0.5], env=e0.1
  void                    Deopt              !v    %54.0, Typecheck@0x55de2f777288[Type#2], %0.5   !
BB55   <- [53]
  (cls|spec|blt)  %55.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %55.1 = MkArg                    unboundValue, validityMethod[0x55de2943ae00]_p2, e0.1
  prom-           %55.2 = MkArg                    unboundValue, validityMethod[0x55de2943ae00]_p3, e0.1
  val?            %55.3 = Call               !v    %55.0(%55.1, %55.2) e0.1   <real->
  void                    StVar              lW    i, %55.3, e0.1
  lgl$#-          %55.5 = IsType                   %55.3 isA real-
  void                    Branch                   %55.5 -> BB57 (if true) | BB58 (if false)
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x55de34b46730+51: [], env=e0.1
  void                    Deopt              !v    %56.0, DeadBranchReached@0x55de2f777288[Test#0], %53.3   !
BB57   <- [55]
  real-           %57.0 = CastType           d     dn %55.3
  val+            %57.1 = CallSafeBuiltin    wed   anyNA(%57.0)    <lgl$->
  lgl$#-          %57.2 = IsType                   %57.1 isA lgl$-
  void                    Branch                   %57.2 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  fs              %58.0 = FrameState         R     0x55de34b46730+164: [<blt anyNA>, %55.3], env=e0.1
  void                    Deopt              !v    %58.0, Typecheck@0x55de2f777288[Type#8], %55.3   !
BB59   <- [57]
  lgl$-           %59.0 = CastType           d     dn %57.1
  lgl$#-          %59.1 = CheckTrueFalse     e     %59.0
  void                    Branch                   %59.1 -> BB51 (if true) | BB9 (if false)
BB60   <- [57]
  void                    Nop                !     
  val+            %60.1 = %57.1
  dr              %60.2 = Typecheck@0x55de2f777288[Type#9]
  goto BB7
BB51   <- [59]
  void                    Visible            v     
  str$#-          %51.1 = "'i' slot has NAs"
  goto BB42
BB9   <- [59]
  val?^ | miss    %9.0  = LdVar              eR    any, e0.1
  lgl$#-          %9.1  = Identical                <blt any>, %9.0   <true>
  void                    Branch                   %9.1 -> BB61 (if true) | BB62 (if false)
BB7   <- [60, 62, 64]
  val?^ | miss    %7.0  = Phi                      %60.1:BB60, %62.1:BB62, %64.1:BB64
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %60.2:BB60, %62.2:BB62, %64.2:BB64
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55de34b46730+181: [%57.1], env=e0.1
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB42   <- [51, 41]
  (lgl|str)$#-    %42.0 = Phi                      %41.2:BB41, %51.1:BB51
  (lgl|str)$#-    %42.1 = %42.0
  void                    Return             l     %42.1
BB61   <- [9]
  val?^ | miss    %61.0 = LdVar              eR    is.finite, e0.1
  lgl$#-          %61.1 = Identical                <blt is.finite>, %61.0   <true>
  void                    Branch                   %61.1 -> BB63 (if true) | BB64 (if false)
BB62   <- [9]
  void                    Nop                !     
  lgl$#-          %62.1 = %9.1
  dr              %62.2 = DeadBranchReached@0x55de2f777288[Test#1]
  goto BB7
BB63   <- [61]
  lgl-            %63.0 = CallSafeBuiltin    wed   is.finite(%57.0)    <lgl->
  lgl-            %63.1 = Not                wed   %63.0, elided
  val?            %63.2 = CallBuiltin        !v    any(%63.1) e0.1   <lgl$->
  lgl$#-          %63.3 = IsType                   %63.2 isA lgl$-
  void                    Branch                   %63.3 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  void                    Nop                !     
  lgl$#-          %64.1 = %61.1
  dr              %64.2 = DeadBranchReached@0x55de2f777288[Test#2]
  goto BB7
BB65   <- [63]
  lgl$-           %65.0 = CastType           d     dn %63.2
  lgl$#-          %65.1 = CheckTrueFalse     e     %65.0
  void                    Branch                   %65.1 -> BB50 (if true) | BB12 (if false)
BB66   <- [63]
  void                    Nop                !     
  val?            %66.1 = %63.2
  dr              %66.2 = Typecheck@0x55de2f777288[Type#15]
  goto BB10
BB50   <- [65]
  void                    Visible            v     
  str$#-          %50.1 = "'i' slot is not all finite"
  goto BB41
BB12   <- [65]
  val?^ | miss    %12.0 = LdVar              eR    any, e0.1
  lgl$#-          %12.1 = Identical                <blt any>, %12.0   <true>
  void                    Branch                   %12.1 -> BB67 (if true) | BB68 (if false)
BB10   <- [66, 68, 70]
  val?^ | miss    %10.0 = Phi                      %66.1:BB66, %68.1:BB68, %70.1:BB70
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %66.2:BB66, %68.2:BB68, %70.2:BB70
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x55de34b46730+366: [%63.2], env=e0.1
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB41   <- [50, 40]
  (lgl|str)$#-    %41.0 = Phi                      %40.2:BB40, %50.1:BB50
  (lgl|str)$#-    %41.1 = %41.0
  (lgl|str)$#-    %41.2 = %41.1
  goto BB42
BB67   <- [12]
  val?^ | miss    %67.0 = LdVar              eR    i, e0.1
  lgl$#-          %67.1 = IsType                   %67.0 isA real-
  void                    Branch                   %67.1 -> BB69 (if true) | BB70 (if false)
BB68   <- [12]
  void                    Nop                !     
  lgl$#-          %68.1 = %12.1
  dr              %68.2 = DeadBranchReached@0x55de2f777288[Test#3]
  goto BB10
BB69   <- [67]
  real-           %69.0 = CastType           d     dn %67.0
  lgl-            %69.1 = Lt                 wed   %69.0, 1, elided   <lgl->
  val?            %69.2 = CallBuiltin        !v    any(%69.1) e0.1   <lgl$->
  lgl$#-          %69.3 = IsType                   %69.2 isA lgl$-
  void                    Branch                   %69.3 -> BB71 (if true) | BB72 (if false)
BB70   <- [67]
  void                    Nop                !     
  val?^ | miss    %70.1 = %67.0
  dr              %70.2 = Typecheck@0x55de2f777288[Type#18]
  goto BB10
BB71   <- [69]
  lgl$-           %71.0 = CastType           d     dn %69.2
  lgl$#-          %71.1 = CheckTrueFalse     e     %71.0
  void                    Branch                   %71.1 -> BB49 (if true) | BB15 (if false)
BB72   <- [69]
  void                    Nop                !     
  val?            %72.1 = %69.2
  dr              %72.2 = Typecheck@0x55de2f777288[Type#20]
  goto BB13
BB49   <- [71]
  void                    Visible            v     
  str$#-          %49.1 = "'i' must be >= 1"
  goto BB40
BB15   <- [71]
  val?^ | miss    %15.0 = LdVar              eR    n, e0.1
  lgl$#-          %15.1 = IsType                   %15.0 isA int$-
  void                    Branch                   %15.1 -> BB73 (if true) | BB74 (if false)
BB13   <- [72, 74]
  val?^ | miss    %13.0 = Phi                      %72.1:BB72, %74.1:BB74
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %72.2:BB72, %74.2:BB74
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55de34b46730+480: [%69.2], env=e0.1
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB40   <- [49, 39]
  (lgl|str)$#-    %40.0 = Phi                      %39.2:BB39, %49.1:BB49
  (lgl|str)$#-    %40.1 = %40.0
  (lgl|str)$#-    %40.2 = %40.1
  goto BB41
BB73   <- [15]
  int$-           %73.0 = CastType           d     dn %15.0
  lgl$-           %73.1 = Eq                 d     %73.0, 0, elided   <lgl$->
  lgl$-           %73.2 = AsLogical                %73.1
  lgl$#-          %73.3 = Identical                %73.2, false
  void                    Branch                   %73.3 -> BB48 (if true) | BB16 (if false)
BB74   <- [15]
  void                    Nop                !     
  val?^ | miss    %74.1 = %15.0
  dr              %74.2 = Typecheck@0x55de2f777288[Type#21]
  goto BB13
BB48   <- [73]
  void                    Nop                !     
  lgl$-           %48.1 = %73.2
  goto BB21
BB16   <- [73]
  val?^ | miss    %16.0 = LdVar              eR    length, e0.1
  lgl$#-          %16.1 = Identical                <blt length>, %16.0   <@?>
  void                    Branch                   %16.1 -> BB18 (if true) | BB17 (if false)
BB21   <- [48, 75]
  lgl$-           %21.0 = Phi                      %75.4:BB75, %48.1:BB48
  lgl$-           %21.1 = %21.0
  lgl$#-          %21.2 = CheckTrueFalse     e     %21.1
  void                    Branch                   %21.2 -> BB47 (if true) | BB24 (if false)
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    i, e0.1
  val?            %18.1 = Force!             !v    %18.0, e0.1   <val?_>
  lgl$#-          %18.2 = IsType                   %18.1 isA val?+
  void                    Branch                   %18.2 -> BB75 (if true) | BB76 (if false)
BB17   <- [16]
  (cls|spec|blt)  %17.0 = LdFun              !v    length, e0.1
  fs              %17.1 = FrameState         R     0x55de34b46730+552: [%73.2, %17.0], env=e0.1
  void                    Deopt              !v    %17.1, DeadCall@0x55de2f777288[Call#8], %17.0   !
BB47   <- [21]
  void                    Visible            v     
  str$#-          %47.1 = "'i' must be empty when the object length is zero"
  goto BB39
BB24   <- [21]
  val?^ | miss    %24.0 = LdVar              eR    any, e0.1
  lgl$#-          %24.1 = Identical                <blt any>, %24.0   <true>
  void                    Branch                   %24.1 -> BB77 (if true) | BB78 (if false)
BB75   <- [18]
  val?+           %75.0 = CastType           d     dn %18.1   <val?_>
  real$-          %75.1 = CallSafeBuiltin    wed   length(%75.0)    <val?_>
  lgl$-           %75.2 = AsLogical                %75.1
  lgl$-           %75.3 = LAnd                     %73.2, %75.2
  lgl$-           %75.4 = %75.3
  goto BB21
BB76   <- [18]
  fs              %76.0 = FrameState         R     0x55de34b46730+593: [%73.2, <blt length>, %18.1], env=e0.1
  void                    Deopt              !v    %76.0, Typecheck@0x55de2f777288[Type#24], %18.1   !
BB39   <- [47, 38]
  (lgl|str)$#-    %39.0 = Phi                      %38.2:BB38, %47.1:BB47
  (lgl|str)$#-    %39.1 = %39.0
  (lgl|str)$#-    %39.2 = %39.1
  goto BB40
BB77   <- [24]
  val?^ | miss    %77.0 = LdVar              eR    i, e0.1
  lgl$#-          %77.1 = IsType                   %77.0 isA real-
  void                    Branch                   %77.1 -> BB79 (if true) | BB80 (if false)
BB78   <- [24]
  void                    Nop                !     
  lgl$#-          %78.1 = %24.1
  dr              %78.2 = DeadBranchReached@0x55de2f777288[Test#5]
  goto BB22
BB79   <- [77]
  real-           %79.0 = CastType           d     dn %77.0
  val?^ | miss    %79.1 = LdVar              eR    n, e0.1
  lgl$#-          %79.2 = IsType                   %79.1 isA int$-
  void                    Branch                   %79.2 -> BB81 (if true) | BB82 (if false)
BB80   <- [77]
  void                    Nop                !     
  val?^ | miss    %80.1 = %77.0
  dr              %80.2 = Typecheck@0x55de2f777288[Type#29]
  goto BB22
BB22   <- [78, 80, 82]
  val?^ | miss    %22.0 = Phi                      %78.1:BB78, %80.1:BB80, %82.1:BB82
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %78.2:BB78, %80.2:BB80, %82.2:BB82
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55de34b46730+622: [%21.1], env=e0.1
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB81   <- [79]
  int$-           %81.0 = CastType           d     dn %79.1
  lgl-            %81.1 = Gt                 wed   %79.0, %81.0, elided   <lgl->
  val?            %81.2 = CallBuiltin        !v    any(%81.1) e0.1   <lgl$->
  lgl$#-          %81.3 = IsType                   %81.2 isA lgl$-
  void                    Branch                   %81.3 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  void                    Nop                !     
  val?^ | miss    %82.1 = %79.1
  dr              %82.2 = Typecheck@0x55de2f777288[Type#30]
  goto BB22
BB83   <- [81]
  lgl$-           %83.0 = CastType           d     dn %81.2
  lgl$#-          %83.1 = CheckTrueFalse     e     %83.0
  void                    Branch                   %83.1 -> BB46 (if true) | BB27 (if false)
BB84   <- [81]
  void                    Nop                !     
  val?            %84.1 = %81.2
  dr              %84.2 = Typecheck@0x55de2f777288[Type#32]
  goto BB25
BB46   <- [83]
  (cls|spec|blt)  %46.0 = LdFun              !v    sprintf, e0.1
  fs              %46.1 = FrameState         R     0x55de34b46730+833: [%46.0], env=e0.1
  void                    Deopt              !v    %46.1, DeadCall@0x55de2f777288[Call#11], %46.0   !
BB27   <- [83]
  val?^ | miss    %27.0 = LdVar              eR    is.unsorted, e0.1
  lgl$#-          %27.1 = Identical                %27.0, function(x, na.rm=FALSE, strictly=FALSE) <(rir|...
  void                    Branch                   %27.1 -> BB85 (if true) | BB86 (if false)
BB25   <- [84, 86]
  val?^ | miss    %25.0 = Phi                      %84.1:BB84, %86.1:BB86
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %84.2:BB84, %86.2:BB86
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55de34b46730+739: [%81.2], env=e0.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB85   <- [27]
  prom-           %85.0 = MkArg                    unboundValue, validityMethod[0x55de2943ae00]_p4, e0.1
  ct              %85.1 = PushContext        lCL   %85.0, missingArg, true, is.unsorted(i, strictly=TRUE), function(x, na.rm=FALSE, strictly=FALSE) <(rir|..., e0.1
  val?^           %85.2 = CastType                 up %85.0
  env             e85.3 = MkEnv              l     x=%85.2, na.rm(miss)=false, strictly=true, parent=R_BaseNamespace, context 1
  val?            %85.4 = Force!<lazy>       !vL   %85.2, e85.3   <real->
  lgl$#-          %85.5 = IsType                   %85.4 isA real-
  void                    Branch                   %85.5 -> BB87 (if true) | BB88 (if false)
BB86   <- [27]
  void                    Nop                !     
  val?^ | miss    %86.1 = %27.0
  dr              %86.2 = CallTarget@0x55de2f777288[Call#10]
  goto BB25
BB87   <- [85]
  real-           %87.0 = CastType           d     dn %85.4
  (int|real)$-    %87.1 = CallSafeBuiltin    wed   length(%87.0)    <int$->
  lgl$#-          %87.2 = IsType                   %87.1 isA int$-
  void                    Branch                   %87.2 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  fs              %88.0 = FrameState         R     0x55de34b46730+795: [], env=e0.1
  fs              %88.1 = FrameState         R     0x55de35acf470+69: [<blt length>, %85.4], env=e85.3, next=%88.0
  void                    Deopt              !v    %88.1, Typecheck@0x55de35b08850[Type#1], %85.4   !
BB89   <- [87]
  int$-           %89.0 = CastType           d     dn %87.1
  lgl$-           %89.1 = Lte                d     %89.0, 1L, elided   <lgl$->
  lgl$#-          %89.2 = CheckTrueFalse     e     %89.1
  void                    Branch                   %89.2 -> BB45 (if true) | BB32 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x55de34b46730+795: [], env=e0.1
  fs              %90.1 = FrameState         R     0x55de35acf470+91: [%87.1], env=e85.3, next=%90.0
  void                    Deopt              !v    %90.1, Typecheck@0x55de35b08850[Type#2], %87.1   !
BB45   <- [89]
  void                    Nop                !     
  lgl$#-          %45.1 = false
  goto BB34
BB32   <- [89]
  val+            %32.0 = CallSafeBuiltin    wed   anyNA(%87.0)    <val?_>
  lgl$-           %32.1 = AsLogical          e     %32.0
  lgl$-           %32.2 = AsLogical                %32.1
  lgl$#-          %32.3 = CheckTrueFalse     e     %32.2
  void                    Branch                   %32.3 -> BB44 (if true) | BB33 (if false)
BB34   <- [45, 44, 33]
  val?            %34.0 = Phi                      %33.1:BB33, %44.1:BB44, %45.1:BB45
  val?            %34.1 = %34.0
  val?            %34.2 = PopContext         C     %34.1, %85.1   <lgl$->
  lgl$#-          %34.3 = IsType                   %34.2 isA lgl$-
  void                    Branch                   %34.3 -> BB91 (if true) | BB92 (if false)
BB44   <- [32]
  void                    Nop                !     
  lgl$-           %44.1 = na-lgl
  goto BB34
BB33   <- [32]
  val?            %33.0 = CallBuiltin        !v    is.unsorted(%87.0, true) e85.3
  val?            %33.1 = %33.0
  goto BB34
BB91   <- [34]
  lgl$-           %91.0 = CastType           d     dn %34.2
  lgl$#-          %91.1 = CheckTrueFalse     e     %91.0
  void                    Branch                   %91.1 -> BB43 (if true) | BB37 (if false)
BB92   <- [34]
  fs              %92.0 = FrameState         R     0x55de34b46730+795: [%34.2], env=e0.1
  void                    Deopt              !v    %92.0, Typecheck@0x55de2f777288[Type#34], %34.2   !
BB43   <- [91]
  void                    Visible            v     
  str$#-          %43.1 = "'i' must be sorted strictly increasingly"
  goto BB38
BB37   <- [91]
  void                    Visible            v     
  lgl$#-          %37.1 = true
  goto BB38
BB38   <- [37, 43]
  (lgl|str)$#-    %38.0 = Phi                      %37.1:BB37, %43.1:BB43
  (lgl|str)$#-    %38.1 = %38.0
  (lgl|str)$#-    %38.2 = %38.1
  goto BB39
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    length, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3

│ validityMethod[0x55de2943ae00]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
