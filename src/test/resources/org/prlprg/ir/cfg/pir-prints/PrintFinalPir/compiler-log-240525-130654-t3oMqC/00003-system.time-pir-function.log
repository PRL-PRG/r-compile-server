
┌──────────────────────────────────────────────────────────────────────────────┐
│ system.time[0x55688e5ac1d0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:                                                                  │
├────── Final PIR Version
system.time[0x55688e5ac1d0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     expr=%0.0, gcFirst(miss)=true, parent=R_BaseNamespace, context 1
  cls             %0.2  = MkCls                    system.time>ppt@0, e0.1
  void                    StVar              lW    ppt, %0.2, e0.1
  ct              %0.4  = PushContext        lCL   false, gc(FALSE), function(verbose=getOption("verbose"), reset=F|..., e0.1
  env             e0.5  = MkEnv              l     verbose=false, reset(miss)=false, full(miss)=true, parent=R_BaseNamespace, context 1
  val?            %0.6  = CallBuiltin        !v    gc(false, false, true) e0.5   <real->
  void                    StVar              lW    res, %0.6, e0.5
  val?^ | miss    %0.8  = LdVar              eR    matrix, e0.5
  lgl$#-          %0.9  = Identical                %0.8, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...
  void                    Branch                   %0.9 -> BB61 (if true) | BB62 (if false)
BB61   <- [0]
  lgl$#-          %61.0 = CallSafeBuiltin    wed   is.object(%0.6)    <lgl$->
  void                    Branch                   %61.0 -> BB59 (if true) | BB5 (if false)
BB62   <- [0]
  fs              %62.0 = FrameState         R     0x55688ece7cf0+82: [], env=e0.1
  fs              %62.1 = FrameState         R     0x55688de445d0+64: [], env=e0.5, next=%62.0
  void                    Deopt              !v    %62.1, CallTarget@0x55688e781da0[Call#1], %0.8   !
BB59   <- [61]
  void                    Nop                !     
  lgl$#-          %59.1 = true
  goto BB6
BB5   <- [61]
  lgl$#-          %5.0  = IsType                   %0.6 isA real-
  void                    Branch                   %5.0 -> BB63 (if true) | BB64 (if false)
BB6   <- [59, 63]
  lgl$#-          %6.0  = Phi                      %59.1:BB59, %63.1:BB63
  lgl$#-          %6.1  = %6.0
  void                    Branch                   %6.1 -> BB58 (if true) | BB7 (if false)
BB63   <- [5]
  void                    Nop                !     
  lgl$#-          %63.1 = false
  goto BB6
BB64   <- [5]
  void                    Nop                !     
  val?            %64.1 = %0.6
  dr              %64.2 = Typecheck@0x55688de19320[Type#1]
  goto BB3
BB58   <- [6]
  fs              %58.0 = FrameState         R     0x55688ece7cf0+82: [], env=e0.1
  prom-           %58.1 = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p12, e0.5
  val?^           %58.2 = CastType                 up %58.1
  prom-           %58.3 = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p11 (!refl), e0.5
  val?^           %58.4 = CastType                 up %58.3
  fs              %58.5 = FrameState         R     0x55688de445d0+127: [], env=e0.5, next=%58.0
  (cls|spec|blt)  %58.6 = LdFun              !v    as.vector, R_BaseNamespace
  env             e58.7 = (MkEnv)            l     dimnames=%58.2, byrow(miss)=false, ncol=7L, nrow=2L, data=%58.4, parent=R_BaseNamespace, context 0
  fs              %58.8 = FrameState         R     0x55688e4c5ca0+218: [%58.6], env=e58.7, next=%58.5
  void                    Deopt              !v    %58.8, DeadCall@0x55688de19320[Call#2], %58.6   !
BB7   <- [6]
  val?^ | miss    %7.0  = LdVar              eR    list, e0.5
  lgl$#-          %7.1  = Identical                %7.0, <blt list>
  void                    Branch                   %7.1 -> BB65 (if true) | BB66 (if false)
BB3   <- [64, 66, 68]
  val?^ | miss    %3.0  = Phi                      %64.1:BB64, %66.1:BB66, %68.1:BB68
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %64.2:BB64, %66.2:BB66, %68.2:BB68
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55688ece7cf0+82: [], env=e0.1
  prom-           %3.5  = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p12, e0.5
  val?^           %3.6  = CastType                 up %3.5
  prom-           %3.7  = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p11 (!refl), e0.5
  val?^           %3.8  = CastType                 up %3.7
  fs              %3.9  = FrameState         R     0x55688de445d0+127: [], env=e0.5, next=%3.4
  env             e3.10 = (MkEnv)            l     data=%3.8, nrow=2L, ncol=7L, byrow(miss)=false, dimnames=%3.6, parent=R_BaseNamespace, context 0
  fs              %3.11 = FrameState         R     0x55688e4c5ca0+91: [%61.0], env=e3.10, next=%3.9
  void                    Deopt              !v    %3.11, %3.3, %3.1   !
BB65   <- [7]
  (cls|spec|blt)  %65.0 = LdFun              !v    c, <0x55688db3a940>, e0.5
  lgl$#-          %65.1 = Identical                %65.0, <blt c>
  void                    Branch                   %65.1 -> BB67 (if true) | BB68 (if false)
BB66   <- [7]
  void                    Nop                !     
  val?^ | miss    %66.1 = %7.0
  dr              %66.2 = CallTarget@0x55688e781da0[Call#2]
  goto BB3
BB67   <- [65]
  str-            %67.0 = CallSafeBuiltin    wed   c("Ncells", "Vcells")    <str->
  (cls|spec|blt)  %67.1 = LdFun              !v    c, <0x55688db3a940>, e0.5
  val?            %67.2 = Call               !v    %67.1("used", "(Mb)", "gc trigger", "(Mb)", "limit (Mb)", "max used", "(Mb)") e0.5   <str->
  val+            %67.3 = CallSafeBuiltin    wed   list(%67.0, %67.2)    <vec->
  val+            %67.4 = CallSafeBuiltin    wed   matrix(%0.6, 2L, 7L, false, %67.3, false, false)    <real+>
  void                    StVar              lW    res, %67.4, e0.5
  lgl$#-          %67.6 = IsType                   %67.4 isA real+
  val?^ | miss    %67.7 = LdVar              eR    all, e0.5
  lgl$#-          %67.8 = Identical                <blt all>, %67.7   <true>
  void                    Branch                   %67.8 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  void                    Nop                !     
  (cls|spec|blt)  %68.1 = %65.0
  dr              %68.2 = CallTarget@0x55688e781da0[Call#3]
  goto BB3
BB69   <- [67]
  val?^ | miss    %69.0 = LdVar              eR    is.na, e0.5
  lgl$#-          %69.1 = Identical                <blt is.na>, %69.0   <true>
  void                    Branch                   %69.1 -> BB71 (if true) | BB72 (if false)
BB70   <- [67]
  void                    Nop                !     
  lgl$#-          %70.1 = %67.8
  dr              %70.2 = DeadBranchReached@0x55688e781da0[Test#0]
  goto BB8
BB71   <- [69]
  void                    Branch                   %67.6 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  void                    Nop                !     
  lgl$#-          %72.1 = %69.1
  dr              %72.2 = DeadBranchReached@0x55688e781da0[Test#2]
  goto BB8
BB8   <- [70, 72, 74]
  val?^ | miss    %8.0  = Phi                      %70.1:BB70, %72.1:BB72, %74.1:BB74
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %70.2:BB70, %72.2:BB72, %74.2:BB74
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55688ece7cf0+82: [], env=e0.1
  fs              %8.5  = FrameState         R     0x55688de445d0+141: [], env=e0.5, next=%8.4
  void                    Deopt              !v    %8.5, %8.3, %8.1   !
BB73   <- [71]
  real+           %73.0 = CastType           d     dn %67.4
  real+           %73.1 = Extract1_2D        wed   %73.0, missingArg, 5L, elided   <real+>
  lgl+            %73.2 = CallSafeBuiltin    wed   is.na(%73.1)    <lgl+>
  val?            %73.3 = CallBuiltin        !v    all(%73.2) e0.5   <lgl$->
  lgl$#-          %73.4 = IsType                   %73.3 isA lgl$-
  void                    Branch                   %73.4 -> BB75 (if true) | BB76 (if false)
BB74   <- [71]
  void                    Nop                !     
  val+            %74.1 = %67.4
  dr              %74.2 = Typecheck@0x55688e781da0[Type#8]
  goto BB8
BB75   <- [73]
  lgl$-           %75.0 = CastType           d     dn %73.3
  lgl$#-          %75.1 = CheckTrueFalse     e     %75.0
  void                    Branch                   %75.1 -> BB57 (if true) | BB12 (if false)
BB76   <- [73]
  void                    Nop                !     
  val?            %76.1 = %73.3
  dr              %76.2 = Typecheck@0x55688e781da0[Type#17]
  goto BB10
BB57   <- [75]
  val?^ | miss    %57.0 = LdVar              eR    res, e0.5
  lgl$#-          %57.1 = IsType                   %57.0 isA real+
  void                    Branch                   %57.1 -> BB77 (if true) | BB78 (if false)
BB12   <- [75]
  val?^ | miss    %12.0 = LdVar              eR    res, e0.5
  val?            %12.1 = Force!             !v    %12.0, e0.5   <val?_>
  val?            %12.2 = %12.1
  goto BB13
BB10   <- [76, 78]
  val?^ | miss    %10.0 = Phi                      %76.1:BB76, %78.1:BB78
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %76.2:BB76, %78.2:BB78
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x55688ece7cf0+82: [], env=e0.1
  fs              %10.5 = FrameState         R     0x55688de445d0+368: [%73.3], env=e0.5, next=%10.4
  void                    Deopt              !v    %10.5, %10.3, %10.1   !
BB77   <- [57]
  real+           %77.0 = CastType           d     dn %57.0
  real+           %77.1 = Extract1_2D        wed   %77.0, missingArg, -5L, elided   <real+>
  real+           %77.2 = %77.1
  goto BB13
BB78   <- [57]
  void                    Nop                !     
  val?^ | miss    %78.1 = %57.0
  dr              %78.2 = Typecheck@0x55688e781da0[Type#19]
  goto BB10
BB13   <- [12, 77]
  val?            %13.0 = Phi                      %12.2:BB12, %77.2:BB77
  val?            %13.1 = %13.0
  val?            %13.2 = PopContext         C     %13.1, %0.4
  val?^ | miss    %13.3 = LdVar              eR    proc.time, e0.1
  lgl$#-          %13.4 = Identical                <blt proc.time>, %13.3   <true>
  void                    Branch                   %13.4 -> BB79 (if true) | BB80 (if false)
BB79   <- [13]
  val?            %79.0 = CallBuiltin        !v    proc.time() e0.1   <real>
  void                    StVar              lW    time, %79.0, e0.1
  (cls|spec|blt)  %79.2 = LdFun              !v    on.exit, <0x55688db39270>, e0.1
  prom-           %79.3 = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p1, e0.1
  val?            %79.4 = Call               !v    %79.2(%79.3) e0.1
  val?^ | miss    %79.5 = LdVar              eR    expr, e0.1
  val?            %79.6 = Force!<lazy>       !v    %79.5, e0.1   <int$->
  val?^ | miss    %79.7 = LdVar              eR    proc.time, e0.1
  lgl$#-          %79.8 = Identical                <blt proc.time>, %79.7   <true>
  void                    Branch                   %79.8 -> BB81 (if true) | BB82 (if false)
BB80   <- [13]
  fs              %80.0 = FrameState         R     0x55688ece7cf0+82: [%13.2], env=e0.1
  void                    Deopt              !v    %80.0, DeadBranchReached@0x55688f15c238[Test#0], %13.4   !
BB81   <- [79]
  val?            %81.0 = CallBuiltin        !v    proc.time() e0.1   <real>
  void                    StVar              lW    new.time, %81.0, e0.1
  (cls|spec|blt)  %81.2 = LdFun              !v    on.exit, <0x55688db39270>, e0.1
  val?            %81.3 = Call               !v    %81.2() e0.1
  val?^ | miss    %81.4 = LdVar              eR    structure, e0.1
  lgl$#-          %81.5 = Identical                %81.4, function(.Data, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %81.5 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x55688ece7cf0+211: [%79.6], env=e0.1
  void                    Deopt              !v    %82.0, DeadBranchReached@0x55688f15c238[Test#1], %79.8   !
BB83   <- [81]
  prom-           %83.0 = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p4, e0.1
  dots-           %83.1 = DotsList           l     class="proc_time"
  ct              %83.2 = PushContext        lCL   %83.0, %83.1, structure(-(new.time, time), class="proc_time"), function(.Data, ...) <(rir::DispatchTable*)0x5|..., e0.1
  val?^           %83.3 = CastType                 up %83.0
  env             e83.4 = MkEnv              l     .Data=%83.3, ...=%83.1, parent=R_BaseNamespace, context 1
  val?            %83.5 = Force!<lazy>       !vL   %83.3, e83.4   <real>
  lgl$-           %83.6 = Is                       %83.5, NULL
  lgl$#-          %83.7 = CheckTrueFalse     e     %83.6
  void                    Branch                   %83.7 -> BB56 (if true) | BB20 (if false)
BB84   <- [81]
  fs              %84.0 = FrameState         R     0x55688ece7cf0+330: [%81.3], env=e0.1
  void                    Deopt              !v    %84.0, CallTarget@0x55688f15c238[Call#8], %81.4   !
BB56   <- [83]
  fs              %56.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  (cls|spec|blt)  %56.1 = LdFun              !v    warning, R_BaseNamespace
  fs              %56.2 = FrameState         R     0x55688dc65be0+35: [%56.1], env=e83.4, next=%56.0
  void                    Deopt              !v    %56.2, DeadCall@0x55688f55a0e8[Call#0], %56.1   !
BB20   <- [83]
  val?            %20.0 = NamedCall          !v    <blt list>(class="proc_time") e83.4   <vec$+>
  void                    StVar              lW    attrib, %20.0, e83.4
  lgl$#-          %20.2 = IsType                   %20.0 isA val?+
  val?^ | miss    %20.3 = LdVar              eR    length, e83.4
  lgl$#-          %20.4 = Identical                <blt length>, %20.3   <true>
  void                    Branch                   %20.4 -> BB85 (if true) | BB86 (if false)
BB85   <- [20]
  val             %85.0 = ChkMissing         e     %20.0
  void                    Branch                   %20.2 -> BB87 (if true) | BB88 (if false)
BB86   <- [20]
  void                    Nop                !     
  lgl$#-          %86.1 = %20.4
  dr              %86.2 = DeadBranchReached@0x55688f55a0e8[Test#0]
  goto BB21
BB87   <- [85]
  val?+           %87.0 = CastType           d     dn %20.0   <vec$+>
  (int|real)$-    %87.1 = CallSafeBuiltin    wed   length(%87.0)    <int$->
  lgl$#-          %87.2 = IsType                   %87.1 isA int$-
  void                    Branch                   %87.2 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  void                    Nop                !     
  val?            %88.1 = %20.0
  dr              %88.2 = Typecheck@0x55688f55a0e8[Type#1]
  goto BB21
BB21   <- [86, 88]
  val?^ | miss    %21.0 = Phi                      %86.1:BB86, %88.1:BB88
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %86.2:BB86, %88.2:BB88
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %21.5 = FrameState         R     0x55688dc65be0+113: [], env=e83.4, next=%21.4
  void                    Deopt              !v    %21.5, %21.3, %21.1   !
BB89   <- [87]
  int$-           %89.0 = CastType           d     dn %87.1
  lgl$#-          %89.1 = CheckTrueFalse     e     %89.0
  void                    Branch                   %89.1 -> BB27 (if true) | BB25 (if false)
BB90   <- [87]
  void                    Nop                !     
  (int|real)$-    %90.1 = %87.1
  dr              %90.2 = Typecheck@0x55688f55a0e8[Type#4]
  goto BB23
BB27   <- [89]
  val?^ | miss    %27.0 = LdVar              eR    c, e83.4
  lgl$#-          %27.1 = Identical                <blt c>, %27.0   <true>
  void                    Branch                   %27.1 -> BB91 (if true) | BB92 (if false)
BB25   <- [89]
  void                    Nop                !     
  goto BB26
BB23   <- [90, 92]
  val?^ | miss    %23.0 = Phi                      %90.1:BB90, %92.1:BB92
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %90.2:BB90, %92.2:BB92
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %23.5 = FrameState         R     0x55688dc65be0+204: [%87.1], env=e83.4, next=%23.4
  void                    Deopt              !v    %23.5, %23.3, %23.1   !
BB91   <- [27]
  str-            %91.0 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %91.0, e83.4
  val?^ | miss    %91.2 = LdVar              eR    names, e83.4
  lgl$#-          %91.3 = Identical                <blt names>, %91.2   <true>
  void                    Branch                   %91.3 -> BB93 (if true) | BB94 (if false)
BB92   <- [27]
  void                    Nop                !     
  lgl$#-          %92.1 = %27.1
  dr              %92.2 = DeadBranchReached@0x55688f55a0e8[Test#1]
  goto BB23
BB26   <- [25, 119]
  val?^ | miss    %26.0 = LdVar              eR    .Data, e83.4
  void                    Visible            v     
  val?            %26.2 = Force!<value>      !     %26.0, e83.4   <real>
  val?            %26.3 = PopContext         C     %26.2, %83.2   <real>
  void                    Return             l     %26.3
BB93   <- [91]
  val+            %93.0 = CallSafeBuiltin    wed   names(%87.0)    <str$->
  void                    StVar              lW    attrnames, %93.0, e83.4
  val?^ | miss    %93.2 = LdVar              eR    match, e83.4
  lgl$#-          %93.3 = Identical                %93.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %93.3 -> BB95 (if true) | BB96 (if false)
BB94   <- [91]
  fs              %94.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %94.1 = FrameState         R     0x55688dc65be0+361: [], env=e83.4, next=%94.0
  void                    Deopt              !v    %94.1, DeadBranchReached@0x55688f55a0e8[Test#2], %91.3   !
BB95   <- [93]
  val+            %95.0 = CallSafeBuiltin    wed   match(%93.0, %91.0, NA, nil)    <int$->
  lgl$#-          %95.1 = IsType                   %95.0 isA int$-
  void                    Branch                   %95.1 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  fs              %96.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %96.1 = FrameState         R     0x55688dc65be0+466: [], env=e83.4, next=%96.0
  void                    Deopt              !v    %96.1, CallTarget@0x55688f55a0e8[Call#5], %93.2   !
BB97   <- [95]
  int$-           %97.0 = CastType           d     dn %95.0
  void                    StVar              lW    m, %97.0, e83.4
  val?^ | miss    %97.2 = LdVar              eR    is.na, e83.4
  lgl$#-          %97.3 = Identical                <blt is.na>, %97.2   <true>
  void                    Branch                   %97.3 -> BB99 (if true) | BB100 (if false)
BB98   <- [95]
  fs              %98.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  prom-           %98.1 = MkArg                    %91.0, system.time[0x55688e5ac1d0]_p6 (!refl), e83.4
  val?~           %98.2 = CastType                 up %98.1
  fs              %98.3 = FrameState         R     0x55688dc65be0+503: [], env=e83.4, next=%98.0
  prom-           %98.4 = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p5 (!refl), e83.4
  val?^           %98.5 = CastType                 up %98.4
  env             e98.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%98.2, x=%98.5, parent=R_BaseNamespace, context 0
  fs              %98.7 = FrameState         R     0x55688e34ed40+69: [%95.0], env=e98.6, next=%98.3
  void                    Deopt              !v    %98.7, Typecheck@0x55688f55a0e8[Type#11], %95.0   !
BB99   <- [97]
  lgl$-           %99.0 = CallSafeBuiltin    wed   is.na(%97.0)    <lgl$->
  lgl$-           %99.1 = Not                d     %99.0, elided   <lgl$->
  void                    StVar              lW    ok, %99.1, e83.4
  val?^ | miss    %99.3 = LdVar              eR    any, e83.4
  lgl$#-          %99.4 = Identical                <blt any>, %99.3   <true>
  void                    Branch                   %99.4 -> BB101 (if true) | BB102 (if false)
BB100   <- [97]
  fs              %100.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %100.1 = FrameState         R     0x55688dc65be0+517: [], env=e83.4, next=%100.0
  void                    Deopt              !v    %100.1, DeadBranchReached@0x55688f55a0e8[Test#3], %97.3   !
BB101   <- [99]
  val?            %101.0 = CallBuiltin        !v    any(%99.1) e83.4   <lgl$->
  lgl$#-          %101.1 = IsType                   %101.0 isA lgl$-
  void                    Branch                   %101.1 -> BB103 (if true) | BB104 (if false)
BB102   <- [99]
  fs              %102.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %102.1 = FrameState         R     0x55688dc65be0+623: [], env=e83.4, next=%102.0
  void                    Deopt              !v    %102.1, DeadBranchReached@0x55688f55a0e8[Test#4], %99.4   !
BB103   <- [101]
  lgl$-           %103.0 = CastType           d     dn %101.0
  lgl$#-          %103.1 = CheckTrueFalse     e     %103.0
  void                    Branch                   %103.1 -> BB53 (if true) | BB40 (if false)
BB104   <- [101]
  void                    Nop                !     
  val?            %104.1 = %101.0
  dr              %104.2 = Typecheck@0x55688f55a0e8[Type#17]
  goto BB38
BB53   <- [103]
  val?^ | miss    %53.0 = LdVar              eR    c, e83.4
  lgl$#-          %53.1 = Identical                <blt c>, %53.0   <@?>
  void                    Branch                   %53.1 -> BB55 (if true) | BB54 (if false)
BB40   <- [103]
  val?^ | miss    %40.0 = LdVar              eR    any, e83.4
  lgl$#-          %40.1 = Identical                <blt any>, %40.0   <true>
  void                    Branch                   %40.1 -> BB105 (if true) | BB106 (if false)
BB38   <- [104, 106]
  val?^ | miss    %38.0 = Phi                      %104.1:BB104, %106.1:BB106
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %104.2:BB104, %106.2:BB106
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %38.5 = FrameState         R     0x55688dc65be0+714: [%101.0], env=e83.4, next=%38.4
  void                    Deopt              !v    %38.5, %38.3, %38.1   !
BB55   <- [53]
  fs              %55.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  str-            %55.1 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %55.1, e83.4
  (cls|spec|blt)  %55.3 = LdFun              !v    <-, e83.4
  fs              %55.4 = FrameState         R     0x55688dc65be0+876: [%55.3], env=e83.4, next=%55.0
  void                    Deopt              !v    %55.4, DeadCall@0x55688f55a0e8[Call#9], %55.3   !
BB54   <- [53]
  fs              %54.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  (cls|spec|blt)  %54.1 = LdFun              !v    c, e83.4
  fs              %54.2 = FrameState         R     0x55688dc65be0+758: [%54.1], env=e83.4, next=%54.0
  void                    Deopt              !v    %54.2, DeadCall@0x55688f55a0e8[Call#8], %54.1   !
BB105   <- [40]
  (cls|spec|blt)  %105.0 = LdFun              !v    [[, <0x55688db39c48>, e83.4
  prom-           %105.1 = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p9, e83.4
  val?            %105.2 = NamedCall          !v    %105.0(%105.1, "class", exact=true) e83.4   <str$->
  lgl$#-          %105.3 = IsType                   %105.2 isA val?-
  void                    Branch                   %105.3 -> BB107 (if true) | BB108 (if false)
BB106   <- [40]
  void                    Nop                !     
  lgl$#-          %106.1 = %40.1
  dr              %106.2 = DeadBranchReached@0x55688f55a0e8[Test#10]
  goto BB38
BB107   <- [105]
  val?-           %107.0 = CastType           d     dn %105.2   <str$->
  lgl-            %107.1 = Eq                 wed   %107.0, "factor", elided   <lgl$->
  lgl$#-          %107.2 = IsType                   %107.1 isA lgl$-
  void                    Branch                   %107.2 -> BB109 (if true) | BB110 (if false)
BB108   <- [105]
  fs              %108.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %108.1 = FrameState         R     0x55688dc65be0+1023: [<blt any>, %105.2], env=e83.4, next=%108.0
  void                    Deopt              !v    %108.1, Typecheck@0x55688f55a0e8[Type#38], %105.2   !
BB109   <- [107]
  lgl$-           %109.0 = CastType           d     dn %107.1
  val?            %109.1 = CallBuiltin        !v    any(%109.0) e83.4   <lgl$->
  lgl$#-          %109.2 = IsType                   %109.1 isA lgl$-
  void                    Branch                   %109.2 -> BB111 (if true) | BB112 (if false)
BB110   <- [107]
  fs              %110.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %110.1 = FrameState         R     0x55688dc65be0+1035: [<blt any>, %107.1], env=e83.4, next=%110.0
  void                    Deopt              !v    %110.1, Typecheck@0x55688f55a0e8[Type#39], %107.1   !
BB111   <- [109]
  lgl$-           %111.0 = CastType           d     dn %109.1
  lgl$-           %111.1 = AsLogical                %111.0
  lgl$#-          %111.2 = Identical                %111.1, false
  void                    Branch                   %111.2 -> BB48 (if true) | BB47 (if false)
BB112   <- [109]
  void                    Nop                !     
  val?            %112.1 = %109.1
  dr              %112.2 = Typecheck@0x55688f55a0e8[Type#40]
  goto BB45
BB48   <- [111]
  lgl$#-          %48.0 = CheckTrueFalse     e     %111.1
  void                    Branch                   %48.0 -> BB52 (if true) | BB49 (if false)
BB47   <- [111]
  fs              %47.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  (cls|spec|blt)  %47.1 = LdFun              !v    typeof, e83.4
  fs              %47.2 = FrameState         R     0x55688dc65be0+1074: [%111.1, %47.1], env=e83.4, next=%47.0
  void                    Deopt              !v    %47.2, DeadCall@0x55688f55a0e8[Call#14], %47.1   !
BB45   <- [112, 114, 116]
  val?^ | miss    %45.0 = Phi                      %112.1:BB112, %114.1:BB114, %116.1:BB116
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %112.2:BB112, %114.2:BB114, %116.2:BB116
  dr              %45.3 = %45.2
  fs              %45.4 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %45.5 = FrameState         R     0x55688dc65be0+1057: [%109.1], env=e83.4, next=%45.4
  void                    Deopt              !v    %45.5, %45.3, %45.1   !
BB52   <- [48]
  fs              %52.0 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  (cls|spec|blt)  %52.1 = LdFun              !v    storage.mode<-, e83.4
  fs              %52.2 = FrameState         R     0x55688dc65be0+1142: ["integer", %52.1], env=e83.4, next=%52.0
  void                    Deopt              !v    %52.2, DeadCall@0x55688f55a0e8[Call#15], %52.1   !
BB49   <- [48]
  val?^ | miss    %49.0 = LdVar              eR    c, e83.4
  lgl$#-          %49.1 = Identical                <blt c>, %49.0   <true>
  void                    Branch                   %49.1 -> BB113 (if true) | BB114 (if false)
BB113   <- [49]
  val?^ | miss    %113.0 = LdVar              eR    attributes, e83.4
  lgl$#-          %113.1 = Identical                <blt attributes>, %113.0   <true>
  void                    Branch                   %113.1 -> BB115 (if true) | BB116 (if false)
BB114   <- [49]
  void                    Nop                !     
  lgl$#-          %114.1 = %49.1
  dr              %114.2 = DeadBranchReached@0x55688f55a0e8[Test#11]
  goto BB45
BB115   <- [113]
  val?^ | miss    %115.0 = LdVar              eR    .Data, e83.4
  val?            %115.1 = Force!<wrapped>    !v    %115.0, e83.4   <real>
  val?            %115.2 = CallBuiltin        !v    attributes(%115.1) e83.4   <vec+>
  lgl$#-          %115.3 = IsType                   %115.2 isA val?+
  val?^ | miss    %115.4 = LdVar              eR    attrib, e83.4
  lgl$#-          %115.5 = IsType                   %115.4 isA val?~+ | miss
  void                    Branch                   %115.5 -> BB117 (if true) | BB118 (if false)
BB116   <- [113]
  void                    Nop                !     
  lgl$#-          %116.1 = %113.1
  dr              %116.2 = DeadBranchReached@0x55688f55a0e8[Test#12]
  goto BB45
BB117   <- [115]
  val?~+ | miss   %117.0 = CastType           d     dn %115.4
  val?+           %117.1 = Force!<value>            %117.0,    <vec$+>
  void                    Branch                   %115.3 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  void                    Nop                !     
  val?^ | miss    %118.1 = %115.4
  dr              %118.2 = Typecheck@0x55688f55a0e8[Type#51]
  goto BB50
BB119   <- [117]
  val?+           %119.0 = CastType           d     dn %115.2   <vec+>
  val+            %119.1 = CallSafeBuiltin    wed   c(%119.0, %117.1)    <vec+>
  (cls|spec|blt)  %119.2 = LdFun              !v    attributes<-, <0x55688db3a128>, e83.4
  val?^ | miss    %119.3 = LdVar              eR    .Data, e83.4
  val?            %119.4 = Force!<wrapped>    !v    %119.3, e83.4   <real>
  val?            %119.5 = NamedCall          !v    %119.2(%119.4, value=%119.1) e83.4
  void                    StVar              lW    .Data, %119.5, e83.4
  goto BB26
BB120   <- [117]
  void                    Nop                !     
  val?            %120.1 = %115.2
  dr              %120.2 = Typecheck@0x55688f55a0e8[Type#50]
  goto BB50
BB50   <- [118, 120]
  val?^ | miss    %50.0 = Phi                      %118.1:BB118, %120.1:BB120
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %118.2:BB118, %120.2:BB120
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55688ece7cf0+376: [], env=e0.1
  fs              %50.5 = FrameState         R     0x55688dc65be0+1361: [<blt c>, %115.2], env=e83.4, next=%50.4
  void                    Deopt              !v    %50.5, %50.3, %50.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     message, e0.0
  prom-           %0.2  = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p2, e0.0
  val?            %0.3  = Call               !     %0.1("Timing stopped at: ", %0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     ppt, e0.0
  prom-           %0.2  = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    proc.time, e0.0
  val?            %0.2  = Call               !v    %0.1() e0.0   <val?_>
  val?^ | miss    %0.3  = LdVar              eR    time, e0.0
  void                    Visible            v     
  val?            %0.5  = Force              !     %0.3, e0.0   <val?_>
  val?            %0.6  = Sub                !     %0.2, %0.5, e0.0   <val?_>
  void                    Return             l     %0.6
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    new.time, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real>
  val?^ | miss    %0.3  = LdVar              eR    time, e0.0
  void                    Visible            v     
  val?            %0.5  = Force<value>       !     %0.3, e0.0   <real>
  val?            %0.6  = Sub                !     %0.2, %0.5, e0.0   <real>
  void                    Return             l     %0.6
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attrnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    specials, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attrib, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    res, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, <0x55688db4e5c0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p13, e0.0
  prom-           %0.3  = MkArg                    unboundValue, system.time[0x55688e5ac1d0]_p14, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec->
  void                    Return             l     %0.4
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55688db3a940>, e0.0
  val?            %0.2  = Call               !     %0.1("Ncells", "Vcells") e0.0   <str->
  void                    Return             l     %0.2
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55688db3a940>, e0.0
  val?            %0.2  = Call               !     %0.1("used", "(Mb)", "gc trigger", "(Mb)", "limit (Mb)", "max used", "(Mb)") e0.0   <str->
  void                    Return             l     %0.2

│ system.time[0x55688e5ac1d0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
