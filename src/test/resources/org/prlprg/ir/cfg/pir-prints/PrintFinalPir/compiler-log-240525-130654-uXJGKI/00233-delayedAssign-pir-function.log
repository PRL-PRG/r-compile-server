
┌──────────────────────────────────────────────────────────────────────────────┐
│ delayedAssign[0x5614fac5ce50]                                                │
│ Context: CorrOrd,!TMany,Argmatch;Eager2,NonRefl2                             │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
delayedAssign[0x5614fac5ce50]
BB0
  val?^ | miss    %0.0  = LdArg                    3
  val?~ | miss    %0.1  = LdArg                    2
  val?^ | miss    %0.2  = LdArg                    1
  val?^ | miss    %0.3  = LdArg                    0
  lgl$#-          %0.4  = Identical                %0.1, missingArg
  lgl$#-          %0.5  = Identical                %0.0, missingArg
  env             e0.6  = MkEnv              l     x=%0.3, value=%0.2, eval.env=%0.1, assign.env=%0.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.4 -> BB2 (if true) | BB9 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, delayedAssign[0x5614fac5ce50]_p0, e0.6
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    eval.env, %2.1, e0.6
  goto BB3
BB9   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 9]
  void                    Branch                   %0.5 -> BB8 (if true) | BB4 (if false)
BB8   <- [3]
  prom-           %8.0  = MkArg                    unboundValue, delayedAssign[0x5614fac5ce50]_p1, e0.6
  val?^ | miss    %8.1  = CastType                 up %8.0
  void                    StArg              lW    assign.env, %8.1, e0.6
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [8, 4]
  val?^           %5.0  = ChkMissing         e     %0.3
  val?            %5.1  = Force!<lazy>       !v    %5.0, e0.6   <str$+>
  lgl$#-          %5.2  = IsType                   %5.1 isA val?+
  void                    Branch                   %5.2 -> BB10 (if true) | BB11 (if false)
BB10   <- [5]
  val?+           %10.0 = CastType           d     dn %5.1   <str$+>
  (cls|spec|blt)  %10.1 = LdFun              !v    substitute, <0x5614f88a6468>, e0.6
  prom-           %10.2 = MkArg                    unboundValue, delayedAssign[0x5614fac5ce50]_p2, e0.6
  val?            %10.3 = Call               !v    %10.1(%10.2) e0.6   <code->
  val?^ | miss    %10.4 = LdVar              eR    eval.env, e0.6
  val?            %10.5 = Force!<lazy>       !v    %10.4, e0.6   <env->
  val?^ | miss    %10.6 = LdVar              eR    assign.env, e0.6
  val?            %10.7 = Force!<lazy>       !v    %10.6, e0.6   <env->
  val?            %10.8 = CallBuiltin        !     delayedAssign(%10.0, %10.3, %10.5, %10.7) e0.6
  void                    Return             l     %10.8
BB11   <- [5]
  fs              %11.0 = FrameState         R     0x5614faf190c0+9: [%5.1], env=e0.6
  void                    Deopt              !v    %11.0, Typecheck@0x5614faa7c680[Type#2], %5.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, <0x5614f89bb170>, e0.0
  val?            %0.2  = Call               !     %0.1(1) e0.0   <env->
  void                    Return             l     %0.2
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1(1) e0.0   <val?_>
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ delayedAssign[0x5614fac5ce50]                                                │
└──────────────────────────────────────────────────────────────────────────────┘
