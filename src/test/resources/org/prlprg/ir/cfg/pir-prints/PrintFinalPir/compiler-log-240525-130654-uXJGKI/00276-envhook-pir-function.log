
┌──────────────────────────────────────────────────────────────────────────────┐
│ envhook[0x5614fad4be20]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── Final PIR Version
envhook[0x5614fad4be20]
BB0
  val?~+          %0.0  = LdArg                    0
  val+            %0.1  = Force<wrapped>           %0.0,    <str$->
  val?^ | miss    %0.2  = LdVar              eR    existsInFrame, ?
  (cls|spec|blt)  %0.3  = CastType                 dn %0.2
  val+            %0.4  = CallSafeBuiltin          bodyCode(%0.3) 
  lgl$#-          %0.5  = Identical                %0.4, <(rir::DispatchTable*)0x5614fa886c90>
  void                    Branch                   %0.5 -> BB62 (if true) | BB63 (if false)
BB62   <- [0]
  val?            %62.0 = Force!             d     %0.2, 
  env             e62.1 = MkEnv              l     n=%0.0, parent=?, context 1
  prom-           %62.2 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p1, e62.1
  (cls|spec|blt)  %62.3 = ChkFunction        e     %62.0
  val?            %62.4 = StaticCall         !v    existsInFrame[0x5614fbb0fce0](%0.1, %62.2) from %62.3 e62.1   <lgl$->
  lgl$#-          %62.5 = IsType                   %62.4 isA lgl$-
  void                    Branch                   %62.5 -> BB64 (if true) | BB65 (if false)
BB63   <- [0]
  env             e63.0 = (MkEnv)            l     n=%0.0, parent=?, context 1
  fs              %63.1 = FrameState         R     0x5614fb133270+0: [], env=e63.0
  void                    Deopt              !v    %63.1, CallTarget@0x5614faf6ec88[Call#0], %0.4
BB64   <- [62]
  lgl$-           %64.0 = CastType           d     dn %62.4
  lgl$#-          %64.1 = CheckTrueFalse     e     %64.0
  void                    Branch                   %64.1 -> BB58 (if true) | BB7 (if false)
BB65   <- [62]
  void                    Nop                !     
  val?            %65.1 = %62.4
  dr              %65.2 = Typecheck@0x5614faf6ec88[Type#2]
  goto BB3
BB58   <- [64]
  val?^ | miss    %58.0 = LdVar              eR    envenv, e62.1
  lgl$#-          %58.1 = IsType                   %58.0 isA val?~- | miss
  void                    Branch                   %58.1 -> BB66 (if true) | BB67 (if false)
BB7   <- [64]
  val?^ | miss    %7.0  = LdVar              eR    mkenv, e62.1
  (cls|spec|blt)  %7.1  = CastType                 dn %7.0
  val+            %7.2  = CallSafeBuiltin          bodyCode(%7.1) 
  lgl$#-          %7.3  = Identical                %7.2, <(rir::DispatchTable*)0x5614fac5a8b0>
  void                    Branch                   %7.3 -> BB70 (if true) | BB71 (if false)
BB3   <- [65, 67, 69, 71]
  val?^ | miss    %3.0  = Phi                      %65.1:BB65, %67.1:BB67, %69.1:BB69, %71.1:BB71
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %65.2:BB65, %67.2:BB67, %69.2:BB69, %71.2:BB71
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5614fb133270+37: [%62.4], env=e62.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB66   <- [58]
  val?~- | miss   %66.0 = CastType           d     dn %58.0
  val?-           %66.1 = Force!<value>            %66.0,    <env->
  lgl$#-          %66.2 = IsType                   %66.1 isA val+   <true>
  void                    Branch                   %66.2 -> BB68 (if true) | BB69 (if false)
BB67   <- [58]
  void                    Nop                !     
  val?^ | miss    %67.1 = %58.0
  dr              %67.2 = Typecheck@0x5614faf6ec88[Type#74]
  goto BB3
BB70   <- [7]
  val?            %70.0 = Force!             d     %7.0, 
  (cls|spec|blt)  %70.1 = ChkFunction        e     %70.0
  env             e70.2 = CallSafeBuiltin          environment(%70.1) 
  ct              %70.3 = PushContext        lCL   mkenv(), %70.1, e62.1
  val?^ | miss    %70.4 = LdVar              eR    baseenv, e70.2
  lgl$#-          %70.5 = Identical                <blt baseenv>, %70.4   <true>
  void                    Branch                   %70.5 -> BB74 (if true) | BB75 (if false)
BB71   <- [7]
  void                    Nop                !     
  val+            %71.1 = %7.2
  dr              %71.2 = CallTarget@0x5614faf6ec88[Call#1]
  goto BB3
BB68   <- [66]
  val?^ | miss    %68.0 = LdVar              eR    n, e62.1
  val?            %68.1 = Force!<wrapped>    !v    %68.0, e62.1   <str$->
  lgl$#-          %68.2 = IsType                   %68.1 isA val?-
  void                    Branch                   %68.2 -> BB72 (if true) | BB73 (if false)
BB69   <- [66]
  void                    Nop                !     
  lgl$#-          %69.1 = %66.2
  dr              %69.2 = DeadBranchReached@0x5614faf6ec88[Test#4]
  goto BB3
BB74   <- [70]
  env             e74.0 = (MkEnv)            l     parent=e70.2, context 1
  val?            %74.1 = CallBuiltin        !vL   baseenv() e74.0   <env->
  lgl$#-          %74.2 = IsType                   %74.1 isA val?-
  lgl$#-          %74.3 = IsEnvStub          R     , e74.0
  void                    Branch                   %74.3 -> BB76 (if true) | BB77 (if false)
BB75   <- [70]
  void                    DropContext        C     
  fs              %75.1 = FrameState         R     0x5614fb133270+43: [%64.1], env=e62.1
  void                    Deopt              !v    %75.1, DeadBranchReached@0x5614faf6ede8[Test#0], %70.5   !
BB72   <- [68]
  val?-           %72.0 = CastType           d     dn %68.1   <str$->
  val?            %72.1 = Extract2_1D        wed   %66.1, %72.0, elided   <env->
  void                    Visible            v     
  val?            %72.3 = %72.1
  goto BB50
BB73   <- [68]
  fs              %73.0 = FrameState         R     0x5614fb133270+1582: [%66.1, %68.1], env=e62.1
  void                    Deopt              !v    %73.0, Typecheck@0x5614faf6ec88[Type#76], %68.1   !
BB76   <- [74]
  void                    Branch                   %74.2 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  void                    Nop                !     
  env             e77.1 = e74.0
  dr              %77.2 = EnvStubMaterialized@0x5614faf6ede8[Call#unknown]
  goto BB8
BB50   <- [72, 116]
  val?            %50.0 = Phi                      %116.3:BB116, %72.3:BB72
  val?            %50.1 = %50.0
  void                    Return             l     %50.1
BB78   <- [76]
  val?-           %78.0 = CastType           d     dn %74.1   <env->
  val+            %78.1 = CallSafeBuiltin    wed   new.env(true, %78.0, 29L) 
  val?            %78.2 = PopContext         C     %78.1, %70.3   <env->
  void                    StVar              lW    e, %78.2, e62.1
  val             %78.4 = ChkMissing         e     %78.2
  val?^ | miss    %78.5 = LdVar              eR    envenv !upd, e62.1
  lgl$#-          %78.6 = IsType                   %78.5 isA val?~- | miss
  void                    Branch                   %78.6 -> BB80 (if true) | BB81 (if false)
BB79   <- [76]
  void                    Nop                !     
  val?            %79.1 = %74.1
  dr              %79.2 = Typecheck@0x5614faf6ede8[Type#0]
  goto BB8
BB8   <- [77, 79]
  val?^ | miss    %8.0  = Phi                      e77.1:BB77, %79.1:BB79
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %77.2:BB77, %79.2:BB79
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x5614fb133270+75: [], env=e62.1
  fs              %8.5  = FrameState         R     0x5614fac931a0+78: [true, %74.1], env=e74.0, next=%8.4
  void                    Deopt              !v    %8.5, %8.3, %8.1   !
BB80   <- [78]
  val?~- | miss   %80.0 = CastType           d     dn %78.5
  val?-           %80.1 = Force!<value>            %80.0,    <env->
  val?^ | miss    %80.2 = LdVar              eR    n, e62.1
  val?            %80.3 = Force!<wrapped>    !v    %80.2, e62.1   <str$->
  lgl$#-          %80.4 = IsType                   %80.3 isA val?-
  lgl$#-          %80.5 = IsType                   %78.2 isA val?-
  void                    Branch                   %80.5 -> BB82 (if true) | BB83 (if false)
BB81   <- [78]
  fs              %81.0 = FrameState         R     0x5614fb133270+89: [], env=e62.1
  void                    Deopt              !v    %81.0, Typecheck@0x5614faf6ec88[Type#5], %78.5   !
BB82   <- [80]
  val?-           %82.0 = CastType           d     dn %78.2   <env->
  void                    Branch                   %80.4 -> BB84 (if true) | BB85 (if false)
BB83   <- [80]
  void                    Nop                !     
  val?            %83.1 = %78.2
  dr              %83.2 = Typecheck@0x5614faf6ec88[Type#3]
  goto BB12
BB84   <- [82]
  val?-           %84.0 = CastType           d     dn %80.3   <str$->
  val?+           %84.1 = Subassign2_1D      wed   %82.0, %80.1, %84.0, elided
  void                    StVar              lW    envenv, %84.1, e62.1
  val?^ | miss    %84.3 = LdVar              eR    env, e62.1
  lgl$#-          %84.4 = IsType                   %84.3 isA val?~- | miss
  void                    Branch                   %84.4 -> BB86 (if true) | BB87 (if false)
BB85   <- [82]
  void                    Nop                !     
  val?            %85.1 = %80.3
  dr              %85.2 = Typecheck@0x5614faf6ec88[Type#6]
  goto BB12
BB12   <- [83, 85]
  val?^ | miss    %12.0 = Phi                      %83.1:BB83, %85.1:BB85
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %83.2:BB83, %85.2:BB85
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x5614fb133270+126: [%78.2, %80.1, %80.3], env=e62.1
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB86   <- [84]
  val?~- | miss   %86.0 = CastType           d     dn %84.3
  val?-           %86.1 = Force!<value>            %86.0,    <env->
  lgl$#-          %86.2 = IsType                   %86.1 isA val+   <true>
  void                    Branch                   %86.2 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  void                    Nop                !     
  val?^ | miss    %87.1 = %84.3
  dr              %87.2 = Typecheck@0x5614faf6ec88[Type#7]
  goto BB14
BB88   <- [86]
  val?^ | miss    %88.0 = LdVar              eR    n, e62.1
  val?            %88.1 = Force!<wrapped>    !v    %88.0, e62.1   <str$->
  lgl$#-          %88.2 = IsType                   %88.1 isA val?-
  void                    Branch                   %88.2 -> BB90 (if true) | BB91 (if false)
BB89   <- [86]
  void                    Nop                !     
  lgl$#-          %89.1 = %86.2
  dr              %89.2 = DeadBranchReached@0x5614faf6ec88[Test#0]
  goto BB14
BB14   <- [87, 89]
  val?^ | miss    %14.0 = Phi                      %87.1:BB87, %89.1:BB89
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %87.2:BB87, %89.2:BB89
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x5614fb133270+141: [], env=e62.1
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB90   <- [88]
  val?-           %90.0 = CastType           d     dn %88.1   <str$->
  val?            %90.1 = Extract2_1D        wed   %86.1, %90.0, elided   <int->
  lgl$-           %90.2 = Is                       %90.1, list
  void                    StVar              lW    key, %90.1, e62.1
  val             %90.4 = ChkMissing         e     %90.1
  lgl$#-          %90.5 = CheckTrueFalse     e     %90.2
  void                    Branch                   %90.5 -> BB57 (if true) | BB18 (if false)
BB91   <- [88]
  fs              %91.0 = FrameState         R     0x5614fb133270+195: [%86.1, %88.1], env=e62.1
  void                    Deopt              !v    %91.0, Typecheck@0x5614faf6ec88[Type#9], %88.1   !
BB57   <- [90]
  (cls|spec|blt)  %57.0 = LdFun              !v    $, e62.1
  fs              %57.1 = FrameState         R     0x5614fb133270+265: [%57.0], env=e62.1
  void                    Deopt              !v    %57.1, DeadCall@0x5614faf6ec88[Call#2], %57.0   !
BB18   <- [90]
  void                    StVar              lW    ekey, %90.1, e62.1
  val?^ | miss    %18.1 = LdVar              eR    lazyLoadDBfetch, e62.1
  lgl$#-          %18.2 = Identical                <blt lazyLoadDBfetch>, %18.1   <true>
  void                    Branch                   %18.2 -> BB92 (if true) | BB93 (if false)
BB92   <- [18]
  val?^ | miss    %92.0 = LdVar              eR    datafile, e62.1
  lgl$#-          %92.1 = IsType                   %92.0 isA val?~- | miss
  void                    Branch                   %92.1 -> BB94 (if true) | BB95 (if false)
BB93   <- [18]
  void                    Nop                !     
  lgl$#-          %93.1 = %18.2
  dr              %93.2 = DeadBranchReached@0x5614faf6ec88[Test#1]
  goto BB19
BB94   <- [92]
  val?~- | miss   %94.0 = CastType           d     dn %92.0
  val?-           %94.1 = Force!<value>            %94.0,    <str$->
  val?^ | miss    %94.2 = LdVar              eR    compressed, e62.1
  lgl$#-          %94.3 = IsType                   %94.2 isA lgl$-
  void                    Branch                   %94.3 -> BB96 (if true) | BB97 (if false)
BB95   <- [92]
  void                    Nop                !     
  val?^ | miss    %95.1 = %92.0
  dr              %95.2 = Typecheck@0x5614faf6ec88[Type#21]
  goto BB19
BB19   <- [93, 95, 97, 99]
  val?^ | miss    %19.0 = Phi                      %93.1:BB93, %95.1:BB95, %97.1:BB97, %99.1:BB99
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %93.2:BB93, %95.2:BB95, %97.2:BB97, %99.2:BB99
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x5614fb133270+311: [], env=e62.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB96   <- [94]
  lgl$-           %96.0 = CastType           d     dn %94.2
  val?^ | miss    %96.1 = LdVar              eR    envhook, e62.1
  lgl$#-          %96.2 = IsType                   %96.1 isA val?~- | miss
  void                    Branch                   %96.2 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  void                    Nop                !     
  val?^ | miss    %97.1 = %94.2
  dr              %97.2 = Typecheck@0x5614faf6ec88[Type#22]
  goto BB19
BB98   <- [96]
  val?~- | miss   %98.0 = CastType           d     dn %96.1
  val?-           %98.1 = Force!<value>            %98.0,    <cls->
  val?            %98.2 = CallBuiltin        !v    lazyLoadDBfetch(%90.1, %94.1, %96.0, %98.1) e62.1   <vec+>
  void                    StVar              lW    data, %98.2, e62.1
  (cls|spec|blt)  %98.4 = LdFun              !v    $, <0x5614f88a6c10>, e62.1
  prom-           %98.5 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p2, e62.1
  prom-           %98.6 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p3, e62.1
  val?            %98.7 = Call               !v    %98.4(%98.5, %98.6) e62.1   <env->
  lgl$-           %98.8 = Is                       %98.7, NULL
  lgl$-           %98.9 = Not                d     %98.8, elided
  lgl$#-          %98.10 = CheckTrueFalse     e     %98.9
  void                    Branch                   %98.10 -> BB56 (if true) | BB21 (if false)
BB99   <- [96]
  void                    Nop                !     
  val?^ | miss    %99.1 = %96.1
  dr              %99.2 = Typecheck@0x5614faf6ec88[Type#23]
  goto BB19
BB56   <- [98]
  (cls|spec|blt)  %56.0 = LdFun              !v    $, <0x5614f88a6c10>, e62.1
  prom-           %56.1 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p19, e62.1
  prom-           %56.2 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p20, e62.1
  val?            %56.3 = Call               !v    %56.0(%56.1, %56.2) e62.1   <env->
  val?            %56.4 = %56.3
  goto BB24
BB21   <- [98]
  val?^ | miss    %21.0 = LdVar              eR    emptyenv, e62.1
  lgl$#-          %21.1 = Identical                <blt emptyenv>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB24   <- [56, 23]
  val?            %24.0 = Phi                      %23.1:BB23, %56.4:BB56
  val?            %24.1 = %24.0
  val?^ | miss    %24.2 = LdVar              eR    parent.env<-, e62.1
  (cls|spec|blt)  %24.3 = CastType                 dn %24.2
  val+            %24.4 = CallSafeBuiltin          bodyCode(%24.3) 
  lgl$#-          %24.5 = Identical                %24.4, <(rir::DispatchTable*)0x5614facbac00>
  void                    Branch                   %24.5 -> BB100 (if true) | BB101 (if false)
BB23   <- [21]
  val?            %23.0 = CallBuiltin        !v    emptyenv() e62.1   <val?_>
  val?            %23.1 = %23.0
  goto BB24
BB22   <- [21]
  (cls|spec|blt)  %22.0 = LdFun              !v    emptyenv, e62.1
  fs              %22.1 = FrameState         R     0x5614fb133270+555: [%22.0], env=e62.1
  void                    Deopt              !v    %22.1, DeadCall@0x5614faf6ec88[Call#5], %22.0   !
BB100   <- [24]
  val?            %100.0 = Force!             d     %24.2, 
  val?^ | miss    %100.1 = LdVar              eR    e, e62.1
  lgl$#-          %100.2 = IsType                   %100.1 isA val?~- | miss
  void                    Branch                   %100.2 -> BB102 (if true) | BB103 (if false)
BB101   <- [24]
  void                    Nop                !     
  val+            %101.1 = %24.4
  dr              %101.2 = CallTarget@0x5614faf6ec88[Call#7]
  goto BB25
BB102   <- [100]
  val?~- | miss   %102.0 = CastType           d     dn %100.1
  val?-           %102.1 = Force!<value>            %102.0,    <env->
  (cls|spec|blt)  %102.2 = ChkFunction        e     %100.0
  val?            %102.3 = StaticCall         !v    parent.env<-[0x5614faa287b0](%102.1, %24.1) from %102.2 { 0 1n } e62.1
  void                    StVar              lW    e, %102.3, e62.1
  val?^ | miss    %102.5 = LdVar              eR    list2env, e62.1
  (cls|spec|blt)  %102.6 = CastType                 dn %102.5
  val+            %102.7 = CallSafeBuiltin          bodyCode(%102.6) 
  lgl$#-          %102.8 = Identical                %102.7, <(rir::DispatchTable*)0x5614faa2f310>
  void                    Branch                   %102.8 -> BB104 (if true) | BB105 (if false)
BB103   <- [100]
  void                    Nop                !     
  val?^ | miss    %103.1 = %100.1
  dr              %103.2 = Typecheck@0x5614faf6ec88[Type#32]
  goto BB25
BB25   <- [101, 103]
  val?^ | miss    %25.0 = Phi                      %101.1:BB101, %103.1:BB103
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %101.2:BB101, %103.2:BB103
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x5614fb133270+651: [%24.1], env=e62.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB104   <- [102]
  val?            %104.0 = Force!             d     %102.5, 
  prom-           %104.1 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p5, e62.1
  prom-           %104.2 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p8 (!refl), e62.1
  (cls|spec|blt)  %104.3 = ChkFunction        e     %104.0
  env             e104.4 = CallSafeBuiltin          environment(%104.3) 
  ct              %104.5 = PushContext        lCL   %104.1, %104.2, list2env($(data, bindings), e), %104.3, e62.1
  val?^           %104.6 = CastType                 up %104.2
  val?^           %104.7 = CastType                 up %104.1
  env             e104.8 = MkEnv              l     x=%104.7, envir=%104.6, parent=e104.4, context 1
  val?            %104.9 = Force!<lazy>       !vL   %104.7, e104.8   <vec+>
  val?            %104.10 = Force!<lazy>       !vrL  %104.6, e104.8   <env->
  val?            %104.11 = CallBuiltin        !v    list2env(%104.9, %104.10) e104.8
  val?            %104.12 = PopContext         C     %104.11, %104.5
  (cls|spec|blt)  %104.13 = LdFun              !v    $, <0x5614f88a6c10>, e62.1
  prom-           %104.14 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p9, e62.1
  prom-           %104.15 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p10, e62.1
  val?            %104.16 = Call               !v    %104.13(%104.14, %104.15) e62.1   <nil->
  lgl$-           %104.17 = Is                       %104.16, NULL
  lgl$-           %104.18 = Not                d     %104.17, elided
  lgl$#-          %104.19 = CheckTrueFalse     e     %104.18
  void                    Branch                   %104.19 -> BB55 (if true) | BB29 (if false)
BB105   <- [102]
  fs              %105.0 = FrameState         R     0x5614fb133270+719: [], env=e62.1
  void                    Deopt              !v    %105.0, CallTarget@0x5614faf6ec88[Call#8], %102.7   !
BB55   <- [104]
  (cls|spec|blt)  %55.0 = LdFun              !v    $, e62.1
  fs              %55.1 = FrameState         R     0x5614fb133270+821: [%55.0], env=e62.1
  void                    Deopt              !v    %55.1, DeadCall@0x5614faf6ec88[Call#11], %55.0   !
BB29   <- [104]
  (cls|spec|blt)  %29.0 = LdFun              !v    $, <0x5614f88a6c10>, e62.1
  prom-           %29.1 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p11, e62.1
  prom-           %29.2 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p12, e62.1
  val?            %29.3 = Call               !v    %29.0(%29.1, %29.2) e62.1   <lgl$->
  lgl$-           %29.4 = Is                       %29.3, NULL
  lgl$#-          %29.5 = IsType                   %29.3 isA lgl$-
  void                    Branch                   %29.5 -> BB106 (if true) | BB107 (if false)
BB106   <- [29]
  lgl$-           %106.0 = Not                d     %29.4, elided
  lgl$-           %106.1 = AsLogical                %106.0
  lgl$#-          %106.2 = Identical                %106.1, false
  void                    Branch                   %106.2 -> BB54 (if true) | BB32 (if false)
BB107   <- [29]
  fs              %107.0 = FrameState         R     0x5614fb133270+963: [%29.3], env=e62.1
  void                    Deopt              !v    %107.0, Typecheck@0x5614faf6ec88[Type#46], %29.3   !
BB54   <- [106]
  void                    Nop                !     
  lgl$-           %54.1 = %106.1
  goto BB35
BB32   <- [106]
  (cls|spec|blt)  %32.0 = LdFun              !v    $, <0x5614f88a6c10>, e62.1
  prom-           %32.1 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p13, e62.1
  prom-           %32.2 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p14, e62.1
  val?            %32.3 = Call               !v    %32.0(%32.1, %32.2) e62.1   <lgl$->
  lgl$#-          %32.4 = IsType                   %32.3 isA lgl$-
  void                    Branch                   %32.4 -> BB108 (if true) | BB109 (if false)
BB35   <- [54, 108]
  lgl$-           %35.0 = Phi                      %108.3:BB108, %54.1:BB54
  lgl$-           %35.1 = %35.0
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB53 (if true) | BB36 (if false)
BB108   <- [32]
  lgl$-           %108.0 = CastType           d     dn %32.3
  lgl$-           %108.1 = AsLogical                %108.0
  lgl$-           %108.2 = LAnd                     %106.1, %108.1
  lgl$-           %108.3 = %108.2
  goto BB35
BB109   <- [32]
  fs              %109.0 = FrameState         R     0x5614fb133270+1018: [%106.1, %32.3], env=e62.1
  void                    Deopt              !v    %109.0, Typecheck@0x5614faf6ec88[Type#49], %32.3   !
BB53   <- [35]
  val?^ | miss    %53.0 = LdVar              eR    e, e62.1
  val?            %53.1 = Force!             !v    %53.0, e62.1   <val?_>
  val?            %53.2 = CallBuiltin        !v    setS4Object(%53.1, true, true) e62.1
  goto BB37
BB36   <- [35]
  void                    Nop                !     
  goto BB37
BB37   <- [36, 53]
  val?^ | miss    %37.0 = LdVar              eR    key, e62.1
  lgl$#-          %37.1 = IsType                   %37.0 isA int-
  void                    Branch                   %37.1 -> BB110 (if true) | BB111 (if false)
BB110   <- [37]
  (cls|spec|blt)  %110.0 = LdFun              !v    $, <0x5614f88a6c10>, e62.1
  prom-           %110.1 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p15, e62.1
  prom-           %110.2 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p16, e62.1
  val?            %110.3 = Call               !v    %110.0(%110.1, %110.2) e62.1   <lgl$->
  lgl$-           %110.4 = Is                       %110.3, NULL
  lgl$#-          %110.5 = IsType                   %110.3 isA lgl$-
  void                    Branch                   %110.5 -> BB112 (if true) | BB113 (if false)
BB111   <- [37]
  fs              %111.0 = FrameState         R     0x5614fb133270+1076: [], env=e62.1
  void                    Deopt              !v    %111.0, Typecheck@0x5614faf6ec88[Type#51], %37.0   !
BB112   <- [110]
  lgl$-           %112.0 = Not                d     %110.4, elided
  lgl$-           %112.1 = AsLogical                %112.0
  lgl$#-          %112.2 = Identical                %112.1, false
  void                    Branch                   %112.2 -> BB52 (if true) | BB42 (if false)
BB113   <- [110]
  fs              %113.0 = FrameState         R     0x5614fb133270+1402: [%110.3], env=e62.1
  void                    Deopt              !v    %113.0, Typecheck@0x5614faf6ec88[Type#68], %110.3   !
BB52   <- [112]
  void                    Nop                !     
  lgl$-           %52.1 = %112.1
  goto BB45
BB42   <- [112]
  (cls|spec|blt)  %42.0 = LdFun              !v    $, <0x5614f88a6c10>, e62.1
  prom-           %42.1 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p17, e62.1
  prom-           %42.2 = MkArg                    unboundValue, envhook[0x5614fad4be20]_p18, e62.1
  val?            %42.3 = Call               !v    %42.0(%42.1, %42.2) e62.1   <lgl$->
  lgl$#-          %42.4 = IsType                   %42.3 isA lgl$-
  void                    Branch                   %42.4 -> BB114 (if true) | BB115 (if false)
BB45   <- [52, 114]
  lgl$-           %45.0 = Phi                      %114.3:BB114, %52.1:BB52
  lgl$-           %45.1 = %45.0
  lgl$#-          %45.2 = CheckTrueFalse     e     %45.1
  void                    Branch                   %45.2 -> BB51 (if true) | BB46 (if false)
BB114   <- [42]
  lgl$-           %114.0 = CastType           d     dn %42.3
  lgl$-           %114.1 = AsLogical                %114.0
  lgl$-           %114.2 = LAnd                     %112.1, %114.1
  lgl$-           %114.3 = %114.2
  goto BB45
BB115   <- [42]
  fs              %115.0 = FrameState         R     0x5614fb133270+1457: [%112.1, %42.3], env=e62.1
  void                    Deopt              !v    %115.0, Typecheck@0x5614faf6ec88[Type#71], %42.3   !
BB51   <- [45]
  val?^ | miss    %51.0 = LdVar              eR    e, e62.1
  val?            %51.1 = Force!             !v    %51.0, e62.1   <val?_>
  val?            %51.2 = CallBuiltin        !v    lockEnvironment(%51.1, false) e62.1
  goto BB47
BB46   <- [45]
  void                    Nop                !     
  goto BB47
BB47   <- [46, 51]
  val?^ | miss    %47.0 = LdVar              eR    e, e62.1
  lgl$#-          %47.1 = IsType                   %47.0 isA val?~- | miss
  void                    Branch                   %47.1 -> BB116 (if true) | BB117 (if false)
BB116   <- [47]
  val?~- | miss   %116.0 = CastType           d     dn %47.0
  void                    Visible            v     
  val?-           %116.2 = Force!<value>            %116.0,    <env->
  val?-           %116.3 = %116.2
  goto BB50
BB117   <- [47]
  fs              %117.0 = FrameState         R     0x5614fb133270+1509: [], env=e62.1
  void                    Deopt              !v    %117.0, Typecheck@0x5614faf6ec88[Type#73], %47.0   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    envenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enclos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x5614f88a6c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, envhook[0x5614fad4be20]_p6, e0.0
  prom-           %0.3  = MkArg                    unboundValue, envhook[0x5614fad4be20]_p7, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    bindings, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attributes, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isS4, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isS4, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    locked, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    locked, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enclos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ envhook[0x5614fad4be20]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
