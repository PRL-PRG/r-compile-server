
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getGeneric[0x5614fb63cb60]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1                             │
│ Properties:                                                                  │
├────── Final PIR Version
.getGeneric[0x5614fb63cb60]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  lgl$#-          %0.4  = Identical                %0.0, missingArg
  env             e0.5  = MkEnv              l     f=%0.2, where=%0.1, package=%0.0, parent=<env 0x5614f8eae378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB57 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p0, e0.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.5
  goto BB3
BB57   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 57]
  void                    Branch                   %0.4 -> BB56 (if true) | BB4 (if false)
BB56   <- [3]
  void                    StArg              lW    package, "", e0.5
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [4, 56]
  lgl$-           %5.0  = Missing            eR    where, e0.5
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB53 (if true) | BB8 (if false)
BB53   <- [5]
  val?^ | miss    %53.0 = LdVar              eR    .getGenericFromCache, <env 0x5614f8eae378>
  lgl$#-          %53.1 = Identical                %53.0, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %53.1 -> BB58 (if true) | BB59 (if false)
BB8   <- [5]
  void                    Nop                !     
  nil-            %8.1  = nil
  goto BB9
BB58   <- [53]
  prom-           %58.0 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p3, e0.5
  prom-           %58.1 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p4, e0.5
  prom-           %58.2 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p5, e0.5
  ct              %58.3 = PushContext        lCL   %58.0, %58.1, %58.2, .getGenericFromCache(f, where, package), function(name, where, pkg="") <(rir::DispatchT|..., e0.5
  val?^           %58.4 = CastType                 up %58.2
  val?^           %58.5 = CastType                 up %58.1
  val?^           %58.6 = CastType                 up %58.0
  val?^ | miss    %58.7 = LdVar              eR    .getGenericFromCacheTable, <env 0x5614f8eae378>
  lgl$#-          %58.8 = Identical                %58.7, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %58.8 -> BB60 (if true) | BB61 (if false)
BB59   <- [53]
  fs              %59.0 = FrameState         R     0x5614f9277b20+0: [], env=e0.5
  void                    Deopt              !v    %59.0, CallTarget@0x5614fac75330[Call#0], %53.0
BB9   <- [8, 60]
  val?            %9.0  = Phi                      %8.1:BB8, %60.7:BB60   <(nil|cls)>
  val?            %9.1  = %9.0
  lgl$-           %9.2  = Is                       %9.1, NULL
  void                    StVar              lW    value, %9.1, e0.5
  val             %9.4  = ChkMissing         e     %9.1
  lgl$#-          %9.5  = CheckTrueFalse     e     %9.2
  void                    Branch                   %9.5 -> BB14 (if true) | BB12 (if false)
BB60   <- [58]
  env             e60.0 = MkEnv              l     name=%58.6, where=%58.5, pkg=%58.4, parent=<env 0x5614f8eae378>, context 1
  prom-           %60.1 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p6, e60.0
  prom-           %60.2 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p7, e60.0
  prom-           %60.3 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p8, e60.0
  prom-           %60.4 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p9, e60.0
  val?            %60.5 = StaticCall         !v    .getGenericFromCacheTable[0x5614faafef60](%60.1, %60.2, %60.3, %60.4) e60.0   <cls>
  val?            %60.6 = PopContext         C     %60.5, %58.3   <cls>
  val?            %60.7 = %60.6
  goto BB9
BB61   <- [58]
  fs              %61.0 = FrameState         R     0x5614f9277b20+65: [], env=e0.5
  env             e61.1 = (MkEnv)            l     name=%58.6, where=%58.5, pkg=%58.4, parent=<env 0x5614f8eae378>, context 1
  fs              %61.2 = FrameState         R     0x5614fac31d00+0: [], env=e61.1, next=%61.0
  void                    Deopt              !v    %61.2, CallTarget@0x5614fab46380[Call#0], %58.7   !
BB14   <- [9]
  val?^ | miss    %14.0 = LdVar              eR    is.character, e0.5
  lgl$#-          %14.1 = Identical                <blt is.character>, %14.0   <true>
  void                    Branch                   %14.1 -> BB62 (if true) | BB63 (if false)
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB62   <- [14]
  val?^ | miss    %62.0 = LdVar              eR    f, e0.5
  val?            %62.1 = Force!<lazy>       !v    %62.0, e0.5   <str$->
  lgl$#-          %62.2 = CallSafeBuiltin    wed   is.character(%62.1)    <lgl$->
  void                    Branch                   %62.2 -> BB48 (if true) | BB17 (if false)
BB63   <- [14]
  fs              %63.0 = FrameState         R     0x5614f9277b20+79: [], env=e0.5
  void                    Deopt              !v    %63.0, DeadBranchReached@0x5614fac75330[Test#0], %14.1   !
BB13   <- [12, 40]
  val?^ | miss    %13.0 = LdVar              eR    value, e0.5
  void                    Visible            v     
  val?            %13.2 = Force!<value>      !     %13.0, e0.5   <(nil|cls)>
  void                    Return             l     %13.2
BB48   <- [62]
  val?^ | miss    %48.0 = LdVar              eR    %in%, e0.5
  lgl$#-          %48.1 = Identical                %48.0, function(x, table) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %48.1 -> BB64 (if true) | BB65 (if false)
BB17   <- [62]
  void                    Nop                !     
  lgl$#-          %17.1 = %62.2
  goto BB18
BB64   <- [48]
  val?^ | miss    %64.0 = LdVar              eR    f, e0.5
  val?            %64.1 = Force!<wrapped>    !v    %64.0, e0.5   <str$->
  lgl$#-          %64.2 = IsType                   %64.1 isA val?+
  void                    Branch                   %64.2 -> BB66 (if true) | BB67 (if false)
BB65   <- [48]
  fs              %65.0 = FrameState         R     0x5614f9277b20+200: [%62.2], env=e0.5
  void                    Deopt              !v    %65.0, CallTarget@0x5614fac75330[Call#2], %48.0   !
BB18   <- [17, 68]
  lgl$-           %18.0 = Phi                      %68.4:BB68, %17.1:BB17
  lgl$-           %18.1 = %18.0
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB47 (if true) | BB19 (if false)
BB66   <- [64]
  val?+           %66.0 = CastType           d     dn %64.1   <(int|str)+>
  val+            %66.1 = CallSafeBuiltin    wed   match(%66.0, "as.double", 0L, nil)    <int->
  lgl$#-          %66.2 = IsType                   %66.1 isA int-
  void                    Branch                   %66.2 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  prom-           %67.0 = MkArg                    %64.1, .getGeneric[0x5614fb63cb60]_p2 (!refl), e0.5
  val?~           %67.1 = CastType                 up %67.0
  env             e67.2 = (MkEnv)            l     x=%67.1, table="as.double", parent=R_BaseNamespace, context 0
  env             e67.3 = MaterializeEnv           , e67.2   <@?>
  prom-           %67.4 = MkArg                    %64.1, .getGeneric[0x5614fb63cb60]_p10 (!refl), e67.3
  val?~           %67.5 = CastType                 up %67.4
  fs              %67.6 = FrameState         R     0x5614f9277b20+249: [%62.2], env=e0.5
  fs              %67.7 = FrameState         R     0x5614f8ed4320+54: [], env=e67.3, next=%67.6
  prom-           %67.8 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p11 (!refl), e67.3
  val?^           %67.9 = CastType                 up %67.8
  env             e67.10 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%67.9, x=%67.5, parent=R_BaseNamespace, context -1
  fs              %67.11 = FrameState         R     0x5614f90bbd40+9: [%64.1], env=e67.10, next=%67.7
  void                    Deopt              !v    %67.11, Typecheck@0x5614f910ecb0[Type#0], %64.1   !
BB47   <- [18]
  void                    StVar              lW    f, "as.numeric", e0.5
  goto BB20
BB19   <- [18]
  void                    Nop                !     
  goto BB20
BB68   <- [66]
  int-            %68.0 = CastType           d     dn %66.1
  lgl-            %68.1 = Gt                 wed   %68.0, 0L, elided   <lgl->
  lgl$-           %68.2 = AsLogical                %68.1
  lgl$-           %68.3 = LAnd                     %62.2, %68.2
  lgl$-           %68.4 = %68.3
  goto BB18
BB69   <- [66]
  prom-           %69.0 = MkArg                    %66.0, .getGeneric[0x5614fb63cb60]_p2 (!refl), e0.5
  val?~           %69.1 = CastType                 up %69.0
  env             e69.2 = (MkEnv)            l     x=%69.1, table="as.double", parent=R_BaseNamespace, context 0
  env             e69.3 = MaterializeEnv           , e69.2   <@?>
  prom-           %69.4 = MkArg                    %66.0, .getGeneric[0x5614fb63cb60]_p10 (!refl), e69.3
  val?~           %69.5 = CastType                 up %69.4
  fs              %69.6 = FrameState         R     0x5614f9277b20+249: [%62.2], env=e0.5
  fs              %69.7 = FrameState         R     0x5614f8ed4320+54: [], env=e69.3, next=%69.6
  prom-           %69.8 = MkArg                    unboundValue, .getGeneric[0x5614fb63cb60]_p11 (!refl), e69.3
  val?^           %69.9 = CastType                 up %69.8
  env             e69.10 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%69.9, x=%69.5, parent=R_BaseNamespace, context -1
  fs              %69.11 = FrameState         R     0x5614f90bbd40+69: [%66.1], env=e69.10, next=%69.7
  void                    Deopt              !v    %69.11, Typecheck@0x5614f9f06688[Type#2], %66.1   !
BB20   <- [19, 47]
  val?^ | miss    %20.0 = LdVar              eR    is.character, e0.5
  lgl$#-          %20.1 = Identical                <blt is.character>, %20.0   <true>
  void                    Branch                   %20.1 -> BB70 (if true) | BB71 (if false)
BB70   <- [20]
  val?^ | miss    %70.0 = LdVar              eR    f, e0.5
  val?            %70.1 = Force!<wrapped>    !v    %70.0, e0.5   <str$->
  lgl$#-          %70.2 = CallSafeBuiltin    wed   is.character(%70.1)    <lgl$->
  void                    Branch                   %70.2 -> BB44 (if true) | BB25 (if false)
BB71   <- [20]
  fs              %71.0 = FrameState         R     0x5614f9277b20+282: [], env=e0.5
  void                    Deopt              !v    %71.0, DeadBranchReached@0x5614fac75330[Test#1], %20.1   !
BB44   <- [70]
  val?^ | miss    %44.0 = LdVar              eR    nzchar, e0.5
  lgl$#-          %44.1 = Identical                <blt nzchar>, %44.0   <true>
  void                    Branch                   %44.1 -> BB72 (if true) | BB73 (if false)
BB25   <- [70]
  void                    Nop                !     
  lgl$#-          %25.1 = %70.2
  goto BB26
BB72   <- [44]
  val?^ | miss    %72.0 = LdVar              eR    f, e0.5
  val?            %72.1 = Force!<wrapped>    !v    %72.0, e0.5   <str$->
  val?            %72.2 = CallBuiltin        !v    nzchar(%72.1) e0.5   <lgl$->
  lgl$#-          %72.3 = IsType                   %72.2 isA lgl$-
  void                    Branch                   %72.3 -> BB74 (if true) | BB75 (if false)
BB73   <- [44]
  fs              %73.0 = FrameState         R     0x5614f9277b20+373: [%70.2], env=e0.5
  void                    Deopt              !v    %73.0, DeadBranchReached@0x5614fac75330[Test#2], %44.1   !
BB26   <- [25, 74]
  lgl$-           %26.0 = Phi                      %74.4:BB74, %25.1:BB25
  lgl$-           %26.1 = %26.0
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB43 (if true) | BB29 (if false)
BB74   <- [72]
  lgl$-           %74.0 = CastType           d     dn %72.2
  lgl$-           %74.1 = Not                d     %74.0, elided
  lgl$-           %74.2 = AsLogical                %74.1
  lgl$-           %74.3 = LAnd                     %70.2, %74.2
  lgl$-           %74.4 = %74.3
  goto BB26
BB75   <- [72]
  fs              %75.0 = FrameState         R     0x5614f9277b20+476: [%70.2, %72.2], env=e0.5
  void                    Deopt              !v    %75.0, Typecheck@0x5614fac75330[Type#16], %72.2   !
BB43   <- [26]
  (cls|spec|blt)  %43.0 = LdFun              !v    message, e0.5
  fs              %43.1 = FrameState         R     0x5614f9277b20+500: [%43.0], env=e0.5
  void                    Deopt              !v    %43.1, DeadCall@0x5614fac75330[Call#5], %43.0   !
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    .Call, e0.5
  lgl$#-          %29.1 = Identical                <blt .Call>, %29.0   <true>
  void                    Branch                   %29.1 -> BB76 (if true) | BB77 (if false)
BB76   <- [29]
  val?^ | miss    %76.0 = LdVar              eR    C_R_getGeneric, e0.5
  val?            %76.1 = Force!<value>      !v    %76.0, e0.5   <vec>
  val?^ | miss    %76.2 = LdVar              eR    f, e0.5
  val?            %76.3 = Force!<wrapped>    !v    %76.2, e0.5   <str$->
  val?^ | miss    %76.4 = LdVar              eR    as.environment, e0.5
  lgl$#-          %76.5 = Identical                <blt as.environment>, %76.4   <true>
  void                    Branch                   %76.5 -> BB78 (if true) | BB79 (if false)
BB77   <- [29]
  fs              %77.0 = FrameState         R     0x5614f9277b20+484: [%26.1], env=e0.5
  void                    Deopt              !v    %77.0, DeadBranchReached@0x5614fac75330[Test#3], %29.1   !
BB78   <- [76]
  val?^ | miss    %78.0 = LdVar              eR    where, e0.5
  val?            %78.1 = Force!<lazy>       !v    %78.0, e0.5   <env->
  val?            %78.2 = CallBuiltin        !v    as.environment(%78.1) e0.5   <env->
  val?^ | miss    %78.3 = LdVar              eR    package, e0.5
  val?            %78.4 = Force!<lazy>       !v    %78.3, e0.5   <str$->
  val?            %78.5 = CallBuiltin        !v    .Call(%76.1, %76.3, false, %78.2, %78.4) e0.5   <(nil|cls)>
  lgl$-           %78.6 = Is                       %78.5, NULL
  void                    StVar              lW    value, %78.5, e0.5
  val             %78.8 = ChkMissing         e     %78.5
  lgl$-           %78.9 = Not                d     %78.6, elided
  lgl$-           %78.10 = AsLogical                %78.9
  lgl$#-          %78.11 = Identical                %78.10, false
  void                    Branch                   %78.11 -> BB42 (if true) | BB34 (if false)
BB79   <- [76]
  fs              %79.0 = FrameState         R     0x5614f9277b20+664: [<blt .Call>, %76.1, %76.3], env=e0.5
  void                    Deopt              !v    %79.0, DeadBranchReached@0x5614fac75330[Test#4], %76.5   !
BB42   <- [78]
  void                    Nop                !     
  lgl$-           %42.1 = %78.10
  goto BB37
BB34   <- [78]
  val?^ | miss    %34.0 = LdVar              eR    .GlobalEnv, e0.5
  lgl$#-          %34.1 = IsType                   %34.0 isA val?~- | miss
  void                    Branch                   %34.1 -> BB80 (if true) | BB81 (if false)
BB37   <- [42, 84]
  lgl$-           %37.0 = Phi                      %84.7:BB84, %42.1:BB42
  lgl$-           %37.1 = %37.0
  lgl$-           %37.2 = AsLogical                %37.1
  lgl$#-          %37.3 = Identical                %37.2, false
  void                    Branch                   %37.3 -> BB39 (if true) | BB38 (if false)
BB80   <- [34]
  val?~- | miss   %80.0 = CastType           d     dn %34.0
  val?-           %80.1 = Force!<value>            %80.0,    <env->
  lgl$#-          %80.2 = IsType                   %80.1 isA val+   <true>
  void                    Branch                   %80.2 -> BB82 (if true) | BB83 (if false)
BB81   <- [34]
  void                    Nop                !     
  val?^ | miss    %81.1 = %34.0
  dr              %81.2 = Typecheck@0x5614fac75330[Type#31]
  goto BB32
BB39   <- [37]
  lgl$#-          %39.0 = CheckTrueFalse     e     %37.2
  void                    Branch                   %39.0 -> BB41 (if true) | BB40 (if false)
BB38   <- [37]
  (cls|spec|blt)  %38.0 = LdFun              !v    identical, e0.5
  fs              %38.1 = FrameState         R     0x5614f9277b20+940: [%37.2, %38.0], env=e0.5
  void                    Deopt              !v    %38.1, DeadCall@0x5614fac75330[Call#11], %38.0   !
BB82   <- [80]
  val?^ | miss    %82.0 = LdVar              eR    f, e0.5
  val?            %82.1 = Force!<wrapped>    !v    %82.0, e0.5   <str$->
  lgl$#-          %82.2 = IsType                   %82.1 isA val?-
  void                    Branch                   %82.2 -> BB84 (if true) | BB85 (if false)
BB83   <- [80]
  void                    Nop                !     
  lgl$#-          %83.1 = %80.2
  dr              %83.2 = DeadBranchReached@0x5614fac75330[Test#5]
  goto BB32
BB32   <- [81, 83]
  val?^ | miss    %32.0 = Phi                      %81.1:BB81, %83.1:BB83
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %81.2:BB81, %83.2:BB83
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x5614f9277b20+816: [], env=e0.5
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB41   <- [39]
  (cls|spec|blt)  %41.0 = LdFun              !v    .cacheGeneric, e0.5
  fs              %41.1 = FrameState         R     0x5614f9277b20+995: [%41.0], env=e0.5
  void                    Deopt              !v    %41.1, DeadCall@0x5614fac75330[Call#12], %41.0   !
BB40   <- [39]
  void                    Nop                !     
  goto BB13
BB84   <- [82]
  val?-           %84.0 = CastType           d     dn %82.1   <str$->
  val?            %84.1 = Extract2_1D        wed   %80.1, %84.0, elided   <nil->
  lgl$-           %84.2 = Is                       %84.1, NULL
  void                    StVar              lW    vv, %84.1, e0.5
  lgl$-           %84.4 = Not                d     %84.2, elided
  lgl$-           %84.5 = AsLogical                %84.4
  lgl$-           %84.6 = LAnd                     %78.10, %84.5
  lgl$-           %84.7 = %84.6
  goto BB37
BB85   <- [82]
  fs              %85.0 = FrameState         R     0x5614f9277b20+897: [%78.10, %80.1, %82.1], env=e0.5
  void                    Deopt              !v    %85.0, Typecheck@0x5614fac75330[Type#33], %82.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .GlobalEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3

│ .getGeneric[0x5614fb63cb60]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
