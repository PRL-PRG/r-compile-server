
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x5614fb58db70]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x5614fb58db70]
BB0
  val?~+          %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    .getClassesFromCache, <env 0x5614f8eae378>
  lgl$#-          %0.4  = Identical                %0.3, function(name) <(rir::DispatchTable*)0x5614fac|...
  void                    Branch                   %0.4 -> BB32 (if true) | BB33 (if false)
BB32   <- [0]
  env             e32.0 = MkEnv              l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=true, parent=<env 0x5614f8eae378>, context 1
  prom-           %32.1 = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p9, e32.0
  ct              %32.2 = PushContext        lCL   %32.1, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x5614fac|..., e32.0
  val?^           %32.3 = CastType                 up %32.1
  val?^ | miss    %32.4 = LdVar              eR    .Call, <env 0x5614f8eae378>
  lgl$#-          %32.5 = Identical                <blt .Call>, %32.4   <true>
  void                    Branch                   %32.5 -> BB34 (if true) | BB35 (if false)
BB33   <- [0]
  void                    Nop                !     
  val?^ | miss    %33.1 = %0.3
  dr              %33.2 = CallTarget@0x5614fbbbbdb0[Call#3]
  goto BB31
BB34   <- [32]
  val?^ | miss    %34.0 = LdVar              eR    C_R_getClassFromCache, <env 0x5614f8eae378>
  env             e34.1 = MkEnv              l     name=%32.3, parent=<env 0x5614f8eae378>, context 1
  val?            %34.2 = Force!<value>      !v    %34.0, e34.1   <vec>
  val?^ | miss    %34.3 = LdVar              eR    name, e34.1
  val?            %34.4 = Force!<lazy>       !v    %34.3, e34.1   <str$+>
  val?^ | miss    %34.5 = LdVar              eR    .classTable, e34.1
  val?            %34.6 = Force!<wrapped>    !v    %34.5, e34.1   <env->
  val?            %34.7 = CallBuiltin        !v    .Call(%34.2, %34.4, %34.6) e34.1   <other>
  val?            %34.8 = PopContext         C     %34.7, %32.2   <other>
  lgl$-           %34.9 = Is                       %34.8, list
  void                    StVar              lW    value, %34.8, e32.0
  val             %34.11 = ChkMissing         e     %34.8   <other>
  lgl$#-          %34.12 = CheckTrueFalse     e     %34.9
  lgl$-           %34.13 = Is                       %34.11, NULL
  void                    Branch                   %34.12 -> BB30 (if true) | BB5 (if false)
BB35   <- [32]
  void                    DropContext        C     
  lgl$#-          %35.1 = %32.5
  dr              %35.2 = DeadBranchReached@0x5614f9bea518[Test#0]
  goto BB31
BB31   <- [33, 35]
  val?^ | miss    %31.0 = Phi                      %33.1:BB33, %35.1:BB35
  val?^ | miss    %31.1 = %31.0
  dr              %31.2 = Phi                      %33.2:BB33, %35.2:BB35
  dr              %31.3 = %31.2
  env             e31.4 = (MkEnv)            l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=true, parent=<env 0x5614f8eae378>, context 1
  fs              %31.5 = FrameState         R     0x5614faa3f330+0: [], env=e31.4
  void                    Deopt              !v    %31.5, %31.3, %31.1
BB30   <- [34]
  (cls|spec|blt)  %30.0 = LdFun              !v    .resolveClassList, e32.0
  fs              %30.1 = FrameState         R     0x5614faa3f330+121: [%30.0], env=e32.0
  void                    Deopt              !v    %30.1, DeadCall@0x5614fbbbbdb0[Call#4], %30.0   !
BB5   <- [34]
  lgl$#-          %5.0  = CheckTrueFalse     e     %34.13
  void                    Branch                   %5.0 -> BB8 (if true) | BB6 (if false)
BB8   <- [5]
  val?^ | miss    %8.0  = LdVar              eR    classMetaName, e32.0
  lgl$#-          %8.1  = Identical                %8.0, function(name) <(rir::DispatchTable*)0x5614fab|...
  void                    Branch                   %8.1 -> BB36 (if true) | BB37 (if false)
BB6   <- [5]
  void                    Nop                !     
  goto BB7
BB36   <- [8]
  prom-           %36.0 = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p1, e32.0
  val?            %36.1 = StaticCall         !v    classMetaName[0x5614fbd0c7a0](%36.0) e32.0   <str$->
  void                    StVar              lW    cname, %36.1, e32.0
  val?^ | miss    %36.3 = LdVar              eR    is.character, e32.0
  lgl$#-          %36.4 = Identical                <blt is.character>, %36.3   <true>
  void                    Branch                   %36.4 -> BB38 (if true) | BB39 (if false)
BB37   <- [8]
  fs              %37.0 = FrameState         R     0x5614faa3f330+86: [], env=e32.0
  void                    Deopt              !v    %37.0, CallTarget@0x5614fbbbbdb0[Call#5], %8.0   !
BB7   <- [6, 25]
  val?^ | miss    %7.0  = LdVar              eR    value, e32.0
  void                    Visible            v     
  val?            %7.2  = Force!<value>      !     %7.0, e32.0   <other>
  void                    Return             l     %7.2
BB38   <- [36]
  val?^ | miss    %38.0 = LdVar              eR    where, e32.0
  val?            %38.1 = Force!<lazy>       !v    %38.0, e32.0   <env->
  lgl$#-          %38.2 = CallSafeBuiltin    wed   is.character(%38.1)    <lgl$->
  void                    Branch                   %38.2 -> BB29 (if true) | BB11 (if false)
BB39   <- [36]
  fs              %39.0 = FrameState         R     0x5614faa3f330+248: [], env=e32.0
  void                    Deopt              !v    %39.0, DeadBranchReached@0x5614fbbbbdb0[Test#1], %36.4   !
BB29   <- [38]
  val?^ | miss    %29.0 = LdVar              eR    where, e32.0
  val?            %29.1 = Force!             !v    %29.0, e32.0   <val?_>
  void                    StVar              lW    package, %29.1, e32.0
  goto BB12
BB11   <- [38]
  void                    Nop                !     
  goto BB12
BB12   <- [11, 29]
  val?^ | miss    %12.0 = LdVar              eR    isTRUE, e32.0
  lgl$#-          %12.1 = Identical                %12.0, function(x) <(rir::DispatchTable*)0x5614fa764a|...
  void                    Branch                   %12.1 -> BB40 (if true) | BB41 (if false)
BB40   <- [12]
  prom-           %40.0 = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p3, e32.0
  val?            %40.1 = StaticCall         !v    isTRUE[0x5614fb3bdc40](%40.0) e32.0   <lgl$->
  lgl$#-          %40.2 = IsType                   %40.1 isA lgl$-
  void                    Branch                   %40.2 -> BB42 (if true) | BB43 (if false)
BB41   <- [12]
  fs              %41.0 = FrameState         R     0x5614faa3f330+378: [], env=e32.0
  void                    Deopt              !v    %41.0, CallTarget@0x5614fbbbbdb0[Call#8], %12.0   !
BB42   <- [40]
  lgl$-           %42.0 = CastType           d     dn %40.1
  lgl$#-          %42.1 = CheckTrueFalse     e     %42.0
  void                    Branch                   %42.1 -> BB28 (if true) | BB17 (if false)
BB43   <- [40]
  void                    Nop                !     
  val?            %43.1 = %40.1
  dr              %43.2 = Typecheck@0x5614fbbbbdb0[Type#26]
  goto BB15
BB28   <- [42]
  val?^ | miss    %28.0 = LdVar              eR    .requirePackage, e32.0
  lgl$#-          %28.1 = Identical                %28.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Branch                   %28.1 -> BB44 (if true) | BB45 (if false)
BB17   <- [42]
  void                    Nop                !     
  goto BB18
BB15   <- [43, 45]
  val?^ | miss    %15.0 = Phi                      %43.1:BB43, %45.1:BB45
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %43.2:BB43, %45.2:BB45
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x5614faa3f330+410: [%40.1], env=e32.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB44   <- [28]
  prom-           %44.0 = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p8, e32.0
  val?            %44.1 = StaticCall         !v    .requirePackage[0x5614f8b4dae0](%44.0) e32.0   <env->
  void                    StVar              lW    package, %44.1, e32.0
  goto BB18
BB45   <- [28]
  void                    Nop                !     
  val?^ | miss    %45.1 = %28.0
  dr              %45.2 = CallTarget@0x5614fbbbbdb0[Call#10]
  goto BB15
BB18   <- [17, 44]
  val?^ | miss    %18.0 = LdVar              eR    is.environment, e32.0
  lgl$#-          %18.1 = Identical                <blt is.environment>, %18.0   <true>
  void                    Branch                   %18.1 -> BB46 (if true) | BB47 (if false)
BB46   <- [18]
  val?^ | miss    %46.0 = LdVar              eR    package, e32.0
  val?            %46.1 = Force!<value>      !v    %46.0, e32.0   <env->
  lgl$#-          %46.2 = CallSafeBuiltin    wed   is.environment(%46.1)    <lgl$->
  void                    Branch                   %46.2 -> BB27 (if true) | BB23 (if false)
BB47   <- [18]
  fs              %47.0 = FrameState         R     0x5614faa3f330+472: [], env=e32.0
  void                    Deopt              !v    %47.0, DeadBranchReached@0x5614fbbbbdb0[Test#2], %18.1   !
BB27   <- [46]
  val?^ | miss    %27.0 = LdVar              eR    get0, e32.0
  lgl$#-          %27.1 = Identical                %27.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Branch                   %27.1 -> BB48 (if true) | BB49 (if false)
BB23   <- [46]
  void                    Nop                !     
  goto BB24
BB48   <- [27]
  prom-           %48.0 = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p5, e32.0
  prom-           %48.1 = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p6, e32.0
  prom-           %48.2 = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p7, e32.0
  val?            %48.3 = StaticCall         !v    get0[0x5614fa7920b0](%48.0, %48.1, missingArg, %48.2) { 0 1 3n } e32.0   <other>
  void                    StVar              lW    value, %48.3, e32.0
  goto BB24
BB49   <- [27]
  fs              %49.0 = FrameState         R     0x5614faa3f330+563: [%46.2], env=e32.0
  void                    Deopt              !v    %49.0, CallTarget@0x5614fbbbbdb0[Call#12], %27.0   !
BB24   <- [23, 48]
  val?^ | miss    %24.0 = LdVar              eR    value, e32.0
  val?            %24.1 = Force!<value>      !v    %24.0, e32.0   <other>
  lgl$-           %24.2 = Is                       %24.1, NULL
  lgl$#-          %24.3 = CheckTrueFalse     e     %24.2
  void                    Branch                   %24.3 -> BB26 (if true) | BB25 (if false)
BB26   <- [24]
  (cls|spec|blt)  %26.0 = LdFun              !v    get0, e32.0
  fs              %26.1 = FrameState         R     0x5614faa3f330+682: [%26.0], env=e32.0
  void                    Deopt              !v    %26.1, DeadCall@0x5614fbbbbdb0[Call#13], %26.0   !
BB25   <- [24]
  void                    Nop                !     
  goto BB7
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x5614f88a7a90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p2, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  val?            %0.4  = Gt                 !v    %0.3, 1L, e0.0   <lgl$->
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    Class, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e0.0   <val?_>
  void                    Visible            v     
  val?            %2.4  = %2.2
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e0.0   <str$->
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.3:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nzchar, <0x5614f88b3240>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x5614fb58db70]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ getClassDef[0x5614fb58db70]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
