
┌──────────────────────────────────────────────────────────────────────────────┐
│ .mergeMethodsTable[0x5614fbddfb30]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3│
│ Properties:                                                                  │
├────── Final PIR Version
.mergeMethodsTable[0x5614fbddfb30]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    environment, <env 0x5614f8eae378>
  lgl$#-          %0.5  = Identical                %0.4, function(fun=NULL) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %0.5 -> BB134 (if true) | BB135 (if false)
BB134   <- [0]
  env             e134.0 = MkEnv              l     generic=%0.3, table=%0.2, newtable=%0.1, add=%0.0, parent=<env 0x5614f8eae378>, context 1
  val?            %134.1 = Force!<lazy>       !vr   %0.3,    <cls>
  prom-           %134.2 = MkArg                    %134.1, .mergeMethodsTable[0x5614fbddfb30]_p0 (!refl), 
  val?            %134.3 = StaticCall         !v    environment[0x5614faa73b40](%134.2) e134.0   <env->
  void                    StVar              lW    fenv, %134.3, e134.0
  val?^ | miss    %134.5 = LdVar              eR    exists, e134.0
  lgl$#-          %134.6 = Identical                %134.5, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %134.6 -> BB136 (if true) | BB137 (if false)
BB135   <- [0]
  env             e135.0 = (MkEnv)            l     generic=%0.3, table=%0.2, newtable=%0.1, add=%0.0, parent=<env 0x5614f8eae378>, context 1
  fs              %135.1 = FrameState         R     0x5614fcd71f30+0: [], env=e135.0
  void                    Deopt              !v    %135.1, CallTarget@0x5614fccff2a0[Call#0], %0.4
BB136   <- [134]
  prom-           %136.0 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p1 (!refl), e134.0
  val?            %136.1 = StaticCall         !v    exists[0x5614fcbb6ea0](".SigLength", missingArg, %136.0, missingArg, missingArg, false) { 0 2n 5n } e134.0   <lgl$->
  lgl$#-          %136.2 = IsType                   %136.1 isA lgl$-
  void                    Branch                   %136.2 -> BB138 (if true) | BB139 (if false)
BB137   <- [134]
  fs              %137.0 = FrameState         R     0x5614fcd71f30+46: [], env=e134.0
  void                    Deopt              !v    %137.0, CallTarget@0x5614fccff2a0[Call#1], %134.5   !
BB138   <- [136]
  lgl$-           %138.0 = CastType           d     dn %136.1
  lgl$-           %138.1 = Not                d     %138.0, elided
  lgl$#-          %138.2 = CheckTrueFalse     e     %138.1
  void                    Branch                   %138.2 -> BB132 (if true) | BB7 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x5614fcd71f30+100: [%136.1], env=e134.0
  void                    Deopt              !v    %139.0, Typecheck@0x5614fccff2a0[Type#3], %136.1   !
BB132   <- [138]
  (cls|spec|blt)  %132.0 = LdFun              !v    .setupMethodsTables, e134.0
  fs              %132.1 = FrameState         R     0x5614fcd71f30+122: [%132.0], env=e134.0
  void                    Deopt              !v    %132.1, DeadCall@0x5614fccff2a0[Call#2], %132.0   !
BB7   <- [138]
  val?^ | miss    %7.0  = LdVar              eR    add, e134.0
  val?            %7.1  = Force!<lazy>       !v    %7.0, e134.0   <lgl$->
  lgl$#-          %7.2  = IsType                   %7.1 isA lgl$-
  void                    Branch                   %7.2 -> BB140 (if true) | BB141 (if false)
BB140   <- [7]
  lgl$-           %140.0 = CastType           d     dn %7.1
  lgl$-           %140.1 = Not                d     %140.0, elided
  lgl$#-          %140.2 = CheckTrueFalse     e     %140.1
  void                    Branch                   %140.2 -> BB131 (if true) | BB10 (if false)
BB141   <- [7]
  fs              %141.0 = FrameState         R     0x5614fcd71f30+159: [%7.1], env=e134.0
  void                    Deopt              !v    %141.0, Typecheck@0x5614fccff2a0[Type#5], %7.1   !
BB131   <- [140]
  (cls|spec|blt)  %131.0 = LdFun              !v    get, e134.0
  fs              %131.1 = FrameState         R     0x5614fcd71f30+187: [%131.0], env=e134.0
  void                    Deopt              !v    %131.1, DeadCall@0x5614fccff2a0[Call#3], %131.0   !
BB10   <- [140]
  void                    StVar              lW    allTable, nil, e134.0
  val?^ | miss    %10.1 = LdVar              eR    get, e134.0
  lgl$#-          %10.2 = Identical                %10.1, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %10.2 -> BB142 (if true) | BB143 (if false)
BB142   <- [10]
  prom-           %142.0 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p2, e134.0
  val?            %142.1 = StaticCall         !v    get[0x5614fc053ba0](".SigLength", missingArg, %142.0) { 0 2n } e134.0   <real$->
  lgl$#-          %142.2 = IsType                   %142.1 isA real$-
  void                    Branch                   %142.2 -> BB144 (if true) | BB145 (if false)
BB143   <- [10]
  fs              %143.0 = FrameState         R     0x5614fcd71f30+241: [], env=e134.0
  void                    Deopt              !v    %143.0, CallTarget@0x5614fccff2a0[Call#4], %10.1   !
BB144   <- [142]
  real$-          %144.0 = CastType           d     dn %142.1
  void                    StVar              lW    n, %144.0, e134.0
  (cls|spec|blt)  %144.2 = LdFun              !v    rep, <0x5614f88bb9b0>, e134.0
  prom-           %144.3 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p3, e134.0
  val?            %144.4 = Call               !v    %144.2("ANY", %144.3) e134.0   <str$->
  void                    StVar              lW    anySig, %144.4, e134.0
  val?^ | miss    %144.6 = LdVar              eR    names, e134.0
  lgl$#-          %144.7 = Identical                <blt names>, %144.6   <true>
  void                    Branch                   %144.7 -> BB146 (if true) | BB147 (if false)
BB145   <- [142]
  fs              %145.0 = FrameState         R     0x5614fcd71f30+286: [%142.1], env=e134.0
  void                    Deopt              !v    %145.0, Typecheck@0x5614fccff2a0[Type#9], %142.1   !
BB146   <- [144]
  val?^ | miss    %146.0 = LdVar              eR    newtable, e134.0
  val?            %146.1 = Force!<lazy>       !v    %146.0, e134.0   <env->
  lgl$#-          %146.2 = IsType                   %146.1 isA val?-
  void                    Branch                   %146.2 -> BB148 (if true) | BB149 (if false)
BB147   <- [144]
  fs              %147.0 = FrameState         R     0x5614fcd71f30+351: [], env=e134.0
  void                    Deopt              !v    %147.0, DeadBranchReached@0x5614fccff2a0[Test#0], %144.7   !
BB148   <- [146]
  val?-           %148.0 = CastType           d     dn %146.1   <env->
  val+            %148.1 = CallSafeBuiltin    wed   names(%148.0)    <str->
  int$-           %148.2 = Length                   %148.1
  void                    StVar              lW    newMethods, %148.1, e134.0
  int$-           %148.4 = Inc                      0L
  lgl$-           %148.5 = Lt                 d     %148.2, %148.4, elided   <false>
  lgl$#-          %148.6 = Identical                %148.5, true
  void                    Branch                   %148.6 -> BB151 (if true) | BB150 (if false)
BB149   <- [146]
  fs              %149.0 = FrameState         R     0x5614fcd71f30+420: [<blt names>, %146.1], env=e134.0
  void                    Deopt              !v    %149.0, Typecheck@0x5614fccff2a0[Type#13], %146.1   !
BB151   <- [148]
  fs              %151.0 = FrameState         R     0x5614fcd71f30+456: [], env=e134.0
  void                    Deopt              !v    %151.0, DeadBranchReached@0x5614fccff2a0[Test#1], %148.6   !
BB150   <- [148]
  val?            %150.0 = Extract2_1D        wed   %148.1, %148.4, elided
  void                    StVar              lW    what, %150.0, e134.0
  val?^ | miss    %150.2 = LdVar              eR    newtable, e134.0
  val?            %150.3 = Force!<wrapped>    !v    %150.2, e134.0   <env->
  lgl$#-          %150.4 = IsType                   %150.3 isA val+   <true>
  lgl$#-          %150.5 = IsType                   %150.3 isA val?-
  void                    Branch                   %150.4 -> BB152 (if true) | BB153 (if false)
BB152   <- [150]
  val?^ | miss    %152.0 = LdVar              eR    what, e134.0
  lgl$#-          %152.1 = IsType                   %152.0 isA val?~- | miss
  void                    Branch                   %152.1 -> BB154 (if true) | BB155 (if false)
BB153   <- [150]
  void                    Nop                !     
  lgl$#-          %153.1 = %150.4
  dr              %153.2 = DeadBranchReached@0x5614fccff2a0[Test#2]
  goto BB21
BB154   <- [152]
  val?~- | miss   %154.0 = CastType           d     dn %152.0
  val?-           %154.1 = Force!<value>            %154.0,    <str$->
  void                    Branch                   %150.5 -> BB156 (if true) | BB157 (if false)
BB155   <- [152]
  void                    Nop                !     
  val?^ | miss    %155.1 = %152.0
  dr              %155.2 = Typecheck@0x5614fccff2a0[Type#18]
  goto BB21
BB21   <- [153, 155, 157]
  val?^ | miss    %21.0 = Phi                      %153.1:BB153, %155.1:BB155, %157.1:BB157
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %153.2:BB153, %155.2:BB155, %157.2:BB157
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x5614fcd71f30+519: [%148.1, %148.2, %148.4, %150.3], env=e134.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB156   <- [154]
  val?-           %156.0 = CastType           d     dn %150.3   <env->
  val?            %156.1 = Extract2_1D        wed   %156.0, %154.1, elided   <cls>
  void                    StVar              lW    obj, %156.1, e134.0
  val?^ | miss    %156.3 = LdVar              eR    is.primitive, e134.0
  lgl$#-          %156.4 = Identical                %156.3, function(x) <(rir::DispatchTable*)0x5614fb45f8|...
  void                    Branch                   %156.4 -> BB158 (if true) | BB159 (if false)
BB157   <- [154]
  void                    Nop                !     
  val?            %157.1 = %150.3
  dr              %157.2 = Typecheck@0x5614fccff2a0[Type#16]
  goto BB21
BB158   <- [156]
  str$-           %158.0 = CallSafeBuiltin    wed   typeof(%156.1)    <str$->
  int$-           %158.1 = Length                   %158.0
  lgl$-           %158.2 = Eq                 d     %158.1, 1L, elided   <true>
  lgl$#-          %158.3 = Identical                %158.2, true
  void                    Branch                   %158.3 -> BB160 (if true) | BB161 (if false)
BB159   <- [156]
  fs              %159.0 = FrameState         R     0x5614fcd71f30+585: [%148.1, %148.2, %148.4], env=e134.0
  void                    Deopt              !v    %159.0, CallTarget@0x5614fccff2a0[Call#7], %156.3   !
BB160   <- [158]
  lgl$-           %160.0 = CallSafeBuiltin    wed   is.na(%158.0) 
  lgl$#-          %160.1 = CheckTrueFalse     e     %160.0   <false>
  void                    Branch                   %160.1 -> BB163 (if true) | BB162 (if false)
BB161   <- [158]
  prom-           %161.0 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p4 (!refl), e134.0
  val?^           %161.1 = CastType                 up %161.0
  env             e161.2 = (MkEnv)            l     x=%161.1, parent=R_BaseNamespace, context 0
  env             e161.3 = MaterializeEnv           , e161.2   <@?>
  prom-           %161.4 = MkArg                    %156.1, .mergeMethodsTable[0x5614fbddfb30]_p22 (!refl), e161.3
  val?~           %161.5 = CastType                 up %161.4
  fs              %161.6 = FrameState         R     0x5614fcd71f30+617: [%148.1, %148.2, %148.4], env=e134.0
  fs              %161.7 = FrameState         R     0x5614fb9a90f0+32: [], env=e161.3, next=%161.6
  env             e161.8 = (MkEnv)            l     x=%161.5, parent=R_BaseNamespace, context -1
  fs              %161.9 = FrameState         R     0x5614fa9a51b0+27: [%158.0], env=e161.8, next=%161.7
  void                    Deopt              !v    %161.9, DeadBranchReached@0x5614fb5b9618[Test#1], %158.3   !
BB163   <- [160]
  void                    Nop                !     
  lgl$#-          %163.1 = %160.1
  dr              %163.2 = DeadBranchReached@0x5614fb5b9618[Test#7]
  goto BB27
BB162   <- [160]
  lgl$-           %162.0 = Eq                 d     %158.0, special, elided
  lgl$#-          %162.1 = CheckTrueFalse     e     %162.0
  void                    Branch                   %162.1 -> BB130 (if true) | BB29 (if false)
BB27   <- [163, 165]
  val?^ | miss    %27.0 = Phi                      %163.1:BB163, %165.1:BB165
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %163.2:BB163, %165.2:BB165
  dr              %27.3 = %27.2
  prom-           %27.4 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p4 (!refl), e134.0
  val?^           %27.5 = CastType                 up %27.4
  fs              %27.6 = FrameState         R     0x5614fcd71f30+617: [%148.1, %148.2, %148.4], env=e134.0
  env             e27.7 = (MkEnv)            l     x=%27.5, parent=R_BaseNamespace, context 0
  fs              %27.8 = FrameState         R     0x5614fb9a90f0+240: [%158.0, %160.0], env=e27.7, next=%27.6
  void                    Deopt              !v    %27.8, %27.3, %27.1   !
BB130   <- [162]
  void                    Nop                !     
  goto BB129
BB29   <- [162]
  lgl$-           %29.0 = Eq                 d     %158.0, builtin, elided
  lgl$#-          %29.1 = CheckTrueFalse     e     %29.0
  void                    Branch                   %29.1 -> BB128 (if true) | BB30 (if false)
BB129   <- [130, 128]
  void                    Nop                !     
  lgl$#-          %129.1 = true
  goto BB31
BB128   <- [29]
  void                    Nop                !     
  goto BB129
BB30   <- [29]
  void                    Nop                !     
  lgl$#-          %30.1 = false
  goto BB31
BB31   <- [30, 129]
  lgl$#-          %31.0 = Phi                      %30.1:BB30, %129.1:BB129
  lgl$#-          %31.1 = %31.0
  void                    Branch                   %31.1 -> BB127 (if true) | BB32 (if false)
BB127   <- [31]
  val?^ | miss    %127.0 = LdVar              eR    anySig, e134.0
  val?            %127.1 = Force!             !v    %127.0, e134.0   <val?_>
  void                    StVar              lW    sig, %127.1, e134.0
  val?            %127.3 = %127.1
  goto BB41
BB32   <- [31]
  val?^ | miss    %32.0 = LdVar              eR    is, e134.0
  lgl$#-          %32.1 = Identical                %32.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %32.1 -> BB164 (if true) | BB165 (if false)
BB41   <- [127, 40]
  val?            %41.0 = Phi                      %127.3:BB127, %40.5:BB40
  val?            %41.1 = %41.0
  val?^ | miss    %41.2 = LdVar              eR    length, e134.0
  lgl$#-          %41.3 = Identical                <blt length>, %41.2   <true>
  void                    Branch                   %41.3 -> BB166 (if true) | BB167 (if false)
BB164   <- [32]
  prom-           %164.0 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p5 (!refl), e134.0
  val?            %164.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%164.0, "MethodDefinition") e134.0   <lgl$->
  lgl$#-          %164.2 = IsType                   %164.1 isA lgl$-
  void                    Branch                   %164.2 -> BB168 (if true) | BB169 (if false)
BB165   <- [32]
  void                    Nop                !     
  val?^ | miss    %165.1 = %32.0
  dr              %165.2 = CallTarget@0x5614fccff2a0[Call#8]
  goto BB27
BB166   <- [41]
  val             %166.0 = ChkMissing         e     %41.1   <str>
  val?            %166.1 = CallBuiltin        !v    length(%166.0) e134.0   <int$->
  lgl$#-          %166.2 = IsType                   %166.1 isA int$-
  void                    Branch                   %166.2 -> BB170 (if true) | BB171 (if false)
BB167   <- [41]
  fs              %167.0 = FrameState         R     0x5614fcd71f30+1352: [%148.1, %148.2, %148.4], env=e134.0
  void                    Deopt              !v    %167.0, DeadBranchReached@0x5614fccff2a0[Test#7], %41.3   !
BB168   <- [164]
  lgl$-           %168.0 = CastType           d     dn %164.1
  lgl$#-          %168.1 = CheckTrueFalse     e     %168.0
  void                    Branch                   %168.1 -> BB40 (if true) | BB35 (if false)
BB169   <- [164]
  fs              %169.0 = FrameState         R     0x5614fcd71f30+665: [%148.1, %148.2, %148.4, %164.1], env=e134.0
  void                    Deopt              !v    %169.0, Typecheck@0x5614fccff2a0[Type#23], %164.1   !
BB170   <- [166]
  int$-           %170.0 = CastType           d     dn %166.1
  void                    StVar              lW    ns, %170.0, e134.0
  val?^ | miss    %170.2 = LdVar              eR    n, e134.0
  lgl$#-          %170.3 = IsType                   %170.2 isA real$-
  void                    Branch                   %170.3 -> BB172 (if true) | BB173 (if false)
BB171   <- [166]
  fs              %171.0 = FrameState         R     0x5614fcd71f30+1443: [%148.1, %148.2, %148.4, %166.1], env=e134.0
  void                    Deopt              !v    %171.0, Typecheck@0x5614fccff2a0[Type#73], %166.1   !
BB40   <- [168]
  (cls|spec|blt)  %40.0 = LdFun              !v    @, <0x5614f88a6bd8>, e134.0
  prom-           %40.1 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p6, e134.0
  prom-           %40.2 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p7, e134.0
  val?            %40.3 = Call               !v    %40.0(%40.1, %40.2) e134.0   <str>
  void                    StVar              lW    sig, %40.3, e134.0
  val?            %40.5 = %40.3
  goto BB41
BB35   <- [168]
  val?^ | miss    %35.0 = LdVar              eR    is.environment, e134.0
  lgl$#-          %35.1 = Identical                <blt is.environment>, %35.0   <@?>
  void                    Branch                   %35.1 -> BB37 (if true) | BB36 (if false)
BB172   <- [170]
  real$-          %172.0 = CastType           d     dn %170.2
  lgl$-           %172.1 = Eq                 d     %170.0, %172.0, elided   <lgl$->
  lgl$#-          %172.2 = CheckTrueFalse     e     %172.1
  void                    Branch                   %172.2 -> BB126 (if true) | BB48 (if false)
BB173   <- [170]
  fs              %173.0 = FrameState         R     0x5614fcd71f30+1457: [%148.1, %148.2, %148.4], env=e134.0
  void                    Deopt              !v    %173.0, Typecheck@0x5614fccff2a0[Type#75], %170.2   !
BB37   <- [35]
  val?^ | miss    %37.0 = LdVar              eR    obj, e134.0
  val?            %37.1 = Force!             !v    %37.0, e134.0   <val?_>
  lgl$#-          %37.2 = CallSafeBuiltin    wed   is.environment(%37.1)    <val?_>
  void                    Branch                   %37.2 -> BB39 (if true) | BB38 (if false)
BB36   <- [35]
  (cls|spec|blt)  %36.0 = LdFun              !v    is.environment, e134.0
  fs              %36.1 = FrameState         R     0x5614fcd71f30+704: [%148.1, %148.2, %148.4, %36.0], env=e134.0
  void                    Deopt              !v    %36.1, DeadCall@0x5614fccff2a0[Call#9], %36.0   !
BB126   <- [172]
  void                    Nop                !     
  goto BB52
BB48   <- [172]
  lgl$-           %48.0 = Lt                 d     %170.0, %172.0, elided   <lgl$->
  lgl$#-          %48.1 = CheckTrueFalse     e     %48.0
  void                    Branch                   %48.1 -> BB125 (if true) | BB49 (if false)
BB39   <- [37]
  (cls|spec|blt)  %39.0 = LdFun              !v    as.list, e134.0
  fs              %39.1 = FrameState         R     0x5614fcd71f30+834: [%148.1, %148.2, %148.4, %39.0], env=e134.0
  void                    Deopt              !v    %39.1, DeadCall@0x5614fccff2a0[Call#17], %39.0   !
BB38   <- [37]
  (cls|spec|blt)  %38.0 = LdFun              !v    stop, e134.0
  fs              %38.1 = FrameState         R     0x5614fcd71f30+783: [%148.1, %148.2, %148.4, %38.0], env=e134.0
  void                    Deopt              !v    %38.1, DeadCall@0x5614fccff2a0[Call#10], %38.0   !
BB52   <- [126, 51]
  val?^ | miss    %52.0 = LdVar              eR    add, e134.0
  val?            %52.1 = Force!<wrapped>    !v    %52.0, e134.0   <lgl$->
  lgl$#-          %52.2 = CheckTrueFalse     we    %52.1
  void                    Branch                   %52.2 -> BB56 (if true) | BB55 (if false)
BB125   <- [48]
  real$-          %125.0 = Sub                d     %172.0, %170.0, elided   <val?_>
  void                    StVar              lW    nadd, %125.0, e134.0
  (cls|spec|blt)  %125.2 = LdFun              !v    packageSlot, e134.0
  fs              %125.3 = FrameState         R     0x5614fcd71f30+1858: [%148.1, %148.2, %148.4, %125.2], env=e134.0
  void                    Deopt              !v    %125.3, DeadCall@0x5614fccff2a0[Call#34], %125.2   !
BB49   <- [48]
  val?^ | miss    %49.0 = LdVar              eR    add, e134.0
  val?            %49.1 = Force!<wrapped>    !v    %49.0, e134.0   <lgl$->
  lgl$#-          %49.2 = CheckTrueFalse     we    %49.1
  void                    Branch                   %49.2 -> BB116 (if true) | BB50 (if false)
BB56   <- [52]
  val?^ | miss    %56.0 = LdVar              eR    exists, e134.0
  lgl$#-          %56.1 = Identical                %56.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %56.1 -> BB176 (if true) | BB177 (if false)
BB55   <- [52]
  (cls|spec|blt)  %55.0 = LdFun              !v    exists, e134.0
  fs              %55.1 = FrameState         R     0x5614fcd71f30+2396: [%148.1, %148.2, %148.4, %55.0], env=e134.0
  void                    Deopt              !v    %55.1, DeadCall@0x5614fccff2a0[Call#49], %55.0   !
BB116   <- [49]
  (cls|spec|blt)  %116.0 = LdFun              !v    @, <0x5614f88a6bd8>, e134.0
  prom-           %116.1 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p16, e134.0
  prom-           %116.2 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p17, e134.0
  val?            %116.3 = Call               !v    %116.0(%116.1, %116.2) e134.0   <str->
  void                    StVar              lW    signames, %116.3, e134.0
  val?^ | miss    %116.5 = LdVar              eR    ns, e134.0
  lgl$#-          %116.6 = IsType                   %116.5 isA int$-
  void                    Branch                   %116.6 -> BB174 (if true) | BB175 (if false)
BB50   <- [49]
  void                    Nop                !     
  goto BB51
BB176   <- [56]
  prom-           %176.0 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p8, e134.0
  prom-           %176.1 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p9, e134.0
  val?            %176.2 = StaticCall         !v    exists[0x5614f8b2d2e0](%176.0, missingArg, %176.1, missingArg, missingArg, false) { 0 2n 5n } e134.0   <lgl$->
  lgl$#-          %176.3 = IsType                   %176.2 isA lgl$-
  void                    Branch                   %176.3 -> BB178 (if true) | BB179 (if false)
BB177   <- [56]
  fs              %177.0 = FrameState         R     0x5614fcd71f30+2386: [%148.1, %148.2, %148.4, %52.2], env=e134.0
  void                    Deopt              !v    %177.0, CallTarget@0x5614fccff2a0[Call#55], %56.0   !
BB174   <- [116]
  int$-           %174.0 = CastType           d     dn %116.5
  (cls|spec|blt)  %174.1 = LdFun              !v    length<-, <0x5614f88a79e8>, e134.0
  val?^ | miss    %174.2 = LdVar              eR    signames, e134.0
  lgl$#-          %174.3 = IsType                   %174.2 isA val?~- | miss
  void                    Branch                   %174.3 -> BB180 (if true) | BB181 (if false)
BB175   <- [116]
  fs              %175.0 = FrameState         R     0x5614fcd71f30+1613: [%148.1, %148.2, %148.4], env=e134.0
  void                    Deopt              !v    %175.0, Typecheck@0x5614fccff2a0[Type#84], %116.5   !
BB51   <- [50, 188]
  void                    Nop                !     
  goto BB52
BB178   <- [176]
  lgl$-           %178.0 = CastType           d     dn %176.2
  lgl$#-          %178.1 = CheckTrueFalse     e     %178.0
  void                    Branch                   %178.1 -> BB115 (if true) | BB59 (if false)
BB179   <- [176]
  fs              %179.0 = FrameState         R     0x5614fcd71f30+2776: [%148.1, %148.2, %148.4, %176.2], env=e134.0
  void                    Deopt              !v    %179.0, Typecheck@0x5614fccff2a0[Type#160], %176.2   !
BB180   <- [174]
  val?~- | miss   %180.0 = CastType           d     dn %174.2
  val?-           %180.1 = Force!<value>            %180.0,    <str->
  val?            %180.2 = NamedCall          !v    %174.1(%180.1, value=%174.0) e134.0
  void                    StVar              lW    signames, %180.2, e134.0
  val?^ | miss    %180.4 = LdVar              eR    .resetTable, e134.0
  lgl$#-          %180.5 = Identical                %180.4, function(table, n, signames) <(rir::DispatchTa|...
  void                    Branch                   %180.5 -> BB182 (if true) | BB183 (if false)
BB181   <- [174]
  fs              %181.0 = FrameState         R     0x5614fcd71f30+1627: [%148.1, %148.2, %148.4, %174.0], env=e134.0
  void                    Deopt              !v    %181.0, Typecheck@0x5614fccff2a0[Type#85], %174.2   !
BB115   <- [178]
  (cls|spec|blt)  %115.0 = LdFun              !v    .newOrMultipleMethod, e134.0
  fs              %115.1 = FrameState         R     0x5614fcd71f30+2797: [%148.1, %148.2, %148.4, %115.0], env=e134.0
  void                    Deopt              !v    %115.1, DeadCall@0x5614fccff2a0[Call#56], %115.0   !
BB59   <- [178]
  val?^ | miss    %59.0 = LdVar              eR    obj, e134.0
  val?            %59.1 = Force!<value>      !v    %59.0, e134.0   <cls>
  val?^ | miss    %59.2 = LdVar              eR    table, e134.0
  val?            %59.3 = Force!<wrapped>    !v    %59.2, e134.0   <env->
  val?^ | miss    %59.4 = LdVar              eR    what, e134.0
  lgl$#-          %59.5 = IsType                   %59.4 isA val?~- | miss
  void                    Branch                   %59.5 -> BB186 (if true) | BB187 (if false)
BB182   <- [180]
  prom-           %182.0 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p19, e134.0
  prom-           %182.1 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p20, e134.0
  prom-           %182.2 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p21 (!refl), e134.0
  val?            %182.3 = Call               !v    function(table, n, signames) <(rir::DispatchTa|...(%182.0, %182.1, %182.2) e134.0
  val?^ | miss    %182.4 = LdVar              eR    ns, e134.0
  lgl$#-          %182.5 = IsType                   %182.4 isA int$-
  void                    Branch                   %182.5 -> BB184 (if true) | BB185 (if false)
BB183   <- [180]
  fs              %183.0 = FrameState         R     0x5614fcd71f30+1695: [%148.1, %148.2, %148.4], env=e134.0
  void                    Deopt              !v    %183.0, CallTarget@0x5614fccff2a0[Call#33], %180.4   !
BB186   <- [59]
  val?~- | miss   %186.0 = CastType           d     dn %59.4
  val?-           %186.1 = Force!<value>            %186.0,    <str$->
  val?            %186.2 = Subassign2_1D      !v    %59.1, %59.3, %186.1, e134.0
  void                    StVar              lW    table, %186.2, e134.0
  int$-           %186.4 = %148.4
  goto BB62
BB187   <- [59]
  fs              %187.0 = FrameState         R     0x5614fcd71f30+3012: [%148.1, %148.2, %148.4, %59.1, %59.3], env=e134.0
  void                    Deopt              !v    %187.0, Typecheck@0x5614fccff2a0[Type#173], %59.4   !
BB184   <- [182]
  int$-           %184.0 = CastType           d     dn %182.4
  val?^ | miss    %184.1 = LdVar              eR    fenv !upd, e134.0
  lgl$#-          %184.2 = IsType                   %184.1 isA val?~- | miss
  void                    Branch                   %184.2 -> BB188 (if true) | BB189 (if false)
BB185   <- [182]
  void                    Nop                !     
  val?^ | miss    %185.1 = %182.4
  dr              %185.2 = Typecheck@0x5614fccff2a0[Type#89]
  goto BB123
BB62   <- [186, 218]
  int$-           %62.0 = Phi                      %186.4:BB186, %218.4:BB218
  int$-           %62.1 = %62.0
  int$-           %62.2 = Inc                      %62.1
  lgl$-           %62.3 = Lt                 d     %148.2, %62.2, elided
  lgl$#-          %62.4 = Identical                %62.3, true
  void                    Branch                   %62.4 -> BB114 (if true) | BB63 (if false)
BB188   <- [184]
  val?~- | miss   %188.0 = CastType           d     dn %184.1
  val?-           %188.1 = Force!<value>            %188.0,    <env->
  val?+           %188.2 = Subassign2_1D      wed   %184.0, %188.1, ".SigLength", elided
  void                    StVar              lW    fenv, %188.2, e134.0
  void                    StVar              lW    n, %184.0, e134.0
  goto BB51
BB189   <- [184]
  void                    Nop                !     
  val?^ | miss    %189.1 = %184.1
  dr              %189.2 = Typecheck@0x5614fccff2a0[Type#90]
  goto BB123
BB123   <- [185, 189]
  val?^ | miss    %123.0 = Phi                      %185.1:BB185, %189.1:BB189
  val?^ | miss    %123.1 = %123.0
  dr              %123.2 = Phi                      %185.2:BB185, %189.2:BB189
  dr              %123.3 = %123.2
  fs              %123.4 = FrameState         R     0x5614fcd71f30+1737: [%148.1, %148.2, %148.4, %182.3], env=e134.0
  void                    Deopt              !v    %123.4, %123.3, %123.1   !
BB114   <- [62]
  void                    Visible            v     
  void                    Return             l     nil
BB63   <- [62]
  val?            %63.0 = Extract2_1D        wed   %148.1, %62.2, elided
  void                    StVar              lW    what, %63.0, e134.0
  val?^ | miss    %63.2 = LdVar              eR    newtable, e134.0
  val?            %63.3 = Force!<wrapped>    !v    %63.2, e134.0   <env->
  lgl$#-          %63.4 = IsType                   %63.3 isA val+   <true>
  lgl$#-          %63.5 = IsType                   %63.3 isA val?-
  void                    Branch                   %63.4 -> BB190 (if true) | BB191 (if false)
BB190   <- [63]
  val?^ | miss    %190.0 = LdVar              eR    what, e134.0
  lgl$#-          %190.1 = IsType                   %190.0 isA val?~- | miss
  void                    Branch                   %190.1 -> BB192 (if true) | BB193 (if false)
BB191   <- [63]
  void                    Nop                !     
  lgl$#-          %191.1 = %63.4
  dr              %191.2 = DeadBranchReached@0x5614fccff2a0[Test#12]
  goto BB64
BB192   <- [190]
  val?~- | miss   %192.0 = CastType           d     dn %190.0
  val?-           %192.1 = Force!<value>            %192.0,    <str$->
  void                    Branch                   %63.5 -> BB194 (if true) | BB195 (if false)
BB193   <- [190]
  void                    Nop                !     
  val?^ | miss    %193.1 = %190.0
  dr              %193.2 = Typecheck@0x5614fccff2a0[Type#176]
  goto BB64
BB64   <- [191, 193, 195]
  val?^ | miss    %64.0 = Phi                      %191.1:BB191, %193.1:BB193, %195.1:BB195
  val?^ | miss    %64.1 = %64.0
  dr              %64.2 = Phi                      %191.2:BB191, %193.2:BB193, %195.2:BB195
  dr              %64.3 = %64.2
  fs              %64.4 = FrameState         R     0x5614fcd71f30+3079: [%148.1, %148.2, %62.2, %63.3], env=e134.0
  void                    Deopt              !v    %64.4, %64.3, %64.1   !
BB194   <- [192]
  val?-           %194.0 = CastType           d     dn %63.3   <env->
  val?            %194.1 = Extract2_1D        wed   %194.0, %192.1, elided   <cls>
  void                    StVar              lW    obj, %194.1, e134.0
  val?^ | miss    %194.3 = LdVar              eR    is.primitive, e134.0
  lgl$#-          %194.4 = Identical                %194.3, function(x) <(rir::DispatchTable*)0x5614fb45f8|...
  void                    Branch                   %194.4 -> BB196 (if true) | BB197 (if false)
BB195   <- [192]
  void                    Nop                !     
  val?            %195.1 = %63.3
  dr              %195.2 = Typecheck@0x5614fccff2a0[Type#174]
  goto BB64
BB196   <- [194]
  val             %196.0 = ChkMissing         e     %194.1
  str$-           %196.1 = CallSafeBuiltin    wed   typeof(%194.1)    <str$->
  int$-           %196.2 = Length                   %196.1
  lgl$-           %196.3 = Eq                 d     %196.2, 1L, elided   <true>
  lgl$#-          %196.4 = Identical                %196.3, true
  void                    Branch                   %196.4 -> BB198 (if true) | BB199 (if false)
BB197   <- [194]
  fs              %197.0 = FrameState         R     0x5614fcd71f30+3145: [%148.1, %148.2, %62.2], env=e134.0
  void                    Deopt              !v    %197.0, CallTarget@0x5614fccff2a0[Call#58], %194.3   !
BB198   <- [196]
  lgl$-           %198.0 = CallSafeBuiltin    wed   is.na(%196.1) 
  lgl$#-          %198.1 = CheckTrueFalse     e     %198.0   <false>
  void                    Branch                   %198.1 -> BB201 (if true) | BB200 (if false)
BB199   <- [196]
  prom-           %199.0 = MkArg                    %194.1, .mergeMethodsTable[0x5614fbddfb30]_p10 (!refl), e134.0
  val?~           %199.1 = CastType                 up %199.0
  env             e199.2 = MkEnv              l     x=%199.1, parent=R_BaseNamespace, context 0
  prom-           %199.3 = MkArg                    %194.1, .mergeMethodsTable[0x5614fbddfb30]_p23 (!refl), e199.2
  val?~           %199.4 = CastType                 up %199.3
  fs              %199.5 = FrameState         R     0x5614fcd71f30+3177: [%148.1, %148.2, %62.2], env=e134.0
  fs              %199.6 = FrameState         R     0x5614fb9a90f0+32: [], env=e199.2, next=%199.5
  env             e199.7 = (MkEnv)            l     x=%199.4, parent=R_BaseNamespace, context -1
  fs              %199.8 = FrameState         R     0x5614fa9a51b0+27: [%196.1], env=e199.7, next=%199.6
  void                    Deopt              !v    %199.8, DeadBranchReached@0x5614fb5b9618[Test#1], %196.4   !
BB201   <- [198]
  void                    Nop                !     
  lgl$#-          %201.1 = %198.1
  dr              %201.2 = DeadBranchReached@0x5614fb5b9618[Test#7]
  goto BB70
BB200   <- [198]
  lgl$-           %200.0 = Eq                 d     %196.1, special, elided
  lgl$#-          %200.1 = CheckTrueFalse     e     %200.0
  void                    Branch                   %200.1 -> BB113 (if true) | BB72 (if false)
BB70   <- [201, 203]
  val?^ | miss    %70.0 = Phi                      %201.1:BB201, %203.1:BB203
  val?^ | miss    %70.1 = %70.0
  dr              %70.2 = Phi                      %201.2:BB201, %203.2:BB203
  dr              %70.3 = %70.2
  prom-           %70.4 = MkArg                    %194.1, .mergeMethodsTable[0x5614fbddfb30]_p10 (!refl), e134.0
  val?~           %70.5 = CastType                 up %70.4
  fs              %70.6 = FrameState         R     0x5614fcd71f30+3177: [%148.1, %148.2, %62.2], env=e134.0
  env             e70.7 = (MkEnv)            l     x=%70.5, parent=R_BaseNamespace, context 0
  fs              %70.8 = FrameState         R     0x5614fb9a90f0+240: [%196.1, %198.0], env=e70.7, next=%70.6
  void                    Deopt              !v    %70.8, %70.3, %70.1   !
BB113   <- [200]
  void                    Nop                !     
  goto BB112
BB72   <- [200]
  lgl$-           %72.0 = Eq                 d     %196.1, builtin, elided
  lgl$#-          %72.1 = CheckTrueFalse     e     %72.0
  void                    Branch                   %72.1 -> BB111 (if true) | BB73 (if false)
BB112   <- [113, 111]
  void                    Nop                !     
  lgl$#-          %112.1 = true
  goto BB74
BB111   <- [72]
  void                    Nop                !     
  goto BB112
BB73   <- [72]
  void                    Nop                !     
  lgl$#-          %73.1 = false
  goto BB74
BB74   <- [73, 112]
  lgl$#-          %74.0 = Phi                      %73.1:BB73, %112.1:BB112
  lgl$#-          %74.1 = %74.0
  void                    Branch                   %74.1 -> BB110 (if true) | BB75 (if false)
BB110   <- [74]
  val?^ | miss    %110.0 = LdVar              eR    anySig, e134.0
  val?            %110.1 = Force!             !v    %110.0, e134.0   <val?_>
  void                    StVar              lW    sig, %110.1, e134.0
  val?            %110.3 = %110.1
  goto BB84
BB75   <- [74]
  val?^ | miss    %75.0 = LdVar              eR    is, e134.0
  lgl$#-          %75.1 = Identical                %75.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %75.1 -> BB202 (if true) | BB203 (if false)
BB84   <- [110, 83]
  val?            %84.0 = Phi                      %110.3:BB110, %83.5:BB83
  val?            %84.1 = %84.0
  val?^ | miss    %84.2 = LdVar              eR    length, e134.0
  lgl$#-          %84.3 = Identical                <blt length>, %84.2   <true>
  void                    Branch                   %84.3 -> BB206 (if true) | BB207 (if false)
BB202   <- [75]
  prom-           %202.0 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p11 (!refl), e134.0
  val?            %202.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%202.0, "MethodDefinition") e134.0   <lgl$->
  lgl$#-          %202.2 = IsType                   %202.1 isA lgl$-
  void                    Branch                   %202.2 -> BB204 (if true) | BB205 (if false)
BB203   <- [75]
  void                    Nop                !     
  val?^ | miss    %203.1 = %75.0
  dr              %203.2 = CallTarget@0x5614fccff2a0[Call#59]
  goto BB70
BB206   <- [84]
  val             %206.0 = ChkMissing         e     %84.1   <str>
  val?            %206.1 = CallBuiltin        !v    length(%206.0) e134.0   <int$->
  lgl$#-          %206.2 = IsType                   %206.1 isA int$-
  void                    Branch                   %206.2 -> BB208 (if true) | BB209 (if false)
BB207   <- [84]
  fs              %207.0 = FrameState         R     0x5614fcd71f30+3912: [%148.1, %148.2, %62.2], env=e134.0
  void                    Deopt              !v    %207.0, DeadBranchReached@0x5614fccff2a0[Test#17], %84.3   !
BB204   <- [202]
  lgl$-           %204.0 = CastType           d     dn %202.1
  lgl$#-          %204.1 = CheckTrueFalse     e     %204.0
  void                    Branch                   %204.1 -> BB83 (if true) | BB78 (if false)
BB205   <- [202]
  fs              %205.0 = FrameState         R     0x5614fcd71f30+3225: [%148.1, %148.2, %62.2, %202.1], env=e134.0
  void                    Deopt              !v    %205.0, Typecheck@0x5614fccff2a0[Type#181], %202.1   !
BB208   <- [206]
  int$-           %208.0 = CastType           d     dn %206.1
  void                    StVar              lW    ns, %208.0, e134.0
  val?^ | miss    %208.2 = LdVar              eR    n, e134.0
  lgl$#-          %208.3 = IsType                   %208.2 isA val?~- | miss
  void                    Branch                   %208.3 -> BB210 (if true) | BB211 (if false)
BB209   <- [206]
  fs              %209.0 = FrameState         R     0x5614fcd71f30+4003: [%148.1, %148.2, %62.2, %206.1], env=e134.0
  void                    Deopt              !v    %209.0, Typecheck@0x5614fccff2a0[Type#231], %206.1   !
BB83   <- [204]
  (cls|spec|blt)  %83.0 = LdFun              !v    @, <0x5614f88a6bd8>, e134.0
  prom-           %83.1 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p12, e134.0
  prom-           %83.2 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p13, e134.0
  val?            %83.3 = Call               !v    %83.0(%83.1, %83.2) e134.0   <str>
  void                    StVar              lW    sig, %83.3, e134.0
  val?            %83.5 = %83.3
  goto BB84
BB78   <- [204]
  val?^ | miss    %78.0 = LdVar              eR    is.environment, e134.0
  lgl$#-          %78.1 = Identical                <blt is.environment>, %78.0   <@?>
  void                    Branch                   %78.1 -> BB80 (if true) | BB79 (if false)
BB210   <- [208]
  val?~- | miss   %210.0 = CastType           d     dn %208.2
  val?-           %210.1 = Force!<value>            %210.0,    <(int|real)$->
  lgl-            %210.2 = Eq                 wed   %208.0, %210.1, elided   <lgl$->
  lgl$#-          %210.3 = IsType                   %210.2 isA lgl$-
  void                    Branch                   %210.3 -> BB212 (if true) | BB213 (if false)
BB211   <- [208]
  fs              %211.0 = FrameState         R     0x5614fcd71f30+4017: [%148.1, %148.2, %62.2], env=e134.0
  void                    Deopt              !v    %211.0, Typecheck@0x5614fccff2a0[Type#233], %208.2   !
BB80   <- [78]
  val?^ | miss    %80.0 = LdVar              eR    obj, e134.0
  val?            %80.1 = Force!             !v    %80.0, e134.0   <val?_>
  lgl$#-          %80.2 = CallSafeBuiltin    wed   is.environment(%80.1)    <val?_>
  void                    Branch                   %80.2 -> BB82 (if true) | BB81 (if false)
BB79   <- [78]
  (cls|spec|blt)  %79.0 = LdFun              !v    is.environment, e134.0
  fs              %79.1 = FrameState         R     0x5614fcd71f30+3264: [%148.1, %148.2, %62.2, %79.0], env=e134.0
  void                    Deopt              !v    %79.1, DeadCall@0x5614fccff2a0[Call#60], %79.0   !
BB212   <- [210]
  lgl$-           %212.0 = CastType           d     dn %210.2
  lgl$#-          %212.1 = CheckTrueFalse     e     %212.0
  void                    Branch                   %212.1 -> BB109 (if true) | BB93 (if false)
BB213   <- [210]
  fs              %213.0 = FrameState         R     0x5614fcd71f30+4046: [%148.1, %148.2, %62.2, %210.2], env=e134.0
  void                    Deopt              !v    %213.0, Typecheck@0x5614fccff2a0[Type#234], %210.2   !
BB82   <- [80]
  (cls|spec|blt)  %82.0 = LdFun              !v    as.list, e134.0
  fs              %82.1 = FrameState         R     0x5614fcd71f30+3394: [%148.1, %148.2, %62.2, %82.0], env=e134.0
  void                    Deopt              !v    %82.1, DeadCall@0x5614fccff2a0[Call#68], %82.0   !
BB81   <- [80]
  (cls|spec|blt)  %81.0 = LdFun              !v    stop, e134.0
  fs              %81.1 = FrameState         R     0x5614fcd71f30+3343: [%148.1, %148.2, %62.2, %81.0], env=e134.0
  void                    Deopt              !v    %81.1, DeadCall@0x5614fccff2a0[Call#61], %81.0   !
BB109   <- [212]
  void                    Nop                !     
  goto BB96
BB93   <- [212]
  lgl-            %93.0 = Lt                 wed   %208.0, %210.1, elided   <val?_>
  lgl$#-          %93.1 = CheckTrueFalse     we    %93.0
  void                    Branch                   %93.1 -> BB108 (if true) | BB94 (if false)
BB96   <- [109, 95]
  val?^ | miss    %96.0 = LdVar              eR    add, e134.0
  val?            %96.1 = Force!<wrapped>    !v    %96.0, e134.0   <lgl$->
  lgl$#-          %96.2 = CheckTrueFalse     we    %96.1
  void                    Branch                   %96.2 -> BB100 (if true) | BB99 (if false)
BB108   <- [93]
  (int|real|complex)- %108.0 = Sub                wed   %210.1, %208.0, elided   <val?_>
  void                    StVar              lW    nadd, %108.0, e134.0
  (cls|spec|blt)  %108.2 = LdFun              !v    packageSlot, e134.0
  fs              %108.3 = FrameState         R     0x5614fcd71f30+4418: [%148.1, %148.2, %62.2, %108.2], env=e134.0
  void                    Deopt              !v    %108.3, DeadCall@0x5614fccff2a0[Call#85], %108.2   !
BB94   <- [93]
  val?^ | miss    %94.0 = LdVar              eR    add, e134.0
  val?            %94.1 = Force!             !v    %94.0, e134.0   <val?_>
  lgl$#-          %94.2 = CheckTrueFalse     we    %94.1
  void                    Branch                   %94.2 -> BB107 (if true) | BB95 (if false)
BB100   <- [96]
  val?^ | miss    %100.0 = LdVar              eR    exists, e134.0
  lgl$#-          %100.1 = Identical                %100.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %100.1 -> BB214 (if true) | BB215 (if false)
BB99   <- [96]
  (cls|spec|blt)  %99.0 = LdFun              !v    exists, e134.0
  fs              %99.1 = FrameState         R     0x5614fcd71f30+4956: [%148.1, %148.2, %62.2, %99.0], env=e134.0
  void                    Deopt              !v    %99.1, DeadCall@0x5614fccff2a0[Call#100], %99.0   !
BB107   <- [94]
  (cls|spec|blt)  %107.0 = LdFun              !v    @, e134.0
  fs              %107.1 = FrameState         R     0x5614fcd71f30+4127: [%148.1, %148.2, %62.2, %107.0], env=e134.0
  void                    Deopt              !v    %107.1, DeadCall@0x5614fccff2a0[Call#82], %107.0   !
BB95   <- [94]
  void                    Nop                !     
  goto BB96
BB214   <- [100]
  prom-           %214.0 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p14, e134.0
  prom-           %214.1 = MkArg                    unboundValue, .mergeMethodsTable[0x5614fbddfb30]_p15, e134.0
  val?            %214.2 = StaticCall         !v    exists[0x5614f8b2d2e0](%214.0, missingArg, %214.1, missingArg, missingArg, false) { 0 2n 5n } e134.0   <lgl$->
  lgl$#-          %214.3 = IsType                   %214.2 isA lgl$-
  void                    Branch                   %214.3 -> BB216 (if true) | BB217 (if false)
BB215   <- [100]
  fs              %215.0 = FrameState         R     0x5614fcd71f30+4946: [%148.1, %148.2, %62.2, %96.2], env=e134.0
  void                    Deopt              !v    %215.0, CallTarget@0x5614fccff2a0[Call#106], %100.0   !
BB216   <- [214]
  lgl$-           %216.0 = CastType           d     dn %214.2
  lgl$#-          %216.1 = CheckTrueFalse     e     %216.0
  void                    Branch                   %216.1 -> BB106 (if true) | BB103 (if false)
BB217   <- [214]
  fs              %217.0 = FrameState         R     0x5614fcd71f30+5336: [%148.1, %148.2, %62.2, %214.2], env=e134.0
  void                    Deopt              !v    %217.0, Typecheck@0x5614fccff2a0[Type#318], %214.2   !
BB106   <- [216]
  (cls|spec|blt)  %106.0 = LdFun              !v    .newOrMultipleMethod, e134.0
  fs              %106.1 = FrameState         R     0x5614fcd71f30+5357: [%148.1, %148.2, %62.2, %106.0], env=e134.0
  void                    Deopt              !v    %106.1, DeadCall@0x5614fccff2a0[Call#107], %106.0   !
BB103   <- [216]
  val?^ | miss    %103.0 = LdVar              eR    obj, e134.0
  val?            %103.1 = Force!<value>      !v    %103.0, e134.0   <cls>
  val?^ | miss    %103.2 = LdVar              eR    table, e134.0
  val?            %103.3 = Force!<value>      !v    %103.2, e134.0   <env->
  val?^ | miss    %103.4 = LdVar              eR    what, e134.0
  lgl$#-          %103.5 = IsType                   %103.4 isA val?~- | miss
  void                    Branch                   %103.5 -> BB218 (if true) | BB219 (if false)
BB218   <- [103]
  val?~- | miss   %218.0 = CastType           d     dn %103.4
  val?-           %218.1 = Force!<value>            %218.0,    <str$->
  val?            %218.2 = Subassign2_1D      !v    %103.1, %103.3, %218.1, e134.0
  void                    StVar              lW    table, %218.2, e134.0
  int$-           %218.4 = %62.2
  goto BB62
BB219   <- [103]
  fs              %219.0 = FrameState         R     0x5614fcd71f30+5572: [%148.1, %148.2, %62.2, %103.1, %103.3], env=e134.0
  void                    Deopt              !v    %219.0, Typecheck@0x5614fccff2a0[Type#331], %103.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    obj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    what, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3

│ .mergeMethodsTable[0x5614fbddfb30]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
