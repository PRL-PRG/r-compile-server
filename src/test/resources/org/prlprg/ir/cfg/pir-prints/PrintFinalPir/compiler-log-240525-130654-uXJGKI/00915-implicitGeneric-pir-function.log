
┌──────────────────────────────────────────────────────────────────────────────┐
│ implicitGeneric[0x5614fd1a3440]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
implicitGeneric[0x5614fd1a3440]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     name=%0.1, where=%0.0, generic(miss)=missingArg, parent=<env 0x5614f8eae378>, context 1
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p0, e0.2
  val?^ | miss    %0.4  = CastType                 up %0.3
  void                    StArg              lW    generic, %0.4, e0.2
  val?^ | miss    %0.6  = LdVar              eR    nzchar, <env 0x5614f8eae378>
  lgl$#-          %0.7  = Identical                <blt nzchar>, %0.6   <true>
  void                    Branch                   %0.7 -> BB150 (if true) | BB151 (if false)
BB150   <- [0]
  val+            %150.0 = Force!<lazy>       !vr   %0.1,    <str$->
  val?            %150.1 = CallBuiltin        !v    nzchar(%150.0) e0.2   <lgl$->
  lgl$#-          %150.2 = IsType                   %150.1 isA lgl$-
  void                    Branch                   %150.2 -> BB152 (if true) | BB153 (if false)
BB151   <- [0]
  fs              %151.0 = FrameState         R     0x5614fe048810+0: [], env=e0.2
  void                    Deopt              !v    %151.0, DeadBranchReached@0x5614faa9bfa0[Test#0], %0.7
BB152   <- [150]
  lgl$-           %152.0 = CastType           d     dn %150.1
  lgl$-           %152.1 = Not                d     %152.0, elided
  lgl$#-          %152.2 = CheckTrueFalse     e     %152.1
  void                    Branch                   %152.2 -> BB148 (if true) | BB5 (if false)
BB153   <- [150]
  void                    Nop                !     
  val?            %153.1 = %150.1
  dr              %153.2 = Typecheck@0x5614faa9bfa0[Type#7]
  goto BB3
BB148   <- [152]
  (cls|spec|blt)  %148.0 = LdFun              !v    stop, e0.2
  fs              %148.1 = FrameState         R     0x5614fe048810+113: [%148.0], env=e0.2
  void                    Deopt              !v    %148.1, DeadCall@0x5614faa9bfa0[Call#4], %148.0   !
BB5   <- [152]
  lgl$-           %5.0  = Missing            eR    generic, e0.2
  lgl$-           %5.1  = Not                d     %5.0, elided
  lgl$-           %5.2  = AsLogical                %5.1
  lgl$#-          %5.3  = Identical                %5.2, false
  lgl$-           %5.4  = AsLogical                %5.2
  lgl$#-          %5.5  = Identical                %5.4, false
  void                    Branch                   %5.3 -> BB7 (if true) | BB6 (if false)
BB3   <- [153, 155]
  val?^ | miss    %3.0  = Phi                      %153.1:BB153, %155.1:BB155
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %153.2:BB153, %155.2:BB155
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5614fe048810+91: [%150.1], env=e0.2
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB7   <- [5]
  void                    Branch                   %5.5 -> BB9 (if true) | BB8 (if false)
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    is, e0.2
  fs              %6.1  = FrameState         R     0x5614fe048810+173: [%5.2, %6.0], env=e0.2
  void                    Deopt              !v    %6.1, DeadCall@0x5614faa9bfa0[Call#6], %6.0   !
BB9   <- [7]
  lgl$#-          %9.0  = CheckTrueFalse     e     %5.4
  void                    Branch                   %9.0 -> BB147 (if true) | BB10 (if false)
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    .identC, e0.2
  fs              %8.1  = FrameState         R     0x5614fe048810+224: [%5.4, %8.0], env=e0.2
  void                    Deopt              !v    %8.1, DeadCall@0x5614faa9bfa0[Call#7], %8.0   !
BB147   <- [9]
  (cls|spec|blt)  %147.0 = LdFun              !v    stop, e0.2
  fs              %147.1 = FrameState         R     0x5614fe048810+280: [%147.0], env=e0.2
  void                    Deopt              !v    %147.1, DeadCall@0x5614faa9bfa0[Call#9], %147.0   !
BB10   <- [9]
  lgl$-           %10.0 = Missing            eR    generic, e0.2
  lgl$-           %10.1 = AsLogical                %10.0
  lgl$#-          %10.2 = Identical                %10.1, true
  lgl$-           %10.3 = AsLogical                %10.1
  lgl$#-          %10.4 = Identical                %10.3, false
  void                    Branch                   %10.2 -> BB12 (if true) | BB11 (if false)
BB12   <- [10]
  void                    Branch                   %10.4 -> BB146 (if true) | BB13 (if false)
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    is, e0.2
  fs              %11.1 = FrameState         R     0x5614fe048810+339: [%10.1, %11.0], env=e0.2
  void                    Deopt              !v    %11.1, DeadCall@0x5614faa9bfa0[Call#12], %11.0   !
BB146   <- [12]
  void                    Nop                !     
  lgl$-           %146.1 = %10.3
  goto BB38
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    isGeneric, e0.2
  lgl$#-          %13.1 = Identical                %13.0, function(f, where=topenv(parent.frame()), fdef|...
  void                    Branch                   %13.1 -> BB154 (if true) | BB155 (if false)
BB38   <- [146, 176]
  lgl$-           %38.0 = Phi                      %176.4:BB176, %146.1:BB146
  lgl$-           %38.1 = %38.0
  void                    StVar              lW    createGeneric, %38.1, e0.2
  lgl$#-          %38.3 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.3 -> BB44 (if true) | BB41 (if false)
BB154   <- [13]
  prom-           %154.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p3, e0.2
  prom-           %154.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p4, e0.2
  ct              %154.2 = PushContext        lCL   %154.0, %154.1, isGeneric(name, where), function(f, where=topenv(parent.frame()), fdef|..., e0.2
  val?^           %154.3 = CastType                 up %154.1
  val?^           %154.4 = CastType                 up %154.0
  env             e154.5 = MkEnv              l     f=%154.4, where=%154.3, fdef(miss)=nil, getName(miss)=false, parent=<env 0x5614f8eae378>, context 1
  lgl$-           %154.6 = Missing            eR    where, e154.5
  lgl$-           %154.7 = AsLogical                %154.6
  lgl$-           %154.8 = AsLogical                %154.7
  lgl$#-          %154.9 = CheckTrueFalse     e     %154.8
  void                    Branch                   %154.9 -> BB145 (if true) | BB16 (if false)
BB155   <- [13]
  void                    Nop                !     
  val?^ | miss    %155.1 = %13.0
  dr              %155.2 = CallTarget@0x5614faa9bfa0[Call#13]
  goto BB3
BB44   <- [38]
  val?^ | miss    %44.0 = LdVar              eR    getFunction, e0.2
  lgl$#-          %44.1 = Identical                %44.0, function(name, generic=TRUE, mustFind=TRUE, wh|...
  void                    Branch                   %44.1 -> BB156 (if true) | BB157 (if false)
BB41   <- [38]
  void                    Nop                !     
  goto BB42
BB145   <- [154]
  (cls|spec|blt)  %145.0 = LdFun              !v    .getGenericFromCache, <env 0x5614f8eae378>
  fs              %145.1 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  fs              %145.2 = FrameState         R     0x5614fd0e3990+50: [%145.0], env=e154.5, next=%145.1
  void                    Deopt              !v    %145.2, DeadCall@0x5614fd0d1f80[Call#2], %145.0   !
BB16   <- [154]
  val?^ | miss    %16.0 = LdVar              eR    getFunction, <env 0x5614f8eae378>
  lgl$#-          %16.1 = Identical                %16.0, function(name, generic=TRUE, mustFind=TRUE, wh|...
  void                    Branch                   %16.1 -> BB158 (if true) | BB159 (if false)
BB156   <- [44]
  prom-           %156.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p5, e0.2
  prom-           %156.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p6, e0.2
  val?            %156.2 = StaticCall         !v    getFunction[0x5614fc51fb80](%156.0, missingArg, false, %156.1) { 0 3n 2n } e0.2   <cls->
  lgl$-           %156.3 = Is                       %156.2, NULL
  void                    StVar              lW    fdefault, %156.2, e0.2
  val             %156.5 = ChkMissing         e     %156.2
  lgl$#-          %156.6 = CheckTrueFalse     e     %156.3
  void                    Branch                   %156.6 -> BB134 (if true) | BB47 (if false)
BB157   <- [44]
  fs              %157.0 = FrameState         R     0x5614fe048810+441: [], env=e0.2
  void                    Deopt              !v    %157.0, CallTarget@0x5614faa9bfa0[Call#14], %44.0   !
BB42   <- [41, 101, 248]
  val?^ | miss    %42.0 = LdVar              eR    generic, e0.2
  void                    Visible            v     
  val?            %42.2 = Force!<value>      !     %42.0, e0.2   <cls>
  val?            %42.3 = %42.2
  goto BB43
BB158   <- [16]
  prom-           %158.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p34, e154.5
  prom-           %158.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p35, e154.5
  val?            %158.2 = StaticCall         !v    getFunction[0x5614fc51fb80](%158.0, missingArg, false, %158.1) { 0 3n 2n } e154.5   <cls->
  void                    StVar              lW    fdef, %158.2, e154.5
  val             %158.4 = ChkMissing         e     %158.2   <cls->
  lgl$-           %158.5 = Is                       %158.4, NULL
  lgl$#-          %158.6 = CheckTrueFalse     e     %158.5
  void                    Branch                   %158.6 -> BB144 (if true) | BB19 (if false)
BB159   <- [16]
  fs              %159.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  fs              %159.1 = FrameState         R     0x5614fd0e3990+35: [%154.9], env=e154.5, next=%159.0
  void                    Deopt              !v    %159.1, CallTarget@0x5614fd0d1f80[Call#4], %16.0   !
BB134   <- [156]
  void                    Visible            v     
  nil-            %134.1 = nil
  goto BB43
BB47   <- [156]
  val?^ | miss    %47.0 = LdVar              eR    environment, e0.2
  lgl$#-          %47.1 = Identical                %47.0, function(fun=NULL) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %47.1 -> BB160 (if true) | BB161 (if false)
BB43   <- [134, 42]
  val?            %43.0 = Phi                      %42.3:BB42, %134.1:BB134
  val?            %43.1 = %43.0
  void                    Return             l     %43.1
BB144   <- [158]
  void                    Nop                !     
  lgl$#-          %144.1 = false
  goto BB35
BB19   <- [158]
  val?^ | miss    %19.0 = LdVar              eR    isBaseFun, e154.5
  lgl$#-          %19.1 = Identical                %19.0, function(fun) <(rir::DispatchTable*)0x5614feb6|...
  void                    Branch                   %19.1 -> BB164 (if true) | BB165 (if false)
BB160   <- [47]
  prom-           %160.0 = MkArg                    %156.2, implicitGeneric[0x5614fd1a3440]_p7 (!refl), 
  val?            %160.1 = StaticCall         !v    environment[0x5614fd0ddb10](%160.0) e0.2   <env->
  void                    StVar              lW    env, %160.1, e0.2
  val?^ | miss    %160.3 = LdVar              eR    .derivedDefaultMethod, e0.2
  lgl$#-          %160.4 = Identical                %160.3, function(fdef, internal=NULL) <(rir::DispatchT|...
  void                    Branch                   %160.4 -> BB162 (if true) | BB163 (if false)
BB161   <- [47]
  fs              %161.0 = FrameState         R     0x5614fe048810+534: [], env=e0.2
  void                    Deopt              !v    %161.0, CallTarget@0x5614faa9bfa0[Call#15], %47.0   !
BB35   <- [144, 34]
  lgl$#-          %35.0 = Phi                      %34.1:BB34, %144.1:BB144
  lgl$#-          %35.1 = %35.0
  val?            %35.2 = PopContext         C     %35.1, %154.2   <lgl$->
  lgl$#-          %35.3 = IsType                   %35.2 isA lgl$-
  void                    Branch                   %35.3 -> BB176 (if true) | BB177 (if false)
BB164   <- [19]
  prom-           %164.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p36 (!refl), e154.5
  val?            %164.1 = StaticCall         !v    isBaseFun[0x5614fe070940](%164.0) e154.5   <lgl$->
  lgl$#-          %164.2 = IsType                   %164.1 isA lgl$-
  void                    Branch                   %164.2 -> BB174 (if true) | BB175 (if false)
BB165   <- [19]
  fs              %165.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  fs              %165.1 = FrameState         R     0x5614fd0e3990+299: [], env=e154.5, next=%165.0
  void                    Deopt              !v    %165.1, CallTarget@0x5614fd0d1f80[Call#5], %19.0   !
BB162   <- [160]
  prom-           %162.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p8, e0.2
  ct              %162.1 = PushContext        lCL   %162.0, .derivedDefaultMethod(fdefault), function(fdef, internal=NULL) <(rir::DispatchT|..., e0.2
  val?^           %162.2 = CastType                 up %162.0
  val?^ | miss    %162.3 = LdVar              eR    is.function, <env 0x5614f8eae378>
  lgl$#-          %162.4 = Identical                <blt is.function>, %162.3   <true>
  void                    Branch                   %162.4 -> BB166 (if true) | BB167 (if false)
BB163   <- [160]
  void                    Nop                !     
  val?^ | miss    %163.1 = %160.3
  dr              %163.2 = CallTarget@0x5614faa9bfa0[Call#16]
  goto BB48
BB176   <- [35]
  lgl$-           %176.0 = CastType           d     dn %35.2
  lgl$-           %176.1 = Not                d     %176.0, elided
  lgl$-           %176.2 = AsLogical                %176.1
  lgl$-           %176.3 = LAnd                     %10.3, %176.2
  lgl$-           %176.4 = %176.3
  goto BB38
BB177   <- [35]
  fs              %177.0 = FrameState         R     0x5614fe048810+424: [%10.3, %35.2], env=e0.2
  void                    Deopt              !v    %177.0, Typecheck@0x5614faa9bfa0[Type#23], %35.2   !
BB174   <- [164]
  lgl$-           %174.0 = CastType           d     dn %164.1
  lgl$#-          %174.1 = CheckTrueFalse     e     %174.0
  void                    Branch                   %174.1 -> BB23 (if true) | BB22 (if false)
BB175   <- [164]
  void                    Nop                !     
  val?            %175.1 = %164.1
  dr              %175.2 = Typecheck@0x5614fd0d1f80[Type#17]
  goto BB20
BB166   <- [162]
  env             e166.0 = MkEnv              l     fdef=%162.2, internal(miss)=nil, parent=<env 0x5614f8eae378>, context 1
  val?            %166.1 = Force!<lazy>       !vL   %162.2, e166.0   <cls->
  lgl$#-          %166.2 = IsType                   %166.1 isA val?-
  void                    Branch                   %166.2 -> BB168 (if true) | BB169 (if false)
BB167   <- [162]
  void                    DropContext        C     
  lgl$#-          %167.1 = %162.4
  dr              %167.2 = DeadBranchReached@0x5614ff5275f8[Test#0]
  goto BB48
BB48   <- [163, 167]
  val?^ | miss    %48.0 = Phi                      %163.1:BB163, %167.1:BB167
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %163.2:BB163, %167.2:BB167
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x5614fe048810+617: [], env=e0.2
  void                    Deopt              !v    %48.4, %48.3, %48.1   !
BB23   <- [174]
  val?^ | miss    %23.0 = LdVar              eR    is.character, e154.5
  lgl$#-          %23.1 = Identical                <blt is.character>, %23.0   <true>
  void                    Branch                   %23.1 -> BB186 (if true) | BB187 (if false)
BB22   <- [174]
  fs              %22.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  (cls|spec|blt)  %22.1 = LdFun              !v    is, e154.5
  fs              %22.2 = FrameState         R     0x5614fd0e3990+940: [%22.1], env=e154.5, next=%22.0
  void                    Deopt              !v    %22.2, DeadCall@0x5614fd0d1f80[Call#16], %22.1   !
BB20   <- [175, 187]
  val?^ | miss    %20.0 = Phi                      %175.1:BB175, %187.1:BB187
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %175.2:BB175, %187.2:BB187
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  fs              %20.5 = FrameState         R     0x5614fd0e3990+368: [%164.1], env=e154.5, next=%20.4
  void                    Deopt              !v    %20.5, %20.3, %20.1   !
BB168   <- [166]
  val?-           %168.0 = CastType           d     dn %166.1   <cls->
  lgl$#-          %168.1 = CallSafeBuiltin    wed   is.function(%168.0)    <lgl$->
  void                    Branch                   %168.1 -> BB123 (if true) | BB54 (if false)
BB169   <- [166]
  fs              %169.0 = FrameState         R     0x5614fe048810+649: [], env=e0.2
  fs              %169.1 = FrameState         R     0x5614feaa3e10+69: [<blt is.function>, %166.1], env=e166.0, next=%169.0
  void                    Deopt              !v    %169.1, Typecheck@0x5614ff5275f8[Type#1], %166.1   !
BB186   <- [23]
  val?^ | miss    %186.0 = LdVar              eR    f, e154.5
  val?            %186.1 = Force!<wrapped>    !v    %186.0, e154.5   <str$->
  lgl$#-          %186.2 = CallSafeBuiltin    wed   is.character(%186.1)    <lgl$->
  void                    Branch                   %186.2 -> BB141 (if true) | BB26 (if false)
BB187   <- [23]
  void                    Nop                !     
  lgl$#-          %187.1 = %23.1
  dr              %187.2 = DeadBranchReached@0x5614fd0d1f80[Test#0]
  goto BB20
BB123   <- [168]
  val?^ | miss    %123.0 = LdVar              eR    is.primitive, <env 0x5614f8eae378>
  lgl$#-          %123.1 = Identical                %123.0, function(x) <(rir::DispatchTable*)0x5614fb45f8|...
  void                    Branch                   %123.1 -> BB170 (if true) | BB171 (if false)
BB54   <- [168]
  void                    Nop                !     
  lgl$#-          %54.1 = %168.1
  goto BB55
BB141   <- [186]
  val?^ | miss    %141.0 = LdVar              eR    %in%, e154.5
  lgl$#-          %141.1 = Identical                %141.0, function(x, table) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %141.1 -> BB190 (if true) | BB191 (if false)
BB26   <- [186]
  void                    Nop                !     
  lgl$#-          %26.1 = %186.2
  goto BB27
BB170   <- [123]
  str$-           %170.0 = CallSafeBuiltin    wed   typeof(%168.0)    <str$->
  int$-           %170.1 = Length                   %170.0
  lgl$-           %170.2 = Eq                 d     %170.1, 1L, elided   <true>
  lgl$#-          %170.3 = Identical                %170.2, true
  void                    Branch                   %170.3 -> BB178 (if true) | BB179 (if false)
BB171   <- [123]
  fs              %171.0 = FrameState         R     0x5614fe048810+649: [], env=e0.2
  fs              %171.1 = FrameState         R     0x5614feaa3e10+91: [%168.1], env=e166.0, next=%171.0
  void                    Deopt              !v    %171.1, CallTarget@0x5614ff5275f8[Call#1], %123.0   !
BB55   <- [54, 130]
  lgl$-           %55.0 = Phi                      %130.4:BB130, %54.1:BB54
  lgl$-           %55.1 = %55.0
  lgl$#-          %55.2 = CheckTrueFalse     e     %55.1
  void                    Branch                   %55.2 -> BB120 (if true) | BB56 (if false)
BB190   <- [141]
  val?^ | miss    %190.0 = LdVar              eR    f, e154.5
  val?            %190.1 = Force!<wrapped>    !v    %190.0, e154.5   <str$->
  prom-           %190.2 = MkArg                    %190.1, implicitGeneric[0x5614fd1a3440]_p37 (!refl), 
  val?            %190.3 = StaticCall         !v    %in%[0x5614fc69a510](%190.2, "as.double") e154.5   <lgl$->
  lgl$#-          %190.4 = IsType                   %190.3 isA lgl$-
  void                    Branch                   %190.4 -> BB200 (if true) | BB201 (if false)
BB191   <- [141]
  fs              %191.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  fs              %191.1 = FrameState         R     0x5614fd0e3990+475: [%186.2], env=e154.5, next=%191.0
  void                    Deopt              !v    %191.1, CallTarget@0x5614fd0d1f80[Call#7], %141.0   !
BB27   <- [26, 200]
  lgl$-           %27.0 = Phi                      %200.3:BB200, %26.1:BB26
  lgl$-           %27.1 = %27.0
  lgl$#-          %27.2 = CheckTrueFalse     e     %27.1
  void                    Branch                   %27.2 -> BB140 (if true) | BB28 (if false)
BB178   <- [170]
  lgl$-           %178.0 = CallSafeBuiltin    wed   is.na(%170.0) 
  lgl$#-          %178.1 = CheckTrueFalse     e     %178.0   <false>
  void                    Branch                   %178.1 -> BB183 (if true) | BB182 (if false)
BB179   <- [170]
  prom-           %179.0 = MkArg                    %168.0, implicitGeneric[0x5614fd1a3440]_p47 (!refl), e166.0
  val?~           %179.1 = CastType                 up %179.0
  env             e179.2 = (MkEnv)            l     x=%179.1, parent=R_BaseNamespace, context 0
  env             e179.3 = MaterializeEnv           , e179.2   <@?>
  fs              %179.4 = FrameState         R     0x5614fe048810+649: [], env=e0.2
  fs              %179.5 = FrameState         R     0x5614feaa3e10+135: [%168.1], env=e166.0, next=%179.4
  fs              %179.6 = FrameState         R     0x5614fb9a90f0+32: [], env=e179.3, next=%179.5
  prom-           %179.7 = MkArg                    %168.0, implicitGeneric[0x5614fd1a3440]_p48 (!refl), e179.3
  val?~           %179.8 = CastType                 up %179.7
  env             e179.9 = (MkEnv)            l     x=%179.8, parent=R_BaseNamespace, context -1
  fs              %179.10 = FrameState         R     0x5614fa9a51b0+27: [%170.0], env=e179.9, next=%179.6
  void                    Deopt              !v    %179.10, DeadBranchReached@0x5614fb5b9618[Test#1], %170.3   !
BB120   <- [55]
  val?^ | miss    %120.0 = LdVar              eR    new, <env 0x5614f8eae378>
  lgl$#-          %120.1 = Identical                %120.0, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %120.1 -> BB172 (if true) | BB173 (if false)
BB56   <- [55]
  void                    Nop                !     
  val?-           %56.1 = %168.0
  goto BB57
BB200   <- [190]
  lgl$-           %200.0 = CastType           d     dn %190.3
  lgl$-           %200.1 = AsLogical                %200.0
  lgl$-           %200.2 = LAnd                     %186.2, %200.1
  lgl$-           %200.3 = %200.2
  goto BB27
BB201   <- [190]
  fs              %201.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  fs              %201.1 = FrameState         R     0x5614fd0e3990+524: [%186.2, %190.3], env=e154.5, next=%201.0
  void                    Deopt              !v    %201.1, Typecheck@0x5614fd0d1f80[Type#22], %190.3   !
BB140   <- [27]
  void                    StVar              lW    f, "as.numeric", e154.5
  goto BB29
BB28   <- [27]
  void                    Nop                !     
  goto BB29
BB183   <- [178]
  prom-           %183.0 = MkArg                    %168.0, implicitGeneric[0x5614fd1a3440]_p47 (!refl), e166.0
  val?~           %183.1 = CastType                 up %183.0
  fs              %183.2 = FrameState         R     0x5614fe048810+649: [], env=e0.2
  fs              %183.3 = FrameState         R     0x5614feaa3e10+135: [%168.1], env=e166.0, next=%183.2
  env             e183.4 = (MkEnv)            l     x=%183.1, parent=R_BaseNamespace, context 0
  fs              %183.5 = FrameState         R     0x5614fb9a90f0+240: [%170.0, %178.0], env=e183.4, next=%183.3
  void                    Deopt              !v    %183.5, DeadBranchReached@0x5614fb5b9618[Test#7], %178.1   !
BB182   <- [178]
  lgl$-           %182.0 = Eq                 d     %170.0, special, elided
  lgl$#-          %182.1 = CheckTrueFalse     e     %182.0
  void                    Branch                   %182.1 -> BB133 (if true) | BB128 (if false)
BB172   <- [120]
  val?            %172.0 = StaticCall         !v    new[0x5614fa14b3e0]("derivedDefaultMethod") { 0 } e166.0   <cls>
  void                    StVar              lW    value, %172.0, e166.0
  (cls|spec|blt)  %172.2 = LdFun              !v    <-, <0x5614f889bda8>, e166.0
  prom-           %172.3 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p49, e166.0
  prom-           %172.4 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p52, e166.0
  val?            %172.5 = Call               !v    %172.2(%172.3, %172.4) e166.0
  (cls|spec|blt)  %172.6 = LdFun              !v    <-, <0x5614f889bda8>, e166.0
  prom-           %172.7 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p53, e166.0
  prom-           %172.8 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p56, e166.0
  val?            %172.9 = Call               !v    %172.6(%172.7, %172.8) e166.0
  val?^ | miss    %172.10 = LdVar              eR    value, e166.0
  val?            %172.11 = Force!<value>      !v    %172.10, e166.0   <cls>
  val?            %172.12 = %172.11
  goto BB57
BB173   <- [120]
  fs              %173.0 = FrameState         R     0x5614fe048810+649: [], env=e0.2
  fs              %173.1 = FrameState         R     0x5614feaa3e10+177: [nil], env=e166.0, next=%173.0
  void                    Deopt              !v    %173.1, CallTarget@0x5614ff5275f8[Call#2], %120.0   !
BB57   <- [56, 172]
  val?            %57.0 = Phi                      %56.1:BB56, %172.12:BB172
  val?            %57.1 = %57.0
  val?            %57.2 = PopContext         C     %57.1, %162.1   <cls>
  void                    StVar              lW    fdefault, %57.2, e0.2
  val?^ | miss    %57.4 = LdVar              eR    isBaseFun, e0.2
  lgl$#-          %57.5 = Identical                %57.4, function(fun) <(rir::DispatchTable*)0x5614feb6|...
  void                    Branch                   %57.5 -> BB180 (if true) | BB181 (if false)
BB29   <- [28, 140]
  val?^ | miss    %29.0 = LdVar              eR    genericForBasic, e154.5
  lgl$#-          %29.1 = Identical                %29.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %29.1 -> BB188 (if true) | BB189 (if false)
BB133   <- [182]
  void                    Nop                !     
  goto BB132
BB128   <- [182]
  lgl$-           %128.0 = Eq                 d     %170.0, builtin, elided
  lgl$#-          %128.1 = CheckTrueFalse     e     %128.0
  void                    Branch                   %128.1 -> BB131 (if true) | BB129 (if false)
BB180   <- [57]
  prom-           %180.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p9 (!refl), e0.2
  val?            %180.1 = StaticCall         !v    isBaseFun[0x5614fe070940](%180.0) e0.2   <lgl$->
  lgl$#-          %180.2 = IsType                   %180.1 isA lgl$-
  void                    Branch                   %180.2 -> BB184 (if true) | BB185 (if false)
BB181   <- [57]
  fs              %181.0 = FrameState         R     0x5614fe048810+663: [], env=e0.2
  void                    Deopt              !v    %181.0, CallTarget@0x5614faa9bfa0[Call#17], %57.4   !
BB188   <- [29]
  prom-           %188.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p38, e154.5
  val?            %188.1 = StaticCall         !v    genericForBasic[0x5614fcbd4570](%188.0, missingArg, false) { 0 2n } e154.5   <nil->
  void                    StVar              lW    gen, %188.1, e154.5
  lgl$#-          %188.3 = IsType                   %188.1 isA val?-
  val?^ | miss    %188.4 = LdVar              eR    is.function, e154.5
  lgl$#-          %188.5 = Identical                <blt is.function>, %188.4   <true>
  void                    Branch                   %188.5 -> BB192 (if true) | BB193 (if false)
BB189   <- [29]
  fs              %189.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  fs              %189.1 = FrameState         R     0x5614fd0e3990+557: [], env=e154.5, next=%189.0
  void                    Deopt              !v    %189.1, CallTarget@0x5614fd0d1f80[Call#8], %29.0   !
BB132   <- [133, 131]
  void                    Nop                !     
  lgl$#-          %132.1 = true
  goto BB130
BB131   <- [128]
  void                    Nop                !     
  goto BB132
BB129   <- [128]
  void                    Nop                !     
  lgl$#-          %129.1 = false
  goto BB130
BB184   <- [180]
  lgl$-           %184.0 = CastType           d     dn %180.1
  lgl$#-          %184.1 = CheckTrueFalse     e     %184.0
  void                    Branch                   %184.1 -> BB63 (if true) | BB62 (if false)
BB185   <- [180]
  void                    Nop                !     
  val?            %185.1 = %180.1
  dr              %185.2 = Typecheck@0x5614faa9bfa0[Type#34]
  goto BB60
BB192   <- [188]
  val             %192.0 = ChkMissing         e     %188.1
  void                    Branch                   %188.3 -> BB196 (if true) | BB197 (if false)
BB193   <- [188]
  void                    Nop                !     
  lgl$#-          %193.1 = %188.5
  dr              %193.2 = DeadBranchReached@0x5614fd0d1f80[Test#1]
  goto BB32
BB130   <- [129, 132]
  lgl$#-          %130.0 = Phi                      %129.1:BB129, %132.1:BB132
  lgl$#-          %130.1 = %130.0
  lgl$#-          %130.2 = Not                d     %130.1, elided
  lgl$-           %130.3 = LAnd                     %168.1, %130.2
  lgl$-           %130.4 = %130.3
  goto BB55
BB63   <- [184]
  val?^ | miss    %63.0 = LdVar              eR    genericForBasic, e0.2
  lgl$#-          %63.1 = Identical                %63.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %63.1 -> BB194 (if true) | BB195 (if false)
BB62   <- [184]
  (cls|spec|blt)  %62.0 = LdFun              !v    getPackageName, e0.2
  fs              %62.1 = FrameState         R     0x5614fe048810+711: [%62.0], env=e0.2
  void                    Deopt              !v    %62.1, DeadCall@0x5614faa9bfa0[Call#18], %62.0   !
BB60   <- [185, 195]
  val?^ | miss    %60.0 = Phi                      %185.1:BB185, %195.1:BB195
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %185.2:BB185, %195.2:BB195
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x5614fe048810+695: [%180.1], env=e0.2
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB196   <- [192]
  val?-           %196.0 = CastType           d     dn %188.1   <nil->
  lgl$#-          %196.1 = CallSafeBuiltin    wed   is.function(%196.0)    <lgl$->
  void                    Branch                   %196.1 -> BB135 (if true) | BB34 (if false)
BB197   <- [192]
  void                    Nop                !     
  val?            %197.1 = %188.1
  dr              %197.2 = Typecheck@0x5614fd0d1f80[Type#24]
  goto BB32
BB32   <- [193, 197]
  val?^ | miss    %32.0 = Phi                      %193.1:BB193, %197.1:BB197
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %193.2:BB193, %197.2:BB197
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  fs              %32.5 = FrameState         R     0x5614fd0e3990+616: [], env=e154.5, next=%32.4
  void                    Deopt              !v    %32.5, %32.3, %32.1   !
BB194   <- [63]
  prom-           %194.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p10, e0.2
  val?            %194.1 = StaticCall         !v    genericForBasic[0x5614fb411380](%194.0) e0.2   <nil->
  void                    StVar              lW    value, %194.1, e0.2
  lgl$#-          %194.3 = IsType                   %194.1 isA val?-
  val?^ | miss    %194.4 = LdVar              eR    is.function, e0.2
  lgl$#-          %194.5 = Identical                <blt is.function>, %194.4   <true>
  void                    Branch                   %194.5 -> BB198 (if true) | BB199 (if false)
BB195   <- [63]
  void                    Nop                !     
  val?^ | miss    %195.1 = %63.0
  dr              %195.2 = CallTarget@0x5614faa9bfa0[Call#19]
  goto BB60
BB135   <- [196]
  val?^ | miss    %135.0 = LdVar              eR    length, e154.5
  lgl$#-          %135.1 = Identical                <blt length>, %135.0   <@?>
  void                    Branch                   %135.1 -> BB137 (if true) | BB136 (if false)
BB34   <- [196]
  void                    Nop                !     
  lgl$#-          %34.1 = %196.1
  goto BB35
BB198   <- [194]
  val             %198.0 = ChkMissing         e     %194.1
  void                    Branch                   %194.3 -> BB202 (if true) | BB203 (if false)
BB199   <- [194]
  void                    Nop                !     
  lgl$#-          %199.1 = %194.5
  dr              %199.2 = DeadBranchReached@0x5614faa9bfa0[Test#1]
  goto BB64
BB137   <- [135]
  val?^ | miss    %137.0 = LdVar              eR    names, e154.5
  lgl$#-          %137.1 = Identical                <blt names>, %137.0   <@?>
  void                    Branch                   %137.1 -> BB139 (if true) | BB138 (if false)
BB136   <- [135]
  fs              %136.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  (cls|spec|blt)  %136.1 = LdFun              !v    length, e154.5
  fs              %136.2 = FrameState         R     0x5614fd0e3990+747: [%196.1, %136.1], env=e154.5, next=%136.0
  void                    Deopt              !v    %136.2, DeadCall@0x5614fd0d1f80[Call#10], %136.1   !
BB202   <- [198]
  val?-           %202.0 = CastType           d     dn %194.1   <nil->
  lgl$#-          %202.1 = CallSafeBuiltin    wed   is.function(%202.0)    <lgl$->
  void                    Branch                   %202.1 -> BB115 (if true) | BB66 (if false)
BB203   <- [198]
  void                    Nop                !     
  val?            %203.1 = %194.1
  dr              %203.2 = Typecheck@0x5614faa9bfa0[Type#38]
  goto BB64
BB64   <- [199, 203]
  val?^ | miss    %64.0 = Phi                      %199.1:BB199, %203.1:BB203
  val?^ | miss    %64.1 = %64.0
  dr              %64.2 = Phi                      %199.2:BB199, %203.2:BB203
  dr              %64.3 = %64.2
  fs              %64.4 = FrameState         R     0x5614fe048810+803: [], env=e0.2
  void                    Deopt              !v    %64.4, %64.3, %64.1   !
BB139   <- [137]
  fs              %139.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  (cls|spec|blt)  %139.1 = LdFun              !v    .getMethodsTable, e154.5
  fs              %139.2 = FrameState         R     0x5614fd0e3990+844: [%196.1, <blt length>, <blt names>, %139.1], env=e154.5, next=%139.0
  void                    Deopt              !v    %139.2, DeadCall@0x5614fd0d1f80[Call#15], %139.1   !
BB138   <- [137]
  fs              %138.0 = FrameState         R     0x5614fe048810+424: [%10.3], env=e0.2
  (cls|spec|blt)  %138.1 = LdFun              !v    names, e154.5
  fs              %138.2 = FrameState         R     0x5614fd0e3990+807: [%196.1, <blt length>, %138.1], env=e154.5, next=%138.0
  void                    Deopt              !v    %138.2, DeadCall@0x5614fd0d1f80[Call#13], %138.1   !
BB115   <- [202]
  lgl$-           %115.0 = Missing            eR    generic, e0.2
  lgl$-           %115.1 = Not                d     %115.0, elided
  lgl$-           %115.2 = AsLogical                %115.1
  lgl$#-          %115.3 = Identical                %115.2, false
  void                    Branch                   %115.3 -> BB117 (if true) | BB116 (if false)
BB66   <- [202]
  void                    StVar              lW    package, "base", e0.2
  val?^ | miss    %66.1 = LdVar              eR    .getImplicitGroup, e0.2
  lgl$#-          %66.2 = Identical                %66.1, function(name, where) <(rir::DispatchTable*)0x|...
  void                    Branch                   %66.2 -> BB204 (if true) | BB205 (if false)
BB117   <- [115]
  lgl$#-          %117.0 = CheckTrueFalse     e     %115.2
  void                    Branch                   %117.0 -> BB119 (if true) | BB118 (if false)
BB116   <- [115]
  (cls|spec|blt)  %116.0 = LdFun              !v    identical, e0.2
  fs              %116.1 = FrameState         R     0x5614fe048810+929: [%115.2, %116.0], env=e0.2
  void                    Deopt              !v    %116.1, DeadCall@0x5614faa9bfa0[Call#21], %116.0   !
BB204   <- [66]
  prom-           %204.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p11, e0.2
  prom-           %204.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p12, e0.2
  val?^           %204.2 = CastType                 up %204.1
  val?^           %204.3 = CastType                 up %204.0
  val?^ | miss    %204.4 = LdVar              eR    identical, e0.2
  lgl$#-          %204.5 = Identical                %204.4, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %204.5 -> BB206 (if true) | BB207 (if false)
BB205   <- [66]
  void                    Nop                !     
  val?^ | miss    %205.1 = %66.1
  dr              %205.2 = CallTarget@0x5614faa9bfa0[Call#26]
  goto BB67
BB119   <- [117]
  (cls|spec|blt)  %119.0 = LdFun              !v    stop, e0.2
  fs              %119.1 = FrameState         R     0x5614fe048810+985: [%119.0], env=e0.2
  void                    Deopt              !v    %119.1, DeadCall@0x5614faa9bfa0[Call#22], %119.0   !
BB118   <- [117]
  void                    StVar              lW    generic, %202.0, e0.2
  (cls|spec|blt)  %118.1 = LdFun              !v    @, e0.2
  fs              %118.2 = FrameState         R     0x5614fe048810+1054: [%118.1], env=e0.2
  void                    Deopt              !v    %118.2, DeadCall@0x5614faa9bfa0[Call#25], %118.1   !
BB206   <- [204]
  prom-           %206.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p13 (!refl), e0.2
  ct              %206.1 = PushContext        lCL   %206.0, "base", identical(package, "base"), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.2
  val?^           %206.2 = CastType                 up %206.0
  env             e206.3 = MkEnv              l     x=%206.2, y="base", num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  env             e206.4 = (MkEnv)            l     name=%204.3, where=%204.2, tbl=unboundValue, r=unboundValue, parent=<env 0x5614f8eae378>, context 1
  val?            %206.5 = CallBuiltin        !v    identical("base", "base", true, true, true, true, false, true) e206.3
  val?            %206.6 = PopContext         C     %206.5, %206.1   <lgl$->
  lgl$#-          %206.7 = IsType                   %206.6 isA lgl$-
  void                    Branch                   %206.7 -> BB208 (if true) | BB209 (if false)
BB207   <- [204]
  void                    Nop                !     
  val?^ | miss    %207.1 = %204.4
  dr              %207.2 = CallTarget@0x5614faa9bfa0[Call#27]
  goto BB67
BB67   <- [205, 207]
  val?^ | miss    %67.0 = Phi                      %205.1:BB205, %207.1:BB207
  val?^ | miss    %67.1 = %67.0
  dr              %67.2 = Phi                      %205.2:BB205, %207.2:BB207
  dr              %67.3 = %67.2
  fs              %67.4 = FrameState         R     0x5614fe048810+1115: [], env=e0.2
  void                    Deopt              !v    %67.4, %67.3, %67.1   !
BB208   <- [206]
  lgl$-           %208.0 = CastType           d     dn %206.6
  lgl$#-          %208.1 = CheckTrueFalse     e     %208.0
  void                    Branch                   %208.1 -> BB114 (if true) | BB71 (if false)
BB209   <- [206]
  void                    Nop                !     
  val?            %209.1 = %206.6
  dr              %209.2 = Typecheck@0x5614faa9bfa0[Type#54]
  goto BB69
BB114   <- [208]
  val?^ | miss    %114.0 = LdVar              eR    .methodsNamespace, e0.2
  lgl$#-          %114.1 = IsType                   %114.0 isA val?~- | miss
  void                    Branch                   %114.1 -> BB210 (if true) | BB211 (if false)
BB71   <- [208]
  (cls|spec|blt)  %71.0 = LdFun              !v    environment, e0.2
  prom-           %71.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p14, e0.2
  val?            %71.2 = Call               !v    %71.0(%71.1) e0.2   <val?_>
  val?            %71.3 = %71.2
  goto BB72
BB69   <- [209, 211]
  val?^ | miss    %69.0 = Phi                      %209.1:BB209, %211.1:BB211
  val?^ | miss    %69.1 = %69.0
  dr              %69.2 = Phi                      %209.2:BB209, %211.2:BB211
  dr              %69.3 = %69.2
  fs              %69.4 = FrameState         R     0x5614fe048810+1152: [], env=e0.2
  fs              %69.5 = FrameState         R     0x5614fd8492b0+9: [], env=e206.4, next=%69.4
  fs              %69.6 = FrameState         R     0x5614fcd80ed0+37(pr): [%206.6], env=e0.2, next=%69.5
  void                    Deopt              !v    %69.6, %69.3, %69.1   !
BB210   <- [114]
  val?~- | miss   %210.0 = CastType           d     dn %114.0
  val?-           %210.1 = Force!<value>            %210.0,    <env->
  val?-           %210.2 = %210.1
  goto BB72
BB211   <- [114]
  void                    Nop                !     
  val?^ | miss    %211.1 = %114.0
  dr              %211.2 = Typecheck@0x5614faa9bfa0[Type#57]
  goto BB69
BB72   <- [71, 210]
  val?            %72.0 = Phi                      %71.3:BB71, %210.2:BB210   <env->
  val?            %72.1 = %72.0
  lgl$#-          %72.2 = IsType                   %72.1 isA val+   <true>
  prom-           %72.3 = MkArg                    %72.1, implicitGeneric[0x5614fd1a3440]_p12 (!refl), e0.2
  val?~           %72.4 = CastType                 up %72.3
  void                    StArg              lWd   where, %72.4, e206.4
  lgl$#-          %72.6 = IsEnvStub          R     , e206.4
  void                    Branch                   %72.6 -> BB212 (if true) | BB213 (if false)
BB212   <- [72]
  void                    Branch                   %72.2 -> BB214 (if true) | BB215 (if false)
BB213   <- [72]
  void                    Nop                !     
  env             e213.1 = e206.4
  dr              %213.2 = EnvStubMaterialized@0x5614ff526af8[Call#unknown]
  goto BB73
BB214   <- [212]
  val?^ | miss    %214.0 = LdVar              eRd   .ImplicitGroupMetaName, <env 0x5614f8eae378>
  val?            %214.1 = Force!<wrapped>    !vL   %214.0, e206.4   <str$->
  lgl$#-          %214.2 = IsType                   %214.1 isA val?-
  lgl$#-          %214.3 = IsEnvStub          R     , e206.4
  void                    Branch                   %214.3 -> BB216 (if true) | BB217 (if false)
BB215   <- [212]
  void                    Nop                !     
  lgl$#-          %215.1 = %72.2
  dr              %215.2 = DeadBranchReached@0x5614ff526af8[Test#0]
  goto BB73
BB73   <- [213, 215]
  val?^ | miss    %73.0 = Phi                      e213.1:BB213, %215.1:BB215
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %213.2:BB213, %215.2:BB215
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x5614fe048810+1152: [], env=e0.2
  fs              %73.5 = FrameState         R     0x5614fd8492b0+9: [%72.1], env=e206.4, next=%73.4
  void                    Deopt              !v    %73.5, %73.3, %73.1   !
BB216   <- [214]
  lgl$#-          %216.0 = IsType                   %72.1 isA val?-
  void                    Branch                   %216.0 -> BB218 (if true) | BB219 (if false)
BB217   <- [214]
  void                    Nop                !     
  env             e217.1 = e206.4
  dr              %217.2 = EnvStubMaterialized@0x5614ff526af8[Call#unknown]
  goto BB75
BB218   <- [216]
  val?-           %218.0 = CastType           d     dn %72.1   <env->
  void                    Branch                   %214.2 -> BB220 (if true) | BB221 (if false)
BB219   <- [216]
  void                    Nop                !     
  val?            %219.1 = %72.1
  dr              %219.2 = Typecheck@0x5614ff526af8[Type#0]
  goto BB75
BB75   <- [217, 219, 221]
  val?            %75.0 = Phi                      e217.1:BB217, %219.1:BB219, %221.1:BB221
  val?            %75.1 = %75.0
  dr              %75.2 = Phi                      %217.2:BB217, %219.2:BB219, %221.2:BB221
  dr              %75.3 = %75.2
  fs              %75.4 = FrameState         R     0x5614fe048810+1152: [], env=e0.2
  fs              %75.5 = FrameState         R     0x5614fd8492b0+54: [%72.1, %214.1], env=e206.4, next=%75.4
  void                    Deopt              !v    %75.5, %75.3, %75.1   !
BB220   <- [218]
  val?-           %220.0 = CastType           d     dn %214.1   <str$->
  val?            %220.1 = Extract2_1D        wed   %218.0, %220.0, elided   <env->
  lgl$-           %220.2 = Is                       %220.1, NULL
  void                    StVar              lWd   tbl, %220.1, e206.4
  lgl$-           %220.4 = Not                d     %220.2, elided
  lgl$#-          %220.5 = CheckTrueFalse     e     %220.4
  void                    Branch                   %220.5 -> BB109 (if true) | BB79 (if false)
BB221   <- [218]
  void                    Nop                !     
  val?            %221.1 = %214.1
  dr              %221.2 = Typecheck@0x5614ff526af8[Type#2]
  goto BB75
BB109   <- [220]
  val             %109.0 = ChkMissing         e     %220.1
  lgl$#-          %109.1 = IsType                   %220.1 isA val+   <true>
  void                    Branch                   %109.1 -> BB222 (if true) | BB223 (if false)
BB79   <- [220]
  void                    Nop                !     
  goto BB80
BB222   <- [109]
  val?            %222.0 = Force!<lazy>       !vL   %204.3, e206.4   <str$->
  lgl$#-          %222.1 = IsType                   %222.0 isA val?-
  lgl$#-          %222.2 = IsEnvStub          R     , e206.4
  void                    Branch                   %222.2 -> BB228 (if true) | BB229 (if false)
BB223   <- [109]
  fs              %223.0 = FrameState         R     0x5614fe048810+1152: [], env=e0.2
  fs              %223.1 = FrameState         R     0x5614fd8492b0+77: [%220.1], env=e206.4, next=%223.0
  void                    Deopt              !v    %223.1, DeadBranchReached@0x5614ff526af8[Test#1], %109.1   !
BB80   <- [79, 112]
  val?^ | miss    %80.0 = LdVar              eRd   list, <env 0x5614f8eae378>
  lgl$#-          %80.1 = Identical                <blt list>, %80.0   <true>
  void                    Branch                   %80.1 -> BB224 (if true) | BB225 (if false)
BB228   <- [222]
  lgl$#-          %228.0 = IsType                   %220.1 isA val?-
  void                    Branch                   %228.0 -> BB230 (if true) | BB231 (if false)
BB229   <- [222]
  void                    Nop                !     
  env             e229.1 = e206.4
  dr              %229.2 = EnvStubMaterialized@0x5614ff526af8[Call#unknown]
  goto BB110
BB224   <- [80]
  void                    Nop                !     
  vec#-           %224.1 = list()
  goto BB83
BB225   <- [80]
  fs              %225.0 = FrameState         R     0x5614fe048810+1152: [], env=e0.2
  fs              %225.1 = FrameState         R     0x5614fd8492b0+203: [], env=e206.4, next=%225.0
  void                    Deopt              !v    %225.1, DeadBranchReached@0x5614ff526af8[Test#2], %80.1   !
BB230   <- [228]
  val?-           %230.0 = CastType           d     dn %220.1   <env->
  void                    Branch                   %222.1 -> BB234 (if true) | BB235 (if false)
BB231   <- [228]
  void                    Nop                !     
  val?            %231.1 = %220.1
  dr              %231.2 = Typecheck@0x5614ff526af8[Type#3]
  goto BB110
BB110   <- [229, 231, 235]
  val?^ | miss    %110.0 = Phi                      e229.1:BB229, %231.1:BB231, %235.1:BB235
  val?^ | miss    %110.1 = %110.0
  dr              %110.2 = Phi                      %229.2:BB229, %231.2:BB231, %235.2:BB235
  dr              %110.3 = %110.2
  fs              %110.4 = FrameState         R     0x5614fe048810+1152: [], env=e0.2
  fs              %110.5 = FrameState         R     0x5614fd8492b0+148: [%220.1, %222.0], env=e206.4, next=%110.4
  void                    Deopt              !v    %110.5, %110.3, %110.1   !
BB83   <- [113, 224]
  val?            %83.0 = Phi                      %224.1:BB224, %113.1:BB113   <vec->
  val?            %83.1 = %83.0
  void                    StVar              lW    group, %83.1, e0.2
  lgl$-           %83.3 = Missing            eR    generic, e0.2
  lgl$#-          %83.4 = CheckTrueFalse     e     %83.3
  void                    Branch                   %83.4 -> BB87 (if true) | BB86 (if false)
BB234   <- [230]
  val?-           %234.0 = CastType           d     dn %222.0   <str$->
  val?            %234.1 = Extract2_1D        wed   %230.0, %234.0, elided   <nil->
  lgl$-           %234.2 = Is                       %234.1, NULL
  void                    StVar              lWd   r, %234.1, e206.4
  lgl$-           %234.4 = Not                d     %234.2, elided
  lgl$#-          %234.5 = CheckTrueFalse     e     %234.4
  void                    Branch                   %234.5 -> BB113 (if true) | BB112 (if false)
BB235   <- [230]
  void                    Nop                !     
  val?            %235.1 = %222.0
  dr              %235.2 = Typecheck@0x5614ff526af8[Type#6]
  goto BB110
BB87   <- [83]
  val?^ | miss    %87.0 = LdVar              eR    .getImplicitGeneric, e0.2
  lgl$#-          %87.1 = Identical                %87.0, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %87.1 -> BB226 (if true) | BB227 (if false)
BB86   <- [83]
  (cls|spec|blt)  %86.0 = LdFun              !v    makeGeneric, e0.2
  fs              %86.1 = FrameState         R     0x5614fe048810+1183: [%86.0], env=e0.2
  void                    Deopt              !v    %86.1, DeadCall@0x5614faa9bfa0[Call#29], %86.0   !
BB113   <- [234]
  val             %113.0 = ChkMissing         e     %234.1
  val?            %113.1 = %234.1
  goto BB83
BB112   <- [234]
  void                    Nop                !     
  goto BB80
BB226   <- [87]
  prom-           %226.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p15, e0.2
  prom-           %226.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p16, e0.2
  prom-           %226.2 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p17, e0.2
  ct              %226.3 = PushContext        lCL   %226.0, %226.1, %226.2, .getImplicitGeneric(name, env, package), function(name, where, pkg="") <(rir::DispatchT|..., e0.2
  val?^           %226.4 = CastType                 up %226.2
  val?^           %226.5 = CastType                 up %226.1
  val?^           %226.6 = CastType                 up %226.0
  val?^ | miss    %226.7 = LdVar              eR    .getImplicitGenericFromCache, <env 0x5614f8eae378>
  lgl$#-          %226.8 = Identical                %226.7, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %226.8 -> BB232 (if true) | BB233 (if false)
BB227   <- [87]
  fs              %227.0 = FrameState         R     0x5614fe048810+1166: [], env=e0.2
  void                    Deopt              !v    %227.0, CallTarget@0x5614faa9bfa0[Call#31], %87.0   !
BB232   <- [226]
  env             e232.0 = MkEnv              l     name=%226.6, where=%226.5, pkg=%226.4, parent=<env 0x5614f8eae378>, context 1
  prom-           %232.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p24, e232.0
  prom-           %232.2 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p25, e232.0
  prom-           %232.3 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p26, e232.0
  ct              %232.4 = PushContext        lCL   %232.1, %232.2, %232.3, .getImplicitGenericFromCache(name, where, pkg), function(name, where, pkg="") <(rir::DispatchT|..., e232.0
  val?^           %232.5 = CastType                 up %232.3
  val?^           %232.6 = CastType                 up %232.2
  val?^           %232.7 = CastType                 up %232.1
  val?^ | miss    %232.8 = LdVar              eR    .getGenericFromCacheTable, <env 0x5614f8eae378>
  lgl$#-          %232.9 = Identical                %232.8, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %232.9 -> BB236 (if true) | BB237 (if false)
BB233   <- [226]
  fs              %233.0 = FrameState         R     0x5614fe048810+1349: [], env=e0.2
  env             e233.1 = (MkEnv)            l     name=%226.6, where=%226.5, pkg=%226.4, parent=<env 0x5614f8eae378>, context 1
  fs              %233.2 = FrameState         R     0x5614fb46b0e0+0: [], env=e233.1, next=%233.0
  void                    Deopt              !v    %233.2, CallTarget@0x5614fd855660[Call#0], %226.7   !
BB236   <- [232]
  env             e236.0 = MkEnv              l     name=%232.7, where=%232.6, pkg=%232.5, parent=<env 0x5614f8eae378>, context 1
  prom-           %236.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p30, e236.0
  prom-           %236.2 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p31, e236.0
  prom-           %236.3 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p32, e236.0
  prom-           %236.4 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p33, e236.0
  val?            %236.5 = StaticCall         !v    .getGenericFromCacheTable[0x5614fa95bca0](%236.1, %236.2, %236.3, %236.4) e236.0   <nil->
  val?            %236.6 = PopContext         C     %236.5, %232.4   <nil->
  lgl$-           %236.7 = Is                       %236.6, NULL
  lgl$-           %236.8 = AsLogical                %236.7
  lgl$#-          %236.9 = Identical                %236.8, false
  void                    StVar              lW    value, %236.6, e232.0
  val             %236.11 = ChkMissing         e     %236.6
  void                    Branch                   %236.9 -> BB108 (if true) | BB92 (if false)
BB237   <- [232]
  fs              %237.0 = FrameState         R     0x5614fe048810+1349: [], env=e0.2
  fs              %237.1 = FrameState         R     0x5614fb46b0e0+42: [], env=e232.0, next=%237.0
  env             e237.2 = (MkEnv)            l     name=%232.7, where=%232.6, pkg=%232.5, parent=<env 0x5614f8eae378>, context 1
  fs              %237.3 = FrameState         R     0x5614fecfbf40+0: [], env=e237.2, next=%237.1
  void                    Deopt              !v    %237.3, CallTarget@0x5614fb9fd550[Call#0], %232.8   !
BB108   <- [236]
  void                    Nop                !     
  lgl$-           %108.1 = %236.8
  goto BB97
BB92   <- [236]
  val?^ | miss    %92.0 = LdVar              eR    where, e232.0
  val?            %92.1 = Force!<lazy>       !v    %92.0, e232.0   <env->
  lgl$#-          %92.2 = IsType                   %92.1 isA val+   <true>
  void                    Branch                   %92.2 -> BB238 (if true) | BB239 (if false)
BB97   <- [108, 242]
  lgl$-           %97.0 = Phi                      %242.7:BB242, %108.1:BB108
  lgl$-           %97.1 = %97.0
  lgl$#-          %97.2 = CheckTrueFalse     e     %97.1
  void                    Branch                   %97.2 -> BB107 (if true) | BB100 (if false)
BB238   <- [92]
  val?^ | miss    %238.0 = LdVar              eR    .ImplicitGenericsMetaName, e232.0
  val?            %238.1 = Force!<wrapped>    !v    %238.0, e232.0   <str$->
  lgl$#-          %238.2 = IsType                   %238.1 isA val?-
  lgl$#-          %238.3 = IsType                   %92.1 isA val?-
  void                    Branch                   %238.3 -> BB240 (if true) | BB241 (if false)
BB239   <- [92]
  fs              %239.0 = FrameState         R     0x5614fe048810+1349: [], env=e0.2
  fs              %239.1 = FrameState         R     0x5614fb46b0e0+91: [%236.8, %92.1], env=e232.0, next=%239.0
  void                    Deopt              !v    %239.1, DeadBranchReached@0x5614fd855660[Test#0], %92.2   !
BB107   <- [97]
  fs              %107.0 = FrameState         R     0x5614fe048810+1349: [], env=e0.2
  (cls|spec|blt)  %107.1 = LdFun              !v    .getGenericFromCacheTable, e232.0
  fs              %107.2 = FrameState         R     0x5614fb46b0e0+197: [%107.1], env=e232.0, next=%107.0
  void                    Deopt              !v    %107.2, DeadCall@0x5614fd855660[Call#1], %107.1   !
BB100   <- [97]
  val?^ | miss    %100.0 = LdVar              eR    value, e232.0
  lgl$#-          %100.1 = IsType                   %100.0 isA val?~- | miss
  void                    Branch                   %100.1 -> BB244 (if true) | BB245 (if false)
BB240   <- [238]
  val?-           %240.0 = CastType           d     dn %92.1   <env->
  void                    Branch                   %238.2 -> BB242 (if true) | BB243 (if false)
BB241   <- [238]
  void                    Nop                !     
  val?            %241.1 = %92.1
  dr              %241.2 = Typecheck@0x5614fd855660[Type#5]
  goto BB95
BB244   <- [100]
  val?~- | miss   %244.0 = CastType           d     dn %100.0
  val?-           %244.1 = Force!<value>            %244.0,    <nil->
  val?            %244.2 = PopContext         C     %244.1, %226.3   <nil->
  lgl$-           %244.3 = Is                       %244.2, NULL
  void                    StVar              lW    generic, %244.2, e0.2
  val             %244.5 = ChkMissing         e     %244.2
  lgl$#-          %244.6 = CheckTrueFalse     e     %244.3
  void                    Branch                   %244.6 -> BB102 (if true) | BB101 (if false)
BB245   <- [100]
  fs              %245.0 = FrameState         R     0x5614fe048810+1349: [], env=e0.2
  fs              %245.1 = FrameState         R     0x5614fb46b0e0+167: [%97.1], env=e232.0, next=%245.0
  void                    Deopt              !v    %245.1, Typecheck@0x5614fd855660[Type#9], %100.0   !
BB242   <- [240]
  val?-           %242.0 = CastType           d     dn %238.1   <str$->
  val?            %242.1 = Extract2_1D        wed   %240.0, %242.0, elided   <nil->
  lgl$-           %242.2 = Is                       %242.1, NULL
  void                    StVar              lW    tbl, %242.1, e232.0
  lgl$-           %242.4 = Not                d     %242.2, elided
  lgl$-           %242.5 = AsLogical                %242.4
  lgl$-           %242.6 = LAnd                     %236.8, %242.5
  lgl$-           %242.7 = %242.6
  goto BB97
BB243   <- [240]
  void                    Nop                !     
  val?            %243.1 = %238.1
  dr              %243.2 = Typecheck@0x5614fd855660[Type#7]
  goto BB95
BB95   <- [241, 243]
  val?^ | miss    %95.0 = Phi                      %241.1:BB241, %243.1:BB243
  val?^ | miss    %95.1 = %95.0
  dr              %95.2 = Phi                      %241.2:BB241, %243.2:BB243
  dr              %95.3 = %95.2
  fs              %95.4 = FrameState         R     0x5614fe048810+1349: [], env=e0.2
  fs              %95.5 = FrameState         R     0x5614fb46b0e0+136: [%236.8, %92.1, %238.1], env=e232.0, next=%95.4
  void                    Deopt              !v    %95.5, %95.3, %95.1   !
BB102   <- [244]
  (cls|spec|blt)  %102.0 = LdFun              !v    makeGeneric, <0x5614fe544380>, e0.2
  prom-           %102.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p18, e0.2
  prom-           %102.2 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p19, e0.2
  prom-           %102.3 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p20, e0.2
  prom-           %102.4 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p21, e0.2
  val?            %102.5 = NamedCall          !v    %102.0(%102.1, fdefault=%102.2, package=%102.3, group=%102.4) e0.2   <cls>
  void                    StVar              lW    generic, %102.5, e0.2
  val?^ | miss    %102.7 = LdVar              eR    .cacheImplicitGeneric, e0.2
  lgl$#-          %102.8 = Identical                %102.7, function(name, def) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %102.8 -> BB246 (if true) | BB247 (if false)
BB101   <- [244]
  void                    Nop                !     
  goto BB42
BB246   <- [102]
  prom-           %246.0 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p22, e0.2
  prom-           %246.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p23 (!refl), e0.2
  ct              %246.2 = PushContext        lCL   %246.0, %246.1, .cacheImplicitGeneric(name, generic), function(name, def) <(rir::DispatchTable*)0x56|..., e0.2
  val?^           %246.3 = CastType                 up %246.1
  val?^           %246.4 = CastType                 up %246.0
  val?^ | miss    %246.5 = LdVar              eR    .cacheGenericTable, <env 0x5614f8eae378>
  lgl$#-          %246.6 = Identical                %246.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %246.6 -> BB248 (if true) | BB249 (if false)
BB247   <- [102]
  fs              %247.0 = FrameState         R     0x5614fe048810+1470: [], env=e0.2
  void                    Deopt              !v    %247.0, CallTarget@0x5614faa9bfa0[Call#33], %102.7   !
BB248   <- [246]
  env             e248.0 = MkEnv              l     name=%246.4, def=%246.3, parent=<env 0x5614f8eae378>, context 1
  prom-           %248.1 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p27, e248.0
  prom-           %248.2 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p28, e248.0
  prom-           %248.3 = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p29, e248.0
  val?            %248.4 = StaticCall         !v    .cacheGenericTable[0x5614fef2eb50](%248.1, %248.2, %248.3) e248.0   <cls>
  val?            %248.5 = PopContext         C     %248.4, %246.2
  goto BB42
BB249   <- [246]
  fs              %249.0 = FrameState         R     0x5614fe048810+1507: [], env=e0.2
  env             e249.1 = (MkEnv)            l     name=%246.4, def=%246.3, parent=<env 0x5614f8eae378>, context 1
  fs              %249.2 = FrameState         R     0x5614fdf3b250+0: [], env=e249.1, next=%249.0
  void                    Deopt              !v    %249.2, CallTarget@0x5614feeede18[Call#0], %246.5   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getGeneric, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p1, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p2, e0.0
  val?            %0.4  = NamedCall          !     %0.1(%0.2, where=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     identical, <0x5614f8b89820>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "base") e0.0   <lgl$->
  lgl$#-          %0.4  = CheckTrueFalse     we    %0.3
  void                    Branch                   %0.4 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    .methodsNamespace, e0.0
  void                    Visible            v     
  val?            %2.2  = Force<value>       !     %2.0, e0.0   <env->
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  (cls|spec|blt)  %4.0  = LdFun              !     environment, e0.0
  prom-           %4.1  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p14, e0.0
  val?            %4.2  = Call               !     %4.0(%4.1) e0.0   <val?_>
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.3:BB4, %2.3:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdefault, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .implicitTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .implicitTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p50, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p51, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p54, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p55, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    target, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     <-, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p57, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p60, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p58, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p59, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .newSignature, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p61, e0.0
  prom-           %0.3  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p63, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p62, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 62:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .anyClassName, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 63:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     formalArgs, e0.0
  prom-           %0.2  = MkArg                    unboundValue, implicitGeneric[0x5614fd1a3440]_p64, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ implicitGeneric[0x5614fd1a3440]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
