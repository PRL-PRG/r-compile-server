
┌──────────────────────────────────────────────────────────────────────────────┐
│ .setupMethodsTables[0x5614ff2964d0]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1       │
│ Properties:                                                                  │
├────── Final PIR Version
.setupMethodsTables[0x5614ff2964d0]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    environment, <env 0x5614f8eae378>
  lgl$#-          %0.3  = Identical                %0.2, function(fun=NULL) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %0.3 -> BB44 (if true) | BB45 (if false)
BB44   <- [0]
  env             e44.0 = MkEnv              l     generic=%0.1, initialize=%0.0, parent=<env 0x5614f8eae378>, context 1
  val?            %44.1 = Force!<lazy>       !vr   %0.1,    <cls>
  prom-           %44.2 = MkArg                    %44.1, .setupMethodsTables[0x5614ff2964d0]_p0 (!refl), 
  val?            %44.3 = StaticCall         !v    environment[0x5614fd8f9b30](%44.2) e44.0   <env->
  void                    StVar              lW    env, %44.3, e44.0
  val?^ | miss    %44.5 = LdVar              eR    initialize, e44.0
  val?            %44.6 = Force!<value>      !v    %44.5, e44.0   <lgl$->
  lgl$-           %44.7 = AsLogical          e     %44.6
  lgl$#-          %44.8 = Identical                %44.7, true
  void                    Branch                   %44.8 -> BB4 (if true) | BB3 (if false)
BB45   <- [0]
  env             e45.0 = (MkEnv)            l     generic=%0.1, initialize=%0.0, parent=<env 0x5614f8eae378>, context 1
  fs              %45.1 = FrameState         R     0x5614fea8b960+0: [], env=e45.0
  void                    Deopt              !v    %45.1, CallTarget@0x5614febd0d78[Call#1], %0.2
BB4   <- [44]
  lgl$#-          %4.0  = CheckTrueFalse     e     %44.7
  void                    Branch                   %4.0 -> BB40 (if true) | BB5 (if false)
BB3   <- [44]
  (cls|spec|blt)  %3.0  = LdFun              !v    exists, e44.0
  fs              %3.1  = FrameState         R     0x5614fea8b960+72: [%44.7, %3.0], env=e44.0
  void                    Deopt              !v    %3.1, DeadCall@0x5614febd0d78[Call#2], %3.0   !
BB40   <- [4]
  void                    StVar              lW    nsig, 1, e44.0
  (cls|spec|blt)  %40.1 = LdFun              !v    @, <0x5614f88a6bd8>, e44.0
  prom-           %40.2 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p16, e44.0
  prom-           %40.3 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p17, e44.0
  val?            %40.4 = Call               !v    %40.1(%40.2, %40.3) e44.0   <vec->
  val?+           %40.5 = ToForSeq           e     %40.4
  int$-           %40.6 = Length                   %40.5
  int$-           %40.7 = Inc                      0L
  lgl$-           %40.8 = Lt                 d     %40.6, %40.7, elided   <true>
  lgl$#-          %40.9 = Identical                %40.8, true
  void                    Branch                   %40.9 -> BB46 (if true) | BB47 (if false)
BB5   <- [4]
  void                    Nop                !     
  goto BB6
BB46   <- [40]
  val?^ | miss    %46.0 = LdVar              eR    assign, e44.0
  lgl$#-          %46.1 = Identical                %46.0, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %46.1 -> BB48 (if true) | BB49 (if false)
BB47   <- [40]
  void                    Nop                !     
  lgl$#-          %47.1 = %40.9
  dr              %47.2 = DeadBranchReached@0x5614febd0d78[Test#0]
  goto BB41
BB6   <- [5, 48]
  val?^ | miss    %6.0  = LdVar              eR    lapply, e44.0
  lgl$#-          %6.1  = Identical                %6.0, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %6.1 -> BB50 (if true) | BB51 (if false)
BB48   <- [46]
  prom-           %48.0 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p18, e44.0
  prom-           %48.1 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p19, e44.0
  val?            %48.2 = StaticCall         !v    assign[0x5614fb1f7eb0](".SigLength", %48.0, missingArg, %48.1) { 0 1 3n } e44.0
  goto BB6
BB49   <- [46]
  void                    Nop                !     
  val?^ | miss    %49.1 = %46.0
  dr              %49.2 = CallTarget@0x5614febd0d78[Call#20]
  goto BB41
BB41   <- [47, 49]
  val?^ | miss    %41.0 = Phi                      %47.1:BB47, %49.1:BB49
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %47.2:BB47, %49.2:BB49
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x5614fea8b960+192: [%40.4], env=e44.0
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB50   <- [6]
  prom-           %50.0 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p1, e44.0
  prom-           %50.1 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p4, e44.0
  ct              %50.2 = PushContext        lCL   %50.0, %50.1, lapply(@(generic, signature), as.name), function(X, FUN, ...) <(rir::DispatchTable*)0x|..., e44.0
  val?^           %50.3 = CastType                 up %50.1
  val?^           %50.4 = CastType                 up %50.0
  env             e50.5 = MkEnv              l     X=%50.4, FUN=%50.3, ...(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %50.6 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p20, e50.5
  val?            %50.7 = StaticCall         !v    match.fun[0x5614f89ca4f0](%50.6) e50.5   <(cls|blt)->
  void                    StVar              lW    FUN, %50.7, e50.5
  val?^ | miss    %50.9 = LdVar              eR    is.vector, e50.5
  lgl$#-          %50.10 = Identical                %50.9, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %50.10 -> BB52 (if true) | BB53 (if false)
BB51   <- [6]
  fs              %51.0 = FrameState         R     0x5614fea8b960+915: [], env=e44.0
  void                    Deopt              !v    %51.0, CallTarget@0x5614febd0d78[Call#21], %6.0   !
BB52   <- [50]
  val?^ | miss    %52.0 = LdVar              eR    X, e50.5
  val?            %52.1 = Force!<lazy>       !v    %52.0, e50.5   <(str|vec)>
  lgl$#-          %52.2 = CallSafeBuiltin    wed   is.vector(%52.1, "any")    <lgl$->
  lgl$#-          %52.3 = Not                d     %52.2, elided
  void                    Branch                   %52.2 -> BB39 (if true) | BB13 (if false)
BB53   <- [50]
  fs              %53.0 = FrameState         R     0x5614fea8b960+952: [], env=e44.0
  fs              %53.1 = FrameState         R     0x5614f9304c40+46: [], env=e50.5, next=%53.0
  void                    Deopt              !v    %53.1, CallTarget@0x5614fa187a10[Call#1], %50.9   !
BB39   <- [52]
  val?^ | miss    %39.0 = LdVar              eR    is.object, e50.5
  lgl$#-          %39.1 = Identical                <blt is.object>, %39.0   <true>
  void                    Branch                   %39.1 -> BB54 (if true) | BB55 (if false)
BB13   <- [52]
  void                    Nop                !     
  lgl$#-          %13.1 = %52.3
  goto BB14
BB54   <- [39]
  val?^ | miss    %54.0 = LdVar              eR    X, e50.5
  val?            %54.1 = Force!<wrapped>    !v    %54.0, e50.5   <(str|vec)$->
  lgl$#-          %54.2 = CallSafeBuiltin    wed   is.object(%54.1)    <lgl$->
  lgl$-           %54.3 = LOr                      %52.3, %54.2
  lgl$-           %54.4 = %54.3
  goto BB14
BB55   <- [39]
  fs              %55.0 = FrameState         R     0x5614fea8b960+952: [], env=e44.0
  fs              %55.1 = FrameState         R     0x5614f9304c40+78: [], env=e50.5, next=%55.0
  prom-           %55.2 = MkArg                    %52.1, .setupMethodsTables[0x5614ff2964d0]_p22 (!refl), e50.5
  val?~           %55.3 = CastType                 up %55.2
  env             e55.4 = (MkEnv)            l     mode(miss)="any", x=%55.3, parent=R_BaseNamespace, context 0
  fs              %55.5 = FrameState         R     0x5614fa748820+41: [%52.2], env=e55.4, next=%55.1
  void                    Deopt              !v    %55.5, DeadBranchReached@0x5614fa187a10[Test#0], %39.1   !
BB14   <- [13, 54]
  lgl$-           %14.0 = Phi                      %54.4:BB54, %13.1:BB13
  lgl$-           %14.1 = %14.0
  lgl$#-          %14.2 = CheckTrueFalse     e     %14.1
  void                    Branch                   %14.2 -> BB38 (if true) | BB17 (if false)
BB38   <- [14]
  val?^ | miss    %38.0 = LdVar              eR    as.list, e50.5
  lgl$#-          %38.1 = Identical                %38.0, function(x, ...) <(rir::DispatchTable*)0x5614f|...
  void                    Branch                   %38.1 -> BB56 (if true) | BB57 (if false)
BB17   <- [14]
  void                    Nop                !     
  goto BB18
BB56   <- [38]
  val?^ | miss    %56.0 = LdVar              eR    X, e50.5
  val?            %56.1 = Force!<wrapped>    !v    %56.0, e50.5   <vec>
  val?            %56.2 = StaticCall         !v    as.list[0x5614fd897440](%56.1) { 0 } e50.5   <vec>
  void                    StVar              lW    X, %56.2, e50.5
  goto BB18
BB57   <- [38]
  fs              %57.0 = FrameState         R     0x5614fea8b960+952: [], env=e44.0
  fs              %57.1 = FrameState         R     0x5614f9304c40+189: [%14.1], env=e50.5, next=%57.0
  void                    Deopt              !v    %57.1, CallTarget@0x5614fa187a10[Call#3], %38.0   !
BB18   <- [17, 56]
  val?^ | miss    %18.0 = LdVar              eR    X, e50.5
  val?            %18.1 = Force!<wrapped>    !v    %18.0, e50.5   <(str|vec)>
  (nil|str)-      %18.2 = Names                    %18.1
  int$-           %18.3 = Length                   %18.1
  vec-            %18.4 = CallSafeBuiltin    wed   vector("list", %18.3) 
  val+            %18.5 = SetNames           e     %18.4, %18.2
  int$#-          %18.6 = 0L
  val+            %18.7 = %18.5
  goto BB19
BB19   <- [18, 20]
  int$-           %19.0 = Phi                      %18.6:BB18, %20.7:BB20
  int$-           %19.1 = %19.0
  val?            %19.2 = Phi                      %18.7:BB18, %20.8:BB20
  val?            %19.3 = %19.2
  int$-           %19.4 = Inc                      %19.1
  lgl$-           %19.5 = Lt                 d     %18.3, %19.4, elided
  lgl$#-          %19.6 = Identical                %19.5, true
  void                    Branch                   %19.6 -> BB21 (if true) | BB20 (if false)
BB21   <- [19]
  val?            %21.0 = PopContext         C     %19.3, %50.2   <vec$->
  void                    StVar              lW    argSyms, %21.0, e44.0
  val?^ | miss    %21.2 = LdVar              eR    assign, e44.0
  lgl$#-          %21.3 = Identical                %21.2, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %21.3 -> BB58 (if true) | BB59 (if false)
BB20   <- [19]
  void                    StVar              lW    i, %19.4, e50.5
  (cls|spec|blt)  %20.1 = LdFun              !v    FUN, e50.5
  prom-           %20.2 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p23, e50.5
  (miss|dots)     %20.3 = LdDots             R     , e50.5
  *dots-          %20.4 = ExpandDots               %20.3
  val?            %20.5 = NamedCall          !v    %20.1(%20.2, .xpandDotsTrigger=%20.4) e50.5   <val?+>
  val?            %20.6 = SetVecElt          e     %20.5, %19.3, %19.4
  int$-           %20.7 = %19.4
  val?            %20.8 = %20.6
  goto BB19
BB58   <- [21]
  prom-           %58.0 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p5 (!refl), e44.0
  prom-           %58.1 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p6, e44.0
  val?            %58.2 = StaticCall         !v    assign[0x5614fb1f7eb0](".SigArgs", %58.0, missingArg, %58.1) { 0 1 3n } e44.0
  val?^ | miss    %58.3 = LdVar              eR    initialize, e44.0
  val?            %58.4 = Force!<value>      !v    %58.3, e44.0   <lgl$->
  lgl$#-          %58.5 = CheckTrueFalse     we    %58.4
  void                    Branch                   %58.5 -> BB25 (if true) | BB24 (if false)
BB59   <- [21]
  fs              %59.0 = FrameState         R     0x5614fea8b960+966: [], env=e44.0
  void                    Deopt              !v    %59.0, CallTarget@0x5614febd0d78[Call#23], %21.2   !
BB25   <- [58]
  (cls|spec|blt)  %25.0 = LdFun              !v    @, <0x5614f88a6bd8>, e44.0
  prom-           %25.1 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p7, e44.0
  prom-           %25.2 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p8, e44.0
  val?            %25.3 = Call               !v    %25.0(%25.1, %25.2) e44.0   <cls>
  void                    StVar              lW    mlist, %25.3, e44.0
  val?^ | miss    %25.5 = LdVar              eR    .mlistAddToTable, e44.0
  lgl$#-          %25.6 = Identical                %25.5, function(generic, mlist, table=new.env(TRUE, f|...
  void                    Branch                   %25.6 -> BB60 (if true) | BB61 (if false)
BB24   <- [58]
  (cls|spec|blt)  %24.0 = LdFun              !v    getMethodsForDispatch, e44.0
  fs              %24.1 = FrameState         R     0x5614fea8b960+1046: [%24.0], env=e44.0
  void                    Deopt              !v    %24.1, DeadCall@0x5614febd0d78[Call#24], %24.0   !
BB60   <- [25]
  prom-           %60.0 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p9, e44.0
  prom-           %60.1 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p10 (!refl), e44.0
  val?            %60.2 = StaticCall         !v    .mlistAddToTable[0x5614f90d2db0](%60.0, %60.1) e44.0   <env->
  void                    StVar              lW    mtable, %60.2, e44.0
  val?^ | miss    %60.4 = LdVar              eR    assign, e44.0
  lgl$#-          %60.5 = Identical                %60.4, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %60.5 -> BB62 (if true) | BB63 (if false)
BB61   <- [25]
  fs              %61.0 = FrameState         R     0x5614fea8b960+1143: [], env=e44.0
  void                    Deopt              !v    %61.0, CallTarget@0x5614febd0d78[Call#26], %25.5   !
BB62   <- [60]
  prom-           %62.0 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p11 (!refl), e44.0
  prom-           %62.1 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p12, e44.0
  val?            %62.2 = StaticCall         !v    assign[0x5614fb1f7eb0](".MTable", %62.0, missingArg, %62.1) { 0 1 3n } e44.0
  val?^ | miss    %62.3 = LdVar              eR    .resetInheritedMethods, e44.0
  lgl$#-          %62.4 = Identical                %62.3, function(fenv, mtable) <(rir::DispatchTable*)0|...
  void                    Branch                   %62.4 -> BB64 (if true) | BB65 (if false)
BB63   <- [60]
  fs              %63.0 = FrameState         R     0x5614fea8b960+1194: [], env=e44.0
  void                    Deopt              !v    %63.0, CallTarget@0x5614febd0d78[Call#27], %60.4   !
BB64   <- [62]
  prom-           %64.0 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p13, e44.0
  prom-           %64.1 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p14, e44.0
  val?            %64.2 = StaticCall         !v    .resetInheritedMethods[0x5614faa6b130](%64.0, %64.1) e44.0
  val?^ | miss    %64.3 = LdVar              eR    is, e44.0
  lgl$#-          %64.4 = Identical                %64.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %64.4 -> BB66 (if true) | BB67 (if false)
BB65   <- [62]
  fs              %65.0 = FrameState         R     0x5614fea8b960+1248: [%62.2], env=e44.0
  void                    Deopt              !v    %65.0, CallTarget@0x5614febd0d78[Call#28], %62.3   !
BB66   <- [64]
  prom-           %66.0 = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p15, e44.0
  val?            %66.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%66.0, "groupGenericFunction") e44.0   <lgl$->
  lgl$#-          %66.2 = IsType                   %66.1 isA lgl$-
  void                    Branch                   %66.2 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  fs              %67.0 = FrameState         R     0x5614fea8b960+1286: [%64.2], env=e44.0
  void                    Deopt              !v    %67.0, CallTarget@0x5614febd0d78[Call#29], %64.3   !
BB68   <- [66]
  lgl$-           %68.0 = CastType           d     dn %66.1
  lgl$#-          %68.1 = CheckTrueFalse     e     %68.0
  void                    Branch                   %68.1 -> BB37 (if true) | BB36 (if false)
BB69   <- [66]
  fs              %69.0 = FrameState         R     0x5614fea8b960+1324: [%66.1], env=e44.0
  void                    Deopt              !v    %69.0, Typecheck@0x5614febd0d78[Type#61], %66.1   !
BB37   <- [68]
  (cls|spec|blt)  %37.0 = LdFun              !v    @, e44.0
  fs              %37.1 = FrameState         R     0x5614fea8b960+1345: [%37.0], env=e44.0
  void                    Deopt              !v    %37.1, DeadCall@0x5614febd0d78[Call#30], %37.0   !
BB36   <- [68]
  void                    Visible            v     
  void                    Return             l     nil
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5614f88a6bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    signature, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    as.name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    argSyms, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mlist, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mtable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mtable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generic, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nsig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|vec)>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <(str|vec)>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .setupMethodsTables[0x5614ff2964d0]_p24, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3

│ .setupMethodsTables[0x5614ff2964d0]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
