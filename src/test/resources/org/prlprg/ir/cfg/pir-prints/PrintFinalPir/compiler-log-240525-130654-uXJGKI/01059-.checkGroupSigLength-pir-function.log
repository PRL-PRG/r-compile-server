
┌──────────────────────────────────────────────────────────────────────────────┐
│ .checkGroupSigLength[0x5614fa820530]                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
.checkGroupSigLength[0x5614fa820530]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     gnames=%0.1, generics=%0.0, parent=<env 0x5614f8eae378>, context 1
  val+            %0.3  = Force!<lazy>       !vr   %0.1,    <vec$->
  void                    StVar              lW    funs, %0.3, e0.2
  void                    StVar              lW    recall, false, e0.2
  val?^ | miss    %0.6  = LdVar              eR    seq_along, <env 0x5614f8eae378>
  lgl$#-          %0.7  = Identical                <blt seq_along>, %0.6   <true>
  void                    Branch                   %0.7 -> BB108 (if true) | BB109 (if false)
BB108   <- [0]
  val?            %108.0 = CallBuiltin        !v    seq_along(%0.3) e0.2   <int$->
  lgl$#-          %108.1 = IsType                   %108.0 isA int$-
  void                    Branch                   %108.1 -> BB110 (if true) | BB111 (if false)
BB109   <- [0]
  fs              %109.0 = FrameState         R     0x5614fd2f56b0+38: [], env=e0.2
  void                    Deopt              !v    %109.0, DeadBranchReached@0x5614fb446af8[Test#0], %0.7
BB110   <- [108]
  int$-           %110.0 = CastType           d     dn %108.0
  int$-           %110.1 = Inc                      0L
  lgl$-           %110.2 = Lt                 d     1L, %110.1, elided   <false>
  lgl$#-          %110.3 = Identical                %110.2, true
  void                    Branch                   %110.3 -> BB113 (if true) | BB112 (if false)
BB111   <- [108]
  void                    Nop                !     
  val?            %111.1 = %108.0
  dr              %111.2 = Typecheck@0x5614fb446af8[Type#6]
  goto BB3
BB113   <- [110]
  void                    Nop                !     
  lgl$#-          %113.1 = %110.3
  dr              %113.2 = DeadBranchReached@0x5614fb446af8[Test#1]
  goto BB3
BB112   <- [110]
  int$-           %112.0 = Extract2_1D        wed   %110.0, %110.1, elided
  void                    StVar              lW    i, %112.0, e0.2
  val?^ | miss    %112.2 = LdVar              eR    gnames, e0.2
  val?            %112.3 = Force!<wrapped>    !v    %112.2, e0.2   <vec$->
  lgl$#-          %112.4 = IsType                   %112.3 isA val+   <true>
  lgl$#-          %112.5 = IsType                   %112.3 isA val?-
  void                    Branch                   %112.4 -> BB114 (if true) | BB115 (if false)
BB3   <- [111, 113]
  val?^ | miss    %3.0  = Phi                      %111.1:BB111, %113.1:BB113
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %111.2:BB111, %113.2:BB113
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5614fd2f56b0+129: [%108.0], env=e0.2
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB114   <- [112]
  val?^ | miss    %114.0 = LdVar              eR    i, e0.2
  lgl$#-          %114.1 = IsType                   %114.0 isA int$-
  void                    Branch                   %114.1 -> BB116 (if true) | BB117 (if false)
BB115   <- [112]
  void                    Nop                !     
  lgl$#-          %115.1 = %112.4
  dr              %115.2 = DeadBranchReached@0x5614fb446af8[Test#2]
  goto BB5
BB116   <- [114]
  int$-           %116.0 = CastType           d     dn %114.0
  void                    Branch                   %112.5 -> BB118 (if true) | BB119 (if false)
BB117   <- [114]
  void                    Nop                !     
  val?^ | miss    %117.1 = %114.0
  dr              %117.2 = Typecheck@0x5614fb446af8[Type#9]
  goto BB5
BB5   <- [115, 117, 119]
  val?^ | miss    %5.0  = Phi                      %115.1:BB115, %117.1:BB117, %119.1:BB119
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %115.2:BB115, %117.2:BB117, %119.2:BB119
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x5614fd2f56b0+183: [%110.0, 1L, %110.1, %112.3], env=e0.2
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB118   <- [116]
  val?-           %118.0 = CastType           d     dn %112.3   <vec$->
  val?            %118.1 = Extract2_1D        wed   %118.0, %116.0, elided   <str$+>
  void                    StVar              lW    what, %118.1, e0.2
  val?^ | miss    %118.3 = LdVar              eR    generics, e0.2
  val?            %118.4 = Force!<lazy>       !v    %118.3, e0.2   <vec$->
  lgl$#-          %118.5 = IsType                   %118.4 isA val+   <true>
  lgl$#-          %118.6 = IsType                   %118.4 isA val?-
  void                    Branch                   %118.5 -> BB120 (if true) | BB121 (if false)
BB119   <- [116]
  void                    Nop                !     
  val?            %119.1 = %112.3
  dr              %119.2 = Typecheck@0x5614fb446af8[Type#7]
  goto BB5
BB120   <- [118]
  val?^ | miss    %120.0 = LdVar              eR    i, e0.2
  lgl$#-          %120.1 = IsType                   %120.0 isA int$-
  void                    Branch                   %120.1 -> BB122 (if true) | BB123 (if false)
BB121   <- [118]
  void                    Nop                !     
  lgl$#-          %121.1 = %118.5
  dr              %121.2 = DeadBranchReached@0x5614fb446af8[Test#3]
  goto BB7
BB122   <- [120]
  int$-           %122.0 = CastType           d     dn %120.0
  void                    Branch                   %118.6 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?^ | miss    %123.1 = %120.0
  dr              %123.2 = Typecheck@0x5614fb446af8[Type#13]
  goto BB7
BB7   <- [121, 123, 125]
  val?^ | miss    %7.0  = Phi                      %121.1:BB121, %123.1:BB123, %125.1:BB125
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %121.2:BB121, %123.2:BB123, %125.2:BB125
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x5614fd2f56b0+258: [%110.0, 1L, %110.1, %118.4], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB124   <- [122]
  val?-           %124.0 = CastType           d     dn %118.4   <vec$->
  val?            %124.1 = Extract2_1D        wed   %124.0, %122.0, elided   <cls>
  void                    StVar              lW    fdef, %124.1, e0.2
  val?^ | miss    %124.3 = LdVar              eR    is, e0.2
  lgl$#-          %124.4 = Identical                %124.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %124.4 -> BB126 (if true) | BB127 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?            %125.1 = %118.4
  dr              %125.2 = Typecheck@0x5614fb446af8[Type#11]
  goto BB7
BB126   <- [124]
  prom-           %126.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p0 (!refl), e0.2
  val?            %126.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%126.0, "groupGenericFunction") e0.2   <lgl$->
  lgl$#-          %126.2 = IsType                   %126.1 isA lgl$-
  void                    Branch                   %126.2 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  fs              %127.0 = FrameState         R     0x5614fd2f56b0+324: [%110.0, 1L, %110.1], env=e0.2
  void                    Deopt              !v    %127.0, CallTarget@0x5614fb446af8[Call#2], %124.3   !
BB128   <- [126]
  lgl$-           %128.0 = CastType           d     dn %126.1
  lgl$-           %128.1 = Not                d     %128.0, elided
  lgl$#-          %128.2 = CheckTrueFalse     e     %128.1
  void                    Branch                   %128.2 -> BB106 (if true) | BB13 (if false)
BB129   <- [126]
  void                    Nop                !     
  val?            %129.1 = %126.1
  dr              %129.2 = Typecheck@0x5614fb446af8[Type#16]
  goto BB11
BB106   <- [128]
  (cls|spec|blt)  %106.0 = LdFun              !v    warning, e0.2
  fs              %106.1 = FrameState         R     0x5614fd2f56b0+383: [%110.0, 1L, %110.1, %106.0], env=e0.2
  void                    Deopt              !v    %106.1, DeadCall@0x5614fb446af8[Call#3], %106.0   !
BB13   <- [128]
  val?^ | miss    %13.0 = LdVar              eR    length, e0.2
  lgl$#-          %13.1 = Identical                <blt length>, %13.0   <true>
  void                    Branch                   %13.1 -> BB130 (if true) | BB131 (if false)
BB11   <- [129, 131]
  val?^ | miss    %11.0 = Phi                      %129.1:BB129, %131.1:BB131
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %129.2:BB129, %131.2:BB131
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x5614fd2f56b0+361: [%110.0, 1L, %110.1, %126.1], env=e0.2
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB130   <- [13]
  (cls|spec|blt)  %130.0 = LdFun              !v    @, <0x5614f88a6bd8>, e0.2
  prom-           %130.1 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p1, e0.2
  prom-           %130.2 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p2, e0.2
  val?            %130.3 = Call               !v    %130.0(%130.1, %130.2) e0.2   <vec->
  lgl$#-          %130.4 = IsType                   %130.3 isA val?-
  void                    Branch                   %130.4 -> BB132 (if true) | BB133 (if false)
BB131   <- [13]
  void                    Nop                !     
  lgl$#-          %131.1 = %13.1
  dr              %131.2 = DeadBranchReached@0x5614fb446af8[Test#4]
  goto BB11
BB132   <- [130]
  val?-           %132.0 = CastType           d     dn %130.3   <vec->
  (int|real)$-    %132.1 = CallSafeBuiltin    wed   length(%132.0)    <int$->
  lgl$#-          %132.2 = IsType                   %132.1 isA int$-
  void                    Branch                   %132.2 -> BB134 (if true) | BB135 (if false)
BB133   <- [130]
  fs              %133.0 = FrameState         R     0x5614fd2f56b0+531: [%110.0, 1L, %110.1, <blt length>, %130.3], env=e0.2
  void                    Deopt              !v    %133.0, Typecheck@0x5614fb446af8[Type#24], %130.3   !
BB134   <- [132]
  int$-           %134.0 = CastType           d     dn %132.1
  lgl$#-          %134.1 = CheckTrueFalse     e     %134.0
  void                    Branch                   %134.1 -> BB99 (if true) | BB18 (if false)
BB135   <- [132]
  void                    Nop                !     
  (int|real)$-    %135.1 = %132.1
  dr              %135.2 = Typecheck@0x5614fb446af8[Type#25]
  goto BB16
BB99   <- [134]
  (cls|spec|blt)  %99.0 = LdFun              !v    @, <0x5614f88a6bd8>, e0.2
  prom-           %99.1 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p26, e0.2
  prom-           %99.2 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p27, e0.2
  val?            %99.3 = Call               !v    %99.0(%99.1, %99.2) e0.2   <vec$->
  val?^ | miss    %99.4 = LdVar              eR    gnames, e0.2
  val?            %99.5 = Force!<wrapped>    !v    %99.4, e0.2   <vec$->
  lgl$#-          %99.6 = IsType                   %99.5 isA val?-
  lgl$#-          %99.7 = IsType                   %99.3 isA val?-
  val?^ | miss    %99.8 = LdVar              eR    i, e0.2
  lgl$#-          %99.9 = IsType                   %99.8 isA int$-
  void                    Branch                   %99.9 -> BB140 (if true) | BB141 (if false)
BB18   <- [134]
  val?^ | miss    %18.0 = LdVar              eR    c, e0.2
  lgl$#-          %18.1 = Identical                <blt c>, %18.0   <true>
  void                    Branch                   %18.1 -> BB136 (if true) | BB137 (if false)
BB16   <- [135, 137, 139, 143]
  val?^ | miss    %16.0 = Phi                      %135.1:BB135, %137.1:BB137, %139.1:BB139, %143.1:BB143
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %135.2:BB135, %137.2:BB137, %139.2:BB139, %143.2:BB143
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x5614fd2f56b0+553: [%110.0, 1L, %110.1, %132.1], env=e0.2
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB140   <- [99]
  int$-           %140.0 = CastType           d     dn %99.8
  void                    Branch                   %99.7 -> BB146 (if true) | BB147 (if false)
BB141   <- [99]
  void                    Nop                !     
  val?^ | miss    %141.1 = %99.8
  dr              %141.2 = Typecheck@0x5614fb446af8[Type#30]
  goto BB100
BB136   <- [18]
  val?^ | miss    %136.0 = LdVar              eR    funs, e0.2
  lgl$#-          %136.1 = IsType                   %136.0 isA val?~- | miss
  void                    Branch                   %136.1 -> BB138 (if true) | BB139 (if false)
BB137   <- [18]
  void                    Nop                !     
  lgl$#-          %137.1 = %18.1
  dr              %137.2 = DeadBranchReached@0x5614fb446af8[Test#5]
  goto BB16
BB146   <- [140]
  val?-           %146.0 = CastType           d     dn %99.3   <vec$->
  void                    Branch                   %99.6 -> BB148 (if true) | BB149 (if false)
BB147   <- [140]
  void                    Nop                !     
  val?            %147.1 = %99.3
  dr              %147.2 = Typecheck@0x5614fb446af8[Type#28]
  goto BB100
BB100   <- [141, 147, 149]
  val?^ | miss    %100.0 = Phi                      %141.1:BB141, %147.1:BB147, %149.1:BB149
  val?^ | miss    %100.1 = %100.0
  dr              %100.2 = Phi                      %141.2:BB141, %147.2:BB147, %149.2:BB149
  dr              %100.3 = %100.2
  fs              %100.4 = FrameState         R     0x5614fd2f56b0+620: [%110.0, 1L, %110.1, %99.3, %99.5], env=e0.2
  void                    Deopt              !v    %100.4, %100.3, %100.1   !
BB138   <- [136]
  val?~- | miss   %138.0 = CastType           d     dn %136.0
  val?-           %138.1 = Force!<value>            %138.0,    <vec$->
  val?^ | miss    %138.2 = LdVar              eR    getGroupMembers, e0.2
  lgl$#-          %138.3 = Identical                %138.2, function(group, recursive=FALSE, character=TRU|...
  void                    Branch                   %138.3 -> BB142 (if true) | BB143 (if false)
BB139   <- [136]
  void                    Nop                !     
  val?^ | miss    %139.1 = %136.0
  dr              %139.2 = Typecheck@0x5614fb446af8[Type#41]
  goto BB16
BB148   <- [146]
  val?-           %148.0 = CastType           d     dn %99.5   <vec$->
  val?-           %148.1 = Subassign2_1D      wed   %146.0, %148.0, %140.0, elided
  void                    StVar              lW    gnames, %148.1, e0.2
  val?^ | miss    %148.3 = LdVar              eR    lapply, e0.2
  lgl$#-          %148.4 = Identical                %148.3, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %148.4 -> BB154 (if true) | BB155 (if false)
BB149   <- [146]
  void                    Nop                !     
  val?            %149.1 = %99.5
  dr              %149.2 = Typecheck@0x5614fb446af8[Type#29]
  goto BB100
BB142   <- [138]
  prom-           %142.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p3, e0.2
  val?            %142.1 = StaticCall         !v    getGroupMembers[0x5614fac2ccf0](%142.0, true, false) e0.2   <vec->
  lgl$#-          %142.2 = IsType                   %142.1 isA val?-
  void                    Branch                   %142.2 -> BB144 (if true) | BB145 (if false)
BB143   <- [138]
  void                    Nop                !     
  val?^ | miss    %143.1 = %138.2
  dr              %143.2 = CallTarget@0x5614fb446af8[Call#13]
  goto BB16
BB154   <- [148]
  prom-           %154.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p28, e0.2
  prom-           %154.1 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p31, e0.2
  val?            %154.2 = StaticCall         !v    lapply[0x5614fedd8210](%154.0, %154.1) { 0 1 } e0.2   <vec$->
  val?^ | miss    %154.3 = LdVar              eR    generics, e0.2
  val?            %154.4 = Force!<wrapped>    !v    %154.3, e0.2   <vec$->
  lgl$#-          %154.5 = IsType                   %154.4 isA val?-
  lgl$#-          %154.6 = IsType                   %154.2 isA val?-
  val?^ | miss    %154.7 = LdVar              eR    i, e0.2
  lgl$#-          %154.8 = IsType                   %154.7 isA int$-
  void                    Branch                   %154.8 -> BB164 (if true) | BB165 (if false)
BB155   <- [148]
  fs              %155.0 = FrameState         R     0x5614fd2f56b0+649: [%110.0, 1L, %110.1], env=e0.2
  void                    Deopt              !v    %155.0, CallTarget@0x5614fb446af8[Call#9], %148.3   !
BB144   <- [142]
  val?-           %144.0 = CastType           d     dn %142.1   <vec->
  val+            %144.1 = CallSafeBuiltin    wed   c(%138.1, %144.0)    <vec->
  void                    StVar              lW    funs, %144.1, e0.2
  goto BB21
BB145   <- [142]
  fs              %145.0 = FrameState         R     0x5614fd2f56b0+875: [%110.0, 1L, %110.1, <blt c>, %138.1, %142.1], env=e0.2
  void                    Deopt              !v    %145.0, Typecheck@0x5614fb446af8[Type#43], %142.1   !
BB164   <- [154]
  int$-           %164.0 = CastType           d     dn %154.7
  void                    Branch                   %154.6 -> BB166 (if true) | BB167 (if false)
BB165   <- [154]
  void                    Nop                !     
  val?^ | miss    %165.1 = %154.7
  dr              %165.2 = Typecheck@0x5614fb446af8[Type#37]
  goto BB104
BB21   <- [144, 170]
  int$-           %21.0 = Inc                      %110.1
  lgl$-           %21.1 = Lt                 d     1L, %21.0, elided
  lgl$#-          %21.2 = Identical                %21.1, true
  void                    Branch                   %21.2 -> BB31 (if true) | BB24 (if false)
BB166   <- [164]
  val?-           %166.0 = CastType           d     dn %154.2   <vec$->
  void                    Branch                   %154.5 -> BB170 (if true) | BB171 (if false)
BB167   <- [164]
  void                    Nop                !     
  val?            %167.1 = %154.2
  dr              %167.2 = Typecheck@0x5614fb446af8[Type#35]
  goto BB104
BB104   <- [165, 167, 171]
  val?^ | miss    %104.0 = Phi                      %165.1:BB165, %167.1:BB167, %171.1:BB171
  val?^ | miss    %104.1 = %104.0
  dr              %104.2 = Phi                      %165.2:BB165, %167.2:BB167, %171.2:BB171
  dr              %104.3 = %104.2
  fs              %104.4 = FrameState         R     0x5614fd2f56b0+700: [%110.0, 1L, %110.1, %154.2, %154.4], env=e0.2
  void                    Deopt              !v    %104.4, %104.3, %104.1   !
BB31   <- [21]
  val?^ | miss    %31.0 = LdVar              eR    recall, e0.2
  lgl$#-          %31.1 = IsType                   %31.0 isA lgl$-
  void                    Branch                   %31.1 -> BB150 (if true) | BB151 (if false)
BB24   <- [21]
  int$-           %24.0 = Extract2_1D        wed   %110.0, %21.0, elided
  void                    StVar              lW    i, %24.0, e0.2
  val?^ | miss    %24.2 = LdVar              eR    gnames, e0.2
  val?            %24.3 = Force!             !v    %24.2, e0.2   <val?_>
  lgl$#-          %24.4 = IsType                   %24.3 isA val+   <@?>
  void                    Branch                   %24.4 -> BB30 (if true) | BB25 (if false)
BB170   <- [166]
  val?-           %170.0 = CastType           d     dn %154.4   <vec$->
  val?-           %170.1 = Subassign2_1D      wed   %166.0, %170.0, %164.0, elided
  void                    StVar              lW    generics, %170.1, e0.2
  void                    StVar              lW    recall, true, e0.2
  goto BB21
BB171   <- [166]
  void                    Nop                !     
  val?            %171.1 = %154.4
  dr              %171.2 = Typecheck@0x5614fb446af8[Type#36]
  goto BB104
BB150   <- [31]
  lgl$-           %150.0 = CastType           d     dn %31.0
  void                    Visible            v     
  lgl$#-          %150.2 = CheckTrueFalse     e     %150.0
  void                    Branch                   %150.2 -> BB98 (if true) | BB32 (if false)
BB151   <- [31]
  void                    Nop                !     
  val?^ | miss    %151.1 = %31.0
  dr              %151.2 = Typecheck@0x5614fb446af8[Type#83]
  goto BB22
BB30   <- [24]
  val?^ | miss    %30.0 = LdVar              eR    i, e0.2
  val?            %30.1 = Force!             !v    %30.0, e0.2   <val?_>
  val?            %30.2 = %30.1
  goto BB26
BB25   <- [24]
  prom-           %25.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p5, e0.2
  prom-           %25.1 = %25.0
  goto BB26
BB98   <- [150]
  val?^ | miss    %98.0 = LdVar              eR    Recall, e0.2
  lgl$#-          %98.1 = Identical                %98.0, function(...) <(rir::DispatchTable*)0x5614fb09|...
  void                    Branch                   %98.1 -> BB152 (if true) | BB153 (if false)
BB32   <- [150]
  val?^ | miss    %32.0 = LdVar              eR    unique, e0.2
  lgl$#-          %32.1 = Identical                %32.0, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %32.1 -> BB156 (if true) | BB157 (if false)
BB22   <- [151, 153, 157, 159]
  val?^ | miss    %22.0 = Phi                      %151.1:BB151, %153.1:BB153, %157.1:BB157, %159.1:BB159
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %151.2:BB151, %153.2:BB153, %157.2:BB157, %159.2:BB159
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x5614fd2f56b0+911: [%110.0, 1L, %110.1], env=e0.2
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB26   <- [25, 30]
  val?            %26.0 = Phi                      %30.2:BB30, %25.1:BB25
  val?            %26.1 = %26.0
  val?            %26.2 = Extract2_1D        !v    %24.3, %26.1, e0.2   <val?_>
  void                    StVar              lW    what, %26.2, e0.2
  val?^ | miss    %26.4 = LdVar              eR    generics, e0.2
  val?            %26.5 = Force!             !v    %26.4, e0.2   <val?_>
  lgl$#-          %26.6 = IsType                   %26.5 isA val+   <@?>
  void                    Branch                   %26.6 -> BB29 (if true) | BB27 (if false)
BB152   <- [98]
  prom-           %152.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p22, e0.2
  prom-           %152.1 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p24, e0.2
  dots-           %152.2 = DotsList           l     %152.0, %152.1
  ct              %152.3 = PushContext        lCL   %152.2, Recall(unlist(gnames, FALSE), unlist(generics,|..., function(...) <(rir::DispatchTable*)0x5614fb09|..., e0.2
  env             e152.4 = MkEnv              l     ...=%152.2, parent=R_BaseNamespace, context 1
  prom-           %152.5 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p32, e152.4
  val?            %152.6 = Call               !     <spec .Internal>(%152.5) e152.4   <(lgl|vec)->
  val?            %152.7 = PopContext         C     %152.6, %152.3   <vec->
  val?            %152.8 = %152.7
  goto BB85
BB153   <- [98]
  void                    Nop                !     
  val?^ | miss    %153.1 = %98.0
  dr              %153.2 = CallTarget@0x5614fb446af8[Call#26]
  goto BB22
BB156   <- [32]
  val?^ | miss    %156.0 = LdVar              eR    funs, e0.2
  lgl$#-          %156.1 = IsType                   %156.0 isA val?~- | miss
  void                    Branch                   %156.1 -> BB158 (if true) | BB159 (if false)
BB157   <- [32]
  void                    Nop                !     
  val?^ | miss    %157.1 = %32.0
  dr              %157.2 = CallTarget@0x5614fb446af8[Call#29]
  goto BB22
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    i, e0.2
  val?            %29.1 = Force!             !v    %29.0, e0.2   <val?_>
  val?            %29.2 = %29.1
  goto BB28
BB27   <- [26]
  prom-           %27.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p4, e0.2
  prom-           %27.1 = %27.0
  goto BB28
BB85   <- [152, 228]
  val?            %85.0 = Phi                      %228.3:BB228, %152.8:BB152
  val?            %85.1 = %85.0
  void                    Return             l     %85.1
BB158   <- [156]
  val?~- | miss   %158.0 = CastType           d     dn %156.0
  val?-           %158.1 = Force!<value>            %158.0,    <vec->
  val?            %158.2 = StaticCall         !v    unique[0x5614fcb13760](%158.1) { 0 } e0.2   <vec->
  void                    StVar              lW    funs, %158.2, e0.2
  val?^ | miss    %158.4 = LdVar              eR    lapply, e0.2
  lgl$#-          %158.5 = Identical                %158.4, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %158.5 -> BB160 (if true) | BB161 (if false)
BB159   <- [156]
  void                    Nop                !     
  val?^ | miss    %159.1 = %156.0
  dr              %159.2 = Typecheck@0x5614fb446af8[Type#89]
  goto BB22
BB28   <- [27, 29]
  val?            %28.0 = Phi                      %29.2:BB29, %27.1:BB27
  val?            %28.1 = %28.0
  val?            %28.2 = Extract2_1D        !v    %26.5, %28.1, e0.2   <val?_>
  void                    StVar              lW    fdef, %28.2, e0.2
  (cls|spec|blt)  %28.4 = LdFun              !v    is, e0.2
  fs              %28.5 = FrameState         R     0x5614fd2f56b0+1095: [%110.0, 1L, %21.0, %28.4], env=e0.2
  void                    Deopt              !v    %28.5, DeadCall@0x5614fb446af8[Call#14], %28.4   !
BB160   <- [158]
  prom-           %160.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p8 (!refl), e0.2
  cls             %160.1 = MkCls                    .checkGroupSigLength@Prom(9)0, e0.2
  prom-           %160.2 = MkArg                    %160.1, .checkGroupSigLength[0x5614fa820530]_p9 (!refl), e0.2
  val?            %160.3 = StaticCall         !v    lapply[0x5614fe3b9710](%160.0, %160.2) { 0 1 } e0.2   <vec->
  void                    StVar              lW    fdefs, %160.3, e0.2
  (cls|spec|blt)  %160.5 = LdFun              !v    rep, <0x5614f88bb9b0>, e0.2
  prom-           %160.6 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p10, e0.2
  val?            %160.7 = Call               !v    %160.5(0, %160.6) e0.2   <real->
  void                    StVar              lW    sigs, %160.7, e0.2
  val?^ | miss    %160.9 = LdVar              eR    seq_along, e0.2
  lgl$#-          %160.10 = Identical                <blt seq_along>, %160.9   <true>
  void                    Branch                   %160.10 -> BB162 (if true) | BB163 (if false)
BB161   <- [158]
  fs              %161.0 = FrameState         R     0x5614fd2f56b0+1801: [], env=e0.2
  void                    Deopt              !v    %161.0, CallTarget@0x5614fb446af8[Call#30], %158.4   !
BB162   <- [160]
  val             %162.0 = ChkMissing         e     %160.7
  val?            %162.1 = CallBuiltin        !v    seq_along(%160.7) e0.2   <int->
  val?+           %162.2 = ToForSeq           e     %162.1
  int$-           %162.3 = Length                   %162.2
  lgl$-           %162.4 = Lt                 d     %162.3, %110.1, elided   <false>
  lgl$#-          %162.5 = Identical                %162.4, true
  void                    Branch                   %162.5 -> BB169 (if true) | BB168 (if false)
BB163   <- [160]
  fs              %163.0 = FrameState         R     0x5614fd2f56b0+1903: [], env=e0.2
  void                    Deopt              !v    %163.0, DeadBranchReached@0x5614fb446af8[Test#10], %160.10   !
BB169   <- [162]
  fs              %169.0 = FrameState         R     0x5614fd2f56b0+1994: [%162.1], env=e0.2
  void                    Deopt              !v    %169.0, DeadBranchReached@0x5614fb446af8[Test#11], %162.5   !
BB168   <- [162]
  val?            %168.0 = Extract2_1D        wed   %162.2, %110.1, elided
  void                    StVar              lW    i, %168.0, e0.2
  val?^ | miss    %168.2 = LdVar              eR    funs, e0.2
  lgl$#-          %168.3 = IsType                   %168.2 isA val?~- | miss
  void                    Branch                   %168.3 -> BB172 (if true) | BB173 (if false)
BB172   <- [168]
  val?~- | miss   %172.0 = CastType           d     dn %168.2
  val?-           %172.1 = Force!<value>            %172.0,    <vec->
  lgl$#-          %172.2 = IsType                   %172.1 isA val+   <true>
  void                    Branch                   %172.2 -> BB174 (if true) | BB175 (if false)
BB173   <- [168]
  void                    Nop                !     
  val?^ | miss    %173.1 = %168.2
  dr              %173.2 = Typecheck@0x5614fb446af8[Type#99]
  goto BB39
BB174   <- [172]
  val             %174.0 = ChkMissing         e     %168.0
  lgl$#-          %174.1 = IsType                   %174.0 isA int$-
  void                    Branch                   %174.1 -> BB176 (if true) | BB177 (if false)
BB175   <- [172]
  void                    Nop                !     
  lgl$#-          %175.1 = %172.2
  dr              %175.2 = DeadBranchReached@0x5614fb446af8[Test#12]
  goto BB39
BB39   <- [173, 175, 177]
  val?^ | miss    %39.0 = Phi                      %173.1:BB173, %175.1:BB175, %177.1:BB177
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %173.2:BB173, %175.2:BB175, %177.2:BB177
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x5614fd2f56b0+2039: [%162.2, %162.3, %110.1], env=e0.2
  void                    Deopt              !v    %39.4, %39.3, %39.1   !
BB176   <- [174]
  int$-           %176.0 = CastType           d     dn %174.0
  val?            %176.1 = Extract2_1D        wed   %172.1, %176.0, elided   <str$->
  void                    StVar              lW    what, %176.1, e0.2
  val?^ | miss    %176.3 = LdVar              eR    fdefs, e0.2
  lgl$#-          %176.4 = IsType                   %176.3 isA val?~- | miss
  void                    Branch                   %176.4 -> BB178 (if true) | BB179 (if false)
BB177   <- [174]
  void                    Nop                !     
  val             %177.1 = %174.0
  dr              %177.2 = Typecheck@0x5614fb446af8[Type#101]
  goto BB39
BB178   <- [176]
  val?~- | miss   %178.0 = CastType           d     dn %176.3
  val?-           %178.1 = Force!<value>            %178.0,    <vec->
  lgl$#-          %178.2 = IsType                   %178.1 isA val+   <true>
  void                    Branch                   %178.2 -> BB180 (if true) | BB181 (if false)
BB179   <- [176]
  void                    Nop                !     
  val?^ | miss    %179.1 = %176.3
  dr              %179.2 = Typecheck@0x5614fb446af8[Type#103]
  goto BB41
BB180   <- [178]
  val?            %180.0 = Extract2_1D        wed   %178.1, %176.0, elided   <cls>
  lgl$-           %180.1 = Is                       %180.0, NULL
  void                    StVar              lW    fdef, %180.0, e0.2
  val             %180.3 = ChkMissing         e     %180.0
  lgl$#-          %180.4 = CheckTrueFalse     e     %180.1
  void                    Branch                   %180.4 -> BB97 (if true) | BB45 (if false)
BB181   <- [178]
  void                    Nop                !     
  lgl$#-          %181.1 = %178.2
  dr              %181.2 = DeadBranchReached@0x5614fb446af8[Test#13]
  goto BB41
BB41   <- [179, 181]
  val?^ | miss    %41.0 = Phi                      %179.1:BB179, %181.1:BB181
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %179.2:BB179, %181.2:BB181
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x5614fd2f56b0+2114: [%162.2, %162.3, %110.1], env=e0.2
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB97   <- [180]
  void                    Nop                !     
  int$-           %97.1 = %110.1
  goto BB52
BB45   <- [180]
  val?^ | miss    %45.0 = LdVar              eR    is, e0.2
  lgl$#-          %45.1 = Identical                %45.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %45.1 -> BB184 (if true) | BB185 (if false)
BB52   <- [73, 97, 222, 226]
  int$-           %52.0 = Phi                      %222.3:BB222, %226.3:BB226, %73.1:BB73, %97.1:BB97
  int$-           %52.1 = %52.0
  int$-           %52.2 = Inc                      %52.1
  lgl$-           %52.3 = Lt                 d     %162.3, %52.2, elided
  lgl$#-          %52.4 = Identical                %52.3, true
  void                    Branch                   %52.4 -> BB74 (if true) | BB55 (if false)
BB184   <- [45]
  prom-           %184.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p12 (!refl), e0.2
  val?            %184.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%184.0, "genericFunction") e0.2   <lgl$->
  lgl$#-          %184.2 = IsType                   %184.1 isA lgl$-
  void                    Branch                   %184.2 -> BB194 (if true) | BB195 (if false)
BB185   <- [45]
  fs              %185.0 = FrameState         R     0x5614fd2f56b0+2189: [%162.2, %162.3, %110.1], env=e0.2
  void                    Deopt              !v    %185.0, CallTarget@0x5614fb446af8[Call#34], %45.0   !
BB74   <- [52]
  val?^ | miss    %74.0 = LdVar              eR    max, e0.2
  lgl$#-          %74.1 = Identical                <blt max>, %74.0   <true>
  void                    Branch                   %74.1 -> BB182 (if true) | BB183 (if false)
BB55   <- [52]
  val?            %55.0 = Extract2_1D        wed   %162.2, %52.2, elided
  void                    StVar              lW    i, %55.0, e0.2
  val?^ | miss    %55.2 = LdVar              eR    funs, e0.2
  lgl$#-          %55.3 = IsType                   %55.2 isA val?~- | miss
  void                    Branch                   %55.3 -> BB186 (if true) | BB187 (if false)
BB194   <- [184]
  lgl$-           %194.0 = CastType           d     dn %184.1
  lgl$-           %194.1 = Not                d     %194.0, elided
  lgl$#-          %194.2 = CheckTrueFalse     e     %194.1
  void                    Branch                   %194.2 -> BB96 (if true) | BB48 (if false)
BB195   <- [184]
  void                    Nop                !     
  val?            %195.1 = %184.1
  dr              %195.2 = Typecheck@0x5614fb446af8[Type#109]
  goto BB46
BB182   <- [74]
  val?^ | miss    %182.0 = LdVar              eR    sigs, e0.2
  lgl$#-          %182.1 = IsType                   %182.0 isA real-
  void                    Branch                   %182.1 -> BB192 (if true) | BB193 (if false)
BB183   <- [74]
  void                    Nop                !     
  lgl$#-          %183.1 = %74.1
  dr              %183.2 = DeadBranchReached@0x5614fb446af8[Test#16]
  goto BB53
BB186   <- [55]
  val?~- | miss   %186.0 = CastType           d     dn %55.2
  val?-           %186.1 = Force!<value>            %186.0,    <vec->
  lgl$#-          %186.2 = IsType                   %186.1 isA val+   <true>
  void                    Branch                   %186.2 -> BB188 (if true) | BB189 (if false)
BB187   <- [55]
  void                    Nop                !     
  val?^ | miss    %187.1 = %55.2
  dr              %187.2 = Typecheck@0x5614fb446af8[Type#130]
  goto BB56
BB96   <- [194]
  (cls|spec|blt)  %96.0 = LdFun              !v    warning, e0.2
  fs              %96.1 = FrameState         R     0x5614fd2f56b0+2547: [%162.2, %162.3, %110.1, %96.0], env=e0.2
  void                    Deopt              !v    %96.1, DeadCall@0x5614fb446af8[Call#39], %96.0   !
BB48   <- [194]
  val?^ | miss    %48.0 = LdVar              eR    environment, e0.2
  lgl$#-          %48.1 = Identical                %48.0, function(fun=NULL) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %48.1 -> BB196 (if true) | BB197 (if false)
BB46   <- [195, 197]
  val?^ | miss    %46.0 = Phi                      %195.1:BB195, %197.1:BB197
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %195.2:BB195, %197.2:BB197
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x5614fd2f56b0+2266: [%162.2, %162.3, %110.1, %184.1], env=e0.2
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
BB192   <- [182]
  real-           %192.0 = CastType           d     dn %182.0
  real$-          %192.1 = CallSafeBuiltin    wed   max(%192.0)    <real$->
  void                    StVar              lW    n, %192.1, e0.2
  val?^ | miss    %192.3 = LdVar              eR    &, e0.2
  lgl$#-          %192.4 = Identical                <blt &>, %192.3   <true>
  void                    Branch                   %192.4 -> BB200 (if true) | BB201 (if false)
BB193   <- [182]
  void                    Nop                !     
  val?^ | miss    %193.1 = %182.0
  dr              %193.2 = Typecheck@0x5614fb446af8[Type#162]
  goto BB53
BB53   <- [183, 193]
  val?^ | miss    %53.0 = Phi                      %183.1:BB183, %193.1:BB193
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %183.2:BB183, %193.2:BB193
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x5614fd2f56b0+2588: [%162.2, %162.3, %52.1], env=e0.2
  void                    Deopt              !v    %53.4, %53.3, %53.1   !
BB188   <- [186]
  val             %188.0 = ChkMissing         e     %55.0
  lgl$#-          %188.1 = IsType                   %188.0 isA int$-
  void                    Branch                   %188.1 -> BB190 (if true) | BB191 (if false)
BB189   <- [186]
  void                    Nop                !     
  lgl$#-          %189.1 = %186.2
  dr              %189.2 = DeadBranchReached@0x5614fb446af8[Test#14]
  goto BB56
BB56   <- [187, 189, 191]
  val?^ | miss    %56.0 = Phi                      %187.1:BB187, %189.1:BB189, %191.1:BB191
  val?^ | miss    %56.1 = %56.0
  dr              %56.2 = Phi                      %187.2:BB187, %189.2:BB189, %191.2:BB191
  dr              %56.3 = %56.2
  fs              %56.4 = FrameState         R     0x5614fd2f56b0+2617: [%162.2, %162.3, %52.2], env=e0.2
  void                    Deopt              !v    %56.4, %56.3, %56.1   !
BB196   <- [48]
  val?^ | miss    %196.0 = LdVar              eR    fdef, e0.2
  val?            %196.1 = Force!<value>      !v    %196.0, e0.2   <cls>
  prom-           %196.2 = MkArg                    %196.1, .checkGroupSigLength[0x5614fa820530]_p13 (!refl), 
  val?            %196.3 = StaticCall         !v    environment[0x5614fc2a67a0](%196.2) e0.2   <env->
  void                    StVar              lW    ev, %196.3, e0.2
  (cls|spec|blt)  %196.5 = LdFun              !v    $, <0x5614f88a6c10>, e0.2
  prom-           %196.6 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p14, e0.2
  prom-           %196.7 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p15, e0.2
  val?            %196.8 = Call               !v    %196.5(%196.6, %196.7) e0.2   <(int|real)$->
  lgl$-           %196.9 = Is                       %196.8, NULL
  void                    StVar              lW    sigl, %196.8, e0.2
  lgl$#-          %196.11 = CheckTrueFalse     e     %196.9
  void                    Branch                   %196.11 -> BB95 (if true) | BB51 (if false)
BB197   <- [48]
  void                    Nop                !     
  val?^ | miss    %197.1 = %48.0
  dr              %197.2 = CallTarget@0x5614fb446af8[Call#35]
  goto BB46
BB200   <- [192]
  lgl-            %200.0 = Lt                 wed   %192.0, %192.1, elided   <lgl->
  lgl-            %200.1 = Gt                 wed   %192.0, 0, elided   <lgl->
  val+            %200.2 = CallSafeBuiltin    wed   &(%200.0, %200.1)    <lgl->
  void                    StVar              lW    reset, %200.2, e0.2
  val?^ | miss    %200.4 = LdVar              eR    any, e0.2
  lgl$#-          %200.5 = Identical                <blt any>, %200.4   <true>
  void                    Branch                   %200.5 -> BB206 (if true) | BB207 (if false)
BB201   <- [192]
  fs              %201.0 = FrameState         R     0x5614fd2f56b0+3281: [], env=e0.2
  void                    Deopt              !v    %201.0, DeadBranchReached@0x5614fb446af8[Test#17], %192.4   !
BB190   <- [188]
  int$-           %190.0 = CastType           d     dn %188.0
  val?            %190.1 = Extract2_1D        wed   %186.1, %190.0, elided   <str$->
  void                    StVar              lW    what, %190.1, e0.2
  val?^ | miss    %190.3 = LdVar              eR    fdefs, e0.2
  lgl$#-          %190.4 = IsType                   %190.3 isA val?~- | miss
  void                    Branch                   %190.4 -> BB198 (if true) | BB199 (if false)
BB191   <- [188]
  void                    Nop                !     
  val             %191.1 = %188.0
  dr              %191.2 = Typecheck@0x5614fb446af8[Type#132]
  goto BB56
BB95   <- [196]
  (cls|spec|blt)  %95.0 = LdFun              !v    .setupMethodsTables, e0.2
  fs              %95.1 = FrameState         R     0x5614fd2f56b0+2398: [%162.2, %162.3, %110.1, %95.0], env=e0.2
  void                    Deopt              !v    %95.1, DeadCall@0x5614fb446af8[Call#37], %95.0   !
BB51   <- [196]
  val             %51.0 = ChkMissing         e     %196.8
  val?^ | miss    %51.1 = LdVar              eR    sigs !upd, e0.2
  lgl$#-          %51.2 = IsType                   %51.1 isA real-
  void                    Branch                   %51.2 -> BB208 (if true) | BB209 (if false)
BB206   <- [200]
  val?            %206.0 = CallBuiltin        !v    any(%200.2) e0.2   <lgl$->
  lgl$#-          %206.1 = IsType                   %206.0 isA lgl$-
  void                    Branch                   %206.1 -> BB214 (if true) | BB215 (if false)
BB207   <- [200]
  fs              %207.0 = FrameState         R     0x5614fd2f56b0+3437: [], env=e0.2
  void                    Deopt              !v    %207.0, DeadBranchReached@0x5614fb446af8[Test#18], %200.5   !
BB198   <- [190]
  val?~- | miss   %198.0 = CastType           d     dn %190.3
  val?-           %198.1 = Force!<value>            %198.0,    <vec->
  lgl$#-          %198.2 = IsType                   %198.1 isA val+   <true>
  void                    Branch                   %198.2 -> BB202 (if true) | BB203 (if false)
BB199   <- [190]
  void                    Nop                !     
  val?^ | miss    %199.1 = %190.3
  dr              %199.2 = Typecheck@0x5614fb446af8[Type#134]
  goto BB58
BB208   <- [51]
  real-           %208.0 = CastType           d     dn %51.1
  val?^ | miss    %208.1 = LdVar              eR    i, e0.2
  lgl$#-          %208.2 = IsType                   %208.1 isA int$-
  void                    Branch                   %208.2 -> BB216 (if true) | BB217 (if false)
BB209   <- [51]
  void                    Nop                !     
  val?^ | miss    %209.1 = %51.1
  dr              %209.2 = Typecheck@0x5614fb446af8[Type#119]
  goto BB49
BB214   <- [206]
  lgl$-           %214.0 = CastType           d     dn %206.0
  lgl$#-          %214.1 = CheckTrueFalse     e     %214.0
  void                    Branch                   %214.1 -> BB86 (if true) | BB81 (if false)
BB215   <- [206]
  fs              %215.0 = FrameState         R     0x5614fd2f56b0+3528: [%206.0], env=e0.2
  void                    Deopt              !v    %215.0, Typecheck@0x5614fb446af8[Type#177], %206.0   !
BB202   <- [198]
  val             %202.0 = ChkMissing         e     %55.0
  lgl$#-          %202.1 = IsType                   %202.0 isA int$-
  void                    Branch                   %202.1 -> BB204 (if true) | BB205 (if false)
BB203   <- [198]
  void                    Nop                !     
  lgl$#-          %203.1 = %198.2
  dr              %203.2 = DeadBranchReached@0x5614fb446af8[Test#15]
  goto BB58
BB58   <- [199, 203, 205]
  val?^ | miss    %58.0 = Phi                      %199.1:BB199, %203.1:BB203, %205.1:BB205
  val?^ | miss    %58.1 = %58.0
  dr              %58.2 = Phi                      %199.2:BB199, %203.2:BB203, %205.2:BB205
  dr              %58.3 = %58.2
  fs              %58.4 = FrameState         R     0x5614fd2f56b0+2692: [%162.2, %162.3, %52.2], env=e0.2
  void                    Deopt              !v    %58.4, %58.3, %58.1   !
BB216   <- [208]
  int$-           %216.0 = CastType           d     dn %208.1
  lgl$#-          %216.1 = IsType                   %196.8 isA val?-
  void                    Branch                   %216.1 -> BB222 (if true) | BB223 (if false)
BB217   <- [208]
  void                    Nop                !     
  val?^ | miss    %217.1 = %208.1
  dr              %217.2 = Typecheck@0x5614fb446af8[Type#120]
  goto BB49
BB49   <- [209, 217, 223]
  val?^ | miss    %49.0 = Phi                      %209.1:BB209, %217.1:BB217, %223.1:BB223
  val?^ | miss    %49.1 = %49.0
  dr              %49.2 = Phi                      %209.2:BB209, %217.2:BB217, %223.2:BB223
  dr              %49.3 = %49.2
  fs              %49.4 = FrameState         R     0x5614fd2f56b0+2377: [%162.2, %162.3, %110.1, %196.8], env=e0.2
  void                    Deopt              !v    %49.4, %49.3, %49.1   !
BB86   <- [214]
  val?^ | miss    %86.0 = LdVar              eR    funs, e0.2
  val?            %86.1 = Force!             !v    %86.0, e0.2   <val?_>
  lgl$#-          %86.2 = IsType                   %86.1 isA val+   <@?>
  void                    Branch                   %86.2 -> BB94 (if true) | BB87 (if false)
BB81   <- [214]
  void                    Nop                !     
  goto BB82
BB204   <- [202]
  int$-           %204.0 = CastType           d     dn %202.0
  val?            %204.1 = Extract2_1D        wed   %198.1, %204.0, elided   <cls>
  lgl$-           %204.2 = Is                       %204.1, NULL
  void                    StVar              lW    fdef, %204.1, e0.2
  val             %204.4 = ChkMissing         e     %204.1
  lgl$#-          %204.5 = CheckTrueFalse     e     %204.2
  void                    Branch                   %204.5 -> BB73 (if true) | BB62 (if false)
BB205   <- [202]
  void                    Nop                !     
  val             %205.1 = %202.0
  dr              %205.2 = Typecheck@0x5614fb446af8[Type#136]
  goto BB58
BB222   <- [216]
  val?-           %222.0 = CastType           d     dn %196.8   <(int|real)$->
  val?-           %222.1 = Subassign1_1D      wed   %222.0, %208.0, %216.0, elided
  void                    StVar              lW    sigs, %222.1, e0.2
  int$-           %222.3 = %110.1
  goto BB52
BB223   <- [216]
  void                    Nop                !     
  val?            %223.1 = %196.8
  dr              %223.2 = Typecheck@0x5614fb446af8[Type#114]
  goto BB49
BB94   <- [86]
  val?^ | miss    %94.0 = LdVar              eR    reset, e0.2
  val?            %94.1 = Force!             !v    %94.0, e0.2   <val?_>
  val?            %94.2 = %94.1
  goto BB88
BB87   <- [86]
  prom-           %87.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p21, e0.2
  prom-           %87.1 = %87.0
  goto BB88
BB82   <- [81, 92]
  val?^ | miss    %82.0 = LdVar              eR    funs, e0.2
  lgl$#-          %82.1 = IsType                   %82.0 isA val?~- | miss
  void                    Branch                   %82.1 -> BB228 (if true) | BB229 (if false)
BB73   <- [204]
  void                    Nop                !     
  int$-           %73.1 = %52.2
  goto BB52
BB62   <- [204]
  val?^ | miss    %62.0 = LdVar              eR    is, e0.2
  lgl$#-          %62.1 = Identical                %62.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %62.1 -> BB210 (if true) | BB211 (if false)
BB88   <- [87, 94]
  val?            %88.0 = Phi                      %94.2:BB94, %87.1:BB87
  val?            %88.1 = %88.0
  val?            %88.2 = Extract1_1D        !v    %86.1, %88.1, e0.2   <val?_>
  void                    StVar              lW    funs, %88.2, e0.2
  val?^ | miss    %88.4 = LdVar              eR    fdefs, e0.2
  val?            %88.5 = Force!             !v    %88.4, e0.2   <val?_>
  lgl$#-          %88.6 = IsType                   %88.5 isA val+   <@?>
  void                    Branch                   %88.6 -> BB93 (if true) | BB89 (if false)
BB228   <- [82]
  val?~- | miss   %228.0 = CastType           d     dn %82.0
  void                    Visible            v     
  val?-           %228.2 = Force!<value>            %228.0,    <vec->
  val?-           %228.3 = %228.2
  goto BB85
BB229   <- [82]
  fs              %229.0 = FrameState         R     0x5614fd2f56b0+3863: [], env=e0.2
  void                    Deopt              !v    %229.0, Typecheck@0x5614fb446af8[Type#191], %82.0   !
BB210   <- [62]
  prom-           %210.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p16 (!refl), e0.2
  val?            %210.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%210.0, "genericFunction") e0.2   <lgl$->
  lgl$#-          %210.2 = IsType                   %210.1 isA lgl$-
  void                    Branch                   %210.2 -> BB212 (if true) | BB213 (if false)
BB211   <- [62]
  fs              %211.0 = FrameState         R     0x5614fd2f56b0+2767: [%162.2, %162.3, %52.2], env=e0.2
  void                    Deopt              !v    %211.0, CallTarget@0x5614fb446af8[Call#45], %62.0   !
BB93   <- [88]
  val?^ | miss    %93.0 = LdVar              eR    reset, e0.2
  val?            %93.1 = Force!             !v    %93.0, e0.2   <val?_>
  val?            %93.2 = %93.1
  goto BB90
BB89   <- [88]
  prom-           %89.0 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p20, e0.2
  prom-           %89.1 = %89.0
  goto BB90
BB212   <- [210]
  lgl$-           %212.0 = CastType           d     dn %210.1
  lgl$-           %212.1 = Not                d     %212.0, elided
  lgl$#-          %212.2 = CheckTrueFalse     e     %212.1
  void                    Branch                   %212.2 -> BB72 (if true) | BB65 (if false)
BB213   <- [210]
  void                    Nop                !     
  val?            %213.1 = %210.1
  dr              %213.2 = Typecheck@0x5614fb446af8[Type#140]
  goto BB63
BB90   <- [89, 93]
  val?            %90.0 = Phi                      %93.2:BB93, %89.1:BB89
  val?            %90.1 = %90.0
  val?            %90.2 = Extract1_1D        !v    %88.5, %90.1, e0.2   <val?_>
  void                    StVar              lW    fdefs, %90.2, e0.2
  val             %90.4 = ChkMissing         e     %90.2
  val?+           %90.5 = ToForSeq           e     %90.2
  int$-           %90.6 = Length                   %90.5
  lgl$-           %90.7 = Lt                 d     %90.6, %110.1, elided   <@?>
  lgl$#-          %90.8 = Identical                %90.7, true
  void                    Branch                   %90.8 -> BB92 (if true) | BB91 (if false)
BB72   <- [212]
  (cls|spec|blt)  %72.0 = LdFun              !v    warning, e0.2
  fs              %72.1 = FrameState         R     0x5614fd2f56b0+3125: [%162.2, %162.3, %52.2, %72.0], env=e0.2
  void                    Deopt              !v    %72.1, DeadCall@0x5614fb446af8[Call#50], %72.0   !
BB65   <- [212]
  val?^ | miss    %65.0 = LdVar              eR    environment, e0.2
  lgl$#-          %65.1 = Identical                %65.0, function(fun=NULL) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %65.1 -> BB218 (if true) | BB219 (if false)
BB63   <- [213, 219]
  val?^ | miss    %63.0 = Phi                      %213.1:BB213, %219.1:BB219
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %213.2:BB213, %219.2:BB219
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x5614fd2f56b0+2844: [%162.2, %162.3, %52.2, %210.1], env=e0.2
  void                    Deopt              !v    %63.4, %63.3, %63.1   !
BB92   <- [90]
  void                    Nop                !     
  goto BB82
BB91   <- [90]
  val?            %91.0 = Extract2_1D        wed   %90.5, %110.1, elided
  void                    StVar              lW    fdef, %91.0, e0.2
  (cls|spec|blt)  %91.2 = LdFun              !v    .resetSigLength, e0.2
  fs              %91.3 = FrameState         R     0x5614fd2f56b0+3753: [%90.5, %90.6, %110.1, %91.2], env=e0.2
  void                    Deopt              !v    %91.3, DeadCall@0x5614fb446af8[Call#59], %91.2   !
BB218   <- [65]
  val?^ | miss    %218.0 = LdVar              eR    fdef, e0.2
  val?            %218.1 = Force!<value>      !v    %218.0, e0.2   <cls>
  prom-           %218.2 = MkArg                    %218.1, .checkGroupSigLength[0x5614fa820530]_p17 (!refl), 
  val?            %218.3 = StaticCall         !v    environment[0x5614fc2a67a0](%218.2) e0.2   <env->
  void                    StVar              lW    ev, %218.3, e0.2
  (cls|spec|blt)  %218.5 = LdFun              !v    $, <0x5614f88a6c10>, e0.2
  prom-           %218.6 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p18, e0.2
  prom-           %218.7 = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p19, e0.2
  val?            %218.8 = Call               !v    %218.5(%218.6, %218.7) e0.2   <real$->
  lgl$-           %218.9 = Is                       %218.8, NULL
  lgl$#-          %218.10 = IsType                   %218.8 isA real$-
  void                    Branch                   %218.10 -> BB220 (if true) | BB221 (if false)
BB219   <- [65]
  void                    Nop                !     
  val?^ | miss    %219.1 = %65.0
  dr              %219.2 = CallTarget@0x5614fb446af8[Call#46]
  goto BB63
BB220   <- [218]
  real$-          %220.0 = CastType           d     dn %218.8
  void                    StVar              lW    sigl, %220.0, e0.2
  lgl$#-          %220.2 = CheckTrueFalse     e     %218.9
  void                    Branch                   %220.2 -> BB71 (if true) | BB70 (if false)
BB221   <- [218]
  fs              %221.0 = FrameState         R     0x5614fd2f56b0+2939: [%162.2, %162.3, %52.2, %218.8], env=e0.2
  void                    Deopt              !v    %221.0, Typecheck@0x5614fb446af8[Type#145], %218.8   !
BB71   <- [220]
  (cls|spec|blt)  %71.0 = LdFun              !v    .setupMethodsTables, e0.2
  fs              %71.1 = FrameState         R     0x5614fd2f56b0+2976: [%162.2, %162.3, %52.2, %71.0], env=e0.2
  void                    Deopt              !v    %71.1, DeadCall@0x5614fb446af8[Call#48], %71.0   !
BB70   <- [220]
  val?^ | miss    %70.0 = LdVar              eR    sigs !upd, e0.2
  lgl$#-          %70.1 = IsType                   %70.0 isA real-
  void                    Branch                   %70.1 -> BB224 (if true) | BB225 (if false)
BB224   <- [70]
  real-           %224.0 = CastType           d     dn %70.0
  val?^ | miss    %224.1 = LdVar              eR    i, e0.2
  lgl$#-          %224.2 = IsType                   %224.1 isA int$-
  void                    Branch                   %224.2 -> BB226 (if true) | BB227 (if false)
BB225   <- [70]
  void                    Nop                !     
  val?^ | miss    %225.1 = %70.0
  dr              %225.2 = Typecheck@0x5614fb446af8[Type#150]
  goto BB68
BB226   <- [224]
  int$-           %226.0 = CastType           d     dn %224.1
  real-           %226.1 = Subassign1_1D      wed   %220.0, %224.0, %226.0, elided
  void                    StVar              lW    sigs, %226.1, e0.2
  int$-           %226.3 = %52.2
  goto BB52
BB227   <- [224]
  void                    Nop                !     
  val?^ | miss    %227.1 = %224.1
  dr              %227.2 = Typecheck@0x5614fb446af8[Type#151]
  goto BB68
BB68   <- [225, 227]
  val?^ | miss    %68.0 = Phi                      %225.1:BB225, %227.1:BB227
  val?^ | miss    %68.1 = %68.0
  dr              %68.2 = Phi                      %225.2:BB225, %227.2:BB227
  dr              %68.3 = %68.2
  fs              %68.4 = FrameState         R     0x5614fd2f56b0+2955: [%162.2, %162.3, %52.2, %220.0], env=e0.2
  void                    Deopt              !v    %68.4, %68.3, %68.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    .checkGroupSigLength@Prom(9)0, e0.0
  void                    Return             l     %0.1
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .SigLength, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .SigLength, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    reset, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    reset, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     unlist, <0x5614f8bbd508>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p23, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, false) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     unlist, <0x5614f8bbd508>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p25, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, false) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generics, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5614f88a6bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p29, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .checkGroupSigLength[0x5614fa820530]_p30, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec$->
  void                    Return             l     %0.4
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    getGeneric, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     Recall, e0.0
  (miss|dots)     %0.2  = LdDots             R     , e0.0
  *dots-          %0.3  = ExpandDots               %0.2
  val?            %0.4  = NamedCall          !     %0.1(.xpandDotsTrigger=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4

│ .checkGroupSigLength[0x5614fa820530]                                         │
└──────────────────────────────────────────────────────────────────────────────┘
