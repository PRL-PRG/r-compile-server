
┌──────────────────────────────────────────────────────────────────────────────┐
│ .resetInheritedMethods[0x5614fbe03240]                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
.resetInheritedMethods[0x5614fbe03240]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    character, <env 0x5614f8eae378>
  lgl$#-          %0.3  = Identical                %0.2, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %0.3 -> BB52 (if true) | BB53 (if false)
BB52   <- [0]
  str-            %52.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  val?^ | miss    %52.1 = LdVar              eR    names, <env 0x5614f8eae378>
  lgl$#-          %52.2 = Identical                <blt names>, %52.1   <true>
  void                    Branch                   %52.2 -> BB54 (if true) | BB55 (if false)
BB53   <- [0]
  env             e53.0 = (MkEnv)            l     fenv=%0.1, mtable=%0.0, parent=<env 0x5614f8eae378>, context 1
  fs              %53.1 = FrameState         R     0x5614f8bba980+0: [], env=e53.0
  void                    Deopt              !v    %53.1, CallTarget@0x5614fd34d568[Call#0], %0.2
BB54   <- [52]
  env             e54.0 = MkEnv              l     fenv=%0.1, mtable=%0.0, allObjects=%52.0, parent=<env 0x5614f8eae378>, context 1
  val+            %54.1 = Force!<lazy>       !vr   %0.0,    <env->
  val+            %54.2 = CallSafeBuiltin    wed   names(%54.1)    <str->
  void                    StVar              lW    direct, %54.2, e54.0
  (cls|spec|blt)  %54.4 = LdFun              !v    $, <0x5614f88a6c10>, <env 0x5614f8eae378>
  prom-           %54.5 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p0 (!refl), e54.0
  prom-           %54.6 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p1, e54.0
  val?            %54.7 = Call               !v    %54.4(%54.5, %54.6) e54.0   <env->
  lgl$-           %54.8 = Is                       %54.7, NULL
  void                    StVar              lW    allTable, %54.7, e54.0
  lgl$-           %54.10 = Not                d     %54.8, elided
  lgl$#-          %54.11 = CheckTrueFalse     e     %54.10
  void                    Branch                   %54.11 -> BB48 (if true) | BB7 (if false)
BB55   <- [52]
  env             e55.0 = (MkEnv)            l     fenv=%0.1, mtable=%0.0, parent=<env 0x5614f8eae378>, context 1
  fs              %55.1 = FrameState         R     0x5614f8bba980+27: [], env=e55.0
  env             e55.2 = (MkEnv)            l     length=0L, parent=R_BaseNamespace, context 0
  fs              %55.3 = FrameState         R     0x5614fa73dfa0+33: [%52.0], env=e55.2, next=%55.1
  void                    Deopt              !v    %55.3, DeadBranchReached@0x5614fd34d568[Test#0], %52.2
BB48   <- [54]
  val?^ | miss    %48.0 = LdVar              eR    names, e54.0
  lgl$#-          %48.1 = Identical                <blt names>, %48.0   <true>
  void                    Branch                   %48.1 -> BB56 (if true) | BB57 (if false)
BB7   <- [54]
  val?^ | miss    %7.0  = LdVar              eR    new.env, e54.0
  lgl$#-          %7.1  = Identical                %7.0, function(hash=TRUE, parent=parent.frame(), siz|...
  void                    Branch                   %7.1 -> BB60 (if true) | BB61 (if false)
BB56   <- [48]
  val             %56.0 = ChkMissing         e     %54.7
  lgl$#-          %56.1 = IsType                   %54.7 isA val?-
  void                    Branch                   %56.1 -> BB58 (if true) | BB59 (if false)
BB57   <- [48]
  void                    Nop                !     
  lgl$#-          %57.1 = %48.1
  dr              %57.2 = DeadBranchReached@0x5614fd34d568[Test#1]
  goto BB5
BB60   <- [7]
  val?^ | miss    %60.0 = LdVar              eR    fenv, e54.0
  val?            %60.1 = Force!<wrapped>    !v    %60.0, e54.0   <env->
  lgl$#-          %60.2 = IsType                   %60.1 isA val?+
  void                    Branch                   %60.2 -> BB64 (if true) | BB65 (if false)
BB61   <- [7]
  void                    Nop                !     
  val?^ | miss    %61.1 = %7.0
  dr              %61.2 = CallTarget@0x5614fd34d568[Call#3]
  goto BB5
BB58   <- [56]
  val?-           %58.0 = CastType           d     dn %54.7   <env->
  val+            %58.1 = CallSafeBuiltin    wed   names(%58.0)    <str->
  void                    StVar              lW    allObjects, %58.1, e54.0
  val?^ | miss    %58.3 = LdVar              eR    remove, e54.0
  lgl$#-          %58.4 = Identical                %58.3, function(..., list=character(), pos=-(1), envi|...
  void                    Branch                   %58.4 -> BB62 (if true) | BB63 (if false)
BB59   <- [56]
  void                    Nop                !     
  val?            %59.1 = %54.7
  dr              %59.2 = Typecheck@0x5614fd34d568[Type#6]
  goto BB5
BB5   <- [57, 59, 61]
  val?^ | miss    %5.0  = Phi                      %57.1:BB57, %59.1:BB59, %61.1:BB61
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %57.2:BB57, %59.2:BB59, %61.2:BB61
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x5614f8bba980+199: [%54.7], env=e54.0
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB64   <- [60]
  val?+           %64.0 = CastType           d     dn %60.1   <env+>
  val+            %64.1 = CallSafeBuiltin    wed   new.env(true, %64.0, 29L)    <env->
  void                    StVar              lW    allTable, %64.1, e54.0
  val?^ | miss    %64.3 = LdVar              eR    assign, e54.0
  lgl$#-          %64.4 = Identical                %64.3, function(x, value, pos=-(1), envir=as.environm|...
  void                    Branch                   %64.4 -> BB66 (if true) | BB67 (if false)
BB65   <- [60]
  prom-           %65.0 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p2, e54.0
  val?^           %65.1 = CastType                 up %65.0
  fs              %65.2 = FrameState         R     0x5614f8bba980+248: [], env=e54.0
  env             e65.3 = (MkEnv)            l     size(miss)=29L, parent=%65.1, hash=true, parent=R_BaseNamespace, context 0
  fs              %65.4 = FrameState         R     0x5614fb668e60+23: [true], env=e65.3, next=%65.2
  fs              %65.5 = FrameState         R     0x5614fca606d0+5(pr): [%60.1], env=e54.0, next=%65.4
  void                    Deopt              !v    %65.5, Typecheck@0x5614fb001940[Type#2], %60.1   !
BB62   <- [58]
  prom-           %62.0 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p12, e54.0
  prom-           %62.1 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p15 (!refl), e54.0
  val?            %62.2 = StaticCall         !v    remove[0x5614fe041040](missingArg, %62.0, missingArg, %62.1) { 1n 3n } e54.0
  goto BB12
BB63   <- [58]
  fs              %63.0 = FrameState         R     0x5614f8bba980+427: [], env=e54.0
  void                    Deopt              !v    %63.0, CallTarget@0x5614fd34d568[Call#6], %58.3   !
BB66   <- [64]
  prom-           %66.0 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p3 (!refl), e54.0
  prom-           %66.1 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p4, e54.0
  val?            %66.2 = StaticCall         !v    assign[0x5614fb4e4bc0](".AllMTable", %66.0, missingArg, %66.1) { 0 1 3n } e54.0
  goto BB12
BB67   <- [64]
  fs              %67.0 = FrameState         R     0x5614f8bba980+262: [], env=e54.0
  void                    Deopt              !v    %67.0, CallTarget@0x5614fd34d568[Call#4], %64.3   !
BB12   <- [62, 66]
  val?^ | miss    %12.0 = LdVar              eR    anyNA, e54.0
  lgl$#-          %12.1 = Identical                <blt anyNA>, %12.0   <true>
  void                    Branch                   %12.1 -> BB68 (if true) | BB69 (if false)
BB68   <- [12]
  val?^ | miss    %68.0 = LdVar              eR    match, e54.0
  lgl$#-          %68.1 = Identical                %68.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %68.1 -> BB70 (if true) | BB71 (if false)
BB69   <- [12]
  void                    Nop                !     
  lgl$#-          %69.1 = %12.1
  dr              %69.2 = DeadBranchReached@0x5614fd34d568[Test#2]
  goto BB13
BB70   <- [68]
  val?^ | miss    %70.0 = LdVar              eR    direct, e54.0
  lgl$#-          %70.1 = IsType                   %70.0 isA val?~- | miss
  void                    Branch                   %70.1 -> BB72 (if true) | BB73 (if false)
BB71   <- [68]
  void                    Nop                !     
  val?^ | miss    %71.1 = %68.0
  dr              %71.2 = CallTarget@0x5614fd34d568[Call#10]
  goto BB13
BB13   <- [69, 71, 73]
  val?^ | miss    %13.0 = Phi                      %69.1:BB69, %71.1:BB71, %73.1:BB73
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %69.2:BB69, %71.2:BB71, %73.2:BB73
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x5614f8bba980+482: [], env=e54.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB72   <- [70]
  val?~- | miss   %72.0 = CastType           d     dn %70.0
  val?-           %72.1 = Force!<value>            %72.0,    <str->
  val?^ | miss    %72.2 = LdVar              eR    allObjects, e54.0
  val?            %72.3 = Force!<value>      !v    %72.2, e54.0   <str->
  lgl$#-          %72.4 = IsType                   %72.3 isA val?-
  void                    Branch                   %72.4 -> BB74 (if true) | BB75 (if false)
BB73   <- [70]
  void                    Nop                !     
  val?^ | miss    %73.1 = %70.0
  dr              %73.2 = Typecheck@0x5614fd34d568[Type#21]
  goto BB13
BB74   <- [72]
  val?-           %74.0 = CastType           d     dn %72.3   <str->
  val+            %74.1 = CallSafeBuiltin    wed   match(%72.1, %74.0, NA, nil)    <int->
  lgl$#-          %74.2 = IsType                   %74.1 isA int-
  void                    Branch                   %74.2 -> BB76 (if true) | BB77 (if false)
BB75   <- [72]
  fs              %75.0 = FrameState         R     0x5614f8bba980+579: [<blt anyNA>], env=e54.0
  prom-           %75.1 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p6, e54.0
  val?^           %75.2 = CastType                 up %75.1
  prom-           %75.3 = MkArg                    %72.1, .resetInheritedMethods[0x5614fbe03240]_p5 (!refl), e54.0
  val?~           %75.4 = CastType                 up %75.3
  env             e75.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%75.2, x=%75.4, parent=R_BaseNamespace, context 0
  fs              %75.6 = FrameState         R     0x5614f90bbd40+23: [%72.1], env=e75.5, next=%75.0
  fs              %75.7 = FrameState         R     0x5614fb7fa060+5(pr): [%72.3], env=e54.0, next=%75.6
  void                    Deopt              !v    %75.7, Typecheck@0x5614f910ecb0[Type#1], %72.3   !
BB76   <- [74]
  int-            %76.0 = CastType           d     dn %74.1
  val+            %76.1 = CallSafeBuiltin    wed   anyNA(%76.0)    <lgl$->
  lgl$#-          %76.2 = IsType                   %76.1 isA lgl$-
  void                    Branch                   %76.2 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  fs              %77.0 = FrameState         R     0x5614f8bba980+579: [<blt anyNA>], env=e54.0
  prom-           %77.1 = MkArg                    %74.0, .resetInheritedMethods[0x5614fbe03240]_p6 (!refl), e54.0
  val?~           %77.2 = CastType                 up %77.1
  prom-           %77.3 = MkArg                    %72.1, .resetInheritedMethods[0x5614fbe03240]_p5 (!refl), e54.0
  val?~           %77.4 = CastType                 up %77.3
  env             e77.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%77.2, x=%77.4, parent=R_BaseNamespace, context 0
  fs              %77.6 = FrameState         R     0x5614f90bbd40+69: [%74.1], env=e77.5, next=%77.0
  void                    Deopt              !v    %77.6, Typecheck@0x5614fd34d568[Type#23], %74.1   !
BB78   <- [76]
  lgl$-           %78.0 = CastType           d     dn %76.1
  lgl$#-          %78.1 = CheckTrueFalse     e     %78.0
  void                    Branch                   %78.1 -> BB47 (if true) | BB21 (if false)
BB79   <- [76]
  void                    Nop                !     
  val+            %79.1 = %76.1
  dr              %79.2 = Typecheck@0x5614fd34d568[Type#24]
  goto BB19
BB47   <- [78]
  val?^ | miss    %47.0 = LdVar              eR    list2env, e54.0
  lgl$#-          %47.1 = Identical                %47.0, function(x, envir=NULL, parent=parent.frame(),|...
  void                    Branch                   %47.1 -> BB80 (if true) | BB81 (if false)
BB21   <- [78]
  void                    Nop                !     
  goto BB22
BB19   <- [79, 81]
  val?^ | miss    %19.0 = Phi                      %79.1:BB79, %81.1:BB81
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %79.2:BB79, %81.2:BB81
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x5614f8bba980+601: [%76.1], env=e54.0
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB80   <- [47]
  prom-           %80.0 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p9, e54.0
  prom-           %80.1 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p11, e54.0
  val?            %80.2 = StaticCall         !v    list2env[0x5614feec8560](%80.0, %80.1) e54.0
  goto BB22
BB81   <- [47]
  void                    Nop                !     
  val?^ | miss    %81.1 = %47.0
  dr              %81.2 = CallTarget@0x5614fd34d568[Call#11]
  goto BB19
BB22   <- [21, 80]
  val?^ | miss    %22.0 = LdVar              eR    direct, e54.0
  lgl$#-          %22.1 = IsType                   %22.0 isA val?~- | miss
  void                    Branch                   %22.1 -> BB82 (if true) | BB83 (if false)
BB82   <- [22]
  val?~- | miss   %82.0 = CastType           d     dn %22.0
  val?-           %82.1 = Force!<value>            %82.0,    <str->
  int$-           %82.2 = Length                   %82.1
  int$-           %82.3 = Inc                      0L
  lgl$-           %82.4 = Lt                 d     %82.2, %82.3, elided
  lgl$#-          %82.5 = Identical                %82.4, true
  void                    Branch                   %82.5 -> BB46 (if true) | BB25 (if false)
BB83   <- [22]
  fs              %83.0 = FrameState         R     0x5614f8bba980+655: [], env=e54.0
  void                    Deopt              !v    %83.0, Typecheck@0x5614fd34d568[Type#28], %22.0   !
BB46   <- [82]
  void                    Nop                !     
  goto BB44
BB25   <- [82]
  val?            %25.0 = Extract2_1D        wed   %82.1, %82.3, elided
  void                    StVar              lW    d, %25.0, e54.0
  val?^ | miss    %25.2 = LdVar              eR    allTable, e54.0
  lgl$#-          %25.3 = IsType                   %25.2 isA val?~- | miss
  void                    Branch                   %25.3 -> BB84 (if true) | BB85 (if false)
BB44   <- [43, 46]
  void                    Visible            v     
  void                    Return             l     nil
BB84   <- [25]
  val?~- | miss   %84.0 = CastType           d     dn %25.2
  val?-           %84.1 = Force!<value>            %84.0,    <env->
  lgl$#-          %84.2 = IsType                   %84.1 isA val+   <true>
  void                    Branch                   %84.2 -> BB86 (if true) | BB87 (if false)
BB85   <- [25]
  void                    Nop                !     
  val?^ | miss    %85.1 = %25.2
  dr              %85.2 = Typecheck@0x5614fd34d568[Type#29]
  goto BB26
BB86   <- [84]
  val             %86.0 = ChkMissing         e     %25.0
  lgl$#-          %86.1 = IsType                   %86.0 isA val?~- | miss
  void                    Branch                   %86.1 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  void                    Nop                !     
  lgl$#-          %87.1 = %84.2
  dr              %87.2 = DeadBranchReached@0x5614fd34d568[Test#4]
  goto BB26
BB26   <- [85, 87, 89]
  val?^ | miss    %26.0 = Phi                      %85.1:BB85, %87.1:BB87, %89.1:BB89
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %85.2:BB85, %87.2:BB87, %89.2:BB89
  dr              %26.3 = %26.2
  fs              %26.4 = FrameState         R     0x5614f8bba980+709: [%82.1, %82.2, %82.3], env=e54.0
  void                    Deopt              !v    %26.4, %26.3, %26.1   !
BB88   <- [86]
  val-            %88.0 = CastType           d     dn %86.0   <str$->
  val?            %88.1 = Extract2_1D        wed   %84.1, %88.0, elided   <cls>
  void                    StVar              lW    m, %88.1, e54.0
  val?^ | miss    %88.3 = LdVar              eR    is, e54.0
  lgl$#-          %88.4 = Identical                %88.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %88.4 -> BB90 (if true) | BB91 (if false)
BB89   <- [86]
  void                    Nop                !     
  val             %89.1 = %86.0
  dr              %89.2 = Typecheck@0x5614fd34d568[Type#31]
  goto BB26
BB90   <- [88]
  prom-           %90.0 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p7 (!refl), e54.0
  val?            %90.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%90.0, "MethodWithNext") e54.0   <lgl$->
  lgl$#-          %90.2 = IsType                   %90.1 isA lgl$-
  void                    Branch                   %90.2 -> BB92 (if true) | BB93 (if false)
BB91   <- [88]
  fs              %91.0 = FrameState         R     0x5614f8bba980+784: [%82.1, %82.2, %82.3], env=e54.0
  void                    Deopt              !v    %91.0, CallTarget@0x5614fd34d568[Call#13], %88.3   !
BB92   <- [90]
  lgl$-           %92.0 = CastType           d     dn %90.1
  lgl$#-          %92.1 = CheckTrueFalse     e     %92.0
  void                    Branch                   %92.1 -> BB45 (if true) | BB32 (if false)
BB93   <- [90]
  fs              %93.0 = FrameState         R     0x5614f8bba980+821: [%82.1, %82.2, %82.3, %90.1], env=e54.0
  void                    Deopt              !v    %93.0, Typecheck@0x5614fd34d568[Type#34], %90.1   !
BB45   <- [92]
  (cls|spec|blt)  %45.0 = LdFun              !v    as, e54.0
  fs              %45.1 = FrameState         R     0x5614f8bba980+842: [%82.1, %82.2, %82.3, %45.0], env=e54.0
  void                    Deopt              !v    %45.1, DeadCall@0x5614fd34d568[Call#14], %45.0   !
BB32   <- [92]
  void                    Nop                !     
  int$-           %32.1 = %82.3
  goto BB33
BB33   <- [32, 41]
  int$-           %33.0 = Phi                      %32.1:BB32, %41.1:BB41
  int$-           %33.1 = %33.0
  int$-           %33.2 = Inc                      %33.1
  lgl$-           %33.3 = Lt                 d     %82.2, %33.2, elided
  lgl$#-          %33.4 = Identical                %33.3, true
  void                    Branch                   %33.4 -> BB43 (if true) | BB34 (if false)
BB43   <- [33]
  void                    Nop                !     
  goto BB44
BB34   <- [33]
  val?            %34.0 = Extract2_1D        wed   %82.1, %33.2, elided
  void                    StVar              lW    d, %34.0, e54.0
  val?^ | miss    %34.2 = LdVar              eR    allTable, e54.0
  lgl$#-          %34.3 = IsType                   %34.2 isA val?~- | miss
  void                    Branch                   %34.3 -> BB94 (if true) | BB95 (if false)
BB94   <- [34]
  val?~- | miss   %94.0 = CastType           d     dn %34.2
  val?-           %94.1 = Force!<value>            %94.0,    <env->
  lgl$#-          %94.2 = IsType                   %94.1 isA val+   <true>
  void                    Branch                   %94.2 -> BB96 (if true) | BB97 (if false)
BB95   <- [34]
  void                    Nop                !     
  val?^ | miss    %95.1 = %34.2
  dr              %95.2 = Typecheck@0x5614fd34d568[Type#39]
  goto BB35
BB96   <- [94]
  val             %96.0 = ChkMissing         e     %34.0
  lgl$#-          %96.1 = IsType                   %96.0 isA val?~- | miss
  void                    Branch                   %96.1 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  void                    Nop                !     
  lgl$#-          %97.1 = %94.2
  dr              %97.2 = DeadBranchReached@0x5614fd34d568[Test#5]
  goto BB35
BB35   <- [95, 97, 99]
  val?^ | miss    %35.0 = Phi                      %95.1:BB95, %97.1:BB97, %99.1:BB99
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %95.2:BB95, %97.2:BB97, %99.2:BB99
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x5614f8bba980+946: [%82.1, %82.2, %33.2], env=e54.0
  void                    Deopt              !v    %35.4, %35.3, %35.1   !
BB98   <- [96]
  val-            %98.0 = CastType           d     dn %96.0   <str$->
  val?            %98.1 = Extract2_1D        wed   %94.1, %98.0, elided   <val?>
  void                    StVar              lW    m, %98.1, e54.0
  val?^ | miss    %98.3 = LdVar              eR    is, e54.0
  lgl$#-          %98.4 = Identical                %98.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %98.4 -> BB100 (if true) | BB101 (if false)
BB99   <- [96]
  void                    Nop                !     
  val             %99.1 = %96.0
  dr              %99.2 = Typecheck@0x5614fd34d568[Type#41]
  goto BB35
BB100   <- [98]
  prom-           %100.0 = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p8 (!refl), e54.0
  val?            %100.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%100.0, "MethodWithNext") e54.0   <lgl$->
  lgl$#-          %100.2 = IsType                   %100.1 isA lgl$-
  void                    Branch                   %100.2 -> BB102 (if true) | BB103 (if false)
BB101   <- [98]
  fs              %101.0 = FrameState         R     0x5614f8bba980+1021: [%82.1, %82.2, %33.2], env=e54.0
  void                    Deopt              !v    %101.0, CallTarget@0x5614fd34d568[Call#15], %98.3   !
BB102   <- [100]
  lgl$-           %102.0 = CastType           d     dn %100.1
  lgl$#-          %102.1 = CheckTrueFalse     e     %102.0
  void                    Branch                   %102.1 -> BB42 (if true) | BB41 (if false)
BB103   <- [100]
  fs              %103.0 = FrameState         R     0x5614f8bba980+1058: [%82.1, %82.2, %33.2, %100.1], env=e54.0
  void                    Deopt              !v    %103.0, Typecheck@0x5614fd34d568[Type#44], %100.1   !
BB42   <- [102]
  (cls|spec|blt)  %42.0 = LdFun              !v    as, e54.0
  fs              %42.1 = FrameState         R     0x5614f8bba980+1079: [%82.1, %82.2, %33.2, %42.0], env=e54.0
  void                    Deopt              !v    %42.1, DeadCall@0x5614fd34d568[Call#16], %42.0   !
BB41   <- [102]
  void                    Nop                !     
  int$-           %41.1 = %33.2
  goto BB33
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .AllMTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    direct, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allObjects, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    m, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    m, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.list, <0x5614f89d1810>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p10, e0.0
  val?            %0.3  = NamedCall          !     %0.1(%0.2, all.names=true) e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mtable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     setdiff, <0x5614f8dbf350>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p13, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .resetInheritedMethods[0x5614fbe03240]_p14, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allObjects, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    direct, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    allTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .resetInheritedMethods[0x5614fbe03240]                                       │
└──────────────────────────────────────────────────────────────────────────────┘
