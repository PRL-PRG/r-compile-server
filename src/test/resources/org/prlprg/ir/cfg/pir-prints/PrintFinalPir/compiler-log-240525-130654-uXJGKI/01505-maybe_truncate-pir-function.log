
┌──────────────────────────────────────────────────────────────────────────────┐
│ maybe_truncate[0x5614f9a33350]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 3                              │
│ Properties:                                                                  │
├────── Final PIR Version
maybe_truncate[0x5614f9a33350]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, nx(miss)=missingArg, S(miss)=missingArg, ch(miss)=missingArg, parent=?, context 1
  prom-           %0.2  = MkArg                    unboundValue, maybe_truncate[0x5614f9a33350]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    nx, %0.3, e0.1
  void                    StArg              lW    S, """, e0.1
  void                    StArg              lW    ch, "| __truncated__", e0.1
  val?^ | miss    %0.7  = LdVar              eR    anyNA, ?
  lgl$#-          %0.8  = Identical                <blt anyNA>, %0.7   <true>
  void                    Branch                   %0.8 -> BB23 (if true) | BB24 (if false)
BB23   <- [0]
  val?            %23.0 = Force!<lazy>       !vr   %0.3,    <int->
  lgl$#-          %23.1 = IsType                   %23.0 isA int-
  void                    Branch                   %23.1 -> BB25 (if true) | BB26 (if false)
BB24   <- [0]
  fs              %24.0 = FrameState         R     0x5614fd865880+0: [], env=e0.1
  void                    Deopt              !v    %24.0, DeadBranchReached@0x5614fe3c66c0[Test#0], %0.8
BB25   <- [23]
  int-            %25.0 = CastType           d     dn %23.0
  val+            %25.1 = CallSafeBuiltin    wed   anyNA(%25.0)    <lgl$->
  lgl$#-          %25.2 = IsType                   %25.1 isA lgl$-
  void                    Branch                   %25.2 -> BB27 (if true) | BB28 (if false)
BB26   <- [23]
  fs              %26.0 = FrameState         R     0x5614fd865880+69: [<blt anyNA>, %23.0], env=e0.1
  void                    Deopt              !v    %26.0, Typecheck@0x5614fe3c66c0[Type#3], %23.0
BB27   <- [25]
  lgl$-           %27.0 = CastType           d     dn %25.1
  lgl$#-          %27.1 = CheckTrueFalse     e     %27.0
  void                    Branch                   %27.1 -> BB17 (if true) | BB7 (if false)
BB28   <- [25]
  fs              %28.0 = FrameState         R     0x5614fd865880+91: [%25.1], env=e0.1
  void                    Deopt              !v    %28.0, Typecheck@0x5614fe3c66c0[Type#4], %25.1
BB17   <- [27]
  val?^ | miss    %17.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %17.1 = Identical                <blt is.na>, %17.0   <@?>
  void                    Branch                   %17.1 -> BB19 (if true) | BB18 (if false)
BB7   <- [27]
  void                    Nop                !     
  lgl$#-          %7.1  = true
  goto BB8
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    nx, e0.1
  val?            %19.1 = Force!             !v    %19.0, e0.1   <val?_>
  lgl$#-          %19.2 = IsType                   %19.1 isA val?+
  void                    Branch                   %19.2 -> BB29 (if true) | BB30 (if false)
BB18   <- [17]
  (cls|spec|blt)  %18.0 = LdFun              !v    is.na, e0.1
  fs              %18.1 = FrameState         R     0x5614fd865880+141: [%18.0], env=e0.1
  void                    Deopt              !v    %18.1, DeadCall@0x5614fe3c66c0[Call#2], %18.0
BB8   <- [7, 29]
  lgl             %8.0  = Phi                      %7.1:BB7, %29.3:BB29   <lgl$->
  lgl             %8.1  = %8.0
  lgl$#-          %8.2  = IsType                   %8.1 isA lgl$-
  void                    Branch                   %8.2 -> BB31 (if true) | BB32 (if false)
BB29   <- [19]
  val?+           %29.0 = CastType           d     dn %19.1   <val?_>
  lgl+            %29.1 = CallSafeBuiltin    wed   is.na(%29.0)    <val?_>
  lgl             %29.2 = Not                wed   %29.1, elided
  lgl             %29.3 = %29.2
  goto BB8
BB30   <- [19]
  fs              %30.0 = FrameState         R     0x5614fd865880+182: [<blt is.na>, %19.1], env=e0.1
  void                    Deopt              !v    %30.0, Typecheck@0x5614fe3c66c0[Type#6], %19.1   !
BB31   <- [8]
  lgl$-           %31.0 = CastType           d     dn %8.1
  void                    StVar              lW    ok, %31.0, e0.1
  val?^ | miss    %31.2 = LdVar              eR    any, e0.1
  lgl$#-          %31.3 = Identical                <blt any>, %31.2   <true>
  void                    Branch                   %31.3 -> BB33 (if true) | BB34 (if false)
BB32   <- [8]
  fs              %32.0 = FrameState         R     0x5614fd865880+210: [%8.1], env=e0.1
  void                    Deopt              !v    %32.0, Typecheck@0x5614fe3c66c0[Type#17], %8.1   !
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    &, e0.1
  lgl$#-          %33.1 = Identical                <blt &>, %33.0   <true>
  void                    Branch                   %33.1 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  void                    Nop                !     
  lgl$#-          %34.1 = %31.3
  dr              %34.2 = DeadBranchReached@0x5614fe3c66c0[Test#2]
  goto BB11
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    nx, e0.1
  lgl$#-          %35.1 = IsType                   %35.0 isA int~-
  void                    Branch                   %35.1 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  lgl$#-          %36.1 = %33.1
  dr              %36.2 = DeadBranchReached@0x5614fe3c66c0[Test#3]
  goto BB11
BB11   <- [34, 36, 38, 40]
  val?^ | miss    %11.0 = Phi                      %34.1:BB34, %36.1:BB36, %38.1:BB38, %40.1:BB40
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %34.2:BB34, %36.2:BB36, %38.2:BB38, %40.2:BB40
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x5614fd865880+219: [], env=e0.1
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB37   <- [35]
  int~-           %37.0 = CastType           d     dn %35.0
  int-            %37.1 = Force!<wrapped>          %37.0,    <int->
  val?^ | miss    %37.2 = LdVar              eR    nchar.max, e0.1
  lgl$#-          %37.3 = IsType                   %37.2 isA real$~-
  void                    Branch                   %37.3 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  void                    Nop                !     
  val?^ | miss    %38.1 = %35.0
  dr              %38.2 = Typecheck@0x5614fe3c66c0[Type#18]
  goto BB11
BB39   <- [37]
  real$~-         %39.0 = CastType           d     dn %37.2
  real$-          %39.1 = Force!<wrapped>          %39.0,    <real$->
  lgl-            %39.2 = Gt                 wed   %37.1, %39.1, elided   <lgl->
  val+            %39.3 = CallSafeBuiltin    wed   &(%31.0, %39.2)    <lgl->
  void                    StVar              lW    lrg, %39.3, e0.1
  val?            %39.5 = CallBuiltin        !v    any(%39.3) e0.1   <lgl$->
  lgl$#-          %39.6 = IsType                   %39.5 isA lgl$-
  void                    Branch                   %39.6 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  void                    Nop                !     
  val?^ | miss    %40.1 = %37.2
  dr              %40.2 = Typecheck@0x5614fe3c66c0[Type#19]
  goto BB11
BB41   <- [39]
  lgl$-           %41.0 = CastType           d     dn %39.5
  lgl$#-          %41.1 = CheckTrueFalse     e     %41.0
  void                    Branch                   %41.1 -> BB16 (if true) | BB15 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x5614fd865880+442: [%39.5], env=e0.1
  void                    Deopt              !v    %42.0, Typecheck@0x5614fe3c66c0[Type#22], %39.5   !
BB16   <- [41]
  (cls|spec|blt)  %16.0 = LdFun              !v    nchar, e0.1
  fs              %16.1 = FrameState         R     0x5614fd865880+463: [%16.0], env=e0.1
  void                    Deopt              !v    %16.1, DeadCall@0x5614fe3c66c0[Call#6], %16.0   !
BB15   <- [41]
  val?^ | miss    %15.0 = LdVar              eR    x, e0.1
  void                    Visible            v     
  val?            %15.2 = Force!<wrapped>    !     %15.0, e0.1   <str->
  void                    Return             l     %15.2
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nchar.w, <0x561504ae22a0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, maybe_truncate[0x5614f9a33350]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3

│ maybe_truncate[0x5614f9a33350]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
