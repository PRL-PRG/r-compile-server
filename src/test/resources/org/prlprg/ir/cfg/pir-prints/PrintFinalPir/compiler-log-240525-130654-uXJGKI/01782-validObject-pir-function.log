
┌──────────────────────────────────────────────────────────────────────────────┐
│ validObject[0x561505be9030]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
validObject[0x561505be9030]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, test(miss)=false, complete(miss)=false, parent=<env 0x5614f8eae378>, context 1
  cls             %0.2  = MkCls                    anyStrings, e0.1
  val?^ | miss    %0.3  = LdVar              eR    class, <env 0x5614f8eae378>
  lgl$#-          %0.4  = Identical                <blt class>, %0.3   <true>
  void                    Branch                   %0.4 -> BB308 (if true) | BB309 (if false)
BB308   <- [0]
  val?            %308.0 = Force!<lazy>       !vr   %0.0,    <(cls|other)>
  val?            %308.1 = CallBuiltin        !v    class(%308.0) e0.1   <str$+>
  void                    StVar              lW    Class, %308.1, e0.1
  val?^ | miss    %308.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %308.4 = Identical                %308.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %308.4 -> BB310 (if true) | BB311 (if false)
BB309   <- [0]
  fs              %309.0 = FrameState         R     0x56150519b9d0+0: [], env=e0.1
  void                    Deopt              !v    %309.0, DeadBranchReached@0x5615050d2fd0[Test#0], %0.4
BB310   <- [308]
  prom-           %310.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p2 (!refl), e0.1
  val?            %310.1 = StaticCall         !v    getClassDef[0x5615052aeb20](%310.0) e0.1   <other>
  void                    StVar              lW    classDef, %310.1, e0.1
  val?^ | miss    %310.3 = LdVar              eR    .classEnv, e0.1
  lgl$#-          %310.4 = Identical                %310.3, function(Class, default=.requirePackage("metho|...
  void                    Branch                   %310.4 -> BB312 (if true) | BB313 (if false)
BB311   <- [308]
  fs              %311.0 = FrameState         R     0x56150519b9d0+105: [], env=e0.1
  void                    Deopt              !v    %311.0, CallTarget@0x5615050d2fd0[Call#1], %308.3   !
BB312   <- [310]
  prom-           %312.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p3 (!refl), e0.1
  ct              %312.1 = PushContext        lCL   %312.0, .classEnv(classDef), function(Class, default=.requirePackage("metho|..., e0.1
  val?^           %312.2 = CastType                 up %312.0
  env             e312.3 = MkEnv              l     Class=%312.2, default(miss)=missingArg, mustFind(miss)=missingArg, parent=<env 0x5614f8eae378>, context 1
  prom-           %312.4 = MkArg                    unboundValue, validObject[0x561505be9030]_p100, e312.3
  val?^ | miss    %312.5 = CastType                 up %312.4
  void                    StArg              lW    default, %312.5, e312.3
  void                    StArg              lW    mustFind, true, e312.3
  val?^ | miss    %312.8 = LdVar              eR    is.character, <env 0x5614f8eae378>
  lgl$#-          %312.9 = Identical                <blt is.character>, %312.8   <true>
  void                    Branch                   %312.9 -> BB314 (if true) | BB315 (if false)
BB313   <- [310]
  fs              %313.0 = FrameState         R     0x56150519b9d0+151: [], env=e0.1
  void                    Deopt              !v    %313.0, CallTarget@0x5615050d2fd0[Call#2], %310.3   !
BB314   <- [312]
  lgl$#-          %314.0 = CallSafeBuiltin    wed   is.character(%310.1)    <lgl$->
  void                    Branch                   %314.0 -> BB304 (if true) | BB11 (if false)
BB315   <- [312]
  fs              %315.0 = FrameState         R     0x56150519b9d0+183: [], env=e0.1
  fs              %315.1 = FrameState         R     0x5614f8babba0+0: [], env=e312.3, next=%315.0
  void                    Deopt              !v    %315.1, DeadBranchReached@0x5614fbab95c0[Test#0], %312.9   !
BB304   <- [314]
  val?^ | miss    %304.0 = LdVar              eR    packageSlot, <env 0x5614f8eae378>
  lgl$#-          %304.1 = Identical                %304.0, function(object) <(rir::DispatchTable*)0x5614f|...
  void                    Branch                   %304.1 -> BB316 (if true) | BB317 (if false)
BB11   <- [314]
  (cls|spec|blt)  %11.0 = LdFun              !v    @, <0x5614f88a6bd8>, <env 0x5614f8eae378>
  prom-           %11.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p102, e312.3
  prom-           %11.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p103, e312.3
  val?            %11.3 = Call               !v    %11.0(%11.1, %11.2) e312.3   <str$->
  val?            %11.4 = %11.3
  goto BB12
BB316   <- [304]
  prom-           %316.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p101, e312.3
  ct              %316.1 = PushContext        lCL   %316.0, packageSlot(Class), function(object) <(rir::DispatchTable*)0x5614f|..., e312.3
  val?^           %316.2 = CastType                 up %316.0
  val?^ | miss    %316.3 = LdVar              eR    attr, <env 0x5614f8eae378>
  lgl$#-          %316.4 = Identical                <blt attr>, %316.3   <true>
  void                    Branch                   %316.4 -> BB320 (if true) | BB321 (if false)
BB317   <- [304]
  fs              %317.0 = FrameState         R     0x56150519b9d0+183: [], env=e0.1
  fs              %317.1 = FrameState         R     0x5614f8babba0+91: [%314.0], env=e312.3, next=%317.0
  void                    Deopt              !v    %317.1, CallTarget@0x5614fbab95c0[Call#3], %304.0   !
BB12   <- [11, 320]
  val?            %12.0 = Phi                      %11.4:BB11, %320.3:BB320   <(nil|str)->
  val?            %12.1 = %12.0
  lgl$-           %12.2 = Is                       %12.1, NULL
  void                    StVar              lW    package, %12.1, e312.3
  val             %12.4 = ChkMissing         e     %12.1
  lgl$#-          %12.5 = CheckTrueFalse     e     %12.2
  void                    Branch                   %12.5 -> BB292 (if true) | BB15 (if false)
BB320   <- [316]
  env             e320.0 = MkEnv              l     object=%316.2, parent=<env 0x5614f8eae378>, context 1
  val?            %320.1 = CallBuiltin        !v    attr(%310.1, "package") e320.0   <(nil|str)->
  val?            %320.2 = PopContext         C     %320.1, %316.1   <(nil|str)->
  val?            %320.3 = %320.2
  goto BB12
BB321   <- [316]
  fs              %321.0 = FrameState         R     0x56150519b9d0+183: [], env=e0.1
  fs              %321.1 = FrameState         R     0x5614f8babba0+181: [], env=e312.3, next=%321.0
  env             e321.2 = (MkEnv)            l     object=%316.2, parent=<env 0x5614f8eae378>, context 1
  fs              %321.3 = FrameState         R     0x5614f889a8a0+17: [<blt attr>, %316.4], env=e321.2, next=%321.1
  void                    Deopt              !v    %321.3, DeadBranchReached@0x5614fb090af8[Test#0], %316.4   !
BB292   <- [12]
  val?^ | miss    %292.0 = LdVar              eR    default, e312.3
  val?            %292.1 = Force!<lazy>       !v    %292.0, e312.3   <env->
  void                    StVar              lW    value, %292.1, e312.3
  val?^ | miss    %292.3 = LdVar              eR    getClassDef, e312.3
  lgl$#-          %292.4 = Identical                %292.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %292.4 -> BB324 (if true) | BB325 (if false)
BB15   <- [12]
  val?^ | miss    %15.0 = LdVar              eR    .requirePackage, e312.3
  lgl$#-          %15.1 = Identical                %15.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Branch                   %15.1 -> BB318 (if true) | BB319 (if false)
BB324   <- [292]
  prom-           %324.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p105, e312.3
  prom-           %324.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p106, e312.3
  val?            %324.2 = StaticCall         !v    getClassDef[0x5614fea1bf70](%324.0, %324.1, nil) e312.3   <other>
  lgl$-           %324.3 = Is                       %324.2, NULL
  lgl$-           %324.4 = AsLogical                %324.3
  lgl$#-          %324.5 = Identical                %324.4, false
  void                    StVar              lW    def, %324.2, e312.3
  val             %324.7 = ChkMissing         e     %324.2
  lgl$#-          %324.8 = CheckTrueFalse     e     %324.3
  void                    Branch                   %324.8 -> BB303 (if true) | BB295 (if false)
BB325   <- [292]
  fs              %325.0 = FrameState         R     0x56150519b9d0+183: [], env=e0.1
  fs              %325.1 = FrameState         R     0x5614f8babba0+285: [], env=e312.3, next=%325.0
  void                    Deopt              !v    %325.1, CallTarget@0x5614fbab95c0[Call#5], %292.3   !
BB318   <- [15]
  prom-           %318.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p104 (!refl), e312.3
  val?            %318.1 = StaticCall         !v    .requirePackage[0x5614fdb7a5a0](%318.0) e312.3   <env->
  val?            %318.2 = %318.1
  goto BB16
BB319   <- [15]
  fs              %319.0 = FrameState         R     0x56150519b9d0+183: [], env=e0.1
  fs              %319.1 = FrameState         R     0x5614f8babba0+195: [], env=e312.3, next=%319.0
  void                    Deopt              !v    %319.1, CallTarget@0x5614fbab95c0[Call#4], %15.0   !
BB303   <- [324]
  fs              %303.0 = FrameState         R     0x56150519b9d0+183: [], env=e0.1
  val?^ | miss    %303.1 = LdVar              eR    .GlobalEnv, e312.3
  val?            %303.2 = Force!             !v    %303.1, e312.3   <val?_>
  void                    StVar              lW    value, %303.2, e312.3
  (cls|spec|blt)  %303.4 = LdFun              !v    getClassDef, e312.3
  fs              %303.5 = FrameState         R     0x5614f8babba0+399: [%303.4], env=e312.3, next=%303.0
  void                    Deopt              !v    %303.5, DeadCall@0x5614fbab95c0[Call#6], %303.4   !
BB295   <- [324]
  void                    Branch                   %324.5 -> BB302 (if true) | BB296 (if false)
BB16   <- [318, 336]
  val?            %16.0 = Phi                      %318.2:BB318, %336.2:BB336
  val?            %16.1 = %16.0
  val?            %16.2 = PopContext         C     %16.1, %312.1   <env->
  void                    StVar              lW    where, %16.2, e0.1
  void                    StVar              lW    anyStrings, %0.2, e0.1
  val?^ | miss    %16.5 = LdVar              eR    character, e0.1
  lgl$#-          %16.6 = Identical                %16.5, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %16.6 -> BB322 (if true) | BB323 (if false)
BB302   <- [295]
  void                    Nop                !     
  lgl$-           %302.1 = %324.4
  goto BB297
BB296   <- [295]
  val?^ | miss    %296.0 = LdVar              eR    mustFind, e312.3
  val?            %296.1 = Force!             !v    %296.0, e312.3   <val?_>
  lgl$-           %296.2 = AsLogical          e     %296.1
  lgl$-           %296.3 = LAnd                     %324.4, %296.2
  lgl$-           %296.4 = %296.3
  goto BB297
BB322   <- [16]
  str-            %322.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    errors, %322.0, e0.1
  (cls|spec|blt)  %322.2 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %322.3 = MkArg                    unboundValue, validObject[0x561505be9030]_p4, e0.1
  prom-           %322.4 = MkArg                    unboundValue, validObject[0x561505be9030]_p5, e0.1
  val?            %322.5 = Call               !v    %322.2(%322.3, %322.4) e0.1   <vec+>
  void                    StVar              lW    slotTypes, %322.5, e0.1
  lgl$#-          %322.7 = IsType                   %322.5 isA val?+
  val?^ | miss    %322.8 = LdVar              eR    names, e0.1
  lgl$#-          %322.9 = Identical                <blt names>, %322.8   <true>
  void                    Branch                   %322.9 -> BB326 (if true) | BB327 (if false)
BB323   <- [16]
  fs              %323.0 = FrameState         R     0x56150519b9d0+222: [], env=e0.1
  void                    Deopt              !v    %323.0, CallTarget@0x5615050d2fd0[Call#3], %16.5   !
BB297   <- [302, 296]
  lgl$-           %297.0 = Phi                      %296.4:BB296, %302.1:BB302
  lgl$-           %297.1 = %297.0
  lgl$#-          %297.2 = CheckTrueFalse     e     %297.1
  void                    Branch                   %297.2 -> BB301 (if true) | BB300 (if false)
BB326   <- [322]
  val             %326.0 = ChkMissing         e     %322.5
  void                    Branch                   %322.7 -> BB328 (if true) | BB329 (if false)
BB327   <- [322]
  void                    Nop                !     
  lgl$#-          %327.1 = %322.9
  dr              %327.2 = DeadBranchReached@0x5615050d2fd0[Test#1]
  goto BB19
BB301   <- [297]
  fs              %301.0 = FrameState         R     0x56150519b9d0+183: [], env=e0.1
  (cls|spec|blt)  %301.1 = LdFun              !v    stop, e312.3
  fs              %301.2 = FrameState         R     0x5614f8babba0+694: [%301.1], env=e312.3, next=%301.0
  void                    Deopt              !v    %301.2, DeadCall@0x5614fbab95c0[Call#10], %301.1   !
BB300   <- [297]
  val?^ | miss    %300.0 = LdVar              eR    value, e312.3
  lgl$#-          %300.1 = IsType                   %300.0 isA val?~- | miss
  void                    Branch                   %300.1 -> BB336 (if true) | BB337 (if false)
BB328   <- [326]
  val?+           %328.0 = CastType           d     dn %322.5   <vec+>
  val+            %328.1 = CallSafeBuiltin    wed   names(%328.0)    <str->
  void                    StVar              lW    slotNames, %328.1, e0.1
  val?^ | miss    %328.3 = LdVar              eR    c, e0.1
  lgl$#-          %328.4 = Identical                <blt c>, %328.3   <true>
  void                    Branch                   %328.4 -> BB330 (if true) | BB331 (if false)
BB329   <- [326]
  void                    Nop                !     
  val?            %329.1 = %322.5
  dr              %329.2 = Typecheck@0x5615050d2fd0[Type#10]
  goto BB19
BB19   <- [327, 329]
  val?^ | miss    %19.0 = Phi                      %327.1:BB327, %329.1:BB329
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %327.2:BB327, %329.2:BB329
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x56150519b9d0+314: [], env=e0.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB336   <- [300]
  val?~- | miss   %336.0 = CastType           d     dn %300.0
  val?-           %336.1 = Force!<value>            %336.0,    <env->
  val?-           %336.2 = %336.1
  goto BB16
BB337   <- [300]
  fs              %337.0 = FrameState         R     0x56150519b9d0+183: [], env=e0.1
  fs              %337.1 = FrameState         R     0x5614f8babba0+678: [%297.1], env=e312.3, next=%337.0
  void                    Deopt              !v    %337.1, Typecheck@0x5614fbab95c0[Type#34], %300.0   !
BB330   <- [328]
  val?^ | miss    %330.0 = LdVar              eR    attributes, e0.1
  lgl$#-          %330.1 = Identical                <blt attributes>, %330.0   <true>
  void                    Branch                   %330.1 -> BB332 (if true) | BB333 (if false)
BB331   <- [328]
  void                    Nop                !     
  lgl$#-          %331.1 = %328.4
  dr              %331.2 = DeadBranchReached@0x5615050d2fd0[Test#2]
  goto BB21
BB332   <- [330]
  val?^ | miss    %332.0 = LdVar              eR    object, e0.1
  val?            %332.1 = Force!<wrapped>    !v    %332.0, e0.1   <(cls|other)>
  val?            %332.2 = CallBuiltin        !v    attributes(%332.1) e0.1   <vec+>
  lgl$#-          %332.3 = IsType                   %332.2 isA val?+
  void                    Branch                   %332.3 -> BB334 (if true) | BB335 (if false)
BB333   <- [330]
  void                    Nop                !     
  lgl$#-          %333.1 = %330.1
  dr              %333.2 = DeadBranchReached@0x5615050d2fd0[Test#4]
  goto BB21
BB21   <- [331, 333]
  val?^ | miss    %21.0 = Phi                      %331.1:BB331, %333.1:BB333
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %331.2:BB331, %333.2:BB333
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x56150519b9d0+419: [], env=e0.1
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB334   <- [332]
  val?+           %334.0 = CastType           d     dn %332.2   <vec+>
  val+            %334.1 = CallSafeBuiltin    wed   names(%334.0)    <str->
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %334.2 = CallSafeBuiltin    wed   c(".Data", ".S3Class", %334.1)    <str->
  void                    StVar              lW    attrNames, %334.2, e0.1
  val?^ | miss    %334.4 = LdVar              eR    anyNA, e0.1
  lgl$#-          %334.5 = Identical                <blt anyNA>, %334.4   <true>
  void                    Branch                   %334.5 -> BB338 (if true) | BB339 (if false)
BB335   <- [332]
  fs              %335.0 = FrameState         R     0x56150519b9d0+652: [<blt c>, ".Data", ".S3Class", <blt names>, %332.2], env=e0.1
  void                    Deopt              !v    %335.0, Typecheck@0x5615050d2fd0[Type#21], %332.2   !
BB338   <- [334]
  val?^ | miss    %338.0 = LdVar              eR    match, e0.1
  lgl$#-          %338.1 = Identical                %338.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %338.1 -> BB340 (if true) | BB341 (if false)
BB339   <- [334]
  void                    Nop                !     
  lgl$#-          %339.1 = %334.5
  dr              %339.2 = DeadBranchReached@0x5615050d2fd0[Test#5]
  goto BB25
BB340   <- [338]
  val?^ | miss    %340.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %340.1 = IsType                   %340.0 isA val?~- | miss
  void                    Branch                   %340.1 -> BB342 (if true) | BB343 (if false)
BB341   <- [338]
  void                    Nop                !     
  val?^ | miss    %341.1 = %338.0
  dr              %341.2 = CallTarget@0x5615050d2fd0[Call#14]
  goto BB25
BB25   <- [339, 341, 343]
  val?^ | miss    %25.0 = Phi                      %339.1:BB339, %341.1:BB341, %343.1:BB343
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %339.2:BB339, %341.2:BB341, %343.2:BB343
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x56150519b9d0+710: [], env=e0.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB342   <- [340]
  val?~- | miss   %342.0 = CastType           d     dn %340.0
  val?-           %342.1 = Force!<value>            %342.0,    <str->
  val+            %342.2 = CallSafeBuiltin    wed   match(%342.1, %334.2, NA, nil)    <int->
  void                    StVar              lW    idx, %342.2, e0.1
  lgl$#-          %342.4 = IsType                   %342.2 isA int-
  void                    Branch                   %342.4 -> BB344 (if true) | BB345 (if false)
BB343   <- [340]
  void                    Nop                !     
  val?^ | miss    %343.1 = %340.0
  dr              %343.2 = Typecheck@0x5615050d2fd0[Type#27]
  goto BB25
BB344   <- [342]
  int-            %344.0 = CastType           d     dn %342.2
  val+            %344.1 = CallSafeBuiltin    wed   anyNA(%344.0)    <lgl$->
  lgl$#-          %344.2 = IsType                   %344.1 isA lgl$-
  void                    Branch                   %344.2 -> BB346 (if true) | BB347 (if false)
BB345   <- [342]
  fs              %345.0 = FrameState         R     0x56150519b9d0+823: [<blt anyNA>, %342.2], env=e0.1
  void                    Deopt              !v    %345.0, Typecheck@0x5615050d2fd0[Type#29], %342.2   !
BB346   <- [344]
  lgl$-           %346.0 = CastType           d     dn %344.1
  lgl$#-          %346.1 = CheckTrueFalse     e     %346.0
  void                    Branch                   %346.1 -> BB287 (if true) | BB31 (if false)
BB347   <- [344]
  void                    Nop                !     
  val+            %347.1 = %344.1
  dr              %347.2 = Typecheck@0x5615050d2fd0[Type#30]
  goto BB29
BB287   <- [346]
  val?^ | miss    %287.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %287.1 = Identical                <blt is.na>, %287.0   <@?>
  void                    Branch                   %287.1 -> BB289 (if true) | BB288 (if false)
BB31   <- [346]
  val?^ | miss    %31.0 = LdVar              eR    seq_along, e0.1
  lgl$#-          %31.1 = Identical                <blt seq_along>, %31.0   <true>
  void                    Branch                   %31.1 -> BB348 (if true) | BB349 (if false)
BB29   <- [347, 349, 351]
  val?^ | miss    %29.0 = Phi                      %347.1:BB347, %349.1:BB349, %351.1:BB351
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %347.2:BB347, %349.2:BB349, %351.2:BB351
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x56150519b9d0+840: [%344.1], env=e0.1
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
BB289   <- [287]
  lgl-            %289.0 = CallSafeBuiltin    wed   is.na(%344.0)    <val?_>
  void                    StVar              lW    badSlots, %289.0, e0.1
  val?^ | miss    %289.2 = LdVar              eR    c, e0.1
  lgl$#-          %289.3 = Identical                <blt c>, %289.2   <@?>
  void                    Branch                   %289.3 -> BB291 (if true) | BB290 (if false)
BB288   <- [287]
  (cls|spec|blt)  %288.0 = LdFun              !v    is.na, e0.1
  fs              %288.1 = FrameState         R     0x56150519b9d0+884: [%288.0], env=e0.1
  void                    Deopt              !v    %288.1, DeadCall@0x5615050d2fd0[Call#15], %288.0   !
BB348   <- [31]
  val?^ | miss    %348.0 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %348.1 = IsType                   %348.0 isA val?~+ | miss
  void                    Branch                   %348.1 -> BB350 (if true) | BB351 (if false)
BB349   <- [31]
  void                    Nop                !     
  lgl$#-          %349.1 = %31.1
  dr              %349.2 = DeadBranchReached@0x5615050d2fd0[Test#12]
  goto BB29
BB291   <- [289]
  val?^ | miss    %291.0 = LdVar              eR    errors, e0.1
  val?            %291.1 = Force!             !v    %291.0, e0.1   <val?_>
  (cls|spec|blt)  %291.2 = LdFun              !v    paste, e0.1
  fs              %291.3 = FrameState         R     0x56150519b9d0+1045: [<blt c>, %291.1, %291.2], env=e0.1
  void                    Deopt              !v    %291.3, DeadCall@0x5615050d2fd0[Call#19], %291.2   !
BB290   <- [289]
  (cls|spec|blt)  %290.0 = LdFun              !v    c, e0.1
  fs              %290.1 = FrameState         R     0x56150519b9d0+989: [%290.0], env=e0.1
  void                    Deopt              !v    %290.1, DeadCall@0x5615050d2fd0[Call#16], %290.0   !
BB350   <- [348]
  val?~+ | miss   %350.0 = CastType           d     dn %348.0
  val?+           %350.1 = Force!<value>            %350.0,    <vec+>
  val?            %350.2 = CallBuiltin        !v    seq_along(%350.1) e0.1   <int->
  val?+           %350.3 = ToForSeq           e     %350.2
  int$-           %350.4 = Length                   %350.3
  int$-           %350.5 = Inc                      0L
  lgl$-           %350.6 = Lt                 d     %350.4, %350.5, elided   <false>
  lgl$#-          %350.7 = Identical                %350.6, true
  void                    Branch                   %350.7 -> BB353 (if true) | BB352 (if false)
BB351   <- [348]
  void                    Nop                !     
  val?^ | miss    %351.1 = %348.0
  dr              %351.2 = Typecheck@0x5615050d2fd0[Type#58]
  goto BB29
BB353   <- [350]
  fs              %353.0 = FrameState         R     0x56150519b9d0+1356: [%350.2], env=e0.1
  void                    Deopt              !v    %353.0, DeadBranchReached@0x5615050d2fd0[Test#13], %350.7   !
BB352   <- [350]
  val?            %352.0 = Extract2_1D        wed   %350.3, %350.5, elided
  void                    StVar              lW    i, %352.0, e0.1
  val?^ | miss    %352.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %352.3 = IsType                   %352.2 isA val?~+ | miss
  void                    Branch                   %352.3 -> BB354 (if true) | BB355 (if false)
BB354   <- [352]
  val?~+ | miss   %354.0 = CastType           d     dn %352.2
  val?+           %354.1 = Force!<value>            %354.0,    <vec+>
  lgl$#-          %354.2 = IsType                   %354.1 isA val+   <true>
  void                    Branch                   %354.2 -> BB356 (if true) | BB357 (if false)
BB355   <- [352]
  void                    Nop                !     
  val?^ | miss    %355.1 = %352.2
  dr              %355.2 = Typecheck@0x5615050d2fd0[Type#60]
  goto BB34
BB356   <- [354]
  val             %356.0 = ChkMissing         e     %352.0
  lgl$#-          %356.1 = IsType                   %356.0 isA int$-
  void                    Branch                   %356.1 -> BB358 (if true) | BB359 (if false)
BB357   <- [354]
  void                    Nop                !     
  lgl$#-          %357.1 = %354.2
  dr              %357.2 = DeadBranchReached@0x5615050d2fd0[Test#14]
  goto BB34
BB34   <- [355, 357, 359]
  val?^ | miss    %34.0 = Phi                      %355.1:BB355, %357.1:BB357, %359.1:BB359
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %355.2:BB355, %357.2:BB357, %359.2:BB359
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x56150519b9d0+1401: [%350.3, %350.4, %350.5], env=e0.1
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB358   <- [356]
  int$-           %358.0 = CastType           d     dn %356.0
  val?            %358.1 = Extract2_1D        wed   %354.1, %358.0, elided   <str$+>
  void                    StVar              lW    classi, %358.1, e0.1
  val?^ | miss    %358.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %358.4 = Identical                %358.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %358.4 -> BB360 (if true) | BB361 (if false)
BB359   <- [356]
  void                    Nop                !     
  val             %359.1 = %356.0
  dr              %359.2 = Typecheck@0x5615050d2fd0[Type#62]
  goto BB34
BB360   <- [358]
  prom-           %360.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p8 (!refl), e0.1
  prom-           %360.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p9, e0.1
  val?            %360.2 = StaticCall         !v    getClassDef[0x5614ffa2a5c0](%360.0, %360.1) { 0 1n } e0.1   <other>
  lgl$-           %360.3 = Is                       %360.2, NULL
  void                    StVar              lW    classDefi, %360.2, e0.1
  val             %360.5 = ChkMissing         e     %360.2
  lgl$#-          %360.6 = CheckTrueFalse     e     %360.3
  void                    Branch                   %360.6 -> BB284 (if true) | BB40 (if false)
BB361   <- [358]
  fs              %361.0 = FrameState         R     0x56150519b9d0+1476: [%350.3, %350.4, %350.5], env=e0.1
  void                    Deopt              !v    %361.0, CallTarget@0x5615050d2fd0[Call#22], %358.3   !
BB284   <- [360]
  val?^ | miss    %284.0 = LdVar              eR    c, e0.1
  lgl$#-          %284.1 = Identical                <blt c>, %284.0   <@?>
  void                    Branch                   %284.1 -> BB286 (if true) | BB285 (if false)
BB40   <- [360]
  val?^ | miss    %40.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %40.1 = IsType                   %40.0 isA val?~- | miss
  void                    Branch                   %40.1 -> BB362 (if true) | BB363 (if false)
BB286   <- [284]
  val?^ | miss    %286.0 = LdVar              eR    errors, e0.1
  val?            %286.1 = Force!             !v    %286.0, e0.1   <val?_>
  (cls|spec|blt)  %286.2 = LdFun              !v    paste0, e0.1
  fs              %286.3 = FrameState         R     0x56150519b9d0+1649: [%350.3, %350.4, %350.5, <blt c>, %286.1, %286.2], env=e0.1
  void                    Deopt              !v    %286.3, DeadCall@0x5615050d2fd0[Call#25], %286.2   !
BB285   <- [284]
  (cls|spec|blt)  %285.0 = LdFun              !v    c, e0.1
  fs              %285.1 = FrameState         R     0x56150519b9d0+1593: [%350.3, %350.4, %350.5, %285.0], env=e0.1
  void                    Deopt              !v    %285.1, DeadCall@0x5615050d2fd0[Call#23], %285.0   !
BB362   <- [40]
  val?~- | miss   %362.0 = CastType           d     dn %40.0
  val?-           %362.1 = Force!<value>            %362.0,    <str->
  lgl$#-          %362.2 = IsType                   %362.1 isA val+   <true>
  void                    Branch                   %362.2 -> BB364 (if true) | BB365 (if false)
BB363   <- [40]
  void                    Nop                !     
  val?^ | miss    %363.1 = %40.0
  dr              %363.2 = Typecheck@0x5615050d2fd0[Type#83]
  goto BB38
BB364   <- [362]
  val?^ | miss    %364.0 = LdVar              eR    i, e0.1
  lgl$#-          %364.1 = IsType                   %364.0 isA int$-
  void                    Branch                   %364.1 -> BB366 (if true) | BB367 (if false)
BB365   <- [362]
  void                    Nop                !     
  lgl$#-          %365.1 = %362.2
  dr              %365.2 = DeadBranchReached@0x5615050d2fd0[Test#18]
  goto BB38
BB38   <- [363, 365, 367]
  val?^ | miss    %38.0 = Phi                      %363.1:BB363, %365.1:BB365, %367.1:BB367
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %363.2:BB363, %365.2:BB365, %367.2:BB367
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x56150519b9d0+1535: [%350.3, %350.4, %350.5], env=e0.1
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB366   <- [364]
  int$-           %366.0 = CastType           d     dn %364.0
  val?            %366.1 = Extract2_1D        wed   %362.1, %366.0, elided   <str$->
  void                    StVar              lW    namei, %366.1, e0.1
  val?^ | miss    %366.3 = LdVar              eR    try, e0.1
  lgl$#-          %366.4 = Identical                %366.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %366.4 -> BB368 (if true) | BB369 (if false)
BB367   <- [364]
  void                    Nop                !     
  val?^ | miss    %367.1 = %364.0
  dr              %367.2 = Typecheck@0x5615050d2fd0[Type#85]
  goto BB38
BB368   <- [366]
  prom-           %368.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p10, e0.1
  ct              %368.1 = PushContext        lCL   %368.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %368.2 = CastType                 up %368.0
  env             e368.3 = MkEnv              l     expr=%368.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %368.4 = MkArg                    unboundValue, validObject[0x561505be9030]_p65, e368.3
  val?^ | miss    %368.5 = CastType                 up %368.4
  void                    StArg              lW    outFile, %368.5, e368.3
  cls             %368.7 = MkCls                    try@Prom(3)0, e368.3
  prom-           %368.8 = MkArg                    unboundValue, validObject[0x561505be9030]_p67, e368.3
  prom-           %368.9 = MkArg                    %368.7, validObject[0x561505be9030]_p68 (!refl), e368.3
  dots-           %368.10 = DotsList           l     error=%368.9
  val?            %368.11 = StaticCall         !v    tryCatch[0x5614ff4440f0](%368.8, %368.10) { 0 1n } e368.3   <(nil|cls)->
  val?            %368.12 = PopContext         C     %368.11, %368.1   <(int|cls)->
  void                    StVar              lW    sloti, %368.12, e0.1
  lgl$#-          %368.14 = IsType                   %368.12 isA val?-
  val?^ | miss    %368.15 = LdVar              eR    inherits, e0.1
  lgl$#-          %368.16 = Identical                %368.15, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %368.16 -> BB370 (if true) | BB371 (if false)
BB369   <- [366]
  fs              %369.0 = FrameState         R     0x56150519b9d0+1817: [%350.3, %350.4, %350.5], env=e0.1
  void                    Deopt              !v    %369.0, CallTarget@0x5615050d2fd0[Call#26], %366.3   !
BB370   <- [368]
  void                    Branch                   %368.14 -> BB372 (if true) | BB373 (if false)
BB371   <- [368]
  void                    Nop                !     
  val?^ | miss    %371.1 = %368.15
  dr              %371.2 = CallTarget@0x5615050d2fd0[Call#29]
  goto BB43
BB372   <- [370]
  val?-           %372.0 = CastType           d     dn %368.12   <(int|cls)->
  val+            %372.1 = CallSafeBuiltin    wed   inherits(%372.0, "try-error", false)    <lgl$->
  lgl$#-          %372.2 = IsType                   %372.1 isA lgl$-
  void                    Branch                   %372.2 -> BB374 (if true) | BB375 (if false)
BB373   <- [370]
  void                    Nop                !     
  val?            %373.1 = %368.12
  dr              %373.2 = Typecheck@0x5615050d2fd0[Type#93]
  goto BB43
BB43   <- [371, 373]
  val?^ | miss    %43.0 = Phi                      %371.1:BB371, %373.1:BB373
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %371.2:BB371, %373.2:BB373
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x56150519b9d0+1876: [%350.3, %350.4, %350.5], env=e0.1
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB374   <- [372]
  lgl$-           %374.0 = CastType           d     dn %372.1
  lgl$#-          %374.1 = CheckTrueFalse     e     %374.0
  void                    Branch                   %374.1 -> BB279 (if true) | BB47 (if false)
BB375   <- [372]
  void                    Nop                !     
  val+            %375.1 = %372.1
  dr              %375.2 = Typecheck@0x5615050d2fd0[Type#95]
  goto BB45
BB279   <- [374]
  val?^ | miss    %279.0 = LdVar              eR    c, e0.1
  lgl$#-          %279.1 = Identical                <blt c>, %279.0   <@?>
  void                    Branch                   %279.1 -> BB281 (if true) | BB280 (if false)
BB47   <- [374]
  val?^ | miss    %47.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %47.1 = Identical                %47.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %47.1 -> BB376 (if true) | BB377 (if false)
BB45   <- [375, 377]
  val?^ | miss    %45.0 = Phi                      %375.1:BB375, %377.1:BB377
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %375.2:BB375, %377.2:BB377
  dr              %45.3 = %45.2
  prom-           %45.4 = MkArg                    unboundValue, validObject[0x561505be9030]_p14 (!refl), e0.1
  val?^           %45.5 = CastType                 up %45.4
  fs              %45.6 = FrameState         R     0x56150519b9d0+1913: [%350.3, %350.4, %350.5], env=e0.1
  env             e45.7 = (MkEnv)            l     which(miss)=false, what="try-error", x=%45.5, parent=R_BaseNamespace, context 0
  fs              %45.8 = FrameState         R     0x5614fa73d0a0+55: [%372.1], env=e45.7, next=%45.6
  void                    Deopt              !v    %45.8, %45.3, %45.1   !
BB281   <- [279]
  val?^ | miss    %281.0 = LdVar              eR    errors, e0.1
  val?            %281.1 = Force!             !v    %281.0, e0.1   <val?_>
  val?^ | miss    %281.2 = LdVar              eR    sloti, e0.1
  val?            %281.3 = Force!             !v    %281.2, e0.1   <val?_>
  lgl$#-          %281.4 = IsType                   %281.3 isA val?+
  lgl$#-          %281.5 = IsType                   %281.1 isA val?+
  void                    Branch                   %281.5 -> BB378 (if true) | BB379 (if false)
BB280   <- [279]
  (cls|spec|blt)  %280.0 = LdFun              !v    c, e0.1
  fs              %280.1 = FrameState         R     0x56150519b9d0+1957: [%350.3, %350.4, %350.5, %280.0], env=e0.1
  void                    Deopt              !v    %280.1, DeadCall@0x5615050d2fd0[Call#30], %280.0   !
BB376   <- [47]
  prom-           %376.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p15, e0.1
  prom-           %376.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p17, e0.1
  prom-           %376.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p18, e0.1
  val?            %376.3 = StaticCall         !v    possibleExtends[0x5614f92e5410](%376.0, %376.1, missingArg, %376.2) { 0 1 3n } e0.1   <lgl$->
  lgl$#-          %376.4 = IsType                   %376.3 isA lgl$-
  void                    Branch                   %376.4 -> BB384 (if true) | BB385 (if false)
BB377   <- [47]
  void                    Nop                !     
  val?^ | miss    %377.1 = %47.0
  dr              %377.2 = CallTarget@0x5615050d2fd0[Call#31]
  goto BB45
BB378   <- [281]
  val?+           %378.0 = CastType           d     dn %281.1   <val?_>
  void                    Branch                   %281.4 -> BB380 (if true) | BB381 (if false)
BB379   <- [281]
  void                    Nop                !     
  val?            %379.1 = %281.1
  dr              %379.2 = Typecheck@0x5615050d2fd0[Type#98]
  goto BB282
BB384   <- [376]
  lgl$-           %384.0 = CastType           d     dn %376.3
  void                    StVar              lW    ok, %384.0, e0.1
  val?^ | miss    %384.2 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %384.3 = Identical                %384.2, function(x) <(rir::DispatchTable*)0x5614fb9ff8|...
  void                    Branch                   %384.3 -> BB386 (if true) | BB387 (if false)
BB385   <- [376]
  fs              %385.0 = FrameState         R     0x56150519b9d0+2117: [%350.3, %350.4, %350.5, %376.3], env=e0.1
  void                    Deopt              !v    %385.0, Typecheck@0x5615050d2fd0[Type#105], %376.3   !
BB380   <- [378]
  val?+           %380.0 = CastType           d     dn %281.3   <val?_>
  val+            %380.1 = CallSafeBuiltin    wed   c(%378.0, %380.0)    <val?_>
  void                    StVar              lW    errors, %380.1, e0.1
  int$-           %380.3 = %350.5
  goto BB59
BB381   <- [378]
  void                    Nop                !     
  val?            %381.1 = %281.3
  dr              %381.2 = Typecheck@0x5615050d2fd0[Type#99]
  goto BB282
BB282   <- [379, 381]
  val?^ | miss    %282.0 = Phi                      %379.1:BB379, %381.1:BB381
  val?^ | miss    %282.1 = %282.0
  dr              %282.2 = Phi                      %379.2:BB379, %381.2:BB381
  dr              %282.3 = %282.2
  fs              %282.4 = FrameState         R     0x56150519b9d0+2017: [%350.3, %350.4, %350.5, <blt c>, %281.1, %281.3], env=e0.1
  void                    Deopt              !v    %282.4, %282.3, %282.1   !
BB386   <- [384]
  lgl$-           %386.0 = CallSafeBuiltin    wed   is.na(%384.0)    <lgl$->
  lgl$-           %386.1 = Not                d     %386.0, elided
  lgl$-           %386.2 = AsLogical                %386.1
  lgl$-           %386.3 = AsLogical                %386.2
  lgl$-           %386.4 = AsLogical                %386.3
  lgl$#-          %386.5 = Identical                %386.4, false
  void                    Branch                   %386.5 -> BB278 (if true) | BB52 (if false)
BB387   <- [384]
  fs              %387.0 = FrameState         R     0x56150519b9d0+2131: [%350.3, %350.4, %350.5], env=e0.1
  void                    Deopt              !v    %387.0, CallTarget@0x5615050d2fd0[Call#33], %384.2   !
BB59   <- [58, 135, 380, 488]
  int$-           %59.0 = Phi                      %58.1:BB58, %135.1:BB135, %488.3:BB488, %380.3:BB380
  int$-           %59.1 = %59.0
  int$-           %59.2 = Inc                      %59.1
  lgl$-           %59.3 = Lt                 d     %350.4, %59.2, elided
  lgl$#-          %59.4 = Identical                %59.3, true
  void                    Branch                   %59.4 -> BB164 (if true) | BB62 (if false)
BB278   <- [386]
  void                    Nop                !     
  lgl$-           %278.1 = %386.4
  goto BB53
BB52   <- [386]
  lgl$-           %52.0 = Not                d     %384.0, elided
  lgl$-           %52.1 = AsLogical                %52.0
  lgl$-           %52.2 = LAnd                     %386.4, %52.1
  lgl$-           %52.3 = %52.2
  goto BB53
BB164   <- [59]
  val?^ | miss    %164.0 = LdVar              eR    rev, e0.1
  lgl$#-          %164.1 = Identical                %164.0, function(x) <(rir::DispatchTable*)0x5614ff8d05|...
  void                    Branch                   %164.1 -> BB382 (if true) | BB383 (if false)
BB62   <- [59]
  val?            %62.0 = Extract2_1D        wed   %350.3, %59.2, elided
  void                    StVar              lW    i, %62.0, e0.1
  val?^ | miss    %62.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %62.3 = IsType                   %62.2 isA val?~+ | miss
  void                    Branch                   %62.3 -> BB388 (if true) | BB389 (if false)
BB53   <- [278, 52]
  lgl$-           %53.0 = Phi                      %52.3:BB52, %278.1:BB278
  lgl$-           %53.1 = %53.0
  lgl$#-          %53.2 = CheckTrueFalse     e     %53.1
  void                    Branch                   %53.2 -> BB275 (if true) | BB54 (if false)
BB382   <- [164]
  (cls|spec|blt)  %382.0 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %382.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p38, e0.1
  prom-           %382.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p39, e0.1
  val?            %382.3 = Call               !v    %382.0(%382.1, %382.2) e0.1   <vec+>
  val?            %382.4 = StaticCall         !v    rev[0x5614fa9e9270](%382.3) e0.1   <vec+>
  void                    StVar              lW    extends, %382.4, e0.1
  val?^ | miss    %382.6 = LdVar              eR    seq_along, e0.1
  lgl$#-          %382.7 = Identical                <blt seq_along>, %382.6   <true>
  void                    Branch                   %382.7 -> BB390 (if true) | BB391 (if false)
BB383   <- [164]
  fs              %383.0 = FrameState         R     0x56150519b9d0+2760: [%350.3, %350.4, %59.1], env=e0.1
  void                    Deopt              !v    %383.0, CallTarget@0x5615050d2fd0[Call#68], %164.0   !
BB388   <- [62]
  val?~+ | miss   %388.0 = CastType           d     dn %62.2
  val?+           %388.1 = Force!<value>            %388.0,    <vec+>
  lgl$#-          %388.2 = IsType                   %388.1 isA val+   <true>
  void                    Branch                   %388.2 -> BB392 (if true) | BB393 (if false)
BB389   <- [62]
  void                    Nop                !     
  val?^ | miss    %389.1 = %62.2
  dr              %389.2 = Typecheck@0x5615050d2fd0[Type#151]
  goto BB63
BB275   <- [53]
  val?^ | miss    %275.0 = LdVar              eR    c, e0.1
  lgl$#-          %275.1 = Identical                <blt c>, %275.0   <@?>
  void                    Branch                   %275.1 -> BB277 (if true) | BB276 (if false)
BB54   <- [53]
  val?^ | miss    %54.0 = LdVar              eR    complete, e0.1
  val?            %54.1 = Force!<lazy>       !v    %54.0, e0.1   <lgl$->
  lgl$#-          %54.2 = IsType                   %54.1 isA lgl$-
  void                    Branch                   %54.2 -> BB400 (if true) | BB401 (if false)
BB390   <- [382]
  val             %390.0 = ChkMissing         e     %382.4
  val?            %390.1 = CallBuiltin        !v    seq_along(%382.4) e0.1   <int->
  val?+           %390.2 = ToForSeq           e     %390.1
  int$-           %390.3 = Length                   %390.2
  lgl$-           %390.4 = Lt                 d     %390.3, %350.5, elided   <false>
  lgl$#-          %390.5 = Identical                %390.4, true
  void                    Branch                   %390.5 -> BB395 (if true) | BB394 (if false)
BB391   <- [382]
  fs              %391.0 = FrameState         R     0x56150519b9d0+4204: [], env=e0.1
  void                    Deopt              !v    %391.0, DeadBranchReached@0x5615050d2fd0[Test#58], %382.7   !
BB392   <- [388]
  val             %392.0 = ChkMissing         e     %62.0
  lgl$#-          %392.1 = IsType                   %392.0 isA int$-
  void                    Branch                   %392.1 -> BB402 (if true) | BB403 (if false)
BB393   <- [388]
  void                    Nop                !     
  lgl$#-          %393.1 = %388.2
  dr              %393.2 = DeadBranchReached@0x5615050d2fd0[Test#36]
  goto BB63
BB63   <- [389, 393, 403]
  val?^ | miss    %63.0 = Phi                      %389.1:BB389, %393.1:BB393, %403.1:BB403
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %389.2:BB389, %393.2:BB393, %403.2:BB403
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x56150519b9d0+2789: [%350.3, %350.4, %59.2], env=e0.1
  void                    Deopt              !v    %63.4, %63.3, %63.1   !
BB277   <- [275]
  val?^ | miss    %277.0 = LdVar              eR    errors, e0.1
  val?            %277.1 = Force!             !v    %277.0, e0.1   <val?_>
  (cls|spec|blt)  %277.2 = LdFun              !v    paste0, e0.1
  fs              %277.3 = FrameState         R     0x56150519b9d0+2263: [%350.3, %350.4, %350.5, <blt c>, %277.1, %277.2], env=e0.1
  void                    Deopt              !v    %277.3, DeadCall@0x5615050d2fd0[Call#37], %277.2   !
BB276   <- [275]
  (cls|spec|blt)  %276.0 = LdFun              !v    c, e0.1
  fs              %276.1 = FrameState         R     0x56150519b9d0+2207: [%350.3, %350.4, %350.5, %276.0], env=e0.1
  void                    Deopt              !v    %276.1, DeadCall@0x5615050d2fd0[Call#34], %276.0   !
BB400   <- [54]
  lgl$-           %400.0 = CastType           d     dn %54.1
  lgl$-           %400.1 = Not                d     %400.0, elided
  lgl$#-          %400.2 = CheckTrueFalse     e     %400.1
  void                    Branch                   %400.2 -> BB58 (if true) | BB57 (if false)
BB401   <- [54]
  fs              %401.0 = FrameState         R     0x56150519b9d0+2385: [%350.3, %350.4, %350.5, %54.1], env=e0.1
  void                    Deopt              !v    %401.0, Typecheck@0x5615050d2fd0[Type#131], %54.1   !
BB395   <- [390]
  fs              %395.0 = FrameState         R     0x56150519b9d0+4295: [%390.1], env=e0.1
  void                    Deopt              !v    %395.0, DeadBranchReached@0x5615050d2fd0[Test#59], %390.5   !
BB394   <- [390]
  val?            %394.0 = Extract2_1D        wed   %390.2, %350.5, elided
  void                    StVar              lW    i, %394.0, e0.1
  val?^ | miss    %394.2 = LdVar              eR    extends, e0.1
  lgl$#-          %394.3 = IsType                   %394.2 isA val?~+ | miss
  void                    Branch                   %394.3 -> BB396 (if true) | BB397 (if false)
BB402   <- [392]
  int$-           %402.0 = CastType           d     dn %392.0
  val?            %402.1 = Extract2_1D        wed   %388.1, %402.0, elided   <str$+>
  void                    StVar              lW    classi, %402.1, e0.1
  val?^ | miss    %402.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %402.4 = Identical                %402.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %402.4 -> BB408 (if true) | BB409 (if false)
BB403   <- [392]
  void                    Nop                !     
  val             %403.1 = %392.0
  dr              %403.2 = Typecheck@0x5615050d2fd0[Type#153]
  goto BB63
BB58   <- [400]
  void                    Nop                !     
  int$-           %58.1 = %350.5
  goto BB59
BB57   <- [400]
  (cls|spec|blt)  %57.0 = LdFun              !v    anyStrings, e0.1
  fs              %57.1 = FrameState         R     0x56150519b9d0+2417: [%350.3, %350.4, %350.5, %57.0], env=e0.1
  void                    Deopt              !v    %57.1, DeadCall@0x5615050d2fd0[Call#39], %57.0   !
BB396   <- [394]
  val?~+ | miss   %396.0 = CastType           d     dn %394.2
  val?+           %396.1 = Force!<value>            %396.0,    <vec+>
  lgl$#-          %396.2 = IsType                   %396.1 isA val+   <true>
  void                    Branch                   %396.2 -> BB398 (if true) | BB399 (if false)
BB397   <- [394]
  void                    Nop                !     
  val?^ | miss    %397.1 = %394.2
  dr              %397.2 = Typecheck@0x5615050d2fd0[Type#249]
  goto BB169
BB408   <- [402]
  prom-           %408.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p20 (!refl), e0.1
  prom-           %408.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p21, e0.1
  val?            %408.2 = StaticCall         !v    getClassDef[0x5614ffa2a5c0](%408.0, %408.1) { 0 1n } e0.1   <other>
  lgl$-           %408.3 = Is                       %408.2, NULL
  void                    StVar              lW    classDefi, %408.2, e0.1
  val             %408.5 = ChkMissing         e     %408.2
  lgl$#-          %408.6 = CheckTrueFalse     e     %408.3
  void                    Branch                   %408.6 -> BB161 (if true) | BB69 (if false)
BB409   <- [402]
  fs              %409.0 = FrameState         R     0x56150519b9d0+2864: [%350.3, %350.4, %59.2], env=e0.1
  void                    Deopt              !v    %409.0, CallTarget@0x5615050d2fd0[Call#45], %402.3   !
BB398   <- [396]
  val             %398.0 = ChkMissing         e     %394.0
  lgl$#-          %398.1 = IsType                   %398.0 isA int$-
  void                    Branch                   %398.1 -> BB404 (if true) | BB405 (if false)
BB399   <- [396]
  void                    Nop                !     
  lgl$#-          %399.1 = %396.2
  dr              %399.2 = DeadBranchReached@0x5615050d2fd0[Test#60]
  goto BB169
BB169   <- [397, 399, 405]
  val?^ | miss    %169.0 = Phi                      %397.1:BB397, %399.1:BB399, %405.1:BB405
  val?^ | miss    %169.1 = %169.0
  dr              %169.2 = Phi                      %397.2:BB397, %399.2:BB399, %405.2:BB405
  dr              %169.3 = %169.2
  fs              %169.4 = FrameState         R     0x56150519b9d0+4340: [%390.2, %390.3, %350.5], env=e0.1
  void                    Deopt              !v    %169.4, %169.3, %169.1   !
BB161   <- [408]
  val?^ | miss    %161.0 = LdVar              eR    c, e0.1
  lgl$#-          %161.1 = Identical                <blt c>, %161.0   <@?>
  void                    Branch                   %161.1 -> BB163 (if true) | BB162 (if false)
BB69   <- [408]
  val?^ | miss    %69.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %69.1 = IsType                   %69.0 isA val?~- | miss
  void                    Branch                   %69.1 -> BB420 (if true) | BB421 (if false)
BB404   <- [398]
  int$-           %404.0 = CastType           d     dn %398.0
  val?            %404.1 = Extract2_1D        wed   %396.1, %404.0, elided   <other>
  void                    StVar              lW    exti, %404.1, e0.1
  (cls|spec|blt)  %404.3 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %404.4 = MkArg                    unboundValue, validObject[0x561505be9030]_p40, e0.1
  prom-           %404.5 = MkArg                    unboundValue, validObject[0x561505be9030]_p41, e0.1
  val?            %404.6 = Call               !v    %404.3(%404.4, %404.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %404.6, e0.1
  (cls|spec|blt)  %404.8 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %404.9 = MkArg                    unboundValue, validObject[0x561505be9030]_p42, e0.1
  prom-           %404.10 = MkArg                    unboundValue, validObject[0x561505be9030]_p43, e0.1
  val?            %404.11 = Call               !v    %404.8(%404.9, %404.10) e0.1   <lgl$->
  lgl$#-          %404.12 = IsType                   %404.11 isA lgl$-
  void                    Branch                   %404.12 -> BB406 (if true) | BB407 (if false)
BB405   <- [398]
  void                    Nop                !     
  val             %405.1 = %398.0
  dr              %405.2 = Typecheck@0x5615050d2fd0[Type#251]
  goto BB169
BB163   <- [161]
  val?^ | miss    %163.0 = LdVar              eR    errors, e0.1
  val?            %163.1 = Force!             !v    %163.0, e0.1   <val?_>
  (cls|spec|blt)  %163.2 = LdFun              !v    paste0, e0.1
  fs              %163.3 = FrameState         R     0x56150519b9d0+3037: [%350.3, %350.4, %59.2, <blt c>, %163.1, %163.2], env=e0.1
  void                    Deopt              !v    %163.3, DeadCall@0x5615050d2fd0[Call#48], %163.2   !
BB162   <- [161]
  (cls|spec|blt)  %162.0 = LdFun              !v    c, e0.1
  fs              %162.1 = FrameState         R     0x56150519b9d0+2981: [%350.3, %350.4, %59.2, %162.0], env=e0.1
  void                    Deopt              !v    %162.1, DeadCall@0x5615050d2fd0[Call#46], %162.0   !
BB420   <- [69]
  val?~- | miss   %420.0 = CastType           d     dn %69.0
  val?-           %420.1 = Force!<value>            %420.0,    <str->
  lgl$#-          %420.2 = IsType                   %420.1 isA val+   <true>
  void                    Branch                   %420.2 -> BB428 (if true) | BB429 (if false)
BB421   <- [69]
  void                    Nop                !     
  val?^ | miss    %421.1 = %69.0
  dr              %421.2 = Typecheck@0x5615050d2fd0[Type#174]
  goto BB67
BB406   <- [404]
  lgl$-           %406.0 = CastType           d     dn %404.11
  lgl$-           %406.1 = Not                d     %406.0, elided
  lgl$-           %406.2 = AsLogical                %406.1
  lgl$#-          %406.3 = Identical                %406.2, false
  void                    Branch                   %406.3 -> BB174 (if true) | BB173 (if false)
BB407   <- [404]
  void                    Nop                !     
  val?            %407.1 = %404.11
  dr              %407.2 = Typecheck@0x5615050d2fd0[Type#258]
  goto BB171
BB428   <- [420]
  val?^ | miss    %428.0 = LdVar              eR    i, e0.1
  lgl$#-          %428.1 = IsType                   %428.0 isA int$-
  void                    Branch                   %428.1 -> BB434 (if true) | BB435 (if false)
BB429   <- [420]
  void                    Nop                !     
  lgl$#-          %429.1 = %420.2
  dr              %429.2 = DeadBranchReached@0x5615050d2fd0[Test#40]
  goto BB67
BB67   <- [421, 429, 435]
  val?^ | miss    %67.0 = Phi                      %421.1:BB421, %429.1:BB429, %435.1:BB435
  val?^ | miss    %67.1 = %67.0
  dr              %67.2 = Phi                      %421.2:BB421, %429.2:BB429, %435.2:BB435
  dr              %67.3 = %67.2
  fs              %67.4 = FrameState         R     0x56150519b9d0+2923: [%350.3, %350.4, %59.2], env=e0.1
  void                    Deopt              !v    %67.4, %67.3, %67.1   !
BB174   <- [406]
  lgl$#-          %174.0 = CheckTrueFalse     e     %406.2
  void                    Branch                   %174.0 -> BB274 (if true) | BB175 (if false)
BB173   <- [406]
  (cls|spec|blt)  %173.0 = LdFun              !v    is, e0.1
  fs              %173.1 = FrameState         R     0x56150519b9d0+4521: [%390.2, %390.3, %350.5, %406.2, %173.0], env=e0.1
  void                    Deopt              !v    %173.1, DeadCall@0x5615050d2fd0[Call#73], %173.0   !
BB171   <- [407, 411]
  val?^ | miss    %171.0 = Phi                      %407.1:BB407, %411.1:BB411
  val?^ | miss    %171.1 = %171.0
  dr              %171.2 = Phi                      %407.2:BB407, %411.2:BB411
  dr              %171.3 = %171.2
  fs              %171.4 = FrameState         R     0x56150519b9d0+4503: [%390.2, %390.3, %350.5, %404.11], env=e0.1
  void                    Deopt              !v    %171.4, %171.3, %171.1   !
BB434   <- [428]
  int$-           %434.0 = CastType           d     dn %428.0
  val?            %434.1 = Extract2_1D        wed   %420.1, %434.0, elided   <str$->
  void                    StVar              lW    namei, %434.1, e0.1
  val?^ | miss    %434.3 = LdVar              eR    try, e0.1
  lgl$#-          %434.4 = Identical                %434.3, function(expr, silent=FALSE, outFile=getOption|...
  void                    Branch                   %434.4 -> BB436 (if true) | BB437 (if false)
BB435   <- [428]
  void                    Nop                !     
  val?^ | miss    %435.1 = %428.0
  dr              %435.2 = Typecheck@0x5615050d2fd0[Type#176]
  goto BB67
BB274   <- [174]
  void                    Nop                !     
  int$-           %274.1 = %350.5
  goto BB180
BB175   <- [174]
  val?^ | miss    %175.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %175.1 = Identical                %175.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %175.1 -> BB410 (if true) | BB411 (if false)
BB436   <- [434]
  prom-           %436.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p22, e0.1
  ct              %436.1 = PushContext        lCL   %436.0, true, try(switch(namei, .S3Class=S3Class(object), sl|..., function(expr, silent=FALSE, outFile=getOption|..., e0.1
  val?^           %436.2 = CastType                 up %436.0
  env             e436.3 = MkEnv              l     expr=%436.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %436.4 = MkArg                    unboundValue, validObject[0x561505be9030]_p70, e436.3
  val?^ | miss    %436.5 = CastType                 up %436.4
  void                    StArg              lW    outFile, %436.5, e436.3
  cls             %436.7 = MkCls                    try@Prom(3)0, e436.3
  val?^ | miss    %436.8 = LdVar              eR    tryCatch, e436.3
  lgl$#-          %436.9 = Identical                %436.8, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Branch                   %436.9 -> BB438 (if true) | BB439 (if false)
BB437   <- [434]
  fs              %437.0 = FrameState         R     0x56150519b9d0+3205: [%350.3, %350.4, %59.2], env=e0.1
  void                    Deopt              !v    %437.0, CallTarget@0x5615050d2fd0[Call#49], %434.3   !
BB180   <- [179, 266, 274, 195]
  int$-           %180.0 = Phi                      %179.1:BB179, %195.1:BB195, %266.1:BB266, %274.1:BB274
  int$-           %180.1 = %180.0
  int$-           %180.2 = Inc                      %180.1
  lgl$-           %180.3 = Lt                 d     %390.3, %180.2, elided
  lgl$#-          %180.4 = Identical                %180.3, true
  void                    Branch                   %180.4 -> BB267 (if true) | BB181 (if false)
BB410   <- [175]
  prom-           %410.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p44, e0.1
  val?            %410.1 = StaticCall         !v    getClassDef[0x5615052aeb20](%410.0) e0.1   <other>
  lgl$-           %410.2 = Is                       %410.1, NULL
  void                    StVar              lW    superDef, %410.1, e0.1
  val             %410.4 = ChkMissing         e     %410.1
  lgl$#-          %410.5 = CheckTrueFalse     e     %410.2
  void                    Branch                   %410.5 -> BB271 (if true) | BB176 (if false)
BB411   <- [175]
  void                    Nop                !     
  val?^ | miss    %411.1 = %175.0
  dr              %411.2 = CallTarget@0x5615050d2fd0[Call#74]
  goto BB171
BB438   <- [436]
  prom-           %438.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p72, e436.3
  prom-           %438.1 = MkArg                    %436.7, validObject[0x561505be9030]_p73 (!refl), e436.3
  dots-           %438.2 = DotsList           l     error=%438.1
  val?            %438.3 = StaticCall         !v    tryCatch[0x5614ff4440f0](%438.0, %438.2) { 0 1n } e436.3   <(nil|cls)->
  val?            %438.4 = PopContext         C     %438.3, %436.1
  void                    StVar              lW    sloti, %438.4, e0.1
  val?^ | miss    %438.6 = LdVar              eR    inherits, e0.1
  lgl$#-          %438.7 = Identical                %438.6, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %438.7 -> BB440 (if true) | BB441 (if false)
BB439   <- [436]
  fs              %439.0 = FrameState         R     0x56150519b9d0+3250: [%350.3, %350.4, %59.2], env=e0.1
  fs              %439.1 = FrameState         R     0x5614fb34efe0+0: [], env=e436.3, next=%439.0
  void                    Deopt              !v    %439.1, CallTarget@0x5614fac9cc60[Call#2], %436.8   !
BB267   <- [180]
  void                    Nop                !     
  goto BB219
BB181   <- [180]
  val?            %181.0 = Extract2_1D        wed   %390.2, %180.2, elided
  void                    StVar              lW    i, %181.0, e0.1
  val?^ | miss    %181.2 = LdVar              eR    extends, e0.1
  lgl$#-          %181.3 = IsType                   %181.2 isA val?~+ | miss
  void                    Branch                   %181.3 -> BB422 (if true) | BB423 (if false)
BB271   <- [410]
  val?^ | miss    %271.0 = LdVar              eR    c, e0.1
  lgl$#-          %271.1 = Identical                <blt c>, %271.0   <@?>
  void                    Branch                   %271.1 -> BB273 (if true) | BB272 (if false)
BB176   <- [410]
  (cls|spec|blt)  %176.0 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %176.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p45, e0.1
  prom-           %176.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p46, e0.1
  val?            %176.3 = Call               !v    %176.0(%176.1, %176.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %176.3, e0.1
  lgl$#-          %176.5 = IsType                   %176.3 isA val?-
  val?^ | miss    %176.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %176.7 = Identical                <blt is.function>, %176.6   <true>
  void                    Branch                   %176.7 -> BB416 (if true) | BB417 (if false)
BB440   <- [438]
  prom-           %440.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p26 (!refl), e0.1
  ct              %440.1 = PushContext        lCL   %440.0, "try-error", inherits(sloti, "try-error"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.1
  val?^           %440.2 = CastType                 up %440.0
  env             e440.3 = MkEnv              l     x=%440.2, what="try-error", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %440.4 = Force!<lazy>       !vr   %440.2, e440.3   <val?>
  val?^ | miss    %440.5 = LdVar              eR    what, e440.3
  val?            %440.6 = Force!<value>      !v    %440.5, e440.3   <str$->
  val?^ | miss    %440.7 = LdVar              eR    which, e440.3
  val?            %440.8 = Force!<lazy>       !v    %440.7, e440.3   <lgl$->
  lgl$#-          %440.9 = IsType                   %440.8 isA lgl$-
  lgl$#-          %440.10 = IsType                   %440.6 isA val?-
  void                    Branch                   %440.10 -> BB446 (if true) | BB447 (if false)
BB441   <- [438]
  fs              %441.0 = FrameState         R     0x56150519b9d0+3264: [%350.3, %350.4, %59.2], env=e0.1
  void                    Deopt              !v    %441.0, CallTarget@0x5615050d2fd0[Call#52], %438.6   !
BB219   <- [218, 267]
  (cls|spec|blt)  %219.0 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %219.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p58, e0.1
  prom-           %219.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p59, e0.1
  val?            %219.3 = Call               !v    %219.0(%219.1, %219.2) e0.1   <(nil|cls)->
  void                    StVar              lW    validityMethod, %219.3, e0.1
  val?^ | miss    %219.5 = LdVar              eR    length, e0.1
  lgl$#-          %219.6 = Identical                <blt length>, %219.5   <true>
  void                    Branch                   %219.6 -> BB412 (if true) | BB413 (if false)
BB422   <- [181]
  val?~+ | miss   %422.0 = CastType           d     dn %181.2
  val?+           %422.1 = Force!<value>            %422.0,    <vec+>
  lgl$#-          %422.2 = IsType                   %422.1 isA val+   <true>
  void                    Branch                   %422.2 -> BB424 (if true) | BB425 (if false)
BB423   <- [181]
  void                    Nop                !     
  val?^ | miss    %423.1 = %181.2
  dr              %423.2 = Typecheck@0x5615050d2fd0[Type#294]
  goto BB182
BB273   <- [271]
  val?^ | miss    %273.0 = LdVar              eR    errors, e0.1
  val?            %273.1 = Force!             !v    %273.0, e0.1   <val?_>
  (cls|spec|blt)  %273.2 = LdFun              !v    paste0, e0.1
  fs              %273.3 = FrameState         R     0x56150519b9d0+4742: [%390.2, %390.3, %350.5, <blt c>, %273.1, %273.2], env=e0.1
  void                    Deopt              !v    %273.3, DeadCall@0x5615050d2fd0[Call#77], %273.2   !
BB272   <- [271]
  (cls|spec|blt)  %272.0 = LdFun              !v    c, e0.1
  fs              %272.1 = FrameState         R     0x56150519b9d0+4686: [%390.2, %390.3, %350.5, %272.0], env=e0.1
  void                    Deopt              !v    %272.1, DeadCall@0x5615050d2fd0[Call#75], %272.0   !
BB416   <- [176]
  val             %416.0 = ChkMissing         e     %176.3
  void                    Branch                   %176.5 -> BB418 (if true) | BB419 (if false)
BB417   <- [176]
  void                    Nop                !     
  lgl$#-          %417.1 = %176.7
  dr              %417.2 = DeadBranchReached@0x5615050d2fd0[Test#62]
  goto BB177
BB446   <- [440]
  val?-           %446.0 = CastType           d     dn %440.6   <str$->
  void                    Branch                   %440.9 -> BB458 (if true) | BB459 (if false)
BB447   <- [440]
  void                    Nop                !     
  val?            %447.1 = %440.6
  dr              %447.2 = Typecheck@0x5614fa75d5a0[Type#1]
  goto BB76
BB412   <- [219]
  val?^ | miss    %412.0 = LdVar              eR    errors, e0.1
  lgl$#-          %412.1 = IsType                   %412.0 isA val?~- | miss
  void                    Branch                   %412.1 -> BB414 (if true) | BB415 (if false)
BB413   <- [219]
  void                    Nop                !     
  lgl$#-          %413.1 = %219.6
  dr              %413.2 = DeadBranchReached@0x5615050d2fd0[Test#70]
  goto BB220
BB424   <- [422]
  val             %424.0 = ChkMissing         e     %181.0
  lgl$#-          %424.1 = IsType                   %424.0 isA int$-
  void                    Branch                   %424.1 -> BB430 (if true) | BB431 (if false)
BB425   <- [422]
  void                    Nop                !     
  lgl$#-          %425.1 = %422.2
  dr              %425.2 = DeadBranchReached@0x5615050d2fd0[Test#65]
  goto BB182
BB182   <- [423, 425, 431]
  val?^ | miss    %182.0 = Phi                      %423.1:BB423, %425.1:BB425, %431.1:BB431
  val?^ | miss    %182.1 = %182.0
  dr              %182.2 = Phi                      %423.2:BB423, %425.2:BB425, %431.2:BB431
  dr              %182.3 = %182.2
  fs              %182.4 = FrameState         R     0x56150519b9d0+5276: [%390.2, %390.3, %180.2], env=e0.1
  void                    Deopt              !v    %182.4, %182.3, %182.1   !
BB418   <- [416]
  val?-           %418.0 = CastType           d     dn %176.3   <nil->
  lgl$#-          %418.1 = CallSafeBuiltin    wed   is.function(%418.0)    <lgl$->
  void                    Branch                   %418.1 -> BB268 (if true) | BB179 (if false)
BB419   <- [416]
  void                    Nop                !     
  val?            %419.1 = %176.3
  dr              %419.2 = Typecheck@0x5615050d2fd0[Type#274]
  goto BB177
BB177   <- [417, 419]
  val?^ | miss    %177.0 = Phi                      %417.1:BB417, %419.1:BB419
  val?^ | miss    %177.1 = %177.0
  dr              %177.2 = Phi                      %417.2:BB417, %419.2:BB419
  dr              %177.3 = %177.2
  fs              %177.4 = FrameState         R     0x56150519b9d0+4876: [%390.2, %390.3, %350.5], env=e0.1
  void                    Deopt              !v    %177.4, %177.3, %177.1   !
BB458   <- [446]
  lgl$-           %458.0 = CastType           d     dn %440.8
  val?            %458.1 = CallBuiltin        !v    inherits(%440.4, %446.0, %458.0) e440.3
  val?            %458.2 = PopContext         C     %458.1, %440.1   <lgl$->
  lgl$#-          %458.3 = IsType                   %458.2 isA lgl$-
  void                    Branch                   %458.3 -> BB470 (if true) | BB471 (if false)
BB459   <- [446]
  void                    Nop                !     
  val?            %459.1 = %440.8
  dr              %459.2 = Typecheck@0x5614fa75d5a0[Type#2]
  goto BB76
BB76   <- [447, 459]
  val?^ | miss    %76.0 = Phi                      %447.1:BB447, %459.1:BB459
  val?^ | miss    %76.1 = %76.0
  dr              %76.2 = Phi                      %447.2:BB447, %459.2:BB459
  dr              %76.3 = %76.2
  fs              %76.4 = FrameState         R     0x56150519b9d0+3301: [%350.3, %350.4, %59.2], env=e0.1
  fs              %76.5 = FrameState         R     0x5614fa73d0a0+37: [%440.4, %440.6, %440.8], env=e440.3, next=%76.4
  void                    Deopt              !v    %76.5, %76.3, %76.1   !
BB414   <- [412]
  val?~- | miss   %414.0 = CastType           d     dn %412.0
  val?-           %414.1 = Force!<value>            %414.0,    <str->
  (int|real)$-    %414.2 = CallSafeBuiltin    wed   length(%414.1)    <int$->
  lgl$#-          %414.3 = IsType                   %414.2 isA int$-
  void                    Branch                   %414.3 -> BB426 (if true) | BB427 (if false)
BB415   <- [412]
  void                    Nop                !     
  val?^ | miss    %415.1 = %412.0
  dr              %415.2 = Typecheck@0x5615050d2fd0[Type#343]
  goto BB220
BB220   <- [413, 415]
  val?^ | miss    %220.0 = Phi                      %413.1:BB413, %415.1:BB415
  val?^ | miss    %220.1 = %220.0
  dr              %220.2 = Phi                      %413.2:BB413, %415.2:BB415
  dr              %220.3 = %220.2
  fs              %220.4 = FrameState         R     0x56150519b9d0+6244: [], env=e0.1
  void                    Deopt              !v    %220.4, %220.3, %220.1   !
BB430   <- [424]
  int$-           %430.0 = CastType           d     dn %424.0
  val?            %430.1 = Extract2_1D        wed   %422.1, %430.0, elided   <other>
  void                    StVar              lW    exti, %430.1, e0.1
  (cls|spec|blt)  %430.3 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %430.4 = MkArg                    unboundValue, validObject[0x561505be9030]_p47, e0.1
  prom-           %430.5 = MkArg                    unboundValue, validObject[0x561505be9030]_p48, e0.1
  val?            %430.6 = Call               !v    %430.3(%430.4, %430.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %430.6, e0.1
  (cls|spec|blt)  %430.8 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %430.9 = MkArg                    unboundValue, validObject[0x561505be9030]_p49, e0.1
  prom-           %430.10 = MkArg                    unboundValue, validObject[0x561505be9030]_p50, e0.1
  val?            %430.11 = Call               !v    %430.8(%430.9, %430.10) e0.1   <lgl$->
  lgl$#-          %430.12 = IsType                   %430.11 isA lgl$-
  void                    Branch                   %430.12 -> BB442 (if true) | BB443 (if false)
BB431   <- [424]
  void                    Nop                !     
  val             %431.1 = %424.0
  dr              %431.2 = Typecheck@0x5615050d2fd0[Type#296]
  goto BB182
BB268   <- [418]
  val?^ | miss    %268.0 = LdVar              eR    c, e0.1
  lgl$#-          %268.1 = Identical                <blt c>, %268.0   <@?>
  void                    Branch                   %268.1 -> BB270 (if true) | BB269 (if false)
BB179   <- [418]
  void                    Nop                !     
  int$-           %179.1 = %350.5
  goto BB180
BB470   <- [458]
  lgl$-           %470.0 = CastType           d     dn %458.2
  lgl$#-          %470.1 = CheckTrueFalse     e     %470.0
  void                    Branch                   %470.1 -> BB156 (if true) | BB80 (if false)
BB471   <- [458]
  void                    Nop                !     
  val?            %471.1 = %458.2
  dr              %471.2 = Typecheck@0x5615050d2fd0[Type#186]
  goto BB78
BB426   <- [414]
  int$-           %426.0 = CastType           d     dn %414.2
  lgl$-           %426.1 = Eq                 d     %426.0, 0L, elided   <lgl$->
  lgl$-           %426.2 = AsLogical                %426.1
  lgl$#-          %426.3 = Identical                %426.2, false
  void                    Branch                   %426.3 -> BB258 (if true) | BB224 (if false)
BB427   <- [414]
  void                    Nop                !     
  (int|real)$-    %427.1 = %414.2
  dr              %427.2 = Typecheck@0x5615050d2fd0[Type#344]
  goto BB222
BB442   <- [430]
  lgl$-           %442.0 = CastType           d     dn %430.11
  lgl$-           %442.1 = Not                d     %442.0, elided
  lgl$-           %442.2 = AsLogical                %442.1
  lgl$#-          %442.3 = Identical                %442.2, false
  void                    Branch                   %442.3 -> BB187 (if true) | BB186 (if false)
BB443   <- [430]
  void                    Nop                !     
  val?            %443.1 = %430.11
  dr              %443.2 = Typecheck@0x5615050d2fd0[Type#303]
  goto BB184
BB270   <- [268]
  val?^ | miss    %270.0 = LdVar              eR    errors, e0.1
  val?            %270.1 = Force!             !v    %270.0, e0.1   <val?_>
  (cls|spec|blt)  %270.2 = LdFun              !v    anyStrings, e0.1
  fs              %270.3 = FrameState         R     0x56150519b9d0+5067: [%390.2, %390.3, %350.5, <blt c>, %270.1, %270.2], env=e0.1
  void                    Deopt              !v    %270.3, DeadCall@0x5615050d2fd0[Call#84], %270.2   !
BB269   <- [268]
  (cls|spec|blt)  %269.0 = LdFun              !v    c, e0.1
  fs              %269.1 = FrameState         R     0x56150519b9d0+5011: [%390.2, %390.3, %350.5, %269.0], env=e0.1
  void                    Deopt              !v    %269.1, DeadCall@0x5615050d2fd0[Call#80], %269.0   !
BB156   <- [470]
  val?^ | miss    %156.0 = LdVar              eR    c, e0.1
  lgl$#-          %156.1 = Identical                <blt c>, %156.0   <@?>
  void                    Branch                   %156.1 -> BB158 (if true) | BB157 (if false)
BB80   <- [470]
  val?^ | miss    %80.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %80.1 = Identical                %80.0, function(class1, class2, ClassDef1=getClassDef|...
  void                    Branch                   %80.1 -> BB472 (if true) | BB473 (if false)
BB78   <- [471, 473]
  val?^ | miss    %78.0 = Phi                      %471.1:BB471, %473.1:BB473
  val?^ | miss    %78.1 = %78.0
  dr              %78.2 = Phi                      %471.2:BB471, %473.2:BB473
  dr              %78.3 = %78.2
  fs              %78.4 = FrameState         R     0x56150519b9d0+3301: [%350.3, %350.4, %59.2, %458.2], env=e0.1
  void                    Deopt              !v    %78.4, %78.3, %78.1   !
BB258   <- [426]
  void                    Nop                !     
  lgl$-           %258.1 = %426.2
  goto BB225
BB224   <- [426]
  val?^ | miss    %224.0 = LdVar              eR    is.function, e0.1
  lgl$#-          %224.1 = Identical                <blt is.function>, %224.0   <true>
  void                    Branch                   %224.1 -> BB432 (if true) | BB433 (if false)
BB222   <- [427, 433, 445]
  val?^ | miss    %222.0 = Phi                      %427.1:BB427, %433.1:BB433, %445.1:BB445
  val?^ | miss    %222.1 = %222.0
  dr              %222.2 = Phi                      %427.2:BB427, %433.2:BB433, %445.2:BB445
  dr              %222.3 = %222.2
  fs              %222.4 = FrameState         R     0x56150519b9d0+6335: [%414.2], env=e0.1
  void                    Deopt              !v    %222.4, %222.3, %222.1   !
BB187   <- [442]
  lgl$#-          %187.0 = CheckTrueFalse     e     %442.2
  void                    Branch                   %187.0 -> BB266 (if true) | BB188 (if false)
BB186   <- [442]
  (cls|spec|blt)  %186.0 = LdFun              !v    is, e0.1
  fs              %186.1 = FrameState         R     0x56150519b9d0+5457: [%390.2, %390.3, %180.2, %442.2, %186.0], env=e0.1
  void                    Deopt              !v    %186.1, DeadCall@0x5615050d2fd0[Call#90], %186.0   !
BB184   <- [443, 449]
  val?^ | miss    %184.0 = Phi                      %443.1:BB443, %449.1:BB449
  val?^ | miss    %184.1 = %184.0
  dr              %184.2 = Phi                      %443.2:BB443, %449.2:BB449
  dr              %184.3 = %184.2
  fs              %184.4 = FrameState         R     0x56150519b9d0+5439: [%390.2, %390.3, %180.2, %430.11], env=e0.1
  void                    Deopt              !v    %184.4, %184.3, %184.1   !
BB158   <- [156]
  val?^ | miss    %158.0 = LdVar              eR    errors, e0.1
  val?            %158.1 = Force!             !v    %158.0, e0.1   <val?_>
  val?^ | miss    %158.2 = LdVar              eR    sloti, e0.1
  val?            %158.3 = Force!             !v    %158.2, e0.1   <val?_>
  lgl$#-          %158.4 = IsType                   %158.3 isA val?+
  lgl$#-          %158.5 = IsType                   %158.1 isA val?+
  void                    Branch                   %158.5 -> BB480 (if true) | BB481 (if false)
BB157   <- [156]
  (cls|spec|blt)  %157.0 = LdFun              !v    c, e0.1
  fs              %157.1 = FrameState         R     0x56150519b9d0+3345: [%350.3, %350.4, %59.2, %157.0], env=e0.1
  void                    Deopt              !v    %157.1, DeadCall@0x5615050d2fd0[Call#53], %157.0   !
BB472   <- [80]
  prom-           %472.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p27, e0.1
  prom-           %472.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p29, e0.1
  prom-           %472.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p30, e0.1
  ct              %472.3 = PushContext        lCL   %472.0, %472.1, missingArg, %472.2, possibleExtends(class(sloti), classi, ClassDef|..., function(class1, class2, ClassDef1=getClassDef|..., e0.1
  val?^           %472.4 = CastType                 up %472.2
  val?^           %472.5 = CastType                 up %472.1
  val?^           %472.6 = CastType                 up %472.0
  env             e472.7 = MkEnv              l     class1=%472.6, class2=%472.5, ClassDef1(miss)=missingArg, ClassDef2=%472.4, parent=<env 0x5614f8eae378>, context 1
  prom-           %472.8 = MkArg                    unboundValue, validObject[0x561505be9030]_p75, e472.7
  val?^ | miss    %472.9 = CastType                 up %472.8
  void                    StArg              lW    ClassDef1, %472.9, e472.7
  val?^ | miss    %472.11 = LdVar              eR    .identC, e472.7
  lgl$#-          %472.12 = Identical                %472.11, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %472.12 -> BB478 (if true) | BB479 (if false)
BB473   <- [80]
  void                    Nop                !     
  val?^ | miss    %473.1 = %80.0
  dr              %473.2 = CallTarget@0x5615050d2fd0[Call#54]
  goto BB78
BB225   <- [258, 444]
  lgl$-           %225.0 = Phi                      %444.3:BB444, %258.1:BB258
  lgl$-           %225.1 = %225.0
  lgl$#-          %225.2 = CheckTrueFalse     e     %225.1
  void                    Branch                   %225.2 -> BB239 (if true) | BB228 (if false)
BB432   <- [224]
  val             %432.0 = ChkMissing         e     %219.3
  lgl$#-          %432.1 = IsType                   %432.0 isA val?~- | miss
  void                    Branch                   %432.1 -> BB444 (if true) | BB445 (if false)
BB433   <- [224]
  void                    Nop                !     
  lgl$#-          %433.1 = %224.1
  dr              %433.2 = DeadBranchReached@0x5615050d2fd0[Test#71]
  goto BB222
BB266   <- [187]
  void                    Nop                !     
  int$-           %266.1 = %180.2
  goto BB180
BB188   <- [187]
  val?^ | miss    %188.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %188.1 = Identical                %188.0, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %188.1 -> BB448 (if true) | BB449 (if false)
BB480   <- [158]
  val?+           %480.0 = CastType           d     dn %158.1   <val?_>
  void                    Branch                   %158.4 -> BB488 (if true) | BB489 (if false)
BB481   <- [158]
  void                    Nop                !     
  val?            %481.1 = %158.1
  dr              %481.2 = Typecheck@0x5615050d2fd0[Type#189]
  goto BB159
BB478   <- [472]
  prom-           %478.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p81, e472.7
  prom-           %478.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p82, e472.7
  val?            %478.2 = StaticCall         !v    .identC[0x5614fe832dc0](%478.0, %478.1) e472.7   <lgl$->
  lgl$#-          %478.3 = IsType                   %478.2 isA lgl$-
  void                    Branch                   %478.3 -> BB482 (if true) | BB483 (if false)
BB479   <- [472]
  fs              %479.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %479.1 = FrameState         R     0x5614fb752a40+0: [], env=e472.7, next=%479.0
  void                    Deopt              !v    %479.1, CallTarget@0x5614f93ef020[Call#3], %472.11   !
BB239   <- [225]
  val?^ | miss    %239.0 = LdVar              eR    c, e0.1
  lgl$#-          %239.1 = Identical                <blt c>, %239.0   <true>
  void                    Branch                   %239.1 -> BB450 (if true) | BB451 (if false)
BB228   <- [225]
  void                    Nop                !     
  goto BB229
BB444   <- [432]
  val-            %444.0 = CastType           d     dn %432.0   <(nil|cls)->
  lgl$#-          %444.1 = CallSafeBuiltin    wed   is.function(%444.0)    <lgl$->
  lgl$-           %444.2 = LAnd                     %426.2, %444.1
  lgl$-           %444.3 = %444.2
  goto BB225
BB445   <- [432]
  void                    Nop                !     
  val             %445.1 = %432.0
  dr              %445.2 = Typecheck@0x5615050d2fd0[Type#347]
  goto BB222
BB448   <- [188]
  prom-           %448.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p51, e0.1
  val?            %448.1 = StaticCall         !v    getClassDef[0x5615052aeb20](%448.0) e0.1   <other>
  lgl$-           %448.2 = Is                       %448.1, NULL
  void                    StVar              lW    superDef, %448.1, e0.1
  val             %448.4 = ChkMissing         e     %448.1
  lgl$#-          %448.5 = CheckTrueFalse     e     %448.2
  void                    Branch                   %448.5 -> BB263 (if true) | BB189 (if false)
BB449   <- [188]
  void                    Nop                !     
  val?^ | miss    %449.1 = %188.0
  dr              %449.2 = CallTarget@0x5615050d2fd0[Call#91]
  goto BB184
BB488   <- [480]
  val?+           %488.0 = CastType           d     dn %158.3   <val?_>
  val+            %488.1 = CallSafeBuiltin    wed   c(%480.0, %488.0)    <val?_>
  void                    StVar              lW    errors, %488.1, e0.1
  int$-           %488.3 = %59.2
  goto BB59
BB489   <- [480]
  void                    Nop                !     
  val?            %489.1 = %158.3
  dr              %489.2 = Typecheck@0x5615050d2fd0[Type#190]
  goto BB159
BB159   <- [481, 489]
  val?^ | miss    %159.0 = Phi                      %481.1:BB481, %489.1:BB489
  val?^ | miss    %159.1 = %159.0
  dr              %159.2 = Phi                      %481.2:BB481, %489.2:BB489
  dr              %159.3 = %159.2
  fs              %159.4 = FrameState         R     0x56150519b9d0+3405: [%350.3, %350.4, %59.2, <blt c>, %158.1, %158.3], env=e0.1
  void                    Deopt              !v    %159.4, %159.3, %159.1   !
BB482   <- [478]
  lgl$-           %482.0 = CastType           d     dn %478.2
  lgl$-           %482.1 = AsLogical                %482.0
  lgl$#-          %482.2 = Identical                %482.1, true
  void                    Branch                   %482.2 -> BB155 (if true) | BB85 (if false)
BB483   <- [478]
  void                    Nop                !     
  val?            %483.1 = %478.2
  dr              %483.2 = Typecheck@0x5614f93ef020[Type#9]
  goto BB83
BB450   <- [239]
  val?^ | miss    %450.0 = LdVar              eR    anyStrings, e0.1
  lgl$#-          %450.1 = Identical                %450.0, %0.2
  void                    Branch                   %450.1 -> BB452 (if true) | BB453 (if false)
BB451   <- [239]
  void                    Nop                !     
  lgl$#-          %451.1 = %239.1
  dr              %451.2 = DeadBranchReached@0x5615050d2fd0[Test#72]
  goto BB226
BB229   <- [228, 506]
  val?^ | miss    %229.0 = LdVar              eR    length, e0.1
  lgl$#-          %229.1 = Identical                <blt length>, %229.0   <true>
  void                    Branch                   %229.1 -> BB456 (if true) | BB457 (if false)
BB263   <- [448]
  val?^ | miss    %263.0 = LdVar              eR    c, e0.1
  lgl$#-          %263.1 = Identical                <blt c>, %263.0   <@?>
  void                    Branch                   %263.1 -> BB265 (if true) | BB264 (if false)
BB189   <- [448]
  (cls|spec|blt)  %189.0 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %189.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p52, e0.1
  prom-           %189.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p53, e0.1
  val?            %189.3 = Call               !v    %189.0(%189.1, %189.2) e0.1   <(nil|cls)->
  void                    StVar              lW    validityMethod, %189.3, e0.1
  lgl$#-          %189.5 = IsType                   %189.3 isA val?-
  val?^ | miss    %189.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %189.7 = Identical                <blt is.function>, %189.6   <true>
  void                    Branch                   %189.7 -> BB460 (if true) | BB461 (if false)
BB155   <- [482]
  void                    Nop                !     
  lgl$-           %155.1 = %482.1
  goto BB88
BB85   <- [482]
  val?^ | miss    %85.0 = LdVar              eR    .identC, e472.7
  lgl$#-          %85.1 = Identical                %85.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %85.1 -> BB490 (if true) | BB491 (if false)
BB83   <- [483, 491]
  val?^ | miss    %83.0 = Phi                      %483.1:BB483, %491.1:BB491
  val?^ | miss    %83.1 = %83.0
  dr              %83.2 = Phi                      %483.2:BB483, %491.2:BB491
  dr              %83.3 = %83.2
  fs              %83.4 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %83.5 = FrameState         R     0x5614fb752a40+37: [%478.2], env=e472.7, next=%83.4
  void                    Deopt              !v    %83.5, %83.3, %83.1   !
BB452   <- [450]
  prom-           %452.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p60, e0.1
  val?^           %452.1 = CastType                 up %452.0
  env             e452.2 = MkEnv              l     x=%452.1, parent=e0.1, context 0
  val?^ | miss    %452.3 = LdVar              eR    isTRUE, e452.2
  lgl$#-          %452.4 = Identical                %452.3, function(x) <(rir::DispatchTable*)0x5614fa764a|...
  void                    Branch                   %452.4 -> BB454 (if true) | BB455 (if false)
BB453   <- [450]
  void                    Nop                !     
  val?^ | miss    %453.1 = %450.0
  dr              %453.2 = CallTarget@0x5615050d2fd0[Call#111]
  goto BB226
BB226   <- [451, 453, 455]
  val?^ | miss    %226.0 = Phi                      %451.1:BB451, %453.1:BB453, %455.1:BB455
  val?^ | miss    %226.1 = %226.0
  dr              %226.2 = Phi                      %451.2:BB451, %453.2:BB453, %455.2:BB455
  dr              %226.3 = %226.2
  fs              %226.4 = FrameState         R     0x56150519b9d0+6457: [%225.1], env=e0.1
  void                    Deopt              !v    %226.4, %226.3, %226.1   !
BB456   <- [229]
  val?^ | miss    %456.0 = LdVar              eR    errors, e0.1
  lgl$#-          %456.1 = IsType                   %456.0 isA val?~- | miss
  void                    Branch                   %456.1 -> BB462 (if true) | BB463 (if false)
BB457   <- [229]
  void                    Nop                !     
  lgl$#-          %457.1 = %229.1
  dr              %457.2 = DeadBranchReached@0x5615050d2fd0[Test#73]
  goto BB230
BB265   <- [263]
  val?^ | miss    %265.0 = LdVar              eR    errors, e0.1
  val?            %265.1 = Force!             !v    %265.0, e0.1   <val?_>
  (cls|spec|blt)  %265.2 = LdFun              !v    paste0, e0.1
  fs              %265.3 = FrameState         R     0x56150519b9d0+5678: [%390.2, %390.3, %180.2, <blt c>, %265.1, %265.2], env=e0.1
  void                    Deopt              !v    %265.3, DeadCall@0x5615050d2fd0[Call#94], %265.2   !
BB264   <- [263]
  (cls|spec|blt)  %264.0 = LdFun              !v    c, e0.1
  fs              %264.1 = FrameState         R     0x56150519b9d0+5622: [%390.2, %390.3, %180.2, %264.0], env=e0.1
  void                    Deopt              !v    %264.1, DeadCall@0x5615050d2fd0[Call#92], %264.0   !
BB460   <- [189]
  val             %460.0 = ChkMissing         e     %189.3
  void                    Branch                   %189.5 -> BB464 (if true) | BB465 (if false)
BB461   <- [189]
  void                    Nop                !     
  lgl$#-          %461.1 = %189.7
  dr              %461.2 = DeadBranchReached@0x5615050d2fd0[Test#67]
  goto BB190
BB88   <- [155, 508]
  lgl$-           %88.0 = Phi                      %508.3:BB508, %155.1:BB155
  lgl$-           %88.1 = %88.0
  lgl$#-          %88.2 = CheckTrueFalse     e     %88.1
  void                    Branch                   %88.2 -> BB154 (if true) | BB89 (if false)
BB490   <- [85]
  prom-           %490.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p83, e472.7
  val?            %490.1 = StaticCall         !v    .identC[0x5614ffe96fc0](%490.0, "ANY") e472.7   <lgl$->
  lgl$#-          %490.2 = IsType                   %490.1 isA lgl$-
  void                    Branch                   %490.2 -> BB508 (if true) | BB509 (if false)
BB491   <- [85]
  void                    Nop                !     
  val?^ | miss    %491.1 = %85.0
  dr              %491.2 = CallTarget@0x5614f93ef020[Call#4]
  goto BB83
BB454   <- [452]
  val?            %454.0 = Force!<lazy>       !vL   %452.1, e452.2   <lgl$->
  val+            %454.1 = CallSafeBuiltin    wed   is.logical(%454.0)    <lgl$->
  lgl$#-          %454.2 = IsType                   %454.1 isA lgl$-
  void                    Branch                   %454.2 -> BB466 (if true) | BB467 (if false)
BB455   <- [452]
  void                    Nop                !     
  val?^ | miss    %455.1 = %452.3
  dr              %455.2 = CallTarget@0x561505176338[Call#0]
  goto BB226
BB462   <- [456]
  val?~- | miss   %462.0 = CastType           d     dn %456.0
  val?-           %462.1 = Force!<value>            %462.0,    <str->
  (int|real)$-    %462.2 = CallSafeBuiltin    wed   length(%462.1)    <int$->
  lgl$#-          %462.3 = IsType                   %462.2 isA int$-
  void                    Branch                   %462.3 -> BB468 (if true) | BB469 (if false)
BB463   <- [456]
  void                    Nop                !     
  val?^ | miss    %463.1 = %456.0
  dr              %463.2 = Typecheck@0x5615050d2fd0[Type#359]
  goto BB230
BB230   <- [457, 463]
  val?^ | miss    %230.0 = Phi                      %457.1:BB457, %463.1:BB463
  val?^ | miss    %230.1 = %230.0
  dr              %230.2 = Phi                      %457.2:BB457, %463.2:BB463
  dr              %230.3 = %230.2
  fs              %230.4 = FrameState         R     0x56150519b9d0+6615: [], env=e0.1
  void                    Deopt              !v    %230.4, %230.3, %230.1   !
BB464   <- [460]
  val?-           %464.0 = CastType           d     dn %189.3   <(nil|cls)->
  lgl$#-          %464.1 = CallSafeBuiltin    wed   is.function(%464.0)    <lgl$->
  void                    Branch                   %464.1 -> BB196 (if true) | BB194 (if false)
BB465   <- [460]
  void                    Nop                !     
  val?            %465.1 = %189.3
  dr              %465.2 = Typecheck@0x5615050d2fd0[Type#319]
  goto BB190
BB190   <- [461, 465]
  val?^ | miss    %190.0 = Phi                      %461.1:BB461, %465.1:BB465
  val?^ | miss    %190.1 = %190.0
  dr              %190.2 = Phi                      %461.2:BB461, %465.2:BB465
  dr              %190.3 = %190.2
  fs              %190.4 = FrameState         R     0x56150519b9d0+5812: [%390.2, %390.3, %180.2], env=e0.1
  void                    Deopt              !v    %190.4, %190.3, %190.1   !
BB154   <- [88]
  void                    Nop                !     
  lgl$#-          %154.1 = true
  goto BB120
BB89   <- [88]
  val?^ | miss    %89.0 = LdVar              eR    ClassDef1, e472.7
  val?            %89.1 = Force!<lazy>       !v    %89.0, e472.7   <other>
  lgl$-           %89.2 = Is                       %89.1, NULL
  lgl$#-          %89.3 = CheckTrueFalse     e     %89.2
  void                    Branch                   %89.3 -> BB153 (if true) | BB90 (if false)
BB508   <- [490]
  lgl$-           %508.0 = CastType           d     dn %490.1
  lgl$-           %508.1 = AsLogical                %508.0
  lgl$-           %508.2 = LOr                      %482.1, %508.1
  lgl$-           %508.3 = %508.2
  goto BB88
BB509   <- [490]
  fs              %509.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %509.1 = FrameState         R     0x5614fb752a40+86: [%482.1, %490.1], env=e472.7, next=%509.0
  void                    Deopt              !v    %509.1, Typecheck@0x5614f93ef020[Type#11], %490.1   !
BB466   <- [454]
  lgl$-           %466.0 = CastType           d     dn %454.1
  lgl$-           %466.1 = AsLogical                %466.0
  lgl$#-          %466.2 = Identical                %466.1, false
  void                    Branch                   %466.2 -> BB257 (if true) | BB242 (if false)
BB467   <- [454]
  void                    Nop                !     
  val+            %467.1 = %454.1
  dr              %467.2 = Typecheck@0x5614f9e5c6d8[Type#2]
  goto BB240
BB468   <- [462]
  int$-           %468.0 = CastType           d     dn %462.2
  lgl$#-          %468.1 = CheckTrueFalse     e     %468.0
  void                    Branch                   %468.1 -> BB236 (if true) | BB234 (if false)
BB469   <- [462]
  fs              %469.0 = FrameState         R     0x56150519b9d0+6706: [%462.2], env=e0.1
  void                    Deopt              !v    %469.0, Typecheck@0x5615050d2fd0[Type#360], %462.2   !
BB196   <- [464]
  val?^ | miss    %196.0 = LdVar              eR    c, e0.1
  lgl$#-          %196.1 = Identical                <blt c>, %196.0   <true>
  void                    Branch                   %196.1 -> BB484 (if true) | BB485 (if false)
BB194   <- [464]
  void                    Nop                !     
  goto BB195
BB120   <- [154, 153, 119]
  val?            %120.0 = Phi                      %119.2:BB119, %153.1:BB153, %154.1:BB154
  val?            %120.1 = %120.0
  val?            %120.2 = PopContext         C     %120.1, %472.3   <(lgl|other)>
  void                    StVar              lW    ok, %120.2, e0.1
  val?^ | miss    %120.4 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %120.5 = Identical                %120.4, function(x) <(rir::DispatchTable*)0x5614fb9ff8|...
  void                    Branch                   %120.5 -> BB492 (if true) | BB493 (if false)
BB153   <- [89]
  void                    Nop                !     
  lgl$#-          %153.1 = false
  goto BB120
BB90   <- [89]
  (cls|spec|blt)  %90.0 = LdFun              !v    @, <0x5614f88a6bd8>, e472.7
  prom-           %90.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p84, e472.7
  prom-           %90.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p85, e472.7
  val?            %90.3 = Call               !v    %90.0(%90.1, %90.2) e472.7   <vec+>
  void                    StVar              lW    ext, %90.3, e472.7
  lgl$#-          %90.5 = IsType                   %90.3 isA val+   <true>
  val             %90.6 = ChkMissing         e     %90.3
  void                    Branch                   %90.5 -> BB498 (if true) | BB499 (if false)
BB257   <- [466]
  void                    Nop                !     
  lgl$-           %257.1 = %466.1
  goto BB243
BB242   <- [466]
  lgl$#-          %242.0 = IsType                   %454.0 isA lgl$-
  void                    Branch                   %242.0 -> BB474 (if true) | BB475 (if false)
BB240   <- [467, 475, 477]
  val?^ | miss    %240.0 = Phi                      %467.1:BB467, %475.1:BB475, %477.1:BB477
  val?^ | miss    %240.1 = %240.0
  dr              %240.2 = Phi                      %467.2:BB467, %475.2:BB475, %477.2:BB477
  dr              %240.3 = %240.2
  fs              %240.4 = FrameState         R     0x56150519b9d0+6579: [<blt c>, %414.1], env=e0.1
  fs              %240.5 = FrameState         R     0x5614fe01ab40+32: [], env=e452.2, next=%240.4
  prom-           %240.6 = MkArg                    %454.0, validObject[0x561505be9030]_p94 (!refl), e452.2
  val?~           %240.7 = CastType                 up %240.6
  env             e240.8 = (MkEnv)            l     x=%240.7, parent=R_BaseNamespace, context -1
  fs              %240.9 = FrameState         R     0x5614f8cf86d0+91: [%454.1], env=e240.8, next=%240.5
  void                    Deopt              !v    %240.9, %240.3, %240.1   !
BB236   <- [468]
  val?^ | miss    %236.0 = LdVar              eR    test, e0.1
  val?            %236.1 = Force!             !v    %236.0, e0.1   <val?_>
  lgl$#-          %236.2 = CheckTrueFalse     we    %236.1
  void                    Branch                   %236.2 -> BB238 (if true) | BB237 (if false)
BB234   <- [468]
  void                    Visible            v     
  lgl$#-          %234.1 = true
  goto BB235
BB484   <- [196]
  val?^ | miss    %484.0 = LdVar              eR    errors, e0.1
  lgl$#-          %484.1 = IsType                   %484.0 isA val?~- | miss
  void                    Branch                   %484.1 -> BB486 (if true) | BB487 (if false)
BB485   <- [196]
  void                    Nop                !     
  lgl$#-          %485.1 = %196.1
  dr              %485.2 = DeadBranchReached@0x5615050d2fd0[Test#68]
  goto BB192
BB195   <- [194, 217]
  void                    Nop                !     
  int$-           %195.1 = %180.2
  goto BB180
BB492   <- [120]
  val             %492.0 = ChkMissing         e     %120.2
  val+            %492.1 = CallSafeBuiltin    wed   is.logical(%120.2)    <lgl$->
  lgl$#-          %492.2 = IsType                   %492.1 isA lgl$-
  void                    Branch                   %492.2 -> BB510 (if true) | BB511 (if false)
BB493   <- [120]
  fs              %493.0 = FrameState         R     0x56150519b9d0+3519: [%350.3, %350.4, %59.2], env=e0.1
  void                    Deopt              !v    %493.0, CallTarget@0x5615050d2fd0[Call#56], %120.4   !
BB498   <- [90]
  val?^ | miss    %498.0 = LdVar              eR    class2, e472.7
  val?            %498.1 = Force!<wrapped>    !v    %498.0, e472.7   <str$+>
  lgl$#-          %498.2 = IsType                   %498.1 isA val?+
  lgl$#-          %498.3 = IsType                   %90.3 isA val?+
  void                    Branch                   %498.3 -> BB500 (if true) | BB501 (if false)
BB499   <- [90]
  fs              %499.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %499.1 = FrameState         R     0x5614fb752a40+199: [], env=e472.7, next=%499.0
  void                    Deopt              !v    %499.1, DeadBranchReached@0x5614f93ef020[Test#1], %90.5   !
BB243   <- [257, 474]
  lgl$-           %243.0 = Phi                      %474.1:BB474, %257.1:BB257
  lgl$-           %243.1 = %243.0
  lgl$-           %243.2 = AsLogical                %243.1
  lgl$#-          %243.3 = Identical                %243.2, false
  void                    Branch                   %243.3 -> BB256 (if true) | BB244 (if false)
BB474   <- [242]
  lgl$-           %474.0 = AsLogical                %466.1
  lgl$-           %474.1 = %474.0
  goto BB243
BB475   <- [242]
  void                    Nop                !     
  val?            %475.1 = %454.0
  dr              %475.2 = Typecheck@0x5614f9e5c6d8[Type#4]
  goto BB240
BB238   <- [236]
  val?^ | miss    %238.0 = LdVar              eR    errors, e0.1
  void                    Visible            v     
  val?            %238.2 = Force!             !     %238.0, e0.1   <val?_>
  val?            %238.3 = %238.2
  goto BB235
BB237   <- [236]
  (cls|spec|blt)  %237.0 = LdFun              !v    gettextf, e0.1
  fs              %237.1 = FrameState         R     0x56150519b9d0+6753: [%237.0], env=e0.1
  void                    Deopt              !v    %237.1, DeadCall@0x5615050d2fd0[Call#114], %237.0   !
BB235   <- [234, 238]
  val?            %235.0 = Phi                      %234.1:BB234, %238.3:BB238
  val?            %235.1 = %235.0
  void                    Return             l     %235.1
BB486   <- [484]
  val?~- | miss   %486.0 = CastType           d     dn %484.0
  val?-           %486.1 = Force!<value>            %486.0,    <str->
  val?^ | miss    %486.2 = LdVar              eR    anyStrings, e0.1
  lgl$#-          %486.3 = Identical                %486.2, %0.2
  void                    Branch                   %486.3 -> BB494 (if true) | BB495 (if false)
BB487   <- [484]
  void                    Nop                !     
  val?^ | miss    %487.1 = %484.0
  dr              %487.2 = Typecheck@0x5615050d2fd0[Type#329]
  goto BB192
BB192   <- [485, 487, 495, 505]
  val?^ | miss    %192.0 = Phi                      %485.1:BB485, %487.1:BB487, %495.1:BB495, %505.1:BB505
  val?^ | miss    %192.1 = %192.0
  dr              %192.2 = Phi                      %485.2:BB485, %487.2:BB487, %495.2:BB495, %505.2:BB505
  dr              %192.3 = %192.2
  fs              %192.4 = FrameState         R     0x56150519b9d0+5903: [%390.2, %390.3, %180.2, %464.1], env=e0.1
  void                    Deopt              !v    %192.4, %192.3, %192.1   !
BB510   <- [492]
  lgl$-           %510.0 = CastType           d     dn %492.1
  lgl$-           %510.1 = AsLogical                %510.0
  lgl$#-          %510.2 = Identical                %510.1, false
  void                    Branch                   %510.2 -> BB141 (if true) | BB125 (if false)
BB511   <- [492]
  void                    Nop                !     
  val+            %511.1 = %492.1
  dr              %511.2 = Typecheck@0x5614fcd54748[Type#2]
  goto BB123
BB500   <- [498]
  val?+           %500.0 = CastType           d     dn %90.3   <vec+>
  void                    Branch                   %498.2 -> BB502 (if true) | BB503 (if false)
BB501   <- [498]
  void                    Nop                !     
  val?            %501.1 = %90.3
  dr              %501.2 = Typecheck@0x5614f93ef020[Type#15]
  goto BB93
BB256   <- [243]
  void                    Nop                !     
  lgl$-           %256.1 = %243.2
  goto BB245
BB244   <- [243]
  lgl$#-          %244.0 = IsType                   %454.0 isA lgl$-
  void                    Branch                   %244.0 -> BB476 (if true) | BB477 (if false)
BB494   <- [486]
  prom-           %494.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p54, e0.1
  val?^           %494.1 = CastType                 up %494.0
  env             e494.2 = MkEnv              l     x=%494.1, parent=e0.1, context 0
  val?^ | miss    %494.3 = LdVar              eR    isTRUE, e494.2
  lgl$#-          %494.4 = Identical                %494.3, function(x) <(rir::DispatchTable*)0x5614fa764a|...
  void                    Branch                   %494.4 -> BB504 (if true) | BB505 (if false)
BB495   <- [486]
  void                    Nop                !     
  val?^ | miss    %495.1 = %486.2
  dr              %495.2 = CallTarget@0x5615050d2fd0[Call#101]
  goto BB192
BB141   <- [510]
  void                    Nop                !     
  lgl$-           %141.1 = %510.1
  goto BB126
BB125   <- [510]
  lgl$#-          %125.0 = IsType                   %120.2 isA lgl$-
  void                    Branch                   %125.0 -> BB516 (if true) | BB517 (if false)
BB123   <- [511, 517, 519]
  val?^ | miss    %123.0 = Phi                      %511.1:BB511, %517.1:BB517, %519.1:BB519
  val?^ | miss    %123.1 = %123.0
  dr              %123.2 = Phi                      %511.2:BB511, %517.2:BB517, %519.2:BB519
  dr              %123.3 = %123.2
  prom-           %123.4 = MkArg                    %120.2, validObject[0x561505be9030]_p31 (!refl), e0.1
  val?~           %123.5 = CastType                 up %123.4
  fs              %123.6 = FrameState         R     0x56150519b9d0+3551: [%350.3, %350.4, %59.2], env=e0.1
  env             e123.7 = (MkEnv)            l     x=%123.5, parent=R_BaseNamespace, context 0
  fs              %123.8 = FrameState         R     0x5614fbd15cc0+91: [%492.1], env=e123.7, next=%123.6
  void                    Deopt              !v    %123.8, %123.3, %123.1   !
BB502   <- [500]
  val?+           %502.0 = CastType           d     dn %498.1   <str$+>
  val?            %502.1 = Extract2_1D        wed   %500.0, %502.0, elided   <(nil|other)>
  lgl$-           %502.2 = Is                       %502.1, NULL
  void                    StVar              lW    contained, %502.1, e472.7
  lgl$-           %502.4 = Not                d     %502.2, elided
  lgl$#-          %502.5 = CheckTrueFalse     e     %502.4
  void                    Branch                   %502.5 -> BB152 (if true) | BB95 (if false)
BB503   <- [500]
  void                    Nop                !     
  val?            %503.1 = %498.1
  dr              %503.2 = Typecheck@0x5614f93ef020[Type#18]
  goto BB93
BB93   <- [501, 503]
  val?^ | miss    %93.0 = Phi                      %501.1:BB501, %503.1:BB503
  val?^ | miss    %93.1 = %93.0
  dr              %93.2 = Phi                      %501.2:BB501, %503.2:BB503
  dr              %93.3 = %93.2
  fs              %93.4 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %93.5 = FrameState         R     0x5614fb752a40+253: [%90.3, %498.1], env=e472.7, next=%93.4
  void                    Deopt              !v    %93.5, %93.3, %93.1   !
BB245   <- [256, 476]
  lgl$-           %245.0 = Phi                      %476.5:BB476, %256.1:BB256
  lgl$-           %245.1 = %245.0
  lgl$-           %245.2 = AsLogical                %245.1
  lgl$#-          %245.3 = Identical                %245.2, false
  void                    Branch                   %245.3 -> BB255 (if true) | BB246 (if false)
BB476   <- [244]
  lgl$-           %476.0 = CastType           d     dn %454.0
  lgl$-           %476.1 = CallSafeBuiltin    wed   is.na(%476.0)    <lgl$->
  lgl$-           %476.2 = Not                d     %476.1, elided
  lgl$-           %476.3 = AsLogical                %476.2
  lgl$-           %476.4 = LAnd                     %243.2, %476.3
  lgl$-           %476.5 = %476.4
  goto BB245
BB477   <- [244]
  void                    Nop                !     
  val?            %477.1 = %454.0
  dr              %477.2 = Typecheck@0x5614f9e5c6d8[Type#8]
  goto BB240
BB504   <- [494]
  prom-           %504.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p95, e494.2
  val?^           %504.1 = CastType                 up %504.0
  env             e504.2 = (MkEnv)            l     x=%504.1, parent=R_BaseNamespace, context -1
  val?            %504.3 = Force!<lazy>       !vL   %494.1, e504.2   <lgl$->
  prom-           %504.4 = MkArg                    %504.3, validObject[0x561505be9030]_p95 (!refl), e494.2
  val?~           %504.5 = CastType                 up %504.4
  void                    StArg              lWd   x, %504.5, e504.2
  lgl$#-          %504.7 = IsEnvStub          R     , e504.2
  void                    Branch                   %504.7 -> BB520 (if true) | BB521 (if false)
BB505   <- [494]
  void                    Nop                !     
  val?^ | miss    %505.1 = %494.3
  dr              %505.2 = CallTarget@0x561505176338[Call#0]
  goto BB192
BB126   <- [141, 516]
  lgl$-           %126.0 = Phi                      %516.1:BB516, %141.1:BB141
  lgl$-           %126.1 = %126.0
  lgl$-           %126.2 = AsLogical                %126.1
  lgl$#-          %126.3 = Identical                %126.2, false
  void                    Branch                   %126.3 -> BB140 (if true) | BB127 (if false)
BB516   <- [125]
  lgl$-           %516.0 = AsLogical                %510.1
  lgl$-           %516.1 = %516.0
  goto BB126
BB517   <- [125]
  void                    Nop                !     
  val?            %517.1 = %120.2
  dr              %517.2 = Typecheck@0x5614fcd54748[Type#4]
  goto BB123
BB152   <- [502]
  val             %152.0 = ChkMissing         e     %502.1
  val?            %152.1 = %502.1
  goto BB119
BB95   <- [502]
  val?^ | miss    %95.0 = LdVar              eR    ClassDef2, e472.7
  val?            %95.1 = Force!<lazy>       !v    %95.0, e472.7   <other>
  lgl$-           %95.2 = Is                       %95.1, NULL
  lgl$#-          %95.3 = CheckTrueFalse     e     %95.2
  void                    Branch                   %95.3 -> BB151 (if true) | BB96 (if false)
BB255   <- [245]
  void                    Nop                !     
  lgl$-           %255.1 = %245.2
  goto BB247
BB246   <- [245]
  lgl$-           %246.0 = AsLogical          e     %454.0
  lgl$-           %246.1 = LAnd                     %245.2, %246.0
  lgl$-           %246.2 = %246.1
  goto BB247
BB520   <- [504]
  val+            %520.0 = CallSafeBuiltin    wed   is.logical(%504.3)    <lgl$->
  lgl$#-          %520.1 = IsType                   %520.0 isA lgl$-
  void                    Branch                   %520.1 -> BB526 (if true) | BB527 (if false)
BB521   <- [504]
  fs              %521.0 = FrameState         R     0x56150519b9d0+6030: [%390.2, %390.3, %180.2, <blt c>, %486.1], env=e0.1
  fs              %521.1 = FrameState         R     0x5614fe01ab40+32: [], env=e494.2, next=%521.0
  fs              %521.2 = FrameState         R     0x5614f8cf86d0+69: [<blt is.logical>, %504.3], env=e504.2, next=%521.1
  void                    Deopt              !v    %521.2, EnvStubMaterialized@0x5614f9e5c6d8[Call#unknown], e504.2   !
BB140   <- [126]
  void                    Nop                !     
  lgl$-           %140.1 = %126.2
  goto BB128
BB127   <- [126]
  lgl$#-          %127.0 = IsType                   %120.2 isA lgl$-
  void                    Branch                   %127.0 -> BB518 (if true) | BB519 (if false)
BB119   <- [152, 118]
  val?            %119.0 = Phi                      %118.2:BB118, %152.1:BB152
  val?            %119.1 = %119.0
  val?            %119.2 = %119.1
  goto BB120
BB151   <- [95]
  void                    Nop                !     
  lgl$#-          %151.1 = false
  goto BB118
BB96   <- [95]
  (cls|spec|blt)  %96.0 = LdFun              !v    @, <0x5614f88a6bd8>, e472.7
  prom-           %96.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p86, e472.7
  prom-           %96.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p87, e472.7
  val?            %96.3 = Call               !v    %96.0(%96.1, %96.2) e472.7   <vec$+>
  void                    StVar              lW    subs, %96.3, e472.7
  val?^ | miss    %96.5 = LdVar              eR    .identC, e472.7
  lgl$#-          %96.6 = Identical                %96.5, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %96.6 -> BB512 (if true) | BB513 (if false)
BB247   <- [255, 246]
  lgl$-           %247.0 = Phi                      %246.2:BB246, %255.1:BB255
  lgl$-           %247.1 = %247.0
  lgl$#-          %247.2 = CheckTrueFalse     e     %247.1
  void                    Branch                   %247.2 -> BB254 (if true) | BB250 (if false)
BB526   <- [520]
  lgl$-           %526.0 = CastType           d     dn %520.0
  lgl$-           %526.1 = AsLogical                %526.0
  lgl$#-          %526.2 = Identical                %526.1, false
  void                    Branch                   %526.2 -> BB262 (if true) | BB201 (if false)
BB527   <- [520]
  void                    Nop                !     
  val+            %527.1 = %520.0
  dr              %527.2 = Typecheck@0x5614f9e5c6d8[Type#2]
  goto BB199
BB128   <- [140, 518]
  lgl$-           %128.0 = Phi                      %518.5:BB518, %140.1:BB140
  lgl$-           %128.1 = %128.0
  lgl$-           %128.2 = AsLogical                %128.1
  lgl$#-          %128.3 = Identical                %128.2, false
  void                    Branch                   %128.3 -> BB139 (if true) | BB131 (if false)
BB518   <- [127]
  lgl$-           %518.0 = CastType           d     dn %120.2
  lgl$-           %518.1 = CallSafeBuiltin    wed   is.na(%518.0)    <lgl$->
  lgl$-           %518.2 = Not                d     %518.1, elided
  lgl$-           %518.3 = AsLogical                %518.2
  lgl$-           %518.4 = LAnd                     %126.2, %518.3
  lgl$-           %518.5 = %518.4
  goto BB128
BB519   <- [127]
  void                    Nop                !     
  val?            %519.1 = %120.2
  dr              %519.2 = Typecheck@0x5614fcd54748[Type#8]
  goto BB123
BB118   <- [151, 117]
  val?            %118.0 = Phi                      %117.2:BB117, %151.1:BB151
  val?            %118.1 = %118.0
  val?            %118.2 = %118.1
  goto BB119
BB512   <- [96]
  prom-           %512.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p88, e472.7
  val?            %512.1 = StaticCall         !v    .identC[0x5614ffe96fc0](%512.0, "classRepresentation") e472.7   <lgl$->
  lgl$#-          %512.2 = IsType                   %512.1 isA lgl$-
  void                    Branch                   %512.2 -> BB514 (if true) | BB515 (if false)
BB513   <- [96]
  fs              %513.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %513.1 = FrameState         R     0x5614fb752a40+364: [], env=e472.7, next=%513.0
  void                    Deopt              !v    %513.1, CallTarget@0x5614f93ef020[Call#7], %96.5   !
BB254   <- [247]
  val?^ | miss    %254.0 = LdVar              eR    character, e452.2
  lgl$#-          %254.1 = Identical                %254.0, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %254.1 -> BB496 (if true) | BB497 (if false)
BB250   <- [247]
  void                    Nop                !     
  val?            %250.1 = %454.0
  goto BB251
BB262   <- [526]
  void                    Nop                !     
  lgl$-           %262.1 = %526.1
  goto BB202
BB201   <- [526]
  lgl$#-          %201.0 = IsType                   %504.3 isA lgl$-
  void                    Branch                   %201.0 -> BB528 (if true) | BB529 (if false)
BB199   <- [527, 529, 537]
  val?^ | miss    %199.0 = Phi                      %527.1:BB527, %529.1:BB529, %537.1:BB537
  val?^ | miss    %199.1 = %199.0
  dr              %199.2 = Phi                      %527.2:BB527, %529.2:BB529, %537.2:BB537
  dr              %199.3 = %199.2
  fs              %199.4 = FrameState         R     0x56150519b9d0+6030: [%390.2, %390.3, %180.2, <blt c>, %486.1], env=e0.1
  fs              %199.5 = FrameState         R     0x5614fe01ab40+32: [], env=e494.2, next=%199.4
  fs              %199.6 = FrameState         R     0x5614f8cf86d0+91: [%520.0], env=e504.2, next=%199.5
  void                    Deopt              !v    %199.6, %199.3, %199.1   !
BB139   <- [128]
  void                    Nop                !     
  lgl$-           %139.1 = %128.2
  goto BB132
BB131   <- [128]
  lgl$#-          %131.0 = IsType                   %120.2 isA lgl$-
  void                    Branch                   %131.0 -> BB524 (if true) | BB525 (if false)
BB514   <- [512]
  lgl$-           %514.0 = CastType           d     dn %512.1
  lgl$-           %514.1 = Not                d     %514.0, elided
  lgl$-           %514.2 = AsLogical                %514.1
  lgl$#-          %514.3 = Identical                %514.2, false
  void                    Branch                   %514.3 -> BB102 (if true) | BB101 (if false)
BB515   <- [512]
  void                    Nop                !     
  val?            %515.1 = %512.1
  dr              %515.2 = Typecheck@0x5614f93ef020[Type#26]
  goto BB99
BB496   <- [254]
  str-            %496.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  str-            %496.1 = %496.0
  goto BB251
BB497   <- [254]
  fs              %497.0 = FrameState         R     0x56150519b9d0+6579: [<blt c>, %414.1], env=e0.1
  fs              %497.1 = FrameState         R     0x5614fe01ab40+32: [], env=e452.2, next=%497.0
  prom-           %497.2 = MkArg                    %454.0, validObject[0x561505be9030]_p94 (!refl), e452.2
  val?~           %497.3 = CastType                 up %497.2
  env             e497.4 = (MkEnv)            l     x=%497.3, parent=R_BaseNamespace, context -1
  fs              %497.5 = FrameState         R     0x5614f8cf86d0+342: [%247.1], env=e497.4, next=%497.1
  void                    Deopt              !v    %497.5, CallTarget@0x561505176338[Call#1], %254.0   !
BB251   <- [250, 496]
  val?            %251.0 = Phi                      %250.1:BB250, %496.1:BB496   <str->
  val?            %251.1 = %251.0
  lgl$#-          %251.2 = IsType                   %251.1 isA val?-
  void                    Branch                   %251.2 -> BB506 (if true) | BB507 (if false)
BB202   <- [262, 528]
  lgl$-           %202.0 = Phi                      %528.1:BB528, %262.1:BB262
  lgl$-           %202.1 = %202.0
  lgl$-           %202.2 = AsLogical                %202.1
  lgl$#-          %202.3 = Identical                %202.2, false
  void                    Branch                   %202.3 -> BB261 (if true) | BB203 (if false)
BB528   <- [201]
  lgl$-           %528.0 = AsLogical                %526.1
  lgl$-           %528.1 = %528.0
  goto BB202
BB529   <- [201]
  void                    Nop                !     
  val?            %529.1 = %504.3
  dr              %529.2 = Typecheck@0x5614f9e5c6d8[Type#4]
  goto BB199
BB132   <- [139, 524]
  lgl$-           %132.0 = Phi                      %524.4:BB524, %139.1:BB139
  lgl$-           %132.1 = %132.0
  lgl$#-          %132.2 = CheckTrueFalse     e     %132.1
  void                    Branch                   %132.2 -> BB136 (if true) | BB133 (if false)
BB524   <- [131]
  lgl$-           %524.0 = CastType           d     dn %120.2
  lgl$-           %524.1 = Not                d     %524.0, elided
  lgl$-           %524.2 = AsLogical                %524.1
  lgl$-           %524.3 = LAnd                     %128.2, %524.2
  lgl$-           %524.4 = %524.3
  goto BB132
BB525   <- [131]
  void                    Nop                !     
  val?            %525.1 = %120.2
  dr              %525.2 = Typecheck@0x5614fcd54748[Type#10]
  goto BB129
BB102   <- [514]
  lgl$#-          %102.0 = CheckTrueFalse     e     %514.2
  void                    Branch                   %102.0 -> BB148 (if true) | BB103 (if false)
BB101   <- [514]
  (cls|spec|blt)  %101.0 = LdFun              !v    isClassUnion, e472.7
  fs              %101.1 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %101.2 = FrameState         R     0x5614fb752a40+419: [%514.2, %101.0], env=e472.7, next=%101.1
  void                    Deopt              !v    %101.2, DeadCall@0x5614f93ef020[Call#9], %101.0   !
BB99   <- [515, 523]
  val?^ | miss    %99.0 = Phi                      %515.1:BB515, %523.1:BB523
  val?^ | miss    %99.1 = %99.0
  dr              %99.2 = Phi                      %515.2:BB515, %523.2:BB523
  dr              %99.3 = %99.2
  fs              %99.4 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %99.5 = FrameState         R     0x5614fb752a40+401: [%512.1], env=e472.7, next=%99.4
  void                    Deopt              !v    %99.5, %99.3, %99.1   !
BB506   <- [251]
  val?-           %506.0 = CastType           d     dn %251.1   <str->
  val+            %506.1 = CallSafeBuiltin    wed   c(%414.1, %506.0)    <str->
  void                    StVar              lW    errors, %506.1, e0.1
  goto BB229
BB507   <- [251]
  fs              %507.0 = FrameState         R     0x56150519b9d0+6579: [<blt c>, %414.1], env=e0.1
  fs              %507.1 = FrameState         R     0x5614fe01ab40+94: [%251.1], env=e452.2, next=%507.0
  void                    Deopt              !v    %507.1, Typecheck@0x5615050d2fd0[Type#356], %251.1   !
BB261   <- [202]
  void                    Nop                !     
  lgl$-           %261.1 = %202.2
  goto BB204
BB203   <- [202]
  lgl$#-          %203.0 = IsType                   %504.3 isA lgl$-
  void                    Branch                   %203.0 -> BB536 (if true) | BB537 (if false)
BB136   <- [132]
  val?^ | miss    %136.0 = LdVar              eR    c, e0.1
  lgl$#-          %136.1 = Identical                <blt c>, %136.0   <@?>
  void                    Branch                   %136.1 -> BB138 (if true) | BB137 (if false)
BB133   <- [132]
  val?^ | miss    %133.0 = LdVar              eR    complete, e0.1
  lgl$#-          %133.1 = IsType                   %133.0 isA lgl$~-
  void                    Branch                   %133.1 -> BB532 (if true) | BB533 (if false)
BB129   <- [525, 533]
  val?^ | miss    %129.0 = Phi                      %525.1:BB525, %533.1:BB533
  val?^ | miss    %129.1 = %129.0
  dr              %129.2 = Phi                      %525.2:BB525, %533.2:BB533
  dr              %129.3 = %129.2
  prom-           %129.4 = MkArg                    %120.2, validObject[0x561505be9030]_p31 (!refl), e0.1
  val?~           %129.5 = CastType                 up %129.4
  fs              %129.6 = FrameState         R     0x56150519b9d0+3551: [%350.3, %350.4, %59.2], env=e0.1
  env             e129.7 = (MkEnv)            l     x=%129.5, parent=R_BaseNamespace, context 0
  fs              %129.8 = FrameState         R     0x5614fbd15cc0+319: [%128.1], env=e129.7, next=%129.6
  void                    Deopt              !v    %129.8, %129.3, %129.1   !
BB148   <- [102]
  val?^ | miss    %148.0 = LdVar              eR    any, e472.7
  lgl$#-          %148.1 = Identical                <blt any>, %148.0   <@?>
  void                    Branch                   %148.1 -> BB150 (if true) | BB149 (if false)
BB103   <- [102]
  val?^ | miss    %103.0 = LdVar              eR    match, e472.7
  lgl$#-          %103.1 = Identical                %103.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %103.1 -> BB522 (if true) | BB523 (if false)
BB204   <- [261, 536]
  lgl$-           %204.0 = Phi                      %536.5:BB536, %261.1:BB261
  lgl$-           %204.1 = %204.0
  lgl$-           %204.2 = AsLogical                %204.1
  lgl$#-          %204.3 = Identical                %204.2, false
  void                    Branch                   %204.3 -> BB260 (if true) | BB205 (if false)
BB536   <- [203]
  lgl$-           %536.0 = CastType           d     dn %504.3
  lgl$-           %536.1 = CallSafeBuiltin    wed   is.na(%536.0)    <lgl$->
  lgl$-           %536.2 = Not                d     %536.1, elided
  lgl$-           %536.3 = AsLogical                %536.2
  lgl$-           %536.4 = LAnd                     %202.2, %536.3
  lgl$-           %536.5 = %536.4
  goto BB204
BB537   <- [203]
  void                    Nop                !     
  val?            %537.1 = %504.3
  dr              %537.2 = Typecheck@0x5614f9e5c6d8[Type#8]
  goto BB199
BB138   <- [136]
  val?^ | miss    %138.0 = LdVar              eR    errors, e0.1
  val?            %138.1 = Force!             !v    %138.0, e0.1   <val?_>
  (cls|spec|blt)  %138.2 = LdFun              !v    paste0, e0.1
  fs              %138.3 = FrameState         R     0x56150519b9d0+3651: [%350.3, %350.4, %59.2, <blt c>, %138.1, %138.2], env=e0.1
  void                    Deopt              !v    %138.3, DeadCall@0x5615050d2fd0[Call#60], %138.2   !
BB137   <- [136]
  (cls|spec|blt)  %137.0 = LdFun              !v    c, e0.1
  fs              %137.1 = FrameState         R     0x56150519b9d0+3595: [%350.3, %350.4, %59.2, %137.0], env=e0.1
  void                    Deopt              !v    %137.1, DeadCall@0x5615050d2fd0[Call#57], %137.0   !
BB532   <- [133]
  lgl$~-          %532.0 = CastType           d     dn %133.0
  lgl$-           %532.1 = Force!<wrapped>          %532.0,    <lgl$->
  lgl$-           %532.2 = Not                d     %532.1, elided
  lgl$#-          %532.3 = CheckTrueFalse     e     %532.2
  void                    Branch                   %532.3 -> BB135 (if true) | BB134 (if false)
BB533   <- [133]
  void                    Nop                !     
  val?^ | miss    %533.1 = %133.0
  dr              %533.2 = Typecheck@0x5615050d2fd0[Type#222]
  goto BB129
BB150   <- [148]
  (cls|spec|blt)  %150.0 = LdFun              !v    %in%, e472.7
  fs              %150.1 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %150.2 = FrameState         R     0x5614fb752a40+961: [<blt any>, %150.0], env=e472.7, next=%150.1
  void                    Deopt              !v    %150.2, DeadCall@0x5614f93ef020[Call#20], %150.0   !
BB149   <- [148]
  (cls|spec|blt)  %149.0 = LdFun              !v    any, e472.7
  fs              %149.1 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %149.2 = FrameState         R     0x5614fb752a40+924: [%149.0], env=e472.7, next=%149.1
  void                    Deopt              !v    %149.2, DeadCall@0x5614f93ef020[Call#15], %149.0   !
BB522   <- [103]
  prom-           %522.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p91, e472.7
  val?^           %522.1 = CastType                 up %522.0
  val?^ | miss    %522.2 = LdVar              eR    class1, e472.7
  val?            %522.3 = Force!<wrapped>    !v    %522.2, e472.7   <str$+>
  prom-           %522.4 = MkArg                    %522.3, validObject[0x561505be9030]_p90 (!refl), e472.7
  val?~           %522.5 = CastType                 up %522.4
  env             e522.6 = (MkEnv)            l     x=%522.5, table=%522.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  lgl$#-          %522.7 = IsEnvStub          R     , e522.6
  void                    Branch                   %522.7 -> BB530 (if true) | BB531 (if false)
BB523   <- [103]
  void                    Nop                !     
  val?^ | miss    %523.1 = %103.0
  dr              %523.2 = CallTarget@0x5614f93ef020[Call#10]
  goto BB99
BB260   <- [204]
  void                    Nop                !     
  lgl$-           %260.1 = %204.2
  goto BB206
BB205   <- [204]
  lgl$-           %205.0 = AsLogical          e     %504.3
  lgl$-           %205.1 = LAnd                     %204.2, %205.0
  lgl$-           %205.2 = %205.1
  goto BB206
BB135   <- [532]
  void                    Nop                !     
  int$-           %135.1 = %59.2
  goto BB59
BB134   <- [532]
  (cls|spec|blt)  %134.0 = LdFun              !v    anyStrings, e0.1
  fs              %134.1 = FrameState         R     0x56150519b9d0+3805: [%350.3, %350.4, %59.2, %134.0], env=e0.1
  void                    Deopt              !v    %134.1, DeadCall@0x5615050d2fd0[Call#62], %134.0   !
BB530   <- [522]
  val?            %530.0 = Force!<lazy>       !vL   %522.1, e522.6   <val?+>
  lgl$#-          %530.1 = IsType                   %530.0 isA val?+
  lgl$#-          %530.2 = IsEnvStub          R     , e522.6
  void                    Branch                   %530.2 -> BB534 (if true) | BB535 (if false)
BB531   <- [522]
  fs              %531.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %531.1 = FrameState         R     0x5614fb752a40+496: [], env=e472.7, next=%531.0
  env             e531.2 = (MkEnv)            l     x=%522.5, table=%522.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %531.3 = FrameState         R     0x5614f90bbd40+9: [%522.3], env=e531.2, next=%531.1
  void                    Deopt              !v    %531.3, EnvStubMaterialized@0x5614f910ecb0[Call#unknown], e522.6   !
BB206   <- [260, 205]
  lgl$-           %206.0 = Phi                      %205.2:BB205, %260.1:BB260
  lgl$-           %206.1 = %206.0
  lgl$#-          %206.2 = CheckTrueFalse     e     %206.1
  void                    Branch                   %206.2 -> BB259 (if true) | BB209 (if false)
BB534   <- [530]
  lgl$#-          %534.0 = IsType                   %522.3 isA val?+
  void                    Branch                   %534.0 -> BB540 (if true) | BB541 (if false)
BB535   <- [530]
  void                    Nop                !     
  env             e535.1 = e522.6
  dr              %535.2 = EnvStubMaterialized@0x5614f910ecb0[Call#unknown]
  goto BB106
BB259   <- [206]
  val?^ | miss    %259.0 = LdVar              eR    character, e494.2
  lgl$#-          %259.1 = Identical                %259.0, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %259.1 -> BB538 (if true) | BB539 (if false)
BB209   <- [206]
  void                    Nop                !     
  val?            %209.1 = %504.3
  goto BB210
BB540   <- [534]
  val?+           %540.0 = CastType           d     dn %522.3   <(int|str)+>
  void                    Branch                   %530.1 -> BB544 (if true) | BB545 (if false)
BB541   <- [534]
  void                    Nop                !     
  val?            %541.1 = %522.3
  dr              %541.2 = Typecheck@0x5614f910ecb0[Type#0]
  goto BB106
BB106   <- [535, 541, 545]
  val?^ | miss    %106.0 = Phi                      e535.1:BB535, %541.1:BB541, %545.1:BB545
  val?^ | miss    %106.1 = %106.0
  dr              %106.2 = Phi                      %535.2:BB535, %541.2:BB541, %545.2:BB545
  dr              %106.3 = %106.2
  fs              %106.4 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %106.5 = FrameState         R     0x5614fb752a40+496: [], env=e472.7, next=%106.4
  fs              %106.6 = FrameState         R     0x5614f90bbd40+23: [%522.3, %530.0], env=e522.6, next=%106.5
  void                    Deopt              !v    %106.6, %106.3, %106.1   !
BB538   <- [259]
  str-            %538.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  str-            %538.1 = %538.0
  goto BB210
BB539   <- [259]
  fs              %539.0 = FrameState         R     0x56150519b9d0+6030: [%390.2, %390.3, %180.2, <blt c>, %486.1], env=e0.1
  fs              %539.1 = FrameState         R     0x5614fe01ab40+32: [], env=e494.2, next=%539.0
  fs              %539.2 = FrameState         R     0x5614f8cf86d0+342: [%206.1], env=e504.2, next=%539.1
  void                    Deopt              !v    %539.2, CallTarget@0x561505176338[Call#1], %259.0   !
BB210   <- [209, 538]
  val?            %210.0 = Phi                      %209.1:BB209, %538.1:BB538   <str->
  val?            %210.1 = %210.0
  lgl$#-          %210.2 = IsType                   %210.1 isA val?-
  void                    Branch                   %210.2 -> BB542 (if true) | BB543 (if false)
BB544   <- [540]
  val?+           %544.0 = CastType           d     dn %530.0
  val+            %544.1 = CallSafeBuiltin    wed   match(%540.0, %544.0, NA, nil)    <int$->
  lgl$#-          %544.2 = IsType                   %544.1 isA int$-
  void                    Branch                   %544.2 -> BB548 (if true) | BB549 (if false)
BB545   <- [540]
  void                    Nop                !     
  val?            %545.1 = %530.0
  dr              %545.2 = Typecheck@0x5614f910ecb0[Type#1]
  goto BB106
BB542   <- [210]
  val?-           %542.0 = CastType           d     dn %210.1   <str->
  val+            %542.1 = CallSafeBuiltin    wed   c(%486.1, %542.0)    <str->
  void                    StVar              lW    errors, %542.1, e0.1
  val?^ | miss    %542.3 = LdVar              eR    length, e0.1
  lgl$#-          %542.4 = Identical                <blt length>, %542.3   <true>
  void                    Branch                   %542.4 -> BB546 (if true) | BB547 (if false)
BB543   <- [210]
  fs              %543.0 = FrameState         R     0x56150519b9d0+6030: [%390.2, %390.3, %180.2, <blt c>, %486.1], env=e0.1
  fs              %543.1 = FrameState         R     0x5614fe01ab40+94: [%210.1], env=e494.2, next=%543.0
  void                    Deopt              !v    %543.1, Typecheck@0x5615050d2fd0[Type#334], %210.1   !
BB548   <- [544]
  int$-           %548.0 = CastType           d     dn %544.1
  void                    StVar              lW    i, %548.0, e472.7
  val?^ | miss    %548.2 = LdVar              eR    is.na, e472.7
  lgl$#-          %548.3 = Identical                <blt is.na>, %548.2   <true>
  void                    Branch                   %548.3 -> BB552 (if true) | BB553 (if false)
BB549   <- [544]
  fs              %549.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %549.1 = FrameState         R     0x5614fb752a40+496: [], env=e472.7, next=%549.0
  fs              %549.2 = FrameState         R     0x5614f90bbd40+69: [%544.1], env=e522.6, next=%549.1
  void                    Deopt              !v    %549.2, Typecheck@0x5614f93ef020[Type#32], %544.1   !
BB546   <- [542]
  (int|real)$-    %546.0 = CallSafeBuiltin    wed   length(%542.1)    <int$->
  lgl$#-          %546.1 = IsType                   %546.0 isA int$-
  void                    Branch                   %546.1 -> BB550 (if true) | BB551 (if false)
BB547   <- [542]
  fs              %547.0 = FrameState         R     0x56150519b9d0+6066: [%390.2, %390.3, %180.2], env=e0.1
  void                    Deopt              !v    %547.0, DeadBranchReached@0x5615050d2fd0[Test#69], %542.4   !
BB552   <- [548]
  lgl$-           %552.0 = CallSafeBuiltin    wed   is.na(%548.0)    <lgl$->
  lgl$-           %552.1 = Not                d     %552.0, elided
  int-            %552.2 = Extract1_1D        wed   %548.0, %552.1, elided   <int->
  void                    StVar              lW    i, %552.2, e472.7
  val?^ | miss    %552.4 = LdVar              eR    length, e472.7
  lgl$#-          %552.5 = Identical                <blt length>, %552.4   <true>
  void                    Branch                   %552.5 -> BB554 (if true) | BB555 (if false)
BB553   <- [548]
  fs              %553.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %553.1 = FrameState         R     0x5614fb752a40+510: [], env=e472.7, next=%553.0
  void                    Deopt              !v    %553.1, DeadBranchReached@0x5614f93ef020[Test#3], %548.3   !
BB550   <- [546]
  int$-           %550.0 = CastType           d     dn %546.0
  lgl$#-          %550.1 = CheckTrueFalse     e     %550.0
  void                    Branch                   %550.1 -> BB218 (if true) | BB217 (if false)
BB551   <- [546]
  fs              %551.0 = FrameState         R     0x56150519b9d0+6157: [%390.2, %390.3, %180.2, %546.0], env=e0.1
  void                    Deopt              !v    %551.0, Typecheck@0x5615050d2fd0[Type#338], %546.0   !
BB554   <- [552]
  (int|real)$-    %554.0 = CallSafeBuiltin    wed   length(%552.2)    <int$->
  lgl$#-          %554.1 = IsType                   %554.0 isA int$-
  void                    Branch                   %554.1 -> BB556 (if true) | BB557 (if false)
BB555   <- [552]
  fs              %555.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %555.1 = FrameState         R     0x5614fb752a40+668: [], env=e472.7, next=%555.0
  void                    Deopt              !v    %555.1, DeadBranchReached@0x5614f93ef020[Test#4], %552.5   !
BB218   <- [550]
  void                    Nop                !     
  goto BB219
BB217   <- [550]
  void                    Nop                !     
  goto BB195
BB556   <- [554]
  int$-           %556.0 = CastType           d     dn %554.0
  lgl$#-          %556.1 = CheckTrueFalse     e     %556.0
  void                    Branch                   %556.1 -> BB142 (if true) | BB116 (if false)
BB557   <- [554]
  fs              %557.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %557.1 = FrameState         R     0x5614fb752a40+759: [%554.0], env=e472.7, next=%557.0
  void                    Deopt              !v    %557.1, Typecheck@0x5614f93ef020[Type#42], %554.0   !
BB142   <- [556]
  val?^ | miss    %142.0 = LdVar              eR    subs, e472.7
  val?            %142.1 = Force!             !v    %142.0, e472.7   <val?_>
  lgl$#-          %142.2 = IsType                   %142.1 isA val+   <@?>
  void                    Branch                   %142.2 -> BB145 (if true) | BB143 (if false)
BB116   <- [556]
  void                    Nop                !     
  lgl$#-          %116.1 = false
  goto BB117
BB145   <- [142]
  val?^ | miss    %145.0 = LdVar              eR    i, e472.7
  val?            %145.1 = Force!             !v    %145.0, e472.7   <val?_>
  lgl$#-          %145.2 = IsType                   %145.1 isA val?+
  void                    Branch                   %145.2 -> BB558 (if true) | BB559 (if false)
BB143   <- [142]
  prom-           %143.0 = MkArg                    unboundValue, validObject[0x561505be9030]_p93, e472.7
  prom-           %143.1 = %143.0
  goto BB144
BB117   <- [116, 144]
  val?            %117.0 = Phi                      %116.1:BB116, %144.3:BB144
  val?            %117.1 = %117.0
  val?            %117.2 = %117.1
  goto BB118
BB558   <- [145]
  val?+           %558.0 = CastType           d     dn %145.1   <val?_>
  val?            %558.1 = Extract1_1D        wed   %558.0, 1L, elided   <val?_>
  val?            %558.2 = %558.1
  goto BB144
BB559   <- [145]
  fs              %559.0 = FrameState         R     0x56150519b9d0+3505: [%350.3, %350.4, %59.2], env=e0.1
  fs              %559.1 = FrameState         R     0x5614fb752a40+835: [%142.1, %145.1], env=e472.7, next=%559.0
  void                    Deopt              !v    %559.1, Typecheck@0x5614f93ef020[Type#46], %145.1   !
BB144   <- [143, 558]
  val?            %144.0 = Phi                      %558.2:BB558, %143.1:BB143
  val?            %144.1 = %144.0
  val?            %144.2 = Extract2_1D        !v    %142.1, %144.1, e472.7   <val?_>
  val?            %144.3 = %144.2
  goto BB117
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p13, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x5615054fc818>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p11, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p12, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <(int|cls)->
  val?            %13.4 = %13.3
  goto BB11
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(int|cls)->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x5614f88a7748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(int|cls)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p25, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x5615054fc818>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x561505be9030]_p23, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x561505be9030]_p24, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?>
  val?            %13.4 = %13.3
  goto BB11
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x5614f88a7748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(lgl|other)>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     validityMethod, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p55, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as, <0x5614facc6e50>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p56, e0.0
  prom-           %0.3  = MkArg                    unboundValue, validObject[0x561505be9030]_p57, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <other>
  void                    Return             l     %0.4
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     validityMethod, <0x5614fc25db48>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p61, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p66, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 67:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|cls)->
  void                    Return             l     %0.3
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p71, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 72:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|cls)->
  void                    Return             l     %0.3
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 75:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, <0x5614f9a50cd0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p76, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <other>
  void                    Return             l     %0.3
Prom 76:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 81:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 82:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 83:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 84:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 85:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 86:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 87:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 88:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x5614f88a7748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p89, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 89:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 90:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 91:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x5614f88a7470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x561505be9030]_p92, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 92:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 93:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 94:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 95:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 100:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .requirePackage, <0x5614f8ee7018>, e0.0
  val?            %0.2  = Call               !     %0.1("methods") e0.0   <env->
  void                    Return             l     %0.2
Prom 101:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 102:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 103:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 104:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 105:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 106:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ validObject[0x561505be9030]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
