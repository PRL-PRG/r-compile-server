
┌──────────────────────────────────────────────────────────────────────────────┐
│ .diag2tT[0x5614fb30d8e0]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
.diag2tT[0x5614fb30d8e0]
BB0
  val?~+          %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     from=%0.2, uplo=%0.1, kind=%0.0, drop0(miss)=true, parent=<env 0x5614fad267d8>, context 1
  (cls|spec|blt)  %0.4  = LdFun              !v    @, <0x5614f88a6bd8>, <env 0x5614fad267d8>
  prom-           %0.5  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p1 (!refl), e0.3
  prom-           %0.6  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p2, e0.3
  val?            %0.7  = Call               !v    %0.4(%0.5, %0.6) e0.3   <real->
  void                    StVar              lW    x, %0.7, e0.3
  (cls|spec|blt)  %0.9  = LdFun              !v    @, <0x5614f88a6bd8>, e0.3
  prom-           %0.10 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p3, e0.3
  prom-           %0.11 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p4, e0.3
  val?            %0.12 = Call               !v    %0.9(%0.10, %0.11) e0.3   <str$->
  lgl$#-          %0.13 = IsType                   %0.12 isA val?-
  void                    Branch                   %0.13 -> BB12 (if true) | BB13 (if false)
BB12   <- [0]
  val?-           %12.0 = CastType           d     dn %0.12   <str$->
  lgl-            %12.1 = Eq                 wed   %12.0, "U", elided   <lgl$->
  lgl$#-          %12.2 = IsType                   %12.1 isA lgl$-
  void                    Branch                   %12.2 -> BB14 (if true) | BB15 (if false)
BB13   <- [0]
  fs              %13.0 = FrameState         R     0x5615054720e0+88: [%0.12], env=e0.3
  void                    Deopt              !v    %13.0, Typecheck@0x56150529b570[Type#7], %0.12   !
BB14   <- [12]
  lgl$-           %14.0 = CastType           d     dn %12.1
  lgl$#-          %14.1 = CheckTrueFalse     e     %14.0
  void                    Branch                   %14.1 -> BB8 (if true) | BB5 (if false)
BB15   <- [12]
  void                    Nop                !     
  lgl-            %15.1 = %12.1
  dr              %15.2 = Typecheck@0x56150529b570[Type#8]
  goto BB3
BB8   <- [14]
  val?^ | miss    %8.0  = LdVar              eR    integer, e0.3
  lgl$#-          %8.1  = Identical                %8.0, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %8.1 -> BB16 (if true) | BB17 (if false)
BB5   <- [14]
  val?^ | miss    %5.0  = LdVar              eR    &, e0.3
  lgl$#-          %5.1  = Identical                <blt &>, %5.0   <@?>
  void                    Branch                   %5.1 -> BB7 (if true) | BB6 (if false)
BB3   <- [15, 17]
  val?^ | miss    %3.0  = Phi                      %15.1:BB15, %17.1:BB17
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %15.2:BB15, %17.2:BB17
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5615054720e0+100: [%12.1], env=e0.3
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB16   <- [8]
  int-            %16.0 = CallSafeBuiltin    vwed  vector("integer", 0L)    <int->
  void                    StVar              lW    i, %16.0, e0.3
  val?^ | miss    %16.2 = LdVar              eR    new, e0.3
  lgl$#-          %16.3 = Identical                %16.2, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %16.3 -> BB18 (if true) | BB19 (if false)
BB17   <- [8]
  void                    Nop                !     
  val?^ | miss    %17.1 = %8.0
  dr              %17.2 = CallTarget@0x56150529b570[Call#11]
  goto BB3
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    drop0, e0.3
  val?            %7.1  = Force!             !v    %7.0, e0.3   <val?_>
  (cls|spec|blt)  %7.2  = LdFun              !v    any0, e0.3
  fs              %7.3  = FrameState         R     0x5615054720e0+195: [<blt &>, %7.1, %7.2], env=e0.3
  void                    Deopt              !v    %7.3, DeadCall@0x56150529b570[Call#5], %7.2   !
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    &, e0.3
  fs              %6.1  = FrameState         R     0x5615054720e0+139: [%6.0], env=e0.3
  void                    Deopt              !v    %6.1, DeadCall@0x56150529b570[Call#3], %6.0   !
BB18   <- [16]
  prom-           %18.0 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p5, e0.3
  prom-           %18.1 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p7, e0.3
  prom-           %18.2 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p10, e0.3
  prom-           %18.3 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p13, e0.3
  prom-           %18.4 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p16, e0.3
  prom-           %18.5 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p17, e0.3
  prom-           %18.6 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p18 (!refl), e0.3
  prom-           %18.7 = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p19 (!refl), e0.3
  dots-           %18.8 = DotsList           l     diag=%18.1, Dim=%18.2, Dimnames=%18.3, uplo=%18.4, x=%18.5, i=%18.6, j=%18.7
  val?            %18.9 = StaticCall         !     new[0x561505679f10](%18.0, %18.8) { 0 1n 2n 3n 4n 5n 6n 7n } e0.3   <other>
  void                    Return             l     %18.9
BB19   <- [16]
  fs              %19.0 = FrameState         R     0x5615054720e0+638: [], env=e0.3
  void                    Deopt              !v    %19.0, CallTarget@0x56150529b570[Call#12], %16.2   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    diag, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     paste0, <0x5614f89f03c8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "tTMatrix") e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    kind, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5614f88a6bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p8, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p9, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    diag, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5614f88a6bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p11, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p12, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <int->
  void                    Return             l     %0.4
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dim, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x5614f88a6bd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p14, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .diag2tT[0x5614fb30d8e0]_p15, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec->
  void                    Return             l     %0.4
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Dimnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    uplo, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3

│ .diag2tT[0x5614fb30d8e0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
