
┌──────────────────────────────────────────────────────────────────────────────┐
│ rownames[0x5614ff4cbc40]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
rownames[0x5614ff4cbc40]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, do.NULL(miss)=true, prefix(miss)="row", parent=R_BaseNamespace, context 1
  val?            %0.2  = Force!<lazy>       !v    %0.0, e0.1   <other>
  val?            %0.3  = CallBuiltin        !v    dimnames(%0.2) e0.1   <vec->
  void                    StVar              lW    dn, %0.3, e0.1
  lgl$#-          %0.5  = IsType                   %0.3 isA val+   <true>
  lgl$#-          %0.6  = IsType                   %0.3 isA val?-
  val             %0.7  = ChkMissing         e     %0.3
  void                    Branch                   %0.5 -> BB26 (if true) | BB27 (if false)
BB26   <- [0]
  void                    Branch                   %0.6 -> BB28 (if true) | BB29 (if false)
BB27   <- [0]
  void                    Nop                !     
  lgl$#-          %27.1 = %0.5
  dr              %27.2 = DeadBranchReached@0x5614fcce2860[Test#1]
  goto BB25
BB28   <- [26]
  val?-           %28.0 = CastType           d     dn %0.3   <vec->
  val?            %28.1 = Extract2_1D        wed   %28.0, 1L, elided   <(nil|str)->
  lgl$-           %28.2 = Is                       %28.1, NULL
  lgl$-           %28.3 = Not                d     %28.2, elided
  lgl$#-          %28.4 = CheckTrueFalse     e     %28.3
  void                    Branch                   %28.4 -> BB24 (if true) | BB5 (if false)
BB29   <- [26]
  void                    Nop                !     
  val?            %29.1 = %0.3
  dr              %29.2 = Typecheck@0x5614fcce2860[Type#2]
  goto BB25
BB25   <- [27, 29]
  val?^ | miss    %25.0 = Phi                      %27.1:BB27, %29.1:BB29
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %27.2:BB27, %29.2:BB29
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x5614fedd25b0+105: [], env=e0.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB24   <- [28]
  void                    Visible            v     
  val?            %24.1 = %28.1
  goto BB22
BB5   <- [28]
  val?^ | miss    %5.0  = LdVar              eR    NROW, e0.1
  lgl$#-          %5.1  = Identical                %5.0, function(x) <(rir::DispatchTable*)0x5614fb3311|...
  void                    Branch                   %5.1 -> BB30 (if true) | BB31 (if false)
BB22   <- [24, 21]
  val?            %22.0 = Phi                      %21.1:BB21, %24.1:BB24
  val?            %22.1 = %22.0
  void                    Return             l     %22.1
BB30   <- [5]
  prom-           %30.0 = MkArg                    unboundValue, rownames[0x5614ff4cbc40]_p2, e0.1
  ct              %30.1 = PushContext        lCL   %30.0, NROW(x), function(x) <(rir::DispatchTable*)0x5614fb3311|..., e0.1
  val?^           %30.2 = CastType                 up %30.0
  env             e30.3 = MkEnv              l     x=%30.2, parent=R_BaseNamespace, context 1
  val?            %30.4 = Force!<lazy>       !vL   %30.2, e30.3   <val?>
  val?            %30.5 = CallBuiltin        !v    dim(%30.4) e30.3   <(nil|int)->
  void                    StVar              lW    d, %30.5, e30.3
  lgl$#-          %30.7 = IsType                   %30.5 isA val?-
  void                    Branch                   %30.7 -> BB32 (if true) | BB33 (if false)
BB31   <- [5]
  fs              %31.0 = FrameState         R     0x5614fedd25b0+157: [%28.1], env=e0.1
  void                    Deopt              !v    %31.0, CallTarget@0x5614fcce2860[Call#1], %5.0   !
BB32   <- [30]
  val?-           %32.0 = CastType           d     dn %30.5   <(nil|int)->
  (int|real)$-    %32.1 = CallSafeBuiltin    wed   length(%32.0)    <int$->
  lgl$#-          %32.2 = IsType                   %32.1 isA int$-
  void                    Branch                   %32.2 -> BB34 (if true) | BB35 (if false)
BB33   <- [30]
  fs              %33.0 = FrameState         R     0x5614fedd25b0+207: [], env=e0.1
  fs              %33.1 = FrameState         R     0x5614fab830b0+167: [<blt length>, %30.5], env=e30.3, next=%33.0
  void                    Deopt              !v    %33.1, Typecheck@0x5614f9be96a8[Type#4], %30.5   !
BB34   <- [32]
  int$-           %34.0 = CastType           d     dn %32.1
  lgl$#-          %34.1 = CheckTrueFalse     e     %34.0
  void                    Branch                   %34.1 -> BB23 (if true) | BB10 (if false)
BB35   <- [32]
  void                    Nop                !     
  (int|real)$-    %35.1 = %32.1
  dr              %35.2 = Typecheck@0x5614f9be96a8[Type#5]
  goto BB8
BB23   <- [34]
  val-            %23.0 = ChkMissing         e     %32.0
  lgl$#-          %23.1 = IsType                   %32.0 isA val+   <true>
  void                    Branch                   %23.1 -> BB36 (if true) | BB37 (if false)
BB10   <- [34]
  val?^ | miss    %10.0 = LdVar              eR    length, e30.3
  lgl$#-          %10.1 = Identical                <blt length>, %10.0   <true>
  void                    Branch                   %10.1 -> BB40 (if true) | BB41 (if false)
BB8   <- [35, 37, 39, 41]
  val?^ | miss    %8.0  = Phi                      %35.1:BB35, %37.1:BB37, %39.1:BB39, %41.1:BB41
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %35.2:BB35, %37.2:BB37, %39.2:BB39, %41.2:BB41
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x5614fedd25b0+207: [], env=e0.1
  fs              %8.5  = FrameState         R     0x5614fab830b0+184: [%32.1], env=e30.3, next=%8.4
  void                    Deopt              !v    %8.5, %8.3, %8.1   !
BB36   <- [23]
  lgl$#-          %36.0 = IsType                   %32.0 isA int-
  void                    Branch                   %36.0 -> BB38 (if true) | BB39 (if false)
BB37   <- [23]
  void                    Nop                !     
  lgl$#-          %37.1 = %23.1
  dr              %37.2 = DeadBranchReached@0x5614f9be96a8[Test#3]
  goto BB8
BB40   <- [10]
  val?^ | miss    %40.0 = LdVar              eR    x, e30.3
  val?            %40.1 = Force!<wrapped>    !v    %40.0, e30.3   <val?>
  val?            %40.2 = CallBuiltin        !v    length(%40.1) e30.3   <int$->
  lgl$#-          %40.3 = IsType                   %40.2 isA int$-
  void                    Branch                   %40.3 -> BB44 (if true) | BB45 (if false)
BB41   <- [10]
  void                    Nop                !     
  lgl$#-          %41.1 = %10.1
  dr              %41.2 = DeadBranchReached@0x5614f9be96a8[Test#2]
  goto BB8
BB38   <- [36]
  int-            %38.0 = CastType           d     dn %32.0
  int$-           %38.1 = Extract1_1D        wed   %38.0, 1L, elided   <int$->
  int$-           %38.2 = %38.1
  goto BB13
BB39   <- [36]
  void                    Nop                !     
  val?-           %39.1 = %32.0
  dr              %39.2 = Typecheck@0x5614f9be96a8[Type#9]
  goto BB8
BB44   <- [40]
  void                    Nop                !     
  val?            %44.1 = %40.2
  goto BB13
BB45   <- [40]
  fs              %45.0 = FrameState         R     0x5614fedd25b0+207: [], env=e0.1
  fs              %45.1 = FrameState         R     0x5614fab830b0+286: [%40.2], env=e30.3, next=%45.0
  void                    Deopt              !v    %45.1, Typecheck@0x5614f9be96a8[Type#8], %40.2   !
BB13   <- [38, 44]
  val?            %13.0 = Phi                      %44.1:BB44, %38.2:BB38
  val?            %13.1 = %13.0
  val?            %13.2 = PopContext         C     %13.1, %30.1   <int$->
  lgl$#-          %13.3 = IsType                   %13.2 isA int$-
  void                    Branch                   %13.3 -> BB42 (if true) | BB43 (if false)
BB42   <- [13]
  int$-           %42.0 = CastType           d     dn %13.2
  void                    StVar              lW    nr, %42.0, e0.1
  val?^ | miss    %42.2 = LdVar              eR    do.NULL, e0.1
  val?            %42.3 = Force!<lazy>       !v    %42.2, e0.1   <lgl$->
  lgl$#-          %42.4 = CheckTrueFalse     we    %42.3
  void                    Branch                   %42.4 -> BB21 (if true) | BB16 (if false)
BB43   <- [13]
  fs              %43.0 = FrameState         R     0x5614fedd25b0+207: [%13.2], env=e0.1
  void                    Deopt              !v    %43.0, Typecheck@0x5614fcce2860[Type#6], %13.2   !
BB21   <- [42]
  void                    Visible            v     
  nil-            %21.1 = nil
  goto BB22
BB16   <- [42]
  val?^ | miss    %16.0 = LdVar              eR    nr, e0.1
  val?            %16.1 = Force!             !v    %16.0, e0.1   <val?_>
  lgl$#-          %16.2 = IsType                   %16.1 isA val?+
  void                    Branch                   %16.2 -> BB46 (if true) | BB47 (if false)
BB46   <- [16]
  val?+           %46.0 = CastType           d     dn %16.1   <val?_>
  lgl             %46.1 = Gt                 wed   %46.0, 0L, elided   <val?_>
  lgl$#-          %46.2 = CheckTrueFalse     we    %46.1
  void                    Branch                   %46.2 -> BB20 (if true) | BB19 (if false)
BB47   <- [16]
  fs              %47.0 = FrameState         R     0x5614fedd25b0+250: [%16.1], env=e0.1
  void                    Deopt              !v    %47.0, Typecheck@0x5614fcce2860[Type#8], %16.1   !
BB20   <- [46]
  (cls|spec|blt)  %20.0 = LdFun              !v    paste0, e0.1
  fs              %20.1 = FrameState         R     0x5614fedd25b0+315: [%20.0], env=e0.1
  void                    Deopt              !v    %20.1, DeadCall@0x5614fcce2860[Call#3], %20.0   !
BB19   <- [46]
  (cls|spec|blt)  %19.0 = LdFun              !v    character, e0.1
  fs              %19.1 = FrameState         R     0x5614fedd25b0+278: [%19.0], env=e0.1
  void                    Deopt              !v    %19.1, DeadCall@0x5614fcce2860[Call#2], %19.0   !
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3

│ rownames[0x5614ff4cbc40]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
