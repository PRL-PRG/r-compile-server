
┌──────────────────────────────────────────────────────────────────────────────┐
│ model.spmatrix[0x5614fe14f940]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl4,NonRefl5,!Obj2,!Obj3,!Obj4,!Obj5│
│ Properties:                                                                  │
├────── Final PIR Version
model.spmatrix[0x5614fe14f940]
BB0
  val?^           %0.0  = LdArg                    6
  val?^           %0.1  = LdArg                    5
  val?^           %0.2  = LdArg                    4
  val?^           %0.3  = LdArg                    3
  val?^           %0.4  = LdArg                    2
  val?^           %0.5  = LdArg                    1
  val?^           %0.6  = LdArg                    0
  env             e0.7  = MkEnv              l     trms=%0.6, mf=%0.5, transpose=%0.4, drop.unused.levels=%0.3, row.names=%0.2, sep=%0.1, verbose=%0.0, parent=<env 0x5614fad267d8>, context 1
  cls             %0.8  = MkCls                    model.spmatrix>getR@5941, e0.7
  val?^ | miss    %0.9  = LdVar              eR    stopifnot, <env 0x5614fad267d8>
  lgl$#-          %0.10 = Identical                %0.9, function(..., exprs, exprObject, local=TRUE) <|...
  void                    Branch                   %0.10 -> BB333 (if true) | BB334 (if false)
BB333   <- [0]
  prom-           %333.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p0, e0.7
  val?            %333.1 = Call               !v    function(..., exprs, exprObject, local=TRUE) <|...(%333.0) e0.7
  val?^ | miss    %333.2 = LdVar              eR    nrow, e0.7
  lgl$#-          %333.3 = Identical                %333.2, function(x) <(rir::DispatchTable*)0x5614faf139|...
  void                    Branch                   %333.3 -> BB335 (if true) | BB336 (if false)
BB334   <- [0]
  fs              %334.0 = FrameState         R     0x5615051e76a0+0: [], env=e0.7
  void                    Deopt              !v    %334.0, CallTarget@0x5614f925d5d0[Call#0], %0.9
BB335   <- [333]
  prom-           %335.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p2, e0.7
  ct              %335.1 = PushContext        lCL   %335.0, nrow(mf), function(x) <(rir::DispatchTable*)0x5614faf139|..., e0.7
  val?^           %335.2 = CastType                 up %335.0
  env             e335.3 = MkEnv              l     x=%335.2, parent=R_BaseNamespace, context 1
  val?            %335.4 = Force!<lazy>       !vL   %335.2, e335.3   <val?>
  val?            %335.5 = CallBuiltin        !v    dim(%335.4) e335.3   <int->
  lgl$#-          %335.6 = IsType                   %335.5 isA val+   <true>
  lgl$#-          %335.7 = IsType                   %335.5 isA int-
  void                    Branch                   %335.6 -> BB337 (if true) | BB338 (if false)
BB336   <- [333]
  fs              %336.0 = FrameState         R     0x5615051e76a0+32: [%333.1], env=e0.7
  void                    Deopt              !v    %336.0, CallTarget@0x5614f925d5d0[Call#2], %333.2   !
BB337   <- [335]
  void                    Branch                   %335.7 -> BB339 (if true) | BB340 (if false)
BB338   <- [335]
  void                    Nop                !     
  lgl$#-          %338.1 = %335.6
  dr              %338.2 = DeadBranchReached@0x5614fbc29098[Test#1]
  goto BB5
BB339   <- [337]
  int-            %339.0 = CastType           d     dn %335.5
  int$-           %339.1 = Extract1_1D        wed   %339.0, 1L, elided   <int$->
  val?            %339.2 = PopContext         C     %339.1, %335.1   <int$->
  lgl$#-          %339.3 = IsType                   %339.2 isA int$-
  void                    Branch                   %339.3 -> BB341 (if true) | BB342 (if false)
BB340   <- [337]
  void                    Nop                !     
  val?            %340.1 = %335.5
  dr              %340.2 = Typecheck@0x5614fbc29098[Type#2]
  goto BB5
BB5   <- [338, 340]
  val?^ | miss    %5.0  = Phi                      %338.1:BB338, %340.1:BB340
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %338.2:BB338, %340.2:BB340
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x5615051e76a0+65: [], env=e0.7
  fs              %5.5  = FrameState         R     0x5614fa7980b0+91: [%335.5], env=e335.3, next=%5.4
  void                    Deopt              !v    %5.5, %5.3, %5.1   !
BB341   <- [339]
  int$-           %341.0 = CastType           d     dn %339.2
  void                    StVar              lW    n, %341.0, e0.7
  val?^ | miss    %341.2 = LdVar              eR    row.names, e0.7
  val?            %341.3 = Force!<lazy>       !v    %341.2, e0.7   <lgl$->
  lgl$#-          %341.4 = CheckTrueFalse     we    %341.3
  void                    Branch                   %341.4 -> BB331 (if true) | BB9 (if false)
BB342   <- [339]
  fs              %342.0 = FrameState         R     0x5615051e76a0+65: [%339.2], env=e0.7
  void                    Deopt              !v    %342.0, Typecheck@0x5614f925d5d0[Type#3], %339.2   !
BB331   <- [341]
  (cls|spec|blt)  %331.0 = LdFun              !v    row.names, e0.7
  prom-           %331.1 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p62, e0.7
  val?            %331.2 = Call               !v    %331.0(%331.1) e0.7   <str->
  void                    StVar              lW    rnames, %331.2, e0.7
  goto BB10
BB9   <- [341]
  void                    Nop                !     
  goto BB10
BB10   <- [9, 331]
  val?^ | miss    %10.0 = LdVar              eR    names, e0.7
  lgl$#-          %10.1 = Identical                <blt names>, %10.0   <true>
  void                    Branch                   %10.1 -> BB343 (if true) | BB344 (if false)
BB343   <- [10]
  val?^ | miss    %343.0 = LdVar              eR    unclass, e0.7
  lgl$#-          %343.1 = Identical                <blt unclass>, %343.0   <true>
  void                    Branch                   %343.1 -> BB345 (if true) | BB346 (if false)
BB344   <- [10]
  void                    Nop                !     
  lgl$#-          %344.1 = %10.1
  dr              %344.2 = DeadBranchReached@0x5614f925d5d0[Test#0]
  goto BB11
BB345   <- [343]
  val?^ | miss    %345.0 = LdVar              eR    mf, e0.7
  val?            %345.1 = Force!<wrapped>    !v    %345.0, e0.7   <vec>
  val?            %345.2 = CallBuiltin        !v    unclass(%345.1) e0.7   <vec+>
  void                    StVar              lW    mf, %345.2, e0.7
  lgl$#-          %345.4 = IsType                   %345.2 isA val?+
  void                    Branch                   %345.4 -> BB347 (if true) | BB348 (if false)
BB346   <- [343]
  void                    Nop                !     
  lgl$#-          %346.1 = %343.1
  dr              %346.2 = DeadBranchReached@0x5614f925d5d0[Test#1]
  goto BB11
BB11   <- [344, 346]
  val?^ | miss    %11.0 = Phi                      %344.1:BB344, %346.1:BB346
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %344.2:BB344, %346.2:BB346
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x5615051e76a0+150: [], env=e0.7
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB347   <- [345]
  val?+           %347.0 = CastType           d     dn %345.2   <vec+>
  val+            %347.1 = CallSafeBuiltin    wed   names(%347.0)    <str->
  void                    StVar              lW    fnames, %347.1, e0.7
  val?^ | miss    %347.3 = LdVar              eR    list, e0.7
  lgl$#-          %347.4 = Identical                <blt list>, %347.3   <true>
  void                    Branch                   %347.4 -> BB349 (if true) | BB350 (if false)
BB348   <- [345]
  fs              %348.0 = FrameState         R     0x5615051e76a0+317: [<blt names>, %345.2], env=e0.7
  void                    Deopt              !v    %348.0, Typecheck@0x5614f925d5d0[Type#11], %345.2   !
BB349   <- [347]
  val?            %349.0 = NamedCall          !v    <blt list>(names=%347.1) e0.7   <vec$+>
  (cls|spec|blt)  %349.1 = LdFun              !v    attributes<-, <0x5614f88a7128>, e0.7
  val?^ | miss    %349.2 = LdVar              eR    mf, e0.7
  val?            %349.3 = Force!<value>      !v    %349.2, e0.7   <vec+>
  val?            %349.4 = NamedCall          !v    %349.1(%349.3, value=%349.0) e0.7
  void                    StVar              lW    mf, %349.4, e0.7
  val?^ | miss    %349.6 = LdVar              eR    length, e0.7
  lgl$#-          %349.7 = Identical                <blt length>, %349.6   <true>
  void                    Branch                   %349.7 -> BB351 (if true) | BB352 (if false)
BB350   <- [347]
  fs              %350.0 = FrameState         R     0x5615051e76a0+348: [], env=e0.7
  void                    Deopt              !v    %350.0, DeadBranchReached@0x5614f925d5d0[Test#2], %347.4   !
BB351   <- [349]
  val?^ | miss    %351.0 = LdVar              eR    attr, e0.7
  lgl$#-          %351.1 = Identical                <blt attr>, %351.0   <true>
  void                    Branch                   %351.1 -> BB353 (if true) | BB354 (if false)
BB352   <- [349]
  void                    Nop                !     
  lgl$#-          %352.1 = %349.7
  dr              %352.2 = DeadBranchReached@0x5614f925d5d0[Test#3]
  goto BB17
BB353   <- [351]
  val?^ | miss    %353.0 = LdVar              eR    trms, e0.7
  val?            %353.1 = Force!<lazy>       !v    %353.0, e0.7   <code>
  val?            %353.2 = CallBuiltin        !v    attr(%353.1, "factors") e0.7   <int+>
  void                    StVar              lW    factorPattern, %353.2, e0.7
  lgl$#-          %353.4 = IsType                   %353.2 isA int+
  void                    Branch                   %353.4 -> BB355 (if true) | BB356 (if false)
BB354   <- [351]
  void                    Nop                !     
  lgl$#-          %354.1 = %351.1
  dr              %354.2 = DeadBranchReached@0x5614f925d5d0[Test#4]
  goto BB17
BB17   <- [352, 354]
  val?^ | miss    %17.0 = Phi                      %352.1:BB352, %354.1:BB354
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %352.2:BB352, %354.2:BB354
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x5615051e76a0+520: [], env=e0.7
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB355   <- [353]
  int+            %355.0 = CastType           d     dn %353.2
  (int|real)$-    %355.1 = CallSafeBuiltin    wed   length(%355.0)    <int$->
  lgl$#-          %355.2 = IsType                   %355.1 isA int$-
  void                    Branch                   %355.2 -> BB357 (if true) | BB358 (if false)
BB356   <- [353]
  fs              %356.0 = FrameState         R     0x5615051e76a0+698: [<blt length>, %353.2], env=e0.7
  void                    Deopt              !v    %356.0, Typecheck@0x5614f925d5d0[Type#21], %353.2   !
BB357   <- [355]
  int$-           %357.0 = CastType           d     dn %355.1
  lgl$#-          %357.1 = CheckTrueFalse     e     %357.0
  void                    Branch                   %357.1 -> BB322 (if true) | BB23 (if false)
BB358   <- [355]
  void                    Nop                !     
  (int|real)$-    %358.1 = %355.1
  dr              %358.2 = Typecheck@0x5614f925d5d0[Type#22]
  goto BB21
BB322   <- [357]
  val?^ | miss    %322.0 = LdVar              eR    dim, e0.7
  lgl$#-          %322.1 = Identical                <blt dim>, %322.0   <true>
  void                    Branch                   %322.1 -> BB359 (if true) | BB360 (if false)
BB23   <- [357]
  void                    StVar              lW    nTrm, 0L, e0.7
  void                    StVar              lW    nVar, 0L, e0.7
  val?^ | miss    %23.2 = LdVar              eR    character, e0.7
  lgl$#-          %23.3 = Identical                %23.2, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %23.3 -> BB365 (if true) | BB366 (if false)
BB21   <- [358, 360]
  val?^ | miss    %21.0 = Phi                      %358.1:BB358, %360.1:BB360
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %358.2:BB358, %360.2:BB360
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x5615051e76a0+715: [%355.1], env=e0.7
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB359   <- [322]
  val+            %359.0 = CallSafeBuiltin    wed   dim(%355.0)    <int->
  void                    StVar              lW    d, %359.0, e0.7
  val?            %359.2 = Extract1_1D        wed   %359.0, 1, elided   <int$->
  lgl$#-          %359.3 = IsType                   %359.2 isA int$-
  void                    Branch                   %359.3 -> BB361 (if true) | BB362 (if false)
BB360   <- [322]
  void                    Nop                !     
  lgl$#-          %360.1 = %322.1
  dr              %360.2 = DeadBranchReached@0x5614f925d5d0[Test#5]
  goto BB21
BB365   <- [23]
  str-            %365.0 = CallSafeBuiltin    wed   vector("character", 0)    <str->
  void                    StVar              lW    Names, %365.0, e0.7
  void                    StVar              lW    fnames, %365.0, e0.7
  goto BB26
BB366   <- [23]
  fs              %366.0 = FrameState         R     0x5615051e76a0+752: [], env=e0.7
  void                    Deopt              !v    %366.0, CallTarget@0x5614f925d5d0[Call#12], %23.2   !
BB361   <- [359]
  int$-           %361.0 = CastType           d     dn %359.2
  void                    StVar              lW    nVar, %361.0, e0.7
  lgl$#-          %361.2 = IsType                   %359.0 isA int-
  void                    Branch                   %361.2 -> BB363 (if true) | BB364 (if false)
BB362   <- [359]
  fs              %362.0 = FrameState         R     0x5615051e76a0+971: [%359.2], env=e0.7
  void                    Deopt              !v    %362.0, Typecheck@0x5614f925d5d0[Type#28], %359.2   !
BB26   <- [365, 373]
  val?^ | miss    %26.0 = LdVar              eR    stopifnot, e0.7
  lgl$#-          %26.1 = Identical                %26.0, function(..., exprs, exprObject, local=TRUE) <|...
  void                    Branch                   %26.1 -> BB369 (if true) | BB370 (if false)
BB363   <- [361]
  int-            %363.0 = CastType           d     dn %359.0
  int$-           %363.1 = Extract1_1D        wed   %363.0, 2, elided   <int$->
  void                    StVar              lW    nTrm, %363.1, e0.7
  val?^ | miss    %363.3 = LdVar              eR    dimnames, e0.7
  lgl$#-          %363.4 = Identical                <blt dimnames>, %363.3   <true>
  void                    Branch                   %363.4 -> BB367 (if true) | BB368 (if false)
BB364   <- [361]
  fs              %364.0 = FrameState         R     0x5615051e76a0+986: [], env=e0.7
  void                    Deopt              !v    %364.0, Typecheck@0x5614f925d5d0[Type#29], %359.0   !
BB369   <- [26]
  prom-           %369.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p4, e0.7
  val?            %369.1 = Call               !v    function(..., exprs, exprObject, local=TRUE) <|...(%369.0) e0.7
  val?^ | miss    %369.2 = LdVar              eR    verbose, e0.7
  val?            %369.3 = Force!<lazy>       !v    %369.2, e0.7   <lgl$->
  lgl$#-          %369.4 = CheckTrueFalse     we    %369.3
  void                    Branch                   %369.4 -> BB321 (if true) | BB31 (if false)
BB370   <- [26]
  fs              %370.0 = FrameState         R     0x5615051e76a0+1292: [], env=e0.7
  void                    Deopt              !v    %370.0, CallTarget@0x5614f925d5d0[Call#15], %26.0   !
BB367   <- [363]
  val?            %367.0 = CallBuiltin        !v    dimnames(%355.0) e0.7   <vec->
  void                    StVar              lW    n.fP, %367.0, e0.7
  lgl$#-          %367.2 = IsType                   %367.0 isA val+   <true>
  lgl$#-          %367.3 = IsType                   %367.0 isA val?-
  val             %367.4 = ChkMissing         e     %367.0
  void                    Branch                   %367.2 -> BB371 (if true) | BB372 (if false)
BB368   <- [363]
  fs              %368.0 = FrameState         R     0x5615051e76a0+1053: [], env=e0.7
  void                    Deopt              !v    %368.0, DeadBranchReached@0x5614f925d5d0[Test#8], %363.4   !
BB321   <- [369]
  (cls|spec|blt)  %321.0 = LdFun              !v    cat, e0.7
  fs              %321.1 = FrameState         R     0x5615051e76a0+1355: [%321.0], env=e0.7
  void                    Deopt              !v    %321.1, DeadCall@0x5614f925d5d0[Call#17], %321.0   !
BB31   <- [369]
  val?^ | miss    %31.0 = LdVar              eR    m, e0.7
  lgl$#-          %31.1 = IsType                   %31.0 isA int$-
  void                    Branch                   %31.1 -> BB375 (if true) | BB376 (if false)
BB371   <- [367]
  void                    Branch                   %367.3 -> BB373 (if true) | BB374 (if false)
BB372   <- [367]
  void                    Nop                !     
  lgl$#-          %372.1 = %367.2
  dr              %372.2 = DeadBranchReached@0x5614f925d5d0[Test#9]
  goto BB329
BB375   <- [31]
  int$-           %375.0 = CastType           d     dn %31.0
  val?^ | miss    %375.1 = LdVar              eR    nVar, e0.7
  lgl$#-          %375.2 = IsType                   %375.1 isA int$-
  void                    Branch                   %375.2 -> BB377 (if true) | BB378 (if false)
BB376   <- [31]
  void                    Nop                !     
  val?^ | miss    %376.1 = %31.0
  dr              %376.2 = Typecheck@0x5614f925d5d0[Type#48]
  goto BB29
BB373   <- [371]
  val?-           %373.0 = CastType           d     dn %367.0   <vec->
  val?            %373.1 = Extract2_1D        wed   %373.0, 1, elided   <str->
  void                    StVar              lW    fnames, %373.1, e0.7
  val?            %373.3 = Extract2_1D        wed   %373.0, 2, elided   <str->
  void                    StVar              lW    Names, %373.3, e0.7
  goto BB26
BB374   <- [371]
  void                    Nop                !     
  val?            %374.1 = %367.0
  dr              %374.2 = Typecheck@0x5614f925d5d0[Type#33]
  goto BB329
BB329   <- [372, 374]
  val?^ | miss    %329.0 = Phi                      %372.1:BB372, %374.1:BB374
  val?^ | miss    %329.1 = %329.0
  dr              %329.2 = Phi                      %372.2:BB372, %374.2:BB374
  dr              %329.3 = %329.2
  fs              %329.4 = FrameState         R     0x5615051e76a0+1158: [], env=e0.7
  void                    Deopt              !v    %329.4, %329.3, %329.1   !
BB377   <- [375]
  int$-           %377.0 = CastType           d     dn %375.1
  lgl$-           %377.1 = Gt                 d     %375.0, %377.0, elided   <lgl$->
  lgl$#-          %377.2 = CheckTrueFalse     e     %377.1
  void                    Branch                   %377.2 -> BB316 (if true) | BB32 (if false)
BB378   <- [375]
  void                    Nop                !     
  val?^ | miss    %378.1 = %375.1
  dr              %378.2 = Typecheck@0x5614f925d5d0[Type#49]
  goto BB29
BB29   <- [376, 378]
  val?^ | miss    %29.0 = Phi                      %376.1:BB376, %378.1:BB378
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %376.2:BB376, %378.2:BB378
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x5615051e76a0+1340: [%369.4], env=e0.7
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
BB316   <- [377]
  val?^ | miss    %316.0 = LdVar              eR    mf, e0.7
  val?            %316.1 = Force!<value>      !v    %316.0, e0.7   <vec$+>
  lgl$#-          %316.2 = IsType                   %316.1 isA val+   <true>
  void                    Branch                   %316.2 -> BB379 (if true) | BB380 (if false)
BB32   <- [377]
  void                    Nop                !     
  goto BB33
BB379   <- [316]
  val?^ | miss    %379.0 = LdVar              eR    seq_len, e0.7
  lgl$#-          %379.1 = Identical                <blt seq_len>, %379.0   <true>
  void                    Branch                   %379.1 -> BB381 (if true) | BB382 (if false)
BB380   <- [316]
  void                    Nop                !     
  lgl$#-          %380.1 = %316.2
  dr              %380.2 = DeadBranchReached@0x5614f925d5d0[Test#11]
  goto BB317
BB33   <- [32, 385]
  (cls|spec|blt)  %33.0 = LdFun              !v    stopifnot, <0x5614fb08ee38>, e0.7
  prom-           %33.1 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p6, e0.7
  val?            %33.2 = NamedCall          !v    %33.0(%33.1, allow.logical0=true) e0.7
  val?^ | miss    %33.3 = LdVar              eR    nVar, e0.7
  lgl$#-          %33.4 = IsType                   %33.3 isA int$-
  void                    Branch                   %33.4 -> BB387 (if true) | BB388 (if false)
BB381   <- [379]
  val?^ | miss    %381.0 = LdVar              eR    nVar, e0.7
  lgl$#-          %381.1 = IsType                   %381.0 isA int$-
  void                    Branch                   %381.1 -> BB383 (if true) | BB384 (if false)
BB382   <- [379]
  void                    Nop                !     
  lgl$#-          %382.1 = %379.1
  dr              %382.2 = DeadBranchReached@0x5614f925d5d0[Test#12]
  goto BB317
BB317   <- [380, 382, 384]
  val?^ | miss    %317.0 = Phi                      %380.1:BB380, %382.1:BB382, %384.1:BB384
  val?^ | miss    %317.1 = %317.0
  dr              %317.2 = Phi                      %380.2:BB380, %382.2:BB382, %384.2:BB384
  dr              %317.3 = %317.2
  fs              %317.4 = FrameState         R     0x5615051e76a0+1437: [%316.1], env=e0.7
  void                    Deopt              !v    %317.4, %317.3, %317.1   !
BB387   <- [33]
  int$-           %387.0 = CastType           d     dn %33.3
  lgl$-           %387.1 = Eq                 d     %387.0, 0, elided   <lgl$->
  void                    StVar              lW    noVar, %387.1, e0.7
  lgl$#-          %387.3 = CheckTrueFalse     e     %387.1
  void                    Branch                   %387.3 -> BB315 (if true) | BB38 (if false)
BB388   <- [33]
  fs              %388.0 = FrameState         R     0x5615051e76a0+1630: [%33.2], env=e0.7
  void                    Deopt              !v    %388.0, Typecheck@0x5614f925d5d0[Type#62], %33.3   !
BB383   <- [381]
  int$-           %383.0 = CastType           d     dn %381.0
  val+            %383.1 = CallSafeBuiltin    wed   seq_len(%383.0)    <int->
  lgl$#-          %383.2 = IsType                   %316.1 isA val?+
  void                    Branch                   %383.2 -> BB385 (if true) | BB386 (if false)
BB384   <- [381]
  void                    Nop                !     
  val?^ | miss    %384.1 = %381.0
  dr              %384.2 = Typecheck@0x5614f925d5d0[Type#55]
  goto BB317
BB315   <- [387]
  val?^ | miss    %315.0 = LdVar              eR    logical, e0.7
  lgl$#-          %315.1 = Identical                %315.0, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %315.1 -> BB389 (if true) | BB390 (if false)
BB38   <- [387]
  val?^ | miss    %38.0 = LdVar              eR    vapply, e0.7
  lgl$#-          %38.1 = Identical                %38.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Branch                   %38.1 -> BB391 (if true) | BB392 (if false)
BB385   <- [383]
  val?+           %385.0 = CastType           d     dn %316.1   <vec$+>
  val?            %385.1 = Extract1_1D        wed   %385.0, %383.1, elided   <vec+>
  void                    StVar              lW    mf, %385.1, e0.7
  goto BB33
BB386   <- [383]
  fs              %386.0 = FrameState         R     0x5615051e76a0+1564: [%316.1, %383.1], env=e0.7
  void                    Deopt              !v    %386.0, Typecheck@0x5614f925d5d0[Type#51], %316.1   !
BB389   <- [315]
  lgl-            %389.0 = CallSafeBuiltin    wed   vector("logical", 0)    <lgl->
  lgl-            %389.1 = %389.0
  goto BB49
BB390   <- [315]
  void                    Nop                !     
  val?^ | miss    %390.1 = %315.0
  dr              %390.2 = CallTarget@0x5614f925d5d0[Call#24]
  goto BB36
BB391   <- [38]
  prom-           %391.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p8, e0.7
  cls             %391.1 = MkCls                    model.spmatrix@Prom(9)0, e0.7
  prom-           %391.2 = MkArg                    %391.1, model.spmatrix[0x5614fe14f940]_p9 (!refl), e0.7
  ct              %391.3 = PushContext        lCL   %391.0, %391.2, na-lgl, vapply(mf, function(<lst .=R_MissingArg>, |(is|..., function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|..., e0.7
  cls~            %391.4 = CastType                 up %391.2
  val?^           %391.5 = CastType                 up %391.0
  env             e391.6 = MkEnv              l     X=%391.5, FUN=%391.4, FUN.VALUE=na-lgl, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %391.7 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p64 (!refl), e391.6
  val?            %391.8 = StaticCall         !v    match.fun[0x5614ffb454f0](%391.7) e391.6   <val?->
  void                    StVar              lW    FUN, %391.8, e391.6
  val?^ | miss    %391.10 = LdVar              eR    is.vector, e391.6
  lgl$#-          %391.11 = Identical                %391.10, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %391.11 -> BB393 (if true) | BB394 (if false)
BB392   <- [38]
  void                    Nop                !     
  val?^ | miss    %392.1 = %38.0
  dr              %392.2 = CallTarget@0x5614f925d5d0[Call#23]
  goto BB36
BB49   <- [48, 389]
  val?            %49.0 = Phi                      %48.4:BB48, %389.1:BB389
  val?            %49.1 = %49.0
  void                    StVar              lW    is.f, %49.1, e0.7
  val?^ | miss    %49.3 = LdVar              eR    which, e0.7
  lgl$#-          %49.4 = Identical                %49.3, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %49.4 -> BB397 (if true) | BB398 (if false)
BB36   <- [390, 392]
  val?^ | miss    %36.0 = Phi                      %390.1:BB390, %392.1:BB392
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %390.2:BB390, %392.2:BB392
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x5615051e76a0+1666: [], env=e0.7
  void                    Deopt              !v    %36.4, %36.3, %36.1   !
BB393   <- [391]
  val?^ | miss    %393.0 = LdVar              eR    X, e391.6
  val?            %393.1 = Force!<lazy>       !v    %393.0, e391.6   <val?>
  lgl$#-          %393.2 = CallSafeBuiltin    wed   is.vector(%393.1, "any")    <lgl$->
  lgl$#-          %393.3 = Not                d     %393.2, elided
  void                    Branch                   %393.2 -> BB314 (if true) | BB43 (if false)
BB394   <- [391]
  fs              %394.0 = FrameState         R     0x5615051e76a0+1728: [], env=e0.7
  fs              %394.1 = FrameState         R     0x5614fa849000+46: [], env=e391.6, next=%394.0
  void                    Deopt              !v    %394.1, CallTarget@0x5614fa864020[Call#1], %391.10   !
BB397   <- [49]
  prom-           %397.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p10 (!refl), e0.7
  val?            %397.1 = StaticCall         !v    which[0x561504b44860](%397.0) e0.7   <int+>
  void                    StVar              lW    indF, %397.1, e0.7
  val?^ | miss    %397.3 = LdVar              eR    verbose, e0.7
  val?            %397.4 = Force!<wrapped>    !v    %397.3, e0.7   <lgl$->
  lgl$#-          %397.5 = CheckTrueFalse     we    %397.4
  void                    Branch                   %397.5 -> BB312 (if true) | BB54 (if false)
BB398   <- [49]
  fs              %398.0 = FrameState         R     0x5615051e76a0+1784: [], env=e0.7
  void                    Deopt              !v    %398.0, CallTarget@0x5614f925d5d0[Call#25], %49.3   !
BB314   <- [393]
  val?^ | miss    %314.0 = LdVar              eR    is.object, e391.6
  lgl$#-          %314.1 = Identical                <blt is.object>, %314.0   <true>
  void                    Branch                   %314.1 -> BB395 (if true) | BB396 (if false)
BB43   <- [393]
  void                    Nop                !     
  lgl$#-          %43.1 = %393.3
  goto BB44
BB312   <- [397]
  (cls|spec|blt)  %312.0 = LdFun              !v    cat, e0.7
  fs              %312.1 = FrameState         R     0x5615051e76a0+1860: [%312.0], env=e0.7
  void                    Deopt              !v    %312.1, DeadCall@0x5614f925d5d0[Call#26], %312.0   !
BB54   <- [397]
  val?^ | miss    %54.0 = LdVar              eR    attr, e0.7
  lgl$#-          %54.1 = Identical                <blt attr>, %54.0   <true>
  void                    Branch                   %54.1 -> BB401 (if true) | BB402 (if false)
BB395   <- [314]
  val?^ | miss    %395.0 = LdVar              eR    X, e391.6
  val?            %395.1 = Force!<wrapped>    !v    %395.0, e391.6   <val?+>
  lgl$#-          %395.2 = CallSafeBuiltin    wed   is.object(%395.1)    <lgl$->
  lgl$-           %395.3 = LOr                      %393.3, %395.2
  lgl$-           %395.4 = %395.3
  goto BB44
BB396   <- [314]
  fs              %396.0 = FrameState         R     0x5615051e76a0+1728: [], env=e0.7
  fs              %396.1 = FrameState         R     0x5614fa849000+78: [], env=e391.6, next=%396.0
  prom-           %396.2 = MkArg                    %393.1, model.spmatrix[0x5614fe14f940]_p65 (!refl), e391.6
  val?~           %396.3 = CastType                 up %396.2
  env             e396.4 = (MkEnv)            l     mode(miss)="any", x=%396.3, parent=R_BaseNamespace, context 0
  fs              %396.5 = FrameState         R     0x5614fa748820+41: [%393.2], env=e396.4, next=%396.1
  void                    Deopt              !v    %396.5, DeadBranchReached@0x5614fa864020[Test#0], %314.1   !
BB44   <- [43, 395]
  lgl$-           %44.0 = Phi                      %395.4:BB395, %43.1:BB43
  lgl$-           %44.1 = %44.0
  lgl$#-          %44.2 = CheckTrueFalse     e     %44.1
  void                    Branch                   %44.2 -> BB313 (if true) | BB47 (if false)
BB401   <- [54]
  val?^ | miss    %401.0 = LdVar              eR    trms, e0.7
  val?            %401.1 = Force!<wrapped>    !v    %401.0, e0.7   <code>
  val?            %401.2 = CallBuiltin        !v    attr(%401.1, "intercept") e0.7   <int$->
  lgl$#-          %401.3 = IsType                   %401.2 isA int$-
  void                    Branch                   %401.3 -> BB403 (if true) | BB404 (if false)
BB402   <- [54]
  fs              %402.0 = FrameState         R     0x5615051e76a0+1845: [%397.5], env=e0.7
  void                    Deopt              !v    %402.0, DeadBranchReached@0x5614f925d5d0[Test#13], %54.1   !
BB313   <- [44]
  val?^ | miss    %313.0 = LdVar              eR    as.list, e391.6
  lgl$#-          %313.1 = Identical                %313.0, function(x, ...) <(rir::DispatchTable*)0x5614f|...
  void                    Branch                   %313.1 -> BB399 (if true) | BB400 (if false)
BB47   <- [44]
  void                    Nop                !     
  goto BB48
BB403   <- [401]
  int$-           %403.0 = CastType           d     dn %401.2
  lgl$-           %403.1 = Eq                 d     %403.0, 1, elided   <lgl$->
  void                    StVar              lW    hasInt, %403.1, e0.7
  lgl$-           %403.3 = Not                d     %403.1, elided
  lgl$-           %403.4 = AsLogical                %403.3
  lgl$#-          %403.5 = Identical                %403.4, false
  void                    Branch                   %403.5 -> BB311 (if true) | BB57 (if false)
BB404   <- [401]
  fs              %404.0 = FrameState         R     0x5615051e76a0+2023: [%401.2], env=e0.7
  void                    Deopt              !v    %404.0, Typecheck@0x5614f925d5d0[Type#74], %401.2   !
BB399   <- [313]
  val?^ | miss    %399.0 = LdVar              eR    X, e391.6
  val?            %399.1 = Force!<wrapped>    !v    %399.0, e391.6   <vec>
  val?            %399.2 = StaticCall         !v    as.list[0x5615078e82b0](%399.1) { 0 } e391.6   <vec>
  void                    StVar              lW    X, %399.2, e391.6
  goto BB48
BB400   <- [313]
  fs              %400.0 = FrameState         R     0x5615051e76a0+1728: [], env=e0.7
  fs              %400.1 = FrameState         R     0x5614fa849000+189: [%44.1], env=e391.6, next=%400.0
  void                    Deopt              !v    %400.1, CallTarget@0x5614fa864020[Call#3], %313.0   !
BB48   <- [47, 399]
  (cls|spec|blt)  %48.0 = LdFun              !v    .Internal, <0x5614f88a6698>, e391.6
  prom-           %48.1 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p66, e391.6
  val?            %48.2 = Call               !v    %48.0(%48.1) e391.6   <val?+>
  val?            %48.3 = PopContext         C     %48.2, %391.3   <lgl+>
  val?            %48.4 = %48.3
  goto BB49
BB311   <- [403]
  void                    Nop                !     
  lgl$-           %311.1 = %403.4
  goto BB62
BB57   <- [403]
  val?^ | miss    %57.0 = LdVar              eR    length, e0.7
  lgl$#-          %57.1 = Identical                <blt length>, %57.0   <@?>
  void                    Branch                   %57.1 -> BB59 (if true) | BB58 (if false)
BB62   <- [311, 405]
  lgl$-           %62.0 = Phi                      %405.4:BB405, %311.1:BB311
  lgl$-           %62.1 = %62.0
  lgl$#-          %62.2 = CheckTrueFalse     e     %62.1
  void                    Branch                   %62.2 -> BB301 (if true) | BB63 (if false)
BB59   <- [57]
  val?^ | miss    %59.0 = LdVar              eR    indF, e0.7
  val?            %59.1 = Force!             !v    %59.0, e0.7   <val?_>
  lgl$#-          %59.2 = IsType                   %59.1 isA val?+
  void                    Branch                   %59.2 -> BB405 (if true) | BB406 (if false)
BB58   <- [57]
  (cls|spec|blt)  %58.0 = LdFun              !v    length, e0.7
  fs              %58.1 = FrameState         R     0x5615051e76a0+2099: [%403.4, %58.0], env=e0.7
  void                    Deopt              !v    %58.1, DeadCall@0x5614f925d5d0[Call#29], %58.0   !
BB301   <- [62]
  val?^ | miss    %301.0 = LdVar              eR    any, e0.7
  lgl$#-          %301.1 = Identical                <blt any>, %301.0   <@?>
  void                    Branch                   %301.1 -> BB303 (if true) | BB302 (if false)
BB63   <- [62]
  void                    Nop                !     
  goto BB64
BB405   <- [59]
  val?+           %405.0 = CastType           d     dn %59.1   <val?_>
  real$-          %405.1 = CallSafeBuiltin    wed   length(%405.0)    <val?_>
  lgl$-           %405.2 = AsLogical                %405.1
  lgl$-           %405.3 = LAnd                     %403.4, %405.2
  lgl$-           %405.4 = %405.3
  goto BB62
BB406   <- [59]
  fs              %406.0 = FrameState         R     0x5615051e76a0+2140: [%403.4, <blt length>, %59.1], env=e0.7
  void                    Deopt              !v    %406.0, Typecheck@0x5614f925d5d0[Type#78], %59.1   !
BB303   <- [301]
  val?^ | miss    %303.0 = LdVar              eR    factorPattern, e0.7
  val?            %303.1 = Force!             !v    %303.0, e0.7   <val?_>
  lgl$#-          %303.2 = IsType                   %303.1 isA val+   <@?>
  void                    Branch                   %303.2 -> BB310 (if true) | BB304 (if false)
BB302   <- [301]
  (cls|spec|blt)  %302.0 = LdFun              !v    any, e0.7
  fs              %302.1 = FrameState         R     0x5615051e76a0+2208: [%302.0], env=e0.7
  void                    Deopt              !v    %302.1, DeadCall@0x5614f925d5d0[Call#30], %302.0   !
BB64   <- [63, 308]
  val?^ | miss    %64.0 = LdVar              eR    structure, e0.7
  lgl$#-          %64.1 = Identical                %64.0, function(.Data, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %64.1 -> BB407 (if true) | BB408 (if false)
BB310   <- [303]
  val?^ | miss    %310.0 = LdVar              eR    indF, e0.7
  val?            %310.1 = Force!             !v    %310.0, e0.7   <val?_>
  val?            %310.2 = %310.1
  goto BB305
BB304   <- [303]
  prom-           %304.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p61, e0.7
  prom-           %304.1 = %304.0
  goto BB305
BB407   <- [64]
  prom-           %407.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p11, e0.7
  prom-           %407.1 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p14, e0.7
  dots-           %407.2 = DotsList           l     names=%407.1
  ct              %407.3 = PushContext        lCL   %407.0, %407.2, structure(vector("list", length=length(indF)),|..., function(.Data, ...) <(rir::DispatchTable*)0x5|..., e0.7
  val?^           %407.4 = CastType                 up %407.0
  env             e407.5 = MkEnv              l     .Data=%407.4, ...=%407.2, parent=R_BaseNamespace, context 1
  val?            %407.6 = Force!<lazy>       !vL   %407.4, e407.5   <val?+>
  lgl$-           %407.7 = Is                       %407.6, NULL
  lgl$#-          %407.8 = CheckTrueFalse     e     %407.7
  void                    Branch                   %407.8 -> BB300 (if true) | BB67 (if false)
BB408   <- [64]
  fs              %408.0 = FrameState         R     0x5615051e76a0+2410: [], env=e0.7
  void                    Deopt              !v    %408.0, CallTarget@0x5614f925d5d0[Call#34], %64.0   !
BB305   <- [304, 310]
  val?            %305.0 = Phi                      %310.2:BB310, %304.1:BB304
  val?            %305.1 = %305.0
  val?            %305.2 = Extract1_2D        !v    %303.1, %305.1, missingArg, e0.7   <val?_>
  lgl$#-          %305.3 = IsType                   %305.2 isA val?+
  void                    Branch                   %305.3 -> BB409 (if true) | BB410 (if false)
BB300   <- [407]
  fs              %300.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  (cls|spec|blt)  %300.1 = LdFun              !v    warning, R_BaseNamespace
  fs              %300.2 = FrameState         R     0x5614fa81eb50+35: [%300.1], env=e407.5, next=%300.0
  void                    Deopt              !v    %300.2, DeadCall@0x5614f9e29c18[Call#0], %300.1   !
BB67   <- [407]
  val?            %67.0 = NamedCall          !v    <blt list>(names=%407.1) e407.5   <vec+>
  void                    StVar              lW    attrib, %67.0, e407.5
  lgl$#-          %67.2 = IsType                   %67.0 isA val?+
  val?^ | miss    %67.3 = LdVar              eR    length, e407.5
  lgl$#-          %67.4 = Identical                <blt length>, %67.3   <true>
  void                    Branch                   %67.4 -> BB411 (if true) | BB412 (if false)
BB409   <- [305]
  val?+           %409.0 = CastType           d     dn %305.2   <val?_>
  lgl             %409.1 = Eq                 wed   %409.0, 1, elided   <val?_>
  void                    StVar              lW    i1, %409.1, e0.7
  val?            %409.3 = CallBuiltin        !v    any(%409.1) e0.7   <val?_>
  lgl$#-          %409.4 = CheckTrueFalse     we    %409.3
  void                    Branch                   %409.4 -> BB309 (if true) | BB308 (if false)
BB410   <- [305]
  fs              %410.0 = FrameState         R     0x5615051e76a0+2310: [<blt any>, %305.2], env=e0.7
  void                    Deopt              !v    %410.0, Typecheck@0x5614f925d5d0[Type#88], %305.2   !
BB411   <- [67]
  val             %411.0 = ChkMissing         e     %67.0
  void                    Branch                   %67.2 -> BB413 (if true) | BB414 (if false)
BB412   <- [67]
  void                    Nop                !     
  lgl$#-          %412.1 = %67.4
  dr              %412.2 = DeadBranchReached@0x5614f9e29c18[Test#0]
  goto BB68
BB309   <- [409]
  (cls|spec|blt)  %309.0 = LdFun              !v    <-, e0.7
  fs              %309.1 = FrameState         R     0x5615051e76a0+2377: [%309.0], env=e0.7
  void                    Deopt              !v    %309.1, DeadCall@0x5614f925d5d0[Call#31], %309.0   !
BB308   <- [409]
  void                    Nop                !     
  goto BB64
BB413   <- [411]
  val?+           %413.0 = CastType           d     dn %67.0   <vec+>
  (int|real)$-    %413.1 = CallSafeBuiltin    wed   length(%413.0)    <int$->
  lgl$#-          %413.2 = IsType                   %413.1 isA int$-
  void                    Branch                   %413.2 -> BB415 (if true) | BB416 (if false)
BB414   <- [411]
  void                    Nop                !     
  val?            %414.1 = %67.0
  dr              %414.2 = Typecheck@0x5614f9e29c18[Type#1]
  goto BB68
BB68   <- [412, 414]
  val?^ | miss    %68.0 = Phi                      %412.1:BB412, %414.1:BB414
  val?^ | miss    %68.1 = %68.0
  dr              %68.2 = Phi                      %412.2:BB412, %414.2:BB414
  dr              %68.3 = %68.2
  fs              %68.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %68.5 = FrameState         R     0x5614fa81eb50+113: [], env=e407.5, next=%68.4
  void                    Deopt              !v    %68.5, %68.3, %68.1   !
BB415   <- [413]
  int$-           %415.0 = CastType           d     dn %413.1
  lgl$#-          %415.1 = CheckTrueFalse     e     %415.0
  void                    Branch                   %415.1 -> BB272 (if true) | BB72 (if false)
BB416   <- [413]
  void                    Nop                !     
  (int|real)$-    %416.1 = %413.1
  dr              %416.2 = Typecheck@0x5614f9e29c18[Type#4]
  goto BB70
BB272   <- [415]
  val?^ | miss    %272.0 = LdVar              eR    c, e407.5
  lgl$#-          %272.1 = Identical                <blt c>, %272.0   <true>
  void                    Branch                   %272.1 -> BB417 (if true) | BB418 (if false)
BB72   <- [415]
  void                    Nop                !     
  goto BB73
BB70   <- [416, 418]
  val?^ | miss    %70.0 = Phi                      %416.1:BB416, %418.1:BB418
  val?^ | miss    %70.1 = %70.0
  dr              %70.2 = Phi                      %416.2:BB416, %418.2:BB418
  dr              %70.3 = %70.2
  fs              %70.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %70.5 = FrameState         R     0x5614fa81eb50+204: [%413.1], env=e407.5, next=%70.4
  void                    Deopt              !v    %70.5, %70.3, %70.1   !
BB417   <- [272]
  str-            %417.0 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %417.0, e407.5
  val?^ | miss    %417.2 = LdVar              eR    names, e407.5
  lgl$#-          %417.3 = Identical                <blt names>, %417.2   <true>
  void                    Branch                   %417.3 -> BB421 (if true) | BB422 (if false)
BB418   <- [272]
  void                    Nop                !     
  lgl$#-          %418.1 = %272.1
  dr              %418.2 = DeadBranchReached@0x5614f9e29c18[Test#1]
  goto BB70
BB73   <- [72, 511]
  val?^ | miss    %73.0 = LdVar              eR    .Data, e407.5
  val?            %73.1 = Force!<value>      !v    %73.0, e407.5   <val?>
  val?            %73.2 = PopContext         C     %73.1, %407.3   <vec+>
  void                    StVar              lW    f.matr, %73.2, e0.7
  void                    StVar              lW    i.f, 0, e0.7
  val?^ | miss    %73.5 = LdVar              eR    seq_len, e0.7
  lgl$#-          %73.6 = Identical                <blt seq_len>, %73.5   <true>
  void                    Branch                   %73.6 -> BB419 (if true) | BB420 (if false)
BB421   <- [417]
  val+            %421.0 = CallSafeBuiltin    wed   names(%413.0)    <str->
  void                    StVar              lW    attrnames, %421.0, e407.5
  val?^ | miss    %421.2 = LdVar              eR    match, e407.5
  lgl$#-          %421.3 = Identical                %421.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %421.3 -> BB423 (if true) | BB424 (if false)
BB422   <- [417]
  fs              %422.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %422.1 = FrameState         R     0x5614fa81eb50+361: [], env=e407.5, next=%422.0
  void                    Deopt              !v    %422.1, DeadBranchReached@0x5614f9e29c18[Test#2], %417.3   !
BB419   <- [73]
  val?^ | miss    %419.0 = LdVar              eR    nVar, e0.7
  lgl$#-          %419.1 = IsType                   %419.0 isA int$-
  void                    Branch                   %419.1 -> BB427 (if true) | BB428 (if false)
BB420   <- [73]
  void                    Nop                !     
  lgl$#-          %420.1 = %73.6
  dr              %420.2 = DeadBranchReached@0x5614f925d5d0[Test#21]
  goto BB74
BB423   <- [421]
  val+            %423.0 = CallSafeBuiltin    wed   match(%421.0, %417.0, NA, nil)    <int->
  void                    StVar              lW    m, %423.0, e407.5
  lgl$#-          %423.2 = IsType                   %423.0 isA int-
  val?^ | miss    %423.3 = LdVar              eR    is.na, e407.5
  lgl$#-          %423.4 = Identical                <blt is.na>, %423.3   <true>
  void                    Branch                   %423.4 -> BB425 (if true) | BB426 (if false)
BB424   <- [421]
  fs              %424.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %424.1 = FrameState         R     0x5614fa81eb50+466: [], env=e407.5, next=%424.0
  void                    Deopt              !v    %424.1, CallTarget@0x5614f9e29c18[Call#5], %421.2   !
BB427   <- [419]
  int$-           %427.0 = CastType           d     dn %419.0
  val+            %427.1 = CallSafeBuiltin    wed   seq_len(%427.0)    <int->
  int$-           %427.2 = Length                   %427.1
  int$-           %427.3 = Inc                      0L
  lgl$-           %427.4 = Lt                 d     %427.2, %427.3, elided
  lgl$#-          %427.5 = Identical                %427.4, true
  void                    Branch                   %427.5 -> BB271 (if true) | BB76 (if false)
BB428   <- [419]
  void                    Nop                !     
  val?^ | miss    %428.1 = %419.0
  dr              %428.2 = Typecheck@0x5614f925d5d0[Type#109]
  goto BB74
BB74   <- [420, 428]
  val?^ | miss    %74.0 = Phi                      %420.1:BB420, %428.1:BB428
  val?^ | miss    %74.1 = %74.0
  dr              %74.2 = Phi                      %420.2:BB420, %428.2:BB428
  dr              %74.3 = %74.2
  fs              %74.4 = FrameState         R     0x5615051e76a0+2484: [], env=e0.7
  void                    Deopt              !v    %74.4, %74.3, %74.1   !
BB425   <- [423]
  void                    Branch                   %423.2 -> BB429 (if true) | BB430 (if false)
BB426   <- [423]
  void                    Nop                !     
  lgl$#-          %426.1 = %423.4
  dr              %426.2 = DeadBranchReached@0x5614f9e29c18[Test#3]
  goto BB277
BB271   <- [427]
  void                    Nop                !     
  goto BB151
BB76   <- [427]
  val?            %76.0 = Extract2_1D        wed   %427.1, %427.3, elided
  void                    StVar              lW    i, %76.0, e0.7
  val?^ | miss    %76.2 = LdVar              eR    fnames, e0.7
  lgl$#-          %76.3 = IsType                   %76.2 isA val?~- | miss
  void                    Branch                   %76.3 -> BB431 (if true) | BB432 (if false)
BB429   <- [425]
  int-            %429.0 = CastType           d     dn %423.0
  lgl-            %429.1 = CallSafeBuiltin    wed   is.na(%429.0)    <lgl->
  lgl-            %429.2 = Not                wed   %429.1, elided   <lgl->
  void                    StVar              lW    ok, %429.2, e407.5
  val?^ | miss    %429.4 = LdVar              eR    any, e407.5
  lgl$#-          %429.5 = Identical                <blt any>, %429.4   <true>
  void                    Branch                   %429.5 -> BB433 (if true) | BB434 (if false)
BB430   <- [425]
  void                    Nop                !     
  val+            %430.1 = %423.0
  dr              %430.2 = Typecheck@0x5614f9e29c18[Type#11]
  goto BB277
BB277   <- [426, 430]
  val?^ | miss    %277.0 = Phi                      %426.1:BB426, %430.1:BB430
  val?^ | miss    %277.1 = %277.0
  dr              %277.2 = Phi                      %426.2:BB426, %430.2:BB430
  dr              %277.3 = %277.2
  fs              %277.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %277.5 = FrameState         R     0x5614fa81eb50+517: [], env=e407.5, next=%277.4
  void                    Deopt              !v    %277.5, %277.3, %277.1   !
BB151   <- [150, 271]
  val?^ | miss    %151.0 = LdVar              eR    verbose, e0.7
  val?            %151.1 = Force!<wrapped>    !v    %151.0, e0.7   <lgl$->
  lgl$#-          %151.2 = CheckTrueFalse     we    %151.1
  void                    Branch                   %151.2 -> BB256 (if true) | BB152 (if false)
BB431   <- [76]
  val?~- | miss   %431.0 = CastType           d     dn %76.2
  val?-           %431.1 = Force!<value>            %431.0,    <str->
  lgl$#-          %431.2 = IsType                   %431.1 isA val+   <true>
  void                    Branch                   %431.2 -> BB437 (if true) | BB438 (if false)
BB432   <- [76]
  void                    Nop                !     
  val?^ | miss    %432.1 = %76.2
  dr              %432.2 = Typecheck@0x5614f925d5d0[Type#111]
  goto BB77
BB433   <- [429]
  val?            %433.0 = CallBuiltin        !v    any(%429.2) e407.5   <lgl$->
  lgl$#-          %433.1 = IsType                   %433.0 isA lgl$-
  void                    Branch                   %433.1 -> BB435 (if true) | BB436 (if false)
BB434   <- [429]
  fs              %434.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %434.1 = FrameState         R     0x5614fa81eb50+623: [], env=e407.5, next=%434.0
  void                    Deopt              !v    %434.1, DeadBranchReached@0x5614f9e29c18[Test#4], %429.5   !
BB256   <- [151]
  (cls|spec|blt)  %256.0 = LdFun              !v    cat, e0.7
  fs              %256.1 = FrameState         R     0x5615051e76a0+5765: [%256.0], env=e0.7
  void                    Deopt              !v    %256.1, DeadCall@0x5614f925d5d0[Call#80], %256.0   !
BB152   <- [151]
  void                    StVar              lW    getR, %0.8, e0.7
  val?^ | miss    %152.1 = LdVar              eR    hasInt, e0.7
  lgl$#-          %152.2 = IsType                   %152.1 isA lgl$-
  void                    Branch                   %152.2 -> BB445 (if true) | BB446 (if false)
BB437   <- [431]
  val             %437.0 = ChkMissing         e     %76.0
  lgl$#-          %437.1 = IsType                   %437.0 isA int$-
  void                    Branch                   %437.1 -> BB441 (if true) | BB442 (if false)
BB438   <- [431]
  void                    Nop                !     
  lgl$#-          %438.1 = %431.2
  dr              %438.2 = DeadBranchReached@0x5614f925d5d0[Test#23]
  goto BB77
BB77   <- [432, 438, 442]
  val?^ | miss    %77.0 = Phi                      %432.1:BB432, %438.1:BB438, %442.1:BB442
  val?^ | miss    %77.1 = %77.0
  dr              %77.2 = Phi                      %432.2:BB432, %438.2:BB438, %442.2:BB442
  dr              %77.3 = %77.2
  fs              %77.4 = FrameState         R     0x5615051e76a0+2620: [%427.1, %427.2, %427.3], env=e0.7
  void                    Deopt              !v    %77.4, %77.3, %77.1   !
BB435   <- [433]
  lgl$-           %435.0 = CastType           d     dn %433.0
  lgl$#-          %435.1 = CheckTrueFalse     e     %435.0
  void                    Branch                   %435.1 -> BB297 (if true) | BB283 (if false)
BB436   <- [433]
  void                    Nop                !     
  val?            %436.1 = %433.0
  dr              %436.2 = Typecheck@0x5614f9e29c18[Type#17]
  goto BB281
BB445   <- [152]
  lgl$-           %445.0 = CastType           d     dn %152.1
  str-            %445.1 = Extract1_1D        wed   "(Intercept)", %445.0, elided   <str$->
  void                    StVar              lW    vNms, %445.1, e0.7
  val?^ | miss    %445.3 = LdVar              eR    integer, e0.7
  lgl$#-          %445.4 = Identical                %445.3, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %445.4 -> BB447 (if true) | BB448 (if false)
BB446   <- [152]
  fs              %446.0 = FrameState         R     0x5615051e76a0+5966: [], env=e0.7
  void                    Deopt              !v    %446.0, Typecheck@0x5614f925d5d0[Type#277], %152.1   !
BB441   <- [437]
  int$-           %441.0 = CastType           d     dn %437.0
  val?            %441.1 = Extract1_1D        wed   %431.1, %441.0, elided   <str$->
  void                    StVar              lW    nam, %441.1, e0.7
  val?^ | miss    %441.3 = LdVar              eR    mf, e0.7
  val?            %441.4 = Force!<value>      !v    %441.3, e0.7   <vec+>
  lgl$#-          %441.5 = IsType                   %441.4 isA val+   <true>
  lgl$#-          %441.6 = IsType                   %441.4 isA val?+
  void                    Branch                   %441.5 -> BB449 (if true) | BB450 (if false)
BB442   <- [437]
  void                    Nop                !     
  val             %442.1 = %437.0
  dr              %442.2 = Typecheck@0x5614f925d5d0[Type#113]
  goto BB77
BB297   <- [435]
  val?^ | miss    %297.0 = LdVar              eR    c, e407.5
  lgl$#-          %297.1 = Identical                <blt c>, %297.0   <@?>
  void                    Branch                   %297.1 -> BB299 (if true) | BB298 (if false)
BB283   <- [435]
  val?^ | miss    %283.0 = LdVar              eR    any, e407.5
  lgl$#-          %283.1 = Identical                <blt any>, %283.0   <true>
  void                    Branch                   %283.1 -> BB439 (if true) | BB440 (if false)
BB281   <- [436, 440]
  val?^ | miss    %281.0 = Phi                      %436.1:BB436, %440.1:BB440
  val?^ | miss    %281.1 = %281.0
  dr              %281.2 = Phi                      %436.2:BB436, %440.2:BB440
  dr              %281.3 = %281.2
  fs              %281.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %281.5 = FrameState         R     0x5614fa81eb50+714: [%433.0], env=e407.5, next=%281.4
  void                    Deopt              !v    %281.5, %281.3, %281.1   !
BB447   <- [445]
  val?^ | miss    %447.0 = LdVar              eR    nTrm, e0.7
  lgl$#-          %447.1 = IsType                   %447.0 isA int$-
  void                    Branch                   %447.1 -> BB453 (if true) | BB454 (if false)
BB448   <- [445]
  void                    Nop                !     
  val?^ | miss    %448.1 = %445.3
  dr              %448.2 = CallTarget@0x5614f925d5d0[Call#89]
  goto BB155
BB449   <- [441]
  val?^ | miss    %449.0 = LdVar              eR    i, e0.7
  lgl$#-          %449.1 = IsType                   %449.0 isA int$-
  void                    Branch                   %449.1 -> BB451 (if true) | BB452 (if false)
BB450   <- [441]
  void                    Nop                !     
  lgl$#-          %450.1 = %441.5
  dr              %450.2 = DeadBranchReached@0x5614f925d5d0[Test#24]
  goto BB79
BB299   <- [297]
  fs              %299.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  str-            %299.1 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %299.1, e407.5
  (cls|spec|blt)  %299.3 = LdFun              !v    <-, e407.5
  fs              %299.4 = FrameState         R     0x5614fa81eb50+876: [%299.3], env=e407.5, next=%299.0
  void                    Deopt              !v    %299.4, DeadCall@0x5614f9e29c18[Call#9], %299.3   !
BB298   <- [297]
  fs              %298.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  (cls|spec|blt)  %298.1 = LdFun              !v    c, e407.5
  fs              %298.2 = FrameState         R     0x5614fa81eb50+758: [%298.1], env=e407.5, next=%298.0
  void                    Deopt              !v    %298.2, DeadCall@0x5614f9e29c18[Call#8], %298.1   !
BB439   <- [283]
  (cls|spec|blt)  %439.0 = LdFun              !v    [[, <0x5614f88a6c48>, e407.5
  prom-           %439.1 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p78, e407.5
  val?            %439.2 = NamedCall          !v    %439.0(%439.1, "class", exact=true) e407.5   <(nil|str)+>
  lgl$#-          %439.3 = IsType                   %439.2 isA val?+
  void                    Branch                   %439.3 -> BB443 (if true) | BB444 (if false)
BB440   <- [283]
  void                    Nop                !     
  lgl$#-          %440.1 = %283.1
  dr              %440.2 = DeadBranchReached@0x5614f9e29c18[Test#10]
  goto BB281
BB453   <- [447]
  int$-           %453.0 = CastType           d     dn %447.0
  int-            %453.1 = CallSafeBuiltin    wed   vector("integer", %453.0)    <int->
  void                    StVar              lW    counts, %453.1, e0.7
  lgl$#-          %453.3 = CheckTrueFalse     e     %445.0
  void                    Branch                   %453.3 -> BB160 (if true) | BB159 (if false)
BB454   <- [447]
  void                    Nop                !     
  val?^ | miss    %454.1 = %447.0
  dr              %454.2 = Typecheck@0x5614f925d5d0[Type#279]
  goto BB155
BB155   <- [448, 454]
  val?^ | miss    %155.0 = Phi                      %448.1:BB448, %454.1:BB454
  val?^ | miss    %155.1 = %155.0
  dr              %155.2 = Phi                      %448.2:BB448, %454.2:BB454
  dr              %155.3 = %155.2
  fs              %155.4 = FrameState         R     0x5615051e76a0+6033: [], env=e0.7
  void                    Deopt              !v    %155.4, %155.3, %155.1   !
BB451   <- [449]
  int$-           %451.0 = CastType           d     dn %449.0
  void                    Branch                   %441.6 -> BB461 (if true) | BB462 (if false)
BB452   <- [449]
  void                    Nop                !     
  val?^ | miss    %452.1 = %449.0
  dr              %452.2 = Typecheck@0x5614f925d5d0[Type#117]
  goto BB79
BB79   <- [450, 452, 462]
  val?^ | miss    %79.0 = Phi                      %450.1:BB450, %452.1:BB452, %462.1:BB462
  val?^ | miss    %79.1 = %79.0
  dr              %79.2 = Phi                      %450.2:BB450, %452.2:BB452, %462.2:BB462
  dr              %79.3 = %79.2
  fs              %79.4 = FrameState         R     0x5615051e76a0+2704: [%427.1, %427.2, %427.3, %441.4], env=e0.7
  void                    Deopt              !v    %79.4, %79.3, %79.1   !
BB443   <- [439]
  val?+           %443.0 = CastType           d     dn %439.2   <(nil|str)+>
  lgl             %443.1 = Eq                 wed   %443.0, "factor", elided   <lgl->
  val?            %443.2 = CallBuiltin        !v    any(%443.1) e407.5   <lgl$->
  lgl$#-          %443.3 = IsType                   %443.2 isA lgl$-
  void                    Branch                   %443.3 -> BB465 (if true) | BB466 (if false)
BB444   <- [439]
  fs              %444.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %444.1 = FrameState         R     0x5614fa81eb50+1023: [<blt any>, %439.2], env=e407.5, next=%444.0
  void                    Deopt              !v    %444.1, Typecheck@0x5614f9e29c18[Type#38], %439.2   !
BB160   <- [453]
  val?^ | miss    %160.0 = LdVar              eR    new, e0.7
  lgl$#-          %160.1 = Identical                %160.0, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %160.1 -> BB455 (if true) | BB456 (if false)
BB159   <- [453]
  (cls|spec|blt)  %159.0 = LdFun              !v    new, e0.7
  fs              %159.1 = FrameState         R     0x5615051e76a0+6104: [%159.0], env=e0.7
  void                    Deopt              !v    %159.1, DeadCall@0x5614f925d5d0[Call#90], %159.0   !
BB461   <- [451]
  val?+           %461.0 = CastType           d     dn %441.4   <vec+>
  val?            %461.1 = Extract2_1D        wed   %461.0, %451.0, elided   <(int|real)>
  void                    StVar              lW    f, %461.1, e0.7
  val?^ | miss    %461.3 = LdVar              eR    is.f, e0.7
  lgl$#-          %461.4 = IsType                   %461.3 isA lgl+
  void                    Branch                   %461.4 -> BB463 (if true) | BB464 (if false)
BB462   <- [451]
  void                    Nop                !     
  val?            %462.1 = %441.4
  dr              %462.2 = Typecheck@0x5614f925d5d0[Type#115]
  goto BB79
BB465   <- [443]
  lgl$-           %465.0 = CastType           d     dn %443.2
  lgl$-           %465.1 = AsLogical                %465.0
  lgl$#-          %465.2 = Identical                %465.1, false
  void                    Branch                   %465.2 -> BB296 (if true) | BB288 (if false)
BB466   <- [443]
  void                    Nop                !     
  val?            %466.1 = %443.2
  dr              %466.2 = Typecheck@0x5614f9e29c18[Type#40]
  goto BB286
BB455   <- [160]
  prom-           %455.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p27, e0.7
  prom-           %455.1 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p28, e0.7
  prom-           %455.2 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p30, e0.7
  prom-           %455.3 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p32, e0.7
  dots-           %455.4 = DotsList           l     i=%455.0, p=%455.1, Dim=%455.2, x=%455.3
  val?            %455.5 = StaticCall         !v    new[0x5614fba93960]("dgCMatrix", %455.4) { 0 1n 2n 3n 4n } e0.7   <other>
  void                    StVar              lW    r, %455.5, e0.7
  val?^ | miss    %455.7 = LdVar              eR    transpose, e0.7
  val?            %455.8 = Force!<lazy>       !v    %455.7, e0.7   <lgl$->
  lgl$#-          %455.9 = CheckTrueFalse     we    %455.8
  void                    Branch                   %455.9 -> BB255 (if true) | BB163 (if false)
BB456   <- [160]
  fs              %456.0 = FrameState         R     0x5615051e76a0+6079: [], env=e0.7
  void                    Deopt              !v    %456.0, CallTarget@0x5614f925d5d0[Call#92], %160.0   !
BB463   <- [461]
  lgl+            %463.0 = CastType           d     dn %461.3
  lgl+            %463.1 = Extract1_1D        wed   %463.0, %451.0, elided   <lgl$+>
  lgl$#-          %463.2 = CheckTrueFalse     we    %463.1
  void                    Branch                   %463.2 -> BB262 (if true) | BB85 (if false)
BB464   <- [461]
  fs              %464.0 = FrameState         R     0x5615051e76a0+2770: [%427.1, %427.2, %427.3], env=e0.7
  void                    Deopt              !v    %464.0, Typecheck@0x5614f925d5d0[Type#119], %461.3   !
BB296   <- [465]
  void                    Nop                !     
  lgl$-           %296.1 = %465.1
  goto BB289
BB288   <- [465]
  val?^ | miss    %288.0 = LdVar              eR    typeof, e407.5
  lgl$#-          %288.1 = Identical                %288.0, function(x) <(rir::DispatchTable*)0x5614fa848d|...
  void                    Branch                   %288.1 -> BB477 (if true) | BB478 (if false)
BB286   <- [466, 478]
  val?^ | miss    %286.0 = Phi                      %466.1:BB466, %478.1:BB478
  val?^ | miss    %286.1 = %286.0
  dr              %286.2 = Phi                      %466.2:BB466, %478.2:BB478
  dr              %286.3 = %286.2
  fs              %286.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %286.5 = FrameState         R     0x5614fa81eb50+1057: [%443.2], env=e407.5, next=%286.4
  void                    Deopt              !v    %286.5, %286.3, %286.1   !
BB255   <- [455]
  (cls|spec|blt)  %255.0 = LdFun              !v    t, e0.7
  fs              %255.1 = FrameState         R     0x5615051e76a0+6270: [%255.0], env=e0.7
  void                    Deopt              !v    %255.1, DeadCall@0x5614f925d5d0[Call#96], %255.0   !
BB163   <- [455]
  val?^ | miss    %163.0 = LdVar              eR    seq_len, e0.7
  lgl$#-          %163.1 = Identical                <blt seq_len>, %163.0   <true>
  void                    Branch                   %163.1 -> BB457 (if true) | BB458 (if false)
BB262   <- [463]
  val?^ | miss    %262.0 = LdVar              eR    factorPattern, e0.7
  lgl$#-          %262.1 = IsType                   %262.0 isA int+
  void                    Branch                   %262.1 -> BB475 (if true) | BB476 (if false)
BB85   <- [463]
  val?^ | miss    %85.0 = LdVar              eR    any, e0.7
  lgl$#-          %85.1 = Identical                <blt any>, %85.0   <true>
  void                    Branch                   %85.1 -> BB483 (if true) | BB484 (if false)
BB289   <- [296, 477]
  lgl$-           %289.0 = Phi                      %477.6:BB477, %296.1:BB296
  lgl$-           %289.1 = %289.0
  lgl$#-          %289.2 = CheckTrueFalse     e     %289.1
  void                    Branch                   %289.2 -> BB295 (if true) | BB292 (if false)
BB477   <- [288]
  val?^ | miss    %477.0 = LdVar              eR    .Data, e407.5
  val?            %477.1 = Force!<wrapped>    !v    %477.0, e407.5   <int->
  str$-           %477.2 = CallSafeBuiltin    wed   typeof(%477.1)    <str$->
  lgl$-           %477.3 = Eq                 d     %477.2, "double", elided   <lgl$->
  lgl$-           %477.4 = AsLogical                %477.3
  lgl$-           %477.5 = LAnd                     %465.1, %477.4
  lgl$-           %477.6 = %477.5
  goto BB289
BB478   <- [288]
  void                    Nop                !     
  val?^ | miss    %478.1 = %288.0
  dr              %478.2 = CallTarget@0x5614f9e29c18[Call#14]
  goto BB286
BB457   <- [163]
  val?^ | miss    %457.0 = LdVar              eR    nTrm, e0.7
  lgl$#-          %457.1 = IsType                   %457.0 isA int$-
  void                    Branch                   %457.1 -> BB459 (if true) | BB460 (if false)
BB458   <- [163]
  void                    Nop                !     
  lgl$#-          %458.1 = %163.1
  dr              %458.2 = DeadBranchReached@0x5614f925d5d0[Test#48]
  goto BB161
BB475   <- [262]
  int+            %475.0 = CastType           d     dn %262.0
  int+            %475.1 = Extract1_2D        wed   %475.0, %451.0, missingArg, elided   <int+>
  void                    StVar              lW    fp, %475.1, e0.7
  val?^ | miss    %475.3 = LdVar              eR    attr, e0.7
  lgl$#-          %475.4 = Identical                <blt attr>, %475.3   <true>
  void                    Branch                   %475.4 -> BB497 (if true) | BB498 (if false)
BB476   <- [262]
  void                    Nop                !     
  val?^ | miss    %476.1 = %262.0
  dr              %476.2 = Typecheck@0x5614f925d5d0[Type#169]
  goto BB83
BB483   <- [85]
  val?^ | miss    %483.0 = LdVar              eR    class, e0.7
  lgl$#-          %483.1 = Identical                <blt class>, %483.0   <true>
  void                    Branch                   %483.1 -> BB491 (if true) | BB492 (if false)
BB484   <- [85]
  void                    Nop                !     
  lgl$#-          %484.1 = %85.1
  dr              %484.2 = DeadBranchReached@0x5614f925d5d0[Test#26]
  goto BB83
BB295   <- [289]
  fs              %295.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  (cls|spec|blt)  %295.1 = LdFun              !v    storage.mode<-, e407.5
  fs              %295.2 = FrameState         R     0x5614fa81eb50+1142: ["integer", %295.1], env=e407.5, next=%295.0
  void                    Deopt              !v    %295.2, DeadCall@0x5614f9e29c18[Call#15], %295.1   !
BB292   <- [289]
  val?^ | miss    %292.0 = LdVar              eR    c, e407.5
  lgl$#-          %292.1 = Identical                <blt c>, %292.0   <true>
  void                    Branch                   %292.1 -> BB485 (if true) | BB486 (if false)
BB459   <- [457]
  int$-           %459.0 = CastType           d     dn %457.0
  val+            %459.1 = CallSafeBuiltin    wed   seq_len(%459.0)    <int->
  int$-           %459.2 = Length                   %459.1
  void                    StVar              lW    iTrm, %459.1, e0.7
  lgl$-           %459.4 = Lt                 d     %459.2, %427.3, elided
  lgl$#-          %459.5 = Identical                %459.4, true
  void                    Branch                   %459.5 -> BB254 (if true) | BB164 (if false)
BB460   <- [457]
  void                    Nop                !     
  val?^ | miss    %460.1 = %457.0
  dr              %460.2 = Typecheck@0x5614f925d5d0[Type#299]
  goto BB161
BB161   <- [458, 460]
  val?^ | miss    %161.0 = Phi                      %458.1:BB458, %460.1:BB460
  val?^ | miss    %161.1 = %161.0
  dr              %161.2 = Phi                      %458.2:BB458, %460.2:BB460
  dr              %161.3 = %161.2
  fs              %161.4 = FrameState         R     0x5615051e76a0+6255: [%455.9], env=e0.7
  void                    Deopt              !v    %161.4, %161.3, %161.1   !
BB497   <- [475]
  val             %497.0 = ChkMissing         e     %461.1
  val?            %497.1 = CallBuiltin        !v    attr(%461.1, "contrasts") e0.7   <str$->
  void                    StVar              lW    contr, %497.1, e0.7
  val?^ | miss    %497.3 = LdVar              eR    lapply, e0.7
  lgl$#-          %497.4 = Identical                %497.3, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %497.4 -> BB509 (if true) | BB510 (if false)
BB498   <- [475]
  fs              %498.0 = FrameState         R     0x5615051e76a0+3938: [%427.1, %427.2, %427.3], env=e0.7
  void                    Deopt              !v    %498.0, DeadBranchReached@0x5614f925d5d0[Test#34], %475.4   !
BB83   <- [476, 484, 492, 494]
  val?^ | miss    %83.0 = Phi                      %476.1:BB476, %484.1:BB484, %492.1:BB492, %494.1:BB494
  val?^ | miss    %83.1 = %83.0
  dr              %83.2 = Phi                      %476.2:BB476, %484.2:BB484, %492.2:BB492, %494.2:BB494
  dr              %83.3 = %83.2
  fs              %83.4 = FrameState         R     0x5615051e76a0+2837: [%427.1, %427.2, %427.3, %463.2], env=e0.7
  void                    Deopt              !v    %83.4, %83.3, %83.1   !
BB491   <- [483]
  val             %491.0 = ChkMissing         e     %461.1
  lgl$#-          %491.1 = IsType                   %491.0 isA real-
  void                    Branch                   %491.1 -> BB493 (if true) | BB494 (if false)
BB492   <- [483]
  void                    Nop                !     
  lgl$#-          %492.1 = %483.1
  dr              %492.2 = DeadBranchReached@0x5614f925d5d0[Test#27]
  goto BB83
BB485   <- [292]
  val?^ | miss    %485.0 = LdVar              eR    attributes, e407.5
  lgl$#-          %485.1 = Identical                <blt attributes>, %485.0   <true>
  void                    Branch                   %485.1 -> BB499 (if true) | BB500 (if false)
BB486   <- [292]
  void                    Nop                !     
  lgl$#-          %486.1 = %292.1
  dr              %486.2 = DeadBranchReached@0x5614f9e29c18[Test#11]
  goto BB290
BB254   <- [459]
  void                    Nop                !     
  goto BB229
BB164   <- [459]
  val?            %164.0 = Extract2_1D        wed   %459.1, %427.3, elided
  void                    StVar              lW    j, %164.0, e0.7
  val?^ | miss    %164.2 = LdVar              eR    Names, e0.7
  lgl$#-          %164.3 = IsType                   %164.2 isA val?~- | miss
  void                    Branch                   %164.3 -> BB467 (if true) | BB468 (if false)
BB509   <- [497]
  prom-           %509.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p53, e0.7
  cls             %509.1 = MkCls                    model.spmatrix@Prom(60)0, e0.7
  prom-           %509.2 = MkArg                    %509.1, model.spmatrix[0x5614fe14f940]_p60 (!refl), e0.7
  val?            %509.3 = StaticCall         !v    lapply[0x5614fe8386a0](%509.0, %509.2) { 0 1 } e0.7   <vec->
  val?^ | miss    %509.4 = LdVar              eR    f.matr !upd, e0.7
  lgl$#-          %509.5 = IsType                   %509.4 isA val?~+ | miss
  void                    Branch                   %509.5 -> BB519 (if true) | BB520 (if false)
BB510   <- [497]
  fs              %510.0 = FrameState         R     0x5615051e76a0+4054: [%427.1, %427.2, %427.3], env=e0.7
  void                    Deopt              !v    %510.0, CallTarget@0x5614f925d5d0[Call#56], %497.3   !
BB493   <- [491]
  real-           %493.0 = CastType           d     dn %491.0
  val?            %493.1 = CallBuiltin        !v    class(%493.0) e0.7   <str$->
  void                    StVar              lW    cl, %493.1, e0.7
  lgl$#-          %493.3 = IsType                   %493.1 isA val?-
  void                    Branch                   %493.3 -> BB495 (if true) | BB496 (if false)
BB494   <- [491]
  void                    Nop                !     
  val             %494.1 = %491.0
  dr              %494.2 = Typecheck@0x5614f925d5d0[Type#127]
  goto BB83
BB499   <- [485]
  val?^ | miss    %499.0 = LdVar              eR    .Data, e407.5
  val?            %499.1 = Force!<wrapped>    !v    %499.0, e407.5   <val?+>
  val?            %499.2 = CallBuiltin        !v    attributes(%499.1) e407.5   <(nil|vec)+>
  lgl$#-          %499.3 = IsType                   %499.2 isA val?+
  val?^ | miss    %499.4 = LdVar              eR    attrib, e407.5
  lgl$#-          %499.5 = IsType                   %499.4 isA val?~+ | miss
  void                    Branch                   %499.5 -> BB501 (if true) | BB502 (if false)
BB500   <- [485]
  void                    Nop                !     
  lgl$#-          %500.1 = %485.1
  dr              %500.2 = DeadBranchReached@0x5614f9e29c18[Test#12]
  goto BB290
BB290   <- [486, 500]
  val?^ | miss    %290.0 = Phi                      %486.1:BB486, %500.1:BB500
  val?^ | miss    %290.1 = %290.0
  dr              %290.2 = Phi                      %486.2:BB486, %500.2:BB500
  dr              %290.3 = %290.2
  fs              %290.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %290.5 = FrameState         R     0x5614fa81eb50+1120: [%289.1], env=e407.5, next=%290.4
  void                    Deopt              !v    %290.5, %290.3, %290.1   !
BB229   <- [228, 254]
  val?^ | miss    %229.0 = LdVar              eR    row.names, e0.7
  val?            %229.1 = Force!<wrapped>    !v    %229.0, e0.7   <lgl$->
  lgl$#-          %229.2 = CheckTrueFalse     we    %229.1
  void                    Branch                   %229.2 -> BB248 (if true) | BB232 (if false)
BB467   <- [164]
  val?~- | miss   %467.0 = CastType           d     dn %164.2
  val?-           %467.1 = Force!<value>            %467.0,    <str->
  lgl$#-          %467.2 = IsType                   %467.1 isA val+   <true>
  void                    Branch                   %467.2 -> BB469 (if true) | BB470 (if false)
BB468   <- [164]
  void                    Nop                !     
  val?^ | miss    %468.1 = %164.2
  dr              %468.2 = Typecheck@0x5614f925d5d0[Type#302]
  goto BB165
BB519   <- [509]
  val?~+ | miss   %519.0 = CastType           d     dn %509.4
  val?+           %519.1 = Force!<value>            %519.0,    <vec+>
  val?^ | miss    %519.2 = LdVar              eR    i.f, e0.7
  lgl$#-          %519.3 = IsType                   %519.2 isA real$-
  void                    Branch                   %519.3 -> BB531 (if true) | BB532 (if false)
BB520   <- [509]
  void                    Nop                !     
  val?^ | miss    %520.1 = %509.4
  dr              %520.2 = Typecheck@0x5614f925d5d0[Type#184]
  goto BB267
BB495   <- [493]
  val?-           %495.0 = CastType           d     dn %493.1   <str$->
  lgl-            %495.1 = Eq                 wed   %495.0, "AsIs", elided   <lgl$->
  lgl$#-          %495.2 = IsType                   %495.1 isA lgl$-
  void                    Branch                   %495.2 -> BB505 (if true) | BB506 (if false)
BB496   <- [493]
  fs              %496.0 = FrameState         R     0x5615051e76a0+3009: [%427.1, %427.2, %427.3, <blt any>, %493.1], env=e0.7
  void                    Deopt              !v    %496.0, Typecheck@0x5614f925d5d0[Type#128], %493.1   !
BB501   <- [499]
  val?~+ | miss   %501.0 = CastType           d     dn %499.4
  val?+           %501.1 = Force!<value>            %501.0,    <vec+>
  void                    Branch                   %499.3 -> BB511 (if true) | BB512 (if false)
BB502   <- [499]
  void                    Nop                !     
  val?^ | miss    %502.1 = %499.4
  dr              %502.2 = Typecheck@0x5614f9e29c18[Type#51]
  goto BB293
BB248   <- [229]
  val?^ | miss    %248.0 = LdVar              eR    rnames, e0.7
  lgl$#-          %248.1 = IsType                   %248.0 isA val?~- | miss
  void                    Branch                   %248.1 -> BB481 (if true) | BB482 (if false)
BB232   <- [229]
  void                    Nop                !     
  nil-            %232.1 = nil
  goto BB233
BB469   <- [467]
  val             %469.0 = ChkMissing         e     %164.0
  lgl$#-          %469.1 = IsType                   %469.0 isA int$-
  void                    Branch                   %469.1 -> BB471 (if true) | BB472 (if false)
BB470   <- [467]
  void                    Nop                !     
  lgl$#-          %470.1 = %467.2
  dr              %470.2 = DeadBranchReached@0x5614f925d5d0[Test#50]
  goto BB165
BB165   <- [468, 470, 472]
  val?^ | miss    %165.0 = Phi                      %468.1:BB468, %470.1:BB470, %472.1:BB472
  val?^ | miss    %165.1 = %165.0
  dr              %165.2 = Phi                      %468.2:BB468, %470.2:BB470, %472.2:BB472
  dr              %165.3 = %165.2
  fs              %165.4 = FrameState         R     0x5615051e76a0+6470: [%459.1, %459.2, %427.3], env=e0.7
  void                    Deopt              !v    %165.4, %165.3, %165.1   !
BB531   <- [519]
  real$-          %531.0 = CastType           d     dn %519.2
  real$-          %531.1 = Add                d     %531.0, 1, elided   <real$->
  void                    StVar              lW    i.f, %531.1, e0.7
  lgl$#-          %531.3 = IsType                   %509.3 isA val?-
  void                    Branch                   %531.3 -> BB537 (if true) | BB538 (if false)
BB532   <- [519]
  void                    Nop                !     
  val?^ | miss    %532.1 = %519.2
  dr              %532.2 = Typecheck@0x5614f925d5d0[Type#185]
  goto BB267
BB267   <- [520, 532]
  val?^ | miss    %267.0 = Phi                      %520.1:BB520, %532.1:BB532
  val?^ | miss    %267.1 = %267.0
  dr              %267.2 = Phi                      %520.2:BB520, %532.2:BB532
  dr              %267.3 = %267.2
  fs              %267.4 = FrameState         R     0x5615051e76a0+4091: [%427.1, %427.2, %427.3, %509.3], env=e0.7
  void                    Deopt              !v    %267.4, %267.3, %267.1   !
BB505   <- [495]
  lgl$-           %505.0 = CastType           d     dn %495.1
  void                    StVar              lW    iA, %505.0, e0.7
  val?            %505.2 = CallBuiltin        !v    any(%505.0) e0.7   <lgl$->
  lgl$#-          %505.3 = IsType                   %505.2 isA lgl$-
  void                    Branch                   %505.3 -> BB507 (if true) | BB508 (if false)
BB506   <- [495]
  fs              %506.0 = FrameState         R     0x5615051e76a0+3017: [%427.1, %427.2, %427.3, <blt any>, %495.1], env=e0.7
  void                    Deopt              !v    %506.0, Typecheck@0x5614f925d5d0[Type#129], %495.1   !
BB511   <- [501]
  val?+           %511.0 = CastType           d     dn %499.2   <(nil|vec)+>
  val+            %511.1 = CallSafeBuiltin    wed   c(%511.0, %501.1)    <vec+>
  (cls|spec|blt)  %511.2 = LdFun              !v    attributes<-, <0x5614f88a7128>, e407.5
  val?^ | miss    %511.3 = LdVar              eR    .Data, e407.5
  val?            %511.4 = Force!<wrapped>    !v    %511.3, e407.5   <val?+>
  val?            %511.5 = NamedCall          !v    %511.2(%511.4, value=%511.1) e407.5
  void                    StVar              lW    .Data, %511.5, e407.5
  goto BB73
BB512   <- [501]
  void                    Nop                !     
  val?            %512.1 = %499.2
  dr              %512.2 = Typecheck@0x5614f9e29c18[Type#50]
  goto BB293
BB293   <- [502, 512]
  val?^ | miss    %293.0 = Phi                      %502.1:BB502, %512.1:BB512
  val?^ | miss    %293.1 = %293.0
  dr              %293.2 = Phi                      %502.2:BB502, %512.2:BB512
  dr              %293.3 = %293.2
  fs              %293.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %293.5 = FrameState         R     0x5614fa81eb50+1361: [<blt c>, %499.2], env=e407.5, next=%293.4
  void                    Deopt              !v    %293.5, %293.3, %293.1   !
BB481   <- [248]
  val?~- | miss   %481.0 = CastType           d     dn %248.0
  val?-           %481.1 = Force!<value>            %481.0,    <str->
  val?-           %481.2 = %481.1
  goto BB233
BB482   <- [248]
  fs              %482.0 = FrameState         R     0x5615051e76a0+8584: [%229.2], env=e0.7
  void                    Deopt              !v    %482.0, Typecheck@0x5614f925d5d0[Type#425], %248.0   !
BB233   <- [232, 481]
  val?-           %233.0 = Phi                      %232.1:BB232, %481.2:BB481
  val?-           %233.1 = %233.0
  void                    StVar              lW    rns, %233.1, e0.7
  val?^ | miss    %233.3 = LdVar              eR    transpose, e0.7
  val?            %233.4 = Force!<wrapped>    !v    %233.3, e0.7   <lgl$->
  lgl$#-          %233.5 = CheckTrueFalse     we    %233.4
  void                    Branch                   %233.5 -> BB245 (if true) | BB236 (if false)
BB471   <- [469]
  int$-           %471.0 = CastType           d     dn %469.0
  val?            %471.1 = Extract1_1D        wed   %467.1, %471.0, elided   <str$->
  void                    StVar              lW    nm, %471.1, e0.7
  val?^ | miss    %471.3 = LdVar              eR    verbose, e0.7
  val?            %471.4 = Force!<wrapped>    !v    %471.3, e0.7   <lgl$->
  lgl$#-          %471.5 = CheckTrueFalse     we    %471.4
  void                    Branch                   %471.5 -> BB253 (if true) | BB169 (if false)
BB472   <- [469]
  void                    Nop                !     
  val             %472.1 = %469.0
  dr              %472.2 = Typecheck@0x5614f925d5d0[Type#304]
  goto BB165
BB537   <- [531]
  val?-           %537.0 = CastType           d     dn %509.3   <vec->
  val?+           %537.1 = Subassign2_1D      wed   %537.0, %519.1, %531.1, elided
  void                    StVar              lW    f.matr, %537.1, e0.7
  int$-           %537.3 = %427.3
  goto BB110
BB538   <- [531]
  fs              %538.0 = FrameState         R     0x5615051e76a0+4147: [%427.1, %427.2, %427.3, %509.3, %519.1, %531.1], env=e0.7
  void                    Deopt              !v    %538.0, Typecheck@0x5614f925d5d0[Type#183], %509.3   !
BB507   <- [505]
  lgl$-           %507.0 = CastType           d     dn %505.2
  lgl$#-          %507.1 = CheckTrueFalse     e     %507.0
  void                    Branch                   %507.1 -> BB261 (if true) | BB92 (if false)
BB508   <- [505]
  void                    Nop                !     
  val?            %508.1 = %505.2
  dr              %508.2 = Typecheck@0x5614f925d5d0[Type#130]
  goto BB90
BB245   <- [233]
  val?^ | miss    %245.0 = LdVar              eR    list, e0.7
  lgl$#-          %245.1 = Identical                <blt list>, %245.0   <@?>
  void                    Branch                   %245.1 -> BB247 (if true) | BB246 (if false)
BB236   <- [233]
  val?^ | miss    %236.0 = LdVar              eR    list, e0.7
  lgl$#-          %236.1 = Identical                <blt list>, %236.0   <true>
  void                    Branch                   %236.1 -> BB503 (if true) | BB504 (if false)
BB253   <- [471]
  (cls|spec|blt)  %253.0 = LdFun              !v    cat, e0.7
  fs              %253.1 = FrameState         R     0x5615051e76a0+6575: [%459.1, %459.2, %427.3, %253.0], env=e0.7
  void                    Deopt              !v    %253.1, DeadCall@0x5614f925d5d0[Call#98], %253.0   !
BB169   <- [471]
  val?^ | miss    %169.0 = LdVar              eR    strsplit, e0.7
  lgl$#-          %169.1 = Identical                %169.0, function(x, split, fixed=FALSE, perl=FALSE, us|...
  void                    Branch                   %169.1 -> BB473 (if true) | BB474 (if false)
BB110   <- [537, 595, 617]
  int$-           %110.0 = Phi                      %595.3:BB595, %617.3:BB617, %537.3:BB537
  int$-           %110.1 = %110.0
  int$-           %110.2 = Inc                      %110.1
  lgl$-           %110.3 = Lt                 d     %427.2, %110.2, elided
  lgl$#-          %110.4 = Identical                %110.3, true
  void                    Branch                   %110.4 -> BB150 (if true) | BB111 (if false)
BB261   <- [507]
  (cls|spec|blt)  %261.0 = LdFun              !v    <-, e0.7
  fs              %261.1 = FrameState         R     0x5615051e76a0+3071: [%427.1, %427.2, %427.3, %261.0], env=e0.7
  void                    Deopt              !v    %261.1, DeadCall@0x5614f925d5d0[Call#41], %261.0   !
BB92   <- [507]
  val?^ | miss    %92.0 = LdVar              eR    is.matrix, e0.7
  lgl$#-          %92.1 = Identical                <blt is.matrix>, %92.0   <true>
  void                    Branch                   %92.1 -> BB527 (if true) | BB528 (if false)
BB90   <- [508, 528, 530]
  val?^ | miss    %90.0 = Phi                      %508.1:BB508, %528.1:BB528, %530.1:BB530
  val?^ | miss    %90.1 = %90.0
  dr              %90.2 = Phi                      %508.2:BB508, %528.2:BB528, %530.2:BB530
  dr              %90.3 = %90.2
  fs              %90.4 = FrameState         R     0x5615051e76a0+3050: [%427.1, %427.2, %427.3, %505.2], env=e0.7
  void                    Deopt              !v    %90.4, %90.3, %90.1   !
BB247   <- [245]
  val?^ | miss    %247.0 = LdVar              eR    vNms, e0.7
  val?            %247.1 = Force!             !v    %247.0, e0.7   <val?_>
  val?^ | miss    %247.2 = LdVar              eR    rns, e0.7
  val?            %247.3 = Force!             !v    %247.2, e0.7   <val?_>
  val+            %247.4 = CallSafeBuiltin    wed   list(%247.1, %247.3)    <val?_>
  val+            %247.5 = %247.4
  goto BB237
BB246   <- [245]
  (cls|spec|blt)  %246.0 = LdFun              !v    list, e0.7
  fs              %246.1 = FrameState         R     0x5615051e76a0+8791: [%246.0], env=e0.7
  void                    Deopt              !v    %246.1, DeadCall@0x5614f925d5d0[Call#137], %246.0   !
BB503   <- [236]
  val?^ | miss    %503.0 = LdVar              eR    rns, e0.7
  lgl$#-          %503.1 = IsType                   %503.0 isA val?~- | miss
  void                    Branch                   %503.1 -> BB513 (if true) | BB514 (if false)
BB504   <- [236]
  void                    Nop                !     
  lgl$#-          %504.1 = %236.1
  dr              %504.2 = DeadBranchReached@0x5614f925d5d0[Test#68]
  goto BB234
BB473   <- [169]
  val?^ | miss    %473.0 = LdVar              eR    nm, e0.7
  lgl$#-          %473.1 = IsType                   %473.0 isA val?~- | miss
  void                    Branch                   %473.1 -> BB479 (if true) | BB480 (if false)
BB474   <- [169]
  void                    Nop                !     
  val?^ | miss    %474.1 = %169.0
  dr              %474.2 = CallTarget@0x5614f925d5d0[Call#100]
  goto BB167
BB150   <- [110]
  void                    Nop                !     
  goto BB151
BB111   <- [110]
  val?            %111.0 = Extract2_1D        wed   %427.1, %110.2, elided
  void                    StVar              lW    i, %111.0, e0.7
  val?^ | miss    %111.2 = LdVar              eR    fnames, e0.7
  lgl$#-          %111.3 = IsType                   %111.2 isA val?~- | miss
  void                    Branch                   %111.3 -> BB553 (if true) | BB554 (if false)
BB527   <- [92]
  val?^ | miss    %527.0 = LdVar              eR    f, e0.7
  lgl$#-          %527.1 = IsType                   %527.0 isA real-
  void                    Branch                   %527.1 -> BB529 (if true) | BB530 (if false)
BB528   <- [92]
  void                    Nop                !     
  lgl$#-          %528.1 = %92.1
  dr              %528.2 = DeadBranchReached@0x5614f925d5d0[Test#29]
  goto BB90
BB237   <- [247, 515]
  val+            %237.0 = Phi                      %515.3:BB515, %247.5:BB247
  val+            %237.1 = %237.0
  (cls|spec|blt)  %237.2 = LdFun              !v    dimnames<-, <0x5614f88a7358>, e0.7
  val?^ | miss    %237.3 = LdVar              eR    r, e0.7
  val?            %237.4 = Force!<value>      !v    %237.3, e0.7   <other>
  val?            %237.5 = NamedCall          !v    %237.2(%237.4, value=%237.1) e0.7
  void                    StVar              lW    r, %237.5, e0.7
  val?^ | miss    %237.7 = LdVar              eR    c, e0.7
  lgl$#-          %237.8 = Identical                <blt c>, %237.7   <true>
  void                    Branch                   %237.8 -> BB517 (if true) | BB518 (if false)
BB513   <- [503]
  val?~- | miss   %513.0 = CastType           d     dn %503.0
  val?-           %513.1 = Force!<value>            %513.0,    <str->
  val?^ | miss    %513.2 = LdVar              eR    vNms, e0.7
  lgl$#-          %513.3 = IsType                   %513.2 isA val?~- | miss
  void                    Branch                   %513.3 -> BB515 (if true) | BB516 (if false)
BB514   <- [503]
  void                    Nop                !     
  val?^ | miss    %514.1 = %503.0
  dr              %514.2 = Typecheck@0x5614f925d5d0[Type#429]
  goto BB234
BB234   <- [504, 514, 516]
  val?^ | miss    %234.0 = Phi                      %504.1:BB504, %514.1:BB514, %516.1:BB516
  val?^ | miss    %234.1 = %234.0
  dr              %234.2 = Phi                      %504.2:BB504, %514.2:BB514, %516.2:BB516
  dr              %234.3 = %234.2
  fs              %234.4 = FrameState         R     0x5615051e76a0+8638: [%233.5], env=e0.7
  void                    Deopt              !v    %234.4, %234.3, %234.1   !
BB479   <- [473]
  val?~- | miss   %479.0 = CastType           d     dn %473.0
  val?-           %479.1 = Force!<value>            %479.0,    <str$->
  vec+            %479.2 = CallSafeBuiltin    wed   strsplit(%479.1, ":", true, false, false)    <vec$->
  lgl$#-          %479.3 = IsType                   %479.2 isA val?-
  void                    Branch                   %479.3 -> BB487 (if true) | BB488 (if false)
BB480   <- [473]
  void                    Nop                !     
  val?^ | miss    %480.1 = %473.0
  dr              %480.2 = Typecheck@0x5614f925d5d0[Type#313]
  goto BB167
BB167   <- [474, 480]
  val?^ | miss    %167.0 = Phi                      %474.1:BB474, %480.1:BB480
  val?^ | miss    %167.1 = %167.0
  dr              %167.2 = Phi                      %474.2:BB474, %480.2:BB480
  dr              %167.3 = %167.2
  fs              %167.4 = FrameState         R     0x5615051e76a0+6560: [%459.1, %459.2, %427.3, %471.5], env=e0.7
  void                    Deopt              !v    %167.4, %167.3, %167.1   !
BB553   <- [111]
  val?~- | miss   %553.0 = CastType           d     dn %111.2
  val?-           %553.1 = Force!<value>            %553.0,    <str->
  lgl$#-          %553.2 = IsType                   %553.1 isA val+   <true>
  void                    Branch                   %553.2 -> BB555 (if true) | BB556 (if false)
BB554   <- [111]
  void                    Nop                !     
  val?^ | miss    %554.1 = %111.2
  dr              %554.2 = Typecheck@0x5614f925d5d0[Type#187]
  goto BB112
BB529   <- [527]
  real-           %529.0 = CastType           d     dn %527.0
  lgl$#-          %529.1 = CallSafeBuiltin    wed   is.matrix(%529.0)    <lgl$->
  void                    Branch                   %529.1 -> BB260 (if true) | BB95 (if false)
BB530   <- [527]
  void                    Nop                !     
  val?^ | miss    %530.1 = %527.0
  dr              %530.2 = Typecheck@0x5614f925d5d0[Type#141]
  goto BB90
BB517   <- [237]
  val?^ | miss    %517.0 = LdVar              eR    hasInt, e0.7
  lgl$#-          %517.1 = IsType                   %517.0 isA lgl$-
  void                    Branch                   %517.1 -> BB525 (if true) | BB526 (if false)
BB518   <- [237]
  void                    Nop                !     
  lgl$#-          %518.1 = %237.8
  dr              %518.2 = DeadBranchReached@0x5614f925d5d0[Test#70]
  goto BB238
BB515   <- [513]
  val?~- | miss   %515.0 = CastType           d     dn %513.2
  val?-           %515.1 = Force!<value>            %515.0,    <str->
  val+            %515.2 = CallSafeBuiltin    wed   list(%513.1, %515.1)    <vec->
  val+            %515.3 = %515.2
  goto BB237
BB516   <- [513]
  void                    Nop                !     
  val?^ | miss    %516.1 = %513.2
  dr              %516.2 = Typecheck@0x5614f925d5d0[Type#430]
  goto BB234
BB487   <- [479]
  vec-            %487.0 = CastType           d     dn %479.2   <vec$->
  val             %487.1 = Extract2_1D        wed   %487.0, 1, elided   <str$->
  void                    StVar              lW    nmSplits, %487.1, e0.7
  val?^ | miss    %487.3 = LdVar              eR    sparseInt.r, e0.7
  lgl$#-          %487.4 = Identical                %487.3, function(rList, do.names=TRUE, forceSparse=FAL|...
  void                    Branch                   %487.4 -> BB489 (if true) | BB490 (if false)
BB488   <- [479]
  fs              %488.0 = FrameState         R     0x5615051e76a0+6657: [%459.1, %459.2, %427.3], env=e0.7
  prom-           %488.1 = MkArg                    %479.1, model.spmatrix[0x5614fe14f940]_p34 (!refl), e0.7
  val?~           %488.2 = CastType                 up %488.1
  env             e488.3 = (MkEnv)            l     useBytes(miss)=false, perl(miss)=false, fixed=true, split=":", x=%488.2, parent=R_BaseNamespace, context 0
  fs              %488.4 = FrameState         R     0x5614fa98d300+165: [%479.2], env=e488.3, next=%488.0
  void                    Deopt              !v    %488.4, Typecheck@0x5614f925d5d0[Type#314], %479.2   !
BB555   <- [553]
  val             %555.0 = ChkMissing         e     %111.0
  lgl$#-          %555.1 = IsType                   %555.0 isA int$-
  void                    Branch                   %555.1 -> BB563 (if true) | BB564 (if false)
BB556   <- [553]
  void                    Nop                !     
  lgl$#-          %556.1 = %553.2
  dr              %556.2 = DeadBranchReached@0x5614f925d5d0[Test#35]
  goto BB112
BB112   <- [554, 556, 564]
  val?^ | miss    %112.0 = Phi                      %554.1:BB554, %556.1:BB556, %564.1:BB564
  val?^ | miss    %112.1 = %112.0
  dr              %112.2 = Phi                      %554.2:BB554, %556.2:BB556, %564.2:BB564
  dr              %112.3 = %112.2
  fs              %112.4 = FrameState         R     0x5615051e76a0+4187: [%427.1, %427.2, %110.2], env=e0.7
  void                    Deopt              !v    %112.4, %112.3, %112.1   !
BB260   <- [529]
  (cls|spec|blt)  %260.0 = LdFun              !v    nrow, e0.7
  fs              %260.1 = FrameState         R     0x5615051e76a0+3524: [%427.1, %427.2, %427.3, %260.0], env=e0.7
  void                    Deopt              !v    %260.1, DeadCall@0x5614f925d5d0[Call#49], %260.0   !
BB95   <- [529]
  val?^ | miss    %95.0 = LdVar              eR    c, e0.7
  lgl$#-          %95.1 = Identical                <blt c>, %95.0   <true>
  void                    Branch                   %95.1 -> BB535 (if true) | BB536 (if false)
BB525   <- [517]
  lgl$-           %525.0 = CastType           d     dn %517.0
  lgl$#-          %525.1 = CheckTrueFalse     e     %525.0
  void                    Branch                   %525.1 -> BB244 (if true) | BB240 (if false)
BB526   <- [517]
  void                    Nop                !     
  val?^ | miss    %526.1 = %517.0
  dr              %526.2 = Typecheck@0x5614f925d5d0[Type#442]
  goto BB238
BB238   <- [518, 526]
  val?^ | miss    %238.0 = Phi                      %518.1:BB518, %526.1:BB526
  val?^ | miss    %238.1 = %238.0
  dr              %238.2 = Phi                      %518.2:BB518, %526.2:BB526
  dr              %238.3 = %238.2
  fs              %238.4 = FrameState         R     0x5615051e76a0+8946: [], env=e0.7
  void                    Deopt              !v    %238.4, %238.3, %238.1   !
BB489   <- [487]
  prom-           %489.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p35, e0.7
  prom-           %489.1 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p38, e0.7
  val?            %489.2 = StaticCall         !v    sparseInt.r[0x5614fc6782c0](%489.0, true, true, %489.1) { 0 1n 2n 3n } e0.7   <other>
  void                    StVar              lW    rj, %489.2, e0.7
  val?^ | miss    %489.4 = LdVar              eR    verbose, e0.7
  val?            %489.5 = Force!<wrapped>    !v    %489.4, e0.7   <lgl$->
  lgl$#-          %489.6 = CheckTrueFalse     we    %489.5
  void                    Branch                   %489.6 -> BB252 (if true) | BB174 (if false)
BB490   <- [487]
  fs              %490.0 = FrameState         R     0x5615051e76a0+6715: [%459.1, %459.2, %427.3], env=e0.7
  void                    Deopt              !v    %490.0, CallTarget@0x5614f925d5d0[Call#101], %487.3   !
BB563   <- [555]
  int$-           %563.0 = CastType           d     dn %555.0
  val?            %563.1 = Extract1_1D        wed   %553.1, %563.0, elided   <str$->
  void                    StVar              lW    nam, %563.1, e0.7
  val?^ | miss    %563.3 = LdVar              eR    mf, e0.7
  val?            %563.4 = Force!<value>      !v    %563.3, e0.7   <vec+>
  lgl$#-          %563.5 = IsType                   %563.4 isA val+   <true>
  lgl$#-          %563.6 = IsType                   %563.4 isA val?+
  void                    Branch                   %563.5 -> BB569 (if true) | BB570 (if false)
BB564   <- [555]
  void                    Nop                !     
  val             %564.1 = %555.0
  dr              %564.2 = Typecheck@0x5614f925d5d0[Type#189]
  goto BB112
BB535   <- [95]
  val?^ | miss    %535.0 = LdVar              eR    length, e0.7
  lgl$#-          %535.1 = Identical                <blt length>, %535.0   <true>
  void                    Branch                   %535.1 -> BB543 (if true) | BB544 (if false)
BB536   <- [95]
  void                    Nop                !     
  lgl$#-          %536.1 = %95.1
  dr              %536.2 = DeadBranchReached@0x5614f925d5d0[Test#30]
  goto BB93
BB244   <- [525]
  void                    Nop                !     
  int$#-          %244.1 = 0L
  goto BB241
BB240   <- [525]
  void                    Nop                !     
  nil-            %240.1 = nil
  goto BB241
BB252   <- [489]
  (cls|spec|blt)  %252.0 = LdFun              !v    cat, e0.7
  fs              %252.1 = FrameState         R     0x5615051e76a0+6822: [%459.1, %459.2, %427.3, %252.0], env=e0.7
  void                    Deopt              !v    %252.1, DeadCall@0x5614f925d5d0[Call#103], %252.0   !
BB174   <- [489]
  val?^ | miss    %174.0 = LdVar              eR    transpose, e0.7
  val?            %174.1 = Force!<wrapped>    !v    %174.0, e0.7   <lgl$->
  lgl$#-          %174.2 = CheckTrueFalse     we    %174.1
  void                    Branch                   %174.2 -> BB249 (if true) | BB177 (if false)
BB569   <- [563]
  val?^ | miss    %569.0 = LdVar              eR    i, e0.7
  lgl$#-          %569.1 = IsType                   %569.0 isA int$-
  void                    Branch                   %569.1 -> BB571 (if true) | BB572 (if false)
BB570   <- [563]
  void                    Nop                !     
  lgl$#-          %570.1 = %563.5
  dr              %570.2 = DeadBranchReached@0x5614f925d5d0[Test#36]
  goto BB114
BB543   <- [535]
  (int|real)$-    %543.0 = CallSafeBuiltin    wed   length(%529.0)    <int$->
  lgl$#-          %543.1 = IsType                   %543.0 isA int$-
  void                    Branch                   %543.1 -> BB545 (if true) | BB546 (if false)
BB544   <- [535]
  void                    Nop                !     
  lgl$#-          %544.1 = %535.1
  dr              %544.2 = DeadBranchReached@0x5614f925d5d0[Test#31]
  goto BB93
BB93   <- [536, 544]
  val?^ | miss    %93.0 = Phi                      %536.1:BB536, %544.1:BB544
  val?^ | miss    %93.1 = %93.0
  dr              %93.2 = Phi                      %536.2:BB536, %544.2:BB544
  dr              %93.3 = %93.2
  fs              %93.4 = FrameState         R     0x5615051e76a0+3195: [%427.1, %427.2, %427.3, %529.1], env=e0.7
  void                    Deopt              !v    %93.4, %93.3, %93.1   !
BB241   <- [240, 244]
  (nil|int)-      %241.0 = Phi                      %240.1:BB240, %244.1:BB244
  (nil|int)-      %241.1 = %241.0
  (cls|spec|blt)  %241.2 = LdFun              !v    rep, <0x5614f88bb9b0>, e0.7
  prom-           %241.3 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p49, e0.7
  prom-           %241.4 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p50, e0.7
  val?            %241.5 = Call               !v    %241.2(%241.3, %241.4) e0.7   <int->
  lgl$#-          %241.6 = IsType                   %241.5 isA int-
  void                    Branch                   %241.6 -> BB541 (if true) | BB542 (if false)
BB249   <- [174]
  val?^ | miss    %249.0 = LdVar              eR    .Call, e0.7
  lgl$#-          %249.1 = Identical                <blt .Call>, %249.0   <@?>
  void                    Branch                   %249.1 -> BB251 (if true) | BB250 (if false)
BB177   <- [174]
  val?^ | miss    %177.0 = LdVar              eR    .Call, e0.7
  lgl$#-          %177.1 = Identical                <blt .Call>, %177.0   <true>
  void                    Branch                   %177.1 -> BB521 (if true) | BB522 (if false)
BB571   <- [569]
  int$-           %571.0 = CastType           d     dn %569.0
  void                    Branch                   %563.6 -> BB583 (if true) | BB584 (if false)
BB572   <- [569]
  void                    Nop                !     
  val?^ | miss    %572.1 = %569.0
  dr              %572.2 = Typecheck@0x5614f925d5d0[Type#193]
  goto BB114
BB114   <- [570, 572, 584]
  val?^ | miss    %114.0 = Phi                      %570.1:BB570, %572.1:BB572, %584.1:BB584
  val?^ | miss    %114.1 = %114.0
  dr              %114.2 = Phi                      %570.2:BB570, %572.2:BB572, %584.2:BB584
  dr              %114.3 = %114.2
  fs              %114.4 = FrameState         R     0x5615051e76a0+4271: [%427.1, %427.2, %110.2, %563.4], env=e0.7
  void                    Deopt              !v    %114.4, %114.3, %114.1   !
BB545   <- [543]
  int$-           %545.0 = CastType           d     dn %543.0
  int-            %545.1 = CallSafeBuiltin    wed   c(1L, %545.0)    <int->
  (cls|spec|blt)  %545.2 = LdFun              !v    dim<-, <0x5614f88a7278>, e0.7
  val?^ | miss    %545.3 = LdVar              eR    f, e0.7
  lgl$#-          %545.4 = IsType                   %545.3 isA real-
  void                    Branch                   %545.4 -> BB549 (if true) | BB550 (if false)
BB546   <- [543]
  fs              %546.0 = FrameState         R     0x5615051e76a0+3368: [%427.1, %427.2, %427.3, <blt c>, 1L, %543.0], env=e0.7
  void                    Deopt              !v    %546.0, Typecheck@0x5614f925d5d0[Type#147], %543.0   !
BB541   <- [241]
  int-            %541.0 = CastType           d     dn %241.5
  int-            %541.1 = CallSafeBuiltin    wed   c(%241.1, %541.0)    <int->
  (cls|spec|blt)  %541.2 = LdFun              !v    attr<-, <0x5614f88aae08>, e0.7
  val?^ | miss    %541.3 = LdVar              eR    r, e0.7
  val?            %541.4 = Force!<value>      !v    %541.3, e0.7   <other>
  val?            %541.5 = NamedCall          !v    %541.2(%541.4, "assign", value=%541.1) e0.7   <other>
  void                    StVar              lW    r, %541.5, e0.7
  val             %541.7 = ChkMissing         e     %541.5
  void                    Visible            v     
  void                    Return             l     %541.5
BB542   <- [241]
  fs              %542.0 = FrameState         R     0x5615051e76a0+9085: [<blt c>, %241.1, %241.5], env=e0.7
  void                    Deopt              !v    %542.0, Typecheck@0x5614f925d5d0[Type#445], %241.5   !
BB251   <- [249]
  val?^ | miss    %251.0 = LdVar              eR    Csparse_vertcat, e0.7
  val?            %251.1 = Force!             !v    %251.0, e0.7   <val?_>
  val?^ | miss    %251.2 = LdVar              eR    r, e0.7
  val?            %251.3 = Force!             !v    %251.2, e0.7   <val?_>
  val?^ | miss    %251.4 = LdVar              eR    rj, e0.7
  val?            %251.5 = Force!             !v    %251.4, e0.7   <val?_>
  val?            %251.6 = CallBuiltin        !v    .Call(%251.1, %251.3, %251.5) e0.7   <val?_>
  val?            %251.7 = %251.6
  goto BB180
BB250   <- [249]
  (cls|spec|blt)  %250.0 = LdFun              !v    .Call, e0.7
  fs              %250.1 = FrameState         R     0x5615051e76a0+7060: [%459.1, %459.2, %427.3, %250.0], env=e0.7
  void                    Deopt              !v    %250.1, DeadCall@0x5614f925d5d0[Call#112], %250.0   !
BB521   <- [177]
  val?^ | miss    %521.0 = LdVar              eR    Csparse_horzcat, e0.7
  val?            %521.1 = Force!<value>      !v    %521.0, e0.7   <vec>
  val?^ | miss    %521.2 = LdVar              eR    r, e0.7
  val?            %521.3 = Force!<value>      !v    %521.2, e0.7   <other>
  val?^ | miss    %521.4 = LdVar              eR    t, e0.7
  lgl$#-          %521.5 = Identical                %521.4, function(x) <(rir::DispatchTable*)0x5614ffe3b5|...
  void                    Branch                   %521.5 -> BB523 (if true) | BB524 (if false)
BB522   <- [177]
  fs              %522.0 = FrameState         R     0x5615051e76a0+6865: [%459.1, %459.2, %427.3, %174.2], env=e0.7
  void                    Deopt              !v    %522.0, DeadBranchReached@0x5614f925d5d0[Test#53], %177.1   !
BB583   <- [571]
  val?+           %583.0 = CastType           d     dn %563.4   <vec+>
  val?            %583.1 = Extract2_1D        wed   %583.0, %571.0, elided   <int>
  void                    StVar              lW    f, %583.1, e0.7
  val?^ | miss    %583.3 = LdVar              eR    is.f, e0.7
  lgl$#-          %583.4 = IsType                   %583.3 isA lgl+
  void                    Branch                   %583.4 -> BB591 (if true) | BB592 (if false)
BB584   <- [571]
  void                    Nop                !     
  val?            %584.1 = %563.4
  dr              %584.2 = Typecheck@0x5614f925d5d0[Type#191]
  goto BB114
BB549   <- [545]
  real-           %549.0 = CastType           d     dn %545.3
  val?            %549.1 = NamedCall          !v    %545.2(%549.0, value=%545.1) e0.7
  void                    StVar              lW    f, %549.1, e0.7
  int$-           %549.3 = Extract1_1D        wed   %545.1, 1, elided   <int$->
  void                    StVar              lW    nr, %549.3, e0.7
  val?^ | miss    %549.5 = LdVar              eR    rownames, e0.7
  lgl$#-          %549.6 = Identical                %549.5, function(x, do.NULL=TRUE, prefix="row") <(rir:|...
  void                    Branch                   %549.6 -> BB551 (if true) | BB552 (if false)
BB550   <- [545]
  fs              %550.0 = FrameState         R     0x5615051e76a0+3395: [%427.1, %427.2, %427.3, %545.1], env=e0.7
  void                    Deopt              !v    %550.0, Typecheck@0x5614f925d5d0[Type#149], %545.3   !
BB180   <- [251, 523]
  val?            %180.0 = Phi                      %523.3:BB523, %251.7:BB251
  val?            %180.1 = %180.0
  void                    StVar              lW    r, %180.1, e0.7
  val?^ | miss    %180.3 = LdVar              eR    c, e0.7
  lgl$#-          %180.4 = Identical                <blt c>, %180.3   <true>
  void                    Branch                   %180.4 -> BB533 (if true) | BB534 (if false)
BB523   <- [521]
  prom-           %523.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p39, e0.7
  val?            %523.1 = StaticCall         !v    t[0x56150567b7f0](%523.0) e0.7   <other>
  val?            %523.2 = CallBuiltin        !v    .Call(%521.1, %521.3, %523.1) e0.7   <other>
  val?            %523.3 = %523.2
  goto BB180
BB524   <- [521]
  fs              %524.0 = FrameState         R     0x5615051e76a0+6963: [%459.1, %459.2, %427.3, <blt .Call>, %521.1, %521.3], env=e0.7
  void                    Deopt              !v    %524.0, CallTarget@0x5614f925d5d0[Call#111], %521.4   !
BB591   <- [583]
  lgl+            %591.0 = CastType           d     dn %583.3
  lgl+            %591.1 = Extract1_1D        wed   %591.0, %571.0, elided   <lgl$+>
  lgl$#-          %591.2 = CheckTrueFalse     we    %591.1
  void                    Branch                   %591.2 -> BB141 (if true) | BB120 (if false)
BB592   <- [583]
  fs              %592.0 = FrameState         R     0x5615051e76a0+4337: [%427.1, %427.2, %110.2], env=e0.7
  void                    Deopt              !v    %592.0, Typecheck@0x5614f925d5d0[Type#195], %583.3   !
BB551   <- [549]
  prom-           %551.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p17 (!refl), e0.7
  val?            %551.1 = StaticCall         !v    rownames[0x5614fbde6d40](%551.0) e0.7   <nil->
  lgl$-           %551.2 = Is                       %551.1, NULL
  lgl$#-          %551.3 = CheckTrueFalse     e     %551.2
  void                    Branch                   %551.3 -> BB257 (if true) | BB104 (if false)
BB552   <- [549]
  fs              %552.0 = FrameState         R     0x5615051e76a0+3565: [%427.1, %427.2, %427.3], env=e0.7
  void                    Deopt              !v    %552.0, CallTarget@0x5614f925d5d0[Call#51], %549.5   !
BB533   <- [180]
  val?^ | miss    %533.0 = LdVar              eR    vNms, e0.7
  lgl$#-          %533.1 = IsType                   %533.0 isA val?~- | miss
  void                    Branch                   %533.1 -> BB539 (if true) | BB540 (if false)
BB534   <- [180]
  void                    Nop                !     
  lgl$#-          %534.1 = %180.4
  dr              %534.2 = DeadBranchReached@0x5614f925d5d0[Test#55]
  goto BB181
BB141   <- [591]
  val?^ | miss    %141.0 = LdVar              eR    factorPattern, e0.7
  lgl$#-          %141.1 = IsType                   %141.0 isA int+
  void                    Branch                   %141.1 -> BB599 (if true) | BB600 (if false)
BB120   <- [591]
  val?^ | miss    %120.0 = LdVar              eR    any, e0.7
  lgl$#-          %120.1 = Identical                <blt any>, %120.0   <@?>
  void                    Branch                   %120.1 -> BB122 (if true) | BB121 (if false)
BB257   <- [551]
  val?^ | miss    %257.0 = LdVar              eR    nr, e0.7
  lgl$#-          %257.1 = IsType                   %257.0 isA int$-
  void                    Branch                   %257.1 -> BB567 (if true) | BB568 (if false)
BB104   <- [551]
  void                    Nop                !     
  goto BB105
BB539   <- [533]
  val?~- | miss   %539.0 = CastType           d     dn %533.0
  val?-           %539.1 = Force!<value>            %539.0,    <str$->
  val?^ | miss    %539.2 = LdVar              eR    dimnames, e0.7
  lgl$#-          %539.3 = Identical                <blt dimnames>, %539.2   <true>
  void                    Branch                   %539.3 -> BB547 (if true) | BB548 (if false)
BB540   <- [533]
  void                    Nop                !     
  val?^ | miss    %540.1 = %533.0
  dr              %540.2 = Typecheck@0x5614f925d5d0[Type#353]
  goto BB181
BB181   <- [534, 540, 548]
  val?^ | miss    %181.0 = Phi                      %534.1:BB534, %540.1:BB540, %548.1:BB548
  val?^ | miss    %181.1 = %181.0
  dr              %181.2 = Phi                      %534.2:BB534, %540.2:BB540, %548.2:BB548
  dr              %181.3 = %181.2
  fs              %181.4 = FrameState         R     0x5615051e76a0+7175: [%459.1, %459.2, %427.3], env=e0.7
  void                    Deopt              !v    %181.4, %181.3, %181.1   !
BB599   <- [141]
  int+            %599.0 = CastType           d     dn %141.0
  int+            %599.1 = Extract1_2D        wed   %599.0, %571.0, missingArg, elided   <int+>
  void                    StVar              lW    fp, %599.1, e0.7
  val?^ | miss    %599.3 = LdVar              eR    attr, e0.7
  lgl$#-          %599.4 = Identical                <blt attr>, %599.3   <true>
  void                    Branch                   %599.4 -> BB601 (if true) | BB602 (if false)
BB600   <- [141]
  fs              %600.0 = FrameState         R     0x5615051e76a0+4404: [%427.1, %427.2, %110.2, %591.2], env=e0.7
  void                    Deopt              !v    %600.0, Typecheck@0x5614f925d5d0[Type#245], %141.0   !
BB122   <- [120]
  val?^ | miss    %122.0 = LdVar              eR    class, e0.7
  lgl$#-          %122.1 = Identical                <blt class>, %122.0   <@?>
  void                    Branch                   %122.1 -> BB124 (if true) | BB123 (if false)
BB121   <- [120]
  (cls|spec|blt)  %121.0 = LdFun              !v    any, e0.7
  fs              %121.1 = FrameState         R     0x5615051e76a0+4437: [%427.1, %427.2, %110.2, %121.0], env=e0.7
  void                    Deopt              !v    %121.1, DeadCall@0x5614f925d5d0[Call#59], %121.0   !
BB567   <- [257]
  int$-           %567.0 = CastType           d     dn %257.0
  lgl$-           %567.1 = Eq                 d     %567.0, 1, elided   <lgl$->
  lgl$#-          %567.2 = CheckTrueFalse     e     %567.1
  void                    Branch                   %567.2 -> BB259 (if true) | BB258 (if false)
BB568   <- [257]
  void                    Nop                !     
  val?^ | miss    %568.1 = %257.0
  dr              %568.2 = Typecheck@0x5614f925d5d0[Type#157]
  goto BB102
BB105   <- [104, 589]
  val?^ | miss    %105.0 = LdVar              eR    f, e0.7
  lgl$#-          %105.1 = IsType                   %105.0 isA real+
  void                    Branch                   %105.1 -> BB577 (if true) | BB578 (if false)
BB547   <- [539]
  val?^ | miss    %547.0 = LdVar              eR    rj, e0.7
  val?            %547.1 = Force!<value>      !v    %547.0, e0.7   <other>
  val?            %547.2 = CallBuiltin        !v    dimnames(%547.1) e0.7   <vec->
  lgl$#-          %547.3 = IsType                   %547.2 isA val+   <true>
  lgl$#-          %547.4 = IsType                   %547.2 isA val?-
  void                    Branch                   %547.3 -> BB557 (if true) | BB558 (if false)
BB548   <- [539]
  void                    Nop                !     
  lgl$#-          %548.1 = %539.3
  dr              %548.2 = DeadBranchReached@0x5614f925d5d0[Test#57]
  goto BB181
BB601   <- [599]
  val             %601.0 = ChkMissing         e     %583.1
  val?            %601.1 = CallBuiltin        !v    attr(%583.1, "contrasts") e0.7   <str$->
  void                    StVar              lW    contr, %601.1, e0.7
  val?^ | miss    %601.3 = LdVar              eR    lapply, e0.7
  lgl$#-          %601.4 = Identical                %601.3, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %601.4 -> BB605 (if true) | BB606 (if false)
BB602   <- [599]
  fs              %602.0 = FrameState         R     0x5615051e76a0+5505: [%427.1, %427.2, %110.2], env=e0.7
  void                    Deopt              !v    %602.0, DeadBranchReached@0x5614f925d5d0[Test#46], %599.4   !
BB124   <- [122]
  val             %124.0 = ChkMissing         e     %583.1
  val?            %124.1 = CallBuiltin        !v    class(%583.1) e0.7   <val?_>
  void                    StVar              lW    cl, %124.1, e0.7
  lgl$#-          %124.3 = IsType                   %124.1 isA val?+
  void                    Branch                   %124.3 -> BB603 (if true) | BB604 (if false)
BB123   <- [122]
  (cls|spec|blt)  %123.0 = LdFun              !v    class, e0.7
  fs              %123.1 = FrameState         R     0x5615051e76a0+4497: [%427.1, %427.2, %110.2, <blt any>, %123.0], env=e0.7
  void                    Deopt              !v    %123.1, DeadCall@0x5614f925d5d0[Call#61], %123.0   !
BB259   <- [567]
  val?^ | miss    %259.0 = LdVar              eR    nam, e0.7
  lgl$#-          %259.1 = IsType                   %259.0 isA val?~- | miss
  void                    Branch                   %259.1 -> BB579 (if true) | BB580 (if false)
BB258   <- [567]
  (cls|spec|blt)  %258.0 = LdFun              !v    paste, e0.7
  fs              %258.1 = FrameState         R     0x5615051e76a0+3655: [%427.1, %427.2, %427.3, %258.0], env=e0.7
  void                    Deopt              !v    %258.1, DeadCall@0x5614f925d5d0[Call#52], %258.0   !
BB102   <- [568, 580, 582, 590]
  val?^ | miss    %102.0 = Phi                      %568.1:BB568, %580.1:BB580, %582.1:BB582, %590.1:BB590
  val?^ | miss    %102.1 = %102.0
  dr              %102.2 = Phi                      %568.2:BB568, %580.2:BB580, %582.2:BB582, %590.2:BB590
  dr              %102.3 = %102.2
  fs              %102.4 = FrameState         R     0x5615051e76a0+3597: [%427.1, %427.2, %427.3, %551.1], env=e0.7
  void                    Deopt              !v    %102.4, %102.3, %102.1   !
BB577   <- [105]
  real+           %577.0 = CastType           d     dn %105.0
  val?^ | miss    %577.1 = LdVar              eR    mf, e0.7
  val?            %577.2 = Force!<value>      !v    %577.1, e0.7   <vec$+>
  lgl$#-          %577.3 = IsType                   %577.2 isA val?+
  val?^ | miss    %577.4 = LdVar              eR    i, e0.7
  lgl$#-          %577.5 = IsType                   %577.4 isA int$-
  void                    Branch                   %577.5 -> BB587 (if true) | BB588 (if false)
BB578   <- [105]
  fs              %578.0 = FrameState         R     0x5615051e76a0+3796: [%427.1, %427.2, %427.3], env=e0.7
  void                    Deopt              !v    %578.0, Typecheck@0x5614f925d5d0[Type#166], %105.0   !
BB557   <- [547]
  void                    Branch                   %547.4 -> BB559 (if true) | BB560 (if false)
BB558   <- [547]
  void                    Nop                !     
  lgl$#-          %558.1 = %547.3
  dr              %558.2 = DeadBranchReached@0x5614f925d5d0[Test#58]
  goto BB183
BB605   <- [601]
  prom-           %605.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p18, e0.7
  cls             %605.1 = MkCls                    model.spmatrix@Prom(25)0, e0.7
  prom-           %605.2 = MkArg                    %605.1, model.spmatrix[0x5614fe14f940]_p25 (!refl), e0.7
  val?            %605.3 = StaticCall         !v    lapply[0x5614fe8386a0](%605.0, %605.2) { 0 1 } e0.7   <vec->
  val?^ | miss    %605.4 = LdVar              eR    f.matr !upd, e0.7
  lgl$#-          %605.5 = IsType                   %605.4 isA val?~+ | miss
  void                    Branch                   %605.5 -> BB607 (if true) | BB608 (if false)
BB606   <- [601]
  fs              %606.0 = FrameState         R     0x5615051e76a0+5621: [%427.1, %427.2, %110.2], env=e0.7
  void                    Deopt              !v    %606.0, CallTarget@0x5614f925d5d0[Call#77], %601.3   !
BB603   <- [124]
  val?+           %603.0 = CastType           d     dn %124.1   <val?_>
  lgl             %603.1 = Eq                 wed   %603.0, "AsIs", elided   <val?_>
  void                    StVar              lW    iA, %603.1, e0.7
  val?            %603.3 = CallBuiltin        !v    any(%603.1) e0.7   <val?_>
  lgl$#-          %603.4 = CheckTrueFalse     we    %603.3
  void                    Branch                   %603.4 -> BB140 (if true) | BB127 (if false)
BB604   <- [124]
  fs              %604.0 = FrameState         R     0x5615051e76a0+4576: [%427.1, %427.2, %110.2, <blt any>, %124.1], env=e0.7
  void                    Deopt              !v    %604.0, Typecheck@0x5614f925d5d0[Type#204], %124.1   !
BB579   <- [259]
  val?~- | miss   %579.0 = CastType           d     dn %259.0
  val?-           %579.1 = Force!<value>            %579.0,    <str$->
  val?^ | miss    %579.2 = LdVar              eR    rownames<-, e0.7
  lgl$#-          %579.3 = Identical                %579.2, function(x, value) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %579.3 -> BB581 (if true) | BB582 (if false)
BB580   <- [259]
  void                    Nop                !     
  val?^ | miss    %580.1 = %259.0
  dr              %580.2 = Typecheck@0x5614f925d5d0[Type#164]
  goto BB102
BB587   <- [577]
  int$-           %587.0 = CastType           d     dn %577.4
  void                    Branch                   %577.3 -> BB595 (if true) | BB596 (if false)
BB588   <- [577]
  void                    Nop                !     
  val?^ | miss    %588.1 = %577.4
  dr              %588.2 = Typecheck@0x5614f925d5d0[Type#168]
  goto BB108
BB559   <- [557]
  val?-           %559.0 = CastType           d     dn %547.2   <vec->
  val?            %559.1 = Extract2_1D        wed   %559.0, 1, elided   <str->
  lgl$#-          %559.2 = IsType                   %559.1 isA val?-
  void                    Branch                   %559.2 -> BB561 (if true) | BB562 (if false)
BB560   <- [557]
  void                    Nop                !     
  val?            %560.1 = %547.2
  dr              %560.2 = Typecheck@0x5614f925d5d0[Type#356]
  goto BB183
BB183   <- [558, 560]
  val?^ | miss    %183.0 = Phi                      %558.1:BB558, %560.1:BB560
  val?^ | miss    %183.1 = %183.0
  dr              %183.2 = Phi                      %558.2:BB558, %560.2:BB560
  dr              %183.3 = %183.2
  fs              %183.4 = FrameState         R     0x5615051e76a0+7345: [%459.1, %459.2, %427.3, <blt c>, %539.1, %547.2], env=e0.7
  void                    Deopt              !v    %183.4, %183.3, %183.1   !
BB607   <- [605]
  val?~+ | miss   %607.0 = CastType           d     dn %605.4
  val?+           %607.1 = Force!<value>            %607.0,    <vec+>
  val?^ | miss    %607.2 = LdVar              eR    i.f, e0.7
  lgl$#-          %607.3 = IsType                   %607.2 isA real$-
  void                    Branch                   %607.3 -> BB609 (if true) | BB610 (if false)
BB608   <- [605]
  void                    Nop                !     
  val?^ | miss    %608.1 = %605.4
  dr              %608.2 = Typecheck@0x5614f925d5d0[Type#260]
  goto BB146
BB140   <- [603]
  (cls|spec|blt)  %140.0 = LdFun              !v    <-, e0.7
  fs              %140.1 = FrameState         R     0x5615051e76a0+4638: [%427.1, %427.2, %110.2, %140.0], env=e0.7
  void                    Deopt              !v    %140.1, DeadCall@0x5614f925d5d0[Call#62], %140.0   !
BB127   <- [603]
  val?^ | miss    %127.0 = LdVar              eR    is.matrix, e0.7
  lgl$#-          %127.1 = Identical                <blt is.matrix>, %127.0   <@?>
  void                    Branch                   %127.1 -> BB129 (if true) | BB128 (if false)
BB581   <- [579]
  val?^ | miss    %581.0 = LdVar              eR    f, e0.7
  lgl$#-          %581.1 = IsType                   %581.0 isA real_
  void                    Branch                   %581.1 -> BB589 (if true) | BB590 (if false)
BB582   <- [579]
  void                    Nop                !     
  val?^ | miss    %582.1 = %579.2
  dr              %582.2 = CallTarget@0x5614f925d5d0[Call#54]
  goto BB102
BB595   <- [587]
  val?+           %595.0 = CastType           d     dn %577.2   <vec$+>
  val?+           %595.1 = Subassign2_1D      wed   %577.0, %595.0, %587.0, elided
  void                    StVar              lW    mf, %595.1, e0.7
  int$-           %595.3 = %427.3
  goto BB110
BB596   <- [587]
  void                    Nop                !     
  val?            %596.1 = %577.2
  dr              %596.2 = Typecheck@0x5614f925d5d0[Type#167]
  goto BB108
BB108   <- [588, 596]
  val?^ | miss    %108.0 = Phi                      %588.1:BB588, %596.1:BB596
  val?^ | miss    %108.1 = %108.0
  dr              %108.2 = Phi                      %588.2:BB588, %596.2:BB596
  dr              %108.3 = %108.2
  fs              %108.4 = FrameState         R     0x5615051e76a0+3819: [%427.1, %427.2, %427.3, %577.0, %577.2], env=e0.7
  void                    Deopt              !v    %108.4, %108.3, %108.1   !
BB561   <- [559]
  val?-           %561.0 = CastType           d     dn %559.1   <str->
  val+            %561.1 = CallSafeBuiltin    wed   c(%539.1, %561.0)    <str->
  void                    StVar              lW    vNms, %561.1, e0.7
  val?^ | miss    %561.3 = LdVar              eR    nrow, e0.7
  lgl$#-          %561.4 = Identical                %561.3, function(x) <(rir::DispatchTable*)0x5614faf139|...
  void                    Branch                   %561.4 -> BB565 (if true) | BB566 (if false)
BB562   <- [559]
  fs              %562.0 = FrameState         R     0x5615051e76a0+7388: [%459.1, %459.2, %427.3, <blt c>, %539.1, %559.1], env=e0.7
  void                    Deopt              !v    %562.0, Typecheck@0x5614f925d5d0[Type#357], %559.1   !
BB609   <- [607]
  real$-          %609.0 = CastType           d     dn %607.2
  real$-          %609.1 = Add                d     %609.0, 1, elided   <real$->
  void                    StVar              lW    i.f, %609.1, e0.7
  lgl$#-          %609.3 = IsType                   %605.3 isA val?-
  void                    Branch                   %609.3 -> BB617 (if true) | BB618 (if false)
BB610   <- [607]
  void                    Nop                !     
  val?^ | miss    %610.1 = %607.2
  dr              %610.2 = Typecheck@0x5614f925d5d0[Type#261]
  goto BB146
BB146   <- [608, 610]
  val?^ | miss    %146.0 = Phi                      %608.1:BB608, %610.1:BB610
  val?^ | miss    %146.1 = %146.0
  dr              %146.2 = Phi                      %608.2:BB608, %610.2:BB610
  dr              %146.3 = %146.2
  fs              %146.4 = FrameState         R     0x5615051e76a0+5658: [%427.1, %427.2, %110.2, %605.3], env=e0.7
  void                    Deopt              !v    %146.4, %146.3, %146.1   !
BB129   <- [127]
  val?^ | miss    %129.0 = LdVar              eR    f, e0.7
  val?            %129.1 = Force!             !v    %129.0, e0.7   <val?_>
  lgl$#-          %129.2 = IsType                   %129.1 isA val?+
  void                    Branch                   %129.2 -> BB611 (if true) | BB612 (if false)
BB128   <- [127]
  (cls|spec|blt)  %128.0 = LdFun              !v    is.matrix, e0.7
  fs              %128.1 = FrameState         R     0x5615051e76a0+4699: [%427.1, %427.2, %110.2, %128.0], env=e0.7
  void                    Deopt              !v    %128.1, DeadCall@0x5614f925d5d0[Call#65], %128.0   !
BB589   <- [581]
  real_           %589.0 = CastType           d     dn %581.0
  val?            %589.1 = StaticCall         !v    rownames<-[0x5614f9272160](%589.0, %579.1) { 0 1n } e0.7
  void                    StVar              lW    f, %589.1, e0.7
  goto BB105
BB590   <- [581]
  void                    Nop                !     
  val?^ | miss    %590.1 = %581.0
  dr              %590.2 = Typecheck@0x5614f925d5d0[Type#165]
  goto BB102
BB565   <- [561]
  prom-           %565.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p40, e0.7
  ct              %565.1 = PushContext        lCL   %565.0, nrow(rj), function(x) <(rir::DispatchTable*)0x5614faf139|..., e0.7
  val?^           %565.2 = CastType                 up %565.0
  env             e565.3 = MkEnv              l     x=%565.2, parent=R_BaseNamespace, context 1
  val?            %565.4 = Force!<lazy>       !vL   %565.2, e565.3   <val?>
  val?            %565.5 = CallBuiltin        !v    dim(%565.4) e565.3   <int->
  lgl$#-          %565.6 = IsType                   %565.5 isA val+   <true>
  lgl$#-          %565.7 = IsType                   %565.5 isA int-
  void                    Branch                   %565.6 -> BB573 (if true) | BB574 (if false)
BB566   <- [561]
  fs              %566.0 = FrameState         R     0x5615051e76a0+7425: [%459.1, %459.2, %427.3], env=e0.7
  void                    Deopt              !v    %566.0, CallTarget@0x5614f925d5d0[Call#116], %561.3   !
BB617   <- [609]
  val?-           %617.0 = CastType           d     dn %605.3   <vec->
  val?+           %617.1 = Subassign2_1D      wed   %617.0, %607.1, %609.1, elided
  void                    StVar              lW    f.matr, %617.1, e0.7
  int$-           %617.3 = %110.2
  goto BB110
BB618   <- [609]
  fs              %618.0 = FrameState         R     0x5615051e76a0+5714: [%427.1, %427.2, %110.2, %605.3, %607.1, %609.1], env=e0.7
  void                    Deopt              !v    %618.0, Typecheck@0x5614f925d5d0[Type#259], %605.3   !
BB611   <- [129]
  val?+           %611.0 = CastType           d     dn %129.1   <val?_>
  lgl$#-          %611.1 = CallSafeBuiltin    wed   is.matrix(%611.0)    <val?_>
  void                    Branch                   %611.1 -> BB139 (if true) | BB132 (if false)
BB612   <- [129]
  fs              %612.0 = FrameState         R     0x5615051e76a0+4740: [%427.1, %427.2, %110.2, <blt is.matrix>, %129.1], env=e0.7
  void                    Deopt              !v    %612.0, Typecheck@0x5614f925d5d0[Type#217], %129.1   !
BB573   <- [565]
  void                    Branch                   %565.7 -> BB575 (if true) | BB576 (if false)
BB574   <- [565]
  void                    Nop                !     
  lgl$#-          %574.1 = %565.6
  dr              %574.2 = DeadBranchReached@0x5614fbc29098[Test#1]
  goto BB189
BB139   <- [611]
  (cls|spec|blt)  %139.0 = LdFun              !v    nrow, e0.7
  fs              %139.1 = FrameState         R     0x5615051e76a0+5091: [%427.1, %427.2, %110.2, %139.0], env=e0.7
  void                    Deopt              !v    %139.1, DeadCall@0x5614f925d5d0[Call#70], %139.0   !
BB132   <- [611]
  val?^ | miss    %132.0 = LdVar              eR    c, e0.7
  lgl$#-          %132.1 = Identical                <blt c>, %132.0   <@?>
  void                    Branch                   %132.1 -> BB134 (if true) | BB133 (if false)
BB575   <- [573]
  int-            %575.0 = CastType           d     dn %565.5
  int$-           %575.1 = Extract1_1D        wed   %575.0, 1L, elided   <int$->
  val?            %575.2 = PopContext         C     %575.1, %565.1   <int$->
  lgl$#-          %575.3 = IsType                   %575.2 isA int$-
  void                    Branch                   %575.3 -> BB585 (if true) | BB586 (if false)
BB576   <- [573]
  void                    Nop                !     
  val?            %576.1 = %565.5
  dr              %576.2 = Typecheck@0x5614fbc29098[Type#2]
  goto BB189
BB189   <- [574, 576]
  val?^ | miss    %189.0 = Phi                      %574.1:BB574, %576.1:BB576
  val?^ | miss    %189.1 = %189.0
  dr              %189.2 = Phi                      %574.2:BB574, %576.2:BB576
  dr              %189.3 = %189.2
  fs              %189.4 = FrameState         R     0x5615051e76a0+7457: [%459.1, %459.2, %427.3], env=e0.7
  fs              %189.5 = FrameState         R     0x5614fa7980b0+91: [%565.5], env=e565.3, next=%189.4
  void                    Deopt              !v    %189.5, %189.3, %189.1   !
BB134   <- [132]
  val?^ | miss    %134.0 = LdVar              eR    length, e0.7
  lgl$#-          %134.1 = Identical                <blt length>, %134.0   <@?>
  void                    Branch                   %134.1 -> BB136 (if true) | BB135 (if false)
BB133   <- [132]
  (cls|spec|blt)  %133.0 = LdFun              !v    c, e0.7
  fs              %133.1 = FrameState         R     0x5615051e76a0+4801: [%427.1, %427.2, %110.2, %133.0], env=e0.7
  void                    Deopt              !v    %133.1, DeadCall@0x5614f925d5d0[Call#66], %133.0   !
BB585   <- [575]
  int$-           %585.0 = CastType           d     dn %575.2
  val?^ | miss    %585.1 = LdVar              eR    counts !upd, e0.7
  lgl$#-          %585.2 = IsType                   %585.1 isA int-
  void                    Branch                   %585.2 -> BB593 (if true) | BB594 (if false)
BB586   <- [575]
  void                    Nop                !     
  val?            %586.1 = %575.2
  dr              %586.2 = Typecheck@0x5614f925d5d0[Type#360]
  goto BB191
BB136   <- [134]
  val?^ | miss    %136.0 = LdVar              eR    f, e0.7
  val?            %136.1 = Force!             !v    %136.0, e0.7   <val?_>
  lgl$#-          %136.2 = IsType                   %136.1 isA val?+
  void                    Branch                   %136.2 -> BB619 (if true) | BB620 (if false)
BB135   <- [134]
  (cls|spec|blt)  %135.0 = LdFun              !v    length, e0.7
  fs              %135.1 = FrameState         R     0x5615051e76a0+4872: [%427.1, %427.2, %110.2, <blt c>, 1L, %135.0], env=e0.7
  void                    Deopt              !v    %135.1, DeadCall@0x5614f925d5d0[Call#68], %135.0   !
BB593   <- [585]
  int-            %593.0 = CastType           d     dn %585.1
  val?^ | miss    %593.1 = LdVar              eR    j, e0.7
  lgl$#-          %593.2 = IsType                   %593.1 isA int$-
  void                    Branch                   %593.2 -> BB597 (if true) | BB598 (if false)
BB594   <- [585]
  void                    Nop                !     
  val?^ | miss    %594.1 = %585.1
  dr              %594.2 = Typecheck@0x5614f925d5d0[Type#361]
  goto BB191
BB191   <- [586, 594, 598]
  val?^ | miss    %191.0 = Phi                      %586.1:BB586, %594.1:BB594, %598.1:BB598
  val?^ | miss    %191.1 = %191.0
  dr              %191.2 = Phi                      %586.2:BB586, %594.2:BB594, %598.2:BB598
  dr              %191.3 = %191.2
  fs              %191.4 = FrameState         R     0x5615051e76a0+7457: [%459.1, %459.2, %427.3, %575.2], env=e0.7
  void                    Deopt              !v    %191.4, %191.3, %191.1   !
BB619   <- [136]
  val?+           %619.0 = CastType           d     dn %136.1   <val?_>
  (int|real)$-    %619.1 = CallSafeBuiltin    wed   length(%619.0)    <val?_>
  (int|real)-     %619.2 = CallSafeBuiltin    wed   c(1L, %619.1)    <val?_>
  (cls|spec|blt)  %619.3 = LdFun              !v    dim<-, e0.7
  fs              %619.4 = FrameState         R     0x5615051e76a0+4967: [%427.1, %427.2, %110.2, %619.2, %619.3], env=e0.7
  void                    Deopt              !v    %619.4, DeadCall@0x5614f925d5d0[Call#69], %619.3   !
BB620   <- [136]
  fs              %620.0 = FrameState         R     0x5615051e76a0+4913: [%427.1, %427.2, %110.2, <blt c>, 1L, <blt length>, %136.1], env=e0.7
  void                    Deopt              !v    %620.0, Typecheck@0x5614f925d5d0[Type#222], %136.1   !
BB597   <- [593]
  int$-           %597.0 = CastType           d     dn %593.1
  int-            %597.1 = Subassign1_1D      wed   %585.0, %593.0, %597.0, elided
  void                    StVar              lW    counts, %597.1, e0.7
  int$-           %597.3 = %427.3
  goto BB193
BB598   <- [593]
  void                    Nop                !     
  val?^ | miss    %598.1 = %593.1
  dr              %598.2 = Typecheck@0x5614f925d5d0[Type#362]
  goto BB191
BB193   <- [597, 655]
  int$-           %193.0 = Phi                      %597.3:BB597, %655.3:BB655
  int$-           %193.1 = %193.0
  int$-           %193.2 = Inc                      %193.1
  lgl$-           %193.3 = Lt                 d     %459.2, %193.2, elided
  lgl$#-          %193.4 = Identical                %193.3, true
  void                    Branch                   %193.4 -> BB228 (if true) | BB194 (if false)
BB228   <- [193]
  void                    Nop                !     
  goto BB229
BB194   <- [193]
  val?            %194.0 = Extract2_1D        wed   %459.1, %193.2, elided
  void                    StVar              lW    j, %194.0, e0.7
  val?^ | miss    %194.2 = LdVar              eR    Names, e0.7
  lgl$#-          %194.3 = IsType                   %194.2 isA val?~- | miss
  void                    Branch                   %194.3 -> BB613 (if true) | BB614 (if false)
BB613   <- [194]
  val?~- | miss   %613.0 = CastType           d     dn %194.2
  val?-           %613.1 = Force!<value>            %613.0,    <str->
  lgl$#-          %613.2 = IsType                   %613.1 isA val+   <true>
  void                    Branch                   %613.2 -> BB615 (if true) | BB616 (if false)
BB614   <- [194]
  void                    Nop                !     
  val?^ | miss    %614.1 = %194.2
  dr              %614.2 = Typecheck@0x5614f925d5d0[Type#363]
  goto BB195
BB615   <- [613]
  val             %615.0 = ChkMissing         e     %194.0
  lgl$#-          %615.1 = IsType                   %615.0 isA int$-
  void                    Branch                   %615.1 -> BB621 (if true) | BB622 (if false)
BB616   <- [613]
  void                    Nop                !     
  lgl$#-          %616.1 = %613.2
  dr              %616.2 = DeadBranchReached@0x5614f925d5d0[Test#59]
  goto BB195
BB195   <- [614, 616, 622]
  val?^ | miss    %195.0 = Phi                      %614.1:BB614, %616.1:BB616, %622.1:BB622
  val?^ | miss    %195.1 = %195.0
  dr              %195.2 = Phi                      %614.2:BB614, %616.2:BB616, %622.2:BB622
  dr              %195.3 = %195.2
  fs              %195.4 = FrameState         R     0x5615051e76a0+7529: [%459.1, %459.2, %193.2], env=e0.7
  void                    Deopt              !v    %195.4, %195.3, %195.1   !
BB621   <- [615]
  int$-           %621.0 = CastType           d     dn %615.0
  val?            %621.1 = Extract1_1D        wed   %613.1, %621.0, elided   <str$->
  void                    StVar              lW    nm, %621.1, e0.7
  val?^ | miss    %621.3 = LdVar              eR    verbose, e0.7
  val?            %621.4 = Force!<wrapped>    !v    %621.3, e0.7   <lgl$->
  lgl$#-          %621.5 = CheckTrueFalse     we    %621.4
  void                    Branch                   %621.5 -> BB227 (if true) | BB199 (if false)
BB622   <- [615]
  void                    Nop                !     
  val             %622.1 = %615.0
  dr              %622.2 = Typecheck@0x5614f925d5d0[Type#365]
  goto BB195
BB227   <- [621]
  (cls|spec|blt)  %227.0 = LdFun              !v    cat, e0.7
  fs              %227.1 = FrameState         R     0x5615051e76a0+7634: [%459.1, %459.2, %193.2, %227.0], env=e0.7
  void                    Deopt              !v    %227.1, DeadCall@0x5614f925d5d0[Call#117], %227.0   !
BB199   <- [621]
  val?^ | miss    %199.0 = LdVar              eR    strsplit, e0.7
  lgl$#-          %199.1 = Identical                %199.0, function(x, split, fixed=FALSE, perl=FALSE, us|...
  void                    Branch                   %199.1 -> BB623 (if true) | BB624 (if false)
BB623   <- [199]
  val?^ | miss    %623.0 = LdVar              eR    nm, e0.7
  val?            %623.1 = Force!<value>      !v    %623.0, e0.7   <str$->
  vec+            %623.2 = CallSafeBuiltin    wed   strsplit(%623.1, ":", true, false, false)    <vec$->
  lgl$#-          %623.3 = IsType                   %623.2 isA val?-
  void                    Branch                   %623.3 -> BB625 (if true) | BB626 (if false)
BB624   <- [199]
  fs              %624.0 = FrameState         R     0x5615051e76a0+7619: [%459.1, %459.2, %193.2, %621.5], env=e0.7
  void                    Deopt              !v    %624.0, CallTarget@0x5614f925d5d0[Call#119], %199.0   !
BB625   <- [623]
  vec-            %625.0 = CastType           d     dn %623.2   <vec$->
  val             %625.1 = Extract2_1D        wed   %625.0, 1, elided   <str$->
  void                    StVar              lW    nmSplits, %625.1, e0.7
  val?^ | miss    %625.3 = LdVar              eR    sparseInt.r, e0.7
  lgl$#-          %625.4 = Identical                %625.3, function(rList, do.names=TRUE, forceSparse=FAL|...
  void                    Branch                   %625.4 -> BB627 (if true) | BB628 (if false)
BB626   <- [623]
  prom-           %626.0 = MkArg                    %623.1, model.spmatrix[0x5614fe14f940]_p41 (!refl), e0.7
  val?~           %626.1 = CastType                 up %626.0
  fs              %626.2 = FrameState         R     0x5615051e76a0+7716: [%459.1, %459.2, %193.2], env=e0.7
  env             e626.3 = (MkEnv)            l     useBytes(miss)=false, perl(miss)=false, fixed=true, split=":", x=%626.1, parent=R_BaseNamespace, context 0
  fs              %626.4 = FrameState         R     0x5614fa98d300+165: [%623.2], env=e626.3, next=%626.2
  void                    Deopt              !v    %626.4, Typecheck@0x5614f925d5d0[Type#375], %623.2   !
BB627   <- [625]
  prom-           %627.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p42, e0.7
  prom-           %627.1 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p45, e0.7
  val?            %627.2 = StaticCall         !v    sparseInt.r[0x5614fc6782c0](%627.0, true, true, %627.1) { 0 1n 2n 3n } e0.7   <other>
  void                    StVar              lW    rj, %627.2, e0.7
  val?^ | miss    %627.4 = LdVar              eR    verbose, e0.7
  val?            %627.5 = Force!<wrapped>    !v    %627.4, e0.7   <lgl$->
  lgl$#-          %627.6 = CheckTrueFalse     we    %627.5
  void                    Branch                   %627.6 -> BB226 (if true) | BB204 (if false)
BB628   <- [625]
  fs              %628.0 = FrameState         R     0x5615051e76a0+7774: [%459.1, %459.2, %193.2], env=e0.7
  void                    Deopt              !v    %628.0, CallTarget@0x5614f925d5d0[Call#120], %625.3   !
BB226   <- [627]
  (cls|spec|blt)  %226.0 = LdFun              !v    cat, e0.7
  fs              %226.1 = FrameState         R     0x5615051e76a0+7881: [%459.1, %459.2, %193.2, %226.0], env=e0.7
  void                    Deopt              !v    %226.1, DeadCall@0x5614f925d5d0[Call#122], %226.0   !
BB204   <- [627]
  val?^ | miss    %204.0 = LdVar              eR    transpose, e0.7
  val?            %204.1 = Force!<wrapped>    !v    %204.0, e0.7   <lgl$->
  lgl$#-          %204.2 = CheckTrueFalse     we    %204.1
  void                    Branch                   %204.2 -> BB223 (if true) | BB207 (if false)
BB223   <- [204]
  val?^ | miss    %223.0 = LdVar              eR    .Call, e0.7
  lgl$#-          %223.1 = Identical                <blt .Call>, %223.0   <@?>
  void                    Branch                   %223.1 -> BB225 (if true) | BB224 (if false)
BB207   <- [204]
  val?^ | miss    %207.0 = LdVar              eR    .Call, e0.7
  lgl$#-          %207.1 = Identical                <blt .Call>, %207.0   <true>
  void                    Branch                   %207.1 -> BB629 (if true) | BB630 (if false)
BB225   <- [223]
  val?^ | miss    %225.0 = LdVar              eR    Csparse_vertcat, e0.7
  val?            %225.1 = Force!             !v    %225.0, e0.7   <val?_>
  val?^ | miss    %225.2 = LdVar              eR    r, e0.7
  val?            %225.3 = Force!             !v    %225.2, e0.7   <val?_>
  val?^ | miss    %225.4 = LdVar              eR    rj, e0.7
  val?            %225.5 = Force!             !v    %225.4, e0.7   <val?_>
  val?            %225.6 = CallBuiltin        !v    .Call(%225.1, %225.3, %225.5) e0.7   <val?_>
  val?            %225.7 = %225.6
  goto BB210
BB224   <- [223]
  (cls|spec|blt)  %224.0 = LdFun              !v    .Call, e0.7
  fs              %224.1 = FrameState         R     0x5615051e76a0+8119: [%459.1, %459.2, %193.2, %224.0], env=e0.7
  void                    Deopt              !v    %224.1, DeadCall@0x5614f925d5d0[Call#131], %224.0   !
BB629   <- [207]
  val?^ | miss    %629.0 = LdVar              eR    Csparse_horzcat, e0.7
  val?            %629.1 = Force!<value>      !v    %629.0, e0.7   <vec>
  val?^ | miss    %629.2 = LdVar              eR    r, e0.7
  val?            %629.3 = Force!<value>      !v    %629.2, e0.7   <other>
  val?^ | miss    %629.4 = LdVar              eR    t, e0.7
  lgl$#-          %629.5 = Identical                %629.4, function(x) <(rir::DispatchTable*)0x5614ffe3b5|...
  void                    Branch                   %629.5 -> BB637 (if true) | BB638 (if false)
BB630   <- [207]
  fs              %630.0 = FrameState         R     0x5615051e76a0+7924: [%459.1, %459.2, %193.2, %204.2], env=e0.7
  void                    Deopt              !v    %630.0, DeadBranchReached@0x5614f925d5d0[Test#62], %207.1   !
BB210   <- [225, 637]
  val?            %210.0 = Phi                      %637.3:BB637, %225.7:BB225
  val?            %210.1 = %210.0
  void                    StVar              lW    r, %210.1, e0.7
  val?^ | miss    %210.3 = LdVar              eR    c, e0.7
  lgl$#-          %210.4 = Identical                <blt c>, %210.3   <true>
  void                    Branch                   %210.4 -> BB631 (if true) | BB632 (if false)
BB637   <- [629]
  prom-           %637.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p46, e0.7
  val?            %637.1 = StaticCall         !v    t[0x56150567b7f0](%637.0) e0.7   <other>
  val?            %637.2 = CallBuiltin        !v    .Call(%629.1, %629.3, %637.1) e0.7   <other>
  val?            %637.3 = %637.2
  goto BB210
BB638   <- [629]
  fs              %638.0 = FrameState         R     0x5615051e76a0+8022: [%459.1, %459.2, %193.2, <blt .Call>, %629.1, %629.3], env=e0.7
  void                    Deopt              !v    %638.0, CallTarget@0x5614f925d5d0[Call#130], %629.4   !
BB631   <- [210]
  val?^ | miss    %631.0 = LdVar              eR    vNms, e0.7
  lgl$#-          %631.1 = IsType                   %631.0 isA val?~- | miss
  void                    Branch                   %631.1 -> BB633 (if true) | BB634 (if false)
BB632   <- [210]
  void                    Nop                !     
  lgl$#-          %632.1 = %210.4
  dr              %632.2 = DeadBranchReached@0x5614f925d5d0[Test#64]
  goto BB211
BB633   <- [631]
  val?~- | miss   %633.0 = CastType           d     dn %631.0
  val?-           %633.1 = Force!<value>            %633.0,    <str->
  val?^ | miss    %633.2 = LdVar              eR    dimnames, e0.7
  lgl$#-          %633.3 = Identical                <blt dimnames>, %633.2   <true>
  void                    Branch                   %633.3 -> BB635 (if true) | BB636 (if false)
BB634   <- [631]
  void                    Nop                !     
  val?^ | miss    %634.1 = %631.0
  dr              %634.2 = Typecheck@0x5614f925d5d0[Type#414]
  goto BB211
BB211   <- [632, 634, 636]
  val?^ | miss    %211.0 = Phi                      %632.1:BB632, %634.1:BB634, %636.1:BB636
  val?^ | miss    %211.1 = %211.0
  dr              %211.2 = Phi                      %632.2:BB632, %634.2:BB634, %636.2:BB636
  dr              %211.3 = %211.2
  fs              %211.4 = FrameState         R     0x5615051e76a0+8234: [%459.1, %459.2, %193.2], env=e0.7
  void                    Deopt              !v    %211.4, %211.3, %211.1   !
BB635   <- [633]
  val?^ | miss    %635.0 = LdVar              eR    rj, e0.7
  val?            %635.1 = Force!<value>      !v    %635.0, e0.7   <other>
  val?            %635.2 = CallBuiltin        !v    dimnames(%635.1) e0.7   <vec->
  lgl$#-          %635.3 = IsType                   %635.2 isA val+   <true>
  lgl$#-          %635.4 = IsType                   %635.2 isA val?-
  void                    Branch                   %635.3 -> BB639 (if true) | BB640 (if false)
BB636   <- [633]
  void                    Nop                !     
  lgl$#-          %636.1 = %633.3
  dr              %636.2 = DeadBranchReached@0x5614f925d5d0[Test#66]
  goto BB211
BB639   <- [635]
  void                    Branch                   %635.4 -> BB641 (if true) | BB642 (if false)
BB640   <- [635]
  void                    Nop                !     
  lgl$#-          %640.1 = %635.3
  dr              %640.2 = DeadBranchReached@0x5614f925d5d0[Test#67]
  goto BB213
BB641   <- [639]
  val?-           %641.0 = CastType           d     dn %635.2   <vec->
  val?            %641.1 = Extract2_1D        wed   %641.0, 1, elided   <str->
  lgl$#-          %641.2 = IsType                   %641.1 isA val?-
  void                    Branch                   %641.2 -> BB643 (if true) | BB644 (if false)
BB642   <- [639]
  void                    Nop                !     
  val?            %642.1 = %635.2
  dr              %642.2 = Typecheck@0x5614f925d5d0[Type#417]
  goto BB213
BB213   <- [640, 642]
  val?^ | miss    %213.0 = Phi                      %640.1:BB640, %642.1:BB642
  val?^ | miss    %213.1 = %213.0
  dr              %213.2 = Phi                      %640.2:BB640, %642.2:BB642
  dr              %213.3 = %213.2
  fs              %213.4 = FrameState         R     0x5615051e76a0+8404: [%459.1, %459.2, %193.2, <blt c>, %633.1, %635.2], env=e0.7
  void                    Deopt              !v    %213.4, %213.3, %213.1   !
BB643   <- [641]
  val?-           %643.0 = CastType           d     dn %641.1   <str->
  val+            %643.1 = CallSafeBuiltin    wed   c(%633.1, %643.0)    <str->
  void                    StVar              lW    vNms, %643.1, e0.7
  val?^ | miss    %643.3 = LdVar              eR    nrow, e0.7
  lgl$#-          %643.4 = Identical                %643.3, function(x) <(rir::DispatchTable*)0x5614faf139|...
  void                    Branch                   %643.4 -> BB645 (if true) | BB646 (if false)
BB644   <- [641]
  fs              %644.0 = FrameState         R     0x5615051e76a0+8447: [%459.1, %459.2, %193.2, <blt c>, %633.1, %641.1], env=e0.7
  void                    Deopt              !v    %644.0, Typecheck@0x5614f925d5d0[Type#418], %641.1   !
BB645   <- [643]
  prom-           %645.0 = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p47, e0.7
  ct              %645.1 = PushContext        lCL   %645.0, nrow(rj), function(x) <(rir::DispatchTable*)0x5614faf139|..., e0.7
  val?^           %645.2 = CastType                 up %645.0
  env             e645.3 = MkEnv              l     x=%645.2, parent=R_BaseNamespace, context 1
  val?            %645.4 = Force!<lazy>       !v    %645.2, e645.3   <val?>
  val?            %645.5 = CallBuiltin        !v    dim(%645.4) e645.3   <int->
  lgl$#-          %645.6 = IsType                   %645.5 isA val+   <true>
  lgl$#-          %645.7 = IsType                   %645.5 isA int-
  void                    Branch                   %645.6 -> BB647 (if true) | BB648 (if false)
BB646   <- [643]
  fs              %646.0 = FrameState         R     0x5615051e76a0+8484: [%459.1, %459.2, %193.2], env=e0.7
  void                    Deopt              !v    %646.0, CallTarget@0x5614f925d5d0[Call#135], %643.3   !
BB647   <- [645]
  void                    Branch                   %645.7 -> BB649 (if true) | BB650 (if false)
BB648   <- [645]
  void                    Nop                !     
  lgl$#-          %648.1 = %645.6
  dr              %648.2 = DeadBranchReached@0x5614fbc29098[Test#1]
  goto BB219
BB649   <- [647]
  int-            %649.0 = CastType           d     dn %645.5
  int$-           %649.1 = Extract1_1D        wed   %649.0, 1L, elided   <int$->
  val?            %649.2 = PopContext         C     %649.1, %645.1   <int$->
  lgl$#-          %649.3 = IsType                   %649.2 isA int$-
  void                    Branch                   %649.3 -> BB651 (if true) | BB652 (if false)
BB650   <- [647]
  void                    Nop                !     
  val?            %650.1 = %645.5
  dr              %650.2 = Typecheck@0x5614fbc29098[Type#2]
  goto BB219
BB219   <- [648, 650]
  val?^ | miss    %219.0 = Phi                      %648.1:BB648, %650.1:BB650
  val?^ | miss    %219.1 = %219.0
  dr              %219.2 = Phi                      %648.2:BB648, %650.2:BB650
  dr              %219.3 = %219.2
  fs              %219.4 = FrameState         R     0x5615051e76a0+8516: [%459.1, %459.2, %193.2], env=e0.7
  fs              %219.5 = FrameState         R     0x5614fa7980b0+91: [%645.5], env=e645.3, next=%219.4
  void                    Deopt              !v    %219.5, %219.3, %219.1   !
BB651   <- [649]
  int$-           %651.0 = CastType           d     dn %649.2
  val?^ | miss    %651.1 = LdVar              eR    counts !upd, e0.7
  lgl$#-          %651.2 = IsType                   %651.1 isA int-
  void                    Branch                   %651.2 -> BB653 (if true) | BB654 (if false)
BB652   <- [649]
  void                    Nop                !     
  val?            %652.1 = %649.2
  dr              %652.2 = Typecheck@0x5614f925d5d0[Type#421]
  goto BB221
BB653   <- [651]
  int-            %653.0 = CastType           d     dn %651.1
  val?^ | miss    %653.1 = LdVar              eR    j, e0.7
  lgl$#-          %653.2 = IsType                   %653.1 isA int$-
  void                    Branch                   %653.2 -> BB655 (if true) | BB656 (if false)
BB654   <- [651]
  void                    Nop                !     
  val?^ | miss    %654.1 = %651.1
  dr              %654.2 = Typecheck@0x5614f925d5d0[Type#422]
  goto BB221
BB221   <- [652, 654, 656]
  val?^ | miss    %221.0 = Phi                      %652.1:BB652, %654.1:BB654, %656.1:BB656
  val?^ | miss    %221.1 = %221.0
  dr              %221.2 = Phi                      %652.2:BB652, %654.2:BB654, %656.2:BB656
  dr              %221.3 = %221.2
  fs              %221.4 = FrameState         R     0x5615051e76a0+8516: [%459.1, %459.2, %193.2, %649.2], env=e0.7
  void                    Deopt              !v    %221.4, %221.3, %221.1   !
BB655   <- [653]
  int$-           %655.0 = CastType           d     dn %653.1
  int-            %655.1 = Subassign1_1D      wed   %651.0, %653.0, %655.0, elided
  void                    StVar              lW    counts, %655.1, e0.7
  int$-           %655.3 = %193.2
  goto BB193
BB656   <- [653]
  void                    Nop                !     
  val?^ | miss    %656.1 = %653.1
  dr              %656.2 = Typecheck@0x5614f925d5d0[Type#423]
  goto BB221
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is.data.frame, <0x5615049d9858>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x5614f88a7a90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p5, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  void                    StVar              lW    m, %0.3, e0.0
  val?^ | miss    %0.5  = LdVar              eR    nVar, e0.0
  void                    Visible            v     
  val?            %0.7  = Force<value>       !     %0.5, e0.0   <int$->
  val?            %0.8  = Gte                !     %0.3, %0.7, e0.0   <lgl$->
  void                    Return             l     %0.8
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  (cls|spec|blt)  %0.4  = LdFun              !     names, <0x5614f88a7470>, e0.0
  prom-           %0.5  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p7, e0.0
  val?            %0.6  = Call               !     %0.4(%0.5) e0.0   <str->
  val?            %0.7  = Eq                 !     %0.3, %0.6, e0.0   <lgl->
  void                    Return             l     %0.7
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    model.spmatrix@Prom(9)0, e0.0
  void                    Return             l     %0.1
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    is.f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vector, <0x5614fa773f48>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p12, e0.0
  val?            %0.3  = NamedCall          !     %0.1("list", length=%0.2) e0.0   <vec->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, <0x5614f88a7a90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    indF, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnames, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    indF, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int+>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p15, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    indF, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     fac2Sparse, <0x561500e23e18>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p19, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p20, e0.0
  prom-           %0.4  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p21, e0.0
  prom-           %0.5  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p24, e0.0
  val?            %0.6  = NamedCall          !     %0.1(%0.2, to="d", drop.unused.levels=%0.3, factorPatt12=%0.4, contrasts.arg=%0.5) e0.0   <vec->
  void                    Return             l     %0.6
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    drop.unused.levels, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %in%, <0x5614f8bbdc40>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p22, 
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p23, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <lgl->
  void                    Return             l     %0.4
Prom 22:
BB0
  int-            %0.0  = Colon              vd    1L, 2L, elided   <int->
  void                    Return             l     %0.0
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    model.spmatrix@Prom(25)0, e0.0
  void                    Return             l     %0.1
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  val?            %0.3  = Sub                !v    %0.2, 1L, e0.0   <int$->
  void                    Visible            v     
  val?            %0.5  = Colon              !     0L, %0.3, e0.0   <int->
  void                    Return             l     %0.5
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p29, e0.0
  val?            %0.3  = Call               !     %0.1(0L, %0.2) e0.0   <int->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p31, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 1L) e0.0   <int->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, <0x5614fa93a230>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p33, e0.0
  val?            %0.3  = Call               !     %0.1(1, %0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nm, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     lapply, <0x5614f89e6040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p36, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p37, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec$->
  void                    Return             l     %0.4
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nmSplits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    getR, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    verbose, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nm, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     lapply, <0x5614f89e6040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p43, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p44, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec$->
  void                    Return             l     %0.4
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nmSplits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    getR, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    verbose, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    iTrm, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    counts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     fac2Sparse, <0x561500e23e18>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p54, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p55, e0.0
  prom-           %0.4  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p56, e0.0
  prom-           %0.5  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p59, e0.0
  val?            %0.6  = NamedCall          !     %0.1(%0.2, to="d", drop.unused.levels=%0.3, factorPatt12=%0.4, contrasts.arg=%0.5) e0.0   <vec->
  void                    Return             l     %0.6
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    drop.unused.levels, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %in%, <0x5614f8bbdc40>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p57, 
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p58, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <lgl->
  void                    Return             l     %0.4
Prom 57:
BB0
  int-            %0.0  = Colon              vd    1L, 2L, elided   <int->
  void                    Return             l     %0.0
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int+>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    model.spmatrix@Prom(60)0, e0.0
  void                    Return             l     %0.1
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    indF, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 62:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p67, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p68, e0.0
  prom-           %0.4  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p69, e0.0
  prom-           %0.5  = MkArg                    unboundValue, model.spmatrix[0x5614fe14f940]_p70, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 67:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 69:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 78:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attrib, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ model.spmatrix[0x5614fe14f940]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
