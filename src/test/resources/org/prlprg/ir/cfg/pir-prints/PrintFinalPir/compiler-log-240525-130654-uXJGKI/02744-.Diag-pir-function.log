
┌──────────────────────────────────────────────────────────────────────────────┐
│ .Diag[0x561506ec7e50]                                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
.Diag[0x561506ec7e50]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    as.integer, <env 0x5614f8ef6b50>
  lgl$#-          %0.3  = Identical                <blt as.integer>, %0.2   <true>
  void                    Branch                   %0.3 -> BB25 (if true) | BB26 (if false)
BB25   <- [0]
  val?^ | miss    %25.0 = LdVar              eR    length, <env 0x5614f8ef6b50>
  lgl$#-          %25.1 = Identical                <blt length>, %25.0   <true>
  void                    Branch                   %25.1 -> BB27 (if true) | BB28 (if false)
BB26   <- [0]
  void                    Nop                !     
  lgl$#-          %26.1 = %0.3
  dr              %26.2 = DeadBranchReached@0x5614fe203b78[Test#0]
  goto BB24
BB27   <- [25]
  env             e27.0 = MkEnv              l     nms=%0.1, sparse=%0.0, parent=<env 0x5614f8ef6b50>, context 1
  val?            %27.1 = Force!<lazy>       !v    %0.1, e27.0   <str->
  lgl$#-          %27.2 = IsType                   %27.1 isA val?-
  void                    Branch                   %27.2 -> BB29 (if true) | BB30 (if false)
BB28   <- [25]
  void                    Nop                !     
  lgl$#-          %28.1 = %25.1
  dr              %28.2 = DeadBranchReached@0x5614fe203b78[Test#1]
  goto BB24
BB24   <- [26, 28]
  val?^ | miss    %24.0 = Phi                      %26.1:BB26, %28.1:BB28
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %26.2:BB26, %28.2:BB28
  dr              %24.3 = %24.2
  env             e24.4 = (MkEnv)            l     nms=%0.1, sparse=%0.0, parent=<env 0x5614f8ef6b50>, context 1
  fs              %24.5 = FrameState         R     0x561501703020+0: [], env=e24.4
  void                    Deopt              !v    %24.5, %24.3, %24.1
BB29   <- [27]
  val?-           %29.0 = CastType           d     dn %27.1   <str->
  (int|real)$-    %29.1 = CallSafeBuiltin    wed   length(%29.0)    <int$->
  lgl$#-          %29.2 = IsType                   %29.1 isA int$-
  void                    Branch                   %29.2 -> BB31 (if true) | BB32 (if false)
BB30   <- [27]
  fs              %30.0 = FrameState         R     0x561501703020+129: [<blt as.integer>, <blt length>, %27.1], env=e27.0
  void                    Deopt              !v    %30.0, Typecheck@0x5614fe203b78[Type#3], %27.1   !
BB31   <- [29]
  int$-           %31.0 = CastType           d     dn %29.1
  void                    StVar              lW    n, %31.0, e27.0
  val?^ | miss    %31.2 = LdVar              eR    c, e27.0
  lgl$#-          %31.3 = Identical                <blt c>, %31.2   <true>
  void                    Branch                   %31.3 -> BB33 (if true) | BB34 (if false)
BB32   <- [29]
  fs              %32.0 = FrameState         R     0x561501703020+151: [<blt as.integer>, %29.1], env=e27.0
  void                    Deopt              !v    %32.0, Typecheck@0x5614fe203b78[Type#4], %29.1   !
BB33   <- [31]
  int-            %33.0 = CallSafeBuiltin    wed   c(%31.0, %31.0)    <int->
  void                    StVar              lW    d, %33.0, e27.0
  val?^ | miss    %33.2 = LdVar              eR    list, e27.0
  lgl$#-          %33.3 = Identical                <blt list>, %33.2   <true>
  void                    Branch                   %33.3 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  fs              %34.0 = FrameState         R     0x561501703020+187: [], env=e27.0
  void                    Deopt              !v    %34.0, DeadBranchReached@0x5614fe203b78[Test#2], %31.3   !
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    nms, e27.0
  val?            %35.1 = Force!<wrapped>    !v    %35.0, e27.0   <str->
  val?^ | miss    %35.2 = LdVar              eR    nms, e27.0
  val?            %35.3 = Force!<wrapped>    !v    %35.2, e27.0   <str->
  val+            %35.4 = CallSafeBuiltin    wed   list(%35.1, %35.3)    <vec->
  void                    StVar              lW    dn, %35.4, e27.0
  val?^ | miss    %35.6 = LdVar              eR    sparse, e27.0
  void                    Visible            v     
  val?            %35.8 = Force!<lazy>       !     %35.6, e27.0   <lgl$->
  lgl$#-          %35.9 = CheckTrueFalse     we    %35.8
  void                    Branch                   %35.9 -> BB15 (if true) | BB13 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x561501703020+311: [], env=e27.0
  void                    Deopt              !v    %36.0, DeadBranchReached@0x5614fe203b78[Test#3], %33.3   !
BB15   <- [35]
  val?^ | miss    %15.0 = LdVar              eR    suppressPackageStartupMessages, e27.0
  lgl$#-          %15.1 = Identical                %15.0, function(expr) <(rir::DispatchTable*)0x5615060|...
  void                    Branch                   %15.1 -> BB37 (if true) | BB38 (if false)
BB13   <- [35]
  val?^ | miss    %13.0 = LdVar              eR    array, e27.0
  lgl$#-          %13.1 = Identical                %13.0, function(data=NA, dim=length(data), dimnames=N|...
  void                    Branch                   %13.1 -> BB39 (if true) | BB40 (if false)
BB37   <- [15]
  prom-           %37.0 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p8, e27.0
  ct              %37.1 = PushContext        lCL   %37.0, suppressPackageStartupMessages(requireNamespac|..., function(expr) <(rir::DispatchTable*)0x5615060|..., e27.0
  val?^           %37.2 = CastType                 up %37.0
  env             e37.3 = MkEnv              l     expr=%37.2, parent=R_BaseNamespace, context 1
  prom-           %37.4 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p13, e37.3
  cls             %37.5 = MkCls                    suppressPackageStartupMessages@Prom(1)0, e37.3
  prom-           %37.6 = MkArg                    %37.5, .Diag[0x561506ec7e50]_p14 (!refl), e37.3
  dots-           %37.7 = DotsList           l     packageStartupMessage=%37.6
  val?            %37.8 = StaticCall         !     withCallingHandlers[0x56150417aa80](%37.4, %37.7) { 0 1n } e37.3   <lgl$->
  lgl$#-          %37.9 = IsType                   %37.8 isA lgl$-
  void                    Branch                   %37.9 -> BB41 (if true) | BB42 (if false)
BB38   <- [15]
  void                    Nop                !     
  val?^ | miss    %38.1 = %15.0
  dr              %38.2 = CallTarget@0x5614fe203b78[Call#10]
  goto BB11
BB39   <- [13]
  prom-           %39.0 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p0, e27.0
  prom-           %39.1 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p6, e27.0
  prom-           %39.2 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p7, e27.0
  val?            %39.3 = StaticCall         !     array[0x561502c71580](%39.0, %39.1, %39.2) e27.0   <real+>
  val?            %39.4 = %39.3
  goto BB14
BB40   <- [13]
  void                    Nop                !     
  val?^ | miss    %40.1 = %13.0
  dr              %40.2 = CallTarget@0x5614fe203b78[Call#5]
  goto BB11
BB41   <- [37]
  lgl$-           %41.0 = CastType           d     dn %37.8
  val?            %41.1 = PopContext         C     %41.0, %37.1   <lgl$->
  lgl$#-          %41.2 = IsType                   %41.1 isA lgl$-
  void                    Branch                   %41.2 -> BB43 (if true) | BB44 (if false)
BB42   <- [37]
  fs              %42.0 = FrameState         R     0x561501703020+539: [], env=e27.0
  fs              %42.1 = FrameState         R     0x561503210a80+45: [%37.8], env=e37.3, next=%42.0
  void                    Deopt              !v    %42.1, Typecheck@0x5614fd0c9de8[Type#1], %37.8   !
BB11   <- [38, 40]
  val?^ | miss    %11.0 = Phi                      %38.1:BB38, %40.1:BB40
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %38.2:BB38, %40.2:BB40
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x561501703020+450: [%35.9], env=e27.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB14   <- [39, 45]
  val?            %14.0 = Phi                      %39.4:BB39, %45.2:BB45
  val?            %14.1 = %14.0
  void                    Return             l     %14.1
BB43   <- [41]
  lgl$-           %43.0 = CastType           d     dn %41.1
  lgl$-           %43.1 = Not                vd    %43.0, elided
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB23 (if true) | BB20 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x561501703020+539: [%41.1], env=e27.0
  void                    Deopt              !v    %44.0, Typecheck@0x5614fe203b78[Type#28], %41.1   !
BB23   <- [43]
  (cls|spec|blt)  %23.0 = LdFun              !v    stop, e27.0
  fs              %23.1 = FrameState         R     0x561501703020+561: [%23.0], env=e27.0
  void                    Deopt              !v    %23.1, DeadCall@0x5614fe203b78[Call#12], %23.0   !
BB20   <- [43]
  (cls|spec|blt)  %20.0 = LdFun              !     ::, <0x5614f88a7e48>, e27.0
  prom-           %20.1 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p9, e27.0
  prom-           %20.2 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p10, e27.0
  val?            %20.3 = Call               !     %20.0(%20.1, %20.2) e27.0   <cls->
  (cls|spec|blt)  %20.4 = ChkFunction        e     %20.3
  prom-           %20.5 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p11, e27.0
  prom-           %20.6 = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p12, e27.0
  lgl$#-          %20.7 = Identical                %20.4, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %20.7 -> BB45 (if true) | BB46 (if false)
BB45   <- [20]
  dots-           %45.0 = DotsList           l     diag="U", Dim=%20.5, Dimnames=%20.6
  val?            %45.1 = StaticCall         !     [0x5615026a5040]("ddiMatrix", %45.0) { 0 1n 2n 3n } e27.0   <other>
  val?            %45.2 = %45.1
  goto BB14
BB46   <- [20]
  fs              %46.0 = FrameState         R     0x561501703020+639: [%20.3], env=e27.0
  void                    Deopt              !v    %46.0, CallTarget@0x5614fe203b78[Call#15], %20.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 1) e0.0   <real->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, <0x5614fa93a230>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p5, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(1, %0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     numeric, <0x561504c7b730>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .Diag[0x561506ec7e50]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  void                    Visible            v     
  val?            %0.4  = Sub                !     %0.2, 1L, e0.0   <int$->
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     requireNamespace, <0x561500c5f210>, e0.0
  val?            %0.2  = Call               !     %0.1("Matrix") e0.0   <lgl$->
  void                    Return             l     %0.2
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    new, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    suppressPackageStartupMessages@Prom(1)0, e0.0
  void                    Return             l     %0.1

│ .Diag[0x561506ec7e50]                                                        │
└──────────────────────────────────────────────────────────────────────────────┘
