
┌──────────────────────────────────────────────────────────────────────────────┐
│ mode[0x5615052d10f0]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
mode[0x5615052d10f0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.2  = Force!<lazy>       !vr   %0.0,    <val?+>
  lgl$#-          %0.3  = CallSafeBuiltin    wed   is.expression(%0.2)    <lgl$->
  void                    Branch                   %0.3 -> BB28 (if true) | BB3 (if false)
BB28   <- [0]
  void                    Visible            v     
  str$#-          %28.1 = "expression"
  goto BB14
BB3   <- [0]
  lgl$#-          %3.0  = IsType                   %0.0 isA val?~+
  void                    Branch                   %3.0 -> BB30 (if true) | BB31 (if false)
BB14   <- [28, 13, 52]
  str$-           %14.0 = Phi                      %13.2:BB13, %52.1:BB52, %28.1:BB28
  str$-           %14.1 = %14.0
  void                    Return             l     %14.1
BB30   <- [3]
  lgl$#-          %30.0 = CallSafeBuiltin    wed   is.call(%0.2)    <lgl$->
  void                    Branch                   %30.0 -> BB19 (if true) | BB4 (if false)
BB31   <- [3]
  fs              %31.0 = FrameState         R     0x5614fd241ad0+91: [%0.3], env=e0.1
  void                    Deopt              !v    %31.0, Typecheck@0x561504e641e8[Type#4], %0.0
BB19   <- [30]
  prom-           %19.0 = MkArg                    unboundValue, mode[0x5615052d10f0]_p1, e0.1
  val?            %19.1 = StaticCall         !v    deparse[0x5615066a1b20](%19.0) e0.1   <str$->
  lgl$#-          %19.2 = IsType                   %19.1 isA val+   <true>
  lgl$#-          %19.3 = IsType                   %19.1 isA val?-
  void                    Branch                   %19.2 -> BB32 (if true) | BB33 (if false)
BB4   <- [30]
  lgl$#-          %4.0  = CallSafeBuiltin    wed   is.symbol(%0.2)    <lgl$->
  void                    Branch                   %4.0 -> BB18 (if true) | BB5 (if false)
BB32   <- [19]
  void                    Branch                   %19.3 -> BB34 (if true) | BB35 (if false)
BB33   <- [19]
  void                    Nop                !     
  lgl$#-          %33.1 = %19.2
  dr              %33.2 = DeadBranchReached@0x561504e641e8[Test#3]
  goto BB20
BB18   <- [4]
  void                    Visible            v     
  str$#-          %18.1 = "name"
  goto BB13
BB5   <- [4]
  str$-           %5.0  = CallSafeBuiltin    wed   typeof(%0.2)    <str$->
  int$-           %5.1  = Length                   %5.0
  void                    StVar              lW    tx, %5.0, e0.1
  lgl$-           %5.3  = Eq                 d     %5.1, 1L, elided   <true>
  lgl$#-          %5.4  = Identical                %5.3, true
  void                    Branch                   %5.4 -> BB36 (if true) | BB37 (if false)
BB34   <- [32]
  val?-           %34.0 = CastType           d     dn %19.1   <str$->
  val?            %34.1 = Extract1_1D        wed   %34.0, 1L, elided   <str$->
  lgl$-           %34.2 = Is                       %34.1, logical
  lgl$-           %34.3 = Is                       %34.1, integer
  lgl$-           %34.4 = Is                       %34.1, double
  lgl$-           %34.5 = Is                       %34.1, complex
  lgl$-           %34.6 = Is                       %34.1, character   <true>
  lgl$-           %34.7 = Is                       %34.1, raw
  lgl$-           %34.8 = Is                       %34.1, list
  lgl$-           %34.9 = Is                       %34.1, expression
  lgl$-           %34.10 = LOr                      %34.9, %34.8
  lgl$-           %34.11 = LOr                      %34.10, %34.7
  lgl$-           %34.12 = LOr                      %34.11, %34.6
  lgl$-           %34.13 = LOr                      %34.12, %34.5
  lgl$-           %34.14 = LOr                      %34.13, %34.4
  lgl$-           %34.15 = LOr                      %34.14, %34.3
  lgl$-           %34.16 = LOr                      %34.15, %34.2   <true>
  lgl$#-          %34.17 = Identical                %34.16, true
  int$-           %34.18 = Length                   %34.1
  lgl$-           %34.19 = Is                       %34.1, Factor   <false>
  lgl$#-          %34.20 = Identical                %34.19, false
  lgl$#-          %34.21 = Identical                %34.6, true
  lgl$#-          %34.22 = IsType                   %34.1 isA val?-
  void                    Branch                   %34.17 -> BB38 (if true) | BB39 (if false)
BB35   <- [32]
  void                    Nop                !     
  val?            %35.1 = %19.1
  dr              %35.2 = Typecheck@0x561504e641e8[Type#8]
  goto BB20
BB20   <- [33, 35]
  val?^ | miss    %20.0 = Phi                      %33.1:BB33, %35.1:BB35
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %33.2:BB33, %35.2:BB35
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x5614fd241ad0+253: [%19.1], env=e0.1
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB13   <- [18, 12]
  str$-           %13.0 = Phi                      %12.2:BB12, %18.1:BB18
  str$-           %13.1 = %13.0
  str$-           %13.2 = %13.1
  goto BB14
BB36   <- [5]
  lgl$-           %36.0 = CallSafeBuiltin    wed   is.na(%5.0) 
  lgl$#-          %36.1 = CheckTrueFalse     e     %36.0   <false>
  void                    Branch                   %36.1 -> BB51 (if true) | BB50 (if false)
BB37   <- [5]
  fs              %37.0 = FrameState         R     0x5614fd241ad0+708: [%5.0], env=e0.1
  void                    Deopt              !v    %37.0, DeadBranchReached@0x561504e641e8[Test#14], %5.4
BB38   <- [34]
  lgl$-           %38.0 = Eq                 d     %34.18, 1L, elided   <true>
  lgl$#-          %38.1 = Identical                %38.0, true
  void                    Branch                   %38.1 -> BB40 (if true) | BB41 (if false)
BB39   <- [34]
  void                    Nop                !     
  lgl$#-          %39.1 = %34.17
  dr              %39.2 = DeadBranchReached@0x561504e641e8[Test#4]
  goto BB22
BB51   <- [36]
  void                    Nop                !     
  lgl$#-          %51.1 = %36.1
  dr              %51.2 = DeadBranchReached@0x561504e641e8[Test#23]
  goto BB8
BB50   <- [36]
  lgl$-           %50.0 = Eq                 d     %5.0, double, elided
  lgl$#-          %50.1 = CheckTrueFalse     e     %50.0
  void                    Branch                   %50.1 -> BB17 (if true) | BB10 (if false)
BB40   <- [38]
  void                    Branch                   %34.20 -> BB42 (if true) | BB43 (if false)
BB41   <- [38]
  void                    Nop                !     
  lgl$#-          %41.1 = %38.1
  dr              %41.2 = DeadBranchReached@0x561504e641e8[Test#5]
  goto BB22
BB22   <- [39, 41, 43, 45, 47]
  val?^ | miss    %22.0 = Phi                      %39.1:BB39, %41.1:BB41, %43.1:BB43, %45.1:BB45, %47.1:BB47
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %39.2:BB39, %41.2:BB41, %43.2:BB43, %45.2:BB45, %47.2:BB47
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x5614fd241ad0+296: [%34.1], env=e0.1
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB8   <- [51, 55, 57, 59]
  val?^ | miss    %8.0  = Phi                      %51.1:BB51, %55.1:BB55, %57.1:BB57, %59.1:BB59
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %51.2:BB51, %55.2:BB55, %57.2:BB57, %59.2:BB59
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x5614fd241ad0+965: [%5.0, %36.0], env=e0.1
  void                    Deopt              !v    %8.4, %8.3, %8.1
BB17   <- [50]
  void                    Nop                !     
  goto BB16
BB10   <- [50]
  lgl$-           %10.0 = Eq                 d     %5.0, integer, elided
  lgl$#-          %10.1 = CheckTrueFalse     e     %10.0
  void                    Branch                   %10.1 -> BB15 (if true) | BB11 (if false)
BB42   <- [40]
  void                    Branch                   %34.21 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  void                    Nop                !     
  lgl$#-          %43.1 = %34.20
  dr              %43.2 = DeadBranchReached@0x561504e641e8[Test#6]
  goto BB22
BB16   <- [15, 17]
  void                    Visible            v     
  str$#-          %16.1 = "numeric"
  goto BB12
BB15   <- [10]
  void                    Nop                !     
  goto BB16
BB11   <- [10]
  lgl$-           %11.0 = Eq                 d     %5.0, closure, elided
  lgl$#-          %11.1 = CheckTrueFalse     e     %11.0   <false>
  void                    Branch                   %11.1 -> BB55 (if true) | BB54 (if false)
BB44   <- [42]
  void                    Branch                   %34.22 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  void                    Nop                !     
  lgl$#-          %45.1 = %34.21
  dr              %45.2 = DeadBranchReached@0x561504e641e8[Test#7]
  goto BB22
BB12   <- [16, 58]
  str$-           %12.0 = Phi                      %58.1:BB58, %16.1:BB16
  str$-           %12.1 = %12.0
  str$-           %12.2 = %12.1
  goto BB13
BB55   <- [11]
  void                    Nop                !     
  lgl$#-          %55.1 = %11.1
  dr              %55.2 = DeadBranchReached@0x561504e641e8[Test#26]
  goto BB8
BB54   <- [11]
  lgl$-           %54.0 = Eq                 d     %5.0, builtin, elided
  lgl$#-          %54.1 = CheckTrueFalse     e     %54.0   <false>
  void                    Branch                   %54.1 -> BB57 (if true) | BB56 (if false)
BB46   <- [44]
  val?-           %46.0 = CastType           d     dn %34.1   <str$->
  lgl-            %46.1 = CallSafeBuiltin    wed   is.na(%46.0) 
  lgl$#-          %46.2 = CheckTrueFalse     we    %46.1   <false>
  void                    Branch                   %46.2 -> BB49 (if true) | BB48 (if false)
BB47   <- [44]
  void                    Nop                !     
  val?            %47.1 = %34.1
  dr              %47.2 = Typecheck@0x561504e641e8[Type#9]
  goto BB22
BB57   <- [54]
  void                    Nop                !     
  lgl$#-          %57.1 = %54.1
  dr              %57.2 = DeadBranchReached@0x561504e641e8[Test#27]
  goto BB8
BB56   <- [54]
  lgl$-           %56.0 = Eq                 d     %5.0, special, elided
  lgl$#-          %56.1 = CheckTrueFalse     e     %56.0   <false>
  void                    Branch                   %56.1 -> BB59 (if true) | BB58 (if false)
BB49   <- [46]
  fs              %49.0 = FrameState         R     0x5614fd241ad0+488: [%46.0, %46.2], env=e0.1
  void                    Deopt              !v    %49.0, DeadBranchReached@0x561504e641e8[Test#10], %46.2   !
BB48   <- [46]
  lgl-            %48.0 = Eq                 wed   %46.0, (, elided
  lgl$#-          %48.1 = CheckTrueFalse     we    %48.0   <false>
  void                    Branch                   %48.1 -> BB53 (if true) | BB52 (if false)
BB59   <- [56]
  void                    Nop                !     
  lgl$#-          %59.1 = %56.1
  dr              %59.2 = DeadBranchReached@0x561504e641e8[Test#28]
  goto BB8
BB58   <- [56]
  void                    Visible            v     
  str$-           %58.1 = %5.0
  goto BB12
BB53   <- [48]
  fs              %53.0 = FrameState         R     0x5614fd241ad0+512: [%46.0, %48.1], env=e0.1
  void                    Deopt              !v    %53.0, DeadBranchReached@0x561504e641e8[Test#11], %48.1   !
BB52   <- [48]
  void                    Visible            v     
  str$#-          %52.1 = "call"
  goto BB14
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3

│ mode[0x5615052d10f0]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
