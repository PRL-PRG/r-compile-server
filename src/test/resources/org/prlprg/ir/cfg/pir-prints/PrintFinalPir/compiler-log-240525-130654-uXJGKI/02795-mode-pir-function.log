
┌──────────────────────────────────────────────────────────────────────────────┐
│ mode[0x5615033d8b60]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
mode[0x5615033d8b60]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  val?            %0.2  = Force!<lazy>       !v    %0.0, e0.1   <val?+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val?+
  void                    Branch                   %0.3 -> BB36 (if true) | BB37 (if false)
BB36   <- [0]
  val?+           %36.0 = CastType           d     dn %0.2
  lgl$#-          %36.1 = CallSafeBuiltin    wed   is.expression(%36.0)    <lgl$->
  void                    Branch                   %36.1 -> BB34 (if true) | BB5 (if false)
BB37   <- [0]
  fs              %37.0 = FrameState         R     0x5614fd241ad0+69: [<blt is.expression>, %0.2], env=e0.1
  void                    Deopt              !v    %37.0, Typecheck@0x561504e641e8[Type#1], %0.2   !
BB34   <- [36]
  void                    Visible            v     
  str$#-          %34.1 = "expression"
  goto BB20
BB5   <- [36]
  val?^ | miss    %5.0  = LdVar              eR    is.call, e0.1
  lgl$#-          %5.1  = Identical                <blt is.call>, %5.0   <true>
  void                    Branch                   %5.1 -> BB38 (if true) | BB39 (if false)
BB20   <- [34, 19, 74]
  str$-           %20.0 = Phi                      %19.2:BB19, %74.1:BB74, %34.1:BB34
  str$-           %20.1 = %20.0
  void                    Return             l     %20.1
BB38   <- [5]
  val?^ | miss    %38.0 = LdVar              eR    x, e0.1
  lgl$#-          %38.1 = IsType                   %38.0 isA val?~+
  void                    Branch                   %38.1 -> BB40 (if true) | BB41 (if false)
BB39   <- [5]
  void                    Nop                !     
  lgl$#-          %39.1 = %5.1
  dr              %39.2 = DeadBranchReached@0x561504e641e8[Test#1]
  goto BB3
BB40   <- [38]
  val?~+          %40.0 = CastType           d     dn %38.0
  val?+           %40.1 = Force!<wrapped>          %40.0,    <val?+>
  lgl$#-          %40.2 = CallSafeBuiltin    wed   is.call(%40.1)    <lgl$->
  void                    Branch                   %40.2 -> BB25 (if true) | BB8 (if false)
BB41   <- [38]
  void                    Nop                !     
  val?^ | miss    %41.1 = %38.0
  dr              %41.2 = Typecheck@0x561504e641e8[Type#4]
  goto BB3
BB3   <- [39, 41]
  val?^ | miss    %3.0  = Phi                      %39.1:BB39, %41.1:BB41
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %39.2:BB39, %41.2:BB41
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x5614fd241ad0+91: [%36.1], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB25   <- [40]
  val?^ | miss    %25.0 = LdVar              eR    deparse, e0.1
  lgl$#-          %25.1 = Identical                %25.0, function(expr, width.cutoff=60L, backtick=%in%|...
  void                    Branch                   %25.1 -> BB42 (if true) | BB43 (if false)
BB8   <- [40]
  val?^ | miss    %8.0  = LdVar              eR    is.name, e0.1
  lgl$#-          %8.1  = Identical                <blt is.symbol>, %8.0   <true>
  void                    Branch                   %8.1 -> BB44 (if true) | BB45 (if false)
BB42   <- [25]
  prom-           %42.0 = MkArg                    unboundValue, mode[0x5615033d8b60]_p1, e0.1
  val?            %42.1 = StaticCall         !v    deparse[0x561505033250](%42.0) e0.1   <str$->
  lgl$#-          %42.2 = IsType                   %42.1 isA val+   <true>
  lgl$#-          %42.3 = IsType                   %42.1 isA val?-
  void                    Branch                   %42.2 -> BB46 (if true) | BB47 (if false)
BB43   <- [25]
  void                    Nop                !     
  val?^ | miss    %43.1 = %25.0
  dr              %43.2 = CallTarget@0x561504e641e8[Call#2]
  goto BB6
BB44   <- [8]
  lgl$#-          %44.0 = CallSafeBuiltin    wed   is.symbol(%40.1)    <lgl$->
  void                    Branch                   %44.0 -> BB24 (if true) | BB11 (if false)
BB45   <- [8]
  void                    Nop                !     
  lgl$#-          %45.1 = %8.1
  dr              %45.2 = DeadBranchReached@0x561504e641e8[Test#12]
  goto BB6
BB46   <- [42]
  void                    Branch                   %42.3 -> BB48 (if true) | BB49 (if false)
BB47   <- [42]
  void                    Nop                !     
  lgl$#-          %47.1 = %42.2
  dr              %47.2 = DeadBranchReached@0x561504e641e8[Test#3]
  goto BB26
BB6   <- [43, 45]
  val?^ | miss    %6.0  = Phi                      %43.1:BB43, %45.1:BB45
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %43.2:BB43, %45.2:BB45
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x5614fd241ad0+205: [%40.2], env=e0.1
  void                    Deopt              !v    %6.4, %6.3, %6.1   !
BB24   <- [44]
  void                    Visible            v     
  str$#-          %24.1 = "name"
  goto BB19
BB11   <- [44]
  val?^ | miss    %11.0 = LdVar              eR    typeof, e0.1
  lgl$#-          %11.1 = Identical                %11.0, function(x) <(rir::DispatchTable*)0x5614fa848d|...
  void                    Branch                   %11.1 -> BB58 (if true) | BB59 (if false)
BB48   <- [46]
  val?-           %48.0 = CastType           d     dn %42.1   <str$->
  val?            %48.1 = Extract1_1D        wed   %48.0, 1L, elided   <str$->
  lgl$-           %48.2 = Is                       %48.1, logical
  lgl$-           %48.3 = Is                       %48.1, integer
  lgl$-           %48.4 = Is                       %48.1, double
  lgl$-           %48.5 = Is                       %48.1, complex
  lgl$-           %48.6 = Is                       %48.1, character   <true>
  lgl$-           %48.7 = Is                       %48.1, raw
  lgl$-           %48.8 = Is                       %48.1, list
  lgl$-           %48.9 = Is                       %48.1, expression
  lgl$-           %48.10 = LOr                      %48.9, %48.8
  lgl$-           %48.11 = LOr                      %48.10, %48.7
  lgl$-           %48.12 = LOr                      %48.11, %48.6
  lgl$-           %48.13 = LOr                      %48.12, %48.5
  lgl$-           %48.14 = LOr                      %48.13, %48.4
  lgl$-           %48.15 = LOr                      %48.14, %48.3
  lgl$-           %48.16 = LOr                      %48.15, %48.2   <true>
  lgl$#-          %48.17 = Identical                %48.16, true
  int$-           %48.18 = Length                   %48.1
  lgl$-           %48.19 = Is                       %48.1, Factor   <false>
  lgl$#-          %48.20 = Identical                %48.19, false
  lgl$#-          %48.21 = Identical                %48.6, true
  lgl$#-          %48.22 = IsType                   %48.1 isA val?-
  void                    Branch                   %48.17 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  void                    Nop                !     
  val?            %49.1 = %42.1
  dr              %49.2 = Typecheck@0x561504e641e8[Type#8]
  goto BB26
BB26   <- [47, 49]
  val?^ | miss    %26.0 = Phi                      %47.1:BB47, %49.1:BB49
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %47.2:BB47, %49.2:BB49
  dr              %26.3 = %26.2
  fs              %26.4 = FrameState         R     0x5614fd241ad0+253: [%42.1], env=e0.1
  void                    Deopt              !v    %26.4, %26.3, %26.1   !
BB19   <- [24, 18]
  str$-           %19.0 = Phi                      %18.2:BB18, %24.1:BB24
  str$-           %19.1 = %19.0
  str$-           %19.2 = %19.1
  goto BB20
BB58   <- [11]
  str$-           %58.0 = CallSafeBuiltin    wed   typeof(%40.1)    <str$->
  int$-           %58.1 = Length                   %58.0
  void                    StVar              lW    tx, %58.0, e0.1
  lgl$-           %58.3 = Eq                 d     %58.1, 1L, elided   <true>
  lgl$#-          %58.4 = Identical                %58.3, true
  void                    Branch                   %58.4 -> BB62 (if true) | BB63 (if false)
BB59   <- [11]
  fs              %59.0 = FrameState         R     0x5614fd241ad0+649: [%44.0], env=e0.1
  void                    Deopt              !v    %59.0, CallTarget@0x561504e641e8[Call#4], %11.0   !
BB50   <- [48]
  lgl$-           %50.0 = Eq                 d     %48.18, 1L, elided   <true>
  lgl$#-          %50.1 = Identical                %50.0, true
  void                    Branch                   %50.1 -> BB52 (if true) | BB53 (if false)
BB51   <- [48]
  void                    Nop                !     
  lgl$#-          %51.1 = %48.17
  dr              %51.2 = DeadBranchReached@0x561504e641e8[Test#4]
  goto BB28
BB62   <- [58]
  lgl$-           %62.0 = CallSafeBuiltin    wed   is.na(%58.0) 
  lgl$#-          %62.1 = CheckTrueFalse     e     %62.0   <false>
  void                    Branch                   %62.1 -> BB65 (if true) | BB64 (if false)
BB63   <- [58]
  fs              %63.0 = FrameState         R     0x5614fd241ad0+708: [%58.0], env=e0.1
  void                    Deopt              !v    %63.0, DeadBranchReached@0x561504e641e8[Test#14], %58.4   !
BB52   <- [50]
  void                    Branch                   %48.20 -> BB54 (if true) | BB55 (if false)
BB53   <- [50]
  void                    Nop                !     
  lgl$#-          %53.1 = %50.1
  dr              %53.2 = DeadBranchReached@0x561504e641e8[Test#5]
  goto BB28
BB28   <- [51, 53, 55, 57, 61]
  val?^ | miss    %28.0 = Phi                      %51.1:BB51, %53.1:BB53, %55.1:BB55, %57.1:BB57, %61.1:BB61
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %51.2:BB51, %53.2:BB53, %55.2:BB55, %57.2:BB57, %61.2:BB61
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x5614fd241ad0+296: [%48.1], env=e0.1
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB65   <- [62]
  void                    Nop                !     
  lgl$#-          %65.1 = %62.1
  dr              %65.2 = DeadBranchReached@0x561504e641e8[Test#23]
  goto BB14
BB64   <- [62]
  lgl$-           %64.0 = Eq                 d     %58.0, double, elided
  lgl$#-          %64.1 = CheckTrueFalse     e     %64.0
  void                    Branch                   %64.1 -> BB23 (if true) | BB16 (if false)
BB54   <- [52]
  void                    Branch                   %48.21 -> BB56 (if true) | BB57 (if false)
BB55   <- [52]
  void                    Nop                !     
  lgl$#-          %55.1 = %48.20
  dr              %55.2 = DeadBranchReached@0x561504e641e8[Test#6]
  goto BB28
BB14   <- [65, 67, 71, 73]
  val?^ | miss    %14.0 = Phi                      %65.1:BB65, %67.1:BB67, %71.1:BB71, %73.1:BB73
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %65.2:BB65, %67.2:BB67, %71.2:BB71, %73.2:BB73
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x5614fd241ad0+965: [%58.0, %62.0], env=e0.1
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB23   <- [64]
  void                    Nop                !     
  goto BB22
BB16   <- [64]
  lgl$-           %16.0 = Eq                 d     %58.0, integer, elided
  lgl$#-          %16.1 = CheckTrueFalse     e     %16.0
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB56   <- [54]
  void                    Branch                   %48.22 -> BB60 (if true) | BB61 (if false)
BB57   <- [54]
  void                    Nop                !     
  lgl$#-          %57.1 = %48.21
  dr              %57.2 = DeadBranchReached@0x561504e641e8[Test#7]
  goto BB28
BB22   <- [21, 23]
  void                    Visible            v     
  str$#-          %22.1 = "numeric"
  goto BB18
BB21   <- [16]
  void                    Nop                !     
  goto BB22
BB17   <- [16]
  lgl$-           %17.0 = Eq                 d     %58.0, closure, elided
  lgl$#-          %17.1 = CheckTrueFalse     e     %17.0   <false>
  void                    Branch                   %17.1 -> BB67 (if true) | BB66 (if false)
BB60   <- [56]
  val?-           %60.0 = CastType           d     dn %48.1   <str$->
  lgl-            %60.1 = CallSafeBuiltin    wed   is.na(%60.0) 
  lgl$#-          %60.2 = CheckTrueFalse     we    %60.1   <false>
  void                    Branch                   %60.2 -> BB69 (if true) | BB68 (if false)
BB61   <- [56]
  void                    Nop                !     
  val?            %61.1 = %48.1
  dr              %61.2 = Typecheck@0x561504e641e8[Type#9]
  goto BB28
BB18   <- [22, 72]
  str$-           %18.0 = Phi                      %72.1:BB72, %22.1:BB22
  str$-           %18.1 = %18.0
  str$-           %18.2 = %18.1
  goto BB19
BB67   <- [17]
  void                    Nop                !     
  lgl$#-          %67.1 = %17.1
  dr              %67.2 = DeadBranchReached@0x561504e641e8[Test#26]
  goto BB14
BB66   <- [17]
  lgl$-           %66.0 = Eq                 d     %58.0, builtin, elided
  lgl$#-          %66.1 = CheckTrueFalse     e     %66.0   <false>
  void                    Branch                   %66.1 -> BB71 (if true) | BB70 (if false)
BB69   <- [60]
  fs              %69.0 = FrameState         R     0x5614fd241ad0+488: [%60.0, %60.2], env=e0.1
  void                    Deopt              !v    %69.0, DeadBranchReached@0x561504e641e8[Test#10], %60.2   !
BB68   <- [60]
  lgl-            %68.0 = Eq                 wed   %60.0, (, elided
  lgl$#-          %68.1 = CheckTrueFalse     we    %68.0   <false>
  void                    Branch                   %68.1 -> BB75 (if true) | BB74 (if false)
BB71   <- [66]
  void                    Nop                !     
  lgl$#-          %71.1 = %66.1
  dr              %71.2 = DeadBranchReached@0x561504e641e8[Test#27]
  goto BB14
BB70   <- [66]
  lgl$-           %70.0 = Eq                 d     %58.0, special, elided
  lgl$#-          %70.1 = CheckTrueFalse     e     %70.0   <false>
  void                    Branch                   %70.1 -> BB73 (if true) | BB72 (if false)
BB75   <- [68]
  fs              %75.0 = FrameState         R     0x5614fd241ad0+512: [%60.0, %68.1], env=e0.1
  void                    Deopt              !v    %75.0, DeadBranchReached@0x561504e641e8[Test#11], %68.1   !
BB74   <- [68]
  void                    Visible            v     
  str$#-          %74.1 = "call"
  goto BB20
BB73   <- [70]
  void                    Nop                !     
  lgl$#-          %73.1 = %70.1
  dr              %73.2 = DeadBranchReached@0x561504e641e8[Test#28]
  goto BB14
BB72   <- [70]
  void                    Visible            v     
  str$-           %72.1 = %58.0
  goto BB18
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3

│ mode[0x5615033d8b60]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
