
┌──────────────────────────────────────────────────────────────────────────────┐
│ validityMethod[0x5615061dc570]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
validityMethod[0x5615061dc570]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, parent=<env 0x5614fad267d8>, context 1
  (cls|spec|blt)  %0.2  = LdFun              !v    @, <0x5614f88a6bd8>, <env 0x5614fad267d8>
  prom-           %0.3  = MkArg                    unboundValue, validityMethod[0x5615061dc570]_p0, e0.1
  prom-           %0.4  = MkArg                    unboundValue, validityMethod[0x5615061dc570]_p1, e0.1
  val?            %0.5  = Call               !v    %0.2(%0.3, %0.4) e0.1   <int$->
  lgl$#-          %0.6  = IsType                   %0.5 isA int$-
  void                    Branch                   %0.6 -> BB55 (if true) | BB56 (if false)
BB55   <- [0]
  int$-           %55.0 = CastType           d     dn %0.5
  void                    StVar              lW    n, %55.0, e0.1
  val?^ | miss    %55.2 = LdVar              eR    anyNA, e0.1
  lgl$#-          %55.3 = Identical                <blt anyNA>, %55.2   <true>
  void                    Branch                   %55.3 -> BB57 (if true) | BB58 (if false)
BB56   <- [0]
  fs              %56.0 = FrameState         R     0x56150466bb50+37: [%0.5], env=e0.1
  void                    Deopt              !v    %56.0, Typecheck@0x5614ff1ab878[Type#2], %0.5   !
BB57   <- [55]
  (cls|spec|blt)  %57.0 = LdFun              !v    @, <0x5614f88a6bd8>, e0.1
  prom-           %57.1 = MkArg                    unboundValue, validityMethod[0x5615061dc570]_p2, e0.1
  prom-           %57.2 = MkArg                    unboundValue, validityMethod[0x5615061dc570]_p3, e0.1
  val?            %57.3 = Call               !v    %57.0(%57.1, %57.2) e0.1   <(int|real)->
  void                    StVar              lW    i, %57.3, e0.1
  lgl$#-          %57.5 = IsType                   %57.3 isA val?-
  void                    Branch                   %57.5 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  fs              %58.0 = FrameState         R     0x56150466bb50+51: [], env=e0.1
  void                    Deopt              !v    %58.0, DeadBranchReached@0x5614ff1ab878[Test#0], %55.3   !
BB59   <- [57]
  val?-           %59.0 = CastType           d     dn %57.3   <(int|real)->
  val+            %59.1 = CallSafeBuiltin    wed   anyNA(%59.0)    <lgl$->
  lgl$#-          %59.2 = IsType                   %59.1 isA lgl$-
  void                    Branch                   %59.2 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x56150466bb50+164: [<blt anyNA>, %57.3], env=e0.1
  void                    Deopt              !v    %60.0, Typecheck@0x5614ff1ab878[Type#8], %57.3   !
BB61   <- [59]
  lgl$-           %61.0 = CastType           d     dn %59.1
  lgl$#-          %61.1 = CheckTrueFalse     e     %61.0
  void                    Branch                   %61.1 -> BB53 (if true) | BB9 (if false)
BB62   <- [59]
  void                    Nop                !     
  val+            %62.1 = %59.1
  dr              %62.2 = Typecheck@0x5614ff1ab878[Type#9]
  goto BB7
BB53   <- [61]
  void                    Visible            v     
  str$#-          %53.1 = "'i' slot has NAs"
  goto BB44
BB9   <- [61]
  val?^ | miss    %9.0  = LdVar              eR    any, e0.1
  lgl$#-          %9.1  = Identical                <blt any>, %9.0   <true>
  void                    Branch                   %9.1 -> BB63 (if true) | BB64 (if false)
BB7   <- [62, 64, 66]
  val?^ | miss    %7.0  = Phi                      %62.1:BB62, %64.1:BB64, %66.1:BB66
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %62.2:BB62, %64.2:BB64, %66.2:BB66
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x56150466bb50+181: [%59.1], env=e0.1
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB44   <- [53, 43]
  (lgl|str)$#-    %44.0 = Phi                      %43.2:BB43, %53.1:BB53
  (lgl|str)$#-    %44.1 = %44.0
  void                    Return             l     %44.1
BB63   <- [9]
  val?^ | miss    %63.0 = LdVar              eR    is.finite, e0.1
  lgl$#-          %63.1 = Identical                <blt is.finite>, %63.0   <true>
  void                    Branch                   %63.1 -> BB65 (if true) | BB66 (if false)
BB64   <- [9]
  void                    Nop                !     
  lgl$#-          %64.1 = %9.1
  dr              %64.2 = DeadBranchReached@0x5614ff1ab878[Test#1]
  goto BB7
BB65   <- [63]
  val-            %65.0 = ChkMissing         e     %59.0
  lgl-            %65.1 = CallSafeBuiltin    wed   is.finite(%59.0)    <lgl->
  lgl-            %65.2 = Not                wed   %65.1, elided
  val?            %65.3 = CallBuiltin        !v    any(%65.2) e0.1   <lgl$->
  lgl$#-          %65.4 = IsType                   %65.3 isA lgl$-
  void                    Branch                   %65.4 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  void                    Nop                !     
  lgl$#-          %66.1 = %63.1
  dr              %66.2 = DeadBranchReached@0x5614ff1ab878[Test#2]
  goto BB7
BB67   <- [65]
  lgl$-           %67.0 = CastType           d     dn %65.3
  lgl$#-          %67.1 = CheckTrueFalse     e     %67.0
  void                    Branch                   %67.1 -> BB52 (if true) | BB12 (if false)
BB68   <- [65]
  void                    Nop                !     
  val?            %68.1 = %65.3
  dr              %68.2 = Typecheck@0x5614ff1ab878[Type#15]
  goto BB10
BB52   <- [67]
  void                    Visible            v     
  str$#-          %52.1 = "'i' slot is not all finite"
  goto BB43
BB12   <- [67]
  val?^ | miss    %12.0 = LdVar              eR    any, e0.1
  lgl$#-          %12.1 = Identical                <blt any>, %12.0   <true>
  void                    Branch                   %12.1 -> BB69 (if true) | BB70 (if false)
BB10   <- [68, 70, 72]
  val?^ | miss    %10.0 = Phi                      %68.1:BB68, %70.1:BB70, %72.1:BB72
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %68.2:BB68, %70.2:BB70, %72.2:BB72
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x56150466bb50+366: [%65.3], env=e0.1
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB43   <- [52, 42]
  (lgl|str)$#-    %43.0 = Phi                      %42.2:BB42, %52.1:BB52
  (lgl|str)$#-    %43.1 = %43.0
  (lgl|str)$#-    %43.2 = %43.1
  goto BB44
BB69   <- [12]
  val?^ | miss    %69.0 = LdVar              eR    i, e0.1
  lgl$#-          %69.1 = IsType                   %69.0 isA val?~- | miss
  void                    Branch                   %69.1 -> BB71 (if true) | BB72 (if false)
BB70   <- [12]
  void                    Nop                !     
  lgl$#-          %70.1 = %12.1
  dr              %70.2 = DeadBranchReached@0x5614ff1ab878[Test#3]
  goto BB10
BB71   <- [69]
  val?~- | miss   %71.0 = CastType           d     dn %69.0
  val?-           %71.1 = Force!<value>            %71.0,    <(int|real)->
  lgl-            %71.2 = Lt                 wed   %71.1, 1, elided   <lgl->
  val?            %71.3 = CallBuiltin        !v    any(%71.2) e0.1   <lgl$->
  lgl$#-          %71.4 = IsType                   %71.3 isA lgl$-
  void                    Branch                   %71.4 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  void                    Nop                !     
  val?^ | miss    %72.1 = %69.0
  dr              %72.2 = Typecheck@0x5614ff1ab878[Type#18]
  goto BB10
BB73   <- [71]
  lgl$-           %73.0 = CastType           d     dn %71.3
  lgl$#-          %73.1 = CheckTrueFalse     e     %73.0
  void                    Branch                   %73.1 -> BB51 (if true) | BB15 (if false)
BB74   <- [71]
  void                    Nop                !     
  val?            %74.1 = %71.3
  dr              %74.2 = Typecheck@0x5614ff1ab878[Type#20]
  goto BB13
BB51   <- [73]
  void                    Visible            v     
  str$#-          %51.1 = "'i' must be >= 1"
  goto BB42
BB15   <- [73]
  val?^ | miss    %15.0 = LdVar              eR    n, e0.1
  lgl$#-          %15.1 = IsType                   %15.0 isA int$-
  void                    Branch                   %15.1 -> BB75 (if true) | BB76 (if false)
BB13   <- [74, 76]
  val?^ | miss    %13.0 = Phi                      %74.1:BB74, %76.1:BB76
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %74.2:BB74, %76.2:BB76
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x56150466bb50+480: [%71.3], env=e0.1
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB42   <- [51, 41]
  (lgl|str)$#-    %42.0 = Phi                      %41.2:BB41, %51.1:BB51
  (lgl|str)$#-    %42.1 = %42.0
  (lgl|str)$#-    %42.2 = %42.1
  goto BB43
BB75   <- [15]
  int$-           %75.0 = CastType           d     dn %15.0
  lgl$-           %75.1 = Eq                 d     %75.0, 0, elided   <lgl$->
  lgl$-           %75.2 = AsLogical                %75.1
  lgl$#-          %75.3 = Identical                %75.2, false
  void                    Branch                   %75.3 -> BB50 (if true) | BB16 (if false)
BB76   <- [15]
  void                    Nop                !     
  val?^ | miss    %76.1 = %15.0
  dr              %76.2 = Typecheck@0x5614ff1ab878[Type#21]
  goto BB13
BB50   <- [75]
  void                    Nop                !     
  lgl$-           %50.1 = %75.2
  goto BB21
BB16   <- [75]
  val?^ | miss    %16.0 = LdVar              eR    length, e0.1
  lgl$#-          %16.1 = Identical                <blt length>, %16.0   <@?>
  void                    Branch                   %16.1 -> BB18 (if true) | BB17 (if false)
BB21   <- [50, 77]
  lgl$-           %21.0 = Phi                      %77.4:BB77, %50.1:BB50
  lgl$-           %21.1 = %21.0
  lgl$#-          %21.2 = CheckTrueFalse     e     %21.1
  void                    Branch                   %21.2 -> BB49 (if true) | BB24 (if false)
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    i, e0.1
  val?            %18.1 = Force!             !v    %18.0, e0.1   <val?_>
  lgl$#-          %18.2 = IsType                   %18.1 isA val?+
  void                    Branch                   %18.2 -> BB77 (if true) | BB78 (if false)
BB17   <- [16]
  (cls|spec|blt)  %17.0 = LdFun              !v    length, e0.1
  fs              %17.1 = FrameState         R     0x56150466bb50+552: [%75.2, %17.0], env=e0.1
  void                    Deopt              !v    %17.1, DeadCall@0x5614ff1ab878[Call#8], %17.0   !
BB49   <- [21]
  void                    Visible            v     
  str$#-          %49.1 = "'i' must be empty when the object length is zero"
  goto BB41
BB24   <- [21]
  val?^ | miss    %24.0 = LdVar              eR    any, e0.1
  lgl$#-          %24.1 = Identical                <blt any>, %24.0   <true>
  void                    Branch                   %24.1 -> BB79 (if true) | BB80 (if false)
BB77   <- [18]
  val?+           %77.0 = CastType           d     dn %18.1   <val?_>
  real$-          %77.1 = CallSafeBuiltin    wed   length(%77.0)    <val?_>
  lgl$-           %77.2 = AsLogical                %77.1
  lgl$-           %77.3 = LAnd                     %75.2, %77.2
  lgl$-           %77.4 = %77.3
  goto BB21
BB78   <- [18]
  fs              %78.0 = FrameState         R     0x56150466bb50+593: [%75.2, <blt length>, %18.1], env=e0.1
  void                    Deopt              !v    %78.0, Typecheck@0x5614ff1ab878[Type#24], %18.1   !
BB41   <- [49, 40]
  (lgl|str)$#-    %41.0 = Phi                      %40.2:BB40, %49.1:BB49
  (lgl|str)$#-    %41.1 = %41.0
  (lgl|str)$#-    %41.2 = %41.1
  goto BB42
BB79   <- [24]
  val?^ | miss    %79.0 = LdVar              eR    i, e0.1
  lgl$#-          %79.1 = IsType                   %79.0 isA val?~- | miss
  void                    Branch                   %79.1 -> BB81 (if true) | BB82 (if false)
BB80   <- [24]
  void                    Nop                !     
  lgl$#-          %80.1 = %24.1
  dr              %80.2 = DeadBranchReached@0x5614ff1ab878[Test#5]
  goto BB22
BB81   <- [79]
  val?~- | miss   %81.0 = CastType           d     dn %79.0
  val?-           %81.1 = Force!<value>            %81.0,    <(int|real)->
  val?^ | miss    %81.2 = LdVar              eR    n, e0.1
  lgl$#-          %81.3 = IsType                   %81.2 isA int$-
  void                    Branch                   %81.3 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  void                    Nop                !     
  val?^ | miss    %82.1 = %79.0
  dr              %82.2 = Typecheck@0x5614ff1ab878[Type#29]
  goto BB22
BB22   <- [80, 82, 84]
  val?^ | miss    %22.0 = Phi                      %80.1:BB80, %82.1:BB82, %84.1:BB84
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %80.2:BB80, %82.2:BB82, %84.2:BB84
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x56150466bb50+622: [%21.1], env=e0.1
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB83   <- [81]
  int$-           %83.0 = CastType           d     dn %81.2
  lgl-            %83.1 = Gt                 wed   %81.1, %83.0, elided   <lgl->
  val?            %83.2 = CallBuiltin        !v    any(%83.1) e0.1   <lgl$->
  lgl$#-          %83.3 = IsType                   %83.2 isA lgl$-
  void                    Branch                   %83.3 -> BB85 (if true) | BB86 (if false)
BB84   <- [81]
  void                    Nop                !     
  val?^ | miss    %84.1 = %81.2
  dr              %84.2 = Typecheck@0x5614ff1ab878[Type#30]
  goto BB22
BB85   <- [83]
  lgl$-           %85.0 = CastType           d     dn %83.2
  lgl$#-          %85.1 = CheckTrueFalse     e     %85.0
  void                    Branch                   %85.1 -> BB48 (if true) | BB27 (if false)
BB86   <- [83]
  void                    Nop                !     
  val?            %86.1 = %83.2
  dr              %86.2 = Typecheck@0x5614ff1ab878[Type#32]
  goto BB25
BB48   <- [85]
  (cls|spec|blt)  %48.0 = LdFun              !v    sprintf, e0.1
  fs              %48.1 = FrameState         R     0x56150466bb50+833: [%48.0], env=e0.1
  void                    Deopt              !v    %48.1, DeadCall@0x5614ff1ab878[Call#11], %48.0   !
BB27   <- [85]
  val?^ | miss    %27.0 = LdVar              eR    is.unsorted, e0.1
  lgl$#-          %27.1 = Identical                %27.0, function(x, na.rm=FALSE, strictly=FALSE) <(rir|...
  void                    Branch                   %27.1 -> BB87 (if true) | BB88 (if false)
BB25   <- [86, 88]
  val?^ | miss    %25.0 = Phi                      %86.1:BB86, %88.1:BB88
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %86.2:BB86, %88.2:BB88
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x56150466bb50+739: [%83.2], env=e0.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB87   <- [27]
  prom-           %87.0 = MkArg                    unboundValue, validityMethod[0x5615061dc570]_p4, e0.1
  ct              %87.1 = PushContext        lCL   %87.0, missingArg, true, is.unsorted(i, strictly=TRUE), function(x, na.rm=FALSE, strictly=FALSE) <(rir|..., e0.1
  val?^           %87.2 = CastType                 up %87.0
  env             e87.3 = MkEnv              l     x=%87.2, na.rm(miss)=false, strictly=true, parent=R_BaseNamespace, context 1
  val?            %87.4 = Force!<lazy>       !vL   %87.2, e87.3   <(int|real)->
  lgl$#-          %87.5 = IsType                   %87.4 isA val?-
  void                    Branch                   %87.5 -> BB89 (if true) | BB90 (if false)
BB88   <- [27]
  void                    Nop                !     
  val?^ | miss    %88.1 = %27.0
  dr              %88.2 = CallTarget@0x5614ff1ab878[Call#10]
  goto BB25
BB89   <- [87]
  val?-           %89.0 = CastType           d     dn %87.4   <(int|real)->
  (int|real)$-    %89.1 = CallSafeBuiltin    wed   length(%89.0)    <int$->
  lgl$#-          %89.2 = IsType                   %89.1 isA int$-
  void                    Branch                   %89.2 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x56150466bb50+795: [], env=e0.1
  fs              %90.1 = FrameState         R     0x561505434810+69: [<blt length>, %87.4], env=e87.3, next=%90.0
  void                    Deopt              !v    %90.1, Typecheck@0x561505ef31b0[Type#1], %87.4   !
BB91   <- [89]
  int$-           %91.0 = CastType           d     dn %89.1
  lgl$-           %91.1 = Lte                d     %91.0, 1L, elided   <lgl$->
  lgl$#-          %91.2 = CheckTrueFalse     e     %91.1
  void                    Branch                   %91.2 -> BB47 (if true) | BB32 (if false)
BB92   <- [89]
  void                    Nop                !     
  (int|real)$-    %92.1 = %89.1
  dr              %92.2 = Typecheck@0x561505ef31b0[Type#2]
  goto BB30
BB47   <- [91]
  void                    Nop                !     
  lgl$#-          %47.1 = false
  goto BB36
BB32   <- [91]
  lgl$#-          %32.0 = IsType                   %87.2 isA int~-
  void                    Branch                   %32.0 -> BB93 (if true) | BB94 (if false)
BB30   <- [92, 94]
  val?^ | miss    %30.0 = Phi                      %92.1:BB92, %94.1:BB94
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %92.2:BB92, %94.2:BB94
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x56150466bb50+795: [], env=e0.1
  fs              %30.5 = FrameState         R     0x561505434810+91: [%89.1], env=e87.3, next=%30.4
  void                    Deopt              !v    %30.5, %30.3, %30.1   !
BB36   <- [47, 46, 35]
  val?            %36.0 = Phi                      %35.1:BB35, %46.1:BB46, %47.1:BB47
  val?            %36.1 = %36.0
  val?            %36.2 = PopContext         C     %36.1, %87.1   <lgl$->
  lgl$#-          %36.3 = IsType                   %36.2 isA lgl$-
  void                    Branch                   %36.3 -> BB95 (if true) | BB96 (if false)
BB93   <- [32]
  val+            %93.0 = CallSafeBuiltin    wed   anyNA(%89.0)    <lgl$->
  lgl$#-          %93.1 = IsType                   %93.0 isA lgl$-
  void                    Branch                   %93.1 -> BB97 (if true) | BB98 (if false)
BB94   <- [32]
  void                    Nop                !     
  val?^           %94.1 = %87.2
  dr              %94.2 = Typecheck@0x561505ef31b0[Type#6]
  goto BB30
BB95   <- [36]
  lgl$-           %95.0 = CastType           d     dn %36.2
  lgl$#-          %95.1 = CheckTrueFalse     e     %95.0
  void                    Branch                   %95.1 -> BB45 (if true) | BB39 (if false)
BB96   <- [36]
  fs              %96.0 = FrameState         R     0x56150466bb50+795: [%36.2], env=e0.1
  void                    Deopt              !v    %96.0, Typecheck@0x5614ff1ab878[Type#34], %36.2   !
BB97   <- [93]
  lgl$-           %97.0 = CastType           d     dn %93.0
  lgl$-           %97.1 = AsLogical                %97.0
  lgl$-           %97.2 = AsLogical                %97.1
  lgl$#-          %97.3 = CheckTrueFalse     e     %97.2
  void                    Branch                   %97.3 -> BB46 (if true) | BB35 (if false)
BB98   <- [93]
  fs              %98.0 = FrameState         R     0x56150466bb50+795: [], env=e0.1
  fs              %98.1 = FrameState         R     0x561505434810+239: [true, %93.0], env=e87.3, next=%98.0
  void                    Deopt              !v    %98.1, Typecheck@0x561505ef31b0[Type#7], %93.0   !
BB45   <- [95]
  void                    Visible            v     
  str$#-          %45.1 = "'i' must be sorted strictly increasingly"
  goto BB40
BB39   <- [95]
  void                    Visible            v     
  lgl$#-          %39.1 = true
  goto BB40
BB46   <- [97]
  void                    Nop                !     
  lgl$-           %46.1 = na-lgl
  goto BB36
BB35   <- [97]
  val?            %35.0 = CallBuiltin        !v    is.unsorted(%89.0, true) e87.3
  val?            %35.1 = %35.0
  goto BB36
BB40   <- [39, 45]
  (lgl|str)$#-    %40.0 = Phi                      %39.1:BB39, %45.1:BB45
  (lgl|str)$#-    %40.1 = %40.0
  (lgl|str)$#-    %40.2 = %40.1
  goto BB41
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    length, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(int|real)->
  void                    Return             l     %0.3

│ validityMethod[0x5615061dc570]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
