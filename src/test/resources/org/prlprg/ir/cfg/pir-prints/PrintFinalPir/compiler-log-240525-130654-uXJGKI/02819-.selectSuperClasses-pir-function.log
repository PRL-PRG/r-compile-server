
┌──────────────────────────────────────────────────────────────────────────────┐
│ .selectSuperClasses[0x5614faa206e0]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,Eager3,Eager4,NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl4,!Obj0,!Obj1,!Obj2,!Obj3,!Obj4│
│ Properties:                                                                  │
├────── Final PIR Version
.selectSuperClasses[0x5614faa206e0]
BB0
  val?~+          %0.0  = LdArg                    4
  val?~+          %0.1  = LdArg                    3
  val?~+          %0.2  = LdArg                    2
  val?~+          %0.3  = LdArg                    1
  val?~+          %0.4  = LdArg                    0
  env             e0.5  = MkEnv              l     ext=%0.4, dropVirtual=%0.3, namesOnly=%0.2, directOnly=%0.1, simpleOnly=%0.0, parent=<env 0x5614f8eae378>, context 1
  cls             %0.6  = MkCls                    addCond, e0.5
  cls             %0.7  = MkCls                    .selectSuperClasses>isVirtualExt@82, e0.5
  cls             %0.8  = MkCls                    .selectSuperClasses>F@515, e0.5
  void                    StVar              lW    addCond, %0.6, e0.5
  val+            %0.10 = Force<lazy>              %0.3,    <lgl$->
  lgl$#-          %0.11 = IsType                   %0.10 isA lgl$-
  void                    Branch                   %0.11 -> BB57 (if true) | BB58 (if false)
BB57   <- [0]
  lgl$-           %57.0 = CastType           d     dn %0.10
  lgl$#-          %57.1 = CheckTrueFalse     e     %57.0
  void                    Branch                   %57.1 -> BB4 (if true) | BB3 (if false)
BB58   <- [0]
  fs              %58.0 = FrameState         R     0x5614ff8d9560+25: [], env=e0.5
  void                    Deopt              !v    %58.0, Typecheck@0x5614fdc99c90[Type#1], %0.10
BB4   <- [57]
  void                    StVar              lW    isVirtualExt, %0.7, e0.5
  void                    StVar              lW    C, !(isVirtualExt(exti)), e0.5
  val+            %4.2  = Force!<lazy>             %0.1,    <lgl$->
  lgl$#-          %4.3  = IsType                   %4.2 isA lgl$-
  void                    Branch                   %4.3 -> BB59 (if true) | BB60 (if false)
BB3   <- [57]
  (cls|spec|blt)  %3.0  = LdFun              !v    expression, <env 0x5614f8eae378>
  fs              %3.1  = FrameState         R     0x5614ff8d9560+50: [%3.0], env=e0.5
  void                    Deopt              !v    %3.1, DeadCall@0x5614fdc99c90[Call#0], %3.0
BB59   <- [4]
  lgl$-           %59.0 = CastType           d     dn %4.2
  lgl$#-          %59.1 = CheckTrueFalse     e     %59.0
  void                    Branch                   %59.1 -> BB55 (if true) | BB7 (if false)
BB60   <- [4]
  void                    Nop                !     
  val+            %60.1 = %4.2
  dr              %60.2 = Typecheck@0x5614fdc99c90[Type#3]
  goto BB5
BB55   <- [59]
  fs              %55.0 = FrameState         R     0x5614ff8d9560+151: [%0.6], env=e0.5
  void                    Deopt              !v    %55.0, DeadCall@0x5614fdc99c90[Call#1], %0.6
BB7   <- [59]
  val+            %7.0  = Force!<lazy>             %0.0,    <lgl$->
  lgl$#-          %7.1  = IsType                   %7.0 isA lgl$-
  void                    Branch                   %7.1 -> BB61 (if true) | BB62 (if false)
BB5   <- [60, 62]
  val?^ | miss    %5.0  = Phi                      %60.1:BB60, %62.1:BB62
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %60.2:BB60, %62.2:BB62
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x5614ff8d9560+121: [], env=e0.5
  void                    Deopt              !v    %5.4, %5.3, %5.1
BB61   <- [7]
  lgl$-           %61.0 = CastType           d     dn %7.0
  lgl$#-          %61.1 = CheckTrueFalse     e     %61.0
  void                    Branch                   %61.1 -> BB47 (if true) | BB8 (if false)
BB62   <- [7]
  void                    Nop                !     
  val+            %62.1 = %7.0
  dr              %62.2 = Typecheck@0x5614fdc99c90[Type#6]
  goto BB5
BB47   <- [61]
  prom-           %47.0 = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p4 (!refl), e0.5
  ct              %47.1 = PushContext        lCL   @(exti, simple), %47.0, addCond(quote(@(exti, simple)), C), %0.6, e0.5
  val?^           %47.2 = CastType                 up %47.0
  val?^ | miss    %47.3 = LdVar              eR    length, <env 0x5614f8eae378>
  lgl$#-          %47.4 = Identical                <blt length>, %47.3   <true>
  void                    Branch                   %47.4 -> BB63 (if true) | BB64 (if false)
BB8   <- [61]
  void                    Nop                !     
  code#-          %8.1  = !(isVirtualExt(exti))
  goto BB9
BB63   <- [47]
  (int|real)$-    %63.0 = CallSafeBuiltin    wed   length(!(isVirtualExt(exti)))    <int$->
  lgl$#-          %63.1 = IsType                   %63.0 isA int$-
  void                    Branch                   %63.1 -> BB67 (if true) | BB68 (if false)
BB64   <- [47]
  fs              %64.0 = FrameState         R     0x5614ff8d9560+259: [], env=e0.5
  env             e64.1 = (MkEnv)            l     xpr=@(exti, simple), prev=%47.2, parent=e0.5, context 1
  fs              %64.2 = FrameState         R     0x5615054b3c60+17: [<blt length>, %47.4], env=e64.1, next=%64.0
  void                    Deopt              !v    %64.2, DeadBranchReached@0x5614ff33aed8[Test#0], %47.4   !
BB9   <- [8, 53]
  val?            %9.0  = Phi                      %53.4:BB53, %8.1:BB8
  val?            %9.1  = %9.0
  val?^ | miss    %9.2  = LdVar              eR    length, e0.5
  lgl$#-          %9.3  = Identical                <blt length>, %9.2   <true>
  void                    Branch                   %9.3 -> BB65 (if true) | BB66 (if false)
BB67   <- [63]
  int$-           %67.0 = CastType           d     dn %63.0
  lgl$#-          %67.1 = CheckTrueFalse     e     %67.0
  env             e67.2 = MkEnv              l     xpr=@(exti, simple), prev=%47.2, parent=e0.5, context 1
  void                    Branch                   %67.1 -> BB54 (if true) | BB52 (if false)
BB68   <- [63]
  fs              %68.0 = FrameState         R     0x5614ff8d9560+259: [], env=e0.5
  env             e68.1 = (MkEnv)            l     xpr=@(exti, simple), prev=%47.2, parent=e0.5, context 1
  fs              %68.2 = FrameState         R     0x5615054b3c60+91: [%63.0], env=e68.1, next=%68.0
  void                    Deopt              !v    %68.2, Typecheck@0x5614ff33aed8[Type#2], %63.0   !
BB65   <- [9]
  val             %65.0 = ChkMissing         e     %9.1   <code->
  lgl$#-          %65.1 = IsType                   %65.0 isA val-
  void                    Branch                   %65.1 -> BB69 (if true) | BB70 (if false)
BB66   <- [9]
  void                    Nop                !     
  lgl$#-          %66.1 = %9.3
  dr              %66.2 = DeadBranchReached@0x5614fdc99c90[Test#0]
  goto BB10
BB54   <- [67]
  (cls|spec|blt)  %54.0 = LdFun              !v    substitute, <0x5614f88a6468>, <env 0x5614f8eae378>
  prom-           %54.1 = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p5, e67.2
  prom-           %54.2 = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p6, e67.2
  val?            %54.3 = Call               !v    %54.0(%54.1, %54.2) e67.2   <code->
  val?            %54.4 = %54.3
  goto BB53
BB52   <- [67]
  void                    Nop                !     
  code#-          %52.1 = @(exti, simple)
  goto BB53
BB69   <- [65]
  val-            %69.0 = CastType           d     dn %65.0   <code->
  (int|real)$-    %69.1 = CallSafeBuiltin    wed   length(%69.0)    <int$->
  lgl$#-          %69.2 = IsType                   %69.1 isA int$-
  void                    Branch                   %69.2 -> BB71 (if true) | BB72 (if false)
BB70   <- [65]
  void                    Nop                !     
  val             %70.1 = %65.0
  dr              %70.2 = Typecheck@0x5614fdc99c90[Type#10]
  goto BB10
BB10   <- [66, 70]
  val?^ | miss    %10.0 = Phi                      %66.1:BB66, %70.1:BB70
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %66.2:BB66, %70.2:BB70
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x5614ff8d9560+273: [], env=e0.5
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB53   <- [52, 54]
  val?            %53.0 = Phi                      %52.1:BB52, %54.4:BB54
  val?            %53.1 = %53.0
  val?            %53.2 = PopContext         C     %53.1, %47.1   <code->
  void                    StVar              lW    C, %53.2, e0.5
  val?            %53.4 = %53.2
  goto BB9
BB71   <- [69]
  int$-           %71.0 = CastType           d     dn %69.1
  lgl$#-          %71.1 = CheckTrueFalse     e     %71.0
  void                    Branch                   %71.1 -> BB23 (if true) | BB14 (if false)
BB72   <- [69]
  fs              %72.0 = FrameState         R     0x5614ff8d9560+364: [%69.1], env=e0.5
  void                    Deopt              !v    %72.0, Typecheck@0x5614fdc99c90[Type#11], %69.1   !
BB23   <- [71]
  void                    StVar              lW    F, %0.8, e0.5
  val?^ | miss    %23.1 = LdVar              eR    body<-, e0.5
  lgl$#-          %23.2 = Identical                %23.1, function(fun, envir=environment(fun), value) <|...
  void                    Branch                   %23.2 -> BB73 (if true) | BB74 (if false)
BB14   <- [71]
  val?^ | miss    %14.0 = LdVar              eR    namesOnly, e0.5
  val?            %14.1 = Force!             !v    %14.0, e0.5   <val?_>
  lgl$#-          %14.2 = CheckTrueFalse     we    %14.1
  void                    Branch                   %14.2 -> BB18 (if true) | BB15 (if false)
BB73   <- [23]
  lgl$#-          %73.0 = IsType                   %0.8 isA val?~- | miss
  void                    Branch                   %73.0 -> BB75 (if true) | BB76 (if false)
BB74   <- [23]
  void                    Nop                !     
  val?^ | miss    %74.1 = %23.1
  dr              %74.2 = CallTarget@0x5614fdc99c90[Call#5]
  goto BB24
BB18   <- [14]
  val?^ | miss    %18.0 = LdVar              eR    names, e0.5
  lgl$#-          %18.1 = Identical                <blt names>, %18.0   <@?>
  void                    Branch                   %18.1 -> BB20 (if true) | BB19 (if false)
BB15   <- [14]
  val?^ | miss    %15.0 = LdVar              eR    ext, e0.5
  void                    Visible            v     
  val?            %15.2 = Force!             !     %15.0, e0.5   <val?_>
  val?            %15.3 = %15.2
  goto BB16
BB75   <- [73]
  cls-            %75.0 = CastType           d     dn %0.8
  val?            %75.1 = StaticCall         !v    body<-[0x5614fc0891d0](%75.0, missingArg, %69.0) { 0 2n } e0.5
  void                    StVar              lW    F, %75.1, e0.5
  val?^ | miss    %75.3 = LdVar              eR    namesOnly, e0.5
  val?            %75.4 = Force!<lazy>       !v    %75.3, e0.5   <lgl$->
  lgl$#-          %75.5 = CheckTrueFalse     we    %75.4
  void                    Branch                   %75.5 -> BB44 (if true) | BB28 (if false)
BB76   <- [73]
  void                    Nop                !     
  cls             %76.1 = %0.8
  dr              %76.2 = Typecheck@0x5614fdc99c90[Type#18]
  goto BB24
BB24   <- [74, 76]
  val?^ | miss    %24.0 = Phi                      %74.1:BB74, %76.1:BB76
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %74.2:BB74, %76.2:BB76
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x5614ff8d9560+540: [], env=e0.5
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB20   <- [18]
  val?^ | miss    %20.0 = LdVar              eR    ext, e0.5
  val?            %20.1 = Force!             !v    %20.0, e0.5   <val?_>
  lgl$#-          %20.2 = IsType                   %20.1 isA val?+
  void                    Branch                   %20.2 -> BB77 (if true) | BB78 (if false)
BB19   <- [18]
  (cls|spec|blt)  %19.0 = LdFun              !v    names, e0.5
  fs              %19.1 = FrameState         R     0x5614ff8d9560+442: [%19.0], env=e0.5
  void                    Deopt              !v    %19.1, DeadCall@0x5614fdc99c90[Call#4], %19.0   !
BB16   <- [15, 77]
  val?            %16.0 = Phi                      %15.3:BB15, %77.2:BB77
  val?            %16.1 = %16.0
  val?            %16.2 = %16.1
  goto BB17
BB44   <- [75]
  val?^ | miss    %44.0 = LdVar              eR    names, e0.5
  lgl$#-          %44.1 = Identical                <blt names>, %44.0   <true>
  void                    Branch                   %44.1 -> BB79 (if true) | BB80 (if false)
BB28   <- [75]
  val?^ | miss    %28.0 = LdVar              eR    ext, e0.5
  val?            %28.1 = Force!             !v    %28.0, e0.5   <val?_>
  val?            %28.2 = %28.1
  goto BB29
BB77   <- [20]
  val?+           %77.0 = CastType           d     dn %20.1   <val?_>
  val+            %77.1 = CallSafeBuiltin    vwed  names(%77.0)    <val?_>
  val+            %77.2 = %77.1
  goto BB16
BB78   <- [20]
  fs              %78.0 = FrameState         R     0x5614ff8d9560+483: [<blt names>, %20.1], env=e0.5
  void                    Deopt              !v    %78.0, Typecheck@0x5614fdc99c90[Type#15], %20.1   !
BB17   <- [16, 41]
  val?            %17.0 = Phi                      %16.2:BB16, %41.6:BB41
  val?            %17.1 = %17.0
  void                    Return             l     %17.1
BB79   <- [44]
  val?^ | miss    %79.0 = LdVar              eR    ext, e0.5
  val?            %79.1 = Force!<lazy>       !v    %79.0, e0.5   <vec+>
  lgl$#-          %79.2 = IsType                   %79.1 isA val?+
  void                    Branch                   %79.2 -> BB83 (if true) | BB84 (if false)
BB80   <- [44]
  fs              %80.0 = FrameState         R     0x5614ff8d9560+637: [%75.5], env=e0.5
  void                    Deopt              !v    %80.0, DeadBranchReached@0x5614fdc99c90[Test#2], %44.1   !
BB29   <- [28, 83]
  val?            %29.0 = Phi                      %28.2:BB28, %83.2:BB83
  val?            %29.1 = %29.0
  lgl$#-          %29.2 = IsType                   %29.1 isA val+   <true>
  void                    Branch                   %29.2 -> BB81 (if true) | BB82 (if false)
BB83   <- [79]
  val?+           %83.0 = CastType           d     dn %79.1   <vec+>
  val+            %83.1 = CallSafeBuiltin    wed   names(%83.0)    <str->
  val+            %83.2 = %83.1
  goto BB29
BB84   <- [79]
  fs              %84.0 = FrameState         R     0x5614ff8d9560+730: [<blt names>, %79.1], env=e0.5
  void                    Deopt              !v    %84.0, Typecheck@0x5614fdc99c90[Type#22], %79.1   !
BB81   <- [29]
  val?^ | miss    %81.0 = LdVar              eR    vapply, e0.5
  lgl$#-          %81.1 = Identical                %81.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Branch                   %81.1 -> BB85 (if true) | BB86 (if false)
BB82   <- [29]
  void                    Nop                !     
  lgl$#-          %82.1 = %29.2
  dr              %82.2 = DeadBranchReached@0x5614fdc99c90[Test#3]
  goto BB30
BB85   <- [81]
  prom-           %85.0 = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p1, e0.5
  prom-           %85.1 = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p2, e0.5
  ct              %85.2 = PushContext        lCL   %85.0, %85.1, na-lgl, missingArg, false, vapply(ext, F, NA, USE.NAMES=FALSE), function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|..., e0.5
  val?^           %85.3 = CastType                 up %85.1
  val?^           %85.4 = CastType                 up %85.0
  env             e85.5 = MkEnv              l     X=%85.4, FUN=%85.3, FUN.VALUE=na-lgl, ...(miss)=missingArg, USE.NAMES=false, parent=R_BaseNamespace, context 1
  prom-           %85.6 = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p9, e85.5
  val?            %85.7 = StaticCall         !v    match.fun[0x5614fe1354e0](%85.6) e85.5   <val?->
  void                    StVar              lW    FUN, %85.7, e85.5
  val?^ | miss    %85.9 = LdVar              eR    is.vector, e85.5
  lgl$#-          %85.10 = Identical                %85.9, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %85.10 -> BB87 (if true) | BB88 (if false)
BB86   <- [81]
  void                    Nop                !     
  val?^ | miss    %86.1 = %81.0
  dr              %86.2 = CallTarget@0x5614fdc99c90[Call#8]
  goto BB30
BB30   <- [82, 86]
  val?^ | miss    %30.0 = Phi                      %82.1:BB82, %86.1:BB86
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %82.2:BB82, %86.2:BB86
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x5614ff8d9560+757: [%29.1], env=e0.5
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB87   <- [85]
  val?^ | miss    %87.0 = LdVar              eR    X, e85.5
  val?            %87.1 = Force!<lazy>       !v    %87.0, e85.5   <val?>
  lgl$#-          %87.2 = CallSafeBuiltin    wed   is.vector(%87.1, "any")    <lgl$->
  lgl$#-          %87.3 = Not                d     %87.2, elided
  void                    Branch                   %87.2 -> BB43 (if true) | BB36 (if false)
BB88   <- [85]
  fs              %88.0 = FrameState         R     0x5614ff8d9560+852: [%29.1], env=e0.5
  fs              %88.1 = FrameState         R     0x5614fa849000+46: [], env=e85.5, next=%88.0
  void                    Deopt              !v    %88.1, CallTarget@0x5614fa864020[Call#1], %85.9   !
BB43   <- [87]
  val?^ | miss    %43.0 = LdVar              eR    is.object, e85.5
  lgl$#-          %43.1 = Identical                <blt is.object>, %43.0   <true>
  void                    Branch                   %43.1 -> BB89 (if true) | BB90 (if false)
BB36   <- [87]
  void                    Nop                !     
  lgl$#-          %36.1 = %87.3
  goto BB37
BB89   <- [43]
  val?^ | miss    %89.0 = LdVar              eR    X, e85.5
  val?            %89.1 = Force!<wrapped>    !v    %89.0, e85.5   <val?+>
  lgl$#-          %89.2 = CallSafeBuiltin    wed   is.object(%89.1)    <lgl$->
  lgl$-           %89.3 = LOr                      %87.3, %89.2
  lgl$-           %89.4 = %89.3
  goto BB37
BB90   <- [43]
  fs              %90.0 = FrameState         R     0x5614ff8d9560+852: [%29.1], env=e0.5
  fs              %90.1 = FrameState         R     0x5614fa849000+78: [], env=e85.5, next=%90.0
  prom-           %90.2 = MkArg                    %87.1, .selectSuperClasses[0x5614faa206e0]_p12 (!refl), e85.5
  val?~           %90.3 = CastType                 up %90.2
  env             e90.4 = (MkEnv)            l     mode(miss)="any", x=%90.3, parent=R_BaseNamespace, context 0
  fs              %90.5 = FrameState         R     0x5614fa748820+41: [%87.2], env=e90.4, next=%90.1
  void                    Deopt              !v    %90.5, DeadBranchReached@0x5614fa864020[Test#0], %43.1   !
BB37   <- [36, 89]
  lgl$-           %37.0 = Phi                      %89.4:BB89, %36.1:BB36
  lgl$-           %37.1 = %37.0
  lgl$#-          %37.2 = CheckTrueFalse     e     %37.1
  void                    Branch                   %37.2 -> BB42 (if true) | BB40 (if false)
BB42   <- [37]
  val?^ | miss    %42.0 = LdVar              eR    as.list, e85.5
  lgl$#-          %42.1 = Identical                %42.0, function(x, ...) <(rir::DispatchTable*)0x5614f|...
  void                    Branch                   %42.1 -> BB91 (if true) | BB92 (if false)
BB40   <- [37]
  void                    Nop                !     
  goto BB41
BB91   <- [42]
  val?^ | miss    %91.0 = LdVar              eR    X, e85.5
  val?            %91.1 = Force!<wrapped>    !v    %91.0, e85.5   <vec>
  val?            %91.2 = StaticCall         !v    as.list[0x5614faa1d150](%91.1) { 0 } e85.5   <vec>
  void                    StVar              lW    X, %91.2, e85.5
  goto BB41
BB92   <- [42]
  fs              %92.0 = FrameState         R     0x5614ff8d9560+852: [%29.1], env=e0.5
  fs              %92.1 = FrameState         R     0x5614fa849000+189: [%37.1], env=e85.5, next=%92.0
  void                    Deopt              !v    %92.1, CallTarget@0x5614fa864020[Call#3], %42.0   !
BB41   <- [40, 91]
  (cls|spec|blt)  %41.0 = LdFun              !v    .Internal, <0x5614f88a6698>, e85.5
  prom-           %41.1 = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p13, e85.5
  val?            %41.2 = Call               !v    %41.0(%41.1) e85.5   <val?+>
  val?            %41.3 = PopContext         C     %41.2, %85.2   <lgl->
  val?            %41.4 = Extract1_1D        !v    %29.1, %41.3, e0.5   <str->
  void                    Visible            v     
  val?            %41.6 = %41.4
  goto BB17
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ext, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    F, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <code->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    P, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  lgl$-           %0.4  = AsLogical          e     %0.3
  lgl$#-          %0.5  = Identical                %0.4, false
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  lgl$-           %2.1  = %0.4
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    N, e0.0
  void                    Visible            v     
  val?            %4.2  = Force              !     %4.0, e0.0   <val?_>
  lgl$-           %4.3  = AsLogical          e     %4.2
  lgl$-           %4.4  = LAnd                     %0.4, %4.3
  lgl$-           %4.5  = %4.4
  goto BB3
BB3   <- [2, 4]
  lgl$-           %3.0  = Phi                      %4.5:BB4, %2.1:BB2
  lgl$-           %3.1  = %3.0
  void                    Return             l     %3.1
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p7, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p8, e0.0
  val?            %0.4  = NamedCall          !     %0.1(P=%0.2, N=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    xpr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p14, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p15, e0.0
  prom-           %0.4  = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p16, e0.0
  prom-           %0.5  = MkArg                    unboundValue, .selectSuperClasses[0x5614faa206e0]_p17, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ .selectSuperClasses[0x5614faa206e0]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
