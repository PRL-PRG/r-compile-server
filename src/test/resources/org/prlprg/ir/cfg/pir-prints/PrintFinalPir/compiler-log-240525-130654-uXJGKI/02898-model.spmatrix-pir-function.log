
┌──────────────────────────────────────────────────────────────────────────────┐
│ model.spmatrix[0x5615050e49e0]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1                    │
│ Properties:                                                                  │
├────── Final PIR Version
model.spmatrix[0x5615050e49e0]
BB0
  val?^           %0.0  = LdArg                    6
  val?^           %0.1  = LdArg                    5
  val?^           %0.2  = LdArg                    4
  val?^           %0.3  = LdArg                    3
  val?^           %0.4  = LdArg                    2
  val?^           %0.5  = LdArg                    1
  val?^           %0.6  = LdArg                    0
  env             e0.7  = MkEnv              l     trms=%0.6, mf=%0.5, transpose=%0.4, drop.unused.levels=%0.3, row.names=%0.2, sep=%0.1, verbose=%0.0, parent=<env 0x5614fad267d8>, context 1
  cls             %0.8  = MkCls                    model.spmatrix>getR@5941, e0.7
  val?^ | miss    %0.9  = LdVar              eR    stopifnot, <env 0x5614fad267d8>
  lgl$#-          %0.10 = Identical                %0.9, function(..., exprs, exprObject, local=TRUE) <|...
  void                    Branch                   %0.10 -> BB333 (if true) | BB334 (if false)
BB333   <- [0]
  prom-           %333.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p0, e0.7
  val?            %333.1 = Call               !v    function(..., exprs, exprObject, local=TRUE) <|...(%333.0) e0.7
  val?^ | miss    %333.2 = LdVar              eR    nrow, e0.7
  lgl$#-          %333.3 = Identical                %333.2, function(x) <(rir::DispatchTable*)0x5614faf139|...
  void                    Branch                   %333.3 -> BB335 (if true) | BB336 (if false)
BB334   <- [0]
  fs              %334.0 = FrameState         R     0x5615051e76a0+0: [], env=e0.7
  void                    Deopt              !v    %334.0, CallTarget@0x5614f925d5d0[Call#0], %0.9
BB335   <- [333]
  prom-           %335.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p2, e0.7
  ct              %335.1 = PushContext        lCL   %335.0, nrow(mf), function(x) <(rir::DispatchTable*)0x5614faf139|..., e0.7
  val?^           %335.2 = CastType                 up %335.0
  env             e335.3 = MkEnv              l     x=%335.2, parent=R_BaseNamespace, context 1
  val?            %335.4 = Force!<lazy>       !vL   %335.2, e335.3   <val?>
  val?            %335.5 = CallBuiltin        !v    dim(%335.4) e335.3   <int->
  lgl$#-          %335.6 = IsType                   %335.5 isA val+   <true>
  lgl$#-          %335.7 = IsType                   %335.5 isA int-
  void                    Branch                   %335.6 -> BB337 (if true) | BB338 (if false)
BB336   <- [333]
  fs              %336.0 = FrameState         R     0x5615051e76a0+32: [%333.1], env=e0.7
  void                    Deopt              !v    %336.0, CallTarget@0x5614f925d5d0[Call#2], %333.2   !
BB337   <- [335]
  void                    Branch                   %335.7 -> BB339 (if true) | BB340 (if false)
BB338   <- [335]
  void                    Nop                !     
  lgl$#-          %338.1 = %335.6
  dr              %338.2 = DeadBranchReached@0x5614fbc29098[Test#1]
  goto BB5
BB339   <- [337]
  int-            %339.0 = CastType           d     dn %335.5
  int$-           %339.1 = Extract1_1D        wed   %339.0, 1L, elided   <int$->
  val?            %339.2 = PopContext         C     %339.1, %335.1   <int$->
  lgl$#-          %339.3 = IsType                   %339.2 isA int$-
  void                    Branch                   %339.3 -> BB341 (if true) | BB342 (if false)
BB340   <- [337]
  void                    Nop                !     
  val?            %340.1 = %335.5
  dr              %340.2 = Typecheck@0x5614fbc29098[Type#2]
  goto BB5
BB5   <- [338, 340]
  val?^ | miss    %5.0  = Phi                      %338.1:BB338, %340.1:BB340
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %338.2:BB338, %340.2:BB340
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x5615051e76a0+65: [], env=e0.7
  fs              %5.5  = FrameState         R     0x5614fa7980b0+91: [%335.5], env=e335.3, next=%5.4
  void                    Deopt              !v    %5.5, %5.3, %5.1   !
BB341   <- [339]
  int$-           %341.0 = CastType           d     dn %339.2
  void                    StVar              lW    n, %341.0, e0.7
  val?^ | miss    %341.2 = LdVar              eR    row.names, e0.7
  val?            %341.3 = Force!<lazy>       !v    %341.2, e0.7   <lgl$->
  lgl$#-          %341.4 = CheckTrueFalse     we    %341.3
  void                    Branch                   %341.4 -> BB331 (if true) | BB9 (if false)
BB342   <- [339]
  fs              %342.0 = FrameState         R     0x5615051e76a0+65: [%339.2], env=e0.7
  void                    Deopt              !v    %342.0, Typecheck@0x5614f925d5d0[Type#3], %339.2   !
BB331   <- [341]
  (cls|spec|blt)  %331.0 = LdFun              !v    row.names, e0.7
  prom-           %331.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p68, e0.7
  val?            %331.2 = Call               !v    %331.0(%331.1) e0.7   <str->
  void                    StVar              lW    rnames, %331.2, e0.7
  goto BB10
BB9   <- [341]
  void                    Nop                !     
  goto BB10
BB10   <- [9, 331]
  val?^ | miss    %10.0 = LdVar              eR    names, e0.7
  lgl$#-          %10.1 = Identical                <blt names>, %10.0   <true>
  void                    Branch                   %10.1 -> BB343 (if true) | BB344 (if false)
BB343   <- [10]
  val?^ | miss    %343.0 = LdVar              eR    unclass, e0.7
  lgl$#-          %343.1 = Identical                <blt unclass>, %343.0   <true>
  void                    Branch                   %343.1 -> BB345 (if true) | BB346 (if false)
BB344   <- [10]
  void                    Nop                !     
  lgl$#-          %344.1 = %10.1
  dr              %344.2 = DeadBranchReached@0x5614f925d5d0[Test#0]
  goto BB11
BB345   <- [343]
  val?^ | miss    %345.0 = LdVar              eR    mf, e0.7
  val?            %345.1 = Force!<wrapped>    !v    %345.0, e0.7   <vec>
  val?            %345.2 = CallBuiltin        !v    unclass(%345.1) e0.7   <vec+>
  void                    StVar              lW    mf, %345.2, e0.7
  lgl$#-          %345.4 = IsType                   %345.2 isA val?+
  void                    Branch                   %345.4 -> BB347 (if true) | BB348 (if false)
BB346   <- [343]
  void                    Nop                !     
  lgl$#-          %346.1 = %343.1
  dr              %346.2 = DeadBranchReached@0x5614f925d5d0[Test#1]
  goto BB11
BB11   <- [344, 346]
  val?^ | miss    %11.0 = Phi                      %344.1:BB344, %346.1:BB346
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %344.2:BB344, %346.2:BB346
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x5615051e76a0+150: [], env=e0.7
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB347   <- [345]
  val?+           %347.0 = CastType           d     dn %345.2   <vec+>
  val+            %347.1 = CallSafeBuiltin    wed   names(%347.0)    <str->
  void                    StVar              lW    fnames, %347.1, e0.7
  val?^ | miss    %347.3 = LdVar              eR    list, e0.7
  lgl$#-          %347.4 = Identical                <blt list>, %347.3   <true>
  void                    Branch                   %347.4 -> BB349 (if true) | BB350 (if false)
BB348   <- [345]
  fs              %348.0 = FrameState         R     0x5615051e76a0+317: [<blt names>, %345.2], env=e0.7
  void                    Deopt              !v    %348.0, Typecheck@0x5614f925d5d0[Type#11], %345.2   !
BB349   <- [347]
  val?            %349.0 = NamedCall          !v    <blt list>(names=%347.1) e0.7   <vec$+>
  (cls|spec|blt)  %349.1 = LdFun              !v    attributes<-, <0x5614f88a7128>, e0.7
  val?^ | miss    %349.2 = LdVar              eR    mf, e0.7
  val?            %349.3 = Force!<value>      !v    %349.2, e0.7   <vec+>
  val?            %349.4 = NamedCall          !v    %349.1(%349.3, value=%349.0) e0.7
  void                    StVar              lW    mf, %349.4, e0.7
  val?^ | miss    %349.6 = LdVar              eR    length, e0.7
  lgl$#-          %349.7 = Identical                <blt length>, %349.6   <true>
  void                    Branch                   %349.7 -> BB351 (if true) | BB352 (if false)
BB350   <- [347]
  fs              %350.0 = FrameState         R     0x5615051e76a0+348: [], env=e0.7
  void                    Deopt              !v    %350.0, DeadBranchReached@0x5614f925d5d0[Test#2], %347.4   !
BB351   <- [349]
  val?^ | miss    %351.0 = LdVar              eR    attr, e0.7
  lgl$#-          %351.1 = Identical                <blt attr>, %351.0   <true>
  void                    Branch                   %351.1 -> BB353 (if true) | BB354 (if false)
BB352   <- [349]
  void                    Nop                !     
  lgl$#-          %352.1 = %349.7
  dr              %352.2 = DeadBranchReached@0x5614f925d5d0[Test#3]
  goto BB17
BB353   <- [351]
  val?^ | miss    %353.0 = LdVar              eR    trms, e0.7
  val?            %353.1 = Force!<lazy>       !v    %353.0, e0.7   <code>
  val?            %353.2 = CallBuiltin        !v    attr(%353.1, "factors") e0.7   <int+>
  void                    StVar              lW    factorPattern, %353.2, e0.7
  lgl$#-          %353.4 = IsType                   %353.2 isA int+
  void                    Branch                   %353.4 -> BB355 (if true) | BB356 (if false)
BB354   <- [351]
  void                    Nop                !     
  lgl$#-          %354.1 = %351.1
  dr              %354.2 = DeadBranchReached@0x5614f925d5d0[Test#4]
  goto BB17
BB17   <- [352, 354]
  val?^ | miss    %17.0 = Phi                      %352.1:BB352, %354.1:BB354
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %352.2:BB352, %354.2:BB354
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x5615051e76a0+520: [], env=e0.7
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB355   <- [353]
  int+            %355.0 = CastType           d     dn %353.2
  (int|real)$-    %355.1 = CallSafeBuiltin    wed   length(%355.0)    <int$->
  lgl$#-          %355.2 = IsType                   %355.1 isA int$-
  void                    Branch                   %355.2 -> BB357 (if true) | BB358 (if false)
BB356   <- [353]
  fs              %356.0 = FrameState         R     0x5615051e76a0+698: [<blt length>, %353.2], env=e0.7
  void                    Deopt              !v    %356.0, Typecheck@0x5614f925d5d0[Type#21], %353.2   !
BB357   <- [355]
  int$-           %357.0 = CastType           d     dn %355.1
  lgl$#-          %357.1 = CheckTrueFalse     e     %357.0
  void                    Branch                   %357.1 -> BB322 (if true) | BB23 (if false)
BB358   <- [355]
  void                    Nop                !     
  (int|real)$-    %358.1 = %355.1
  dr              %358.2 = Typecheck@0x5614f925d5d0[Type#22]
  goto BB21
BB322   <- [357]
  val?^ | miss    %322.0 = LdVar              eR    dim, e0.7
  lgl$#-          %322.1 = Identical                <blt dim>, %322.0   <true>
  void                    Branch                   %322.1 -> BB359 (if true) | BB360 (if false)
BB23   <- [357]
  void                    StVar              lW    nTrm, 0L, e0.7
  void                    StVar              lW    nVar, 0L, e0.7
  val?^ | miss    %23.2 = LdVar              eR    character, e0.7
  lgl$#-          %23.3 = Identical                %23.2, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %23.3 -> BB365 (if true) | BB366 (if false)
BB21   <- [358, 360]
  val?^ | miss    %21.0 = Phi                      %358.1:BB358, %360.1:BB360
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %358.2:BB358, %360.2:BB360
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x5615051e76a0+715: [%355.1], env=e0.7
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB359   <- [322]
  val+            %359.0 = CallSafeBuiltin    wed   dim(%355.0)    <int->
  void                    StVar              lW    d, %359.0, e0.7
  val?            %359.2 = Extract1_1D        wed   %359.0, 1, elided   <int$->
  lgl$#-          %359.3 = IsType                   %359.2 isA int$-
  void                    Branch                   %359.3 -> BB361 (if true) | BB362 (if false)
BB360   <- [322]
  void                    Nop                !     
  lgl$#-          %360.1 = %322.1
  dr              %360.2 = DeadBranchReached@0x5614f925d5d0[Test#5]
  goto BB21
BB365   <- [23]
  str-            %365.0 = CallSafeBuiltin    wed   vector("character", 0)    <str->
  void                    StVar              lW    Names, %365.0, e0.7
  void                    StVar              lW    fnames, %365.0, e0.7
  goto BB26
BB366   <- [23]
  fs              %366.0 = FrameState         R     0x5615051e76a0+752: [], env=e0.7
  void                    Deopt              !v    %366.0, CallTarget@0x5614f925d5d0[Call#12], %23.2   !
BB361   <- [359]
  int$-           %361.0 = CastType           d     dn %359.2
  void                    StVar              lW    nVar, %361.0, e0.7
  lgl$#-          %361.2 = IsType                   %359.0 isA int-
  void                    Branch                   %361.2 -> BB363 (if true) | BB364 (if false)
BB362   <- [359]
  fs              %362.0 = FrameState         R     0x5615051e76a0+971: [%359.2], env=e0.7
  void                    Deopt              !v    %362.0, Typecheck@0x5614f925d5d0[Type#28], %359.2   !
BB26   <- [365, 373]
  val?^ | miss    %26.0 = LdVar              eR    stopifnot, e0.7
  lgl$#-          %26.1 = Identical                %26.0, function(..., exprs, exprObject, local=TRUE) <|...
  void                    Branch                   %26.1 -> BB369 (if true) | BB370 (if false)
BB363   <- [361]
  int-            %363.0 = CastType           d     dn %359.0
  int$-           %363.1 = Extract1_1D        wed   %363.0, 2, elided   <int$->
  void                    StVar              lW    nTrm, %363.1, e0.7
  val?^ | miss    %363.3 = LdVar              eR    dimnames, e0.7
  lgl$#-          %363.4 = Identical                <blt dimnames>, %363.3   <true>
  void                    Branch                   %363.4 -> BB367 (if true) | BB368 (if false)
BB364   <- [361]
  fs              %364.0 = FrameState         R     0x5615051e76a0+986: [], env=e0.7
  void                    Deopt              !v    %364.0, Typecheck@0x5614f925d5d0[Type#29], %359.0   !
BB369   <- [26]
  prom-           %369.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p4, e0.7
  val?            %369.1 = Call               !v    function(..., exprs, exprObject, local=TRUE) <|...(%369.0) e0.7
  val?^ | miss    %369.2 = LdVar              eR    verbose, e0.7
  val?            %369.3 = Force!<lazy>       !v    %369.2, e0.7   <lgl$->
  lgl$#-          %369.4 = CheckTrueFalse     we    %369.3
  void                    Branch                   %369.4 -> BB321 (if true) | BB31 (if false)
BB370   <- [26]
  fs              %370.0 = FrameState         R     0x5615051e76a0+1292: [], env=e0.7
  void                    Deopt              !v    %370.0, CallTarget@0x5614f925d5d0[Call#15], %26.0   !
BB367   <- [363]
  val?            %367.0 = CallBuiltin        !v    dimnames(%355.0) e0.7   <vec->
  void                    StVar              lW    n.fP, %367.0, e0.7
  lgl$#-          %367.2 = IsType                   %367.0 isA val+   <true>
  lgl$#-          %367.3 = IsType                   %367.0 isA val?-
  val             %367.4 = ChkMissing         e     %367.0
  void                    Branch                   %367.2 -> BB371 (if true) | BB372 (if false)
BB368   <- [363]
  fs              %368.0 = FrameState         R     0x5615051e76a0+1053: [], env=e0.7
  void                    Deopt              !v    %368.0, DeadBranchReached@0x5614f925d5d0[Test#8], %363.4   !
BB321   <- [369]
  (cls|spec|blt)  %321.0 = LdFun              !v    cat, e0.7
  fs              %321.1 = FrameState         R     0x5615051e76a0+1355: [%321.0], env=e0.7
  void                    Deopt              !v    %321.1, DeadCall@0x5614f925d5d0[Call#17], %321.0   !
BB31   <- [369]
  val?^ | miss    %31.0 = LdVar              eR    m, e0.7
  lgl$#-          %31.1 = IsType                   %31.0 isA int$-
  void                    Branch                   %31.1 -> BB375 (if true) | BB376 (if false)
BB371   <- [367]
  void                    Branch                   %367.3 -> BB373 (if true) | BB374 (if false)
BB372   <- [367]
  void                    Nop                !     
  lgl$#-          %372.1 = %367.2
  dr              %372.2 = DeadBranchReached@0x5614f925d5d0[Test#9]
  goto BB329
BB375   <- [31]
  int$-           %375.0 = CastType           d     dn %31.0
  val?^ | miss    %375.1 = LdVar              eR    nVar, e0.7
  lgl$#-          %375.2 = IsType                   %375.1 isA int$-
  void                    Branch                   %375.2 -> BB377 (if true) | BB378 (if false)
BB376   <- [31]
  void                    Nop                !     
  val?^ | miss    %376.1 = %31.0
  dr              %376.2 = Typecheck@0x5614f925d5d0[Type#48]
  goto BB29
BB373   <- [371]
  val?-           %373.0 = CastType           d     dn %367.0   <vec->
  val?            %373.1 = Extract2_1D        wed   %373.0, 1, elided   <str->
  void                    StVar              lW    fnames, %373.1, e0.7
  val?            %373.3 = Extract2_1D        wed   %373.0, 2, elided   <str->
  void                    StVar              lW    Names, %373.3, e0.7
  goto BB26
BB374   <- [371]
  void                    Nop                !     
  val?            %374.1 = %367.0
  dr              %374.2 = Typecheck@0x5614f925d5d0[Type#33]
  goto BB329
BB329   <- [372, 374]
  val?^ | miss    %329.0 = Phi                      %372.1:BB372, %374.1:BB374
  val?^ | miss    %329.1 = %329.0
  dr              %329.2 = Phi                      %372.2:BB372, %374.2:BB374
  dr              %329.3 = %329.2
  fs              %329.4 = FrameState         R     0x5615051e76a0+1158: [], env=e0.7
  void                    Deopt              !v    %329.4, %329.3, %329.1   !
BB377   <- [375]
  int$-           %377.0 = CastType           d     dn %375.1
  lgl$-           %377.1 = Gt                 d     %375.0, %377.0, elided   <lgl$->
  lgl$#-          %377.2 = CheckTrueFalse     e     %377.1
  void                    Branch                   %377.2 -> BB316 (if true) | BB32 (if false)
BB378   <- [375]
  void                    Nop                !     
  val?^ | miss    %378.1 = %375.1
  dr              %378.2 = Typecheck@0x5614f925d5d0[Type#49]
  goto BB29
BB29   <- [376, 378]
  val?^ | miss    %29.0 = Phi                      %376.1:BB376, %378.1:BB378
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %376.2:BB376, %378.2:BB378
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x5615051e76a0+1340: [%369.4], env=e0.7
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
BB316   <- [377]
  val?^ | miss    %316.0 = LdVar              eR    mf, e0.7
  val?            %316.1 = Force!<value>      !v    %316.0, e0.7   <vec$+>
  lgl$#-          %316.2 = IsType                   %316.1 isA val+   <true>
  void                    Branch                   %316.2 -> BB379 (if true) | BB380 (if false)
BB32   <- [377]
  void                    Nop                !     
  goto BB33
BB379   <- [316]
  val?^ | miss    %379.0 = LdVar              eR    seq_len, e0.7
  lgl$#-          %379.1 = Identical                <blt seq_len>, %379.0   <true>
  void                    Branch                   %379.1 -> BB381 (if true) | BB382 (if false)
BB380   <- [316]
  void                    Nop                !     
  lgl$#-          %380.1 = %316.2
  dr              %380.2 = DeadBranchReached@0x5614f925d5d0[Test#11]
  goto BB317
BB33   <- [32, 385]
  (cls|spec|blt)  %33.0 = LdFun              !v    stopifnot, <0x5614fb08ee38>, e0.7
  prom-           %33.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p6, e0.7
  val?            %33.2 = NamedCall          !v    %33.0(%33.1, allow.logical0=true) e0.7
  val?^ | miss    %33.3 = LdVar              eR    nVar, e0.7
  lgl$#-          %33.4 = IsType                   %33.3 isA int$-
  void                    Branch                   %33.4 -> BB387 (if true) | BB388 (if false)
BB381   <- [379]
  val?^ | miss    %381.0 = LdVar              eR    nVar, e0.7
  lgl$#-          %381.1 = IsType                   %381.0 isA int$-
  void                    Branch                   %381.1 -> BB383 (if true) | BB384 (if false)
BB382   <- [379]
  void                    Nop                !     
  lgl$#-          %382.1 = %379.1
  dr              %382.2 = DeadBranchReached@0x5614f925d5d0[Test#12]
  goto BB317
BB317   <- [380, 382, 384]
  val?^ | miss    %317.0 = Phi                      %380.1:BB380, %382.1:BB382, %384.1:BB384
  val?^ | miss    %317.1 = %317.0
  dr              %317.2 = Phi                      %380.2:BB380, %382.2:BB382, %384.2:BB384
  dr              %317.3 = %317.2
  fs              %317.4 = FrameState         R     0x5615051e76a0+1437: [%316.1], env=e0.7
  void                    Deopt              !v    %317.4, %317.3, %317.1   !
BB387   <- [33]
  int$-           %387.0 = CastType           d     dn %33.3
  lgl$-           %387.1 = Eq                 d     %387.0, 0, elided   <lgl$->
  void                    StVar              lW    noVar, %387.1, e0.7
  lgl$#-          %387.3 = CheckTrueFalse     e     %387.1
  void                    Branch                   %387.3 -> BB315 (if true) | BB38 (if false)
BB388   <- [33]
  fs              %388.0 = FrameState         R     0x5615051e76a0+1630: [%33.2], env=e0.7
  void                    Deopt              !v    %388.0, Typecheck@0x5614f925d5d0[Type#62], %33.3   !
BB383   <- [381]
  int$-           %383.0 = CastType           d     dn %381.0
  val+            %383.1 = CallSafeBuiltin    wed   seq_len(%383.0)    <int->
  lgl$#-          %383.2 = IsType                   %316.1 isA val?+
  void                    Branch                   %383.2 -> BB385 (if true) | BB386 (if false)
BB384   <- [381]
  void                    Nop                !     
  val?^ | miss    %384.1 = %381.0
  dr              %384.2 = Typecheck@0x5614f925d5d0[Type#55]
  goto BB317
BB315   <- [387]
  val?^ | miss    %315.0 = LdVar              eR    logical, e0.7
  lgl$#-          %315.1 = Identical                %315.0, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %315.1 -> BB389 (if true) | BB390 (if false)
BB38   <- [387]
  val?^ | miss    %38.0 = LdVar              eR    vapply, e0.7
  lgl$#-          %38.1 = Identical                %38.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Branch                   %38.1 -> BB391 (if true) | BB392 (if false)
BB385   <- [383]
  val?+           %385.0 = CastType           d     dn %316.1   <vec$+>
  val?            %385.1 = Extract1_1D        wed   %385.0, %383.1, elided   <vec+>
  void                    StVar              lW    mf, %385.1, e0.7
  goto BB33
BB386   <- [383]
  fs              %386.0 = FrameState         R     0x5615051e76a0+1564: [%316.1, %383.1], env=e0.7
  void                    Deopt              !v    %386.0, Typecheck@0x5614f925d5d0[Type#51], %316.1   !
BB389   <- [315]
  lgl-            %389.0 = CallSafeBuiltin    wed   vector("logical", 0)    <lgl->
  lgl-            %389.1 = %389.0
  goto BB49
BB390   <- [315]
  void                    Nop                !     
  val?^ | miss    %390.1 = %315.0
  dr              %390.2 = CallTarget@0x5614f925d5d0[Call#24]
  goto BB36
BB391   <- [38]
  prom-           %391.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p8, e0.7
  cls             %391.1 = MkCls                    model.spmatrix@Prom(9)0, e0.7
  prom-           %391.2 = MkArg                    %391.1, model.spmatrix[0x5615050e49e0]_p9 (!refl), e0.7
  ct              %391.3 = PushContext        lCL   %391.0, %391.2, na-lgl, vapply(mf, function(<lst .=R_MissingArg>, |(is|..., function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|..., e0.7
  cls~            %391.4 = CastType                 up %391.2
  val?^           %391.5 = CastType                 up %391.0
  env             e391.6 = MkEnv              l     X=%391.5, FUN=%391.4, FUN.VALUE=na-lgl, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %391.7 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p73 (!refl), e391.6
  val?            %391.8 = StaticCall         !v    match.fun[0x5615031a8a10](%391.7) e391.6   <val?->
  void                    StVar              lW    FUN, %391.8, e391.6
  val?^ | miss    %391.10 = LdVar              eR    is.vector, e391.6
  lgl$#-          %391.11 = Identical                %391.10, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %391.11 -> BB393 (if true) | BB394 (if false)
BB392   <- [38]
  void                    Nop                !     
  val?^ | miss    %392.1 = %38.0
  dr              %392.2 = CallTarget@0x5614f925d5d0[Call#23]
  goto BB36
BB49   <- [48, 389]
  val?            %49.0 = Phi                      %48.4:BB48, %389.1:BB389
  val?            %49.1 = %49.0
  void                    StVar              lW    is.f, %49.1, e0.7
  val?^ | miss    %49.3 = LdVar              eR    which, e0.7
  lgl$#-          %49.4 = Identical                %49.3, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %49.4 -> BB397 (if true) | BB398 (if false)
BB36   <- [390, 392]
  val?^ | miss    %36.0 = Phi                      %390.1:BB390, %392.1:BB392
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %390.2:BB390, %392.2:BB392
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x5615051e76a0+1666: [], env=e0.7
  void                    Deopt              !v    %36.4, %36.3, %36.1   !
BB393   <- [391]
  val?^ | miss    %393.0 = LdVar              eR    X, e391.6
  val?            %393.1 = Force!<lazy>       !v    %393.0, e391.6   <val?>
  lgl$#-          %393.2 = CallSafeBuiltin    wed   is.vector(%393.1, "any")    <lgl$->
  lgl$#-          %393.3 = Not                d     %393.2, elided
  void                    Branch                   %393.2 -> BB314 (if true) | BB43 (if false)
BB394   <- [391]
  fs              %394.0 = FrameState         R     0x5615051e76a0+1728: [], env=e0.7
  fs              %394.1 = FrameState         R     0x5614fa849000+46: [], env=e391.6, next=%394.0
  void                    Deopt              !v    %394.1, CallTarget@0x5614fa864020[Call#1], %391.10   !
BB397   <- [49]
  prom-           %397.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p10 (!refl), e0.7
  val?            %397.1 = StaticCall         !v    which[0x5614f9272160](%397.0) e0.7   <int+>
  void                    StVar              lW    indF, %397.1, e0.7
  val?^ | miss    %397.3 = LdVar              eR    verbose, e0.7
  val?            %397.4 = Force!<wrapped>    !v    %397.3, e0.7   <lgl$->
  lgl$#-          %397.5 = CheckTrueFalse     we    %397.4
  void                    Branch                   %397.5 -> BB312 (if true) | BB54 (if false)
BB398   <- [49]
  fs              %398.0 = FrameState         R     0x5615051e76a0+1784: [], env=e0.7
  void                    Deopt              !v    %398.0, CallTarget@0x5614f925d5d0[Call#25], %49.3   !
BB314   <- [393]
  val?^ | miss    %314.0 = LdVar              eR    is.object, e391.6
  lgl$#-          %314.1 = Identical                <blt is.object>, %314.0   <true>
  void                    Branch                   %314.1 -> BB395 (if true) | BB396 (if false)
BB43   <- [393]
  void                    Nop                !     
  lgl$#-          %43.1 = %393.3
  goto BB44
BB312   <- [397]
  (cls|spec|blt)  %312.0 = LdFun              !v    cat, e0.7
  fs              %312.1 = FrameState         R     0x5615051e76a0+1860: [%312.0], env=e0.7
  void                    Deopt              !v    %312.1, DeadCall@0x5614f925d5d0[Call#26], %312.0   !
BB54   <- [397]
  val?^ | miss    %54.0 = LdVar              eR    attr, e0.7
  lgl$#-          %54.1 = Identical                <blt attr>, %54.0   <true>
  void                    Branch                   %54.1 -> BB401 (if true) | BB402 (if false)
BB395   <- [314]
  val?^ | miss    %395.0 = LdVar              eR    X, e391.6
  val?            %395.1 = Force!<wrapped>    !v    %395.0, e391.6   <val?+>
  lgl$#-          %395.2 = CallSafeBuiltin    wed   is.object(%395.1)    <lgl$->
  lgl$-           %395.3 = LOr                      %393.3, %395.2
  lgl$-           %395.4 = %395.3
  goto BB44
BB396   <- [314]
  fs              %396.0 = FrameState         R     0x5615051e76a0+1728: [], env=e0.7
  fs              %396.1 = FrameState         R     0x5614fa849000+78: [], env=e391.6, next=%396.0
  prom-           %396.2 = MkArg                    %393.1, model.spmatrix[0x5615050e49e0]_p76 (!refl), e391.6
  val?~           %396.3 = CastType                 up %396.2
  env             e396.4 = (MkEnv)            l     mode(miss)="any", x=%396.3, parent=R_BaseNamespace, context 0
  fs              %396.5 = FrameState         R     0x5614fa748820+41: [%393.2], env=e396.4, next=%396.1
  void                    Deopt              !v    %396.5, DeadBranchReached@0x5614fa864020[Test#0], %314.1   !
BB44   <- [43, 395]
  lgl$-           %44.0 = Phi                      %395.4:BB395, %43.1:BB43
  lgl$-           %44.1 = %44.0
  lgl$#-          %44.2 = CheckTrueFalse     e     %44.1
  void                    Branch                   %44.2 -> BB313 (if true) | BB47 (if false)
BB401   <- [54]
  val?^ | miss    %401.0 = LdVar              eR    trms, e0.7
  val?            %401.1 = Force!<wrapped>    !v    %401.0, e0.7   <code>
  val?            %401.2 = CallBuiltin        !v    attr(%401.1, "intercept") e0.7   <int$->
  lgl$#-          %401.3 = IsType                   %401.2 isA int$-
  void                    Branch                   %401.3 -> BB403 (if true) | BB404 (if false)
BB402   <- [54]
  fs              %402.0 = FrameState         R     0x5615051e76a0+1845: [%397.5], env=e0.7
  void                    Deopt              !v    %402.0, DeadBranchReached@0x5614f925d5d0[Test#13], %54.1   !
BB313   <- [44]
  val?^ | miss    %313.0 = LdVar              eR    as.list, e391.6
  lgl$#-          %313.1 = Identical                %313.0, function(x, ...) <(rir::DispatchTable*)0x5614f|...
  void                    Branch                   %313.1 -> BB399 (if true) | BB400 (if false)
BB47   <- [44]
  void                    Nop                !     
  goto BB48
BB403   <- [401]
  int$-           %403.0 = CastType           d     dn %401.2
  lgl$-           %403.1 = Eq                 d     %403.0, 1, elided   <lgl$->
  void                    StVar              lW    hasInt, %403.1, e0.7
  lgl$-           %403.3 = Not                d     %403.1, elided
  lgl$-           %403.4 = AsLogical                %403.3
  lgl$#-          %403.5 = Identical                %403.4, false
  void                    Branch                   %403.5 -> BB311 (if true) | BB59 (if false)
BB404   <- [401]
  fs              %404.0 = FrameState         R     0x5615051e76a0+2023: [%401.2], env=e0.7
  void                    Deopt              !v    %404.0, Typecheck@0x5614f925d5d0[Type#74], %401.2   !
BB399   <- [313]
  val?^ | miss    %399.0 = LdVar              eR    X, e391.6
  val?            %399.1 = Force!<wrapped>    !v    %399.0, e391.6   <vec>
  val?            %399.2 = StaticCall         !v    as.list[0x5614fdfa6110](%399.1) { 0 } e391.6   <vec>
  void                    StVar              lW    X, %399.2, e391.6
  goto BB48
BB400   <- [313]
  fs              %400.0 = FrameState         R     0x5615051e76a0+1728: [], env=e0.7
  fs              %400.1 = FrameState         R     0x5614fa849000+189: [%44.1], env=e391.6, next=%400.0
  void                    Deopt              !v    %400.1, CallTarget@0x5614fa864020[Call#3], %313.0   !
BB48   <- [47, 399]
  (cls|spec|blt)  %48.0 = LdFun              !v    .Internal, <0x5614f88a6698>, e391.6
  prom-           %48.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p77, e391.6
  val?            %48.2 = Call               !v    %48.0(%48.1) e391.6   <val?+>
  val?            %48.3 = PopContext         C     %48.2, %391.3   <lgl+>
  val?            %48.4 = %48.3
  goto BB49
BB311   <- [403]
  void                    Nop                !     
  lgl$-           %311.1 = %403.4
  goto BB62
BB59   <- [403]
  val?^ | miss    %59.0 = LdVar              eR    length, e0.7
  lgl$#-          %59.1 = Identical                <blt length>, %59.0   <true>
  void                    Branch                   %59.1 -> BB407 (if true) | BB408 (if false)
BB62   <- [311, 415]
  lgl$-           %62.0 = Phi                      %415.3:BB415, %311.1:BB311
  lgl$-           %62.1 = %62.0
  lgl$#-          %62.2 = CheckTrueFalse     e     %62.1
  void                    Branch                   %62.2 -> BB306 (if true) | BB65 (if false)
BB407   <- [59]
  val?^ | miss    %407.0 = LdVar              eR    indF, e0.7
  lgl$#-          %407.1 = IsType                   %407.0 isA int+
  void                    Branch                   %407.1 -> BB413 (if true) | BB414 (if false)
BB408   <- [59]
  void                    Nop                !     
  lgl$#-          %408.1 = %59.1
  dr              %408.2 = DeadBranchReached@0x5614f925d5d0[Test#14]
  goto BB57
BB306   <- [62]
  val?^ | miss    %306.0 = LdVar              eR    any, e0.7
  lgl$#-          %306.1 = Identical                <blt any>, %306.0   <true>
  void                    Branch                   %306.1 -> BB405 (if true) | BB406 (if false)
BB65   <- [62]
  void                    Nop                !     
  goto BB66
BB413   <- [407]
  int+            %413.0 = CastType           d     dn %407.0
  (int|real)$-    %413.1 = CallSafeBuiltin    wed   length(%413.0)    <int$->
  lgl$#-          %413.2 = IsType                   %413.1 isA int$-
  void                    Branch                   %413.2 -> BB415 (if true) | BB416 (if false)
BB414   <- [407]
  void                    Nop                !     
  val?^ | miss    %414.1 = %407.0
  dr              %414.2 = Typecheck@0x5614f925d5d0[Type#78]
  goto BB57
BB57   <- [408, 414]
  val?^ | miss    %57.0 = Phi                      %408.1:BB408, %414.1:BB414
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %408.2:BB408, %414.2:BB414
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x5615051e76a0+2049: [], env=e0.7
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB405   <- [306]
  val?^ | miss    %405.0 = LdVar              eR    factorPattern, e0.7
  lgl$#-          %405.1 = IsType                   %405.0 isA int+
  void                    Branch                   %405.1 -> BB409 (if true) | BB410 (if false)
BB406   <- [306]
  void                    Nop                !     
  lgl$#-          %406.1 = %306.1
  dr              %406.2 = DeadBranchReached@0x5614f925d5d0[Test#15]
  goto BB63
BB66   <- [65, 309, 310]
  val?^ | miss    %66.0 = LdVar              eR    structure, e0.7
  lgl$#-          %66.1 = Identical                %66.0, function(.Data, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %66.1 -> BB417 (if true) | BB418 (if false)
BB415   <- [413]
  int$-           %415.0 = CastType           d     dn %413.1
  lgl$-           %415.1 = AsLogical                %415.0
  lgl$-           %415.2 = LAnd                     %403.4, %415.1
  lgl$-           %415.3 = %415.2
  goto BB62
BB416   <- [413]
  fs              %416.0 = FrameState         R     0x5615051e76a0+2162: [%403.4, %413.1], env=e0.7
  void                    Deopt              !v    %416.0, Typecheck@0x5614f925d5d0[Type#79], %413.1   !
BB409   <- [405]
  int+            %409.0 = CastType           d     dn %405.0
  val?^ | miss    %409.1 = LdVar              eR    indF, e0.7
  lgl$#-          %409.2 = IsType                   %409.1 isA int+
  void                    Branch                   %409.2 -> BB411 (if true) | BB412 (if false)
BB410   <- [405]
  void                    Nop                !     
  val?^ | miss    %410.1 = %405.0
  dr              %410.2 = Typecheck@0x5614f925d5d0[Type#85]
  goto BB63
BB63   <- [406, 410, 412]
  val?^ | miss    %63.0 = Phi                      %406.1:BB406, %410.1:BB410, %412.1:BB412
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %406.2:BB406, %410.2:BB410, %412.2:BB412
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x5615051e76a0+2169: [%62.1], env=e0.7
  void                    Deopt              !v    %63.4, %63.3, %63.1   !
BB417   <- [66]
  prom-           %417.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p11, e0.7
  prom-           %417.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p14, e0.7
  dots-           %417.2 = DotsList           l     names=%417.1
  ct              %417.3 = PushContext        lCL   %417.0, %417.2, structure(vector("list", length=length(indF)),|..., function(.Data, ...) <(rir::DispatchTable*)0x5|..., e0.7
  val?^           %417.4 = CastType                 up %417.0
  env             e417.5 = MkEnv              l     .Data=%417.4, ...=%417.2, parent=R_BaseNamespace, context 1
  val?            %417.6 = Force!<lazy>       !vL   %417.4, e417.5   <val?+>
  lgl$-           %417.7 = Is                       %417.6, NULL
  lgl$#-          %417.8 = IsType                   %417.6 isA val?+
  void                    Branch                   %417.8 -> BB421 (if true) | BB422 (if false)
BB418   <- [66]
  fs              %418.0 = FrameState         R     0x5615051e76a0+2410: [], env=e0.7
  void                    Deopt              !v    %418.0, CallTarget@0x5614f925d5d0[Call#34], %66.0   !
BB411   <- [409]
  int+            %411.0 = CastType           d     dn %409.1
  int+            %411.1 = Extract1_2D        wed   %409.0, %411.0, missingArg, elided   <int+>
  lgl             %411.2 = Eq                 wed   %411.1, 1, elided   <lgl+>
  void                    StVar              lW    i1, %411.2, e0.7
  val?            %411.4 = CallBuiltin        !v    any(%411.2) e0.7   <lgl$->
  lgl$#-          %411.5 = IsType                   %411.4 isA lgl$-
  void                    Branch                   %411.5 -> BB419 (if true) | BB420 (if false)
BB412   <- [409]
  void                    Nop                !     
  val?^ | miss    %412.1 = %409.1
  dr              %412.2 = Typecheck@0x5614f925d5d0[Type#87]
  goto BB63
BB421   <- [417]
  lgl$#-          %421.0 = CheckTrueFalse     e     %417.7
  void                    Branch                   %421.0 -> BB305 (if true) | BB71 (if false)
BB422   <- [417]
  fs              %422.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %422.1 = FrameState         R     0x5614fa81eb50+9: [%417.6], env=e417.5, next=%422.0
  void                    Deopt              !v    %422.1, Typecheck@0x5614f9e29c18[Type#0], %417.6   !
BB419   <- [411]
  lgl$-           %419.0 = CastType           d     dn %411.4
  lgl$#-          %419.1 = CheckTrueFalse     e     %419.0
  void                    Branch                   %419.1 -> BB310 (if true) | BB309 (if false)
BB420   <- [411]
  fs              %420.0 = FrameState         R     0x5615051e76a0+2356: [%411.4], env=e0.7
  void                    Deopt              !v    %420.0, Typecheck@0x5614f925d5d0[Type#90], %411.4   !
BB305   <- [421]
  fs              %305.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  (cls|spec|blt)  %305.1 = LdFun              !v    warning, R_BaseNamespace
  fs              %305.2 = FrameState         R     0x5614fa81eb50+35: [%305.1], env=e417.5, next=%305.0
  void                    Deopt              !v    %305.2, DeadCall@0x5614f9e29c18[Call#0], %305.1   !
BB71   <- [421]
  val?            %71.0 = NamedCall          !v    <blt list>(names=%417.1) e417.5   <vec+>
  void                    StVar              lW    attrib, %71.0, e417.5
  lgl$#-          %71.2 = IsType                   %71.0 isA val?+
  val?^ | miss    %71.3 = LdVar              eR    length, e417.5
  lgl$#-          %71.4 = Identical                <blt length>, %71.3   <true>
  void                    Branch                   %71.4 -> BB423 (if true) | BB424 (if false)
BB310   <- [419]
  (cls|spec|blt)  %310.0 = LdFun              !v    <-, <0x5614f889bda8>, e0.7
  prom-           %310.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p63, e0.7
  val?            %310.2 = Call               !v    %310.0(%310.1, 2L) e0.7
  goto BB66
BB309   <- [419]
  void                    Nop                !     
  goto BB66
BB423   <- [71]
  val             %423.0 = ChkMissing         e     %71.0
  void                    Branch                   %71.2 -> BB425 (if true) | BB426 (if false)
BB424   <- [71]
  void                    Nop                !     
  lgl$#-          %424.1 = %71.4
  dr              %424.2 = DeadBranchReached@0x5614f9e29c18[Test#0]
  goto BB72
BB425   <- [423]
  val?+           %425.0 = CastType           d     dn %71.0   <vec+>
  (int|real)$-    %425.1 = CallSafeBuiltin    wed   length(%425.0)    <int$->
  lgl$#-          %425.2 = IsType                   %425.1 isA int$-
  void                    Branch                   %425.2 -> BB427 (if true) | BB428 (if false)
BB426   <- [423]
  void                    Nop                !     
  val?            %426.1 = %71.0
  dr              %426.2 = Typecheck@0x5614f9e29c18[Type#1]
  goto BB72
BB72   <- [424, 426]
  val?^ | miss    %72.0 = Phi                      %424.1:BB424, %426.1:BB426
  val?^ | miss    %72.1 = %72.0
  dr              %72.2 = Phi                      %424.2:BB424, %426.2:BB426
  dr              %72.3 = %72.2
  fs              %72.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %72.5 = FrameState         R     0x5614fa81eb50+113: [], env=e417.5, next=%72.4
  void                    Deopt              !v    %72.5, %72.3, %72.1   !
BB427   <- [425]
  int$-           %427.0 = CastType           d     dn %425.1
  lgl$#-          %427.1 = CheckTrueFalse     e     %427.0
  void                    Branch                   %427.1 -> BB277 (if true) | BB76 (if false)
BB428   <- [425]
  void                    Nop                !     
  (int|real)$-    %428.1 = %425.1
  dr              %428.2 = Typecheck@0x5614f9e29c18[Type#4]
  goto BB74
BB277   <- [427]
  val?^ | miss    %277.0 = LdVar              eR    c, e417.5
  lgl$#-          %277.1 = Identical                <blt c>, %277.0   <true>
  void                    Branch                   %277.1 -> BB431 (if true) | BB432 (if false)
BB76   <- [427]
  void                    Nop                !     
  goto BB77
BB74   <- [428, 432]
  val?^ | miss    %74.0 = Phi                      %428.1:BB428, %432.1:BB432
  val?^ | miss    %74.1 = %74.0
  dr              %74.2 = Phi                      %428.2:BB428, %432.2:BB432
  dr              %74.3 = %74.2
  fs              %74.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %74.5 = FrameState         R     0x5614fa81eb50+204: [%425.1], env=e417.5, next=%74.4
  void                    Deopt              !v    %74.5, %74.3, %74.1   !
BB431   <- [277]
  str-            %431.0 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %431.0, e417.5
  val?^ | miss    %431.2 = LdVar              eR    names, e417.5
  lgl$#-          %431.3 = Identical                <blt names>, %431.2   <true>
  void                    Branch                   %431.3 -> BB435 (if true) | BB436 (if false)
BB432   <- [277]
  void                    Nop                !     
  lgl$#-          %432.1 = %277.1
  dr              %432.2 = DeadBranchReached@0x5614f9e29c18[Test#1]
  goto BB74
BB77   <- [76, 493]
  val?^ | miss    %77.0 = LdVar              eR    .Data, e417.5
  val?            %77.1 = Force!<value>      !v    %77.0, e417.5   <val?>
  val?            %77.2 = PopContext         C     %77.1, %417.3   <vec+>
  void                    StVar              lW    f.matr, %77.2, e0.7
  void                    StVar              lW    i.f, 0, e0.7
  val?^ | miss    %77.5 = LdVar              eR    seq_len, e0.7
  lgl$#-          %77.6 = Identical                <blt seq_len>, %77.5   <true>
  void                    Branch                   %77.6 -> BB429 (if true) | BB430 (if false)
BB435   <- [431]
  val+            %435.0 = CallSafeBuiltin    wed   names(%425.0)    <str->
  void                    StVar              lW    attrnames, %435.0, e417.5
  val?^ | miss    %435.2 = LdVar              eR    match, e417.5
  lgl$#-          %435.3 = Identical                %435.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %435.3 -> BB437 (if true) | BB438 (if false)
BB436   <- [431]
  fs              %436.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %436.1 = FrameState         R     0x5614fa81eb50+361: [], env=e417.5, next=%436.0
  void                    Deopt              !v    %436.1, DeadBranchReached@0x5614f9e29c18[Test#2], %431.3   !
BB429   <- [77]
  val?^ | miss    %429.0 = LdVar              eR    nVar, e0.7
  lgl$#-          %429.1 = IsType                   %429.0 isA int$-
  void                    Branch                   %429.1 -> BB433 (if true) | BB434 (if false)
BB430   <- [77]
  void                    Nop                !     
  lgl$#-          %430.1 = %77.6
  dr              %430.2 = DeadBranchReached@0x5614f925d5d0[Test#21]
  goto BB78
BB437   <- [435]
  val+            %437.0 = CallSafeBuiltin    wed   match(%435.0, %431.0, NA, nil)    <int->
  void                    StVar              lW    m, %437.0, e417.5
  lgl$#-          %437.2 = IsType                   %437.0 isA int-
  val?^ | miss    %437.3 = LdVar              eR    is.na, e417.5
  lgl$#-          %437.4 = Identical                <blt is.na>, %437.3   <true>
  void                    Branch                   %437.4 -> BB439 (if true) | BB440 (if false)
BB438   <- [435]
  fs              %438.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %438.1 = FrameState         R     0x5614fa81eb50+466: [], env=e417.5, next=%438.0
  void                    Deopt              !v    %438.1, CallTarget@0x5614f9e29c18[Call#5], %435.2   !
BB433   <- [429]
  int$-           %433.0 = CastType           d     dn %429.0
  val+            %433.1 = CallSafeBuiltin    wed   seq_len(%433.0)    <int->
  int$-           %433.2 = Length                   %433.1
  int$-           %433.3 = Inc                      0L
  lgl$-           %433.4 = Lt                 d     %433.2, %433.3, elided
  lgl$#-          %433.5 = Identical                %433.4, true
  void                    Branch                   %433.5 -> BB276 (if true) | BB80 (if false)
BB434   <- [429]
  void                    Nop                !     
  val?^ | miss    %434.1 = %429.0
  dr              %434.2 = Typecheck@0x5614f925d5d0[Type#109]
  goto BB78
BB78   <- [430, 434]
  val?^ | miss    %78.0 = Phi                      %430.1:BB430, %434.1:BB434
  val?^ | miss    %78.1 = %78.0
  dr              %78.2 = Phi                      %430.2:BB430, %434.2:BB434
  dr              %78.3 = %78.2
  fs              %78.4 = FrameState         R     0x5615051e76a0+2484: [], env=e0.7
  void                    Deopt              !v    %78.4, %78.3, %78.1   !
BB439   <- [437]
  void                    Branch                   %437.2 -> BB441 (if true) | BB442 (if false)
BB440   <- [437]
  void                    Nop                !     
  lgl$#-          %440.1 = %437.4
  dr              %440.2 = DeadBranchReached@0x5614f9e29c18[Test#3]
  goto BB282
BB276   <- [433]
  void                    Nop                !     
  goto BB155
BB80   <- [433]
  val?            %80.0 = Extract2_1D        wed   %433.1, %433.3, elided
  void                    StVar              lW    i, %80.0, e0.7
  val?^ | miss    %80.2 = LdVar              eR    fnames, e0.7
  lgl$#-          %80.3 = IsType                   %80.2 isA val?~- | miss
  void                    Branch                   %80.3 -> BB445 (if true) | BB446 (if false)
BB441   <- [439]
  int-            %441.0 = CastType           d     dn %437.0
  lgl-            %441.1 = CallSafeBuiltin    wed   is.na(%441.0)    <lgl->
  lgl-            %441.2 = Not                wed   %441.1, elided   <lgl->
  void                    StVar              lW    ok, %441.2, e417.5
  val?^ | miss    %441.4 = LdVar              eR    any, e417.5
  lgl$#-          %441.5 = Identical                <blt any>, %441.4   <true>
  void                    Branch                   %441.5 -> BB443 (if true) | BB444 (if false)
BB442   <- [439]
  void                    Nop                !     
  val+            %442.1 = %437.0
  dr              %442.2 = Typecheck@0x5614f9e29c18[Type#11]
  goto BB282
BB282   <- [440, 442]
  val?^ | miss    %282.0 = Phi                      %440.1:BB440, %442.1:BB442
  val?^ | miss    %282.1 = %282.0
  dr              %282.2 = Phi                      %440.2:BB440, %442.2:BB442
  dr              %282.3 = %282.2
  fs              %282.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %282.5 = FrameState         R     0x5614fa81eb50+517: [], env=e417.5, next=%282.4
  void                    Deopt              !v    %282.5, %282.3, %282.1   !
BB155   <- [154, 276]
  val?^ | miss    %155.0 = LdVar              eR    verbose, e0.7
  val?            %155.1 = Force!<wrapped>    !v    %155.0, e0.7   <lgl$->
  lgl$#-          %155.2 = CheckTrueFalse     we    %155.1
  void                    Branch                   %155.2 -> BB261 (if true) | BB156 (if false)
BB445   <- [80]
  val?~- | miss   %445.0 = CastType           d     dn %80.2
  val?-           %445.1 = Force!<value>            %445.0,    <str->
  lgl$#-          %445.2 = IsType                   %445.1 isA val+   <true>
  void                    Branch                   %445.2 -> BB447 (if true) | BB448 (if false)
BB446   <- [80]
  void                    Nop                !     
  val?^ | miss    %446.1 = %80.2
  dr              %446.2 = Typecheck@0x5614f925d5d0[Type#111]
  goto BB81
BB443   <- [441]
  val?            %443.0 = CallBuiltin        !v    any(%441.2) e417.5   <lgl$->
  lgl$#-          %443.1 = IsType                   %443.0 isA lgl$-
  void                    Branch                   %443.1 -> BB459 (if true) | BB460 (if false)
BB444   <- [441]
  fs              %444.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %444.1 = FrameState         R     0x5614fa81eb50+623: [], env=e417.5, next=%444.0
  void                    Deopt              !v    %444.1, DeadBranchReached@0x5614f9e29c18[Test#4], %441.5   !
BB261   <- [155]
  (cls|spec|blt)  %261.0 = LdFun              !v    cat, e0.7
  fs              %261.1 = FrameState         R     0x5615051e76a0+5765: [%261.0], env=e0.7
  void                    Deopt              !v    %261.1, DeadCall@0x5614f925d5d0[Call#80], %261.0   !
BB156   <- [155]
  void                    StVar              lW    getR, %0.8, e0.7
  val?^ | miss    %156.1 = LdVar              eR    hasInt, e0.7
  lgl$#-          %156.2 = IsType                   %156.1 isA lgl$-
  void                    Branch                   %156.2 -> BB451 (if true) | BB452 (if false)
BB447   <- [445]
  val             %447.0 = ChkMissing         e     %80.0
  lgl$#-          %447.1 = IsType                   %447.0 isA int$-
  void                    Branch                   %447.1 -> BB449 (if true) | BB450 (if false)
BB448   <- [445]
  void                    Nop                !     
  lgl$#-          %448.1 = %445.2
  dr              %448.2 = DeadBranchReached@0x5614f925d5d0[Test#23]
  goto BB81
BB81   <- [446, 448, 450]
  val?^ | miss    %81.0 = Phi                      %446.1:BB446, %448.1:BB448, %450.1:BB450
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %446.2:BB446, %448.2:BB448, %450.2:BB450
  dr              %81.3 = %81.2
  fs              %81.4 = FrameState         R     0x5615051e76a0+2620: [%433.1, %433.2, %433.3], env=e0.7
  void                    Deopt              !v    %81.4, %81.3, %81.1   !
BB459   <- [443]
  lgl$-           %459.0 = CastType           d     dn %443.0
  lgl$#-          %459.1 = CheckTrueFalse     e     %459.0
  void                    Branch                   %459.1 -> BB302 (if true) | BB288 (if false)
BB460   <- [443]
  void                    Nop                !     
  val?            %460.1 = %443.0
  dr              %460.2 = Typecheck@0x5614f9e29c18[Type#17]
  goto BB286
BB451   <- [156]
  lgl$-           %451.0 = CastType           d     dn %156.1
  str-            %451.1 = Extract1_1D        wed   "(Intercept)", %451.0, elided   <str->
  void                    StVar              lW    vNms, %451.1, e0.7
  val?^ | miss    %451.3 = LdVar              eR    integer, e0.7
  lgl$#-          %451.4 = Identical                %451.3, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %451.4 -> BB457 (if true) | BB458 (if false)
BB452   <- [156]
  fs              %452.0 = FrameState         R     0x5615051e76a0+5966: [], env=e0.7
  void                    Deopt              !v    %452.0, Typecheck@0x5614f925d5d0[Type#277], %156.1   !
BB449   <- [447]
  int$-           %449.0 = CastType           d     dn %447.0
  val?            %449.1 = Extract1_1D        wed   %445.1, %449.0, elided   <str$->
  void                    StVar              lW    nam, %449.1, e0.7
  val?^ | miss    %449.3 = LdVar              eR    mf, e0.7
  val?            %449.4 = Force!<value>      !v    %449.3, e0.7   <vec+>
  lgl$#-          %449.5 = IsType                   %449.4 isA val+   <true>
  lgl$#-          %449.6 = IsType                   %449.4 isA val?+
  void                    Branch                   %449.5 -> BB453 (if true) | BB454 (if false)
BB450   <- [447]
  void                    Nop                !     
  val             %450.1 = %447.0
  dr              %450.2 = Typecheck@0x5614f925d5d0[Type#113]
  goto BB81
BB302   <- [459]
  val?^ | miss    %302.0 = LdVar              eR    c, e417.5
  lgl$#-          %302.1 = Identical                <blt c>, %302.0   <@?>
  void                    Branch                   %302.1 -> BB304 (if true) | BB303 (if false)
BB288   <- [459]
  val?^ | miss    %288.0 = LdVar              eR    any, e417.5
  lgl$#-          %288.1 = Identical                <blt any>, %288.0   <true>
  void                    Branch                   %288.1 -> BB465 (if true) | BB466 (if false)
BB286   <- [460, 466]
  val?^ | miss    %286.0 = Phi                      %460.1:BB460, %466.1:BB466
  val?^ | miss    %286.1 = %286.0
  dr              %286.2 = Phi                      %460.2:BB460, %466.2:BB466
  dr              %286.3 = %286.2
  fs              %286.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %286.5 = FrameState         R     0x5614fa81eb50+714: [%443.0], env=e417.5, next=%286.4
  void                    Deopt              !v    %286.5, %286.3, %286.1   !
BB457   <- [451]
  val?^ | miss    %457.0 = LdVar              eR    nTrm, e0.7
  lgl$#-          %457.1 = IsType                   %457.0 isA int$-
  void                    Branch                   %457.1 -> BB463 (if true) | BB464 (if false)
BB458   <- [451]
  void                    Nop                !     
  val?^ | miss    %458.1 = %451.3
  dr              %458.2 = CallTarget@0x5614f925d5d0[Call#89]
  goto BB159
BB453   <- [449]
  val?^ | miss    %453.0 = LdVar              eR    i, e0.7
  lgl$#-          %453.1 = IsType                   %453.0 isA int$-
  void                    Branch                   %453.1 -> BB455 (if true) | BB456 (if false)
BB454   <- [449]
  void                    Nop                !     
  lgl$#-          %454.1 = %449.5
  dr              %454.2 = DeadBranchReached@0x5614f925d5d0[Test#24]
  goto BB83
BB304   <- [302]
  fs              %304.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  str-            %304.1 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %304.1, e417.5
  (cls|spec|blt)  %304.3 = LdFun              !v    <-, e417.5
  fs              %304.4 = FrameState         R     0x5614fa81eb50+876: [%304.3], env=e417.5, next=%304.0
  void                    Deopt              !v    %304.4, DeadCall@0x5614f9e29c18[Call#9], %304.3   !
BB303   <- [302]
  fs              %303.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  (cls|spec|blt)  %303.1 = LdFun              !v    c, e417.5
  fs              %303.2 = FrameState         R     0x5614fa81eb50+758: [%303.1], env=e417.5, next=%303.0
  void                    Deopt              !v    %303.2, DeadCall@0x5614f9e29c18[Call#8], %303.1   !
BB465   <- [288]
  (cls|spec|blt)  %465.0 = LdFun              !v    [[, <0x5614f88a6c48>, e417.5
  prom-           %465.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p82, e417.5
  val?            %465.2 = NamedCall          !v    %465.0(%465.1, "class", exact=true) e417.5   <(nil|str)+>
  lgl$#-          %465.3 = IsType                   %465.2 isA val?+
  void                    Branch                   %465.3 -> BB467 (if true) | BB468 (if false)
BB466   <- [288]
  void                    Nop                !     
  lgl$#-          %466.1 = %288.1
  dr              %466.2 = DeadBranchReached@0x5614f9e29c18[Test#10]
  goto BB286
BB463   <- [457]
  int$-           %463.0 = CastType           d     dn %457.0
  int-            %463.1 = CallSafeBuiltin    wed   vector("integer", %463.0)    <int->
  void                    StVar              lW    counts, %463.1, e0.7
  lgl$#-          %463.3 = CheckTrueFalse     e     %451.0
  void                    Branch                   %463.3 -> BB260 (if true) | BB163 (if false)
BB464   <- [457]
  void                    Nop                !     
  val?^ | miss    %464.1 = %457.0
  dr              %464.2 = Typecheck@0x5614f925d5d0[Type#279]
  goto BB159
BB159   <- [458, 464]
  val?^ | miss    %159.0 = Phi                      %458.1:BB458, %464.1:BB464
  val?^ | miss    %159.1 = %159.0
  dr              %159.2 = Phi                      %458.2:BB458, %464.2:BB464
  dr              %159.3 = %159.2
  fs              %159.4 = FrameState         R     0x5615051e76a0+6033: [], env=e0.7
  void                    Deopt              !v    %159.4, %159.3, %159.1   !
BB455   <- [453]
  int$-           %455.0 = CastType           d     dn %453.0
  void                    Branch                   %449.6 -> BB461 (if true) | BB462 (if false)
BB456   <- [453]
  void                    Nop                !     
  val?^ | miss    %456.1 = %453.0
  dr              %456.2 = Typecheck@0x5614f925d5d0[Type#117]
  goto BB83
BB83   <- [454, 456, 462]
  val?^ | miss    %83.0 = Phi                      %454.1:BB454, %456.1:BB456, %462.1:BB462
  val?^ | miss    %83.1 = %83.0
  dr              %83.2 = Phi                      %454.2:BB454, %456.2:BB456, %462.2:BB462
  dr              %83.3 = %83.2
  fs              %83.4 = FrameState         R     0x5615051e76a0+2704: [%433.1, %433.2, %433.3, %449.4], env=e0.7
  void                    Deopt              !v    %83.4, %83.3, %83.1   !
BB467   <- [465]
  val?+           %467.0 = CastType           d     dn %465.2   <(nil|str)+>
  lgl             %467.1 = Eq                 wed   %467.0, "factor", elided   <lgl->
  val?            %467.2 = CallBuiltin        !v    any(%467.1) e417.5   <lgl$->
  lgl$#-          %467.3 = IsType                   %467.2 isA lgl$-
  void                    Branch                   %467.3 -> BB475 (if true) | BB476 (if false)
BB468   <- [465]
  fs              %468.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %468.1 = FrameState         R     0x5614fa81eb50+1023: [<blt any>, %465.2], env=e417.5, next=%468.0
  void                    Deopt              !v    %468.1, Typecheck@0x5614f9e29c18[Type#38], %465.2   !
BB260   <- [463]
  val?^ | miss    %260.0 = LdVar              eR    new, e0.7
  lgl$#-          %260.1 = Identical                %260.0, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %260.1 -> BB473 (if true) | BB474 (if false)
BB163   <- [463]
  val?^ | miss    %163.0 = LdVar              eR    new, e0.7
  lgl$#-          %163.1 = Identical                %163.0, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %163.1 -> BB471 (if true) | BB472 (if false)
BB461   <- [455]
  val?+           %461.0 = CastType           d     dn %449.4   <vec+>
  val?            %461.1 = Extract2_1D        wed   %461.0, %455.0, elided   <(int|real)>
  void                    StVar              lW    f, %461.1, e0.7
  val?^ | miss    %461.3 = LdVar              eR    is.f, e0.7
  lgl$#-          %461.4 = IsType                   %461.3 isA lgl+
  void                    Branch                   %461.4 -> BB469 (if true) | BB470 (if false)
BB462   <- [455]
  void                    Nop                !     
  val?            %462.1 = %449.4
  dr              %462.2 = Typecheck@0x5614f925d5d0[Type#115]
  goto BB83
BB475   <- [467]
  lgl$-           %475.0 = CastType           d     dn %467.2
  lgl$-           %475.1 = AsLogical                %475.0
  lgl$#-          %475.2 = Identical                %475.1, false
  void                    Branch                   %475.2 -> BB301 (if true) | BB293 (if false)
BB476   <- [467]
  void                    Nop                !     
  val?            %476.1 = %467.2
  dr              %476.2 = Typecheck@0x5614f9e29c18[Type#40]
  goto BB291
BB473   <- [260]
  prom-           %473.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p47, e0.7
  prom-           %473.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p48, e0.7
  prom-           %473.2 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p50, e0.7
  prom-           %473.3 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p52, e0.7
  dots-           %473.4 = DotsList           l     i=%473.0, p=%473.1, Dim=%473.2, x=%473.3
  val?            %473.5 = StaticCall         !v    new[0x561500576480]("dgCMatrix", %473.4) { 0 1n 2n 3n 4n } e0.7   <other>
  val?            %473.6 = %473.5
  goto BB164
BB474   <- [260]
  void                    Nop                !     
  val?^ | miss    %474.1 = %260.0
  dr              %474.2 = CallTarget@0x5614f925d5d0[Call#92]
  goto BB161
BB471   <- [163]
  prom-           %471.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p27, e0.7
  dots-           %471.1 = DotsList           l     Dim=%471.0
  val?            %471.2 = StaticCall         !v    new[0x561500576480]("dgCMatrix", %471.1) { 0 1n } e0.7   <other>
  val?            %471.3 = %471.2
  goto BB164
BB472   <- [163]
  void                    Nop                !     
  val?^ | miss    %472.1 = %163.0
  dr              %472.2 = CallTarget@0x5614f925d5d0[Call#90]
  goto BB161
BB469   <- [461]
  lgl+            %469.0 = CastType           d     dn %461.3
  lgl+            %469.1 = Extract1_1D        wed   %469.0, %455.0, elided   <lgl$+>
  lgl$#-          %469.2 = CheckTrueFalse     we    %469.1
  void                    Branch                   %469.2 -> BB267 (if true) | BB89 (if false)
BB470   <- [461]
  fs              %470.0 = FrameState         R     0x5615051e76a0+2770: [%433.1, %433.2, %433.3], env=e0.7
  void                    Deopt              !v    %470.0, Typecheck@0x5614f925d5d0[Type#119], %461.3   !
BB301   <- [475]
  void                    Nop                !     
  lgl$-           %301.1 = %475.1
  goto BB294
BB293   <- [475]
  val?^ | miss    %293.0 = LdVar              eR    typeof, e417.5
  lgl$#-          %293.1 = Identical                %293.0, function(x) <(rir::DispatchTable*)0x5614fa848d|...
  void                    Branch                   %293.1 -> BB481 (if true) | BB482 (if false)
BB291   <- [476, 482]
  val?^ | miss    %291.0 = Phi                      %476.1:BB476, %482.1:BB482
  val?^ | miss    %291.1 = %291.0
  dr              %291.2 = Phi                      %476.2:BB476, %482.2:BB482
  dr              %291.3 = %291.2
  fs              %291.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %291.5 = FrameState         R     0x5614fa81eb50+1057: [%467.2], env=e417.5, next=%291.4
  void                    Deopt              !v    %291.5, %291.3, %291.1   !
BB164   <- [471, 473]
  val?            %164.0 = Phi                      %471.3:BB471, %473.6:BB473
  val?            %164.1 = %164.0
  void                    StVar              lW    r, %164.1, e0.7
  val?^ | miss    %164.3 = LdVar              eR    transpose, e0.7
  val?            %164.4 = Force!<lazy>       !v    %164.3, e0.7   <lgl$->
  lgl$#-          %164.5 = CheckTrueFalse     we    %164.4
  void                    Branch                   %164.5 -> BB259 (if true) | BB167 (if false)
BB161   <- [472, 474]
  val?^ | miss    %161.0 = Phi                      %472.1:BB472, %474.1:BB474
  val?^ | miss    %161.1 = %161.0
  dr              %161.2 = Phi                      %472.2:BB472, %474.2:BB474
  dr              %161.3 = %161.2
  fs              %161.4 = FrameState         R     0x5615051e76a0+6079: [], env=e0.7
  void                    Deopt              !v    %161.4, %161.3, %161.1   !
BB267   <- [469]
  val?^ | miss    %267.0 = LdVar              eR    factorPattern, e0.7
  lgl$#-          %267.1 = IsType                   %267.0 isA int+
  void                    Branch                   %267.1 -> BB485 (if true) | BB486 (if false)
BB89   <- [469]
  val?^ | miss    %89.0 = LdVar              eR    any, e0.7
  lgl$#-          %89.1 = Identical                <blt any>, %89.0   <true>
  void                    Branch                   %89.1 -> BB487 (if true) | BB488 (if false)
BB294   <- [301, 481]
  lgl$-           %294.0 = Phi                      %481.6:BB481, %301.1:BB301
  lgl$-           %294.1 = %294.0
  lgl$#-          %294.2 = CheckTrueFalse     e     %294.1
  void                    Branch                   %294.2 -> BB300 (if true) | BB297 (if false)
BB481   <- [293]
  val?^ | miss    %481.0 = LdVar              eR    .Data, e417.5
  val?            %481.1 = Force!<wrapped>    !v    %481.0, e417.5   <int->
  str$-           %481.2 = CallSafeBuiltin    wed   typeof(%481.1)    <str$->
  lgl$-           %481.3 = Eq                 d     %481.2, "double", elided   <lgl$->
  lgl$-           %481.4 = AsLogical                %481.3
  lgl$-           %481.5 = LAnd                     %475.1, %481.4
  lgl$-           %481.6 = %481.5
  goto BB294
BB482   <- [293]
  void                    Nop                !     
  val?^ | miss    %482.1 = %293.0
  dr              %482.2 = CallTarget@0x5614f9e29c18[Call#14]
  goto BB291
BB259   <- [164]
  (cls|spec|blt)  %259.0 = LdFun              !v    t, e0.7
  fs              %259.1 = FrameState         R     0x5615051e76a0+6270: [%259.0], env=e0.7
  void                    Deopt              !v    %259.1, DeadCall@0x5614f925d5d0[Call#96], %259.0   !
BB167   <- [164]
  val?^ | miss    %167.0 = LdVar              eR    seq_len, e0.7
  lgl$#-          %167.1 = Identical                <blt seq_len>, %167.0   <true>
  void                    Branch                   %167.1 -> BB477 (if true) | BB478 (if false)
BB485   <- [267]
  int+            %485.0 = CastType           d     dn %267.0
  int+            %485.1 = Extract1_2D        wed   %485.0, %455.0, missingArg, elided   <int+>
  void                    StVar              lW    fp, %485.1, e0.7
  val?^ | miss    %485.3 = LdVar              eR    attr, e0.7
  lgl$#-          %485.4 = Identical                <blt attr>, %485.3   <true>
  void                    Branch                   %485.4 -> BB495 (if true) | BB496 (if false)
BB486   <- [267]
  void                    Nop                !     
  val?^ | miss    %486.1 = %267.0
  dr              %486.2 = Typecheck@0x5614f925d5d0[Type#169]
  goto BB87
BB487   <- [89]
  val?^ | miss    %487.0 = LdVar              eR    class, e0.7
  lgl$#-          %487.1 = Identical                <blt class>, %487.0   <true>
  void                    Branch                   %487.1 -> BB497 (if true) | BB498 (if false)
BB488   <- [89]
  void                    Nop                !     
  lgl$#-          %488.1 = %89.1
  dr              %488.2 = DeadBranchReached@0x5614f925d5d0[Test#26]
  goto BB87
BB300   <- [294]
  fs              %300.0 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  (cls|spec|blt)  %300.1 = LdFun              !v    storage.mode<-, e417.5
  fs              %300.2 = FrameState         R     0x5614fa81eb50+1142: ["integer", %300.1], env=e417.5, next=%300.0
  void                    Deopt              !v    %300.2, DeadCall@0x5614f9e29c18[Call#15], %300.1   !
BB297   <- [294]
  val?^ | miss    %297.0 = LdVar              eR    c, e417.5
  lgl$#-          %297.1 = Identical                <blt c>, %297.0   <true>
  void                    Branch                   %297.1 -> BB483 (if true) | BB484 (if false)
BB477   <- [167]
  val?^ | miss    %477.0 = LdVar              eR    nTrm, e0.7
  lgl$#-          %477.1 = IsType                   %477.0 isA int$-
  void                    Branch                   %477.1 -> BB479 (if true) | BB480 (if false)
BB478   <- [167]
  void                    Nop                !     
  lgl$#-          %478.1 = %167.1
  dr              %478.2 = DeadBranchReached@0x5614f925d5d0[Test#48]
  goto BB165
BB495   <- [485]
  val             %495.0 = ChkMissing         e     %461.1
  val?            %495.1 = CallBuiltin        !v    attr(%461.1, "contrasts") e0.7   <str$->
  void                    StVar              lW    contr, %495.1, e0.7
  val?^ | miss    %495.3 = LdVar              eR    lapply, e0.7
  lgl$#-          %495.4 = Identical                %495.3, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %495.4 -> BB505 (if true) | BB506 (if false)
BB496   <- [485]
  fs              %496.0 = FrameState         R     0x5615051e76a0+3938: [%433.1, %433.2, %433.3], env=e0.7
  void                    Deopt              !v    %496.0, DeadBranchReached@0x5614f925d5d0[Test#34], %485.4   !
BB87   <- [486, 488, 498, 500]
  val?^ | miss    %87.0 = Phi                      %486.1:BB486, %488.1:BB488, %498.1:BB498, %500.1:BB500
  val?^ | miss    %87.1 = %87.0
  dr              %87.2 = Phi                      %486.2:BB486, %488.2:BB488, %498.2:BB498, %500.2:BB500
  dr              %87.3 = %87.2
  fs              %87.4 = FrameState         R     0x5615051e76a0+2837: [%433.1, %433.2, %433.3, %469.2], env=e0.7
  void                    Deopt              !v    %87.4, %87.3, %87.1   !
BB497   <- [487]
  val             %497.0 = ChkMissing         e     %461.1
  lgl$#-          %497.1 = IsType                   %497.0 isA real-
  void                    Branch                   %497.1 -> BB499 (if true) | BB500 (if false)
BB498   <- [487]
  void                    Nop                !     
  lgl$#-          %498.1 = %487.1
  dr              %498.2 = DeadBranchReached@0x5614f925d5d0[Test#27]
  goto BB87
BB483   <- [297]
  val?^ | miss    %483.0 = LdVar              eR    attributes, e417.5
  lgl$#-          %483.1 = Identical                <blt attributes>, %483.0   <true>
  void                    Branch                   %483.1 -> BB489 (if true) | BB490 (if false)
BB484   <- [297]
  void                    Nop                !     
  lgl$#-          %484.1 = %297.1
  dr              %484.2 = DeadBranchReached@0x5614f9e29c18[Test#11]
  goto BB295
BB479   <- [477]
  int$-           %479.0 = CastType           d     dn %477.0
  val+            %479.1 = CallSafeBuiltin    wed   seq_len(%479.0)    <int->
  int$-           %479.2 = Length                   %479.1
  void                    StVar              lW    iTrm, %479.1, e0.7
  lgl$-           %479.4 = Lt                 d     %479.2, %433.3, elided
  lgl$#-          %479.5 = Identical                %479.4, true
  void                    Branch                   %479.5 -> BB258 (if true) | BB168 (if false)
BB480   <- [477]
  void                    Nop                !     
  val?^ | miss    %480.1 = %477.0
  dr              %480.2 = Typecheck@0x5614f925d5d0[Type#299]
  goto BB165
BB165   <- [478, 480]
  val?^ | miss    %165.0 = Phi                      %478.1:BB478, %480.1:BB480
  val?^ | miss    %165.1 = %165.0
  dr              %165.2 = Phi                      %478.2:BB478, %480.2:BB480
  dr              %165.3 = %165.2
  fs              %165.4 = FrameState         R     0x5615051e76a0+6255: [%164.5], env=e0.7
  void                    Deopt              !v    %165.4, %165.3, %165.1   !
BB505   <- [495]
  prom-           %505.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p55, e0.7
  cls             %505.1 = MkCls                    model.spmatrix@Prom(62)0, e0.7
  prom-           %505.2 = MkArg                    %505.1, model.spmatrix[0x5615050e49e0]_p62 (!refl), e0.7
  val?            %505.3 = StaticCall         !v    lapply[0x5614fbe03240](%505.0, %505.2) { 0 1 } e0.7   <vec->
  val?^ | miss    %505.4 = LdVar              eR    f.matr !upd, e0.7
  lgl$#-          %505.5 = IsType                   %505.4 isA val?~+ | miss
  void                    Branch                   %505.5 -> BB507 (if true) | BB508 (if false)
BB506   <- [495]
  fs              %506.0 = FrameState         R     0x5615051e76a0+4054: [%433.1, %433.2, %433.3], env=e0.7
  void                    Deopt              !v    %506.0, CallTarget@0x5614f925d5d0[Call#56], %495.3   !
BB499   <- [497]
  real-           %499.0 = CastType           d     dn %497.0
  val?            %499.1 = CallBuiltin        !v    class(%499.0) e0.7   <str$->
  void                    StVar              lW    cl, %499.1, e0.7
  lgl$#-          %499.3 = IsType                   %499.1 isA val?-
  void                    Branch                   %499.3 -> BB501 (if true) | BB502 (if false)
BB500   <- [497]
  void                    Nop                !     
  val             %500.1 = %497.0
  dr              %500.2 = Typecheck@0x5614f925d5d0[Type#127]
  goto BB87
BB489   <- [483]
  val?^ | miss    %489.0 = LdVar              eR    .Data, e417.5
  val?            %489.1 = Force!<wrapped>    !v    %489.0, e417.5   <val?+>
  val?            %489.2 = CallBuiltin        !v    attributes(%489.1) e417.5   <(nil|vec)+>
  lgl$#-          %489.3 = IsType                   %489.2 isA val?+
  val?^ | miss    %489.4 = LdVar              eR    attrib, e417.5
  lgl$#-          %489.5 = IsType                   %489.4 isA val?~+ | miss
  void                    Branch                   %489.5 -> BB491 (if true) | BB492 (if false)
BB490   <- [483]
  void                    Nop                !     
  lgl$#-          %490.1 = %483.1
  dr              %490.2 = DeadBranchReached@0x5614f9e29c18[Test#12]
  goto BB295
BB295   <- [484, 490]
  val?^ | miss    %295.0 = Phi                      %484.1:BB484, %490.1:BB490
  val?^ | miss    %295.1 = %295.0
  dr              %295.2 = Phi                      %484.2:BB484, %490.2:BB490
  dr              %295.3 = %295.2
  fs              %295.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %295.5 = FrameState         R     0x5614fa81eb50+1120: [%294.1], env=e417.5, next=%295.4
  void                    Deopt              !v    %295.5, %295.3, %295.1   !
BB258   <- [479]
  void                    Nop                !     
  goto BB233
BB168   <- [479]
  val?            %168.0 = Extract2_1D        wed   %479.1, %433.3, elided
  void                    StVar              lW    j, %168.0, e0.7
  val?^ | miss    %168.2 = LdVar              eR    Names, e0.7
  lgl$#-          %168.3 = IsType                   %168.2 isA val?~- | miss
  void                    Branch                   %168.3 -> BB503 (if true) | BB504 (if false)
BB507   <- [505]
  val?~+ | miss   %507.0 = CastType           d     dn %505.4
  val?+           %507.1 = Force!<value>            %507.0,    <vec+>
  val?^ | miss    %507.2 = LdVar              eR    i.f, e0.7
  lgl$#-          %507.3 = IsType                   %507.2 isA real$-
  void                    Branch                   %507.3 -> BB509 (if true) | BB510 (if false)
BB508   <- [505]
  void                    Nop                !     
  val?^ | miss    %508.1 = %505.4
  dr              %508.2 = Typecheck@0x5614f925d5d0[Type#184]
  goto BB272
BB501   <- [499]
  val?-           %501.0 = CastType           d     dn %499.1   <str$->
  lgl-            %501.1 = Eq                 wed   %501.0, "AsIs", elided   <lgl$->
  lgl$#-          %501.2 = IsType                   %501.1 isA lgl$-
  void                    Branch                   %501.2 -> BB511 (if true) | BB512 (if false)
BB502   <- [499]
  fs              %502.0 = FrameState         R     0x5615051e76a0+3009: [%433.1, %433.2, %433.3, <blt any>, %499.1], env=e0.7
  void                    Deopt              !v    %502.0, Typecheck@0x5614f925d5d0[Type#128], %499.1   !
BB491   <- [489]
  val?~+ | miss   %491.0 = CastType           d     dn %489.4
  val?+           %491.1 = Force!<value>            %491.0,    <vec+>
  void                    Branch                   %489.3 -> BB493 (if true) | BB494 (if false)
BB492   <- [489]
  void                    Nop                !     
  val?^ | miss    %492.1 = %489.4
  dr              %492.2 = Typecheck@0x5614f9e29c18[Type#51]
  goto BB298
BB233   <- [232, 258]
  val?^ | miss    %233.0 = LdVar              eR    row.names, e0.7
  val?            %233.1 = Force!<wrapped>    !v    %233.0, e0.7   <lgl$->
  lgl$#-          %233.2 = CheckTrueFalse     we    %233.1
  void                    Branch                   %233.2 -> BB252 (if true) | BB236 (if false)
BB503   <- [168]
  val?~- | miss   %503.0 = CastType           d     dn %168.2
  val?-           %503.1 = Force!<value>            %503.0,    <str->
  lgl$#-          %503.2 = IsType                   %503.1 isA val+   <true>
  void                    Branch                   %503.2 -> BB513 (if true) | BB514 (if false)
BB504   <- [168]
  void                    Nop                !     
  val?^ | miss    %504.1 = %168.2
  dr              %504.2 = Typecheck@0x5614f925d5d0[Type#302]
  goto BB169
BB509   <- [507]
  real$-          %509.0 = CastType           d     dn %507.2
  real$-          %509.1 = Add                d     %509.0, 1, elided   <real$->
  void                    StVar              lW    i.f, %509.1, e0.7
  lgl$#-          %509.3 = IsType                   %505.3 isA val?-
  void                    Branch                   %509.3 -> BB515 (if true) | BB516 (if false)
BB510   <- [507]
  void                    Nop                !     
  val?^ | miss    %510.1 = %507.2
  dr              %510.2 = Typecheck@0x5614f925d5d0[Type#185]
  goto BB272
BB272   <- [508, 510]
  val?^ | miss    %272.0 = Phi                      %508.1:BB508, %510.1:BB510
  val?^ | miss    %272.1 = %272.0
  dr              %272.2 = Phi                      %508.2:BB508, %510.2:BB510
  dr              %272.3 = %272.2
  fs              %272.4 = FrameState         R     0x5615051e76a0+4091: [%433.1, %433.2, %433.3, %505.3], env=e0.7
  void                    Deopt              !v    %272.4, %272.3, %272.1   !
BB511   <- [501]
  lgl$-           %511.0 = CastType           d     dn %501.1
  void                    StVar              lW    iA, %511.0, e0.7
  val?            %511.2 = CallBuiltin        !v    any(%511.0) e0.7   <lgl$->
  lgl$#-          %511.3 = IsType                   %511.2 isA lgl$-
  void                    Branch                   %511.3 -> BB517 (if true) | BB518 (if false)
BB512   <- [501]
  fs              %512.0 = FrameState         R     0x5615051e76a0+3017: [%433.1, %433.2, %433.3, <blt any>, %501.1], env=e0.7
  void                    Deopt              !v    %512.0, Typecheck@0x5614f925d5d0[Type#129], %501.1   !
BB493   <- [491]
  val?+           %493.0 = CastType           d     dn %489.2   <(nil|vec)+>
  val+            %493.1 = CallSafeBuiltin    wed   c(%493.0, %491.1)    <vec+>
  (cls|spec|blt)  %493.2 = LdFun              !v    attributes<-, <0x5614f88a7128>, e417.5
  val?^ | miss    %493.3 = LdVar              eR    .Data, e417.5
  val?            %493.4 = Force!<wrapped>    !v    %493.3, e417.5   <val?+>
  val?            %493.5 = NamedCall          !v    %493.2(%493.4, value=%493.1) e417.5
  void                    StVar              lW    .Data, %493.5, e417.5
  goto BB77
BB494   <- [491]
  void                    Nop                !     
  val?            %494.1 = %489.2
  dr              %494.2 = Typecheck@0x5614f9e29c18[Type#50]
  goto BB298
BB298   <- [492, 494]
  val?^ | miss    %298.0 = Phi                      %492.1:BB492, %494.1:BB494
  val?^ | miss    %298.1 = %298.0
  dr              %298.2 = Phi                      %492.2:BB492, %494.2:BB494
  dr              %298.3 = %298.2
  fs              %298.4 = FrameState         R     0x5615051e76a0+2455: [], env=e0.7
  fs              %298.5 = FrameState         R     0x5614fa81eb50+1361: [<blt c>, %489.2], env=e417.5, next=%298.4
  void                    Deopt              !v    %298.5, %298.3, %298.1   !
BB252   <- [233]
  val?^ | miss    %252.0 = LdVar              eR    rnames, e0.7
  lgl$#-          %252.1 = IsType                   %252.0 isA val?~- | miss
  void                    Branch                   %252.1 -> BB521 (if true) | BB522 (if false)
BB236   <- [233]
  void                    Nop                !     
  nil-            %236.1 = nil
  goto BB237
BB513   <- [503]
  val             %513.0 = ChkMissing         e     %168.0
  lgl$#-          %513.1 = IsType                   %513.0 isA int$-
  void                    Branch                   %513.1 -> BB519 (if true) | BB520 (if false)
BB514   <- [503]
  void                    Nop                !     
  lgl$#-          %514.1 = %503.2
  dr              %514.2 = DeadBranchReached@0x5614f925d5d0[Test#50]
  goto BB169
BB169   <- [504, 514, 520]
  val?^ | miss    %169.0 = Phi                      %504.1:BB504, %514.1:BB514, %520.1:BB520
  val?^ | miss    %169.1 = %169.0
  dr              %169.2 = Phi                      %504.2:BB504, %514.2:BB514, %520.2:BB520
  dr              %169.3 = %169.2
  fs              %169.4 = FrameState         R     0x5615051e76a0+6470: [%479.1, %479.2, %433.3], env=e0.7
  void                    Deopt              !v    %169.4, %169.3, %169.1   !
BB515   <- [509]
  val?-           %515.0 = CastType           d     dn %505.3   <vec->
  val?+           %515.1 = Subassign2_1D      wed   %515.0, %507.1, %509.1, elided
  void                    StVar              lW    f.matr, %515.1, e0.7
  int$-           %515.3 = %433.3
  goto BB114
BB516   <- [509]
  fs              %516.0 = FrameState         R     0x5615051e76a0+4147: [%433.1, %433.2, %433.3, %505.3, %507.1, %509.1], env=e0.7
  void                    Deopt              !v    %516.0, Typecheck@0x5614f925d5d0[Type#183], %505.3   !
BB517   <- [511]
  lgl$-           %517.0 = CastType           d     dn %511.2
  lgl$#-          %517.1 = CheckTrueFalse     e     %517.0
  void                    Branch                   %517.1 -> BB266 (if true) | BB96 (if false)
BB518   <- [511]
  void                    Nop                !     
  val?            %518.1 = %511.2
  dr              %518.2 = Typecheck@0x5614f925d5d0[Type#130]
  goto BB94
BB521   <- [252]
  val?~- | miss   %521.0 = CastType           d     dn %252.0
  val?-           %521.1 = Force!<value>            %521.0,    <str->
  val?-           %521.2 = %521.1
  goto BB237
BB522   <- [252]
  fs              %522.0 = FrameState         R     0x5615051e76a0+8584: [%233.2], env=e0.7
  void                    Deopt              !v    %522.0, Typecheck@0x5614f925d5d0[Type#425], %252.0   !
BB237   <- [236, 521]
  val?-           %237.0 = Phi                      %236.1:BB236, %521.2:BB521
  val?-           %237.1 = %237.0
  void                    StVar              lW    rns, %237.1, e0.7
  val?^ | miss    %237.3 = LdVar              eR    transpose, e0.7
  val?            %237.4 = Force!<wrapped>    !v    %237.3, e0.7   <lgl$->
  lgl$#-          %237.5 = CheckTrueFalse     we    %237.4
  void                    Branch                   %237.5 -> BB249 (if true) | BB240 (if false)
BB519   <- [513]
  int$-           %519.0 = CastType           d     dn %513.0
  val?            %519.1 = Extract1_1D        wed   %503.1, %519.0, elided   <str$->
  void                    StVar              lW    nm, %519.1, e0.7
  val?^ | miss    %519.3 = LdVar              eR    verbose, e0.7
  val?            %519.4 = Force!<wrapped>    !v    %519.3, e0.7   <lgl$->
  lgl$#-          %519.5 = CheckTrueFalse     we    %519.4
  void                    Branch                   %519.5 -> BB257 (if true) | BB173 (if false)
BB520   <- [513]
  void                    Nop                !     
  val             %520.1 = %513.0
  dr              %520.2 = Typecheck@0x5614f925d5d0[Type#304]
  goto BB169
BB114   <- [515, 607, 613]
  int$-           %114.0 = Phi                      %613.3:BB613, %607.3:BB607, %515.3:BB515
  int$-           %114.1 = %114.0
  int$-           %114.2 = Inc                      %114.1
  lgl$-           %114.3 = Lt                 d     %433.2, %114.2, elided
  lgl$#-          %114.4 = Identical                %114.3, true
  void                    Branch                   %114.4 -> BB154 (if true) | BB115 (if false)
BB266   <- [517]
  (cls|spec|blt)  %266.0 = LdFun              !v    <-, e0.7
  fs              %266.1 = FrameState         R     0x5615051e76a0+3071: [%433.1, %433.2, %433.3, %266.0], env=e0.7
  void                    Deopt              !v    %266.1, DeadCall@0x5614f925d5d0[Call#41], %266.0   !
BB96   <- [517]
  val?^ | miss    %96.0 = LdVar              eR    is.matrix, e0.7
  lgl$#-          %96.1 = Identical                <blt is.matrix>, %96.0   <true>
  void                    Branch                   %96.1 -> BB525 (if true) | BB526 (if false)
BB94   <- [518, 526, 528]
  val?^ | miss    %94.0 = Phi                      %518.1:BB518, %526.1:BB526, %528.1:BB528
  val?^ | miss    %94.1 = %94.0
  dr              %94.2 = Phi                      %518.2:BB518, %526.2:BB526, %528.2:BB528
  dr              %94.3 = %94.2
  fs              %94.4 = FrameState         R     0x5615051e76a0+3050: [%433.1, %433.2, %433.3, %511.2], env=e0.7
  void                    Deopt              !v    %94.4, %94.3, %94.1   !
BB249   <- [237]
  val?^ | miss    %249.0 = LdVar              eR    list, e0.7
  lgl$#-          %249.1 = Identical                <blt list>, %249.0   <@?>
  void                    Branch                   %249.1 -> BB251 (if true) | BB250 (if false)
BB240   <- [237]
  val?^ | miss    %240.0 = LdVar              eR    list, e0.7
  lgl$#-          %240.1 = Identical                <blt list>, %240.0   <true>
  void                    Branch                   %240.1 -> BB523 (if true) | BB524 (if false)
BB257   <- [519]
  (cls|spec|blt)  %257.0 = LdFun              !v    cat, e0.7
  fs              %257.1 = FrameState         R     0x5615051e76a0+6575: [%479.1, %479.2, %433.3, %257.0], env=e0.7
  void                    Deopt              !v    %257.1, DeadCall@0x5614f925d5d0[Call#98], %257.0   !
BB173   <- [519]
  val?^ | miss    %173.0 = LdVar              eR    strsplit, e0.7
  lgl$#-          %173.1 = Identical                %173.0, function(x, split, fixed=FALSE, perl=FALSE, us|...
  void                    Branch                   %173.1 -> BB543 (if true) | BB544 (if false)
BB154   <- [114]
  void                    Nop                !     
  goto BB155
BB115   <- [114]
  val?            %115.0 = Extract2_1D        wed   %433.1, %114.2, elided
  void                    StVar              lW    i, %115.0, e0.7
  val?^ | miss    %115.2 = LdVar              eR    fnames, e0.7
  lgl$#-          %115.3 = IsType                   %115.2 isA val?~- | miss
  void                    Branch                   %115.3 -> BB531 (if true) | BB532 (if false)
BB525   <- [96]
  val?^ | miss    %525.0 = LdVar              eR    f, e0.7
  lgl$#-          %525.1 = IsType                   %525.0 isA real-
  void                    Branch                   %525.1 -> BB527 (if true) | BB528 (if false)
BB526   <- [96]
  void                    Nop                !     
  lgl$#-          %526.1 = %96.1
  dr              %526.2 = DeadBranchReached@0x5614f925d5d0[Test#29]
  goto BB94
BB251   <- [249]
  val?^ | miss    %251.0 = LdVar              eR    vNms, e0.7
  val?            %251.1 = Force!             !v    %251.0, e0.7   <val?_>
  val?^ | miss    %251.2 = LdVar              eR    rns, e0.7
  val?            %251.3 = Force!             !v    %251.2, e0.7   <val?_>
  val+            %251.4 = CallSafeBuiltin    wed   list(%251.1, %251.3)    <val?_>
  val+            %251.5 = %251.4
  goto BB241
BB250   <- [249]
  (cls|spec|blt)  %250.0 = LdFun              !v    list, e0.7
  fs              %250.1 = FrameState         R     0x5615051e76a0+8791: [%250.0], env=e0.7
  void                    Deopt              !v    %250.1, DeadCall@0x5614f925d5d0[Call#137], %250.0   !
BB523   <- [240]
  val?^ | miss    %523.0 = LdVar              eR    rns, e0.7
  lgl$#-          %523.1 = IsType                   %523.0 isA val?~- | miss
  void                    Branch                   %523.1 -> BB529 (if true) | BB530 (if false)
BB524   <- [240]
  void                    Nop                !     
  lgl$#-          %524.1 = %240.1
  dr              %524.2 = DeadBranchReached@0x5614f925d5d0[Test#68]
  goto BB238
BB543   <- [173]
  val?^ | miss    %543.0 = LdVar              eR    nm, e0.7
  lgl$#-          %543.1 = IsType                   %543.0 isA val?~- | miss
  void                    Branch                   %543.1 -> BB551 (if true) | BB552 (if false)
BB544   <- [173]
  void                    Nop                !     
  val?^ | miss    %544.1 = %173.0
  dr              %544.2 = CallTarget@0x5614f925d5d0[Call#100]
  goto BB171
BB531   <- [115]
  val?~- | miss   %531.0 = CastType           d     dn %115.2
  val?-           %531.1 = Force!<value>            %531.0,    <str->
  lgl$#-          %531.2 = IsType                   %531.1 isA val+   <true>
  void                    Branch                   %531.2 -> BB533 (if true) | BB534 (if false)
BB532   <- [115]
  void                    Nop                !     
  val?^ | miss    %532.1 = %115.2
  dr              %532.2 = Typecheck@0x5614f925d5d0[Type#187]
  goto BB116
BB527   <- [525]
  real-           %527.0 = CastType           d     dn %525.0
  lgl$#-          %527.1 = CallSafeBuiltin    wed   is.matrix(%527.0)    <lgl$->
  void                    Branch                   %527.1 -> BB265 (if true) | BB99 (if false)
BB528   <- [525]
  void                    Nop                !     
  val?^ | miss    %528.1 = %525.0
  dr              %528.2 = Typecheck@0x5614f925d5d0[Type#141]
  goto BB94
BB241   <- [251, 545]
  val+            %241.0 = Phi                      %545.3:BB545, %251.5:BB251
  val+            %241.1 = %241.0
  (cls|spec|blt)  %241.2 = LdFun              !v    dimnames<-, <0x5614f88a7358>, e0.7
  val?^ | miss    %241.3 = LdVar              eR    r, e0.7
  val?            %241.4 = Force!<value>      !v    %241.3, e0.7   <other>
  val?            %241.5 = NamedCall          !v    %241.2(%241.4, value=%241.1) e0.7
  void                    StVar              lW    r, %241.5, e0.7
  val?^ | miss    %241.7 = LdVar              eR    c, e0.7
  lgl$#-          %241.8 = Identical                <blt c>, %241.7   <true>
  void                    Branch                   %241.8 -> BB559 (if true) | BB560 (if false)
BB529   <- [523]
  val?~- | miss   %529.0 = CastType           d     dn %523.0
  val?-           %529.1 = Force!<value>            %529.0,    <str->
  val?^ | miss    %529.2 = LdVar              eR    vNms, e0.7
  lgl$#-          %529.3 = IsType                   %529.2 isA val?~- | miss
  void                    Branch                   %529.3 -> BB545 (if true) | BB546 (if false)
BB530   <- [523]
  void                    Nop                !     
  val?^ | miss    %530.1 = %523.0
  dr              %530.2 = Typecheck@0x5614f925d5d0[Type#429]
  goto BB238
BB238   <- [524, 530, 546]
  val?^ | miss    %238.0 = Phi                      %524.1:BB524, %530.1:BB530, %546.1:BB546
  val?^ | miss    %238.1 = %238.0
  dr              %238.2 = Phi                      %524.2:BB524, %530.2:BB530, %546.2:BB546
  dr              %238.3 = %238.2
  fs              %238.4 = FrameState         R     0x5615051e76a0+8638: [%237.5], env=e0.7
  void                    Deopt              !v    %238.4, %238.3, %238.1   !
BB551   <- [543]
  val?~- | miss   %551.0 = CastType           d     dn %543.0
  val?-           %551.1 = Force!<value>            %551.0,    <str$->
  vec+            %551.2 = CallSafeBuiltin    wed   strsplit(%551.1, ":", true, false, false)    <vec$->
  lgl$#-          %551.3 = IsType                   %551.2 isA val?-
  void                    Branch                   %551.3 -> BB553 (if true) | BB554 (if false)
BB552   <- [543]
  void                    Nop                !     
  val?^ | miss    %552.1 = %543.0
  dr              %552.2 = Typecheck@0x5614f925d5d0[Type#313]
  goto BB171
BB171   <- [544, 552]
  val?^ | miss    %171.0 = Phi                      %544.1:BB544, %552.1:BB552
  val?^ | miss    %171.1 = %171.0
  dr              %171.2 = Phi                      %544.2:BB544, %552.2:BB552
  dr              %171.3 = %171.2
  fs              %171.4 = FrameState         R     0x5615051e76a0+6560: [%479.1, %479.2, %433.3, %519.5], env=e0.7
  void                    Deopt              !v    %171.4, %171.3, %171.1   !
BB533   <- [531]
  val             %533.0 = ChkMissing         e     %115.0
  lgl$#-          %533.1 = IsType                   %533.0 isA int$-
  void                    Branch                   %533.1 -> BB535 (if true) | BB536 (if false)
BB534   <- [531]
  void                    Nop                !     
  lgl$#-          %534.1 = %531.2
  dr              %534.2 = DeadBranchReached@0x5614f925d5d0[Test#35]
  goto BB116
BB116   <- [532, 534, 536]
  val?^ | miss    %116.0 = Phi                      %532.1:BB532, %534.1:BB534, %536.1:BB536
  val?^ | miss    %116.1 = %116.0
  dr              %116.2 = Phi                      %532.2:BB532, %534.2:BB534, %536.2:BB536
  dr              %116.3 = %116.2
  fs              %116.4 = FrameState         R     0x5615051e76a0+4187: [%433.1, %433.2, %114.2], env=e0.7
  void                    Deopt              !v    %116.4, %116.3, %116.1   !
BB265   <- [527]
  (cls|spec|blt)  %265.0 = LdFun              !v    nrow, e0.7
  fs              %265.1 = FrameState         R     0x5615051e76a0+3524: [%433.1, %433.2, %433.3, %265.0], env=e0.7
  void                    Deopt              !v    %265.1, DeadCall@0x5614f925d5d0[Call#49], %265.0   !
BB99   <- [527]
  val?^ | miss    %99.0 = LdVar              eR    c, e0.7
  lgl$#-          %99.1 = Identical                <blt c>, %99.0   <true>
  void                    Branch                   %99.1 -> BB541 (if true) | BB542 (if false)
BB559   <- [241]
  val?^ | miss    %559.0 = LdVar              eR    hasInt, e0.7
  lgl$#-          %559.1 = IsType                   %559.0 isA lgl$-
  void                    Branch                   %559.1 -> BB561 (if true) | BB562 (if false)
BB560   <- [241]
  void                    Nop                !     
  lgl$#-          %560.1 = %241.8
  dr              %560.2 = DeadBranchReached@0x5614f925d5d0[Test#70]
  goto BB242
BB545   <- [529]
  val?~- | miss   %545.0 = CastType           d     dn %529.2
  val?-           %545.1 = Force!<value>            %545.0,    <str->
  val+            %545.2 = CallSafeBuiltin    wed   list(%529.1, %545.1)    <vec->
  val+            %545.3 = %545.2
  goto BB241
BB546   <- [529]
  void                    Nop                !     
  val?^ | miss    %546.1 = %529.2
  dr              %546.2 = Typecheck@0x5614f925d5d0[Type#430]
  goto BB238
BB553   <- [551]
  vec-            %553.0 = CastType           d     dn %551.2   <vec$->
  val             %553.1 = Extract2_1D        wed   %553.0, 1, elided   <str$->
  void                    StVar              lW    nmSplits, %553.1, e0.7
  val?^ | miss    %553.3 = LdVar              eR    sparseInt.r, e0.7
  lgl$#-          %553.4 = Identical                %553.3, function(rList, do.names=TRUE, forceSparse=FAL|...
  void                    Branch                   %553.4 -> BB555 (if true) | BB556 (if false)
BB554   <- [551]
  fs              %554.0 = FrameState         R     0x5615051e76a0+6657: [%479.1, %479.2, %433.3], env=e0.7
  prom-           %554.1 = MkArg                    %551.1, model.spmatrix[0x5615050e49e0]_p29 (!refl), e0.7
  val?~           %554.2 = CastType                 up %554.1
  env             e554.3 = (MkEnv)            l     useBytes(miss)=false, perl(miss)=false, fixed=true, split=":", x=%554.2, parent=R_BaseNamespace, context 0
  fs              %554.4 = FrameState         R     0x5614fa98d300+165: [%551.2], env=e554.3, next=%554.0
  void                    Deopt              !v    %554.4, Typecheck@0x5614f925d5d0[Type#314], %551.2   !
BB535   <- [533]
  int$-           %535.0 = CastType           d     dn %533.0
  val?            %535.1 = Extract1_1D        wed   %531.1, %535.0, elided   <str$->
  void                    StVar              lW    nam, %535.1, e0.7
  val?^ | miss    %535.3 = LdVar              eR    mf, e0.7
  val?            %535.4 = Force!<value>      !v    %535.3, e0.7   <vec+>
  lgl$#-          %535.5 = IsType                   %535.4 isA val+   <true>
  lgl$#-          %535.6 = IsType                   %535.4 isA val?+
  void                    Branch                   %535.5 -> BB537 (if true) | BB538 (if false)
BB536   <- [533]
  void                    Nop                !     
  val             %536.1 = %533.0
  dr              %536.2 = Typecheck@0x5614f925d5d0[Type#189]
  goto BB116
BB541   <- [99]
  val?^ | miss    %541.0 = LdVar              eR    length, e0.7
  lgl$#-          %541.1 = Identical                <blt length>, %541.0   <true>
  void                    Branch                   %541.1 -> BB549 (if true) | BB550 (if false)
BB542   <- [99]
  void                    Nop                !     
  lgl$#-          %542.1 = %99.1
  dr              %542.2 = DeadBranchReached@0x5614f925d5d0[Test#30]
  goto BB97
BB561   <- [559]
  lgl$-           %561.0 = CastType           d     dn %559.0
  lgl$#-          %561.1 = CheckTrueFalse     e     %561.0
  void                    Branch                   %561.1 -> BB248 (if true) | BB244 (if false)
BB562   <- [559]
  void                    Nop                !     
  val?^ | miss    %562.1 = %559.0
  dr              %562.2 = Typecheck@0x5614f925d5d0[Type#442]
  goto BB242
BB242   <- [560, 562]
  val?^ | miss    %242.0 = Phi                      %560.1:BB560, %562.1:BB562
  val?^ | miss    %242.1 = %242.0
  dr              %242.2 = Phi                      %560.2:BB560, %562.2:BB562
  dr              %242.3 = %242.2
  fs              %242.4 = FrameState         R     0x5615051e76a0+8946: [], env=e0.7
  void                    Deopt              !v    %242.4, %242.3, %242.1   !
BB555   <- [553]
  prom-           %555.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p30, e0.7
  prom-           %555.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p33, e0.7
  val?            %555.2 = StaticCall         !v    sparseInt.r[0x5614fdd04a00](%555.0, true, true, %555.1) { 0 1n 2n 3n } e0.7   <other>
  void                    StVar              lW    rj, %555.2, e0.7
  val?^ | miss    %555.4 = LdVar              eR    verbose, e0.7
  val?            %555.5 = Force!<wrapped>    !v    %555.4, e0.7   <lgl$->
  lgl$#-          %555.6 = CheckTrueFalse     we    %555.5
  void                    Branch                   %555.6 -> BB256 (if true) | BB178 (if false)
BB556   <- [553]
  fs              %556.0 = FrameState         R     0x5615051e76a0+6715: [%479.1, %479.2, %433.3], env=e0.7
  void                    Deopt              !v    %556.0, CallTarget@0x5614f925d5d0[Call#101], %553.3   !
BB537   <- [535]
  val?^ | miss    %537.0 = LdVar              eR    i, e0.7
  lgl$#-          %537.1 = IsType                   %537.0 isA int$-
  void                    Branch                   %537.1 -> BB539 (if true) | BB540 (if false)
BB538   <- [535]
  void                    Nop                !     
  lgl$#-          %538.1 = %535.5
  dr              %538.2 = DeadBranchReached@0x5614f925d5d0[Test#36]
  goto BB118
BB549   <- [541]
  (int|real)$-    %549.0 = CallSafeBuiltin    wed   length(%527.0)    <int$->
  lgl$#-          %549.1 = IsType                   %549.0 isA int$-
  void                    Branch                   %549.1 -> BB557 (if true) | BB558 (if false)
BB550   <- [541]
  void                    Nop                !     
  lgl$#-          %550.1 = %541.1
  dr              %550.2 = DeadBranchReached@0x5614f925d5d0[Test#31]
  goto BB97
BB97   <- [542, 550]
  val?^ | miss    %97.0 = Phi                      %542.1:BB542, %550.1:BB550
  val?^ | miss    %97.1 = %97.0
  dr              %97.2 = Phi                      %542.2:BB542, %550.2:BB550
  dr              %97.3 = %97.2
  fs              %97.4 = FrameState         R     0x5615051e76a0+3195: [%433.1, %433.2, %433.3, %527.1], env=e0.7
  void                    Deopt              !v    %97.4, %97.3, %97.1   !
BB248   <- [561]
  void                    Nop                !     
  int$#-          %248.1 = 0L
  goto BB245
BB244   <- [561]
  void                    Nop                !     
  nil-            %244.1 = nil
  goto BB245
BB256   <- [555]
  (cls|spec|blt)  %256.0 = LdFun              !v    cat, e0.7
  fs              %256.1 = FrameState         R     0x5615051e76a0+6822: [%479.1, %479.2, %433.3, %256.0], env=e0.7
  void                    Deopt              !v    %256.1, DeadCall@0x5614f925d5d0[Call#103], %256.0   !
BB178   <- [555]
  val?^ | miss    %178.0 = LdVar              eR    transpose, e0.7
  val?            %178.1 = Force!<wrapped>    !v    %178.0, e0.7   <lgl$->
  lgl$#-          %178.2 = CheckTrueFalse     we    %178.1
  void                    Branch                   %178.2 -> BB253 (if true) | BB181 (if false)
BB539   <- [537]
  int$-           %539.0 = CastType           d     dn %537.0
  void                    Branch                   %535.6 -> BB547 (if true) | BB548 (if false)
BB540   <- [537]
  void                    Nop                !     
  val?^ | miss    %540.1 = %537.0
  dr              %540.2 = Typecheck@0x5614f925d5d0[Type#193]
  goto BB118
BB118   <- [538, 540, 548]
  val?^ | miss    %118.0 = Phi                      %538.1:BB538, %540.1:BB540, %548.1:BB548
  val?^ | miss    %118.1 = %118.0
  dr              %118.2 = Phi                      %538.2:BB538, %540.2:BB540, %548.2:BB548
  dr              %118.3 = %118.2
  fs              %118.4 = FrameState         R     0x5615051e76a0+4271: [%433.1, %433.2, %114.2, %535.4], env=e0.7
  void                    Deopt              !v    %118.4, %118.3, %118.1   !
BB557   <- [549]
  int$-           %557.0 = CastType           d     dn %549.0
  int-            %557.1 = CallSafeBuiltin    wed   c(1L, %557.0)    <int->
  (cls|spec|blt)  %557.2 = LdFun              !v    dim<-, <0x5614f88a7278>, e0.7
  val?^ | miss    %557.3 = LdVar              eR    f, e0.7
  lgl$#-          %557.4 = IsType                   %557.3 isA real-
  void                    Branch                   %557.4 -> BB565 (if true) | BB566 (if false)
BB558   <- [549]
  fs              %558.0 = FrameState         R     0x5615051e76a0+3368: [%433.1, %433.2, %433.3, <blt c>, 1L, %549.0], env=e0.7
  void                    Deopt              !v    %558.0, Typecheck@0x5614f925d5d0[Type#147], %549.0   !
BB245   <- [244, 248]
  (nil|int)-      %245.0 = Phi                      %244.1:BB244, %248.1:BB248
  (nil|int)-      %245.1 = %245.0
  (cls|spec|blt)  %245.2 = LdFun              !v    rep, <0x5614f88bb9b0>, e0.7
  prom-           %245.3 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p44, e0.7
  prom-           %245.4 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p45, e0.7
  val?            %245.5 = Call               !v    %245.2(%245.3, %245.4) e0.7   <int->
  lgl$#-          %245.6 = IsType                   %245.5 isA int-
  void                    Branch                   %245.6 -> BB573 (if true) | BB574 (if false)
BB253   <- [178]
  val?^ | miss    %253.0 = LdVar              eR    .Call, e0.7
  lgl$#-          %253.1 = Identical                <blt .Call>, %253.0   <@?>
  void                    Branch                   %253.1 -> BB255 (if true) | BB254 (if false)
BB181   <- [178]
  val?^ | miss    %181.0 = LdVar              eR    .Call, e0.7
  lgl$#-          %181.1 = Identical                <blt .Call>, %181.0   <true>
  void                    Branch                   %181.1 -> BB567 (if true) | BB568 (if false)
BB547   <- [539]
  val?+           %547.0 = CastType           d     dn %535.4   <vec+>
  val?            %547.1 = Extract2_1D        wed   %547.0, %539.0, elided   <int>
  void                    StVar              lW    f, %547.1, e0.7
  val?^ | miss    %547.3 = LdVar              eR    is.f, e0.7
  lgl$#-          %547.4 = IsType                   %547.3 isA lgl+
  void                    Branch                   %547.4 -> BB563 (if true) | BB564 (if false)
BB548   <- [539]
  void                    Nop                !     
  val?            %548.1 = %535.4
  dr              %548.2 = Typecheck@0x5614f925d5d0[Type#191]
  goto BB118
BB565   <- [557]
  real-           %565.0 = CastType           d     dn %557.3
  val?            %565.1 = NamedCall          !v    %557.2(%565.0, value=%557.1) e0.7
  void                    StVar              lW    f, %565.1, e0.7
  int$-           %565.3 = Extract1_1D        wed   %557.1, 1, elided   <int$->
  void                    StVar              lW    nr, %565.3, e0.7
  val?^ | miss    %565.5 = LdVar              eR    rownames, e0.7
  lgl$#-          %565.6 = Identical                %565.5, function(x, do.NULL=TRUE, prefix="row") <(rir:|...
  void                    Branch                   %565.6 -> BB575 (if true) | BB576 (if false)
BB566   <- [557]
  fs              %566.0 = FrameState         R     0x5615051e76a0+3395: [%433.1, %433.2, %433.3, %557.1], env=e0.7
  void                    Deopt              !v    %566.0, Typecheck@0x5614f925d5d0[Type#149], %557.3   !
BB573   <- [245]
  int-            %573.0 = CastType           d     dn %245.5
  int-            %573.1 = CallSafeBuiltin    wed   c(%245.1, %573.0)    <int->
  (cls|spec|blt)  %573.2 = LdFun              !v    attr<-, <0x5614f88aae08>, e0.7
  val?^ | miss    %573.3 = LdVar              eR    r, e0.7
  val?            %573.4 = Force!<value>      !v    %573.3, e0.7   <other>
  val?            %573.5 = NamedCall          !v    %573.2(%573.4, "assign", value=%573.1) e0.7   <other>
  void                    StVar              lW    r, %573.5, e0.7
  val             %573.7 = ChkMissing         e     %573.5
  void                    Visible            v     
  void                    Return             l     %573.5
BB574   <- [245]
  fs              %574.0 = FrameState         R     0x5615051e76a0+9085: [<blt c>, %245.1, %245.5], env=e0.7
  void                    Deopt              !v    %574.0, Typecheck@0x5614f925d5d0[Type#445], %245.5   !
BB255   <- [253]
  val?^ | miss    %255.0 = LdVar              eR    Csparse_vertcat, e0.7
  val?            %255.1 = Force!             !v    %255.0, e0.7   <val?_>
  val?^ | miss    %255.2 = LdVar              eR    r, e0.7
  val?            %255.3 = Force!             !v    %255.2, e0.7   <val?_>
  val?^ | miss    %255.4 = LdVar              eR    rj, e0.7
  val?            %255.5 = Force!             !v    %255.4, e0.7   <val?_>
  val?            %255.6 = CallBuiltin        !v    .Call(%255.1, %255.3, %255.5) e0.7   <val?_>
  val?            %255.7 = %255.6
  goto BB184
BB254   <- [253]
  (cls|spec|blt)  %254.0 = LdFun              !v    .Call, e0.7
  fs              %254.1 = FrameState         R     0x5615051e76a0+7060: [%479.1, %479.2, %433.3, %254.0], env=e0.7
  void                    Deopt              !v    %254.1, DeadCall@0x5614f925d5d0[Call#112], %254.0   !
BB567   <- [181]
  val?^ | miss    %567.0 = LdVar              eR    Csparse_horzcat, e0.7
  val?            %567.1 = Force!<value>      !v    %567.0, e0.7   <vec>
  val?^ | miss    %567.2 = LdVar              eR    r, e0.7
  val?            %567.3 = Force!<value>      !v    %567.2, e0.7   <other>
  val?^ | miss    %567.4 = LdVar              eR    t, e0.7
  lgl$#-          %567.5 = Identical                %567.4, function(x) <(rir::DispatchTable*)0x5614ffe3b5|...
  void                    Branch                   %567.5 -> BB569 (if true) | BB570 (if false)
BB568   <- [181]
  fs              %568.0 = FrameState         R     0x5615051e76a0+6865: [%479.1, %479.2, %433.3, %178.2], env=e0.7
  void                    Deopt              !v    %568.0, DeadBranchReached@0x5614f925d5d0[Test#53], %181.1   !
BB563   <- [547]
  lgl+            %563.0 = CastType           d     dn %547.3
  lgl+            %563.1 = Extract1_1D        wed   %563.0, %539.0, elided   <lgl$+>
  lgl$#-          %563.2 = CheckTrueFalse     we    %563.1
  void                    Branch                   %563.2 -> BB145 (if true) | BB124 (if false)
BB564   <- [547]
  fs              %564.0 = FrameState         R     0x5615051e76a0+4337: [%433.1, %433.2, %114.2], env=e0.7
  void                    Deopt              !v    %564.0, Typecheck@0x5614f925d5d0[Type#195], %547.3   !
BB575   <- [565]
  prom-           %575.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p17 (!refl), e0.7
  val?            %575.1 = StaticCall         !v    rownames[0x5614fe425ce0](%575.0) e0.7   <nil->
  lgl$-           %575.2 = Is                       %575.1, NULL
  lgl$#-          %575.3 = CheckTrueFalse     e     %575.2
  void                    Branch                   %575.3 -> BB262 (if true) | BB108 (if false)
BB576   <- [565]
  fs              %576.0 = FrameState         R     0x5615051e76a0+3565: [%433.1, %433.2, %433.3], env=e0.7
  void                    Deopt              !v    %576.0, CallTarget@0x5614f925d5d0[Call#51], %565.5   !
BB184   <- [255, 569]
  val?            %184.0 = Phi                      %569.3:BB569, %255.7:BB255
  val?            %184.1 = %184.0
  void                    StVar              lW    r, %184.1, e0.7
  val?^ | miss    %184.3 = LdVar              eR    c, e0.7
  lgl$#-          %184.4 = Identical                <blt c>, %184.3   <true>
  void                    Branch                   %184.4 -> BB571 (if true) | BB572 (if false)
BB569   <- [567]
  prom-           %569.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p34, e0.7
  val?            %569.1 = StaticCall         !v    t[0x5614ff8ec030](%569.0) e0.7   <other>
  val?            %569.2 = CallBuiltin        !v    .Call(%567.1, %567.3, %569.1) e0.7   <other>
  val?            %569.3 = %569.2
  goto BB184
BB570   <- [567]
  fs              %570.0 = FrameState         R     0x5615051e76a0+6963: [%479.1, %479.2, %433.3, <blt .Call>, %567.1, %567.3], env=e0.7
  void                    Deopt              !v    %570.0, CallTarget@0x5614f925d5d0[Call#111], %567.4   !
BB145   <- [563]
  val?^ | miss    %145.0 = LdVar              eR    factorPattern, e0.7
  lgl$#-          %145.1 = IsType                   %145.0 isA int+
  void                    Branch                   %145.1 -> BB581 (if true) | BB582 (if false)
BB124   <- [563]
  val?^ | miss    %124.0 = LdVar              eR    any, e0.7
  lgl$#-          %124.1 = Identical                <blt any>, %124.0   <@?>
  void                    Branch                   %124.1 -> BB126 (if true) | BB125 (if false)
BB262   <- [575]
  val?^ | miss    %262.0 = LdVar              eR    nr, e0.7
  lgl$#-          %262.1 = IsType                   %262.0 isA int$-
  void                    Branch                   %262.1 -> BB585 (if true) | BB586 (if false)
BB108   <- [575]
  void                    Nop                !     
  goto BB109
BB571   <- [184]
  val?^ | miss    %571.0 = LdVar              eR    vNms, e0.7
  lgl$#-          %571.1 = IsType                   %571.0 isA val?~- | miss
  void                    Branch                   %571.1 -> BB577 (if true) | BB578 (if false)
BB572   <- [184]
  void                    Nop                !     
  lgl$#-          %572.1 = %184.4
  dr              %572.2 = DeadBranchReached@0x5614f925d5d0[Test#55]
  goto BB185
BB581   <- [145]
  int+            %581.0 = CastType           d     dn %145.0
  int+            %581.1 = Extract1_2D        wed   %581.0, %539.0, missingArg, elided   <int+>
  void                    StVar              lW    fp, %581.1, e0.7
  val?^ | miss    %581.3 = LdVar              eR    attr, e0.7
  lgl$#-          %581.4 = Identical                <blt attr>, %581.3   <true>
  void                    Branch                   %581.4 -> BB583 (if true) | BB584 (if false)
BB582   <- [145]
  fs              %582.0 = FrameState         R     0x5615051e76a0+4404: [%433.1, %433.2, %114.2, %563.2], env=e0.7
  void                    Deopt              !v    %582.0, Typecheck@0x5614f925d5d0[Type#245], %145.0   !
BB126   <- [124]
  val?^ | miss    %126.0 = LdVar              eR    class, e0.7
  lgl$#-          %126.1 = Identical                <blt class>, %126.0   <@?>
  void                    Branch                   %126.1 -> BB128 (if true) | BB127 (if false)
BB125   <- [124]
  (cls|spec|blt)  %125.0 = LdFun              !v    any, e0.7
  fs              %125.1 = FrameState         R     0x5615051e76a0+4437: [%433.1, %433.2, %114.2, %125.0], env=e0.7
  void                    Deopt              !v    %125.1, DeadCall@0x5614f925d5d0[Call#59], %125.0   !
BB585   <- [262]
  int$-           %585.0 = CastType           d     dn %262.0
  lgl$-           %585.1 = Eq                 d     %585.0, 1, elided   <lgl$->
  lgl$#-          %585.2 = CheckTrueFalse     e     %585.1
  void                    Branch                   %585.2 -> BB264 (if true) | BB263 (if false)
BB586   <- [262]
  void                    Nop                !     
  val?^ | miss    %586.1 = %262.0
  dr              %586.2 = Typecheck@0x5614f925d5d0[Type#157]
  goto BB106
BB109   <- [108, 615]
  val?^ | miss    %109.0 = LdVar              eR    f, e0.7
  lgl$#-          %109.1 = IsType                   %109.0 isA real+
  void                    Branch                   %109.1 -> BB593 (if true) | BB594 (if false)
BB577   <- [571]
  val?~- | miss   %577.0 = CastType           d     dn %571.0
  val?-           %577.1 = Force!<value>            %577.0,    <str->
  val?^ | miss    %577.2 = LdVar              eR    dimnames, e0.7
  lgl$#-          %577.3 = Identical                <blt dimnames>, %577.2   <true>
  void                    Branch                   %577.3 -> BB579 (if true) | BB580 (if false)
BB578   <- [571]
  void                    Nop                !     
  val?^ | miss    %578.1 = %571.0
  dr              %578.2 = Typecheck@0x5614f925d5d0[Type#353]
  goto BB185
BB185   <- [572, 578, 580]
  val?^ | miss    %185.0 = Phi                      %572.1:BB572, %578.1:BB578, %580.1:BB580
  val?^ | miss    %185.1 = %185.0
  dr              %185.2 = Phi                      %572.2:BB572, %578.2:BB578, %580.2:BB580
  dr              %185.3 = %185.2
  fs              %185.4 = FrameState         R     0x5615051e76a0+7175: [%479.1, %479.2, %433.3], env=e0.7
  void                    Deopt              !v    %185.4, %185.3, %185.1   !
BB583   <- [581]
  val             %583.0 = ChkMissing         e     %547.1
  val?            %583.1 = CallBuiltin        !v    attr(%547.1, "contrasts") e0.7   <str$->
  void                    StVar              lW    contr, %583.1, e0.7
  val?^ | miss    %583.3 = LdVar              eR    lapply, e0.7
  lgl$#-          %583.4 = Identical                %583.3, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %583.4 -> BB589 (if true) | BB590 (if false)
BB584   <- [581]
  fs              %584.0 = FrameState         R     0x5615051e76a0+5505: [%433.1, %433.2, %114.2], env=e0.7
  void                    Deopt              !v    %584.0, DeadBranchReached@0x5614f925d5d0[Test#46], %581.4   !
BB128   <- [126]
  val             %128.0 = ChkMissing         e     %547.1
  val?            %128.1 = CallBuiltin        !v    class(%547.1) e0.7   <val?_>
  void                    StVar              lW    cl, %128.1, e0.7
  lgl$#-          %128.3 = IsType                   %128.1 isA val?+
  void                    Branch                   %128.3 -> BB591 (if true) | BB592 (if false)
BB127   <- [126]
  (cls|spec|blt)  %127.0 = LdFun              !v    class, e0.7
  fs              %127.1 = FrameState         R     0x5615051e76a0+4497: [%433.1, %433.2, %114.2, <blt any>, %127.0], env=e0.7
  void                    Deopt              !v    %127.1, DeadCall@0x5614f925d5d0[Call#61], %127.0   !
BB264   <- [585]
  val?^ | miss    %264.0 = LdVar              eR    nam, e0.7
  lgl$#-          %264.1 = IsType                   %264.0 isA val?~- | miss
  void                    Branch                   %264.1 -> BB601 (if true) | BB602 (if false)
BB263   <- [585]
  (cls|spec|blt)  %263.0 = LdFun              !v    paste, e0.7
  fs              %263.1 = FrameState         R     0x5615051e76a0+3655: [%433.1, %433.2, %433.3, %263.0], env=e0.7
  void                    Deopt              !v    %263.1, DeadCall@0x5614f925d5d0[Call#52], %263.0   !
BB106   <- [586, 602, 612, 616]
  val?^ | miss    %106.0 = Phi                      %586.1:BB586, %602.1:BB602, %612.1:BB612, %616.1:BB616
  val?^ | miss    %106.1 = %106.0
  dr              %106.2 = Phi                      %586.2:BB586, %602.2:BB602, %612.2:BB612, %616.2:BB616
  dr              %106.3 = %106.2
  fs              %106.4 = FrameState         R     0x5615051e76a0+3597: [%433.1, %433.2, %433.3, %575.1], env=e0.7
  void                    Deopt              !v    %106.4, %106.3, %106.1   !
BB593   <- [109]
  real+           %593.0 = CastType           d     dn %109.0
  val?^ | miss    %593.1 = LdVar              eR    mf, e0.7
  val?            %593.2 = Force!<value>      !v    %593.1, e0.7   <vec$+>
  lgl$#-          %593.3 = IsType                   %593.2 isA val?+
  val?^ | miss    %593.4 = LdVar              eR    i, e0.7
  lgl$#-          %593.5 = IsType                   %593.4 isA int$-
  void                    Branch                   %593.5 -> BB603 (if true) | BB604 (if false)
BB594   <- [109]
  fs              %594.0 = FrameState         R     0x5615051e76a0+3796: [%433.1, %433.2, %433.3], env=e0.7
  void                    Deopt              !v    %594.0, Typecheck@0x5614f925d5d0[Type#166], %109.0   !
BB579   <- [577]
  val?^ | miss    %579.0 = LdVar              eR    rj, e0.7
  val?            %579.1 = Force!<value>      !v    %579.0, e0.7   <other>
  val?            %579.2 = CallBuiltin        !v    dimnames(%579.1) e0.7   <vec->
  lgl$#-          %579.3 = IsType                   %579.2 isA val+   <true>
  lgl$#-          %579.4 = IsType                   %579.2 isA val?-
  void                    Branch                   %579.3 -> BB587 (if true) | BB588 (if false)
BB580   <- [577]
  void                    Nop                !     
  lgl$#-          %580.1 = %577.3
  dr              %580.2 = DeadBranchReached@0x5614f925d5d0[Test#57]
  goto BB185
BB589   <- [583]
  prom-           %589.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p18, e0.7
  cls             %589.1 = MkCls                    model.spmatrix@Prom(25)0, e0.7
  prom-           %589.2 = MkArg                    %589.1, model.spmatrix[0x5615050e49e0]_p25 (!refl), e0.7
  val?            %589.3 = StaticCall         !v    lapply[0x5614fbe03240](%589.0, %589.2) { 0 1 } e0.7   <vec->
  val?^ | miss    %589.4 = LdVar              eR    f.matr !upd, e0.7
  lgl$#-          %589.5 = IsType                   %589.4 isA val?~+ | miss
  void                    Branch                   %589.5 -> BB597 (if true) | BB598 (if false)
BB590   <- [583]
  fs              %590.0 = FrameState         R     0x5615051e76a0+5621: [%433.1, %433.2, %114.2], env=e0.7
  void                    Deopt              !v    %590.0, CallTarget@0x5614f925d5d0[Call#77], %583.3   !
BB591   <- [128]
  val?+           %591.0 = CastType           d     dn %128.1   <val?_>
  lgl             %591.1 = Eq                 wed   %591.0, "AsIs", elided   <val?_>
  void                    StVar              lW    iA, %591.1, e0.7
  val?            %591.3 = CallBuiltin        !v    any(%591.1) e0.7   <val?_>
  lgl$#-          %591.4 = CheckTrueFalse     we    %591.3
  void                    Branch                   %591.4 -> BB144 (if true) | BB131 (if false)
BB592   <- [128]
  fs              %592.0 = FrameState         R     0x5615051e76a0+4576: [%433.1, %433.2, %114.2, <blt any>, %128.1], env=e0.7
  void                    Deopt              !v    %592.0, Typecheck@0x5614f925d5d0[Type#204], %128.1   !
BB601   <- [264]
  val?~- | miss   %601.0 = CastType           d     dn %264.0
  val?-           %601.1 = Force!<value>            %601.0,    <str$->
  val?^ | miss    %601.2 = LdVar              eR    rownames<-, e0.7
  lgl$#-          %601.3 = Identical                %601.2, function(x, value) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %601.3 -> BB611 (if true) | BB612 (if false)
BB602   <- [264]
  void                    Nop                !     
  val?^ | miss    %602.1 = %264.0
  dr              %602.2 = Typecheck@0x5614f925d5d0[Type#164]
  goto BB106
BB603   <- [593]
  int$-           %603.0 = CastType           d     dn %593.4
  void                    Branch                   %593.3 -> BB613 (if true) | BB614 (if false)
BB604   <- [593]
  void                    Nop                !     
  val?^ | miss    %604.1 = %593.4
  dr              %604.2 = Typecheck@0x5614f925d5d0[Type#168]
  goto BB112
BB587   <- [579]
  void                    Branch                   %579.4 -> BB595 (if true) | BB596 (if false)
BB588   <- [579]
  void                    Nop                !     
  lgl$#-          %588.1 = %579.3
  dr              %588.2 = DeadBranchReached@0x5614f925d5d0[Test#58]
  goto BB187
BB597   <- [589]
  val?~+ | miss   %597.0 = CastType           d     dn %589.4
  val?+           %597.1 = Force!<value>            %597.0,    <vec+>
  val?^ | miss    %597.2 = LdVar              eR    i.f, e0.7
  lgl$#-          %597.3 = IsType                   %597.2 isA real$-
  void                    Branch                   %597.3 -> BB599 (if true) | BB600 (if false)
BB598   <- [589]
  void                    Nop                !     
  val?^ | miss    %598.1 = %589.4
  dr              %598.2 = Typecheck@0x5614f925d5d0[Type#260]
  goto BB150
BB144   <- [591]
  (cls|spec|blt)  %144.0 = LdFun              !v    <-, e0.7
  fs              %144.1 = FrameState         R     0x5615051e76a0+4638: [%433.1, %433.2, %114.2, %144.0], env=e0.7
  void                    Deopt              !v    %144.1, DeadCall@0x5614f925d5d0[Call#62], %144.0   !
BB131   <- [591]
  val?^ | miss    %131.0 = LdVar              eR    is.matrix, e0.7
  lgl$#-          %131.1 = Identical                <blt is.matrix>, %131.0   <@?>
  void                    Branch                   %131.1 -> BB133 (if true) | BB132 (if false)
BB611   <- [601]
  val?^ | miss    %611.0 = LdVar              eR    f, e0.7
  lgl$#-          %611.1 = IsType                   %611.0 isA real_
  void                    Branch                   %611.1 -> BB615 (if true) | BB616 (if false)
BB612   <- [601]
  void                    Nop                !     
  val?^ | miss    %612.1 = %601.2
  dr              %612.2 = CallTarget@0x5614f925d5d0[Call#54]
  goto BB106
BB613   <- [603]
  val?+           %613.0 = CastType           d     dn %593.2   <vec$+>
  val?+           %613.1 = Subassign2_1D      wed   %593.0, %613.0, %603.0, elided
  void                    StVar              lW    mf, %613.1, e0.7
  int$-           %613.3 = %433.3
  goto BB114
BB614   <- [603]
  void                    Nop                !     
  val?            %614.1 = %593.2
  dr              %614.2 = Typecheck@0x5614f925d5d0[Type#167]
  goto BB112
BB112   <- [604, 614]
  val?^ | miss    %112.0 = Phi                      %604.1:BB604, %614.1:BB614
  val?^ | miss    %112.1 = %112.0
  dr              %112.2 = Phi                      %604.2:BB604, %614.2:BB614
  dr              %112.3 = %112.2
  fs              %112.4 = FrameState         R     0x5615051e76a0+3819: [%433.1, %433.2, %433.3, %593.0, %593.2], env=e0.7
  void                    Deopt              !v    %112.4, %112.3, %112.1   !
BB595   <- [587]
  val?-           %595.0 = CastType           d     dn %579.2   <vec->
  val?            %595.1 = Extract2_1D        wed   %595.0, 1, elided   <str->
  lgl$#-          %595.2 = IsType                   %595.1 isA val?-
  void                    Branch                   %595.2 -> BB605 (if true) | BB606 (if false)
BB596   <- [587]
  void                    Nop                !     
  val?            %596.1 = %579.2
  dr              %596.2 = Typecheck@0x5614f925d5d0[Type#356]
  goto BB187
BB187   <- [588, 596]
  val?^ | miss    %187.0 = Phi                      %588.1:BB588, %596.1:BB596
  val?^ | miss    %187.1 = %187.0
  dr              %187.2 = Phi                      %588.2:BB588, %596.2:BB596
  dr              %187.3 = %187.2
  fs              %187.4 = FrameState         R     0x5615051e76a0+7345: [%479.1, %479.2, %433.3, <blt c>, %577.1, %579.2], env=e0.7
  void                    Deopt              !v    %187.4, %187.3, %187.1   !
BB599   <- [597]
  real$-          %599.0 = CastType           d     dn %597.2
  real$-          %599.1 = Add                d     %599.0, 1, elided   <real$->
  void                    StVar              lW    i.f, %599.1, e0.7
  lgl$#-          %599.3 = IsType                   %589.3 isA val?-
  void                    Branch                   %599.3 -> BB607 (if true) | BB608 (if false)
BB600   <- [597]
  void                    Nop                !     
  val?^ | miss    %600.1 = %597.2
  dr              %600.2 = Typecheck@0x5614f925d5d0[Type#261]
  goto BB150
BB150   <- [598, 600]
  val?^ | miss    %150.0 = Phi                      %598.1:BB598, %600.1:BB600
  val?^ | miss    %150.1 = %150.0
  dr              %150.2 = Phi                      %598.2:BB598, %600.2:BB600
  dr              %150.3 = %150.2
  fs              %150.4 = FrameState         R     0x5615051e76a0+5658: [%433.1, %433.2, %114.2, %589.3], env=e0.7
  void                    Deopt              !v    %150.4, %150.3, %150.1   !
BB133   <- [131]
  val?^ | miss    %133.0 = LdVar              eR    f, e0.7
  val?            %133.1 = Force!             !v    %133.0, e0.7   <val?_>
  lgl$#-          %133.2 = IsType                   %133.1 isA val?+
  void                    Branch                   %133.2 -> BB609 (if true) | BB610 (if false)
BB132   <- [131]
  (cls|spec|blt)  %132.0 = LdFun              !v    is.matrix, e0.7
  fs              %132.1 = FrameState         R     0x5615051e76a0+4699: [%433.1, %433.2, %114.2, %132.0], env=e0.7
  void                    Deopt              !v    %132.1, DeadCall@0x5614f925d5d0[Call#65], %132.0   !
BB615   <- [611]
  real_           %615.0 = CastType           d     dn %611.0
  val?            %615.1 = StaticCall         !v    rownames<-[0x5614ffa2a5c0](%615.0, %601.1) { 0 1n } e0.7
  void                    StVar              lW    f, %615.1, e0.7
  goto BB109
BB616   <- [611]
  void                    Nop                !     
  val?^ | miss    %616.1 = %611.0
  dr              %616.2 = Typecheck@0x5614f925d5d0[Type#165]
  goto BB106
BB605   <- [595]
  val?-           %605.0 = CastType           d     dn %595.1   <str->
  val+            %605.1 = CallSafeBuiltin    wed   c(%577.1, %605.0)    <str->
  void                    StVar              lW    vNms, %605.1, e0.7
  val?^ | miss    %605.3 = LdVar              eR    nrow, e0.7
  lgl$#-          %605.4 = Identical                %605.3, function(x) <(rir::DispatchTable*)0x5614faf139|...
  void                    Branch                   %605.4 -> BB617 (if true) | BB618 (if false)
BB606   <- [595]
  fs              %606.0 = FrameState         R     0x5615051e76a0+7388: [%479.1, %479.2, %433.3, <blt c>, %577.1, %595.1], env=e0.7
  void                    Deopt              !v    %606.0, Typecheck@0x5614f925d5d0[Type#357], %595.1   !
BB607   <- [599]
  val?-           %607.0 = CastType           d     dn %589.3   <vec->
  val?+           %607.1 = Subassign2_1D      wed   %607.0, %597.1, %599.1, elided
  void                    StVar              lW    f.matr, %607.1, e0.7
  int$-           %607.3 = %114.2
  goto BB114
BB608   <- [599]
  fs              %608.0 = FrameState         R     0x5615051e76a0+5714: [%433.1, %433.2, %114.2, %589.3, %597.1, %599.1], env=e0.7
  void                    Deopt              !v    %608.0, Typecheck@0x5614f925d5d0[Type#259], %589.3   !
BB609   <- [133]
  val?+           %609.0 = CastType           d     dn %133.1   <val?_>
  lgl$#-          %609.1 = CallSafeBuiltin    wed   is.matrix(%609.0)    <val?_>
  void                    Branch                   %609.1 -> BB143 (if true) | BB136 (if false)
BB610   <- [133]
  fs              %610.0 = FrameState         R     0x5615051e76a0+4740: [%433.1, %433.2, %114.2, <blt is.matrix>, %133.1], env=e0.7
  void                    Deopt              !v    %610.0, Typecheck@0x5614f925d5d0[Type#217], %133.1   !
BB617   <- [605]
  prom-           %617.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p35, e0.7
  ct              %617.1 = PushContext        lCL   %617.0, nrow(rj), function(x) <(rir::DispatchTable*)0x5614faf139|..., e0.7
  val?^           %617.2 = CastType                 up %617.0
  env             e617.3 = MkEnv              l     x=%617.2, parent=R_BaseNamespace, context 1
  val?            %617.4 = Force!<lazy>       !vL   %617.2, e617.3   <val?>
  val?            %617.5 = CallBuiltin        !v    dim(%617.4) e617.3   <int->
  lgl$#-          %617.6 = IsType                   %617.5 isA val+   <true>
  lgl$#-          %617.7 = IsType                   %617.5 isA int-
  void                    Branch                   %617.6 -> BB621 (if true) | BB622 (if false)
BB618   <- [605]
  fs              %618.0 = FrameState         R     0x5615051e76a0+7425: [%479.1, %479.2, %433.3], env=e0.7
  void                    Deopt              !v    %618.0, CallTarget@0x5614f925d5d0[Call#116], %605.3   !
BB143   <- [609]
  (cls|spec|blt)  %143.0 = LdFun              !v    nrow, e0.7
  fs              %143.1 = FrameState         R     0x5615051e76a0+5091: [%433.1, %433.2, %114.2, %143.0], env=e0.7
  void                    Deopt              !v    %143.1, DeadCall@0x5614f925d5d0[Call#70], %143.0   !
BB136   <- [609]
  val?^ | miss    %136.0 = LdVar              eR    c, e0.7
  lgl$#-          %136.1 = Identical                <blt c>, %136.0   <@?>
  void                    Branch                   %136.1 -> BB138 (if true) | BB137 (if false)
BB621   <- [617]
  void                    Branch                   %617.7 -> BB623 (if true) | BB624 (if false)
BB622   <- [617]
  void                    Nop                !     
  lgl$#-          %622.1 = %617.6
  dr              %622.2 = DeadBranchReached@0x5614fbc29098[Test#1]
  goto BB193
BB138   <- [136]
  val?^ | miss    %138.0 = LdVar              eR    length, e0.7
  lgl$#-          %138.1 = Identical                <blt length>, %138.0   <@?>
  void                    Branch                   %138.1 -> BB140 (if true) | BB139 (if false)
BB137   <- [136]
  (cls|spec|blt)  %137.0 = LdFun              !v    c, e0.7
  fs              %137.1 = FrameState         R     0x5615051e76a0+4801: [%433.1, %433.2, %114.2, %137.0], env=e0.7
  void                    Deopt              !v    %137.1, DeadCall@0x5614f925d5d0[Call#66], %137.0   !
BB623   <- [621]
  int-            %623.0 = CastType           d     dn %617.5
  int$-           %623.1 = Extract1_1D        wed   %623.0, 1L, elided   <int$->
  val?            %623.2 = PopContext         C     %623.1, %617.1   <int$->
  lgl$#-          %623.3 = IsType                   %623.2 isA int$-
  void                    Branch                   %623.3 -> BB625 (if true) | BB626 (if false)
BB624   <- [621]
  void                    Nop                !     
  val?            %624.1 = %617.5
  dr              %624.2 = Typecheck@0x5614fbc29098[Type#2]
  goto BB193
BB193   <- [622, 624]
  val?^ | miss    %193.0 = Phi                      %622.1:BB622, %624.1:BB624
  val?^ | miss    %193.1 = %193.0
  dr              %193.2 = Phi                      %622.2:BB622, %624.2:BB624
  dr              %193.3 = %193.2
  fs              %193.4 = FrameState         R     0x5615051e76a0+7457: [%479.1, %479.2, %433.3], env=e0.7
  fs              %193.5 = FrameState         R     0x5614fa7980b0+91: [%617.5], env=e617.3, next=%193.4
  void                    Deopt              !v    %193.5, %193.3, %193.1   !
BB140   <- [138]
  val?^ | miss    %140.0 = LdVar              eR    f, e0.7
  val?            %140.1 = Force!             !v    %140.0, e0.7   <val?_>
  lgl$#-          %140.2 = IsType                   %140.1 isA val?+
  void                    Branch                   %140.2 -> BB619 (if true) | BB620 (if false)
BB139   <- [138]
  (cls|spec|blt)  %139.0 = LdFun              !v    length, e0.7
  fs              %139.1 = FrameState         R     0x5615051e76a0+4872: [%433.1, %433.2, %114.2, <blt c>, 1L, %139.0], env=e0.7
  void                    Deopt              !v    %139.1, DeadCall@0x5614f925d5d0[Call#68], %139.0   !
BB625   <- [623]
  int$-           %625.0 = CastType           d     dn %623.2
  val?^ | miss    %625.1 = LdVar              eR    counts !upd, e0.7
  lgl$#-          %625.2 = IsType                   %625.1 isA int-
  void                    Branch                   %625.2 -> BB627 (if true) | BB628 (if false)
BB626   <- [623]
  void                    Nop                !     
  val?            %626.1 = %623.2
  dr              %626.2 = Typecheck@0x5614f925d5d0[Type#360]
  goto BB195
BB619   <- [140]
  val?+           %619.0 = CastType           d     dn %140.1   <val?_>
  (int|real)$-    %619.1 = CallSafeBuiltin    wed   length(%619.0)    <val?_>
  (int|real)-     %619.2 = CallSafeBuiltin    wed   c(1L, %619.1)    <val?_>
  (cls|spec|blt)  %619.3 = LdFun              !v    dim<-, e0.7
  fs              %619.4 = FrameState         R     0x5615051e76a0+4967: [%433.1, %433.2, %114.2, %619.2, %619.3], env=e0.7
  void                    Deopt              !v    %619.4, DeadCall@0x5614f925d5d0[Call#69], %619.3   !
BB620   <- [140]
  fs              %620.0 = FrameState         R     0x5615051e76a0+4913: [%433.1, %433.2, %114.2, <blt c>, 1L, <blt length>, %140.1], env=e0.7
  void                    Deopt              !v    %620.0, Typecheck@0x5614f925d5d0[Type#222], %140.1   !
BB627   <- [625]
  int-            %627.0 = CastType           d     dn %625.1
  val?^ | miss    %627.1 = LdVar              eR    j, e0.7
  lgl$#-          %627.2 = IsType                   %627.1 isA int$-
  void                    Branch                   %627.2 -> BB629 (if true) | BB630 (if false)
BB628   <- [625]
  void                    Nop                !     
  val?^ | miss    %628.1 = %625.1
  dr              %628.2 = Typecheck@0x5614f925d5d0[Type#361]
  goto BB195
BB195   <- [626, 628, 630]
  val?^ | miss    %195.0 = Phi                      %626.1:BB626, %628.1:BB628, %630.1:BB630
  val?^ | miss    %195.1 = %195.0
  dr              %195.2 = Phi                      %626.2:BB626, %628.2:BB628, %630.2:BB630
  dr              %195.3 = %195.2
  fs              %195.4 = FrameState         R     0x5615051e76a0+7457: [%479.1, %479.2, %433.3, %623.2], env=e0.7
  void                    Deopt              !v    %195.4, %195.3, %195.1   !
BB629   <- [627]
  int$-           %629.0 = CastType           d     dn %627.1
  int-            %629.1 = Subassign1_1D      wed   %625.0, %627.0, %629.0, elided
  void                    StVar              lW    counts, %629.1, e0.7
  int$-           %629.3 = %433.3
  goto BB197
BB630   <- [627]
  void                    Nop                !     
  val?^ | miss    %630.1 = %627.1
  dr              %630.2 = Typecheck@0x5614f925d5d0[Type#362]
  goto BB195
BB197   <- [629, 669]
  int$-           %197.0 = Phi                      %629.3:BB629, %669.3:BB669
  int$-           %197.1 = %197.0
  int$-           %197.2 = Inc                      %197.1
  lgl$-           %197.3 = Lt                 d     %479.2, %197.2, elided
  lgl$#-          %197.4 = Identical                %197.3, true
  void                    Branch                   %197.4 -> BB232 (if true) | BB198 (if false)
BB232   <- [197]
  void                    Nop                !     
  goto BB233
BB198   <- [197]
  val?            %198.0 = Extract2_1D        wed   %479.1, %197.2, elided
  void                    StVar              lW    j, %198.0, e0.7
  val?^ | miss    %198.2 = LdVar              eR    Names, e0.7
  lgl$#-          %198.3 = IsType                   %198.2 isA val?~- | miss
  void                    Branch                   %198.3 -> BB631 (if true) | BB632 (if false)
BB631   <- [198]
  val?~- | miss   %631.0 = CastType           d     dn %198.2
  val?-           %631.1 = Force!<value>            %631.0,    <str->
  lgl$#-          %631.2 = IsType                   %631.1 isA val+   <true>
  void                    Branch                   %631.2 -> BB633 (if true) | BB634 (if false)
BB632   <- [198]
  void                    Nop                !     
  val?^ | miss    %632.1 = %198.2
  dr              %632.2 = Typecheck@0x5614f925d5d0[Type#363]
  goto BB199
BB633   <- [631]
  val             %633.0 = ChkMissing         e     %198.0
  lgl$#-          %633.1 = IsType                   %633.0 isA int$-
  void                    Branch                   %633.1 -> BB635 (if true) | BB636 (if false)
BB634   <- [631]
  void                    Nop                !     
  lgl$#-          %634.1 = %631.2
  dr              %634.2 = DeadBranchReached@0x5614f925d5d0[Test#59]
  goto BB199
BB199   <- [632, 634, 636]
  val?^ | miss    %199.0 = Phi                      %632.1:BB632, %634.1:BB634, %636.1:BB636
  val?^ | miss    %199.1 = %199.0
  dr              %199.2 = Phi                      %632.2:BB632, %634.2:BB634, %636.2:BB636
  dr              %199.3 = %199.2
  fs              %199.4 = FrameState         R     0x5615051e76a0+7529: [%479.1, %479.2, %197.2], env=e0.7
  void                    Deopt              !v    %199.4, %199.3, %199.1   !
BB635   <- [633]
  int$-           %635.0 = CastType           d     dn %633.0
  val?            %635.1 = Extract1_1D        wed   %631.1, %635.0, elided   <str$->
  void                    StVar              lW    nm, %635.1, e0.7
  val?^ | miss    %635.3 = LdVar              eR    verbose, e0.7
  val?            %635.4 = Force!<wrapped>    !v    %635.3, e0.7   <lgl$->
  lgl$#-          %635.5 = CheckTrueFalse     we    %635.4
  void                    Branch                   %635.5 -> BB231 (if true) | BB203 (if false)
BB636   <- [633]
  void                    Nop                !     
  val             %636.1 = %633.0
  dr              %636.2 = Typecheck@0x5614f925d5d0[Type#365]
  goto BB199
BB231   <- [635]
  (cls|spec|blt)  %231.0 = LdFun              !v    cat, e0.7
  fs              %231.1 = FrameState         R     0x5615051e76a0+7634: [%479.1, %479.2, %197.2, %231.0], env=e0.7
  void                    Deopt              !v    %231.1, DeadCall@0x5614f925d5d0[Call#117], %231.0   !
BB203   <- [635]
  val?^ | miss    %203.0 = LdVar              eR    strsplit, e0.7
  lgl$#-          %203.1 = Identical                %203.0, function(x, split, fixed=FALSE, perl=FALSE, us|...
  void                    Branch                   %203.1 -> BB637 (if true) | BB638 (if false)
BB637   <- [203]
  val?^ | miss    %637.0 = LdVar              eR    nm, e0.7
  val?            %637.1 = Force!<value>      !v    %637.0, e0.7   <str$->
  vec+            %637.2 = CallSafeBuiltin    wed   strsplit(%637.1, ":", true, false, false)    <vec$->
  lgl$#-          %637.3 = IsType                   %637.2 isA val?-
  void                    Branch                   %637.3 -> BB639 (if true) | BB640 (if false)
BB638   <- [203]
  fs              %638.0 = FrameState         R     0x5615051e76a0+7619: [%479.1, %479.2, %197.2, %635.5], env=e0.7
  void                    Deopt              !v    %638.0, CallTarget@0x5614f925d5d0[Call#119], %203.0   !
BB639   <- [637]
  vec-            %639.0 = CastType           d     dn %637.2   <vec$->
  val             %639.1 = Extract2_1D        wed   %639.0, 1, elided   <str$->
  void                    StVar              lW    nmSplits, %639.1, e0.7
  val?^ | miss    %639.3 = LdVar              eR    sparseInt.r, e0.7
  lgl$#-          %639.4 = Identical                %639.3, function(rList, do.names=TRUE, forceSparse=FAL|...
  void                    Branch                   %639.4 -> BB641 (if true) | BB642 (if false)
BB640   <- [637]
  prom-           %640.0 = MkArg                    %637.1, model.spmatrix[0x5615050e49e0]_p36 (!refl), e0.7
  val?~           %640.1 = CastType                 up %640.0
  fs              %640.2 = FrameState         R     0x5615051e76a0+7716: [%479.1, %479.2, %197.2], env=e0.7
  env             e640.3 = (MkEnv)            l     useBytes(miss)=false, perl(miss)=false, fixed=true, split=":", x=%640.1, parent=R_BaseNamespace, context 0
  fs              %640.4 = FrameState         R     0x5614fa98d300+165: [%637.2], env=e640.3, next=%640.2
  void                    Deopt              !v    %640.4, Typecheck@0x5614f925d5d0[Type#375], %637.2   !
BB641   <- [639]
  prom-           %641.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p37, e0.7
  prom-           %641.1 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p40, e0.7
  val?            %641.2 = StaticCall         !v    sparseInt.r[0x5614fdd04a00](%641.0, true, true, %641.1) { 0 1n 2n 3n } e0.7   <other>
  void                    StVar              lW    rj, %641.2, e0.7
  val?^ | miss    %641.4 = LdVar              eR    verbose, e0.7
  val?            %641.5 = Force!<wrapped>    !v    %641.4, e0.7   <lgl$->
  lgl$#-          %641.6 = CheckTrueFalse     we    %641.5
  void                    Branch                   %641.6 -> BB230 (if true) | BB208 (if false)
BB642   <- [639]
  fs              %642.0 = FrameState         R     0x5615051e76a0+7774: [%479.1, %479.2, %197.2], env=e0.7
  void                    Deopt              !v    %642.0, CallTarget@0x5614f925d5d0[Call#120], %639.3   !
BB230   <- [641]
  (cls|spec|blt)  %230.0 = LdFun              !v    cat, e0.7
  fs              %230.1 = FrameState         R     0x5615051e76a0+7881: [%479.1, %479.2, %197.2, %230.0], env=e0.7
  void                    Deopt              !v    %230.1, DeadCall@0x5614f925d5d0[Call#122], %230.0   !
BB208   <- [641]
  val?^ | miss    %208.0 = LdVar              eR    transpose, e0.7
  val?            %208.1 = Force!<wrapped>    !v    %208.0, e0.7   <lgl$->
  lgl$#-          %208.2 = CheckTrueFalse     we    %208.1
  void                    Branch                   %208.2 -> BB227 (if true) | BB211 (if false)
BB227   <- [208]
  val?^ | miss    %227.0 = LdVar              eR    .Call, e0.7
  lgl$#-          %227.1 = Identical                <blt .Call>, %227.0   <@?>
  void                    Branch                   %227.1 -> BB229 (if true) | BB228 (if false)
BB211   <- [208]
  val?^ | miss    %211.0 = LdVar              eR    .Call, e0.7
  lgl$#-          %211.1 = Identical                <blt .Call>, %211.0   <true>
  void                    Branch                   %211.1 -> BB643 (if true) | BB644 (if false)
BB229   <- [227]
  val?^ | miss    %229.0 = LdVar              eR    Csparse_vertcat, e0.7
  val?            %229.1 = Force!             !v    %229.0, e0.7   <val?_>
  val?^ | miss    %229.2 = LdVar              eR    r, e0.7
  val?            %229.3 = Force!             !v    %229.2, e0.7   <val?_>
  val?^ | miss    %229.4 = LdVar              eR    rj, e0.7
  val?            %229.5 = Force!             !v    %229.4, e0.7   <val?_>
  val?            %229.6 = CallBuiltin        !v    .Call(%229.1, %229.3, %229.5) e0.7   <val?_>
  val?            %229.7 = %229.6
  goto BB214
BB228   <- [227]
  (cls|spec|blt)  %228.0 = LdFun              !v    .Call, e0.7
  fs              %228.1 = FrameState         R     0x5615051e76a0+8119: [%479.1, %479.2, %197.2, %228.0], env=e0.7
  void                    Deopt              !v    %228.1, DeadCall@0x5614f925d5d0[Call#131], %228.0   !
BB643   <- [211]
  val?^ | miss    %643.0 = LdVar              eR    Csparse_horzcat, e0.7
  val?            %643.1 = Force!<value>      !v    %643.0, e0.7   <vec>
  val?^ | miss    %643.2 = LdVar              eR    r, e0.7
  val?            %643.3 = Force!<value>      !v    %643.2, e0.7   <other>
  val?^ | miss    %643.4 = LdVar              eR    t, e0.7
  lgl$#-          %643.5 = Identical                %643.4, function(x) <(rir::DispatchTable*)0x5614ffe3b5|...
  void                    Branch                   %643.5 -> BB647 (if true) | BB648 (if false)
BB644   <- [211]
  fs              %644.0 = FrameState         R     0x5615051e76a0+7924: [%479.1, %479.2, %197.2, %208.2], env=e0.7
  void                    Deopt              !v    %644.0, DeadBranchReached@0x5614f925d5d0[Test#62], %211.1   !
BB214   <- [229, 647]
  val?            %214.0 = Phi                      %647.3:BB647, %229.7:BB229
  val?            %214.1 = %214.0
  void                    StVar              lW    r, %214.1, e0.7
  val?^ | miss    %214.3 = LdVar              eR    c, e0.7
  lgl$#-          %214.4 = Identical                <blt c>, %214.3   <true>
  void                    Branch                   %214.4 -> BB645 (if true) | BB646 (if false)
BB647   <- [643]
  prom-           %647.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p41, e0.7
  val?            %647.1 = StaticCall         !v    t[0x5614ff8ec030](%647.0) e0.7   <other>
  val?            %647.2 = CallBuiltin        !v    .Call(%643.1, %643.3, %647.1) e0.7   <other>
  val?            %647.3 = %647.2
  goto BB214
BB648   <- [643]
  fs              %648.0 = FrameState         R     0x5615051e76a0+8022: [%479.1, %479.2, %197.2, <blt .Call>, %643.1, %643.3], env=e0.7
  void                    Deopt              !v    %648.0, CallTarget@0x5614f925d5d0[Call#130], %643.4   !
BB645   <- [214]
  val?^ | miss    %645.0 = LdVar              eR    vNms, e0.7
  lgl$#-          %645.1 = IsType                   %645.0 isA val?~- | miss
  void                    Branch                   %645.1 -> BB649 (if true) | BB650 (if false)
BB646   <- [214]
  void                    Nop                !     
  lgl$#-          %646.1 = %214.4
  dr              %646.2 = DeadBranchReached@0x5614f925d5d0[Test#64]
  goto BB215
BB649   <- [645]
  val?~- | miss   %649.0 = CastType           d     dn %645.0
  val?-           %649.1 = Force!<value>            %649.0,    <str->
  val?^ | miss    %649.2 = LdVar              eR    dimnames, e0.7
  lgl$#-          %649.3 = Identical                <blt dimnames>, %649.2   <true>
  void                    Branch                   %649.3 -> BB651 (if true) | BB652 (if false)
BB650   <- [645]
  void                    Nop                !     
  val?^ | miss    %650.1 = %645.0
  dr              %650.2 = Typecheck@0x5614f925d5d0[Type#414]
  goto BB215
BB215   <- [646, 650, 652]
  val?^ | miss    %215.0 = Phi                      %646.1:BB646, %650.1:BB650, %652.1:BB652
  val?^ | miss    %215.1 = %215.0
  dr              %215.2 = Phi                      %646.2:BB646, %650.2:BB650, %652.2:BB652
  dr              %215.3 = %215.2
  fs              %215.4 = FrameState         R     0x5615051e76a0+8234: [%479.1, %479.2, %197.2], env=e0.7
  void                    Deopt              !v    %215.4, %215.3, %215.1   !
BB651   <- [649]
  val?^ | miss    %651.0 = LdVar              eR    rj, e0.7
  val?            %651.1 = Force!<value>      !v    %651.0, e0.7   <other>
  val?            %651.2 = CallBuiltin        !v    dimnames(%651.1) e0.7   <vec->
  lgl$#-          %651.3 = IsType                   %651.2 isA val+   <true>
  lgl$#-          %651.4 = IsType                   %651.2 isA val?-
  void                    Branch                   %651.3 -> BB653 (if true) | BB654 (if false)
BB652   <- [649]
  void                    Nop                !     
  lgl$#-          %652.1 = %649.3
  dr              %652.2 = DeadBranchReached@0x5614f925d5d0[Test#66]
  goto BB215
BB653   <- [651]
  void                    Branch                   %651.4 -> BB655 (if true) | BB656 (if false)
BB654   <- [651]
  void                    Nop                !     
  lgl$#-          %654.1 = %651.3
  dr              %654.2 = DeadBranchReached@0x5614f925d5d0[Test#67]
  goto BB217
BB655   <- [653]
  val?-           %655.0 = CastType           d     dn %651.2   <vec->
  val?            %655.1 = Extract2_1D        wed   %655.0, 1, elided   <str->
  lgl$#-          %655.2 = IsType                   %655.1 isA val?-
  void                    Branch                   %655.2 -> BB657 (if true) | BB658 (if false)
BB656   <- [653]
  void                    Nop                !     
  val?            %656.1 = %651.2
  dr              %656.2 = Typecheck@0x5614f925d5d0[Type#417]
  goto BB217
BB217   <- [654, 656]
  val?^ | miss    %217.0 = Phi                      %654.1:BB654, %656.1:BB656
  val?^ | miss    %217.1 = %217.0
  dr              %217.2 = Phi                      %654.2:BB654, %656.2:BB656
  dr              %217.3 = %217.2
  fs              %217.4 = FrameState         R     0x5615051e76a0+8404: [%479.1, %479.2, %197.2, <blt c>, %649.1, %651.2], env=e0.7
  void                    Deopt              !v    %217.4, %217.3, %217.1   !
BB657   <- [655]
  val?-           %657.0 = CastType           d     dn %655.1   <str->
  val+            %657.1 = CallSafeBuiltin    wed   c(%649.1, %657.0)    <str->
  void                    StVar              lW    vNms, %657.1, e0.7
  val?^ | miss    %657.3 = LdVar              eR    nrow, e0.7
  lgl$#-          %657.4 = Identical                %657.3, function(x) <(rir::DispatchTable*)0x5614faf139|...
  void                    Branch                   %657.4 -> BB659 (if true) | BB660 (if false)
BB658   <- [655]
  fs              %658.0 = FrameState         R     0x5615051e76a0+8447: [%479.1, %479.2, %197.2, <blt c>, %649.1, %655.1], env=e0.7
  void                    Deopt              !v    %658.0, Typecheck@0x5614f925d5d0[Type#418], %655.1   !
BB659   <- [657]
  prom-           %659.0 = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p42, e0.7
  ct              %659.1 = PushContext        lCL   %659.0, nrow(rj), function(x) <(rir::DispatchTable*)0x5614faf139|..., e0.7
  val?^           %659.2 = CastType                 up %659.0
  env             e659.3 = MkEnv              l     x=%659.2, parent=R_BaseNamespace, context 1
  val?            %659.4 = Force!<lazy>       !v    %659.2, e659.3   <val?>
  val?            %659.5 = CallBuiltin        !v    dim(%659.4) e659.3   <int->
  lgl$#-          %659.6 = IsType                   %659.5 isA val+   <true>
  lgl$#-          %659.7 = IsType                   %659.5 isA int-
  void                    Branch                   %659.6 -> BB661 (if true) | BB662 (if false)
BB660   <- [657]
  fs              %660.0 = FrameState         R     0x5615051e76a0+8484: [%479.1, %479.2, %197.2], env=e0.7
  void                    Deopt              !v    %660.0, CallTarget@0x5614f925d5d0[Call#135], %657.3   !
BB661   <- [659]
  void                    Branch                   %659.7 -> BB663 (if true) | BB664 (if false)
BB662   <- [659]
  void                    Nop                !     
  lgl$#-          %662.1 = %659.6
  dr              %662.2 = DeadBranchReached@0x5614fbc29098[Test#1]
  goto BB223
BB663   <- [661]
  int-            %663.0 = CastType           d     dn %659.5
  int$-           %663.1 = Extract1_1D        wed   %663.0, 1L, elided   <int$->
  val?            %663.2 = PopContext         C     %663.1, %659.1   <int$->
  lgl$#-          %663.3 = IsType                   %663.2 isA int$-
  void                    Branch                   %663.3 -> BB665 (if true) | BB666 (if false)
BB664   <- [661]
  void                    Nop                !     
  val?            %664.1 = %659.5
  dr              %664.2 = Typecheck@0x5614fbc29098[Type#2]
  goto BB223
BB223   <- [662, 664]
  val?^ | miss    %223.0 = Phi                      %662.1:BB662, %664.1:BB664
  val?^ | miss    %223.1 = %223.0
  dr              %223.2 = Phi                      %662.2:BB662, %664.2:BB664
  dr              %223.3 = %223.2
  fs              %223.4 = FrameState         R     0x5615051e76a0+8516: [%479.1, %479.2, %197.2], env=e0.7
  fs              %223.5 = FrameState         R     0x5614fa7980b0+91: [%659.5], env=e659.3, next=%223.4
  void                    Deopt              !v    %223.5, %223.3, %223.1   !
BB665   <- [663]
  int$-           %665.0 = CastType           d     dn %663.2
  val?^ | miss    %665.1 = LdVar              eR    counts !upd, e0.7
  lgl$#-          %665.2 = IsType                   %665.1 isA int-
  void                    Branch                   %665.2 -> BB667 (if true) | BB668 (if false)
BB666   <- [663]
  void                    Nop                !     
  val?            %666.1 = %663.2
  dr              %666.2 = Typecheck@0x5614f925d5d0[Type#421]
  goto BB225
BB667   <- [665]
  int-            %667.0 = CastType           d     dn %665.1
  val?^ | miss    %667.1 = LdVar              eR    j, e0.7
  lgl$#-          %667.2 = IsType                   %667.1 isA int$-
  void                    Branch                   %667.2 -> BB669 (if true) | BB670 (if false)
BB668   <- [665]
  void                    Nop                !     
  val?^ | miss    %668.1 = %665.1
  dr              %668.2 = Typecheck@0x5614f925d5d0[Type#422]
  goto BB225
BB225   <- [666, 668, 670]
  val?^ | miss    %225.0 = Phi                      %666.1:BB666, %668.1:BB668, %670.1:BB670
  val?^ | miss    %225.1 = %225.0
  dr              %225.2 = Phi                      %666.2:BB666, %668.2:BB668, %670.2:BB670
  dr              %225.3 = %225.2
  fs              %225.4 = FrameState         R     0x5615051e76a0+8516: [%479.1, %479.2, %197.2, %663.2], env=e0.7
  void                    Deopt              !v    %225.4, %225.3, %225.1   !
BB669   <- [667]
  int$-           %669.0 = CastType           d     dn %667.1
  int-            %669.1 = Subassign1_1D      wed   %665.0, %667.0, %669.0, elided
  void                    StVar              lW    counts, %669.1, e0.7
  int$-           %669.3 = %197.2
  goto BB197
BB670   <- [667]
  void                    Nop                !     
  val?^ | miss    %670.1 = %667.1
  dr              %670.2 = Typecheck@0x5614f925d5d0[Type#423]
  goto BB225
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is.data.frame, <0x5615049d9858>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x5614f88a7a90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p5, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  void                    StVar              lW    m, %0.3, e0.0
  val?^ | miss    %0.5  = LdVar              eR    nVar, e0.0
  void                    Visible            v     
  val?            %0.7  = Force<value>       !     %0.5, e0.0   <int$->
  val?            %0.8  = Gte                !     %0.3, %0.7, e0.0   <lgl$->
  void                    Return             l     %0.8
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  (cls|spec|blt)  %0.4  = LdFun              !     names, <0x5614f88a7470>, e0.0
  prom-           %0.5  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p7, e0.0
  val?            %0.6  = Call               !     %0.4(%0.5) e0.0   <str->
  val?            %0.7  = Eq                 !     %0.3, %0.6, e0.0   <lgl->
  void                    Return             l     %0.7
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    model.spmatrix@Prom(9)0, e0.0
  void                    Return             l     %0.1
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    is.f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl+>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vector, <0x5614fa773f48>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p12, e0.0
  val?            %0.3  = NamedCall          !     %0.1("list", length=%0.2) e0.0   <vec->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, <0x5614f88a7a90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    indF, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnames, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    indF, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int+>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p15, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    indF, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     fac2Sparse, <0x561500e23e18>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p19, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p20, e0.0
  prom-           %0.4  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p21, e0.0
  prom-           %0.5  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p24, e0.0
  val?            %0.6  = NamedCall          !     %0.1(%0.2, to="d", drop.unused.levels=%0.3, factorPatt12=%0.4, contrasts.arg=%0.5) e0.0   <vec->
  void                    Return             l     %0.6
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    drop.unused.levels, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %in%, <0x5614f8bbdc40>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p22, 
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p23, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <lgl->
  void                    Return             l     %0.4
Prom 22:
BB0
  int-            %0.0  = Colon              vd    1L, 2L, elided   <int->
  void                    Return             l     %0.0
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    model.spmatrix@Prom(25)0, e0.0
  void                    Return             l     %0.1
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 0L) e0.0   <int->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nm, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     lapply, <0x5614f89e6040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p31, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p32, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec$->
  void                    Return             l     %0.4
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nmSplits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    getR, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    verbose, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nm, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     lapply, <0x5614f89e6040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p38, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p39, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec$->
  void                    Return             l     %0.4
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nmSplits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    getR, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    verbose, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    iTrm, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    counts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  val?            %0.3  = Sub                !v    %0.2, 1L, e0.0   <int$->
  void                    Visible            v     
  val?            %0.5  = Colon              !     0L, %0.3, e0.0   <int->
  void                    Return             l     %0.5
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p49, e0.0
  val?            %0.3  = Call               !     %0.1(0L, %0.2) e0.0   <int->
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p51, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 1L) e0.0   <int->
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, <0x5614fa93a230>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p53, e0.0
  val?            %0.3  = Call               !     %0.1(1, %0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     fac2Sparse, <0x561500e23e18>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p56, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p57, e0.0
  prom-           %0.4  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p58, e0.0
  prom-           %0.5  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p61, e0.0
  val?            %0.6  = NamedCall          !     %0.1(%0.2, to="d", drop.unused.levels=%0.3, factorPatt12=%0.4, contrasts.arg=%0.5) e0.0   <vec->
  void                    Return             l     %0.6
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    drop.unused.levels, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %in%, <0x5614f8bbdc40>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p59, 
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p60, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <lgl->
  void                    Return             l     %0.4
Prom 59:
BB0
  int-            %0.0  = Colon              vd    1L, 2L, elided   <int->
  void                    Return             l     %0.0
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int+>
  void                    Return             l     %0.3
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 62:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    model.spmatrix@Prom(62)0, e0.0
  void                    Return             l     %0.1
Prom 63:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    factorPattern, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB7 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    indF, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB7   <- [0]
  prom-           %7.0  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p67, e0.0
  prom-           %7.1  = %7.0
  goto BB3
BB3   <- [7, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %7.1:BB7
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, missingArg, e0.0   <val?_>
  lgl$#-          %3.3  = IsType                   %3.2 isA val+   <@?>
  void                    Branch                   %3.3 -> BB6 (if true) | BB4 (if false)
BB6   <- [3]
  (cls|spec|blt)  %6.0  = LdFun              !v    which.max, e0.0
  prom-           %6.1  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p64, e0.0
  val?            %6.2  = Call               !v    %6.0(%6.1) e0.0   <val?_>
  val?            %6.3  = %6.2
  goto BB5
BB4   <- [3]
  prom-           %4.0  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p65, e0.0
  prom-           %4.1  = %4.0
  goto BB5
BB5   <- [4, 6]
  val?            %5.0  = Phi                      %6.3:BB6, %4.1:BB4
  val?            %5.1  = %5.0
  val?            %5.2  = Extract1_1D        !v    %3.2, %5.1, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %5.2
Prom 64:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     which.max, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p66, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 67:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    indF, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mf, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 76:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 77:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p78, e0.0
  prom-           %0.3  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p79, e0.0
  prom-           %0.4  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p80, e0.0
  prom-           %0.5  = MkArg                    unboundValue, model.spmatrix[0x5615050e49e0]_p81, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 78:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 79:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 80:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 81:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 82:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attrib, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ model.spmatrix[0x5615050e49e0]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
