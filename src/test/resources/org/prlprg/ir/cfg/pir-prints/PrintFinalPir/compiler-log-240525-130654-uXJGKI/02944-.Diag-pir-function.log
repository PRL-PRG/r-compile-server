
┌──────────────────────────────────────────────────────────────────────────────┐
│ .Diag[0x561502600ba0]                                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── Final PIR Version
.Diag[0x561502600ba0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    as.integer, <env 0x5614f8ef6b50>
  lgl$#-          %0.3  = Identical                <blt as.integer>, %0.2   <true>
  void                    Branch                   %0.3 -> BB23 (if true) | BB24 (if false)
BB23   <- [0]
  val?^ | miss    %23.0 = LdVar              eR    length, <env 0x5614f8ef6b50>
  lgl$#-          %23.1 = Identical                <blt length>, %23.0   <true>
  void                    Branch                   %23.1 -> BB25 (if true) | BB26 (if false)
BB24   <- [0]
  void                    Nop                !     
  lgl$#-          %24.1 = %0.3
  dr              %24.2 = DeadBranchReached@0x5614fe203b78[Test#0]
  goto BB22
BB25   <- [23]
  env             e25.0 = MkEnv              l     nms=%0.1, sparse=%0.0, parent=<env 0x5614f8ef6b50>, context 1
  val+            %25.1 = Force!<lazy>       !vr   %0.1,    <str->
  (int|real)$-    %25.2 = CallSafeBuiltin    wed   length(%25.1)    <int$->
  lgl$#-          %25.3 = IsType                   %25.2 isA int$-
  void                    Branch                   %25.3 -> BB27 (if true) | BB28 (if false)
BB26   <- [23]
  void                    Nop                !     
  lgl$#-          %26.1 = %23.1
  dr              %26.2 = DeadBranchReached@0x5614fe203b78[Test#1]
  goto BB22
BB22   <- [24, 26]
  val?^ | miss    %22.0 = Phi                      %24.1:BB24, %26.1:BB26
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %24.2:BB24, %26.2:BB26
  dr              %22.3 = %22.2
  env             e22.4 = (MkEnv)            l     nms=%0.1, sparse=%0.0, parent=<env 0x5614f8ef6b50>, context 1
  fs              %22.5 = FrameState         R     0x561501703020+17: [<blt as.integer>, %0.3], env=e22.4
  void                    Deopt              !v    %22.5, %22.3, %22.1
BB27   <- [25]
  int$-           %27.0 = CastType           d     dn %25.2
  void                    StVar              lW    n, %27.0, e25.0
  val?^ | miss    %27.2 = LdVar              eR    c, <env 0x5614f8ef6b50>
  lgl$#-          %27.3 = Identical                <blt c>, %27.2   <true>
  void                    Branch                   %27.3 -> BB29 (if true) | BB30 (if false)
BB28   <- [25]
  fs              %28.0 = FrameState         R     0x561501703020+151: [<blt as.integer>, %25.2], env=e25.0
  void                    Deopt              !v    %28.0, Typecheck@0x5614fe203b78[Type#4], %25.2
BB29   <- [27]
  int-            %29.0 = CallSafeBuiltin    wed   c(%27.0, %27.0)    <int->
  void                    StVar              lW    d, %29.0, e25.0
  val?^ | miss    %29.2 = LdVar              eR    list, <env 0x5614f8ef6b50>
  lgl$#-          %29.3 = Identical                <blt list>, %29.2   <true>
  void                    Branch                   %29.3 -> BB31 (if true) | BB32 (if false)
BB30   <- [27]
  fs              %30.0 = FrameState         R     0x561501703020+187: [], env=e25.0
  void                    Deopt              !v    %30.0, DeadBranchReached@0x5614fe203b78[Test#2], %27.3
BB31   <- [29]
  val+            %31.0 = CallSafeBuiltin    wed   list(%25.1, %25.1)    <vec->
  void                    StVar              lW    dn, %31.0, e25.0
  void                    Visible            v     
  val+            %31.3 = Force!<lazy>       !r    %0.0,    <lgl$->
  lgl$#-          %31.4 = CheckTrueFalse     we    %31.3
  void                    Branch                   %31.4 -> BB13 (if true) | BB11 (if false)
BB32   <- [29]
  fs              %32.0 = FrameState         R     0x561501703020+311: [], env=e25.0
  void                    Deopt              !v    %32.0, DeadBranchReached@0x5614fe203b78[Test#3], %29.3
BB13   <- [31]
  val?^ | miss    %13.0 = LdVar              eR    suppressPackageStartupMessages, <env 0x5614f8ef6b50>
  lgl$#-          %13.1 = Identical                %13.0, function(expr) <(rir::DispatchTable*)0x5615060|...
  void                    Branch                   %13.1 -> BB33 (if true) | BB34 (if false)
BB11   <- [31]
  val?^ | miss    %11.0 = LdVar              eR    array, <env 0x5614f8ef6b50>
  lgl$#-          %11.1 = Identical                %11.0, function(data=NA, dim=length(data), dimnames=N|...
  void                    Branch                   %11.1 -> BB35 (if true) | BB36 (if false)
BB33   <- [13]
  prom-           %33.0 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p8, e25.0
  ct              %33.1 = PushContext        lCL   %33.0, suppressPackageStartupMessages(requireNamespac|..., function(expr) <(rir::DispatchTable*)0x5615060|..., e25.0
  val?^           %33.2 = CastType                 up %33.0
  env             e33.3 = MkEnv              l     expr=%33.2, parent=R_BaseNamespace, context 1
  prom-           %33.4 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p13, e33.3
  cls             %33.5 = MkCls                    suppressPackageStartupMessages@Prom(1)0, e33.3
  prom-           %33.6 = MkArg                    %33.5, .Diag[0x561502600ba0]_p14 (!refl), e33.3
  dots-           %33.7 = DotsList           l     packageStartupMessage=%33.6
  val?            %33.8 = StaticCall         !     withCallingHandlers[0x56150534bbb0](%33.4, %33.7) { 0 1n } e33.3   <lgl$->
  lgl$#-          %33.9 = IsType                   %33.8 isA lgl$-
  void                    Branch                   %33.9 -> BB37 (if true) | BB38 (if false)
BB34   <- [13]
  void                    Nop                !     
  val?^ | miss    %34.1 = %13.0
  dr              %34.2 = CallTarget@0x5614fe203b78[Call#10]
  goto BB9
BB35   <- [11]
  prom-           %35.0 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p0, e25.0
  prom-           %35.1 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p6 (!refl), e25.0
  prom-           %35.2 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p7 (!refl), e25.0
  val?            %35.3 = StaticCall         !     array[0x5614ff050aa0](%35.0, %35.1, %35.2) e25.0   <real+>
  val?            %35.4 = %35.3
  goto BB12
BB36   <- [11]
  void                    Nop                !     
  val?^ | miss    %36.1 = %11.0
  dr              %36.2 = CallTarget@0x5614fe203b78[Call#5]
  goto BB9
BB37   <- [33]
  lgl$-           %37.0 = CastType           d     dn %33.8
  val?            %37.1 = PopContext         C     %37.0, %33.1   <lgl$->
  lgl$#-          %37.2 = IsType                   %37.1 isA lgl$-
  void                    Branch                   %37.2 -> BB39 (if true) | BB40 (if false)
BB38   <- [33]
  fs              %38.0 = FrameState         R     0x561501703020+539: [], env=e25.0
  fs              %38.1 = FrameState         R     0x561503210a80+45: [%33.8], env=e33.3, next=%38.0
  void                    Deopt              !v    %38.1, Typecheck@0x5614fd0c9de8[Type#1], %33.8   !
BB9   <- [34, 36]
  val?^ | miss    %9.0  = Phi                      %34.1:BB34, %36.1:BB36
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %34.2:BB34, %36.2:BB36
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x561501703020+450: [%31.4], env=e25.0
  void                    Deopt              !v    %9.4, %9.3, %9.1
BB12   <- [35, 41]
  val?            %12.0 = Phi                      %35.4:BB35, %41.2:BB41
  val?            %12.1 = %12.0
  void                    Return             l     %12.1
BB39   <- [37]
  lgl$-           %39.0 = CastType           d     dn %37.1
  lgl$-           %39.1 = Not                vd    %39.0, elided
  lgl$#-          %39.2 = CheckTrueFalse     e     %39.1
  void                    Branch                   %39.2 -> BB21 (if true) | BB18 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x561501703020+539: [%37.1], env=e25.0
  void                    Deopt              !v    %40.0, Typecheck@0x5614fe203b78[Type#28], %37.1   !
BB21   <- [39]
  (cls|spec|blt)  %21.0 = LdFun              !v    stop, e25.0
  fs              %21.1 = FrameState         R     0x561501703020+561: [%21.0], env=e25.0
  void                    Deopt              !v    %21.1, DeadCall@0x5614fe203b78[Call#12], %21.0   !
BB18   <- [39]
  (cls|spec|blt)  %18.0 = LdFun              !     ::, <0x5614f88a7e48>, e25.0
  prom-           %18.1 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p9, e25.0
  prom-           %18.2 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p10, e25.0
  val?            %18.3 = Call               !     %18.0(%18.1, %18.2) e25.0   <cls->
  (cls|spec|blt)  %18.4 = ChkFunction        e     %18.3
  prom-           %18.5 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p11, e25.0
  prom-           %18.6 = MkArg                    unboundValue, .Diag[0x561502600ba0]_p12, e25.0
  lgl$#-          %18.7 = Identical                %18.4, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %18.7 -> BB41 (if true) | BB42 (if false)
BB41   <- [18]
  dots-           %41.0 = DotsList           l     diag="U", Dim=%18.5, Dimnames=%18.6
  val?            %41.1 = StaticCall         !     [0x5615053bf940]("ddiMatrix", %41.0) { 0 1n 2n 3n } e25.0   <other>
  val?            %41.2 = %41.1
  goto BB12
BB42   <- [18]
  fs              %42.0 = FrameState         R     0x561501703020+639: [%18.3], env=e25.0
  void                    Deopt              !v    %42.0, CallTarget@0x5614fe203b78[Call#15], %18.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .Diag[0x561502600ba0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 1) e0.0   <real->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, <0x5614fa93a230>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .Diag[0x561502600ba0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .Diag[0x561502600ba0]_p5, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .Diag[0x561502600ba0]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(1, %0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     numeric, <0x561504c7b730>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .Diag[0x561502600ba0]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  void                    Visible            v     
  val?            %0.4  = Sub                !     %0.2, 1L, e0.0   <int$->
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     requireNamespace, <0x561500c5f210>, e0.0
  val?            %0.2  = Call               !     %0.1("Matrix") e0.0   <lgl$->
  void                    Return             l     %0.2
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    new, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    suppressPackageStartupMessages@Prom(1)0, e0.0
  void                    Return             l     %0.1

│ .Diag[0x561502600ba0]                                                        │
└──────────────────────────────────────────────────────────────────────────────┘
