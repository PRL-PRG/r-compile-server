
┌──────────────────────────────────────────────────────────────────────────────┐
│ contrasts<-[0x561504cb7a30]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
contrasts<-[0x561504cb7a30]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    is.logical, <env 0x5614f8ef6b50>
  lgl$#-          %0.4  = Identical                <blt is.logical>, %0.3   <true>
  void                    Branch                   %0.4 -> BB90 (if true) | BB91 (if false)
BB90   <- [0]
  env             e90.0 = MkEnv              l     x=%0.2, how.many=%0.1, value=%0.0, parent=<env 0x5614f8ef6b50>, context 1
  val?            %90.1 = Force!<lazy>       !vr   %0.2,    <int>
  val+            %90.2 = CallSafeBuiltin    wed   is.logical(%90.1)    <lgl$->
  lgl$#-          %90.3 = IsType                   %90.2 isA lgl$-
  void                    Branch                   %90.3 -> BB92 (if true) | BB93 (if false)
BB91   <- [0]
  env             e91.0 = (MkEnv)            l     x=%0.2, how.many=%0.1, value=%0.0, parent=<env 0x5614f8ef6b50>, context 1
  fs              %91.1 = FrameState         R     0x56150549a3f0+0: [], env=e91.0
  void                    Deopt              !v    %91.1, DeadBranchReached@0x5614fed9c1d0[Test#0], %0.4
BB92   <- [90]
  lgl$-           %92.0 = CastType           d     dn %90.2
  lgl$#-          %92.1 = CheckTrueFalse     e     %92.0
  void                    Branch                   %92.1 -> BB88 (if true) | BB5 (if false)
BB93   <- [90]
  void                    Nop                !     
  val+            %93.1 = %90.2
  dr              %93.2 = Typecheck@0x5614fed9c1d0[Type#2]
  goto BB3
BB88   <- [92]
  (cls|spec|blt)  %88.0 = LdFun              !v    factor, <env 0x5614f8ef6b50>
  fs              %88.1 = FrameState         R     0x56150549a3f0+112: [%88.0], env=e90.0
  void                    Deopt              !v    %88.1, DeadCall@0x5614fed9c1d0[Call#1], %88.0
BB5   <- [92]
  val?^ | miss    %5.0  = LdVar              eR    is.factor, <env 0x5614f8ef6b50>
  lgl$#-          %5.1  = Identical                %5.0, function(x) <(rir::DispatchTable*)0x5614fa7795|...
  void                    Branch                   %5.1 -> BB94 (if true) | BB95 (if false)
BB3   <- [93, 95]
  val?^ | miss    %3.0  = Phi                      %93.1:BB93, %95.1:BB95
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %93.2:BB93, %95.2:BB95
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x56150549a3f0+91: [%90.2], env=e90.0
  void                    Deopt              !v    %3.4, %3.3, %3.1
BB94   <- [5]
  prom-           %94.0 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p0 (!refl), e90.0
  ct              %94.1 = PushContext        lCL   %94.0, is.factor(x), function(x) <(rir::DispatchTable*)0x5614fa7795|..., e90.0
  val?^           %94.2 = CastType                 up %94.0
  env             e94.3 = MkEnv              l     x=%94.2, parent=R_BaseNamespace, context 1
  prom-           %94.4 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p15, e94.3
  ct              %94.5 = PushContext        lCL   %94.4, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e94.3
  val?^           %94.6 = CastType                 up %94.4
  env             e94.7 = MkEnv              l     x=%94.6, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %94.8 = Force!<lazy>       !vr   %94.6,    <val?>
  val?            %94.9 = CallBuiltin        !v    inherits(%94.8, "factor", false) e94.7
  val?            %94.10 = PopContext         C     %94.9, %94.5   <lgl$->
  lgl$#-          %94.11 = IsType                   %94.10 isA lgl$-
  void                    Branch                   %94.11 -> BB96 (if true) | BB97 (if false)
BB95   <- [5]
  void                    Nop                !     
  val?^ | miss    %95.1 = %5.0
  dr              %95.2 = CallTarget@0x5614fed9c1d0[Call#3]
  goto BB3
BB96   <- [94]
  lgl$-           %96.0 = CastType           d     dn %94.10
  val?            %96.1 = PopContext         C     %96.0, %94.1   <lgl$->
  lgl$#-          %96.2 = IsType                   %96.1 isA lgl$-
  void                    Branch                   %96.2 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  fs              %97.0 = FrameState         R     0x56150549a3f0+198: [], env=e90.0
  fs              %97.1 = FrameState         R     0x5614fa76aab0+37: [%94.10], env=e94.3, next=%97.0
  void                    Deopt              !v    %97.1, Typecheck@0x5614f9e3b208[Type#1], %94.10   !
BB98   <- [96]
  lgl$-           %98.0 = CastType           d     dn %96.1
  lgl$-           %98.1 = Not                d     %98.0, elided
  lgl$#-          %98.2 = CheckTrueFalse     e     %98.1
  void                    Branch                   %98.2 -> BB87 (if true) | BB10 (if false)
BB99   <- [96]
  void                    Nop                !     
  val?            %99.1 = %96.1
  dr              %99.2 = Typecheck@0x5614fed9c1d0[Type#7]
  goto BB8
BB87   <- [98]
  (cls|spec|blt)  %87.0 = LdFun              !v    stop, e90.0
  fs              %87.1 = FrameState         R     0x56150549a3f0+220: [%87.0], env=e90.0
  void                    Deopt              !v    %87.1, DeadCall@0x5614fed9c1d0[Call#4], %87.0   !
BB10   <- [98]
  val?^ | miss    %10.0 = LdVar              eR    nlevels, e90.0
  lgl$#-          %10.1 = Identical                %10.0, function(x) <(rir::DispatchTable*)0x5614fd2b1f|...
  void                    Branch                   %10.1 -> BB100 (if true) | BB101 (if false)
BB8   <- [99, 101]
  val?^ | miss    %8.0  = Phi                      %99.1:BB99, %101.1:BB101
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %99.2:BB99, %101.2:BB101
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x56150549a3f0+198: [%96.1], env=e90.0
  void                    Deopt              !v    %8.4, %8.3, %8.1   !
BB100   <- [10]
  prom-           %100.0 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p1, e90.0
  ct              %100.1 = PushContext        lCL   %100.0, nlevels(x), function(x) <(rir::DispatchTable*)0x5614fd2b1f|..., e90.0
  val?^           %100.2 = CastType                 up %100.0
  env             e100.3 = MkEnv              l     x=%100.2, parent=R_BaseNamespace, context 1
  val?            %100.4 = Force!<lazy>       !vL   %100.2, e100.3   <int>
  prom-           %100.5 = MkArg                    %100.4, contrasts<-[0x561504cb7a30]_p17 (!refl), e100.3
  val?            %100.6 = StaticCall         !v    levels[0x5614ff050aa0](%100.5) e100.3   <str->
  lgl$#-          %100.7 = IsType                   %100.6 isA val?-
  void                    Branch                   %100.7 -> BB102 (if true) | BB103 (if false)
BB101   <- [10]
  void                    Nop                !     
  val?^ | miss    %101.1 = %10.0
  dr              %101.2 = CallTarget@0x5614fed9c1d0[Call#5]
  goto BB8
BB102   <- [100]
  val?-           %102.0 = CastType           d     dn %100.6   <str->
  (int|real)$-    %102.1 = CallSafeBuiltin    wed   length(%102.0)    <int$->
  lgl$#-          %102.2 = IsType                   %102.1 isA int$-
  void                    Branch                   %102.2 -> BB104 (if true) | BB105 (if false)
BB103   <- [100]
  fs              %103.0 = FrameState         R     0x56150549a3f0+280: [], env=e90.0
  fs              %103.1 = FrameState         R     0x5614fcd9ead0+92: [<blt length>, %100.6], env=e100.3, next=%103.0
  void                    Deopt              !v    %103.1, Typecheck@0x5614fff938a8[Type#3], %100.6   !
BB104   <- [102]
  int$-           %104.0 = CastType           d     dn %102.1
  val?            %104.1 = PopContext         C     %104.0, %100.1   <int$->
  lgl$#-          %104.2 = IsType                   %104.1 isA int$-
  void                    Branch                   %104.2 -> BB106 (if true) | BB107 (if false)
BB105   <- [102]
  fs              %105.0 = FrameState         R     0x56150549a3f0+280: [], env=e90.0
  fs              %105.1 = FrameState         R     0x5614fcd9ead0+114: [%102.1], env=e100.3, next=%105.0
  void                    Deopt              !v    %105.1, Typecheck@0x5614fff938a8[Type#4], %102.1   !
BB106   <- [104]
  int$-           %106.0 = CastType           d     dn %104.1
  lgl$-           %106.1 = Lt                 d     %106.0, 2L, elided   <lgl$->
  lgl$#-          %106.2 = CheckTrueFalse     e     %106.1
  void                    Branch                   %106.2 -> BB86 (if true) | BB17 (if false)
BB107   <- [104]
  void                    Nop                !     
  val?            %107.1 = %104.1
  dr              %107.2 = Typecheck@0x5614fed9c1d0[Type#9]
  goto BB15
BB86   <- [106]
  (cls|spec|blt)  %86.0 = LdFun              !v    stop, e90.0
  fs              %86.1 = FrameState         R     0x56150549a3f0+313: [%86.0], env=e90.0
  void                    Deopt              !v    %86.1, DeadCall@0x5614fed9c1d0[Call#6], %86.0   !
BB17   <- [106]
  val?^ | miss    %17.0 = LdVar              eR    is.function, e90.0
  lgl$#-          %17.1 = Identical                <blt is.function>, %17.0   <true>
  void                    Branch                   %17.1 -> BB108 (if true) | BB109 (if false)
BB15   <- [107, 109]
  val?^ | miss    %15.0 = Phi                      %107.1:BB107, %109.1:BB109
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %107.2:BB107, %109.2:BB109
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x56150549a3f0+280: [%104.1], env=e90.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB108   <- [17]
  val?^ | miss    %108.0 = LdVar              eR    value, e90.0
  val?            %108.1 = Force!<lazy>       !v    %108.0, e90.0   <(str|cls)->
  lgl$#-          %108.2 = IsType                   %108.1 isA val?-
  void                    Branch                   %108.2 -> BB110 (if true) | BB111 (if false)
BB109   <- [17]
  void                    Nop                !     
  lgl$#-          %109.1 = %17.1
  dr              %109.2 = DeadBranchReached@0x5614fed9c1d0[Test#1]
  goto BB15
BB110   <- [108]
  val?-           %110.0 = CastType           d     dn %108.1   <(str|cls)->
  lgl$#-          %110.1 = CallSafeBuiltin    wed   is.function(%110.0)    <lgl$->
  void                    Branch                   %110.1 -> BB85 (if true) | BB22 (if false)
BB111   <- [108]
  fs              %111.0 = FrameState         R     0x56150549a3f0+410: [<blt is.function>, %108.1], env=e90.0
  void                    Deopt              !v    %111.0, Typecheck@0x5614fed9c1d0[Type#12], %108.1   !
BB85   <- [110]
  val?^ | miss    %85.0 = LdVar              eR    value, e90.0
  lgl$#-          %85.1 = Identical                %85.0, function(n, contrasts=TRUE, sparse=FALSE) <(ri|...
  void                    Branch                   %85.1 -> BB112 (if true) | BB113 (if false)
BB22   <- [110]
  void                    Nop                !     
  goto BB23
BB112   <- [85]
  prom-           %112.0 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p13, e90.0
  val?            %112.1 = StaticCall         !v    value[0x56150501b170](%112.0) e90.0   <real+>
  void                    StVar              lW    value, %112.1, e90.0
  goto BB23
BB113   <- [85]
  fs              %113.0 = FrameState         R     0x56150549a3f0+432: [%110.1], env=e90.0
  void                    Deopt              !v    %113.0, CallTarget@0x5614fed9c1d0[Call#8], %85.0   !
BB23   <- [22, 112]
  val?^ | miss    %23.0 = LdVar              eR    is.numeric, e90.0
  lgl$#-          %23.1 = Identical                <blt is.numeric>, %23.0   <true>
  void                    Branch                   %23.1 -> BB114 (if true) | BB115 (if false)
BB114   <- [23]
  val?^ | miss    %114.0 = LdVar              eR    value, e90.0
  val?            %114.1 = Force!<wrapped>    !v    %114.0, e90.0   <(real|str)+>
  lgl$#-          %114.2 = IsType                   %114.1 isA val?+
  void                    Branch                   %114.2 -> BB116 (if true) | BB117 (if false)
BB115   <- [23]
  fs              %115.0 = FrameState         R     0x56150549a3f0+494: [], env=e90.0
  void                    Deopt              !v    %115.0, DeadBranchReached@0x5614fed9c1d0[Test#2], %23.1   !
BB116   <- [114]
  val?+           %116.0 = CastType           d     dn %114.1   <(real|str)+>
  lgl$#-          %116.1 = CallSafeBuiltin    wed   is.numeric(%116.0)    <lgl$->
  void                    StVar              lW    is.n, %116.1, e90.0
  void                    Branch                   %116.1 -> BB84 (if true) | BB30 (if false)
BB117   <- [114]
  fs              %117.0 = FrameState         R     0x56150549a3f0+563: [<blt is.numeric>, %114.1], env=e90.0
  void                    Deopt              !v    %117.0, Typecheck@0x5614fed9c1d0[Type#18], %114.1   !
BB84   <- [116]
  void                    Nop                !     
  lgl$#-          %84.1 = %116.1
  goto BB32
BB30   <- [116]
  val?^ | miss    %30.0 = LdVar              eR    isS4, e90.0
  lgl$#-          %30.1 = Identical                <blt isS4>, %30.0   <true>
  void                    Branch                   %30.1 -> BB118 (if true) | BB119 (if false)
BB32   <- [84, 31]
  lgl$-           %32.0 = Phi                      %31.1:BB31, %84.1:BB84
  lgl$-           %32.1 = %32.0
  lgl$#-          %32.2 = CheckTrueFalse     e     %32.1
  void                    Branch                   %32.2 -> BB42 (if true) | BB35 (if false)
BB118   <- [30]
  val?^ | miss    %118.0 = LdVar              eR    value, e90.0
  val?            %118.1 = Force!<wrapped>    !v    %118.0, e90.0   <str$->
  lgl$#-          %118.2 = CallSafeBuiltin    wed   isS4(%118.1)    <lgl$->
  lgl$-           %118.3 = LOr                      %116.1, %118.2
  void                    Branch                   %118.2 -> BB83 (if true) | BB31 (if false)
BB119   <- [30]
  fs              %119.0 = FrameState         R     0x56150549a3f0+601: [%116.1], env=e90.0
  void                    Deopt              !v    %119.0, DeadBranchReached@0x5614fed9c1d0[Test#3], %30.1   !
BB42   <- [32]
  val?^ | miss    %42.0 = LdVar              eR    is.n, e90.0
  lgl$#-          %42.1 = IsType                   %42.0 isA lgl$-
  void                    Branch                   %42.1 -> BB120 (if true) | BB121 (if false)
BB35   <- [32]
  val?^ | miss    %35.0 = LdVar              eR    is.character, e90.0
  lgl$#-          %35.1 = Identical                <blt is.character>, %35.0   <true>
  void                    Branch                   %35.1 -> BB122 (if true) | BB123 (if false)
BB83   <- [118]
  (cls|spec|blt)  %83.0 = LdFun              !v    ::, e90.0
  fs              %83.1 = FrameState         R     0x56150549a3f0+717: [%116.1, %118.2, %83.0], env=e90.0
  void                    Deopt              !v    %83.1, DeadCall@0x5614fed9c1d0[Call#12], %83.0   !
BB31   <- [118]
  void                    Nop                !     
  lgl$-           %31.1 = %118.3
  goto BB32
BB120   <- [42]
  lgl$-           %120.0 = CastType           d     dn %42.0
  lgl$#-          %120.1 = CheckTrueFalse     e     %120.0
  void                    Branch                   %120.1 -> BB82 (if true) | BB43 (if false)
BB121   <- [42]
  void                    Nop                !     
  val?^ | miss    %121.1 = %42.0
  dr              %121.2 = Typecheck@0x5614fed9c1d0[Type#33]
  goto BB33
BB122   <- [35]
  val?^ | miss    %122.0 = LdVar              eR    value, e90.0
  val?            %122.1 = Force!<wrapped>    !v    %122.0, e90.0   <str$->
  lgl$#-          %122.2 = CallSafeBuiltin    wed   is.character(%122.1)    <lgl$->
  void                    Branch                   %122.2 -> BB41 (if true) | BB36 (if false)
BB123   <- [35]
  void                    Nop                !     
  lgl$#-          %123.1 = %35.1
  dr              %123.2 = DeadBranchReached@0x5614fed9c1d0[Test#4]
  goto BB33
BB82   <- [120]
  val?^ | miss    %82.0 = LdVar              eR    as.matrix, e90.0
  lgl$#-          %82.1 = Identical                %82.0, function(x, ...) <(rir::DispatchTable*)0x5614f|...
  void                    Branch                   %82.1 -> BB124 (if true) | BB125 (if false)
BB43   <- [120]
  void                    Nop                !     
  goto BB44
BB33   <- [121, 123, 125]
  val?^ | miss    %33.0 = Phi                      %121.1:BB121, %123.1:BB123, %125.1:BB125
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %121.2:BB121, %123.2:BB123, %125.2:BB125
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x56150549a3f0+797: [%32.1], env=e90.0
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB41   <- [122]
  val?^ | miss    %41.0 = LdVar              eR    value, e90.0
  val?            %41.1 = Force!<wrapped>    !v    %41.0, e90.0   <str$->
  void                    StVar              lW    cm, %41.1, e90.0
  val?            %41.3 = %41.1
  goto BB39
BB36   <- [122]
  val?^ | miss    %36.0 = LdVar              eR    value, e90.0
  val?            %36.1 = Force!             !v    %36.0, e90.0   <val?_>
  lgl$-           %36.2 = Is                       %36.1, NULL
  lgl$#-          %36.3 = CheckTrueFalse     e     %36.2
  void                    Branch                   %36.3 -> BB38 (if true) | BB37 (if false)
BB124   <- [82]
  val?^ | miss    %124.0 = LdVar              eR    value, e90.0
  val?            %124.1 = Force!<value>      !v    %124.0, e90.0   <real+>
  prom-           %124.2 = MkArg                    %124.1, contrasts<-[0x561504cb7a30]_p11 (!refl), e90.0
  val?            %124.3 = StaticCall         !v    as.matrix[0x5614faa1d150](%124.2) { 0 } e90.0   <real+>
  void                    StVar              lW    value, %124.3, e90.0
  goto BB44
BB125   <- [82]
  void                    Nop                !     
  val?^ | miss    %125.1 = %82.0
  dr              %125.2 = CallTarget@0x5614fed9c1d0[Call#16]
  goto BB33
BB44   <- [43, 124]
  val?^ | miss    %44.0 = LdVar              eR    nlevels, e90.0
  lgl$#-          %44.1 = Identical                %44.0, function(x) <(rir::DispatchTable*)0x5614fd2b1f|...
  void                    Branch                   %44.1 -> BB126 (if true) | BB127 (if false)
BB39   <- [41, 38]
  val?            %39.0 = Phi                      %41.3:BB41, %38.1:BB38
  val?            %39.1 = %39.0
  val?            %39.2 = %39.1
  goto BB40
BB38   <- [36]
  void                    StVar              lW    cm, nil, e90.0
  nil-            %38.1 = nil
  goto BB39
BB37   <- [36]
  (cls|spec|blt)  %37.0 = LdFun              !v    stop, e90.0
  fs              %37.1 = FrameState         R     0x56150549a3f0+935: [%37.0], env=e90.0
  void                    Deopt              !v    %37.1, DeadCall@0x5614fed9c1d0[Call#15], %37.0   !
BB126   <- [44]
  prom-           %126.0 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p3, e90.0
  ct              %126.1 = PushContext        lCL   %126.0, nlevels(x), function(x) <(rir::DispatchTable*)0x5614fd2b1f|..., e90.0
  val?^           %126.2 = CastType                 up %126.0
  env             e126.3 = MkEnv              l     x=%126.2, parent=R_BaseNamespace, context 1
  val?            %126.4 = Force!<lazy>       !vL   %126.2, e126.3   <int>
  prom-           %126.5 = MkArg                    %126.4, contrasts<-[0x561504cb7a30]_p18 (!refl), e126.3
  val?            %126.6 = StaticCall         !v    levels[0x5614ff050aa0](%126.5) e126.3   <str->
  lgl$#-          %126.7 = IsType                   %126.6 isA val?-
  void                    Branch                   %126.7 -> BB128 (if true) | BB129 (if false)
BB127   <- [44]
  fs              %127.0 = FrameState         R     0x56150549a3f0+1087: [], env=e90.0
  void                    Deopt              !v    %127.0, CallTarget@0x5614fed9c1d0[Call#17], %44.0   !
BB40   <- [74, 39]
  val?            %40.0 = Phi                      %74.5:BB74, %39.2:BB39
  val?            %40.1 = %40.0
  val             %40.2 = ChkMissing         e     %40.1   <(real|str)+>
  (cls|spec|blt)  %40.3 = LdFun              !v    attr<-, <0x5614f88aae08>, e90.0
  val?^ | miss    %40.4 = LdVar              eR    x, e90.0
  val?            %40.5 = Force!<wrapped>    !v    %40.4, e90.0   <int>
  val?            %40.6 = NamedCall          !v    %40.3(%40.5, "contrasts", value=%40.2) e90.0   <int>
  void                    StVar              lW    x, %40.6, e90.0
  val             %40.8 = ChkMissing         e     %40.6
  void                    Visible            v     
  void                    Return             l     %40.6
BB128   <- [126]
  val?-           %128.0 = CastType           d     dn %126.6   <str->
  (int|real)$-    %128.1 = CallSafeBuiltin    wed   length(%128.0)    <int$->
  lgl$#-          %128.2 = IsType                   %128.1 isA int$-
  void                    Branch                   %128.2 -> BB130 (if true) | BB131 (if false)
BB129   <- [126]
  fs              %129.0 = FrameState         R     0x56150549a3f0+1119: [], env=e90.0
  fs              %129.1 = FrameState         R     0x5614fcd9ead0+92: [<blt length>, %126.6], env=e126.3, next=%129.0
  void                    Deopt              !v    %129.1, Typecheck@0x5614fff938a8[Type#3], %126.6   !
BB130   <- [128]
  int$-           %130.0 = CastType           d     dn %128.1
  val?            %130.1 = PopContext         C     %130.0, %126.1   <int$->
  lgl$#-          %130.2 = IsType                   %130.1 isA int$-
  void                    Branch                   %130.2 -> BB132 (if true) | BB133 (if false)
BB131   <- [128]
  fs              %131.0 = FrameState         R     0x56150549a3f0+1119: [], env=e90.0
  fs              %131.1 = FrameState         R     0x5614fcd9ead0+114: [%128.1], env=e126.3, next=%131.0
  void                    Deopt              !v    %131.1, Typecheck@0x5614fff938a8[Type#4], %128.1   !
BB132   <- [130]
  int$-           %132.0 = CastType           d     dn %130.1
  void                    StVar              lW    nlevs, %132.0, e90.0
  val?^ | miss    %132.2 = LdVar              eR    nrow, e90.0
  lgl$#-          %132.3 = Identical                %132.2, function(x) <(rir::DispatchTable*)0x5614faf139|...
  void                    Branch                   %132.3 -> BB134 (if true) | BB135 (if false)
BB133   <- [130]
  fs              %133.0 = FrameState         R     0x56150549a3f0+1119: [%130.1], env=e90.0
  void                    Deopt              !v    %133.0, Typecheck@0x5614fed9c1d0[Type#37], %130.1   !
BB134   <- [132]
  prom-           %134.0 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p4, e90.0
  ct              %134.1 = PushContext        lCL   %134.0, nrow(value), function(x) <(rir::DispatchTable*)0x5614faf139|..., e90.0
  val?^           %134.2 = CastType                 up %134.0
  env             e134.3 = MkEnv              l     x=%134.2, parent=R_BaseNamespace, context 1
  val?            %134.4 = Force!<lazy>       !vL   %134.2, e134.3   <val?>
  val?            %134.5 = CallBuiltin        !v    dim(%134.4) e134.3   <int->
  lgl$#-          %134.6 = IsType                   %134.5 isA val+   <true>
  lgl$#-          %134.7 = IsType                   %134.5 isA int-
  void                    Branch                   %134.6 -> BB136 (if true) | BB137 (if false)
BB135   <- [132]
  fs              %135.0 = FrameState         R     0x56150549a3f0+1133: [], env=e90.0
  void                    Deopt              !v    %135.0, CallTarget@0x5614fed9c1d0[Call#18], %132.2   !
BB136   <- [134]
  void                    Branch                   %134.7 -> BB138 (if true) | BB139 (if false)
BB137   <- [134]
  void                    Nop                !     
  lgl$#-          %137.1 = %134.6
  dr              %137.2 = DeadBranchReached@0x5614fbc29098[Test#1]
  goto BB55
BB138   <- [136]
  int-            %138.0 = CastType           d     dn %134.5
  int$-           %138.1 = Extract1_1D        wed   %138.0, 1L, elided   <int$->
  val?            %138.2 = PopContext         C     %138.1, %134.1   <int$->
  lgl$#-          %138.3 = IsType                   %138.2 isA int$-
  void                    Branch                   %138.3 -> BB140 (if true) | BB141 (if false)
BB139   <- [136]
  void                    Nop                !     
  val?            %139.1 = %134.5
  dr              %139.2 = Typecheck@0x5614fbc29098[Type#2]
  goto BB55
BB55   <- [137, 139]
  val?^ | miss    %55.0 = Phi                      %137.1:BB137, %139.1:BB139
  val?^ | miss    %55.1 = %55.0
  dr              %55.2 = Phi                      %137.2:BB137, %139.2:BB139
  dr              %55.3 = %55.2
  fs              %55.4 = FrameState         R     0x56150549a3f0+1165: [], env=e90.0
  fs              %55.5 = FrameState         R     0x5614fa7980b0+91: [%134.5], env=e134.3, next=%55.4
  void                    Deopt              !v    %55.5, %55.3, %55.1   !
BB140   <- [138]
  int$-           %140.0 = CastType           d     dn %138.2
  val?^ | miss    %140.1 = LdVar              eR    nlevs, e90.0
  lgl$#-          %140.2 = IsType                   %140.1 isA int$-
  void                    Branch                   %140.2 -> BB142 (if true) | BB143 (if false)
BB141   <- [138]
  void                    Nop                !     
  val?            %141.1 = %138.2
  dr              %141.2 = Typecheck@0x5614fed9c1d0[Type#39]
  goto BB57
BB142   <- [140]
  int$-           %142.0 = CastType           d     dn %140.1
  lgl$-           %142.1 = Neq                d     %140.0, %142.0, elided   <lgl$->
  lgl$#-          %142.2 = CheckTrueFalse     e     %142.1
  void                    Branch                   %142.2 -> BB81 (if true) | BB59 (if false)
BB143   <- [140]
  void                    Nop                !     
  val?^ | miss    %143.1 = %140.1
  dr              %143.2 = Typecheck@0x5614fed9c1d0[Type#40]
  goto BB57
BB57   <- [141, 143]
  val?^ | miss    %57.0 = Phi                      %141.1:BB141, %143.1:BB143
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %141.2:BB141, %143.2:BB143
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x56150549a3f0+1165: [%138.2], env=e90.0
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB81   <- [142]
  (cls|spec|blt)  %81.0 = LdFun              !v    stop, e90.0
  fs              %81.1 = FrameState         R     0x56150549a3f0+1206: [%81.0], env=e90.0
  void                    Deopt              !v    %81.1, DeadCall@0x5614fed9c1d0[Call#19], %81.0   !
BB59   <- [142]
  lgl$-           %59.0 = Missing            eR    how.many, e90.0
  lgl$#-          %59.1 = CheckTrueFalse     e     %59.0
  void                    Branch                   %59.1 -> BB80 (if true) | BB60 (if false)
BB80   <- [59]
  int$-           %80.0 = Sub                d     %142.0, 1L, elided   <int$->
  int$-           %80.1 = %80.0
  goto BB61
BB60   <- [59]
  val?^ | miss    %60.0 = LdVar              eR    how.many, e90.0
  val?            %60.1 = Force!             !v    %60.0, e90.0   <val?_>
  val?            %60.2 = %60.1
  goto BB61
BB61   <- [60, 80]
  val?            %61.0 = Phi                      %60.2:BB60, %80.1:BB80
  val?            %61.1 = %61.0
  void                    StVar              lW    n1, %61.1, e90.0
  val?^ | miss    %61.3 = LdVar              eR    ncol, e90.0
  lgl$#-          %61.4 = Identical                %61.3, function(x) <(rir::DispatchTable*)0x5614faae1e|...
  void                    Branch                   %61.4 -> BB144 (if true) | BB145 (if false)
BB144   <- [61]
  val?^ | miss    %144.0 = LdVar              eR    value, e90.0
  val?            %144.1 = Force!<value>      !v    %144.0, e90.0   <real+>
  lgl$#-          %144.2 = IsType                   %144.1 isA val?+
  void                    Branch                   %144.2 -> BB146 (if true) | BB147 (if false)
BB145   <- [61]
  fs              %145.0 = FrameState         R     0x56150549a3f0+1300: [], env=e90.0
  void                    Deopt              !v    %145.0, CallTarget@0x5614fed9c1d0[Call#20], %61.3   !
BB146   <- [144]
  val?+           %146.0 = CastType           d     dn %144.1   <(real|str)+>
  val+            %146.1 = CallSafeBuiltin    wed   dim(%146.0)    <int->
  val?            %146.2 = Extract1_1D        wed   %146.1, 2L, elided   <int$->
  lgl$#-          %146.3 = IsType                   %146.2 isA int$-
  void                    Branch                   %146.3 -> BB148 (if true) | BB149 (if false)
BB147   <- [144]
  fs              %147.0 = FrameState         R     0x56150549a3f0+1332: [], env=e90.0
  prom-           %147.1 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p5, e90.0
  val?^           %147.2 = CastType                 up %147.1
  env             e147.3 = (MkEnv)            l     x=%147.2, parent=R_BaseNamespace, context 0
  fs              %147.4 = FrameState         R     0x5614fbba3110+69: [<blt dim>], env=e147.3, next=%147.0
  fs              %147.5 = FrameState         R     0x5615015b22e0+5(pr): [%144.1], env=e90.0, next=%147.4
  void                    Deopt              !v    %147.5, Typecheck@0x5614f9be9968[Type#1], %144.1   !
BB148   <- [146]
  int$-           %148.0 = CastType           d     dn %146.2
  void                    StVar              lW    nc, %148.0, e90.0
  val?^ | miss    %148.2 = LdVar              eR    levels, e90.0
  lgl$#-          %148.3 = Identical                %148.2, function(x) <(rir::DispatchTable*)0x5614fbd6f7|...
  void                    Branch                   %148.3 -> BB150 (if true) | BB151 (if false)
BB149   <- [146]
  fs              %149.0 = FrameState         R     0x56150549a3f0+1332: [], env=e90.0
  prom-           %149.1 = MkArg                    %146.0, contrasts<-[0x561504cb7a30]_p5 (!refl), e90.0
  val?~           %149.2 = CastType                 up %149.1
  env             e149.3 = (MkEnv)            l     x=%149.2, parent=R_BaseNamespace, context 0
  fs              %149.4 = FrameState         R     0x5614fbba3110+134: [%146.2], env=e149.3, next=%149.0
  void                    Deopt              !v    %149.4, Typecheck@0x5614f9be9968[Type#3], %146.2   !
BB150   <- [148]
  val?^ | miss    %150.0 = LdVar              eR    x, e90.0
  val?            %150.1 = Force!<wrapped>    !v    %150.0, e90.0   <int>
  prom-           %150.2 = MkArg                    %150.1, contrasts<-[0x561504cb7a30]_p6 (!refl), e90.0
  val?            %150.3 = StaticCall         !v    levels[0x5614ff050aa0](%150.2) e90.0   <str->
  val?^ | miss    %150.4 = LdVar              eR    rownames<-, e90.0
  lgl$#-          %150.5 = Identical                %150.4, function(x, value) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %150.5 -> BB152 (if true) | BB153 (if false)
BB151   <- [148]
  fs              %151.0 = FrameState         R     0x56150549a3f0+1346: [], env=e90.0
  void                    Deopt              !v    %151.0, CallTarget@0x5614fed9c1d0[Call#21], %148.2   !
BB152   <- [150]
  val?^ | miss    %152.0 = LdVar              eR    value, e90.0
  val?            %152.1 = Force!<value>      !v    %152.0, e90.0   <real+>
  val?            %152.2 = StaticCall         !v    rownames<-[0x56150085a2b0](%152.1, %150.3) { 0 1n } e90.0
  void                    StVar              lW    value, %152.2, e90.0
  val?^ | miss    %152.4 = LdVar              eR    nc, e90.0
  lgl$#-          %152.5 = IsType                   %152.4 isA int$-
  void                    Branch                   %152.5 -> BB154 (if true) | BB155 (if false)
BB153   <- [150]
  fs              %153.0 = FrameState         R     0x56150549a3f0+1383: [%150.3], env=e90.0
  void                    Deopt              !v    %153.0, CallTarget@0x5614fed9c1d0[Call#22], %150.4   !
BB154   <- [152]
  int$-           %154.0 = CastType           d     dn %152.4
  val?^ | miss    %154.1 = LdVar              eR    n1, e90.0
  lgl$#-          %154.2 = IsType                   %154.1 isA int$-
  void                    Branch                   %154.2 -> BB156 (if true) | BB157 (if false)
BB155   <- [152]
  void                    Nop                !     
  val?^ | miss    %155.1 = %152.4
  dr              %155.2 = Typecheck@0x5614fed9c1d0[Type#50]
  goto BB72
BB156   <- [154]
  int$-           %156.0 = CastType           d     dn %154.1
  lgl$-           %156.1 = Lt                 d     %154.0, %156.0, elided   <lgl$->
  lgl$#-          %156.2 = CheckTrueFalse     e     %156.1
  void                    Branch                   %156.2 -> BB75 (if true) | BB74 (if false)
BB157   <- [154]
  void                    Nop                !     
  val?^ | miss    %157.1 = %154.1
  dr              %157.2 = Typecheck@0x5614fed9c1d0[Type#51]
  goto BB72
BB72   <- [155, 157]
  val?^ | miss    %72.0 = Phi                      %155.1:BB155, %157.1:BB157
  val?^ | miss    %72.1 = %72.0
  dr              %72.2 = Phi                      %155.2:BB155, %157.2:BB157
  dr              %72.3 = %72.2
  fs              %72.4 = FrameState         R     0x56150549a3f0+1451: [], env=e90.0
  void                    Deopt              !v    %72.4, %72.3, %72.1   !
BB75   <- [156]
  val?^ | miss    %75.0 = LdVar              eR    is.n, e90.0
  val?            %75.1 = Force!             !v    %75.0, e90.0   <val?_>
  lgl$#-          %75.2 = IsType                   %75.1 isA val?+
  void                    Branch                   %75.2 -> BB158 (if true) | BB159 (if false)
BB74   <- [156]
  (cls|spec|blt)  %74.0 = LdFun              !v    [, <0x5614f88a6c80>, e90.0
  prom-           %74.1 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p9, e90.0
  prom-           %74.2 = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p10, e90.0
  val?            %74.3 = NamedCall          !v    %74.0(%74.1, missingArg, %74.2, drop=false) e90.0   <real+>
  void                    StVar              lW    cm, %74.3, e90.0
  val?            %74.5 = %74.3
  goto BB40
BB158   <- [75]
  val?+           %158.0 = CastType           d     dn %75.1   <val?_>
  lgl             %158.1 = Not                wed   %158.0, elided
  lgl$#-          %158.2 = CheckTrueFalse     we    %158.1
  void                    Branch                   %158.2 -> BB79 (if true) | BB78 (if false)
BB159   <- [75]
  fs              %159.0 = FrameState         R     0x56150549a3f0+1582: [%75.1], env=e90.0
  void                    Deopt              !v    %159.0, Typecheck@0x5614fed9c1d0[Type#57], %75.1   !
BB79   <- [158]
  (cls|spec|blt)  %79.0 = LdFun              !v    as.matrix, e90.0
  fs              %79.1 = FrameState         R     0x56150549a3f0+1604: [%79.0], env=e90.0
  void                    Deopt              !v    %79.1, DeadCall@0x5614fed9c1d0[Call#24], %79.0   !
BB78   <- [158]
  (cls|spec|blt)  %78.0 = LdFun              !v    qr, e90.0
  fs              %78.1 = FrameState         R     0x56150549a3f0+1650: [%78.0], env=e90.0
  void                    Deopt              !v    %78.1, DeadCall@0x5614fed9c1d0[Call#25], %78.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Colon              !     1L, %0.3, e0.0   <val?_>
  void                    Return             l     %0.4
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nlevels, <0x561500e4b018>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, contrasts<-[0x561504cb7a30]_p14, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int>
  void                    Return             l     %0.3

│ contrasts<-[0x561504cb7a30]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
