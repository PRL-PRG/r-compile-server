
┌──────────────────────────────────────────────────────────────────────────────┐
│ value[0x56150501b170]                                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
value[0x56150501b170]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    length, <env 0x5614f8ef6b50>
  lgl$#-          %0.2  = Identical                <blt length>, %0.1   <true>
  void                    Branch                   %0.2 -> BB93 (if true) | BB94 (if false)
BB93   <- [0]
  env             e93.0 = MkEnv              l     n=%0.0, contrasts(miss)=true, sparse(miss)=false, parent=<env 0x5614f8ef6b50>, context 1
  val?            %93.1 = Force!<lazy>       !v    %0.0, e93.0   <(int|str)->
  lgl$#-          %93.2 = IsType                   %93.1 isA val?-
  void                    Branch                   %93.2 -> BB95 (if true) | BB96 (if false)
BB94   <- [0]
  env             e94.0 = (MkEnv)            l     n=%0.0, contrasts(miss)=true, sparse(miss)=false, parent=<env 0x5614f8ef6b50>, context 1
  fs              %94.1 = FrameState         R     0x5615058059c0+0: [], env=e94.0
  void                    Deopt              !v    %94.1, DeadBranchReached@0x5614fd922040[Test#0], %0.2
BB95   <- [93]
  val?-           %95.0 = CastType           d     dn %93.1   <(int|str)->
  (int|real)$-    %95.1 = CallSafeBuiltin    wed   length(%95.0)    <int$->
  lgl$#-          %95.2 = IsType                   %95.1 isA int$-
  void                    Branch                   %95.2 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  fs              %96.0 = FrameState         R     0x5615058059c0+69: [<blt length>, %93.1], env=e93.0
  void                    Deopt              !v    %96.0, Typecheck@0x5614fd922040[Type#1], %93.1   !
BB97   <- [95]
  int$-           %97.0 = CastType           d     dn %95.1
  lgl$-           %97.1 = Lte                d     %97.0, 1L, elided   <lgl$->
  lgl$#-          %97.2 = CheckTrueFalse     e     %97.1
  void                    Branch                   %97.2 -> BB81 (if true) | BB7 (if false)
BB98   <- [95]
  void                    Nop                !     
  (int|real)$-    %98.1 = %95.1
  dr              %98.2 = Typecheck@0x5614fd922040[Type#2]
  goto BB5
BB81   <- [97]
  val?^ | miss    %81.0 = LdVar              eR    is.numeric, e93.0
  lgl$#-          %81.1 = Identical                <blt is.numeric>, %81.0   <true>
  void                    Branch                   %81.1 -> BB99 (if true) | BB100 (if false)
BB7   <- [97]
  val?^ | miss    %7.0  = LdVar              eR    n, e93.0
  val?            %7.1  = Force!<wrapped>    !v    %7.0, e93.0   <str->
  void                    StVar              lW    levels, %7.1, e93.0
  val?            %7.3  = %7.1
  goto BB8
BB5   <- [98, 100, 102]
  val?^ | miss    %5.0  = Phi                      %98.1:BB98, %100.1:BB100, %102.1:BB102
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %98.2:BB98, %100.2:BB100, %102.2:BB102
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x5615058059c0+91: [%95.1], env=e93.0
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB99   <- [81]
  val?^ | miss    %99.0 = LdVar              eR    n, e93.0
  lgl$#-          %99.1 = IsType                   %99.0 isA int$~-
  void                    Branch                   %99.1 -> BB101 (if true) | BB102 (if false)
BB100   <- [81]
  void                    Nop                !     
  lgl$#-          %100.1 = %81.1
  dr              %100.2 = DeadBranchReached@0x5614fd922040[Test#1]
  goto BB5
BB8   <- [7, 121]
  val?            %8.0  = Phi                      %121.2:BB121, %7.3:BB7
  val?            %8.1  = %8.0
  val?^ | miss    %8.2  = LdVar              eR    as.character, e93.0
  lgl$#-          %8.3  = Identical                <blt as.character>, %8.2   <true>
  void                    Branch                   %8.3 -> BB103 (if true) | BB104 (if false)
BB101   <- [99]
  int$~-          %101.0 = CastType           d     dn %99.0
  int$-           %101.1 = Force!<wrapped>          %101.0,    <int$->
  lgl$#-          %101.2 = CallSafeBuiltin    wed   is.numeric(%101.1)    <lgl$->
  void                    Branch                   %101.2 -> BB91 (if true) | BB84 (if false)
BB102   <- [99]
  void                    Nop                !     
  val?^ | miss    %102.1 = %99.0
  dr              %102.2 = Typecheck@0x5614fd922040[Type#6]
  goto BB5
BB103   <- [8]
  val             %103.0 = ChkMissing         e     %8.1   <(int|str)->
  lgl$#-          %103.1 = IsType                   %103.0 isA val-
  void                    Branch                   %103.1 -> BB105 (if true) | BB106 (if false)
BB104   <- [8]
  void                    Nop                !     
  lgl$#-          %104.1 = %8.3
  dr              %104.2 = DeadBranchReached@0x5614fd922040[Test#4]
  goto BB9
BB91   <- [101]
  val?^ | miss    %91.0 = LdVar              eR    length, e93.0
  lgl$#-          %91.1 = Identical                <blt length>, %91.0   <true>
  void                    Branch                   %91.1 -> BB107 (if true) | BB108 (if false)
BB84   <- [101]
  void                    Nop                !     
  lgl$#-          %84.1 = true
  goto BB85
BB105   <- [103]
  val-            %105.0 = CastType           d     dn %103.0   <(int|str)->
  val+            %105.1 = CallSafeBuiltin    wed   as.character(%105.0)    <str->
  void                    StVar              lW    levels, %105.1, e93.0
  val?^ | miss    %105.3 = LdVar              eR    .Diag, e93.0
  lgl$#-          %105.4 = Identical                %105.3, function(nms, sparse) <(rir::DispatchTable*)0x|...
  void                    Branch                   %105.4 -> BB109 (if true) | BB110 (if false)
BB106   <- [103]
  void                    Nop                !     
  val             %106.1 = %103.0
  dr              %106.2 = Typecheck@0x5614fd922040[Type#18]
  goto BB9
BB9   <- [104, 106]
  val?^ | miss    %9.0  = Phi                      %104.1:BB104, %106.1:BB106
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %104.2:BB104, %106.2:BB106
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x5615058059c0+539: [], env=e93.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB107   <- [91]
  void                    Nop                !     
  lgl$#-          %107.1 = false
  goto BB85
BB108   <- [91]
  void                    Nop                !     
  lgl$#-          %108.1 = %91.1
  dr              %108.2 = DeadBranchReached@0x5614fd922040[Test#2]
  goto BB82
BB85   <- [84, 107]
  lgl$#-          %85.0 = Phi                      %84.1:BB84, %107.1:BB107
  lgl$#-          %85.1 = %85.0
  void                    Branch                   %85.1 -> BB90 (if true) | BB86 (if false)
BB109   <- [105]
  prom-           %109.0 = MkArg                    unboundValue, value[0x56150501b170]_p2 (!refl), e93.0
  prom-           %109.1 = MkArg                    unboundValue, value[0x56150501b170]_p3, e93.0
  ct              %109.2 = PushContext        lCL   %109.0, %109.1, .Diag(levels, sparse=sparse), function(nms, sparse) <(rir::DispatchTable*)0x|..., e93.0
  val?^           %109.3 = CastType                 up %109.1
  val?^           %109.4 = CastType                 up %109.0
  val?^ | miss    %109.5 = LdVar              eR    as.integer, <env 0x5614f8ef6b50>
  lgl$#-          %109.6 = Identical                <blt as.integer>, %109.5   <true>
  void                    Branch                   %109.6 -> BB111 (if true) | BB112 (if false)
BB110   <- [105]
  fs              %110.0 = FrameState         R     0x5615058059c0+644: [], env=e93.0
  void                    Deopt              !v    %110.0, CallTarget@0x5614fd922040[Call#6], %105.3   !
BB82   <- [108, 122]
  val?^ | miss    %82.0 = Phi                      %108.1:BB108, %122.1:BB122
  val?^ | miss    %82.1 = %82.0
  dr              %82.2 = Phi                      %108.2:BB108, %122.2:BB122
  dr              %82.3 = %82.2
  fs              %82.4 = FrameState         R     0x5615058059c0+233: [%101.2], env=e93.0
  void                    Deopt              !v    %82.4, %82.3, %82.1   !
BB90   <- [85]
  void                    Nop                !     
  lgl$#-          %90.1 = %101.2
  goto BB87
BB86   <- [85]
  lgl$-           %86.0 = Gt                 d     %101.1, 1L, elided   <lgl$->
  lgl$-           %86.1 = AsLogical                %86.0
  lgl$-           %86.2 = LAnd                     %101.2, %86.1
  lgl$-           %86.3 = %86.2
  goto BB87
BB111   <- [109]
  val?^ | miss    %111.0 = LdVar              eR    length, <env 0x5614f8ef6b50>
  lgl$#-          %111.1 = Identical                <blt length>, %111.0   <true>
  void                    Branch                   %111.1 -> BB113 (if true) | BB114 (if false)
BB112   <- [109]
  void                    Nop                !     
  lgl$#-          %112.1 = %109.6
  dr              %112.2 = DeadBranchReached@0x5614fe203b78[Test#0]
  goto BB13
BB87   <- [90, 86]
  lgl$-           %87.0 = Phi                      %86.3:BB86, %90.1:BB90
  lgl$-           %87.1 = %87.0
  lgl$#-          %87.2 = CheckTrueFalse     e     %87.1
  void                    Branch                   %87.2 -> BB89 (if true) | BB88 (if false)
BB113   <- [111]
  env             e113.0 = MkEnv              l     nms=%109.4, sparse=%109.3, parent=<env 0x5614f8ef6b50>, context 1
  val?            %113.1 = Force!<lazy>       !vrL  %109.4, e113.0   <str->
  lgl$#-          %113.2 = IsType                   %113.1 isA val?-
  void                    Branch                   %113.2 -> BB115 (if true) | BB116 (if false)
BB114   <- [111]
  void                    Nop                !     
  lgl$#-          %114.1 = %111.1
  dr              %114.2 = DeadBranchReached@0x5614fe203b78[Test#1]
  goto BB13
BB13   <- [112, 114]
  val?^ | miss    %13.0 = Phi                      %112.1:BB112, %114.1:BB114
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %112.2:BB112, %114.2:BB114
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  env             e13.5 = (MkEnv)            l     nms=%109.4, sparse=%109.3, parent=<env 0x5614f8ef6b50>, context 1
  fs              %13.6 = FrameState         R     0x561501703020+17: [<blt as.integer>, %109.6], env=e13.5, next=%13.4
  void                    Deopt              !v    %13.6, %13.3, %13.1   !
BB89   <- [87]
  val?^ | miss    %89.0 = LdVar              eR    seq_len, e93.0
  lgl$#-          %89.1 = Identical                <blt seq_len>, %89.0   <true>
  void                    Branch                   %89.1 -> BB121 (if true) | BB122 (if false)
BB88   <- [87]
  (cls|spec|blt)  %88.0 = LdFun              !v    stop, e93.0
  fs              %88.1 = FrameState         R     0x5615058059c0+401: [%88.0], env=e93.0
  void                    Deopt              !v    %88.1, DeadCall@0x5614fd922040[Call#3], %88.0   !
BB115   <- [113]
  val?-           %115.0 = CastType           d     dn %113.1   <str->
  (int|real)$-    %115.1 = CallSafeBuiltin    wed   length(%115.0)    <int$->
  lgl$#-          %115.2 = IsType                   %115.1 isA int$-
  void                    Branch                   %115.2 -> BB117 (if true) | BB118 (if false)
BB116   <- [113]
  fs              %116.0 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  fs              %116.1 = FrameState         R     0x561501703020+129: [<blt as.integer>, <blt length>, %113.1], env=e113.0, next=%116.0
  void                    Deopt              !v    %116.1, Typecheck@0x5614fe203b78[Type#3], %113.1   !
BB121   <- [89]
  val+            %121.0 = CallSafeBuiltin    wed   seq_len(%101.1)    <int->
  void                    StVar              lW    levels, %121.0, e93.0
  val+            %121.2 = %121.0
  goto BB8
BB122   <- [89]
  void                    Nop                !     
  lgl$#-          %122.1 = %89.1
  dr              %122.2 = DeadBranchReached@0x5614fd922040[Test#3]
  goto BB82
BB117   <- [115]
  int$-           %117.0 = CastType           d     dn %115.1
  void                    StVar              lW    n, %117.0, e113.0
  val?^ | miss    %117.2 = LdVar              eR    c, <env 0x5614f8ef6b50>
  lgl$#-          %117.3 = Identical                <blt c>, %117.2   <true>
  void                    Branch                   %117.3 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  fs              %118.0 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  fs              %118.1 = FrameState         R     0x561501703020+151: [<blt as.integer>, %115.1], env=e113.0, next=%118.0
  void                    Deopt              !v    %118.1, Typecheck@0x5614fe203b78[Type#4], %115.1   !
BB119   <- [117]
  int-            %119.0 = CallSafeBuiltin    wed   c(%117.0, %117.0)    <int->
  void                    StVar              lW    d, %119.0, e113.0
  val?^ | miss    %119.2 = LdVar              eR    list, <env 0x5614f8ef6b50>
  lgl$#-          %119.3 = Identical                <blt list>, %119.2   <true>
  void                    Branch                   %119.3 -> BB123 (if true) | BB124 (if false)
BB120   <- [117]
  fs              %120.0 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  fs              %120.1 = FrameState         R     0x561501703020+187: [], env=e113.0, next=%120.0
  void                    Deopt              !v    %120.1, DeadBranchReached@0x5614fe203b78[Test#2], %117.3   !
BB123   <- [119]
  val+            %123.0 = CallSafeBuiltin    wed   list(%115.0, %115.0)    <vec->
  void                    StVar              lW    dn, %123.0, e113.0
  val?            %123.2 = Force!<lazy>       !vL   %109.3, e113.0   <lgl$->
  lgl$#-          %123.3 = CheckTrueFalse     we    %123.2
  void                    Branch                   %123.3 -> BB72 (if true) | BB25 (if false)
BB124   <- [119]
  fs              %124.0 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  fs              %124.1 = FrameState         R     0x561501703020+311: [], env=e113.0, next=%124.0
  void                    Deopt              !v    %124.1, DeadBranchReached@0x5614fe203b78[Test#3], %119.3   !
BB72   <- [123]
  val?^ | miss    %72.0 = LdVar              eR    suppressPackageStartupMessages, <env 0x5614f8ef6b50>
  lgl$#-          %72.1 = Identical                %72.0, function(expr) <(rir::DispatchTable*)0x5615060|...
  void                    Branch                   %72.1 -> BB125 (if true) | BB126 (if false)
BB25   <- [123]
  val?^ | miss    %25.0 = LdVar              eR    array, <env 0x5614f8ef6b50>
  lgl$#-          %25.1 = Identical                %25.0, function(data=NA, dim=length(data), dimnames=N|...
  void                    Branch                   %25.1 -> BB127 (if true) | BB128 (if false)
BB125   <- [72]
  prom-           %125.0 = MkArg                    unboundValue, value[0x56150501b170]_p8, e113.0
  ct              %125.1 = PushContext        lCL   %125.0, suppressPackageStartupMessages(requireNamespac|..., function(expr) <(rir::DispatchTable*)0x5615060|..., e113.0
  val?^           %125.2 = CastType                 up %125.0
  env             e125.3 = MkEnv              l     expr=%125.2, parent=R_BaseNamespace, context 1
  prom-           %125.4 = MkArg                    unboundValue, value[0x56150501b170]_p21, e125.3
  cls             %125.5 = MkCls                    suppressPackageStartupMessages@Prom(1)0, e125.3
  prom-           %125.6 = MkArg                    %125.5, value[0x56150501b170]_p22 (!refl), e125.3
  dots-           %125.7 = DotsList           l     packageStartupMessage=%125.6
  val?            %125.8 = StaticCall         !v    withCallingHandlers[0x5614ff04fd80](%125.4, %125.7) { 0 1n } e125.3   <lgl$->
  lgl$#-          %125.9 = IsType                   %125.8 isA lgl$-
  void                    Branch                   %125.9 -> BB129 (if true) | BB130 (if false)
BB126   <- [72]
  void                    Nop                !     
  val?^ | miss    %126.1 = %72.0
  dr              %126.2 = CallTarget@0x5614fe203b78[Call#10]
  goto BB23
BB127   <- [25]
  prom-           %127.0 = MkArg                    unboundValue, value[0x56150501b170]_p9, e113.0
  prom-           %127.1 = MkArg                    unboundValue, value[0x56150501b170]_p15 (!refl), e113.0
  prom-           %127.2 = MkArg                    unboundValue, value[0x56150501b170]_p16 (!refl), e113.0
  val?            %127.3 = StaticCall         !v    array[0x5614fd87ec00](%127.0, %127.1, %127.2) e113.0   <real+>
  val?            %127.4 = %127.3
  goto BB26
BB128   <- [25]
  void                    Nop                !     
  val?^ | miss    %128.1 = %25.0
  dr              %128.2 = CallTarget@0x5614fe203b78[Call#5]
  goto BB23
BB129   <- [125]
  lgl$-           %129.0 = CastType           d     dn %125.8
  val?            %129.1 = PopContext         C     %129.0, %125.1   <lgl$->
  lgl$#-          %129.2 = IsType                   %129.1 isA lgl$-
  void                    Branch                   %129.2 -> BB135 (if true) | BB136 (if false)
BB130   <- [125]
  fs              %130.0 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  fs              %130.1 = FrameState         R     0x561501703020+539: [], env=e113.0, next=%130.0
  fs              %130.2 = FrameState         R     0x561503210a80+45: [%125.8], env=e125.3, next=%130.1
  void                    Deopt              !v    %130.2, Typecheck@0x5614fd0c9de8[Type#1], %125.8   !
BB23   <- [126, 128]
  val?^ | miss    %23.0 = Phi                      %126.1:BB126, %128.1:BB128
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %126.2:BB126, %128.2:BB128
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  fs              %23.5 = FrameState         R     0x561501703020+450: [%123.3], env=e113.0, next=%23.4
  void                    Deopt              !v    %23.5, %23.3, %23.1   !
BB26   <- [127, 141]
  val?            %26.0 = Phi                      %127.4:BB127, %141.2:BB141
  val?            %26.1 = %26.0
  val?            %26.2 = PopContext         C     %26.1, %109.2   <real+>
  void                    StVar              lW    cont, %26.2, e93.0
  val?^ | miss    %26.4 = LdVar              eR    contrasts, e93.0
  val?            %26.5 = Force!<lazy>       !v    %26.4, e93.0   <lgl$->
  lgl$#-          %26.6 = CheckTrueFalse     we    %26.5
  void                    Branch                   %26.6 -> BB31 (if true) | BB27 (if false)
BB135   <- [129]
  lgl$-           %135.0 = CastType           d     dn %129.1
  lgl$-           %135.1 = Not                d     %135.0, elided
  lgl$#-          %135.2 = CheckTrueFalse     e     %135.1
  void                    Branch                   %135.2 -> BB80 (if true) | BB77 (if false)
BB136   <- [129]
  fs              %136.0 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  fs              %136.1 = FrameState         R     0x561501703020+539: [%129.1], env=e113.0, next=%136.0
  void                    Deopt              !v    %136.1, Typecheck@0x5614fe203b78[Type#28], %129.1   !
BB31   <- [26]
  (cls|spec|blt)  %31.0 = LdFun              !v    [, <0x5614f88a6c80>, e93.0
  prom-           %31.1 = MkArg                    unboundValue, value[0x56150501b170]_p4, e93.0
  prom-           %31.2 = MkArg                    unboundValue, value[0x56150501b170]_p5, e93.0
  val?            %31.3 = NamedCall          !v    %31.0(%31.1, missingArg, %31.2, drop=false) e93.0   <real+>
  void                    StVar              lW    cont, %31.3, e93.0
  val             %31.5 = ChkMissing         e     %31.3
  val?^ | miss    %31.6 = LdVar              eR    length, e93.0
  lgl$#-          %31.7 = Identical                <blt length>, %31.6   <true>
  void                    Branch                   %31.7 -> BB133 (if true) | BB134 (if false)
BB27   <- [26]
  void                    Nop                !     
  goto BB28
BB80   <- [135]
  fs              %80.0 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  (cls|spec|blt)  %80.1 = LdFun              !v    stop, e113.0
  fs              %80.2 = FrameState         R     0x561501703020+561: [%80.1], env=e113.0, next=%80.0
  void                    Deopt              !v    %80.2, DeadCall@0x5614fe203b78[Call#12], %80.1   !
BB77   <- [135]
  (cls|spec|blt)  %77.0 = LdFun              !v    ::, <0x5614f88a7e48>, e113.0
  prom-           %77.1 = MkArg                    unboundValue, value[0x56150501b170]_p17, e113.0
  prom-           %77.2 = MkArg                    unboundValue, value[0x56150501b170]_p18, e113.0
  val?            %77.3 = Call               !v    %77.0(%77.1, %77.2) e113.0   <cls->
  (cls|spec|blt)  %77.4 = ChkFunction        e     %77.3
  prom-           %77.5 = MkArg                    unboundValue, value[0x56150501b170]_p19, e113.0
  prom-           %77.6 = MkArg                    unboundValue, value[0x56150501b170]_p20, e113.0
  lgl$#-          %77.7 = Identical                %77.4, function(Class, ...) <(rir::DispatchTable*)0x5|...
  void                    Branch                   %77.7 -> BB141 (if true) | BB142 (if false)
BB133   <- [31]
  val?^ | miss    %133.0 = LdVar              eR    levels, e93.0
  lgl$#-          %133.1 = IsType                   %133.0 isA val?~- | miss
  void                    Branch                   %133.1 -> BB137 (if true) | BB138 (if false)
BB134   <- [31]
  void                    Nop                !     
  lgl$#-          %134.1 = %31.7
  dr              %134.2 = DeadBranchReached@0x5614fd922040[Test#5]
  goto BB32
BB28   <- [27, 55]
  val?^ | miss    %28.0 = LdVar              eR    cont, e93.0
  lgl$#-          %28.1 = IsType                   %28.0 isA real+
  void                    Branch                   %28.1 -> BB131 (if true) | BB132 (if false)
BB141   <- [77]
  dots-           %141.0 = DotsList           l     diag="U", Dim=%77.5, Dimnames=%77.6
  val?            %141.1 = StaticCall         !v    [0x56150563d3d0]("ddiMatrix", %141.0) { 0 1n 2n 3n } e113.0   <other>
  val?            %141.2 = %141.1
  goto BB26
BB142   <- [77]
  fs              %142.0 = FrameState         R     0x5615058059c0+689: [], env=e93.0
  fs              %142.1 = FrameState         R     0x561501703020+639: [%77.3], env=e113.0, next=%142.0
  void                    Deopt              !v    %142.1, CallTarget@0x5614fe203b78[Call#15], %77.4   !
BB137   <- [133]
  val?~- | miss   %137.0 = CastType           d     dn %133.0
  val?-           %137.1 = Force!<value>            %137.0,    <str->
  (int|real)$-    %137.2 = CallSafeBuiltin    wed   length(%137.1)    <int$->
  lgl$#-          %137.3 = IsType                   %137.2 isA int$-
  void                    Branch                   %137.3 -> BB139 (if true) | BB140 (if false)
BB138   <- [133]
  void                    Nop                !     
  val?^ | miss    %138.1 = %133.0
  dr              %138.2 = Typecheck@0x5614fd922040[Type#30]
  goto BB32
BB32   <- [134, 138]
  val?^ | miss    %32.0 = Phi                      %134.1:BB134, %138.1:BB138
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %134.2:BB134, %138.2:BB138
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x5615058059c0+805: [], env=e93.0
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB131   <- [28]
  real+           %131.0 = CastType           d     dn %28.0
  void                    Visible            v     
  void                    Return             l     %131.0
BB132   <- [28]
  fs              %132.0 = FrameState         R     0x5615058059c0+1011: [], env=e93.0
  void                    Deopt              !v    %132.0, Typecheck@0x5614fd922040[Type#33], %28.0   !
BB139   <- [137]
  int$-           %139.0 = CastType           d     dn %137.2
  lgl$#-          %139.1 = IsType                   %31.3 isA real+
  void                    Branch                   %139.1 -> BB143 (if true) | BB144 (if false)
BB140   <- [137]
  void                    Nop                !     
  (int|real)$-    %140.1 = %137.2
  dr              %140.2 = Typecheck@0x5614fd922040[Type#31]
  goto BB34
BB143   <- [139]
  real+           %143.0 = CastType           d     dn %31.3
  real+           %143.1 = Subassign1_2D      wed   -1, %143.0, %139.0, missingArg, elided
  void                    StVar              lW    cont, %143.1, e93.0
  val?^ | miss    %143.3 = LdVar              eR    colnames<-, e93.0
  lgl$#-          %143.4 = Identical                %143.3, function(x, value) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %143.4 -> BB145 (if true) | BB146 (if false)
BB144   <- [139]
  void                    Nop                !     
  val?            %144.1 = %31.3
  dr              %144.2 = Typecheck@0x5614fd922040[Type#27]
  goto BB34
BB34   <- [140, 144]
  val?^ | miss    %34.0 = Phi                      %140.1:BB140, %144.1:BB144
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %140.2:BB140, %144.2:BB144
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x5615058059c0+917: [-1, %31.3, %137.2], env=e93.0
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB145   <- [143]
  ct              %145.0 = PushContext        lCL   %143.1, nil, colnames<-(cont, value=NULL), function(x, value) <(rir::DispatchTable*)0x561|..., e93.0
  env             e145.1 = MkEnv              l     x=%143.1, value=nil, parent=R_BaseNamespace, context 1
  prom-           %145.2 = MkArg                    unboundValue, value[0x56150501b170]_p23 (!refl), e145.1
  ct              %145.3 = PushContext        lCL   %145.2, is.data.frame(x), function(x) <(rir::DispatchTable*)0x5614f93266|..., e145.1
  val?^           %145.4 = CastType                 up %145.2
  env             e145.5 = MkEnv              l     x=%145.4, parent=R_BaseNamespace, context 1
  prom-           %145.6 = MkArg                    unboundValue, value[0x56150501b170]_p24, e145.5
  ct              %145.7 = PushContext        lCL   %145.6, "data.frame", inherits(x, "data.frame"), function(x, what, which=FALSE) <(rir::Dispatch|..., e145.5
  val?^           %145.8 = CastType                 up %145.6
  env             e145.9 = MkEnv              l     x=%145.8, what="data.frame", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %145.10 = Force!<lazy>       !vr   %145.8,    <val?>
  val?            %145.11 = CallBuiltin        !v    inherits(%145.10, "data.frame", false) e145.9
  val?            %145.12 = PopContext         C     %145.11, %145.7   <lgl$->
  lgl$#-          %145.13 = IsType                   %145.12 isA lgl$-
  void                    Branch                   %145.13 -> BB147 (if true) | BB148 (if false)
BB146   <- [143]
  fs              %146.0 = FrameState         R     0x5615058059c0+937: [], env=e93.0
  void                    Deopt              !v    %146.0, CallTarget@0x5614fd922040[Call#10], %143.3   !
BB147   <- [145]
  lgl$-           %147.0 = CastType           d     dn %145.12
  val?            %147.1 = PopContext         C     %147.0, %145.3   <lgl$->
  lgl$#-          %147.2 = IsType                   %147.1 isA lgl$-
  void                    Branch                   %147.2 -> BB149 (if true) | BB150 (if false)
BB148   <- [145]
  fs              %148.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  fs              %148.1 = FrameState         R     0x561502997c90+32: [], env=e145.1, next=%148.0
  fs              %148.2 = FrameState         R     0x5614fa18c410+37: [%145.12], env=e145.5, next=%148.1
  void                    Deopt              !v    %148.2, Typecheck@0x561504e0fc58[Type#1], %145.12   !
BB149   <- [147]
  lgl$-           %149.0 = CastType           d     dn %147.1
  lgl$#-          %149.1 = CheckTrueFalse     e     %149.0
  void                    Branch                   %149.1 -> BB71 (if true) | BB42 (if false)
BB150   <- [147]
  void                    Nop                !     
  val?            %150.1 = %147.1
  dr              %150.2 = Typecheck@0x5614ffb51d08[Type#1]
  goto BB40
BB71   <- [149]
  fs              %71.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  val?^ | miss    %71.1 = LdVar              eR    value, e145.1
  val?            %71.2 = Force!             !v    %71.1, e145.1   <val?_>
  (cls|spec|blt)  %71.3 = LdFun              !v    names<-, e145.1
  fs              %71.4 = FrameState         R     0x561502997c90+970: [%71.2, %71.3], env=e145.1, next=%71.0
  void                    Deopt              !v    %71.4, DeadCall@0x5614ffb51d08[Call#11], %71.3   !
BB42   <- [149]
  val?^ | miss    %42.0 = LdVar              eR    dimnames, e145.1
  lgl$#-          %42.1 = Identical                <blt dimnames>, %42.0   <true>
  void                    Branch                   %42.1 -> BB151 (if true) | BB152 (if false)
BB40   <- [150, 152]
  val?^ | miss    %40.0 = Phi                      %150.1:BB150, %152.1:BB152
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %150.2:BB150, %152.2:BB152
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  fs              %40.5 = FrameState         R     0x561502997c90+32: [%147.1], env=e145.1, next=%40.4
  void                    Deopt              !v    %40.5, %40.3, %40.1   !
BB151   <- [42]
  val?^ | miss    %151.0 = LdVar              eR    x, e145.1
  val?            %151.1 = Force!<value>      !v    %151.0, e145.1   <real+>
  val?            %151.2 = CallBuiltin        !v    dimnames(%151.1) e145.1   <vec->
  lgl$-           %151.3 = Is                       %151.2, NULL
  void                    StVar              lW    dn, %151.2, e145.1
  val             %151.5 = ChkMissing         e     %151.2
  lgl$#-          %151.6 = CheckTrueFalse     e     %151.3
  void                    Branch                   %151.6 -> BB60 (if true) | BB45 (if false)
BB152   <- [42]
  void                    Nop                !     
  lgl$#-          %152.1 = %42.1
  dr              %152.2 = DeadBranchReached@0x5614ffb51d08[Test#0]
  goto BB40
BB60   <- [151]
  val?^ | miss    %60.0 = LdVar              eR    value, e145.1
  val?            %60.1 = Force!             !v    %60.0, e145.1   <val?_>
  lgl$-           %60.2 = Is                       %60.1, NULL
  lgl$#-          %60.3 = CheckTrueFalse     e     %60.2
  void                    Branch                   %60.3 -> BB70 (if true) | BB61 (if false)
BB45   <- [151]
  val?^ | miss    %45.0 = LdVar              eR    length, e145.1
  lgl$#-          %45.1 = Identical                <blt length>, %45.0   <true>
  void                    Branch                   %45.1 -> BB153 (if true) | BB154 (if false)
BB70   <- [60]
  val?^ | miss    %70.0 = LdVar              eR    x, e145.1
  val?            %70.1 = Force!             !v    %70.0, e145.1   <val?_>
  val?            %70.2 = %70.1
  goto BB55
BB61   <- [60]
  val?^ | miss    %61.0 = LdVar              eR    length, e145.1
  lgl$#-          %61.1 = Identical                <blt length>, %61.0   <@?>
  void                    Branch                   %61.1 -> BB63 (if true) | BB62 (if false)
BB153   <- [45]
  lgl$#-          %153.0 = IsType                   %151.2 isA val?-
  void                    Branch                   %153.0 -> BB157 (if true) | BB158 (if false)
BB154   <- [45]
  void                    Nop                !     
  lgl$#-          %154.1 = %45.1
  dr              %154.2 = DeadBranchReached@0x5614ffb51d08[Test#3]
  goto BB43
BB55   <- [70, 54]
  val?            %55.0 = Phi                      %54.9:BB54, %70.2:BB70
  val?            %55.1 = %55.0
  val?            %55.2 = PopContext         C     %55.1, %145.0
  void                    StVar              lW    cont, %55.2, e93.0
  goto BB28
BB63   <- [61]
  val?^ | miss    %63.0 = LdVar              eR    dim, e145.1
  lgl$#-          %63.1 = Identical                <blt dim>, %63.0   <@?>
  void                    Branch                   %63.1 -> BB65 (if true) | BB64 (if false)
BB62   <- [61]
  fs              %62.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  (cls|spec|blt)  %62.1 = LdFun              !v    length, e145.1
  fs              %62.2 = FrameState         R     0x561502997c90+251: [%62.1], env=e145.1, next=%62.0
  void                    Deopt              !v    %62.2, DeadCall@0x5614ffb51d08[Call#2], %62.1   !
BB157   <- [153]
  val?-           %157.0 = CastType           d     dn %151.2   <vec->
  (int|real)$-    %157.1 = CallSafeBuiltin    wed   length(%157.0)    <int$->
  lgl$#-          %157.2 = IsType                   %157.1 isA int$-
  void                    Branch                   %157.2 -> BB159 (if true) | BB160 (if false)
BB158   <- [153]
  void                    Nop                !     
  val?            %158.1 = %151.2
  dr              %158.2 = Typecheck@0x5614ffb51d08[Type#4]
  goto BB43
BB43   <- [154, 158]
  val?^ | miss    %43.0 = Phi                      %154.1:BB154, %158.1:BB158
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %154.2:BB154, %158.2:BB158
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  fs              %43.5 = FrameState         R     0x561502997c90+148: [], env=e145.1, next=%43.4
  void                    Deopt              !v    %43.5, %43.3, %43.1   !
BB65   <- [63]
  val?^ | miss    %65.0 = LdVar              eR    x, e145.1
  val?            %65.1 = Force!             !v    %65.0, e145.1   <val?_>
  lgl$#-          %65.2 = IsType                   %65.1 isA val?+
  void                    Branch                   %65.2 -> BB155 (if true) | BB156 (if false)
BB64   <- [63]
  fs              %64.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  (cls|spec|blt)  %64.1 = LdFun              !v    dim, e145.1
  fs              %64.2 = FrameState         R     0x561502997c90+311: [<blt length>, %64.1], env=e145.1, next=%64.0
  void                    Deopt              !v    %64.2, DeadCall@0x5614ffb51d08[Call#4], %64.1   !
BB159   <- [157]
  int$-           %159.0 = CastType           d     dn %157.1
  lgl$-           %159.1 = Lt                 d     %159.0, 2L, elided   <lgl$->
  lgl$#-          %159.2 = CheckTrueFalse     e     %159.1
  void                    Branch                   %159.2 -> BB59 (if true) | BB48 (if false)
BB160   <- [157]
  fs              %160.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  fs              %160.1 = FrameState         R     0x561502997c90+611: [%157.1], env=e145.1, next=%160.0
  void                    Deopt              !v    %160.1, Typecheck@0x5614ffb51d08[Type#19], %157.1   !
BB155   <- [65]
  val?+           %155.0 = CastType           d     dn %65.1   <val?_>
  val+            %155.1 = CallSafeBuiltin    wed   dim(%155.0)    <val?_>
  real$-          %155.2 = CallSafeBuiltin    wed   length(%155.1)    <val?_>
  void                    StVar              lW    nd, %155.2, e145.1
  lgl$-           %155.4 = Lt                 d     %155.2, 2L, elided   <val?_>
  lgl$#-          %155.5 = CheckTrueFalse     e     %155.4
  void                    Branch                   %155.5 -> BB69 (if true) | BB68 (if false)
BB156   <- [65]
  fs              %156.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  fs              %156.1 = FrameState         R     0x561502997c90+352: [<blt length>, <blt dim>, %65.1], env=e145.1, next=%156.0
  void                    Deopt              !v    %156.1, Typecheck@0x5614ffb51d08[Type#11], %65.1   !
BB59   <- [159]
  fs              %59.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  (cls|spec|blt)  %59.1 = LdFun              !v    stop, e145.1
  fs              %59.2 = FrameState         R     0x561502997c90+644: [%59.1], env=e145.1, next=%59.0
  void                    Deopt              !v    %59.2, DeadCall@0x5614ffb51d08[Call#8], %59.1   !
BB48   <- [159]
  val?^ | miss    %48.0 = LdVar              eR    value, e145.1
  val?            %48.1 = Force!<wrapped>    !v    %48.0, e145.1   <nil->
  lgl$-           %48.2 = Is                       %48.1, NULL
  lgl$#-          %48.3 = CheckTrueFalse     e     %48.2
  void                    Branch                   %48.3 -> BB56 (if true) | BB51 (if false)
BB69   <- [155]
  fs              %69.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  (cls|spec|blt)  %69.1 = LdFun              !v    stop, e145.1
  fs              %69.2 = FrameState         R     0x561502997c90+441: [%69.1], env=e145.1, next=%69.0
  void                    Deopt              !v    %69.2, DeadCall@0x5614ffb51d08[Call#5], %69.1   !
BB68   <- [155]
  fs              %68.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  (cls|spec|blt)  %68.1 = LdFun              !v    vector, e145.1
  fs              %68.2 = FrameState         R     0x561502997c90+474: [%68.1], env=e145.1, next=%68.0
  void                    Deopt              !v    %68.2, DeadCall@0x5614ffb51d08[Call#6], %68.1   !
BB56   <- [48]
  val?^ | miss    %56.0 = LdVar              eR    list, e145.1
  lgl$#-          %56.1 = Identical                <blt list>, %56.0   <true>
  void                    Branch                   %56.1 -> BB161 (if true) | BB162 (if false)
BB51   <- [48]
  val?^ | miss    %51.0 = LdVar              eR    value, e145.1
  val?            %51.1 = Force!             !v    %51.0, e145.1   <val?_>
  val?^ | miss    %51.2 = LdVar              eR    dn !upd, e145.1
  val?            %51.3 = Force!             !v    %51.2, e145.1   <val?_>
  lgl$#-          %51.4 = IsType                   %51.3 isA val?+
  lgl$#-          %51.5 = IsType                   %51.1 isA val?+
  void                    Branch                   %51.5 -> BB163 (if true) | BB164 (if false)
BB161   <- [56]
  val+            %161.0 = CallSafeBuiltin    wed   list(nil)    <vec$->
  val?^ | miss    %161.1 = LdVar              eR    dn !upd, e145.1
  lgl$#-          %161.2 = IsType                   %161.1 isA val?~- | miss
  void                    Branch                   %161.2 -> BB165 (if true) | BB166 (if false)
BB162   <- [56]
  fs              %162.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  fs              %162.1 = FrameState         R     0x561502997c90+681: [%48.1], env=e145.1, next=%162.0
  void                    Deopt              !v    %162.1, DeadBranchReached@0x5614ffb51d08[Test#4], %56.1   !
BB163   <- [51]
  val?+           %163.0 = CastType           d     dn %51.1   <val?_>
  void                    Branch                   %51.4 -> BB167 (if true) | BB168 (if false)
BB164   <- [51]
  void                    Nop                !     
  val?            %164.1 = %51.1
  dr              %164.2 = Typecheck@0x5614ffb51d08[Type#22]
  goto BB52
BB165   <- [161]
  val?~- | miss   %165.0 = CastType           d     dn %161.1
  val?-           %165.1 = Force!<value>            %165.0,    <vec->
  val?+           %165.2 = Subassign1_1D      wed   %161.0, %165.1, 2L, elided
  void                    StVar              lW    dn, %165.2, e145.1
  val?+           %165.4 = %165.2
  goto BB54
BB166   <- [161]
  fs              %166.0 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  fs              %166.1 = FrameState         R     0x561502997c90+829: [%161.0], env=e145.1, next=%166.0
  void                    Deopt              !v    %166.1, Typecheck@0x5614ffb51d08[Type#25], %161.1   !
BB167   <- [163]
  val?+           %167.0 = CastType           d     dn %51.3   <val?_>
  val?+           %167.1 = Subassign2_1D      wed   %163.0, %167.0, 2L, elided
  void                    StVar              lW    dn, %167.1, e145.1
  val?+           %167.3 = %167.1
  goto BB54
BB168   <- [163]
  void                    Nop                !     
  val?            %168.1 = %51.3
  dr              %168.2 = Typecheck@0x5614ffb51d08[Type#23]
  goto BB52
BB52   <- [164, 168]
  val?^ | miss    %52.0 = Phi                      %164.1:BB164, %168.1:BB168
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %164.2:BB164, %168.2:BB168
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x5615058059c0+1002: [], env=e93.0
  fs              %52.5 = FrameState         R     0x561502997c90+720: [%51.1, %51.3], env=e145.1, next=%52.4
  void                    Deopt              !v    %52.5, %52.3, %52.1   !
BB54   <- [165, 167]
  val?+           %54.0 = Phi                      %165.4:BB165, %167.3:BB167
  val?+           %54.1 = %54.0
  val+            %54.2 = ChkMissing         e     %54.1   <vec->
  (cls|spec|blt)  %54.3 = LdFun              !v    dimnames<-, <0x5614f88a7358>, e145.1
  val?^ | miss    %54.4 = LdVar              eR    x, e145.1
  val?            %54.5 = Force!<value>      !v    %54.4, e145.1   <real+>
  val?            %54.6 = NamedCall          !v    %54.3(%54.5, value=%54.2) e145.1   <real+>
  void                    StVar              lW    x, %54.6, e145.1
  val             %54.8 = ChkMissing         e     %54.6
  val?            %54.9 = %54.6
  goto BB55
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    levels, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sparse, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cont, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, value[0x56150501b170]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  val?            %0.4  = Minus              !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    levels, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     requireNamespace, <0x561500c5f210>, e0.0
  val?            %0.2  = Call               !     %0.1("Matrix") e0.0   <lgl$->
  void                    Return             l     %0.2
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, value[0x56150501b170]_p10, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 1) e0.0   <real->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, <0x5614fa93a230>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, value[0x56150501b170]_p11, e0.0
  prom-           %0.3  = MkArg                    unboundValue, value[0x56150501b170]_p14, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real->
  void                    Return             l     %0.4
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, value[0x56150501b170]_p12, e0.0
  val?            %0.3  = Call               !     %0.1(1, %0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     numeric, <0x561504c7b730>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, value[0x56150501b170]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  void                    Visible            v     
  val?            %0.4  = Sub                !     %0.2, 1L, e0.0   <int$->
  void                    Return             l     %0.4
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    new, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    suppressPackageStartupMessages@Prom(1)0, e0.0
  void                    Return             l     %0.1
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3

│ value[0x56150501b170]                                                        │
└──────────────────────────────────────────────────────────────────────────────┘
