
┌──────────────────────────────────────────────────────────────────────────────┐
│ unlist[0x5614fe01bc80]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
unlist[0x5614fe01bc80]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, recursive(miss)=true, use.names(miss)=true, parent=R_BaseNamespace, context 1
  cls             %0.2  = MkCls                    unlist@127, e0.1
  cls             %0.3  = MkCls                    unlist>URapply@148, e0.1
  val?            %0.4  = Force!<lazy>       !v    %0.0, e0.1   <vec+>
  lgl$#-          %0.5  = IsType                   %0.4 isA val?+
  void                    Branch                   %0.5 -> BB9 (if true) | BB10 (if false)
BB9   <- [0]
  val?+           %9.0  = CastType           d     dn %0.4   <vec+>
  val?^ | miss    %9.1  = LdVar              eR    recursive, e0.1
  val?            %9.2  = Force!<lazy>       !v    %9.1, e0.1   <lgl$->
  val?            %9.3  = CallBuiltin        !v    islistfactor(%9.0, %9.2) e0.1
  lgl$#-          %9.4  = CheckTrueFalse     we    %9.3
  void                    Branch                   %9.4 -> BB4 (if true) | BB3 (if false)
BB10   <- [0]
  fs              %10.0 = FrameState         R     0x5614fa772fd0+9: [%0.4], env=e0.1
  void                    Deopt              !v    %10.0, Typecheck@0x5614f8e7e730[Type#0], %0.4   !
BB4   <- [9]
  val?^ | miss    %4.0  = LdVar              eR    recursive, e0.1
  val?            %4.1  = Force!             !v    %4.0, e0.1   <val?_>
  lgl$#-          %4.2  = CheckTrueFalse     we    %4.1
  void                    Branch                   %4.2 -> BB7 (if true) | BB5 (if false)
BB3   <- [9]
  val?^ | miss    %3.0  = LdVar              eR    x, e0.1
  val?            %3.1  = Force!<wrapped>    !v    %3.0, e0.1   <vec+>
  val?^ | miss    %3.2  = LdVar              eR    recursive, e0.1
  val?            %3.3  = Force!<wrapped>    !v    %3.2, e0.1   <lgl$->
  val?^ | miss    %3.4  = LdVar              eR    use.names, e0.1
  val?            %3.5  = Force!<lazy>       !v    %3.4, e0.1   <lgl$->
  val?            %3.6  = CallBuiltin        !     unlist(%3.1, %3.3, %3.5) e0.1
  void                    Return             l     %3.6
BB7   <- [4]
  void                    Nop                !     
  cls             %7.1  = %0.3
  goto BB6
BB5   <- [4]
  void                    Nop                !     
  cls             %5.1  = %0.2
  goto BB6
BB6   <- [5, 7]
  cls             %6.0  = Phi                      %5.1:BB5, %7.1:BB7
  cls             %6.1  = %6.0
  void                    StVar              lW    URapply, %6.1, e0.1
  (cls|spec|blt)  %6.3  = LdFun              !v    unique, e0.1
  fs              %6.4  = FrameState         R     0x5614fa772fd0+178: [%6.3], env=e0.1
  void                    Deopt              !v    %6.4, DeadCall@0x5614f8e7e730[Call#0], %6.3   !

│ unlist[0x5614fe01bc80]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
