
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x5614fd8a9230]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
FUN[0x5614fd8a9230]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     s=%0.0, parent=?, context 1
  val?            %0.2  = Force!<lazy>       !v    %0.0, e0.1   <(nil|other)>
  lgl$-           %0.3  = Is                       %0.2, NULL
  lgl$#-          %0.4  = CheckTrueFalse     e     %0.3
  void                    Branch                   %0.4 -> BB9 (if true) | BB3 (if false)
BB9   <- [0]
  val?^ | miss    %9.0  = LdVar              eR    s, e0.1
  void                    Visible            v     
  val?            %9.2  = Force!<wrapped>    !     %9.0, e0.1   <nil->
  val?            %9.3  = %9.2
  goto BB8
BB3   <- [0]
  val?^ | miss    %3.0  = LdVar              eR    paste, e0.1
  lgl$#-          %3.1  = Identical                %3.0, function(..., sep=" ", collapse=NULL, recycle0|...
  void                    Branch                   %3.1 -> BB11 (if true) | BB12 (if false)
BB8   <- [9, 15]
  val?            %8.0  = Phi                      %15.6:BB15, %9.3:BB9
  val?            %8.1  = %8.0
  void                    Return             l     %8.1
BB11   <- [3]
  prom-           %11.0 = MkArg                    unboundValue, FUN[0x5614fd8a9230]_p0, e0.1
  prom-           %11.1 = MkArg                    unboundValue, FUN[0x5614fd8a9230]_p1, e0.1
  prom-           %11.2 = MkArg                    unboundValue, FUN[0x5614fd8a9230]_p7, e0.1
  dots-           %11.3 = DotsList           l     %11.0, %11.1
  val?^           %11.4 = CastType                 up %11.2
  val?^ | miss    %11.5 = CastType                 up %11.0
  val?^ | miss    %11.6 = CastType                 up %11.1
  env             e11.7 = MkEnv              l     ...=%11.3, sep=%11.4, collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 0
  val?            %11.8 = Force!             !vL   %11.5, e11.7
  val?            %11.9 = Force!             !vL   %11.6, e11.7
  val+            %11.10 = CallSafeBuiltin    wed   list(%11.8, %11.9)    <vec->
  val?            %11.11 = Force!<lazy>       !vL   %11.4, e11.7   <str$->
  lgl$#-          %11.12 = IsType                   %11.11 isA val?-
  void                    Branch                   %11.12 -> BB13 (if true) | BB14 (if false)
BB12   <- [3]
  fs              %12.0 = FrameState         R     0x5614fe43f9d0+9: [%0.2], env=e0.1
  void                    Deopt              !v    %12.0, CallTarget@0x5615055bcf98[Call#0], %3.0   !
BB13   <- [11]
  val?-           %13.0 = CastType           d     dn %11.11   <str$->
  val+            %13.1 = CallSafeBuiltin    wed   paste(%11.10, %13.0, nil, false)    <str->
  val?^ | miss    %13.2 = LdVar              eR    rownames<-, e0.1
  lgl$#-          %13.3 = Identical                %13.2, function(x, value) <(rir::DispatchTable*)0x561|...
  void                    Branch                   %13.3 -> BB15 (if true) | BB16 (if false)
BB14   <- [11]
  fs              %14.0 = FrameState         R     0x5614fe43f9d0+99: [], env=e0.1
  fs              %14.1 = FrameState         R     0x5614fa9a9a70+78: [%11.10, %11.11, nil, false], env=e11.7, next=%14.0
  void                    Deopt              !v    %14.1, Typecheck@0x5614fa8849e0[Type#1], %11.11   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    s, e0.1
  val?            %15.1 = Force!<wrapped>    !v    %15.0, e0.1   <other>
  val?            %15.2 = StaticCall         !v    rownames<-[0x5614ff8b2f40](%15.1, %13.1) { 0 1n } e0.1   <other>
  void                    StVar              lW    s, %15.2, e0.1
  val             %15.4 = ChkMissing         e     %15.2
  void                    Visible            v     
  val?            %15.6 = %15.2
  goto BB8
BB16   <- [13]
  fs              %16.0 = FrameState         R     0x5614fe43f9d0+104: [%13.1], env=e0.1
  void                    Deopt              !v    %16.0, CallTarget@0x5615055bcf98[Call#5], %13.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nam, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %||%, <0x5614feadc220>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x5614fd8a9230]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, FUN[0x5614fd8a9230]_p4, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rownames, <0x561500ccf7e0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x5614fd8a9230]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     seq_len, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x5614fd8a9230]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nrow, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x5614fd8a9230]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sep, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3

│ FUN[0x5614fd8a9230]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
