
┌──────────────────────────────────────────────────────────────────────────────┐
│ asMethod[0x561500226050]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2               │
│ Properties:                                                                  │
├────── Final PIR Version
asMethod[0x561500226050]
BB0
  val?^           %0.0  = LdArg                    0
  void                    Visible            v     
  val?^ | miss    %0.2  = LdVar              eR    as, <env 0x5614fad267d8>
  lgl$#-          %0.3  = Identical                %0.2, function(object, Class, strict=TRUE, ext=possi|...
  void                    Branch                   %0.3 -> BB4 (if true) | BB5 (if false)
BB4   <- [0]
  env             e4.0  = MkEnv              l     from=%0.0, to(miss)="sparseMatrix", strict(miss)=true, parent=<env 0x5614fad267d8>, context 1
  prom-           %4.1  = MkArg                    unboundValue, asMethod[0x561500226050]_p2 (!refl), e4.0
  val?            %4.2  = Call               !     function(object, Class, strict=TRUE, ext=possi|...(%4.1, "CsparseMatrix") e4.0   <other>
  void                    Return             l     %4.2
BB5   <- [0]
  env             e5.0  = (MkEnv)            l     from=%0.0, to(miss)="sparseMatrix", strict(miss)=true, parent=<env 0x5614fad267d8>, context 1
  fs              %5.1  = FrameState         R     0x5614fe01cab0+0: [], env=e5.0
  void                    Deopt              !v    %5.1, CallTarget@0x5614fc7d9d70[Call#0], %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3

│ asMethod[0x561500226050]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
