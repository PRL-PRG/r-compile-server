
┌──────────────────────────────────────────────────────────────────────────────┐
│ mode[0x5615053ad700]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
mode[0x5615053ad700]
BB0
  val?~+          %0.0  = LdArg                    0
  val+            %0.1  = Force!<lazy>             %0.0,    <val?+>
  lgl$#-          %0.2  = CallSafeBuiltin    wed   is.expression(%0.1)    <lgl$->
  env             e0.3  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.2 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Visible            v     
  str$#-          %2.1  = "expression"
  goto BB3
BB4   <- [0]
  lgl$#-          %4.0  = CallSafeBuiltin    wed   is.call(%0.1)    <lgl$->
  void                    Branch                   %4.0 -> BB5 (if true) | BB18 (if false)
BB3   <- [2, 20, 62]
  str$-           %3.0  = Phi                      %20.2:BB20, %62.1:BB62, %2.1:BB2
  str$-           %3.1  = %3.0
  void                    Return             l     %3.1
BB5   <- [4]
  prom-           %5.0  = MkArg                    unboundValue, mode[0x5615053ad700]_p0, e0.3
  ct              %5.1  = PushContext        lCL   %5.0, deparse([[(x, 1L)), function(expr, width.cutoff=60L, backtick=%in%|..., e0.3
  val?^           %5.2  = CastType                 up %5.0
  env             e5.3  = MkEnv              l     expr=%5.2, width.cutoff(miss)=60L, backtick(miss)=missingArg, control(miss)=missingArg, nlines(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %5.4  = MkArg                    unboundValue, mode[0x5615053ad700]_p1, e5.3
  val?^ | miss    %5.5  = CastType                 up %5.4
  void                    StArg              lW    backtick, %5.5, e5.3
  prom-           %5.7  = MkArg                    unboundValue, mode[0x5615053ad700]_p5, e5.3
  val?^ | miss    %5.8  = CastType                 up %5.7
  void                    StArg              lW    control, %5.8, e5.3
  prom-           %5.10 = MkArg                    unboundValue, mode[0x5615053ad700]_p6 (!refl), 
  val?^ | miss    %5.11 = CastType                 up %5.10
  void                    StArg              lW    nlines, %5.11, e5.3
  val?            %5.13 = Force!<lazy>       !vL   %5.2, e5.3   <(sym|code)->
  val?            %5.14 = Force!<lazy>       !v    %5.5, e5.3   <lgl$->
  val?^ | miss    %5.15 = LdVar              eR    .deparseOpts, e5.3
  lgl$#-          %5.16 = Identical                %5.15, function(control) <(rir::DispatchTable*)0x5614|...
  void                    Branch                   %5.16 -> BB32 (if true) | BB33 (if false)
BB18   <- [4]
  lgl$#-          %18.0 = CallSafeBuiltin    wed   is.symbol(%0.1)    <lgl$->
  void                    Branch                   %18.0 -> BB19 (if true) | BB21 (if false)
BB32   <- [5]
  val?^ | miss    %32.0 = LdVar              eR    control, e5.3
  val?            %32.1 = Force!<lazy>       !v    %32.0, e5.3   <str->
  prom-           %32.2 = MkArg                    %32.1, mode[0x5615053ad700]_p7 (!refl), 
  val?            %32.3 = StaticCall         !v    .deparseOpts[0x5614f929a5b0](%32.2) e5.3   <real$->
  lgl$#-          %32.4 = IsType                   %32.3 isA real$-
  void                    Branch                   %32.4 -> BB34 (if true) | BB35 (if false)
BB33   <- [5]
  fs              %33.0 = FrameState         R     0x5614fd241ad0+253: [], env=e0.3
  fs              %33.1 = FrameState         R     0x561504f7aa10+37: [%5.13, 60L, %5.14], env=e5.3, next=%33.0
  void                    Deopt              !v    %33.1, CallTarget@0x561505122980[Call#4], %5.15   !
BB19   <- [18]
  void                    Visible            v     
  str$#-          %19.1 = "name"
  goto BB20
BB21   <- [18]
  str$-           %21.0 = CallSafeBuiltin    wed   typeof(%0.1)    <str$->
  int$-           %21.1 = Length                   %21.0
  void                    StVar              lW    tx, %21.0, e0.3
  lgl$-           %21.3 = Eq                 d     %21.1, 1L, elided   <true>
  lgl$#-          %21.4 = Identical                %21.3, true
  void                    Branch                   %21.4 -> BB38 (if true) | BB39 (if false)
BB34   <- [32]
  real$-          %34.0 = CastType           d     dn %32.3
  val?^ | miss    %34.1 = LdVar              eR    nlines, e5.3
  val?            %34.2 = Force!<lazy>       !v    %34.1, e5.3   <int$->
  val?            %34.3 = CallBuiltin        !v    deparse(%5.13, 60L, %5.14, %34.0, %34.2) e5.3
  val?            %34.4 = PopContext         C     %34.3, %5.1   <str$->
  lgl$#-          %34.5 = IsType                   %34.4 isA val+   <true>
  lgl$#-          %34.6 = IsType                   %34.4 isA val?-
  void                    Branch                   %34.5 -> BB36 (if true) | BB37 (if false)
BB35   <- [32]
  fs              %35.0 = FrameState         R     0x5614fd241ad0+253: [], env=e0.3
  fs              %35.1 = FrameState         R     0x561504f7aa10+74: [%5.13, 60L, %5.14, %32.3], env=e5.3, next=%35.0
  void                    Deopt              !v    %35.1, Typecheck@0x561505122980[Type#9], %32.3   !
BB20   <- [19, 27]
  str$-           %20.0 = Phi                      %27.2:BB27, %19.1:BB19
  str$-           %20.1 = %20.0
  str$-           %20.2 = %20.1
  goto BB3
BB38   <- [21]
  lgl$-           %38.0 = CallSafeBuiltin    wed   is.na(%21.0) 
  lgl$#-          %38.1 = CheckTrueFalse     e     %38.0   <false>
  void                    Branch                   %38.1 -> BB43 (if true) | BB42 (if false)
BB39   <- [21]
  fs              %39.0 = FrameState         R     0x5614fd241ad0+708: [%21.0], env=e0.3
  void                    Deopt              !v    %39.0, DeadBranchReached@0x561504e641e8[Test#14], %21.4
BB36   <- [34]
  void                    Branch                   %34.6 -> BB40 (if true) | BB41 (if false)
BB37   <- [34]
  void                    Nop                !     
  lgl$#-          %37.1 = %34.5
  dr              %37.2 = DeadBranchReached@0x561504e641e8[Test#3]
  goto BB10
BB43   <- [38]
  void                    Nop                !     
  lgl$#-          %43.1 = %38.1
  dr              %43.2 = DeadBranchReached@0x561504e641e8[Test#23]
  goto BB23
BB42   <- [38]
  lgl$-           %42.0 = Eq                 d     %21.0, double, elided
  lgl$#-          %42.1 = CheckTrueFalse     e     %42.0
  void                    Branch                   %42.1 -> BB30 (if true) | BB25 (if false)
BB40   <- [36]
  val?-           %40.0 = CastType           d     dn %34.4   <str$->
  val?            %40.1 = Extract1_1D        wed   %40.0, 1L, elided   <str$->
  lgl$-           %40.2 = Is                       %40.1, logical
  lgl$-           %40.3 = Is                       %40.1, integer
  lgl$-           %40.4 = Is                       %40.1, double
  lgl$-           %40.5 = Is                       %40.1, complex
  lgl$-           %40.6 = Is                       %40.1, character   <true>
  lgl$-           %40.7 = Is                       %40.1, raw
  lgl$-           %40.8 = Is                       %40.1, list
  lgl$-           %40.9 = Is                       %40.1, expression
  lgl$-           %40.10 = LOr                      %40.9, %40.8
  lgl$-           %40.11 = LOr                      %40.10, %40.7
  lgl$-           %40.12 = LOr                      %40.11, %40.6
  lgl$-           %40.13 = LOr                      %40.12, %40.5
  lgl$-           %40.14 = LOr                      %40.13, %40.4
  lgl$-           %40.15 = LOr                      %40.14, %40.3
  lgl$-           %40.16 = LOr                      %40.15, %40.2   <true>
  lgl$#-          %40.17 = Identical                %40.16, true
  int$-           %40.18 = Length                   %40.1
  lgl$-           %40.19 = Is                       %40.1, Factor   <false>
  lgl$#-          %40.20 = Identical                %40.19, false
  lgl$#-          %40.21 = Identical                %40.6, true
  lgl$#-          %40.22 = IsType                   %40.1 isA val?-
  void                    Branch                   %40.17 -> BB48 (if true) | BB49 (if false)
BB41   <- [36]
  void                    Nop                !     
  val?            %41.1 = %34.4
  dr              %41.2 = Typecheck@0x561504e641e8[Type#8]
  goto BB10
BB10   <- [37, 41]
  val?^ | miss    %10.0 = Phi                      %37.1:BB37, %41.1:BB41
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %37.2:BB37, %41.2:BB41
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x5614fd241ad0+253: [%34.4], env=e0.3
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB23   <- [43, 45, 47, 51]
  val?^ | miss    %23.0 = Phi                      %43.1:BB43, %45.1:BB45, %47.1:BB47, %51.1:BB51
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %43.2:BB43, %45.2:BB45, %47.2:BB47, %51.2:BB51
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x5614fd241ad0+965: [%21.0, %38.0], env=e0.3
  void                    Deopt              !v    %23.4, %23.3, %23.1
BB30   <- [42]
  void                    Nop                !     
  goto BB29
BB25   <- [42]
  lgl$-           %25.0 = Eq                 d     %21.0, integer, elided
  lgl$#-          %25.1 = CheckTrueFalse     e     %25.0
  void                    Branch                   %25.1 -> BB28 (if true) | BB26 (if false)
BB48   <- [40]
  lgl$-           %48.0 = Eq                 d     %40.18, 1L, elided   <true>
  lgl$#-          %48.1 = Identical                %48.0, true
  void                    Branch                   %48.1 -> BB52 (if true) | BB53 (if false)
BB49   <- [40]
  void                    Nop                !     
  lgl$#-          %49.1 = %40.17
  dr              %49.2 = DeadBranchReached@0x561504e641e8[Test#4]
  goto BB12
BB29   <- [30, 28]
  void                    Visible            v     
  str$#-          %29.1 = "numeric"
  goto BB27
BB28   <- [25]
  void                    Nop                !     
  goto BB29
BB26   <- [25]
  lgl$-           %26.0 = Eq                 d     %21.0, closure, elided
  lgl$#-          %26.1 = CheckTrueFalse     e     %26.0   <false>
  void                    Branch                   %26.1 -> BB45 (if true) | BB44 (if false)
BB52   <- [48]
  void                    Branch                   %40.20 -> BB54 (if true) | BB55 (if false)
BB53   <- [48]
  void                    Nop                !     
  lgl$#-          %53.1 = %48.1
  dr              %53.2 = DeadBranchReached@0x561504e641e8[Test#5]
  goto BB12
BB12   <- [49, 53, 55, 57, 59]
  val?^ | miss    %12.0 = Phi                      %49.1:BB49, %53.1:BB53, %55.1:BB55, %57.1:BB57, %59.1:BB59
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %49.2:BB49, %53.2:BB53, %55.2:BB55, %57.2:BB57, %59.2:BB59
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x5614fd241ad0+296: [%40.1], env=e0.3
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB27   <- [29, 50]
  str$-           %27.0 = Phi                      %50.1:BB50, %29.1:BB29
  str$-           %27.1 = %27.0
  str$-           %27.2 = %27.1
  goto BB20
BB45   <- [26]
  void                    Nop                !     
  lgl$#-          %45.1 = %26.1
  dr              %45.2 = DeadBranchReached@0x561504e641e8[Test#26]
  goto BB23
BB44   <- [26]
  lgl$-           %44.0 = Eq                 d     %21.0, builtin, elided
  lgl$#-          %44.1 = CheckTrueFalse     e     %44.0   <false>
  void                    Branch                   %44.1 -> BB47 (if true) | BB46 (if false)
BB54   <- [52]
  void                    Branch                   %40.21 -> BB56 (if true) | BB57 (if false)
BB55   <- [52]
  void                    Nop                !     
  lgl$#-          %55.1 = %40.20
  dr              %55.2 = DeadBranchReached@0x561504e641e8[Test#6]
  goto BB12
BB47   <- [44]
  void                    Nop                !     
  lgl$#-          %47.1 = %44.1
  dr              %47.2 = DeadBranchReached@0x561504e641e8[Test#27]
  goto BB23
BB46   <- [44]
  lgl$-           %46.0 = Eq                 d     %21.0, special, elided
  lgl$#-          %46.1 = CheckTrueFalse     e     %46.0   <false>
  void                    Branch                   %46.1 -> BB51 (if true) | BB50 (if false)
BB56   <- [54]
  void                    Branch                   %40.22 -> BB58 (if true) | BB59 (if false)
BB57   <- [54]
  void                    Nop                !     
  lgl$#-          %57.1 = %40.21
  dr              %57.2 = DeadBranchReached@0x561504e641e8[Test#7]
  goto BB12
BB51   <- [46]
  void                    Nop                !     
  lgl$#-          %51.1 = %46.1
  dr              %51.2 = DeadBranchReached@0x561504e641e8[Test#28]
  goto BB23
BB50   <- [46]
  void                    Visible            v     
  str$-           %50.1 = %21.0
  goto BB27
BB58   <- [56]
  val?-           %58.0 = CastType           d     dn %40.1   <str$->
  lgl-            %58.1 = CallSafeBuiltin    wed   is.na(%58.0) 
  lgl$#-          %58.2 = CheckTrueFalse     we    %58.1   <false>
  void                    Branch                   %58.2 -> BB61 (if true) | BB60 (if false)
BB59   <- [56]
  void                    Nop                !     
  val?            %59.1 = %40.1
  dr              %59.2 = Typecheck@0x561504e641e8[Type#9]
  goto BB12
BB61   <- [58]
  fs              %61.0 = FrameState         R     0x5614fd241ad0+488: [%58.0, %58.2], env=e0.3
  void                    Deopt              !v    %61.0, DeadBranchReached@0x561504e641e8[Test#10], %58.2   !
BB60   <- [58]
  lgl-            %60.0 = Eq                 wed   %58.0, (, elided
  lgl$#-          %60.1 = CheckTrueFalse     we    %60.0   <false>
  void                    Branch                   %60.1 -> BB63 (if true) | BB62 (if false)
BB63   <- [60]
  fs              %63.0 = FrameState         R     0x5614fd241ad0+512: [%58.0, %60.1], env=e0.3
  void                    Deopt              !v    %63.0, DeadBranchReached@0x561504e641e8[Test#11], %60.1   !
BB62   <- [60]
  void                    Visible            v     
  str$#-          %62.1 = "call"
  goto BB3
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %in%, <0x5614f8bbdc40>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mode[0x5615053ad700]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, mode[0x5615053ad700]_p4, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <lgl$->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mode, <0x5614f998b140>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mode[0x5615053ad700]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  val?            %0.2  = Call               !     %0.1("call", "expression", "(", "function") e0.0   <str->
  void                    Return             l     %0.2
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x5614f88a7940>, e0.0
  val?            %0.2  = Call               !     %0.1("keepNA", "keepInteger", "niceNames", "showAttributes") e0.0   <str->
  void                    Return             l     %0.2
Prom 6:
BB0
  void                    Visible            v     
  void                    Return             l     -1L
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    control, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3

│ mode[0x5615053ad700]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
