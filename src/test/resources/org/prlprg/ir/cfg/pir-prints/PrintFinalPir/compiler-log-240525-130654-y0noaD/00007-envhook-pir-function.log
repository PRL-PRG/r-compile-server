
┌──────────────────────────────────────────────────────────────────────────────┐
│ envhook[0x5649855b6d20]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── Final PIR Version
envhook[0x5649855b6d20]
BB0
  val?~+          %0.0  = LdArg                    0
  val+            %0.1  = Force<wrapped>           %0.0,    <str$->
  val?^ | miss    %0.2  = LdVar              eR    existsInFrame, ?
  (cls|spec|blt)  %0.3  = CastType                 dn %0.2
  val+            %0.4  = CallSafeBuiltin          bodyCode(%0.3) 
  lgl$#-          %0.5  = Identical                %0.4, <(rir::DispatchTable*)0x56498505e380>
  void                    Branch                   %0.5 -> BB63 (if true) | BB64 (if false)
BB63   <- [0]
  val?            %63.0 = Force!             d     %0.2, 
  env             e63.1 = MkEnv              l     n=%0.0, parent=?, context 1
  prom-           %63.2 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p1, e63.1
  (cls|spec|blt)  %63.3 = ChkFunction        e     %63.0
  val?            %63.4 = StaticCall         !v    existsInFrame[0x5649854d8e80](%0.1, %63.2) from %63.3 e63.1   <lgl$->
  lgl$#-          %63.5 = IsType                   %63.4 isA lgl$-
  void                    Branch                   %63.5 -> BB65 (if true) | BB66 (if false)
BB64   <- [0]
  env             e64.0 = (MkEnv)            l     n=%0.0, parent=?, context 1
  fs              %64.1 = FrameState         R     0x564985064c70+0: [], env=e64.0
  void                    Deopt              !v    %64.1, CallTarget@0x564984305688[Call#0], %0.4
BB65   <- [63]
  lgl$-           %65.0 = CastType           d     dn %63.4
  lgl$#-          %65.1 = CheckTrueFalse     e     %65.0
  void                    Branch                   %65.1 -> BB59 (if true) | BB7 (if false)
BB66   <- [63]
  void                    Nop                !     
  val?            %66.1 = %63.4
  dr              %66.2 = Typecheck@0x564984305688[Type#2]
  goto BB3
BB59   <- [65]
  val?^ | miss    %59.0 = LdVar              eR    envenv, e63.1
  lgl$#-          %59.1 = IsType                   %59.0 isA val?~- | miss
  void                    Branch                   %59.1 -> BB67 (if true) | BB68 (if false)
BB7   <- [65]
  val?^ | miss    %7.0  = LdVar              eR    mkenv, e63.1
  (cls|spec|blt)  %7.1  = CastType                 dn %7.0
  val+            %7.2  = CallSafeBuiltin          bodyCode(%7.1) 
  lgl$#-          %7.3  = Identical                %7.2, <(rir::DispatchTable*)0x56498505e9d0>
  void                    Branch                   %7.3 -> BB71 (if true) | BB72 (if false)
BB3   <- [66, 68, 70, 72]
  val?^ | miss    %3.0  = Phi                      %66.1:BB66, %68.1:BB68, %70.1:BB70, %72.1:BB72
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %66.2:BB66, %68.2:BB68, %70.2:BB70, %72.2:BB72
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x564985064c70+37: [%63.4], env=e63.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB67   <- [59]
  val?~- | miss   %67.0 = CastType           d     dn %59.0
  val?-           %67.1 = Force!<value>            %67.0,    <env->
  lgl$#-          %67.2 = IsType                   %67.1 isA val+   <true>
  void                    Branch                   %67.2 -> BB69 (if true) | BB70 (if false)
BB68   <- [59]
  void                    Nop                !     
  val?^ | miss    %68.1 = %59.0
  dr              %68.2 = Typecheck@0x564984305688[Type#74]
  goto BB3
BB71   <- [7]
  val?            %71.0 = Force!             d     %7.0, 
  (cls|spec|blt)  %71.1 = ChkFunction        e     %71.0
  env             e71.2 = CallSafeBuiltin          environment(%71.1) 
  ct              %71.3 = PushContext        lCL   mkenv(), %71.1, e63.1
  val?^ | miss    %71.4 = LdVar              eR    baseenv, e71.2
  lgl$#-          %71.5 = Identical                <blt baseenv>, %71.4   <true>
  void                    Branch                   %71.5 -> BB75 (if true) | BB76 (if false)
BB72   <- [7]
  void                    Nop                !     
  val+            %72.1 = %7.2
  dr              %72.2 = CallTarget@0x564984305688[Call#1]
  goto BB3
BB69   <- [67]
  val?^ | miss    %69.0 = LdVar              eR    n, e63.1
  val?            %69.1 = Force!<wrapped>    !v    %69.0, e63.1   <str$->
  lgl$#-          %69.2 = IsType                   %69.1 isA val?-
  void                    Branch                   %69.2 -> BB73 (if true) | BB74 (if false)
BB70   <- [67]
  void                    Nop                !     
  lgl$#-          %70.1 = %67.2
  dr              %70.2 = DeadBranchReached@0x564984305688[Test#4]
  goto BB3
BB75   <- [71]
  env             e75.0 = (MkEnv)            l     parent=e71.2, context 1
  val?            %75.1 = CallBuiltin        !vL   baseenv() e75.0   <env->
  lgl$#-          %75.2 = IsType                   %75.1 isA val?-
  lgl$#-          %75.3 = IsEnvStub          R     , e75.0
  void                    Branch                   %75.3 -> BB77 (if true) | BB78 (if false)
BB76   <- [71]
  void                    DropContext        C     
  fs              %76.1 = FrameState         R     0x564985064c70+43: [%65.1], env=e63.1
  void                    Deopt              !v    %76.1, DeadBranchReached@0x5649843053c8[Test#0], %71.5   !
BB73   <- [69]
  val?-           %73.0 = CastType           d     dn %69.1   <str$->
  val?            %73.1 = Extract2_1D        wed   %67.1, %73.0, elided   <env>
  void                    Visible            v     
  val?            %73.3 = %73.1
  goto BB49
BB74   <- [69]
  fs              %74.0 = FrameState         R     0x564985064c70+1582: [%67.1, %69.1], env=e63.1
  void                    Deopt              !v    %74.0, Typecheck@0x564984305688[Type#76], %69.1   !
BB77   <- [75]
  void                    Branch                   %75.2 -> BB79 (if true) | BB80 (if false)
BB78   <- [75]
  void                    Nop                !     
  env             e78.1 = e75.0
  dr              %78.2 = EnvStubMaterialized@0x5649843053c8[Call#unknown]
  goto BB8
BB49   <- [48, 73]
  val?            %49.0 = Phi                      %48.3:BB48, %73.3:BB73
  val?            %49.1 = %49.0
  void                    Return             l     %49.1
BB79   <- [77]
  val?-           %79.0 = CastType           d     dn %75.1   <env->
  val+            %79.1 = CallSafeBuiltin    wed   new.env(true, %79.0, 29L) 
  val?            %79.2 = PopContext         C     %79.1, %71.3   <env->
  void                    StVar              lW    e, %79.2, e63.1
  val             %79.4 = ChkMissing         e     %79.2
  val?^ | miss    %79.5 = LdVar              eR    envenv !upd, e63.1
  lgl$#-          %79.6 = IsType                   %79.5 isA val?~- | miss
  void                    Branch                   %79.6 -> BB81 (if true) | BB82 (if false)
BB80   <- [77]
  void                    Nop                !     
  val?            %80.1 = %75.1
  dr              %80.2 = Typecheck@0x5649843053c8[Type#0]
  goto BB8
BB8   <- [78, 80]
  val?^ | miss    %8.0  = Phi                      e78.1:BB78, %80.1:BB80
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %78.2:BB78, %80.2:BB80
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x564985064c70+75: [], env=e63.1
  fs              %8.5  = FrameState         R     0x56498505e880+78: [true, %75.1], env=e75.0, next=%8.4
  void                    Deopt              !v    %8.5, %8.3, %8.1   !
BB81   <- [79]
  val?~- | miss   %81.0 = CastType           d     dn %79.5
  val?-           %81.1 = Force!<value>            %81.0,    <env->
  val?^ | miss    %81.2 = LdVar              eR    n, e63.1
  val?            %81.3 = Force!<wrapped>    !v    %81.2, e63.1   <str$->
  lgl$#-          %81.4 = IsType                   %81.3 isA val?-
  lgl$#-          %81.5 = IsType                   %79.2 isA val?-
  void                    Branch                   %81.5 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x564985064c70+89: [], env=e63.1
  void                    Deopt              !v    %82.0, Typecheck@0x564984305688[Type#5], %79.5   !
BB83   <- [81]
  val?-           %83.0 = CastType           d     dn %79.2   <env->
  void                    Branch                   %81.4 -> BB85 (if true) | BB86 (if false)
BB84   <- [81]
  void                    Nop                !     
  val?            %84.1 = %79.2
  dr              %84.2 = Typecheck@0x564984305688[Type#3]
  goto BB12
BB85   <- [83]
  val?-           %85.0 = CastType           d     dn %81.3   <str$->
  val?+           %85.1 = Subassign2_1D      wed   %83.0, %81.1, %85.0, elided
  void                    StVar              lW    envenv, %85.1, e63.1
  val?^ | miss    %85.3 = LdVar              eR    env, e63.1
  lgl$#-          %85.4 = IsType                   %85.3 isA val?~- | miss
  void                    Branch                   %85.4 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  void                    Nop                !     
  val?            %86.1 = %81.3
  dr              %86.2 = Typecheck@0x564984305688[Type#6]
  goto BB12
BB12   <- [84, 86]
  val?^ | miss    %12.0 = Phi                      %84.1:BB84, %86.1:BB86
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %84.2:BB84, %86.2:BB86
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x564985064c70+126: [%79.2, %81.1, %81.3], env=e63.1
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB87   <- [85]
  val?~- | miss   %87.0 = CastType           d     dn %85.3
  val?-           %87.1 = Force!<value>            %87.0,    <env->
  lgl$#-          %87.2 = IsType                   %87.1 isA val+   <true>
  void                    Branch                   %87.2 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  void                    Nop                !     
  val?^ | miss    %88.1 = %85.3
  dr              %88.2 = Typecheck@0x564984305688[Type#7]
  goto BB14
BB89   <- [87]
  val?^ | miss    %89.0 = LdVar              eR    n, e63.1
  val?            %89.1 = Force!<wrapped>    !v    %89.0, e63.1   <str$->
  lgl$#-          %89.2 = IsType                   %89.1 isA val?-
  void                    Branch                   %89.2 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  void                    Nop                !     
  lgl$#-          %90.1 = %87.2
  dr              %90.2 = DeadBranchReached@0x564984305688[Test#0]
  goto BB14
BB14   <- [88, 90]
  val?^ | miss    %14.0 = Phi                      %88.1:BB88, %90.1:BB90
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %88.2:BB88, %90.2:BB90
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x564985064c70+141: [], env=e63.1
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB91   <- [89]
  val?-           %91.0 = CastType           d     dn %89.1   <str$->
  val?            %91.1 = Extract2_1D        wed   %87.1, %91.0, elided   <int->
  lgl$-           %91.2 = Is                       %91.1, list
  void                    StVar              lW    key, %91.1, e63.1
  val             %91.4 = ChkMissing         e     %91.1
  lgl$#-          %91.5 = CheckTrueFalse     e     %91.2
  void                    Branch                   %91.5 -> BB58 (if true) | BB18 (if false)
BB92   <- [89]
  fs              %92.0 = FrameState         R     0x564985064c70+195: [%87.1, %89.1], env=e63.1
  void                    Deopt              !v    %92.0, Typecheck@0x564984305688[Type#9], %89.1   !
BB58   <- [91]
  (cls|spec|blt)  %58.0 = LdFun              !v    $, e63.1
  fs              %58.1 = FrameState         R     0x564985064c70+265: [%58.0], env=e63.1
  void                    Deopt              !v    %58.1, DeadCall@0x564984305688[Call#2], %58.0   !
BB18   <- [91]
  void                    StVar              lW    ekey, %91.1, e63.1
  val?^ | miss    %18.1 = LdVar              eR    lazyLoadDBfetch, e63.1
  lgl$#-          %18.2 = Identical                <blt lazyLoadDBfetch>, %18.1   <true>
  void                    Branch                   %18.2 -> BB93 (if true) | BB94 (if false)
BB93   <- [18]
  val?^ | miss    %93.0 = LdVar              eR    datafile, e63.1
  lgl$#-          %93.1 = IsType                   %93.0 isA val?~- | miss
  void                    Branch                   %93.1 -> BB95 (if true) | BB96 (if false)
BB94   <- [18]
  void                    Nop                !     
  lgl$#-          %94.1 = %18.2
  dr              %94.2 = DeadBranchReached@0x564984305688[Test#1]
  goto BB19
BB95   <- [93]
  val?~- | miss   %95.0 = CastType           d     dn %93.0
  val?-           %95.1 = Force!<value>            %95.0,    <str$->
  val?^ | miss    %95.2 = LdVar              eR    compressed, e63.1
  lgl$#-          %95.3 = IsType                   %95.2 isA lgl$-
  void                    Branch                   %95.3 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  void                    Nop                !     
  val?^ | miss    %96.1 = %93.0
  dr              %96.2 = Typecheck@0x564984305688[Type#21]
  goto BB19
BB19   <- [94, 96, 98, 100]
  val?^ | miss    %19.0 = Phi                      %94.1:BB94, %96.1:BB96, %98.1:BB98, %100.1:BB100
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %94.2:BB94, %96.2:BB96, %98.2:BB98, %100.2:BB100
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x564985064c70+311: [], env=e63.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB97   <- [95]
  lgl$-           %97.0 = CastType           d     dn %95.2
  val?^ | miss    %97.1 = LdVar              eR    envhook, e63.1
  lgl$#-          %97.2 = IsType                   %97.1 isA val?~- | miss
  void                    Branch                   %97.2 -> BB99 (if true) | BB100 (if false)
BB98   <- [95]
  void                    Nop                !     
  val?^ | miss    %98.1 = %95.2
  dr              %98.2 = Typecheck@0x564984305688[Type#22]
  goto BB19
BB99   <- [97]
  val?~- | miss   %99.0 = CastType           d     dn %97.1
  val?-           %99.1 = Force!<value>            %99.0,    <cls->
  val?            %99.2 = CallBuiltin        !v    lazyLoadDBfetch(%91.1, %95.1, %97.0, %99.1) e63.1   <vec+>
  void                    StVar              lW    data, %99.2, e63.1
  (cls|spec|blt)  %99.4 = LdFun              !v    $, <0x564982e85c10>, e63.1
  prom-           %99.5 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p2, e63.1
  prom-           %99.6 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p3, e63.1
  val?            %99.7 = Call               !v    %99.4(%99.5, %99.6) e63.1   <env->
  lgl$-           %99.8 = Is                       %99.7, NULL
  lgl$-           %99.9 = Not                d     %99.8, elided
  lgl$#-          %99.10 = CheckTrueFalse     e     %99.9
  void                    Branch                   %99.10 -> BB57 (if true) | BB21 (if false)
BB100   <- [97]
  void                    Nop                !     
  val?^ | miss    %100.1 = %97.1
  dr              %100.2 = Typecheck@0x564984305688[Type#23]
  goto BB19
BB57   <- [99]
  (cls|spec|blt)  %57.0 = LdFun              !v    $, <0x564982e85c10>, e63.1
  prom-           %57.1 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p22, e63.1
  prom-           %57.2 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p23, e63.1
  val?            %57.3 = Call               !v    %57.0(%57.1, %57.2) e63.1   <env->
  val?            %57.4 = %57.3
  goto BB24
BB21   <- [99]
  val?^ | miss    %21.0 = LdVar              eR    emptyenv, e63.1
  lgl$#-          %21.1 = Identical                <blt emptyenv>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB24   <- [57, 23]
  val?            %24.0 = Phi                      %23.1:BB23, %57.4:BB57
  val?            %24.1 = %24.0
  val?^ | miss    %24.2 = LdVar              eR    parent.env<-, e63.1
  (cls|spec|blt)  %24.3 = CastType                 dn %24.2
  val+            %24.4 = CallSafeBuiltin          bodyCode(%24.3) 
  lgl$#-          %24.5 = Identical                %24.4, <(rir::DispatchTable*)0x56498505e160>
  void                    Branch                   %24.5 -> BB101 (if true) | BB102 (if false)
BB23   <- [21]
  val?            %23.0 = CallBuiltin        !v    emptyenv() e63.1   <val?_>
  val?            %23.1 = %23.0
  goto BB24
BB22   <- [21]
  (cls|spec|blt)  %22.0 = LdFun              !v    emptyenv, e63.1
  fs              %22.1 = FrameState         R     0x564985064c70+555: [%22.0], env=e63.1
  void                    Deopt              !v    %22.1, DeadCall@0x564984305688[Call#5], %22.0   !
BB101   <- [24]
  val?            %101.0 = Force!             d     %24.2, 
  val?^ | miss    %101.1 = LdVar              eR    e, e63.1
  lgl$#-          %101.2 = IsType                   %101.1 isA val?~- | miss
  void                    Branch                   %101.2 -> BB103 (if true) | BB104 (if false)
BB102   <- [24]
  void                    Nop                !     
  val+            %102.1 = %24.4
  dr              %102.2 = CallTarget@0x564984305688[Call#7]
  goto BB25
BB103   <- [101]
  val?~- | miss   %103.0 = CastType           d     dn %101.1
  val?-           %103.1 = Force!<value>            %103.0,    <env->
  (cls|spec|blt)  %103.2 = ChkFunction        e     %101.0
  val?            %103.3 = StaticCall         !v    parent.env<-[0x56498538cab0](%103.1, %24.1) from %103.2 { 0 1n } e63.1
  void                    StVar              lW    e, %103.3, e63.1
  val?^ | miss    %103.5 = LdVar              eR    list2env, e63.1
  (cls|spec|blt)  %103.6 = CastType                 dn %103.5
  val+            %103.7 = CallSafeBuiltin          bodyCode(%103.6) 
  lgl$#-          %103.8 = Identical                %103.7, <(rir::DispatchTable*)0x56498505e590>
  void                    Branch                   %103.8 -> BB105 (if true) | BB106 (if false)
BB104   <- [101]
  void                    Nop                !     
  val?^ | miss    %104.1 = %101.1
  dr              %104.2 = Typecheck@0x564984305688[Type#32]
  goto BB25
BB25   <- [102, 104]
  val?^ | miss    %25.0 = Phi                      %102.1:BB102, %104.1:BB104
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %102.2:BB102, %104.2:BB104
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x564985064c70+651: [%24.1], env=e63.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB105   <- [103]
  val?            %105.0 = Force!             d     %103.5, 
  prom-           %105.1 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p5, e63.1
  prom-           %105.2 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p8 (!refl), e63.1
  (cls|spec|blt)  %105.3 = ChkFunction        e     %105.0
  env             e105.4 = CallSafeBuiltin          environment(%105.3) 
  ct              %105.5 = PushContext        lCL   %105.1, %105.2, list2env($(data, bindings), e), %105.3, e63.1
  val?^           %105.6 = CastType                 up %105.2
  val?^           %105.7 = CastType                 up %105.1
  env             e105.8 = MkEnv              l     x=%105.7, envir=%105.6, parent=e105.4, context 1
  val?            %105.9 = Force!<lazy>       !vL   %105.7, e105.8   <vec+>
  val?            %105.10 = Force!<lazy>       !vrL  %105.6, e105.8   <env->
  val?            %105.11 = CallBuiltin        !v    list2env(%105.9, %105.10) e105.8
  val?            %105.12 = PopContext         C     %105.11, %105.5
  (cls|spec|blt)  %105.13 = LdFun              !v    $, <0x564982e85c10>, e63.1
  prom-           %105.14 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p9, e63.1
  prom-           %105.15 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p10, e63.1
  val?            %105.16 = Call               !v    %105.13(%105.14, %105.15) e63.1   <vec$+>
  lgl$-           %105.17 = Is                       %105.16, NULL
  lgl$-           %105.18 = Not                d     %105.17, elided
  lgl$#-          %105.19 = CheckTrueFalse     e     %105.18
  void                    Branch                   %105.19 -> BB54 (if true) | BB29 (if false)
BB106   <- [103]
  fs              %106.0 = FrameState         R     0x564985064c70+719: [], env=e63.1
  void                    Deopt              !v    %106.0, CallTarget@0x564984305688[Call#8], %103.7   !
BB54   <- [105]
  (cls|spec|blt)  %54.0 = LdFun              !v    $, <0x564982e85c10>, e63.1
  prom-           %54.1 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p19, e63.1
  prom-           %54.2 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p20, e63.1
  val?            %54.3 = Call               !v    %54.0(%54.1, %54.2) e63.1   <vec$+>
  (cls|spec|blt)  %54.4 = LdFun              !v    attributes<-, <0x564982e86128>, e63.1
  val?^ | miss    %54.5 = LdVar              eR    e, e63.1
  lgl$#-          %54.6 = IsType                   %54.5 isA val?~- | miss
  void                    Branch                   %54.6 -> BB107 (if true) | BB108 (if false)
BB29   <- [105]
  void                    Nop                !     
  goto BB30
BB107   <- [54]
  val?~- | miss   %107.0 = CastType           d     dn %54.5
  val?-           %107.1 = Force!<value>            %107.0,    <env->
  val?            %107.2 = NamedCall          !v    %54.4(%107.1, value=%54.3) e63.1
  void                    StVar              lW    e, %107.2, e63.1
  goto BB30
BB108   <- [54]
  fs              %108.0 = FrameState         R     0x564985064c70+858: [%54.3], env=e63.1
  void                    Deopt              !v    %108.0, Typecheck@0x564984305688[Type#43], %54.5   !
BB30   <- [29, 107]
  (cls|spec|blt)  %30.0 = LdFun              !v    $, <0x564982e85c10>, e63.1
  prom-           %30.1 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p11, e63.1
  prom-           %30.2 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p12, e63.1
  val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e63.1   <lgl$->
  lgl$-           %30.4 = Is                       %30.3, NULL
  lgl$#-          %30.5 = IsType                   %30.3 isA lgl$-
  void                    Branch                   %30.5 -> BB109 (if true) | BB110 (if false)
BB109   <- [30]
  lgl$-           %109.0 = Not                d     %30.4, elided
  lgl$-           %109.1 = AsLogical                %109.0
  lgl$#-          %109.2 = Identical                %109.1, false
  void                    Branch                   %109.2 -> BB53 (if true) | BB33 (if false)
BB110   <- [30]
  fs              %110.0 = FrameState         R     0x564985064c70+963: [%30.3], env=e63.1
  void                    Deopt              !v    %110.0, Typecheck@0x564984305688[Type#46], %30.3   !
BB53   <- [109]
  void                    Nop                !     
  lgl$-           %53.1 = %109.1
  goto BB36
BB33   <- [109]
  (cls|spec|blt)  %33.0 = LdFun              !v    $, <0x564982e85c10>, e63.1
  prom-           %33.1 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p13, e63.1
  prom-           %33.2 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p14, e63.1
  val?            %33.3 = Call               !v    %33.0(%33.1, %33.2) e63.1   <lgl$->
  lgl$#-          %33.4 = IsType                   %33.3 isA lgl$-
  void                    Branch                   %33.4 -> BB111 (if true) | BB112 (if false)
BB36   <- [53, 111]
  lgl$-           %36.0 = Phi                      %111.3:BB111, %53.1:BB53
  lgl$-           %36.1 = %36.0
  lgl$#-          %36.2 = CheckTrueFalse     e     %36.1
  void                    Branch                   %36.2 -> BB52 (if true) | BB37 (if false)
BB111   <- [33]
  lgl$-           %111.0 = CastType           d     dn %33.3
  lgl$-           %111.1 = AsLogical                %111.0
  lgl$-           %111.2 = LAnd                     %109.1, %111.1
  lgl$-           %111.3 = %111.2
  goto BB36
BB112   <- [33]
  fs              %112.0 = FrameState         R     0x564985064c70+1018: [%109.1, %33.3], env=e63.1
  void                    Deopt              !v    %112.0, Typecheck@0x564984305688[Type#49], %33.3   !
BB52   <- [36]
  val?^ | miss    %52.0 = LdVar              eR    e, e63.1
  val?            %52.1 = Force!             !v    %52.0, e63.1   <val?_>
  val?            %52.2 = CallBuiltin        !v    setS4Object(%52.1, true, true) e63.1
  goto BB38
BB37   <- [36]
  void                    Nop                !     
  goto BB38
BB38   <- [37, 52]
  val?^ | miss    %38.0 = LdVar              eR    key, e63.1
  lgl$#-          %38.1 = IsType                   %38.0 isA int-
  void                    Branch                   %38.1 -> BB113 (if true) | BB114 (if false)
BB113   <- [38]
  (cls|spec|blt)  %113.0 = LdFun              !v    $, <0x564982e85c10>, e63.1
  prom-           %113.1 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p15, e63.1
  prom-           %113.2 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p16, e63.1
  val?            %113.3 = Call               !v    %113.0(%113.1, %113.2) e63.1   <lgl$->
  lgl$-           %113.4 = Is                       %113.3, NULL
  lgl$#-          %113.5 = IsType                   %113.3 isA lgl$-
  void                    Branch                   %113.5 -> BB115 (if true) | BB116 (if false)
BB114   <- [38]
  fs              %114.0 = FrameState         R     0x564985064c70+1076: [], env=e63.1
  void                    Deopt              !v    %114.0, Typecheck@0x564984305688[Type#51], %38.0   !
BB115   <- [113]
  lgl$-           %115.0 = Not                d     %113.4, elided
  lgl$-           %115.1 = AsLogical                %115.0
  lgl$#-          %115.2 = Identical                %115.1, false
  void                    Branch                   %115.2 -> BB51 (if true) | BB43 (if false)
BB116   <- [113]
  fs              %116.0 = FrameState         R     0x564985064c70+1402: [%113.3], env=e63.1
  void                    Deopt              !v    %116.0, Typecheck@0x564984305688[Type#68], %113.3   !
BB51   <- [115]
  void                    Nop                !     
  lgl$-           %51.1 = %115.1
  goto BB46
BB43   <- [115]
  (cls|spec|blt)  %43.0 = LdFun              !v    $, <0x564982e85c10>, e63.1
  prom-           %43.1 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p17, e63.1
  prom-           %43.2 = MkArg                    unboundValue, envhook[0x5649855b6d20]_p18, e63.1
  val?            %43.3 = Call               !v    %43.0(%43.1, %43.2) e63.1   <lgl$->
  lgl$#-          %43.4 = IsType                   %43.3 isA lgl$-
  void                    Branch                   %43.4 -> BB117 (if true) | BB118 (if false)
BB46   <- [51, 117]
  lgl$-           %46.0 = Phi                      %117.3:BB117, %51.1:BB51
  lgl$-           %46.1 = %46.0
  lgl$#-          %46.2 = CheckTrueFalse     e     %46.1
  void                    Branch                   %46.2 -> BB50 (if true) | BB47 (if false)
BB117   <- [43]
  lgl$-           %117.0 = CastType           d     dn %43.3
  lgl$-           %117.1 = AsLogical                %117.0
  lgl$-           %117.2 = LAnd                     %115.1, %117.1
  lgl$-           %117.3 = %117.2
  goto BB46
BB118   <- [43]
  fs              %118.0 = FrameState         R     0x564985064c70+1457: [%115.1, %43.3], env=e63.1
  void                    Deopt              !v    %118.0, Typecheck@0x564984305688[Type#71], %43.3   !
BB50   <- [46]
  val?^ | miss    %50.0 = LdVar              eR    e, e63.1
  val?            %50.1 = Force!             !v    %50.0, e63.1   <val?_>
  val?            %50.2 = CallBuiltin        !v    lockEnvironment(%50.1, false) e63.1
  goto BB48
BB47   <- [46]
  void                    Nop                !     
  goto BB48
BB48   <- [47, 50]
  val?^ | miss    %48.0 = LdVar              eR    e, e63.1
  void                    Visible            v     
  val?            %48.2 = Force!<value>      !     %48.0, e63.1   <env>
  val?            %48.3 = %48.2
  goto BB49
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    envenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enclos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x564982e85c10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, envhook[0x5649855b6d20]_p6, e0.0
  prom-           %0.3  = MkArg                    unboundValue, envhook[0x5649855b6d20]_p7, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    bindings, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    e, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attributes, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isS4, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    isS4, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    locked, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    locked, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attributes, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enclos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ envhook[0x5649855b6d20]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
