
┌──────────────────────────────────────────────────────────────────────────────┐
│ strwrap[0x5649854b8c40]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,Eager3,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3,SimpleInt1,SimpleInt2,SimpleInt3 miss: 3│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
strwrap[0x5649854b8c40]
BB0
  (int|miss)$~-   %0.0  = LdArg                    3
  (int|miss)$~-   %0.1  = LdArg                    2
  (int|miss)$~-   %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  env             e0.4  = MkEnv              l     x=%0.3, width=%0.2, indent=%0.1, exdent=%0.0, prefix(miss)="", simplify(miss)=true, initial(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %0.5  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p2 (!refl), e0.4
  val?^ | miss    %0.6  = CastType                 up %0.5
  void                    StArg              lW    initial, %0.6, e0.4
  val?            %0.8  = Force!<lazy>       !v    %0.3, e0.4   <str$->
  lgl$#-          %0.9  = IsType                   %0.8 isA val?-
  void                    Branch                   %0.9 -> BB306 (if true) | BB307 (if false)
BB306   <- [0]
  val?-           %306.0 = CastType           d     dn %0.8   <str$->
  lgl$#-          %306.1 = CallSafeBuiltin    wed   is.character(%306.0)    <lgl$->
  void                    Branch                   %306.1 -> BB304 (if true) | BB3 (if false)
BB307   <- [0]
  fs              %307.0 = FrameState         R     0x5649859c2d30+69: [<blt is.character>, %0.8], env=e0.4
  void                    Deopt              !v    %307.0, Typecheck@0x56498559d860[Type#4], %0.8   !
BB304   <- [306]
  void                    Nop                !     
  goto BB8
BB3   <- [306]
  val?^ | miss    %3.0  = LdVar              eR    as.character, e0.4
  lgl$#-          %3.1  = Identical                <blt as.character>, %3.0   <@?>
  void                    Branch                   %3.1 -> BB5 (if true) | BB4 (if false)
BB8   <- [304, 308]
  val?^ | miss    %8.0  = LdVar              eR    strrep, e0.4
  lgl$#-          %8.1  = Identical                %8.0, function(x, times) <(rir::DispatchTable*)0x564|...
  void                    Branch                   %8.1 -> BB310 (if true) | BB311 (if false)
BB5   <- [3]
  val?^ | miss    %5.0  = LdVar              eR    x, e0.4
  val?            %5.1  = Force!             !v    %5.0, e0.4   <val?_>
  lgl$#-          %5.2  = IsType                   %5.1 isA val?+
  void                    Branch                   %5.2 -> BB308 (if true) | BB309 (if false)
BB4   <- [3]
  (cls|spec|blt)  %4.0  = LdFun              !v    as.character, e0.4
  fs              %4.1  = FrameState         R     0x5649859c2d30+136: [%4.0], env=e0.4
  void                    Deopt              !v    %4.1, DeadCall@0x56498559d860[Call#2], %4.0   !
BB310   <- [8]
  prom-           %310.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p3, e0.4
  ct              %310.1 = PushContext        lCL   " ", %310.0, strrep(" ", indent), function(x, times) <(rir::DispatchTable*)0x564|..., e0.4
  val?^           %310.2 = CastType                 up %310.0
  env             e310.3 = MkEnv              l     x=" ", times=%310.2, parent=R_BaseNamespace, context 1
  val?            %310.4 = Force!<lazy>       !vL   %310.2, e310.3   <int$->
  lgl$#-          %310.5 = IsType                   %310.4 isA int$-
  void                    Branch                   %310.5 -> BB312 (if true) | BB313 (if false)
BB311   <- [8]
  fs              %311.0 = FrameState         R     0x5649859c2d30+213: [], env=e0.4
  void                    Deopt              !v    %311.0, CallTarget@0x56498559d860[Call#3], %8.0   !
BB308   <- [5]
  val?+           %308.0 = CastType           d     dn %5.1   <val?_>
  val+            %308.1 = CallSafeBuiltin    wed   as.character(%308.0)    <val?_>
  void                    StVar              lW    x, %308.1, e0.4
  goto BB8
BB309   <- [5]
  fs              %309.0 = FrameState         R     0x5649859c2d30+177: [<blt as.character>, %5.1], env=e0.4
  void                    Deopt              !v    %309.0, Typecheck@0x56498559d860[Type#7], %5.1   !
BB312   <- [310]
  int$-           %312.0 = CastType           d     dn %310.4
  val?            %312.1 = CallBuiltin        !v    strrep(" ", %312.0) e310.3
  val?            %312.2 = PopContext         C     %312.1, %310.1   <str$->
  void                    StVar              lW    indentString, %312.2, e0.4
  val?^ | miss    %312.4 = LdVar              eR    strrep, e0.4
  lgl$#-          %312.5 = Identical                %312.4, function(x, times) <(rir::DispatchTable*)0x564|...
  void                    Branch                   %312.5 -> BB314 (if true) | BB315 (if false)
BB313   <- [310]
  fs              %313.0 = FrameState         R     0x5649859c2d30+250: [], env=e0.4
  fs              %313.1 = FrameState         R     0x56498549f3b0+296: [" ", <blt as.integer>, %310.4], env=e310.3, next=%313.0
  void                    Deopt              !v    %313.1, Typecheck@0x5649839ad578[Type#8], %310.4   !
BB314   <- [312]
  prom-           %314.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p4, e0.4
  ct              %314.1 = PushContext        lCL   " ", %314.0, strrep(" ", exdent), function(x, times) <(rir::DispatchTable*)0x564|..., e0.4
  val?^           %314.2 = CastType                 up %314.0
  env             e314.3 = MkEnv              l     x=" ", times=%314.2, parent=R_BaseNamespace, context 1
  val?            %314.4 = Force!<lazy>       !vL   %314.2, e314.3   <int$->
  lgl$#-          %314.5 = IsType                   %314.4 isA int$-
  void                    Branch                   %314.5 -> BB316 (if true) | BB317 (if false)
BB315   <- [312]
  fs              %315.0 = FrameState         R     0x5649859c2d30+264: [], env=e0.4
  void                    Deopt              !v    %315.0, CallTarget@0x56498559d860[Call#4], %312.4   !
BB316   <- [314]
  int$-           %316.0 = CastType           d     dn %314.4
  val?            %316.1 = CallBuiltin        !v    strrep(" ", %316.0) e314.3
  val?            %316.2 = PopContext         C     %316.1, %314.1   <str$->
  void                    StVar              lW    exdentString, %316.2, e0.4
  val?^ | miss    %316.4 = LdVar              eR    list, e0.4
  lgl$#-          %316.5 = Identical                <blt list>, %316.4   <true>
  void                    Branch                   %316.5 -> BB318 (if true) | BB319 (if false)
BB317   <- [314]
  fs              %317.0 = FrameState         R     0x5649859c2d30+301: [], env=e0.4
  fs              %317.1 = FrameState         R     0x56498549f3b0+296: [" ", <blt as.integer>, %314.4], env=e314.3, next=%317.0
  void                    Deopt              !v    %317.1, Typecheck@0x5649839ad578[Type#8], %314.4   !
BB318   <- [316]
  void                    StVar              lW    y, list(), e0.4
  val?^ | miss    %318.1 = LdVar              eR    Encoding, e0.4
  lgl$#-          %318.2 = Identical                %318.1, function(x) <(rir::DispatchTable*)0x5649853a2f|...
  void                    Branch                   %318.2 -> BB320 (if true) | BB321 (if false)
BB319   <- [316]
  fs              %319.0 = FrameState         R     0x5649859c2d30+315: [], env=e0.4
  void                    Deopt              !v    %319.0, DeadBranchReached@0x56498559d860[Test#2], %316.5   !
BB320   <- [318]
  prom-           %320.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p5, e0.4
  ct              %320.1 = PushContext        lCL   %320.0, Encoding(x), function(x) <(rir::DispatchTable*)0x5649853a2f|..., e0.4
  val?^           %320.2 = CastType                 up %320.0
  env             e320.3 = MkEnv              l     x=%320.2, parent=R_BaseNamespace, context 1
  val?            %320.4 = Force!<lazy>       !vL   %320.2, e320.3   <str$->
  val?            %320.5 = CallBuiltin        !v    Encoding(%320.4) e320.3
  val?            %320.6 = PopContext         C     %320.5, %320.1   <str$->
  void                    StVar              lW    enc, %320.6, e0.4
  val?^ | miss    %320.8 = LdVar              eR    enc2utf8, e0.4
  lgl$#-          %320.9 = Identical                <blt enc2utf8>, %320.8   <true>
  void                    Branch                   %320.9 -> BB322 (if true) | BB323 (if false)
BB321   <- [318]
  fs              %321.0 = FrameState         R     0x5649859c2d30+401: [], env=e0.4
  void                    Deopt              !v    %321.0, CallTarget@0x56498559d860[Call#6], %318.1   !
BB322   <- [320]
  val?^ | miss    %322.0 = LdVar              eR    x, e0.4
  val?            %322.1 = Force!<wrapped>    !v    %322.0, e0.4   <str$->
  val?            %322.2 = CallBuiltin        !v    enc2utf8(%322.1) e0.4   <str$->
  void                    StVar              lW    x, %322.2, e0.4
  val?^ | miss    %322.4 = LdVar              eR    any, e0.4
  lgl$#-          %322.5 = Identical                <blt any>, %322.4   <true>
  void                    Branch                   %322.5 -> BB324 (if true) | BB325 (if false)
BB323   <- [320]
  fs              %323.0 = FrameState         R     0x5649859c2d30+447: [], env=e0.4
  void                    Deopt              !v    %323.0, DeadBranchReached@0x56498559d860[Test#3], %320.9   !
BB324   <- [322]
  val?^ | miss    %324.0 = LdVar              eR    validEnc, e0.4
  lgl$#-          %324.1 = Identical                %324.0, function(x) <(rir::DispatchTable*)0x564985545a|...
  void                    Branch                   %324.1 -> BB326 (if true) | BB327 (if false)
BB325   <- [322]
  void                    Nop                !     
  lgl$#-          %325.1 = %322.5
  dr              %325.2 = DeadBranchReached@0x56498559d860[Test#4]
  goto BB23
BB326   <- [324]
  prom-           %326.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p6 (!refl), e0.4
  ct              %326.1 = PushContext        lCL   %326.0, validEnc(x), function(x) <(rir::DispatchTable*)0x564985545a|..., e0.4
  val?^           %326.2 = CastType                 up %326.0
  env             e326.3 = MkEnv              l     x=%326.2, parent=R_BaseNamespace, context 1
  val?            %326.4 = CallBuiltin        !v    validEnc(%322.2) e326.3
  val?            %326.5 = PopContext         C     %326.4, %326.1   <lgl$->
  lgl$#-          %326.6 = IsType                   %326.5 isA lgl$-
  void                    Branch                   %326.6 -> BB328 (if true) | BB329 (if false)
BB327   <- [324]
  void                    Nop                !     
  val?^ | miss    %327.1 = %324.0
  dr              %327.2 = CallTarget@0x56498559d860[Call#10]
  goto BB23
BB23   <- [325, 327]
  val?^ | miss    %23.0 = Phi                      %325.1:BB325, %327.1:BB327
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %325.2:BB325, %327.2:BB327
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x5649859c2d30+552: [], env=e0.4
  void                    Deopt              !v    %23.4, %23.3, %23.1   !
BB328   <- [326]
  lgl$-           %328.0 = CastType           d     dn %326.5
  lgl$-           %328.1 = Not                d     %328.0, elided
  void                    StVar              lW    ind, %328.1, e0.4
  val?            %328.3 = CallBuiltin        !v    any(%328.1) e0.4   <lgl$->
  lgl$#-          %328.4 = IsType                   %328.3 isA lgl$-
  void                    Branch                   %328.4 -> BB330 (if true) | BB331 (if false)
BB329   <- [326]
  fs              %329.0 = FrameState         R     0x5649859c2d30+644: [<blt any>, %326.5], env=e0.4
  void                    Deopt              !v    %329.0, Typecheck@0x56498559d860[Type#22], %326.5   !
BB330   <- [328]
  lgl$-           %330.0 = CastType           d     dn %328.3
  lgl$#-          %330.1 = CheckTrueFalse     e     %330.0
  void                    Branch                   %330.1 -> BB303 (if true) | BB29 (if false)
BB331   <- [328]
  void                    Nop                !     
  val?            %331.1 = %328.3
  dr              %331.2 = Typecheck@0x56498559d860[Type#23]
  goto BB27
BB303   <- [330]
  val?^ | miss    %303.0 = LdVar              eR    x !upd, e0.4
  val?            %303.1 = Force!             !v    %303.0, e0.4
  (cls|spec|blt)  %303.2 = LdFun              !v    iconv, e0.4
  fs              %303.3 = FrameState         R     0x5649859c2d30+710: [%303.2], env=e0.4
  void                    Deopt              !v    %303.3, DeadCall@0x56498559d860[Call#11], %303.2   !
BB29   <- [330]
  val?^ | miss    %29.0 = LdVar              eR    lapply, e0.4
  lgl$#-          %29.1 = Identical                %29.0, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %29.1 -> BB332 (if true) | BB333 (if false)
BB27   <- [331, 333]
  val?^ | miss    %27.0 = Phi                      %331.1:BB331, %333.1:BB333
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %331.2:BB331, %333.2:BB333
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x5649859c2d30+678: [%328.3], env=e0.4
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
BB332   <- [29]
  prom-           %332.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p7, e0.4
  prom-           %332.1 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p9, e0.4
  dots-           %332.2 = DotsList           l     "[ 	
]", perl=true
  ct              %332.3 = PushContext        lCL   %332.0, %332.1, %332.2, lapply(strsplit(x, "
[ 	
]*
", perl=TRUE), str|..., function(X, FUN, ...) <(rir::DispatchTable*)0x|..., e0.4
  val?^           %332.4 = CastType                 up %332.1
  val?^           %332.5 = CastType                 up %332.0
  env             e332.6 = MkEnv              l     X=%332.5, FUN=%332.4, ...=%332.2, parent=R_BaseNamespace, context 1
  prom-           %332.7 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p43, e332.6
  val?            %332.8 = StaticCall         !v    match.fun[0x56498552c670](%332.7) e332.6   <cls->
  void                    StVar              lW    FUN, %332.8, e332.6
  val?^ | miss    %332.10 = LdVar              eR    is.vector, e332.6
  lgl$#-          %332.11 = Identical                %332.10, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %332.11 -> BB334 (if true) | BB335 (if false)
BB333   <- [29]
  void                    Nop                !     
  val?^ | miss    %333.1 = %29.0
  dr              %333.2 = CallTarget@0x56498559d860[Call#12]
  goto BB27
BB334   <- [332]
  val?^ | miss    %334.0 = LdVar              eR    X, e332.6
  val?            %334.1 = Force!<lazy>       !v    %334.0, e332.6   <vec$->
  lgl$#-          %334.2 = CallSafeBuiltin    wed   is.vector(%334.1, "any")    <lgl$->
  lgl$#-          %334.3 = Not                d     %334.2, elided
  void                    Branch                   %334.2 -> BB302 (if true) | BB34 (if false)
BB335   <- [332]
  fs              %335.0 = FrameState         R     0x5649859c2d30+874: [], env=e0.4
  fs              %335.1 = FrameState         R     0x564985b54fb0+46: [], env=e332.6, next=%335.0
  void                    Deopt              !v    %335.1, CallTarget@0x56498537cf90[Call#1], %332.10   !
BB302   <- [334]
  val?^ | miss    %302.0 = LdVar              eR    is.object, e332.6
  lgl$#-          %302.1 = Identical                <blt is.object>, %302.0   <true>
  void                    Branch                   %302.1 -> BB336 (if true) | BB337 (if false)
BB34   <- [334]
  void                    Nop                !     
  lgl$#-          %34.1 = %334.3
  goto BB35
BB336   <- [302]
  val?^ | miss    %336.0 = LdVar              eR    X, e332.6
  val?            %336.1 = Force!<wrapped>    !v    %336.0, e332.6   <vec$->
  lgl$#-          %336.2 = CallSafeBuiltin    wed   is.object(%336.1)    <lgl$->
  lgl$-           %336.3 = LOr                      %334.3, %336.2
  lgl$-           %336.4 = %336.3
  goto BB35
BB337   <- [302]
  fs              %337.0 = FrameState         R     0x5649859c2d30+874: [], env=e0.4
  fs              %337.1 = FrameState         R     0x564985b54fb0+78: [], env=e332.6, next=%337.0
  prom-           %337.2 = MkArg                    %334.1, strwrap[0x5649854b8c40]_p44 (!refl), e332.6
  val?~           %337.3 = CastType                 up %337.2
  env             e337.4 = (MkEnv)            l     mode(miss)="any", x=%337.3, parent=R_BaseNamespace, context 0
  fs              %337.5 = FrameState         R     0x564985329090+41: [%334.2], env=e337.4, next=%337.1
  void                    Deopt              !v    %337.5, DeadBranchReached@0x56498537cf90[Test#0], %302.1   !
BB35   <- [34, 336]
  lgl$-           %35.0 = Phi                      %336.4:BB336, %34.1:BB34
  lgl$-           %35.1 = %35.0
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB301 (if true) | BB36 (if false)
BB301   <- [35]
  fs              %301.0 = FrameState         R     0x5649859c2d30+874: [], env=e0.4
  (cls|spec|blt)  %301.1 = LdFun              !v    as.list, e332.6
  fs              %301.2 = FrameState         R     0x564985b54fb0+205: [%301.1], env=e332.6, next=%301.0
  void                    Deopt              !v    %301.2, DeadCall@0x56498537cf90[Call#3], %301.1   !
BB36   <- [35]
  val?^ | miss    %36.0 = LdVar              eR    X, e332.6
  val?            %36.1 = Force!<wrapped>    !v    %36.0, e332.6   <vec$->
  (nil|str)-      %36.2 = Names                    %36.1
  int$-           %36.3 = Length                   %36.1
  vec-            %36.4 = CallSafeBuiltin    wed   vector("list", %36.3) 
  val+            %36.5 = SetNames           e     %36.4, %36.2
  int$#-          %36.6 = 0L
  val+            %36.7 = %36.5
  goto BB37
BB37   <- [36, 340]
  int$-           %37.0 = Phi                      %36.6:BB36, %340.5:BB340
  int$-           %37.1 = %37.0
  val?            %37.2 = Phi                      %36.7:BB36, %340.6:BB340
  val?            %37.3 = %37.2
  int$-           %37.4 = Inc                      %37.1
  lgl$-           %37.5 = Lt                 d     %36.3, %37.4, elided
  lgl$#-          %37.6 = Identical                %37.5, true
  void                    Branch                   %37.6 -> BB41 (if true) | BB38 (if false)
BB41   <- [37]
  val?            %41.0 = PopContext         C     %37.3, %332.3   <vec$->
  void                    StVar              lW    z, %41.0, e0.4
  val?^ | miss    %41.2 = LdVar              eR    seq_along, e0.4
  lgl$#-          %41.3 = Identical                <blt seq_along>, %41.2   <true>
  void                    Branch                   %41.3 -> BB338 (if true) | BB339 (if false)
BB38   <- [37]
  void                    StVar              lW    i, %37.4, e332.6
  val?^ | miss    %38.1 = LdVar              eR    FUN, e332.6
  lgl$#-          %38.2 = Identical                %38.1, function(x, split, fixed=FALSE, perl=FALSE, us|...
  void                    Branch                   %38.2 -> BB340 (if true) | BB341 (if false)
BB338   <- [41]
  val             %338.0 = ChkMissing         e     %41.0
  val?            %338.1 = CallBuiltin        !v    seq_along(%41.0) e0.4   <int$->
  lgl$#-          %338.2 = IsType                   %338.1 isA int$-
  void                    Branch                   %338.2 -> BB342 (if true) | BB343 (if false)
BB339   <- [41]
  fs              %339.0 = FrameState         R     0x5649859c2d30+888: [], env=e0.4
  void                    Deopt              !v    %339.0, DeadBranchReached@0x56498559d860[Test#6], %41.3   !
BB340   <- [38]
  prom-           %340.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p46, e332.6
  (miss|dots)     %340.1 = LdDots             R     , e332.6
  *dots-          %340.2 = ExpandDots               %340.1
  val?            %340.3 = NamedCall          !v    function(x, split, fixed=FALSE, perl=FALSE, us|...(%340.0, .xpandDotsTrigger=%340.2) e332.6   <vec$->
  val?            %340.4 = SetVecElt          e     %340.3, %37.3, %37.4
  int$-           %340.5 = %37.4
  val?            %340.6 = %340.4
  goto BB37
BB341   <- [38]
  fs              %341.0 = FrameState         R     0x5649859c2d30+874: [], env=e0.4
  fs              %341.1 = FrameState         R     0x564985b54fb0+310: [%37.3, %36.3, %37.4], env=e332.6, next=%341.0
  void                    Deopt              !v    %341.1, CallTarget@0x56498537cf90[Call#4], %38.1   !
BB342   <- [338]
  int$-           %342.0 = CastType           d     dn %338.1
  int$#-          %342.1 = 0L
  goto BB46
BB343   <- [338]
  fs              %343.0 = FrameState         R     0x5649859c2d30+979: [%338.1], env=e0.4
  void                    Deopt              !v    %343.0, Typecheck@0x56498559d860[Type#37], %338.1   !
BB46   <- [276, 342]
  int$-           %46.0 = Phi                      %342.1:BB342, %276.3:BB276
  int$-           %46.1 = %46.0
  int$-           %46.2 = Inc                      %46.1
  lgl$-           %46.3 = Lt                 d     1L, %46.2, elided
  lgl$#-          %46.4 = Identical                %46.3, true
  void                    Branch                   %46.4 -> BB278 (if true) | BB49 (if false)
BB278   <- [46]
  val?^ | miss    %278.0 = LdVar              eR    length, e0.4
  lgl$#-          %278.1 = Identical                <blt length>, %278.0   <true>
  void                    Branch                   %278.1 -> BB344 (if true) | BB345 (if false)
BB49   <- [46]
  int$-           %49.0 = Extract2_1D        wed   %342.0, %46.2, elided
  void                    StVar              lW    i, %49.0, e0.4
  val?^ | miss    %49.2 = LdVar              eR    character, e0.4
  lgl$#-          %49.3 = Identical                %49.2, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %49.3 -> BB354 (if true) | BB355 (if false)
BB344   <- [278]
  val?^ | miss    %344.0 = LdVar              eR    which, e0.4
  lgl$#-          %344.1 = Identical                %344.0, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %344.1 -> BB346 (if true) | BB347 (if false)
BB345   <- [278]
  void                    Nop                !     
  lgl$#-          %345.1 = %278.1
  dr              %345.2 = DeadBranchReached@0x56498559d860[Test#75]
  goto BB47
BB354   <- [49]
  str-            %354.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    yi, %354.0, e0.4
  val?^ | miss    %354.2 = LdVar              eR    seq_along, e0.4
  lgl$#-          %354.3 = Identical                <blt seq_along>, %354.2   <true>
  void                    Branch                   %354.3 -> BB356 (if true) | BB357 (if false)
BB355   <- [49]
  fs              %355.0 = FrameState         R     0x5649859c2d30+1019: [%342.0, 1L, %46.2], env=e0.4
  void                    Deopt              !v    %355.0, CallTarget@0x56498559d860[Call#15], %49.2   !
BB346   <- [344]
  val?^ | miss    %346.0 = LdVar              eR    enc, e0.4
  lgl$#-          %346.1 = IsType                   %346.0 isA val?~- | miss
  void                    Branch                   %346.1 -> BB348 (if true) | BB349 (if false)
BB347   <- [344]
  void                    Nop                !     
  val?^ | miss    %347.1 = %344.0
  dr              %347.2 = CallTarget@0x56498559d860[Call#84]
  goto BB47
BB47   <- [345, 347, 349]
  val?^ | miss    %47.0 = Phi                      %345.1:BB345, %347.1:BB347, %349.1:BB349
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %345.2:BB345, %347.2:BB347, %349.2:BB349
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x5649859c2d30+990: [%342.0, 1L, %46.1], env=e0.4
  void                    Deopt              !v    %47.4, %47.3, %47.1   !
BB356   <- [354]
  val?^ | miss    %356.0 = LdVar              eR    z, e0.4
  lgl$#-          %356.1 = IsType                   %356.0 isA val?~- | miss
  void                    Branch                   %356.1 -> BB360 (if true) | BB361 (if false)
BB357   <- [354]
  void                    Nop                !     
  lgl$#-          %357.1 = %354.3
  dr              %357.2 = DeadBranchReached@0x56498559d860[Test#7]
  goto BB52
BB348   <- [346]
  val?~- | miss   %348.0 = CastType           d     dn %346.0
  val?-           %348.1 = Force!<value>            %348.0,    <str$->
  lgl-            %348.2 = Eq                 wed   %348.1, "latin1", elided   <lgl$->
  lgl$#-          %348.3 = IsType                   %348.2 isA lgl$-
  void                    Branch                   %348.3 -> BB350 (if true) | BB351 (if false)
BB349   <- [346]
  void                    Nop                !     
  val?^ | miss    %349.1 = %346.0
  dr              %349.2 = Typecheck@0x56498559d860[Type#404]
  goto BB47
BB360   <- [356]
  val?~- | miss   %360.0 = CastType           d     dn %356.0
  val?-           %360.1 = Force!<value>            %360.0,    <vec$->
  lgl$#-          %360.2 = IsType                   %360.1 isA val+   <true>
  void                    Branch                   %360.2 -> BB362 (if true) | BB363 (if false)
BB361   <- [356]
  void                    Nop                !     
  val?^ | miss    %361.1 = %356.0
  dr              %361.2 = Typecheck@0x56498559d860[Type#43]
  goto BB52
BB52   <- [357, 361, 363]
  val?^ | miss    %52.0 = Phi                      %357.1:BB357, %361.1:BB361, %363.1:BB363
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %357.2:BB357, %361.2:BB361, %363.2:BB363
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x5649859c2d30+1060: [%342.0, 1L, %46.2], env=e0.4
  void                    Deopt              !v    %52.4, %52.3, %52.1   !
BB350   <- [348]
  lgl$-           %350.0 = CastType           d     dn %348.2
  val+            %350.1 = CallSafeBuiltin    wed   which(%350.0)    <int->
  void                    StVar              lW    pos, %350.1, e0.4
  lgl$#-          %350.3 = IsType                   %350.1 isA int-
  void                    Branch                   %350.3 -> BB352 (if true) | BB353 (if false)
BB351   <- [348]
  prom-           %351.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p41, e0.4
  val?^           %351.1 = CastType                 up %351.0
  fs              %351.2 = FrameState         R     0x5649859c2d30+7629: [<blt length>], env=e0.4
  env             e351.3 = (MkEnv)            l     wh=unboundValue, d=unboundValue, useNames(miss)=true, arr.ind(miss)=false, x=%351.1, parent=R_BaseNamespace, context 0
  fs              %351.4 = FrameState         R     0x564985a1f730+9: [], env=e351.3, next=%351.2
  fs              %351.5 = FrameState         R     0x564985377890+17(pr): [%348.2], env=e0.4, next=%351.4
  void                    Deopt              !v    %351.5, Typecheck@0x56498559d860[Type#405], %348.2   !
BB362   <- [360]
  val?            %362.0 = Extract2_1D        wed   %360.1, %49.0, elided   <vec$->
  val?            %362.1 = CallBuiltin        !v    seq_along(%362.0) e0.4   <int$->
  lgl$#-          %362.2 = IsType                   %362.1 isA int$-
  void                    Branch                   %362.2 -> BB366 (if true) | BB367 (if false)
BB363   <- [360]
  void                    Nop                !     
  lgl$#-          %363.1 = %360.2
  dr              %363.2 = DeadBranchReached@0x56498559d860[Test#9]
  goto BB52
BB352   <- [350]
  int-            %352.0 = CastType           d     dn %350.1
  (int|real)$-    %352.1 = CallSafeBuiltin    wed   length(%352.0)    <int$->
  lgl$#-          %352.2 = IsType                   %352.1 isA int$-
  void                    Branch                   %352.2 -> BB358 (if true) | BB359 (if false)
BB353   <- [350]
  fs              %353.0 = FrameState         R     0x5649859c2d30+7645: [<blt length>, %350.1], env=e0.4
  void                    Deopt              !v    %353.0, Typecheck@0x56498559d860[Type#406], %350.1   !
BB366   <- [362]
  int$-           %366.0 = CastType           d     dn %362.1
  int$#-          %366.1 = 0L
  goto BB56
BB367   <- [362]
  fs              %367.0 = FrameState         R     0x5649859c2d30+1203: [%342.0, 1L, %46.2, %362.1], env=e0.4
  void                    Deopt              !v    %367.0, Typecheck@0x56498559d860[Type#47], %362.1   !
BB358   <- [352]
  int$-           %358.0 = CastType           d     dn %352.1
  lgl$#-          %358.1 = CheckTrueFalse     e     %358.0
  void                    Branch                   %358.1 -> BB300 (if true) | BB285 (if false)
BB359   <- [352]
  fs              %359.0 = FrameState         R     0x5649859c2d30+7662: [%352.1], env=e0.4
  void                    Deopt              !v    %359.0, Typecheck@0x56498559d860[Type#407], %352.1   !
BB56   <- [366, 422, 564]
  int$-           %56.0 = Phi                      %366.1:BB366, %564.3:BB564, %422.3:BB422
  int$-           %56.1 = %56.0
  int$-           %56.2 = Inc                      %56.1
  lgl$-           %56.3 = Lt                 d     1L, %56.2, elided
  lgl$#-          %56.4 = Identical                %56.3, true
  void                    Branch                   %56.4 -> BB268 (if true) | BB59 (if false)
BB300   <- [358]
  val?^ | miss    %300.0 = LdVar              eR    y !upd, e0.4
  val?            %300.1 = Force!             !v    %300.0, e0.4
  (cls|spec|blt)  %300.2 = LdFun              !v    lapply, e0.4
  fs              %300.3 = FrameState         R     0x5649859c2d30+7694: [%300.2], env=e0.4
  void                    Deopt              !v    %300.3, DeadCall@0x56498559d860[Call#85], %300.2   !
BB285   <- [358]
  val?^ | miss    %285.0 = LdVar              eR    simplify, e0.4
  val?            %285.1 = Force!<lazy>       !v    %285.0, e0.4   <lgl$->
  lgl$#-          %285.2 = CheckTrueFalse     we    %285.1
  void                    Branch                   %285.2 -> BB292 (if true) | BB288 (if false)
BB268   <- [56]
  val?^ | miss    %268.0 = LdVar              eR    length, e0.4
  lgl$#-          %268.1 = Identical                <blt length>, %268.0   <true>
  void                    Branch                   %268.1 -> BB374 (if true) | BB375 (if false)
BB59   <- [56]
  int$-           %59.0 = Extract2_1D        wed   %366.0, %56.2, elided
  void                    StVar              lW    j, %59.0, e0.4
  val?^ | miss    %59.2 = LdVar              eR    z, e0.4
  lgl$#-          %59.3 = IsType                   %59.2 isA val?~- | miss
  void                    Branch                   %59.3 -> BB378 (if true) | BB379 (if false)
BB292   <- [285]
  val?^ | miss    %292.0 = LdVar              eR    as.character, e0.4
  lgl$#-          %292.1 = Identical                <blt as.character>, %292.0   <true>
  void                    Branch                   %292.1 -> BB364 (if true) | BB365 (if false)
BB288   <- [285]
  void                    Nop                !     
  goto BB289
BB374   <- [268]
  val?^ | miss    %374.0 = LdVar              eR    yi, e0.4
  lgl$#-          %374.1 = IsType                   %374.0 isA val?~- | miss
  void                    Branch                   %374.1 -> BB376 (if true) | BB377 (if false)
BB375   <- [268]
  void                    Nop                !     
  lgl$#-          %375.1 = %268.1
  dr              %375.2 = DeadBranchReached@0x56498559d860[Test#67]
  goto BB57
BB378   <- [59]
  val?~- | miss   %378.0 = CastType           d     dn %59.2
  val?-           %378.1 = Force!<value>            %378.0,    <vec$->
  lgl$#-          %378.2 = IsType                   %378.1 isA val+   <true>
  void                    Branch                   %378.2 -> BB380 (if true) | BB381 (if false)
BB379   <- [59]
  void                    Nop                !     
  val?^ | miss    %379.1 = %59.2
  dr              %379.2 = Typecheck@0x56498559d860[Type#48]
  goto BB60
BB364   <- [292]
  val?^ | miss    %364.0 = LdVar              eR    unlist, e0.4
  lgl$#-          %364.1 = Identical                %364.0, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Branch                   %364.1 -> BB368 (if true) | BB369 (if false)
BB365   <- [292]
  void                    Nop                !     
  lgl$#-          %365.1 = %292.1
  dr              %365.2 = DeadBranchReached@0x56498559d860[Test#77]
  goto BB286
BB289   <- [288, 370]
  val?^ | miss    %289.0 = LdVar              eR    y, e0.4
  lgl$#-          %289.1 = IsType                   %289.0 isA val?~- | miss
  void                    Branch                   %289.1 -> BB372 (if true) | BB373 (if false)
BB376   <- [374]
  val?~- | miss   %376.0 = CastType           d     dn %374.0
  val?-           %376.1 = Force!<value>            %376.0,    <str->
  (int|real)$-    %376.2 = CallSafeBuiltin    wed   length(%376.1)    <int$->
  lgl$#-          %376.3 = IsType                   %376.2 isA int$-
  void                    Branch                   %376.3 -> BB382 (if true) | BB383 (if false)
BB377   <- [374]
  void                    Nop                !     
  val?^ | miss    %377.1 = %374.0
  dr              %377.2 = Typecheck@0x56498559d860[Type#372]
  goto BB57
BB57   <- [375, 377]
  val?^ | miss    %57.0 = Phi                      %375.1:BB375, %377.1:BB377
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %375.2:BB375, %377.2:BB377
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x5649859c2d30+1214: [%342.0, 1L, %46.2, %366.0, 1L, %56.1], env=e0.4
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB380   <- [378]
  val?^ | miss    %380.0 = LdVar              eR    i, e0.4
  lgl$#-          %380.1 = IsType                   %380.0 isA int$-
  void                    Branch                   %380.1 -> BB384 (if true) | BB385 (if false)
BB381   <- [378]
  void                    Nop                !     
  lgl$#-          %381.1 = %378.2
  dr              %381.2 = DeadBranchReached@0x56498559d860[Test#10]
  goto BB60
BB60   <- [379, 381, 385]
  val?^ | miss    %60.0 = Phi                      %379.1:BB379, %381.1:BB381, %385.1:BB385
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %379.2:BB379, %381.2:BB381, %385.2:BB385
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x5649859c2d30+1243: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB368   <- [364]
  prom-           %368.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p42, e0.4
  ct              %368.1 = PushContext        lCL   %368.0, unlist(y), function(x, recursive=TRUE, use.names=TRUE) <(|..., e0.4
  val?^           %368.2 = CastType                 up %368.0
  env             e368.3 = MkEnv              l     x=%368.2, recursive(miss)=true, use.names(miss)=true, parent=R_BaseNamespace, context 1
  cls             %368.4 = MkCls                    unlist@127, e368.3
  cls             %368.5 = MkCls                    unlist>URapply@148, e368.3
  val?            %368.6 = Force!<lazy>       !vL   %368.2, e368.3   <vec->
  val?            %368.7 = CallBuiltin        !v    islistfactor(%368.6, true) e368.3
  lgl$#-          %368.8 = CheckTrueFalse     we    %368.7
  void                    Branch                   %368.8 -> BB296 (if true) | BB293 (if false)
BB369   <- [364]
  void                    Nop                !     
  val?^ | miss    %369.1 = %364.0
  dr              %369.2 = CallTarget@0x56498559d860[Call#88]
  goto BB286
BB286   <- [365, 369]
  val?^ | miss    %286.0 = Phi                      %365.1:BB365, %369.1:BB369
  val?^ | miss    %286.1 = %286.0
  dr              %286.2 = Phi                      %365.2:BB365, %369.2:BB369
  dr              %286.3 = %286.2
  fs              %286.4 = FrameState         R     0x5649859c2d30+7784: [%285.2], env=e0.4
  void                    Deopt              !v    %286.4, %286.3, %286.1   !
BB372   <- [289]
  val?~- | miss   %372.0 = CastType           d     dn %289.0
  void                    Visible            v     
  val?-           %372.2 = Force!<value>            %372.0,    <str$->
  void                    Return             l     %372.2
BB373   <- [289]
  fs              %373.0 = FrameState         R     0x5649859c2d30+7922: [], env=e0.4
  void                    Deopt              !v    %373.0, Typecheck@0x56498559d860[Type#421], %289.0   !
BB382   <- [376]
  int$-           %382.0 = CastType           d     dn %376.2
  lgl$#-          %382.1 = CheckTrueFalse     e     %382.0
  void                    Branch                   %382.1 -> BB277 (if true) | BB271 (if false)
BB383   <- [376]
  void                    Nop                !     
  (int|real)$-    %383.1 = %376.2
  dr              %383.2 = Typecheck@0x56498559d860[Type#373]
  goto BB269
BB384   <- [380]
  int$-           %384.0 = CastType           d     dn %380.0
  val?            %384.1 = Extract2_1D        wed   %378.1, %384.0, elided   <vec$->
  lgl$#-          %384.2 = IsType                   %384.1 isA val+   <true>
  lgl$#-          %384.3 = IsType                   %384.1 isA val?-
  void                    Branch                   %384.2 -> BB386 (if true) | BB387 (if false)
BB385   <- [380]
  void                    Nop                !     
  val?^ | miss    %385.1 = %380.0
  dr              %385.2 = Typecheck@0x56498559d860[Type#50]
  goto BB60
BB296   <- [368]
  val?^ | miss    %296.0 = LdVar              eR    recursive, e368.3
  val?            %296.1 = Force!             !v    %296.0, e368.3   <val?_>
  lgl$#-          %296.2 = CheckTrueFalse     we    %296.1
  void                    Branch                   %296.2 -> BB299 (if true) | BB297 (if false)
BB293   <- [368]
  val?^ | miss    %293.0 = LdVar              eR    x, e368.3
  val?            %293.1 = Force!<wrapped>    !v    %293.0, e368.3   <vec->
  val?^ | miss    %293.2 = LdVar              eR    recursive, e368.3
  val?            %293.3 = Force!<wrapped>    !v    %293.2, e368.3   <lgl$->
  val?^ | miss    %293.4 = LdVar              eR    use.names, e368.3
  val?            %293.5 = Force!<lazy>       !v    %293.4, e368.3   <lgl$->
  val?            %293.6 = CallBuiltin        !v    unlist(%293.1, %293.3, %293.5) e368.3
  val?            %293.7 = PopContext         C     %293.6, %368.1   <str$->
  lgl$#-          %293.8 = IsType                   %293.7 isA val?-
  void                    Branch                   %293.8 -> BB370 (if true) | BB371 (if false)
BB277   <- [382]
  val?^ | miss    %277.0 = LdVar              eR    c, e0.4
  lgl$#-          %277.1 = Identical                <blt c>, %277.0   <true>
  void                    Branch                   %277.1 -> BB388 (if true) | BB389 (if false)
BB271   <- [382]
  val?^ | miss    %271.0 = LdVar              eR    c, e0.4
  lgl$#-          %271.1 = Identical                <blt c>, %271.0   <@?>
  void                    Branch                   %271.1 -> BB273 (if true) | BB272 (if false)
BB269   <- [383, 389, 391, 393, 395]
  val?^ | miss    %269.0 = Phi                      %383.1:BB383, %389.1:BB389, %391.1:BB391, %393.1:BB393, %395.1:BB395
  val?^ | miss    %269.1 = %269.0
  dr              %269.2 = Phi                      %383.2:BB383, %389.2:BB389, %391.2:BB391, %393.2:BB393, %395.2:BB395
  dr              %269.3 = %269.2
  fs              %269.4 = FrameState         R     0x5649859c2d30+7063: [%342.0, 1L, %46.2, %376.2], env=e0.4
  void                    Deopt              !v    %269.4, %269.3, %269.1   !
BB386   <- [384]
  void                    Branch                   %384.3 -> BB398 (if true) | BB399 (if false)
BB387   <- [384]
  void                    Nop                !     
  lgl$#-          %387.1 = %384.2
  dr              %387.2 = DeadBranchReached@0x56498559d860[Test#11]
  goto BB62
BB299   <- [296]
  void                    Nop                !     
  cls             %299.1 = %368.5
  goto BB298
BB297   <- [296]
  void                    Nop                !     
  cls             %297.1 = %368.4
  goto BB298
BB370   <- [293]
  val?-           %370.0 = CastType           d     dn %293.7   <str$->
  val+            %370.1 = CallSafeBuiltin    wed   as.character(%370.0)    <str$->
  void                    StVar              lW    y, %370.1, e0.4
  goto BB289
BB371   <- [293]
  fs              %371.0 = FrameState         R     0x5649859c2d30+7886: [<blt as.character>, %293.7], env=e0.4
  void                    Deopt              !v    %371.0, Typecheck@0x56498559d860[Type#419], %293.7   !
BB388   <- [277]
  val?^ | miss    %388.0 = LdVar              eR    y, e0.4
  lgl$#-          %388.1 = IsType                   %388.0 isA val?~- | miss
  void                    Branch                   %388.1 -> BB390 (if true) | BB391 (if false)
BB389   <- [277]
  void                    Nop                !     
  lgl$#-          %389.1 = %277.1
  dr              %389.2 = DeadBranchReached@0x56498559d860[Test#69]
  goto BB269
BB273   <- [271]
  val?^ | miss    %273.0 = LdVar              eR    y, e0.4
  val?            %273.1 = Force!             !v    %273.0, e0.4   <val?_>
  lgl$#-          %273.2 = IsType                   %273.1 isA val?+
  void                    Branch                   %273.2 -> BB396 (if true) | BB397 (if false)
BB272   <- [271]
  (cls|spec|blt)  %272.0 = LdFun              !v    c, e0.4
  fs              %272.1 = FrameState         R     0x5649859c2d30+7102: [%342.0, 1L, %46.2, %272.0], env=e0.4
  void                    Deopt              !v    %272.1, DeadCall@0x56498559d860[Call#72], %272.0   !
BB398   <- [386]
  val?-           %398.0 = CastType           d     dn %384.1   <vec$->
  val?            %398.1 = Extract2_1D        wed   %398.0, %59.0, elided   <str->
  void                    StVar              lW    words, %398.1, e0.4
  lgl$#-          %398.3 = IsType                   %398.1 isA val?-
  val?^ | miss    %398.4 = LdVar              eR    nchar, e0.4
  lgl$#-          %398.5 = Identical                %398.4, function(x, type="chars", allowNA=FALSE, keepN|...
  void                    Branch                   %398.5 -> BB400 (if true) | BB401 (if false)
BB399   <- [386]
  void                    Nop                !     
  val?            %399.1 = %384.1
  dr              %399.2 = Typecheck@0x56498559d860[Type#51]
  goto BB62
BB62   <- [387, 399]
  val?^ | miss    %62.0 = Phi                      %387.1:BB387, %399.1:BB399
  val?^ | miss    %62.1 = %62.0
  dr              %62.2 = Phi                      %387.2:BB387, %399.2:BB399
  dr              %62.3 = %62.2
  fs              %62.4 = FrameState         R     0x5649859c2d30+1303: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %384.1], env=e0.4
  void                    Deopt              !v    %62.4, %62.3, %62.1   !
BB298   <- [299, 297]
  fs              %298.0 = FrameState         R     0x5649859c2d30+7886: [<blt as.character>], env=e0.4
  cls             %298.1 = Phi                      %297.1:BB297, %299.1:BB299
  cls             %298.2 = %298.1
  void                    StVar              lW    URapply, %298.2, e368.3
  (cls|spec|blt)  %298.4 = LdFun              !v    unique, e368.3
  fs              %298.5 = FrameState         R     0x564985746e30+178: [%298.4], env=e368.3, next=%298.0
  void                    Deopt              !v    %298.5, DeadCall@0x56498533f840[Call#0], %298.4   !
BB390   <- [388]
  val?~- | miss   %390.0 = CastType           d     dn %388.0
  val?-           %390.1 = Force!<value>            %390.0,    <vec->
  val?^ | miss    %390.2 = LdVar              eR    list, e0.4
  lgl$#-          %390.3 = Identical                <blt list>, %390.2   <true>
  void                    Branch                   %390.3 -> BB392 (if true) | BB393 (if false)
BB391   <- [388]
  void                    Nop                !     
  val?^ | miss    %391.1 = %388.0
  dr              %391.2 = Typecheck@0x56498559d860[Type#385]
  goto BB269
BB396   <- [273]
  val?+           %396.0 = CastType           d     dn %273.1   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %396.1 = CallSafeBuiltin    wed   c(%396.0, "")    <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %396.2 = %396.1
  goto BB276
BB397   <- [273]
  fs              %397.0 = FrameState         R     0x5649859c2d30+7148: [%342.0, 1L, %46.2, <blt c>, %273.1], env=e0.4
  void                    Deopt              !v    %397.0, Typecheck@0x56498559d860[Type#375], %273.1   !
BB400   <- [398]
  val             %400.0 = ChkMissing         e     %398.1
  void                    Branch                   %398.3 -> BB402 (if true) | BB403 (if false)
BB401   <- [398]
  void                    Nop                !     
  val?^ | miss    %401.1 = %398.4
  dr              %401.2 = CallTarget@0x56498559d860[Call#17]
  goto BB64
BB392   <- [390]
  lgl$#-          %392.0 = IsType                   %376.1 isA val+   <true>
  void                    Branch                   %392.0 -> BB394 (if true) | BB395 (if false)
BB393   <- [390]
  void                    Nop                !     
  lgl$#-          %393.1 = %390.3
  dr              %393.2 = DeadBranchReached@0x56498559d860[Test#71]
  goto BB269
BB276   <- [394, 396]
  val+            %276.0 = Phi                      %396.2:BB396, %394.4:BB394
  val+            %276.1 = %276.0
  void                    StVar              lW    y, %276.1, e0.4
  int$-           %276.3 = %46.2
  goto BB46
BB402   <- [400]
  val?-           %402.0 = CastType           d     dn %398.1   <str->
  val+            %402.1 = CallSafeBuiltin    wed   nchar(%402.0, "w", false, na-lgl)    <int->
  void                    StVar              lW    nc, %402.1, e0.4
  lgl$#-          %402.3 = IsType                   %402.1 isA int-
  val?^ | miss    %402.4 = LdVar              eR    anyNA, e0.4
  lgl$#-          %402.5 = Identical                <blt anyNA>, %402.4   <true>
  void                    Branch                   %402.5 -> BB404 (if true) | BB405 (if false)
BB403   <- [400]
  void                    Nop                !     
  val?            %403.1 = %398.1
  dr              %403.2 = Typecheck@0x564985b50c50[Type#0]
  goto BB64
BB64   <- [401, 403]
  val?^ | miss    %64.0 = Phi                      %401.1:BB401, %403.1:BB403
  val?^ | miss    %64.1 = %64.0
  dr              %64.2 = Phi                      %401.2:BB401, %403.2:BB403
  dr              %64.3 = %64.2
  fs              %64.4 = FrameState         R     0x5649859c2d30+1370: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %64.4, %64.3, %64.1   !
BB394   <- [392]
  int$-           %394.0 = Minus              d     %382.0, elided
  val?            %394.1 = Extract1_1D        wed   %376.1, %394.0, elided   <str$->
  val+            %394.2 = CallSafeBuiltin    wed   list(%394.1)    <vec$->
  val+            %394.3 = CallSafeBuiltin    wed   c(%390.1, %394.2)    <vec$->
  val+            %394.4 = %394.3
  goto BB276
BB395   <- [392]
  void                    Nop                !     
  lgl$#-          %395.1 = %392.0
  dr              %395.2 = DeadBranchReached@0x56498559d860[Test#73]
  goto BB269
BB404   <- [402]
  void                    Branch                   %402.3 -> BB406 (if true) | BB407 (if false)
BB405   <- [402]
  void                    Nop                !     
  lgl$#-          %405.1 = %402.5
  dr              %405.2 = DeadBranchReached@0x56498559d860[Test#12]
  goto BB66
BB406   <- [404]
  int-            %406.0 = CastType           d     dn %402.1
  val+            %406.1 = CallSafeBuiltin    wed   anyNA(%406.0)    <lgl$->
  lgl$#-          %406.2 = IsType                   %406.1 isA lgl$-
  void                    Branch                   %406.2 -> BB408 (if true) | BB409 (if false)
BB407   <- [404]
  void                    Nop                !     
  val+            %407.1 = %402.1
  dr              %407.2 = Typecheck@0x56498559d860[Type#56]
  goto BB66
BB66   <- [405, 407]
  val?^ | miss    %66.0 = Phi                      %405.1:BB405, %407.1:BB407
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %405.2:BB405, %407.2:BB407
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x5649859c2d30+1429: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %66.4, %66.3, %66.1   !
BB408   <- [406]
  lgl$-           %408.0 = CastType           d     dn %406.1
  lgl$#-          %408.1 = CheckTrueFalse     e     %408.0
  void                    Branch                   %408.1 -> BB267 (if true) | BB70 (if false)
BB409   <- [406]
  void                    Nop                !     
  val+            %409.1 = %406.1
  dr              %409.2 = Typecheck@0x56498559d860[Type#59]
  goto BB68
BB267   <- [408]
  (cls|spec|blt)  %267.0 = LdFun              !v    nchar, e0.4
  fs              %267.1 = FrameState         R     0x5649859c2d30+1541: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %267.0], env=e0.4
  void                    Deopt              !v    %267.1, DeadCall@0x56498559d860[Call#19], %267.0   !
BB70   <- [408]
  val?^ | miss    %70.0 = LdVar              eR    any, e0.4
  lgl$#-          %70.1 = Identical                <blt any>, %70.0   <true>
  void                    Branch                   %70.1 -> BB410 (if true) | BB411 (if false)
BB68   <- [409, 411]
  val?^ | miss    %68.0 = Phi                      %409.1:BB409, %411.1:BB411
  val?^ | miss    %68.1 = %68.0
  dr              %68.2 = Phi                      %409.2:BB409, %411.2:BB411
  dr              %68.3 = %68.2
  fs              %68.4 = FrameState         R     0x5649859c2d30+1520: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %406.1], env=e0.4
  void                    Deopt              !v    %68.4, %68.3, %68.1   !
BB410   <- [70]
  lgl-            %410.0 = Eq                 wed   %406.0, 0L, elided   <lgl->
  val?            %410.1 = CallBuiltin        !v    any(%410.0) e0.4   <lgl$->
  lgl$#-          %410.2 = IsType                   %410.1 isA lgl$-
  void                    Branch                   %410.2 -> BB412 (if true) | BB413 (if false)
BB411   <- [70]
  void                    Nop                !     
  lgl$#-          %411.1 = %70.1
  dr              %411.2 = DeadBranchReached@0x56498559d860[Test#16]
  goto BB68
BB412   <- [410]
  lgl$-           %412.0 = CastType           d     dn %410.1
  lgl$#-          %412.1 = CheckTrueFalse     e     %412.0
  void                    Branch                   %412.1 -> BB266 (if true) | BB73 (if false)
BB413   <- [410]
  void                    Nop                !     
  val?            %413.1 = %410.1
  dr              %413.2 = Typecheck@0x56498559d860[Type#77]
  goto BB71
BB266   <- [412]
  (cls|spec|blt)  %266.0 = LdFun              !v    which, e0.4
  fs              %266.1 = FrameState         R     0x5649859c2d30+1999: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %266.0], env=e0.4
  void                    Deopt              !v    %266.1, DeadCall@0x56498559d860[Call#24], %266.0   !
BB73   <- [412]
  val?^ | miss    %73.0 = LdVar              eR    length, e0.4
  lgl$#-          %73.1 = Identical                <blt length>, %73.0   <true>
  void                    Branch                   %73.1 -> BB414 (if true) | BB415 (if false)
BB71   <- [413, 415, 417]
  val?^ | miss    %71.0 = Phi                      %413.1:BB413, %415.1:BB415, %417.1:BB417
  val?^ | miss    %71.1 = %71.0
  dr              %71.2 = Phi                      %413.2:BB413, %415.2:BB415, %417.2:BB417
  dr              %71.3 = %71.2
  fs              %71.4 = FrameState         R     0x5649859c2d30+1978: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %410.1], env=e0.4
  void                    Deopt              !v    %71.4, %71.3, %71.1   !
BB414   <- [73]
  val?^ | miss    %414.0 = LdVar              eR    words, e0.4
  lgl$#-          %414.1 = IsType                   %414.0 isA val?~- | miss
  void                    Branch                   %414.1 -> BB416 (if true) | BB417 (if false)
BB415   <- [73]
  void                    Nop                !     
  lgl$#-          %415.1 = %73.1
  dr              %415.2 = DeadBranchReached@0x56498559d860[Test#21]
  goto BB71
BB416   <- [414]
  val?~- | miss   %416.0 = CastType           d     dn %414.0
  val?-           %416.1 = Force!<value>            %416.0,    <str->
  (int|real)$-    %416.2 = CallSafeBuiltin    wed   length(%416.1)    <int$->
  lgl$#-          %416.3 = IsType                   %416.2 isA int$-
  void                    Branch                   %416.3 -> BB418 (if true) | BB419 (if false)
BB417   <- [414]
  void                    Nop                !     
  val?^ | miss    %417.1 = %414.0
  dr              %417.2 = Typecheck@0x56498559d860[Type#105]
  goto BB71
BB418   <- [416]
  int$-           %418.0 = CastType           d     dn %416.2
  lgl$-           %418.1 = Not                d     %418.0, elided
  lgl$#-          %418.2 = CheckTrueFalse     e     %418.1
  void                    Branch                   %418.2 -> BB261 (if true) | BB76 (if false)
BB419   <- [416]
  fs              %419.0 = FrameState         R     0x5649859c2d30+2495: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %416.2], env=e0.4
  void                    Deopt              !v    %419.0, Typecheck@0x56498559d860[Type#106], %416.2   !
BB261   <- [418]
  val?^ | miss    %261.0 = LdVar              eR    c, e0.4
  lgl$#-          %261.1 = Identical                <blt c>, %261.0   <@?>
  void                    Branch                   %261.1 -> BB263 (if true) | BB262 (if false)
BB76   <- [418]
  void                    StVar              lW    currentIndex, 0L, e0.4
  void                    StVar              lW    lowerBlockIndex, 1L, e0.4
  val?^ | miss    %76.2 = LdVar              eR    integer, e0.4
  lgl$#-          %76.3 = Identical                %76.2, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Branch                   %76.3 -> BB424 (if true) | BB425 (if false)
BB263   <- [261]
  val?^ | miss    %263.0 = LdVar              eR    yi, e0.4
  val?            %263.1 = Force!             !v    %263.0, e0.4   <val?_>
  val?^ | miss    %263.2 = LdVar              eR    initial, e0.4
  val?            %263.3 = Force!             !v    %263.2, e0.4   <val?_>
  lgl$#-          %263.4 = IsType                   %263.3 isA val?+
  lgl$#-          %263.5 = IsType                   %263.1 isA val?+
  void                    Branch                   %263.5 -> BB420 (if true) | BB421 (if false)
BB262   <- [261]
  (cls|spec|blt)  %262.0 = LdFun              !v    c, e0.4
  fs              %262.1 = FrameState         R     0x5649859c2d30+2540: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %262.0], env=e0.4
  void                    Deopt              !v    %262.1, DeadCall@0x56498559d860[Call#31], %262.0   !
BB424   <- [76]
  int-            %424.0 = CallSafeBuiltin    wed   vector("integer", 0L)    <int->
  void                    StVar              lW    upperBlockIndex, %424.0, e0.4
  val?^ | miss    %424.2 = LdVar              eR    cumsum, e0.4
  lgl$#-          %424.3 = Identical                <blt cumsum>, %424.2   <true>
  void                    Branch                   %424.3 -> BB426 (if true) | BB427 (if false)
BB425   <- [76]
  fs              %425.0 = FrameState         R     0x5649859c2d30+2687: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %425.0, CallTarget@0x56498559d860[Call#32], %76.2   !
BB420   <- [263]
  val?+           %420.0 = CastType           d     dn %263.1   <val?_>
  void                    Branch                   %263.4 -> BB422 (if true) | BB423 (if false)
BB421   <- [263]
  void                    Nop                !     
  val?            %421.1 = %263.1
  dr              %421.2 = Typecheck@0x56498559d860[Type#109]
  goto BB264
BB426   <- [424]
  val?^ | miss    %426.0 = LdVar              eR    nc, e0.4
  lgl$#-          %426.1 = IsType                   %426.0 isA int-
  void                    Branch                   %426.1 -> BB428 (if true) | BB429 (if false)
BB427   <- [424]
  void                    Nop                !     
  lgl$#-          %427.1 = %424.3
  dr              %427.2 = DeadBranchReached@0x56498559d860[Test#23]
  goto BB79
BB422   <- [420]
  val?+           %422.0 = CastType           d     dn %263.3   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %422.1 = CallSafeBuiltin    wed   c(%420.0, "", %422.0)    <val?_>
  void                    StVar              lW    yi, %422.1, e0.4
  int$-           %422.3 = %56.2
  goto BB56
BB423   <- [420]
  void                    Nop                !     
  val?            %423.1 = %263.3
  dr              %423.2 = Typecheck@0x56498559d860[Type#110]
  goto BB264
BB264   <- [421, 423]
  val?^ | miss    %264.0 = Phi                      %421.1:BB421, %423.1:BB423
  val?^ | miss    %264.1 = %264.0
  dr              %264.2 = Phi                      %421.2:BB421, %423.2:BB423
  dr              %264.3 = %264.2
  fs              %264.4 = FrameState         R     0x5649859c2d30+2611: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %263.1, "", %263.3], env=e0.4
  void                    Deopt              !v    %264.4, %264.3, %264.1   !
BB428   <- [426]
  int-            %428.0 = CastType           d     dn %426.0
  int-            %428.1 = Add                wed   %428.0, 1L, elided   <int->
  val+            %428.2 = CallSafeBuiltin    wed   cumsum(%428.1)    <int->
  void                    StVar              lW    lens, %428.2, e0.4
  void                    StVar              lW    first, true, e0.4
  val?^ | miss    %428.5 = LdVar              eR    width, e0.4
  val?            %428.6 = Force!<value>      !v    %428.5, e0.4   <int$->
  val?^ | miss    %428.7 = LdVar              eR    nchar, e0.4
  lgl$#-          %428.8 = Identical                %428.7, function(x, type="chars", allowNA=FALSE, keepN|...
  void                    Branch                   %428.8 -> BB430 (if true) | BB431 (if false)
BB429   <- [426]
  void                    Nop                !     
  val?^ | miss    %429.1 = %426.0
  dr              %429.2 = Typecheck@0x56498559d860[Type#115]
  goto BB79
BB79   <- [427, 429]
  val?^ | miss    %79.0 = Phi                      %427.1:BB427, %429.1:BB429
  val?^ | miss    %79.1 = %79.0
  dr              %79.2 = Phi                      %427.2:BB427, %429.2:BB429
  dr              %79.3 = %79.2
  fs              %79.4 = FrameState         R     0x5649859c2d30+2728: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %79.4, %79.3, %79.1   !
BB430   <- [428]
  val?^ | miss    %430.0 = LdVar              eR    initial, e0.4
  val?            %430.1 = Force!<lazy>       !v    %430.0, e0.4   <str$->
  lgl$#-          %430.2 = IsType                   %430.1 isA val?-
  void                    Branch                   %430.2 -> BB432 (if true) | BB433 (if false)
BB431   <- [428]
  fs              %431.0 = FrameState         R     0x5649859c2d30+2869: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %428.6], env=e0.4
  void                    Deopt              !v    %431.0, CallTarget@0x56498559d860[Call#34], %428.7   !
BB432   <- [430]
  val?-           %432.0 = CastType           d     dn %430.1   <str->
  val+            %432.1 = CallSafeBuiltin    wed   nchar(%432.0, "w", false, na-lgl)    <int$->
  lgl$#-          %432.2 = IsType                   %432.1 isA int$-
  void                    Branch                   %432.2 -> BB434 (if true) | BB435 (if false)
BB433   <- [430]
  prom-           %433.0 = MkArg                    %430.1, strwrap[0x5649854b8c40]_p11 (!refl), e0.4
  val?~           %433.1 = CastType                 up %433.0
  fs              %433.2 = FrameState         R     0x5649859c2d30+2919: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %428.6], env=e0.4
  env             e433.3 = (MkEnv)            l     keepNA(miss)=na-lgl, allowNA(miss)=false, type="w", x=%433.1, parent=R_BaseNamespace, context 0
  fs              %433.4 = FrameState         R     0x5649857db6a0+9: [%430.1], env=e433.3, next=%433.2
  void                    Deopt              !v    %433.4, Typecheck@0x564985b50c50[Type#0], %430.1   !
BB434   <- [432]
  int$-           %434.0 = CastType           d     dn %432.1
  lgl$#-          %434.1 = IsType                   %428.6 isA int$-
  void                    Branch                   %434.1 -> BB436 (if true) | BB437 (if false)
BB435   <- [432]
  void                    Nop                !     
  val+            %435.1 = %432.1
  dr              %435.2 = Typecheck@0x56498559d860[Type#120]
  goto BB85
BB436   <- [434]
  int$-           %436.0 = CastType           d     dn %428.6
  int$-           %436.1 = Sub                d     %436.0, %434.0, elided   <int$->
  val?^ | miss    %436.2 = LdVar              eR    indent, e0.4
  lgl$#-          %436.3 = IsType                   %436.2 isA int$-
  void                    Branch                   %436.3 -> BB438 (if true) | BB439 (if false)
BB437   <- [434]
  void                    Nop                !     
  val?            %437.1 = %428.6
  dr              %437.2 = Typecheck@0x56498559d860[Type#118]
  goto BB85
BB85   <- [435, 437, 439]
  val?^ | miss    %85.0 = Phi                      %435.1:BB435, %437.1:BB437, %439.1:BB439
  val?^ | miss    %85.1 = %85.0
  dr              %85.2 = Phi                      %435.2:BB435, %437.2:BB437, %439.2:BB439
  dr              %85.3 = %85.2
  prom-           %85.4 = MkArg                    %432.0, strwrap[0x5649854b8c40]_p11 (!refl), e0.4
  val?~           %85.5 = CastType                 up %85.4
  fs              %85.6 = FrameState         R     0x5649859c2d30+2919: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %428.6], env=e0.4
  env             e85.7 = (MkEnv)            l     keepNA(miss)=na-lgl, allowNA(miss)=false, type="w", x=%85.5, parent=R_BaseNamespace, context 0
  fs              %85.8 = FrameState         R     0x5649857db6a0+69: [%432.1], env=e85.7, next=%85.6
  void                    Deopt              !v    %85.8, %85.3, %85.1   !
BB438   <- [436]
  int$-           %438.0 = CastType           d     dn %436.2
  int$-           %438.1 = Sub                d     %436.1, %438.0, elided   <int$->
  void                    StVar              lW    maxLength, %438.1, e0.4
  val?^ | miss    %438.3 = LdVar              eR    length, e0.4
  lgl$#-          %438.4 = Identical                <blt length>, %438.3   <true>
  void                    Branch                   %438.4 -> BB440 (if true) | BB441 (if false)
BB439   <- [436]
  void                    Nop                !     
  val?^ | miss    %439.1 = %436.2
  dr              %439.2 = Typecheck@0x56498559d860[Type#122]
  goto BB85
BB440   <- [438]
  val?^ | miss    %440.0 = LdVar              eR    lens, e0.4
  lgl$#-          %440.1 = IsType                   %440.0 isA int-
  void                    Branch                   %440.1 -> BB442 (if true) | BB443 (if false)
BB441   <- [438]
  void                    Nop                !     
  lgl$#-          %441.1 = %438.4
  dr              %441.2 = DeadBranchReached@0x56498559d860[Test#24]
  goto BB87
BB442   <- [440]
  int-            %442.0 = CastType           d     dn %440.0
  (int|real)$-    %442.1 = CallSafeBuiltin    wed   length(%442.0)    <int$->
  lgl$#-          %442.2 = IsType                   %442.1 isA int$-
  void                    Branch                   %442.2 -> BB444 (if true) | BB445 (if false)
BB443   <- [440]
  void                    Nop                !     
  val?^ | miss    %443.1 = %440.0
  dr              %443.2 = Typecheck@0x56498559d860[Type#125]
  goto BB87
BB87   <- [441, 443]
  val?^ | miss    %87.0 = Phi                      %441.1:BB441, %443.1:BB443
  val?^ | miss    %87.1 = %87.0
  dr              %87.2 = Phi                      %441.2:BB441, %443.2:BB443
  dr              %87.3 = %87.2
  fs              %87.4 = FrameState         R     0x5649859c2d30+2959: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %87.4, %87.3, %87.1   !
BB444   <- [442]
  int$-           %444.0 = CastType           d     dn %442.1
  lgl$#-          %444.1 = CheckTrueFalse     e     %444.0   <true>
  void                    Branch                   %444.1 -> BB446 (if true) | BB447 (if false)
BB445   <- [442]
  void                    Nop                !     
  (int|real)$-    %445.1 = %442.1
  dr              %445.2 = Typecheck@0x56498559d860[Type#126]
  goto BB89
BB446   <- [444]
  val?^ | miss    %446.0 = LdVar              eR    max, e0.4
  lgl$#-          %446.1 = Identical                <blt max>, %446.0   <true>
  void                    Branch                   %446.1 -> BB448 (if true) | BB449 (if false)
BB447   <- [444]
  void                    Nop                !     
  lgl$#-          %447.1 = %444.1
  dr              %447.2 = DeadBranchReached@0x56498559d860[Test#25]
  goto BB89
BB89   <- [445, 447, 449, 451]
  val?^ | miss    %89.0 = Phi                      %445.1:BB445, %447.1:BB447, %449.1:BB449, %451.1:BB451
  val?^ | miss    %89.1 = %89.0
  dr              %89.2 = Phi                      %445.2:BB445, %447.2:BB447, %449.2:BB449, %451.2:BB451
  dr              %89.3 = %89.2
  fs              %89.4 = FrameState         R     0x5649859c2d30+3050: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %442.1], env=e0.4
  void                    Deopt              !v    %89.4, %89.3, %89.1   !
BB448   <- [446]
  val?^ | miss    %448.0 = LdVar              eR    sum, e0.4
  lgl$#-          %448.1 = Identical                <blt sum>, %448.0   <true>
  void                    Branch                   %448.1 -> BB450 (if true) | BB451 (if false)
BB449   <- [446]
  void                    Nop                !     
  lgl$#-          %449.1 = %446.1
  dr              %449.2 = DeadBranchReached@0x56498559d860[Test#26]
  goto BB89
BB450   <- [448]
  lgl-            %450.0 = Lte                wed   %442.0, %438.1, elided   <lgl->
  int$-           %450.1 = CallSafeBuiltin    wed   sum(%450.0)    <int$->
  int$-           %450.2 = CallSafeBuiltin    wed   max(%450.1, 1L)    <int$->
  void                    StVar              lW    k, %450.2, e0.4
  val?^ | miss    %450.4 = LdVar              eR    first, e0.4
  lgl$#-          %450.5 = IsType                   %450.4 isA lgl$-
  void                    Branch                   %450.5 -> BB452 (if true) | BB453 (if false)
BB451   <- [448]
  void                    Nop                !     
  lgl$#-          %451.1 = %448.1
  dr              %451.2 = DeadBranchReached@0x56498559d860[Test#27]
  goto BB89
BB452   <- [450]
  lgl$-           %452.0 = CastType           d     dn %450.4
  lgl$#-          %452.1 = CheckTrueFalse     e     %452.0
  void                    Branch                   %452.1 -> BB254 (if true) | BB93 (if false)
BB453   <- [450]
  fs              %453.0 = FrameState         R     0x5649859c2d30+3284: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %453.0, Typecheck@0x56498559d860[Type#139], %450.4   !
BB254   <- [452]
  void                    StVar              lW    first, false, e0.4
  val?^ | miss    %254.1 = LdVar              eR    width, e0.4
  val?            %254.2 = Force!<value>      !v    %254.1, e0.4   <int$->
  val?^ | miss    %254.3 = LdVar              eR    nchar, e0.4
  lgl$#-          %254.4 = Identical                %254.3, function(x, type="chars", allowNA=FALSE, keepN|...
  void                    Branch                   %254.4 -> BB454 (if true) | BB455 (if false)
BB93   <- [452]
  void                    Nop                !     
  goto BB94
BB454   <- [254]
  val?^ | miss    %454.0 = LdVar              eR    prefix, e0.4
  val?            %454.1 = Force!<wrapped>    !v    %454.0, e0.4   <str$->
  lgl$#-          %454.2 = IsType                   %454.1 isA val?-
  void                    Branch                   %454.2 -> BB456 (if true) | BB457 (if false)
BB455   <- [254]
  fs              %455.0 = FrameState         R     0x5649859c2d30+3333: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %254.2], env=e0.4
  void                    Deopt              !v    %455.0, CallTarget@0x56498559d860[Call#39], %254.3   !
BB94   <- [93, 466]
  val?^ | miss    %94.0 = LdVar              eR    currentIndex, e0.4
  lgl$#-          %94.1 = IsType                   %94.0 isA int$-
  void                    Branch                   %94.1 -> BB458 (if true) | BB459 (if false)
BB456   <- [454]
  val?-           %456.0 = CastType           d     dn %454.1   <str->
  val+            %456.1 = CallSafeBuiltin    wed   nchar(%456.0, "w", false, na-lgl)    <int$->
  lgl$#-          %456.2 = IsType                   %456.1 isA int$-
  void                    Branch                   %456.2 -> BB460 (if true) | BB461 (if false)
BB457   <- [454]
  prom-           %457.0 = MkArg                    %454.1, strwrap[0x5649854b8c40]_p40 (!refl), e0.4
  val?~           %457.1 = CastType                 up %457.0
  fs              %457.2 = FrameState         R     0x5649859c2d30+3383: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %254.2], env=e0.4
  env             e457.3 = (MkEnv)            l     keepNA(miss)=na-lgl, allowNA(miss)=false, type="w", x=%457.1, parent=R_BaseNamespace, context 0
  fs              %457.4 = FrameState         R     0x5649857db6a0+9: [%454.1], env=e457.3, next=%457.2
  void                    Deopt              !v    %457.4, Typecheck@0x564985b50c50[Type#0], %454.1   !
BB458   <- [94]
  int$-           %458.0 = CastType           d     dn %94.0
  val?^ | miss    %458.1 = LdVar              eR    k, e0.4
  lgl$#-          %458.2 = IsType                   %458.1 isA int$-
  void                    Branch                   %458.2 -> BB462 (if true) | BB463 (if false)
BB459   <- [94]
  void                    Nop                !     
  val?^ | miss    %459.1 = %94.0
  dr              %459.2 = Typecheck@0x56498559d860[Type#146]
  goto BB95
BB460   <- [456]
  int$-           %460.0 = CastType           d     dn %456.1
  lgl$#-          %460.1 = IsType                   %254.2 isA int$-
  void                    Branch                   %460.1 -> BB464 (if true) | BB465 (if false)
BB461   <- [456]
  void                    Nop                !     
  val+            %461.1 = %456.1
  dr              %461.2 = Typecheck@0x56498559d860[Type#142]
  goto BB259
BB462   <- [458]
  int$-           %462.0 = CastType           d     dn %458.1
  int$-           %462.1 = Add                d     %458.0, %462.0, elided   <int$->
  void                    StVar              lW    currentIndex, %462.1, e0.4
  val?^ | miss    %462.3 = LdVar              eR    nc, e0.4
  lgl$#-          %462.4 = IsType                   %462.3 isA int-
  void                    Branch                   %462.4 -> BB468 (if true) | BB469 (if false)
BB463   <- [458]
  void                    Nop                !     
  val?^ | miss    %463.1 = %458.1
  dr              %463.2 = Typecheck@0x56498559d860[Type#147]
  goto BB95
BB95   <- [459, 463]
  val?^ | miss    %95.0 = Phi                      %459.1:BB459, %463.1:BB463
  val?^ | miss    %95.1 = %95.0
  dr              %95.2 = Phi                      %459.2:BB459, %463.2:BB463
  dr              %95.3 = %95.2
  fs              %95.4 = FrameState         R     0x5649859c2d30+3423: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %95.4, %95.3, %95.1   !
BB464   <- [460]
  int$-           %464.0 = CastType           d     dn %254.2
  int$-           %464.1 = Sub                d     %464.0, %460.0, elided   <int$->
  val?^ | miss    %464.2 = LdVar              eR    exdent, e0.4
  lgl$#-          %464.3 = IsType                   %464.2 isA int$-
  void                    Branch                   %464.3 -> BB466 (if true) | BB467 (if false)
BB465   <- [460]
  void                    Nop                !     
  val?            %465.1 = %254.2
  dr              %465.2 = Typecheck@0x56498559d860[Type#140]
  goto BB259
BB259   <- [461, 465, 467]
  val?^ | miss    %259.0 = Phi                      %461.1:BB461, %465.1:BB465, %467.1:BB467
  val?^ | miss    %259.1 = %259.0
  dr              %259.2 = Phi                      %461.2:BB461, %465.2:BB465, %467.2:BB467
  dr              %259.3 = %259.2
  prom-           %259.4 = MkArg                    %456.0, strwrap[0x5649854b8c40]_p40 (!refl), e0.4
  val?~           %259.5 = CastType                 up %259.4
  fs              %259.6 = FrameState         R     0x5649859c2d30+3383: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %254.2], env=e0.4
  env             e259.7 = (MkEnv)            l     keepNA(miss)=na-lgl, allowNA(miss)=false, type="w", x=%259.5, parent=R_BaseNamespace, context 0
  fs              %259.8 = FrameState         R     0x5649857db6a0+69: [%456.1], env=e259.7, next=%259.6
  void                    Deopt              !v    %259.8, %259.3, %259.1   !
BB468   <- [462]
  int-            %468.0 = CastType           d     dn %462.3
  int-            %468.1 = Extract1_1D        wed   %468.0, %462.1, elided   <int$->
  lgl$#-          %468.2 = IsType                   %468.1 isA int$-
  void                    Branch                   %468.2 -> BB470 (if true) | BB471 (if false)
BB469   <- [462]
  fs              %469.0 = FrameState         R     0x5649859c2d30+3466: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %469.0, Typecheck@0x56498559d860[Type#149], %462.3   !
BB466   <- [464]
  int$-           %466.0 = CastType           d     dn %464.2
  int$-           %466.1 = Sub                d     %464.1, %466.0, elided   <int$->
  void                    StVar              lW    maxLength, %466.1, e0.4
  goto BB94
BB467   <- [464]
  void                    Nop                !     
  val?^ | miss    %467.1 = %464.2
  dr              %467.2 = Typecheck@0x56498559d860[Type#144]
  goto BB259
BB470   <- [468]
  int$-           %470.0 = CastType           d     dn %468.1
  lgl$-           %470.1 = Eq                 d     %470.0, 0L, elided   <lgl$->
  lgl$#-          %470.2 = CheckTrueFalse     e     %470.1
  void                    Branch                   %470.2 -> BB247 (if true) | BB101 (if false)
BB471   <- [468]
  void                    Nop                !     
  int-            %471.1 = %468.1
  dr              %471.2 = Typecheck@0x56498559d860[Type#152]
  goto BB99
BB247   <- [470]
  val?^ | miss    %247.0 = LdVar              eR    c, e0.4
  lgl$#-          %247.1 = Identical                <blt c>, %247.0   <@?>
  void                    Branch                   %247.1 -> BB249 (if true) | BB248 (if false)
BB101   <- [470]
  val?^ | miss    %101.0 = LdVar              eR    c, e0.4
  lgl$#-          %101.1 = Identical                <blt c>, %101.0   <true>
  void                    Branch                   %101.1 -> BB472 (if true) | BB473 (if false)
BB99   <- [471, 473, 475]
  val?^ | miss    %99.0 = Phi                      %471.1:BB471, %473.1:BB473, %475.1:BB475
  val?^ | miss    %99.1 = %99.0
  dr              %99.2 = Phi                      %471.2:BB471, %473.2:BB473, %475.2:BB475
  dr              %99.3 = %99.2
  fs              %99.4 = FrameState         R     0x5649859c2d30+3526: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %468.1], env=e0.4
  void                    Deopt              !v    %99.4, %99.3, %99.1   !
BB249   <- [247]
  val?^ | miss    %249.0 = LdVar              eR    upperBlockIndex, e0.4
  val?            %249.1 = Force!             !v    %249.0, e0.4   <val?_>
  val?^ | miss    %249.2 = LdVar              eR    currentIndex, e0.4
  val?            %249.3 = Force!             !v    %249.2, e0.4   <val?_>
  lgl$#-          %249.4 = IsType                   %249.3 isA val?+
  void                    Branch                   %249.4 -> BB478 (if true) | BB479 (if false)
BB248   <- [247]
  (cls|spec|blt)  %248.0 = LdFun              !v    c, e0.4
  fs              %248.1 = FrameState         R     0x5649859c2d30+3707: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %248.0], env=e0.4
  void                    Deopt              !v    %248.1, DeadCall@0x56498559d860[Call#41], %248.0   !
BB472   <- [101]
  val?^ | miss    %472.0 = LdVar              eR    upperBlockIndex, e0.4
  lgl$#-          %472.1 = IsType                   %472.0 isA int-
  void                    Branch                   %472.1 -> BB474 (if true) | BB475 (if false)
BB473   <- [101]
  void                    Nop                !     
  lgl$#-          %473.1 = %101.1
  dr              %473.2 = DeadBranchReached@0x56498559d860[Test#29]
  goto BB99
BB478   <- [249]
  val?+           %478.0 = CastType           d     dn %249.3   <val?_>
  (int|real|complex)+ %478.1 = Sub                wed   %478.0, 1L, elided   <val?_>
  lgl$#-          %478.2 = IsType                   %249.1 isA val?+
  void                    Branch                   %478.2 -> BB480 (if true) | BB481 (if false)
BB479   <- [249]
  fs              %479.0 = FrameState         R     0x5649859c2d30+3767: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %249.1, %249.3], env=e0.4
  void                    Deopt              !v    %479.0, Typecheck@0x56498559d860[Type#163], %249.3   !
BB474   <- [472]
  int-            %474.0 = CastType           d     dn %472.0
  int-            %474.1 = CallSafeBuiltin    wed   c(%474.0, %462.1)    <int$->
  lgl$#-          %474.2 = IsType                   %474.1 isA int$-
  void                    Branch                   %474.2 -> BB476 (if true) | BB477 (if false)
BB475   <- [472]
  void                    Nop                !     
  val?^ | miss    %475.1 = %472.0
  dr              %475.2 = Typecheck@0x56498559d860[Type#156]
  goto BB99
BB480   <- [478]
  val?+           %480.0 = CastType           d     dn %249.1   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %480.1 = CallSafeBuiltin    wed   c(%480.0, %478.1)    <val?_>
  void                    StVar              lW    upperBlockIndex, %480.1, e0.4
  goto BB104
BB481   <- [478]
  fs              %481.0 = FrameState         R     0x5649859c2d30+3779: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %249.1, %478.1], env=e0.4
  void                    Deopt              !v    %481.0, Typecheck@0x56498559d860[Type#162], %249.1   !
BB476   <- [474]
  int$-           %476.0 = CastType           d     dn %474.1
  void                    StVar              lW    upperBlockIndex, %476.0, e0.4
  goto BB104
BB477   <- [474]
  fs              %477.0 = FrameState         R     0x5649859c2d30+3660: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %474.1], env=e0.4
  void                    Deopt              !v    %477.0, Typecheck@0x56498559d860[Type#158], %474.1   !
BB104   <- [476, 480]
  val?^ | miss    %104.0 = LdVar              eR    length, e0.4
  lgl$#-          %104.1 = Identical                <blt length>, %104.0   <true>
  void                    Branch                   %104.1 -> BB482 (if true) | BB483 (if false)
BB482   <- [104]
  val?^ | miss    %482.0 = LdVar              eR    lens, e0.4
  lgl$#-          %482.1 = IsType                   %482.0 isA int-
  void                    Branch                   %482.1 -> BB484 (if true) | BB485 (if false)
BB483   <- [104]
  void                    Nop                !     
  lgl$#-          %483.1 = %104.1
  dr              %483.2 = DeadBranchReached@0x56498559d860[Test#31]
  goto BB105
BB484   <- [482]
  int-            %484.0 = CastType           d     dn %482.0
  (int|real)$-    %484.1 = CallSafeBuiltin    wed   length(%484.0)    <int$->
  lgl$#-          %484.2 = IsType                   %484.1 isA int$-
  void                    Branch                   %484.2 -> BB486 (if true) | BB487 (if false)
BB485   <- [482]
  void                    Nop                !     
  val?^ | miss    %485.1 = %482.0
  dr              %485.2 = Typecheck@0x56498559d860[Type#167]
  goto BB105
BB105   <- [483, 485]
  val?^ | miss    %105.0 = Phi                      %483.1:BB483, %485.1:BB485
  val?^ | miss    %105.1 = %105.0
  dr              %105.2 = Phi                      %483.2:BB483, %485.2:BB485
  dr              %105.3 = %105.2
  fs              %105.4 = FrameState         R     0x5649859c2d30+3815: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %105.4, %105.3, %105.1   !
BB486   <- [484]
  int$-           %486.0 = CastType           d     dn %484.1
  val?^ | miss    %486.1 = LdVar              eR    k, e0.4
  lgl$#-          %486.2 = IsType                   %486.1 isA int$-
  void                    Branch                   %486.2 -> BB488 (if true) | BB489 (if false)
BB487   <- [484]
  void                    Nop                !     
  (int|real)$-    %487.1 = %484.1
  dr              %487.2 = Typecheck@0x56498559d860[Type#168]
  goto BB107
BB488   <- [486]
  int$-           %488.0 = CastType           d     dn %486.1
  lgl$-           %488.1 = Gt                 d     %486.0, %488.0, elided   <lgl$->
  lgl$#-          %488.2 = CheckTrueFalse     e     %488.1
  void                    Branch                   %488.2 -> BB224 (if true) | BB109 (if false)
BB489   <- [486]
  void                    Nop                !     
  val?^ | miss    %489.1 = %486.1
  dr              %489.2 = Typecheck@0x56498559d860[Type#169]
  goto BB107
BB107   <- [487, 489]
  val?^ | miss    %107.0 = Phi                      %487.1:BB487, %489.1:BB489
  val?^ | miss    %107.1 = %107.0
  dr              %107.2 = Phi                      %487.2:BB487, %489.2:BB489
  dr              %107.3 = %107.2
  fs              %107.4 = FrameState         R     0x5649859c2d30+3906: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %484.1], env=e0.4
  void                    Deopt              !v    %107.4, %107.3, %107.1   !
BB224   <- [488]
  val?^ | miss    %224.0 = LdVar              eR    nc, e0.4
  val?            %224.1 = Force!             !v    %224.0, e0.4   <val?_>
  lgl$#-          %224.2 = IsType                   %224.1 isA val+   <@?>
  void                    Branch                   %224.2 -> BB244 (if true) | BB225 (if false)
BB109   <- [488]
  void                    Nop                !     
  goto BB110
BB244   <- [224]
  val?^ | miss    %244.0 = LdVar              eR    currentIndex, e0.4
  val?            %244.1 = Force!             !v    %244.0, e0.4   <val?_>
  lgl$#-          %244.2 = IsType                   %244.1 isA val?+
  void                    Branch                   %244.2 -> BB498 (if true) | BB499 (if false)
BB225   <- [224]
  prom-           %225.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p39, e0.4
  prom-           %225.1 = %225.0
  goto BB226
BB110   <- [109, 516]
  val?^ | miss    %110.0 = LdVar              eR    length, e0.4
  lgl$#-          %110.1 = Identical                <blt length>, %110.0   <true>
  void                    Branch                   %110.1 -> BB490 (if true) | BB491 (if false)
BB498   <- [244]
  val?+           %498.0 = CastType           d     dn %244.1   <val?_>
  (int|real|complex)+ %498.1 = Add                wed   %498.0, 1L, elided   <val?_>
  (int|real|complex)+ %498.2 = %498.1
  goto BB226
BB499   <- [244]
  fs              %499.0 = FrameState         R     0x5649859c2d30+3996: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %224.1, %244.1], env=e0.4
  void                    Deopt              !v    %499.0, Typecheck@0x56498559d860[Type#174], %244.1   !
BB226   <- [225, 498]
  (int|real|complex|prom)+ %226.0 = Phi                      %498.2:BB498, %225.1:BB225
  (int|real|complex|prom)+ %226.1 = %226.0
  lgl$#-          %226.2 = IsType                   %224.1 isA val?+
  void                    Branch                   %226.2 -> BB500 (if true) | BB501 (if false)
BB490   <- [110]
  val?^ | miss    %490.0 = LdVar              eR    lens, e0.4
  lgl$#-          %490.1 = IsType                   %490.0 isA int-
  void                    Branch                   %490.1 -> BB492 (if true) | BB493 (if false)
BB491   <- [110]
  void                    Nop                !     
  lgl$#-          %491.1 = %110.1
  dr              %491.2 = DeadBranchReached@0x56498559d860[Test#34]
  goto BB111
BB500   <- [226]
  val?+           %500.0 = CastType           d     dn %224.1   <val?_>
  val?            %500.1 = Extract1_1D        wed   %500.0, %226.1, elided   <val?_>
  lgl$#-          %500.2 = IsType                   %500.1 isA val?+
  void                    Branch                   %500.2 -> BB502 (if true) | BB503 (if false)
BB501   <- [226]
  fs              %501.0 = FrameState         R     0x5649859c2d30+4013: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %224.1, %226.1], env=e0.4
  void                    Deopt              !v    %501.0, Typecheck@0x56498559d860[Type#171], %224.1   !
BB492   <- [490]
  int-            %492.0 = CastType           d     dn %490.0
  (int|real)$-    %492.1 = CallSafeBuiltin    wed   length(%492.0)    <int$->
  lgl$#-          %492.2 = IsType                   %492.1 isA int$-
  void                    Branch                   %492.2 -> BB494 (if true) | BB495 (if false)
BB493   <- [490]
  void                    Nop                !     
  val?^ | miss    %493.1 = %490.0
  dr              %493.2 = Typecheck@0x56498559d860[Type#190]
  goto BB111
BB111   <- [491, 493]
  val?^ | miss    %111.0 = Phi                      %491.1:BB491, %493.1:BB493
  val?^ | miss    %111.1 = %111.0
  dr              %111.2 = Phi                      %491.2:BB491, %493.2:BB493
  dr              %111.3 = %111.2
  fs              %111.4 = FrameState         R     0x5649859c2d30+4249: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %111.4, %111.3, %111.1   !
BB502   <- [500]
  val?+           %502.0 = CastType           d     dn %500.1   <val?_>
  lgl             %502.1 = Eq                 wed   %502.0, 0L, elided   <val?_>
  lgl$#-          %502.2 = CheckTrueFalse     we    %502.1
  void                    Branch                   %502.2 -> BB239 (if true) | BB231 (if false)
BB503   <- [500]
  fs              %503.0 = FrameState         R     0x5649859c2d30+4014: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %500.1], env=e0.4
  void                    Deopt              !v    %503.0, Typecheck@0x56498559d860[Type#176], %500.1   !
BB494   <- [492]
  int$-           %494.0 = CastType           d     dn %492.1
  val?^ | miss    %494.1 = LdVar              eR    k, e0.4
  lgl$#-          %494.2 = IsType                   %494.1 isA int$-
  void                    Branch                   %494.2 -> BB496 (if true) | BB497 (if false)
BB495   <- [492]
  void                    Nop                !     
  (int|real)$-    %495.1 = %492.1
  dr              %495.2 = Typecheck@0x56498559d860[Type#191]
  goto BB113
BB239   <- [502]
  val?^ | miss    %239.0 = LdVar              eR    currentIndex, e0.4
  val?            %239.1 = Force!             !v    %239.0, e0.4   <val?_>
  lgl$#-          %239.2 = IsType                   %239.1 isA val?+
  void                    Branch                   %239.2 -> BB508 (if true) | BB509 (if false)
BB231   <- [502]
  void                    Nop                !     
  goto BB232
BB496   <- [494]
  int$-           %496.0 = CastType           d     dn %494.1
  lgl$-           %496.1 = Gt                 d     %494.0, %496.0, elided   <lgl$->
  lgl$#-          %496.2 = CheckTrueFalse     e     %496.1
  void                    Branch                   %496.2 -> BB221 (if true) | BB115 (if false)
BB497   <- [494]
  void                    Nop                !     
  val?^ | miss    %497.1 = %494.1
  dr              %497.2 = Typecheck@0x56498559d860[Type#192]
  goto BB113
BB113   <- [495, 497]
  val?^ | miss    %113.0 = Phi                      %495.1:BB495, %497.1:BB497
  val?^ | miss    %113.1 = %113.0
  dr              %113.2 = Phi                      %495.2:BB495, %497.2:BB497
  dr              %113.3 = %113.2
  fs              %113.4 = FrameState         R     0x5649859c2d30+4340: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %492.1], env=e0.4
  void                    Deopt              !v    %113.4, %113.3, %113.1   !
BB508   <- [239]
  val?+           %508.0 = CastType           d     dn %239.1   <val?_>
  (int|real|complex)+ %508.1 = Add                wed   %508.0, 1L, elided   <val?_>
  void                    StVar              lW    currentIndex, %508.1, e0.4
  val?^ | miss    %508.3 = LdVar              eR    k, e0.4
  val?            %508.4 = Force!             !v    %508.3, e0.4   <val?_>
  lgl$#-          %508.5 = IsType                   %508.4 isA val?+
  void                    Branch                   %508.5 -> BB512 (if true) | BB513 (if false)
BB509   <- [239]
  fs              %509.0 = FrameState         R     0x5649859c2d30+4052: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %239.1], env=e0.4
  void                    Deopt              !v    %509.0, Typecheck@0x56498559d860[Type#178], %239.1   !
BB232   <- [231, 512]
  val?^ | miss    %232.0 = LdVar              eR    c, e0.4
  lgl$#-          %232.1 = Identical                <blt c>, %232.0   <@?>
  void                    Branch                   %232.1 -> BB234 (if true) | BB233 (if false)
BB221   <- [496]
  val?^ | miss    %221.0 = LdVar              eR    seq_len, e0.4
  lgl$#-          %221.1 = Identical                <blt seq_len>, %221.0   <@?>
  void                    Branch                   %221.1 -> BB223 (if true) | BB222 (if false)
BB115   <- [496]
  void                    StVar              lW    lens, nil, e0.4
  nil-            %115.1 = nil
  nil-            %115.2 = nil
  goto BB116
BB512   <- [508]
  val?+           %512.0 = CastType           d     dn %508.4   <val?_>
  (int|real|complex)+ %512.1 = Add                wed   %512.0, 1L, elided   <val?_>
  void                    StVar              lW    k, %512.1, e0.4
  goto BB232
BB513   <- [508]
  fs              %513.0 = FrameState         R     0x5649859c2d30+4087: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %508.4], env=e0.4
  void                    Deopt              !v    %513.0, Typecheck@0x56498559d860[Type#180], %508.4   !
BB234   <- [232]
  val?^ | miss    %234.0 = LdVar              eR    lowerBlockIndex, e0.4
  val?            %234.1 = Force!             !v    %234.0, e0.4   <val?_>
  val?^ | miss    %234.2 = LdVar              eR    currentIndex, e0.4
  val?            %234.3 = Force!             !v    %234.2, e0.4   <val?_>
  lgl$#-          %234.4 = IsType                   %234.3 isA val?+
  void                    Branch                   %234.4 -> BB510 (if true) | BB511 (if false)
BB233   <- [232]
  (cls|spec|blt)  %233.0 = LdFun              !v    c, e0.4
  fs              %233.1 = FrameState         R     0x5649859c2d30+4141: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %233.0], env=e0.4
  void                    Deopt              !v    %233.1, DeadCall@0x56498559d860[Call#43], %233.0   !
BB223   <- [221]
  val+            %223.0 = CallSafeBuiltin    wed   seq_len(%496.0)    <val?_>
  (int|real|complex)+ %223.1 = Minus              wed   %223.0, elided
  int-            %223.2 = Extract1_1D        wed   %492.0, %223.1, elided   <val?_>
  int-            %223.3 = Extract1_1D        wed   %492.0, %496.0, elided   <val?_>
  int-            %223.4 = Sub                wed   %223.2, %223.3, elided   <val?_>
  void                    StVar              lW    lens, %223.4, e0.4
  int-            %223.6 = %223.4
  int-            %223.7 = %223.4
  goto BB116
BB222   <- [221]
  (cls|spec|blt)  %222.0 = LdFun              !v    seq_len, e0.4
  fs              %222.1 = FrameState         R     0x5649859c2d30+4464: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %492.0, %222.0], env=e0.4
  void                    Deopt              !v    %222.1, DeadCall@0x56498559d860[Call#46], %222.0   !
BB116   <- [115, 223, 175]
  (nil|int|real|complex)+ %116.0 = Phi                      %223.6:BB223, %115.1:BB115, %175.2:BB175   <val?_>
  (nil|int|real|complex)+ %116.1 = %116.0
  (nil|int|real|complex)+ %116.2 = Phi                      %223.7:BB223, %115.2:BB115, %175.3:BB175   <nil->
  (nil|int|real|complex)+ %116.3 = %116.2
  lgl$#-          %116.4 = IsType                   %116.3 isA val-
  val?^ | miss    %116.5 = LdVar              eR    length, e0.4
  lgl$#-          %116.6 = Identical                <blt length>, %116.5   <true>
  void                    Branch                   %116.6 -> BB504 (if true) | BB505 (if false)
BB510   <- [234]
  val?+           %510.0 = CastType           d     dn %234.3   <val?_>
  (int|real|complex)+ %510.1 = Add                wed   %510.0, 1L, elided   <val?_>
  lgl$#-          %510.2 = IsType                   %234.1 isA val?+
  void                    Branch                   %510.2 -> BB516 (if true) | BB517 (if false)
BB511   <- [234]
  fs              %511.0 = FrameState         R     0x5649859c2d30+4201: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %234.1, %234.3], env=e0.4
  void                    Deopt              !v    %511.0, Typecheck@0x56498559d860[Type#186], %234.3   !
BB504   <- [116]
  void                    Branch                   %116.4 -> BB506 (if true) | BB507 (if false)
BB505   <- [116]
  void                    Nop                !     
  lgl$#-          %505.1 = %116.6
  dr              %505.2 = DeadBranchReached@0x56498559d860[Test#38]
  goto BB117
BB516   <- [510]
  val?+           %516.0 = CastType           d     dn %234.1   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %516.1 = CallSafeBuiltin    wed   c(%516.0, %510.1)    <val?_>
  void                    StVar              lW    lowerBlockIndex, %516.1, e0.4
  goto BB110
BB517   <- [510]
  fs              %517.0 = FrameState         R     0x5649859c2d30+4213: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %234.1, %510.1], env=e0.4
  void                    Deopt              !v    %517.0, Typecheck@0x56498559d860[Type#185], %234.1   !
BB506   <- [504]
  (nil|int|real|complex)- %506.0 = CastType           d     dn %116.3   <nil->
  (int|real)$-    %506.1 = CallSafeBuiltin    wed   length(%506.0)    <int$->
  lgl$#-          %506.2 = IsType                   %506.1 isA int$-
  void                    Branch                   %506.2 -> BB514 (if true) | BB515 (if false)
BB507   <- [504]
  void                    Nop                !     
  (nil|int|real|complex)+ %507.1 = %116.3
  dr              %507.2 = Typecheck@0x56498559d860[Type#207]
  goto BB117
BB117   <- [505, 507]
  (nil|lgl|int|real|complex)+ %117.0 = Phi                      %505.1:BB505, %507.1:BB507
  (nil|lgl|int|real|complex)+ %117.1 = %117.0
  dr              %117.2 = Phi                      %505.2:BB505, %507.2:BB507
  dr              %117.3 = %117.2
  fs              %117.4 = FrameState         R     0x5649859c2d30+4621: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %117.4, %117.3, %117.1   !
BB514   <- [506]
  int$-           %514.0 = CastType           d     dn %506.1
  lgl$#-          %514.1 = CheckTrueFalse     e     %514.0
  void                    Branch                   %514.1 -> BB138 (if true) | BB121 (if false)
BB515   <- [506]
  void                    Nop                !     
  (int|real)$-    %515.1 = %506.1
  dr              %515.2 = Typecheck@0x56498559d860[Type#208]
  goto BB119
BB138   <- [514]
  val?^ | miss    %138.0 = LdVar              eR    max, e0.4
  lgl$#-          %138.1 = Identical                <blt max>, %138.0   <@?>
  void                    Branch                   %138.1 -> BB140 (if true) | BB139 (if false)
BB121   <- [514]
  val?^ | miss    %121.0 = LdVar              eR    upperBlockIndex, e0.4
  lgl$#-          %121.1 = IsType                   %121.0 isA int$-
  void                    Branch                   %121.1 -> BB518 (if true) | BB519 (if false)
BB119   <- [515, 519]
  val?^ | miss    %119.0 = Phi                      %515.1:BB515, %519.1:BB519
  val?^ | miss    %119.1 = %119.0
  dr              %119.2 = Phi                      %515.2:BB515, %519.2:BB519
  dr              %119.3 = %119.2
  fs              %119.4 = FrameState         R     0x5649859c2d30+4712: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %506.1], env=e0.4
  void                    Deopt              !v    %119.4, %119.3, %119.1   !
BB140   <- [138]
  val?^ | miss    %140.0 = LdVar              eR    sum, e0.4
  lgl$#-          %140.1 = Identical                <blt sum>, %140.0   <@?>
  void                    Branch                   %140.1 -> BB142 (if true) | BB141 (if false)
BB139   <- [138]
  (cls|spec|blt)  %139.0 = LdFun              !v    max, e0.4
  fs              %139.1 = FrameState         R     0x5649859c2d30+4751: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %139.0], env=e0.4
  void                    Deopt              !v    %139.1, DeadCall@0x56498559d860[Call#48], %139.0   !
BB518   <- [121]
  void                    StVar              lW    nBlocks, 1L, e0.4
  val?^ | miss    %518.1 = LdVar              eR    paste0, e0.4
  lgl$#-          %518.2 = Identical                %518.1, function(..., collapse=NULL, recycle0=FALSE) <|...
  void                    Branch                   %518.2 -> BB520 (if true) | BB521 (if false)
BB519   <- [121]
  void                    Nop                !     
  val?^ | miss    %519.1 = %121.0
  dr              %519.2 = Typecheck@0x56498559d860[Type#289]
  goto BB119
BB142   <- [140]
  val?^ | miss    %142.0 = LdVar              eR    maxLength, e0.4
  val?            %142.1 = Force!             !v    %142.0, e0.4   <val?_>
  lgl$#-          %142.2 = IsType                   %142.1 isA val?+
  void                    Branch                   %142.2 -> BB530 (if true) | BB531 (if false)
BB141   <- [140]
  (cls|spec|blt)  %141.0 = LdFun              !v    sum, e0.4
  fs              %141.1 = FrameState         R     0x5649859c2d30+4816: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt max>, %141.0], env=e0.4
  void                    Deopt              !v    %141.1, DeadCall@0x56498559d860[Call#50], %141.0   !
BB520   <- [518]
  prom-           %520.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p17, e0.4
  prom-           %520.1 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p22, e0.4
  dots-           %520.2 = DotsList           l     %520.0, %520.1
  ct              %520.3 = PushContext        lCL   %520.2, paste0(c(initial, rep.int(prefix, -(nBlocks, 1|..., function(..., collapse=NULL, recycle0=FALSE) <|..., e0.4
  val?^ | miss    %520.4 = CastType                 up %520.0
  val?^ | miss    %520.5 = CastType                 up %520.1
  env             e520.6 = MkEnv              l     ...=%520.2, collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 1
  val?            %520.7 = Force!             !v    %520.4, e520.6
  val?            %520.8 = Force!             !v    %520.5, e520.6
  val+            %520.9 = CallSafeBuiltin    wed   list(%520.7, %520.8)    <vec->
  val?^ | miss    %520.10 = LdVar              eR    collapse, e520.6
  val?            %520.11 = Force!<lazy>       !v    %520.10, e520.6   <(nil|str)->
  val?^ | miss    %520.12 = LdVar              eR    recycle0, e520.6
  val?            %520.13 = Force!<lazy>       !v    %520.12, e520.6   <lgl$->
  val?            %520.14 = CallBuiltin        !v    paste0(%520.9, %520.11, %520.13) e520.6
  val?            %520.15 = PopContext         C     %520.14, %520.3   <str$->
  void                    StVar              lW    s, %520.15, e0.4
  val?^ | miss    %520.17 = LdVar              eR    prefix, e0.4
  val?            %520.18 = Force!<wrapped>    !v    %520.17, e0.4   <str$->
  void                    StVar              lW    initial, %520.18, e0.4
  val?^ | miss    %520.20 = LdVar              eR    seq_len, e0.4
  lgl$#-          %520.21 = Identical                <blt seq_len>, %520.20   <true>
  void                    Branch                   %520.21 -> BB522 (if true) | BB523 (if false)
BB521   <- [518]
  fs              %521.0 = FrameState         R     0x5649859c2d30+6388: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %521.0, CallTarget@0x56498559d860[Call#60], %518.1   !
BB530   <- [142]
  val?+           %530.0 = CastType           d     dn %142.1   <val?_>
  lgl             %530.1 = Lte                wed   %116.1, %530.0, elided   <val?_>
  lgl$#-          %530.2 = IsType                   %530.1 isA lgl_
  void                    Branch                   %530.2 -> BB532 (if true) | BB533 (if false)
BB531   <- [142]
  fs              %531.0 = FrameState         R     0x5649859c2d30+4871: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt max>, <blt sum>, %116.1, %142.1], env=e0.4
  void                    Deopt              !v    %531.0, Typecheck@0x56498559d860[Type#217], %142.1   !
BB522   <- [520]
  val?^ | miss    %522.0 = LdVar              eR    nBlocks, e0.4
  lgl$#-          %522.1 = IsType                   %522.0 isA int$-
  void                    Branch                   %522.1 -> BB524 (if true) | BB525 (if false)
BB523   <- [520]
  void                    Nop                !     
  lgl$#-          %523.1 = %520.21
  dr              %523.2 = DeadBranchReached@0x56498559d860[Test#52]
  goto BB124
BB532   <- [530]
  lgl_            %532.0 = CastType           d     dn %530.1
  int$-           %532.1 = CallSafeBuiltin    wed   sum(%532.0)    <val?_>
  int$-           %532.2 = CallSafeBuiltin    wed   max(%532.1, 1L)    <val?_>
  void                    StVar              lW    k, %532.2, e0.4
  val?^ | miss    %532.4 = LdVar              eR    first, e0.4
  val?            %532.5 = Force!             !v    %532.4, e0.4   <val?_>
  lgl$#-          %532.6 = CheckTrueFalse     we    %532.5
  void                    Branch                   %532.6 -> BB220 (if true) | BB147 (if false)
BB533   <- [530]
  fs              %533.0 = FrameState         R     0x5649859c2d30+4877: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt max>, <blt sum>, %530.1], env=e0.4
  void                    Deopt              !v    %533.0, Typecheck@0x56498559d860[Type#218], %530.1   !
BB524   <- [522]
  int$-           %524.0 = CastType           d     dn %522.0
  val+            %524.1 = CallSafeBuiltin    wed   seq_len(%524.0)    <int$->
  int$-           %524.2 = Length                   %524.1
  lgl$#-          %524.3 = IsType                   %524.1 isA int$-
  void                    Branch                   %524.3 -> BB526 (if true) | BB527 (if false)
BB525   <- [522]
  void                    Nop                !     
  val?^ | miss    %525.1 = %522.0
  dr              %525.2 = Typecheck@0x56498559d860[Type#306]
  goto BB124
BB124   <- [523, 525]
  val?^ | miss    %124.0 = Phi                      %523.1:BB523, %525.1:BB525
  val?^ | miss    %124.1 = %124.0
  dr              %124.2 = Phi                      %523.2:BB523, %525.2:BB525
  dr              %124.3 = %124.2
  fs              %124.4 = FrameState         R     0x5649859c2d30+6462: [%342.0, 1L, %46.2, %366.0, 1L, %56.2], env=e0.4
  void                    Deopt              !v    %124.4, %124.3, %124.1   !
BB220   <- [532]
  void                    StVar              lW    first, false, e0.4
  val?^ | miss    %220.1 = LdVar              eR    width, e0.4
  val?            %220.2 = Force!             !v    %220.1, e0.4   <val?_>
  (cls|spec|blt)  %220.3 = LdFun              !v    nchar, e0.4
  fs              %220.4 = FrameState         R     0x5649859c2d30+5000: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %220.2, %220.3], env=e0.4
  void                    Deopt              !v    %220.4, DeadCall@0x56498559d860[Call#51], %220.3   !
BB147   <- [532]
  val?^ | miss    %147.0 = LdVar              eR    currentIndex, e0.4
  val?            %147.1 = Force!             !v    %147.0, e0.4   <val?_>
  val?^ | miss    %147.2 = LdVar              eR    k, e0.4
  val?            %147.3 = Force!             !v    %147.2, e0.4   <val?_>
  lgl$#-          %147.4 = IsType                   %147.3 isA val?+
  lgl$#-          %147.5 = IsType                   %147.1 isA val?+
  void                    Branch                   %147.5 -> BB536 (if true) | BB537 (if false)
BB526   <- [524]
  int$-           %526.0 = CastType           d     dn %524.1
  int$-           %526.1 = Inc                      0L
  lgl$-           %526.2 = Lt                 d     %524.2, %526.1, elided   <false>
  lgl$#-          %526.3 = Identical                %526.2, true
  void                    Branch                   %526.3 -> BB529 (if true) | BB528 (if false)
BB527   <- [524]
  void                    Nop                !     
  val+            %527.1 = %524.1
  dr              %527.2 = Typecheck@0x56498559d860[Type#307]
  goto BB126
BB536   <- [147]
  val?+           %536.0 = CastType           d     dn %147.1   <val?_>
  void                    Branch                   %147.4 -> BB538 (if true) | BB539 (if false)
BB537   <- [147]
  void                    Nop                !     
  val?            %537.1 = %147.1
  dr              %537.2 = Typecheck@0x56498559d860[Type#228]
  goto BB148
BB529   <- [526]
  void                    Nop                !     
  lgl$#-          %529.1 = %526.3
  dr              %529.2 = DeadBranchReached@0x56498559d860[Test#53]
  goto BB126
BB528   <- [526]
  int$-           %528.0 = Extract2_1D        wed   %526.0, %526.1, elided
  void                    StVar              lW    k, %528.0, e0.4
  val?^ | miss    %528.2 = LdVar              eR    s !upd, e0.4
  val?            %528.3 = Force!             !v    %528.2, e0.4
  val?^ | miss    %528.4 = LdVar              eR    paste0, e0.4
  lgl$#-          %528.5 = Identical                %528.4, function(..., collapse=NULL, recycle0=FALSE) <|...
  void                    Branch                   %528.5 -> BB534 (if true) | BB535 (if false)
BB126   <- [527, 529]
  val?^ | miss    %126.0 = Phi                      %527.1:BB527, %529.1:BB529
  val?^ | miss    %126.1 = %126.0
  dr              %126.2 = Phi                      %527.2:BB527, %529.2:BB529
  dr              %126.3 = %126.2
  fs              %126.4 = FrameState         R     0x5649859c2d30+6553: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %524.1], env=e0.4
  void                    Deopt              !v    %126.4, %126.3, %126.1   !
BB538   <- [536]
  val?+           %538.0 = CastType           d     dn %147.3   <val?_>
  (int|real|complex)+ %538.1 = Add                wed   %536.0, %538.0, elided   <val?_>
  void                    StVar              lW    currentIndex, %538.1, e0.4
  val?^ | miss    %538.3 = LdVar              eR    nc, e0.4
  val?            %538.4 = Force!             !v    %538.3, e0.4   <val?_>
  lgl$#-          %538.5 = IsType                   %538.4 isA val+   <@?>
  void                    Branch                   %538.5 -> BB219 (if true) | BB150 (if false)
BB539   <- [536]
  void                    Nop                !     
  val?            %539.1 = %147.3
  dr              %539.2 = Typecheck@0x56498559d860[Type#229]
  goto BB148
BB148   <- [537, 539]
  val?^ | miss    %148.0 = Phi                      %537.1:BB537, %539.1:BB539
  val?^ | miss    %148.1 = %148.0
  dr              %148.2 = Phi                      %537.2:BB537, %539.2:BB539
  dr              %148.3 = %148.2
  fs              %148.4 = FrameState         R     0x5649859c2d30+5103: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %147.1, %147.3], env=e0.4
  void                    Deopt              !v    %148.4, %148.3, %148.1   !
BB534   <- [528]
  prom-           %534.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p27, e0.4
  prom-           %534.1 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p29, e0.4
  dots-           %534.2 = DotsList           l     %534.0, %534.1
  ct              %534.3 = PushContext        lCL   %534.2, paste0([(s, k), paste([(words, :([(lowerBlockI|..., function(..., collapse=NULL, recycle0=FALSE) <|..., e0.4
  val?^ | miss    %534.4 = CastType                 up %534.0
  val?^ | miss    %534.5 = CastType                 up %534.1
  env             e534.6 = MkEnv              l     ...=%534.2, collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 1
  val?            %534.7 = Force!             !v    %534.4, e534.6
  val?            %534.8 = Force!             !v    %534.5, e534.6
  val+            %534.9 = CallSafeBuiltin    wed   list(%534.7, %534.8)    <vec->
  val?^ | miss    %534.10 = LdVar              eR    collapse, e534.6
  val?            %534.11 = Force!<lazy>       !v    %534.10, e534.6   <(nil|str)->
  val?^ | miss    %534.12 = LdVar              eR    recycle0, e534.6
  val?            %534.13 = Force!<lazy>       !v    %534.12, e534.6   <lgl$->
  val?            %534.14 = CallBuiltin        !v    paste0(%534.9, %534.11, %534.13) e534.6
  val?            %534.15 = PopContext         C     %534.14, %534.3   <str$->
  lgl$#-          %534.16 = IsType                   %534.15 isA val?-
  val?^ | miss    %534.17 = LdVar              eR    s !upd, e0.4
  lgl$#-          %534.18 = IsType                   %534.17 isA val?~- | miss
  void                    Branch                   %534.18 -> BB542 (if true) | BB543 (if false)
BB535   <- [528]
  fs              %535.0 = FrameState         R     0x5649859c2d30+6607: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %526.0, %524.2, %526.1, %528.3], env=e0.4
  void                    Deopt              !v    %535.0, CallTarget@0x56498559d860[Call#66], %528.4   !
BB219   <- [538]
  val?^ | miss    %219.0 = LdVar              eR    currentIndex, e0.4
  val?            %219.1 = Force!             !v    %219.0, e0.4   <val?_>
  val?            %219.2 = %219.1
  goto BB151
BB150   <- [538]
  prom-           %150.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p16, e0.4
  prom-           %150.1 = %150.0
  goto BB151
BB542   <- [534]
  val?~- | miss   %542.0 = CastType           d     dn %534.17
  val?-           %542.1 = Force!<value>            %542.0,    <str$->
  val?^ | miss    %542.2 = LdVar              eR    k, e0.4
  lgl$#-          %542.3 = IsType                   %542.2 isA int$-
  void                    Branch                   %542.3 -> BB544 (if true) | BB545 (if false)
BB543   <- [534]
  void                    Nop                !     
  val?^ | miss    %543.1 = %534.17
  dr              %543.2 = Typecheck@0x56498559d860[Type#334]
  goto BB130
BB151   <- [150, 219]
  val?            %151.0 = Phi                      %219.2:BB219, %150.1:BB150
  val?            %151.1 = %151.0
  val?            %151.2 = Extract1_1D        !v    %538.4, %151.1, e0.4   <val?_>
  lgl$#-          %151.3 = IsType                   %151.2 isA val?+
  void                    Branch                   %151.3 -> BB540 (if true) | BB541 (if false)
BB544   <- [542]
  int$-           %544.0 = CastType           d     dn %542.2
  void                    Branch                   %534.16 -> BB552 (if true) | BB553 (if false)
BB545   <- [542]
  void                    Nop                !     
  val?^ | miss    %545.1 = %542.2
  dr              %545.2 = Typecheck@0x56498559d860[Type#335]
  goto BB130
BB130   <- [543, 545, 553]
  val?^ | miss    %130.0 = Phi                      %543.1:BB543, %545.1:BB545, %553.1:BB553
  val?^ | miss    %130.1 = %130.0
  dr              %130.2 = Phi                      %543.2:BB543, %545.2:BB545, %553.2:BB553
  dr              %130.3 = %130.2
  fs              %130.4 = FrameState         R     0x5649859c2d30+6646: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %526.0, %524.2, %526.1, %534.15], env=e0.4
  void                    Deopt              !v    %130.4, %130.3, %130.1   !
BB540   <- [151]
  val?+           %540.0 = CastType           d     dn %151.2   <val?_>
  lgl             %540.1 = Eq                 wed   %540.0, 0L, elided   <val?_>
  lgl$#-          %540.2 = CheckTrueFalse     we    %540.1
  void                    Branch                   %540.2 -> BB212 (if true) | BB154 (if false)
BB541   <- [151]
  fs              %541.0 = FrameState         R     0x5649859c2d30+5183: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %151.2], env=e0.4
  void                    Deopt              !v    %541.0, Typecheck@0x56498559d860[Type#234], %151.2   !
BB552   <- [544]
  val?-           %552.0 = CastType           d     dn %534.15   <str$->
  val?-           %552.1 = Subassign1_1D      wed   %552.0, %542.1, %544.0, elided
  void                    StVar              lW    s, %552.1, e0.4
  int$-           %552.3 = Inc                      %526.1
  lgl$-           %552.4 = Lt                 d     %524.2, %552.3, elided
  lgl$#-          %552.5 = Identical                %552.4, true
  void                    Branch                   %552.5 -> BB135 (if true) | BB134 (if false)
BB553   <- [544]
  void                    Nop                !     
  val?            %553.1 = %534.15
  dr              %553.2 = Typecheck@0x56498559d860[Type#333]
  goto BB130
BB212   <- [540]
  val?^ | miss    %212.0 = LdVar              eR    c, e0.4
  lgl$#-          %212.1 = Identical                <blt c>, %212.0   <@?>
  void                    Branch                   %212.1 -> BB214 (if true) | BB213 (if false)
BB154   <- [540]
  val?^ | miss    %154.0 = LdVar              eR    c, e0.4
  lgl$#-          %154.1 = Identical                <blt c>, %154.0   <@?>
  void                    Branch                   %154.1 -> BB156 (if true) | BB155 (if false)
BB135   <- [552]
  val?^ | miss    %135.0 = LdVar              eR    c, e0.4
  lgl$#-          %135.1 = Identical                <blt c>, %135.0   <true>
  void                    Branch                   %135.1 -> BB558 (if true) | BB559 (if false)
BB134   <- [552]
  int$-           %134.0 = Extract2_1D        wed   %526.0, %552.3, elided
  void                    StVar              lW    k, %134.0, e0.4
  val-            %134.2 = ChkMissing         e     %552.1
  (cls|spec|blt)  %134.3 = LdFun              !v    paste0, e0.4
  fs              %134.4 = FrameState         R     0x5649859c2d30+6734: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %526.0, %524.2, %552.3, %134.3], env=e0.4
  void                    Deopt              !v    %134.4, DeadCall@0x56498559d860[Call#68], %134.3   !
BB214   <- [212]
  val?^ | miss    %214.0 = LdVar              eR    upperBlockIndex, e0.4
  val?            %214.1 = Force!             !v    %214.0, e0.4   <val?_>
  val?^ | miss    %214.2 = LdVar              eR    currentIndex, e0.4
  val?            %214.3 = Force!             !v    %214.2, e0.4   <val?_>
  lgl$#-          %214.4 = IsType                   %214.3 isA val?+
  void                    Branch                   %214.4 -> BB546 (if true) | BB547 (if false)
BB213   <- [212]
  (cls|spec|blt)  %213.0 = LdFun              !v    c, e0.4
  fs              %213.1 = FrameState         R     0x5649859c2d30+5364: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %213.0], env=e0.4
  void                    Deopt              !v    %213.1, DeadCall@0x56498559d860[Call#53], %213.0   !
BB156   <- [154]
  val?^ | miss    %156.0 = LdVar              eR    upperBlockIndex, e0.4
  val?            %156.1 = Force!             !v    %156.0, e0.4   <val?_>
  val?^ | miss    %156.2 = LdVar              eR    currentIndex, e0.4
  val?            %156.3 = Force!             !v    %156.2, e0.4   <val?_>
  lgl$#-          %156.4 = IsType                   %156.3 isA val?+
  lgl$#-          %156.5 = IsType                   %156.1 isA val?+
  void                    Branch                   %156.5 -> BB548 (if true) | BB549 (if false)
BB155   <- [154]
  (cls|spec|blt)  %155.0 = LdFun              !v    c, e0.4
  fs              %155.1 = FrameState         R     0x5649859c2d30+5235: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %155.0], env=e0.4
  void                    Deopt              !v    %155.1, DeadCall@0x56498559d860[Call#52], %155.0   !
BB558   <- [135]
  val?^ | miss    %558.0 = LdVar              eR    yi, e0.4
  lgl$#-          %558.1 = IsType                   %558.0 isA val?~- | miss
  void                    Branch                   %558.1 -> BB560 (if true) | BB561 (if false)
BB559   <- [135]
  void                    Nop                !     
  lgl$#-          %559.1 = %135.1
  dr              %559.2 = DeadBranchReached@0x56498559d860[Test#66]
  goto BB132
BB546   <- [214]
  val?+           %546.0 = CastType           d     dn %214.3   <val?_>
  (int|real|complex)+ %546.1 = Sub                wed   %546.0, 1L, elided   <val?_>
  lgl$#-          %546.2 = IsType                   %214.1 isA val?+
  void                    Branch                   %546.2 -> BB554 (if true) | BB555 (if false)
BB547   <- [214]
  fs              %547.0 = FrameState         R     0x5649859c2d30+5424: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %214.1, %214.3], env=e0.4
  void                    Deopt              !v    %547.0, Typecheck@0x56498559d860[Type#245], %214.3   !
BB548   <- [156]
  val?+           %548.0 = CastType           d     dn %156.1   <val?_>
  void                    Branch                   %156.4 -> BB550 (if true) | BB551 (if false)
BB549   <- [156]
  void                    Nop                !     
  val?            %549.1 = %156.1
  dr              %549.2 = Typecheck@0x56498559d860[Type#238]
  goto BB157
BB560   <- [558]
  val?~- | miss   %560.0 = CastType           d     dn %558.0
  val?-           %560.1 = Force!<value>            %560.0,    <str->
  val-            %560.2 = ChkMissing         e     %552.1   <str$->
  val?^ | miss    %560.3 = LdVar              eR    prefix, e0.4
  val?            %560.4 = Force!<wrapped>    !v    %560.3, e0.4   <str$->
  lgl$#-          %560.5 = IsType                   %560.4 isA val?-
  void                    Branch                   %560.5 -> BB564 (if true) | BB565 (if false)
BB561   <- [558]
  void                    Nop                !     
  val?^ | miss    %561.1 = %558.0
  dr              %561.2 = Typecheck@0x56498559d860[Type#367]
  goto BB132
BB132   <- [559, 561]
  val?^ | miss    %132.0 = Phi                      %559.1:BB559, %561.1:BB561
  val?^ | miss    %132.1 = %132.0
  dr              %132.2 = Phi                      %559.2:BB559, %561.2:BB561
  dr              %132.3 = %132.2
  fs              %132.4 = FrameState         R     0x5649859c2d30+6689: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %526.0, %524.2, %526.1], env=e0.4
  void                    Deopt              !v    %132.4, %132.3, %132.1   !
BB554   <- [546]
  val?+           %554.0 = CastType           d     dn %214.1   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %554.1 = CallSafeBuiltin    wed   c(%554.0, %546.1)    <val?_>
  void                    StVar              lW    upperBlockIndex, %554.1, e0.4
  goto BB159
BB555   <- [546]
  fs              %555.0 = FrameState         R     0x5649859c2d30+5436: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %214.1, %546.1], env=e0.4
  void                    Deopt              !v    %555.0, Typecheck@0x56498559d860[Type#244], %214.1   !
BB550   <- [548]
  val?+           %550.0 = CastType           d     dn %156.3   <val?_>
  val+            %550.1 = CallSafeBuiltin    wed   c(%548.0, %550.0)    <val?_>
  void                    StVar              lW    upperBlockIndex, %550.1, e0.4
  goto BB159
BB551   <- [548]
  void                    Nop                !     
  val?            %551.1 = %156.3
  dr              %551.2 = Typecheck@0x56498559d860[Type#239]
  goto BB157
BB157   <- [549, 551]
  val?^ | miss    %157.0 = Phi                      %549.1:BB549, %551.1:BB551
  val?^ | miss    %157.1 = %157.0
  dr              %157.2 = Phi                      %549.2:BB549, %551.2:BB551
  dr              %157.3 = %157.2
  fs              %157.4 = FrameState         R     0x5649859c2d30+5295: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %156.1, %156.3], env=e0.4
  void                    Deopt              !v    %157.4, %157.3, %157.1   !
BB564   <- [560]
  val?-           %564.0 = CastType           d     dn %560.4   <str$->
  val+            %564.1 = CallSafeBuiltin    wed   c(%560.1, %560.2, %564.0)    <str->
  void                    StVar              lW    yi, %564.1, e0.4
  int$-           %564.3 = %56.2
  goto BB56
BB565   <- [560]
  fs              %565.0 = FrameState         R     0x5649859c2d30+6926: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %560.1, %560.2, %560.4], env=e0.4
  void                    Deopt              !v    %565.0, Typecheck@0x56498559d860[Type#369], %560.4   !
BB159   <- [550, 554]
  val?^ | miss    %159.0 = LdVar              eR    length, e0.4
  lgl$#-          %159.1 = Identical                <blt length>, %159.0   <@?>
  void                    Branch                   %159.1 -> BB161 (if true) | BB160 (if false)
BB161   <- [159]
  val?^ | miss    %161.0 = LdVar              eR    lens, e0.4
  val?            %161.1 = Force!             !v    %161.0, e0.4   <val?_>
  lgl$#-          %161.2 = IsType                   %161.1 isA val?+
  void                    Branch                   %161.2 -> BB556 (if true) | BB557 (if false)
BB160   <- [159]
  (cls|spec|blt)  %160.0 = LdFun              !v    length, e0.4
  fs              %160.1 = FrameState         R     0x5649859c2d30+5500: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %160.0], env=e0.4
  void                    Deopt              !v    %160.1, DeadCall@0x56498559d860[Call#54], %160.0   !
BB556   <- [161]
  val?+           %556.0 = CastType           d     dn %161.1   <val?_>
  (int|real)$-    %556.1 = CallSafeBuiltin    wed   length(%556.0)    <val?_>
  val?^ | miss    %556.2 = LdVar              eR    k, e0.4
  val?            %556.3 = Force!             !v    %556.2, e0.4   <val?_>
  lgl$#-          %556.4 = IsType                   %556.3 isA val?+
  void                    Branch                   %556.4 -> BB562 (if true) | BB563 (if false)
BB557   <- [161]
  fs              %557.0 = FrameState         R     0x5649859c2d30+5541: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt length>, %161.1], env=e0.4
  void                    Deopt              !v    %557.0, Typecheck@0x56498559d860[Type#249], %161.1   !
BB562   <- [556]
  val?+           %562.0 = CastType           d     dn %556.3   <val?_>
  lgl             %562.1 = Gt                 wed   %556.1, %562.0, elided   <val?_>
  lgl$#-          %562.2 = CheckTrueFalse     we    %562.1
  void                    Branch                   %562.2 -> BB189 (if true) | BB166 (if false)
BB563   <- [556]
  fs              %563.0 = FrameState         R     0x5649859c2d30+5577: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %556.1, %556.3], env=e0.4
  void                    Deopt              !v    %563.0, Typecheck@0x56498559d860[Type#251], %556.3   !
BB189   <- [562]
  val?^ | miss    %189.0 = LdVar              eR    nc, e0.4
  val?            %189.1 = Force!             !v    %189.0, e0.4   <val?_>
  lgl$#-          %189.2 = IsType                   %189.1 isA val+   <@?>
  void                    Branch                   %189.2 -> BB209 (if true) | BB190 (if false)
BB166   <- [562]
  void                    Nop                !     
  goto BB167
BB209   <- [189]
  val?^ | miss    %209.0 = LdVar              eR    currentIndex, e0.4
  val?            %209.1 = Force!             !v    %209.0, e0.4   <val?_>
  lgl$#-          %209.2 = IsType                   %209.1 isA val?+
  void                    Branch                   %209.2 -> BB566 (if true) | BB567 (if false)
BB190   <- [189]
  prom-           %190.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p15, e0.4
  prom-           %190.1 = %190.0
  goto BB191
BB167   <- [166, 584]
  val?^ | miss    %167.0 = LdVar              eR    length, e0.4
  lgl$#-          %167.1 = Identical                <blt length>, %167.0   <@?>
  void                    Branch                   %167.1 -> BB169 (if true) | BB168 (if false)
BB566   <- [209]
  val?+           %566.0 = CastType           d     dn %209.1   <val?_>
  (int|real|complex)+ %566.1 = Add                wed   %566.0, 1L, elided   <val?_>
  (int|real|complex)+ %566.2 = %566.1
  goto BB191
BB567   <- [209]
  fs              %567.0 = FrameState         R     0x5649859c2d30+5653: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %189.1, %209.1], env=e0.4
  void                    Deopt              !v    %567.0, Typecheck@0x56498559d860[Type#256], %209.1   !
BB191   <- [190, 566]
  (int|real|complex|prom)+ %191.0 = Phi                      %566.2:BB566, %190.1:BB190
  (int|real|complex|prom)+ %191.1 = %191.0
  lgl$#-          %191.2 = IsType                   %189.1 isA val?+
  void                    Branch                   %191.2 -> BB570 (if true) | BB571 (if false)
BB169   <- [167]
  val?^ | miss    %169.0 = LdVar              eR    lens, e0.4
  val?            %169.1 = Force!             !v    %169.0, e0.4   <val?_>
  lgl$#-          %169.2 = IsType                   %169.1 isA val?+
  void                    Branch                   %169.2 -> BB568 (if true) | BB569 (if false)
BB168   <- [167]
  (cls|spec|blt)  %168.0 = LdFun              !v    length, e0.4
  fs              %168.1 = FrameState         R     0x5649859c2d30+5934: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %168.0], env=e0.4
  void                    Deopt              !v    %168.1, DeadCall@0x56498559d860[Call#56], %168.0   !
BB570   <- [191]
  val?+           %570.0 = CastType           d     dn %189.1   <val?_>
  val?            %570.1 = Extract1_1D        wed   %570.0, %191.1, elided   <val?_>
  lgl$#-          %570.2 = IsType                   %570.1 isA val?+
  void                    Branch                   %570.2 -> BB574 (if true) | BB575 (if false)
BB571   <- [191]
  fs              %571.0 = FrameState         R     0x5649859c2d30+5670: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %189.1, %191.1], env=e0.4
  void                    Deopt              !v    %571.0, Typecheck@0x56498559d860[Type#253], %189.1   !
BB568   <- [169]
  val?+           %568.0 = CastType           d     dn %169.1   <val?_>
  (int|real)$-    %568.1 = CallSafeBuiltin    wed   length(%568.0)    <val?_>
  val?^ | miss    %568.2 = LdVar              eR    k, e0.4
  val?            %568.3 = Force!             !v    %568.2, e0.4   <val?_>
  lgl$#-          %568.4 = IsType                   %568.3 isA val?+
  void                    Branch                   %568.4 -> BB572 (if true) | BB573 (if false)
BB569   <- [169]
  fs              %569.0 = FrameState         R     0x5649859c2d30+5975: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt length>, %169.1], env=e0.4
  void                    Deopt              !v    %569.0, Typecheck@0x56498559d860[Type#272], %169.1   !
BB574   <- [570]
  val?+           %574.0 = CastType           d     dn %570.1   <val?_>
  lgl             %574.1 = Eq                 wed   %574.0, 0L, elided   <val?_>
  lgl$#-          %574.2 = CheckTrueFalse     we    %574.1
  void                    Branch                   %574.2 -> BB204 (if true) | BB196 (if false)
BB575   <- [570]
  fs              %575.0 = FrameState         R     0x5649859c2d30+5671: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %570.1], env=e0.4
  void                    Deopt              !v    %575.0, Typecheck@0x56498559d860[Type#258], %570.1   !
BB572   <- [568]
  val?+           %572.0 = CastType           d     dn %568.3   <val?_>
  lgl             %572.1 = Gt                 wed   %568.1, %572.0, elided   <val?_>
  lgl$#-          %572.2 = CheckTrueFalse     we    %572.1
  void                    Branch                   %572.2 -> BB176 (if true) | BB174 (if false)
BB573   <- [568]
  fs              %573.0 = FrameState         R     0x5649859c2d30+6011: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %568.1, %568.3], env=e0.4
  void                    Deopt              !v    %573.0, Typecheck@0x56498559d860[Type#274], %568.3   !
BB204   <- [574]
  val?^ | miss    %204.0 = LdVar              eR    currentIndex, e0.4
  val?            %204.1 = Force!             !v    %204.0, e0.4   <val?_>
  lgl$#-          %204.2 = IsType                   %204.1 isA val?+
  void                    Branch                   %204.2 -> BB576 (if true) | BB577 (if false)
BB196   <- [574]
  void                    Nop                !     
  goto BB197
BB176   <- [572]
  val?^ | miss    %176.0 = LdVar              eR    lens, e0.4
  val?            %176.1 = Force!             !v    %176.0, e0.4   <val?_>
  lgl$#-          %176.2 = IsType                   %176.1 isA val+   <@?>
  void                    Branch                   %176.2 -> BB186 (if true) | BB177 (if false)
BB174   <- [572]
  void                    StVar              lW    lens, nil, e0.4
  nil-            %174.1 = nil
  goto BB175
BB576   <- [204]
  val?+           %576.0 = CastType           d     dn %204.1   <val?_>
  (int|real|complex)+ %576.1 = Add                wed   %576.0, 1L, elided   <val?_>
  void                    StVar              lW    currentIndex, %576.1, e0.4
  val?^ | miss    %576.3 = LdVar              eR    k, e0.4
  val?            %576.4 = Force!             !v    %576.3, e0.4   <val?_>
  lgl$#-          %576.5 = IsType                   %576.4 isA val?+
  void                    Branch                   %576.5 -> BB582 (if true) | BB583 (if false)
BB577   <- [204]
  fs              %577.0 = FrameState         R     0x5649859c2d30+5709: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %204.1], env=e0.4
  void                    Deopt              !v    %577.0, Typecheck@0x56498559d860[Type#260], %204.1   !
BB197   <- [196, 582]
  val?^ | miss    %197.0 = LdVar              eR    c, e0.4
  lgl$#-          %197.1 = Identical                <blt c>, %197.0   <@?>
  void                    Branch                   %197.1 -> BB199 (if true) | BB198 (if false)
BB186   <- [176]
  val?^ | miss    %186.0 = LdVar              eR    seq_len, e0.4
  lgl$#-          %186.1 = Identical                <blt seq_len>, %186.0   <@?>
  void                    Branch                   %186.1 -> BB188 (if true) | BB187 (if false)
BB177   <- [176]
  prom-           %177.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p13, e0.4
  prom-           %177.1 = %177.0
  goto BB178
BB175   <- [174, 588]
  (nil|int|real|complex)+ %175.0 = Phi                      %588.3:BB588, %174.1:BB174
  (nil|int|real|complex)+ %175.1 = %175.0
  (nil|int|real|complex)+ %175.2 = %175.1
  (nil|int|real|complex)+ %175.3 = %175.1
  goto BB116
BB582   <- [576]
  val?+           %582.0 = CastType           d     dn %576.4   <val?_>
  (int|real|complex)+ %582.1 = Add                wed   %582.0, 1L, elided   <val?_>
  void                    StVar              lW    k, %582.1, e0.4
  goto BB197
BB583   <- [576]
  fs              %583.0 = FrameState         R     0x5649859c2d30+5744: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %576.4], env=e0.4
  void                    Deopt              !v    %583.0, Typecheck@0x56498559d860[Type#262], %576.4   !
BB199   <- [197]
  val?^ | miss    %199.0 = LdVar              eR    lowerBlockIndex, e0.4
  val?            %199.1 = Force!             !v    %199.0, e0.4   <val?_>
  val?^ | miss    %199.2 = LdVar              eR    currentIndex, e0.4
  val?            %199.3 = Force!             !v    %199.2, e0.4   <val?_>
  lgl$#-          %199.4 = IsType                   %199.3 isA val?+
  void                    Branch                   %199.4 -> BB580 (if true) | BB581 (if false)
BB198   <- [197]
  (cls|spec|blt)  %198.0 = LdFun              !v    c, e0.4
  fs              %198.1 = FrameState         R     0x5649859c2d30+5798: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %198.0], env=e0.4
  void                    Deopt              !v    %198.1, DeadCall@0x56498559d860[Call#55], %198.0   !
BB188   <- [186]
  val?^ | miss    %188.0 = LdVar              eR    k, e0.4
  val?            %188.1 = Force!             !v    %188.0, e0.4   <val?_>
  val+            %188.2 = CallSafeBuiltin    wed   seq_len(%188.1)    <val?_>
  (int|real|complex)+ %188.3 = Minus              wed   %188.2, elided
  (int|real|complex)+ %188.4 = %188.3
  goto BB178
BB187   <- [186]
  (cls|spec|blt)  %187.0 = LdFun              !v    seq_len, e0.4
  fs              %187.1 = FrameState         R     0x5649859c2d30+6121: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %176.1, %187.0], env=e0.4
  void                    Deopt              !v    %187.1, DeadCall@0x56498559d860[Call#58], %187.0   !
BB178   <- [177, 188]
  (int|real|complex|prom)+ %178.0 = Phi                      %188.4:BB188, %177.1:BB177
  (int|real|complex|prom)+ %178.1 = %178.0
  lgl$#-          %178.2 = IsType                   %176.1 isA val?+
  void                    Branch                   %178.2 -> BB578 (if true) | BB579 (if false)
BB580   <- [199]
  val?+           %580.0 = CastType           d     dn %199.3   <val?_>
  (int|real|complex)+ %580.1 = Add                wed   %580.0, 1L, elided   <val?_>
  lgl$#-          %580.2 = IsType                   %199.1 isA val?+
  void                    Branch                   %580.2 -> BB584 (if true) | BB585 (if false)
BB581   <- [199]
  fs              %581.0 = FrameState         R     0x5649859c2d30+5858: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %199.1, %199.3], env=e0.4
  void                    Deopt              !v    %581.0, Typecheck@0x56498559d860[Type#268], %199.3   !
BB578   <- [178]
  val?+           %578.0 = CastType           d     dn %176.1   <val?_>
  val?            %578.1 = Extract1_1D        wed   %578.0, %178.1, elided   <val?_>
  val?^ | miss    %578.2 = LdVar              eR    lens, e0.4
  val?            %578.3 = Force!             !v    %578.2, e0.4   <val?_>
  lgl$#-          %578.4 = IsType                   %578.3 isA val+   <@?>
  void                    Branch                   %578.4 -> BB185 (if true) | BB181 (if false)
BB579   <- [178]
  fs              %579.0 = FrameState         R     0x5649859c2d30+6190: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %176.1, %178.1], env=e0.4
  void                    Deopt              !v    %579.0, Typecheck@0x56498559d860[Type#276], %176.1   !
BB584   <- [580]
  val?+           %584.0 = CastType           d     dn %199.1   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %584.1 = CallSafeBuiltin    wed   c(%584.0, %580.1)    <val?_>
  void                    StVar              lW    lowerBlockIndex, %584.1, e0.4
  goto BB167
BB585   <- [580]
  fs              %585.0 = FrameState         R     0x5649859c2d30+5870: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, <blt c>, %199.1, %580.1], env=e0.4
  void                    Deopt              !v    %585.0, Typecheck@0x56498559d860[Type#267], %199.1   !
BB185   <- [578]
  val?^ | miss    %185.0 = LdVar              eR    k, e0.4
  val?            %185.1 = Force!             !v    %185.0, e0.4   <val?_>
  val?            %185.2 = %185.1
  goto BB182
BB181   <- [578]
  prom-           %181.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p12, e0.4
  prom-           %181.1 = %181.0
  goto BB182
BB182   <- [181, 185]
  val?            %182.0 = Phi                      %185.2:BB185, %181.1:BB181
  val?            %182.1 = %182.0
  val?            %182.2 = Extract1_1D        !v    %578.3, %182.1, e0.4   <val?_>
  lgl$#-          %182.3 = IsType                   %182.2 isA val?+
  lgl$#-          %182.4 = IsType                   %578.1 isA val?+
  void                    Branch                   %182.4 -> BB586 (if true) | BB587 (if false)
BB586   <- [182]
  val?+           %586.0 = CastType           d     dn %578.1   <val?_>
  void                    Branch                   %182.3 -> BB588 (if true) | BB589 (if false)
BB587   <- [182]
  void                    Nop                !     
  val?            %587.1 = %578.1
  dr              %587.2 = Typecheck@0x56498559d860[Type#282]
  goto BB183
BB588   <- [586]
  val?+           %588.0 = CastType           d     dn %182.2   <val?_>
  (int|real|complex)+ %588.1 = Sub                wed   %586.0, %588.0, elided   <val?_>
  void                    StVar              lW    lens, %588.1, e0.4
  (int|real|complex)+ %588.3 = %588.1
  goto BB175
BB589   <- [586]
  void                    Nop                !     
  val?            %589.1 = %182.2
  dr              %589.2 = Typecheck@0x56498559d860[Type#286]
  goto BB183
BB183   <- [587, 589]
  val?^ | miss    %183.0 = Phi                      %587.1:BB587, %589.1:BB589
  val?^ | miss    %183.1 = %183.0
  dr              %183.2 = Phi                      %587.2:BB587, %589.2:BB589
  dr              %183.3 = %183.2
  fs              %183.4 = FrameState         R     0x5649859c2d30+6257: [%342.0, 1L, %46.2, %366.0, 1L, %56.2, %578.1, %182.2], env=e0.4
  void                    Deopt              !v    %183.4, %183.3, %183.1   !
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prefix, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    indent, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exdent, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     strsplit, <0x5649831d0588>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p8, e0.0
  val?            %0.3  = NamedCall          !     %0.1(%0.2, "
[ 	
]*
", perl=true) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    strsplit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    initial, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    k, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     seq_len, e0.0
  prom-           %0.2  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p14, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  val?            %0.4  = Minus              !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    k, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    currentIndex, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1L, e0.0   <val?_>
  void                    Return             l     %0.4
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    currentIndex, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x564982e86940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p18, e0.0
  prom-           %0.3  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p19, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    initial, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, <0x5649859c7998>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p20, e0.0
  prom-           %0.3  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p21, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prefix, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nBlocks, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  void                    Visible            v     
  val?            %0.4  = Sub                !     %0.2, 1L, e0.0   <int$->
  void                    Return             l     %0.4
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x564982e86940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p23, e0.0
  prom-           %0.3  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p24, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    indentString, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, <0x5649859c7998>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p25, e0.0
  prom-           %0.3  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p26, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exdentString, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nBlocks, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  void                    Visible            v     
  val?            %0.4  = Sub                !     %0.2, 1L, e0.0   <int$->
  void                    Return             l     %0.4
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str$->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    k, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p28, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    k, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     paste, <0x56498317cda8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p30, e0.0
  val?            %0.3  = NamedCall          !     %0.1(%0.2, collapse=" ") e0.0   <str$->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    words, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB10 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    lowerBlockIndex, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  lgl$#-          %2.2  = IsType                   %2.1 isA val+   <true>
  void                    Branch                   %2.2 -> BB9 (if true) | BB3 (if false)
BB10   <- [0]
  prom-           %10.0 = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p33, e0.0
  prom-           %10.1 = %10.0
  goto BB7
BB9   <- [2]
  val?^ | miss    %9.0  = LdVar              eR    k, e0.0
  val?            %9.1  = Force<value>       !v    %9.0, e0.0   <int$->
  val?            %9.2  = %9.1
  goto BB4
BB3   <- [2]
  prom-           %3.0  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p32, e0.0
  prom-           %3.1  = %3.0
  goto BB4
BB7   <- [10, 6]
  val?            %7.0  = Phi                      %6.4:BB6, %10.1:BB10
  val?            %7.1  = %7.0
  val?            %7.2  = Extract1_1D        !v    %0.2, %7.1, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %7.2
BB4   <- [3, 9]
  val?            %4.0  = Phi                      %9.2:BB9, %3.1:BB3
  val?            %4.1  = %4.0
  val?            %4.2  = Extract1_1D        !v    %2.1, %4.1, e0.0   <int$->
  val?^ | miss    %4.3  = LdVar              eR    upperBlockIndex, e0.0
  val?            %4.4  = Force<value>       !v    %4.3, e0.0   <int$->
  lgl$#-          %4.5  = IsType                   %4.4 isA val+   <true>
  void                    Branch                   %4.5 -> BB8 (if true) | BB5 (if false)
BB8   <- [4]
  val?^ | miss    %8.0  = LdVar              eR    k, e0.0
  val?            %8.1  = Force<value>       !v    %8.0, e0.0   <int$->
  val?            %8.2  = %8.1
  goto BB6
BB5   <- [4]
  prom-           %5.0  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p31, e0.0
  prom-           %5.1  = %5.0
  goto BB6
BB6   <- [5, 8]
  val?            %6.0  = Phi                      %8.2:BB8, %5.1:BB5
  val?            %6.1  = %6.0
  val?            %6.2  = Extract1_1D        !v    %4.4, %6.1, e0.0   <int$->
  val?            %6.3  = Colon              !v    %4.2, %6.2, e0.0   <int->
  val?            %6.4  = %6.3
  goto BB7
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    k, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    k, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    lowerBlockIndex, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB7 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    k, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB7   <- [0]
  prom-           %7.0  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p35, e0.0
  prom-           %7.1  = %7.0
  goto BB3
BB3   <- [7, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %7.1:BB7
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <val?_>
  val?^ | miss    %3.3  = LdVar              eR    upperBlockIndex, e0.0
  val?            %3.4  = Force              !v    %3.3, e0.0   <val?_>
  lgl$#-          %3.5  = IsType                   %3.4 isA val+   <@?>
  void                    Branch                   %3.5 -> BB6 (if true) | BB4 (if false)
BB6   <- [3]
  val?^ | miss    %6.0  = LdVar              eR    k, e0.0
  val?            %6.1  = Force              !v    %6.0, e0.0   <val?_>
  val?            %6.2  = %6.1
  goto BB5
BB4   <- [3]
  prom-           %4.0  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p34, e0.0
  prom-           %4.1  = %4.0
  goto BB5
BB5   <- [4, 6]
  val?            %5.0  = Phi                      %6.2:BB6, %4.1:BB4
  val?            %5.1  = %5.0
  val?            %5.2  = Extract1_1D        !v    %3.4, %5.1, e0.0   <val?_>
  void                    Visible            v     
  val?            %5.4  = Colon              !     %3.2, %5.2, e0.0   <val?_>
  void                    Return             l     %5.4
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    k, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    k, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    currentIndex, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  void                    Visible            v     
  val?            %0.4  = Add                !     %0.2, 1L, e0.0   <val?_>
  void                    Return             l     %0.4
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prefix, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    enc, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str$->
  void                    Visible            v     
  val?            %0.4  = Eq                 !     %0.2, "latin1", e0.0   <lgl$->
  void                    Return             l     %0.4
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <vec$->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, strwrap[0x5649854b8c40]_p47, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ strwrap[0x5649854b8c40]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
