
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55eeed9c6420]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
FUN[0x55eeed9c6420]
BB0
  val?~+          %0.0  = LdArg                    0
  val+            %0.1  = Force<lazy>              %0.0,    <val?->
  lgl$#-          %0.2  = CallSafeBuiltin    wed   is.expression(%0.1)    <lgl$->
  env             e0.3  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %0.2 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Visible            v     
  str$#-          %2.1  = "expression"
  goto BB3
BB4   <- [0]
  lgl$#-          %4.0  = CallSafeBuiltin    wed   is.call(%0.1)    <lgl$->
  void                    Branch                   %4.0 -> BB5 (if true) | BB18 (if false)
BB3   <- [2, 20, 52]
  str$#-          %3.0  = Phi                      %20.2:BB20, %52.1:BB52, %2.1:BB2
  str$#-          %3.1  = %3.0
  void                    Return             l     %3.1
BB5   <- [4]
  prom-           %5.0  = MkArg                    unboundValue, FUN[0x55eeed9c6420]_p1, e0.3
  ct              %5.1  = PushContext        lCL   %5.0, deparse([[(x, 1L)), function(expr, width.cutoff=60L, backtick=%in%|..., e0.3
  val?^           %5.2  = CastType                 up %5.0
  env             e5.3  = MkEnv              l     expr=%5.2, width.cutoff(miss)=60L, backtick(miss)=missingArg, control(miss)=missingArg, nlines(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %5.4  = MkArg                    unboundValue, FUN[0x55eeed9c6420]_p3, e5.3
  val?^ | miss    %5.5  = CastType                 up %5.4
  void                    StArg              lW    backtick, %5.5, e5.3
  prom-           %5.7  = MkArg                    unboundValue, FUN[0x55eeed9c6420]_p7, e5.3
  val?^ | miss    %5.8  = CastType                 up %5.7
  void                    StArg              lW    control, %5.8, e5.3
  prom-           %5.10 = MkArg                    unboundValue, FUN[0x55eeed9c6420]_p8 (!refl), 
  val?^ | miss    %5.11 = CastType                 up %5.10
  void                    StArg              lW    nlines, %5.11, e5.3
  val?            %5.13 = Force!<lazy>       !vr   %5.2,    <sym->
  val?            %5.14 = Force!<lazy>       !v    %5.5, e5.3   <lgl$->
  val?^ | miss    %5.15 = LdVar              eR    .deparseOpts, e5.3
  lgl$#-          %5.16 = Identical                %5.15, function(control) <(rir::DispatchTable*)0x55ee|...
  void                    Branch                   %5.16 -> BB26 (if true) | BB27 (if false)
BB18   <- [4]
  lgl$#-          %18.0 = CallSafeBuiltin    wed   is.symbol(%0.1)    <lgl$->
  void                    Branch                   %18.0 -> BB19 (if true) | BB21 (if false)
BB26   <- [5]
  val?^ | miss    %26.0 = LdVar              eR    control, e5.3
  val?            %26.1 = Force!<lazy>       !v    %26.0, e5.3   <str->
  prom-           %26.2 = MkArg                    %26.1, FUN[0x55eeed9c6420]_p9 (!refl), 
  val?            %26.3 = StaticCall         !v    .deparseOpts[0x55eeed9ad9a0](%26.2) e5.3   <real$->
  lgl$#-          %26.4 = IsType                   %26.3 isA real$-
  void                    Branch                   %26.4 -> BB28 (if true) | BB29 (if false)
BB27   <- [5]
  fs              %27.0 = FrameState         R     0x55eeed937080+253: [], env=e0.3
  fs              %27.1 = FrameState         R     0x55eeecdd0120+37: [%5.13, 60L, %5.14], env=e5.3, next=%27.0
  void                    Deopt              !v    %27.1, CallTarget@0x55eeecc2aef0[Call#4], %5.15   !
BB19   <- [18]
  void                    Visible            v     
  str$#-          %19.1 = "name"
  goto BB20
BB21   <- [18]
  str$-           %21.0 = CallSafeBuiltin    wed   typeof(%0.1)    <str$->
  int$-           %21.1 = Length                   %21.0
  void                    StVar              lW    tx, %21.0, e0.3
  lgl$-           %21.3 = Eq                 d     %21.1, 1L, elided   <true>
  lgl$#-          %21.4 = Identical                %21.3, true
  void                    Branch                   %21.4 -> BB32 (if true) | BB33 (if false)
BB28   <- [26]
  real$-          %28.0 = CastType           d     dn %26.3
  val?^ | miss    %28.1 = LdVar              eR    nlines, e5.3
  val?            %28.2 = Force!<lazy>       !v    %28.1, e5.3   <int$->
  val?            %28.3 = CallBuiltin        !v    deparse(%5.13, 60L, %5.14, %28.0, %28.2) e5.3
  val?            %28.4 = PopContext         C     %28.3, %5.1   <str$->
  lgl$#-          %28.5 = IsType                   %28.4 isA val+   <true>
  lgl$#-          %28.6 = IsType                   %28.4 isA val?-
  void                    Branch                   %28.5 -> BB30 (if true) | BB31 (if false)
BB29   <- [26]
  fs              %29.0 = FrameState         R     0x55eeed937080+253: [], env=e0.3
  fs              %29.1 = FrameState         R     0x55eeecdd0120+74: [%5.13, 60L, %5.14, %26.3], env=e5.3, next=%29.0
  void                    Deopt              !v    %29.1, Typecheck@0x55eeecc2aef0[Type#9], %26.3   !
BB20   <- [19, 38]
  str$#-          %20.0 = Phi                      %38.1:BB38, %19.1:BB19
  str$#-          %20.1 = %20.0
  str$#-          %20.2 = %20.1
  goto BB3
BB32   <- [21]
  lgl$-           %32.0 = CallSafeBuiltin    wed   is.na(%21.0) 
  lgl$#-          %32.1 = CheckTrueFalse     e     %32.0   <false>
  void                    Branch                   %32.1 -> BB37 (if true) | BB36 (if false)
BB33   <- [21]
  fs              %33.0 = FrameState         R     0x55eeed937080+708: [%21.0], env=e0.3
  void                    Deopt              !v    %33.0, DeadBranchReached@0x55eeed065508[Test#14], %21.4
BB30   <- [28]
  void                    Branch                   %28.6 -> BB34 (if true) | BB35 (if false)
BB31   <- [28]
  void                    Nop                !     
  lgl$#-          %31.1 = %28.5
  dr              %31.2 = DeadBranchReached@0x55eeed065508[Test#3]
  goto BB10
BB37   <- [32]
  void                    Nop                !     
  lgl$#-          %37.1 = %32.1
  dr              %37.2 = DeadBranchReached@0x55eeed065508[Test#23]
  goto BB23
BB36   <- [32]
  lgl$-           %36.0 = Eq                 d     %21.0, double, elided
  lgl$#-          %36.1 = CheckTrueFalse     e     %36.0   <true>
  void                    Branch                   %36.1 -> BB38 (if true) | BB39 (if false)
BB34   <- [30]
  val?-           %34.0 = CastType           d     dn %28.4   <str$->
  val?            %34.1 = Extract1_1D        wed   %34.0, 1L, elided   <str$->
  lgl$-           %34.2 = Is                       %34.1, logical
  lgl$-           %34.3 = Is                       %34.1, integer
  lgl$-           %34.4 = Is                       %34.1, double
  lgl$-           %34.5 = Is                       %34.1, complex
  lgl$-           %34.6 = Is                       %34.1, character   <true>
  lgl$-           %34.7 = Is                       %34.1, raw
  lgl$-           %34.8 = Is                       %34.1, list
  lgl$-           %34.9 = Is                       %34.1, expression
  lgl$-           %34.10 = LOr                      %34.9, %34.8
  lgl$-           %34.11 = LOr                      %34.10, %34.7
  lgl$-           %34.12 = LOr                      %34.11, %34.6
  lgl$-           %34.13 = LOr                      %34.12, %34.5
  lgl$-           %34.14 = LOr                      %34.13, %34.4
  lgl$-           %34.15 = LOr                      %34.14, %34.3
  lgl$-           %34.16 = LOr                      %34.15, %34.2   <true>
  lgl$#-          %34.17 = Identical                %34.16, true
  int$-           %34.18 = Length                   %34.1
  lgl$-           %34.19 = Is                       %34.1, Factor   <false>
  lgl$#-          %34.20 = Identical                %34.19, false
  lgl$#-          %34.21 = Identical                %34.6, true
  lgl$#-          %34.22 = IsType                   %34.1 isA val?-
  void                    Branch                   %34.17 -> BB40 (if true) | BB41 (if false)
BB35   <- [30]
  void                    Nop                !     
  val?            %35.1 = %28.4
  dr              %35.2 = Typecheck@0x55eeed065508[Type#8]
  goto BB10
BB10   <- [31, 35]
  val?^ | miss    %10.0 = Phi                      %31.1:BB31, %35.1:BB35
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %31.2:BB31, %35.2:BB35
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x55eeed937080+253: [%28.4], env=e0.3
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB23   <- [37, 39]
  val?^ | miss    %23.0 = Phi                      %37.1:BB37, %39.1:BB39
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %37.2:BB37, %39.2:BB39
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x55eeed937080+965: [%21.0, %32.0], env=e0.3
  void                    Deopt              !v    %23.4, %23.3, %23.1
BB38   <- [36]
  void                    Visible            v     
  str$#-          %38.1 = "numeric"
  goto BB20
BB39   <- [36]
  void                    Nop                !     
  lgl$#-          %39.1 = %36.1
  dr              %39.2 = DeadBranchReached@0x55eeed065508[Test#24]
  goto BB23
BB40   <- [34]
  lgl$-           %40.0 = Eq                 d     %34.18, 1L, elided   <true>
  lgl$#-          %40.1 = Identical                %40.0, true
  void                    Branch                   %40.1 -> BB42 (if true) | BB43 (if false)
BB41   <- [34]
  void                    Nop                !     
  lgl$#-          %41.1 = %34.17
  dr              %41.2 = DeadBranchReached@0x55eeed065508[Test#4]
  goto BB12
BB42   <- [40]
  void                    Branch                   %34.20 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  void                    Nop                !     
  lgl$#-          %43.1 = %40.1
  dr              %43.2 = DeadBranchReached@0x55eeed065508[Test#5]
  goto BB12
BB12   <- [41, 43, 45, 47, 49]
  val?^ | miss    %12.0 = Phi                      %41.1:BB41, %43.1:BB43, %45.1:BB45, %47.1:BB47, %49.1:BB49
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %41.2:BB41, %43.2:BB43, %45.2:BB45, %47.2:BB47, %49.2:BB49
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x55eeed937080+296: [%34.1], env=e0.3
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB44   <- [42]
  void                    Branch                   %34.21 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  void                    Nop                !     
  lgl$#-          %45.1 = %34.20
  dr              %45.2 = DeadBranchReached@0x55eeed065508[Test#6]
  goto BB12
BB46   <- [44]
  void                    Branch                   %34.22 -> BB48 (if true) | BB49 (if false)
BB47   <- [44]
  void                    Nop                !     
  lgl$#-          %47.1 = %34.21
  dr              %47.2 = DeadBranchReached@0x55eeed065508[Test#7]
  goto BB12
BB48   <- [46]
  val?-           %48.0 = CastType           d     dn %34.1   <str$->
  lgl-            %48.1 = CallSafeBuiltin    wed   is.na(%48.0) 
  lgl$#-          %48.2 = CheckTrueFalse     we    %48.1   <false>
  void                    Branch                   %48.2 -> BB51 (if true) | BB50 (if false)
BB49   <- [46]
  void                    Nop                !     
  val?            %49.1 = %34.1
  dr              %49.2 = Typecheck@0x55eeed065508[Type#9]
  goto BB12
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x55eeed937080+488: [%48.0, %48.2], env=e0.3
  void                    Deopt              !v    %51.0, DeadBranchReached@0x55eeed065508[Test#10], %48.2   !
BB50   <- [48]
  lgl-            %50.0 = Eq                 wed   %48.0, (, elided
  lgl$#-          %50.1 = CheckTrueFalse     we    %50.0   <false>
  void                    Branch                   %50.1 -> BB53 (if true) | BB52 (if false)
BB53   <- [50]
  fs              %53.0 = FrameState         R     0x55eeed937080+512: [%48.0, %50.1], env=e0.3
  void                    Deopt              !v    %53.0, DeadBranchReached@0x55eeed065508[Test#11], %50.1   !
BB52   <- [50]
  void                    Visible            v     
  str$#-          %52.1 = "call"
  goto BB3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %in%, <0x55eeebd93c40>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55eeed9c6420]_p4, e0.0
  prom-           %0.3  = MkArg                    unboundValue, FUN[0x55eeed9c6420]_p6, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <lgl$->
  void                    Return             l     %0.4
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mode, <0x55eeecb61140>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55eeed9c6420]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1("call", "expression", "(", "function") e0.0   <str->
  void                    Return             l     %0.2
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1("keepNA", "keepInteger", "niceNames", "showAttributes") e0.0   <str->
  void                    Return             l     %0.2
Prom 8:
BB0
  void                    Visible            v     
  void                    Return             l     -1L
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    control, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3

│ FUN[0x55eeed9c6420]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
