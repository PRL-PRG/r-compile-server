
┌──────────────────────────────────────────────────────────────────────────────┐
│ asNamespace[0x55eeedffe0d0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
asNamespace[0x55eeedffe0d0]
BB0
  val?~+          %0.0  = LdArg                    1
  val?~+          %0.1  = LdArg                    0
  val+            %0.2  = Force!<lazy>             %0.1,    <env->
  lgl$#-          %0.3  = IsType                   %0.2 isA val?-
  void                    Branch                   %0.3 -> BB32 (if true) | BB33 (if false)
BB32   <- [0]
  val-            %32.0 = CastType           d     dn %0.2   <env->
  lgl$#-          %32.1 = CallSafeBuiltin    wed   is.character(%32.0)    <lgl$->
  env             e32.2 = MkEnv              l     ns=%0.1, base.OK=%0.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %32.1 -> BB30 (if true) | BB3 (if false)
BB33   <- [0]
  env             e33.0 = (MkEnv)            l     ns=%0.1, base.OK=%0.0, parent=R_BaseNamespace, context 1
  fs              %33.1 = FrameState         R     0x55eeedf097d0+69: [<blt is.character>, %0.2], env=e33.0
  void                    Deopt              !v    %33.1, Typecheck@0x55eeece175d8[Type#1], %0.2
BB30   <- [32]
  void                    Nop                !     
  lgl$#-          %30.1 = %32.1
  goto BB4
BB3   <- [32]
  lgl$#-          %3.0  = CallSafeBuiltin    wed   is.symbol(%0.2)    <lgl$->
  lgl$-           %3.1  = LOr                      %32.1, %3.0
  lgl$-           %3.2  = %3.1
  goto BB4
BB4   <- [3, 30]
  lgl$-           %4.0  = Phi                      %3.2:BB3, %30.1:BB30
  lgl$-           %4.1  = %4.0
  lgl$#-          %4.2  = CheckTrueFalse     e     %4.1
  void                    Branch                   %4.2 -> BB24 (if true) | BB5 (if false)
BB24   <- [4]
  prom-           %24.0 = MkArg                    unboundValue, asNamespace[0x55eeedffe0d0]_p0 (!refl), e32.2
  ct              %24.1 = PushContext        lCL   %24.0, getNamespace(ns), function(name) <(rir::DispatchTable*)0x55eeee1|..., e32.2
  val?^           %24.2 = CastType                 up %24.0
  env             e24.3 = MkEnv              l     name=%24.2, parent=R_BaseNamespace, context 1
  val?            %24.4 = Force!<lazy>       !vr   %24.2,    <str$+>
  lgl$#-          %24.5 = IsType                   %24.4 isA val?+
  void                    Branch                   %24.5 -> BB36 (if true) | BB37 (if false)
BB5   <- [4]
  void                    Nop                !     
  goto BB6
BB36   <- [24]
  val?+           %36.0 = CastType           d     dn %24.4   <str$+>
  val?            %36.1 = CallBuiltin        !v    getRegisteredNamespace(%36.0) e24.3   <env->
  lgl$-           %36.2 = Is                       %36.1, NULL
  void                    StVar              lW    ns, %36.1, e24.3
  val             %36.4 = ChkMissing         e     %36.1
  lgl$-           %36.5 = Not                d     %36.2, elided
  lgl$#-          %36.6 = CheckTrueFalse     e     %36.5
  void                    Branch                   %36.6 -> BB29 (if true) | BB27 (if false)
BB37   <- [24]
  fs              %37.0 = FrameState         R     0x55eeedf097d0+244: [], env=e32.2
  fs              %37.1 = FrameState         R     0x55eeee91fd40+9: [%24.4], env=e24.3, next=%37.0
  void                    Deopt              !v    %37.1, Typecheck@0x55eeee32ee08[Type#0], %24.4   !
BB6   <- [5, 28]
  val?^ | miss    %6.0  = LdVar              eR    isNamespace, e32.2
  lgl$#-          %6.1  = Identical                %6.0, function(ns) <(rir::DispatchTable*)0x55eeee01d|...
  void                    Branch                   %6.1 -> BB34 (if true) | BB35 (if false)
BB29   <- [36]
  void                    Nop                !     
  val?            %29.1 = %36.1
  goto BB28
BB27   <- [36]
  (cls|spec|blt)  %27.0 = LdFun              !v    loadNamespace, e24.3
  prom-           %27.1 = MkArg                    unboundValue, asNamespace[0x55eeedffe0d0]_p2, e24.3
  val?            %27.2 = Call               !v    %27.0(%27.1) e24.3   <val?_>
  val?            %27.3 = %27.2
  goto BB28
BB34   <- [6]
  prom-           %34.0 = MkArg                    unboundValue, asNamespace[0x55eeedffe0d0]_p1 (!refl), e32.2
  ct              %34.1 = PushContext        lCL   %34.0, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x55eeee01d|..., e32.2
  val?^           %34.2 = CastType                 up %34.0
  env             e34.3 = MkEnv              l     ns=%34.2, parent=R_BaseNamespace, context 1
  val?            %34.4 = Force!<lazy>       !vrL  %34.2, e34.3   <env->
  val?            %34.5 = CallBuiltin        !v    isNamespaceEnv(%34.4) e34.3
  val?            %34.6 = PopContext         C     %34.5, %34.1   <lgl$->
  lgl$#-          %34.7 = IsType                   %34.6 isA lgl$-
  void                    Branch                   %34.7 -> BB38 (if true) | BB39 (if false)
BB35   <- [6]
  fs              %35.0 = FrameState         R     0x55eeedf097d0+258: [], env=e32.2
  void                    Deopt              !v    %35.0, CallTarget@0x55eeece175d8[Call#3], %6.0   !
BB28   <- [29, 27]
  val?            %28.0 = Phi                      %27.3:BB27, %29.1:BB29
  val?            %28.1 = %28.0
  val?            %28.2 = PopContext         C     %28.1, %24.1   <env->
  void                    StVar              lW    ns, %28.2, e32.2
  goto BB6
BB38   <- [34]
  lgl$-           %38.0 = CastType           d     dn %34.6
  lgl$-           %38.1 = Not                d     %38.0, elided
  lgl$#-          %38.2 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.2 -> BB23 (if true) | BB11 (if false)
BB39   <- [34]
  fs              %39.0 = FrameState         R     0x55eeedf097d0+290: [%34.6], env=e32.2
  void                    Deopt              !v    %39.0, Typecheck@0x55eeece175d8[Type#9], %34.6   !
BB23   <- [38]
  (cls|spec|blt)  %23.0 = LdFun              !v    stop, e32.2
  fs              %23.1 = FrameState         R     0x55eeedf097d0+435: [%23.0], env=e32.2
  void                    Deopt              !v    %23.1, DeadCall@0x55eeece175d8[Call#6], %23.0   !
BB11   <- [38]
  val?^ | miss    %11.0 = LdVar              eR    base.OK, e32.2
  val?            %11.1 = Force!<lazy>       !v    %11.0, e32.2   <lgl$->
  lgl$#-          %11.2 = IsType                   %11.1 isA lgl$-
  void                    Branch                   %11.2 -> BB40 (if true) | BB41 (if false)
BB40   <- [11]
  lgl$-           %40.0 = CastType           d     dn %11.1
  lgl$-           %40.1 = Not                d     %40.0, elided
  lgl$-           %40.2 = AsLogical                %40.1
  lgl$#-          %40.3 = Identical                %40.2, false
  void                    Branch                   %40.3 -> BB22 (if true) | BB14 (if false)
BB41   <- [11]
  void                    Nop                !     
  val?            %41.1 = %11.1
  dr              %41.2 = Typecheck@0x55eeece175d8[Type#10]
  goto BB12
BB22   <- [40]
  void                    Nop                !     
  lgl$-           %22.1 = %40.2
  goto BB19
BB14   <- [40]
  val?^ | miss    %14.0 = LdVar              eR    isBaseNamespace, e32.2
  lgl$#-          %14.1 = Identical                %14.0, function(ns) <(rir::DispatchTable*)0x55eeedd4e|...
  void                    Branch                   %14.1 -> BB42 (if true) | BB43 (if false)
BB12   <- [41, 43]
  val?^ | miss    %12.0 = Phi                      %41.1:BB41, %43.1:BB43
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %41.2:BB41, %43.2:BB43
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x55eeedf097d0+311: [%11.1], env=e32.2
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB19   <- [22, 46]
  lgl$-           %19.0 = Phi                      %46.3:BB46, %22.1:BB22
  lgl$-           %19.1 = %19.0
  lgl$#-          %19.2 = CheckTrueFalse     e     %19.1
  void                    Branch                   %19.2 -> BB21 (if true) | BB20 (if false)
BB42   <- [14]
  prom-           %42.0 = MkArg                    unboundValue, asNamespace[0x55eeedffe0d0]_p3, e32.2
  ct              %42.1 = PushContext        lCL   %42.0, isBaseNamespace(ns), function(ns) <(rir::DispatchTable*)0x55eeedd4e|..., e32.2
  val?^           %42.2 = CastType                 up %42.0
  env             e42.3 = MkEnv              l     ns=%42.2, parent=R_BaseNamespace, context 1
  prom-           %42.4 = MkArg                    unboundValue, asNamespace[0x55eeedffe0d0]_p4, e42.3
  prom-           %42.5 = MkArg                    unboundValue, asNamespace[0x55eeedffe0d0]_p5, e42.3
  ct              %42.6 = PushContext        lCL   %42.4, %42.5, identical(ns, .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e42.3
  val?^           %42.7 = CastType                 up %42.5
  val?^           %42.8 = CastType                 up %42.4
  env             e42.9 = MkEnv              l     x=%42.8, y=%42.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %42.10 = Force!<lazy>       !vL   %42.8, e42.9   <val?+>
  val?            %42.11 = Force!<lazy>       !vL   %42.7, e42.9   <val?+>
  val?            %42.12 = CallBuiltin        !v    identical(%42.10, %42.11, true, true, true, true, false, true) e42.9
  val?            %42.13 = PopContext         C     %42.12, %42.6   <lgl$->
  lgl$#-          %42.14 = IsType                   %42.13 isA lgl$-
  void                    Branch                   %42.14 -> BB44 (if true) | BB45 (if false)
BB43   <- [14]
  void                    Nop                !     
  val?^ | miss    %43.1 = %14.0
  dr              %43.2 = CallTarget@0x55eeece175d8[Call#4]
  goto BB12
BB21   <- [19]
  (cls|spec|blt)  %21.0 = LdFun              !v    stop, e32.2
  fs              %21.1 = FrameState         R     0x55eeedf097d0+393: [%21.0], env=e32.2
  void                    Deopt              !v    %21.1, DeadCall@0x55eeece175d8[Call#5], %21.0   !
BB20   <- [19]
  val?^ | miss    %20.0 = LdVar              eR    ns, e32.2
  void                    Visible            v     
  val?            %20.2 = Force!<wrapped>    !     %20.0, e32.2   <env->
  void                    Return             l     %20.2
BB44   <- [42]
  lgl$-           %44.0 = CastType           d     dn %42.13
  val?            %44.1 = PopContext         C     %44.0, %42.1   <lgl$->
  lgl$#-          %44.2 = IsType                   %44.1 isA lgl$-
  void                    Branch                   %44.2 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x55eeedf097d0+356: [%40.2], env=e32.2
  fs              %45.1 = FrameState         R     0x55eeedd76df0+37: [%42.13], env=e42.3, next=%45.0
  void                    Deopt              !v    %45.1, Typecheck@0x55eeece18a78[Type#2], %42.13   !
BB46   <- [44]
  lgl$-           %46.0 = CastType           d     dn %44.1
  lgl$-           %46.1 = AsLogical                %46.0
  lgl$-           %46.2 = LAnd                     %40.2, %46.1
  lgl$-           %46.3 = %46.2
  goto BB19
BB47   <- [44]
  fs              %47.0 = FrameState         R     0x55eeedf097d0+356: [%40.2, %44.1], env=e32.2
  void                    Deopt              !v    %47.0, Typecheck@0x55eeece175d8[Type#12], %44.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseNamespaceEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ asNamespace[0x55eeedffe0d0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
