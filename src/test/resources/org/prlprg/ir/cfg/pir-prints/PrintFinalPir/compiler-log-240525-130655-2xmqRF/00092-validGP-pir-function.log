
┌──────────────────────────────────────────────────────────────────────────────┐
│ validGP[0x55eeee83d470]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
validGP[0x55eeee83d470]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     gpars=%0.0, parent=<env 0x55eeedfdc408>, context 1
  cls             %0.2  = MkCls                    validGP>check.length@0, e0.1
  cls             %0.3  = MkCls                    numnotnull, e0.1
  cls             %0.4  = MkCls                    checkNA, e0.1
  void                    StVar              lW    check.length, %0.2, e0.1
  void                    StVar              lW    numnotnull, %0.3, e0.1
  void                    StVar              lW    checkNA, %0.4, e0.1
  ct              %0.8  = PushContext        lCL   "fontsize", numnotnull("fontsize"), %0.3, e0.1
  val?^ | miss    %0.9  = LdVar              eR    is.na, <env 0x55eeedfdc408>
  lgl$#-          %0.10 = Identical                <blt is.na>, %0.9   <true>
  void                    Branch                   %0.10 -> BB230 (if true) | BB231 (if false)
BB230   <- [0]
  val?^ | miss    %230.0 = LdVar              eR    match, <env 0x55eeedfdc408>
  lgl$#-          %230.1 = Identical                %230.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %230.1 -> BB232 (if true) | BB233 (if false)
BB231   <- [0]
  void                    DropContext        C     
  fs              %231.1 = FrameState         R     0x55eeedf72df0+75: [], env=e0.1
  void                    Deopt              !v    %231.1, DeadBranchReached@0x55eeee44c3c8[Test#0], %0.10
BB232   <- [230]
  val?^ | miss    %232.0 = LdVar              eR    names, <env 0x55eeedfdc408>
  lgl$#-          %232.1 = Identical                %232.0, <blt names>
  void                    Branch                   %232.1 -> BB234 (if true) | BB235 (if false)
BB233   <- [230]
  void                    Nop                !     
  val?^ | miss    %233.1 = %230.0
  dr              %233.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB3
BB234   <- [232]
  env             e234.0 = MkEnv              l     gparname="fontsize", parent=e0.1, context 1
  val?            %234.1 = Force!<lazy>       !v    %0.0, e234.0   <vec->
  val?            %234.2 = CallBuiltin        !v    names(%234.1) e234.0   <nil->
  lgl$#-          %234.3 = IsType                   %234.2 isA val?-
  void                    Branch                   %234.3 -> BB236 (if true) | BB237 (if false)
BB235   <- [232]
  void                    Nop                !     
  val?^ | miss    %235.1 = %232.0
  dr              %235.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB3
BB3   <- [233, 235]
  val?^ | miss    %3.0  = Phi                      %233.1:BB233, %235.1:BB235
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %233.2:BB233, %235.2:BB235
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  env             e3.5  = (MkEnv)            l     gparname="fontsize", parent=e0.1, context 1
  fs              %3.6  = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e3.5, next=%3.4
  void                    Deopt              !v    %3.6, %3.3, %3.1   !
BB236   <- [234]
  val?-           %236.0 = CastType           d     dn %234.2   <nil->
  val+            %236.1 = CallSafeBuiltin    wed   match("fontsize", %236.0, NA, nil)    <int$->
  lgl$#-          %236.2 = IsType                   %236.1 isA int$-
  void                    Branch                   %236.2 -> BB238 (if true) | BB239 (if false)
BB237   <- [234]
  fs              %237.0 = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  fs              %237.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e234.0, next=%237.0
  prom-           %237.2 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p23, e234.0
  val?^           %237.3 = CastType                 up %237.2
  prom-           %237.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p22, e234.0
  val?^           %237.5 = CastType                 up %237.4
  env             e237.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%237.3, x=%237.5, parent=R_BaseNamespace, context 0
  fs              %237.7 = FrameState         R     0x55eeec291d40+23: ["fontsize"], env=e237.6, next=%237.1
  fs              %237.8 = FrameState         R     0x55eeee0f3040+32(pr): [%234.2], env=e234.0, next=%237.7
  void                    Deopt              !v    %237.8, Typecheck@0x55eeec2e4cb0[Type#1], %234.2   !
BB238   <- [236]
  int$-           %238.0 = CastType           d     dn %236.1
  lgl$-           %238.1 = CallSafeBuiltin    wed   is.na(%238.0)    <lgl$->
  lgl$-           %238.2 = Not                d     %238.1, elided
  lgl$#-          %238.3 = CheckTrueFalse     e     %238.2
  void                    Branch                   %238.3 -> BB221 (if true) | BB9 (if false)
BB239   <- [236]
  fs              %239.0 = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  prom-           %239.1 = MkArg                    %236.0, validGP[0x55eeee83d470]_p23 (!refl), e234.0
  val?~           %239.2 = CastType                 up %239.1
  fs              %239.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e234.0, next=%239.0
  prom-           %239.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p22, e234.0
  val?^           %239.5 = CastType                 up %239.4
  env             e239.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%239.2, x=%239.5, parent=R_BaseNamespace, context 0
  fs              %239.7 = FrameState         R     0x55eeec291d40+69: [%236.1], env=e239.6, next=%239.3
  void                    Deopt              !v    %239.7, Typecheck@0x55eeee44c3c8[Type#7], %236.1   !
BB221   <- [238]
  val?^ | miss    %221.0 = LdVar              eR    gpars, e234.0
  val?            %221.1 = Force!             !v    %221.0, e234.0   <val?_>
  lgl$#-          %221.2 = IsType                   %221.1 isA val+   <@?>
  void                    Branch                   %221.2 -> BB228 (if true) | BB222 (if false)
BB9   <- [238]
  void                    Nop                !     
  goto BB10
BB228   <- [221]
  val?^ | miss    %228.0 = LdVar              eR    gparname, e234.0
  val?            %228.1 = Force!             !v    %228.0, e234.0   <val?_>
  val?            %228.2 = %228.1
  goto BB223
BB222   <- [221]
  prom-           %222.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p25, e234.0
  prom-           %222.1 = %222.0
  goto BB223
BB10   <- [9, 244]
  val?            %10.0 = PopContext         C     nil, %0.8
  val?^ | miss    %10.1 = LdVar              eR    checkNA, e0.1
  lgl$#-          %10.2 = Identical                %10.1, %0.4
  void                    Branch                   %10.2 -> BB240 (if true) | BB241 (if false)
BB223   <- [222, 228]
  val?            %223.0 = Phi                      %228.2:BB228, %222.1:BB222
  val?            %223.1 = %223.0
  val?            %223.2 = Extract2_1D        !v    %221.1, %223.1, e234.0   <val?_>
  lgl$-           %223.3 = Is                       %223.2, NULL
  lgl$#-          %223.4 = CheckTrueFalse     e     %223.3
  void                    Branch                   %223.4 -> BB225 (if true) | BB224 (if false)
BB240   <- [10]
  val?            %240.0 = StaticCall         !v    checkNA[0x55eeedc71370]("fontsize") from %0.4 e0.1
  val?^ | miss    %240.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %240.2 = Identical                %240.1, %0.3
  void                    Branch                   %240.2 -> BB246 (if true) | BB247 (if false)
BB241   <- [10]
  fs              %241.0 = FrameState         R     0x55eeedf72df0+107: [%10.0], env=e0.1
  void                    Deopt              !v    %241.0, CallTarget@0x55eeee44c058[Call#1], %10.1   !
BB225   <- [223]
  val?^ | miss    %225.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %225.1 = LdVar              eR    gparname, e234.0
  val?            %225.2 = Force!             !v    %225.1, e234.0   <val?_>
  val?            %225.3 = Force!             !v    %225.0, e234.0
  lgl$#-          %225.4 = IsType                   %225.3 isA val?+
  lgl$#-          %225.5 = IsType                   %225.2 isA val?+
  void                    Branch                   %225.4 -> BB242 (if true) | BB243 (if false)
BB224   <- [223]
  fs              %224.0 = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  (cls|spec|blt)  %224.1 = LdFun              !v    check.length, e234.0
  fs              %224.2 = FrameState         R     0x55eeee790590+224: [%224.1], env=e234.0, next=%224.0
  void                    Deopt              !v    %224.2, DeadCall@0x55eeee44c3c8[Call#5], %224.1   !
BB246   <- [240]
  ct              %246.0 = PushContext        lCL   "lineheight", numnotnull("lineheight"), %0.3, e0.1
  val?^ | miss    %246.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %246.2 = Identical                <blt is.na>, %246.1   <true>
  void                    Branch                   %246.2 -> BB248 (if true) | BB249 (if false)
BB247   <- [240]
  void                    Nop                !     
  val?^ | miss    %247.1 = %240.1
  dr              %247.2 = CallTarget@0x55eeee44c058[Call#2]
  goto BB13
BB242   <- [225]
  val?+           %242.0 = CastType           d     dn %225.3
  void                    Branch                   %225.5 -> BB244 (if true) | BB245 (if false)
BB243   <- [225]
  void                    Nop                !     
  val?            %243.1 = %225.3
  dr              %243.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB226
BB248   <- [246]
  env             e248.0 = MkEnv              l     gparname="lineheight", parent=e0.1, context 1
  val?^ | miss    %248.1 = LdVar              eR    match, e248.0
  lgl$#-          %248.2 = Identical                %248.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %248.2 -> BB250 (if true) | BB251 (if false)
BB249   <- [246]
  void                    DropContext        C     
  lgl$#-          %249.1 = %246.2
  dr              %249.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB13
BB13   <- [247, 249]
  val?^ | miss    %13.0 = Phi                      %247.1:BB247, %249.1:BB249
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %247.2:BB247, %249.2:BB249
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55eeedf72df0+140: [%240.0], env=e0.1
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB244   <- [242]
  val?+           %244.0 = CastType           d     dn %225.2   <val?_>
  val?+           %244.1 = Subassign2_1D      wed   nil, %242.0, %244.0, elided
  void                    StVarSuper         lRW   gpars, %244.1, e234.0
  goto BB10
BB245   <- [242]
  void                    Nop                !     
  val?            %245.1 = %225.2
  dr              %245.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB226
BB226   <- [243, 245]
  val?^ | miss    %226.0 = Phi                      %243.1:BB243, %245.1:BB245
  val?^ | miss    %226.1 = %226.0
  dr              %226.2 = Phi                      %243.2:BB243, %245.2:BB245
  dr              %226.3 = %226.2
  fs              %226.4 = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  fs              %226.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %225.3, %225.2], env=e234.0, next=%226.4
  void                    Deopt              !v    %226.5, %226.3, %226.1   !
BB250   <- [248]
  val?^ | miss    %250.0 = LdVar              eR    names, e0.1
  lgl$#-          %250.1 = Identical                %250.0, <blt names>
  void                    Branch                   %250.1 -> BB252 (if true) | BB253 (if false)
BB251   <- [248]
  void                    Nop                !     
  val?^ | miss    %251.1 = %248.1
  dr              %251.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB15
BB252   <- [250]
  val?^ | miss    %252.0 = LdVar              eR    gpars, e248.0
  val?            %252.1 = Force!<lazy>       !v    %252.0, e248.0   <vec->
  val?            %252.2 = CallBuiltin        !v    names(%252.1) e248.0   <nil->
  lgl$#-          %252.3 = IsType                   %252.2 isA val?-
  void                    Branch                   %252.3 -> BB254 (if true) | BB255 (if false)
BB253   <- [250]
  void                    Nop                !     
  val?^ | miss    %253.1 = %250.0
  dr              %253.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB15
BB15   <- [251, 253]
  val?^ | miss    %15.0 = Phi                      %251.1:BB251, %253.1:BB253
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %251.2:BB251, %253.2:BB253
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  env             e15.5 = (MkEnv)            l     gparname="lineheight", parent=e0.1, context 1
  fs              %15.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e15.5, next=%15.4
  void                    Deopt              !v    %15.6, %15.3, %15.1   !
BB254   <- [252]
  val?-           %254.0 = CastType           d     dn %252.2   <nil->
  val+            %254.1 = CallSafeBuiltin    wed   match("lineheight", %254.0, NA, nil)    <int$->
  lgl$#-          %254.2 = IsType                   %254.1 isA int$-
  void                    Branch                   %254.2 -> BB256 (if true) | BB257 (if false)
BB255   <- [252]
  fs              %255.0 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  fs              %255.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e248.0, next=%255.0
  prom-           %255.2 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p27, e248.0
  val?^           %255.3 = CastType                 up %255.2
  prom-           %255.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p26, e248.0
  val?^           %255.5 = CastType                 up %255.4
  env             e255.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%255.3, x=%255.5, parent=R_BaseNamespace, context 0
  fs              %255.7 = FrameState         R     0x55eeec291d40+23: ["lineheight"], env=e255.6, next=%255.1
  fs              %255.8 = FrameState         R     0x55eeee0f3040+32(pr): [%252.2], env=e248.0, next=%255.7
  void                    Deopt              !v    %255.8, Typecheck@0x55eeec2e4cb0[Type#1], %252.2   !
BB256   <- [254]
  int$-           %256.0 = CastType           d     dn %254.1
  lgl$-           %256.1 = CallSafeBuiltin    wed   is.na(%256.0)    <lgl$->
  lgl$-           %256.2 = Not                d     %256.1, elided
  lgl$#-          %256.3 = CheckTrueFalse     e     %256.2
  void                    Branch                   %256.3 -> BB213 (if true) | BB21 (if false)
BB257   <- [254]
  fs              %257.0 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  prom-           %257.1 = MkArg                    %254.0, validGP[0x55eeee83d470]_p27 (!refl), e248.0
  val?~           %257.2 = CastType                 up %257.1
  fs              %257.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e248.0, next=%257.0
  prom-           %257.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p26, e248.0
  val?^           %257.5 = CastType                 up %257.4
  env             e257.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%257.2, x=%257.5, parent=R_BaseNamespace, context 0
  fs              %257.7 = FrameState         R     0x55eeec291d40+69: [%254.1], env=e257.6, next=%257.3
  void                    Deopt              !v    %257.7, Typecheck@0x55eeee44c3c8[Type#7], %254.1   !
BB213   <- [256]
  val?^ | miss    %213.0 = LdVar              eR    gpars, e248.0
  val?            %213.1 = Force!             !v    %213.0, e248.0   <val?_>
  lgl$#-          %213.2 = IsType                   %213.1 isA val+   <@?>
  void                    Branch                   %213.2 -> BB220 (if true) | BB214 (if false)
BB21   <- [256]
  void                    Nop                !     
  goto BB22
BB220   <- [213]
  val?^ | miss    %220.0 = LdVar              eR    gparname, e248.0
  val?            %220.1 = Force!             !v    %220.0, e248.0   <val?_>
  val?            %220.2 = %220.1
  goto BB215
BB214   <- [213]
  prom-           %214.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p29, e248.0
  prom-           %214.1 = %214.0
  goto BB215
BB22   <- [21, 264]
  val?            %22.0 = PopContext         C     nil, %246.0
  val?^ | miss    %22.1 = LdVar              eR    checkNA, e0.1
  lgl$#-          %22.2 = Identical                %22.1, %0.4
  void                    Branch                   %22.2 -> BB258 (if true) | BB259 (if false)
BB215   <- [214, 220]
  val?            %215.0 = Phi                      %220.2:BB220, %214.1:BB214
  val?            %215.1 = %215.0
  val?            %215.2 = Extract2_1D        !v    %213.1, %215.1, e248.0   <val?_>
  lgl$-           %215.3 = Is                       %215.2, NULL
  lgl$#-          %215.4 = CheckTrueFalse     e     %215.3
  void                    Branch                   %215.4 -> BB217 (if true) | BB216 (if false)
BB258   <- [22]
  val?            %258.0 = StaticCall         !v    checkNA[0x55eeedc71370]("lineheight") from %0.4 e0.1
  val?^ | miss    %258.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %258.2 = Identical                %258.1, %0.3
  void                    Branch                   %258.2 -> BB260 (if true) | BB261 (if false)
BB259   <- [22]
  fs              %259.0 = FrameState         R     0x55eeedf72df0+173: [%22.0], env=e0.1
  void                    Deopt              !v    %259.0, CallTarget@0x55eeee44c058[Call#3], %22.1   !
BB217   <- [215]
  val?^ | miss    %217.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %217.1 = LdVar              eR    gparname, e248.0
  val?            %217.2 = Force!             !v    %217.1, e248.0   <val?_>
  val?            %217.3 = Force!             !v    %217.0, e248.0
  lgl$#-          %217.4 = IsType                   %217.3 isA val?+
  lgl$#-          %217.5 = IsType                   %217.2 isA val?+
  void                    Branch                   %217.4 -> BB262 (if true) | BB263 (if false)
BB216   <- [215]
  fs              %216.0 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  (cls|spec|blt)  %216.1 = LdFun              !v    check.length, e248.0
  fs              %216.2 = FrameState         R     0x55eeee790590+224: [%216.1], env=e248.0, next=%216.0
  void                    Deopt              !v    %216.2, DeadCall@0x55eeee44c3c8[Call#5], %216.1   !
BB260   <- [258]
  ct              %260.0 = PushContext        lCL   "cex", numnotnull("cex"), %0.3, e0.1
  val?^ | miss    %260.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %260.2 = Identical                <blt is.na>, %260.1   <true>
  void                    Branch                   %260.2 -> BB266 (if true) | BB267 (if false)
BB261   <- [258]
  void                    Nop                !     
  val?^ | miss    %261.1 = %258.1
  dr              %261.2 = CallTarget@0x55eeee44c058[Call#4]
  goto BB25
BB262   <- [217]
  val?+           %262.0 = CastType           d     dn %217.3
  void                    Branch                   %217.5 -> BB264 (if true) | BB265 (if false)
BB263   <- [217]
  void                    Nop                !     
  val?            %263.1 = %217.3
  dr              %263.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB218
BB266   <- [260]
  env             e266.0 = MkEnv              l     gparname="cex", parent=e0.1, context 1
  val?^ | miss    %266.1 = LdVar              eR    match, e266.0
  lgl$#-          %266.2 = Identical                %266.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %266.2 -> BB268 (if true) | BB269 (if false)
BB267   <- [260]
  void                    DropContext        C     
  lgl$#-          %267.1 = %260.2
  dr              %267.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB25
BB25   <- [261, 267]
  val?^ | miss    %25.0 = Phi                      %261.1:BB261, %267.1:BB267
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %261.2:BB261, %267.2:BB267
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55eeedf72df0+206: [%258.0], env=e0.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB264   <- [262]
  val?+           %264.0 = CastType           d     dn %217.2   <val?_>
  val?+           %264.1 = Subassign2_1D      wed   nil, %262.0, %264.0, elided
  void                    StVarSuper         lRW   gpars, %264.1, e248.0
  goto BB22
BB265   <- [262]
  void                    Nop                !     
  val?            %265.1 = %217.2
  dr              %265.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB218
BB218   <- [263, 265]
  val?^ | miss    %218.0 = Phi                      %263.1:BB263, %265.1:BB265
  val?^ | miss    %218.1 = %218.0
  dr              %218.2 = Phi                      %263.2:BB263, %265.2:BB265
  dr              %218.3 = %218.2
  fs              %218.4 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  fs              %218.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %217.3, %217.2], env=e248.0, next=%218.4
  void                    Deopt              !v    %218.5, %218.3, %218.1   !
BB268   <- [266]
  val?^ | miss    %268.0 = LdVar              eR    names, e0.1
  lgl$#-          %268.1 = Identical                %268.0, <blt names>
  void                    Branch                   %268.1 -> BB270 (if true) | BB271 (if false)
BB269   <- [266]
  void                    Nop                !     
  val?^ | miss    %269.1 = %266.1
  dr              %269.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB27
BB270   <- [268]
  val?^ | miss    %270.0 = LdVar              eR    gpars, e266.0
  val?            %270.1 = Force!<lazy>       !v    %270.0, e266.0   <vec->
  val?            %270.2 = CallBuiltin        !v    names(%270.1) e266.0   <nil->
  lgl$#-          %270.3 = IsType                   %270.2 isA val?-
  void                    Branch                   %270.3 -> BB272 (if true) | BB273 (if false)
BB271   <- [268]
  void                    Nop                !     
  val?^ | miss    %271.1 = %268.0
  dr              %271.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB27
BB27   <- [269, 271]
  val?^ | miss    %27.0 = Phi                      %269.1:BB269, %271.1:BB271
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %269.2:BB269, %271.2:BB271
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  env             e27.5 = (MkEnv)            l     gparname="cex", parent=e0.1, context 1
  fs              %27.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e27.5, next=%27.4
  void                    Deopt              !v    %27.6, %27.3, %27.1   !
BB272   <- [270]
  val?-           %272.0 = CastType           d     dn %270.2   <nil->
  val+            %272.1 = CallSafeBuiltin    wed   match("cex", %272.0, NA, nil)    <int$->
  lgl$#-          %272.2 = IsType                   %272.1 isA int$-
  void                    Branch                   %272.2 -> BB274 (if true) | BB275 (if false)
BB273   <- [270]
  fs              %273.0 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  prom-           %273.1 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p31, e266.0
  val?^           %273.2 = CastType                 up %273.1
  prom-           %273.3 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p30, e266.0
  val?^           %273.4 = CastType                 up %273.3
  fs              %273.5 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e266.0, next=%273.0
  env             e273.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%273.2, x=%273.4, parent=R_BaseNamespace, context 0
  fs              %273.7 = FrameState         R     0x55eeec291d40+23: ["cex"], env=e273.6, next=%273.5
  fs              %273.8 = FrameState         R     0x55eeee0f3040+32(pr): [%270.2], env=e266.0, next=%273.7
  void                    Deopt              !v    %273.8, Typecheck@0x55eeec2e4cb0[Type#1], %270.2   !
BB274   <- [272]
  int$-           %274.0 = CastType           d     dn %272.1
  lgl$-           %274.1 = CallSafeBuiltin    wed   is.na(%274.0)    <lgl$->
  lgl$-           %274.2 = Not                d     %274.1, elided
  lgl$#-          %274.3 = CheckTrueFalse     e     %274.2
  void                    Branch                   %274.3 -> BB205 (if true) | BB33 (if false)
BB275   <- [272]
  fs              %275.0 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  prom-           %275.1 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p30, e266.0
  val?^           %275.2 = CastType                 up %275.1
  prom-           %275.3 = MkArg                    %272.0, validGP[0x55eeee83d470]_p31 (!refl), e266.0
  val?~           %275.4 = CastType                 up %275.3
  fs              %275.5 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e266.0, next=%275.0
  env             e275.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%275.4, x=%275.2, parent=R_BaseNamespace, context 0
  fs              %275.7 = FrameState         R     0x55eeec291d40+69: [%272.1], env=e275.6, next=%275.5
  void                    Deopt              !v    %275.7, Typecheck@0x55eeee44c3c8[Type#7], %272.1   !
BB205   <- [274]
  val?^ | miss    %205.0 = LdVar              eR    gpars, e266.0
  val?            %205.1 = Force!             !v    %205.0, e266.0   <val?_>
  lgl$#-          %205.2 = IsType                   %205.1 isA val+   <@?>
  void                    Branch                   %205.2 -> BB212 (if true) | BB206 (if false)
BB33   <- [274]
  void                    Nop                !     
  goto BB34
BB212   <- [205]
  val?^ | miss    %212.0 = LdVar              eR    gparname, e266.0
  val?            %212.1 = Force!             !v    %212.0, e266.0   <val?_>
  val?            %212.2 = %212.1
  goto BB207
BB206   <- [205]
  prom-           %206.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p33, e266.0
  prom-           %206.1 = %206.0
  goto BB207
BB34   <- [33, 284]
  val?            %34.0 = PopContext         C     nil, %260.0
  val?^ | miss    %34.1 = LdVar              eR    checkNA, e0.1
  lgl$#-          %34.2 = Identical                %34.1, %0.4
  void                    Branch                   %34.2 -> BB276 (if true) | BB277 (if false)
BB207   <- [206, 212]
  val?            %207.0 = Phi                      %212.2:BB212, %206.1:BB206
  val?            %207.1 = %207.0
  val?            %207.2 = Extract2_1D        !v    %205.1, %207.1, e266.0   <val?_>
  lgl$-           %207.3 = Is                       %207.2, NULL
  lgl$#-          %207.4 = CheckTrueFalse     e     %207.3
  void                    Branch                   %207.4 -> BB209 (if true) | BB208 (if false)
BB276   <- [34]
  val?            %276.0 = StaticCall         !v    checkNA[0x55eeedc71370]("cex") from %0.4 e0.1
  val?^ | miss    %276.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %276.2 = Identical                %276.1, %0.3
  void                    Branch                   %276.2 -> BB280 (if true) | BB281 (if false)
BB277   <- [34]
  fs              %277.0 = FrameState         R     0x55eeedf72df0+239: [%34.0], env=e0.1
  void                    Deopt              !v    %277.0, CallTarget@0x55eeee44c058[Call#5], %34.1   !
BB209   <- [207]
  val?^ | miss    %209.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %209.1 = LdVar              eR    gparname, e266.0
  val?            %209.2 = Force!             !v    %209.1, e266.0   <val?_>
  val?            %209.3 = Force!             !v    %209.0, e266.0
  lgl$#-          %209.4 = IsType                   %209.3 isA val?+
  lgl$#-          %209.5 = IsType                   %209.2 isA val?+
  void                    Branch                   %209.4 -> BB278 (if true) | BB279 (if false)
BB208   <- [207]
  fs              %208.0 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  (cls|spec|blt)  %208.1 = LdFun              !v    check.length, e266.0
  fs              %208.2 = FrameState         R     0x55eeee790590+224: [%208.1], env=e266.0, next=%208.0
  void                    Deopt              !v    %208.2, DeadCall@0x55eeee44c3c8[Call#5], %208.1   !
BB280   <- [276]
  ct              %280.0 = PushContext        lCL   "lwd", numnotnull("lwd"), %0.3, e0.1
  val?^ | miss    %280.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %280.2 = Identical                <blt is.na>, %280.1   <true>
  void                    Branch                   %280.2 -> BB282 (if true) | BB283 (if false)
BB281   <- [276]
  void                    Nop                !     
  val?^ | miss    %281.1 = %276.1
  dr              %281.2 = CallTarget@0x55eeee44c058[Call#6]
  goto BB37
BB278   <- [209]
  val?+           %278.0 = CastType           d     dn %209.3
  void                    Branch                   %209.5 -> BB284 (if true) | BB285 (if false)
BB279   <- [209]
  void                    Nop                !     
  val?            %279.1 = %209.3
  dr              %279.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB210
BB282   <- [280]
  env             e282.0 = MkEnv              l     gparname="lwd", parent=e0.1, context 1
  val?^ | miss    %282.1 = LdVar              eR    match, e282.0
  lgl$#-          %282.2 = Identical                %282.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %282.2 -> BB286 (if true) | BB287 (if false)
BB283   <- [280]
  void                    DropContext        C     
  lgl$#-          %283.1 = %280.2
  dr              %283.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB37
BB37   <- [281, 283]
  val?^ | miss    %37.0 = Phi                      %281.1:BB281, %283.1:BB283
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %281.2:BB281, %283.2:BB283
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x55eeedf72df0+272: [%276.0], env=e0.1
  void                    Deopt              !v    %37.4, %37.3, %37.1   !
BB284   <- [278]
  val?+           %284.0 = CastType           d     dn %209.2   <val?_>
  val?+           %284.1 = Subassign2_1D      wed   nil, %278.0, %284.0, elided
  void                    StVarSuper         lRW   gpars, %284.1, e266.0
  goto BB34
BB285   <- [278]
  void                    Nop                !     
  val?            %285.1 = %209.2
  dr              %285.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB210
BB210   <- [279, 285]
  val?^ | miss    %210.0 = Phi                      %279.1:BB279, %285.1:BB285
  val?^ | miss    %210.1 = %210.0
  dr              %210.2 = Phi                      %279.2:BB279, %285.2:BB285
  dr              %210.3 = %210.2
  fs              %210.4 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  fs              %210.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %209.3, %209.2], env=e266.0, next=%210.4
  void                    Deopt              !v    %210.5, %210.3, %210.1   !
BB286   <- [282]
  val?^ | miss    %286.0 = LdVar              eR    names, e0.1
  lgl$#-          %286.1 = Identical                %286.0, <blt names>
  void                    Branch                   %286.1 -> BB288 (if true) | BB289 (if false)
BB287   <- [282]
  void                    Nop                !     
  val?^ | miss    %287.1 = %282.1
  dr              %287.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB39
BB288   <- [286]
  val?^ | miss    %288.0 = LdVar              eR    gpars, e282.0
  val?            %288.1 = Force!<lazy>       !v    %288.0, e282.0   <vec->
  val?            %288.2 = CallBuiltin        !v    names(%288.1) e282.0   <nil->
  lgl$#-          %288.3 = IsType                   %288.2 isA val?-
  void                    Branch                   %288.3 -> BB290 (if true) | BB291 (if false)
BB289   <- [286]
  void                    Nop                !     
  val?^ | miss    %289.1 = %286.0
  dr              %289.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB39
BB39   <- [287, 289]
  val?^ | miss    %39.0 = Phi                      %287.1:BB287, %289.1:BB289
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %287.2:BB287, %289.2:BB289
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  env             e39.5 = (MkEnv)            l     gparname="lwd", parent=e0.1, context 1
  fs              %39.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e39.5, next=%39.4
  void                    Deopt              !v    %39.6, %39.3, %39.1   !
BB290   <- [288]
  val?-           %290.0 = CastType           d     dn %288.2   <nil->
  val+            %290.1 = CallSafeBuiltin    wed   match("lwd", %290.0, NA, nil)    <int$->
  lgl$#-          %290.2 = IsType                   %290.1 isA int$-
  void                    Branch                   %290.2 -> BB292 (if true) | BB293 (if false)
BB291   <- [288]
  fs              %291.0 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  fs              %291.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e282.0, next=%291.0
  prom-           %291.2 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p35, e282.0
  val?^           %291.3 = CastType                 up %291.2
  prom-           %291.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p34, e282.0
  val?^           %291.5 = CastType                 up %291.4
  env             e291.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%291.3, x=%291.5, parent=R_BaseNamespace, context 0
  fs              %291.7 = FrameState         R     0x55eeec291d40+23: ["lwd"], env=e291.6, next=%291.1
  fs              %291.8 = FrameState         R     0x55eeee0f3040+32(pr): [%288.2], env=e282.0, next=%291.7
  void                    Deopt              !v    %291.8, Typecheck@0x55eeec2e4cb0[Type#1], %288.2   !
BB292   <- [290]
  int$-           %292.0 = CastType           d     dn %290.1
  lgl$-           %292.1 = CallSafeBuiltin    wed   is.na(%292.0)    <lgl$->
  lgl$-           %292.2 = Not                d     %292.1, elided
  lgl$#-          %292.3 = CheckTrueFalse     e     %292.2
  void                    Branch                   %292.3 -> BB197 (if true) | BB45 (if false)
BB293   <- [290]
  fs              %293.0 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  prom-           %293.1 = MkArg                    %290.0, validGP[0x55eeee83d470]_p35 (!refl), e282.0
  val?~           %293.2 = CastType                 up %293.1
  fs              %293.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e282.0, next=%293.0
  prom-           %293.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p34, e282.0
  val?^           %293.5 = CastType                 up %293.4
  env             e293.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%293.2, x=%293.5, parent=R_BaseNamespace, context 0
  fs              %293.7 = FrameState         R     0x55eeec291d40+69: [%290.1], env=e293.6, next=%293.3
  void                    Deopt              !v    %293.7, Typecheck@0x55eeee44c3c8[Type#7], %290.1   !
BB197   <- [292]
  val?^ | miss    %197.0 = LdVar              eR    gpars, e282.0
  val?            %197.1 = Force!             !v    %197.0, e282.0   <val?_>
  lgl$#-          %197.2 = IsType                   %197.1 isA val+   <@?>
  void                    Branch                   %197.2 -> BB204 (if true) | BB198 (if false)
BB45   <- [292]
  void                    Nop                !     
  goto BB46
BB204   <- [197]
  val?^ | miss    %204.0 = LdVar              eR    gparname, e282.0
  val?            %204.1 = Force!             !v    %204.0, e282.0   <val?_>
  val?            %204.2 = %204.1
  goto BB199
BB198   <- [197]
  prom-           %198.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p37, e282.0
  prom-           %198.1 = %198.0
  goto BB199
BB46   <- [45, 308]
  val?            %46.0 = PopContext         C     nil, %280.0
  val?^ | miss    %46.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %46.2 = Identical                %46.1, %0.3
  void                    Branch                   %46.2 -> BB294 (if true) | BB295 (if false)
BB199   <- [198, 204]
  val?            %199.0 = Phi                      %204.2:BB204, %198.1:BB198
  val?            %199.1 = %199.0
  val?            %199.2 = Extract2_1D        !v    %197.1, %199.1, e282.0   <val?_>
  lgl$-           %199.3 = Is                       %199.2, NULL
  lgl$#-          %199.4 = CheckTrueFalse     e     %199.3
  void                    Branch                   %199.4 -> BB201 (if true) | BB200 (if false)
BB294   <- [46]
  ct              %294.0 = PushContext        lCL   "lex", numnotnull("lex"), %0.3, e0.1
  val?^ | miss    %294.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %294.2 = Identical                <blt is.na>, %294.1   <true>
  void                    Branch                   %294.2 -> BB296 (if true) | BB297 (if false)
BB295   <- [46]
  void                    Nop                !     
  val?^ | miss    %295.1 = %46.1
  dr              %295.2 = CallTarget@0x55eeee44c058[Call#7]
  goto BB47
BB201   <- [199]
  val?^ | miss    %201.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %201.1 = LdVar              eR    gparname, e282.0
  val?            %201.2 = Force!             !v    %201.1, e282.0   <val?_>
  val?            %201.3 = Force!             !v    %201.0, e282.0
  lgl$#-          %201.4 = IsType                   %201.3 isA val?+
  lgl$#-          %201.5 = IsType                   %201.2 isA val?+
  void                    Branch                   %201.4 -> BB304 (if true) | BB305 (if false)
BB200   <- [199]
  fs              %200.0 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  (cls|spec|blt)  %200.1 = LdFun              !v    check.length, e282.0
  fs              %200.2 = FrameState         R     0x55eeee790590+224: [%200.1], env=e282.0, next=%200.0
  void                    Deopt              !v    %200.2, DeadCall@0x55eeee44c3c8[Call#5], %200.1   !
BB296   <- [294]
  env             e296.0 = MkEnv              l     gparname="lex", parent=e0.1, context 1
  val?^ | miss    %296.1 = LdVar              eR    match, e296.0
  lgl$#-          %296.2 = Identical                %296.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %296.2 -> BB298 (if true) | BB299 (if false)
BB297   <- [294]
  void                    DropContext        C     
  lgl$#-          %297.1 = %294.2
  dr              %297.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB47
BB47   <- [295, 297]
  val?^ | miss    %47.0 = Phi                      %295.1:BB295, %297.1:BB297
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %295.2:BB295, %297.2:BB297
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x55eeedf72df0+305: [%46.0], env=e0.1
  void                    Deopt              !v    %47.4, %47.3, %47.1   !
BB304   <- [201]
  val?+           %304.0 = CastType           d     dn %201.3
  void                    Branch                   %201.5 -> BB308 (if true) | BB309 (if false)
BB305   <- [201]
  void                    Nop                !     
  val?            %305.1 = %201.3
  dr              %305.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB202
BB298   <- [296]
  val?^ | miss    %298.0 = LdVar              eR    names, e0.1
  lgl$#-          %298.1 = Identical                %298.0, <blt names>
  void                    Branch                   %298.1 -> BB300 (if true) | BB301 (if false)
BB299   <- [296]
  void                    Nop                !     
  val?^ | miss    %299.1 = %296.1
  dr              %299.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB49
BB308   <- [304]
  val?+           %308.0 = CastType           d     dn %201.2   <val?_>
  val?+           %308.1 = Subassign2_1D      wed   nil, %304.0, %308.0, elided
  void                    StVarSuper         lRW   gpars, %308.1, e282.0
  goto BB46
BB309   <- [304]
  void                    Nop                !     
  val?            %309.1 = %201.2
  dr              %309.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB202
BB202   <- [305, 309]
  val?^ | miss    %202.0 = Phi                      %305.1:BB305, %309.1:BB309
  val?^ | miss    %202.1 = %202.0
  dr              %202.2 = Phi                      %305.2:BB305, %309.2:BB309
  dr              %202.3 = %202.2
  fs              %202.4 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  fs              %202.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %201.3, %201.2], env=e282.0, next=%202.4
  void                    Deopt              !v    %202.5, %202.3, %202.1   !
BB300   <- [298]
  val?^ | miss    %300.0 = LdVar              eR    gpars, e296.0
  val?            %300.1 = Force!<lazy>       !v    %300.0, e296.0   <vec->
  val?            %300.2 = CallBuiltin        !v    names(%300.1) e296.0   <nil->
  lgl$#-          %300.3 = IsType                   %300.2 isA val?-
  void                    Branch                   %300.3 -> BB302 (if true) | BB303 (if false)
BB301   <- [298]
  void                    Nop                !     
  val?^ | miss    %301.1 = %298.0
  dr              %301.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB49
BB49   <- [299, 301]
  val?^ | miss    %49.0 = Phi                      %299.1:BB299, %301.1:BB301
  val?^ | miss    %49.1 = %49.0
  dr              %49.2 = Phi                      %299.2:BB299, %301.2:BB301
  dr              %49.3 = %49.2
  fs              %49.4 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  env             e49.5 = (MkEnv)            l     gparname="lex", parent=e0.1, context 1
  fs              %49.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e49.5, next=%49.4
  void                    Deopt              !v    %49.6, %49.3, %49.1   !
BB302   <- [300]
  val?-           %302.0 = CastType           d     dn %300.2   <nil->
  val+            %302.1 = CallSafeBuiltin    wed   match("lex", %302.0, NA, nil)    <int$->
  lgl$#-          %302.2 = IsType                   %302.1 isA int$-
  void                    Branch                   %302.2 -> BB306 (if true) | BB307 (if false)
BB303   <- [300]
  fs              %303.0 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  fs              %303.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e296.0, next=%303.0
  prom-           %303.2 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p39, e296.0
  val?^           %303.3 = CastType                 up %303.2
  prom-           %303.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p38, e296.0
  val?^           %303.5 = CastType                 up %303.4
  env             e303.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%303.3, x=%303.5, parent=R_BaseNamespace, context 0
  fs              %303.7 = FrameState         R     0x55eeec291d40+23: ["lex"], env=e303.6, next=%303.1
  fs              %303.8 = FrameState         R     0x55eeee0f3040+32(pr): [%300.2], env=e296.0, next=%303.7
  void                    Deopt              !v    %303.8, Typecheck@0x55eeec2e4cb0[Type#1], %300.2   !
BB306   <- [302]
  int$-           %306.0 = CastType           d     dn %302.1
  lgl$-           %306.1 = CallSafeBuiltin    wed   is.na(%306.0)    <lgl$->
  lgl$-           %306.2 = Not                d     %306.1, elided
  lgl$#-          %306.3 = CheckTrueFalse     e     %306.2
  void                    Branch                   %306.3 -> BB189 (if true) | BB55 (if false)
BB307   <- [302]
  fs              %307.0 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  prom-           %307.1 = MkArg                    %302.0, validGP[0x55eeee83d470]_p39 (!refl), e296.0
  val?~           %307.2 = CastType                 up %307.1
  fs              %307.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e296.0, next=%307.0
  prom-           %307.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p38, e296.0
  val?^           %307.5 = CastType                 up %307.4
  env             e307.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%307.2, x=%307.5, parent=R_BaseNamespace, context 0
  fs              %307.7 = FrameState         R     0x55eeec291d40+69: [%302.1], env=e307.6, next=%307.3
  void                    Deopt              !v    %307.7, Typecheck@0x55eeee44c3c8[Type#7], %302.1   !
BB189   <- [306]
  val?^ | miss    %189.0 = LdVar              eR    gpars, e296.0
  val?            %189.1 = Force!             !v    %189.0, e296.0   <val?_>
  lgl$#-          %189.2 = IsType                   %189.1 isA val+   <@?>
  void                    Branch                   %189.2 -> BB196 (if true) | BB190 (if false)
BB55   <- [306]
  void                    Nop                !     
  goto BB56
BB196   <- [189]
  val?^ | miss    %196.0 = LdVar              eR    gparname, e296.0
  val?            %196.1 = Force!             !v    %196.0, e296.0   <val?_>
  val?            %196.2 = %196.1
  goto BB191
BB190   <- [189]
  prom-           %190.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p41, e296.0
  prom-           %190.1 = %190.0
  goto BB191
BB56   <- [55, 318]
  val?            %56.0 = PopContext         C     nil, %294.0
  val?^ | miss    %56.1 = LdVar              eR    %in%, e0.1
  lgl$#-          %56.2 = Identical                %56.1, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %56.2 -> BB310 (if true) | BB311 (if false)
BB191   <- [190, 196]
  val?            %191.0 = Phi                      %196.2:BB196, %190.1:BB190
  val?            %191.1 = %191.0
  val?            %191.2 = Extract2_1D        !v    %189.1, %191.1, e296.0   <val?_>
  lgl$-           %191.3 = Is                       %191.2, NULL
  lgl$#-          %191.4 = CheckTrueFalse     e     %191.3
  void                    Branch                   %191.4 -> BB193 (if true) | BB192 (if false)
BB310   <- [56]
  val?^ | miss    %310.0 = LdVar              eR    names, e0.1
  lgl$#-          %310.1 = Identical                %310.0, <blt names>
  void                    Branch                   %310.1 -> BB314 (if true) | BB315 (if false)
BB311   <- [56]
  void                    Nop                !     
  val?^ | miss    %311.1 = %56.1
  dr              %311.2 = CallTarget@0x55eeee44c058[Call#8]
  goto BB57
BB193   <- [191]
  val?^ | miss    %193.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %193.1 = LdVar              eR    gparname, e296.0
  val?            %193.2 = Force!             !v    %193.1, e296.0   <val?_>
  val?            %193.3 = Force!             !v    %193.0, e296.0
  lgl$#-          %193.4 = IsType                   %193.3 isA val?+
  lgl$#-          %193.5 = IsType                   %193.2 isA val?+
  void                    Branch                   %193.4 -> BB312 (if true) | BB313 (if false)
BB192   <- [191]
  fs              %192.0 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  (cls|spec|blt)  %192.1 = LdFun              !v    check.length, e296.0
  fs              %192.2 = FrameState         R     0x55eeee790590+224: [%192.1], env=e296.0, next=%192.0
  void                    Deopt              !v    %192.2, DeadCall@0x55eeee44c3c8[Call#5], %192.1   !
BB314   <- [310]
  val?^ | miss    %314.0 = LdVar              eR    gpars, e0.1
  val?            %314.1 = Force!<wrapped>    !v    %314.0, e0.1   <vec->
  val?            %314.2 = CallBuiltin        !v    names(%314.1) e0.1   <nil->
  lgl$#-          %314.3 = IsType                   %314.2 isA val?-
  void                    Branch                   %314.3 -> BB316 (if true) | BB317 (if false)
BB315   <- [310]
  void                    Nop                !     
  val?^ | miss    %315.1 = %310.0
  dr              %315.2 = CallTarget@0x55eeee44c058[Call#9]
  goto BB57
BB57   <- [311, 315]
  val?^ | miss    %57.0 = Phi                      %311.1:BB311, %315.1:BB315
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %311.2:BB311, %315.2:BB315
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x55eeedf72df0+338: [%56.0], env=e0.1
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB312   <- [193]
  val?+           %312.0 = CastType           d     dn %193.3
  void                    Branch                   %193.5 -> BB318 (if true) | BB319 (if false)
BB313   <- [193]
  void                    Nop                !     
  val?            %313.1 = %193.3
  dr              %313.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB194
BB316   <- [314]
  val?-           %316.0 = CastType           d     dn %314.2   <nil->
  val+            %316.1 = CallSafeBuiltin    wed   match("gamma", %316.0, 0L, nil)    <int->
  lgl$#-          %316.2 = IsType                   %316.1 isA int-
  void                    Branch                   %316.2 -> BB320 (if true) | BB321 (if false)
BB317   <- [314]
  prom-           %317.0 = MkArg                    %314.2, validGP[0x55eeee83d470]_p0 (!refl), e0.1
  val?~           %317.1 = CastType                 up %317.0
  env             e317.2 = MkEnv              l     x="gamma", table=%317.1, parent=R_BaseNamespace, context 0
  prom-           %317.3 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p43 (!refl), e317.2
  val?^           %317.4 = CastType                 up %317.3
  prom-           %317.5 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p42 (!refl), e317.2
  val?^           %317.6 = CastType                 up %317.5
  fs              %317.7 = FrameState         R     0x55eeedf72df0+376: [], env=e0.1
  fs              %317.8 = FrameState         R     0x55eeec0aa320+54: [], env=e317.2, next=%317.7
  env             e317.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%317.4, x=%317.6, parent=R_BaseNamespace, context -1
  fs              %317.10 = FrameState         R     0x55eeec291d40+23: ["gamma"], env=e317.9, next=%317.8
  fs              %317.11 = FrameState         R     0x55eeec0aacb0+5(pr): [%314.2], env=e317.2, next=%317.10
  void                    Deopt              !v    %317.11, Typecheck@0x55eeec2e4cb0[Type#1], %314.2   !
BB318   <- [312]
  val?+           %318.0 = CastType           d     dn %193.2   <val?_>
  val?+           %318.1 = Subassign2_1D      wed   nil, %312.0, %318.0, elided
  void                    StVarSuper         lRW   gpars, %318.1, e296.0
  goto BB56
BB319   <- [312]
  void                    Nop                !     
  val?            %319.1 = %193.2
  dr              %319.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB194
BB194   <- [313, 319]
  val?^ | miss    %194.0 = Phi                      %313.1:BB313, %319.1:BB319
  val?^ | miss    %194.1 = %194.0
  dr              %194.2 = Phi                      %313.2:BB313, %319.2:BB319
  dr              %194.3 = %194.2
  fs              %194.4 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  fs              %194.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %193.3, %193.2], env=e296.0, next=%194.4
  void                    Deopt              !v    %194.5, %194.3, %194.1   !
BB320   <- [316]
  int-            %320.0 = CastType           d     dn %316.1
  lgl-            %320.1 = Gt                 wed   %320.0, 0L, elided   <lgl->
  lgl$#-          %320.2 = CheckTrueFalse     we    %320.1
  void                    Branch                   %320.2 -> BB188 (if true) | BB65 (if false)
BB321   <- [316]
  prom-           %321.0 = MkArg                    %316.0, validGP[0x55eeee83d470]_p0 (!refl), e0.1
  val?~           %321.1 = CastType                 up %321.0
  env             e321.2 = MkEnv              l     x="gamma", table=%321.1, parent=R_BaseNamespace, context 0
  prom-           %321.3 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p42 (!refl), e321.2
  val?^           %321.4 = CastType                 up %321.3
  fs              %321.5 = FrameState         R     0x55eeedf72df0+376: [], env=e0.1
  fs              %321.6 = FrameState         R     0x55eeec0aa320+54: [], env=e321.2, next=%321.5
  prom-           %321.7 = MkArg                    %316.0, validGP[0x55eeee83d470]_p43 (!refl), e321.2
  val?~           %321.8 = CastType                 up %321.7
  env             e321.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%321.8, x=%321.4, parent=R_BaseNamespace, context -1
  fs              %321.10 = FrameState         R     0x55eeec291d40+69: [%316.1], env=e321.9, next=%321.6
  void                    Deopt              !v    %321.10, Typecheck@0x55eeed0dc688[Type#2], %316.1   !
BB188   <- [320]
  (cls|spec|blt)  %188.0 = LdFun              !v    warning, e0.1
  fs              %188.1 = FrameState         R     0x55eeedf72df0+397: [%188.0], env=e0.1
  void                    Deopt              !v    %188.1, DeadCall@0x55eeee44c058[Call#10], %188.0   !
BB65   <- [320]
  val?^ | miss    %65.0 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %65.1 = Identical                %65.0, %0.3
  void                    Branch                   %65.1 -> BB322 (if true) | BB323 (if false)
BB322   <- [65]
  ct              %322.0 = PushContext        lCL   "alpha", numnotnull("alpha"), %0.3, e0.1
  val?^ | miss    %322.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %322.2 = Identical                <blt is.na>, %322.1   <true>
  void                    Branch                   %322.2 -> BB324 (if true) | BB325 (if false)
BB323   <- [65]
  void                    Nop                !     
  val?^ | miss    %323.1 = %65.0
  dr              %323.2 = CallTarget@0x55eeee44c058[Call#13]
  goto BB63
BB324   <- [322]
  env             e324.0 = MkEnv              l     gparname="alpha", parent=e0.1, context 1
  val?^ | miss    %324.1 = LdVar              eR    match, e324.0
  lgl$#-          %324.2 = Identical                %324.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %324.2 -> BB326 (if true) | BB327 (if false)
BB325   <- [322]
  void                    DropContext        C     
  lgl$#-          %325.1 = %322.2
  dr              %325.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB63
BB63   <- [323, 325]
  val?^ | miss    %63.0 = Phi                      %323.1:BB323, %325.1:BB325
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %323.2:BB323, %325.2:BB325
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x55eeedf72df0+382: [%320.2], env=e0.1
  void                    Deopt              !v    %63.4, %63.3, %63.1   !
BB326   <- [324]
  val?^ | miss    %326.0 = LdVar              eR    names, e0.1
  lgl$#-          %326.1 = Identical                %326.0, <blt names>
  void                    Branch                   %326.1 -> BB328 (if true) | BB329 (if false)
BB327   <- [324]
  void                    Nop                !     
  val?^ | miss    %327.1 = %324.1
  dr              %327.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB66
BB328   <- [326]
  val?^ | miss    %328.0 = LdVar              eR    gpars, e324.0
  val?            %328.1 = Force!<lazy>       !v    %328.0, e324.0   <vec->
  val?            %328.2 = CallBuiltin        !v    names(%328.1) e324.0   <nil->
  lgl$#-          %328.3 = IsType                   %328.2 isA val?-
  void                    Branch                   %328.3 -> BB330 (if true) | BB331 (if false)
BB329   <- [326]
  void                    Nop                !     
  val?^ | miss    %329.1 = %326.0
  dr              %329.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB66
BB66   <- [327, 329]
  val?^ | miss    %66.0 = Phi                      %327.1:BB327, %329.1:BB329
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %327.2:BB327, %329.2:BB329
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  env             e66.5 = (MkEnv)            l     gparname="alpha", parent=e0.1, context 1
  fs              %66.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e66.5, next=%66.4
  void                    Deopt              !v    %66.6, %66.3, %66.1   !
BB330   <- [328]
  val?-           %330.0 = CastType           d     dn %328.2   <nil->
  val+            %330.1 = CallSafeBuiltin    wed   match("alpha", %330.0, NA, nil)    <int$->
  lgl$#-          %330.2 = IsType                   %330.1 isA int$-
  void                    Branch                   %330.2 -> BB332 (if true) | BB333 (if false)
BB331   <- [328]
  fs              %331.0 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  fs              %331.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e324.0, next=%331.0
  prom-           %331.2 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p46, e324.0
  val?^           %331.3 = CastType                 up %331.2
  prom-           %331.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p45, e324.0
  val?^           %331.5 = CastType                 up %331.4
  env             e331.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%331.3, x=%331.5, parent=R_BaseNamespace, context 0
  fs              %331.7 = FrameState         R     0x55eeec291d40+23: ["alpha"], env=e331.6, next=%331.1
  fs              %331.8 = FrameState         R     0x55eeee0f3040+32(pr): [%328.2], env=e324.0, next=%331.7
  void                    Deopt              !v    %331.8, Typecheck@0x55eeec2e4cb0[Type#1], %328.2   !
BB332   <- [330]
  int$-           %332.0 = CastType           d     dn %330.1
  lgl$-           %332.1 = CallSafeBuiltin    wed   is.na(%332.0)    <lgl$->
  lgl$-           %332.2 = Not                d     %332.1, elided
  lgl$#-          %332.3 = CheckTrueFalse     e     %332.2
  void                    Branch                   %332.3 -> BB180 (if true) | BB72 (if false)
BB333   <- [330]
  fs              %333.0 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  prom-           %333.1 = MkArg                    %330.0, validGP[0x55eeee83d470]_p46 (!refl), e324.0
  val?~           %333.2 = CastType                 up %333.1
  fs              %333.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e324.0, next=%333.0
  prom-           %333.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p45, e324.0
  val?^           %333.5 = CastType                 up %333.4
  env             e333.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%333.2, x=%333.5, parent=R_BaseNamespace, context 0
  fs              %333.7 = FrameState         R     0x55eeec291d40+69: [%330.1], env=e333.6, next=%333.3
  void                    Deopt              !v    %333.7, Typecheck@0x55eeee44c3c8[Type#7], %330.1   !
BB180   <- [332]
  val?^ | miss    %180.0 = LdVar              eR    gpars, e324.0
  val?            %180.1 = Force!             !v    %180.0, e324.0   <val?_>
  lgl$#-          %180.2 = IsType                   %180.1 isA val+   <@?>
  void                    Branch                   %180.2 -> BB187 (if true) | BB181 (if false)
BB72   <- [332]
  void                    Nop                !     
  goto BB73
BB187   <- [180]
  val?^ | miss    %187.0 = LdVar              eR    gparname, e324.0
  val?            %187.1 = Force!             !v    %187.0, e324.0   <val?_>
  val?            %187.2 = %187.1
  goto BB182
BB181   <- [180]
  prom-           %181.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p48, e324.0
  prom-           %181.1 = %181.0
  goto BB182
BB73   <- [72, 342]
  val?            %73.0 = PopContext         C     nil, %322.0
  val?^ | miss    %73.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %73.2 = Identical                <blt is.na>, %73.1   <true>
  void                    Branch                   %73.2 -> BB334 (if true) | BB335 (if false)
BB182   <- [181, 187]
  val?            %182.0 = Phi                      %187.2:BB187, %181.1:BB181
  val?            %182.1 = %182.0
  val?            %182.2 = Extract2_1D        !v    %180.1, %182.1, e324.0   <val?_>
  lgl$-           %182.3 = Is                       %182.2, NULL
  lgl$#-          %182.4 = CheckTrueFalse     e     %182.3
  void                    Branch                   %182.4 -> BB184 (if true) | BB183 (if false)
BB334   <- [73]
  val?^ | miss    %334.0 = LdVar              eR    match, e0.1
  lgl$#-          %334.1 = Identical                %334.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %334.1 -> BB336 (if true) | BB337 (if false)
BB335   <- [73]
  void                    Nop                !     
  lgl$#-          %335.1 = %73.2
  dr              %335.2 = DeadBranchReached@0x55eeee44c058[Test#0]
  goto BB74
BB184   <- [182]
  val?^ | miss    %184.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %184.1 = LdVar              eR    gparname, e324.0
  val?            %184.2 = Force!             !v    %184.1, e324.0   <val?_>
  val?            %184.3 = Force!             !v    %184.0, e324.0
  lgl$#-          %184.4 = IsType                   %184.3 isA val?+
  lgl$#-          %184.5 = IsType                   %184.2 isA val?+
  void                    Branch                   %184.4 -> BB338 (if true) | BB339 (if false)
BB183   <- [182]
  fs              %183.0 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  (cls|spec|blt)  %183.1 = LdFun              !v    check.length, e324.0
  fs              %183.2 = FrameState         R     0x55eeee790590+224: [%183.1], env=e324.0, next=%183.0
  void                    Deopt              !v    %183.2, DeadCall@0x55eeee44c3c8[Call#5], %183.1   !
BB336   <- [334]
  val?^ | miss    %336.0 = LdVar              eR    names, e0.1
  lgl$#-          %336.1 = Identical                %336.0, <blt names>
  void                    Branch                   %336.1 -> BB340 (if true) | BB341 (if false)
BB337   <- [334]
  void                    Nop                !     
  val?^ | miss    %337.1 = %334.0
  dr              %337.2 = CallTarget@0x55eeee44c058[Call#17]
  goto BB74
BB74   <- [335, 337, 341]
  val?^ | miss    %74.0 = Phi                      %335.1:BB335, %337.1:BB337, %341.1:BB341
  val?^ | miss    %74.1 = %74.0
  dr              %74.2 = Phi                      %335.2:BB335, %337.2:BB337, %341.2:BB341
  dr              %74.3 = %74.2
  fs              %74.4 = FrameState         R     0x55eeedf72df0+495: [%73.0], env=e0.1
  void                    Deopt              !v    %74.4, %74.3, %74.1   !
BB338   <- [184]
  val?+           %338.0 = CastType           d     dn %184.3
  void                    Branch                   %184.5 -> BB342 (if true) | BB343 (if false)
BB339   <- [184]
  void                    Nop                !     
  val?            %339.1 = %184.3
  dr              %339.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB185
BB340   <- [336]
  val?^ | miss    %340.0 = LdVar              eR    gpars, e0.1
  val?            %340.1 = Force!<wrapped>    !v    %340.0, e0.1   <vec->
  val?            %340.2 = CallBuiltin        !v    names(%340.1) e0.1   <nil->
  lgl$#-          %340.3 = IsType                   %340.2 isA val?-
  void                    Branch                   %340.3 -> BB344 (if true) | BB345 (if false)
BB341   <- [336]
  void                    Nop                !     
  val?^ | miss    %341.1 = %336.0
  dr              %341.2 = CallTarget@0x55eeee44c058[Call#18]
  goto BB74
BB342   <- [338]
  val?+           %342.0 = CastType           d     dn %184.2   <val?_>
  val?+           %342.1 = Subassign2_1D      wed   nil, %338.0, %342.0, elided
  void                    StVarSuper         lRW   gpars, %342.1, e324.0
  goto BB73
BB343   <- [338]
  void                    Nop                !     
  val?            %343.1 = %184.2
  dr              %343.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB185
BB185   <- [339, 343]
  val?^ | miss    %185.0 = Phi                      %339.1:BB339, %343.1:BB343
  val?^ | miss    %185.1 = %185.0
  dr              %185.2 = Phi                      %339.2:BB339, %343.2:BB343
  dr              %185.3 = %185.2
  fs              %185.4 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  fs              %185.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %184.3, %184.2], env=e324.0, next=%185.4
  void                    Deopt              !v    %185.5, %185.3, %185.1   !
BB344   <- [340]
  val?-           %344.0 = CastType           d     dn %340.2   <nil->
  val+            %344.1 = CallSafeBuiltin    wed   match("col", %344.0, NA, nil)    <int$->
  lgl$#-          %344.2 = IsType                   %344.1 isA int$-
  void                    Branch                   %344.2 -> BB346 (if true) | BB347 (if false)
BB345   <- [340]
  fs              %345.0 = FrameState         R     0x55eeedf72df0+593: [<blt is.na>], env=e0.1
  prom-           %345.1 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p2, e0.1
  val?^           %345.2 = CastType                 up %345.1
  env             e345.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%345.2, x="col", parent=R_BaseNamespace, context 0
  fs              %345.4 = FrameState         R     0x55eeec291d40+23: ["col"], env=e345.3, next=%345.0
  fs              %345.5 = FrameState         R     0x55eeedbcb970+32(pr): [%340.2], env=e0.1, next=%345.4
  void                    Deopt              !v    %345.5, Typecheck@0x55eeec2e4cb0[Type#1], %340.2   !
BB346   <- [344]
  int$-           %346.0 = CastType           d     dn %344.1
  lgl$-           %346.1 = CallSafeBuiltin    wed   is.na(%346.0)    <lgl$->
  lgl$-           %346.2 = Not                d     %346.1, elided
  lgl$#-          %346.3 = CheckTrueFalse     e     %346.2
  void                    Branch                   %346.3 -> BB179 (if true) | BB82 (if false)
BB347   <- [344]
  prom-           %347.0 = MkArg                    %344.0, validGP[0x55eeee83d470]_p2 (!refl), e0.1
  val?~           %347.1 = CastType                 up %347.0
  fs              %347.2 = FrameState         R     0x55eeedf72df0+593: [<blt is.na>], env=e0.1
  env             e347.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%347.1, x="col", parent=R_BaseNamespace, context 0
  fs              %347.4 = FrameState         R     0x55eeec291d40+69: [%344.1], env=e347.3, next=%347.2
  void                    Deopt              !v    %347.4, Typecheck@0x55eeee44c058[Type#11], %344.1   !
BB179   <- [346]
  (cls|spec|blt)  %179.0 = LdFun              !v    $, e0.1
  fs              %179.1 = FrameState         R     0x55eeedf72df0+637: [%179.0], env=e0.1
  void                    Deopt              !v    %179.1, DeadCall@0x55eeee44c058[Call#19], %179.0   !
BB82   <- [346]
  val?^ | miss    %82.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %82.1 = Identical                <blt is.na>, %82.0   <true>
  void                    Branch                   %82.1 -> BB348 (if true) | BB349 (if false)
BB348   <- [82]
  val?^ | miss    %348.0 = LdVar              eR    match, e0.1
  lgl$#-          %348.1 = Identical                %348.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %348.1 -> BB350 (if true) | BB351 (if false)
BB349   <- [82]
  void                    Nop                !     
  lgl$#-          %349.1 = %82.1
  dr              %349.2 = DeadBranchReached@0x55eeee44c058[Test#1]
  goto BB80
BB350   <- [348]
  val?^ | miss    %350.0 = LdVar              eR    names, e0.1
  lgl$#-          %350.1 = Identical                %350.0, <blt names>
  void                    Branch                   %350.1 -> BB352 (if true) | BB353 (if false)
BB351   <- [348]
  void                    Nop                !     
  val?^ | miss    %351.1 = %348.0
  dr              %351.2 = CallTarget@0x55eeee44c058[Call#26]
  goto BB80
BB80   <- [349, 351, 353]
  val?^ | miss    %80.0 = Phi                      %349.1:BB349, %351.1:BB351, %353.1:BB353
  val?^ | miss    %80.1 = %80.0
  dr              %80.2 = Phi                      %349.2:BB349, %351.2:BB351, %353.2:BB353
  dr              %80.3 = %80.2
  fs              %80.4 = FrameState         R     0x55eeedf72df0+615: [%346.1], env=e0.1
  void                    Deopt              !v    %80.4, %80.3, %80.1   !
BB352   <- [350]
  val?^ | miss    %352.0 = LdVar              eR    gpars, e0.1
  val?            %352.1 = Force!<wrapped>    !v    %352.0, e0.1   <vec->
  val?            %352.2 = CallBuiltin        !v    names(%352.1) e0.1   <nil->
  lgl$#-          %352.3 = IsType                   %352.2 isA val?-
  void                    Branch                   %352.3 -> BB354 (if true) | BB355 (if false)
BB353   <- [350]
  void                    Nop                !     
  val?^ | miss    %353.1 = %350.0
  dr              %353.2 = CallTarget@0x55eeee44c058[Call#27]
  goto BB80
BB354   <- [352]
  val?-           %354.0 = CastType           d     dn %352.2   <nil->
  val+            %354.1 = CallSafeBuiltin    wed   match("fill", %354.0, NA, nil)    <int$->
  lgl$#-          %354.2 = IsType                   %354.1 isA int$-
  void                    Branch                   %354.2 -> BB356 (if true) | BB357 (if false)
BB355   <- [352]
  prom-           %355.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p4, e0.1
  val?^           %355.1 = CastType                 up %355.0
  fs              %355.2 = FrameState         R     0x55eeedf72df0+858: [<blt is.na>], env=e0.1
  env             e355.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%355.1, x="fill", parent=R_BaseNamespace, context 0
  fs              %355.4 = FrameState         R     0x55eeec291d40+23: ["fill"], env=e355.3, next=%355.2
  fs              %355.5 = FrameState         R     0x55eeedf5ba60+32(pr): [%352.2], env=e0.1, next=%355.4
  void                    Deopt              !v    %355.5, Typecheck@0x55eeec2e4cb0[Type#1], %352.2   !
BB356   <- [354]
  int$-           %356.0 = CastType           d     dn %354.1
  lgl$-           %356.1 = CallSafeBuiltin    wed   is.na(%356.0)    <lgl$->
  lgl$-           %356.2 = Not                d     %356.1, elided
  lgl$#-          %356.3 = CheckTrueFalse     e     %356.2
  void                    Branch                   %356.3 -> BB178 (if true) | BB89 (if false)
BB357   <- [354]
  prom-           %357.0 = MkArg                    %354.0, validGP[0x55eeee83d470]_p4 (!refl), e0.1
  val?~           %357.1 = CastType                 up %357.0
  fs              %357.2 = FrameState         R     0x55eeedf72df0+858: [<blt is.na>], env=e0.1
  env             e357.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%357.1, x="fill", parent=R_BaseNamespace, context 0
  fs              %357.4 = FrameState         R     0x55eeec291d40+69: [%354.1], env=e357.3, next=%357.2
  void                    Deopt              !v    %357.4, Typecheck@0x55eeee44c058[Type#24], %354.1   !
BB178   <- [356]
  (cls|spec|blt)  %178.0 = LdFun              !v    $, e0.1
  fs              %178.1 = FrameState         R     0x55eeedf72df0+902: [%178.0], env=e0.1
  void                    Deopt              !v    %178.1, DeadCall@0x55eeee44c058[Call#28], %178.0   !
BB89   <- [356]
  val?^ | miss    %89.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %89.1 = Identical                <blt is.na>, %89.0   <true>
  void                    Branch                   %89.1 -> BB358 (if true) | BB359 (if false)
BB358   <- [89]
  val?^ | miss    %358.0 = LdVar              eR    match, e0.1
  lgl$#-          %358.1 = Identical                %358.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %358.1 -> BB360 (if true) | BB361 (if false)
BB359   <- [89]
  void                    Nop                !     
  lgl$#-          %359.1 = %89.1
  dr              %359.2 = DeadBranchReached@0x55eeee44c058[Test#2]
  goto BB87
BB360   <- [358]
  val?^ | miss    %360.0 = LdVar              eR    names, e0.1
  lgl$#-          %360.1 = Identical                %360.0, <blt names>
  void                    Branch                   %360.1 -> BB362 (if true) | BB363 (if false)
BB361   <- [358]
  void                    Nop                !     
  val?^ | miss    %361.1 = %358.0
  dr              %361.2 = CallTarget@0x55eeee44c058[Call#37]
  goto BB87
BB87   <- [359, 361, 363]
  val?^ | miss    %87.0 = Phi                      %359.1:BB359, %361.1:BB361, %363.1:BB363
  val?^ | miss    %87.1 = %87.0
  dr              %87.2 = Phi                      %359.2:BB359, %361.2:BB361, %363.2:BB363
  dr              %87.3 = %87.2
  fs              %87.4 = FrameState         R     0x55eeedf72df0+880: [%356.1], env=e0.1
  void                    Deopt              !v    %87.4, %87.3, %87.1   !
BB362   <- [360]
  val?^ | miss    %362.0 = LdVar              eR    gpars, e0.1
  val?            %362.1 = Force!<wrapped>    !v    %362.0, e0.1   <vec->
  val?            %362.2 = CallBuiltin        !v    names(%362.1) e0.1   <nil->
  lgl$#-          %362.3 = IsType                   %362.2 isA val?-
  void                    Branch                   %362.3 -> BB364 (if true) | BB365 (if false)
BB363   <- [360]
  void                    Nop                !     
  val?^ | miss    %363.1 = %360.0
  dr              %363.2 = CallTarget@0x55eeee44c058[Call#38]
  goto BB87
BB364   <- [362]
  val?-           %364.0 = CastType           d     dn %362.2   <nil->
  val+            %364.1 = CallSafeBuiltin    wed   match("lty", %364.0, NA, nil)    <int$->
  lgl$#-          %364.2 = IsType                   %364.1 isA int$-
  void                    Branch                   %364.2 -> BB366 (if true) | BB367 (if false)
BB365   <- [362]
  prom-           %365.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p6, e0.1
  val?^           %365.1 = CastType                 up %365.0
  fs              %365.2 = FrameState         R     0x55eeedf72df0+1172: [<blt is.na>], env=e0.1
  env             e365.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%365.1, x="lty", parent=R_BaseNamespace, context 0
  fs              %365.4 = FrameState         R     0x55eeec291d40+23: ["lty"], env=e365.3, next=%365.2
  fs              %365.5 = FrameState         R     0x55eeedefdaa0+32(pr): [%362.2], env=e0.1, next=%365.4
  void                    Deopt              !v    %365.5, Typecheck@0x55eeec2e4cb0[Type#1], %362.2   !
BB366   <- [364]
  int$-           %366.0 = CastType           d     dn %364.1
  lgl$-           %366.1 = CallSafeBuiltin    wed   is.na(%366.0)    <lgl$->
  lgl$-           %366.2 = Not                d     %366.1, elided
  lgl$#-          %366.3 = CheckTrueFalse     e     %366.2
  void                    Branch                   %366.3 -> BB177 (if true) | BB96 (if false)
BB367   <- [364]
  fs              %367.0 = FrameState         R     0x55eeedf72df0+1172: [<blt is.na>], env=e0.1
  prom-           %367.1 = MkArg                    %364.0, validGP[0x55eeee83d470]_p6 (!refl), e0.1
  val?~           %367.2 = CastType                 up %367.1
  env             e367.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%367.2, x="lty", parent=R_BaseNamespace, context 0
  fs              %367.4 = FrameState         R     0x55eeec291d40+69: [%364.1], env=e367.3, next=%367.0
  void                    Deopt              !v    %367.4, Typecheck@0x55eeee44c058[Type#41], %364.1   !
BB177   <- [366]
  (cls|spec|blt)  %177.0 = LdFun              !v    $, e0.1
  fs              %177.1 = FrameState         R     0x55eeedf72df0+1216: [%177.0], env=e0.1
  void                    Deopt              !v    %177.1, DeadCall@0x55eeee44c058[Call#39], %177.0   !
BB96   <- [366]
  val?^ | miss    %96.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %96.1 = Identical                <blt is.na>, %96.0   <true>
  void                    Branch                   %96.1 -> BB368 (if true) | BB369 (if false)
BB368   <- [96]
  val?^ | miss    %368.0 = LdVar              eR    match, e0.1
  lgl$#-          %368.1 = Identical                %368.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %368.1 -> BB370 (if true) | BB371 (if false)
BB369   <- [96]
  void                    Nop                !     
  lgl$#-          %369.1 = %96.1
  dr              %369.2 = DeadBranchReached@0x55eeee44c058[Test#3]
  goto BB94
BB370   <- [368]
  val?^ | miss    %370.0 = LdVar              eR    names, e0.1
  lgl$#-          %370.1 = Identical                %370.0, <blt names>
  void                    Branch                   %370.1 -> BB372 (if true) | BB373 (if false)
BB371   <- [368]
  void                    Nop                !     
  val?^ | miss    %371.1 = %368.0
  dr              %371.2 = CallTarget@0x55eeee44c058[Call#46]
  goto BB94
BB94   <- [369, 371, 373]
  val?^ | miss    %94.0 = Phi                      %369.1:BB369, %371.1:BB371, %373.1:BB373
  val?^ | miss    %94.1 = %94.0
  dr              %94.2 = Phi                      %369.2:BB369, %371.2:BB371, %373.2:BB373
  dr              %94.3 = %94.2
  fs              %94.4 = FrameState         R     0x55eeedf72df0+1194: [%366.1], env=e0.1
  void                    Deopt              !v    %94.4, %94.3, %94.1   !
BB372   <- [370]
  val?^ | miss    %372.0 = LdVar              eR    gpars, e0.1
  val?            %372.1 = Force!<wrapped>    !v    %372.0, e0.1   <vec->
  val?            %372.2 = CallBuiltin        !v    names(%372.1) e0.1   <nil->
  lgl$#-          %372.3 = IsType                   %372.2 isA val?-
  void                    Branch                   %372.3 -> BB374 (if true) | BB375 (if false)
BB373   <- [370]
  void                    Nop                !     
  val?^ | miss    %373.1 = %370.0
  dr              %373.2 = CallTarget@0x55eeee44c058[Call#47]
  goto BB94
BB374   <- [372]
  val?-           %374.0 = CastType           d     dn %372.2   <nil->
  val+            %374.1 = CallSafeBuiltin    wed   match("lineend", %374.0, NA, nil)    <int$->
  lgl$#-          %374.2 = IsType                   %374.1 isA int$-
  void                    Branch                   %374.2 -> BB376 (if true) | BB377 (if false)
BB375   <- [372]
  fs              %375.0 = FrameState         R     0x55eeedf72df0+1437: [<blt is.na>], env=e0.1
  prom-           %375.1 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p8, e0.1
  val?^           %375.2 = CastType                 up %375.1
  env             e375.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%375.2, x="lineend", parent=R_BaseNamespace, context 0
  fs              %375.4 = FrameState         R     0x55eeec291d40+23: ["lineend"], env=e375.3, next=%375.0
  fs              %375.5 = FrameState         R     0x55eeee0df480+32(pr): [%372.2], env=e0.1, next=%375.4
  void                    Deopt              !v    %375.5, Typecheck@0x55eeec2e4cb0[Type#1], %372.2   !
BB376   <- [374]
  int$-           %376.0 = CastType           d     dn %374.1
  lgl$-           %376.1 = CallSafeBuiltin    wed   is.na(%376.0)    <lgl$->
  lgl$-           %376.2 = Not                d     %376.1, elided
  lgl$#-          %376.3 = CheckTrueFalse     e     %376.2
  void                    Branch                   %376.3 -> BB176 (if true) | BB103 (if false)
BB377   <- [374]
  prom-           %377.0 = MkArg                    %374.0, validGP[0x55eeee83d470]_p8 (!refl), e0.1
  val?~           %377.1 = CastType                 up %377.0
  fs              %377.2 = FrameState         R     0x55eeedf72df0+1437: [<blt is.na>], env=e0.1
  env             e377.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%377.1, x="lineend", parent=R_BaseNamespace, context 0
  fs              %377.4 = FrameState         R     0x55eeec291d40+69: [%374.1], env=e377.3, next=%377.2
  void                    Deopt              !v    %377.4, Typecheck@0x55eeee44c058[Type#54], %374.1   !
BB176   <- [376]
  (cls|spec|blt)  %176.0 = LdFun              !v    $, e0.1
  fs              %176.1 = FrameState         R     0x55eeedf72df0+1481: [%176.0], env=e0.1
  void                    Deopt              !v    %176.1, DeadCall@0x55eeee44c058[Call#48], %176.0   !
BB103   <- [376]
  val?^ | miss    %103.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %103.1 = Identical                <blt is.na>, %103.0   <true>
  void                    Branch                   %103.1 -> BB378 (if true) | BB379 (if false)
BB378   <- [103]
  val?^ | miss    %378.0 = LdVar              eR    match, e0.1
  lgl$#-          %378.1 = Identical                %378.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %378.1 -> BB380 (if true) | BB381 (if false)
BB379   <- [103]
  void                    Nop                !     
  lgl$#-          %379.1 = %103.1
  dr              %379.2 = DeadBranchReached@0x55eeee44c058[Test#4]
  goto BB101
BB380   <- [378]
  val?^ | miss    %380.0 = LdVar              eR    names, e0.1
  lgl$#-          %380.1 = Identical                %380.0, <blt names>
  void                    Branch                   %380.1 -> BB382 (if true) | BB383 (if false)
BB381   <- [378]
  void                    Nop                !     
  val?^ | miss    %381.1 = %378.0
  dr              %381.2 = CallTarget@0x55eeee44c058[Call#55]
  goto BB101
BB101   <- [379, 381, 383]
  val?^ | miss    %101.0 = Phi                      %379.1:BB379, %381.1:BB381, %383.1:BB383
  val?^ | miss    %101.1 = %101.0
  dr              %101.2 = Phi                      %379.2:BB379, %381.2:BB381, %383.2:BB383
  dr              %101.3 = %101.2
  fs              %101.4 = FrameState         R     0x55eeedf72df0+1459: [%376.1], env=e0.1
  void                    Deopt              !v    %101.4, %101.3, %101.1   !
BB382   <- [380]
  val?^ | miss    %382.0 = LdVar              eR    gpars, e0.1
  val?            %382.1 = Force!<wrapped>    !v    %382.0, e0.1   <vec->
  val?            %382.2 = CallBuiltin        !v    names(%382.1) e0.1   <nil->
  lgl$#-          %382.3 = IsType                   %382.2 isA val?-
  void                    Branch                   %382.3 -> BB384 (if true) | BB385 (if false)
BB383   <- [380]
  void                    Nop                !     
  val?^ | miss    %383.1 = %380.0
  dr              %383.2 = CallTarget@0x55eeee44c058[Call#56]
  goto BB101
BB384   <- [382]
  val?-           %384.0 = CastType           d     dn %382.2   <nil->
  val+            %384.1 = CallSafeBuiltin    wed   match("linejoin", %384.0, NA, nil)    <int$->
  lgl$#-          %384.2 = IsType                   %384.1 isA int$-
  void                    Branch                   %384.2 -> BB386 (if true) | BB387 (if false)
BB385   <- [382]
  fs              %385.0 = FrameState         R     0x55eeedf72df0+1702: [<blt is.na>], env=e0.1
  prom-           %385.1 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p10, e0.1
  val?^           %385.2 = CastType                 up %385.1
  env             e385.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%385.2, x="linejoin", parent=R_BaseNamespace, context 0
  fs              %385.4 = FrameState         R     0x55eeec291d40+23: ["linejoin"], env=e385.3, next=%385.0
  fs              %385.5 = FrameState         R     0x55eeeda19440+32(pr): [%382.2], env=e0.1, next=%385.4
  void                    Deopt              !v    %385.5, Typecheck@0x55eeec2e4cb0[Type#1], %382.2   !
BB386   <- [384]
  int$-           %386.0 = CastType           d     dn %384.1
  lgl$-           %386.1 = CallSafeBuiltin    wed   is.na(%386.0)    <lgl$->
  lgl$-           %386.2 = Not                d     %386.1, elided
  lgl$#-          %386.3 = CheckTrueFalse     e     %386.2
  void                    Branch                   %386.3 -> BB175 (if true) | BB112 (if false)
BB387   <- [384]
  prom-           %387.0 = MkArg                    %384.0, validGP[0x55eeee83d470]_p10 (!refl), e0.1
  val?~           %387.1 = CastType                 up %387.0
  fs              %387.2 = FrameState         R     0x55eeedf72df0+1702: [<blt is.na>], env=e0.1
  env             e387.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%387.1, x="linejoin", parent=R_BaseNamespace, context 0
  fs              %387.4 = FrameState         R     0x55eeec291d40+69: [%384.1], env=e387.3, next=%387.2
  void                    Deopt              !v    %387.4, Typecheck@0x55eeee44c058[Type#67], %384.1   !
BB175   <- [386]
  (cls|spec|blt)  %175.0 = LdFun              !v    $, e0.1
  fs              %175.1 = FrameState         R     0x55eeedf72df0+1746: [%175.0], env=e0.1
  void                    Deopt              !v    %175.1, DeadCall@0x55eeee44c058[Call#57], %175.0   !
BB112   <- [386]
  val?^ | miss    %112.0 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %112.1 = Identical                %112.0, %0.3
  void                    Branch                   %112.1 -> BB388 (if true) | BB389 (if false)
BB388   <- [112]
  ct              %388.0 = PushContext        lCL   "linemitre", numnotnull("linemitre"), %0.3, e0.1
  val?^ | miss    %388.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %388.2 = Identical                <blt is.na>, %388.1   <true>
  void                    Branch                   %388.2 -> BB390 (if true) | BB391 (if false)
BB389   <- [112]
  fs              %389.0 = FrameState         R     0x55eeedf72df0+1724: [%386.1], env=e0.1
  void                    Deopt              !v    %389.0, CallTarget@0x55eeee44c058[Call#61], %112.0   !
BB390   <- [388]
  env             e390.0 = MkEnv              l     gparname="linemitre", parent=e0.1, context 1
  val?^ | miss    %390.1 = LdVar              eR    match, e390.0
  lgl$#-          %390.2 = Identical                %390.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %390.2 -> BB392 (if true) | BB393 (if false)
BB391   <- [388]
  void                    DropContext        C     
  fs              %391.1 = FrameState         R     0x55eeedf72df0+1731: [%386.3], env=e0.1
  void                    Deopt              !v    %391.1, DeadBranchReached@0x55eeee44c3c8[Test#0], %388.2   !
BB392   <- [390]
  val?^ | miss    %392.0 = LdVar              eR    names, e0.1
  lgl$#-          %392.1 = Identical                %392.0, <blt names>
  void                    Branch                   %392.1 -> BB394 (if true) | BB395 (if false)
BB393   <- [390]
  void                    Nop                !     
  val?^ | miss    %393.1 = %390.1
  dr              %393.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB113
BB394   <- [392]
  val?^ | miss    %394.0 = LdVar              eR    gpars, e390.0
  val?            %394.1 = Force!<lazy>       !v    %394.0, e390.0   <vec->
  val?            %394.2 = CallBuiltin        !v    names(%394.1) e390.0   <nil->
  lgl$#-          %394.3 = IsType                   %394.2 isA val?-
  void                    Branch                   %394.3 -> BB396 (if true) | BB397 (if false)
BB395   <- [392]
  void                    Nop                !     
  val?^ | miss    %395.1 = %392.0
  dr              %395.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB113
BB113   <- [393, 395]
  val?^ | miss    %113.0 = Phi                      %393.1:BB393, %395.1:BB395
  val?^ | miss    %113.1 = %113.0
  dr              %113.2 = Phi                      %393.2:BB393, %395.2:BB395
  dr              %113.3 = %113.2
  fs              %113.4 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  env             e113.5 = (MkEnv)            l     gparname="linemitre", parent=e0.1, context 1
  fs              %113.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e113.5, next=%113.4
  void                    Deopt              !v    %113.6, %113.3, %113.1   !
BB396   <- [394]
  val?-           %396.0 = CastType           d     dn %394.2   <nil->
  val+            %396.1 = CallSafeBuiltin    wed   match("linemitre", %396.0, NA, nil)    <int$->
  lgl$#-          %396.2 = IsType                   %396.1 isA int$-
  void                    Branch                   %396.2 -> BB398 (if true) | BB399 (if false)
BB397   <- [394]
  fs              %397.0 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  fs              %397.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e390.0, next=%397.0
  prom-           %397.2 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p60, e390.0
  val?^           %397.3 = CastType                 up %397.2
  prom-           %397.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p59, e390.0
  val?^           %397.5 = CastType                 up %397.4
  env             e397.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%397.3, x=%397.5, parent=R_BaseNamespace, context 0
  fs              %397.7 = FrameState         R     0x55eeec291d40+23: ["linemitre"], env=e397.6, next=%397.1
  fs              %397.8 = FrameState         R     0x55eeee0f3040+32(pr): [%394.2], env=e390.0, next=%397.7
  void                    Deopt              !v    %397.8, Typecheck@0x55eeec2e4cb0[Type#1], %394.2   !
BB398   <- [396]
  int$-           %398.0 = CastType           d     dn %396.1
  lgl$-           %398.1 = CallSafeBuiltin    wed   is.na(%398.0)    <lgl$->
  lgl$-           %398.2 = Not                d     %398.1, elided
  lgl$#-          %398.3 = CheckTrueFalse     e     %398.2
  void                    Branch                   %398.3 -> BB167 (if true) | BB119 (if false)
BB399   <- [396]
  fs              %399.0 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  prom-           %399.1 = MkArg                    %396.0, validGP[0x55eeee83d470]_p60 (!refl), e390.0
  val?~           %399.2 = CastType                 up %399.1
  fs              %399.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e390.0, next=%399.0
  prom-           %399.4 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p59, e390.0
  val?^           %399.5 = CastType                 up %399.4
  env             e399.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%399.2, x=%399.5, parent=R_BaseNamespace, context 0
  fs              %399.7 = FrameState         R     0x55eeec291d40+69: [%396.1], env=e399.6, next=%399.3
  void                    Deopt              !v    %399.7, Typecheck@0x55eeee44c3c8[Type#7], %396.1   !
BB167   <- [398]
  val?^ | miss    %167.0 = LdVar              eR    gpars, e390.0
  val?            %167.1 = Force!             !v    %167.0, e390.0   <val?_>
  lgl$#-          %167.2 = IsType                   %167.1 isA val+   <@?>
  void                    Branch                   %167.2 -> BB174 (if true) | BB168 (if false)
BB119   <- [398]
  void                    Nop                !     
  goto BB120
BB174   <- [167]
  val?^ | miss    %174.0 = LdVar              eR    gparname, e390.0
  val?            %174.1 = Force!             !v    %174.0, e390.0   <val?_>
  val?            %174.2 = %174.1
  goto BB169
BB168   <- [167]
  prom-           %168.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p62, e390.0
  prom-           %168.1 = %168.0
  goto BB169
BB120   <- [119, 408]
  val?            %120.0 = PopContext         C     nil, %388.0
  val?^ | miss    %120.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %120.2 = Identical                <blt is.na>, %120.1   <true>
  void                    Branch                   %120.2 -> BB400 (if true) | BB401 (if false)
BB169   <- [168, 174]
  val?            %169.0 = Phi                      %174.2:BB174, %168.1:BB168
  val?            %169.1 = %169.0
  val?            %169.2 = Extract2_1D        !v    %167.1, %169.1, e390.0   <val?_>
  lgl$-           %169.3 = Is                       %169.2, NULL
  lgl$#-          %169.4 = CheckTrueFalse     e     %169.3
  void                    Branch                   %169.4 -> BB171 (if true) | BB170 (if false)
BB400   <- [120]
  val?^ | miss    %400.0 = LdVar              eR    match, e0.1
  lgl$#-          %400.1 = Identical                %400.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %400.1 -> BB402 (if true) | BB403 (if false)
BB401   <- [120]
  void                    Nop                !     
  lgl$#-          %401.1 = %120.2
  dr              %401.2 = DeadBranchReached@0x55eeee44c058[Test#5]
  goto BB121
BB171   <- [169]
  val?^ | miss    %171.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %171.1 = LdVar              eR    gparname, e390.0
  val?            %171.2 = Force!             !v    %171.1, e390.0   <val?_>
  val?            %171.3 = Force!             !v    %171.0, e390.0
  lgl$#-          %171.4 = IsType                   %171.3 isA val?+
  lgl$#-          %171.5 = IsType                   %171.2 isA val?+
  void                    Branch                   %171.4 -> BB404 (if true) | BB405 (if false)
BB170   <- [169]
  fs              %170.0 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  (cls|spec|blt)  %170.1 = LdFun              !v    check.length, e390.0
  fs              %170.2 = FrameState         R     0x55eeee790590+224: [%170.1], env=e390.0, next=%170.0
  void                    Deopt              !v    %170.2, DeadCall@0x55eeee44c3c8[Call#5], %170.1   !
BB402   <- [400]
  val?^ | miss    %402.0 = LdVar              eR    names, e0.1
  lgl$#-          %402.1 = Identical                %402.0, <blt names>
  void                    Branch                   %402.1 -> BB406 (if true) | BB407 (if false)
BB403   <- [400]
  void                    Nop                !     
  val?^ | miss    %403.1 = %400.0
  dr              %403.2 = CallTarget@0x55eeee44c058[Call#65]
  goto BB121
BB121   <- [401, 403, 407]
  val?^ | miss    %121.0 = Phi                      %401.1:BB401, %403.1:BB403, %407.1:BB407
  val?^ | miss    %121.1 = %121.0
  dr              %121.2 = Phi                      %401.2:BB401, %403.2:BB403, %407.2:BB407
  dr              %121.3 = %121.2
  fs              %121.4 = FrameState         R     0x55eeedf72df0+1902: [%120.0], env=e0.1
  void                    Deopt              !v    %121.4, %121.3, %121.1   !
BB404   <- [171]
  val?+           %404.0 = CastType           d     dn %171.3
  void                    Branch                   %171.5 -> BB408 (if true) | BB409 (if false)
BB405   <- [171]
  void                    Nop                !     
  val?            %405.1 = %171.3
  dr              %405.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB172
BB406   <- [402]
  val?^ | miss    %406.0 = LdVar              eR    gpars, e0.1
  val?            %406.1 = Force!<wrapped>    !v    %406.0, e0.1   <vec->
  val?            %406.2 = CallBuiltin        !v    names(%406.1) e0.1   <nil->
  lgl$#-          %406.3 = IsType                   %406.2 isA val?-
  void                    Branch                   %406.3 -> BB410 (if true) | BB411 (if false)
BB407   <- [402]
  void                    Nop                !     
  val?^ | miss    %407.1 = %402.0
  dr              %407.2 = CallTarget@0x55eeee44c058[Call#66]
  goto BB121
BB408   <- [404]
  val?+           %408.0 = CastType           d     dn %171.2   <val?_>
  val?+           %408.1 = Subassign2_1D      wed   nil, %404.0, %408.0, elided
  void                    StVarSuper         lRW   gpars, %408.1, e390.0
  goto BB120
BB409   <- [404]
  void                    Nop                !     
  val?            %409.1 = %171.2
  dr              %409.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB172
BB172   <- [405, 409]
  val?^ | miss    %172.0 = Phi                      %405.1:BB405, %409.1:BB409
  val?^ | miss    %172.1 = %172.0
  dr              %172.2 = Phi                      %405.2:BB405, %409.2:BB409
  dr              %172.3 = %172.2
  fs              %172.4 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  fs              %172.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %171.3, %171.2], env=e390.0, next=%172.4
  void                    Deopt              !v    %172.5, %172.3, %172.1   !
BB410   <- [406]
  val?-           %410.0 = CastType           d     dn %406.2   <nil->
  val+            %410.1 = CallSafeBuiltin    wed   match("linemitre", %410.0, NA, nil)    <int$->
  lgl$#-          %410.2 = IsType                   %410.1 isA int$-
  void                    Branch                   %410.2 -> BB412 (if true) | BB413 (if false)
BB411   <- [406]
  prom-           %411.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p12, e0.1
  val?^           %411.1 = CastType                 up %411.0
  fs              %411.2 = FrameState         R     0x55eeedf72df0+2000: [<blt is.na>], env=e0.1
  env             e411.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%411.1, x="linemitre", parent=R_BaseNamespace, context 0
  fs              %411.4 = FrameState         R     0x55eeec291d40+23: ["linemitre"], env=e411.3, next=%411.2
  fs              %411.5 = FrameState         R     0x55eeedfa5170+32(pr): [%406.2], env=e0.1, next=%411.4
  void                    Deopt              !v    %411.5, Typecheck@0x55eeec2e4cb0[Type#1], %406.2   !
BB412   <- [410]
  int$-           %412.0 = CastType           d     dn %410.1
  lgl$-           %412.1 = CallSafeBuiltin    wed   is.na(%412.0)    <lgl$->
  lgl$-           %412.2 = Not                d     %412.1, elided
  lgl$#-          %412.3 = CheckTrueFalse     e     %412.2
  void                    Branch                   %412.3 -> BB164 (if true) | BB129 (if false)
BB413   <- [410]
  prom-           %413.0 = MkArg                    %410.0, validGP[0x55eeee83d470]_p12 (!refl), e0.1
  val?~           %413.1 = CastType                 up %413.0
  fs              %413.2 = FrameState         R     0x55eeedf72df0+2000: [<blt is.na>], env=e0.1
  env             e413.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%413.1, x="linemitre", parent=R_BaseNamespace, context 0
  fs              %413.4 = FrameState         R     0x55eeec291d40+69: [%410.1], env=e413.3, next=%413.2
  void                    Deopt              !v    %413.4, Typecheck@0x55eeee44c058[Type#80], %410.1   !
BB164   <- [412]
  val?^ | miss    %164.0 = LdVar              eR    any, e0.1
  lgl$#-          %164.1 = Identical                <blt any>, %164.0   <@?>
  void                    Branch                   %164.1 -> BB166 (if true) | BB165 (if false)
BB129   <- [412]
  val?^ | miss    %129.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %129.1 = Identical                <blt is.na>, %129.0   <true>
  void                    Branch                   %129.1 -> BB414 (if true) | BB415 (if false)
BB166   <- [164]
  (cls|spec|blt)  %166.0 = LdFun              !v    $, e0.1
  fs              %166.1 = FrameState         R     0x55eeedf72df0+2104: [<blt any>, %166.0], env=e0.1
  void                    Deopt              !v    %166.1, DeadCall@0x55eeee44c058[Call#69], %166.0   !
BB165   <- [164]
  (cls|spec|blt)  %165.0 = LdFun              !v    any, e0.1
  fs              %165.1 = FrameState         R     0x55eeedf72df0+2067: [%165.0], env=e0.1
  void                    Deopt              !v    %165.1, DeadCall@0x55eeee44c058[Call#67], %165.0   !
BB414   <- [129]
  val?^ | miss    %414.0 = LdVar              eR    match, e0.1
  lgl$#-          %414.1 = Identical                %414.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %414.1 -> BB416 (if true) | BB417 (if false)
BB415   <- [129]
  void                    Nop                !     
  lgl$#-          %415.1 = %129.1
  dr              %415.2 = DeadBranchReached@0x55eeee44c058[Test#7]
  goto BB127
BB416   <- [414]
  val?^ | miss    %416.0 = LdVar              eR    names, e0.1
  lgl$#-          %416.1 = Identical                %416.0, <blt names>
  void                    Branch                   %416.1 -> BB418 (if true) | BB419 (if false)
BB417   <- [414]
  void                    Nop                !     
  val?^ | miss    %417.1 = %414.0
  dr              %417.2 = CallTarget@0x55eeee44c058[Call#74]
  goto BB127
BB127   <- [415, 417, 419]
  val?^ | miss    %127.0 = Phi                      %415.1:BB415, %417.1:BB417, %419.1:BB419
  val?^ | miss    %127.1 = %127.0
  dr              %127.2 = Phi                      %415.2:BB415, %417.2:BB417, %419.2:BB419
  dr              %127.3 = %127.2
  fs              %127.4 = FrameState         R     0x55eeedf72df0+2022: [%412.1], env=e0.1
  void                    Deopt              !v    %127.4, %127.3, %127.1   !
BB418   <- [416]
  val?^ | miss    %418.0 = LdVar              eR    gpars, e0.1
  val?            %418.1 = Force!<wrapped>    !v    %418.0, e0.1   <vec->
  val?            %418.2 = CallBuiltin        !v    names(%418.1) e0.1   <nil->
  lgl$#-          %418.3 = IsType                   %418.2 isA val?-
  void                    Branch                   %418.3 -> BB420 (if true) | BB421 (if false)
BB419   <- [416]
  void                    Nop                !     
  val?^ | miss    %419.1 = %416.0
  dr              %419.2 = CallTarget@0x55eeee44c058[Call#75]
  goto BB127
BB420   <- [418]
  val?-           %420.0 = CastType           d     dn %418.2   <nil->
  val+            %420.1 = CallSafeBuiltin    wed   match("alpha", %420.0, NA, nil)    <int$->
  lgl$#-          %420.2 = IsType                   %420.1 isA int$-
  void                    Branch                   %420.2 -> BB422 (if true) | BB423 (if false)
BB421   <- [418]
  prom-           %421.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p14, e0.1
  val?^           %421.1 = CastType                 up %421.0
  fs              %421.2 = FrameState         R     0x55eeedf72df0+2316: [<blt is.na>], env=e0.1
  env             e421.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%421.1, x="alpha", parent=R_BaseNamespace, context 0
  fs              %421.4 = FrameState         R     0x55eeec291d40+23: ["alpha"], env=e421.3, next=%421.2
  fs              %421.5 = FrameState         R     0x55eeee470e30+32(pr): [%418.2], env=e0.1, next=%421.4
  void                    Deopt              !v    %421.5, Typecheck@0x55eeec2e4cb0[Type#1], %418.2   !
BB422   <- [420]
  int$-           %422.0 = CastType           d     dn %420.1
  lgl$-           %422.1 = CallSafeBuiltin    wed   is.na(%422.0)    <lgl$->
  lgl$-           %422.2 = Not                d     %422.1, elided
  lgl$#-          %422.3 = CheckTrueFalse     e     %422.2
  void                    Branch                   %422.3 -> BB161 (if true) | BB136 (if false)
BB423   <- [420]
  prom-           %423.0 = MkArg                    %420.0, validGP[0x55eeee83d470]_p14 (!refl), e0.1
  val?~           %423.1 = CastType                 up %423.0
  fs              %423.2 = FrameState         R     0x55eeedf72df0+2316: [<blt is.na>], env=e0.1
  env             e423.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%423.1, x="alpha", parent=R_BaseNamespace, context 0
  fs              %423.4 = FrameState         R     0x55eeec291d40+69: [%420.1], env=e423.3, next=%423.2
  void                    Deopt              !v    %423.4, Typecheck@0x55eeee44c058[Type#96], %420.1   !
BB161   <- [422]
  val?^ | miss    %161.0 = LdVar              eR    any, e0.1
  lgl$#-          %161.1 = Identical                <blt any>, %161.0   <@?>
  void                    Branch                   %161.1 -> BB163 (if true) | BB162 (if false)
BB136   <- [422]
  val?^ | miss    %136.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %136.1 = Identical                <blt is.na>, %136.0   <true>
  void                    Branch                   %136.1 -> BB424 (if true) | BB425 (if false)
BB163   <- [161]
  (cls|spec|blt)  %163.0 = LdFun              !v    $, e0.1
  fs              %163.1 = FrameState         R     0x55eeedf72df0+2420: [<blt any>, %163.0], env=e0.1
  void                    Deopt              !v    %163.1, DeadCall@0x55eeee44c058[Call#78], %163.0   !
BB162   <- [161]
  (cls|spec|blt)  %162.0 = LdFun              !v    any, e0.1
  fs              %162.1 = FrameState         R     0x55eeedf72df0+2383: [%162.0], env=e0.1
  void                    Deopt              !v    %162.1, DeadCall@0x55eeee44c058[Call#76], %162.0   !
BB424   <- [136]
  val?^ | miss    %424.0 = LdVar              eR    match, e0.1
  lgl$#-          %424.1 = Identical                %424.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %424.1 -> BB426 (if true) | BB427 (if false)
BB425   <- [136]
  void                    Nop                !     
  lgl$#-          %425.1 = %136.1
  dr              %425.2 = DeadBranchReached@0x55eeee44c058[Test#10]
  goto BB134
BB426   <- [424]
  val?^ | miss    %426.0 = LdVar              eR    names, e0.1
  lgl$#-          %426.1 = Identical                %426.0, <blt names>
  void                    Branch                   %426.1 -> BB428 (if true) | BB429 (if false)
BB427   <- [424]
  void                    Nop                !     
  val?^ | miss    %427.1 = %424.0
  dr              %427.2 = CallTarget@0x55eeee44c058[Call#86]
  goto BB134
BB134   <- [425, 427, 429]
  val?^ | miss    %134.0 = Phi                      %425.1:BB425, %427.1:BB427, %429.1:BB429
  val?^ | miss    %134.1 = %134.0
  dr              %134.2 = Phi                      %425.2:BB425, %427.2:BB427, %429.2:BB429
  dr              %134.3 = %134.2
  fs              %134.4 = FrameState         R     0x55eeedf72df0+2338: [%422.1], env=e0.1
  void                    Deopt              !v    %134.4, %134.3, %134.1   !
BB428   <- [426]
  val?^ | miss    %428.0 = LdVar              eR    gpars, e0.1
  val?            %428.1 = Force!<wrapped>    !v    %428.0, e0.1   <vec->
  val?            %428.2 = CallBuiltin        !v    names(%428.1) e0.1   <nil->
  lgl$#-          %428.3 = IsType                   %428.2 isA val?-
  void                    Branch                   %428.3 -> BB430 (if true) | BB431 (if false)
BB429   <- [426]
  void                    Nop                !     
  val?^ | miss    %429.1 = %426.0
  dr              %429.2 = CallTarget@0x55eeee44c058[Call#87]
  goto BB134
BB430   <- [428]
  val?-           %430.0 = CastType           d     dn %428.2   <nil->
  val+            %430.1 = CallSafeBuiltin    wed   match("font", %430.0, NA, nil)    <int$->
  lgl$#-          %430.2 = IsType                   %430.1 isA int$-
  void                    Branch                   %430.2 -> BB432 (if true) | BB433 (if false)
BB431   <- [428]
  fs              %431.0 = FrameState         R     0x55eeedf72df0+2777: [<blt is.na>], env=e0.1
  prom-           %431.1 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p16, e0.1
  val?^           %431.2 = CastType                 up %431.1
  env             e431.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%431.2, x="font", parent=R_BaseNamespace, context 0
  fs              %431.4 = FrameState         R     0x55eeec291d40+23: ["font"], env=e431.3, next=%431.0
  fs              %431.5 = FrameState         R     0x55eeedd61150+32(pr): [%428.2], env=e0.1, next=%431.4
  void                    Deopt              !v    %431.5, Typecheck@0x55eeec2e4cb0[Type#1], %428.2   !
BB432   <- [430]
  int$-           %432.0 = CastType           d     dn %430.1
  lgl$-           %432.1 = CallSafeBuiltin    wed   is.na(%432.0)    <lgl$->
  lgl$-           %432.2 = Not                d     %432.1, elided
  lgl$#-          %432.3 = CheckTrueFalse     e     %432.2
  void                    Branch                   %432.3 -> BB160 (if true) | BB143 (if false)
BB433   <- [430]
  prom-           %433.0 = MkArg                    %430.0, validGP[0x55eeee83d470]_p16 (!refl), e0.1
  val?~           %433.1 = CastType                 up %433.0
  fs              %433.2 = FrameState         R     0x55eeedf72df0+2777: [<blt is.na>], env=e0.1
  env             e433.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%433.1, x="font", parent=R_BaseNamespace, context 0
  fs              %433.4 = FrameState         R     0x55eeec291d40+69: [%430.1], env=e433.3, next=%433.2
  void                    Deopt              !v    %433.4, Typecheck@0x55eeee44c058[Type#121], %430.1   !
BB160   <- [432]
  (cls|spec|blt)  %160.0 = LdFun              !v    $, e0.1
  fs              %160.1 = FrameState         R     0x55eeedf72df0+2821: [%160.0], env=e0.1
  void                    Deopt              !v    %160.1, DeadCall@0x55eeee44c058[Call#88], %160.0   !
BB143   <- [432]
  val?^ | miss    %143.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %143.1 = Identical                <blt is.na>, %143.0   <true>
  void                    Branch                   %143.1 -> BB434 (if true) | BB435 (if false)
BB434   <- [143]
  val?^ | miss    %434.0 = LdVar              eR    match, e0.1
  lgl$#-          %434.1 = Identical                %434.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %434.1 -> BB436 (if true) | BB437 (if false)
BB435   <- [143]
  void                    Nop                !     
  lgl$#-          %435.1 = %143.1
  dr              %435.2 = DeadBranchReached@0x55eeee44c058[Test#11]
  goto BB141
BB436   <- [434]
  val?^ | miss    %436.0 = LdVar              eR    names, e0.1
  lgl$#-          %436.1 = Identical                %436.0, <blt names>
  void                    Branch                   %436.1 -> BB438 (if true) | BB439 (if false)
BB437   <- [434]
  void                    Nop                !     
  val?^ | miss    %437.1 = %434.0
  dr              %437.2 = CallTarget@0x55eeee44c058[Call#99]
  goto BB141
BB141   <- [435, 437, 439]
  val?^ | miss    %141.0 = Phi                      %435.1:BB435, %437.1:BB437, %439.1:BB439
  val?^ | miss    %141.1 = %141.0
  dr              %141.2 = Phi                      %435.2:BB435, %437.2:BB437, %439.2:BB439
  dr              %141.3 = %141.2
  fs              %141.4 = FrameState         R     0x55eeedf72df0+2799: [%432.1], env=e0.1
  void                    Deopt              !v    %141.4, %141.3, %141.1   !
BB438   <- [436]
  val?^ | miss    %438.0 = LdVar              eR    gpars, e0.1
  val?            %438.1 = Force!<wrapped>    !v    %438.0, e0.1   <vec->
  val?            %438.2 = CallBuiltin        !v    names(%438.1) e0.1   <nil->
  lgl$#-          %438.3 = IsType                   %438.2 isA val?-
  void                    Branch                   %438.3 -> BB440 (if true) | BB441 (if false)
BB439   <- [436]
  void                    Nop                !     
  val?^ | miss    %439.1 = %436.0
  dr              %439.2 = CallTarget@0x55eeee44c058[Call#100]
  goto BB141
BB440   <- [438]
  val?-           %440.0 = CastType           d     dn %438.2   <nil->
  val+            %440.1 = CallSafeBuiltin    wed   match("fontfamily", %440.0, NA, nil)    <int$->
  lgl$#-          %440.2 = IsType                   %440.1 isA int$-
  void                    Branch                   %440.2 -> BB442 (if true) | BB443 (if false)
BB441   <- [438]
  prom-           %441.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p18, e0.1
  val?^           %441.1 = CastType                 up %441.0
  fs              %441.2 = FrameState         R     0x55eeedf72df0+3080: [<blt is.na>], env=e0.1
  env             e441.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%441.1, x="fontfamily", parent=R_BaseNamespace, context 0
  fs              %441.4 = FrameState         R     0x55eeec291d40+23: ["fontfamily"], env=e441.3, next=%441.2
  fs              %441.5 = FrameState         R     0x55eeee24ec10+32(pr): [%438.2], env=e0.1, next=%441.4
  void                    Deopt              !v    %441.5, Typecheck@0x55eeec2e4cb0[Type#1], %438.2   !
BB442   <- [440]
  int$-           %442.0 = CastType           d     dn %440.1
  lgl$-           %442.1 = CallSafeBuiltin    wed   is.na(%442.0)    <lgl$->
  lgl$-           %442.2 = Not                d     %442.1, elided
  lgl$#-          %442.3 = CheckTrueFalse     e     %442.2
  void                    Branch                   %442.3 -> BB159 (if true) | BB150 (if false)
BB443   <- [440]
  fs              %443.0 = FrameState         R     0x55eeedf72df0+3080: [<blt is.na>], env=e0.1
  prom-           %443.1 = MkArg                    %440.0, validGP[0x55eeee83d470]_p18 (!refl), e0.1
  val?~           %443.2 = CastType                 up %443.1
  env             e443.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%443.2, x="fontfamily", parent=R_BaseNamespace, context 0
  fs              %443.4 = FrameState         R     0x55eeec291d40+69: [%440.1], env=e443.3, next=%443.0
  void                    Deopt              !v    %443.4, Typecheck@0x55eeee44c058[Type#141], %440.1   !
BB159   <- [442]
  (cls|spec|blt)  %159.0 = LdFun              !v    $, e0.1
  fs              %159.1 = FrameState         R     0x55eeedf72df0+3124: [%159.0], env=e0.1
  void                    Deopt              !v    %159.1, DeadCall@0x55eeee44c058[Call#101], %159.0   !
BB150   <- [442]
  val?^ | miss    %150.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %150.1 = Identical                <blt is.na>, %150.0   <true>
  void                    Branch                   %150.1 -> BB444 (if true) | BB445 (if false)
BB444   <- [150]
  val?^ | miss    %444.0 = LdVar              eR    match, e0.1
  lgl$#-          %444.1 = Identical                %444.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %444.1 -> BB446 (if true) | BB447 (if false)
BB445   <- [150]
  void                    Nop                !     
  lgl$#-          %445.1 = %150.1
  dr              %445.2 = DeadBranchReached@0x55eeee44c058[Test#12]
  goto BB148
BB446   <- [444]
  val?^ | miss    %446.0 = LdVar              eR    names, e0.1
  lgl$#-          %446.1 = Identical                %446.0, <blt names>
  void                    Branch                   %446.1 -> BB448 (if true) | BB449 (if false)
BB447   <- [444]
  void                    Nop                !     
  val?^ | miss    %447.1 = %444.0
  dr              %447.2 = CallTarget@0x55eeee44c058[Call#113]
  goto BB148
BB148   <- [445, 447, 449]
  val?^ | miss    %148.0 = Phi                      %445.1:BB445, %447.1:BB447, %449.1:BB449
  val?^ | miss    %148.1 = %148.0
  dr              %148.2 = Phi                      %445.2:BB445, %447.2:BB447, %449.2:BB449
  dr              %148.3 = %148.2
  fs              %148.4 = FrameState         R     0x55eeedf72df0+3102: [%442.1], env=e0.1
  void                    Deopt              !v    %148.4, %148.3, %148.1   !
BB448   <- [446]
  val?^ | miss    %448.0 = LdVar              eR    gpars, e0.1
  val?            %448.1 = Force!<wrapped>    !v    %448.0, e0.1   <vec->
  val?            %448.2 = CallBuiltin        !v    names(%448.1) e0.1   <nil->
  lgl$#-          %448.3 = IsType                   %448.2 isA val?-
  void                    Branch                   %448.3 -> BB450 (if true) | BB451 (if false)
BB449   <- [446]
  void                    Nop                !     
  val?^ | miss    %449.1 = %446.0
  dr              %449.2 = CallTarget@0x55eeee44c058[Call#114]
  goto BB148
BB450   <- [448]
  val?-           %450.0 = CastType           d     dn %448.2   <nil->
  val+            %450.1 = CallSafeBuiltin    wed   match("fontface", %450.0, NA, nil)    <int$->
  lgl$#-          %450.2 = IsType                   %450.1 isA int$-
  void                    Branch                   %450.2 -> BB452 (if true) | BB453 (if false)
BB451   <- [448]
  prom-           %451.0 = MkArg                    unboundValue, validGP[0x55eeee83d470]_p20, e0.1
  val?^           %451.1 = CastType                 up %451.0
  fs              %451.2 = FrameState         R     0x55eeedf72df0+3416: [<blt is.na>], env=e0.1
  env             e451.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%451.1, x="fontface", parent=R_BaseNamespace, context 0
  fs              %451.4 = FrameState         R     0x55eeec291d40+23: ["fontface"], env=e451.3, next=%451.2
  fs              %451.5 = FrameState         R     0x55eeee012680+32(pr): [%448.2], env=e0.1, next=%451.4
  void                    Deopt              !v    %451.5, Typecheck@0x55eeec2e4cb0[Type#1], %448.2   !
BB452   <- [450]
  int$-           %452.0 = CastType           d     dn %450.1
  lgl$-           %452.1 = CallSafeBuiltin    wed   is.na(%452.0)    <lgl$->
  lgl$-           %452.2 = Not                d     %452.1, elided
  lgl$#-          %452.3 = CheckTrueFalse     e     %452.2
  void                    Branch                   %452.3 -> BB156 (if true) | BB155 (if false)
BB453   <- [450]
  prom-           %453.0 = MkArg                    %450.0, validGP[0x55eeee83d470]_p20 (!refl), e0.1
  val?~           %453.1 = CastType                 up %453.0
  fs              %453.2 = FrameState         R     0x55eeedf72df0+3416: [<blt is.na>], env=e0.1
  env             e453.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%453.1, x="fontface", parent=R_BaseNamespace, context 0
  fs              %453.4 = FrameState         R     0x55eeec291d40+69: [%450.1], env=e453.3, next=%453.2
  void                    Deopt              !v    %453.4, Typecheck@0x55eeee44c058[Type#161], %450.1   !
BB156   <- [452]
  val?^ | miss    %156.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %156.1 = Identical                <blt is.na>, %156.0   <@?>
  void                    Branch                   %156.1 -> BB158 (if true) | BB157 (if false)
BB155   <- [452]
  val?^ | miss    %155.0 = LdVar              eR    gpars, e0.1
  void                    Visible            v     
  val?            %155.2 = Force!<wrapped>    !     %155.0, e0.1   <vec->
  void                    Return             l     %155.2
BB158   <- [156]
  (cls|spec|blt)  %158.0 = LdFun              !v    match, e0.1
  fs              %158.1 = FrameState         R     0x55eeedf72df0+3520: [<blt is.na>, %158.0], env=e0.1
  void                    Deopt              !v    %158.1, DeadCall@0x55eeee44c058[Call#118], %158.0   !
BB157   <- [156]
  (cls|spec|blt)  %157.0 = LdFun              !v    is.na, e0.1
  fs              %157.1 = FrameState         R     0x55eeedf72df0+3483: [%157.0], env=e0.1
  void                    Deopt              !v    %157.1, DeadCall@0x55eeee44c058[Call#115], %157.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p15, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p17, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p19, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p21, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p24, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p32, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p36, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p40, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p47, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeee83d470]_p61, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 62:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ validGP[0x55eeee83d470]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
