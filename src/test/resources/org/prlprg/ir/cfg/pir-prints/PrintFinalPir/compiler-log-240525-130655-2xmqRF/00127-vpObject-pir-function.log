
┌──────────────────────────────────────────────────────────────────────────────┐
│ vpObject[0x55eeed9c56c0]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
vpObject[0x55eeed9c56c0]
BB0
  val?^           %0.0  = LdArg                    14
  val?^           %0.1  = LdArg                    13
  val?^           %0.2  = LdArg                    12
  val?^           %0.3  = LdArg                    11
  val?^           %0.4  = LdArg                    10
  val?^           %0.5  = LdArg                    9
  val?^           %0.6  = LdArg                    8
  val?^           %0.7  = LdArg                    7
  val?^           %0.8  = LdArg                    6
  val?^           %0.9  = LdArg                    5
  val?^           %0.10 = LdArg                    4
  val?^           %0.11 = LdArg                    3
  val?^           %0.12 = LdArg                    2
  val?^           %0.13 = LdArg                    1
  val?^           %0.14 = LdArg                    0
  val?^ | miss    %0.15 = LdVar              eR    list, <env 0x55eeedfdc408>
  lgl$#-          %0.16 = Identical                <blt list>, %0.15   <true>
  void                    Branch                   %0.16 -> BB13 (if true) | BB14 (if false)
BB13   <- [0]
  env             e13.0 = MkEnv              l     x=%0.14, y=%0.13, width=%0.12, height=%0.11, just=%0.10, gp=%0.9, clip=%0.8, mask=%0.7, xscale=%0.6, yscale=%0.5, angle=%0.4, layout=%0.3, layout.pos.row=%0.2, layout.pos.col=%0.1, name=%0.0, parent=<env 0x55eeedfdc408>, context 1
  val?            %13.1 = Force!<lazy>       !v    %0.14, e13.0   <real$>
  val?^ | miss    %13.2 = LdVar              eR    y, e13.0
  val?            %13.3 = Force!<lazy>       !v    %13.2, e13.0   <real$>
  val?^ | miss    %13.4 = LdVar              eR    width, e13.0
  val?            %13.5 = Force!<lazy>       !v    %13.4, e13.0   <(real|vec)$>
  val?^ | miss    %13.6 = LdVar              eR    height, e13.0
  val?            %13.7 = Force!<lazy>       !v    %13.6, e13.0   <real$>
  val?^ | miss    %13.8 = LdVar              eR    just, e13.0
  val?            %13.9 = Force!<lazy>       !v    %13.8, e13.0   <real->
  val?^ | miss    %13.10 = LdVar              eR    gp, e13.0
  val?            %13.11 = Force!<lazy>       !v    %13.10, e13.0   <vec>
  val?^ | miss    %13.12 = LdVar              eR    clip, e13.0
  val?            %13.13 = Force!<lazy>       !v    %13.12, e13.0   <lgl$->
  val?^ | miss    %13.14 = LdVar              eR    xscale, e13.0
  val?            %13.15 = Force!<lazy>       !v    %13.14, e13.0   <real->
  val?^ | miss    %13.16 = LdVar              eR    yscale, e13.0
  val?            %13.17 = Force!<lazy>       !v    %13.16, e13.0   <real->
  val?^ | miss    %13.18 = LdVar              eR    angle, e13.0
  val?            %13.19 = Force!<lazy>       !v    %13.18, e13.0   <real$->
  val?^ | miss    %13.20 = LdVar              eR    layout, e13.0
  val?            %13.21 = Force!<lazy>       !v    %13.20, e13.0   <nil->
  val?^ | miss    %13.22 = LdVar              eR    layout.pos.row, e13.0
  val?            %13.23 = Force!<lazy>       !v    %13.22, e13.0   <nil->
  val?^ | miss    %13.24 = LdVar              eR    layout.pos.col, e13.0
  val?            %13.25 = Force!<lazy>       !v    %13.24, e13.0   <nil->
  val?^ | miss    %13.26 = LdVar              eR    valid.just, e13.0
  lgl$#-          %13.27 = Identical                %13.26, function(just) <(rir::DispatchTable*)0x55eeeeb|...
  void                    Branch                   %13.27 -> BB15 (if true) | BB16 (if false)
BB14   <- [0]
  env             e14.0 = (MkEnv)            l     x=%0.14, y=%0.13, width=%0.12, height=%0.11, just=%0.10, gp=%0.9, clip=%0.8, mask=%0.7, xscale=%0.6, yscale=%0.5, angle=%0.4, layout=%0.3, layout.pos.row=%0.2, layout.pos.col=%0.1, name=%0.0, parent=<env 0x55eeedfdc408>, context 1
  fs              %14.1 = FrameState         R     0x55eeee2c94e0+0: [], env=e14.0
  void                    Deopt              !v    %14.1, DeadBranchReached@0x55eeee84acd0[Test#0], %0.16
BB15   <- [13]
  prom-           %15.0 = MkArg                    unboundValue, vpObject[0x55eeed9c56c0]_p0, e13.0
  ct              %15.1 = PushContext        lCL   %15.0, valid.just(just), function(just) <(rir::DispatchTable*)0x55eeeeb|..., e13.0
  val?^           %15.2 = CastType                 up %15.0
  val?^ | miss    %15.3 = LdVar              eR    is.character, <env 0x55eeedfdc408>
  lgl$#-          %15.4 = Identical                <blt is.character>, %15.3   <true>
  void                    Branch                   %15.4 -> BB17 (if true) | BB18 (if false)
BB16   <- [13]
  fs              %16.0 = FrameState         R     0x55eeee2c94e0+529: [<blt list>, %13.1, %13.3, %13.5, %13.7, %13.9, %13.11, %13.13, %13.15, %13.17, %13.19, %13.21, %13.23, %13.25], env=e13.0
  void                    Deopt              !v    %16.0, CallTarget@0x55eeee84acd0[Call#2], %13.26   !
BB17   <- [15]
  env             e17.0 = MkEnv              l     just=%15.2, parent=<env 0x55eeedfdc408>, context 1
  val?            %17.1 = Force!<lazy>       !vL   %15.2, e17.0   <(real|str)->
  lgl$#-          %17.2 = CallSafeBuiltin    wed   is.character(%17.1)    <lgl$->
  void                    Branch                   %17.2 -> BB11 (if true) | BB9 (if false)
BB18   <- [15]
  fs              %18.0 = FrameState         R     0x55eeee2c94e0+566: [<blt list>, %13.1, %13.3, %13.5, %13.7, %13.9, %13.11, %13.13, %13.15, %13.17, %13.19, %13.21, %13.23, %13.25], env=e13.0
  env             e18.1 = (MkEnv)            l     just=%15.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %18.2 = FrameState         R     0x55eeef6ef2d0+17: [<blt is.character>, %15.4], env=e18.1, next=%18.0
  void                    Deopt              !v    %18.2, DeadBranchReached@0x55eeee9df168[Test#0], %15.4   !
BB11   <- [17]
  val?^ | miss    %11.0 = LdVar              eR    valid.charjust, <env 0x55eeedfdc408>
  lgl$#-          %11.1 = Identical                %11.0, function(just) <(rir::DispatchTable*)0x55eeedf|...
  void                    Branch                   %11.1 -> BB19 (if true) | BB20 (if false)
BB9   <- [17]
  val?^ | miss    %9.0  = LdVar              eR    valid.numjust, <env 0x55eeedfdc408>
  lgl$#-          %9.1  = Identical                %9.0, function(just) <(rir::DispatchTable*)0x55eeee8|...
  void                    Branch                   %9.1 -> BB21 (if true) | BB22 (if false)
BB19   <- [11]
  prom-           %19.0 = MkArg                    unboundValue, vpObject[0x55eeed9c56c0]_p3, e17.0
  val?            %19.1 = Call               !v    function(just) <(rir::DispatchTable*)0x55eeedf|...(%19.0) e17.0   <real->
  val?            %19.2 = %19.1
  goto BB10
BB20   <- [11]
  void                    Nop                !     
  val?^ | miss    %20.1 = %11.0
  dr              %20.2 = CallTarget@0x55eeee9df168[Call#3]
  goto BB7
BB21   <- [9]
  prom-           %21.0 = MkArg                    unboundValue, vpObject[0x55eeed9c56c0]_p4, e17.0
  val?            %21.1 = StaticCall         !v    valid.numjust[0x55eeee6415a0](%21.0) e17.0   <real->
  val?            %21.2 = %21.1
  goto BB10
BB22   <- [9]
  void                    Nop                !     
  val?^ | miss    %22.1 = %9.0
  dr              %22.2 = CallTarget@0x55eeee9df168[Call#1]
  goto BB7
BB10   <- [19, 21]
  val?            %10.0 = Phi                      %21.2:BB21, %19.2:BB19
  val?            %10.1 = %10.0
  val?            %10.2 = PopContext         C     %10.1, %15.1   <real->
  val?^ | miss    %10.3 = LdVar              eR    layout.pos.row, e13.0
  val?            %10.4 = Force!<wrapped>    !v    %10.3, e13.0   <nil->
  val?^ | miss    %10.5 = LdVar              eR    layout.pos.col, e13.0
  val?            %10.6 = Force!<wrapped>    !v    %10.5, e13.0   <nil->
  val?^ | miss    %10.7 = LdVar              eR    name, e13.0
  val?            %10.8 = Force!<lazy>       !v    %10.7, e13.0   <str$->
  val?^ | miss    %10.9 = LdVar              eR    mask, e13.0
  val?            %10.10 = Force!<lazy>       !v    %10.9, e13.0   <lgl$->
  val?            %10.11 = NamedCall          !v    <blt list>(x=%13.1, y=%13.3, width=%13.5, height=%13.7, justification=%13.9, gp=%13.11, clip=%13.13, xscale=%13.15, yscale=%13.17, angle=%13.19, layout=%13.21, layout.pos.row=%13.23, layout.pos.col=%13.25, valid.just=%10.2, valid.pos.row=%10.4, valid.pos.col=%10.6, name=%10.8, parentgpar=nil, gpar=nil, trans=nil, widths=nil, heights=nil, width.cm=nil, height.cm=nil, rotation=nil, cliprect=nil, parent=nil, children=nil, devwidth=nil, devheight=nil, clippath=nil, mask=%10.10, resolvedmask=nil) e13.0   <vec+>
  void                    StVar              lW    vp, %10.11, e13.0
  (cls|spec|blt)  %10.13 = LdFun              !v    <-, <0x55eeeba71da8>, e13.0
  prom-           %10.14 = MkArg                    unboundValue, vpObject[0x55eeed9c56c0]_p1, e13.0
  val?            %10.15 = Call               !v    %10.13(%10.14, "viewport") e13.0
  val?^ | miss    %10.16 = LdVar              eR    vp, e13.0
  void                    Visible            v     
  val?            %10.18 = Force!<value>      !     %10.16, e13.0   <vec>
  void                    Return             l     %10.18
BB7   <- [20, 22]
  val?^ | miss    %7.0  = Phi                      %20.1:BB20, %22.1:BB22
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %20.2:BB20, %22.2:BB22
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55eeee2c94e0+566: [<blt list>, %13.1, %13.3, %13.5, %13.7, %13.9, %13.11, %13.13, %13.15, %13.17, %13.19, %13.21, %13.23, %13.25], env=e13.0
  fs              %7.5  = FrameState         R     0x55eeef6ef2d0+91: [%17.2], env=e17.0, next=%7.4
  void                    Deopt              !v    %7.5, %7.3, %7.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, e0.0
  prom-           %0.2  = MkArg                    unboundValue, vpObject[0x55eeed9c56c0]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.numeric, <0x55eeeba89f60>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, vpObject[0x55eeed9c56c0]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real->
  void                    Return             l     %0.3

│ vpObject[0x55eeed9c56c0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
