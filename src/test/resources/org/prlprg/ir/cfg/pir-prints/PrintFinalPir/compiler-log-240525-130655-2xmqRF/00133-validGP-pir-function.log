
┌──────────────────────────────────────────────────────────────────────────────┐
│ validGP[0x55eeeea36900]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
validGP[0x55eeeea36900]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     gpars=%0.0, parent=<env 0x55eeedfdc408>, context 1
  cls             %0.2  = MkCls                    check.length, e0.1
  cls             %0.3  = MkCls                    numnotnull, e0.1
  cls             %0.4  = MkCls                    checkNA, e0.1
  void                    StVar              lW    check.length, %0.2, e0.1
  void                    StVar              lW    numnotnull, %0.3, e0.1
  void                    StVar              lW    checkNA, %0.4, e0.1
  ct              %0.8  = PushContext        lCL   "fontsize", numnotnull("fontsize"), %0.3, e0.1
  val?^ | miss    %0.9  = LdVar              eR    is.na, <env 0x55eeedfdc408>
  lgl$#-          %0.10 = Identical                <blt is.na>, %0.9   <true>
  void                    Branch                   %0.10 -> BB249 (if true) | BB250 (if false)
BB249   <- [0]
  val?^ | miss    %249.0 = LdVar              eR    match, <env 0x55eeedfdc408>
  lgl$#-          %249.1 = Identical                %249.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %249.1 -> BB251 (if true) | BB252 (if false)
BB250   <- [0]
  void                    DropContext        C     
  fs              %250.1 = FrameState         R     0x55eeedf72df0+75: [], env=e0.1
  void                    Deopt              !v    %250.1, DeadBranchReached@0x55eeee44c3c8[Test#0], %0.10
BB251   <- [249]
  val?^ | miss    %251.0 = LdVar              eR    names, <env 0x55eeedfdc408>
  lgl$#-          %251.1 = Identical                %251.0, <blt names>
  void                    Branch                   %251.1 -> BB253 (if true) | BB254 (if false)
BB252   <- [249]
  void                    Nop                !     
  val?^ | miss    %252.1 = %249.0
  dr              %252.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB3
BB253   <- [251]
  env             e253.0 = MkEnv              l     gparname="fontsize", parent=e0.1, context 1
  val?            %253.1 = Force!<lazy>       !v    %0.0, e253.0   <vec->
  val?            %253.2 = CallBuiltin        !v    names(%253.1) e253.0   <nil->
  lgl$#-          %253.3 = IsType                   %253.2 isA val?-
  void                    Branch                   %253.3 -> BB255 (if true) | BB256 (if false)
BB254   <- [251]
  void                    Nop                !     
  val?^ | miss    %254.1 = %251.0
  dr              %254.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB3
BB3   <- [252, 254]
  val?^ | miss    %3.0  = Phi                      %252.1:BB252, %254.1:BB254
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %252.2:BB252, %254.2:BB254
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  env             e3.5  = (MkEnv)            l     gparname="fontsize", parent=e0.1, context 1
  fs              %3.6  = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e3.5, next=%3.4
  void                    Deopt              !v    %3.6, %3.3, %3.1   !
BB255   <- [253]
  val?-           %255.0 = CastType           d     dn %253.2   <nil->
  val+            %255.1 = CallSafeBuiltin    wed   match("fontsize", %255.0, NA, nil)    <int$->
  lgl$#-          %255.2 = IsType                   %255.1 isA int$-
  void                    Branch                   %255.2 -> BB257 (if true) | BB258 (if false)
BB256   <- [253]
  fs              %256.0 = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  prom-           %256.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p33, e253.0
  val?^           %256.2 = CastType                 up %256.1
  prom-           %256.3 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p32, e253.0
  val?^           %256.4 = CastType                 up %256.3
  fs              %256.5 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e253.0, next=%256.0
  env             e256.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%256.2, x=%256.4, parent=R_BaseNamespace, context 0
  fs              %256.7 = FrameState         R     0x55eeec291d40+23: ["fontsize"], env=e256.6, next=%256.5
  fs              %256.8 = FrameState         R     0x55eeee0f3040+32(pr): [%253.2], env=e253.0, next=%256.7
  void                    Deopt              !v    %256.8, Typecheck@0x55eeec2e4cb0[Type#1], %253.2   !
BB257   <- [255]
  int$-           %257.0 = CastType           d     dn %255.1
  lgl$-           %257.1 = CallSafeBuiltin    wed   is.na(%257.0)    <lgl$->
  lgl$-           %257.2 = Not                d     %257.1, elided
  lgl$#-          %257.3 = CheckTrueFalse     e     %257.2
  void                    Branch                   %257.3 -> BB240 (if true) | BB9 (if false)
BB258   <- [255]
  fs              %258.0 = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  prom-           %258.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p32, e253.0
  val?^           %258.2 = CastType                 up %258.1
  prom-           %258.3 = MkArg                    %255.0, validGP[0x55eeeea36900]_p33 (!refl), e253.0
  val?~           %258.4 = CastType                 up %258.3
  fs              %258.5 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e253.0, next=%258.0
  env             e258.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%258.4, x=%258.2, parent=R_BaseNamespace, context 0
  fs              %258.7 = FrameState         R     0x55eeec291d40+69: [%255.1], env=e258.6, next=%258.5
  void                    Deopt              !v    %258.7, Typecheck@0x55eeee44c3c8[Type#7], %255.1   !
BB240   <- [257]
  val?^ | miss    %240.0 = LdVar              eR    gpars, e253.0
  val?            %240.1 = Force!             !v    %240.0, e253.0   <val?_>
  lgl$#-          %240.2 = IsType                   %240.1 isA val+   <@?>
  void                    Branch                   %240.2 -> BB247 (if true) | BB241 (if false)
BB9   <- [257]
  void                    Nop                !     
  goto BB10
BB247   <- [240]
  val?^ | miss    %247.0 = LdVar              eR    gparname, e253.0
  val?            %247.1 = Force!             !v    %247.0, e253.0   <val?_>
  val?            %247.2 = %247.1
  goto BB242
BB241   <- [240]
  prom-           %241.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p35, e253.0
  prom-           %241.1 = %241.0
  goto BB242
BB10   <- [9, 263]
  val?            %10.0 = PopContext         C     nil, %0.8
  val?^ | miss    %10.1 = LdVar              eR    checkNA, e0.1
  lgl$#-          %10.2 = Identical                %10.1, %0.4
  void                    Branch                   %10.2 -> BB259 (if true) | BB260 (if false)
BB242   <- [241, 247]
  val?            %242.0 = Phi                      %247.2:BB247, %241.1:BB241
  val?            %242.1 = %242.0
  val?            %242.2 = Extract2_1D        !v    %240.1, %242.1, e253.0   <val?_>
  lgl$-           %242.3 = Is                       %242.2, NULL
  lgl$#-          %242.4 = CheckTrueFalse     e     %242.3
  void                    Branch                   %242.4 -> BB244 (if true) | BB243 (if false)
BB259   <- [10]
  val?            %259.0 = StaticCall         !v    checkNA[0x55eeeed630a0]("fontsize") from %0.4 e0.1
  val?^ | miss    %259.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %259.2 = Identical                %259.1, %0.3
  void                    Branch                   %259.2 -> BB265 (if true) | BB266 (if false)
BB260   <- [10]
  fs              %260.0 = FrameState         R     0x55eeedf72df0+107: [%10.0], env=e0.1
  void                    Deopt              !v    %260.0, CallTarget@0x55eeee44c058[Call#1], %10.1   !
BB244   <- [242]
  val?^ | miss    %244.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %244.1 = LdVar              eR    gparname, e253.0
  val?            %244.2 = Force!             !v    %244.1, e253.0   <val?_>
  val?            %244.3 = Force!             !v    %244.0, e253.0
  lgl$#-          %244.4 = IsType                   %244.3 isA val?+
  lgl$#-          %244.5 = IsType                   %244.2 isA val?+
  void                    Branch                   %244.4 -> BB261 (if true) | BB262 (if false)
BB243   <- [242]
  fs              %243.0 = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  (cls|spec|blt)  %243.1 = LdFun              !v    check.length, e253.0
  fs              %243.2 = FrameState         R     0x55eeee790590+224: [%243.1], env=e253.0, next=%243.0
  void                    Deopt              !v    %243.2, DeadCall@0x55eeee44c3c8[Call#5], %243.1   !
BB265   <- [259]
  ct              %265.0 = PushContext        lCL   "lineheight", numnotnull("lineheight"), %0.3, e0.1
  val?^ | miss    %265.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %265.2 = Identical                <blt is.na>, %265.1   <true>
  void                    Branch                   %265.2 -> BB267 (if true) | BB268 (if false)
BB266   <- [259]
  void                    Nop                !     
  val?^ | miss    %266.1 = %259.1
  dr              %266.2 = CallTarget@0x55eeee44c058[Call#2]
  goto BB13
BB261   <- [244]
  val?+           %261.0 = CastType           d     dn %244.3
  void                    Branch                   %244.5 -> BB263 (if true) | BB264 (if false)
BB262   <- [244]
  void                    Nop                !     
  val?            %262.1 = %244.3
  dr              %262.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB245
BB267   <- [265]
  env             e267.0 = MkEnv              l     gparname="lineheight", parent=e0.1, context 1
  val?^ | miss    %267.1 = LdVar              eR    match, e267.0
  lgl$#-          %267.2 = Identical                %267.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %267.2 -> BB269 (if true) | BB270 (if false)
BB268   <- [265]
  void                    DropContext        C     
  lgl$#-          %268.1 = %265.2
  dr              %268.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB13
BB13   <- [266, 268]
  val?^ | miss    %13.0 = Phi                      %266.1:BB266, %268.1:BB268
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %266.2:BB266, %268.2:BB268
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55eeedf72df0+140: [%259.0], env=e0.1
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB263   <- [261]
  val?+           %263.0 = CastType           d     dn %244.2   <val?_>
  val?+           %263.1 = Subassign2_1D      wed   nil, %261.0, %263.0, elided
  void                    StVarSuper         lRW   gpars, %263.1, e253.0
  goto BB10
BB264   <- [261]
  void                    Nop                !     
  val?            %264.1 = %244.2
  dr              %264.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB245
BB245   <- [262, 264]
  val?^ | miss    %245.0 = Phi                      %262.1:BB262, %264.1:BB264
  val?^ | miss    %245.1 = %245.0
  dr              %245.2 = Phi                      %262.2:BB262, %264.2:BB264
  dr              %245.3 = %245.2
  fs              %245.4 = FrameState         R     0x55eeedf72df0+107: [], env=e0.1
  fs              %245.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %244.3, %244.2], env=e253.0, next=%245.4
  void                    Deopt              !v    %245.5, %245.3, %245.1   !
BB269   <- [267]
  val?^ | miss    %269.0 = LdVar              eR    names, e0.1
  lgl$#-          %269.1 = Identical                %269.0, <blt names>
  void                    Branch                   %269.1 -> BB271 (if true) | BB272 (if false)
BB270   <- [267]
  void                    Nop                !     
  val?^ | miss    %270.1 = %267.1
  dr              %270.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB15
BB271   <- [269]
  val?^ | miss    %271.0 = LdVar              eR    gpars, e267.0
  val?            %271.1 = Force!<lazy>       !v    %271.0, e267.0   <vec->
  val?            %271.2 = CallBuiltin        !v    names(%271.1) e267.0   <nil->
  lgl$#-          %271.3 = IsType                   %271.2 isA val?-
  void                    Branch                   %271.3 -> BB273 (if true) | BB274 (if false)
BB272   <- [269]
  void                    Nop                !     
  val?^ | miss    %272.1 = %269.0
  dr              %272.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB15
BB15   <- [270, 272]
  val?^ | miss    %15.0 = Phi                      %270.1:BB270, %272.1:BB272
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %270.2:BB270, %272.2:BB272
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  env             e15.5 = (MkEnv)            l     gparname="lineheight", parent=e0.1, context 1
  fs              %15.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e15.5, next=%15.4
  void                    Deopt              !v    %15.6, %15.3, %15.1   !
BB273   <- [271]
  val?-           %273.0 = CastType           d     dn %271.2   <nil->
  val+            %273.1 = CallSafeBuiltin    wed   match("lineheight", %273.0, NA, nil)    <int$->
  lgl$#-          %273.2 = IsType                   %273.1 isA int$-
  void                    Branch                   %273.2 -> BB275 (if true) | BB276 (if false)
BB274   <- [271]
  fs              %274.0 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  fs              %274.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e267.0, next=%274.0
  prom-           %274.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p37, e267.0
  val?^           %274.3 = CastType                 up %274.2
  prom-           %274.4 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p36, e267.0
  val?^           %274.5 = CastType                 up %274.4
  env             e274.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%274.3, x=%274.5, parent=R_BaseNamespace, context 0
  fs              %274.7 = FrameState         R     0x55eeec291d40+23: ["lineheight"], env=e274.6, next=%274.1
  fs              %274.8 = FrameState         R     0x55eeee0f3040+32(pr): [%271.2], env=e267.0, next=%274.7
  void                    Deopt              !v    %274.8, Typecheck@0x55eeec2e4cb0[Type#1], %271.2   !
BB275   <- [273]
  int$-           %275.0 = CastType           d     dn %273.1
  lgl$-           %275.1 = CallSafeBuiltin    wed   is.na(%275.0)    <lgl$->
  lgl$-           %275.2 = Not                d     %275.1, elided
  lgl$#-          %275.3 = CheckTrueFalse     e     %275.2
  void                    Branch                   %275.3 -> BB232 (if true) | BB21 (if false)
BB276   <- [273]
  fs              %276.0 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  prom-           %276.1 = MkArg                    %273.0, validGP[0x55eeeea36900]_p37 (!refl), e267.0
  val?~           %276.2 = CastType                 up %276.1
  fs              %276.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e267.0, next=%276.0
  prom-           %276.4 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p36, e267.0
  val?^           %276.5 = CastType                 up %276.4
  env             e276.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%276.2, x=%276.5, parent=R_BaseNamespace, context 0
  fs              %276.7 = FrameState         R     0x55eeec291d40+69: [%273.1], env=e276.6, next=%276.3
  void                    Deopt              !v    %276.7, Typecheck@0x55eeee44c3c8[Type#7], %273.1   !
BB232   <- [275]
  val?^ | miss    %232.0 = LdVar              eR    gpars, e267.0
  val?            %232.1 = Force!             !v    %232.0, e267.0   <val?_>
  lgl$#-          %232.2 = IsType                   %232.1 isA val+   <@?>
  void                    Branch                   %232.2 -> BB239 (if true) | BB233 (if false)
BB21   <- [275]
  void                    Nop                !     
  goto BB22
BB239   <- [232]
  val?^ | miss    %239.0 = LdVar              eR    gparname, e267.0
  val?            %239.1 = Force!             !v    %239.0, e267.0   <val?_>
  val?            %239.2 = %239.1
  goto BB234
BB233   <- [232]
  prom-           %233.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p39, e267.0
  prom-           %233.1 = %233.0
  goto BB234
BB22   <- [21, 283]
  val?            %22.0 = PopContext         C     nil, %265.0
  val?^ | miss    %22.1 = LdVar              eR    checkNA, e0.1
  lgl$#-          %22.2 = Identical                %22.1, %0.4
  void                    Branch                   %22.2 -> BB277 (if true) | BB278 (if false)
BB234   <- [233, 239]
  val?            %234.0 = Phi                      %239.2:BB239, %233.1:BB233
  val?            %234.1 = %234.0
  val?            %234.2 = Extract2_1D        !v    %232.1, %234.1, e267.0   <val?_>
  lgl$-           %234.3 = Is                       %234.2, NULL
  lgl$#-          %234.4 = CheckTrueFalse     e     %234.3
  void                    Branch                   %234.4 -> BB236 (if true) | BB235 (if false)
BB277   <- [22]
  val?            %277.0 = StaticCall         !v    checkNA[0x55eeeed630a0]("lineheight") from %0.4 e0.1
  val?^ | miss    %277.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %277.2 = Identical                %277.1, %0.3
  void                    Branch                   %277.2 -> BB279 (if true) | BB280 (if false)
BB278   <- [22]
  fs              %278.0 = FrameState         R     0x55eeedf72df0+173: [%22.0], env=e0.1
  void                    Deopt              !v    %278.0, CallTarget@0x55eeee44c058[Call#3], %22.1   !
BB236   <- [234]
  val?^ | miss    %236.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %236.1 = LdVar              eR    gparname, e267.0
  val?            %236.2 = Force!             !v    %236.1, e267.0   <val?_>
  val?            %236.3 = Force!             !v    %236.0, e267.0
  lgl$#-          %236.4 = IsType                   %236.3 isA val?+
  lgl$#-          %236.5 = IsType                   %236.2 isA val?+
  void                    Branch                   %236.4 -> BB281 (if true) | BB282 (if false)
BB235   <- [234]
  fs              %235.0 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  (cls|spec|blt)  %235.1 = LdFun              !v    check.length, e267.0
  fs              %235.2 = FrameState         R     0x55eeee790590+224: [%235.1], env=e267.0, next=%235.0
  void                    Deopt              !v    %235.2, DeadCall@0x55eeee44c3c8[Call#5], %235.1   !
BB279   <- [277]
  ct              %279.0 = PushContext        lCL   "cex", numnotnull("cex"), %0.3, e0.1
  val?^ | miss    %279.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %279.2 = Identical                <blt is.na>, %279.1   <true>
  void                    Branch                   %279.2 -> BB285 (if true) | BB286 (if false)
BB280   <- [277]
  void                    Nop                !     
  val?^ | miss    %280.1 = %277.1
  dr              %280.2 = CallTarget@0x55eeee44c058[Call#4]
  goto BB25
BB281   <- [236]
  val?+           %281.0 = CastType           d     dn %236.3
  void                    Branch                   %236.5 -> BB283 (if true) | BB284 (if false)
BB282   <- [236]
  void                    Nop                !     
  val?            %282.1 = %236.3
  dr              %282.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB237
BB285   <- [279]
  env             e285.0 = MkEnv              l     gparname="cex", parent=e0.1, context 1
  val?^ | miss    %285.1 = LdVar              eR    match, e285.0
  lgl$#-          %285.2 = Identical                %285.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %285.2 -> BB287 (if true) | BB288 (if false)
BB286   <- [279]
  void                    DropContext        C     
  lgl$#-          %286.1 = %279.2
  dr              %286.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB25
BB25   <- [280, 286]
  val?^ | miss    %25.0 = Phi                      %280.1:BB280, %286.1:BB286
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %280.2:BB280, %286.2:BB286
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55eeedf72df0+206: [%277.0], env=e0.1
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB283   <- [281]
  val?+           %283.0 = CastType           d     dn %236.2   <val?_>
  val?+           %283.1 = Subassign2_1D      wed   nil, %281.0, %283.0, elided
  void                    StVarSuper         lRW   gpars, %283.1, e267.0
  goto BB22
BB284   <- [281]
  void                    Nop                !     
  val?            %284.1 = %236.2
  dr              %284.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB237
BB237   <- [282, 284]
  val?^ | miss    %237.0 = Phi                      %282.1:BB282, %284.1:BB284
  val?^ | miss    %237.1 = %237.0
  dr              %237.2 = Phi                      %282.2:BB282, %284.2:BB284
  dr              %237.3 = %237.2
  fs              %237.4 = FrameState         R     0x55eeedf72df0+173: [], env=e0.1
  fs              %237.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %236.3, %236.2], env=e267.0, next=%237.4
  void                    Deopt              !v    %237.5, %237.3, %237.1   !
BB287   <- [285]
  val?^ | miss    %287.0 = LdVar              eR    names, e0.1
  lgl$#-          %287.1 = Identical                %287.0, <blt names>
  void                    Branch                   %287.1 -> BB289 (if true) | BB290 (if false)
BB288   <- [285]
  void                    Nop                !     
  val?^ | miss    %288.1 = %285.1
  dr              %288.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB27
BB289   <- [287]
  val?^ | miss    %289.0 = LdVar              eR    gpars, e285.0
  val?            %289.1 = Force!<lazy>       !v    %289.0, e285.0   <vec->
  val?            %289.2 = CallBuiltin        !v    names(%289.1) e285.0   <nil->
  lgl$#-          %289.3 = IsType                   %289.2 isA val?-
  void                    Branch                   %289.3 -> BB291 (if true) | BB292 (if false)
BB290   <- [287]
  void                    Nop                !     
  val?^ | miss    %290.1 = %287.0
  dr              %290.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB27
BB27   <- [288, 290]
  val?^ | miss    %27.0 = Phi                      %288.1:BB288, %290.1:BB290
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %288.2:BB288, %290.2:BB290
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  env             e27.5 = (MkEnv)            l     gparname="cex", parent=e0.1, context 1
  fs              %27.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e27.5, next=%27.4
  void                    Deopt              !v    %27.6, %27.3, %27.1   !
BB291   <- [289]
  val?-           %291.0 = CastType           d     dn %289.2   <nil->
  val+            %291.1 = CallSafeBuiltin    wed   match("cex", %291.0, NA, nil)    <int$->
  lgl$#-          %291.2 = IsType                   %291.1 isA int$-
  void                    Branch                   %291.2 -> BB293 (if true) | BB294 (if false)
BB292   <- [289]
  fs              %292.0 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  fs              %292.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e285.0, next=%292.0
  prom-           %292.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p41, e285.0
  val?^           %292.3 = CastType                 up %292.2
  prom-           %292.4 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p40, e285.0
  val?^           %292.5 = CastType                 up %292.4
  env             e292.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%292.3, x=%292.5, parent=R_BaseNamespace, context 0
  fs              %292.7 = FrameState         R     0x55eeec291d40+23: ["cex"], env=e292.6, next=%292.1
  fs              %292.8 = FrameState         R     0x55eeee0f3040+32(pr): [%289.2], env=e285.0, next=%292.7
  void                    Deopt              !v    %292.8, Typecheck@0x55eeec2e4cb0[Type#1], %289.2   !
BB293   <- [291]
  int$-           %293.0 = CastType           d     dn %291.1
  lgl$-           %293.1 = CallSafeBuiltin    wed   is.na(%293.0)    <lgl$->
  lgl$-           %293.2 = Not                d     %293.1, elided
  lgl$#-          %293.3 = CheckTrueFalse     e     %293.2
  void                    Branch                   %293.3 -> BB224 (if true) | BB33 (if false)
BB294   <- [291]
  fs              %294.0 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  fs              %294.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e285.0, next=%294.0
  prom-           %294.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p40, e285.0
  val?^           %294.3 = CastType                 up %294.2
  prom-           %294.4 = MkArg                    %291.0, validGP[0x55eeeea36900]_p41 (!refl), e285.0
  val?~           %294.5 = CastType                 up %294.4
  env             e294.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%294.5, x=%294.3, parent=R_BaseNamespace, context 0
  fs              %294.7 = FrameState         R     0x55eeec291d40+69: [%291.1], env=e294.6, next=%294.1
  void                    Deopt              !v    %294.7, Typecheck@0x55eeee44c3c8[Type#7], %291.1   !
BB224   <- [293]
  val?^ | miss    %224.0 = LdVar              eR    gpars, e285.0
  val?            %224.1 = Force!             !v    %224.0, e285.0   <val?_>
  lgl$#-          %224.2 = IsType                   %224.1 isA val+   <@?>
  void                    Branch                   %224.2 -> BB231 (if true) | BB225 (if false)
BB33   <- [293]
  void                    Nop                !     
  goto BB34
BB231   <- [224]
  val?^ | miss    %231.0 = LdVar              eR    gparname, e285.0
  val?            %231.1 = Force!             !v    %231.0, e285.0   <val?_>
  val?            %231.2 = %231.1
  goto BB226
BB225   <- [224]
  prom-           %225.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p43, e285.0
  prom-           %225.1 = %225.0
  goto BB226
BB34   <- [33, 303]
  val?            %34.0 = PopContext         C     nil, %279.0
  val?^ | miss    %34.1 = LdVar              eR    checkNA, e0.1
  lgl$#-          %34.2 = Identical                %34.1, %0.4
  void                    Branch                   %34.2 -> BB295 (if true) | BB296 (if false)
BB226   <- [225, 231]
  val?            %226.0 = Phi                      %231.2:BB231, %225.1:BB225
  val?            %226.1 = %226.0
  val?            %226.2 = Extract2_1D        !v    %224.1, %226.1, e285.0   <val?_>
  lgl$-           %226.3 = Is                       %226.2, NULL
  lgl$#-          %226.4 = CheckTrueFalse     e     %226.3
  void                    Branch                   %226.4 -> BB228 (if true) | BB227 (if false)
BB295   <- [34]
  val?            %295.0 = StaticCall         !v    checkNA[0x55eeeed630a0]("cex") from %0.4 e0.1
  val?^ | miss    %295.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %295.2 = Identical                %295.1, %0.3
  void                    Branch                   %295.2 -> BB299 (if true) | BB300 (if false)
BB296   <- [34]
  fs              %296.0 = FrameState         R     0x55eeedf72df0+239: [%34.0], env=e0.1
  void                    Deopt              !v    %296.0, CallTarget@0x55eeee44c058[Call#5], %34.1   !
BB228   <- [226]
  val?^ | miss    %228.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %228.1 = LdVar              eR    gparname, e285.0
  val?            %228.2 = Force!             !v    %228.1, e285.0   <val?_>
  val?            %228.3 = Force!             !v    %228.0, e285.0
  lgl$#-          %228.4 = IsType                   %228.3 isA val?+
  lgl$#-          %228.5 = IsType                   %228.2 isA val?+
  void                    Branch                   %228.4 -> BB297 (if true) | BB298 (if false)
BB227   <- [226]
  fs              %227.0 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  (cls|spec|blt)  %227.1 = LdFun              !v    check.length, e285.0
  fs              %227.2 = FrameState         R     0x55eeee790590+224: [%227.1], env=e285.0, next=%227.0
  void                    Deopt              !v    %227.2, DeadCall@0x55eeee44c3c8[Call#5], %227.1   !
BB299   <- [295]
  ct              %299.0 = PushContext        lCL   "lwd", numnotnull("lwd"), %0.3, e0.1
  val?^ | miss    %299.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %299.2 = Identical                <blt is.na>, %299.1   <true>
  void                    Branch                   %299.2 -> BB301 (if true) | BB302 (if false)
BB300   <- [295]
  void                    Nop                !     
  val?^ | miss    %300.1 = %295.1
  dr              %300.2 = CallTarget@0x55eeee44c058[Call#6]
  goto BB37
BB297   <- [228]
  val?+           %297.0 = CastType           d     dn %228.3
  void                    Branch                   %228.5 -> BB303 (if true) | BB304 (if false)
BB298   <- [228]
  void                    Nop                !     
  val?            %298.1 = %228.3
  dr              %298.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB229
BB301   <- [299]
  env             e301.0 = MkEnv              l     gparname="lwd", parent=e0.1, context 1
  val?^ | miss    %301.1 = LdVar              eR    match, e301.0
  lgl$#-          %301.2 = Identical                %301.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %301.2 -> BB305 (if true) | BB306 (if false)
BB302   <- [299]
  void                    DropContext        C     
  lgl$#-          %302.1 = %299.2
  dr              %302.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB37
BB37   <- [300, 302]
  val?^ | miss    %37.0 = Phi                      %300.1:BB300, %302.1:BB302
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %300.2:BB300, %302.2:BB302
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x55eeedf72df0+272: [%295.0], env=e0.1
  void                    Deopt              !v    %37.4, %37.3, %37.1   !
BB303   <- [297]
  val?+           %303.0 = CastType           d     dn %228.2   <val?_>
  val?+           %303.1 = Subassign2_1D      wed   nil, %297.0, %303.0, elided
  void                    StVarSuper         lRW   gpars, %303.1, e285.0
  goto BB34
BB304   <- [297]
  void                    Nop                !     
  val?            %304.1 = %228.2
  dr              %304.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB229
BB229   <- [298, 304]
  val?^ | miss    %229.0 = Phi                      %298.1:BB298, %304.1:BB304
  val?^ | miss    %229.1 = %229.0
  dr              %229.2 = Phi                      %298.2:BB298, %304.2:BB304
  dr              %229.3 = %229.2
  fs              %229.4 = FrameState         R     0x55eeedf72df0+239: [], env=e0.1
  fs              %229.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %228.3, %228.2], env=e285.0, next=%229.4
  void                    Deopt              !v    %229.5, %229.3, %229.1   !
BB305   <- [301]
  val?^ | miss    %305.0 = LdVar              eR    names, e0.1
  lgl$#-          %305.1 = Identical                %305.0, <blt names>
  void                    Branch                   %305.1 -> BB307 (if true) | BB308 (if false)
BB306   <- [301]
  void                    Nop                !     
  val?^ | miss    %306.1 = %301.1
  dr              %306.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB39
BB307   <- [305]
  val?^ | miss    %307.0 = LdVar              eR    gpars, e301.0
  val?            %307.1 = Force!<lazy>       !v    %307.0, e301.0   <vec->
  val?            %307.2 = CallBuiltin        !v    names(%307.1) e301.0   <nil->
  lgl$#-          %307.3 = IsType                   %307.2 isA val?-
  void                    Branch                   %307.3 -> BB309 (if true) | BB310 (if false)
BB308   <- [305]
  void                    Nop                !     
  val?^ | miss    %308.1 = %305.0
  dr              %308.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB39
BB39   <- [306, 308]
  val?^ | miss    %39.0 = Phi                      %306.1:BB306, %308.1:BB308
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %306.2:BB306, %308.2:BB308
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  env             e39.5 = (MkEnv)            l     gparname="lwd", parent=e0.1, context 1
  fs              %39.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e39.5, next=%39.4
  void                    Deopt              !v    %39.6, %39.3, %39.1   !
BB309   <- [307]
  val?-           %309.0 = CastType           d     dn %307.2   <nil->
  val+            %309.1 = CallSafeBuiltin    wed   match("lwd", %309.0, NA, nil)    <int$->
  lgl$#-          %309.2 = IsType                   %309.1 isA int$-
  void                    Branch                   %309.2 -> BB311 (if true) | BB312 (if false)
BB310   <- [307]
  fs              %310.0 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  fs              %310.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e301.0, next=%310.0
  prom-           %310.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p45, e301.0
  val?^           %310.3 = CastType                 up %310.2
  prom-           %310.4 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p44, e301.0
  val?^           %310.5 = CastType                 up %310.4
  env             e310.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%310.3, x=%310.5, parent=R_BaseNamespace, context 0
  fs              %310.7 = FrameState         R     0x55eeec291d40+23: ["lwd"], env=e310.6, next=%310.1
  fs              %310.8 = FrameState         R     0x55eeee0f3040+32(pr): [%307.2], env=e301.0, next=%310.7
  void                    Deopt              !v    %310.8, Typecheck@0x55eeec2e4cb0[Type#1], %307.2   !
BB311   <- [309]
  int$-           %311.0 = CastType           d     dn %309.1
  lgl$-           %311.1 = CallSafeBuiltin    wed   is.na(%311.0)    <lgl$->
  lgl$-           %311.2 = Not                d     %311.1, elided
  lgl$#-          %311.3 = CheckTrueFalse     e     %311.2
  void                    Branch                   %311.3 -> BB216 (if true) | BB45 (if false)
BB312   <- [309]
  fs              %312.0 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  fs              %312.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e301.0, next=%312.0
  prom-           %312.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p44, e301.0
  val?^           %312.3 = CastType                 up %312.2
  prom-           %312.4 = MkArg                    %309.0, validGP[0x55eeeea36900]_p45 (!refl), e301.0
  val?~           %312.5 = CastType                 up %312.4
  env             e312.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%312.5, x=%312.3, parent=R_BaseNamespace, context 0
  fs              %312.7 = FrameState         R     0x55eeec291d40+69: [%309.1], env=e312.6, next=%312.1
  void                    Deopt              !v    %312.7, Typecheck@0x55eeee44c3c8[Type#7], %309.1   !
BB216   <- [311]
  val?^ | miss    %216.0 = LdVar              eR    gpars, e301.0
  val?            %216.1 = Force!             !v    %216.0, e301.0   <val?_>
  lgl$#-          %216.2 = IsType                   %216.1 isA val+   <@?>
  void                    Branch                   %216.2 -> BB223 (if true) | BB217 (if false)
BB45   <- [311]
  void                    Nop                !     
  goto BB46
BB223   <- [216]
  val?^ | miss    %223.0 = LdVar              eR    gparname, e301.0
  val?            %223.1 = Force!             !v    %223.0, e301.0   <val?_>
  val?            %223.2 = %223.1
  goto BB218
BB217   <- [216]
  prom-           %217.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p47, e301.0
  prom-           %217.1 = %217.0
  goto BB218
BB46   <- [45, 327]
  val?            %46.0 = PopContext         C     nil, %299.0
  val?^ | miss    %46.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %46.2 = Identical                %46.1, %0.3
  void                    Branch                   %46.2 -> BB313 (if true) | BB314 (if false)
BB218   <- [217, 223]
  val?            %218.0 = Phi                      %223.2:BB223, %217.1:BB217
  val?            %218.1 = %218.0
  val?            %218.2 = Extract2_1D        !v    %216.1, %218.1, e301.0   <val?_>
  lgl$-           %218.3 = Is                       %218.2, NULL
  lgl$#-          %218.4 = CheckTrueFalse     e     %218.3
  void                    Branch                   %218.4 -> BB220 (if true) | BB219 (if false)
BB313   <- [46]
  ct              %313.0 = PushContext        lCL   "lex", numnotnull("lex"), %0.3, e0.1
  val?^ | miss    %313.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %313.2 = Identical                <blt is.na>, %313.1   <true>
  void                    Branch                   %313.2 -> BB315 (if true) | BB316 (if false)
BB314   <- [46]
  void                    Nop                !     
  val?^ | miss    %314.1 = %46.1
  dr              %314.2 = CallTarget@0x55eeee44c058[Call#7]
  goto BB47
BB220   <- [218]
  val?^ | miss    %220.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %220.1 = LdVar              eR    gparname, e301.0
  val?            %220.2 = Force!             !v    %220.1, e301.0   <val?_>
  val?            %220.3 = Force!             !v    %220.0, e301.0
  lgl$#-          %220.4 = IsType                   %220.3 isA val?+
  lgl$#-          %220.5 = IsType                   %220.2 isA val?+
  void                    Branch                   %220.4 -> BB323 (if true) | BB324 (if false)
BB219   <- [218]
  fs              %219.0 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  (cls|spec|blt)  %219.1 = LdFun              !v    check.length, e301.0
  fs              %219.2 = FrameState         R     0x55eeee790590+224: [%219.1], env=e301.0, next=%219.0
  void                    Deopt              !v    %219.2, DeadCall@0x55eeee44c3c8[Call#5], %219.1   !
BB315   <- [313]
  env             e315.0 = MkEnv              l     gparname="lex", parent=e0.1, context 1
  val?^ | miss    %315.1 = LdVar              eR    match, e315.0
  lgl$#-          %315.2 = Identical                %315.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %315.2 -> BB317 (if true) | BB318 (if false)
BB316   <- [313]
  void                    DropContext        C     
  lgl$#-          %316.1 = %313.2
  dr              %316.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB47
BB47   <- [314, 316]
  val?^ | miss    %47.0 = Phi                      %314.1:BB314, %316.1:BB316
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %314.2:BB314, %316.2:BB316
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x55eeedf72df0+305: [%46.0], env=e0.1
  void                    Deopt              !v    %47.4, %47.3, %47.1   !
BB323   <- [220]
  val?+           %323.0 = CastType           d     dn %220.3
  void                    Branch                   %220.5 -> BB327 (if true) | BB328 (if false)
BB324   <- [220]
  void                    Nop                !     
  val?            %324.1 = %220.3
  dr              %324.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB221
BB317   <- [315]
  val?^ | miss    %317.0 = LdVar              eR    names, e0.1
  lgl$#-          %317.1 = Identical                %317.0, <blt names>
  void                    Branch                   %317.1 -> BB319 (if true) | BB320 (if false)
BB318   <- [315]
  void                    Nop                !     
  val?^ | miss    %318.1 = %315.1
  dr              %318.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB49
BB327   <- [323]
  val?+           %327.0 = CastType           d     dn %220.2   <val?_>
  val?+           %327.1 = Subassign2_1D      wed   nil, %323.0, %327.0, elided
  void                    StVarSuper         lRW   gpars, %327.1, e301.0
  goto BB46
BB328   <- [323]
  void                    Nop                !     
  val?            %328.1 = %220.2
  dr              %328.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB221
BB221   <- [324, 328]
  val?^ | miss    %221.0 = Phi                      %324.1:BB324, %328.1:BB328
  val?^ | miss    %221.1 = %221.0
  dr              %221.2 = Phi                      %324.2:BB324, %328.2:BB328
  dr              %221.3 = %221.2
  fs              %221.4 = FrameState         R     0x55eeedf72df0+305: [], env=e0.1
  fs              %221.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %220.3, %220.2], env=e301.0, next=%221.4
  void                    Deopt              !v    %221.5, %221.3, %221.1   !
BB319   <- [317]
  val?^ | miss    %319.0 = LdVar              eR    gpars, e315.0
  val?            %319.1 = Force!<lazy>       !v    %319.0, e315.0   <vec->
  val?            %319.2 = CallBuiltin        !v    names(%319.1) e315.0   <nil->
  lgl$#-          %319.3 = IsType                   %319.2 isA val?-
  void                    Branch                   %319.3 -> BB321 (if true) | BB322 (if false)
BB320   <- [317]
  void                    Nop                !     
  val?^ | miss    %320.1 = %317.0
  dr              %320.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB49
BB49   <- [318, 320]
  val?^ | miss    %49.0 = Phi                      %318.1:BB318, %320.1:BB320
  val?^ | miss    %49.1 = %49.0
  dr              %49.2 = Phi                      %318.2:BB318, %320.2:BB320
  dr              %49.3 = %49.2
  fs              %49.4 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  env             e49.5 = (MkEnv)            l     gparname="lex", parent=e0.1, context 1
  fs              %49.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e49.5, next=%49.4
  void                    Deopt              !v    %49.6, %49.3, %49.1   !
BB321   <- [319]
  val?-           %321.0 = CastType           d     dn %319.2   <nil->
  val+            %321.1 = CallSafeBuiltin    wed   match("lex", %321.0, NA, nil)    <int$->
  lgl$#-          %321.2 = IsType                   %321.1 isA int$-
  void                    Branch                   %321.2 -> BB325 (if true) | BB326 (if false)
BB322   <- [319]
  fs              %322.0 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  fs              %322.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e315.0, next=%322.0
  prom-           %322.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p49, e315.0
  val?^           %322.3 = CastType                 up %322.2
  prom-           %322.4 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p48, e315.0
  val?^           %322.5 = CastType                 up %322.4
  env             e322.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%322.3, x=%322.5, parent=R_BaseNamespace, context 0
  fs              %322.7 = FrameState         R     0x55eeec291d40+23: ["lex"], env=e322.6, next=%322.1
  fs              %322.8 = FrameState         R     0x55eeee0f3040+32(pr): [%319.2], env=e315.0, next=%322.7
  void                    Deopt              !v    %322.8, Typecheck@0x55eeec2e4cb0[Type#1], %319.2   !
BB325   <- [321]
  int$-           %325.0 = CastType           d     dn %321.1
  lgl$-           %325.1 = CallSafeBuiltin    wed   is.na(%325.0)    <lgl$->
  lgl$-           %325.2 = Not                d     %325.1, elided
  lgl$#-          %325.3 = CheckTrueFalse     e     %325.2
  void                    Branch                   %325.3 -> BB208 (if true) | BB55 (if false)
BB326   <- [321]
  fs              %326.0 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  prom-           %326.1 = MkArg                    %321.0, validGP[0x55eeeea36900]_p49 (!refl), e315.0
  val?~           %326.2 = CastType                 up %326.1
  fs              %326.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e315.0, next=%326.0
  prom-           %326.4 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p48, e315.0
  val?^           %326.5 = CastType                 up %326.4
  env             e326.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%326.2, x=%326.5, parent=R_BaseNamespace, context 0
  fs              %326.7 = FrameState         R     0x55eeec291d40+69: [%321.1], env=e326.6, next=%326.3
  void                    Deopt              !v    %326.7, Typecheck@0x55eeee44c3c8[Type#7], %321.1   !
BB208   <- [325]
  val?^ | miss    %208.0 = LdVar              eR    gpars, e315.0
  val?            %208.1 = Force!             !v    %208.0, e315.0   <val?_>
  lgl$#-          %208.2 = IsType                   %208.1 isA val+   <@?>
  void                    Branch                   %208.2 -> BB215 (if true) | BB209 (if false)
BB55   <- [325]
  void                    Nop                !     
  goto BB56
BB215   <- [208]
  val?^ | miss    %215.0 = LdVar              eR    gparname, e315.0
  val?            %215.1 = Force!             !v    %215.0, e315.0   <val?_>
  val?            %215.2 = %215.1
  goto BB210
BB209   <- [208]
  prom-           %209.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p51, e315.0
  prom-           %209.1 = %209.0
  goto BB210
BB56   <- [55, 337]
  val?            %56.0 = PopContext         C     nil, %313.0
  val?^ | miss    %56.1 = LdVar              eR    %in%, e0.1
  lgl$#-          %56.2 = Identical                %56.1, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %56.2 -> BB329 (if true) | BB330 (if false)
BB210   <- [209, 215]
  val?            %210.0 = Phi                      %215.2:BB215, %209.1:BB209
  val?            %210.1 = %210.0
  val?            %210.2 = Extract2_1D        !v    %208.1, %210.1, e315.0   <val?_>
  lgl$-           %210.3 = Is                       %210.2, NULL
  lgl$#-          %210.4 = CheckTrueFalse     e     %210.3
  void                    Branch                   %210.4 -> BB212 (if true) | BB211 (if false)
BB329   <- [56]
  val?^ | miss    %329.0 = LdVar              eR    names, e0.1
  lgl$#-          %329.1 = Identical                %329.0, <blt names>
  void                    Branch                   %329.1 -> BB333 (if true) | BB334 (if false)
BB330   <- [56]
  void                    Nop                !     
  val?^ | miss    %330.1 = %56.1
  dr              %330.2 = CallTarget@0x55eeee44c058[Call#8]
  goto BB57
BB212   <- [210]
  val?^ | miss    %212.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %212.1 = LdVar              eR    gparname, e315.0
  val?            %212.2 = Force!             !v    %212.1, e315.0   <val?_>
  val?            %212.3 = Force!             !v    %212.0, e315.0
  lgl$#-          %212.4 = IsType                   %212.3 isA val?+
  lgl$#-          %212.5 = IsType                   %212.2 isA val?+
  void                    Branch                   %212.4 -> BB331 (if true) | BB332 (if false)
BB211   <- [210]
  fs              %211.0 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  (cls|spec|blt)  %211.1 = LdFun              !v    check.length, e315.0
  fs              %211.2 = FrameState         R     0x55eeee790590+224: [%211.1], env=e315.0, next=%211.0
  void                    Deopt              !v    %211.2, DeadCall@0x55eeee44c3c8[Call#5], %211.1   !
BB333   <- [329]
  val?^ | miss    %333.0 = LdVar              eR    gpars, e0.1
  val?            %333.1 = Force!<wrapped>    !v    %333.0, e0.1   <vec+>
  val?            %333.2 = CallBuiltin        !v    names(%333.1) e0.1   <(nil|str)->
  lgl$#-          %333.3 = IsType                   %333.2 isA val?-
  void                    Branch                   %333.3 -> BB335 (if true) | BB336 (if false)
BB334   <- [329]
  void                    Nop                !     
  val?^ | miss    %334.1 = %329.0
  dr              %334.2 = CallTarget@0x55eeee44c058[Call#9]
  goto BB57
BB57   <- [330, 334]
  val?^ | miss    %57.0 = Phi                      %330.1:BB330, %334.1:BB334
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %330.2:BB330, %334.2:BB334
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x55eeedf72df0+338: [%56.0], env=e0.1
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB331   <- [212]
  val?+           %331.0 = CastType           d     dn %212.3
  void                    Branch                   %212.5 -> BB337 (if true) | BB338 (if false)
BB332   <- [212]
  void                    Nop                !     
  val?            %332.1 = %212.3
  dr              %332.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB213
BB335   <- [333]
  val?-           %335.0 = CastType           d     dn %333.2   <(nil|str)->
  val+            %335.1 = CallSafeBuiltin    wed   match("gamma", %335.0, 0L, nil)    <int->
  lgl$#-          %335.2 = IsType                   %335.1 isA int-
  void                    Branch                   %335.2 -> BB339 (if true) | BB340 (if false)
BB336   <- [333]
  prom-           %336.0 = MkArg                    %333.2, validGP[0x55eeeea36900]_p0 (!refl), e0.1
  val?~           %336.1 = CastType                 up %336.0
  env             e336.2 = MkEnv              l     x="gamma", table=%336.1, parent=R_BaseNamespace, context 0
  prom-           %336.3 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p53 (!refl), e336.2
  val?^           %336.4 = CastType                 up %336.3
  prom-           %336.5 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p52 (!refl), e336.2
  val?^           %336.6 = CastType                 up %336.5
  fs              %336.7 = FrameState         R     0x55eeedf72df0+376: [], env=e0.1
  fs              %336.8 = FrameState         R     0x55eeec0aa320+54: [], env=e336.2, next=%336.7
  env             e336.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%336.4, x=%336.6, parent=R_BaseNamespace, context -1
  fs              %336.10 = FrameState         R     0x55eeec291d40+23: ["gamma"], env=e336.9, next=%336.8
  fs              %336.11 = FrameState         R     0x55eeec0aacb0+5(pr): [%333.2], env=e336.2, next=%336.10
  void                    Deopt              !v    %336.11, Typecheck@0x55eeec2e4cb0[Type#1], %333.2   !
BB337   <- [331]
  val?+           %337.0 = CastType           d     dn %212.2   <val?_>
  val?+           %337.1 = Subassign2_1D      wed   nil, %331.0, %337.0, elided
  void                    StVarSuper         lRW   gpars, %337.1, e315.0
  goto BB56
BB338   <- [331]
  void                    Nop                !     
  val?            %338.1 = %212.2
  dr              %338.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB213
BB213   <- [332, 338]
  val?^ | miss    %213.0 = Phi                      %332.1:BB332, %338.1:BB338
  val?^ | miss    %213.1 = %213.0
  dr              %213.2 = Phi                      %332.2:BB332, %338.2:BB338
  dr              %213.3 = %213.2
  fs              %213.4 = FrameState         R     0x55eeedf72df0+338: [], env=e0.1
  fs              %213.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %212.3, %212.2], env=e315.0, next=%213.4
  void                    Deopt              !v    %213.5, %213.3, %213.1   !
BB339   <- [335]
  int-            %339.0 = CastType           d     dn %335.1
  lgl-            %339.1 = Gt                 wed   %339.0, 0L, elided   <lgl->
  lgl$#-          %339.2 = CheckTrueFalse     we    %339.1
  void                    Branch                   %339.2 -> BB207 (if true) | BB65 (if false)
BB340   <- [335]
  prom-           %340.0 = MkArg                    %335.0, validGP[0x55eeeea36900]_p0 (!refl), e0.1
  val?~           %340.1 = CastType                 up %340.0
  env             e340.2 = MkEnv              l     x="gamma", table=%340.1, parent=R_BaseNamespace, context 0
  prom-           %340.3 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p52 (!refl), e340.2
  val?^           %340.4 = CastType                 up %340.3
  fs              %340.5 = FrameState         R     0x55eeedf72df0+376: [], env=e0.1
  fs              %340.6 = FrameState         R     0x55eeec0aa320+54: [], env=e340.2, next=%340.5
  prom-           %340.7 = MkArg                    %335.0, validGP[0x55eeeea36900]_p53 (!refl), e340.2
  val?~           %340.8 = CastType                 up %340.7
  env             e340.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%340.8, x=%340.4, parent=R_BaseNamespace, context -1
  fs              %340.10 = FrameState         R     0x55eeec291d40+69: [%335.1], env=e340.9, next=%340.6
  void                    Deopt              !v    %340.10, Typecheck@0x55eeed0dc688[Type#2], %335.1   !
BB207   <- [339]
  (cls|spec|blt)  %207.0 = LdFun              !v    warning, e0.1
  fs              %207.1 = FrameState         R     0x55eeedf72df0+397: [%207.0], env=e0.1
  void                    Deopt              !v    %207.1, DeadCall@0x55eeee44c058[Call#10], %207.0   !
BB65   <- [339]
  val?^ | miss    %65.0 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %65.1 = Identical                %65.0, %0.3
  void                    Branch                   %65.1 -> BB341 (if true) | BB342 (if false)
BB341   <- [65]
  ct              %341.0 = PushContext        lCL   "alpha", numnotnull("alpha"), %0.3, e0.1
  val?^ | miss    %341.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %341.2 = Identical                <blt is.na>, %341.1   <true>
  void                    Branch                   %341.2 -> BB343 (if true) | BB344 (if false)
BB342   <- [65]
  void                    Nop                !     
  val?^ | miss    %342.1 = %65.0
  dr              %342.2 = CallTarget@0x55eeee44c058[Call#13]
  goto BB63
BB343   <- [341]
  env             e343.0 = MkEnv              l     gparname="alpha", parent=e0.1, context 1
  val?^ | miss    %343.1 = LdVar              eR    match, e343.0
  lgl$#-          %343.2 = Identical                %343.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %343.2 -> BB345 (if true) | BB346 (if false)
BB344   <- [341]
  void                    DropContext        C     
  lgl$#-          %344.1 = %341.2
  dr              %344.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB63
BB63   <- [342, 344]
  val?^ | miss    %63.0 = Phi                      %342.1:BB342, %344.1:BB344
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %342.2:BB342, %344.2:BB344
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x55eeedf72df0+382: [%339.2], env=e0.1
  void                    Deopt              !v    %63.4, %63.3, %63.1   !
BB345   <- [343]
  val?^ | miss    %345.0 = LdVar              eR    names, e0.1
  lgl$#-          %345.1 = Identical                %345.0, <blt names>
  void                    Branch                   %345.1 -> BB347 (if true) | BB348 (if false)
BB346   <- [343]
  void                    Nop                !     
  val?^ | miss    %346.1 = %343.1
  dr              %346.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB66
BB347   <- [345]
  val?^ | miss    %347.0 = LdVar              eR    gpars, e343.0
  val?            %347.1 = Force!<lazy>       !v    %347.0, e343.0   <vec->
  val?            %347.2 = CallBuiltin        !v    names(%347.1) e343.0   <nil->
  lgl$#-          %347.3 = IsType                   %347.2 isA val?-
  void                    Branch                   %347.3 -> BB349 (if true) | BB350 (if false)
BB348   <- [345]
  void                    Nop                !     
  val?^ | miss    %348.1 = %345.0
  dr              %348.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB66
BB66   <- [346, 348]
  val?^ | miss    %66.0 = Phi                      %346.1:BB346, %348.1:BB348
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %346.2:BB346, %348.2:BB348
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  env             e66.5 = (MkEnv)            l     gparname="alpha", parent=e0.1, context 1
  fs              %66.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e66.5, next=%66.4
  void                    Deopt              !v    %66.6, %66.3, %66.1   !
BB349   <- [347]
  val?-           %349.0 = CastType           d     dn %347.2   <nil->
  val+            %349.1 = CallSafeBuiltin    wed   match("alpha", %349.0, NA, nil)    <int$->
  lgl$#-          %349.2 = IsType                   %349.1 isA int$-
  void                    Branch                   %349.2 -> BB351 (if true) | BB352 (if false)
BB350   <- [347]
  fs              %350.0 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  prom-           %350.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p56, e343.0
  val?^           %350.2 = CastType                 up %350.1
  prom-           %350.3 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p55, e343.0
  val?^           %350.4 = CastType                 up %350.3
  fs              %350.5 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e343.0, next=%350.0
  env             e350.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%350.2, x=%350.4, parent=R_BaseNamespace, context 0
  fs              %350.7 = FrameState         R     0x55eeec291d40+23: ["alpha"], env=e350.6, next=%350.5
  fs              %350.8 = FrameState         R     0x55eeee0f3040+32(pr): [%347.2], env=e343.0, next=%350.7
  void                    Deopt              !v    %350.8, Typecheck@0x55eeec2e4cb0[Type#1], %347.2   !
BB351   <- [349]
  int$-           %351.0 = CastType           d     dn %349.1
  lgl$-           %351.1 = CallSafeBuiltin    wed   is.na(%351.0)    <lgl$->
  lgl$-           %351.2 = Not                d     %351.1, elided
  lgl$#-          %351.3 = CheckTrueFalse     e     %351.2
  void                    Branch                   %351.3 -> BB199 (if true) | BB72 (if false)
BB352   <- [349]
  fs              %352.0 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  prom-           %352.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p55, e343.0
  val?^           %352.2 = CastType                 up %352.1
  fs              %352.3 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e343.0, next=%352.0
  prom-           %352.4 = MkArg                    %349.0, validGP[0x55eeeea36900]_p56 (!refl), e343.0
  val?~           %352.5 = CastType                 up %352.4
  env             e352.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%352.5, x=%352.2, parent=R_BaseNamespace, context 0
  fs              %352.7 = FrameState         R     0x55eeec291d40+69: [%349.1], env=e352.6, next=%352.3
  void                    Deopt              !v    %352.7, Typecheck@0x55eeee44c3c8[Type#7], %349.1   !
BB199   <- [351]
  val?^ | miss    %199.0 = LdVar              eR    gpars, e343.0
  val?            %199.1 = Force!             !v    %199.0, e343.0   <val?_>
  lgl$#-          %199.2 = IsType                   %199.1 isA val+   <@?>
  void                    Branch                   %199.2 -> BB206 (if true) | BB200 (if false)
BB72   <- [351]
  void                    Nop                !     
  goto BB73
BB206   <- [199]
  val?^ | miss    %206.0 = LdVar              eR    gparname, e343.0
  val?            %206.1 = Force!             !v    %206.0, e343.0   <val?_>
  val?            %206.2 = %206.1
  goto BB201
BB200   <- [199]
  prom-           %200.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p58, e343.0
  prom-           %200.1 = %200.0
  goto BB201
BB73   <- [72, 361]
  val?            %73.0 = PopContext         C     nil, %341.0
  val?^ | miss    %73.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %73.2 = Identical                <blt is.na>, %73.1   <true>
  void                    Branch                   %73.2 -> BB353 (if true) | BB354 (if false)
BB201   <- [200, 206]
  val?            %201.0 = Phi                      %206.2:BB206, %200.1:BB200
  val?            %201.1 = %201.0
  val?            %201.2 = Extract2_1D        !v    %199.1, %201.1, e343.0   <val?_>
  lgl$-           %201.3 = Is                       %201.2, NULL
  lgl$#-          %201.4 = CheckTrueFalse     e     %201.3
  void                    Branch                   %201.4 -> BB203 (if true) | BB202 (if false)
BB353   <- [73]
  val?^ | miss    %353.0 = LdVar              eR    match, e0.1
  lgl$#-          %353.1 = Identical                %353.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %353.1 -> BB355 (if true) | BB356 (if false)
BB354   <- [73]
  void                    Nop                !     
  lgl$#-          %354.1 = %73.2
  dr              %354.2 = DeadBranchReached@0x55eeee44c058[Test#0]
  goto BB74
BB203   <- [201]
  val?^ | miss    %203.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %203.1 = LdVar              eR    gparname, e343.0
  val?            %203.2 = Force!             !v    %203.1, e343.0   <val?_>
  val?            %203.3 = Force!             !v    %203.0, e343.0
  lgl$#-          %203.4 = IsType                   %203.3 isA val?+
  lgl$#-          %203.5 = IsType                   %203.2 isA val?+
  void                    Branch                   %203.4 -> BB357 (if true) | BB358 (if false)
BB202   <- [201]
  fs              %202.0 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  (cls|spec|blt)  %202.1 = LdFun              !v    check.length, e343.0
  fs              %202.2 = FrameState         R     0x55eeee790590+224: [%202.1], env=e343.0, next=%202.0
  void                    Deopt              !v    %202.2, DeadCall@0x55eeee44c3c8[Call#5], %202.1   !
BB355   <- [353]
  val?^ | miss    %355.0 = LdVar              eR    names, e0.1
  lgl$#-          %355.1 = Identical                %355.0, <blt names>
  void                    Branch                   %355.1 -> BB359 (if true) | BB360 (if false)
BB356   <- [353]
  void                    Nop                !     
  val?^ | miss    %356.1 = %353.0
  dr              %356.2 = CallTarget@0x55eeee44c058[Call#17]
  goto BB74
BB74   <- [354, 356, 360]
  val?^ | miss    %74.0 = Phi                      %354.1:BB354, %356.1:BB356, %360.1:BB360
  val?^ | miss    %74.1 = %74.0
  dr              %74.2 = Phi                      %354.2:BB354, %356.2:BB356, %360.2:BB360
  dr              %74.3 = %74.2
  fs              %74.4 = FrameState         R     0x55eeedf72df0+495: [%73.0], env=e0.1
  void                    Deopt              !v    %74.4, %74.3, %74.1   !
BB357   <- [203]
  val?+           %357.0 = CastType           d     dn %203.3
  void                    Branch                   %203.5 -> BB361 (if true) | BB362 (if false)
BB358   <- [203]
  void                    Nop                !     
  val?            %358.1 = %203.3
  dr              %358.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB204
BB359   <- [355]
  val?^ | miss    %359.0 = LdVar              eR    gpars, e0.1
  val?            %359.1 = Force!<wrapped>    !v    %359.0, e0.1   <vec+>
  val?            %359.2 = CallBuiltin        !v    names(%359.1) e0.1   <(nil|str)->
  lgl$#-          %359.3 = IsType                   %359.2 isA val?-
  void                    Branch                   %359.3 -> BB363 (if true) | BB364 (if false)
BB360   <- [355]
  void                    Nop                !     
  val?^ | miss    %360.1 = %355.0
  dr              %360.2 = CallTarget@0x55eeee44c058[Call#18]
  goto BB74
BB361   <- [357]
  val?+           %361.0 = CastType           d     dn %203.2   <val?_>
  val?+           %361.1 = Subassign2_1D      wed   nil, %357.0, %361.0, elided
  void                    StVarSuper         lRW   gpars, %361.1, e343.0
  goto BB73
BB362   <- [357]
  void                    Nop                !     
  val?            %362.1 = %203.2
  dr              %362.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB204
BB204   <- [358, 362]
  val?^ | miss    %204.0 = Phi                      %358.1:BB358, %362.1:BB362
  val?^ | miss    %204.1 = %204.0
  dr              %204.2 = Phi                      %358.2:BB358, %362.2:BB362
  dr              %204.3 = %204.2
  fs              %204.4 = FrameState         R     0x55eeedf72df0+495: [], env=e0.1
  fs              %204.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %203.3, %203.2], env=e343.0, next=%204.4
  void                    Deopt              !v    %204.5, %204.3, %204.1   !
BB363   <- [359]
  val?-           %363.0 = CastType           d     dn %359.2   <(nil|str)->
  val+            %363.1 = CallSafeBuiltin    wed   match("col", %363.0, NA, nil)    <int$->
  lgl$#-          %363.2 = IsType                   %363.1 isA int$-
  void                    Branch                   %363.2 -> BB365 (if true) | BB366 (if false)
BB364   <- [359]
  fs              %364.0 = FrameState         R     0x55eeedf72df0+593: [<blt is.na>], env=e0.1
  prom-           %364.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p2, e0.1
  val?^           %364.2 = CastType                 up %364.1
  env             e364.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%364.2, x="col", parent=R_BaseNamespace, context 0
  fs              %364.4 = FrameState         R     0x55eeec291d40+23: ["col"], env=e364.3, next=%364.0
  fs              %364.5 = FrameState         R     0x55eeedbcb970+32(pr): [%359.2], env=e0.1, next=%364.4
  void                    Deopt              !v    %364.5, Typecheck@0x55eeec2e4cb0[Type#1], %359.2   !
BB365   <- [363]
  int$-           %365.0 = CastType           d     dn %363.1
  lgl$-           %365.1 = CallSafeBuiltin    wed   is.na(%365.0)    <lgl$->
  lgl$-           %365.2 = Not                d     %365.1, elided
  lgl$#-          %365.3 = CheckTrueFalse     e     %365.2
  void                    Branch                   %365.3 -> BB194 (if true) | BB80 (if false)
BB366   <- [363]
  prom-           %366.0 = MkArg                    %363.0, validGP[0x55eeeea36900]_p2 (!refl), e0.1
  val?~           %366.1 = CastType                 up %366.0
  fs              %366.2 = FrameState         R     0x55eeedf72df0+593: [<blt is.na>], env=e0.1
  env             e366.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%366.1, x="col", parent=R_BaseNamespace, context 0
  fs              %366.4 = FrameState         R     0x55eeec291d40+69: [%363.1], env=e366.3, next=%366.2
  void                    Deopt              !v    %366.4, Typecheck@0x55eeee44c058[Type#11], %363.1   !
BB194   <- [365]
  (cls|spec|blt)  %194.0 = LdFun              !v    $, <0x55eeeba7cc10>, e0.1
  prom-           %194.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p27, e0.1
  prom-           %194.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p28, e0.1
  val?            %194.3 = Call               !v    %194.0(%194.1, %194.2) e0.1   <(nil|str)->
  lgl$-           %194.4 = Is                       %194.3, NULL
  lgl$#-          %194.5 = CheckTrueFalse     e     %194.4
  void                    Branch                   %194.5 -> BB198 (if true) | BB197 (if false)
BB80   <- [365]
  void                    Nop                !     
  goto BB81
BB198   <- [194]
  (cls|spec|blt)  %198.0 = LdFun              !v    <-, <0x55eeeba71da8>, e0.1
  prom-           %198.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p29, e0.1
  val?            %198.2 = Call               !v    %198.0(%198.1, nil) e0.1
  goto BB81
BB197   <- [194]
  val?^ | miss    %197.0 = LdVar              eR    check.length, e0.1
  lgl$#-          %197.1 = Identical                %197.0, %0.2
  void                    Branch                   %197.1 -> BB367 (if true) | BB368 (if false)
BB81   <- [80, 198, 367]
  val?^ | miss    %81.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %81.1 = Identical                <blt is.na>, %81.0   <true>
  void                    Branch                   %81.1 -> BB369 (if true) | BB370 (if false)
BB367   <- [197]
  val?            %367.0 = StaticCall         !v    check.length[0x55eeee8a0dd0]("col") from %0.2 e0.1
  goto BB81
BB368   <- [197]
  fs              %368.0 = FrameState         R     0x55eeedf72df0+669: [%194.3], env=e0.1
  void                    Deopt              !v    %368.0, CallTarget@0x55eeee44c058[Call#20], %197.0   !
BB369   <- [81]
  val?^ | miss    %369.0 = LdVar              eR    match, e0.1
  lgl$#-          %369.1 = Identical                %369.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %369.1 -> BB371 (if true) | BB372 (if false)
BB370   <- [81]
  void                    Nop                !     
  lgl$#-          %370.1 = %81.1
  dr              %370.2 = DeadBranchReached@0x55eeee44c058[Test#1]
  goto BB82
BB371   <- [369]
  val?^ | miss    %371.0 = LdVar              eR    names, e0.1
  lgl$#-          %371.1 = Identical                %371.0, <blt names>
  void                    Branch                   %371.1 -> BB373 (if true) | BB374 (if false)
BB372   <- [369]
  void                    Nop                !     
  val?^ | miss    %372.1 = %369.0
  dr              %372.2 = CallTarget@0x55eeee44c058[Call#26]
  goto BB82
BB82   <- [370, 372, 374]
  val?^ | miss    %82.0 = Phi                      %370.1:BB370, %372.1:BB372, %374.1:BB374
  val?^ | miss    %82.1 = %82.0
  dr              %82.2 = Phi                      %370.2:BB370, %372.2:BB372, %374.2:BB374
  dr              %82.3 = %82.2
  fs              %82.4 = FrameState         R     0x55eeedf72df0+761: [], env=e0.1
  void                    Deopt              !v    %82.4, %82.3, %82.1   !
BB373   <- [371]
  val?^ | miss    %373.0 = LdVar              eR    gpars, e0.1
  val?            %373.1 = Force!<wrapped>    !v    %373.0, e0.1   <vec+>
  val?            %373.2 = CallBuiltin        !v    names(%373.1) e0.1   <(nil|str)->
  lgl$#-          %373.3 = IsType                   %373.2 isA val?-
  void                    Branch                   %373.3 -> BB375 (if true) | BB376 (if false)
BB374   <- [371]
  void                    Nop                !     
  val?^ | miss    %374.1 = %371.0
  dr              %374.2 = CallTarget@0x55eeee44c058[Call#27]
  goto BB82
BB375   <- [373]
  val?-           %375.0 = CastType           d     dn %373.2   <(nil|str)->
  val+            %375.1 = CallSafeBuiltin    wed   match("fill", %375.0, NA, nil)    <int$->
  lgl$#-          %375.2 = IsType                   %375.1 isA int$-
  void                    Branch                   %375.2 -> BB377 (if true) | BB378 (if false)
BB376   <- [373]
  prom-           %376.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p4, e0.1
  val?^           %376.1 = CastType                 up %376.0
  fs              %376.2 = FrameState         R     0x55eeedf72df0+858: [<blt is.na>], env=e0.1
  env             e376.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%376.1, x="fill", parent=R_BaseNamespace, context 0
  fs              %376.4 = FrameState         R     0x55eeec291d40+23: ["fill"], env=e376.3, next=%376.2
  fs              %376.5 = FrameState         R     0x55eeedf5ba60+32(pr): [%373.2], env=e0.1, next=%376.4
  void                    Deopt              !v    %376.5, Typecheck@0x55eeec2e4cb0[Type#1], %373.2   !
BB377   <- [375]
  int$-           %377.0 = CastType           d     dn %375.1
  lgl$-           %377.1 = CallSafeBuiltin    wed   is.na(%377.0)    <lgl$->
  lgl$-           %377.2 = Not                d     %377.1, elided
  lgl$#-          %377.3 = CheckTrueFalse     e     %377.2
  void                    Branch                   %377.3 -> BB180 (if true) | BB88 (if false)
BB378   <- [375]
  fs              %378.0 = FrameState         R     0x55eeedf72df0+858: [<blt is.na>], env=e0.1
  prom-           %378.1 = MkArg                    %375.0, validGP[0x55eeeea36900]_p4 (!refl), e0.1
  val?~           %378.2 = CastType                 up %378.1
  env             e378.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%378.2, x="fill", parent=R_BaseNamespace, context 0
  fs              %378.4 = FrameState         R     0x55eeec291d40+69: [%375.1], env=e378.3, next=%378.0
  void                    Deopt              !v    %378.4, Typecheck@0x55eeee44c058[Type#24], %375.1   !
BB180   <- [377]
  (cls|spec|blt)  %180.0 = LdFun              !v    $, <0x55eeeba7cc10>, e0.1
  prom-           %180.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p22, e0.1
  prom-           %180.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p23, e0.1
  val?            %180.3 = Call               !v    %180.0(%180.1, %180.2) e0.1   <str$->
  lgl$-           %180.4 = Is                       %180.3, NULL
  lgl$#-          %180.5 = CheckTrueFalse     e     %180.4
  void                    Branch                   %180.5 -> BB193 (if true) | BB183 (if false)
BB88   <- [377]
  void                    Nop                !     
  goto BB89
BB193   <- [180]
  (cls|spec|blt)  %193.0 = LdFun              !v    <-, e0.1
  fs              %193.1 = FrameState         R     0x55eeedf72df0+1042: [%193.0], env=e0.1
  void                    Deopt              !v    %193.1, DeadCall@0x55eeee44c058[Call#32], %193.0   !
BB183   <- [180]
  val?^ | miss    %183.0 = LdVar              eR    is.pattern, e0.1
  lgl$#-          %183.1 = Identical                %183.0, function(x) <(rir::DispatchTable*)0x55eeee33d9|...
  void                    Branch                   %183.1 -> BB381 (if true) | BB382 (if false)
BB89   <- [88, 191]
  val?^ | miss    %89.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %89.1 = Identical                <blt is.na>, %89.0   <true>
  void                    Branch                   %89.1 -> BB379 (if true) | BB380 (if false)
BB381   <- [183]
  prom-           %381.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p24, e0.1
  ct              %381.1 = PushContext        lCL   %381.0, is.pattern($(gpars, fill)), function(x) <(rir::DispatchTable*)0x55eeee33d9|..., e0.1
  val?^           %381.2 = CastType                 up %381.0
  val?^ | miss    %381.3 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %381.4 = Identical                %381.3, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %381.4 -> BB391 (if true) | BB392 (if false)
BB382   <- [183]
  fs              %382.0 = FrameState         R     0x55eeedf72df0+934: [%180.3], env=e0.1
  void                    Deopt              !v    %382.0, CallTarget@0x55eeee44c058[Call#29], %183.0   !
BB379   <- [89]
  val?^ | miss    %379.0 = LdVar              eR    match, e0.1
  lgl$#-          %379.1 = Identical                %379.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %379.1 -> BB383 (if true) | BB384 (if false)
BB380   <- [89]
  void                    Nop                !     
  lgl$#-          %380.1 = %89.1
  dr              %380.2 = DeadBranchReached@0x55eeee44c058[Test#2]
  goto BB90
BB391   <- [381]
  env             e391.0 = MkEnv              l     x=%381.2, parent=<env 0x55eeedfdc408>, context 1
  prom-           %391.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p63, e391.0
  ct              %391.2 = PushContext        lCL   %391.1, "GridPattern", inherits(x, "GridPattern"), function(x, what, which=FALSE) <(rir::Dispatch|..., e391.0
  val?^           %391.3 = CastType                 up %391.1
  env             e391.4 = MkEnv              l     x=%391.3, what="GridPattern", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %391.5 = Force!<lazy>       !vL   %391.3, e391.4   <val?>
  val?            %391.6 = CallBuiltin        !v    inherits(%391.5, "GridPattern", false) e391.4
  val?            %391.7 = PopContext         C     %391.6, %391.2   <lgl$->
  lgl$#-          %391.8 = IsType                   %391.7 isA lgl$-
  void                    Branch                   %391.8 -> BB393 (if true) | BB394 (if false)
BB392   <- [381]
  fs              %392.0 = FrameState         R     0x55eeedf72df0+982: [], env=e0.1
  env             e392.1 = (MkEnv)            l     x=%381.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %392.2 = FrameState         R     0x55eeedb21e80+0: [], env=e392.1, next=%392.0
  void                    Deopt              !v    %392.2, CallTarget@0x55eeefb7bfa8[Call#0], %381.3   !
BB383   <- [379]
  val?^ | miss    %383.0 = LdVar              eR    names, e0.1
  lgl$#-          %383.1 = Identical                %383.0, <blt names>
  void                    Branch                   %383.1 -> BB385 (if true) | BB386 (if false)
BB384   <- [379]
  void                    Nop                !     
  val?^ | miss    %384.1 = %379.0
  dr              %384.2 = CallTarget@0x55eeee44c058[Call#37]
  goto BB90
BB90   <- [380, 384, 386]
  val?^ | miss    %90.0 = Phi                      %380.1:BB380, %384.1:BB384, %386.1:BB386
  val?^ | miss    %90.1 = %90.0
  dr              %90.2 = Phi                      %380.2:BB380, %384.2:BB384, %386.2:BB386
  dr              %90.3 = %90.2
  fs              %90.4 = FrameState         R     0x55eeedf72df0+1075: [], env=e0.1
  void                    Deopt              !v    %90.4, %90.3, %90.1   !
BB393   <- [391]
  lgl$-           %393.0 = CastType           d     dn %391.7
  val?            %393.1 = PopContext         C     %393.0, %381.1   <lgl$->
  lgl$#-          %393.2 = IsType                   %393.1 isA lgl$-
  void                    Branch                   %393.2 -> BB399 (if true) | BB400 (if false)
BB394   <- [391]
  fs              %394.0 = FrameState         R     0x55eeedf72df0+982: [], env=e0.1
  fs              %394.1 = FrameState         R     0x55eeedb21e80+37: [%391.7], env=e391.0, next=%394.0
  void                    Deopt              !v    %394.1, Typecheck@0x55eeefb7bfa8[Type#1], %391.7   !
BB385   <- [383]
  val?^ | miss    %385.0 = LdVar              eR    gpars, e0.1
  val?            %385.1 = Force!<wrapped>    !v    %385.0, e0.1   <vec+>
  val?            %385.2 = CallBuiltin        !v    names(%385.1) e0.1   <(nil|str)->
  lgl$#-          %385.3 = IsType                   %385.2 isA val?-
  void                    Branch                   %385.3 -> BB387 (if true) | BB388 (if false)
BB386   <- [383]
  void                    Nop                !     
  val?^ | miss    %386.1 = %383.0
  dr              %386.2 = CallTarget@0x55eeee44c058[Call#38]
  goto BB90
BB399   <- [393]
  lgl$-           %399.0 = CastType           d     dn %393.1
  lgl$-           %399.1 = Not                d     %399.0, elided
  lgl$#-          %399.2 = CheckTrueFalse     e     %399.1
  void                    Branch                   %399.2 -> BB192 (if true) | BB190 (if false)
BB400   <- [393]
  void                    Nop                !     
  val?            %400.1 = %393.1
  dr              %400.2 = Typecheck@0x55eeee44c058[Type#32]
  goto BB188
BB387   <- [385]
  val?-           %387.0 = CastType           d     dn %385.2   <(nil|str)->
  val+            %387.1 = CallSafeBuiltin    wed   match("lty", %387.0, NA, nil)    <int$->
  lgl$#-          %387.2 = IsType                   %387.1 isA int$-
  void                    Branch                   %387.2 -> BB389 (if true) | BB390 (if false)
BB388   <- [385]
  prom-           %388.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p6, e0.1
  val?^           %388.1 = CastType                 up %388.0
  fs              %388.2 = FrameState         R     0x55eeedf72df0+1172: [<blt is.na>], env=e0.1
  env             e388.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%388.1, x="lty", parent=R_BaseNamespace, context 0
  fs              %388.4 = FrameState         R     0x55eeec291d40+23: ["lty"], env=e388.3, next=%388.2
  fs              %388.5 = FrameState         R     0x55eeedefdaa0+32(pr): [%385.2], env=e0.1, next=%388.4
  void                    Deopt              !v    %388.5, Typecheck@0x55eeec2e4cb0[Type#1], %385.2   !
BB192   <- [399]
  val?^ | miss    %192.0 = LdVar              eR    check.length, e0.1
  lgl$#-          %192.1 = Identical                %192.0, %0.2
  void                    Branch                   %192.1 -> BB403 (if true) | BB404 (if false)
BB190   <- [399]
  void                    Nop                !     
  goto BB191
BB188   <- [400, 404]
  val?^ | miss    %188.0 = Phi                      %400.1:BB400, %404.1:BB404
  val?^ | miss    %188.1 = %188.0
  dr              %188.2 = Phi                      %400.2:BB400, %404.2:BB404
  dr              %188.3 = %188.2
  fs              %188.4 = FrameState         R     0x55eeedf72df0+982: [%393.1], env=e0.1
  void                    Deopt              !v    %188.4, %188.3, %188.1   !
BB389   <- [387]
  int$-           %389.0 = CastType           d     dn %387.1
  lgl$-           %389.1 = CallSafeBuiltin    wed   is.na(%389.0)    <lgl$->
  lgl$-           %389.2 = Not                d     %389.1, elided
  lgl$#-          %389.3 = CheckTrueFalse     e     %389.2
  void                    Branch                   %389.3 -> BB179 (if true) | BB98 (if false)
BB390   <- [387]
  prom-           %390.0 = MkArg                    %387.0, validGP[0x55eeeea36900]_p6 (!refl), e0.1
  val?~           %390.1 = CastType                 up %390.0
  fs              %390.2 = FrameState         R     0x55eeedf72df0+1172: [<blt is.na>], env=e0.1
  env             e390.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%390.1, x="lty", parent=R_BaseNamespace, context 0
  fs              %390.4 = FrameState         R     0x55eeec291d40+69: [%387.1], env=e390.3, next=%390.2
  void                    Deopt              !v    %390.4, Typecheck@0x55eeee44c058[Type#41], %387.1   !
BB403   <- [192]
  val?            %403.0 = StaticCall         !v    check.length[0x55eeee8a0dd0]("fill") from %0.2 e0.1
  goto BB191
BB404   <- [192]
  void                    Nop                !     
  val?^ | miss    %404.1 = %192.0
  dr              %404.2 = CallTarget@0x55eeee44c058[Call#31]
  goto BB188
BB191   <- [190, 403]
  void                    Nop                !     
  goto BB89
BB179   <- [389]
  (cls|spec|blt)  %179.0 = LdFun              !v    $, e0.1
  fs              %179.1 = FrameState         R     0x55eeedf72df0+1216: [%179.0], env=e0.1
  void                    Deopt              !v    %179.1, DeadCall@0x55eeee44c058[Call#39], %179.0   !
BB98   <- [389]
  val?^ | miss    %98.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %98.1 = Identical                <blt is.na>, %98.0   <true>
  void                    Branch                   %98.1 -> BB395 (if true) | BB396 (if false)
BB395   <- [98]
  val?^ | miss    %395.0 = LdVar              eR    match, e0.1
  lgl$#-          %395.1 = Identical                %395.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %395.1 -> BB397 (if true) | BB398 (if false)
BB396   <- [98]
  void                    Nop                !     
  lgl$#-          %396.1 = %98.1
  dr              %396.2 = DeadBranchReached@0x55eeee44c058[Test#3]
  goto BB96
BB397   <- [395]
  val?^ | miss    %397.0 = LdVar              eR    names, e0.1
  lgl$#-          %397.1 = Identical                %397.0, <blt names>
  void                    Branch                   %397.1 -> BB401 (if true) | BB402 (if false)
BB398   <- [395]
  void                    Nop                !     
  val?^ | miss    %398.1 = %395.0
  dr              %398.2 = CallTarget@0x55eeee44c058[Call#46]
  goto BB96
BB96   <- [396, 398, 402]
  val?^ | miss    %96.0 = Phi                      %396.1:BB396, %398.1:BB398, %402.1:BB402
  val?^ | miss    %96.1 = %96.0
  dr              %96.2 = Phi                      %396.2:BB396, %398.2:BB398, %402.2:BB402
  dr              %96.3 = %96.2
  fs              %96.4 = FrameState         R     0x55eeedf72df0+1194: [%389.1], env=e0.1
  void                    Deopt              !v    %96.4, %96.3, %96.1   !
BB401   <- [397]
  val?^ | miss    %401.0 = LdVar              eR    gpars, e0.1
  val?            %401.1 = Force!<wrapped>    !v    %401.0, e0.1   <vec+>
  val?            %401.2 = CallBuiltin        !v    names(%401.1) e0.1   <(nil|str)->
  lgl$#-          %401.3 = IsType                   %401.2 isA val?-
  void                    Branch                   %401.3 -> BB405 (if true) | BB406 (if false)
BB402   <- [397]
  void                    Nop                !     
  val?^ | miss    %402.1 = %397.0
  dr              %402.2 = CallTarget@0x55eeee44c058[Call#47]
  goto BB96
BB405   <- [401]
  val?-           %405.0 = CastType           d     dn %401.2   <(nil|str)->
  val+            %405.1 = CallSafeBuiltin    wed   match("lineend", %405.0, NA, nil)    <int$->
  lgl$#-          %405.2 = IsType                   %405.1 isA int$-
  void                    Branch                   %405.2 -> BB407 (if true) | BB408 (if false)
BB406   <- [401]
  prom-           %406.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p8, e0.1
  val?^           %406.1 = CastType                 up %406.0
  fs              %406.2 = FrameState         R     0x55eeedf72df0+1437: [<blt is.na>], env=e0.1
  env             e406.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%406.1, x="lineend", parent=R_BaseNamespace, context 0
  fs              %406.4 = FrameState         R     0x55eeec291d40+23: ["lineend"], env=e406.3, next=%406.2
  fs              %406.5 = FrameState         R     0x55eeee0df480+32(pr): [%401.2], env=e0.1, next=%406.4
  void                    Deopt              !v    %406.5, Typecheck@0x55eeec2e4cb0[Type#1], %401.2   !
BB407   <- [405]
  int$-           %407.0 = CastType           d     dn %405.1
  lgl$-           %407.1 = CallSafeBuiltin    wed   is.na(%407.0)    <lgl$->
  lgl$-           %407.2 = Not                d     %407.1, elided
  lgl$#-          %407.3 = CheckTrueFalse     e     %407.2
  void                    Branch                   %407.3 -> BB178 (if true) | BB105 (if false)
BB408   <- [405]
  prom-           %408.0 = MkArg                    %405.0, validGP[0x55eeeea36900]_p8 (!refl), e0.1
  val?~           %408.1 = CastType                 up %408.0
  fs              %408.2 = FrameState         R     0x55eeedf72df0+1437: [<blt is.na>], env=e0.1
  env             e408.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%408.1, x="lineend", parent=R_BaseNamespace, context 0
  fs              %408.4 = FrameState         R     0x55eeec291d40+69: [%405.1], env=e408.3, next=%408.2
  void                    Deopt              !v    %408.4, Typecheck@0x55eeee44c058[Type#54], %405.1   !
BB178   <- [407]
  (cls|spec|blt)  %178.0 = LdFun              !v    $, e0.1
  fs              %178.1 = FrameState         R     0x55eeedf72df0+1481: [%178.0], env=e0.1
  void                    Deopt              !v    %178.1, DeadCall@0x55eeee44c058[Call#48], %178.0   !
BB105   <- [407]
  val?^ | miss    %105.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %105.1 = Identical                <blt is.na>, %105.0   <true>
  void                    Branch                   %105.1 -> BB409 (if true) | BB410 (if false)
BB409   <- [105]
  val?^ | miss    %409.0 = LdVar              eR    match, e0.1
  lgl$#-          %409.1 = Identical                %409.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %409.1 -> BB411 (if true) | BB412 (if false)
BB410   <- [105]
  void                    Nop                !     
  lgl$#-          %410.1 = %105.1
  dr              %410.2 = DeadBranchReached@0x55eeee44c058[Test#4]
  goto BB103
BB411   <- [409]
  val?^ | miss    %411.0 = LdVar              eR    names, e0.1
  lgl$#-          %411.1 = Identical                %411.0, <blt names>
  void                    Branch                   %411.1 -> BB413 (if true) | BB414 (if false)
BB412   <- [409]
  void                    Nop                !     
  val?^ | miss    %412.1 = %409.0
  dr              %412.2 = CallTarget@0x55eeee44c058[Call#55]
  goto BB103
BB103   <- [410, 412, 414]
  val?^ | miss    %103.0 = Phi                      %410.1:BB410, %412.1:BB412, %414.1:BB414
  val?^ | miss    %103.1 = %103.0
  dr              %103.2 = Phi                      %410.2:BB410, %412.2:BB412, %414.2:BB414
  dr              %103.3 = %103.2
  fs              %103.4 = FrameState         R     0x55eeedf72df0+1459: [%407.1], env=e0.1
  void                    Deopt              !v    %103.4, %103.3, %103.1   !
BB413   <- [411]
  val?^ | miss    %413.0 = LdVar              eR    gpars, e0.1
  val?            %413.1 = Force!<wrapped>    !v    %413.0, e0.1   <vec+>
  val?            %413.2 = CallBuiltin        !v    names(%413.1) e0.1   <(nil|str)->
  lgl$#-          %413.3 = IsType                   %413.2 isA val?-
  void                    Branch                   %413.3 -> BB415 (if true) | BB416 (if false)
BB414   <- [411]
  void                    Nop                !     
  val?^ | miss    %414.1 = %411.0
  dr              %414.2 = CallTarget@0x55eeee44c058[Call#56]
  goto BB103
BB415   <- [413]
  val?-           %415.0 = CastType           d     dn %413.2   <(nil|str)->
  val+            %415.1 = CallSafeBuiltin    wed   match("linejoin", %415.0, NA, nil)    <int$->
  lgl$#-          %415.2 = IsType                   %415.1 isA int$-
  void                    Branch                   %415.2 -> BB417 (if true) | BB418 (if false)
BB416   <- [413]
  fs              %416.0 = FrameState         R     0x55eeedf72df0+1702: [<blt is.na>], env=e0.1
  prom-           %416.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p10, e0.1
  val?^           %416.2 = CastType                 up %416.1
  env             e416.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%416.2, x="linejoin", parent=R_BaseNamespace, context 0
  fs              %416.4 = FrameState         R     0x55eeec291d40+23: ["linejoin"], env=e416.3, next=%416.0
  fs              %416.5 = FrameState         R     0x55eeeda19440+32(pr): [%413.2], env=e0.1, next=%416.4
  void                    Deopt              !v    %416.5, Typecheck@0x55eeec2e4cb0[Type#1], %413.2   !
BB417   <- [415]
  int$-           %417.0 = CastType           d     dn %415.1
  lgl$-           %417.1 = CallSafeBuiltin    wed   is.na(%417.0)    <lgl$->
  lgl$-           %417.2 = Not                d     %417.1, elided
  lgl$#-          %417.3 = CheckTrueFalse     e     %417.2
  void                    Branch                   %417.3 -> BB177 (if true) | BB114 (if false)
BB418   <- [415]
  prom-           %418.0 = MkArg                    %415.0, validGP[0x55eeeea36900]_p10 (!refl), e0.1
  val?~           %418.1 = CastType                 up %418.0
  fs              %418.2 = FrameState         R     0x55eeedf72df0+1702: [<blt is.na>], env=e0.1
  env             e418.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%418.1, x="linejoin", parent=R_BaseNamespace, context 0
  fs              %418.4 = FrameState         R     0x55eeec291d40+69: [%415.1], env=e418.3, next=%418.2
  void                    Deopt              !v    %418.4, Typecheck@0x55eeee44c058[Type#67], %415.1   !
BB177   <- [417]
  (cls|spec|blt)  %177.0 = LdFun              !v    $, e0.1
  fs              %177.1 = FrameState         R     0x55eeedf72df0+1746: [%177.0], env=e0.1
  void                    Deopt              !v    %177.1, DeadCall@0x55eeee44c058[Call#57], %177.0   !
BB114   <- [417]
  val?^ | miss    %114.0 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %114.1 = Identical                %114.0, %0.3
  void                    Branch                   %114.1 -> BB419 (if true) | BB420 (if false)
BB419   <- [114]
  ct              %419.0 = PushContext        lCL   "linemitre", numnotnull("linemitre"), %0.3, e0.1
  val?^ | miss    %419.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %419.2 = Identical                <blt is.na>, %419.1   <true>
  void                    Branch                   %419.2 -> BB421 (if true) | BB422 (if false)
BB420   <- [114]
  fs              %420.0 = FrameState         R     0x55eeedf72df0+1724: [%417.1], env=e0.1
  void                    Deopt              !v    %420.0, CallTarget@0x55eeee44c058[Call#61], %114.0   !
BB421   <- [419]
  env             e421.0 = MkEnv              l     gparname="linemitre", parent=e0.1, context 1
  val?^ | miss    %421.1 = LdVar              eR    match, e421.0
  lgl$#-          %421.2 = Identical                %421.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %421.2 -> BB423 (if true) | BB424 (if false)
BB422   <- [419]
  void                    DropContext        C     
  fs              %422.1 = FrameState         R     0x55eeedf72df0+1731: [%417.3], env=e0.1
  void                    Deopt              !v    %422.1, DeadBranchReached@0x55eeee44c3c8[Test#0], %419.2   !
BB423   <- [421]
  val?^ | miss    %423.0 = LdVar              eR    names, e0.1
  lgl$#-          %423.1 = Identical                %423.0, <blt names>
  void                    Branch                   %423.1 -> BB425 (if true) | BB426 (if false)
BB424   <- [421]
  void                    Nop                !     
  val?^ | miss    %424.1 = %421.1
  dr              %424.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB115
BB425   <- [423]
  val?^ | miss    %425.0 = LdVar              eR    gpars, e421.0
  val?            %425.1 = Force!<lazy>       !v    %425.0, e421.0   <vec->
  val?            %425.2 = CallBuiltin        !v    names(%425.1) e421.0   <nil->
  lgl$#-          %425.3 = IsType                   %425.2 isA val?-
  void                    Branch                   %425.3 -> BB427 (if true) | BB428 (if false)
BB426   <- [423]
  void                    Nop                !     
  val?^ | miss    %426.1 = %423.0
  dr              %426.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB115
BB115   <- [424, 426]
  val?^ | miss    %115.0 = Phi                      %424.1:BB424, %426.1:BB426
  val?^ | miss    %115.1 = %115.0
  dr              %115.2 = Phi                      %424.2:BB424, %426.2:BB426
  dr              %115.3 = %115.2
  fs              %115.4 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  env             e115.5 = (MkEnv)            l     gparname="linemitre", parent=e0.1, context 1
  fs              %115.6 = FrameState         R     0x55eeee790590+60: [<blt is.na>], env=e115.5, next=%115.4
  void                    Deopt              !v    %115.6, %115.3, %115.1   !
BB427   <- [425]
  val?-           %427.0 = CastType           d     dn %425.2   <nil->
  val+            %427.1 = CallSafeBuiltin    wed   match("linemitre", %427.0, NA, nil)    <int$->
  lgl$#-          %427.2 = IsType                   %427.1 isA int$-
  void                    Branch                   %427.2 -> BB429 (if true) | BB430 (if false)
BB428   <- [425]
  fs              %428.0 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  fs              %428.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e421.0, next=%428.0
  prom-           %428.2 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p71, e421.0
  val?^           %428.3 = CastType                 up %428.2
  prom-           %428.4 = MkArg                    "linemitre", validGP[0x55eeeea36900]_p70 (!refl), e421.0
  val?~           %428.5 = CastType                 up %428.4
  env             e428.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%428.3, x=%428.5, parent=R_BaseNamespace, context 0
  fs              %428.7 = FrameState         R     0x55eeec291d40+23: ["linemitre"], env=e428.6, next=%428.1
  fs              %428.8 = FrameState         R     0x55eeee0f3040+32(pr): [%425.2], env=e421.0, next=%428.7
  void                    Deopt              !v    %428.8, Typecheck@0x55eeec2e4cb0[Type#1], %425.2   !
BB429   <- [427]
  int$-           %429.0 = CastType           d     dn %427.1
  lgl$-           %429.1 = CallSafeBuiltin    wed   is.na(%429.0)    <lgl$->
  lgl$-           %429.2 = Not                d     %429.1, elided
  lgl$#-          %429.3 = CheckTrueFalse     e     %429.2
  void                    Branch                   %429.3 -> BB169 (if true) | BB121 (if false)
BB430   <- [427]
  fs              %430.0 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  fs              %430.1 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e421.0, next=%430.0
  prom-           %430.2 = MkArg                    %427.0, validGP[0x55eeeea36900]_p71 (!refl), e421.0
  val?~           %430.3 = CastType                 up %430.2
  prom-           %430.4 = MkArg                    "linemitre", validGP[0x55eeeea36900]_p70 (!refl), e421.0
  val?~           %430.5 = CastType                 up %430.4
  env             e430.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%430.3, x=%430.5, parent=R_BaseNamespace, context 0
  fs              %430.7 = FrameState         R     0x55eeec291d40+69: [%427.1], env=e430.6, next=%430.1
  void                    Deopt              !v    %430.7, Typecheck@0x55eeee44c3c8[Type#7], %427.1   !
BB169   <- [429]
  val?^ | miss    %169.0 = LdVar              eR    gpars, e421.0
  val?            %169.1 = Force!             !v    %169.0, e421.0   <val?_>
  lgl$#-          %169.2 = IsType                   %169.1 isA val+   <@?>
  void                    Branch                   %169.2 -> BB176 (if true) | BB170 (if false)
BB121   <- [429]
  void                    Nop                !     
  goto BB122
BB176   <- [169]
  val?^ | miss    %176.0 = LdVar              eR    gparname, e421.0
  val?            %176.1 = Force!             !v    %176.0, e421.0   <val?_>
  val?            %176.2 = %176.1
  goto BB171
BB170   <- [169]
  prom-           %170.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p73, e421.0
  prom-           %170.1 = %170.0
  goto BB171
BB122   <- [121, 439]
  val?            %122.0 = PopContext         C     nil, %419.0
  val?^ | miss    %122.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %122.2 = Identical                <blt is.na>, %122.1   <true>
  void                    Branch                   %122.2 -> BB431 (if true) | BB432 (if false)
BB171   <- [170, 176]
  val?            %171.0 = Phi                      %176.2:BB176, %170.1:BB170
  val?            %171.1 = %171.0
  val?            %171.2 = Extract2_1D        !v    %169.1, %171.1, e421.0   <val?_>
  lgl$-           %171.3 = Is                       %171.2, NULL
  lgl$#-          %171.4 = CheckTrueFalse     e     %171.3
  void                    Branch                   %171.4 -> BB173 (if true) | BB172 (if false)
BB431   <- [122]
  val?^ | miss    %431.0 = LdVar              eR    match, e0.1
  lgl$#-          %431.1 = Identical                %431.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %431.1 -> BB433 (if true) | BB434 (if false)
BB432   <- [122]
  void                    Nop                !     
  lgl$#-          %432.1 = %122.2
  dr              %432.2 = DeadBranchReached@0x55eeee44c058[Test#5]
  goto BB123
BB173   <- [171]
  val?^ | miss    %173.0 = LdVar              eR    gpars, e0.1   <val?_>
  val?^ | miss    %173.1 = LdVar              eR    gparname, e421.0
  val?            %173.2 = Force!             !v    %173.1, e421.0   <val?_>
  val?            %173.3 = Force!             !v    %173.0, e421.0
  lgl$#-          %173.4 = IsType                   %173.3 isA val?+
  lgl$#-          %173.5 = IsType                   %173.2 isA val?+
  void                    Branch                   %173.4 -> BB437 (if true) | BB438 (if false)
BB172   <- [171]
  fs              %172.0 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  (cls|spec|blt)  %172.1 = LdFun              !v    check.length, e421.0
  fs              %172.2 = FrameState         R     0x55eeee790590+224: [%172.1], env=e421.0, next=%172.0
  void                    Deopt              !v    %172.2, DeadCall@0x55eeee44c3c8[Call#5], %172.1   !
BB433   <- [431]
  val?^ | miss    %433.0 = LdVar              eR    names, e0.1
  lgl$#-          %433.1 = Identical                %433.0, <blt names>
  void                    Branch                   %433.1 -> BB435 (if true) | BB436 (if false)
BB434   <- [431]
  void                    Nop                !     
  val?^ | miss    %434.1 = %431.0
  dr              %434.2 = CallTarget@0x55eeee44c058[Call#65]
  goto BB123
BB123   <- [432, 434, 436]
  val?^ | miss    %123.0 = Phi                      %432.1:BB432, %434.1:BB434, %436.1:BB436
  val?^ | miss    %123.1 = %123.0
  dr              %123.2 = Phi                      %432.2:BB432, %434.2:BB434, %436.2:BB436
  dr              %123.3 = %123.2
  fs              %123.4 = FrameState         R     0x55eeedf72df0+1902: [%122.0], env=e0.1
  void                    Deopt              !v    %123.4, %123.3, %123.1   !
BB437   <- [173]
  val?+           %437.0 = CastType           d     dn %173.3
  void                    Branch                   %173.5 -> BB439 (if true) | BB440 (if false)
BB438   <- [173]
  void                    Nop                !     
  val?            %438.1 = %173.3
  dr              %438.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB174
BB435   <- [433]
  val?^ | miss    %435.0 = LdVar              eR    gpars, e0.1
  val?            %435.1 = Force!<wrapped>    !v    %435.0, e0.1   <vec+>
  val?            %435.2 = CallBuiltin        !v    names(%435.1) e0.1   <(nil|str)->
  lgl$#-          %435.3 = IsType                   %435.2 isA val?-
  void                    Branch                   %435.3 -> BB441 (if true) | BB442 (if false)
BB436   <- [433]
  void                    Nop                !     
  val?^ | miss    %436.1 = %433.0
  dr              %436.2 = CallTarget@0x55eeee44c058[Call#66]
  goto BB123
BB439   <- [437]
  val?+           %439.0 = CastType           d     dn %173.2   <val?_>
  val?+           %439.1 = Subassign2_1D      wed   nil, %437.0, %439.0, elided
  void                    StVarSuper         lRW   gpars, %439.1, e421.0
  goto BB122
BB440   <- [437]
  void                    Nop                !     
  val?            %440.1 = %173.2
  dr              %440.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB174
BB174   <- [438, 440]
  val?^ | miss    %174.0 = Phi                      %438.1:BB438, %440.1:BB440
  val?^ | miss    %174.1 = %174.0
  dr              %174.2 = Phi                      %438.2:BB438, %440.2:BB440
  dr              %174.3 = %174.2
  fs              %174.4 = FrameState         R     0x55eeedf72df0+1902: [], env=e0.1
  fs              %174.5 = FrameState         R     0x55eeee790590+480: [nil, nil, %173.3, %173.2], env=e421.0, next=%174.4
  void                    Deopt              !v    %174.5, %174.3, %174.1   !
BB441   <- [435]
  val?-           %441.0 = CastType           d     dn %435.2   <(nil|str)->
  val+            %441.1 = CallSafeBuiltin    wed   match("linemitre", %441.0, NA, nil)    <int$->
  lgl$#-          %441.2 = IsType                   %441.1 isA int$-
  void                    Branch                   %441.2 -> BB443 (if true) | BB444 (if false)
BB442   <- [435]
  prom-           %442.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p12, e0.1
  val?^           %442.1 = CastType                 up %442.0
  fs              %442.2 = FrameState         R     0x55eeedf72df0+2000: [<blt is.na>], env=e0.1
  env             e442.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%442.1, x="linemitre", parent=R_BaseNamespace, context 0
  fs              %442.4 = FrameState         R     0x55eeec291d40+23: ["linemitre"], env=e442.3, next=%442.2
  fs              %442.5 = FrameState         R     0x55eeedfa5170+32(pr): [%435.2], env=e0.1, next=%442.4
  void                    Deopt              !v    %442.5, Typecheck@0x55eeec2e4cb0[Type#1], %435.2   !
BB443   <- [441]
  int$-           %443.0 = CastType           d     dn %441.1
  lgl$-           %443.1 = CallSafeBuiltin    wed   is.na(%443.0)    <lgl$->
  lgl$-           %443.2 = Not                d     %443.1, elided
  lgl$#-          %443.3 = CheckTrueFalse     e     %443.2
  void                    Branch                   %443.3 -> BB166 (if true) | BB131 (if false)
BB444   <- [441]
  prom-           %444.0 = MkArg                    %441.0, validGP[0x55eeeea36900]_p12 (!refl), e0.1
  val?~           %444.1 = CastType                 up %444.0
  fs              %444.2 = FrameState         R     0x55eeedf72df0+2000: [<blt is.na>], env=e0.1
  env             e444.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%444.1, x="linemitre", parent=R_BaseNamespace, context 0
  fs              %444.4 = FrameState         R     0x55eeec291d40+69: [%441.1], env=e444.3, next=%444.2
  void                    Deopt              !v    %444.4, Typecheck@0x55eeee44c058[Type#80], %441.1   !
BB166   <- [443]
  val?^ | miss    %166.0 = LdVar              eR    any, e0.1
  lgl$#-          %166.1 = Identical                <blt any>, %166.0   <@?>
  void                    Branch                   %166.1 -> BB168 (if true) | BB167 (if false)
BB131   <- [443]
  val?^ | miss    %131.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %131.1 = Identical                <blt is.na>, %131.0   <true>
  void                    Branch                   %131.1 -> BB445 (if true) | BB446 (if false)
BB168   <- [166]
  (cls|spec|blt)  %168.0 = LdFun              !v    $, e0.1
  fs              %168.1 = FrameState         R     0x55eeedf72df0+2104: [<blt any>, %168.0], env=e0.1
  void                    Deopt              !v    %168.1, DeadCall@0x55eeee44c058[Call#69], %168.0   !
BB167   <- [166]
  (cls|spec|blt)  %167.0 = LdFun              !v    any, e0.1
  fs              %167.1 = FrameState         R     0x55eeedf72df0+2067: [%167.0], env=e0.1
  void                    Deopt              !v    %167.1, DeadCall@0x55eeee44c058[Call#67], %167.0   !
BB445   <- [131]
  val?^ | miss    %445.0 = LdVar              eR    match, e0.1
  lgl$#-          %445.1 = Identical                %445.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %445.1 -> BB447 (if true) | BB448 (if false)
BB446   <- [131]
  void                    Nop                !     
  lgl$#-          %446.1 = %131.1
  dr              %446.2 = DeadBranchReached@0x55eeee44c058[Test#7]
  goto BB129
BB447   <- [445]
  val?^ | miss    %447.0 = LdVar              eR    names, e0.1
  lgl$#-          %447.1 = Identical                %447.0, <blt names>
  void                    Branch                   %447.1 -> BB449 (if true) | BB450 (if false)
BB448   <- [445]
  void                    Nop                !     
  val?^ | miss    %448.1 = %445.0
  dr              %448.2 = CallTarget@0x55eeee44c058[Call#74]
  goto BB129
BB129   <- [446, 448, 450]
  val?^ | miss    %129.0 = Phi                      %446.1:BB446, %448.1:BB448, %450.1:BB450
  val?^ | miss    %129.1 = %129.0
  dr              %129.2 = Phi                      %446.2:BB446, %448.2:BB448, %450.2:BB450
  dr              %129.3 = %129.2
  fs              %129.4 = FrameState         R     0x55eeedf72df0+2022: [%443.1], env=e0.1
  void                    Deopt              !v    %129.4, %129.3, %129.1   !
BB449   <- [447]
  val?^ | miss    %449.0 = LdVar              eR    gpars, e0.1
  val?            %449.1 = Force!<wrapped>    !v    %449.0, e0.1   <vec+>
  val?            %449.2 = CallBuiltin        !v    names(%449.1) e0.1   <(nil|str)->
  lgl$#-          %449.3 = IsType                   %449.2 isA val?-
  void                    Branch                   %449.3 -> BB451 (if true) | BB452 (if false)
BB450   <- [447]
  void                    Nop                !     
  val?^ | miss    %450.1 = %447.0
  dr              %450.2 = CallTarget@0x55eeee44c058[Call#75]
  goto BB129
BB451   <- [449]
  val?-           %451.0 = CastType           d     dn %449.2   <(nil|str)->
  val+            %451.1 = CallSafeBuiltin    wed   match("alpha", %451.0, NA, nil)    <int$->
  lgl$#-          %451.2 = IsType                   %451.1 isA int$-
  void                    Branch                   %451.2 -> BB453 (if true) | BB454 (if false)
BB452   <- [449]
  fs              %452.0 = FrameState         R     0x55eeedf72df0+2316: [<blt is.na>], env=e0.1
  prom-           %452.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p14, e0.1
  val?^           %452.2 = CastType                 up %452.1
  env             e452.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%452.2, x="alpha", parent=R_BaseNamespace, context 0
  fs              %452.4 = FrameState         R     0x55eeec291d40+23: ["alpha"], env=e452.3, next=%452.0
  fs              %452.5 = FrameState         R     0x55eeee470e30+32(pr): [%449.2], env=e0.1, next=%452.4
  void                    Deopt              !v    %452.5, Typecheck@0x55eeec2e4cb0[Type#1], %449.2   !
BB453   <- [451]
  int$-           %453.0 = CastType           d     dn %451.1
  lgl$-           %453.1 = CallSafeBuiltin    wed   is.na(%453.0)    <lgl$->
  lgl$-           %453.2 = Not                d     %453.1, elided
  lgl$#-          %453.3 = CheckTrueFalse     e     %453.2
  void                    Branch                   %453.3 -> BB163 (if true) | BB138 (if false)
BB454   <- [451]
  prom-           %454.0 = MkArg                    %451.0, validGP[0x55eeeea36900]_p14 (!refl), e0.1
  val?~           %454.1 = CastType                 up %454.0
  fs              %454.2 = FrameState         R     0x55eeedf72df0+2316: [<blt is.na>], env=e0.1
  env             e454.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%454.1, x="alpha", parent=R_BaseNamespace, context 0
  fs              %454.4 = FrameState         R     0x55eeec291d40+69: [%451.1], env=e454.3, next=%454.2
  void                    Deopt              !v    %454.4, Typecheck@0x55eeee44c058[Type#96], %451.1   !
BB163   <- [453]
  val?^ | miss    %163.0 = LdVar              eR    any, e0.1
  lgl$#-          %163.1 = Identical                <blt any>, %163.0   <@?>
  void                    Branch                   %163.1 -> BB165 (if true) | BB164 (if false)
BB138   <- [453]
  val?^ | miss    %138.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %138.1 = Identical                <blt is.na>, %138.0   <true>
  void                    Branch                   %138.1 -> BB455 (if true) | BB456 (if false)
BB165   <- [163]
  (cls|spec|blt)  %165.0 = LdFun              !v    $, e0.1
  fs              %165.1 = FrameState         R     0x55eeedf72df0+2420: [<blt any>, %165.0], env=e0.1
  void                    Deopt              !v    %165.1, DeadCall@0x55eeee44c058[Call#78], %165.0   !
BB164   <- [163]
  (cls|spec|blt)  %164.0 = LdFun              !v    any, e0.1
  fs              %164.1 = FrameState         R     0x55eeedf72df0+2383: [%164.0], env=e0.1
  void                    Deopt              !v    %164.1, DeadCall@0x55eeee44c058[Call#76], %164.0   !
BB455   <- [138]
  val?^ | miss    %455.0 = LdVar              eR    match, e0.1
  lgl$#-          %455.1 = Identical                %455.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %455.1 -> BB457 (if true) | BB458 (if false)
BB456   <- [138]
  void                    Nop                !     
  lgl$#-          %456.1 = %138.1
  dr              %456.2 = DeadBranchReached@0x55eeee44c058[Test#10]
  goto BB136
BB457   <- [455]
  val?^ | miss    %457.0 = LdVar              eR    names, e0.1
  lgl$#-          %457.1 = Identical                %457.0, <blt names>
  void                    Branch                   %457.1 -> BB459 (if true) | BB460 (if false)
BB458   <- [455]
  void                    Nop                !     
  val?^ | miss    %458.1 = %455.0
  dr              %458.2 = CallTarget@0x55eeee44c058[Call#86]
  goto BB136
BB136   <- [456, 458, 460]
  val?^ | miss    %136.0 = Phi                      %456.1:BB456, %458.1:BB458, %460.1:BB460
  val?^ | miss    %136.1 = %136.0
  dr              %136.2 = Phi                      %456.2:BB456, %458.2:BB458, %460.2:BB460
  dr              %136.3 = %136.2
  fs              %136.4 = FrameState         R     0x55eeedf72df0+2338: [%453.1], env=e0.1
  void                    Deopt              !v    %136.4, %136.3, %136.1   !
BB459   <- [457]
  val?^ | miss    %459.0 = LdVar              eR    gpars, e0.1
  val?            %459.1 = Force!<wrapped>    !v    %459.0, e0.1   <vec+>
  val?            %459.2 = CallBuiltin        !v    names(%459.1) e0.1   <(nil|str)->
  lgl$#-          %459.3 = IsType                   %459.2 isA val?-
  void                    Branch                   %459.3 -> BB461 (if true) | BB462 (if false)
BB460   <- [457]
  void                    Nop                !     
  val?^ | miss    %460.1 = %457.0
  dr              %460.2 = CallTarget@0x55eeee44c058[Call#87]
  goto BB136
BB461   <- [459]
  val?-           %461.0 = CastType           d     dn %459.2   <(nil|str)->
  val+            %461.1 = CallSafeBuiltin    wed   match("font", %461.0, NA, nil)    <int$->
  lgl$#-          %461.2 = IsType                   %461.1 isA int$-
  void                    Branch                   %461.2 -> BB463 (if true) | BB464 (if false)
BB462   <- [459]
  prom-           %462.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p16, e0.1
  val?^           %462.1 = CastType                 up %462.0
  fs              %462.2 = FrameState         R     0x55eeedf72df0+2777: [<blt is.na>], env=e0.1
  env             e462.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%462.1, x="font", parent=R_BaseNamespace, context 0
  fs              %462.4 = FrameState         R     0x55eeec291d40+23: ["font"], env=e462.3, next=%462.2
  fs              %462.5 = FrameState         R     0x55eeedd61150+32(pr): [%459.2], env=e0.1, next=%462.4
  void                    Deopt              !v    %462.5, Typecheck@0x55eeec2e4cb0[Type#1], %459.2   !
BB463   <- [461]
  int$-           %463.0 = CastType           d     dn %461.1
  lgl$-           %463.1 = CallSafeBuiltin    wed   is.na(%463.0)    <lgl$->
  lgl$-           %463.2 = Not                d     %463.1, elided
  lgl$#-          %463.3 = CheckTrueFalse     e     %463.2
  void                    Branch                   %463.3 -> BB162 (if true) | BB145 (if false)
BB464   <- [461]
  prom-           %464.0 = MkArg                    %461.0, validGP[0x55eeeea36900]_p16 (!refl), e0.1
  val?~           %464.1 = CastType                 up %464.0
  fs              %464.2 = FrameState         R     0x55eeedf72df0+2777: [<blt is.na>], env=e0.1
  env             e464.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%464.1, x="font", parent=R_BaseNamespace, context 0
  fs              %464.4 = FrameState         R     0x55eeec291d40+69: [%461.1], env=e464.3, next=%464.2
  void                    Deopt              !v    %464.4, Typecheck@0x55eeee44c058[Type#121], %461.1   !
BB162   <- [463]
  (cls|spec|blt)  %162.0 = LdFun              !v    $, e0.1
  fs              %162.1 = FrameState         R     0x55eeedf72df0+2821: [%162.0], env=e0.1
  void                    Deopt              !v    %162.1, DeadCall@0x55eeee44c058[Call#88], %162.0   !
BB145   <- [463]
  val?^ | miss    %145.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %145.1 = Identical                <blt is.na>, %145.0   <true>
  void                    Branch                   %145.1 -> BB465 (if true) | BB466 (if false)
BB465   <- [145]
  val?^ | miss    %465.0 = LdVar              eR    match, e0.1
  lgl$#-          %465.1 = Identical                %465.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %465.1 -> BB467 (if true) | BB468 (if false)
BB466   <- [145]
  void                    Nop                !     
  lgl$#-          %466.1 = %145.1
  dr              %466.2 = DeadBranchReached@0x55eeee44c058[Test#11]
  goto BB143
BB467   <- [465]
  val?^ | miss    %467.0 = LdVar              eR    names, e0.1
  lgl$#-          %467.1 = Identical                %467.0, <blt names>
  void                    Branch                   %467.1 -> BB469 (if true) | BB470 (if false)
BB468   <- [465]
  void                    Nop                !     
  val?^ | miss    %468.1 = %465.0
  dr              %468.2 = CallTarget@0x55eeee44c058[Call#99]
  goto BB143
BB143   <- [466, 468, 470]
  val?^ | miss    %143.0 = Phi                      %466.1:BB466, %468.1:BB468, %470.1:BB470
  val?^ | miss    %143.1 = %143.0
  dr              %143.2 = Phi                      %466.2:BB466, %468.2:BB468, %470.2:BB470
  dr              %143.3 = %143.2
  fs              %143.4 = FrameState         R     0x55eeedf72df0+2799: [%463.1], env=e0.1
  void                    Deopt              !v    %143.4, %143.3, %143.1   !
BB469   <- [467]
  val?^ | miss    %469.0 = LdVar              eR    gpars, e0.1
  val?            %469.1 = Force!<wrapped>    !v    %469.0, e0.1   <vec+>
  val?            %469.2 = CallBuiltin        !v    names(%469.1) e0.1   <(nil|str)->
  lgl$#-          %469.3 = IsType                   %469.2 isA val?-
  void                    Branch                   %469.3 -> BB471 (if true) | BB472 (if false)
BB470   <- [467]
  void                    Nop                !     
  val?^ | miss    %470.1 = %467.0
  dr              %470.2 = CallTarget@0x55eeee44c058[Call#100]
  goto BB143
BB471   <- [469]
  val?-           %471.0 = CastType           d     dn %469.2   <(nil|str)->
  val+            %471.1 = CallSafeBuiltin    wed   match("fontfamily", %471.0, NA, nil)    <int$->
  lgl$#-          %471.2 = IsType                   %471.1 isA int$-
  void                    Branch                   %471.2 -> BB473 (if true) | BB474 (if false)
BB472   <- [469]
  prom-           %472.0 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p18, e0.1
  val?^           %472.1 = CastType                 up %472.0
  fs              %472.2 = FrameState         R     0x55eeedf72df0+3080: [<blt is.na>], env=e0.1
  env             e472.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%472.1, x="fontfamily", parent=R_BaseNamespace, context 0
  fs              %472.4 = FrameState         R     0x55eeec291d40+23: ["fontfamily"], env=e472.3, next=%472.2
  fs              %472.5 = FrameState         R     0x55eeee24ec10+32(pr): [%469.2], env=e0.1, next=%472.4
  void                    Deopt              !v    %472.5, Typecheck@0x55eeec2e4cb0[Type#1], %469.2   !
BB473   <- [471]
  int$-           %473.0 = CastType           d     dn %471.1
  lgl$-           %473.1 = CallSafeBuiltin    wed   is.na(%473.0)    <lgl$->
  lgl$-           %473.2 = Not                d     %473.1, elided
  lgl$#-          %473.3 = CheckTrueFalse     e     %473.2
  void                    Branch                   %473.3 -> BB161 (if true) | BB152 (if false)
BB474   <- [471]
  prom-           %474.0 = MkArg                    %471.0, validGP[0x55eeeea36900]_p18 (!refl), e0.1
  val?~           %474.1 = CastType                 up %474.0
  fs              %474.2 = FrameState         R     0x55eeedf72df0+3080: [<blt is.na>], env=e0.1
  env             e474.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%474.1, x="fontfamily", parent=R_BaseNamespace, context 0
  fs              %474.4 = FrameState         R     0x55eeec291d40+69: [%471.1], env=e474.3, next=%474.2
  void                    Deopt              !v    %474.4, Typecheck@0x55eeee44c058[Type#141], %471.1   !
BB161   <- [473]
  (cls|spec|blt)  %161.0 = LdFun              !v    $, e0.1
  fs              %161.1 = FrameState         R     0x55eeedf72df0+3124: [%161.0], env=e0.1
  void                    Deopt              !v    %161.1, DeadCall@0x55eeee44c058[Call#101], %161.0   !
BB152   <- [473]
  val?^ | miss    %152.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %152.1 = Identical                <blt is.na>, %152.0   <true>
  void                    Branch                   %152.1 -> BB475 (if true) | BB476 (if false)
BB475   <- [152]
  val?^ | miss    %475.0 = LdVar              eR    match, e0.1
  lgl$#-          %475.1 = Identical                %475.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %475.1 -> BB477 (if true) | BB478 (if false)
BB476   <- [152]
  void                    Nop                !     
  lgl$#-          %476.1 = %152.1
  dr              %476.2 = DeadBranchReached@0x55eeee44c058[Test#12]
  goto BB150
BB477   <- [475]
  val?^ | miss    %477.0 = LdVar              eR    names, e0.1
  lgl$#-          %477.1 = Identical                %477.0, <blt names>
  void                    Branch                   %477.1 -> BB479 (if true) | BB480 (if false)
BB478   <- [475]
  void                    Nop                !     
  val?^ | miss    %478.1 = %475.0
  dr              %478.2 = CallTarget@0x55eeee44c058[Call#113]
  goto BB150
BB150   <- [476, 478, 480]
  val?^ | miss    %150.0 = Phi                      %476.1:BB476, %478.1:BB478, %480.1:BB480
  val?^ | miss    %150.1 = %150.0
  dr              %150.2 = Phi                      %476.2:BB476, %478.2:BB478, %480.2:BB480
  dr              %150.3 = %150.2
  fs              %150.4 = FrameState         R     0x55eeedf72df0+3102: [%473.1], env=e0.1
  void                    Deopt              !v    %150.4, %150.3, %150.1   !
BB479   <- [477]
  val?^ | miss    %479.0 = LdVar              eR    gpars, e0.1
  val?            %479.1 = Force!<wrapped>    !v    %479.0, e0.1   <vec+>
  val?            %479.2 = CallBuiltin        !v    names(%479.1) e0.1   <(nil|str)->
  lgl$#-          %479.3 = IsType                   %479.2 isA val?-
  void                    Branch                   %479.3 -> BB481 (if true) | BB482 (if false)
BB480   <- [477]
  void                    Nop                !     
  val?^ | miss    %480.1 = %477.0
  dr              %480.2 = CallTarget@0x55eeee44c058[Call#114]
  goto BB150
BB481   <- [479]
  val?-           %481.0 = CastType           d     dn %479.2   <(nil|str)->
  val+            %481.1 = CallSafeBuiltin    wed   match("fontface", %481.0, NA, nil)    <int$->
  lgl$#-          %481.2 = IsType                   %481.1 isA int$-
  void                    Branch                   %481.2 -> BB483 (if true) | BB484 (if false)
BB482   <- [479]
  fs              %482.0 = FrameState         R     0x55eeedf72df0+3416: [<blt is.na>], env=e0.1
  prom-           %482.1 = MkArg                    unboundValue, validGP[0x55eeeea36900]_p20, e0.1
  val?^           %482.2 = CastType                 up %482.1
  env             e482.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%482.2, x="fontface", parent=R_BaseNamespace, context 0
  fs              %482.4 = FrameState         R     0x55eeec291d40+23: ["fontface"], env=e482.3, next=%482.0
  fs              %482.5 = FrameState         R     0x55eeee012680+32(pr): [%479.2], env=e0.1, next=%482.4
  void                    Deopt              !v    %482.5, Typecheck@0x55eeec2e4cb0[Type#1], %479.2   !
BB483   <- [481]
  int$-           %483.0 = CastType           d     dn %481.1
  lgl$-           %483.1 = CallSafeBuiltin    wed   is.na(%483.0)    <lgl$->
  lgl$-           %483.2 = Not                d     %483.1, elided
  lgl$#-          %483.3 = CheckTrueFalse     e     %483.2
  void                    Branch                   %483.3 -> BB158 (if true) | BB157 (if false)
BB484   <- [481]
  prom-           %484.0 = MkArg                    %481.0, validGP[0x55eeeea36900]_p20 (!refl), e0.1
  val?~           %484.1 = CastType                 up %484.0
  fs              %484.2 = FrameState         R     0x55eeedf72df0+3416: [<blt is.na>], env=e0.1
  env             e484.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%484.1, x="fontface", parent=R_BaseNamespace, context 0
  fs              %484.4 = FrameState         R     0x55eeec291d40+69: [%481.1], env=e484.3, next=%484.2
  void                    Deopt              !v    %484.4, Typecheck@0x55eeee44c058[Type#161], %481.1   !
BB158   <- [483]
  val?^ | miss    %158.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %158.1 = Identical                <blt is.na>, %158.0   <@?>
  void                    Branch                   %158.1 -> BB160 (if true) | BB159 (if false)
BB157   <- [483]
  val?^ | miss    %157.0 = LdVar              eR    gpars, e0.1
  void                    Visible            v     
  val?            %157.2 = Force!<wrapped>    !     %157.0, e0.1   <vec+>
  void                    Return             l     %157.2
BB160   <- [158]
  (cls|spec|blt)  %160.0 = LdFun              !v    match, e0.1
  fs              %160.1 = FrameState         R     0x55eeedf72df0+3520: [<blt is.na>, %160.0], env=e0.1
  void                    Deopt              !v    %160.1, DeadCall@0x55eeee44c058[Call#118], %160.0   !
BB159   <- [158]
  (cls|spec|blt)  %159.0 = LdFun              !v    is.na, e0.1
  fs              %159.1 = FrameState         R     0x55eeedf72df0+3483: [%159.0], env=e0.1
  void                    Deopt              !v    %159.1, DeadCall@0x55eeee44c058[Call#115], %159.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p15, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p17, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p19, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p21, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fill, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55eeeba7cc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p25, e0.0
  prom-           %0.3  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p26, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fill, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    col, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p30, e0.0
  prom-           %0.3  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p31, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    col, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p34, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p38, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p42, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p46, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p50, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p57, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 63:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eeeea36900]_p72, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <nil->
  void                    Return             l     %0.3
Prom 72:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ validGP[0x55eeeea36900]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
