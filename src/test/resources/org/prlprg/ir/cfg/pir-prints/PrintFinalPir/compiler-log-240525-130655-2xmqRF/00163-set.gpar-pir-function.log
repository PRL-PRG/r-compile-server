
┌──────────────────────────────────────────────────────────────────────────────┐
│ set.gpar[0x55eeedc94950]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:                                                                  │
├────── Final PIR Version
set.gpar[0x55eeedc94950]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.gpar, <env 0x55eeedfdc408>
  lgl$#-          %0.2  = Identical                %0.1, function(x) <(rir::DispatchTable*)0x55eeee43df|...
  void                    Branch                   %0.2 -> BB81 (if true) | BB82 (if false)
BB81   <- [0]
  env             e81.0 = MkEnv              l     gp=%0.0, grob(miss)=nil, parent=<env 0x55eeedfdc408>, context 1
  prom-           %81.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p1, e81.0
  ct              %81.2 = PushContext        lCL   %81.1, is.gpar(gp), function(x) <(rir::DispatchTable*)0x55eeee43df|..., e81.0
  val?^           %81.3 = CastType                 up %81.1
  val?^ | miss    %81.4 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %81.5 = Identical                %81.4, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %81.5 -> BB83 (if true) | BB84 (if false)
BB82   <- [0]
  env             e82.0 = (MkEnv)            l     gp=%0.0, grob(miss)=nil, parent=<env 0x55eeedfdc408>, context 1
  fs              %82.1 = FrameState         R     0x55eeeec76f60+0: [], env=e82.0
  void                    Deopt              !v    %82.1, CallTarget@0x55eeeec356c8[Call#0], %0.1
BB83   <- [81]
  env             e83.0 = MkEnv              l     x=%81.3, parent=<env 0x55eeedfdc408>, context 1
  prom-           %83.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p36, e83.0
  ct              %83.2 = PushContext        lCL   %83.1, "gpar", inherits(x, "gpar"), function(x, what, which=FALSE) <(rir::Dispatch|..., e83.0
  val?^           %83.3 = CastType                 up %83.1
  env             e83.4 = MkEnv              l     x=%83.3, what="gpar", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %83.5 = Force!<lazy>       !vr   %83.3,    <val?>
  val?            %83.6 = CallBuiltin        !v    inherits(%83.5, "gpar", false) e83.4
  val?            %83.7 = PopContext         C     %83.6, %83.2   <lgl$->
  lgl$#-          %83.8 = IsType                   %83.7 isA lgl$-
  void                    Branch                   %83.8 -> BB85 (if true) | BB86 (if false)
BB84   <- [81]
  fs              %84.0 = FrameState         R     0x55eeeec76f60+32: [], env=e81.0
  env             e84.1 = (MkEnv)            l     x=%81.3, parent=<env 0x55eeedfdc408>, context 1
  fs              %84.2 = FrameState         R     0x55eeee508480+0: [], env=e84.1, next=%84.0
  void                    Deopt              !v    %84.2, CallTarget@0x55eeedb8d2a8[Call#0], %81.4   !
BB85   <- [83]
  lgl$-           %85.0 = CastType           d     dn %83.7
  val?            %85.1 = PopContext         C     %85.0, %81.2   <lgl$->
  lgl$#-          %85.2 = IsType                   %85.1 isA lgl$-
  void                    Branch                   %85.2 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  fs              %86.0 = FrameState         R     0x55eeeec76f60+32: [], env=e81.0
  fs              %86.1 = FrameState         R     0x55eeee508480+37: [%83.7], env=e83.0, next=%86.0
  void                    Deopt              !v    %86.1, Typecheck@0x55eeedb8d2a8[Type#1], %83.7   !
BB87   <- [85]
  lgl$-           %87.0 = CastType           d     dn %85.1
  lgl$-           %87.1 = Not                d     %87.0, elided
  lgl$#-          %87.2 = CheckTrueFalse     e     %87.1
  void                    Branch                   %87.2 -> BB79 (if true) | BB9 (if false)
BB88   <- [85]
  void                    Nop                !     
  val?            %88.1 = %85.1
  dr              %88.2 = Typecheck@0x55eeeec356c8[Type#1]
  goto BB7
BB79   <- [87]
  (cls|spec|blt)  %79.0 = LdFun              !v    stop, e81.0
  fs              %79.1 = FrameState         R     0x55eeeec76f60+54: [%79.0], env=e81.0
  void                    Deopt              !v    %79.1, DeadCall@0x55eeeec356c8[Call#1], %79.0   !
BB9   <- [87]
  val?^ | miss    %9.0  = LdVar              eR    grid.Call, e81.0
  lgl$#-          %9.1  = Identical                %9.0, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %9.1 -> BB89 (if true) | BB90 (if false)
BB7   <- [88, 90]
  val?^ | miss    %7.0  = Phi                      %88.1:BB88, %90.1:BB90
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %88.2:BB88, %90.2:BB90
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55eeeec76f60+32: [%85.1], env=e81.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB89   <- [9]
  prom-           %89.0 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p2, e81.0
  ct              %89.1 = PushContext        lCL   %89.0, grid.Call(C_getGPar), function(fnname, ...) <(rir::DispatchTable*)0x|..., e81.0
  val?^           %89.2 = CastType                 up %89.0
  val?^ | miss    %89.3 = LdVar              eR    .Call, <env 0x55eeedfdc408>
  lgl$#-          %89.4 = Identical                <blt .Call>, %89.3   <true>
  void                    Branch                   %89.4 -> BB91 (if true) | BB92 (if false)
BB90   <- [9]
  void                    Nop                !     
  val?^ | miss    %90.1 = %9.0
  dr              %90.2 = CallTarget@0x55eeeec356c8[Call#2]
  goto BB7
BB91   <- [89]
  val?^ | miss    %91.0 = LdVar              eR    C_gridDirty, <env 0x55eeedfdc408>
  env             e91.1 = MkEnv              l     fnname=%89.2, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  val?            %91.2 = Force!<value>      !v    %91.0, e91.1   <vec>
  val?            %91.3 = CallBuiltin        !v    .Call(%91.2) e91.1
  (cls|spec|blt)  %91.4 = LdFun              !v    .Call, <0x55eeeba90d38>, e91.1
  prom-           %91.5 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p38, e91.1
  (miss|dots)     %91.6 = LdDots             R     , e91.1
  *dots-          %91.7 = ExpandDots               %91.6
  val?            %91.8 = NamedCall          !v    %91.4(%91.5, .xpandDotsTrigger=%91.7) e91.1   <val?>
  val?            %91.9 = PopContext         C     %91.8, %89.1   <vec>
  void                    StVar              lW    temp, %91.9, e81.0
  val?^ | miss    %91.11 = LdVar              eR    %in%, e81.0
  lgl$#-          %91.12 = Identical                %91.11, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %91.12 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  fs              %92.0 = FrameState         R     0x55eeeec76f60+114: [], env=e81.0
  env             e92.1 = (MkEnv)            l     fnname=%89.2, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  fs              %92.2 = FrameState         R     0x55eeeee353e0+17: [<blt .Call>, %89.4], env=e92.1, next=%92.0
  void                    Deopt              !v    %92.2, DeadBranchReached@0x55eeefb7c318[Test#0], %89.4   !
BB93   <- [91]
  prom-           %93.0 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p3, e81.0
  val?            %93.1 = StaticCall         !v    %in%[0x55eeee9f93c0]("gamma", %93.0) e81.0   <lgl$->
  lgl$#-          %93.2 = IsType                   %93.1 isA lgl$-
  void                    Branch                   %93.2 -> BB95 (if true) | BB96 (if false)
BB94   <- [91]
  fs              %94.0 = FrameState         R     0x55eeeec76f60+128: [], env=e81.0
  void                    Deopt              !v    %94.0, CallTarget@0x55eeeec356c8[Call#3], %91.11   !
BB95   <- [93]
  lgl$-           %95.0 = CastType           d     dn %93.1
  lgl$#-          %95.1 = CheckTrueFalse     e     %95.0
  void                    Branch                   %95.1 -> BB78 (if true) | BB16 (if false)
BB96   <- [93]
  void                    Nop                !     
  val?            %96.1 = %93.1
  dr              %96.2 = Typecheck@0x55eeeec356c8[Type#6]
  goto BB14
BB78   <- [95]
  (cls|spec|blt)  %78.0 = LdFun              !v    warning, e81.0
  fs              %78.1 = FrameState         R     0x55eeeec76f60+186: [%78.0], env=e81.0
  void                    Deopt              !v    %78.1, DeadCall@0x55eeeec356c8[Call#5], %78.0   !
BB16   <- [95]
  val?^ | miss    %16.0 = LdVar              eR    match, e81.0
  lgl$#-          %16.1 = Identical                %16.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %16.1 -> BB97 (if true) | BB98 (if false)
BB14   <- [96, 98, 100]
  val?^ | miss    %14.0 = Phi                      %96.1:BB96, %98.1:BB98, %100.1:BB100
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %96.2:BB96, %98.2:BB98, %100.2:BB100
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55eeeec76f60+165: [%93.1], env=e81.0
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB97   <- [16]
  val?^ | miss    %97.0 = LdVar              eR    names, e81.0
  lgl$#-          %97.1 = Identical                %97.0, <blt names>
  void                    Branch                   %97.1 -> BB99 (if true) | BB100 (if false)
BB98   <- [16]
  void                    Nop                !     
  val?^ | miss    %98.1 = %16.0
  dr              %98.2 = CallTarget@0x55eeeec356c8[Call#8]
  goto BB14
BB99   <- [97]
  val?^ | miss    %99.0 = LdVar              eR    gp, e81.0
  val?            %99.1 = Force!<wrapped>    !v    %99.0, e81.0   <vec>
  val?            %99.2 = CallBuiltin        !v    names(%99.1) e81.0   <(nil|str)->
  lgl$#-          %99.3 = IsType                   %99.2 isA val?-
  void                    Branch                   %99.3 -> BB101 (if true) | BB102 (if false)
BB100   <- [97]
  void                    Nop                !     
  val?^ | miss    %100.1 = %97.0
  dr              %100.2 = CallTarget@0x55eeeec356c8[Call#9]
  goto BB14
BB101   <- [99]
  val?-           %101.0 = CastType           d     dn %99.2   <(nil|str)->
  val+            %101.1 = CallSafeBuiltin    wed   match("cex", %101.0, 0L, nil)    <int$->
  lgl$#-          %101.2 = IsType                   %101.1 isA int$-
  void                    Branch                   %101.2 -> BB103 (if true) | BB104 (if false)
BB102   <- [99]
  prom-           %102.0 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p5, e81.0
  val?^           %102.1 = CastType                 up %102.0
  fs              %102.2 = FrameState         R     0x55eeeec76f60+306: [], env=e81.0
  env             e102.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%102.1, x="cex", parent=R_BaseNamespace, context 0
  fs              %102.4 = FrameState         R     0x55eeec291d40+23: ["cex"], env=e102.3, next=%102.2
  fs              %102.5 = FrameState         R     0x55eeeef89430+32(pr): [%99.2], env=e81.0, next=%102.4
  void                    Deopt              !v    %102.5, Typecheck@0x55eeec2e4cb0[Type#1], %99.2   !
BB103   <- [101]
  int$-           %103.0 = CastType           d     dn %101.1
  lgl$#-          %103.1 = CheckTrueFalse     e     %103.0
  void                    Branch                   %103.1 -> BB77 (if true) | BB21 (if false)
BB104   <- [101]
  prom-           %104.0 = MkArg                    %101.0, set.gpar[0x55eeedc94950]_p5 (!refl), e81.0
  val?~           %104.1 = CastType                 up %104.0
  fs              %104.2 = FrameState         R     0x55eeeec76f60+306: [], env=e81.0
  env             e104.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%104.1, x="cex", parent=R_BaseNamespace, context 0
  fs              %104.4 = FrameState         R     0x55eeec291d40+69: [%101.1], env=e104.3, next=%104.2
  void                    Deopt              !v    %104.4, Typecheck@0x55eeeec356c8[Type#12], %101.1   !
BB77   <- [103]
  (cls|spec|blt)  %77.0 = LdFun              !v    $, e81.0
  fs              %77.1 = FrameState         R     0x55eeeec76f60+378: [%77.0], env=e81.0
  void                    Deopt              !v    %77.1, DeadCall@0x55eeeec356c8[Call#11], %77.0   !
BB21   <- [103]
  (cls|spec|blt)  %21.0 = LdFun              !v    $, <0x55eeeba7cc10>, e81.0
  prom-           %21.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p7, e81.0
  prom-           %21.2 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p8, e81.0
  val?            %21.3 = Call               !v    %21.0(%21.1, %21.2) e81.0   <real$->
  lgl$#-          %21.4 = IsType                   %21.3 isA real$-
  void                    Branch                   %21.4 -> BB105 (if true) | BB106 (if false)
BB105   <- [21]
  real$-          %105.0 = CastType           d     dn %21.3
  void                    StVar              lW    tempcex, %105.0, e81.0
  val?^ | miss    %105.2 = LdVar              eR    match, e81.0
  lgl$#-          %105.3 = Identical                %105.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %105.3 -> BB107 (if true) | BB108 (if false)
BB106   <- [21]
  fs              %106.0 = FrameState         R     0x55eeeec76f60+354: [%21.3], env=e81.0
  void                    Deopt              !v    %106.0, Typecheck@0x55eeeec356c8[Type#15], %21.3   !
BB107   <- [105]
  val?^ | miss    %107.0 = LdVar              eR    names, e81.0
  lgl$#-          %107.1 = Identical                %107.0, <blt names>
  void                    Branch                   %107.1 -> BB109 (if true) | BB110 (if false)
BB108   <- [105]
  void                    Nop                !     
  val?^ | miss    %108.1 = %105.2
  dr              %108.2 = CallTarget@0x55eeeec356c8[Call#13]
  goto BB24
BB109   <- [107]
  val?^ | miss    %109.0 = LdVar              eR    gp, e81.0
  val?            %109.1 = Force!<wrapped>    !v    %109.0, e81.0   <vec>
  val?            %109.2 = CallBuiltin        !v    names(%109.1) e81.0   <(nil|str)->
  lgl$#-          %109.3 = IsType                   %109.2 isA val?-
  void                    Branch                   %109.3 -> BB111 (if true) | BB112 (if false)
BB110   <- [107]
  void                    Nop                !     
  val?^ | miss    %110.1 = %107.0
  dr              %110.2 = CallTarget@0x55eeeec356c8[Call#14]
  goto BB24
BB24   <- [108, 110]
  val?^ | miss    %24.0 = Phi                      %108.1:BB108, %110.1:BB110
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %108.2:BB108, %110.2:BB110
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x55eeeec76f60+368: [], env=e81.0
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB111   <- [109]
  val?-           %111.0 = CastType           d     dn %109.2   <(nil|str)->
  val+            %111.1 = CallSafeBuiltin    wed   match("alpha", %111.0, 0L, nil)    <int$->
  lgl$#-          %111.2 = IsType                   %111.1 isA int$-
  void                    Branch                   %111.2 -> BB113 (if true) | BB114 (if false)
BB112   <- [109]
  fs              %112.0 = FrameState         R     0x55eeeec76f60+526: [], env=e81.0
  prom-           %112.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p9, e81.0
  val?^           %112.2 = CastType                 up %112.1
  env             e112.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%112.2, x="alpha", parent=R_BaseNamespace, context 0
  fs              %112.4 = FrameState         R     0x55eeec291d40+23: ["alpha"], env=e112.3, next=%112.0
  fs              %112.5 = FrameState         R     0x55eeee3c0620+32(pr): [%109.2], env=e81.0, next=%112.4
  void                    Deopt              !v    %112.5, Typecheck@0x55eeec2e4cb0[Type#1], %109.2   !
BB113   <- [111]
  int$-           %113.0 = CastType           d     dn %111.1
  lgl$#-          %113.1 = CheckTrueFalse     e     %113.0
  void                    Branch                   %113.1 -> BB76 (if true) | BB30 (if false)
BB114   <- [111]
  prom-           %114.0 = MkArg                    %111.0, set.gpar[0x55eeedc94950]_p9 (!refl), e81.0
  val?~           %114.1 = CastType                 up %114.0
  fs              %114.2 = FrameState         R     0x55eeeec76f60+526: [], env=e81.0
  env             e114.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%114.1, x="alpha", parent=R_BaseNamespace, context 0
  fs              %114.4 = FrameState         R     0x55eeec291d40+69: [%111.1], env=e114.3, next=%114.2
  void                    Deopt              !v    %114.4, Typecheck@0x55eeeec356c8[Type#25], %111.1   !
BB76   <- [113]
  (cls|spec|blt)  %76.0 = LdFun              !v    $, e81.0
  fs              %76.1 = FrameState         R     0x55eeeec76f60+598: [%76.0], env=e81.0
  void                    Deopt              !v    %76.1, DeadCall@0x55eeeec356c8[Call#16], %76.0   !
BB30   <- [113]
  (cls|spec|blt)  %30.0 = LdFun              !v    $, <0x55eeeba7cc10>, e81.0
  prom-           %30.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p11, e81.0
  prom-           %30.2 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p12, e81.0
  val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e81.0   <real$->
  lgl$#-          %30.4 = IsType                   %30.3 isA real$-
  void                    Branch                   %30.4 -> BB115 (if true) | BB116 (if false)
BB115   <- [30]
  real$-          %115.0 = CastType           d     dn %30.3
  void                    StVar              lW    tempalpha, %115.0, e81.0
  val?^ | miss    %115.2 = LdVar              eR    match, e81.0
  lgl$#-          %115.3 = Identical                %115.2, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %115.3 -> BB117 (if true) | BB118 (if false)
BB116   <- [30]
  fs              %116.0 = FrameState         R     0x55eeeec76f60+574: [%30.3], env=e81.0
  void                    Deopt              !v    %116.0, Typecheck@0x55eeeec356c8[Type#28], %30.3   !
BB117   <- [115]
  val?^ | miss    %117.0 = LdVar              eR    names, e81.0
  lgl$#-          %117.1 = Identical                %117.0, <blt names>
  void                    Branch                   %117.1 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  void                    Nop                !     
  val?^ | miss    %118.1 = %115.2
  dr              %118.2 = CallTarget@0x55eeeec356c8[Call#18]
  goto BB33
BB119   <- [117]
  val?^ | miss    %119.0 = LdVar              eR    gp, e81.0
  val?            %119.1 = Force!<wrapped>    !v    %119.0, e81.0   <vec>
  val?            %119.2 = CallBuiltin        !v    names(%119.1) e81.0   <(nil|str)->
  lgl$#-          %119.3 = IsType                   %119.2 isA val?-
  void                    Branch                   %119.3 -> BB121 (if true) | BB122 (if false)
BB120   <- [117]
  void                    Nop                !     
  val?^ | miss    %120.1 = %117.0
  dr              %120.2 = CallTarget@0x55eeeec356c8[Call#19]
  goto BB33
BB33   <- [118, 120]
  val?^ | miss    %33.0 = Phi                      %118.1:BB118, %120.1:BB120
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %118.2:BB118, %120.2:BB120
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55eeeec76f60+588: [], env=e81.0
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB121   <- [119]
  val?-           %121.0 = CastType           d     dn %119.2   <(nil|str)->
  val+            %121.1 = CallSafeBuiltin    wed   match("lex", %121.0, 0L, nil)    <int$->
  lgl$#-          %121.2 = IsType                   %121.1 isA int$-
  void                    Branch                   %121.2 -> BB123 (if true) | BB124 (if false)
BB122   <- [119]
  prom-           %122.0 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p13, e81.0
  val?^           %122.1 = CastType                 up %122.0
  fs              %122.2 = FrameState         R     0x55eeeec76f60+746: [], env=e81.0
  env             e122.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%122.1, x="lex", parent=R_BaseNamespace, context 0
  fs              %122.4 = FrameState         R     0x55eeec291d40+23: ["lex"], env=e122.3, next=%122.2
  fs              %122.5 = FrameState         R     0x55eeee0c40f0+32(pr): [%119.2], env=e81.0, next=%122.4
  void                    Deopt              !v    %122.5, Typecheck@0x55eeec2e4cb0[Type#1], %119.2   !
BB123   <- [121]
  int$-           %123.0 = CastType           d     dn %121.1
  lgl$#-          %123.1 = CheckTrueFalse     e     %123.0
  void                    Branch                   %123.1 -> BB75 (if true) | BB39 (if false)
BB124   <- [121]
  prom-           %124.0 = MkArg                    %121.0, set.gpar[0x55eeedc94950]_p13 (!refl), e81.0
  val?~           %124.1 = CastType                 up %124.0
  fs              %124.2 = FrameState         R     0x55eeeec76f60+746: [], env=e81.0
  env             e124.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%124.1, x="lex", parent=R_BaseNamespace, context 0
  fs              %124.4 = FrameState         R     0x55eeec291d40+69: [%121.1], env=e124.3, next=%124.2
  void                    Deopt              !v    %124.4, Typecheck@0x55eeeec356c8[Type#38], %121.1   !
BB75   <- [123]
  (cls|spec|blt)  %75.0 = LdFun              !v    $, e81.0
  fs              %75.1 = FrameState         R     0x55eeeec76f60+818: [%75.0], env=e81.0
  void                    Deopt              !v    %75.1, DeadCall@0x55eeeec356c8[Call#21], %75.0   !
BB39   <- [123]
  (cls|spec|blt)  %39.0 = LdFun              !v    $, <0x55eeeba7cc10>, e81.0
  prom-           %39.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p15, e81.0
  prom-           %39.2 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p16, e81.0
  val?            %39.3 = Call               !v    %39.0(%39.1, %39.2) e81.0   <real$->
  lgl$#-          %39.4 = IsType                   %39.3 isA real$-
  void                    Branch                   %39.4 -> BB125 (if true) | BB126 (if false)
BB125   <- [39]
  real$-          %125.0 = CastType           d     dn %39.3
  void                    StVar              lW    templex, %125.0, e81.0
  val?^ | miss    %125.2 = LdVar              eR    is.pattern, e81.0
  lgl$#-          %125.3 = Identical                %125.2, function(x) <(rir::DispatchTable*)0x55eeee33d9|...
  void                    Branch                   %125.3 -> BB127 (if true) | BB128 (if false)
BB126   <- [39]
  fs              %126.0 = FrameState         R     0x55eeeec76f60+794: [%39.3], env=e81.0
  void                    Deopt              !v    %126.0, Typecheck@0x55eeeec356c8[Type#41], %39.3   !
BB127   <- [125]
  prom-           %127.0 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p17, e81.0
  ct              %127.1 = PushContext        lCL   %127.0, is.pattern($(gp, fill)), function(x) <(rir::DispatchTable*)0x55eeee33d9|..., e81.0
  val?^           %127.2 = CastType                 up %127.0
  val?^ | miss    %127.3 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %127.4 = Identical                %127.3, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %127.4 -> BB129 (if true) | BB130 (if false)
BB128   <- [125]
  fs              %128.0 = FrameState         R     0x55eeeec76f60+808: [], env=e81.0
  void                    Deopt              !v    %128.0, CallTarget@0x55eeeec356c8[Call#23], %125.2   !
BB129   <- [127]
  env             e129.0 = MkEnv              l     x=%127.2, parent=<env 0x55eeedfdc408>, context 1
  prom-           %129.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p43, e129.0
  ct              %129.2 = PushContext        lCL   %129.1, "GridPattern", inherits(x, "GridPattern"), function(x, what, which=FALSE) <(rir::Dispatch|..., e129.0
  val?^           %129.3 = CastType                 up %129.1
  env             e129.4 = MkEnv              l     x=%129.3, what="GridPattern", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %129.5 = Force!<lazy>       !vL   %129.3, e129.4   <val?>
  val?            %129.6 = CallBuiltin        !v    inherits(%129.5, "GridPattern", false) e129.4
  val?            %129.7 = PopContext         C     %129.6, %129.2   <lgl$->
  lgl$#-          %129.8 = IsType                   %129.7 isA lgl$-
  void                    Branch                   %129.8 -> BB131 (if true) | BB132 (if false)
BB130   <- [127]
  fs              %130.0 = FrameState         R     0x55eeeec76f60+944: [], env=e81.0
  env             e130.1 = (MkEnv)            l     x=%127.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %130.2 = FrameState         R     0x55eeedb21e80+0: [], env=e130.1, next=%130.0
  void                    Deopt              !v    %130.2, CallTarget@0x55eeefb7bfa8[Call#0], %127.3   !
BB131   <- [129]
  lgl$-           %131.0 = CastType           d     dn %129.7
  val?            %131.1 = PopContext         C     %131.0, %127.1   <lgl$->
  lgl$#-          %131.2 = IsType                   %131.1 isA lgl$-
  void                    Branch                   %131.2 -> BB133 (if true) | BB134 (if false)
BB132   <- [129]
  fs              %132.0 = FrameState         R     0x55eeeec76f60+944: [], env=e81.0
  fs              %132.1 = FrameState         R     0x55eeedb21e80+37: [%129.7], env=e129.0, next=%132.0
  void                    Deopt              !v    %132.1, Typecheck@0x55eeefb7bfa8[Type#1], %129.7   !
BB133   <- [131]
  lgl$-           %133.0 = CastType           d     dn %131.1
  lgl$#-          %133.1 = CheckTrueFalse     e     %133.0
  void                    Branch                   %133.1 -> BB72 (if true) | BB50 (if false)
BB134   <- [131]
  fs              %134.0 = FrameState         R     0x55eeeec76f60+944: [%131.1], env=e81.0
  void                    Deopt              !v    %134.0, Typecheck@0x55eeeec356c8[Type#52], %131.1   !
BB72   <- [133]
  val?^ | miss    %72.0 = LdVar              eR    grob, e81.0
  val?            %72.1 = Force!             !v    %72.0, e81.0   <val?_>
  lgl$-           %72.2 = Is                       %72.1, NULL
  lgl$#-          %72.3 = CheckTrueFalse     e     %72.2
  void                    Branch                   %72.3 -> BB74 (if true) | BB73 (if false)
BB50   <- [133]
  val?^ | miss    %50.0 = LdVar              eR    gp, e81.0
  val?            %50.1 = Force!<wrapped>    !v    %50.0, e81.0   <vec>
  val?^ | miss    %50.2 = LdVar              eR    temp, e81.0
  val?            %50.3 = Force!<value>      !v    %50.2, e81.0   <vec>
  val?^ | miss    %50.4 = LdVar              eR    names, e81.0
  lgl$#-          %50.5 = Identical                <blt names>, %50.4   <true>
  void                    Branch                   %50.5 -> BB135 (if true) | BB136 (if false)
BB74   <- [72]
  (cls|spec|blt)  %74.0 = LdFun              !v    <-, e81.0
  fs              %74.1 = FrameState         R     0x55eeeec76f60+1119: [%74.0], env=e81.0
  void                    Deopt              !v    %74.1, DeadCall@0x55eeeec356c8[Call#35], %74.0   !
BB73   <- [72]
  (cls|spec|blt)  %73.0 = LdFun              !v    inherits, e81.0
  fs              %73.1 = FrameState         R     0x55eeeec76f60+990: [%73.0], env=e81.0
  void                    Deopt              !v    %73.1, DeadCall@0x55eeeec356c8[Call#25], %73.0   !
BB135   <- [50]
  val?^ | miss    %135.0 = LdVar              eR    gp, e81.0
  val?            %135.1 = Force!<wrapped>    !v    %135.0, e81.0   <vec>
  val?            %135.2 = CallBuiltin        !v    names(%135.1) e81.0   <(nil|str)->
  val?            %135.3 = Subassign1_1D      !v    %50.1, %50.3, %135.2, e81.0
  void                    StVar              lW    temp, %135.3, e81.0
  (cls|spec|blt)  %135.5 = LdFun              !v    <-, <0x55eeeba71da8>, e81.0
  prom-           %135.6 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p20, e81.0
  prom-           %135.7 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p23, e81.0
  val?            %135.8 = Call               !v    %135.5(%135.6, %135.7) e81.0
  (cls|spec|blt)  %135.9 = LdFun              !v    <-, <0x55eeeba71da8>, e81.0
  prom-           %135.10 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p24, e81.0
  prom-           %135.11 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p27, e81.0
  val?            %135.12 = Call               !v    %135.9(%135.10, %135.11) e81.0
  (cls|spec|blt)  %135.13 = LdFun              !v    <-, <0x55eeeba71da8>, e81.0
  prom-           %135.14 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p28, e81.0
  prom-           %135.15 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p31, e81.0
  val?            %135.16 = Call               !v    %135.13(%135.14, %135.15) e81.0
  val?^ | miss    %135.17 = LdVar              eR    grob, e81.0
  val?            %135.18 = Force!<lazy>       !v    %135.17, e81.0   <(nil|vec)>
  lgl$-           %135.19 = Is                       %135.18, NULL
  lgl$#-          %135.20 = CheckTrueFalse     e     %135.19
  void                    Branch                   %135.20 -> BB59 (if true) | BB55 (if false)
BB136   <- [50]
  fs              %136.0 = FrameState         R     0x55eeeec76f60+1175: [%50.1, %50.3], env=e81.0
  void                    Deopt              !v    %136.0, DeadBranchReached@0x55eeeec356c8[Test#0], %50.5   !
BB59   <- [135]
  val?^ | miss    %59.0 = LdVar              eR    grid.Call.graphics, e81.0
  lgl$#-          %59.1 = Identical                %59.0, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %59.1 -> BB141 (if true) | BB142 (if false)
BB55   <- [135]
  val?^ | miss    %55.0 = LdVar              eR    grid.Call, e81.0
  lgl$#-          %55.1 = Identical                %55.0, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %55.1 -> BB137 (if true) | BB138 (if false)
BB141   <- [59]
  prom-           %141.0 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p34, e81.0
  prom-           %141.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p35, e81.0
  dots-           %141.2 = DotsList           l     %141.1
  ct              %141.3 = PushContext        lCL   %141.0, %141.2, grid.Call.graphics(C_setGPar, temp), function(fnname, ...) <(rir::DispatchTable*)0x|..., e81.0
  val?^           %141.4 = CastType                 up %141.0
  val?^ | miss    %141.5 = LdVar              eR    grid.Call, <env 0x55eeedfdc408>
  lgl$#-          %141.6 = Identical                %141.5, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %141.6 -> BB143 (if true) | BB144 (if false)
BB142   <- [59]
  void                    Nop                !     
  val?^ | miss    %142.1 = %59.0
  dr              %142.2 = CallTarget@0x55eeeec356c8[Call#49]
  goto BB53
BB137   <- [55]
  prom-           %137.0 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p32, e81.0
  prom-           %137.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p33, e81.0
  dots-           %137.2 = DotsList           l     %137.1
  ct              %137.3 = PushContext        lCL   %137.0, %137.2, grid.Call(C_setGPar, temp), function(fnname, ...) <(rir::DispatchTable*)0x|..., e81.0
  val?^           %137.4 = CastType                 up %137.0
  val?^ | miss    %137.5 = LdVar              eR    .Call, <env 0x55eeedfdc408>
  lgl$#-          %137.6 = Identical                <blt .Call>, %137.5   <true>
  void                    Branch                   %137.6 -> BB139 (if true) | BB140 (if false)
BB138   <- [55]
  void                    Nop                !     
  val?^ | miss    %138.1 = %55.0
  dr              %138.2 = CallTarget@0x55eeeec356c8[Call#48]
  goto BB53
BB143   <- [141]
  env             e143.0 = MkEnv              l     fnname=%141.4, ...=%141.2, parent=<env 0x55eeedfdc408>, context 1
  prom-           %143.1 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p44, e143.0
  ct              %143.2 = PushContext        lCL   %143.1, grid.Call(C_getEngineDLon), function(fnname, ...) <(rir::DispatchTable*)0x|..., e143.0
  val?^           %143.3 = CastType                 up %143.1
  val?^ | miss    %143.4 = LdVar              eR    .Call, <env 0x55eeedfdc408>
  lgl$#-          %143.5 = Identical                <blt .Call>, %143.4   <true>
  void                    Branch                   %143.5 -> BB145 (if true) | BB146 (if false)
BB144   <- [141]
  fs              %144.0 = FrameState         R     0x55eeeec76f60+1509: [], env=e81.0
  env             e144.1 = (MkEnv)            l     fnname=%141.4, ...=%141.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %144.2 = FrameState         R     0x55eeeea1aac0+0: [], env=e144.1, next=%144.0
  void                    Deopt              !v    %144.2, CallTarget@0x55eeef7d8e78[Call#0], %141.5   !
BB53   <- [138, 142]
  val?^ | miss    %53.0 = Phi                      %138.1:BB138, %142.1:BB142
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %138.2:BB138, %142.2:BB142
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x55eeeec76f60+1409: [%135.18], env=e81.0
  void                    Deopt              !v    %53.4, %53.3, %53.1   !
BB139   <- [137]
  val?^ | miss    %139.0 = LdVar              eR    C_gridDirty, <env 0x55eeedfdc408>
  env             e139.1 = MkEnv              l     fnname=%137.4, ...=%137.2, parent=<env 0x55eeedfdc408>, context 1
  val?            %139.2 = Force!<value>      !v    %139.0, e139.1   <vec>
  val?            %139.3 = CallBuiltin        !     .Call(%139.2) e139.1
  (cls|spec|blt)  %139.4 = LdFun              !     .Call, <0x55eeeba90d38>, e139.1
  prom-           %139.5 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p47, e139.1
  (miss|dots)     %139.6 = LdDots             R     , e139.1
  *dots-          %139.7 = ExpandDots               %139.6
  val?            %139.8 = NamedCall          !     %139.4(%139.5, .xpandDotsTrigger=%139.7) e139.1   <val?>
  val?            %139.9 = PopContext         C     %139.8, %137.3   <nil->
  val?            %139.10 = %139.9
  goto BB58
BB140   <- [137]
  fs              %140.0 = FrameState         R     0x55eeeec76f60+1462: [], env=e81.0
  env             e140.1 = (MkEnv)            l     fnname=%137.4, ...=%137.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %140.2 = FrameState         R     0x55eeeee353e0+17: [<blt .Call>, %137.6], env=e140.1, next=%140.0
  void                    Deopt              !v    %140.2, DeadBranchReached@0x55eeefb7c318[Test#0], %137.6   !
BB145   <- [143]
  val?^ | miss    %145.0 = LdVar              eR    C_gridDirty, <env 0x55eeedfdc408>
  env             e145.1 = MkEnv              l     fnname=%143.3, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  val?            %145.2 = Force!<value>      !v    %145.0, e145.1   <vec>
  val?            %145.3 = CallBuiltin        !v    .Call(%145.2) e145.1
  (cls|spec|blt)  %145.4 = LdFun              !v    .Call, <0x55eeeba90d38>, e145.1
  prom-           %145.5 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p50, e145.1
  (miss|dots)     %145.6 = LdDots             R     , e145.1
  *dots-          %145.7 = ExpandDots               %145.6
  val?            %145.8 = NamedCall          !v    %145.4(%145.5, .xpandDotsTrigger=%145.7) e145.1   <val?>
  val?            %145.9 = PopContext         C     %145.8, %143.2   <lgl$->
  lgl$#-          %145.10 = IsType                   %145.9 isA lgl$-
  void                    Branch                   %145.10 -> BB147 (if true) | BB148 (if false)
BB146   <- [143]
  fs              %146.0 = FrameState         R     0x55eeeec76f60+1509: [], env=e81.0
  fs              %146.1 = FrameState         R     0x55eeeea1aac0+32: [], env=e143.0, next=%146.0
  env             e146.2 = (MkEnv)            l     fnname=%143.3, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  fs              %146.3 = FrameState         R     0x55eeeee353e0+17: [<blt .Call>, %143.5], env=e146.2, next=%146.1
  void                    Deopt              !v    %146.3, DeadBranchReached@0x55eeefb7c318[Test#0], %143.5   !
BB58   <- [139, 149]
  val?            %58.0 = Phi                      %139.10:BB139, %149.12:BB149
  val?            %58.1 = %58.0
  void                    Return             l     %58.1
BB147   <- [145]
  lgl$-           %147.0 = CastType           d     dn %145.9
  void                    StVar              lW    engineDLon, %147.0, e143.0
  lgl$#-          %147.2 = CheckTrueFalse     e     %147.0
  void                    Branch                   %147.2 -> BB71 (if true) | BB68 (if false)
BB148   <- [145]
  fs              %148.0 = FrameState         R     0x55eeeec76f60+1509: [], env=e81.0
  fs              %148.1 = FrameState         R     0x55eeeea1aac0+32: [%145.9], env=e143.0, next=%148.0
  void                    Deopt              !v    %148.1, Typecheck@0x55eeef7d8e78[Type#1], %145.9   !
BB71   <- [147]
  val?^ | miss    %71.0 = LdVar              eR    .Call.graphics, e143.0
  lgl$#-          %71.1 = Identical                <blt .Call.graphics>, %71.0   <true>
  void                    Branch                   %71.1 -> BB149 (if true) | BB150 (if false)
BB68   <- [147]
  val?^ | miss    %68.0 = LdVar              eR    .Call, e143.0
  lgl$#-          %68.1 = Identical                <blt .Call>, %68.0   <@?>
  void                    Branch                   %68.1 -> BB70 (if true) | BB69 (if false)
BB149   <- [71]
  val?^ | miss    %149.0 = LdVar              eR    C_gridDirty, e143.0
  val?            %149.1 = Force!<value>      !v    %149.0, e143.0   <vec>
  val?            %149.2 = CallBuiltin        !v    .Call.graphics(%149.1) e143.0
  (cls|spec|blt)  %149.3 = LdFun              !v    .Call.graphics, <0x55eeeba90be8>, e143.0
  prom-           %149.4 = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p45, e143.0
  (miss|dots)     %149.5 = LdDots             R     , e143.0
  *dots-          %149.6 = ExpandDots               %149.5
  val?            %149.7 = NamedCall          !v    %149.3(%149.4, .xpandDotsTrigger=%149.6) e143.0   <nil->
  void                    StVar              lW    result, %149.7, e143.0
  val             %149.9 = ChkMissing         e     %149.7
  void                    Visible            v     
  val?            %149.11 = PopContext         C     %149.7, %141.3   <nil->
  val?            %149.12 = %149.11
  goto BB58
BB150   <- [71]
  fs              %150.0 = FrameState         R     0x55eeeec76f60+1509: [], env=e81.0
  fs              %150.1 = FrameState         R     0x55eeeea1aac0+46: [], env=e143.0, next=%150.0
  void                    Deopt              !v    %150.1, DeadBranchReached@0x55eeef7d8e78[Test#1], %71.1   !
BB70   <- [68]
  fs              %70.0 = FrameState         R     0x55eeeec76f60+1509: [], env=e81.0
  val?^ | miss    %70.1 = LdVar              eR    C_gridDirty, e143.0
  val?            %70.2 = Force!             !v    %70.1, e143.0   <val?_>
  val?            %70.3 = CallBuiltin        !v    .Call(%70.2) e143.0
  (cls|spec|blt)  %70.4 = LdFun              !v    .Call, e143.0
  fs              %70.5 = FrameState         R     0x55eeeea1aac0+163: [%70.4], env=e143.0, next=%70.0
  void                    Deopt              !v    %70.5, DeadCall@0x55eeef7d8e78[Call#2], %70.4   !
BB69   <- [68]
  fs              %69.0 = FrameState         R     0x55eeeec76f60+1509: [], env=e81.0
  (cls|spec|blt)  %69.1 = LdFun              !v    .Call, e143.0
  fs              %69.2 = FrameState         R     0x55eeeea1aac0+94: [%69.1], env=e143.0, next=%69.0
  void                    Deopt              !v    %69.2, DeadCall@0x55eeef7d8e78[Call#1], %69.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_getGPar, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cex, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p10, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    alpha, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p14, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    lex, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55eeeba7cc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p18, e0.0
  prom-           %0.3  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p19, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <(nil|str)->
  void                    Return             l     %0.4
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fill, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p21, e0.0
  prom-           %0.3  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p22, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cex, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    tempcex, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p25, e0.0
  prom-           %0.3  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p26, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    alpha, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    tempalpha, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p29, e0.0
  prom-           %0.3  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p30, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    lex, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    templex, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_setGPar, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_setGPar, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dontCheck, <0x55eeeeda5850>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p39, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_getEngineDLon, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dontCheck, <0x55eeeeda5850>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p46, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dontCheck, <0x55eeeeda5850>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p48, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dontCheck, <0x55eeeeda5850>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, set.gpar[0x55eeedc94950]_p51, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3

│ set.gpar[0x55eeedc94950]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
