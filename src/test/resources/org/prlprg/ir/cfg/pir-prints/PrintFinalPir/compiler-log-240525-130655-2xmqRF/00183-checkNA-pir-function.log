
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkNA[0x55eeee9dab60]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── Final PIR Version
checkNA[0x55eeee9dab60]
BB0
  val?~+          %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.na, ?
  lgl$#-          %0.2  = Identical                <blt is.na>, %0.1   <true>
  val+            %0.3  = Force<value>             %0.0,    <str$->
  void                    Branch                   %0.2 -> BB35 (if true) | BB36 (if false)
BB35   <- [0]
  val?^ | miss    %35.0 = LdVar              eR    match, ?
  lgl$#-          %35.1 = Identical                %35.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %35.1 -> BB37 (if true) | BB38 (if false)
BB36   <- [0]
  void                    Nop                !     
  lgl$#-          %36.1 = %0.2
  dr              %36.2 = DeadBranchReached@0x55eeee44c268[Test#0]
  goto BB34
BB37   <- [35]
  val?^ | miss    %37.0 = LdVar              eR    names, ?
  lgl$#-          %37.1 = Identical                %37.0, <blt names>
  void                    Branch                   %37.1 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  void                    Nop                !     
  val?^ | miss    %38.1 = %35.0
  dr              %38.2 = CallTarget@0x55eeee44c268[Call#3]
  goto BB34
BB34   <- [36, 38, 40]
  val?^ | miss    %34.0 = Phi                      %36.1:BB36, %38.1:BB38, %40.1:BB40
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %36.2:BB36, %38.2:BB38, %40.2:BB40
  dr              %34.3 = %34.2
  env             e34.4 = (MkEnv)            l     gparname=%0.0, parent=?, context 1
  fs              %34.5 = FrameState         R     0x55eeeddd1720+17: [<blt is.na>, %0.2], env=e34.4
  void                    Deopt              !v    %34.5, %34.3, %34.1
BB39   <- [37]
  val?^ | miss    %39.0 = LdVar              eR    gpars, ?
  env             e39.1 = MkEnv              l     gparname=%0.0, parent=?, context 1
  val?            %39.2 = Force!<wrapped>    !v    %39.0, e39.1   <vec+>
  val?            %39.3 = CallBuiltin        !v    names(%39.2) e39.1   <(nil|str)->
  lgl$#-          %39.4 = IsType                   %39.3 isA val?-
  void                    Branch                   %39.4 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  void                    Nop                !     
  val?^ | miss    %40.1 = %37.0
  dr              %40.2 = CallTarget@0x55eeee44c268[Call#4]
  goto BB34
BB41   <- [39]
  val?-           %41.0 = CastType           d     dn %39.3   <(nil|str)->
  val+            %41.1 = CallSafeBuiltin    wed   match(%0.3, %41.0, NA, nil)    <int$->
  lgl$#-          %41.2 = IsType                   %41.1 isA int$-
  void                    Branch                   %41.2 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x55eeeddd1720+97: [<blt is.na>], env=e39.1
  prom-           %42.1 = MkArg                    unboundValue, checkNA[0x55eeee9dab60]_p1, e39.1
  val?^           %42.2 = CastType                 up %42.1
  prom-           %42.3 = MkArg                    %0.3, checkNA[0x55eeee9dab60]_p0 (!refl), e39.1
  val?~           %42.4 = CastType                 up %42.3
  env             e42.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%42.2, x=%42.4, parent=R_BaseNamespace, context 0
  fs              %42.6 = FrameState         R     0x55eeec291d40+23: [%0.3], env=e42.5, next=%42.0
  fs              %42.7 = FrameState         R     0x55eeedeaf180+32(pr): [%39.3], env=e39.1, next=%42.6
  void                    Deopt              !v    %42.7, Typecheck@0x55eeec2e4cb0[Type#1], %39.3   !
BB43   <- [41]
  int$-           %43.0 = CastType           d     dn %41.1
  lgl$-           %43.1 = CallSafeBuiltin    wed   is.na(%43.0)    <lgl$->
  lgl$-           %43.2 = Not                d     %43.1, elided
  lgl$#-          %43.3 = CheckTrueFalse     e     %43.2
  void                    Branch                   %43.3 -> BB9 (if true) | BB7 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x55eeeddd1720+97: [<blt is.na>], env=e39.1
  prom-           %44.1 = MkArg                    unboundValue, checkNA[0x55eeee9dab60]_p1, e39.1
  val?^           %44.2 = CastType                 up %44.1
  prom-           %44.3 = MkArg                    %0.3, checkNA[0x55eeee9dab60]_p0 (!refl), e39.1
  val?~           %44.4 = CastType                 up %44.3
  env             e44.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%44.2, x=%44.4, parent=R_BaseNamespace, context 0
  fs              %44.6 = FrameState         R     0x55eeec291d40+69: [%41.1], env=e44.5, next=%44.0
  void                    Deopt              !v    %44.6, Typecheck@0x55eeee44c268[Type#7], %41.1   !
BB9   <- [43]
  val?^ | miss    %9.0  = LdVar              eR    any, e39.1
  lgl$#-          %9.1  = Identical                <blt any>, %9.0   <@?>
  void                    Branch                   %9.1 -> BB11 (if true) | BB10 (if false)
BB7   <- [43]
  void                    Invisible          v     
  goto BB8
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    is.na, e39.1
  lgl$#-          %11.1 = Identical                <blt is.na>, %11.0   <@?>
  void                    Branch                   %11.1 -> BB13 (if true) | BB12 (if false)
BB10   <- [9]
  (cls|spec|blt)  %10.0 = LdFun              !v    any, e39.1
  fs              %10.1 = FrameState         R     0x55eeeddd1720+170: [%10.0], env=e39.1
  void                    Deopt              !v    %10.1, DeadCall@0x55eeee44c268[Call#5], %10.0   !
BB8   <- [7, 18, 51]
  void                    Return             l     nil
BB13   <- [11]
  val?^ | miss    %13.0 = LdVar              eR    gpars, e39.1
  val?            %13.1 = Force!             !v    %13.0, e39.1   <val?_>
  lgl$#-          %13.2 = IsType                   %13.1 isA val+   <@?>
  void                    Branch                   %13.2 -> BB33 (if true) | BB14 (if false)
BB12   <- [11]
  (cls|spec|blt)  %12.0 = LdFun              !v    is.na, e39.1
  fs              %12.1 = FrameState         R     0x55eeeddd1720+230: [<blt any>, %12.0], env=e39.1
  void                    Deopt              !v    %12.1, DeadCall@0x55eeee44c268[Call#7], %12.0   !
BB33   <- [13]
  val?^ | miss    %33.0 = LdVar              eR    gparname, e39.1
  val?            %33.1 = Force!             !v    %33.0, e39.1   <val?_>
  val?            %33.2 = %33.1
  goto BB15
BB14   <- [13]
  prom-           %14.0 = MkArg                    unboundValue, checkNA[0x55eeee9dab60]_p4, e39.1
  prom-           %14.1 = %14.0
  goto BB15
BB15   <- [14, 33]
  val?            %15.0 = Phi                      %33.2:BB33, %14.1:BB14
  val?            %15.1 = %15.0
  val?            %15.2 = Extract2_1D        !v    %13.1, %15.1, e39.1   <val?_>
  lgl$#-          %15.3 = IsType                   %15.2 isA val?+
  void                    Branch                   %15.3 -> BB45 (if true) | BB46 (if false)
BB45   <- [15]
  val?+           %45.0 = CastType           d     dn %15.2   <val?_>
  lgl+            %45.1 = CallSafeBuiltin    wed   is.na(%45.0)    <val?_>
  val?            %45.2 = CallBuiltin        !v    any(%45.1) e39.1   <val?_>
  lgl$#-          %45.3 = CheckTrueFalse     we    %45.2
  void                    Branch                   %45.3 -> BB19 (if true) | BB18 (if false)
BB46   <- [15]
  fs              %46.0 = FrameState         R     0x55eeeddd1720+322: [<blt any>, <blt is.na>, %15.2], env=e39.1
  void                    Deopt              !v    %46.0, Typecheck@0x55eeee44c268[Type#21], %15.2   !
BB19   <- [45]
  val?^ | miss    %19.0 = LdVar              eR    all, e39.1
  lgl$#-          %19.1 = Identical                <blt all>, %19.0   <@?>
  void                    Branch                   %19.1 -> BB21 (if true) | BB20 (if false)
BB18   <- [45]
  void                    Invisible          v     
  goto BB8
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    is.na, e39.1
  lgl$#-          %21.1 = Identical                <blt is.na>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB20   <- [19]
  (cls|spec|blt)  %20.0 = LdFun              !v    all, e39.1
  fs              %20.1 = FrameState         R     0x55eeeddd1720+417: [%20.0], env=e39.1
  void                    Deopt              !v    %20.1, DeadCall@0x55eeee44c268[Call#8], %20.0   !
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    gpars, e39.1
  val?            %23.1 = Force!             !v    %23.0, e39.1   <val?_>
  lgl$#-          %23.2 = IsType                   %23.1 isA val+   <@?>
  void                    Branch                   %23.2 -> BB32 (if true) | BB24 (if false)
BB22   <- [21]
  (cls|spec|blt)  %22.0 = LdFun              !v    is.na, e39.1
  fs              %22.1 = FrameState         R     0x55eeeddd1720+477: [<blt all>, %22.0], env=e39.1
  void                    Deopt              !v    %22.1, DeadCall@0x55eeee44c268[Call#10], %22.0   !
BB32   <- [23]
  val?^ | miss    %32.0 = LdVar              eR    gparname, e39.1
  val?            %32.1 = Force!             !v    %32.0, e39.1   <val?_>
  val?            %32.2 = %32.1
  goto BB25
BB24   <- [23]
  prom-           %24.0 = MkArg                    unboundValue, checkNA[0x55eeee9dab60]_p3, e39.1
  prom-           %24.1 = %24.0
  goto BB25
BB25   <- [24, 32]
  val?            %25.0 = Phi                      %32.2:BB32, %24.1:BB24
  val?            %25.1 = %25.0
  val?            %25.2 = Extract2_1D        !v    %23.1, %25.1, e39.1   <val?_>
  lgl$#-          %25.3 = IsType                   %25.2 isA val?+
  void                    Branch                   %25.3 -> BB47 (if true) | BB48 (if false)
BB47   <- [25]
  val?+           %47.0 = CastType           d     dn %25.2   <val?_>
  lgl+            %47.1 = CallSafeBuiltin    wed   is.na(%47.0)    <val?_>
  val?            %47.2 = CallBuiltin        !v    all(%47.1) e39.1   <val?_>
  lgl$#-          %47.3 = CheckTrueFalse     we    %47.2
  void                    Branch                   %47.3 -> BB29 (if true) | BB28 (if false)
BB48   <- [25]
  fs              %48.0 = FrameState         R     0x55eeeddd1720+569: [<blt all>, <blt is.na>, %25.2], env=e39.1
  void                    Deopt              !v    %48.0, Typecheck@0x55eeee44c268[Type#36], %25.2   !
BB29   <- [47]
  val?^ | miss    %29.0 = LdVar              eR    gpars, ?   <val?_>
  val?^ | miss    %29.1 = LdVar              eR    gparname, e39.1
  val?            %29.2 = Force!             !v    %29.1, e39.1   <val?_>
  val?            %29.3 = Force!             !v    %29.0, e39.1
  lgl$#-          %29.4 = IsType                   %29.3 isA val?+
  lgl$#-          %29.5 = IsType                   %29.2 isA val?+
  void                    Branch                   %29.4 -> BB49 (if true) | BB50 (if false)
BB28   <- [47]
  (cls|spec|blt)  %28.0 = LdFun              !v    stop, e39.1
  fs              %28.1 = FrameState         R     0x55eeeddd1720+630: [%28.0], env=e39.1
  void                    Deopt              !v    %28.1, DeadCall@0x55eeee44c268[Call#11], %28.0   !
BB49   <- [29]
  val?+           %49.0 = CastType           d     dn %29.3
  void                    Branch                   %29.5 -> BB51 (if true) | BB52 (if false)
BB50   <- [29]
  void                    Nop                !     
  val?            %50.1 = %29.3
  dr              %50.2 = Typecheck@0x55eeee44c268[Type#42]
  goto BB30
BB51   <- [49]
  val?+           %51.0 = CastType           d     dn %29.2   <val?_>
  val?+           %51.1 = Subassign2_1D      wed   nil, %49.0, %51.0, elided
  void                    StVarSuper         lRW   gpars, %51.1, e39.1
  void                    Invisible          v     
  goto BB8
BB52   <- [49]
  void                    Nop                !     
  val?            %52.1 = %29.2
  dr              %52.2 = Typecheck@0x55eeee44c268[Type#43]
  goto BB30
BB30   <- [50, 52]
  val?^ | miss    %30.0 = Phi                      %50.1:BB50, %52.1:BB52
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %50.2:BB50, %52.2:BB52
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55eeeddd1720+711: [nil, nil, %29.3, %29.2], env=e39.1
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, checkNA[0x55eeee9dab60]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ checkNA[0x55eeee9dab60]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
