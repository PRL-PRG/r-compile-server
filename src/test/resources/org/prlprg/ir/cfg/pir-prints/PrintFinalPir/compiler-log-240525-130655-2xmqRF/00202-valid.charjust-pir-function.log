
┌──────────────────────────────────────────────────────────────────────────────┐
│ valid.charjust[0x55eeedcd7630]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── Final PIR Version
valid.charjust[0x55eeedcd7630]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    length, <env 0x55eeedfdc408>
  lgl$#-          %0.2  = Identical                <blt length>, %0.1   <true>
  void                    Branch                   %0.2 -> BB92 (if true) | BB93 (if false)
BB92   <- [0]
  env             e92.0 = MkEnv              l     just=%0.0, parent=<env 0x55eeedfdc408>, context 1
  val+            %92.1 = Force!<lazy>       !vr   %0.0,    <str->
  (int|real)$-    %92.2 = CallSafeBuiltin    wed   length(%92.1)    <int$->
  lgl$#-          %92.3 = IsType                   %92.2 isA int$-
  void                    Branch                   %92.3 -> BB94 (if true) | BB95 (if false)
BB93   <- [0]
  env             e93.0 = MkEnv              l     just=%0.0, parent=<env 0x55eeedfdc408>, context 1
  fs              %93.1 = FrameState         R     0x55eeee815b50+17: [<blt length>, %0.2], env=e93.0
  void                    Deopt              !v    %93.1, DeadBranchReached@0x55eeee44c5d8[Test#0], %0.2
BB94   <- [92]
  int$-           %94.0 = CastType           d     dn %92.2
  lgl$-           %94.1 = Eq                 d     %94.0, 1, elided   <lgl$->
  lgl$#-          %94.2 = CheckTrueFalse     e     %94.1
  void                    Branch                   %94.2 -> BB80 (if true) | BB5 (if false)
BB95   <- [92]
  void                    Nop                !     
  (int|real)$-    %95.1 = %92.2
  dr              %95.2 = Typecheck@0x55eeee44c5d8[Type#2]
  goto BB3
BB80   <- [94]
  val?^ | miss    %80.0 = LdVar              eR    as.integer, <env 0x55eeedfdc408>
  lgl$#-          %80.1 = Identical                <blt as.integer>, %80.0   <true>
  void                    Branch                   %80.1 -> BB96 (if true) | BB97 (if false)
BB5   <- [94]
  lgl$#-          %5.0  = IsType                   %92.1 isA val?-
  void                    Branch                   %5.0 -> BB98 (if true) | BB99 (if false)
BB3   <- [95, 97, 99, 101, 105]
  val?^ | miss    %3.0  = Phi                      %95.1:BB95, %97.1:BB97, %99.1:BB99, %101.1:BB101, %105.1:BB105
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %95.2:BB95, %97.2:BB97, %99.2:BB99, %101.2:BB101, %105.2:BB105
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55eeee815b50+91: [%92.2], env=e92.0
  void                    Deopt              !v    %3.4, %3.3, %3.1
BB96   <- [80]
  val?^ | miss    %96.0 = LdVar              eR    match, <env 0x55eeedfdc408>
  lgl$#-          %96.1 = Identical                %96.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %96.1 -> BB100 (if true) | BB101 (if false)
BB97   <- [80]
  void                    Nop                !     
  lgl$#-          %97.1 = %80.1
  dr              %97.2 = DeadBranchReached@0x55eeee44c5d8[Test#11]
  goto BB3
BB98   <- [5]
  val-            %98.0 = CastType           d     dn %92.1   <str->
  (int|real)$-    %98.1 = CallSafeBuiltin    wed   length(%98.0)    <int$->
  lgl$#-          %98.2 = IsType                   %98.1 isA int$-
  void                    Branch                   %98.2 -> BB102 (if true) | BB103 (if false)
BB99   <- [5]
  void                    Nop                !     
  val+            %99.1 = %92.1
  dr              %99.2 = Typecheck@0x55eeee44c5d8[Type#5]
  goto BB3
BB100   <- [96]
  lgl$#-          %100.0 = IsType                   %92.1 isA val?-
  void                    Branch                   %100.0 -> BB104 (if true) | BB105 (if false)
BB101   <- [96]
  void                    Nop                !     
  val?^ | miss    %101.1 = %96.0
  dr              %101.2 = CallTarget@0x55eeee44c5d8[Call#22]
  goto BB3
BB102   <- [98]
  int$-           %102.0 = CastType           d     dn %98.1
  lgl$-           %102.1 = Gt                 d     %102.0, 1, elided   <lgl$->
  lgl$#-          %102.2 = CheckTrueFalse     e     %102.1
  void                    Branch                   %102.2 -> BB47 (if true) | BB8 (if false)
BB103   <- [98]
  void                    Nop                !     
  (int|real)$-    %103.1 = %98.1
  dr              %103.2 = Typecheck@0x55eeee44c5d8[Type#6]
  goto BB6
BB104   <- [100]
  val-            %104.0 = CastType           d     dn %92.1   <str$->
  val?            %104.1 = Extract1_1D        wed   %104.0, 1L, elided   <str$->
  (cls|spec|blt)  %104.2 = LdFun              !v    c, <0x55eeeba7d940>, <env 0x55eeedfdc408>
  val?            %104.3 = Call               !v    %104.2("left", "right", "bottom", "top", "centre", "center") e92.0   <str->
  lgl$#-          %104.4 = IsType                   %104.3 isA val?-
  lgl$#-          %104.5 = IsType                   %104.1 isA val?+
  void                    Branch                   %104.5 -> BB108 (if true) | BB109 (if false)
BB105   <- [100]
  void                    Nop                !     
  val+            %105.1 = %92.1
  dr              %105.2 = Typecheck@0x55eeee44c5d8[Type#48]
  goto BB3
BB47   <- [102]
  val?^ | miss    %47.0 = LdVar              eR    as.integer, <env 0x55eeedfdc408>
  lgl$#-          %47.1 = Identical                <blt as.integer>, %47.0   <true>
  void                    Branch                   %47.1 -> BB106 (if true) | BB107 (if false)
BB8   <- [102]
  void                    Nop                !     
  val?^           %8.1  = %0.0
  goto BB9
BB6   <- [103, 107, 115]
  val?^ | miss    %6.0  = Phi                      %103.1:BB103, %107.1:BB107, %115.1:BB115
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %103.2:BB103, %107.2:BB107, %115.2:BB115
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x55eeee815b50+205: [%98.1], env=e92.0
  void                    Deopt              !v    %6.4, %6.3, %6.1
BB108   <- [104]
  val?+           %108.0 = CastType           d     dn %104.1   <(int|str)+>
  void                    Branch                   %104.4 -> BB110 (if true) | BB111 (if false)
BB109   <- [104]
  void                    Nop                !     
  val?            %109.1 = %104.1
  dr              %109.2 = Typecheck@0x55eeec2e4cb0[Type#0]
  goto BB81
BB106   <- [47]
  val?^ | miss    %106.0 = LdVar              eR    match, <env 0x55eeedfdc408>
  lgl$#-          %106.1 = Identical                %106.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %106.1 -> BB114 (if true) | BB115 (if false)
BB107   <- [47]
  void                    Nop                !     
  lgl$#-          %107.1 = %47.1
  dr              %107.2 = DeadBranchReached@0x55eeee44c5d8[Test#2]
  goto BB6
BB9   <- [8, 190]
  val?^           %9.0  = Phi                      %190.3:BB190, %8.1:BB8
  val?^           %9.1  = %9.0
  val?^           %9.2  = %9.1
  goto BB10
BB110   <- [108]
  val?-           %110.0 = CastType           d     dn %104.3   <str->
  val+            %110.1 = CallSafeBuiltin    wed   match(%108.0, %110.0, NA, nil)    <int$->
  lgl$#-          %110.2 = IsType                   %110.1 isA int$-
  void                    Branch                   %110.2 -> BB112 (if true) | BB113 (if false)
BB111   <- [108]
  void                    Nop                !     
  val?            %111.1 = %104.3
  dr              %111.2 = Typecheck@0x55eeec2e4cb0[Type#1]
  goto BB81
BB81   <- [109, 111]
  val?^ | miss    %81.0 = Phi                      %109.1:BB109, %111.1:BB111
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %109.2:BB109, %111.2:BB111
  dr              %81.3 = %81.2
  prom-           %81.4 = MkArg                    %104.3, valid.charjust[0x55eeedcd7630]_p9 (!refl), e92.0
  val?~           %81.5 = CastType                 up %81.4
  prom-           %81.6 = MkArg                    %104.1, valid.charjust[0x55eeedcd7630]_p8 (!refl), e92.0
  val?~           %81.7 = CastType                 up %81.6
  fs              %81.8 = FrameState         R     0x55eeee815b50+970: [<blt as.integer>], env=e92.0
  env             e81.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%81.5, x=%81.7, parent=R_BaseNamespace, context 0
  fs              %81.10 = FrameState         R     0x55eeec291d40+23: [%104.1, %104.3], env=e81.9, next=%81.8
  void                    Deopt              !v    %81.10, %81.3, %81.1   !
BB114   <- [106]
  val-            %114.0 = CastType           d     dn %92.1   <str->
  val?            %114.1 = Extract1_1D        wed   %114.0, 1L, elided   <str$->
  (cls|spec|blt)  %114.2 = LdFun              !v    c, <0x55eeeba7d940>, <env 0x55eeedfdc408>
  lgl$#-          %114.3 = Identical                %114.2, <blt c>
  void                    Branch                   %114.3 -> BB116 (if true) | BB117 (if false)
BB115   <- [106]
  void                    Nop                !     
  val?^ | miss    %115.1 = %106.0
  dr              %115.2 = CallTarget@0x55eeee44c5d8[Call#5]
  goto BB6
BB10   <- [89, 9]
  val?^           %10.0 = Phi                      %89.1:BB89, %9.2:BB9
  val?^           %10.1 = %10.0
  lgl$#-          %10.2 = IsType                   %10.1 isA int-
  val?^ | miss    %10.3 = LdVar              eR    length, e92.0
  lgl$#-          %10.4 = Identical                <blt length>, %10.3   <true>
  void                    Branch                   %10.4 -> BB118 (if true) | BB119 (if false)
BB112   <- [110]
  int$-           %112.0 = CastType           d     dn %110.1
  real$-          %112.1 = Sub                d     %112.0, 1, elided   <real$->
  int$-           %112.2 = CallSafeBuiltin    wed   as.integer(%112.1)    <int$->
  void                    StVar              lW    just, %112.2, e92.0
  val?^ | miss    %112.4 = LdVar              eR    anyNA, e92.0
  lgl$#-          %112.5 = Identical                <blt anyNA>, %112.4   <true>
  void                    Branch                   %112.5 -> BB120 (if true) | BB121 (if false)
BB113   <- [110]
  prom-           %113.0 = MkArg                    %110.0, valid.charjust[0x55eeedcd7630]_p9 (!refl), e92.0
  val?~           %113.1 = CastType                 up %113.0
  prom-           %113.2 = MkArg                    %108.0, valid.charjust[0x55eeedcd7630]_p8 (!refl), e92.0
  val?~           %113.3 = CastType                 up %113.2
  fs              %113.4 = FrameState         R     0x55eeee815b50+970: [<blt as.integer>], env=e92.0
  env             e113.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%113.1, x=%113.3, parent=R_BaseNamespace, context 0
  fs              %113.6 = FrameState         R     0x55eeec291d40+69: [%110.1], env=e113.5, next=%113.4
  void                    Deopt              !v    %113.6, Typecheck@0x55eeee44c5d8[Type#51], %110.1   !
BB116   <- [114]
  str-            %116.0 = CallSafeBuiltin    wed   c("left", "right", "bottom", "top", "centre", "center")    <str->
  lgl$#-          %116.1 = IsType                   %114.1 isA val?+
  void                    Branch                   %116.1 -> BB122 (if true) | BB123 (if false)
BB117   <- [114]
  prom-           %117.0 = MkArg                    %114.1, valid.charjust[0x55eeedcd7630]_p0 (!refl), e92.0
  val?~           %117.1 = CastType                 up %117.0
  prom-           %117.2 = MkArg                    unboundValue, valid.charjust[0x55eeedcd7630]_p1, e92.0
  val?^           %117.3 = CastType                 up %117.2
  fs              %117.4 = FrameState         R     0x55eeee815b50+341: [<blt as.integer>], env=e92.0
  env             e117.5 = (MkEnv)            l     x=%117.1, table=%117.3, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %117.6 = FrameState         R     0x55eeec291d40+9: [%114.1], env=e117.5, next=%117.4
  void                    Deopt              !v    %117.6, CallTarget@0x55eeee44c5d8[Call#6], %114.2
BB118   <- [10]
  void                    Branch                   %10.2 -> BB126 (if true) | BB127 (if false)
BB119   <- [10]
  void                    Nop                !     
  lgl$#-          %119.1 = %10.4
  dr              %119.2 = DeadBranchReached@0x55eeee44c5d8[Test#15]
  goto BB11
BB120   <- [112]
  val+            %120.0 = CallSafeBuiltin    wed   anyNA(%112.2)    <lgl$->
  lgl$#-          %120.1 = IsType                   %120.0 isA lgl$-
  void                    Branch                   %120.1 -> BB130 (if true) | BB131 (if false)
BB121   <- [112]
  fs              %121.0 = FrameState         R     0x55eeee815b50+1018: [], env=e92.0
  void                    Deopt              !v    %121.0, DeadBranchReached@0x55eeee44c5d8[Test#14], %112.5   !
BB122   <- [116]
  val?+           %122.0 = CastType           d     dn %114.1   <(int|str)+>
  val+            %122.1 = CallSafeBuiltin    wed   match(%122.0, %116.0, NA, nil)    <int$->
  lgl$#-          %122.2 = IsType                   %122.1 isA int$-
  void                    Branch                   %122.2 -> BB124 (if true) | BB125 (if false)
BB123   <- [116]
  prom-           %123.0 = MkArg                    %116.0, valid.charjust[0x55eeedcd7630]_p1 (!refl), e92.0
  val?~           %123.1 = CastType                 up %123.0
  prom-           %123.2 = MkArg                    %114.1, valid.charjust[0x55eeedcd7630]_p0 (!refl), e92.0
  val?~           %123.3 = CastType                 up %123.2
  fs              %123.4 = FrameState         R     0x55eeee815b50+341: [<blt as.integer>], env=e92.0
  env             e123.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%123.1, x=%123.3, parent=R_BaseNamespace, context 0
  fs              %123.6 = FrameState         R     0x55eeec291d40+23: [%114.1, %116.0], env=e123.5, next=%123.4
  void                    Deopt              !v    %123.6, Typecheck@0x55eeec2e4cb0[Type#0], %114.1
BB126   <- [118]
  int-            %126.0 = CastType           d     dn %10.1
  (int|real)$-    %126.1 = CallSafeBuiltin    wed   length(%126.0)    <int$->
  lgl$#-          %126.2 = IsType                   %126.1 isA int$-
  void                    Branch                   %126.2 -> BB128 (if true) | BB129 (if false)
BB127   <- [118]
  void                    Nop                !     
  val?^           %127.1 = %10.1
  dr              %127.2 = Typecheck@0x55eeee44c5d8[Type#58]
  goto BB11
BB11   <- [119, 127]
  val?^           %11.0 = Phi                      %119.1:BB119, %127.1:BB127
  val?^           %11.1 = %11.0
  dr              %11.2 = Phi                      %119.2:BB119, %127.2:BB127
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55eeee815b50+1158: [], env=e92.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB130   <- [120]
  lgl$-           %130.0 = CastType           d     dn %120.0
  lgl$#-          %130.1 = CheckTrueFalse     e     %130.0
  void                    Branch                   %130.1 -> BB90 (if true) | BB89 (if false)
BB131   <- [120]
  fs              %131.0 = FrameState         R     0x55eeee815b50+1109: [%120.0], env=e92.0
  void                    Deopt              !v    %131.0, Typecheck@0x55eeee44c5d8[Type#56], %120.0   !
BB124   <- [122]
  int$-           %124.0 = CastType           d     dn %122.1
  real$-          %124.1 = Sub                d     %124.0, 1, elided   <real$->
  int$-           %124.2 = CallSafeBuiltin    wed   as.integer(%124.1)    <int$->
  val+            %124.3 = Force!<wrapped>    !vr   %0.0,    <str->
  lgl$#-          %124.4 = IsType                   %124.3 isA val?-
  void                    Branch                   %124.4 -> BB132 (if true) | BB133 (if false)
BB125   <- [122]
  prom-           %125.0 = MkArg                    %116.0, valid.charjust[0x55eeedcd7630]_p1 (!refl), e92.0
  val?~           %125.1 = CastType                 up %125.0
  prom-           %125.2 = MkArg                    %122.0, valid.charjust[0x55eeedcd7630]_p0 (!refl), e92.0
  val?~           %125.3 = CastType                 up %125.2
  fs              %125.4 = FrameState         R     0x55eeee815b50+341: [<blt as.integer>], env=e92.0
  env             e125.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%125.1, x=%125.3, parent=R_BaseNamespace, context 0
  fs              %125.6 = FrameState         R     0x55eeec291d40+69: [%122.1], env=e125.5, next=%125.4
  void                    Deopt              !v    %125.6, Typecheck@0x55eeee44c5d8[Type#16], %122.1
BB128   <- [126]
  int$-           %128.0 = CastType           d     dn %126.1
  lgl$-           %128.1 = Lt                 d     %128.0, 2, elided   <lgl$->
  lgl$#-          %128.2 = CheckTrueFalse     e     %128.1
  void                    Branch                   %128.2 -> BB39 (if true) | BB15 (if false)
BB129   <- [126]
  void                    Nop                !     
  (int|real)$-    %129.1 = %126.1
  dr              %129.2 = Typecheck@0x55eeee44c5d8[Type#59]
  goto BB13
BB90   <- [130]
  (cls|spec|blt)  %90.0 = LdFun              !v    stop, e92.0
  fs              %90.1 = FrameState         R     0x55eeee815b50+1130: [%90.0], env=e92.0
  void                    Deopt              !v    %90.1, DeadCall@0x55eeee44c5d8[Call#25], %90.0   !
BB89   <- [130]
  void                    Nop                !     
  int$-           %89.1 = %112.2
  goto BB10
BB132   <- [124]
  val-            %132.0 = CastType           d     dn %124.3   <str->
  val-            %132.1 = Subassign1_1D      wed   %124.2, %132.0, 1L, elided
  void                    StVar              lW    just, %132.1, e92.0
  val?^ | miss    %132.3 = LdVar              eR    %in%, e92.0
  lgl$#-          %132.4 = Identical                %132.3, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %132.4 -> BB134 (if true) | BB135 (if false)
BB133   <- [124]
  fs              %133.0 = FrameState         R     0x55eeee815b50+389: [%124.2, %124.3], env=e92.0
  void                    Deopt              !v    %133.0, Typecheck@0x55eeee44c5d8[Type#19], %124.3
BB39   <- [128]
  lgl$#-          %39.0 = IsType                   %126.0 isA int$-
  void                    Branch                   %39.0 -> BB138 (if true) | BB139 (if false)
BB15   <- [128]
  void                    Nop                !     
  int-            %15.1 = %126.0
  goto BB16
BB13   <- [129, 139]
  val?^ | miss    %13.0 = Phi                      %129.1:BB129, %139.1:BB139
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %129.2:BB129, %139.2:BB139
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55eeee815b50+1249: [%126.1], env=e92.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB134   <- [132]
  prom-           %134.0 = MkArg                    unboundValue, valid.charjust[0x55eeedcd7630]_p2, e92.0
  prom-           %134.1 = MkArg                    unboundValue, valid.charjust[0x55eeedcd7630]_p3, e92.0
  val?            %134.2 = StaticCall         !v    %in%[0x55eeee9c7fa0](%134.0, %134.1) e92.0   <lgl$->
  lgl$#-          %134.3 = IsType                   %134.2 isA lgl$-
  void                    Branch                   %134.3 -> BB142 (if true) | BB143 (if false)
BB135   <- [132]
  fs              %135.0 = FrameState         R     0x55eeee815b50+410: [], env=e92.0
  void                    Deopt              !v    %135.0, CallTarget@0x55eeee44c5d8[Call#7], %132.3
BB138   <- [39]
  int$-           %138.0 = CastType           d     dn %126.0
  int$-           %138.1 = Extract1_1D        wed   %138.0, 1L, elided   <int$->
  real$-          %138.2 = Add                d     %138.1, 1, elided   <real$->
  int$-           %138.3 = AsSwitchIdx              %138.2
  lgl$-           %138.4 = Eq                 d     %138.3, 1L, elided
  lgl$#-          %138.5 = CheckTrueFalse     e     %138.4
  void                    Branch                   %138.5 -> BB46 (if true) | BB42 (if false)
BB139   <- [39]
  void                    Nop                !     
  int-            %139.1 = %126.0
  dr              %139.2 = Typecheck@0x55eeee44c5d8[Type#62]
  goto BB13
BB16   <- [15, 44]
  (int|real)-     %16.0 = Phi                      %44.3:BB44, %15.1:BB15
  (int|real)-     %16.1 = %16.0
  val?^ | miss    %16.2 = LdVar              eR    c, e92.0
  lgl$#-          %16.3 = Identical                <blt c>, %16.2   <true>
  void                    Branch                   %16.3 -> BB136 (if true) | BB137 (if false)
BB142   <- [134]
  lgl$-           %142.0 = CastType           d     dn %134.2
  lgl$-           %142.1 = Not                d     %142.0, elided
  lgl$#-          %142.2 = CheckTrueFalse     e     %142.1
  void                    Branch                   %142.2 -> BB79 (if true) | BB60 (if false)
BB143   <- [134]
  fs              %143.0 = FrameState         R     0x55eeee815b50+447: [%134.2], env=e92.0
  void                    Deopt              !v    %143.0, Typecheck@0x55eeee44c5d8[Type#23], %134.2   !
BB46   <- [138]
  val?^ | miss    %46.0 = LdVar              eR    c, e92.0
  lgl$#-          %46.1 = Identical                <blt c>, %46.0   <true>
  void                    Branch                   %46.1 -> BB152 (if true) | BB153 (if false)
BB42   <- [138]
  lgl$-           %42.0 = Eq                 d     %138.3, 2L, elided
  lgl$#-          %42.1 = CheckTrueFalse     e     %42.0   <false>
  void                    Branch                   %42.1 -> BB141 (if true) | BB140 (if false)
BB136   <- [16]
  (int|real)$-    %136.0 = Extract1_1D        wed   %16.1, 1L, elided   <(int|real)$->
  real$-          %136.1 = Add                d     %136.0, 1, elided   <real$->
  int$-           %136.2 = AsSwitchIdx              %136.1
  lgl$-           %136.3 = Eq                 d     %136.2, 1L, elided
  lgl$#-          %136.4 = CheckTrueFalse     e     %136.3
  void                    Branch                   %136.4 -> BB38 (if true) | BB21 (if false)
BB137   <- [16]
  fs              %137.0 = FrameState         R     0x55eeee815b50+2486: [], env=e92.0
  void                    Deopt              !v    %137.0, DeadBranchReached@0x55eeee44c5d8[Test#35], %16.3   !
BB79   <- [142]
  (cls|spec|blt)  %79.0 = LdFun              !v    stop, e92.0
  fs              %79.1 = FrameState         R     0x55eeee815b50+470: [%79.0], env=e92.0
  void                    Deopt              !v    %79.1, DeadCall@0x55eeee44c5d8[Call#9], %79.0   !
BB60   <- [142]
  val?^ | miss    %60.0 = LdVar              eR    just !upd, e92.0
  val?            %60.1 = Force!             !v    %60.0, e92.0
  val?^ | miss    %60.2 = LdVar              eR    as.integer, e92.0
  lgl$#-          %60.3 = Identical                <blt as.integer>, %60.2   <true>
  void                    Branch                   %60.3 -> BB144 (if true) | BB145 (if false)
BB152   <- [46]
  real-           %152.0 = CallSafeBuiltin    wed   c(0, 4)    <real->
  real-           %152.1 = %152.0
  goto BB44
BB153   <- [46]
  void                    Nop                !     
  lgl$#-          %153.1 = %46.1
  dr              %153.2 = DeadBranchReached@0x55eeee44c5d8[Test#28]
  goto BB40
BB141   <- [42]
  void                    Nop                !     
  lgl$#-          %141.1 = %42.1
  dr              %141.2 = DeadBranchReached@0x55eeee44c5d8[Test#23]
  goto BB40
BB140   <- [42]
  lgl$-           %140.0 = Eq                 d     %138.3, 3L, elided
  lgl$#-          %140.1 = CheckTrueFalse     e     %140.0
  void                    Branch                   %140.1 -> BB45 (if true) | BB43 (if false)
BB38   <- [136]
  void                    Nop                !     
  real$#-         %38.1 = 0
  goto BB23
BB21   <- [136]
  lgl$-           %21.0 = Eq                 d     %136.2, 2L, elided
  lgl$#-          %21.1 = CheckTrueFalse     e     %21.0
  void                    Branch                   %21.1 -> BB37 (if true) | BB22 (if false)
BB144   <- [60]
  val?^ | miss    %144.0 = LdVar              eR    match, e92.0
  lgl$#-          %144.1 = Identical                %144.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %144.1 -> BB146 (if true) | BB147 (if false)
BB145   <- [60]
  void                    Nop                !     
  lgl$#-          %145.1 = %60.3
  dr              %145.2 = DeadBranchReached@0x55eeee44c5d8[Test#6]
  goto BB61
BB44   <- [152, 158, 170]
  real-           %44.0 = Phi                      %170.1:BB170, %158.1:BB158, %152.1:BB152
  real-           %44.1 = %44.0
  void                    StVar              lW    just, %44.1, e92.0
  real-           %44.3 = %44.1
  goto BB16
BB40   <- [141, 153, 159, 161, 163, 171]
  val?^ | miss    %40.0 = Phi                      %141.1:BB141, %153.1:BB153, %159.1:BB159, %161.1:BB161, %163.1:BB163, %171.1:BB171
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %141.2:BB141, %153.2:BB153, %159.2:BB159, %161.2:BB161, %163.2:BB163, %171.2:BB171
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x55eeee815b50+1443: [%138.1], env=e92.0
  void                    Deopt              !v    %40.4, %40.3, %40.1   !
BB45   <- [140]
  val?^ | miss    %45.0 = LdVar              eR    c, e92.0
  lgl$#-          %45.1 = Identical                <blt c>, %45.0   <true>
  void                    Branch                   %45.1 -> BB158 (if true) | BB159 (if false)
BB43   <- [140]
  lgl$-           %43.0 = Eq                 d     %138.3, 4L, elided
  lgl$#-          %43.1 = CheckTrueFalse     e     %43.0   <false>
  void                    Branch                   %43.1 -> BB161 (if true) | BB160 (if false)
BB23   <- [37, 38, 168]
  real$#-         %23.0 = Phi                      %168.1:BB168, %37.1:BB37, %38.1:BB38
  real$#-         %23.1 = %23.0
  (int|real)$-    %23.2 = Extract1_1D        wed   %16.1, 2L, elided   <(int|real)$->
  real$-          %23.3 = Add                d     %23.2, 1, elided   <real$->
  int$-           %23.4 = AsSwitchIdx              %23.3
  lgl$-           %23.5 = Eq                 d     %23.4, 1L, elided
  lgl$#-          %23.6 = CheckTrueFalse     e     %23.5   <false>
  void                    Branch                   %23.6 -> BB155 (if true) | BB154 (if false)
BB37   <- [21]
  void                    Nop                !     
  real$#-         %37.1 = 1
  goto BB23
BB22   <- [21]
  lgl$-           %22.0 = Eq                 d     %136.2, 3L, elided
  lgl$#-          %22.1 = CheckTrueFalse     e     %22.0   <false>
  void                    Branch                   %22.1 -> BB151 (if true) | BB150 (if false)
BB146   <- [144]
  val?^ | miss    %146.0 = LdVar              eR    just, e92.0
  val?            %146.1 = Force!<value>      !v    %146.0, e92.0   <str->
  lgl$#-          %146.2 = IsType                   %146.1 isA val?-
  void                    Branch                   %146.2 -> BB148 (if true) | BB149 (if false)
BB147   <- [144]
  void                    Nop                !     
  val?^ | miss    %147.1 = %144.0
  dr              %147.2 = CallTarget@0x55eeee44c5d8[Call#13]
  goto BB61
BB61   <- [145, 147]
  val?^ | miss    %61.0 = Phi                      %145.1:BB145, %147.1:BB147
  val?^ | miss    %61.1 = %61.0
  dr              %61.2 = Phi                      %145.2:BB145, %147.2:BB147
  dr              %61.3 = %61.2
  fs              %61.4 = FrameState         R     0x55eeee815b50+507: [%60.1], env=e92.0
  void                    Deopt              !v    %61.4, %61.3, %61.1   !
BB158   <- [45]
  real-           %158.0 = CallSafeBuiltin    wed   c(4, 2)    <real->
  real-           %158.1 = %158.0
  goto BB44
BB159   <- [45]
  void                    Nop                !     
  lgl$#-          %159.1 = %45.1
  dr              %159.2 = DeadBranchReached@0x55eeee44c5d8[Test#30]
  goto BB40
BB161   <- [43]
  void                    Nop                !     
  lgl$#-          %161.1 = %43.1
  dr              %161.2 = DeadBranchReached@0x55eeee44c5d8[Test#25]
  goto BB40
BB160   <- [43]
  lgl$-           %160.0 = Eq                 d     %138.3, 5L, elided
  lgl$#-          %160.1 = CheckTrueFalse     e     %160.0   <true>
  void                    Branch                   %160.1 -> BB162 (if true) | BB163 (if false)
BB155   <- [23]
  void                    Nop                !     
  lgl$#-          %155.1 = %23.6
  dr              %155.2 = DeadBranchReached@0x55eeee44c5d8[Test#74]
  goto BB24
BB154   <- [23]
  lgl$-           %154.0 = Eq                 d     %23.4, 2L, elided
  lgl$#-          %154.1 = CheckTrueFalse     e     %154.0   <false>
  void                    Branch                   %154.1 -> BB167 (if true) | BB166 (if false)
BB151   <- [22]
  void                    Nop                !     
  lgl$#-          %151.1 = %22.1
  dr              %151.2 = DeadBranchReached@0x55eeee44c5d8[Test#65]
  goto BB19
BB150   <- [22]
  lgl$-           %150.0 = Eq                 d     %136.2, 4L, elided
  lgl$#-          %150.1 = CheckTrueFalse     e     %150.0   <false>
  void                    Branch                   %150.1 -> BB157 (if true) | BB156 (if false)
BB148   <- [146]
  val?-           %148.0 = CastType           d     dn %146.1   <str->
  val?            %148.1 = Extract1_1D        wed   %148.0, 2L, elided   <str$->
  (cls|spec|blt)  %148.2 = LdFun              !v    c, <0x55eeeba7d940>, e92.0
  val?            %148.3 = Call               !v    %148.2("left", "right", "bottom", "top", "centre", "center") e92.0   <str->
  lgl$#-          %148.4 = IsType                   %148.3 isA val?-
  lgl$#-          %148.5 = IsType                   %148.1 isA val?+
  void                    Branch                   %148.5 -> BB164 (if true) | BB165 (if false)
BB149   <- [146]
  prom-           %149.0 = MkArg                    unboundValue, valid.charjust[0x55eeedcd7630]_p5, e92.0
  val?^           %149.1 = CastType                 up %149.0
  prom-           %149.2 = MkArg                    unboundValue, valid.charjust[0x55eeedcd7630]_p4, e92.0
  val?^           %149.3 = CastType                 up %149.2
  fs              %149.4 = FrameState         R     0x55eeee815b50+606: [<blt as.integer>], env=e92.0
  env             e149.5 = (MkEnv)            l     x=%149.3, table=%149.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %149.6 = FrameState         R     0x55eeec291d40+9: [], env=e149.5, next=%149.4
  fs              %149.7 = FrameState         R     0x55eeee224980+5(pr): [%146.1], env=e92.0, next=%149.6
  void                    Deopt              !v    %149.7, Typecheck@0x55eeee44c5d8[Type#29], %146.1   !
BB162   <- [160]
  val?^ | miss    %162.0 = LdVar              eR    c, e92.0
  lgl$#-          %162.1 = Identical                <blt c>, %162.0   <true>
  void                    Branch                   %162.1 -> BB170 (if true) | BB171 (if false)
BB163   <- [160]
  void                    Nop                !     
  lgl$#-          %163.1 = %160.1
  dr              %163.2 = DeadBranchReached@0x55eeee44c5d8[Test#26]
  goto BB40
BB24   <- [155, 167, 183]
  val?^ | miss    %24.0 = Phi                      %155.1:BB155, %167.1:BB167, %183.1:BB183
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %155.2:BB155, %167.2:BB167, %183.2:BB183
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x55eeee815b50+3018: [<blt c>, %23.1, %23.2], env=e92.0
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB167   <- [154]
  void                    Nop                !     
  lgl$#-          %167.1 = %154.1
  dr              %167.2 = DeadBranchReached@0x55eeee44c5d8[Test#75]
  goto BB24
BB166   <- [154]
  lgl$-           %166.0 = Eq                 d     %23.4, 3L, elided
  lgl$#-          %166.1 = CheckTrueFalse     e     %166.0
  void                    Branch                   %166.1 -> BB36 (if true) | BB26 (if false)
BB19   <- [151, 157, 169]
  val?^ | miss    %19.0 = Phi                      %151.1:BB151, %157.1:BB157, %169.1:BB169
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %151.2:BB151, %157.2:BB157, %169.2:BB169
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55eeee815b50+2603: [<blt c>, %136.0], env=e92.0
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB157   <- [150]
  void                    Nop                !     
  lgl$#-          %157.1 = %150.1
  dr              %157.2 = DeadBranchReached@0x55eeee44c5d8[Test#66]
  goto BB19
BB156   <- [150]
  lgl$-           %156.0 = Eq                 d     %136.2, 5L, elided
  lgl$#-          %156.1 = CheckTrueFalse     e     %156.0   <true>
  void                    Branch                   %156.1 -> BB168 (if true) | BB169 (if false)
BB164   <- [148]
  val?+           %164.0 = CastType           d     dn %148.1   <(int|str)+>
  void                    Branch                   %148.4 -> BB172 (if true) | BB173 (if false)
BB165   <- [148]
  void                    Nop                !     
  val?            %165.1 = %148.1
  dr              %165.2 = Typecheck@0x55eeec2e4cb0[Type#0]
  goto BB65
BB170   <- [162]
  real-           %170.0 = CallSafeBuiltin    wed   c(4, 4)    <real->
  real-           %170.1 = %170.0
  goto BB44
BB171   <- [162]
  void                    Nop                !     
  lgl$#-          %171.1 = %162.1
  dr              %171.2 = DeadBranchReached@0x55eeee44c5d8[Test#32]
  goto BB40
BB36   <- [166]
  void                    Nop                !     
  real$#-         %36.1 = 0
  goto BB28
BB26   <- [166]
  lgl$-           %26.0 = Eq                 d     %23.4, 4L, elided
  lgl$#-          %26.1 = CheckTrueFalse     e     %26.0
  void                    Branch                   %26.1 -> BB35 (if true) | BB27 (if false)
BB168   <- [156]
  void                    Nop                !     
  real$#-         %168.1 = 0.5
  goto BB23
BB169   <- [156]
  void                    Nop                !     
  lgl$#-          %169.1 = %156.1
  dr              %169.2 = DeadBranchReached@0x55eeee44c5d8[Test#67]
  goto BB19
BB172   <- [164]
  val?-           %172.0 = CastType           d     dn %148.3   <str->
  val+            %172.1 = CallSafeBuiltin    wed   match(%164.0, %172.0, NA, nil)    <int$->
  lgl$#-          %172.2 = IsType                   %172.1 isA int$-
  void                    Branch                   %172.2 -> BB174 (if true) | BB175 (if false)
BB173   <- [164]
  void                    Nop                !     
  val?            %173.1 = %148.3
  dr              %173.2 = Typecheck@0x55eeec2e4cb0[Type#1]
  goto BB65
BB65   <- [165, 173]
  val?^ | miss    %65.0 = Phi                      %165.1:BB165, %173.1:BB173
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %165.2:BB165, %173.2:BB173
  dr              %65.3 = %65.2
  prom-           %65.4 = MkArg                    %148.3, valid.charjust[0x55eeedcd7630]_p5 (!refl), e92.0
  val?~           %65.5 = CastType                 up %65.4
  prom-           %65.6 = MkArg                    %148.1, valid.charjust[0x55eeedcd7630]_p4 (!refl), e92.0
  val?~           %65.7 = CastType                 up %65.6
  fs              %65.8 = FrameState         R     0x55eeee815b50+606: [<blt as.integer>], env=e92.0
  env             e65.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%65.5, x=%65.7, parent=R_BaseNamespace, context 0
  fs              %65.10 = FrameState         R     0x55eeec291d40+23: [%148.1, %148.3], env=e65.9, next=%65.8
  void                    Deopt              !v    %65.10, %65.3, %65.1   !
BB28   <- [35, 36, 182]
  real$#-         %28.0 = Phi                      %182.1:BB182, %35.1:BB35, %36.1:BB36
  real$#-         %28.1 = %28.0
  real-           %28.2 = CallSafeBuiltin    wed   c(%23.1, %28.1)    <real->
  void                    StVar              lW    just, %28.2, e92.0
  val?^ | miss    %28.4 = LdVar              eR    anyNA, e92.0
  lgl$#-          %28.5 = Identical                <blt anyNA>, %28.4   <true>
  void                    Branch                   %28.5 -> BB180 (if true) | BB181 (if false)
BB35   <- [26]
  void                    Nop                !     
  real$#-         %35.1 = 1
  goto BB28
BB27   <- [26]
  lgl$-           %27.0 = Eq                 d     %23.4, 5L, elided
  lgl$#-          %27.1 = CheckTrueFalse     e     %27.0   <true>
  void                    Branch                   %27.1 -> BB182 (if true) | BB183 (if false)
BB174   <- [172]
  int$-           %174.0 = CastType           d     dn %172.1
  real$-          %174.1 = Sub                d     %174.0, 1, elided   <real$->
  int$-           %174.2 = CallSafeBuiltin    wed   as.integer(%174.1)    <int$->
  val?^ | miss    %174.3 = LdVar              eR    just, e92.0
  val?            %174.4 = Force!<value>      !v    %174.3, e92.0   <str->
  lgl$#-          %174.5 = IsType                   %174.4 isA val?-
  void                    Branch                   %174.5 -> BB176 (if true) | BB177 (if false)
BB175   <- [172]
  prom-           %175.0 = MkArg                    %172.0, valid.charjust[0x55eeedcd7630]_p5 (!refl), e92.0
  val?~           %175.1 = CastType                 up %175.0
  prom-           %175.2 = MkArg                    %164.0, valid.charjust[0x55eeedcd7630]_p4 (!refl), e92.0
  val?~           %175.3 = CastType                 up %175.2
  fs              %175.4 = FrameState         R     0x55eeee815b50+606: [<blt as.integer>], env=e92.0
  env             e175.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%175.1, x=%175.3, parent=R_BaseNamespace, context 0
  fs              %175.6 = FrameState         R     0x55eeec291d40+69: [%172.1], env=e175.5, next=%175.4
  void                    Deopt              !v    %175.6, Typecheck@0x55eeee44c5d8[Type#32], %172.1   !
BB180   <- [28]
  val+            %180.0 = CallSafeBuiltin    wed   anyNA(%28.2)    <lgl$->
  lgl$#-          %180.1 = IsType                   %180.0 isA lgl$-
  void                    Branch                   %180.1 -> BB186 (if true) | BB187 (if false)
BB181   <- [28]
  fs              %181.0 = FrameState         R     0x55eeee815b50+3412: [], env=e92.0
  void                    Deopt              !v    %181.0, DeadBranchReached@0x55eeee44c5d8[Test#80], %28.5   !
BB182   <- [27]
  void                    Nop                !     
  real$#-         %182.1 = 0.5
  goto BB28
BB183   <- [27]
  void                    Nop                !     
  lgl$#-          %183.1 = %27.1
  dr              %183.2 = DeadBranchReached@0x55eeee44c5d8[Test#78]
  goto BB24
BB176   <- [174]
  val?-           %176.0 = CastType           d     dn %174.4   <str->
  val?-           %176.1 = Subassign1_1D      wed   %174.2, %176.0, 2L, elided
  void                    StVar              lW    just, %176.1, e92.0
  val?^ | miss    %176.3 = LdVar              eR    %in%, e92.0
  lgl$#-          %176.4 = Identical                %176.3, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %176.4 -> BB178 (if true) | BB179 (if false)
BB177   <- [174]
  fs              %177.0 = FrameState         R     0x55eeee815b50+654: [%174.2, %174.4], env=e92.0
  void                    Deopt              !v    %177.0, Typecheck@0x55eeee44c5d8[Type#35], %174.4   !
BB186   <- [180]
  lgl$-           %186.0 = CastType           d     dn %180.0
  lgl$#-          %186.1 = CheckTrueFalse     e     %186.0
  void                    Branch                   %186.1 -> BB34 (if true) | BB33 (if false)
BB187   <- [180]
  fs              %187.0 = FrameState         R     0x55eeee815b50+3503: [%180.0], env=e92.0
  void                    Deopt              !v    %187.0, Typecheck@0x55eeee44c5d8[Type#90], %180.0   !
BB178   <- [176]
  prom-           %178.0 = MkArg                    unboundValue, valid.charjust[0x55eeedcd7630]_p6, e92.0
  prom-           %178.1 = MkArg                    unboundValue, valid.charjust[0x55eeedcd7630]_p7, e92.0
  val?            %178.2 = StaticCall         !v    %in%[0x55eeee9c7fa0](%178.0, %178.1) e92.0   <lgl$->
  lgl$#-          %178.3 = IsType                   %178.2 isA lgl$-
  void                    Branch                   %178.3 -> BB184 (if true) | BB185 (if false)
BB179   <- [176]
  fs              %179.0 = FrameState         R     0x55eeee815b50+675: [], env=e92.0
  void                    Deopt              !v    %179.0, CallTarget@0x55eeee44c5d8[Call#15], %176.3   !
BB34   <- [186]
  (cls|spec|blt)  %34.0 = LdFun              !v    stop, e92.0
  fs              %34.1 = FrameState         R     0x55eeee815b50+3524: [%34.0], env=e92.0
  void                    Deopt              !v    %34.1, DeadCall@0x55eeee44c5d8[Call#37], %34.0   !
BB33   <- [186]
  void                    Visible            v     
  void                    Return             l     %28.2
BB184   <- [178]
  lgl$-           %184.0 = CastType           d     dn %178.2
  lgl$-           %184.1 = Not                d     %184.0, elided
  lgl$#-          %184.2 = CheckTrueFalse     e     %184.1
  void                    Branch                   %184.2 -> BB78 (if true) | BB75 (if false)
BB185   <- [178]
  void                    Nop                !     
  val?            %185.1 = %178.2
  dr              %185.2 = Typecheck@0x55eeee44c5d8[Type#39]
  goto BB73
BB78   <- [184]
  (cls|spec|blt)  %78.0 = LdFun              !v    stop, e92.0
  fs              %78.1 = FrameState         R     0x55eeee815b50+735: [%78.0], env=e92.0
  void                    Deopt              !v    %78.1, DeadCall@0x55eeee44c5d8[Call#17], %78.0   !
BB75   <- [184]
  val?^ | miss    %75.0 = LdVar              eR    as.integer, e92.0
  lgl$#-          %75.1 = Identical                <blt as.integer>, %75.0   <true>
  void                    Branch                   %75.1 -> BB188 (if true) | BB189 (if false)
BB73   <- [185, 189]
  val?^ | miss    %73.0 = Phi                      %185.1:BB185, %189.1:BB189
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %185.2:BB185, %189.2:BB189
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x55eeee815b50+712: [%178.2], env=e92.0
  void                    Deopt              !v    %73.4, %73.3, %73.1   !
BB188   <- [75]
  val?^ | miss    %188.0 = LdVar              eR    just, e92.0
  val?            %188.1 = Force!<value>      !v    %188.0, e92.0   <str->
  lgl$#-          %188.2 = IsType                   %188.1 isA val?-
  void                    Branch                   %188.2 -> BB190 (if true) | BB191 (if false)
BB189   <- [75]
  void                    Nop                !     
  lgl$#-          %189.1 = %75.1
  dr              %189.2 = DeadBranchReached@0x55eeee44c5d8[Test#10]
  goto BB73
BB190   <- [188]
  val?-           %190.0 = CastType           d     dn %188.1   <str->
  int-            %190.1 = CallSafeBuiltin    wed   as.integer(%190.0)    <int->
  void                    StVar              lW    just, %190.1, e92.0
  int-            %190.3 = %190.1
  goto BB9
BB191   <- [188]
  fs              %191.0 = FrameState         R     0x55eeee815b50+832: [<blt as.integer>, %188.1], env=e92.0
  void                    Deopt              !v    %191.0, Typecheck@0x55eeee44c5d8[Type#41], %188.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1("left", "right", "bottom", "top", "centre", "center") e0.0   <str->
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1(0, 1, 4, 5) e0.0   <real->
  void                    Return             l     %0.2
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 2L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1("left", "right", "bottom", "top", "centre", "center") e0.0   <str->
  void                    Return             l     %0.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 2L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1(2, 3, 4, 5) e0.0   <real->
  void                    Return             l     %0.2
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str$->
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1("left", "right", "bottom", "top", "centre", "center") e0.0   <str->
  void                    Return             l     %0.2

│ valid.charjust[0x55eeedcd7630]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
