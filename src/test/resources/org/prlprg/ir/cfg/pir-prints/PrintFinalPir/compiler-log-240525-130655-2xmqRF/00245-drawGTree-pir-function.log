
┌──────────────────────────────────────────────────────────────────────────────┐
│ drawGTree[0x55eeee624860]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
drawGTree[0x55eeee624860]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    grid.Call, <env 0x55eeedfdc408>
  lgl$#-          %0.2  = Identical                %0.1, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %0.2 -> BB33 (if true) | BB34 (if false)
BB33   <- [0]
  env             e33.0 = MkEnv              l     x=%0.0, parent=<env 0x55eeedfdc408>, context 1
  prom-           %33.1 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p0, e33.0
  dots-           %33.2 = DotsList           l     false
  ct              %33.3 = PushContext        lCL   %33.1, %33.2, grid.Call(C_setDLon, FALSE), function(fnname, ...) <(rir::DispatchTable*)0x|..., e33.0
  val?^           %33.4 = CastType                 up %33.1
  val?^ | miss    %33.5 = LdVar              eR    .Call, <env 0x55eeedfdc408>
  lgl$#-          %33.6 = Identical                <blt .Call>, %33.5   <true>
  void                    Branch                   %33.6 -> BB35 (if true) | BB36 (if false)
BB34   <- [0]
  env             e34.0 = (MkEnv)            l     x=%0.0, parent=<env 0x55eeedfdc408>, context 1
  fs              %34.1 = FrameState         R     0x55eeef01b2f0+0: [], env=e34.0
  void                    Deopt              !v    %34.1, CallTarget@0x55eeeca5c8a8[Call#0], %0.1
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    C_gridDirty, <env 0x55eeedfdc408>
  env             e35.1 = MkEnv              l     fnname=%33.4, ...=%33.2, parent=<env 0x55eeedfdc408>, context 1
  val?            %35.2 = Force!<value>      !v    %35.0, e35.1   <vec>
  val?            %35.3 = CallBuiltin        !v    .Call(%35.2) e35.1
  (cls|spec|blt)  %35.4 = LdFun              !v    .Call, <0x55eeeba90d38>, e35.1
  prom-           %35.5 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p25, e35.1
  (miss|dots)     %35.6 = LdDots             R     , e35.1
  *dots-          %35.7 = ExpandDots               %35.6
  val?            %35.8 = NamedCall          !v    %35.4(%35.5, .xpandDotsTrigger=%35.7) e35.1   <val?>
  val?            %35.9 = PopContext         C     %35.8, %33.3   <lgl$->
  lgl$#-          %35.10 = IsType                   %35.9 isA lgl$-
  void                    Branch                   %35.10 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x55eeef01b2f0+37: [], env=e33.0
  env             e36.1 = (MkEnv)            l     fnname=%33.4, ...=%33.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %36.2 = FrameState         R     0x55eeeee353e0+17: [<blt .Call>, %33.6], env=e36.1, next=%36.0
  void                    Deopt              !v    %36.2, DeadBranchReached@0x55eeefb7c318[Test#0], %33.6   !
BB37   <- [35]
  lgl$-           %37.0 = CastType           d     dn %35.9
  void                    StVar              lW    dlon, %37.0, e33.0
  (cls|spec|blt)  %37.2 = LdFun              !v    on.exit, <0x55eeeba7c270>, e33.0
  prom-           %37.3 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p1, e33.0
  val?            %37.4 = Call               !v    %37.2(%37.3) e33.0
  val?^ | miss    %37.5 = LdVar              eR    grid.Call, e33.0
  lgl$#-          %37.6 = Identical                %37.5, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %37.6 -> BB39 (if true) | BB40 (if false)
BB38   <- [35]
  fs              %38.0 = FrameState         R     0x55eeef01b2f0+37: [%35.9], env=e33.0
  void                    Deopt              !v    %38.0, Typecheck@0x55eeeca5c8a8[Type#1], %35.9   !
BB39   <- [37]
  prom-           %39.0 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p4, e33.0
  ct              %39.1 = PushContext        lCL   %39.0, grid.Call(C_getCurrentGrob), function(fnname, ...) <(rir::DispatchTable*)0x|..., e33.0
  val?^           %39.2 = CastType                 up %39.0
  val?^ | miss    %39.3 = LdVar              eR    .Call, <env 0x55eeedfdc408>
  lgl$#-          %39.4 = Identical                <blt .Call>, %39.3   <true>
  void                    Branch                   %39.4 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x55eeef01b2f0+83: [%37.4], env=e33.0
  void                    Deopt              !v    %40.0, CallTarget@0x55eeeca5c8a8[Call#3], %37.5   !
BB41   <- [39]
  val?^ | miss    %41.0 = LdVar              eR    C_gridDirty, <env 0x55eeedfdc408>
  env             e41.1 = MkEnv              l     fnname=%39.2, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  val?            %41.2 = Force!<value>      !v    %41.0, e41.1   <vec>
  val?            %41.3 = CallBuiltin        !v    .Call(%41.2) e41.1
  (cls|spec|blt)  %41.4 = LdFun              !v    .Call, <0x55eeeba90d38>, e41.1
  prom-           %41.5 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p27, e41.1
  (miss|dots)     %41.6 = LdDots             R     , e41.1
  *dots-          %41.7 = ExpandDots               %41.6
  val?            %41.8 = NamedCall          !v    %41.4(%41.5, .xpandDotsTrigger=%41.7) e41.1   <val?>
  val?            %41.9 = PopContext         C     %41.8, %39.1   <nil->
  void                    StVar              lW    tempgrob, %41.9, e33.0
  val?^ | miss    %41.11 = LdVar              eR    grid.Call, e33.0
  lgl$#-          %41.12 = Identical                %41.11, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %41.12 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x55eeef01b2f0+116: [], env=e33.0
  env             e42.1 = (MkEnv)            l     fnname=%39.2, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  fs              %42.2 = FrameState         R     0x55eeeee353e0+17: [<blt .Call>, %39.4], env=e42.1, next=%42.0
  void                    Deopt              !v    %42.2, DeadBranchReached@0x55eeefb7c318[Test#0], %39.4   !
BB43   <- [41]
  prom-           %43.0 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p5, e33.0
  ct              %43.1 = PushContext        lCL   %43.0, grid.Call(C_getGPar), function(fnname, ...) <(rir::DispatchTable*)0x|..., e33.0
  val?^           %43.2 = CastType                 up %43.0
  val?^ | miss    %43.3 = LdVar              eR    .Call, <env 0x55eeedfdc408>
  lgl$#-          %43.4 = Identical                <blt .Call>, %43.3   <true>
  void                    Branch                   %43.4 -> BB45 (if true) | BB46 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x55eeef01b2f0+130: [], env=e33.0
  void                    Deopt              !v    %44.0, CallTarget@0x55eeeca5c8a8[Call#4], %41.11   !
BB45   <- [43]
  val?^ | miss    %45.0 = LdVar              eR    C_gridDirty, <env 0x55eeedfdc408>
  env             e45.1 = MkEnv              l     fnname=%43.2, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  val?            %45.2 = Force!<value>      !v    %45.0, e45.1   <vec>
  val?            %45.3 = CallBuiltin        !     .Call(%45.2) e45.1
  (cls|spec|blt)  %45.4 = LdFun              !     .Call, <0x55eeeba90d38>, e45.1
  prom-           %45.5 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p29, e45.1
  (miss|dots)     %45.6 = LdDots             R     , e45.1
  *dots-          %45.7 = ExpandDots               %45.6
  val?            %45.8 = NamedCall          !     %45.4(%45.5, .xpandDotsTrigger=%45.7) e45.1   <val?>
  val?            %45.9 = PopContext         C     %45.8, %43.1   <vec>
  void                    StVar              lW    tempgpar, %45.9, e33.0
  (cls|spec|blt)  %45.11 = LdFun              !     on.exit, <0x55eeeba7c270>, e33.0
  prom-           %45.12 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p6, e33.0
  val?            %45.13 = NamedCall          !     %45.11(%45.12, add=true) e33.0
  val?^ | miss    %45.14 = LdVar              eR    preDraw, e33.0
  lgl$#-          %45.15 = Identical                %45.14, function(x) <(rir::DispatchTable*)0x55eeecf5c4|...
  void                    Branch                   %45.15 -> BB47 (if true) | BB48 (if false)
BB46   <- [43]
  fs              %46.0 = FrameState         R     0x55eeef01b2f0+162: [], env=e33.0
  env             e46.1 = (MkEnv)            l     fnname=%43.2, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  fs              %46.2 = FrameState         R     0x55eeeee353e0+17: [<blt .Call>, %43.4], env=e46.1, next=%46.0
  void                    Deopt              !v    %46.2, DeadBranchReached@0x55eeefb7c318[Test#0], %43.4   !
BB47   <- [45]
  prom-           %47.0 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p11, e33.0
  val?            %47.1 = StaticCall         !     preDraw[0x55eeee9f93c0](%47.0) e33.0   <vec>
  void                    StVar              lW    x, %47.1, e33.0
  val?^ | miss    %47.3 = LdVar              eR    makeContent, e33.0
  lgl$#-          %47.4 = Identical                %47.3, function(x) <(rir::DispatchTable*)0x55eeecfc6d|...
  void                    Branch                   %47.4 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x55eeef01b2f0+221: [%45.13], env=e33.0
  void                    Deopt              !v    %48.0, CallTarget@0x55eeeca5c8a8[Call#8], %45.14   !
BB49   <- [47]
  prom-           %49.0 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p12 (!refl), e33.0
  val?            %49.1 = StaticCall         !     makeContent[0x55eeedcdd840](%49.0) e33.0   <vec>
  void                    StVar              lW    x, %49.1, e33.0
  val?^ | miss    %49.3 = LdVar              eR    drawDetails, e33.0
  lgl$#-          %49.4 = Identical                %49.3, function(x, recording) <(rir::DispatchTable*)0|...
  void                    Branch                   %49.4 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x55eeef01b2f0+268: [], env=e33.0
  void                    Deopt              !v    %50.0, CallTarget@0x55eeeca5c8a8[Call#9], %47.3   !
BB51   <- [49]
  prom-           %51.0 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p13 (!refl), e33.0
  val?            %51.1 = StaticCall         !     drawDetails[0x55eeecb81810](%51.0, false) { 0 1n } e33.0
  (cls|spec|blt)  %51.2 = LdFun              !     $, <0x55eeeba7cc10>, e33.0
  prom-           %51.3 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p14, e33.0
  prom-           %51.4 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p15, e33.0
  val?            %51.5 = Call               !     %51.2(%51.3, %51.4) e33.0   <str->
  val?+           %51.6 = ToForSeq           e     %51.5
  int$-           %51.7 = Length                   %51.6
  int$-           %51.8 = Inc                      0L
  lgl$-           %51.9 = Lt                 vd    %51.7, %51.8, elided   <false>
  lgl$#-          %51.10 = Identical                %51.9, true
  void                    Branch                   %51.10 -> BB54 (if true) | BB53 (if false)
BB52   <- [49]
  fs              %52.0 = FrameState         R     0x55eeef01b2f0+314: [], env=e33.0
  void                    Deopt              !v    %52.0, CallTarget@0x55eeeca5c8a8[Call#10], %49.3   !
BB54   <- [51]
  void                    Visible            v     
  fs              %54.1 = FrameState         R     0x55eeef01b2f0+397: [%51.5], env=e33.0
  void                    Deopt              !v    %54.1, DeadBranchReached@0x55eeeca5c8a8[Test#0], %51.10   !
BB53   <- [51]
  val?            %53.0 = Extract2_1D        vwed  %51.6, %51.8, elided
  void                    StVar              lW    i, %53.0, e33.0
  val?^ | miss    %53.2 = LdVar              eR    grid.draw, e33.0
  lgl$#-          %53.3 = Identical                %53.2, function(x, recording=TRUE) <(rir::DispatchTab|...
  void                    Branch                   %53.3 -> BB55 (if true) | BB56 (if false)
BB55   <- [53]
  prom-           %55.0 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p16, e33.0
  val?            %55.1 = StaticCall         !     grid.draw[0x55eeee9a71d0](%55.0, false) { 0 1n } e33.0
  int$-           %55.2 = %51.8
  goto BB25
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x55eeef01b2f0+442: [%51.6, %51.7, %51.8], env=e33.0
  void                    Deopt              !v    %56.0, CallTarget@0x55eeeca5c8a8[Call#12], %53.2   !
BB25   <- [55, 59]
  int$-           %25.0 = Phi                      %55.2:BB55, %59.2:BB59
  int$-           %25.1 = %25.0
  int$-           %25.2 = Inc                      %25.1
  lgl$-           %25.3 = Lt                 vd    %51.7, %25.2, elided
  lgl$#-          %25.4 = Identical                %25.3, true
  void                    Branch                   %25.4 -> BB31 (if true) | BB28 (if false)
BB31   <- [25]
  val?^ | miss    %31.0 = LdVar              eR    postDraw, e33.0
  lgl$#-          %31.1 = Identical                %31.0, function(x) <(rir::DispatchTable*)0x55eeed1a68|...
  void                    Branch                   %31.1 -> BB57 (if true) | BB58 (if false)
BB28   <- [25]
  val?            %28.0 = Extract2_1D        vwed  %51.6, %25.2, elided
  void                    StVar              lW    i, %28.0, e33.0
  val?^ | miss    %28.2 = LdVar              eR    grid.draw, e33.0
  lgl$#-          %28.3 = Identical                %28.2, function(x, recording=TRUE) <(rir::DispatchTab|...
  void                    Branch                   %28.3 -> BB59 (if true) | BB60 (if false)
BB57   <- [31]
  prom-           %57.0 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p24, e33.0
  val?            %57.1 = StaticCall         !     postDraw[0x55eeef05de80](%57.0) e33.0   <nil->
  void                    Return             l     %57.1
BB58   <- [31]
  fs              %58.0 = FrameState         R     0x55eeef01b2f0+488: [%51.6, %51.7, %25.1], env=e33.0
  void                    Deopt              !v    %58.0, CallTarget@0x55eeeca5c8a8[Call#16], %31.0   !
BB59   <- [28]
  prom-           %59.0 = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p20, e33.0
  val?            %59.1 = StaticCall         !     grid.draw[0x55eeee9a71d0](%59.0, false) { 0 1n } e33.0
  int$-           %59.2 = %25.2
  goto BB25
BB60   <- [28]
  fs              %60.0 = FrameState         R     0x55eeef01b2f0+517: [%51.6, %51.7, %25.2], env=e33.0
  void                    Deopt              !v    %60.0, CallTarget@0x55eeeca5c8a8[Call#14], %28.2   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_setDLon, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     grid.Call, e0.0
  prom-           %0.2  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_setDLon, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dlon, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_getCurrentGrob, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_getGPar, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     grid.Call, e0.0
  prom-           %0.2  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p7, e0.0
  prom-           %0.3  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p8, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0
  (cls|spec|blt)  %0.5  = LdFun              !     grid.Call, e0.0
  prom-           %0.6  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p9, e0.0
  prom-           %0.7  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p10, e0.0
  val?            %0.8  = Call               !     %0.5(%0.6, %0.7) e0.0   <val?_>
  void                    Return             l     %0.8
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_setGPar, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    tempgpar, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_setCurrentGrob, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    tempgrob, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    childrenOrder, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    $, <0x55eeeba7cc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p17, e0.0
  prom-           %0.3  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p18, e0.0
  val?            %0.4  = Call               !v    %0.1(%0.2, %0.3) e0.0   <vec>
  lgl$#-          %0.5  = IsType                   %0.4 isA val+   <false>
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p19, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.4, %3.1, e0.0   <vec>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    $, <0x55eeeba7cc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p21, e0.0
  prom-           %0.3  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p22, e0.0
  val?            %0.4  = Call               !v    %0.1(%0.2, %0.3) e0.0   <vec>
  lgl$#-          %0.5  = IsType                   %0.4 isA val+   <false>
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p23, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.4, %3.1, e0.0   <vec>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dontCheck, <0x55eeeeda5850>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p26, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dontCheck, <0x55eeeeda5850>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dontCheck, <0x55eeeeda5850>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, drawGTree[0x55eeee624860]_p30, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3

│ drawGTree[0x55eeee624860]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
