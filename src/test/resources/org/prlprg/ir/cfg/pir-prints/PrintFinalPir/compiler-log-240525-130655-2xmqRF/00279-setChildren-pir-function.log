
┌──────────────────────────────────────────────────────────────────────────────┐
│ setChildren[0x55eeeea34490]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
setChildren[0x55eeeea34490]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %0.3  = Identical                %0.2, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %0.3 -> BB33 (if true) | BB34 (if false)
BB33   <- [0]
  env             e33.0 = MkEnv              l     x=%0.1, children=%0.0, parent=<env 0x55eeedfdc408>, context 1
  prom-           %33.1 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p0 (!refl), e33.0
  ct              %33.2 = PushContext        lCL   %33.1, "gTree", inherits(x, "gTree"), function(x, what, which=FALSE) <(rir::Dispatch|..., e33.0
  val?^           %33.3 = CastType                 up %33.1
  env             e33.4 = MkEnv              l     x=%33.3, what="gTree", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %33.5 = Force!<lazy>       !vr   %33.3,    <val?>
  val?            %33.6 = CallBuiltin        !v    inherits(%33.5, "gTree", false) e33.4
  val?            %33.7 = PopContext         C     %33.6, %33.2   <lgl$->
  lgl$#-          %33.8 = IsType                   %33.7 isA lgl$-
  void                    Branch                   %33.8 -> BB35 (if true) | BB36 (if false)
BB34   <- [0]
  env             e34.0 = (MkEnv)            l     x=%0.1, children=%0.0, parent=<env 0x55eeedfdc408>, context 1
  fs              %34.1 = FrameState         R     0x55eeef071a20+0: [], env=e34.0
  void                    Deopt              !v    %34.1, CallTarget@0x55eeecb489e8[Call#0], %0.2
BB35   <- [33]
  lgl$-           %35.0 = CastType           d     dn %33.7
  lgl$-           %35.1 = Not                d     %35.0, elided
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB31 (if true) | BB5 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x55eeef071a20+37: [%33.7], env=e33.0
  void                    Deopt              !v    %36.0, Typecheck@0x55eeecb489e8[Type#1], %33.7   !
BB31   <- [35]
  (cls|spec|blt)  %31.0 = LdFun              !v    stop, e33.0
  fs              %31.1 = FrameState         R     0x55eeef071a20+59: [%31.0], env=e33.0
  void                    Deopt              !v    %31.1, DeadCall@0x55eeecb489e8[Call#1], %31.0   !
BB5   <- [35]
  val?^ | miss    %5.0  = LdVar              eR    children, e33.0
  val?            %5.1  = Force!<lazy>       !v    %5.0, e33.0   <vec>
  lgl$-           %5.2  = Is                       %5.1, NULL
  lgl$-           %5.3  = Not                d     %5.2, elided
  lgl$-           %5.4  = AsLogical                %5.3
  lgl$#-          %5.5  = Identical                %5.4, false
  void                    Branch                   %5.5 -> BB30 (if true) | BB8 (if false)
BB30   <- [5]
  void                    Nop                !     
  lgl$-           %30.1 = %5.4
  goto BB11
BB8   <- [5]
  val?^ | miss    %8.0  = LdVar              eR    inherits, e33.0
  lgl$#-          %8.1  = Identical                %8.0, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %8.1 -> BB37 (if true) | BB38 (if false)
BB11   <- [30, 39]
  lgl$-           %11.0 = Phi                      %39.4:BB39, %30.1:BB30
  lgl$-           %11.1 = %11.0
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB29 (if true) | BB12 (if false)
BB37   <- [8]
  prom-           %37.0 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p1, e33.0
  ct              %37.1 = PushContext        lCL   %37.0, "gList", inherits(children, "gList"), function(x, what, which=FALSE) <(rir::Dispatch|..., e33.0
  val?^           %37.2 = CastType                 up %37.0
  env             e37.3 = MkEnv              l     x=%37.2, what="gList", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %37.4 = Force!<lazy>       !vL   %37.2, e37.3   <val?>
  val?            %37.5 = CallBuiltin        !v    inherits(%37.4, "gList", false) e37.3
  val?            %37.6 = PopContext         C     %37.5, %37.1   <lgl$->
  lgl$#-          %37.7 = IsType                   %37.6 isA lgl$-
  void                    Branch                   %37.7 -> BB39 (if true) | BB40 (if false)
BB38   <- [8]
  fs              %38.0 = FrameState         R     0x55eeef071a20+96: [%5.1], env=e33.0
  void                    Deopt              !v    %38.0, CallTarget@0x55eeecb489e8[Call#2], %8.0   !
BB29   <- [11]
  (cls|spec|blt)  %29.0 = LdFun              !v    stop, e33.0
  fs              %29.1 = FrameState         R     0x55eeef071a20+175: [%29.0], env=e33.0
  void                    Deopt              !v    %29.1, DeadCall@0x55eeecb489e8[Call#3], %29.0   !
BB12   <- [11]
  val?^ | miss    %12.0 = LdVar              eR    children, e33.0
  val?            %12.1 = Force!<wrapped>    !v    %12.0, e33.0   <vec>
  lgl$-           %12.2 = Is                       %12.1, NULL
  lgl$-           %12.3 = Not                d     %12.2, elided
  lgl$#-          %12.4 = CheckTrueFalse     e     %12.3
  void                    Branch                   %12.4 -> BB26 (if true) | BB15 (if false)
BB39   <- [37]
  lgl$-           %39.0 = CastType           d     dn %37.6
  lgl$-           %39.1 = Not                d     %39.0, elided
  lgl$-           %39.2 = AsLogical                %39.1
  lgl$-           %39.3 = LAnd                     %5.4, %39.2
  lgl$-           %39.4 = %39.3
  goto BB11
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x55eeef071a20+151: [%5.4, %37.6], env=e33.0
  void                    Deopt              !v    %40.0, Typecheck@0x55eeecb489e8[Type#4], %37.6   !
BB26   <- [12]
  val?^ | miss    %26.0 = LdVar              eR    class, e33.0
  lgl$#-          %26.1 = Identical                <blt class>, %26.0   <true>
  void                    Branch                   %26.1 -> BB41 (if true) | BB42 (if false)
BB15   <- [12]
  void                    Nop                !     
  goto BB16
BB41   <- [26]
  val?^ | miss    %41.0 = LdVar              eR    children, e33.0
  val?            %41.1 = Force!<wrapped>    !v    %41.0, e33.0   <vec>
  val?            %41.2 = CallBuiltin        !v    class(%41.1) e33.0   <str$->
  void                    StVar              lW    cl, %41.2, e33.0
  val?^ | miss    %41.4 = LdVar              eR    children, e33.0
  val?            %41.5 = Force!<wrapped>    !v    %41.4, e33.0   <vec>
  lgl$#-          %41.6 = IsType                   %41.5 isA val+   <false>
  void                    Branch                   %41.6 -> BB46 (if true) | BB45 (if false)
BB42   <- [26]
  fs              %42.0 = FrameState         R     0x55eeef071a20+212: [%12.1], env=e33.0
  void                    Deopt              !v    %42.0, DeadBranchReached@0x55eeecb489e8[Test#0], %26.1   !
BB16   <- [15, 45]
  val?^ | miss    %16.0 = LdVar              eR    length, e33.0
  lgl$#-          %16.1 = Identical                <blt length>, %16.0   <true>
  void                    Branch                   %16.1 -> BB43 (if true) | BB44 (if false)
BB46   <- [41]
  fs              %46.0 = FrameState         R     0x55eeef071a20+348: [%41.5], env=e33.0
  void                    Deopt              !v    %46.0, DeadBranchReached@0x55eeecb489e8[Test#1], %41.6   !
BB45   <- [41]
  prom-           %45.0 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p25, e33.0
  val?            %45.1 = Extract1_1D        !v    %41.5, %45.0, e33.0   <vec>
  void                    StVar              lW    children, %45.1, e33.0
  (cls|spec|blt)  %45.3 = LdFun              !v    <-, <0x55eeeba71da8>, e33.0
  prom-           %45.4 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p28, e33.0
  prom-           %45.5 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p30, e33.0
  val?            %45.6 = Call               !v    %45.3(%45.4, %45.5) e33.0
  goto BB16
BB43   <- [16]
  val?^ | miss    %43.0 = LdVar              eR    children, e33.0
  val?            %43.1 = Force!<value>      !v    %43.0, e33.0   <vec>
  val?            %43.2 = CallBuiltin        !v    length(%43.1) e33.0   <int$->
  lgl$#-          %43.3 = IsType                   %43.2 isA int$-
  void                    Branch                   %43.3 -> BB47 (if true) | BB48 (if false)
BB44   <- [16]
  fs              %44.0 = FrameState         R     0x55eeef071a20+481: [], env=e33.0
  void                    Deopt              !v    %44.0, DeadBranchReached@0x55eeecb489e8[Test#2], %16.1   !
BB47   <- [43]
  int$-           %47.0 = CastType           d     dn %43.2
  lgl$#-          %47.1 = CheckTrueFalse     e     %47.0
  void                    Branch                   %47.1 -> BB23 (if true) | BB21 (if false)
BB48   <- [43]
  fs              %48.0 = FrameState         R     0x55eeef071a20+572: [%43.2], env=e33.0
  void                    Deopt              !v    %48.0, Typecheck@0x55eeecb489e8[Type#22], %43.2   !
BB23   <- [47]
  (cls|spec|blt)  %23.0 = LdFun              !v    <-, <0x55eeeba71da8>, e33.0
  prom-           %23.1 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p10, e33.0
  prom-           %23.2 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p13, e33.0
  val?            %23.3 = Call               !v    %23.0(%23.1, %23.2) e33.0
  val?^ | miss    %23.4 = LdVar              eR    sapply, e33.0
  lgl$#-          %23.5 = Identical                %23.4, function(X, FUN, ..., simplify=TRUE, USE.NAMES|...
  void                    Branch                   %23.5 -> BB49 (if true) | BB50 (if false)
BB21   <- [47]
  (cls|spec|blt)  %21.0 = LdFun              !v    <-, <0x55eeeba71da8>, e33.0
  prom-           %21.1 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p2, e33.0
  prom-           %21.2 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p5, e33.0
  val?            %21.3 = Call               !v    %21.0(%21.1, %21.2) e33.0
  (cls|spec|blt)  %21.4 = LdFun              !v    <-, <0x55eeeba71da8>, e33.0
  prom-           %21.5 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p6, e33.0
  prom-           %21.6 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p9, e33.0
  val?            %21.7 = Call               !v    %21.4(%21.5, %21.6) e33.0
  goto BB22
BB49   <- [23]
  prom-           %49.0 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p14, e33.0
  prom-           %49.1 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p15, e33.0
  val?            %49.2 = StaticCall         !v    sapply[0x55eeee6cfc50](%49.0, %49.1) { 0 1 } e33.0   <str->
  void                    StVar              lW    childNames, %49.2, e33.0
  (cls|spec|blt)  %49.4 = LdFun              !v    <-, <0x55eeeba71da8>, e33.0
  prom-           %49.5 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p16, e33.0
  prom-           %49.6 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p20, e33.0
  val?            %49.7 = Call               !v    %49.4(%49.5, %49.6) e33.0
  (cls|spec|blt)  %49.8 = LdFun              !v    <-, <0x55eeeba71da8>, e33.0
  prom-           %49.9 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p21, e33.0
  prom-           %49.10 = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p24, e33.0
  val?            %49.11 = Call               !v    %49.8(%49.9, %49.10) e33.0
  goto BB22
BB50   <- [23]
  fs              %50.0 = FrameState         R     0x55eeef071a20+701: [%23.3], env=e33.0
  void                    Deopt              !v    %50.0, CallTarget@0x55eeecb489e8[Call#18], %23.4   !
BB22   <- [21, 49]
  val?^ | miss    %22.0 = LdVar              eR    x, e33.0
  void                    Visible            v     
  val?            %22.2 = Force!<value>      !     %22.0, e33.0   <vec>
  void                    Return             l     %22.2
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p3, e0.0
  prom-           %0.3  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p4, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     gList, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p7, e0.0
  prom-           %0.3  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p8, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    childrenOrder, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     character, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p11, e0.0
  prom-           %0.3  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p12, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    childName, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, e0.0
  prom-           %0.2  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p17, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p18, e0.0
  prom-           %0.3  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p19, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    childNames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p22, e0.0
  prom-           %0.3  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p23, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    childrenOrder, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    childNames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sapply, <0x55eeecb631b0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p26, e0.0
  prom-           %0.3  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p27, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <(lgl|vec)->
  val?            %0.5  = Not                !     %0.4, e0.0
  void                    Return             l     %0.5
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    is.null, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <blt->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, e0.0
  prom-           %0.2  = MkArg                    unboundValue, setChildren[0x55eeeea34490]_p29, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    children, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cl, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ setChildren[0x55eeeea34490]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
