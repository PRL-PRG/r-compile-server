
┌──────────────────────────────────────────────────────────────────────────────┐
│ rectGrob[0x55eeededc010]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
rectGrob[0x55eeededc010]
BB0
  val?^           %0.0  = LdArg                    10
  val?^           %0.1  = LdArg                    9
  val?^           %0.2  = LdArg                    8
  val?^           %0.3  = LdArg                    7
  val?^           %0.4  = LdArg                    6
  val?^           %0.5  = LdArg                    5
  val?^           %0.6  = LdArg                    4
  val?^           %0.7  = LdArg                    3
  val?^           %0.8  = LdArg                    2
  val?^           %0.9  = LdArg                    1
  val?^           %0.10 = LdArg                    0
  val?^ | miss    %0.11 = LdVar              eR    is.unit, <env 0x55eeedfdc408>
  lgl$#-          %0.12 = Identical                %0.11, function(x) <(rir::DispatchTable*)0x55eeeef91d|...
  void                    Branch                   %0.12 -> BB57 (if true) | BB58 (if false)
BB57   <- [0]
  env             e57.0 = MkEnv              l     x=%0.10, y=%0.9, width=%0.8, height=%0.7, just=%0.6, hjust=%0.5, vjust=%0.4, default.units=%0.3, name=%0.2, gp=%0.1, vp=%0.0, parent=<env 0x55eeedfdc408>, context 1
  prom-           %57.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p0, e57.0
  ct              %57.2 = PushContext        lCL   %57.1, is.unit(x), function(x) <(rir::DispatchTable*)0x55eeeef91d|..., e57.0
  val?^           %57.3 = CastType                 up %57.1
  val?^ | miss    %57.4 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %57.5 = Identical                %57.4, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %57.5 -> BB59 (if true) | BB60 (if false)
BB58   <- [0]
  env             e58.0 = (MkEnv)            l     x=%0.10, y=%0.9, width=%0.8, height=%0.7, just=%0.6, hjust=%0.5, vjust=%0.4, default.units=%0.3, name=%0.2, gp=%0.1, vp=%0.0, parent=<env 0x55eeedfdc408>, context 1
  fs              %58.1 = FrameState         R     0x55eeefc468c0+0: [], env=e58.0
  void                    Deopt              !v    %58.1, CallTarget@0x55eeee499bd0[Call#5], %0.11
BB59   <- [57]
  env             e59.0 = MkEnv              l     x=%57.3, parent=<env 0x55eeedfdc408>, context 1
  prom-           %59.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p22, e59.0
  ct              %59.2 = PushContext        lCL   %59.1, "unit", inherits(x, "unit"), function(x, what, which=FALSE) <(rir::Dispatch|..., e59.0
  val?^           %59.3 = CastType                 up %59.1
  env             e59.4 = MkEnv              l     x=%59.3, what="unit", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %59.5 = Force!<lazy>       !vr   %59.3,    <val?>
  val?            %59.6 = CallBuiltin        !v    inherits(%59.5, "unit", false) e59.4
  val?            %59.7 = PopContext         C     %59.6, %59.2   <lgl$->
  lgl$#-          %59.8 = IsType                   %59.7 isA lgl$-
  void                    Branch                   %59.8 -> BB61 (if true) | BB62 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x55eeefc468c0+32: [], env=e57.0
  env             e60.1 = (MkEnv)            l     x=%57.3, parent=<env 0x55eeedfdc408>, context 1
  fs              %60.2 = FrameState         R     0x55eeedab17c0+0: [], env=e60.1, next=%60.0
  void                    Deopt              !v    %60.2, CallTarget@0x55eeeef0b9a8[Call#0], %57.4   !
BB61   <- [59]
  lgl$-           %61.0 = CastType           d     dn %59.7
  val?            %61.1 = PopContext         C     %61.0, %57.2   <lgl$->
  lgl$#-          %61.2 = IsType                   %61.1 isA lgl$-
  void                    Branch                   %61.2 -> BB63 (if true) | BB64 (if false)
BB62   <- [59]
  fs              %62.0 = FrameState         R     0x55eeefc468c0+32: [], env=e57.0
  fs              %62.1 = FrameState         R     0x55eeedab17c0+37: [%59.7], env=e59.0, next=%62.0
  void                    Deopt              !v    %62.1, Typecheck@0x55eeeef0b9a8[Type#1], %59.7   !
BB63   <- [61]
  lgl$-           %63.0 = CastType           d     dn %61.1
  lgl$-           %63.1 = Not                d     %63.0, elided
  lgl$#-          %63.2 = CheckTrueFalse     e     %63.1
  void                    Branch                   %63.2 -> BB55 (if true) | BB9 (if false)
BB64   <- [61]
  void                    Nop                !     
  val?            %64.1 = %61.1
  dr              %64.2 = Typecheck@0x55eeee499bd0[Type#6]
  goto BB7
BB55   <- [63]
  val?^ | miss    %55.0 = LdVar              eR    unit, e57.0
  lgl$#-          %55.1 = Identical                %55.0, function(x, units, data=NULL) <(rir::DispatchT|...
  void                    Branch                   %55.1 -> BB65 (if true) | BB66 (if false)
BB9   <- [63]
  void                    Nop                !     
  goto BB10
BB7   <- [64, 66]
  val?^ | miss    %7.0  = Phi                      %64.1:BB64, %66.1:BB66
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %64.2:BB64, %66.2:BB66
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55eeefc468c0+32: [%61.1], env=e57.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB65   <- [55]
  prom-           %65.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p20, e57.0
  prom-           %65.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p21, e57.0
  val?            %65.2 = StaticCall         !v    unit[0x55eeedae4720](%65.0, %65.1) e57.0   <real$>
  void                    StVar              lW    x, %65.2, e57.0
  goto BB10
BB66   <- [55]
  void                    Nop                !     
  val?^ | miss    %66.1 = %55.0
  dr              %66.2 = CallTarget@0x55eeee499bd0[Call#6]
  goto BB7
BB10   <- [9, 65]
  val?^ | miss    %10.0 = LdVar              eR    is.unit, e57.0
  lgl$#-          %10.1 = Identical                %10.0, function(x) <(rir::DispatchTable*)0x55eeeef91d|...
  void                    Branch                   %10.1 -> BB67 (if true) | BB68 (if false)
BB67   <- [10]
  prom-           %67.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p1, e57.0
  ct              %67.1 = PushContext        lCL   %67.0, is.unit(y), function(x) <(rir::DispatchTable*)0x55eeeef91d|..., e57.0
  val?^           %67.2 = CastType                 up %67.0
  val?^ | miss    %67.3 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %67.4 = Identical                %67.3, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %67.4 -> BB69 (if true) | BB70 (if false)
BB68   <- [10]
  fs              %68.0 = FrameState         R     0x55eeefc468c0+100: [], env=e57.0
  void                    Deopt              !v    %68.0, CallTarget@0x55eeee499bd0[Call#7], %10.0   !
BB69   <- [67]
  env             e69.0 = MkEnv              l     x=%67.2, parent=<env 0x55eeedfdc408>, context 1
  prom-           %69.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p23, e69.0
  ct              %69.2 = PushContext        lCL   %69.1, "unit", inherits(x, "unit"), function(x, what, which=FALSE) <(rir::Dispatch|..., e69.0
  val?^           %69.3 = CastType                 up %69.1
  env             e69.4 = MkEnv              l     x=%69.3, what="unit", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %69.5 = Force!<lazy>       !vL   %69.3, e69.4   <val?>
  val?            %69.6 = CallBuiltin        !v    inherits(%69.5, "unit", false) e69.4
  val?            %69.7 = PopContext         C     %69.6, %69.2   <lgl$->
  lgl$#-          %69.8 = IsType                   %69.7 isA lgl$-
  void                    Branch                   %69.8 -> BB71 (if true) | BB72 (if false)
BB70   <- [67]
  fs              %70.0 = FrameState         R     0x55eeefc468c0+132: [], env=e57.0
  env             e70.1 = (MkEnv)            l     x=%67.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %70.2 = FrameState         R     0x55eeedab17c0+0: [], env=e70.1, next=%70.0
  void                    Deopt              !v    %70.2, CallTarget@0x55eeeef0b9a8[Call#0], %67.3   !
BB71   <- [69]
  lgl$-           %71.0 = CastType           d     dn %69.7
  val?            %71.1 = PopContext         C     %71.0, %67.1   <lgl$->
  lgl$#-          %71.2 = IsType                   %71.1 isA lgl$-
  void                    Branch                   %71.2 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  fs              %72.0 = FrameState         R     0x55eeefc468c0+132: [], env=e57.0
  fs              %72.1 = FrameState         R     0x55eeedab17c0+37: [%69.7], env=e69.0, next=%72.0
  void                    Deopt              !v    %72.1, Typecheck@0x55eeeef0b9a8[Type#1], %69.7   !
BB73   <- [71]
  lgl$-           %73.0 = CastType           d     dn %71.1
  lgl$-           %73.1 = Not                d     %73.0, elided
  lgl$#-          %73.2 = CheckTrueFalse     e     %73.1
  void                    Branch                   %73.2 -> BB54 (if true) | BB19 (if false)
BB74   <- [71]
  void                    Nop                !     
  val?            %74.1 = %71.1
  dr              %74.2 = Typecheck@0x55eeee499bd0[Type#11]
  goto BB17
BB54   <- [73]
  val?^ | miss    %54.0 = LdVar              eR    unit, e57.0
  lgl$#-          %54.1 = Identical                %54.0, function(x, units, data=NULL) <(rir::DispatchT|...
  void                    Branch                   %54.1 -> BB75 (if true) | BB76 (if false)
BB19   <- [73]
  void                    Nop                !     
  goto BB20
BB17   <- [74, 76]
  val?^ | miss    %17.0 = Phi                      %74.1:BB74, %76.1:BB76
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %74.2:BB74, %76.2:BB76
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x55eeefc468c0+132: [%71.1], env=e57.0
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB75   <- [54]
  prom-           %75.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p18, e57.0
  prom-           %75.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p19, e57.0
  val?            %75.2 = StaticCall         !v    unit[0x55eeedae4720](%75.0, %75.1) e57.0   <real$>
  void                    StVar              lW    y, %75.2, e57.0
  goto BB20
BB76   <- [54]
  void                    Nop                !     
  val?^ | miss    %76.1 = %54.0
  dr              %76.2 = CallTarget@0x55eeee499bd0[Call#8]
  goto BB17
BB20   <- [19, 75]
  val?^ | miss    %20.0 = LdVar              eR    is.unit, e57.0
  lgl$#-          %20.1 = Identical                %20.0, function(x) <(rir::DispatchTable*)0x55eeeef91d|...
  void                    Branch                   %20.1 -> BB77 (if true) | BB78 (if false)
BB77   <- [20]
  prom-           %77.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p2, e57.0
  ct              %77.1 = PushContext        lCL   %77.0, is.unit(width), function(x) <(rir::DispatchTable*)0x55eeeef91d|..., e57.0
  val?^           %77.2 = CastType                 up %77.0
  val?^ | miss    %77.3 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %77.4 = Identical                %77.3, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %77.4 -> BB79 (if true) | BB80 (if false)
BB78   <- [20]
  fs              %78.0 = FrameState         R     0x55eeefc468c0+200: [], env=e57.0
  void                    Deopt              !v    %78.0, CallTarget@0x55eeee499bd0[Call#9], %20.0   !
BB79   <- [77]
  env             e79.0 = MkEnv              l     x=%77.2, parent=<env 0x55eeedfdc408>, context 1
  prom-           %79.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p24, e79.0
  ct              %79.2 = PushContext        lCL   %79.1, "unit", inherits(x, "unit"), function(x, what, which=FALSE) <(rir::Dispatch|..., e79.0
  val?^           %79.3 = CastType                 up %79.1
  env             e79.4 = MkEnv              l     x=%79.3, what="unit", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %79.5 = Force!<lazy>       !vL   %79.3, e79.4   <val?>
  val?            %79.6 = CallBuiltin        !v    inherits(%79.5, "unit", false) e79.4
  val?            %79.7 = PopContext         C     %79.6, %79.2   <lgl$->
  lgl$#-          %79.8 = IsType                   %79.7 isA lgl$-
  void                    Branch                   %79.8 -> BB81 (if true) | BB82 (if false)
BB80   <- [77]
  fs              %80.0 = FrameState         R     0x55eeefc468c0+232: [], env=e57.0
  env             e80.1 = (MkEnv)            l     x=%77.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %80.2 = FrameState         R     0x55eeedab17c0+0: [], env=e80.1, next=%80.0
  void                    Deopt              !v    %80.2, CallTarget@0x55eeeef0b9a8[Call#0], %77.3   !
BB81   <- [79]
  lgl$-           %81.0 = CastType           d     dn %79.7
  val?            %81.1 = PopContext         C     %81.0, %77.1   <lgl$->
  lgl$#-          %81.2 = IsType                   %81.1 isA lgl$-
  void                    Branch                   %81.2 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x55eeefc468c0+232: [], env=e57.0
  fs              %82.1 = FrameState         R     0x55eeedab17c0+37: [%79.7], env=e79.0, next=%82.0
  void                    Deopt              !v    %82.1, Typecheck@0x55eeeef0b9a8[Type#1], %79.7   !
BB83   <- [81]
  lgl$-           %83.0 = CastType           d     dn %81.1
  lgl$-           %83.1 = Not                d     %83.0, elided
  lgl$#-          %83.2 = CheckTrueFalse     e     %83.1
  void                    Branch                   %83.2 -> BB53 (if true) | BB29 (if false)
BB84   <- [81]
  void                    Nop                !     
  val?            %84.1 = %81.1
  dr              %84.2 = Typecheck@0x55eeee499bd0[Type#16]
  goto BB27
BB53   <- [83]
  val?^ | miss    %53.0 = LdVar              eR    unit, e57.0
  lgl$#-          %53.1 = Identical                %53.0, function(x, units, data=NULL) <(rir::DispatchT|...
  void                    Branch                   %53.1 -> BB85 (if true) | BB86 (if false)
BB29   <- [83]
  void                    Nop                !     
  goto BB30
BB27   <- [84, 86]
  val?^ | miss    %27.0 = Phi                      %84.1:BB84, %86.1:BB86
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %84.2:BB84, %86.2:BB86
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x55eeefc468c0+232: [%81.1], env=e57.0
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
BB85   <- [53]
  prom-           %85.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p16, e57.0
  prom-           %85.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p17, e57.0
  val?            %85.2 = StaticCall         !v    unit[0x55eeedae4720](%85.0, %85.1) e57.0   <real$>
  void                    StVar              lW    width, %85.2, e57.0
  goto BB30
BB86   <- [53]
  void                    Nop                !     
  val?^ | miss    %86.1 = %53.0
  dr              %86.2 = CallTarget@0x55eeee499bd0[Call#10]
  goto BB27
BB30   <- [29, 85]
  val?^ | miss    %30.0 = LdVar              eR    is.unit, e57.0
  lgl$#-          %30.1 = Identical                %30.0, function(x) <(rir::DispatchTable*)0x55eeeef91d|...
  void                    Branch                   %30.1 -> BB87 (if true) | BB88 (if false)
BB87   <- [30]
  prom-           %87.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p3, e57.0
  ct              %87.1 = PushContext        lCL   %87.0, is.unit(height), function(x) <(rir::DispatchTable*)0x55eeeef91d|..., e57.0
  val?^           %87.2 = CastType                 up %87.0
  val?^ | miss    %87.3 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %87.4 = Identical                %87.3, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %87.4 -> BB89 (if true) | BB90 (if false)
BB88   <- [30]
  fs              %88.0 = FrameState         R     0x55eeefc468c0+300: [], env=e57.0
  void                    Deopt              !v    %88.0, CallTarget@0x55eeee499bd0[Call#11], %30.0   !
BB89   <- [87]
  env             e89.0 = MkEnv              l     x=%87.2, parent=<env 0x55eeedfdc408>, context 1
  prom-           %89.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p25, e89.0
  ct              %89.2 = PushContext        lCL   %89.1, "unit", inherits(x, "unit"), function(x, what, which=FALSE) <(rir::Dispatch|..., e89.0
  val?^           %89.3 = CastType                 up %89.1
  env             e89.4 = MkEnv              l     x=%89.3, what="unit", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %89.5 = Force!<lazy>       !vL   %89.3, e89.4   <val?>
  val?            %89.6 = CallBuiltin        !v    inherits(%89.5, "unit", false) e89.4
  val?            %89.7 = PopContext         C     %89.6, %89.2   <lgl$->
  lgl$#-          %89.8 = IsType                   %89.7 isA lgl$-
  void                    Branch                   %89.8 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x55eeefc468c0+332: [], env=e57.0
  env             e90.1 = (MkEnv)            l     x=%87.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %90.2 = FrameState         R     0x55eeedab17c0+0: [], env=e90.1, next=%90.0
  void                    Deopt              !v    %90.2, CallTarget@0x55eeeef0b9a8[Call#0], %87.3   !
BB91   <- [89]
  lgl$-           %91.0 = CastType           d     dn %89.7
  val?            %91.1 = PopContext         C     %91.0, %87.1   <lgl$->
  lgl$#-          %91.2 = IsType                   %91.1 isA lgl$-
  void                    Branch                   %91.2 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  fs              %92.0 = FrameState         R     0x55eeefc468c0+332: [], env=e57.0
  fs              %92.1 = FrameState         R     0x55eeedab17c0+37: [%89.7], env=e89.0, next=%92.0
  void                    Deopt              !v    %92.1, Typecheck@0x55eeeef0b9a8[Type#1], %89.7   !
BB93   <- [91]
  lgl$-           %93.0 = CastType           d     dn %91.1
  lgl$-           %93.1 = Not                d     %93.0, elided
  lgl$#-          %93.2 = CheckTrueFalse     e     %93.1
  void                    Branch                   %93.2 -> BB52 (if true) | BB39 (if false)
BB94   <- [91]
  void                    Nop                !     
  val?            %94.1 = %91.1
  dr              %94.2 = Typecheck@0x55eeee499bd0[Type#21]
  goto BB37
BB52   <- [93]
  val?^ | miss    %52.0 = LdVar              eR    unit, e57.0
  lgl$#-          %52.1 = Identical                %52.0, function(x, units, data=NULL) <(rir::DispatchT|...
  void                    Branch                   %52.1 -> BB95 (if true) | BB96 (if false)
BB39   <- [93]
  void                    Nop                !     
  goto BB40
BB37   <- [94, 96]
  val?^ | miss    %37.0 = Phi                      %94.1:BB94, %96.1:BB96
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %94.2:BB94, %96.2:BB96
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x55eeefc468c0+332: [%91.1], env=e57.0
  void                    Deopt              !v    %37.4, %37.3, %37.1   !
BB95   <- [52]
  prom-           %95.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p14, e57.0
  prom-           %95.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p15, e57.0
  val?            %95.2 = StaticCall         !v    unit[0x55eeedae4720](%95.0, %95.1) e57.0   <real$>
  void                    StVar              lW    height, %95.2, e57.0
  goto BB40
BB96   <- [52]
  void                    Nop                !     
  val?^ | miss    %96.1 = %52.0
  dr              %96.2 = CallTarget@0x55eeee499bd0[Call#12]
  goto BB37
BB40   <- [39, 95]
  val?^ | miss    %40.0 = LdVar              eR    grob, e57.0
  lgl$#-          %40.1 = Identical                %40.0, function(..., name=NULL, gp=NULL, vp=NULL, cl=|...
  void                    Branch                   %40.1 -> BB97 (if true) | BB98 (if false)
BB97   <- [40]
  prom-           %97.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p4, e57.0
  prom-           %97.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p5, e57.0
  prom-           %97.2 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p6, e57.0
  prom-           %97.3 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p7, e57.0
  prom-           %97.4 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p8, e57.0
  prom-           %97.5 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p9, e57.0
  prom-           %97.6 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p10, e57.0
  prom-           %97.7 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p11, e57.0
  prom-           %97.8 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p12, e57.0
  prom-           %97.9 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p13, e57.0
  dots-           %97.10 = DotsList           l     x=%97.0, y=%97.1, width=%97.2, height=%97.3, just=%97.4, hjust=%97.5, vjust=%97.6
  ct              %97.11 = PushContext        lCL   %97.10, %97.7, %97.8, %97.9, "rect", grob(x=x, y=y, width=width, height=height, jus|..., function(..., name=NULL, gp=NULL, vp=NULL, cl=|..., e57.0
  val?^           %97.12 = CastType                 up %97.9
  val?^           %97.13 = CastType                 up %97.8
  val?^           %97.14 = CastType                 up %97.7
  env             e97.15 = MkEnv              l     ...=%97.10, name=%97.14, gp=%97.13, vp=%97.12, cl="rect", parent=<env 0x55eeedfdc408>, context 1
  (cls|spec|blt)  %97.16 = LdFun              !v    list, <0x55eeeba915c0>, <env 0x55eeedfdc408>
  prom-           %97.17 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p26, e97.15
  prom-           %97.18 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p27, e97.15
  prom-           %97.19 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p28, e97.15
  val?            %97.20 = NamedCall          !v    %97.16(x=%97.0, y=%97.1, width=%97.2, height=%97.3, just=%97.4, hjust=%97.5, vjust=%97.6, name=%97.17, gp=%97.18, vp=%97.19) e97.15   <vec+>
  void                    StVar              lW    g, %97.20, e97.15
  val?^ | miss    %97.22 = LdVar              eR    cl, e97.15
  void                    Visible            v     
  val?            %97.24 = Force!<value>      !     %97.22, e97.15   <str$->
  lgl$-           %97.25 = Is                       %97.24, NULL
  lgl$-           %97.26 = Not                vd    %97.25, elided
  lgl$-           %97.27 = AsLogical                %97.26
  lgl$#-          %97.28 = Identical                %97.27, false
  void                    Branch                   %97.28 -> BB51 (if true) | BB45 (if false)
BB98   <- [40]
  fs              %98.0 = FrameState         R     0x55eeefc468c0+400: [], env=e57.0
  void                    Deopt              !v    %98.0, CallTarget@0x55eeee499bd0[Call#13], %40.0   !
BB51   <- [97]
  void                    Nop                !     
  lgl$-           %51.1 = %97.27
  goto BB46
BB45   <- [97]
  val?^ | miss    %45.0 = LdVar              eR    is.character, e97.15
  lgl$#-          %45.1 = Identical                <blt is.character>, %45.0   <true>
  void                    Branch                   %45.1 -> BB99 (if true) | BB100 (if false)
BB46   <- [51, 99]
  lgl$-           %46.0 = Phi                      %99.5:BB99, %51.1:BB51
  lgl$-           %46.1 = %46.0
  lgl$#-          %46.2 = CheckTrueFalse     e     %46.1
  void                    Branch                   %46.2 -> BB50 (if true) | BB47 (if false)
BB99   <- [45]
  val?^ | miss    %99.0 = LdVar              eR    cl, e97.15
  val?            %99.1 = Force!<value>      !v    %99.0, e97.15   <str$->
  lgl$#-          %99.2 = CallSafeBuiltin    vwed  is.character(%99.1)    <lgl$->
  lgl$#-          %99.3 = Not                vd    %99.2, elided
  lgl$-           %99.4 = LAnd                     %97.27, %99.3
  lgl$-           %99.5 = %99.4
  goto BB46
BB100   <- [45]
  fs              %100.0 = FrameState         R     0x55eeefc468c0+526: [], env=e57.0
  fs              %100.1 = FrameState         R     0x55eeed9d8650+86: [%97.24], env=e97.15, next=%100.0
  void                    Deopt              !v    %100.1, DeadBranchReached@0x55eeee3deef0[Test#0], %45.1   !
BB50   <- [46]
  fs              %50.0 = FrameState         R     0x55eeefc468c0+526: [], env=e57.0
  (cls|spec|blt)  %50.1 = LdFun              !v    stop, e97.15
  fs              %50.2 = FrameState         R     0x55eeed9d8650+219: [%50.1], env=e97.15, next=%50.0
  void                    Deopt              !v    %50.2, DeadCall@0x55eeee3deef0[Call#2], %50.1   !
BB47   <- [46]
  (cls|spec|blt)  %47.0 = LdFun              !     <-, <0x55eeeba71da8>, e97.15
  prom-           %47.1 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p29, e97.15
  prom-           %47.2 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p31, e97.15
  val?            %47.3 = Call               !     %47.0(%47.1, %47.2) e97.15
  val?^ | miss    %47.4 = LdVar              eR    validGrob, e97.15
  lgl$#-          %47.5 = Identical                %47.4, function(x, ...) <(rir::DispatchTable*)0x55eee|...
  void                    Branch                   %47.5 -> BB101 (if true) | BB102 (if false)
BB101   <- [47]
  prom-           %101.0 = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p33, e97.15
  val?            %101.1 = StaticCall         !     validGrob[0x55eeee385b80](%101.0) { 0 } e97.15   <vec>
  val?            %101.2 = PopContext         C     %101.1, %97.11   <vec>
  void                    Return             l     %101.2
BB102   <- [47]
  fs              %102.0 = FrameState         R     0x55eeefc468c0+526: [], env=e57.0
  fs              %102.1 = FrameState         R     0x55eeed9d8650+284: [%47.3], env=e97.15, next=%102.0
  void                    Deopt              !v    %102.1, CallTarget@0x55eeee3deef0[Call#6], %47.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <real$>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <real$>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    width, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <real$>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    height, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <real$>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    width, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    height, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    hjust, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vjust, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    height, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default.units, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    width, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default.units, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default.units, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default.units, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|vec)$>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|vec)$>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|vec)$>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|vec)$>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, e0.0
  prom-           %0.2  = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p30, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    g, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, e0.0
  prom-           %0.2  = MkArg                    unboundValue, rectGrob[0x55eeededc010]_p32, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "grob", "gDesc") e0.0   <val?_>
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cl, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    g, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3

│ rectGrob[0x55eeededc010]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
