
┌──────────────────────────────────────────────────────────────────────────────┐
│ record[0x55eeee8d2ad0]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
record[0x55eeee8d2ad0]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    grid.Call, <env 0x55eeedfdc408>
  lgl$#-          %0.2  = Identical                %0.1, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %0.2 -> BB11 (if true) | BB12 (if false)
BB11   <- [0]
  env             e11.0 = MkEnv              l     x=%0.0, parent=<env 0x55eeedfdc408>, context 1
  prom-           %11.1 = MkArg                    unboundValue, record[0x55eeee8d2ad0]_p0, e11.0
  ct              %11.2 = PushContext        lCL   %11.1, grid.Call(C_getDLon), function(fnname, ...) <(rir::DispatchTable*)0x|..., e11.0
  val?^           %11.3 = CastType                 up %11.1
  val?^ | miss    %11.4 = LdVar              eR    .Call, <env 0x55eeedfdc408>
  lgl$#-          %11.5 = Identical                <blt .Call>, %11.4   <true>
  void                    Branch                   %11.5 -> BB13 (if true) | BB14 (if false)
BB12   <- [0]
  env             e12.0 = (MkEnv)            l     x=%0.0, parent=<env 0x55eeedfdc408>, context 1
  fs              %12.1 = FrameState         R     0x55eeee3401b0+0: [], env=e12.0
  void                    Deopt              !v    %12.1, CallTarget@0x55eeee9d4e78[Call#0], %0.1   !
BB13   <- [11]
  val?^ | miss    %13.0 = LdVar              eR    C_gridDirty, <env 0x55eeedfdc408>
  env             e13.1 = MkEnv              l     fnname=%11.3, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  val?            %13.2 = Force!<value>      !v    %13.0, e13.1   <vec>
  val?            %13.3 = CallBuiltin        !     .Call(%13.2) e13.1
  (cls|spec|blt)  %13.4 = LdFun              !     .Call, <0x55eeeba90d38>, e13.1
  prom-           %13.5 = MkArg                    unboundValue, record[0x55eeee8d2ad0]_p1, e13.1
  (miss|dots)     %13.6 = LdDots             R     , e13.1
  *dots-          %13.7 = ExpandDots               %13.6
  val?            %13.8 = NamedCall          !     %13.4(%13.5, .xpandDotsTrigger=%13.7) e13.1   <val?>
  val?            %13.9 = PopContext         C     %13.8, %11.2   <lgl$->
  lgl$#-          %13.10 = IsType                   %13.9 isA lgl$-
  void                    Branch                   %13.10 -> BB15 (if true) | BB16 (if false)
BB14   <- [11]
  fs              %14.0 = FrameState         R     0x55eeee3401b0+32: [], env=e11.0
  env             e14.1 = (MkEnv)            l     fnname=%11.3, ...(miss)=missingArg, parent=<env 0x55eeedfdc408>, context 1
  fs              %14.2 = FrameState         R     0x55eeeee353e0+17: [<blt .Call>, %11.5], env=e14.1, next=%14.0
  void                    Deopt              !v    %14.2, DeadBranchReached@0x55eeefb7c318[Test#0], %11.5   !
BB15   <- [13]
  lgl$-           %15.0 = CastType           d     dn %13.9
  lgl$#-          %15.1 = CheckTrueFalse     e     %15.0
  void                    Branch                   %15.1 -> BB9 (if true) | BB7 (if false)
BB16   <- [13]
  fs              %16.0 = FrameState         R     0x55eeee3401b0+32: [%13.9], env=e11.0
  void                    Deopt              !v    %16.0, Typecheck@0x55eeee9d4e78[Type#1], %13.9   !
BB9   <- [15]
  (cls|spec|blt)  %9.0  = LdFun              !     UseMethod, <0x55eeeba96520>, e11.0
  val?            %9.1  = Call               !     %9.0("record") e11.0   <val?_>
  val?            %9.2  = %9.1
  goto BB8
BB7   <- [15]
  void                    Invisible          v     
  nil-            %7.1  = nil
  goto BB8
BB8   <- [7, 9]
  val?            %8.0  = Phi                      %7.1:BB7, %9.2:BB9
  val?            %8.1  = %8.0
  void                    Return             l     %8.1
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    C_getDLon, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dontCheck, <0x55eeeeda5850>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, record[0x55eeee8d2ad0]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <vec>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fnname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3

│ record[0x55eeee8d2ad0]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
