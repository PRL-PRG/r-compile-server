
┌──────────────────────────────────────────────────────────────────────────────┐
│ textGrob[0x55eeee805a40]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl3,!Obj0,!Obj3        │
│ Properties:                                                                  │
├────── Final PIR Version
textGrob[0x55eeee805a40]
BB0
  val?^           %0.0  = LdArg                    11
  val?^           %0.1  = LdArg                    10
  val?^           %0.2  = LdArg                    9
  val?^           %0.3  = LdArg                    8
  val?^           %0.4  = LdArg                    7
  val?^           %0.5  = LdArg                    6
  val?^           %0.6  = LdArg                    5
  val?^           %0.7  = LdArg                    4
  val?^           %0.8  = LdArg                    3
  val?^           %0.9  = LdArg                    2
  val?^           %0.10 = LdArg                    1
  val?^           %0.11 = LdArg                    0
  val?^ | miss    %0.12 = LdVar              eR    is.unit, <env 0x55eeedfdc408>
  lgl$#-          %0.13 = Identical                %0.12, function(x) <(rir::DispatchTable*)0x55eeeef91d|...
  void                    Branch                   %0.13 -> BB29 (if true) | BB30 (if false)
BB29   <- [0]
  env             e29.0 = MkEnv              l     label=%0.11, x=%0.10, y=%0.9, just=%0.8, hjust=%0.7, vjust=%0.6, rot=%0.5, check.overlap=%0.4, default.units=%0.3, name=%0.2, gp=%0.1, vp=%0.0, parent=<env 0x55eeedfdc408>, context 1
  prom-           %29.1 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p0, e29.0
  ct              %29.2 = PushContext        lCL   %29.1, is.unit(x), function(x) <(rir::DispatchTable*)0x55eeeef91d|..., e29.0
  val?^           %29.3 = CastType                 up %29.1
  val?^ | miss    %29.4 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %29.5 = Identical                %29.4, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %29.5 -> BB31 (if true) | BB32 (if false)
BB30   <- [0]
  env             e30.0 = (MkEnv)            l     label=%0.11, x=%0.10, y=%0.9, just=%0.8, hjust=%0.7, vjust=%0.6, rot=%0.5, check.overlap=%0.4, default.units=%0.3, name=%0.2, gp=%0.1, vp=%0.0, parent=<env 0x55eeedfdc408>, context 1
  fs              %30.1 = FrameState         R     0x55eeee61c470+0: [], env=e30.0
  void                    Deopt              !v    %30.1, CallTarget@0x55eeee5dce70[Call#3], %0.12
BB31   <- [29]
  env             e31.0 = MkEnv              l     x=%29.3, parent=<env 0x55eeedfdc408>, context 1
  prom-           %31.1 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p13, e31.0
  ct              %31.2 = PushContext        lCL   %31.1, "unit", inherits(x, "unit"), function(x, what, which=FALSE) <(rir::Dispatch|..., e31.0
  val?^           %31.3 = CastType                 up %31.1
  env             e31.4 = MkEnv              l     x=%31.3, what="unit", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %31.5 = Force!<lazy>       !vr   %31.3,    <val?>
  val?            %31.6 = CallBuiltin        !v    inherits(%31.5, "unit", false) e31.4
  val?            %31.7 = PopContext         C     %31.6, %31.2   <lgl$->
  lgl$#-          %31.8 = IsType                   %31.7 isA lgl$-
  void                    Branch                   %31.8 -> BB33 (if true) | BB34 (if false)
BB32   <- [29]
  fs              %32.0 = FrameState         R     0x55eeee61c470+32: [], env=e29.0
  env             e32.1 = (MkEnv)            l     x=%29.3, parent=<env 0x55eeedfdc408>, context 1
  fs              %32.2 = FrameState         R     0x55eeedab17c0+0: [], env=e32.1, next=%32.0
  void                    Deopt              !v    %32.2, CallTarget@0x55eeeef0b9a8[Call#0], %29.4   !
BB33   <- [31]
  lgl$-           %33.0 = CastType           d     dn %31.7
  val?            %33.1 = PopContext         C     %33.0, %29.2   <lgl$->
  lgl$#-          %33.2 = IsType                   %33.1 isA lgl$-
  void                    Branch                   %33.2 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  fs              %34.0 = FrameState         R     0x55eeee61c470+32: [], env=e29.0
  fs              %34.1 = FrameState         R     0x55eeedab17c0+37: [%31.7], env=e31.0, next=%34.0
  void                    Deopt              !v    %34.1, Typecheck@0x55eeeef0b9a8[Type#1], %31.7   !
BB35   <- [33]
  lgl$-           %35.0 = CastType           d     dn %33.1
  lgl$-           %35.1 = Not                d     %35.0, elided
  lgl$#-          %35.2 = CheckTrueFalse     e     %35.1
  void                    Branch                   %35.2 -> BB27 (if true) | BB9 (if false)
BB36   <- [33]
  void                    Nop                !     
  val?            %36.1 = %33.1
  dr              %36.2 = Typecheck@0x55eeee5dce70[Type#4]
  goto BB7
BB27   <- [35]
  (cls|spec|blt)  %27.0 = LdFun              !v    unit, e29.0
  fs              %27.1 = FrameState         R     0x55eeee61c470+54: [%27.0], env=e29.0
  void                    Deopt              !v    %27.1, DeadCall@0x55eeee5dce70[Call#4], %27.0   !
BB9   <- [35]
  val?^ | miss    %9.0  = LdVar              eR    is.unit, e29.0
  lgl$#-          %9.1  = Identical                %9.0, function(x) <(rir::DispatchTable*)0x55eeeef91d|...
  void                    Branch                   %9.1 -> BB37 (if true) | BB38 (if false)
BB7   <- [36, 38]
  val?^ | miss    %7.0  = Phi                      %36.1:BB36, %38.1:BB38
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %36.2:BB36, %38.2:BB38
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55eeee61c470+32: [%33.1], env=e29.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB37   <- [9]
  prom-           %37.0 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p1, e29.0
  ct              %37.1 = PushContext        lCL   %37.0, is.unit(y), function(x) <(rir::DispatchTable*)0x55eeeef91d|..., e29.0
  val?^           %37.2 = CastType                 up %37.0
  val?^ | miss    %37.3 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %37.4 = Identical                %37.3, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %37.4 -> BB39 (if true) | BB40 (if false)
BB38   <- [9]
  void                    Nop                !     
  val?^ | miss    %38.1 = %9.0
  dr              %38.2 = CallTarget@0x55eeee5dce70[Call#5]
  goto BB7
BB39   <- [37]
  env             e39.0 = MkEnv              l     x=%37.2, parent=<env 0x55eeedfdc408>, context 1
  prom-           %39.1 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p14, e39.0
  ct              %39.2 = PushContext        lCL   %39.1, "unit", inherits(x, "unit"), function(x, what, which=FALSE) <(rir::Dispatch|..., e39.0
  val?^           %39.3 = CastType                 up %39.1
  env             e39.4 = MkEnv              l     x=%39.3, what="unit", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %39.5 = Force!<lazy>       !vL   %39.3, e39.4   <val?>
  val?            %39.6 = CallBuiltin        !v    inherits(%39.5, "unit", false) e39.4
  val?            %39.7 = PopContext         C     %39.6, %39.2   <lgl$->
  lgl$#-          %39.8 = IsType                   %39.7 isA lgl$-
  void                    Branch                   %39.8 -> BB41 (if true) | BB42 (if false)
BB40   <- [37]
  fs              %40.0 = FrameState         R     0x55eeee61c470+132: [], env=e29.0
  env             e40.1 = (MkEnv)            l     x=%37.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %40.2 = FrameState         R     0x55eeedab17c0+0: [], env=e40.1, next=%40.0
  void                    Deopt              !v    %40.2, CallTarget@0x55eeeef0b9a8[Call#0], %37.3   !
BB41   <- [39]
  lgl$-           %41.0 = CastType           d     dn %39.7
  val?            %41.1 = PopContext         C     %41.0, %37.1   <lgl$->
  lgl$#-          %41.2 = IsType                   %41.1 isA lgl$-
  void                    Branch                   %41.2 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x55eeee61c470+132: [], env=e29.0
  fs              %42.1 = FrameState         R     0x55eeedab17c0+37: [%39.7], env=e39.0, next=%42.0
  void                    Deopt              !v    %42.1, Typecheck@0x55eeeef0b9a8[Type#1], %39.7   !
BB43   <- [41]
  lgl$-           %43.0 = CastType           d     dn %41.1
  lgl$-           %43.1 = Not                d     %43.0, elided
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB26 (if true) | BB16 (if false)
BB44   <- [41]
  void                    Nop                !     
  val?            %44.1 = %41.1
  dr              %44.2 = Typecheck@0x55eeee5dce70[Type#9]
  goto BB14
BB26   <- [43]
  (cls|spec|blt)  %26.0 = LdFun              !v    unit, e29.0
  fs              %26.1 = FrameState         R     0x55eeee61c470+154: [%26.0], env=e29.0
  void                    Deopt              !v    %26.1, DeadCall@0x55eeee5dce70[Call#6], %26.0   !
BB16   <- [43]
  val?^ | miss    %16.0 = LdVar              eR    grob, e29.0
  lgl$#-          %16.1 = Identical                %16.0, function(..., name=NULL, gp=NULL, vp=NULL, cl=|...
  void                    Branch                   %16.1 -> BB45 (if true) | BB46 (if false)
BB14   <- [44, 46]
  val?^ | miss    %14.0 = Phi                      %44.1:BB44, %46.1:BB46
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %44.2:BB44, %46.2:BB46
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55eeee61c470+132: [%41.1], env=e29.0
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB45   <- [16]
  prom-           %45.0 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p2, e29.0
  prom-           %45.1 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p3, e29.0
  prom-           %45.2 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p4, e29.0
  prom-           %45.3 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p5, e29.0
  prom-           %45.4 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p6, e29.0
  prom-           %45.5 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p7, e29.0
  prom-           %45.6 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p8, e29.0
  prom-           %45.7 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p9, e29.0
  prom-           %45.8 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p10, e29.0
  prom-           %45.9 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p11, e29.0
  prom-           %45.10 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p12, e29.0
  dots-           %45.11 = DotsList           l     label=%45.0, x=%45.1, y=%45.2, just=%45.3, hjust=%45.4, vjust=%45.5, rot=%45.6, check.overlap=%45.7
  ct              %45.12 = PushContext        lCL   %45.11, %45.8, %45.9, %45.10, "text", grob(label=label, x=x, y=y, just=just, hjust=h|..., function(..., name=NULL, gp=NULL, vp=NULL, cl=|..., e29.0
  val?^           %45.13 = CastType                 up %45.10
  val?^           %45.14 = CastType                 up %45.9
  val?^           %45.15 = CastType                 up %45.8
  env             e45.16 = MkEnv              l     ...=%45.11, name=%45.15, gp=%45.14, vp=%45.13, cl="text", parent=<env 0x55eeedfdc408>, context 1
  (cls|spec|blt)  %45.17 = LdFun              !v    list, <0x55eeeba915c0>, <env 0x55eeedfdc408>
  prom-           %45.18 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p15, e45.16
  prom-           %45.19 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p16, e45.16
  prom-           %45.20 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p17, e45.16
  val?            %45.21 = NamedCall          !v    %45.17(label=%45.0, x=%45.1, y=%45.2, just=%45.3, hjust=%45.4, vjust=%45.5, rot=%45.6, check.overlap=%45.7, name=%45.18, gp=%45.19, vp=%45.20) e45.16   <vec+>
  void                    StVar              lW    g, %45.21, e45.16
  val?^ | miss    %45.23 = LdVar              eR    cl, e45.16
  void                    Visible            v     
  val?            %45.25 = Force!<value>      !     %45.23, e45.16   <str$->
  lgl$-           %45.26 = Is                       %45.25, NULL
  lgl$-           %45.27 = Not                vd    %45.26, elided
  lgl$-           %45.28 = AsLogical                %45.27
  lgl$#-          %45.29 = Identical                %45.28, false
  void                    Branch                   %45.29 -> BB25 (if true) | BB19 (if false)
BB46   <- [16]
  void                    Nop                !     
  val?^ | miss    %46.1 = %16.0
  dr              %46.2 = CallTarget@0x55eeee5dce70[Call#7]
  goto BB14
BB25   <- [45]
  void                    Nop                !     
  lgl$-           %25.1 = %45.28
  goto BB20
BB19   <- [45]
  val?^ | miss    %19.0 = LdVar              eR    is.character, e45.16
  lgl$#-          %19.1 = Identical                <blt is.character>, %19.0   <true>
  void                    Branch                   %19.1 -> BB47 (if true) | BB48 (if false)
BB20   <- [25, 47]
  lgl$-           %20.0 = Phi                      %47.5:BB47, %25.1:BB25
  lgl$-           %20.1 = %20.0
  lgl$#-          %20.2 = CheckTrueFalse     e     %20.1
  void                    Branch                   %20.2 -> BB24 (if true) | BB21 (if false)
BB47   <- [19]
  val?^ | miss    %47.0 = LdVar              eR    cl, e45.16
  val?            %47.1 = Force!<value>      !v    %47.0, e45.16   <str$->
  lgl$#-          %47.2 = CallSafeBuiltin    vwed  is.character(%47.1)    <lgl$->
  lgl$#-          %47.3 = Not                vd    %47.2, elided
  lgl$-           %47.4 = LAnd                     %45.28, %47.3
  lgl$-           %47.5 = %47.4
  goto BB20
BB48   <- [19]
  fs              %48.0 = FrameState         R     0x55eeee61c470+335: [], env=e29.0
  fs              %48.1 = FrameState         R     0x55eeed9d8650+86: [%45.25], env=e45.16, next=%48.0
  void                    Deopt              !v    %48.1, DeadBranchReached@0x55eeee3deef0[Test#0], %19.1   !
BB24   <- [20]
  fs              %24.0 = FrameState         R     0x55eeee61c470+335: [], env=e29.0
  (cls|spec|blt)  %24.1 = LdFun              !v    stop, e45.16
  fs              %24.2 = FrameState         R     0x55eeed9d8650+219: [%24.1], env=e45.16, next=%24.0
  void                    Deopt              !v    %24.2, DeadCall@0x55eeee3deef0[Call#2], %24.1   !
BB21   <- [20]
  (cls|spec|blt)  %21.0 = LdFun              !     <-, <0x55eeeba71da8>, e45.16
  prom-           %21.1 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p18, e45.16
  prom-           %21.2 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p20, e45.16
  val?            %21.3 = Call               !     %21.0(%21.1, %21.2) e45.16
  val?^ | miss    %21.4 = LdVar              eR    validGrob, e45.16
  lgl$#-          %21.5 = Identical                %21.4, function(x, ...) <(rir::DispatchTable*)0x55eee|...
  void                    Branch                   %21.5 -> BB49 (if true) | BB50 (if false)
BB49   <- [21]
  prom-           %49.0 = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p22, e45.16
  val?            %49.1 = StaticCall         !     validGrob[0x55eeedaf70c0](%49.0) { 0 } e45.16   <vec>
  val?            %49.2 = PopContext         C     %49.1, %45.12   <vec>
  void                    Return             l     %49.2
BB50   <- [21]
  fs              %50.0 = FrameState         R     0x55eeee61c470+335: [], env=e29.0
  fs              %50.1 = FrameState         R     0x55eeed9d8650+284: [%21.3], env=e45.16, next=%50.0
  void                    Deopt              !v    %50.1, CallTarget@0x55eeee3deef0[Call#6], %21.4   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|vec)>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|vec)>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    label, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(real|vec)>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(real|vec)>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    hjust, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vjust, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    rot, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    check.overlap, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|vec)$>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(real|vec)$>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, e0.0
  prom-           %0.2  = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p19, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    g, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, e0.0
  prom-           %0.2  = MkArg                    unboundValue, textGrob[0x55eeee805a40]_p21, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "grob", "gDesc") e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cl, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    g, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3

│ textGrob[0x55eeee805a40]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
