
┌──────────────────────────────────────────────────────────────────────────────┐
│ numnotnull[0x55eeeddd0aa0]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── Final PIR Version
numnotnull[0x55eeeddd0aa0]
BB0
  val?~+          %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.na, ?
  lgl$#-          %0.2  = Identical                <blt is.na>, %0.1   <true>
  val+            %0.3  = Force<value>             %0.0,    <str$->
  void                    Branch                   %0.2 -> BB42 (if true) | BB43 (if false)
BB42   <- [0]
  val?^ | miss    %42.0 = LdVar              eR    match, ?
  lgl$#-          %42.1 = Identical                %42.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %42.1 -> BB44 (if true) | BB45 (if false)
BB43   <- [0]
  void                    Nop                !     
  lgl$#-          %43.1 = %0.2
  dr              %43.2 = DeadBranchReached@0x55eeee44c3c8[Test#0]
  goto BB41
BB44   <- [42]
  val?^ | miss    %44.0 = LdVar              eR    names, ?
  lgl$#-          %44.1 = Identical                %44.0, <blt names>
  void                    Branch                   %44.1 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  void                    Nop                !     
  val?^ | miss    %45.1 = %42.0
  dr              %45.2 = CallTarget@0x55eeee44c3c8[Call#3]
  goto BB41
BB41   <- [43, 45, 47]
  val?^ | miss    %41.0 = Phi                      %43.1:BB43, %45.1:BB45, %47.1:BB47
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %43.2:BB43, %45.2:BB45, %47.2:BB47
  dr              %41.3 = %41.2
  env             e41.4 = (MkEnv)            l     gparname=%0.0, parent=?, context 1
  fs              %41.5 = FrameState         R     0x55eeee790590+17: [<blt is.na>, %0.2], env=e41.4
  void                    Deopt              !v    %41.5, %41.3, %41.1
BB46   <- [44]
  val?^ | miss    %46.0 = LdVar              eR    gpars, ?
  env             e46.1 = MkEnv              l     gparname=%0.0, parent=?, context 1
  val?            %46.2 = Force!<lazy>       !v    %46.0, e46.1   <vec+>
  val?            %46.3 = CallBuiltin        !v    names(%46.2) e46.1   <(nil|str)->
  lgl$#-          %46.4 = IsType                   %46.3 isA val?-
  void                    Branch                   %46.4 -> BB48 (if true) | BB49 (if false)
BB47   <- [44]
  void                    Nop                !     
  val?^ | miss    %47.1 = %44.0
  dr              %47.2 = CallTarget@0x55eeee44c3c8[Call#4]
  goto BB41
BB48   <- [46]
  val?-           %48.0 = CastType           d     dn %46.3   <(nil|str)->
  val+            %48.1 = CallSafeBuiltin    wed   match(%0.3, %48.0, NA, nil)    <int$->
  lgl$#-          %48.2 = IsType                   %48.1 isA int$-
  void                    Branch                   %48.2 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  fs              %49.0 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e46.1
  prom-           %49.1 = MkArg                    unboundValue, numnotnull[0x55eeeddd0aa0]_p1, e46.1
  val?^           %49.2 = CastType                 up %49.1
  prom-           %49.3 = MkArg                    %0.3, numnotnull[0x55eeeddd0aa0]_p0 (!refl), e46.1
  val?~           %49.4 = CastType                 up %49.3
  env             e49.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%49.2, x=%49.4, parent=R_BaseNamespace, context 0
  fs              %49.6 = FrameState         R     0x55eeec291d40+23: [%0.3], env=e49.5, next=%49.0
  fs              %49.7 = FrameState         R     0x55eeee0f3040+32(pr): [%46.3], env=e46.1, next=%49.6
  void                    Deopt              !v    %49.7, Typecheck@0x55eeec2e4cb0[Type#1], %46.3   !
BB50   <- [48]
  int$-           %50.0 = CastType           d     dn %48.1
  lgl$-           %50.1 = CallSafeBuiltin    wed   is.na(%50.0)    <lgl$->
  lgl$-           %50.2 = Not                d     %50.1, elided
  lgl$#-          %50.3 = CheckTrueFalse     e     %50.2
  void                    Branch                   %50.3 -> BB9 (if true) | BB7 (if false)
BB51   <- [48]
  fs              %51.0 = FrameState         R     0x55eeee790590+97: [<blt is.na>], env=e46.1
  prom-           %51.1 = MkArg                    unboundValue, numnotnull[0x55eeeddd0aa0]_p1, e46.1
  val?^           %51.2 = CastType                 up %51.1
  prom-           %51.3 = MkArg                    %0.3, numnotnull[0x55eeeddd0aa0]_p0 (!refl), e46.1
  val?~           %51.4 = CastType                 up %51.3
  env             e51.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%51.2, x=%51.4, parent=R_BaseNamespace, context 0
  fs              %51.6 = FrameState         R     0x55eeec291d40+69: [%48.1], env=e51.5, next=%51.0
  void                    Deopt              !v    %51.6, Typecheck@0x55eeee44c3c8[Type#7], %48.1   !
BB9   <- [50]
  val?^ | miss    %9.0  = LdVar              eR    gpars, e46.1
  val?            %9.1  = Force!             !v    %9.0, e46.1   <val?_>
  lgl$#-          %9.2  = IsType                   %9.1 isA val+   <@?>
  void                    Branch                   %9.2 -> BB40 (if true) | BB10 (if false)
BB7   <- [50]
  void                    Invisible          v     
  nil-            %7.1  = nil
  goto BB8
BB40   <- [9]
  val?^ | miss    %40.0 = LdVar              eR    gparname, e46.1
  val?            %40.1 = Force!             !v    %40.0, e46.1   <val?_>
  val?            %40.2 = %40.1
  goto BB11
BB10   <- [9]
  prom-           %10.0 = MkArg                    unboundValue, numnotnull[0x55eeeddd0aa0]_p4, e46.1
  prom-           %10.1 = %10.0
  goto BB11
BB8   <- [7, 62, 88]
  val+            %8.0  = Phi                      %7.1:BB7, %88.4:BB88, %62.4:BB62
  val+            %8.1  = %8.0
  void                    Return             l     %8.1
BB11   <- [10, 40]
  val?            %11.0 = Phi                      %40.2:BB40, %10.1:BB10
  val?            %11.1 = %11.0
  val?            %11.2 = Extract2_1D        !v    %9.1, %11.1, e46.1   <val?_>
  lgl$-           %11.3 = Is                       %11.2, NULL
  lgl$#-          %11.4 = CheckTrueFalse     e     %11.3
  void                    Branch                   %11.4 -> BB37 (if true) | BB14 (if false)
BB37   <- [11]
  val?^ | miss    %37.0 = LdVar              eR    gpars, ?   <val?_>
  val?^ | miss    %37.1 = LdVar              eR    gparname, e46.1
  val?            %37.2 = Force!             !v    %37.1, e46.1   <val?_>
  val?            %37.3 = Force!             !v    %37.0, e46.1
  lgl$#-          %37.4 = IsType                   %37.3 isA val?+
  lgl$#-          %37.5 = IsType                   %37.2 isA val?+
  void                    Branch                   %37.4 -> BB60 (if true) | BB61 (if false)
BB14   <- [11]
  val?^ | miss    %14.0 = LdVar              eR    check.length, e46.1
  (cls|spec|blt)  %14.1 = CastType                 dn %14.0
  val+            %14.2 = CallSafeBuiltin          bodyCode(%14.1) 
  lgl$#-          %14.3 = Identical                %14.2, <(rir::DispatchTable*)0x55eeedbcb650>
  void                    Branch                   %14.3 -> BB52 (if true) | BB53 (if false)
BB60   <- [37]
  val?+           %60.0 = CastType           d     dn %37.3
  void                    Branch                   %37.5 -> BB62 (if true) | BB63 (if false)
BB61   <- [37]
  void                    Nop                !     
  val?            %61.1 = %37.3
  dr              %61.2 = Typecheck@0x55eeee44c3c8[Type#25]
  goto BB38
BB52   <- [14]
  val?            %52.0 = Force!             d     %14.0, 
  prom-           %52.1 = MkArg                    unboundValue, numnotnull[0x55eeeddd0aa0]_p3, e46.1
  (cls|spec|blt)  %52.2 = ChkFunction        e     %52.0
  env             e52.3 = CallSafeBuiltin          environment(%52.2) 
  val?^           %52.4 = CastType                 up %52.1
  val?^ | miss    %52.5 = LdVar              eR    length, e52.3
  lgl$#-          %52.6 = Identical                <blt length>, %52.5   <true>
  void                    Branch                   %52.6 -> BB54 (if true) | BB55 (if false)
BB53   <- [14]
  void                    Nop                !     
  val+            %53.1 = %14.2
  dr              %53.2 = CallTarget@0x55eeee44c3c8[Call#5]
  goto BB12
BB62   <- [60]
  val?+           %62.0 = CastType           d     dn %37.2   <val?_>
  val?+           %62.1 = Subassign2_1D      wed   nil, %60.0, %62.0, elided
  void                    StVarSuper         lRW   gpars, %62.1, e46.1
  void                    Invisible          v     
  nil-            %62.4 = nil
  goto BB8
BB63   <- [60]
  void                    Nop                !     
  val?            %63.1 = %37.2
  dr              %63.2 = Typecheck@0x55eeee44c3c8[Type#26]
  goto BB38
BB38   <- [61, 63]
  val?^ | miss    %38.0 = Phi                      %61.1:BB61, %63.1:BB63
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %61.2:BB61, %63.2:BB63
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x55eeee790590+480: [nil, nil, %37.3, %37.2], env=e46.1
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB54   <- [52]
  val?^ | miss    %54.0 = LdVar              eR    gpars, e52.3
  env             e54.1 = (MkEnv)            l     gparname=%52.4, parent=e52.3, context 0
  val?            %54.2 = Force!<wrapped>    !vL   %54.0, e54.1   <vec+>
  lgl$#-          %54.3 = IsType                   %54.2 isA val+   <true>
  lgl$#-          %54.4 = IsEnvStub          R     , e54.1
  void                    Branch                   %54.4 -> BB56 (if true) | BB57 (if false)
BB55   <- [52]
  void                    Nop                !     
  lgl$#-          %55.1 = %52.6
  dr              %55.2 = DeadBranchReached@0x55eeee44c478[Test#0]
  goto BB12
BB12   <- [53, 55]
  val?^ | miss    %12.0 = Phi                      %53.1:BB53, %55.1:BB55
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %53.2:BB53, %55.2:BB55
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x55eeee790590+202: [%11.2], env=e46.1
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB56   <- [54]
  void                    Branch                   %54.3 -> BB58 (if true) | BB59 (if false)
BB57   <- [54]
  void                    Nop                !     
  env             e57.1 = e54.1
  dr              %57.2 = EnvStubMaterialized@0x55eeee44c478[Call#unknown]
  goto BB15
BB58   <- [56]
  val?            %58.0 = Force!<lazy>       !vL   %52.4, e54.1   <str$->
  lgl$#-          %58.1 = IsType                   %58.0 isA val?-
  lgl$#-          %58.2 = IsEnvStub          R     , e54.1
  void                    Branch                   %58.2 -> BB64 (if true) | BB65 (if false)
BB59   <- [56]
  void                    Nop                !     
  lgl$#-          %59.1 = %54.3
  dr              %59.2 = DeadBranchReached@0x55eeee44c478[Test#2]
  goto BB15
BB15   <- [57, 59]
  val?^ | miss    %15.0 = Phi                      e57.1:BB57, %59.1:BB59
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %57.2:BB57, %59.2:BB59
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55eeee790590+251: [], env=e46.1
  fs              %15.5 = FrameState         R     0x55eeee2626a0+69: [<blt length>, %54.2], env=e54.1, next=%15.4
  void                    Deopt              !v    %15.5, %15.3, %15.1   !
BB64   <- [58]
  lgl$#-          %64.0 = IsType                   %54.2 isA val?+
  void                    Branch                   %64.0 -> BB66 (if true) | BB67 (if false)
BB65   <- [58]
  void                    Nop                !     
  env             e65.1 = e54.1
  dr              %65.2 = EnvStubMaterialized@0x55eeee44c478[Call#unknown]
  goto BB17
BB66   <- [64]
  val?+           %66.0 = CastType           d     dn %54.2   <vec+>
  void                    Branch                   %58.1 -> BB68 (if true) | BB69 (if false)
BB67   <- [64]
  void                    Nop                !     
  val?            %67.1 = %54.2
  dr              %67.2 = Typecheck@0x55eeee44c478[Type#4]
  goto BB17
BB17   <- [65, 67, 69]
  val?^ | miss    %17.0 = Phi                      e65.1:BB65, %67.1:BB67, %69.1:BB69
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %65.2:BB65, %67.2:BB67, %69.2:BB69
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x55eeee790590+251: [], env=e46.1
  fs              %17.5 = FrameState         R     0x55eeee2626a0+114: [<blt length>, %54.2, %58.0], env=e54.1, next=%17.4
  void                    Deopt              !v    %17.5, %17.3, %17.1   !
BB68   <- [66]
  val?-           %68.0 = CastType           d     dn %58.0   <str$->
  val?            %68.1 = Extract2_1D        wed   %66.0, %68.0, elided   <(real|str)$->
  lgl$#-          %68.2 = IsType                   %68.1 isA val?-
  void                    Branch                   %68.2 -> BB70 (if true) | BB71 (if false)
BB69   <- [66]
  void                    Nop                !     
  val?            %69.1 = %58.0
  dr              %69.2 = Typecheck@0x55eeee44c478[Type#6]
  goto BB17
BB70   <- [68]
  val?-           %70.0 = CastType           d     dn %68.1   <(real|str)$->
  (int|real)$-    %70.1 = CallSafeBuiltin    wed   length(%70.0)    <int$->
  lgl$#-          %70.2 = IsType                   %70.1 isA int$-
  void                    Branch                   %70.2 -> BB72 (if true) | BB73 (if false)
BB71   <- [68]
  fs              %71.0 = FrameState         R     0x55eeee790590+251: [], env=e46.1
  fs              %71.1 = FrameState         R     0x55eeee2626a0+120: [<blt length>, %68.1], env=e54.1, next=%71.0
  void                    Deopt              !v    %71.1, Typecheck@0x55eeee44c478[Type#7], %68.1   !
BB72   <- [70]
  int$-           %72.0 = CastType           d     dn %70.1
  lgl$-           %72.1 = Eq                 d     %72.0, 0, elided   <lgl$->
  lgl$#-          %72.2 = CheckTrueFalse     e     %72.1
  void                    Branch                   %72.2 -> BB36 (if true) | BB23 (if false)
BB73   <- [70]
  fs              %73.0 = FrameState         R     0x55eeee790590+251: [], env=e46.1
  fs              %73.1 = FrameState         R     0x55eeee2626a0+143: [%70.1], env=e54.1, next=%73.0
  void                    Deopt              !v    %73.1, Typecheck@0x55eeee44c478[Type#8], %70.1   !
BB36   <- [72]
  fs              %36.0 = FrameState         R     0x55eeee790590+251: [], env=e46.1
  env             e36.1 = MaterializeEnv           , e54.1   <@?>
  (cls|spec|blt)  %36.2 = LdFun              !v    stop, e36.1
  fs              %36.3 = FrameState         R     0x55eeee2626a0+182: [%36.2], env=e36.1, next=%36.0
  void                    Deopt              !v    %36.3, DeadCall@0x55eeee44c478[Call#1], %36.2   !
BB23   <- [72]
  val?^ | miss    %23.0 = LdVar              eR    gpars !upd, e46.1
  val?            %23.1 = Force!             !v    %23.0, e46.1
  val?^ | miss    %23.2 = LdVar              eR    as.numeric, e46.1
  lgl$#-          %23.3 = Identical                <blt as.double>, %23.2   <true>
  void                    Branch                   %23.3 -> BB74 (if true) | BB75 (if false)
BB74   <- [23]
  val?^ | miss    %74.0 = LdVar              eR    gpars, e46.1
  val?            %74.1 = Force!<wrapped>    !v    %74.0, e46.1   <vec$+>
  lgl$#-          %74.2 = IsType                   %74.1 isA val+   <true>
  void                    Branch                   %74.2 -> BB76 (if true) | BB77 (if false)
BB75   <- [23]
  fs              %75.0 = FrameState         R     0x55eeee790590+261: [%23.1], env=e46.1
  void                    Deopt              !v    %75.0, DeadBranchReached@0x55eeee44c3c8[Test#2], %23.3   !
BB76   <- [74]
  val?^ | miss    %76.0 = LdVar              eR    gparname, e46.1
  val?            %76.1 = Force!<value>      !v    %76.0, e46.1   <str$->
  lgl$#-          %76.2 = IsType                   %76.1 isA val?-
  lgl$#-          %76.3 = IsType                   %74.1 isA val?+
  void                    Branch                   %76.3 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  fs              %77.0 = FrameState         R     0x55eeee790590+332: [<blt as.double>, %74.1], env=e46.1
  void                    Deopt              !v    %77.0, DeadBranchReached@0x55eeee44c3c8[Test#4], %74.2   !
BB78   <- [76]
  val?+           %78.0 = CastType           d     dn %74.1   <vec$+>
  void                    Branch                   %76.2 -> BB80 (if true) | BB81 (if false)
BB79   <- [76]
  void                    Nop                !     
  val?            %79.1 = %74.1
  dr              %79.2 = Typecheck@0x55eeee44c3c8[Type#18]
  goto BB28
BB80   <- [78]
  val?-           %80.0 = CastType           d     dn %76.1   <str$->
  val?            %80.1 = Extract2_1D        wed   %78.0, %80.0, elided   <real$->
  lgl$#-          %80.2 = IsType                   %80.1 isA real$-
  void                    Branch                   %80.2 -> BB82 (if true) | BB83 (if false)
BB81   <- [78]
  void                    Nop                !     
  val?            %81.1 = %76.1
  dr              %81.2 = Typecheck@0x55eeee44c3c8[Type#20]
  goto BB28
BB28   <- [79, 81]
  val?^ | miss    %28.0 = Phi                      %79.1:BB79, %81.1:BB81
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %79.2:BB79, %81.2:BB81
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55eeee790590+377: [<blt as.double>, %74.1, %76.1], env=e46.1
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB82   <- [80]
  real$-          %82.0 = CastType           d     dn %80.1
  val+            %82.1 = CallSafeBuiltin    wed   as.double(%82.0)    <real$->
  lgl$#-          %82.2 = IsType                   %82.1 isA real$-
  void                    Branch                   %82.2 -> BB84 (if true) | BB85 (if false)
BB83   <- [80]
  fs              %83.0 = FrameState         R     0x55eeee790590+383: [<blt as.double>, %80.1], env=e46.1
  void                    Deopt              !v    %83.0, Typecheck@0x55eeee44c3c8[Type#21], %80.1   !
BB84   <- [82]
  real$-          %84.0 = CastType           d     dn %82.1
  val?^ | miss    %84.1 = LdVar              eR    gpars, ?   <vec$+>
  val?^ | miss    %84.2 = LdVar              eR    gparname, e46.1
  val?            %84.3 = Force!<value>      !v    %84.2, e46.1   <str$->
  val?            %84.4 = Force!             !v    %84.1, e46.1
  lgl$#-          %84.5 = IsType                   %84.4 isA val?+
  lgl$#-          %84.6 = IsType                   %84.3 isA val?-
  void                    Branch                   %84.5 -> BB86 (if true) | BB87 (if false)
BB85   <- [82]
  fs              %85.0 = FrameState         R     0x55eeee790590+406: [%82.1], env=e46.1
  void                    Deopt              !v    %85.0, Typecheck@0x55eeee44c3c8[Type#22], %82.1   !
BB86   <- [84]
  val?+           %86.0 = CastType           d     dn %84.4
  void                    Branch                   %84.6 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  void                    Nop                !     
  val?            %87.1 = %84.4
  dr              %87.2 = Typecheck@0x55eeee44c3c8[Type#23]
  goto BB34
BB88   <- [86]
  val?-           %88.0 = CastType           d     dn %84.3   <str$->
  val?+           %88.1 = Subassign2_1D      wed   %84.0, %86.0, %88.0, elided
  void                    StVarSuper         lRW   gpars, %88.1, e46.1
  void                    Invisible          v     
  val+            %88.4 = %82.1
  goto BB8
BB89   <- [86]
  void                    Nop                !     
  val?            %89.1 = %84.3
  dr              %89.2 = Typecheck@0x55eeee44c3c8[Type#24]
  goto BB34
BB34   <- [87, 89]
  val?^ | miss    %34.0 = Phi                      %87.1:BB87, %89.1:BB89
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %87.2:BB87, %89.2:BB89
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x55eeee790590+437: [%84.0, %84.0, %84.4, %84.3], env=e46.1
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, numnotnull[0x55eeeddd0aa0]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ numnotnull[0x55eeeddd0aa0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
