
┌──────────────────────────────────────────────────────────────────────────────┐
│ cleanEx[0x55eeee9aa9f0]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:  Eager                                                           │
├────── Final PIR Version
cleanEx[0x55eeee9aa9f0]
BB0
  env             e0.0  = MkEnv              l     env(miss)=missingArg, parent=R_GlobalEnv, context 1
  prom-           %0.1  = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p0, e0.0
  val?^ | miss    %0.2  = CastType                 up %0.1
  void                    StArg              lW    env, %0.2, e0.0
  val?^ | miss    %0.4  = LdVar              eR    rm, R_GlobalEnv
  lgl$#-          %0.5  = Identical                %0.4, function(..., list=character(), pos=-(1), envi|...
  void                    Branch                   %0.5 -> BB81 (if true) | BB82 (if false)
BB81   <- [0]
  prom-           %81.0 = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p1, e0.0
  prom-           %81.1 = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p3, e0.0
  val?            %81.2 = StaticCall         !v    rm[0x55eeeef64130](missingArg, %81.0, missingArg, %81.1) { 1n 3n } e0.0
  val?^ | miss    %81.3 = LdVar              eR    RNGkind, e0.0
  lgl$#-          %81.4 = Identical                %81.3, function(kind=NULL, normal.kind=NULL, sample.k|...
  void                    Branch                   %81.4 -> BB83 (if true) | BB84 (if false)
BB82   <- [0]
  fs              %82.0 = FrameState         R     0x55eeed945650+0: [], env=e0.0
  void                    Deopt              !v    %82.0, CallTarget@0x55eeee7afe78[Call#0], %0.4
BB83   <- [81]
  val?            %83.0 = Call               !v    function(kind=NULL, normal.kind=NULL, sample.k|...("default", "default", "default") e0.0
  val?^ | miss    %83.1 = LdVar              eR    set.seed, e0.0
  lgl$#-          %83.2 = Identical                %83.1, function(seed, kind=NULL, normal.kind=NULL, sa|...
  void                    Branch                   %83.2 -> BB85 (if true) | BB86 (if false)
BB84   <- [81]
  fs              %84.0 = FrameState         R     0x55eeed945650+54: [%81.2], env=e0.0
  void                    Deopt              !v    %84.0, CallTarget@0x55eeee7afe78[Call#2], %81.3   !
BB85   <- [83]
  val?            %85.0 = Call               !v    function(seed, kind=NULL, normal.kind=NULL, sa|...(1) e0.0
  val?^ | miss    %85.1 = LdVar              eR    options, e0.0
  lgl$#-          %85.2 = Identical                %85.1, function(...) <(rir::DispatchTable*)0x55eeee00|...
  void                    Branch                   %85.2 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  fs              %86.0 = FrameState         R     0x55eeed945650+97: [%83.0], env=e0.0
  void                    Deopt              !v    %86.0, CallTarget@0x55eeee7afe78[Call#3], %83.1   !
BB87   <- [85]
  dots-           %87.0 = DotsList           l     warn=1
  ct              %87.1 = PushContext        lCL   %87.0, options(warn=1), function(...) <(rir::DispatchTable*)0x55eeee00|..., e0.0
  env             e87.2 = MkEnv              l     ...=%87.0, parent=R_BaseNamespace, context 1
  val?            %87.3 = NamedCall          !v    <blt options>(warn=1) e87.2
  val?            %87.4 = PopContext         C     %87.3, %87.1
  val?^ | miss    %87.5 = LdVar              eR    as.environment, e0.0
  lgl$#-          %87.6 = Identical                <blt as.environment>, %87.5   <true>
  void                    Branch                   %87.6 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  fs              %88.0 = FrameState         R     0x55eeed945650+130: [%85.0], env=e0.0
  void                    Deopt              !v    %88.0, CallTarget@0x55eeee7afe78[Call#4], %85.1   !
BB89   <- [87]
  val?            %89.0 = CallBuiltin        !v    as.environment("CheckExEnv") e0.0   <env+>
  void                    StVar              lW    .CheckExEnv, %89.0, e0.0
  val?^ | miss    %89.2 = LdVar              eR    delayedAssign, e0.0
  lgl$#-          %89.3 = Identical                %89.2, function(x, value, eval.env=parent.frame(1), a|...
  void                    Branch                   %89.3 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x55eeed945650+167: [%87.4], env=e0.0
  void                    Deopt              !v    %90.0, DeadBranchReached@0x55eeee7afe78[Test#0], %87.6   !
BB91   <- [89]
  prom-           %91.0 = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p4, e0.0
  prom-           %91.1 = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p5 (!refl), e0.0
  val?            %91.2 = StaticCall         !v    delayedAssign[0x55eeeedf6940]("T", %91.0, missingArg, %91.1) { 0 1 3n } e0.0
  val?^ | miss    %91.3 = LdVar              eR    delayedAssign, e0.0
  lgl$#-          %91.4 = Identical                %91.3, function(x, value, eval.env=parent.frame(1), a|...
  void                    Branch                   %91.4 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  fs              %92.0 = FrameState         R     0x55eeed945650+265: [], env=e0.0
  void                    Deopt              !v    %92.0, CallTarget@0x55eeee7afe78[Call#6], %89.2   !
BB93   <- [91]
  prom-           %93.0 = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p6, e0.0
  prom-           %93.1 = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p7, e0.0
  val?            %93.2 = StaticCall         !v    delayedAssign[0x55eeeecbf590]("F", %93.0, missingArg, %93.1) { 0 1 3n } e0.0
  val?^ | miss    %93.3 = LdVar              eR    search, e0.0
  lgl$#-          %93.4 = Identical                %93.3, function() <(rir::DispatchTable*)0x55eeee02de6|...
  void                    Branch                   %93.4 -> BB95 (if true) | BB96 (if false)
BB94   <- [91]
  fs              %94.0 = FrameState         R     0x55eeed945650+319: [%91.2], env=e0.0
  void                    Deopt              !v    %94.0, CallTarget@0x55eeee7afe78[Call#8], %91.3   !
BB95   <- [93]
  ct              %95.0 = PushContext        lCL   search(), function() <(rir::DispatchTable*)0x55eeee02de6|..., e0.0
  env             e95.1 = MkEnv              l     parent=R_BaseNamespace, context 1
  val?            %95.2 = CallBuiltin        !v    search() e95.1
  val?            %95.3 = PopContext         C     %95.2, %95.0   <str->
  void                    StVar              lW    sch, %95.3, e0.0
  lgl$#-          %95.5 = IsType                   %95.3 isA val+   <true>
  val             %95.6 = ChkMissing         e     %95.3
  void                    Branch                   %95.5 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  fs              %96.0 = FrameState         R     0x55eeed945650+374: [%93.2], env=e0.0
  void                    Deopt              !v    %96.0, CallTarget@0x55eeee7afe78[Call#10], %93.3   !
BB97   <- [95]
  val?^ | miss    %97.0 = LdVar              eR    %in%, e0.0
  lgl$#-          %97.1 = Identical                %97.0, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %97.1 -> BB99 (if true) | BB100 (if false)
BB98   <- [95]
  void                    Nop                !     
  lgl$#-          %98.1 = %95.5
  dr              %98.2 = DeadBranchReached@0x55eeee7afe78[Test#1]
  goto BB17
BB99   <- [97]
  prom-           %99.0 = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p9, e0.0
  prom-           %99.1 = MkArg                    %95.3, cleanEx[0x55eeee9aa9f0]_p8 (!refl), 
  val?            %99.2 = StaticCall         !v    %in%[0x55eeee0a85c0](%99.1, %99.0) e0.0   <lgl->
  lgl$#-          %99.3 = IsType                   %99.2 isA lgl-
  void                    Branch                   %99.3 -> BB101 (if true) | BB102 (if false)
BB100   <- [97]
  void                    Nop                !     
  val?^ | miss    %100.1 = %97.0
  dr              %100.2 = CallTarget@0x55eeee7afe78[Call#12]
  goto BB17
BB17   <- [98, 100]
  val?^ | miss    %17.0 = Phi                      %98.1:BB98, %100.1:BB100
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %98.2:BB98, %100.2:BB100
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x55eeed945650+416: [], env=e0.0
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB101   <- [99]
  lgl-            %101.0 = CastType           d     dn %99.2
  lgl-            %101.1 = Not                wed   %101.0, elided
  lgl$#-          %101.2 = IsType                   %95.3 isA val?-
  void                    Branch                   %101.2 -> BB103 (if true) | BB104 (if false)
BB102   <- [99]
  fs              %102.0 = FrameState         R     0x55eeed945650+498: [%95.3, %99.2], env=e0.0
  void                    Deopt              !v    %102.0, Typecheck@0x55eeee7afe78[Type#16], %99.2   !
BB103   <- [101]
  val?-           %103.0 = CastType           d     dn %95.3   <str->
  val?            %103.1 = Extract1_1D        wed   %103.0, %101.1, elided   <str->
  void                    StVar              lW    newitems, %103.1, e0.0
  lgl$#-          %103.3 = IsType                   %103.1 isA val?-
  val?^ | miss    %103.4 = LdVar              eR    length, e0.0
  lgl$#-          %103.5 = Identical                <blt length>, %103.4   <true>
  void                    Branch                   %103.5 -> BB105 (if true) | BB106 (if false)
BB104   <- [101]
  fs              %104.0 = FrameState         R     0x55eeed945650+504: [%95.3, %101.1], env=e0.0
  void                    Deopt              !v    %104.0, Typecheck@0x55eeee7afe78[Type#9], %95.3   !
BB105   <- [103]
  val             %105.0 = ChkMissing         e     %103.1
  void                    Branch                   %103.3 -> BB107 (if true) | BB108 (if false)
BB106   <- [103]
  void                    Nop                !     
  lgl$#-          %106.1 = %103.5
  dr              %106.2 = DeadBranchReached@0x55eeee7afe78[Test#2]
  goto BB23
BB107   <- [105]
  val?-           %107.0 = CastType           d     dn %103.1   <str->
  (int|real)$-    %107.1 = CallSafeBuiltin    wed   length(%107.0)    <int$->
  lgl$#-          %107.2 = IsType                   %107.1 isA int$-
  void                    Branch                   %107.2 -> BB109 (if true) | BB110 (if false)
BB108   <- [105]
  void                    Nop                !     
  val?            %108.1 = %103.1
  dr              %108.2 = Typecheck@0x55eeee7afe78[Type#17]
  goto BB23
BB23   <- [106, 108]
  val?^ | miss    %23.0 = Phi                      %106.1:BB106, %108.1:BB108
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %106.2:BB106, %108.2:BB108
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x55eeed945650+520: [], env=e0.0
  void                    Deopt              !v    %23.4, %23.3, %23.1   !
BB109   <- [107]
  int$-           %109.0 = CastType           d     dn %107.1
  lgl$#-          %109.1 = CheckTrueFalse     e     %109.0
  void                    Branch                   %109.1 -> BB79 (if true) | BB27 (if false)
BB110   <- [107]
  void                    Nop                !     
  (int|real)$-    %110.1 = %107.1
  dr              %110.2 = Typecheck@0x55eeee7afe78[Type#20]
  goto BB25
BB79   <- [109]
  (cls|spec|blt)  %79.0 = LdFun              !v    :::, e0.0
  fs              %79.1 = FrameState         R     0x55eeed945650+632: [%79.0], env=e0.0
  void                    Deopt              !v    %79.1, DeadCall@0x55eeee7afe78[Call#14], %79.0   !
BB27   <- [109]
  val?^ | miss    %27.0 = LdVar              eR    .oldSearch, e0.0
  lgl$#-          %27.1 = IsType                   %27.0 isA val?~- | miss
  void                    Branch                   %27.1 -> BB111 (if true) | BB112 (if false)
BB25   <- [110, 112, 114, 116]
  val?^ | miss    %25.0 = Phi                      %110.1:BB110, %112.1:BB112, %114.1:BB114, %116.1:BB116
  val?^ | miss    %25.1 = %25.0
  dr              %25.2 = Phi                      %110.2:BB110, %112.2:BB112, %114.2:BB114, %116.2:BB116
  dr              %25.3 = %25.2
  fs              %25.4 = FrameState         R     0x55eeed945650+611: [%107.1], env=e0.0
  void                    Deopt              !v    %25.4, %25.3, %25.1   !
BB111   <- [27]
  val?~- | miss   %111.0 = CastType           d     dn %27.0
  val?-           %111.1 = Force!<value>            %111.0,    <str->
  lgl$#-          %111.2 = IsType                   %111.1 isA val+   <true>
  void                    Branch                   %111.2 -> BB113 (if true) | BB114 (if false)
BB112   <- [27]
  void                    Nop                !     
  val?^ | miss    %112.1 = %27.0
  dr              %112.2 = Typecheck@0x55eeee7afe78[Type#25]
  goto BB25
BB113   <- [111]
  val?^ | miss    %113.0 = LdVar              eR    %in%, e0.0
  lgl$#-          %113.1 = Identical                %113.0, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %113.1 -> BB115 (if true) | BB116 (if false)
BB114   <- [111]
  void                    Nop                !     
  lgl$#-          %114.1 = %111.2
  dr              %114.2 = DeadBranchReached@0x55eeee7afe78[Test#3]
  goto BB25
BB115   <- [113]
  prom-           %115.0 = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p11, e0.0
  prom-           %115.1 = MkArg                    %111.1, cleanEx[0x55eeee9aa9f0]_p10 (!refl), 
  val?            %115.2 = StaticCall         !v    %in%[0x55eeedab1f10]<hint: 0x55eeee9c8300>(%115.1, %115.0) e0.0   <lgl->
  lgl$#-          %115.3 = IsType                   %115.2 isA lgl-
  void                    Branch                   %115.3 -> BB117 (if true) | BB118 (if false)
BB116   <- [113]
  void                    Nop                !     
  val?^ | miss    %116.1 = %113.0
  dr              %116.2 = CallTarget@0x55eeee7afe78[Call#17]
  goto BB25
BB117   <- [115]
  lgl-            %117.0 = CastType           d     dn %115.2
  lgl-            %117.1 = Not                wed   %117.0, elided
  val?            %117.2 = Extract1_1D        wed   %111.1, %117.1, elided   <str->
  void                    StVar              lW    missitems, %117.2, e0.0
  lgl$#-          %117.4 = IsType                   %117.2 isA val?-
  val?^ | miss    %117.5 = LdVar              eR    length, e0.0
  lgl$#-          %117.6 = Identical                <blt length>, %117.5   <true>
  void                    Branch                   %117.6 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  fs              %118.0 = FrameState         R     0x55eeed945650+780: [%111.1, %115.2], env=e0.0
  void                    Deopt              !v    %118.0, Typecheck@0x55eeee7afe78[Type#31], %115.2   !
BB119   <- [117]
  val             %119.0 = ChkMissing         e     %117.2
  void                    Branch                   %117.4 -> BB121 (if true) | BB122 (if false)
BB120   <- [117]
  void                    Nop                !     
  lgl$#-          %120.1 = %117.6
  dr              %120.2 = DeadBranchReached@0x55eeee7afe78[Test#4]
  goto BB30
BB121   <- [119]
  val?-           %121.0 = CastType           d     dn %117.2   <str->
  (int|real)$-    %121.1 = CallSafeBuiltin    wed   length(%121.0)    <int$->
  lgl$#-          %121.2 = IsType                   %121.1 isA int$-
  void                    Branch                   %121.2 -> BB123 (if true) | BB124 (if false)
BB122   <- [119]
  void                    Nop                !     
  val?            %122.1 = %117.2
  dr              %122.2 = Typecheck@0x55eeee7afe78[Type#32]
  goto BB30
BB30   <- [120, 122]
  val?^ | miss    %30.0 = Phi                      %120.1:BB120, %122.1:BB122
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %120.2:BB120, %122.2:BB122
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55eeed945650+802: [], env=e0.0
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB123   <- [121]
  int$-           %123.0 = CastType           d     dn %121.1
  lgl$#-          %123.1 = CheckTrueFalse     e     %123.0
  void                    Branch                   %123.1 -> BB78 (if true) | BB34 (if false)
BB124   <- [121]
  void                    Nop                !     
  (int|real)$-    %124.1 = %121.1
  dr              %124.2 = Typecheck@0x55eeee7afe78[Type#35]
  goto BB32
BB78   <- [123]
  (cls|spec|blt)  %78.0 = LdFun              !v    warning, e0.0
  fs              %78.1 = FrameState         R     0x55eeed945650+914: [%78.0], env=e0.0
  void                    Deopt              !v    %78.1, DeadCall@0x55eeee7afe78[Call#19], %78.0   !
BB34   <- [123]
  val?^ | miss    %34.0 = LdVar              eR    exists, e0.0
  lgl$#-          %34.1 = Identical                %34.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Branch                   %34.1 -> BB125 (if true) | BB126 (if false)
BB32   <- [124, 126]
  val?^ | miss    %32.0 = Phi                      %124.1:BB124, %126.1:BB126
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %124.2:BB124, %126.2:BB126
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x55eeed945650+893: [%121.1], env=e0.0
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB125   <- [34]
  val?            %125.0 = StaticCall         !v    exists[0x55eeee252b10](".old_wd") e0.0   <lgl$->
  lgl$#-          %125.1 = IsType                   %125.0 isA lgl$-
  void                    Branch                   %125.1 -> BB127 (if true) | BB128 (if false)
BB126   <- [34]
  void                    Nop                !     
  val?^ | miss    %126.1 = %34.0
  dr              %126.2 = CallTarget@0x55eeee7afe78[Call#23]
  goto BB32
BB127   <- [125]
  lgl$-           %127.0 = CastType           d     dn %125.0
  lgl$-           %127.1 = AsLogical                %127.0
  lgl$#-          %127.2 = Identical                %127.1, false
  void                    Branch                   %127.2 -> BB77 (if true) | BB37 (if false)
BB128   <- [125]
  void                    Nop                !     
  val?            %128.1 = %125.0
  dr              %128.2 = Typecheck@0x55eeee7afe78[Type#40]
  goto BB35
BB77   <- [127]
  void                    Nop                !     
  lgl$-           %77.1 = %127.1
  goto BB42
BB37   <- [127]
  val?^ | miss    %37.0 = LdVar              eR    getwd, e0.0
  lgl$#-          %37.1 = Identical                %37.0, function() <(rir::DispatchTable*)0x55eeee1666b|...
  void                    Branch                   %37.1 -> BB129 (if true) | BB130 (if false)
BB35   <- [128, 130]
  val?^ | miss    %35.0 = Phi                      %128.1:BB128, %130.1:BB130
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %128.2:BB128, %130.2:BB130
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x55eeed945650+1005: [%125.0], env=e0.0
  void                    Deopt              !v    %35.4, %35.3, %35.1   !
BB42   <- [77, 135]
  lgl$-           %42.0 = Phi                      %135.3:BB135, %77.1:BB77
  lgl$-           %42.1 = %42.0
  lgl$#-          %42.2 = CheckTrueFalse     e     %42.1
  void                    Branch                   %42.2 -> BB76 (if true) | BB45 (if false)
BB129   <- [37]
  ct              %129.0 = PushContext        lCL   getwd(), function() <(rir::DispatchTable*)0x55eeee1666b|..., e0.0
  env             e129.1 = MkEnv              l     parent=R_BaseNamespace, context 1
  val?            %129.2 = CallBuiltin        !v    getwd() e129.1
  val?            %129.3 = PopContext         C     %129.2, %129.0   <str$->
  void                    StVar              lW    wd, %129.3, e0.0
  lgl$#-          %129.5 = IsType                   %129.3 isA val?-
  val?^ | miss    %129.6 = LdVar              eR    .old_wd, e0.0
  lgl$#-          %129.7 = IsType                   %129.6 isA val?~- | miss
  void                    Branch                   %129.7 -> BB131 (if true) | BB132 (if false)
BB130   <- [37]
  void                    Nop                !     
  val?^ | miss    %130.1 = %37.0
  dr              %130.2 = CallTarget@0x55eeee7afe78[Call#24]
  goto BB35
BB76   <- [42]
  (cls|spec|blt)  %76.0 = LdFun              !v    warning, e0.0
  fs              %76.1 = FrameState         R     0x55eeed945650+1099: [%76.0], env=e0.0
  void                    Deopt              !v    %76.1, DeadCall@0x55eeee7afe78[Call#25], %76.0   !
BB45   <- [42]
  val?^ | miss    %45.0 = LdVar              eR    Sys.getenv, e0.0
  lgl$#-          %45.1 = Identical                %45.0, function(x=NULL, unset="", names=NA) <(rir::Di|...
  void                    Branch                   %45.1 -> BB137 (if true) | BB138 (if false)
BB131   <- [129]
  val?~- | miss   %131.0 = CastType           d     dn %129.6
  val?-           %131.1 = Force!<value>            %131.0,    <str$->
  void                    Branch                   %129.5 -> BB133 (if true) | BB134 (if false)
BB132   <- [129]
  void                    Nop                !     
  val?^ | miss    %132.1 = %129.6
  dr              %132.2 = Typecheck@0x55eeee7afe78[Type#42]
  goto BB38
BB137   <- [45]
  ct              %137.0 = PushContext        lCL   "_R_CHECK_CONNECTIONS_LEFT_OPEN_", false, Sys.getenv("_R_CHECK_CONNECTIONS_LEFT_OPEN_", |..., function(x=NULL, unset="", names=NA) <(rir::Di|..., e0.0
  env             e137.1 = MkEnv              l     x="_R_CHECK_CONNECTIONS_LEFT_OPEN_", unset=false, names(miss)=na-lgl, parent=R_BaseNamespace, context 1
  val?            %137.2 = CallBuiltin        !v    Sys.getenv("_R_CHECK_CONNECTIONS_LEFT_OPEN_", "FALSE") e137.1
  void                    StVar              lW    v, %137.2, e137.1
  val?^ | miss    %137.4 = LdVar              eR    isTRUE, e137.1
  lgl$#-          %137.5 = Identical                %137.4, function(x) <(rir::DispatchTable*)0x55eeed8e19|...
  void                    Branch                   %137.5 -> BB139 (if true) | BB140 (if false)
BB138   <- [45]
  fs              %138.0 = FrameState         R     0x55eeed945650+1083: [%42.1], env=e0.0
  void                    Deopt              !v    %138.0, CallTarget@0x55eeee7afe78[Call#29], %45.0   !
BB133   <- [131]
  val?-           %133.0 = CastType           d     dn %129.3   <str$->
  lgl-            %133.1 = Neq                wed   %133.0, %131.1, elided   <lgl$->
  lgl$#-          %133.2 = IsType                   %133.1 isA lgl$-
  void                    Branch                   %133.2 -> BB135 (if true) | BB136 (if false)
BB134   <- [131]
  void                    Nop                !     
  val?            %134.1 = %129.3
  dr              %134.2 = Typecheck@0x55eeee7afe78[Type#41]
  goto BB38
BB38   <- [132, 134]
  val?^ | miss    %38.0 = Phi                      %132.1:BB132, %134.1:BB134
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %132.2:BB132, %134.2:BB134
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x55eeed945650+1060: [%127.1, %129.3], env=e0.0
  void                    Deopt              !v    %38.4, %38.3, %38.1   !
BB139   <- [137]
  val?^ | miss    %139.0 = LdVar              eR    names, e137.1
  val?            %139.1 = Force!<lazy>       !v    %139.0, e137.1   <lgl$->
  val+            %139.2 = CallSafeBuiltin    wed   is.logical(%139.1)    <lgl$->
  lgl$#-          %139.3 = IsType                   %139.2 isA lgl$-
  void                    Branch                   %139.3 -> BB141 (if true) | BB142 (if false)
BB140   <- [137]
  fs              %140.0 = FrameState         R     0x55eeed945650+1228: [], env=e0.0
  fs              %140.1 = FrameState         R     0x55eeee2878f0+239: [], env=e137.1, next=%140.0
  void                    Deopt              !v    %140.1, CallTarget@0x55eeedb91150[Call#2], %137.4   !
BB135   <- [133]
  lgl$-           %135.0 = CastType           d     dn %133.1
  lgl$-           %135.1 = AsLogical                %135.0
  lgl$-           %135.2 = LAnd                     %127.1, %135.1
  lgl$-           %135.3 = %135.2
  goto BB42
BB136   <- [133]
  fs              %136.0 = FrameState         R     0x55eeed945650+1076: [%127.1, %133.1], env=e0.0
  void                    Deopt              !v    %136.0, Typecheck@0x55eeee7afe78[Type#43], %133.1   !
BB141   <- [139]
  lgl$-           %141.0 = CastType           d     dn %139.2
  lgl$-           %141.1 = AsLogical                %141.0
  lgl$#-          %141.2 = Identical                %141.1, false
  void                    Branch                   %141.2 -> BB75 (if true) | BB50 (if false)
BB142   <- [139]
  void                    Nop                !     
  val+            %142.1 = %139.2
  dr              %142.2 = Typecheck@0x55eeed09ee18[Type#2]
  goto BB48
BB75   <- [141]
  void                    Nop                !     
  lgl$-           %75.1 = %141.1
  goto BB51
BB50   <- [141]
  lgl$#-          %50.0 = IsType                   %139.1 isA lgl$-
  void                    Branch                   %50.0 -> BB145 (if true) | BB146 (if false)
BB48   <- [142, 144, 146]
  val?^ | miss    %48.0 = Phi                      %142.1:BB142, %144.1:BB144, %146.1:BB146
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %142.2:BB142, %144.2:BB144, %146.2:BB146
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x55eeed945650+1228: [], env=e0.0
  fs              %48.5 = FrameState         R     0x55eeee2878f0+271: [], env=e137.1, next=%48.4
  prom-           %48.6 = MkArg                    %139.1, cleanEx[0x55eeee9aa9f0]_p13 (!refl), e137.1
  val?~           %48.7 = CastType                 up %48.6
  env             e48.8 = (MkEnv)            l     x=%48.7, parent=R_BaseNamespace, context 0
  fs              %48.9 = FrameState         R     0x55eeec4dac40+91: [%139.2], env=e48.8, next=%48.5
  void                    Deopt              !v    %48.9, %48.3, %48.1   !
BB51   <- [75, 145]
  lgl$-           %51.0 = Phi                      %145.1:BB145, %75.1:BB75
  lgl$-           %51.1 = %51.0
  lgl$-           %51.2 = AsLogical                %51.1
  lgl$#-          %51.3 = Identical                %51.2, false
  void                    Branch                   %51.3 -> BB74 (if true) | BB52 (if false)
BB145   <- [50]
  lgl$-           %145.0 = AsLogical                %141.1
  lgl$-           %145.1 = %145.0
  goto BB51
BB146   <- [50]
  void                    Nop                !     
  val?            %146.1 = %139.1
  dr              %146.2 = Typecheck@0x55eeed09ee18[Type#4]
  goto BB48
BB74   <- [51]
  void                    Nop                !     
  lgl$-           %74.1 = %51.2
  goto BB53
BB52   <- [51]
  lgl$#-          %52.0 = IsType                   %139.1 isA lgl$-
  void                    Branch                   %52.0 -> BB143 (if true) | BB144 (if false)
BB53   <- [74, 143]
  lgl$-           %53.0 = Phi                      %143.5:BB143, %74.1:BB74
  lgl$-           %53.1 = %53.0
  lgl$-           %53.2 = AsLogical                %53.1
  lgl$#-          %53.3 = Identical                %53.2, false
  void                    Branch                   %53.3 -> BB73 (if true) | BB54 (if false)
BB143   <- [52]
  lgl$-           %143.0 = CastType           d     dn %139.1
  lgl$-           %143.1 = CallSafeBuiltin    wed   is.na(%143.0)    <lgl$->
  lgl$-           %143.2 = Not                d     %143.1, elided
  lgl$-           %143.3 = AsLogical                %143.2
  lgl$-           %143.4 = LAnd                     %51.2, %143.3
  lgl$-           %143.5 = %143.4
  goto BB53
BB144   <- [52]
  void                    Nop                !     
  val?            %144.1 = %139.1
  dr              %144.2 = Typecheck@0x55eeed09ee18[Type#8]
  goto BB48
BB73   <- [53]
  void                    Nop                !     
  lgl$-           %73.1 = %53.2
  goto BB55
BB54   <- [53]
  lgl$-           %54.0 = AsLogical          e     %139.1
  lgl$-           %54.1 = LAnd                     %53.2, %54.0
  lgl$-           %54.2 = %54.1
  goto BB55
BB55   <- [73, 54]
  lgl$-           %55.0 = Phi                      %54.2:BB54, %73.1:BB73
  lgl$-           %55.1 = %55.0
  lgl$-           %55.2 = AsLogical                %55.1
  lgl$#-          %55.3 = Identical                %55.2, true
  void                    Branch                   %55.3 -> BB72 (if true) | BB58 (if false)
BB72   <- [55]
  void                    Nop                !     
  lgl$-           %72.1 = %55.2
  goto BB65
BB58   <- [55]
  val?^ | miss    %58.0 = LdVar              eR    length, e137.1
  lgl$#-          %58.1 = Identical                <blt length>, %58.0   <true>
  void                    Branch                   %58.1 -> BB147 (if true) | BB148 (if false)
BB65   <- [72, 64]
  lgl$-           %65.0 = Phi                      %64.1:BB64, %72.1:BB72
  lgl$-           %65.1 = %65.0
  lgl$#-          %65.2 = CheckTrueFalse     e     %65.1
  void                    Branch                   %65.2 -> BB71 (if true) | BB68 (if false)
BB147   <- [58]
  val?^ | miss    %147.0 = LdVar              eR    x, e137.1
  val?            %147.1 = Force!<value>      !v    %147.0, e137.1   <str$->
  lgl$#-          %147.2 = IsType                   %147.1 isA val?-
  void                    Branch                   %147.2 -> BB151 (if true) | BB152 (if false)
BB148   <- [58]
  fs              %148.0 = FrameState         R     0x55eeed945650+1228: [], env=e0.0
  fs              %148.1 = FrameState         R     0x55eeee2878f0+271: [], env=e137.1, next=%148.0
  prom-           %148.2 = MkArg                    %139.1, cleanEx[0x55eeee9aa9f0]_p14 (!refl), e137.1
  val?~           %148.3 = CastType                 up %148.2
  env             e148.4 = (MkEnv)            l     x=%148.3, parent=R_BaseNamespace, context 0
  fs              %148.5 = FrameState         R     0x55eeec4dac40+342: [%55.1], env=e148.4, next=%148.1
  void                    Deopt              !v    %148.5, DeadBranchReached@0x55eeedb91150[Test#2], %58.1   !
BB71   <- [65]
  fs              %71.0 = FrameState         R     0x55eeed945650+1228: [], env=e0.0
  (cls|spec|blt)  %71.1 = LdFun              !v    structure, e137.1
  fs              %71.2 = FrameState         R     0x55eeee2878f0+471: [%71.1], env=e137.1, next=%71.0
  void                    Deopt              !v    %71.2, DeadCall@0x55eeedb91150[Call#5], %71.1   !
BB68   <- [65]
  val?^ | miss    %68.0 = LdVar              eR    v, e137.1
  lgl$#-          %68.1 = IsType                   %68.0 isA val?~- | miss
  void                    Branch                   %68.1 -> BB149 (if true) | BB150 (if false)
BB151   <- [147]
  val?-           %151.0 = CastType           d     dn %147.1   <str$->
  (int|real)$-    %151.1 = CallSafeBuiltin    wed   length(%151.0)    <int$->
  lgl$#-          %151.2 = IsType                   %151.1 isA int$-
  void                    Branch                   %151.2 -> BB153 (if true) | BB154 (if false)
BB152   <- [147]
  fs              %152.0 = FrameState         R     0x55eeed945650+1228: [], env=e0.0
  fs              %152.1 = FrameState         R     0x55eeee2878f0+352: [%55.2, <blt length>, %147.1], env=e137.1, next=%152.0
  void                    Deopt              !v    %152.1, Typecheck@0x55eeedb91150[Type#10], %147.1   !
BB149   <- [68]
  val?~- | miss   %149.0 = CastType           d     dn %68.0
  val?-           %149.1 = Force!<value>            %149.0,    <str$->
  val?            %149.2 = PopContext         C     %149.1, %137.0   <str$->
  lgl$#-          %149.3 = CheckTrueFalse     we    %149.2
  void                    Branch                   %149.3 -> BB70 (if true) | BB69 (if false)
BB150   <- [68]
  fs              %150.0 = FrameState         R     0x55eeed945650+1228: [], env=e0.0
  fs              %150.1 = FrameState         R     0x55eeee2878f0+441: [%65.1], env=e137.1, next=%150.0
  void                    Deopt              !v    %150.1, Typecheck@0x55eeedb91150[Type#15], %68.0   !
BB153   <- [151]
  int$-           %153.0 = CastType           d     dn %151.1
  lgl$-           %153.1 = Gt                 d     %153.0, 1L, elided   <lgl$->
  lgl$-           %153.2 = AsLogical                %153.1
  lgl$#-          %153.3 = Identical                %153.2, false
  lgl$-           %153.4 = AsLogical                %153.2
  lgl$-           %153.5 = LOr                      %55.2, %153.4
  void                    Branch                   %153.3 -> BB64 (if true) | BB63 (if false)
BB154   <- [151]
  fs              %154.0 = FrameState         R     0x55eeed945650+1228: [], env=e0.0
  fs              %154.1 = FrameState         R     0x55eeee2878f0+374: [%55.2, %151.1], env=e137.1, next=%154.0
  void                    Deopt              !v    %154.1, Typecheck@0x55eeedb91150[Type#11], %151.1   !
BB70   <- [149]
  (cls|spec|blt)  %70.0 = LdFun              !v    showConnections, e0.0
  fs              %70.1 = FrameState         R     0x55eeed945650+1255: [%70.0], env=e0.0
  void                    Deopt              !v    %70.1, DeadCall@0x55eeee7afe78[Call#30], %70.0   !
BB69   <- [149]
  void                    Invisible          v     
  void                    Return             l     nil
BB64   <- [153]
  void                    Nop                !     
  lgl$-           %64.1 = %153.5
  goto BB65
BB63   <- [153]
  fs              %63.0 = FrameState         R     0x55eeed945650+1228: [], env=e0.0
  (cls|spec|blt)  %63.1 = LdFun              !v    isFALSE, e137.1
  fs              %63.2 = FrameState         R     0x55eeee2878f0+403: [%55.2, %153.2, %63.1], env=e137.1, next=%63.0
  void                    Deopt              !v    %63.2, DeadCall@0x55eeedb91150[Call#4], %63.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .GlobalEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     ls, <0x55eeec9a1e48>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cleanEx[0x55eeee9aa9f0]_p2, e0.0
  val?            %0.3  = NamedCall          !     %0.1(envir=%0.2, all.names=true) e0.0   <str->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stop, e0.0
  val?            %0.2  = NamedCall          !     %0.1("T used instead of TRUE", domain=na-lgl) e0.0   <val?_>
  void                    Return             l     %0.2
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .CheckExEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stop, e0.0
  val?            %0.2  = NamedCall          !     %0.1("F used instead of FALSE", domain=na-lgl) e0.0   <val?_>
  void                    Return             l     %0.2
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .CheckExEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sch, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .oldSearch, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .oldSearch, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sch, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    names, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    names, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3

│ cleanEx[0x55eeee9aa9f0]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
