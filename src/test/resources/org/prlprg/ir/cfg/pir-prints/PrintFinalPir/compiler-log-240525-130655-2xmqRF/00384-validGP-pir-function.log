
┌──────────────────────────────────────────────────────────────────────────────┐
│ validGP[0x55eef0a66f90]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
validGP[0x55eef0a66f90]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     gpars=%0.0, parent=<env 0x55eeedfdc408>, context 1
  cls             %0.2  = MkCls                    check.length, e0.1
  cls             %0.3  = MkCls                    numnotnull, e0.1
  cls             %0.4  = MkCls                    checkNA, e0.1
  void                    StVar              lW    check.length, %0.2, e0.1
  void                    StVar              lW    numnotnull, %0.3, e0.1
  void                    StVar              lW    checkNA, %0.4, e0.1
  val?            %0.8  = StaticCall         !v    numnotnull[0x55eeec689440]("fontsize") from %0.3 e0.1
  val?^ | miss    %0.9  = LdVar              eR    checkNA, e0.1
  lgl$#-          %0.10 = Identical                %0.9, %0.4
  void                    Branch                   %0.10 -> BB134 (if true) | BB135 (if false)
BB134   <- [0]
  val?            %134.0 = StaticCall         !v    checkNA[0x55eeeea15790]("fontsize") from %0.4 e0.1
  val?^ | miss    %134.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %134.2 = Identical                %134.1, %0.3
  void                    Branch                   %134.2 -> BB136 (if true) | BB137 (if false)
BB135   <- [0]
  fs              %135.0 = FrameState         R     0x55eeedf72df0+107: [%0.8], env=e0.1
  void                    Deopt              !v    %135.0, CallTarget@0x55eeee44c058[Call#1], %0.9   !
BB136   <- [134]
  val?            %136.0 = StaticCall         !v    numnotnull[0x55eeec689440]("lineheight") from %0.3 e0.1
  val?^ | miss    %136.1 = LdVar              eR    checkNA, e0.1
  lgl$#-          %136.2 = Identical                %136.1, %0.4
  void                    Branch                   %136.2 -> BB138 (if true) | BB139 (if false)
BB137   <- [134]
  fs              %137.0 = FrameState         R     0x55eeedf72df0+140: [%134.0], env=e0.1
  void                    Deopt              !v    %137.0, CallTarget@0x55eeee44c058[Call#2], %134.1   !
BB138   <- [136]
  val?            %138.0 = StaticCall         !v    checkNA[0x55eeeea15790]("lineheight") from %0.4 e0.1
  val?^ | miss    %138.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %138.2 = Identical                %138.1, %0.3
  void                    Branch                   %138.2 -> BB140 (if true) | BB141 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x55eeedf72df0+173: [%136.0], env=e0.1
  void                    Deopt              !v    %139.0, CallTarget@0x55eeee44c058[Call#3], %136.1   !
BB140   <- [138]
  val?            %140.0 = StaticCall         !v    numnotnull[0x55eeec689440]("cex") from %0.3 e0.1
  val?^ | miss    %140.1 = LdVar              eR    checkNA, e0.1
  lgl$#-          %140.2 = Identical                %140.1, %0.4
  void                    Branch                   %140.2 -> BB142 (if true) | BB143 (if false)
BB141   <- [138]
  fs              %141.0 = FrameState         R     0x55eeedf72df0+206: [%138.0], env=e0.1
  void                    Deopt              !v    %141.0, CallTarget@0x55eeee44c058[Call#4], %138.1   !
BB142   <- [140]
  val?            %142.0 = StaticCall         !v    checkNA[0x55eeeea15790]("cex") from %0.4 e0.1
  val?^ | miss    %142.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %142.2 = Identical                %142.1, %0.3
  void                    Branch                   %142.2 -> BB144 (if true) | BB145 (if false)
BB143   <- [140]
  fs              %143.0 = FrameState         R     0x55eeedf72df0+239: [%140.0], env=e0.1
  void                    Deopt              !v    %143.0, CallTarget@0x55eeee44c058[Call#5], %140.1   !
BB144   <- [142]
  val?            %144.0 = StaticCall         !v    numnotnull[0x55eeec689440]("lwd") from %0.3 e0.1
  val?^ | miss    %144.1 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %144.2 = Identical                %144.1, %0.3
  void                    Branch                   %144.2 -> BB146 (if true) | BB147 (if false)
BB145   <- [142]
  fs              %145.0 = FrameState         R     0x55eeedf72df0+272: [%142.0], env=e0.1
  void                    Deopt              !v    %145.0, CallTarget@0x55eeee44c058[Call#6], %142.1   !
BB146   <- [144]
  val?            %146.0 = StaticCall         !v    numnotnull[0x55eeec689440]("lex") from %0.3 e0.1
  val?^ | miss    %146.1 = LdVar              eR    %in%, e0.1
  lgl$#-          %146.2 = Identical                %146.1, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %146.2 -> BB148 (if true) | BB149 (if false)
BB147   <- [144]
  fs              %147.0 = FrameState         R     0x55eeedf72df0+305: [%144.0], env=e0.1
  void                    Deopt              !v    %147.0, CallTarget@0x55eeee44c058[Call#7], %144.1   !
BB148   <- [146]
  prom-           %148.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p0, e0.1
  val?            %148.1 = StaticCall         !v    %in%[0x55eeee24f950]("gamma", %148.0) e0.1   <lgl$->
  lgl$#-          %148.2 = IsType                   %148.1 isA lgl$-
  void                    Branch                   %148.2 -> BB150 (if true) | BB151 (if false)
BB149   <- [146]
  fs              %149.0 = FrameState         R     0x55eeedf72df0+338: [%146.0], env=e0.1
  void                    Deopt              !v    %149.0, CallTarget@0x55eeee44c058[Call#8], %146.1   !
BB150   <- [148]
  lgl$-           %150.0 = CastType           d     dn %148.1
  lgl$#-          %150.1 = CheckTrueFalse     e     %150.0
  void                    Branch                   %150.1 -> BB132 (if true) | BB19 (if false)
BB151   <- [148]
  void                    Nop                !     
  val?            %151.1 = %148.1
  dr              %151.2 = Typecheck@0x55eeee44c058[Type#2]
  goto BB17
BB132   <- [150]
  (cls|spec|blt)  %132.0 = LdFun              !v    warning, e0.1
  fs              %132.1 = FrameState         R     0x55eeedf72df0+397: [%132.0], env=e0.1
  void                    Deopt              !v    %132.1, DeadCall@0x55eeee44c058[Call#10], %132.0   !
BB19   <- [150]
  val?^ | miss    %19.0 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %19.1 = Identical                %19.0, %0.3
  void                    Branch                   %19.1 -> BB152 (if true) | BB153 (if false)
BB17   <- [151, 153]
  val?^ | miss    %17.0 = Phi                      %151.1:BB151, %153.1:BB153
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %151.2:BB151, %153.2:BB153
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x55eeedf72df0+376: [%148.1], env=e0.1
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB152   <- [19]
  val?            %152.0 = StaticCall         !v    numnotnull[0x55eeec689440]("alpha") from %0.3 e0.1
  val?^ | miss    %152.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %152.2 = Identical                <blt is.na>, %152.1   <true>
  void                    Branch                   %152.2 -> BB154 (if true) | BB155 (if false)
BB153   <- [19]
  void                    Nop                !     
  val?^ | miss    %153.1 = %19.0
  dr              %153.2 = CallTarget@0x55eeee44c058[Call#13]
  goto BB17
BB154   <- [152]
  val?^ | miss    %154.0 = LdVar              eR    match, e0.1
  lgl$#-          %154.1 = Identical                %154.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %154.1 -> BB156 (if true) | BB157 (if false)
BB155   <- [152]
  void                    Nop                !     
  lgl$#-          %155.1 = %152.2
  dr              %155.2 = DeadBranchReached@0x55eeee44c058[Test#0]
  goto BB20
BB156   <- [154]
  val?^ | miss    %156.0 = LdVar              eR    names, e0.1
  lgl$#-          %156.1 = Identical                %156.0, <blt names>
  void                    Branch                   %156.1 -> BB158 (if true) | BB159 (if false)
BB157   <- [154]
  void                    Nop                !     
  val?^ | miss    %157.1 = %154.0
  dr              %157.2 = CallTarget@0x55eeee44c058[Call#17]
  goto BB20
BB20   <- [155, 157, 159]
  val?^ | miss    %20.0 = Phi                      %155.1:BB155, %157.1:BB157, %159.1:BB159
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %155.2:BB155, %157.2:BB157, %159.2:BB159
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x55eeedf72df0+495: [%152.0], env=e0.1
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB158   <- [156]
  val?^ | miss    %158.0 = LdVar              eR    gpars, e0.1
  val?            %158.1 = Force!<wrapped>    !v    %158.0, e0.1   <vec+>
  val?            %158.2 = CallBuiltin        !v    names(%158.1) e0.1   <(nil|str)->
  lgl$#-          %158.3 = IsType                   %158.2 isA val?-
  void                    Branch                   %158.3 -> BB160 (if true) | BB161 (if false)
BB159   <- [156]
  void                    Nop                !     
  val?^ | miss    %159.1 = %156.0
  dr              %159.2 = CallTarget@0x55eeee44c058[Call#18]
  goto BB20
BB160   <- [158]
  val?-           %160.0 = CastType           d     dn %158.2   <(nil|str)->
  val+            %160.1 = CallSafeBuiltin    wed   match("col", %160.0, NA, nil)    <int$->
  lgl$#-          %160.2 = IsType                   %160.1 isA int$-
  void                    Branch                   %160.2 -> BB162 (if true) | BB163 (if false)
BB161   <- [158]
  fs              %161.0 = FrameState         R     0x55eeedf72df0+593: [<blt is.na>], env=e0.1
  prom-           %161.1 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p2, e0.1
  val?^           %161.2 = CastType                 up %161.1
  env             e161.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%161.2, x="col", parent=R_BaseNamespace, context 0
  fs              %161.4 = FrameState         R     0x55eeec291d40+23: ["col"], env=e161.3, next=%161.0
  fs              %161.5 = FrameState         R     0x55eeedbcb970+32(pr): [%158.2], env=e0.1, next=%161.4
  void                    Deopt              !v    %161.5, Typecheck@0x55eeec2e4cb0[Type#1], %158.2   !
BB162   <- [160]
  int$-           %162.0 = CastType           d     dn %160.1
  lgl$-           %162.1 = CallSafeBuiltin    wed   is.na(%162.0)    <lgl$->
  lgl$-           %162.2 = Not                d     %162.1, elided
  lgl$#-          %162.3 = CheckTrueFalse     e     %162.2
  void                    Branch                   %162.3 -> BB127 (if true) | BB26 (if false)
BB163   <- [160]
  prom-           %163.0 = MkArg                    %160.0, validGP[0x55eef0a66f90]_p2 (!refl), e0.1
  val?~           %163.1 = CastType                 up %163.0
  fs              %163.2 = FrameState         R     0x55eeedf72df0+593: [<blt is.na>], env=e0.1
  env             e163.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%163.1, x="col", parent=R_BaseNamespace, context 0
  fs              %163.4 = FrameState         R     0x55eeec291d40+69: [%160.1], env=e163.3, next=%163.2
  void                    Deopt              !v    %163.4, Typecheck@0x55eeee44c058[Type#11], %160.1   !
BB127   <- [162]
  (cls|spec|blt)  %127.0 = LdFun              !v    $, <0x55eeeba7cc10>, e0.1
  prom-           %127.1 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p29, e0.1
  prom-           %127.2 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p30, e0.1
  val?            %127.3 = Call               !v    %127.0(%127.1, %127.2) e0.1   <(nil|str)->
  lgl$-           %127.4 = Is                       %127.3, NULL
  lgl$#-          %127.5 = CheckTrueFalse     e     %127.4
  void                    Branch                   %127.5 -> BB131 (if true) | BB130 (if false)
BB26   <- [162]
  void                    Nop                !     
  goto BB27
BB131   <- [127]
  (cls|spec|blt)  %131.0 = LdFun              !v    <-, <0x55eeeba71da8>, e0.1
  prom-           %131.1 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p31, e0.1
  val?            %131.2 = Call               !v    %131.0(%131.1, nil) e0.1
  goto BB27
BB130   <- [127]
  val?^ | miss    %130.0 = LdVar              eR    check.length, e0.1
  lgl$#-          %130.1 = Identical                %130.0, %0.2
  void                    Branch                   %130.1 -> BB168 (if true) | BB169 (if false)
BB27   <- [26, 131, 168]
  val?^ | miss    %27.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %27.1 = Identical                <blt is.na>, %27.0   <true>
  void                    Branch                   %27.1 -> BB164 (if true) | BB165 (if false)
BB168   <- [130]
  val?            %168.0 = StaticCall         !v    check.length[0x55eeef71db50]("col") from %0.2 e0.1
  goto BB27
BB169   <- [130]
  fs              %169.0 = FrameState         R     0x55eeedf72df0+669: [%127.3], env=e0.1
  void                    Deopt              !v    %169.0, CallTarget@0x55eeee44c058[Call#20], %130.0   !
BB164   <- [27]
  val?^ | miss    %164.0 = LdVar              eR    match, e0.1
  lgl$#-          %164.1 = Identical                %164.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %164.1 -> BB166 (if true) | BB167 (if false)
BB165   <- [27]
  void                    Nop                !     
  lgl$#-          %165.1 = %27.1
  dr              %165.2 = DeadBranchReached@0x55eeee44c058[Test#1]
  goto BB28
BB166   <- [164]
  val?^ | miss    %166.0 = LdVar              eR    names, e0.1
  lgl$#-          %166.1 = Identical                %166.0, <blt names>
  void                    Branch                   %166.1 -> BB170 (if true) | BB171 (if false)
BB167   <- [164]
  void                    Nop                !     
  val?^ | miss    %167.1 = %164.0
  dr              %167.2 = CallTarget@0x55eeee44c058[Call#26]
  goto BB28
BB28   <- [165, 167, 171]
  val?^ | miss    %28.0 = Phi                      %165.1:BB165, %167.1:BB167, %171.1:BB171
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %165.2:BB165, %167.2:BB167, %171.2:BB171
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55eeedf72df0+761: [], env=e0.1
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB170   <- [166]
  val?^ | miss    %170.0 = LdVar              eR    gpars, e0.1
  val?            %170.1 = Force!<wrapped>    !v    %170.0, e0.1   <vec+>
  val?            %170.2 = CallBuiltin        !v    names(%170.1) e0.1   <(nil|str)->
  lgl$#-          %170.3 = IsType                   %170.2 isA val?-
  void                    Branch                   %170.3 -> BB172 (if true) | BB173 (if false)
BB171   <- [166]
  void                    Nop                !     
  val?^ | miss    %171.1 = %166.0
  dr              %171.2 = CallTarget@0x55eeee44c058[Call#27]
  goto BB28
BB172   <- [170]
  val?-           %172.0 = CastType           d     dn %170.2   <(nil|str)->
  val+            %172.1 = CallSafeBuiltin    wed   match("fill", %172.0, NA, nil)    <int$->
  lgl$#-          %172.2 = IsType                   %172.1 isA int$-
  void                    Branch                   %172.2 -> BB174 (if true) | BB175 (if false)
BB173   <- [170]
  prom-           %173.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p4, e0.1
  val?^           %173.1 = CastType                 up %173.0
  fs              %173.2 = FrameState         R     0x55eeedf72df0+858: [<blt is.na>], env=e0.1
  env             e173.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%173.1, x="fill", parent=R_BaseNamespace, context 0
  fs              %173.4 = FrameState         R     0x55eeec291d40+23: ["fill"], env=e173.3, next=%173.2
  fs              %173.5 = FrameState         R     0x55eeedf5ba60+32(pr): [%170.2], env=e0.1, next=%173.4
  void                    Deopt              !v    %173.5, Typecheck@0x55eeec2e4cb0[Type#1], %170.2   !
BB174   <- [172]
  int$-           %174.0 = CastType           d     dn %172.1
  lgl$-           %174.1 = CallSafeBuiltin    wed   is.na(%174.0)    <lgl$->
  lgl$-           %174.2 = Not                d     %174.1, elided
  lgl$#-          %174.3 = CheckTrueFalse     e     %174.2
  void                    Branch                   %174.3 -> BB113 (if true) | BB34 (if false)
BB175   <- [172]
  prom-           %175.0 = MkArg                    %172.0, validGP[0x55eef0a66f90]_p4 (!refl), e0.1
  val?~           %175.1 = CastType                 up %175.0
  fs              %175.2 = FrameState         R     0x55eeedf72df0+858: [<blt is.na>], env=e0.1
  env             e175.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%175.1, x="fill", parent=R_BaseNamespace, context 0
  fs              %175.4 = FrameState         R     0x55eeec291d40+69: [%172.1], env=e175.3, next=%175.2
  void                    Deopt              !v    %175.4, Typecheck@0x55eeee44c058[Type#24], %172.1   !
BB113   <- [174]
  (cls|spec|blt)  %113.0 = LdFun              !v    $, <0x55eeeba7cc10>, e0.1
  prom-           %113.1 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p24, e0.1
  prom-           %113.2 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p25, e0.1
  val?            %113.3 = Call               !v    %113.0(%113.1, %113.2) e0.1   <str$->
  lgl$-           %113.4 = Is                       %113.3, NULL
  lgl$#-          %113.5 = CheckTrueFalse     e     %113.4
  void                    Branch                   %113.5 -> BB126 (if true) | BB116 (if false)
BB34   <- [174]
  void                    Nop                !     
  goto BB35
BB126   <- [113]
  (cls|spec|blt)  %126.0 = LdFun              !v    <-, e0.1
  fs              %126.1 = FrameState         R     0x55eeedf72df0+1042: [%126.0], env=e0.1
  void                    Deopt              !v    %126.1, DeadCall@0x55eeee44c058[Call#32], %126.0   !
BB116   <- [113]
  val?^ | miss    %116.0 = LdVar              eR    is.pattern, e0.1
  lgl$#-          %116.1 = Identical                %116.0, function(x) <(rir::DispatchTable*)0x55eeee33d9|...
  void                    Branch                   %116.1 -> BB180 (if true) | BB181 (if false)
BB35   <- [34, 124]
  val?^ | miss    %35.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %35.1 = Identical                <blt is.na>, %35.0   <true>
  void                    Branch                   %35.1 -> BB176 (if true) | BB177 (if false)
BB180   <- [116]
  prom-           %180.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p26, e0.1
  ct              %180.1 = PushContext        lCL   %180.0, is.pattern($(gpars, fill)), function(x) <(rir::DispatchTable*)0x55eeee33d9|..., e0.1
  val?^           %180.2 = CastType                 up %180.0
  val?^ | miss    %180.3 = LdVar              eR    inherits, <env 0x55eeedfdc408>
  lgl$#-          %180.4 = Identical                %180.3, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %180.4 -> BB184 (if true) | BB185 (if false)
BB181   <- [116]
  fs              %181.0 = FrameState         R     0x55eeedf72df0+934: [%113.3], env=e0.1
  void                    Deopt              !v    %181.0, CallTarget@0x55eeee44c058[Call#29], %116.0   !
BB176   <- [35]
  val?^ | miss    %176.0 = LdVar              eR    match, e0.1
  lgl$#-          %176.1 = Identical                %176.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %176.1 -> BB178 (if true) | BB179 (if false)
BB177   <- [35]
  void                    Nop                !     
  lgl$#-          %177.1 = %35.1
  dr              %177.2 = DeadBranchReached@0x55eeee44c058[Test#2]
  goto BB36
BB184   <- [180]
  env             e184.0 = MkEnv              l     x=%180.2, parent=<env 0x55eeedfdc408>, context 1
  prom-           %184.1 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p38, e184.0
  ct              %184.2 = PushContext        lCL   %184.1, "GridPattern", inherits(x, "GridPattern"), function(x, what, which=FALSE) <(rir::Dispatch|..., e184.0
  val?^           %184.3 = CastType                 up %184.1
  env             e184.4 = MkEnv              l     x=%184.3, what="GridPattern", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %184.5 = Force!<lazy>       !vL   %184.3, e184.4   <val?>
  val?            %184.6 = CallBuiltin        !v    inherits(%184.5, "GridPattern", false) e184.4
  val?            %184.7 = PopContext         C     %184.6, %184.2   <lgl$->
  lgl$#-          %184.8 = IsType                   %184.7 isA lgl$-
  void                    Branch                   %184.8 -> BB190 (if true) | BB191 (if false)
BB185   <- [180]
  fs              %185.0 = FrameState         R     0x55eeedf72df0+982: [], env=e0.1
  env             e185.1 = (MkEnv)            l     x=%180.2, parent=<env 0x55eeedfdc408>, context 1
  fs              %185.2 = FrameState         R     0x55eeedb21e80+0: [], env=e185.1, next=%185.0
  void                    Deopt              !v    %185.2, CallTarget@0x55eeefb7bfa8[Call#0], %180.3   !
BB178   <- [176]
  val?^ | miss    %178.0 = LdVar              eR    names, e0.1
  lgl$#-          %178.1 = Identical                %178.0, <blt names>
  void                    Branch                   %178.1 -> BB182 (if true) | BB183 (if false)
BB179   <- [176]
  void                    Nop                !     
  val?^ | miss    %179.1 = %176.0
  dr              %179.2 = CallTarget@0x55eeee44c058[Call#37]
  goto BB36
BB36   <- [177, 179, 183]
  val?^ | miss    %36.0 = Phi                      %177.1:BB177, %179.1:BB179, %183.1:BB183
  val?^ | miss    %36.1 = %36.0
  dr              %36.2 = Phi                      %177.2:BB177, %179.2:BB179, %183.2:BB183
  dr              %36.3 = %36.2
  fs              %36.4 = FrameState         R     0x55eeedf72df0+1075: [], env=e0.1
  void                    Deopt              !v    %36.4, %36.3, %36.1   !
BB190   <- [184]
  lgl$-           %190.0 = CastType           d     dn %184.7
  val?            %190.1 = PopContext         C     %190.0, %180.1   <lgl$->
  lgl$#-          %190.2 = IsType                   %190.1 isA lgl$-
  void                    Branch                   %190.2 -> BB192 (if true) | BB193 (if false)
BB191   <- [184]
  fs              %191.0 = FrameState         R     0x55eeedf72df0+982: [], env=e0.1
  fs              %191.1 = FrameState         R     0x55eeedb21e80+37: [%184.7], env=e184.0, next=%191.0
  void                    Deopt              !v    %191.1, Typecheck@0x55eeefb7bfa8[Type#1], %184.7   !
BB182   <- [178]
  val?^ | miss    %182.0 = LdVar              eR    gpars, e0.1
  val?            %182.1 = Force!<wrapped>    !v    %182.0, e0.1   <vec+>
  val?            %182.2 = CallBuiltin        !v    names(%182.1) e0.1   <(nil|str)->
  lgl$#-          %182.3 = IsType                   %182.2 isA val?-
  void                    Branch                   %182.3 -> BB186 (if true) | BB187 (if false)
BB183   <- [178]
  void                    Nop                !     
  val?^ | miss    %183.1 = %178.0
  dr              %183.2 = CallTarget@0x55eeee44c058[Call#38]
  goto BB36
BB192   <- [190]
  lgl$-           %192.0 = CastType           d     dn %190.1
  lgl$-           %192.1 = Not                d     %192.0, elided
  lgl$#-          %192.2 = CheckTrueFalse     e     %192.1
  void                    Branch                   %192.2 -> BB125 (if true) | BB123 (if false)
BB193   <- [190]
  void                    Nop                !     
  val?            %193.1 = %190.1
  dr              %193.2 = Typecheck@0x55eeee44c058[Type#32]
  goto BB121
BB186   <- [182]
  val?-           %186.0 = CastType           d     dn %182.2   <(nil|str)->
  val+            %186.1 = CallSafeBuiltin    wed   match("lty", %186.0, NA, nil)    <int$->
  lgl$#-          %186.2 = IsType                   %186.1 isA int$-
  void                    Branch                   %186.2 -> BB188 (if true) | BB189 (if false)
BB187   <- [182]
  fs              %187.0 = FrameState         R     0x55eeedf72df0+1172: [<blt is.na>], env=e0.1
  prom-           %187.1 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p6, e0.1
  val?^           %187.2 = CastType                 up %187.1
  env             e187.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%187.2, x="lty", parent=R_BaseNamespace, context 0
  fs              %187.4 = FrameState         R     0x55eeec291d40+23: ["lty"], env=e187.3, next=%187.0
  fs              %187.5 = FrameState         R     0x55eeedefdaa0+32(pr): [%182.2], env=e0.1, next=%187.4
  void                    Deopt              !v    %187.5, Typecheck@0x55eeec2e4cb0[Type#1], %182.2   !
BB125   <- [192]
  val?^ | miss    %125.0 = LdVar              eR    check.length, e0.1
  lgl$#-          %125.1 = Identical                %125.0, %0.2
  void                    Branch                   %125.1 -> BB194 (if true) | BB195 (if false)
BB123   <- [192]
  void                    Nop                !     
  goto BB124
BB121   <- [193, 195]
  val?^ | miss    %121.0 = Phi                      %193.1:BB193, %195.1:BB195
  val?^ | miss    %121.1 = %121.0
  dr              %121.2 = Phi                      %193.2:BB193, %195.2:BB195
  dr              %121.3 = %121.2
  fs              %121.4 = FrameState         R     0x55eeedf72df0+982: [%190.1], env=e0.1
  void                    Deopt              !v    %121.4, %121.3, %121.1   !
BB188   <- [186]
  int$-           %188.0 = CastType           d     dn %186.1
  lgl$-           %188.1 = CallSafeBuiltin    wed   is.na(%188.0)    <lgl$->
  lgl$-           %188.2 = Not                d     %188.1, elided
  lgl$#-          %188.3 = CheckTrueFalse     e     %188.2
  void                    Branch                   %188.3 -> BB108 (if true) | BB42 (if false)
BB189   <- [186]
  prom-           %189.0 = MkArg                    %186.0, validGP[0x55eef0a66f90]_p6 (!refl), e0.1
  val?~           %189.1 = CastType                 up %189.0
  fs              %189.2 = FrameState         R     0x55eeedf72df0+1172: [<blt is.na>], env=e0.1
  env             e189.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%189.1, x="lty", parent=R_BaseNamespace, context 0
  fs              %189.4 = FrameState         R     0x55eeec291d40+69: [%186.1], env=e189.3, next=%189.2
  void                    Deopt              !v    %189.4, Typecheck@0x55eeee44c058[Type#41], %186.1   !
BB194   <- [125]
  val?            %194.0 = StaticCall         !v    check.length[0x55eeef71db50]("fill") from %0.2 e0.1
  goto BB124
BB195   <- [125]
  void                    Nop                !     
  val?^ | miss    %195.1 = %125.0
  dr              %195.2 = CallTarget@0x55eeee44c058[Call#31]
  goto BB121
BB124   <- [123, 194]
  void                    Nop                !     
  goto BB35
BB108   <- [188]
  (cls|spec|blt)  %108.0 = LdFun              !v    $, <0x55eeeba7cc10>, e0.1
  prom-           %108.1 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p22, e0.1
  prom-           %108.2 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p23, e0.1
  val?            %108.3 = Call               !v    %108.0(%108.1, %108.2) e0.1   <str$->
  lgl$-           %108.4 = Is                       %108.3, NULL
  lgl$#-          %108.5 = CheckTrueFalse     e     %108.4
  void                    Branch                   %108.5 -> BB112 (if true) | BB111 (if false)
BB42   <- [188]
  void                    Nop                !     
  goto BB43
BB112   <- [108]
  (cls|spec|blt)  %112.0 = LdFun              !v    <-, e0.1
  fs              %112.1 = FrameState         R     0x55eeedf72df0+1307: [%112.0], env=e0.1
  void                    Deopt              !v    %112.1, DeadCall@0x55eeee44c058[Call#41], %112.0   !
BB111   <- [108]
  val?^ | miss    %111.0 = LdVar              eR    check.length, e0.1
  lgl$#-          %111.1 = Identical                %111.0, %0.2
  void                    Branch                   %111.1 -> BB198 (if true) | BB199 (if false)
BB43   <- [42, 198]
  val?^ | miss    %43.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %43.1 = Identical                <blt is.na>, %43.0   <true>
  void                    Branch                   %43.1 -> BB196 (if true) | BB197 (if false)
BB198   <- [111]
  val?            %198.0 = StaticCall         !v    check.length[0x55eeef71db50]("lty") from %0.2 e0.1
  goto BB43
BB199   <- [111]
  fs              %199.0 = FrameState         R     0x55eeedf72df0+1248: [%108.3], env=e0.1
  void                    Deopt              !v    %199.0, CallTarget@0x55eeee44c058[Call#40], %111.0   !
BB196   <- [43]
  val?^ | miss    %196.0 = LdVar              eR    match, e0.1
  lgl$#-          %196.1 = Identical                %196.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %196.1 -> BB200 (if true) | BB201 (if false)
BB197   <- [43]
  void                    Nop                !     
  lgl$#-          %197.1 = %43.1
  dr              %197.2 = DeadBranchReached@0x55eeee44c058[Test#3]
  goto BB44
BB200   <- [196]
  val?^ | miss    %200.0 = LdVar              eR    names, e0.1
  lgl$#-          %200.1 = Identical                %200.0, <blt names>
  void                    Branch                   %200.1 -> BB202 (if true) | BB203 (if false)
BB201   <- [196]
  void                    Nop                !     
  val?^ | miss    %201.1 = %196.0
  dr              %201.2 = CallTarget@0x55eeee44c058[Call#46]
  goto BB44
BB44   <- [197, 201, 203]
  val?^ | miss    %44.0 = Phi                      %197.1:BB197, %201.1:BB201, %203.1:BB203
  val?^ | miss    %44.1 = %44.0
  dr              %44.2 = Phi                      %197.2:BB197, %201.2:BB201, %203.2:BB203
  dr              %44.3 = %44.2
  fs              %44.4 = FrameState         R     0x55eeedf72df0+1340: [], env=e0.1
  void                    Deopt              !v    %44.4, %44.3, %44.1   !
BB202   <- [200]
  val?^ | miss    %202.0 = LdVar              eR    gpars, e0.1
  val?            %202.1 = Force!<wrapped>    !v    %202.0, e0.1   <vec+>
  val?            %202.2 = CallBuiltin        !v    names(%202.1) e0.1   <(nil|str)->
  lgl$#-          %202.3 = IsType                   %202.2 isA val?-
  void                    Branch                   %202.3 -> BB204 (if true) | BB205 (if false)
BB203   <- [200]
  void                    Nop                !     
  val?^ | miss    %203.1 = %200.0
  dr              %203.2 = CallTarget@0x55eeee44c058[Call#47]
  goto BB44
BB204   <- [202]
  val?-           %204.0 = CastType           d     dn %202.2   <(nil|str)->
  val+            %204.1 = CallSafeBuiltin    wed   match("lineend", %204.0, NA, nil)    <int$->
  lgl$#-          %204.2 = IsType                   %204.1 isA int$-
  void                    Branch                   %204.2 -> BB206 (if true) | BB207 (if false)
BB205   <- [202]
  fs              %205.0 = FrameState         R     0x55eeedf72df0+1437: [<blt is.na>], env=e0.1
  prom-           %205.1 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p8, e0.1
  val?^           %205.2 = CastType                 up %205.1
  env             e205.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%205.2, x="lineend", parent=R_BaseNamespace, context 0
  fs              %205.4 = FrameState         R     0x55eeec291d40+23: ["lineend"], env=e205.3, next=%205.0
  fs              %205.5 = FrameState         R     0x55eeee0df480+32(pr): [%202.2], env=e0.1, next=%205.4
  void                    Deopt              !v    %205.5, Typecheck@0x55eeec2e4cb0[Type#1], %202.2   !
BB206   <- [204]
  int$-           %206.0 = CastType           d     dn %204.1
  lgl$-           %206.1 = CallSafeBuiltin    wed   is.na(%206.0)    <lgl$->
  lgl$-           %206.2 = Not                d     %206.1, elided
  lgl$#-          %206.3 = CheckTrueFalse     e     %206.2
  void                    Branch                   %206.3 -> BB107 (if true) | BB52 (if false)
BB207   <- [204]
  prom-           %207.0 = MkArg                    %204.0, validGP[0x55eef0a66f90]_p8 (!refl), e0.1
  val?~           %207.1 = CastType                 up %207.0
  fs              %207.2 = FrameState         R     0x55eeedf72df0+1437: [<blt is.na>], env=e0.1
  env             e207.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%207.1, x="lineend", parent=R_BaseNamespace, context 0
  fs              %207.4 = FrameState         R     0x55eeec291d40+69: [%204.1], env=e207.3, next=%207.2
  void                    Deopt              !v    %207.4, Typecheck@0x55eeee44c058[Type#54], %204.1   !
BB107   <- [206]
  (cls|spec|blt)  %107.0 = LdFun              !v    $, e0.1
  fs              %107.1 = FrameState         R     0x55eeedf72df0+1481: [%107.0], env=e0.1
  void                    Deopt              !v    %107.1, DeadCall@0x55eeee44c058[Call#48], %107.0   !
BB52   <- [206]
  val?^ | miss    %52.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %52.1 = Identical                <blt is.na>, %52.0   <true>
  void                    Branch                   %52.1 -> BB208 (if true) | BB209 (if false)
BB208   <- [52]
  val?^ | miss    %208.0 = LdVar              eR    match, e0.1
  lgl$#-          %208.1 = Identical                %208.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %208.1 -> BB210 (if true) | BB211 (if false)
BB209   <- [52]
  void                    Nop                !     
  lgl$#-          %209.1 = %52.1
  dr              %209.2 = DeadBranchReached@0x55eeee44c058[Test#4]
  goto BB50
BB210   <- [208]
  val?^ | miss    %210.0 = LdVar              eR    names, e0.1
  lgl$#-          %210.1 = Identical                %210.0, <blt names>
  void                    Branch                   %210.1 -> BB212 (if true) | BB213 (if false)
BB211   <- [208]
  void                    Nop                !     
  val?^ | miss    %211.1 = %208.0
  dr              %211.2 = CallTarget@0x55eeee44c058[Call#55]
  goto BB50
BB50   <- [209, 211, 213]
  val?^ | miss    %50.0 = Phi                      %209.1:BB209, %211.1:BB211, %213.1:BB213
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %209.2:BB209, %211.2:BB211, %213.2:BB213
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55eeedf72df0+1459: [%206.1], env=e0.1
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB212   <- [210]
  val?^ | miss    %212.0 = LdVar              eR    gpars, e0.1
  val?            %212.1 = Force!<wrapped>    !v    %212.0, e0.1   <vec+>
  val?            %212.2 = CallBuiltin        !v    names(%212.1) e0.1   <(nil|str)->
  lgl$#-          %212.3 = IsType                   %212.2 isA val?-
  void                    Branch                   %212.3 -> BB214 (if true) | BB215 (if false)
BB213   <- [210]
  void                    Nop                !     
  val?^ | miss    %213.1 = %210.0
  dr              %213.2 = CallTarget@0x55eeee44c058[Call#56]
  goto BB50
BB214   <- [212]
  val?-           %214.0 = CastType           d     dn %212.2   <(nil|str)->
  val+            %214.1 = CallSafeBuiltin    wed   match("linejoin", %214.0, NA, nil)    <int$->
  lgl$#-          %214.2 = IsType                   %214.1 isA int$-
  void                    Branch                   %214.2 -> BB216 (if true) | BB217 (if false)
BB215   <- [212]
  prom-           %215.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p10, e0.1
  val?^           %215.1 = CastType                 up %215.0
  fs              %215.2 = FrameState         R     0x55eeedf72df0+1702: [<blt is.na>], env=e0.1
  env             e215.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%215.1, x="linejoin", parent=R_BaseNamespace, context 0
  fs              %215.4 = FrameState         R     0x55eeec291d40+23: ["linejoin"], env=e215.3, next=%215.2
  fs              %215.5 = FrameState         R     0x55eeeda19440+32(pr): [%212.2], env=e0.1, next=%215.4
  void                    Deopt              !v    %215.5, Typecheck@0x55eeec2e4cb0[Type#1], %212.2   !
BB216   <- [214]
  int$-           %216.0 = CastType           d     dn %214.1
  lgl$-           %216.1 = CallSafeBuiltin    wed   is.na(%216.0)    <lgl$->
  lgl$-           %216.2 = Not                d     %216.1, elided
  lgl$#-          %216.3 = CheckTrueFalse     e     %216.2
  void                    Branch                   %216.3 -> BB106 (if true) | BB59 (if false)
BB217   <- [214]
  prom-           %217.0 = MkArg                    %214.0, validGP[0x55eef0a66f90]_p10 (!refl), e0.1
  val?~           %217.1 = CastType                 up %217.0
  fs              %217.2 = FrameState         R     0x55eeedf72df0+1702: [<blt is.na>], env=e0.1
  env             e217.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%217.1, x="linejoin", parent=R_BaseNamespace, context 0
  fs              %217.4 = FrameState         R     0x55eeec291d40+69: [%214.1], env=e217.3, next=%217.2
  void                    Deopt              !v    %217.4, Typecheck@0x55eeee44c058[Type#67], %214.1   !
BB106   <- [216]
  (cls|spec|blt)  %106.0 = LdFun              !v    $, e0.1
  fs              %106.1 = FrameState         R     0x55eeedf72df0+1746: [%106.0], env=e0.1
  void                    Deopt              !v    %106.1, DeadCall@0x55eeee44c058[Call#57], %106.0   !
BB59   <- [216]
  val?^ | miss    %59.0 = LdVar              eR    numnotnull, e0.1
  lgl$#-          %59.1 = Identical                %59.0, %0.3
  void                    Branch                   %59.1 -> BB218 (if true) | BB219 (if false)
BB218   <- [59]
  val?            %218.0 = StaticCall         !v    numnotnull[0x55eeec689440]("linemitre") from %0.3 e0.1
  val?^ | miss    %218.1 = LdVar              eR    is.na, e0.1
  lgl$#-          %218.2 = Identical                <blt is.na>, %218.1   <true>
  void                    Branch                   %218.2 -> BB220 (if true) | BB221 (if false)
BB219   <- [59]
  fs              %219.0 = FrameState         R     0x55eeedf72df0+1724: [%216.1], env=e0.1
  void                    Deopt              !v    %219.0, CallTarget@0x55eeee44c058[Call#61], %59.0   !
BB220   <- [218]
  val?^ | miss    %220.0 = LdVar              eR    match, e0.1
  lgl$#-          %220.1 = Identical                %220.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %220.1 -> BB222 (if true) | BB223 (if false)
BB221   <- [218]
  void                    Nop                !     
  lgl$#-          %221.1 = %218.2
  dr              %221.2 = DeadBranchReached@0x55eeee44c058[Test#5]
  goto BB60
BB222   <- [220]
  val?^ | miss    %222.0 = LdVar              eR    names, e0.1
  lgl$#-          %222.1 = Identical                %222.0, <blt names>
  void                    Branch                   %222.1 -> BB224 (if true) | BB225 (if false)
BB223   <- [220]
  void                    Nop                !     
  val?^ | miss    %223.1 = %220.0
  dr              %223.2 = CallTarget@0x55eeee44c058[Call#65]
  goto BB60
BB60   <- [221, 223, 225]
  val?^ | miss    %60.0 = Phi                      %221.1:BB221, %223.1:BB223, %225.1:BB225
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %221.2:BB221, %223.2:BB223, %225.2:BB225
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x55eeedf72df0+1902: [%218.0], env=e0.1
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB224   <- [222]
  val?^ | miss    %224.0 = LdVar              eR    gpars, e0.1
  val?            %224.1 = Force!<wrapped>    !v    %224.0, e0.1   <vec+>
  val?            %224.2 = CallBuiltin        !v    names(%224.1) e0.1   <(nil|str)->
  lgl$#-          %224.3 = IsType                   %224.2 isA val?-
  void                    Branch                   %224.3 -> BB226 (if true) | BB227 (if false)
BB225   <- [222]
  void                    Nop                !     
  val?^ | miss    %225.1 = %222.0
  dr              %225.2 = CallTarget@0x55eeee44c058[Call#66]
  goto BB60
BB226   <- [224]
  val?-           %226.0 = CastType           d     dn %224.2   <(nil|str)->
  val+            %226.1 = CallSafeBuiltin    wed   match("linemitre", %226.0, NA, nil)    <int$->
  lgl$#-          %226.2 = IsType                   %226.1 isA int$-
  void                    Branch                   %226.2 -> BB228 (if true) | BB229 (if false)
BB227   <- [224]
  prom-           %227.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p12, e0.1
  val?^           %227.1 = CastType                 up %227.0
  fs              %227.2 = FrameState         R     0x55eeedf72df0+2000: [<blt is.na>], env=e0.1
  env             e227.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%227.1, x="linemitre", parent=R_BaseNamespace, context 0
  fs              %227.4 = FrameState         R     0x55eeec291d40+23: ["linemitre"], env=e227.3, next=%227.2
  fs              %227.5 = FrameState         R     0x55eeedfa5170+32(pr): [%224.2], env=e0.1, next=%227.4
  void                    Deopt              !v    %227.5, Typecheck@0x55eeec2e4cb0[Type#1], %224.2   !
BB228   <- [226]
  int$-           %228.0 = CastType           d     dn %226.1
  lgl$-           %228.1 = CallSafeBuiltin    wed   is.na(%228.0)    <lgl$->
  lgl$-           %228.2 = Not                d     %228.1, elided
  lgl$#-          %228.3 = CheckTrueFalse     e     %228.2
  void                    Branch                   %228.3 -> BB103 (if true) | BB68 (if false)
BB229   <- [226]
  prom-           %229.0 = MkArg                    %226.0, validGP[0x55eef0a66f90]_p12 (!refl), e0.1
  val?~           %229.1 = CastType                 up %229.0
  fs              %229.2 = FrameState         R     0x55eeedf72df0+2000: [<blt is.na>], env=e0.1
  env             e229.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%229.1, x="linemitre", parent=R_BaseNamespace, context 0
  fs              %229.4 = FrameState         R     0x55eeec291d40+69: [%226.1], env=e229.3, next=%229.2
  void                    Deopt              !v    %229.4, Typecheck@0x55eeee44c058[Type#80], %226.1   !
BB103   <- [228]
  val?^ | miss    %103.0 = LdVar              eR    any, e0.1
  lgl$#-          %103.1 = Identical                <blt any>, %103.0   <@?>
  void                    Branch                   %103.1 -> BB105 (if true) | BB104 (if false)
BB68   <- [228]
  val?^ | miss    %68.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %68.1 = Identical                <blt is.na>, %68.0   <true>
  void                    Branch                   %68.1 -> BB230 (if true) | BB231 (if false)
BB105   <- [103]
  (cls|spec|blt)  %105.0 = LdFun              !v    $, e0.1
  fs              %105.1 = FrameState         R     0x55eeedf72df0+2104: [<blt any>, %105.0], env=e0.1
  void                    Deopt              !v    %105.1, DeadCall@0x55eeee44c058[Call#69], %105.0   !
BB104   <- [103]
  (cls|spec|blt)  %104.0 = LdFun              !v    any, e0.1
  fs              %104.1 = FrameState         R     0x55eeedf72df0+2067: [%104.0], env=e0.1
  void                    Deopt              !v    %104.1, DeadCall@0x55eeee44c058[Call#67], %104.0   !
BB230   <- [68]
  val?^ | miss    %230.0 = LdVar              eR    match, e0.1
  lgl$#-          %230.1 = Identical                %230.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %230.1 -> BB232 (if true) | BB233 (if false)
BB231   <- [68]
  void                    Nop                !     
  lgl$#-          %231.1 = %68.1
  dr              %231.2 = DeadBranchReached@0x55eeee44c058[Test#7]
  goto BB66
BB232   <- [230]
  val?^ | miss    %232.0 = LdVar              eR    names, e0.1
  lgl$#-          %232.1 = Identical                %232.0, <blt names>
  void                    Branch                   %232.1 -> BB234 (if true) | BB235 (if false)
BB233   <- [230]
  void                    Nop                !     
  val?^ | miss    %233.1 = %230.0
  dr              %233.2 = CallTarget@0x55eeee44c058[Call#74]
  goto BB66
BB66   <- [231, 233, 235]
  val?^ | miss    %66.0 = Phi                      %231.1:BB231, %233.1:BB233, %235.1:BB235
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %231.2:BB231, %233.2:BB233, %235.2:BB235
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55eeedf72df0+2022: [%228.1], env=e0.1
  void                    Deopt              !v    %66.4, %66.3, %66.1   !
BB234   <- [232]
  val?^ | miss    %234.0 = LdVar              eR    gpars, e0.1
  val?            %234.1 = Force!<wrapped>    !v    %234.0, e0.1   <vec+>
  val?            %234.2 = CallBuiltin        !v    names(%234.1) e0.1   <(nil|str)->
  lgl$#-          %234.3 = IsType                   %234.2 isA val?-
  void                    Branch                   %234.3 -> BB236 (if true) | BB237 (if false)
BB235   <- [232]
  void                    Nop                !     
  val?^ | miss    %235.1 = %232.0
  dr              %235.2 = CallTarget@0x55eeee44c058[Call#75]
  goto BB66
BB236   <- [234]
  val?-           %236.0 = CastType           d     dn %234.2   <(nil|str)->
  val+            %236.1 = CallSafeBuiltin    wed   match("alpha", %236.0, NA, nil)    <int$->
  lgl$#-          %236.2 = IsType                   %236.1 isA int$-
  void                    Branch                   %236.2 -> BB238 (if true) | BB239 (if false)
BB237   <- [234]
  prom-           %237.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p14, e0.1
  val?^           %237.1 = CastType                 up %237.0
  fs              %237.2 = FrameState         R     0x55eeedf72df0+2316: [<blt is.na>], env=e0.1
  env             e237.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%237.1, x="alpha", parent=R_BaseNamespace, context 0
  fs              %237.4 = FrameState         R     0x55eeec291d40+23: ["alpha"], env=e237.3, next=%237.2
  fs              %237.5 = FrameState         R     0x55eeee470e30+32(pr): [%234.2], env=e0.1, next=%237.4
  void                    Deopt              !v    %237.5, Typecheck@0x55eeec2e4cb0[Type#1], %234.2   !
BB238   <- [236]
  int$-           %238.0 = CastType           d     dn %236.1
  lgl$-           %238.1 = CallSafeBuiltin    wed   is.na(%238.0)    <lgl$->
  lgl$-           %238.2 = Not                d     %238.1, elided
  lgl$#-          %238.3 = CheckTrueFalse     e     %238.2
  void                    Branch                   %238.3 -> BB100 (if true) | BB75 (if false)
BB239   <- [236]
  prom-           %239.0 = MkArg                    %236.0, validGP[0x55eef0a66f90]_p14 (!refl), e0.1
  val?~           %239.1 = CastType                 up %239.0
  fs              %239.2 = FrameState         R     0x55eeedf72df0+2316: [<blt is.na>], env=e0.1
  env             e239.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%239.1, x="alpha", parent=R_BaseNamespace, context 0
  fs              %239.4 = FrameState         R     0x55eeec291d40+69: [%236.1], env=e239.3, next=%239.2
  void                    Deopt              !v    %239.4, Typecheck@0x55eeee44c058[Type#96], %236.1   !
BB100   <- [238]
  val?^ | miss    %100.0 = LdVar              eR    any, e0.1
  lgl$#-          %100.1 = Identical                <blt any>, %100.0   <@?>
  void                    Branch                   %100.1 -> BB102 (if true) | BB101 (if false)
BB75   <- [238]
  val?^ | miss    %75.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %75.1 = Identical                <blt is.na>, %75.0   <true>
  void                    Branch                   %75.1 -> BB240 (if true) | BB241 (if false)
BB102   <- [100]
  (cls|spec|blt)  %102.0 = LdFun              !v    $, e0.1
  fs              %102.1 = FrameState         R     0x55eeedf72df0+2420: [<blt any>, %102.0], env=e0.1
  void                    Deopt              !v    %102.1, DeadCall@0x55eeee44c058[Call#78], %102.0   !
BB101   <- [100]
  (cls|spec|blt)  %101.0 = LdFun              !v    any, e0.1
  fs              %101.1 = FrameState         R     0x55eeedf72df0+2383: [%101.0], env=e0.1
  void                    Deopt              !v    %101.1, DeadCall@0x55eeee44c058[Call#76], %101.0   !
BB240   <- [75]
  val?^ | miss    %240.0 = LdVar              eR    match, e0.1
  lgl$#-          %240.1 = Identical                %240.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %240.1 -> BB242 (if true) | BB243 (if false)
BB241   <- [75]
  void                    Nop                !     
  lgl$#-          %241.1 = %75.1
  dr              %241.2 = DeadBranchReached@0x55eeee44c058[Test#10]
  goto BB73
BB242   <- [240]
  val?^ | miss    %242.0 = LdVar              eR    names, e0.1
  lgl$#-          %242.1 = Identical                %242.0, <blt names>
  void                    Branch                   %242.1 -> BB244 (if true) | BB245 (if false)
BB243   <- [240]
  void                    Nop                !     
  val?^ | miss    %243.1 = %240.0
  dr              %243.2 = CallTarget@0x55eeee44c058[Call#86]
  goto BB73
BB73   <- [241, 243, 245]
  val?^ | miss    %73.0 = Phi                      %241.1:BB241, %243.1:BB243, %245.1:BB245
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %241.2:BB241, %243.2:BB243, %245.2:BB245
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x55eeedf72df0+2338: [%238.1], env=e0.1
  void                    Deopt              !v    %73.4, %73.3, %73.1   !
BB244   <- [242]
  val?^ | miss    %244.0 = LdVar              eR    gpars, e0.1
  val?            %244.1 = Force!<wrapped>    !v    %244.0, e0.1   <vec+>
  val?            %244.2 = CallBuiltin        !v    names(%244.1) e0.1   <(nil|str)->
  lgl$#-          %244.3 = IsType                   %244.2 isA val?-
  void                    Branch                   %244.3 -> BB246 (if true) | BB247 (if false)
BB245   <- [242]
  void                    Nop                !     
  val?^ | miss    %245.1 = %242.0
  dr              %245.2 = CallTarget@0x55eeee44c058[Call#87]
  goto BB73
BB246   <- [244]
  val?-           %246.0 = CastType           d     dn %244.2   <(nil|str)->
  val+            %246.1 = CallSafeBuiltin    wed   match("font", %246.0, NA, nil)    <int$->
  lgl$#-          %246.2 = IsType                   %246.1 isA int$-
  void                    Branch                   %246.2 -> BB248 (if true) | BB249 (if false)
BB247   <- [244]
  prom-           %247.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p16, e0.1
  val?^           %247.1 = CastType                 up %247.0
  fs              %247.2 = FrameState         R     0x55eeedf72df0+2777: [<blt is.na>], env=e0.1
  env             e247.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%247.1, x="font", parent=R_BaseNamespace, context 0
  fs              %247.4 = FrameState         R     0x55eeec291d40+23: ["font"], env=e247.3, next=%247.2
  fs              %247.5 = FrameState         R     0x55eeedd61150+32(pr): [%244.2], env=e0.1, next=%247.4
  void                    Deopt              !v    %247.5, Typecheck@0x55eeec2e4cb0[Type#1], %244.2   !
BB248   <- [246]
  int$-           %248.0 = CastType           d     dn %246.1
  lgl$-           %248.1 = CallSafeBuiltin    wed   is.na(%248.0)    <lgl$->
  lgl$-           %248.2 = Not                d     %248.1, elided
  lgl$#-          %248.3 = CheckTrueFalse     e     %248.2
  void                    Branch                   %248.3 -> BB99 (if true) | BB82 (if false)
BB249   <- [246]
  prom-           %249.0 = MkArg                    %246.0, validGP[0x55eef0a66f90]_p16 (!refl), e0.1
  val?~           %249.1 = CastType                 up %249.0
  fs              %249.2 = FrameState         R     0x55eeedf72df0+2777: [<blt is.na>], env=e0.1
  env             e249.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%249.1, x="font", parent=R_BaseNamespace, context 0
  fs              %249.4 = FrameState         R     0x55eeec291d40+69: [%246.1], env=e249.3, next=%249.2
  void                    Deopt              !v    %249.4, Typecheck@0x55eeee44c058[Type#121], %246.1   !
BB99   <- [248]
  (cls|spec|blt)  %99.0 = LdFun              !v    $, e0.1
  fs              %99.1 = FrameState         R     0x55eeedf72df0+2821: [%99.0], env=e0.1
  void                    Deopt              !v    %99.1, DeadCall@0x55eeee44c058[Call#88], %99.0   !
BB82   <- [248]
  val?^ | miss    %82.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %82.1 = Identical                <blt is.na>, %82.0   <true>
  void                    Branch                   %82.1 -> BB250 (if true) | BB251 (if false)
BB250   <- [82]
  val?^ | miss    %250.0 = LdVar              eR    match, e0.1
  lgl$#-          %250.1 = Identical                %250.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %250.1 -> BB252 (if true) | BB253 (if false)
BB251   <- [82]
  void                    Nop                !     
  lgl$#-          %251.1 = %82.1
  dr              %251.2 = DeadBranchReached@0x55eeee44c058[Test#11]
  goto BB80
BB252   <- [250]
  val?^ | miss    %252.0 = LdVar              eR    names, e0.1
  lgl$#-          %252.1 = Identical                %252.0, <blt names>
  void                    Branch                   %252.1 -> BB254 (if true) | BB255 (if false)
BB253   <- [250]
  void                    Nop                !     
  val?^ | miss    %253.1 = %250.0
  dr              %253.2 = CallTarget@0x55eeee44c058[Call#99]
  goto BB80
BB80   <- [251, 253, 255]
  val?^ | miss    %80.0 = Phi                      %251.1:BB251, %253.1:BB253, %255.1:BB255
  val?^ | miss    %80.1 = %80.0
  dr              %80.2 = Phi                      %251.2:BB251, %253.2:BB253, %255.2:BB255
  dr              %80.3 = %80.2
  fs              %80.4 = FrameState         R     0x55eeedf72df0+2799: [%248.1], env=e0.1
  void                    Deopt              !v    %80.4, %80.3, %80.1   !
BB254   <- [252]
  val?^ | miss    %254.0 = LdVar              eR    gpars, e0.1
  val?            %254.1 = Force!<wrapped>    !v    %254.0, e0.1   <vec+>
  val?            %254.2 = CallBuiltin        !v    names(%254.1) e0.1   <(nil|str)->
  lgl$#-          %254.3 = IsType                   %254.2 isA val?-
  void                    Branch                   %254.3 -> BB256 (if true) | BB257 (if false)
BB255   <- [252]
  void                    Nop                !     
  val?^ | miss    %255.1 = %252.0
  dr              %255.2 = CallTarget@0x55eeee44c058[Call#100]
  goto BB80
BB256   <- [254]
  val?-           %256.0 = CastType           d     dn %254.2   <(nil|str)->
  val+            %256.1 = CallSafeBuiltin    wed   match("fontfamily", %256.0, NA, nil)    <int$->
  lgl$#-          %256.2 = IsType                   %256.1 isA int$-
  void                    Branch                   %256.2 -> BB258 (if true) | BB259 (if false)
BB257   <- [254]
  prom-           %257.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p18, e0.1
  val?^           %257.1 = CastType                 up %257.0
  fs              %257.2 = FrameState         R     0x55eeedf72df0+3080: [<blt is.na>], env=e0.1
  env             e257.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%257.1, x="fontfamily", parent=R_BaseNamespace, context 0
  fs              %257.4 = FrameState         R     0x55eeec291d40+23: ["fontfamily"], env=e257.3, next=%257.2
  fs              %257.5 = FrameState         R     0x55eeee24ec10+32(pr): [%254.2], env=e0.1, next=%257.4
  void                    Deopt              !v    %257.5, Typecheck@0x55eeec2e4cb0[Type#1], %254.2   !
BB258   <- [256]
  int$-           %258.0 = CastType           d     dn %256.1
  lgl$-           %258.1 = CallSafeBuiltin    wed   is.na(%258.0)    <lgl$->
  lgl$-           %258.2 = Not                d     %258.1, elided
  lgl$#-          %258.3 = CheckTrueFalse     e     %258.2
  void                    Branch                   %258.3 -> BB98 (if true) | BB89 (if false)
BB259   <- [256]
  prom-           %259.0 = MkArg                    %256.0, validGP[0x55eef0a66f90]_p18 (!refl), e0.1
  val?~           %259.1 = CastType                 up %259.0
  fs              %259.2 = FrameState         R     0x55eeedf72df0+3080: [<blt is.na>], env=e0.1
  env             e259.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%259.1, x="fontfamily", parent=R_BaseNamespace, context 0
  fs              %259.4 = FrameState         R     0x55eeec291d40+69: [%256.1], env=e259.3, next=%259.2
  void                    Deopt              !v    %259.4, Typecheck@0x55eeee44c058[Type#141], %256.1   !
BB98   <- [258]
  (cls|spec|blt)  %98.0 = LdFun              !v    $, e0.1
  fs              %98.1 = FrameState         R     0x55eeedf72df0+3124: [%98.0], env=e0.1
  void                    Deopt              !v    %98.1, DeadCall@0x55eeee44c058[Call#101], %98.0   !
BB89   <- [258]
  val?^ | miss    %89.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %89.1 = Identical                <blt is.na>, %89.0   <true>
  void                    Branch                   %89.1 -> BB260 (if true) | BB261 (if false)
BB260   <- [89]
  val?^ | miss    %260.0 = LdVar              eR    match, e0.1
  lgl$#-          %260.1 = Identical                %260.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %260.1 -> BB262 (if true) | BB263 (if false)
BB261   <- [89]
  void                    Nop                !     
  lgl$#-          %261.1 = %89.1
  dr              %261.2 = DeadBranchReached@0x55eeee44c058[Test#12]
  goto BB87
BB262   <- [260]
  val?^ | miss    %262.0 = LdVar              eR    names, e0.1
  lgl$#-          %262.1 = Identical                %262.0, <blt names>
  void                    Branch                   %262.1 -> BB264 (if true) | BB265 (if false)
BB263   <- [260]
  void                    Nop                !     
  val?^ | miss    %263.1 = %260.0
  dr              %263.2 = CallTarget@0x55eeee44c058[Call#113]
  goto BB87
BB87   <- [261, 263, 265]
  val?^ | miss    %87.0 = Phi                      %261.1:BB261, %263.1:BB263, %265.1:BB265
  val?^ | miss    %87.1 = %87.0
  dr              %87.2 = Phi                      %261.2:BB261, %263.2:BB263, %265.2:BB265
  dr              %87.3 = %87.2
  fs              %87.4 = FrameState         R     0x55eeedf72df0+3102: [%258.1], env=e0.1
  void                    Deopt              !v    %87.4, %87.3, %87.1   !
BB264   <- [262]
  val?^ | miss    %264.0 = LdVar              eR    gpars, e0.1
  val?            %264.1 = Force!<wrapped>    !v    %264.0, e0.1   <vec+>
  val?            %264.2 = CallBuiltin        !v    names(%264.1) e0.1   <(nil|str)->
  lgl$#-          %264.3 = IsType                   %264.2 isA val?-
  void                    Branch                   %264.3 -> BB266 (if true) | BB267 (if false)
BB265   <- [262]
  void                    Nop                !     
  val?^ | miss    %265.1 = %262.0
  dr              %265.2 = CallTarget@0x55eeee44c058[Call#114]
  goto BB87
BB266   <- [264]
  val?-           %266.0 = CastType           d     dn %264.2   <(nil|str)->
  val+            %266.1 = CallSafeBuiltin    wed   match("fontface", %266.0, NA, nil)    <int$->
  lgl$#-          %266.2 = IsType                   %266.1 isA int$-
  void                    Branch                   %266.2 -> BB268 (if true) | BB269 (if false)
BB267   <- [264]
  prom-           %267.0 = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p20, e0.1
  val?^           %267.1 = CastType                 up %267.0
  fs              %267.2 = FrameState         R     0x55eeedf72df0+3416: [<blt is.na>], env=e0.1
  env             e267.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%267.1, x="fontface", parent=R_BaseNamespace, context 0
  fs              %267.4 = FrameState         R     0x55eeec291d40+23: ["fontface"], env=e267.3, next=%267.2
  fs              %267.5 = FrameState         R     0x55eeee012680+32(pr): [%264.2], env=e0.1, next=%267.4
  void                    Deopt              !v    %267.5, Typecheck@0x55eeec2e4cb0[Type#1], %264.2   !
BB268   <- [266]
  int$-           %268.0 = CastType           d     dn %266.1
  lgl$-           %268.1 = CallSafeBuiltin    wed   is.na(%268.0)    <lgl$->
  lgl$-           %268.2 = Not                d     %268.1, elided
  lgl$#-          %268.3 = CheckTrueFalse     e     %268.2
  void                    Branch                   %268.3 -> BB95 (if true) | BB94 (if false)
BB269   <- [266]
  prom-           %269.0 = MkArg                    %266.0, validGP[0x55eef0a66f90]_p20 (!refl), e0.1
  val?~           %269.1 = CastType                 up %269.0
  fs              %269.2 = FrameState         R     0x55eeedf72df0+3416: [<blt is.na>], env=e0.1
  env             e269.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%269.1, x="fontface", parent=R_BaseNamespace, context 0
  fs              %269.4 = FrameState         R     0x55eeec291d40+69: [%266.1], env=e269.3, next=%269.2
  void                    Deopt              !v    %269.4, Typecheck@0x55eeee44c058[Type#161], %266.1   !
BB95   <- [268]
  val?^ | miss    %95.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %95.1 = Identical                <blt is.na>, %95.0   <@?>
  void                    Branch                   %95.1 -> BB97 (if true) | BB96 (if false)
BB94   <- [268]
  val?^ | miss    %94.0 = LdVar              eR    gpars, e0.1
  void                    Visible            v     
  val?            %94.2 = Force!<wrapped>    !     %94.0, e0.1   <vec+>
  void                    Return             l     %94.2
BB97   <- [95]
  (cls|spec|blt)  %97.0 = LdFun              !v    match, e0.1
  fs              %97.1 = FrameState         R     0x55eeedf72df0+3520: [<blt is.na>, %97.0], env=e0.1
  void                    Deopt              !v    %97.1, DeadCall@0x55eeee44c058[Call#118], %97.0   !
BB96   <- [95]
  (cls|spec|blt)  %96.0 = LdFun              !v    is.na, e0.1
  fs              %96.1 = FrameState         R     0x55eeedf72df0+3483: [%96.0], env=e0.1
  void                    Deopt              !v    %96.1, DeadCall@0x55eeee44c058[Call#115], %96.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p15, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p17, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p19, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55eeeba7d470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p21, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    lty, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fill, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55eeeba7cc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p27, e0.0
  prom-           %0.3  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p28, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fill, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    col, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p32, e0.0
  prom-           %0.3  = MkArg                    unboundValue, validGP[0x55eef0a66f90]_p33, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    col, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(nil|str)->
  void                    Return             l     %0.3

│ validGP[0x55eef0a66f90]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
