
┌──────────────────────────────────────────────────────────────────────────────┐
│ valid.charjust[0x55eeedf2f9d0]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── Final PIR Version
valid.charjust[0x55eeedf2f9d0]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    length, <env 0x55eeedfdc408>
  lgl$#-          %0.2  = Identical                <blt length>, %0.1   <true>
  void                    Branch                   %0.2 -> BB96 (if true) | BB97 (if false)
BB96   <- [0]
  env             e96.0 = MkEnv              l     just=%0.0, parent=<env 0x55eeedfdc408>, context 1
  val+            %96.1 = Force!<lazy>       !vr   %0.0,    <str->
  (int|real)$-    %96.2 = CallSafeBuiltin    wed   length(%96.1)    <int$->
  lgl$#-          %96.3 = IsType                   %96.2 isA int$-
  void                    Branch                   %96.3 -> BB98 (if true) | BB99 (if false)
BB97   <- [0]
  env             e97.0 = MkEnv              l     just=%0.0, parent=<env 0x55eeedfdc408>, context 1
  fs              %97.1 = FrameState         R     0x55eeee815b50+17: [<blt length>, %0.2], env=e97.0
  void                    Deopt              !v    %97.1, DeadBranchReached@0x55eeee44c5d8[Test#0], %0.2
BB98   <- [96]
  int$-           %98.0 = CastType           d     dn %96.2
  lgl$-           %98.1 = Eq                 d     %98.0, 1, elided   <lgl$->
  lgl$#-          %98.2 = CheckTrueFalse     e     %98.1
  void                    Branch                   %98.2 -> BB84 (if true) | BB5 (if false)
BB99   <- [96]
  void                    Nop                !     
  (int|real)$-    %99.1 = %96.2
  dr              %99.2 = Typecheck@0x55eeee44c5d8[Type#2]
  goto BB3
BB84   <- [98]
  val?^ | miss    %84.0 = LdVar              eR    as.integer, <env 0x55eeedfdc408>
  lgl$#-          %84.1 = Identical                <blt as.integer>, %84.0   <true>
  void                    Branch                   %84.1 -> BB100 (if true) | BB101 (if false)
BB5   <- [98]
  lgl$#-          %5.0  = IsType                   %96.1 isA val?-
  void                    Branch                   %5.0 -> BB102 (if true) | BB103 (if false)
BB3   <- [99, 101, 103, 105, 109]
  val?^ | miss    %3.0  = Phi                      %99.1:BB99, %101.1:BB101, %103.1:BB103, %105.1:BB105, %109.1:BB109
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %99.2:BB99, %101.2:BB101, %103.2:BB103, %105.2:BB105, %109.2:BB109
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55eeee815b50+91: [%96.2], env=e96.0
  void                    Deopt              !v    %3.4, %3.3, %3.1
BB100   <- [84]
  val?^ | miss    %100.0 = LdVar              eR    match, <env 0x55eeedfdc408>
  lgl$#-          %100.1 = Identical                %100.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %100.1 -> BB104 (if true) | BB105 (if false)
BB101   <- [84]
  void                    Nop                !     
  lgl$#-          %101.1 = %84.1
  dr              %101.2 = DeadBranchReached@0x55eeee44c5d8[Test#11]
  goto BB3
BB102   <- [5]
  val-            %102.0 = CastType           d     dn %96.1   <str->
  (int|real)$-    %102.1 = CallSafeBuiltin    wed   length(%102.0)    <int$->
  lgl$#-          %102.2 = IsType                   %102.1 isA int$-
  void                    Branch                   %102.2 -> BB106 (if true) | BB107 (if false)
BB103   <- [5]
  void                    Nop                !     
  val+            %103.1 = %96.1
  dr              %103.2 = Typecheck@0x55eeee44c5d8[Type#5]
  goto BB3
BB104   <- [100]
  lgl$#-          %104.0 = IsType                   %96.1 isA val?-
  void                    Branch                   %104.0 -> BB108 (if true) | BB109 (if false)
BB105   <- [100]
  void                    Nop                !     
  val?^ | miss    %105.1 = %100.0
  dr              %105.2 = CallTarget@0x55eeee44c5d8[Call#22]
  goto BB3
BB106   <- [102]
  int$-           %106.0 = CastType           d     dn %102.1
  lgl$-           %106.1 = Gt                 d     %106.0, 1, elided   <lgl$->
  lgl$#-          %106.2 = CheckTrueFalse     e     %106.1
  void                    Branch                   %106.2 -> BB51 (if true) | BB8 (if false)
BB107   <- [102]
  void                    Nop                !     
  (int|real)$-    %107.1 = %102.1
  dr              %107.2 = Typecheck@0x55eeee44c5d8[Type#6]
  goto BB6
BB108   <- [104]
  val-            %108.0 = CastType           d     dn %96.1   <str$->
  val?            %108.1 = Extract1_1D        wed   %108.0, 1L, elided   <str$->
  (cls|spec|blt)  %108.2 = LdFun              !v    c, <0x55eeeba7d940>, <env 0x55eeedfdc408>
  val?            %108.3 = Call               !v    %108.2("left", "right", "bottom", "top", "centre", "center") e96.0   <str->
  lgl$#-          %108.4 = IsType                   %108.3 isA val?-
  lgl$#-          %108.5 = IsType                   %108.1 isA val?+
  void                    Branch                   %108.5 -> BB112 (if true) | BB113 (if false)
BB109   <- [104]
  void                    Nop                !     
  val+            %109.1 = %96.1
  dr              %109.2 = Typecheck@0x55eeee44c5d8[Type#48]
  goto BB3
BB51   <- [106]
  val?^ | miss    %51.0 = LdVar              eR    as.integer, <env 0x55eeedfdc408>
  lgl$#-          %51.1 = Identical                <blt as.integer>, %51.0   <true>
  void                    Branch                   %51.1 -> BB110 (if true) | BB111 (if false)
BB8   <- [106]
  void                    Nop                !     
  val?^           %8.1  = %0.0
  goto BB9
BB6   <- [107, 111, 119]
  val?^ | miss    %6.0  = Phi                      %107.1:BB107, %111.1:BB111, %119.1:BB119
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %107.2:BB107, %111.2:BB111, %119.2:BB119
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x55eeee815b50+205: [%102.1], env=e96.0
  void                    Deopt              !v    %6.4, %6.3, %6.1
BB112   <- [108]
  val?+           %112.0 = CastType           d     dn %108.1   <(int|str)+>
  void                    Branch                   %108.4 -> BB114 (if true) | BB115 (if false)
BB113   <- [108]
  void                    Nop                !     
  val?            %113.1 = %108.1
  dr              %113.2 = Typecheck@0x55eeec2e4cb0[Type#0]
  goto BB85
BB110   <- [51]
  val?^ | miss    %110.0 = LdVar              eR    match, <env 0x55eeedfdc408>
  lgl$#-          %110.1 = Identical                %110.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %110.1 -> BB118 (if true) | BB119 (if false)
BB111   <- [51]
  void                    Nop                !     
  lgl$#-          %111.1 = %51.1
  dr              %111.2 = DeadBranchReached@0x55eeee44c5d8[Test#2]
  goto BB6
BB9   <- [8, 196]
  val?^           %9.0  = Phi                      %196.3:BB196, %8.1:BB8
  val?^           %9.1  = %9.0
  val?^           %9.2  = %9.1
  goto BB10
BB114   <- [112]
  val?-           %114.0 = CastType           d     dn %108.3   <str->
  val+            %114.1 = CallSafeBuiltin    wed   match(%112.0, %114.0, NA, nil)    <int$->
  lgl$#-          %114.2 = IsType                   %114.1 isA int$-
  void                    Branch                   %114.2 -> BB116 (if true) | BB117 (if false)
BB115   <- [112]
  void                    Nop                !     
  val?            %115.1 = %108.3
  dr              %115.2 = Typecheck@0x55eeec2e4cb0[Type#1]
  goto BB85
BB85   <- [113, 115]
  val?^ | miss    %85.0 = Phi                      %113.1:BB113, %115.1:BB115
  val?^ | miss    %85.1 = %85.0
  dr              %85.2 = Phi                      %113.2:BB113, %115.2:BB115
  dr              %85.3 = %85.2
  prom-           %85.4 = MkArg                    %108.3, valid.charjust[0x55eeedf2f9d0]_p9 (!refl), e96.0
  val?~           %85.5 = CastType                 up %85.4
  prom-           %85.6 = MkArg                    %108.1, valid.charjust[0x55eeedf2f9d0]_p8 (!refl), e96.0
  val?~           %85.7 = CastType                 up %85.6
  fs              %85.8 = FrameState         R     0x55eeee815b50+970: [<blt as.integer>], env=e96.0
  env             e85.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%85.5, x=%85.7, parent=R_BaseNamespace, context 0
  fs              %85.10 = FrameState         R     0x55eeec291d40+23: [%108.1, %108.3], env=e85.9, next=%85.8
  void                    Deopt              !v    %85.10, %85.3, %85.1   !
BB118   <- [110]
  val?            %118.0 = Extract1_1D        wed   %102.0, 1L, elided   <str$->
  (cls|spec|blt)  %118.1 = LdFun              !v    c, <0x55eeeba7d940>, <env 0x55eeedfdc408>
  lgl$#-          %118.2 = Identical                %118.1, <blt c>
  void                    Branch                   %118.2 -> BB120 (if true) | BB121 (if false)
BB119   <- [110]
  void                    Nop                !     
  val?^ | miss    %119.1 = %110.0
  dr              %119.2 = CallTarget@0x55eeee44c5d8[Call#5]
  goto BB6
BB10   <- [93, 9]
  val?^           %10.0 = Phi                      %93.1:BB93, %9.2:BB9
  val?^           %10.1 = %10.0
  lgl$#-          %10.2 = IsType                   %10.1 isA int-
  val?^ | miss    %10.3 = LdVar              eR    length, e96.0
  lgl$#-          %10.4 = Identical                <blt length>, %10.3   <true>
  void                    Branch                   %10.4 -> BB122 (if true) | BB123 (if false)
BB116   <- [114]
  int$-           %116.0 = CastType           d     dn %114.1
  real$-          %116.1 = Sub                d     %116.0, 1, elided   <real$->
  int$-           %116.2 = CallSafeBuiltin    wed   as.integer(%116.1)    <int$->
  void                    StVar              lW    just, %116.2, e96.0
  val?^ | miss    %116.4 = LdVar              eR    anyNA, e96.0
  lgl$#-          %116.5 = Identical                <blt anyNA>, %116.4   <true>
  void                    Branch                   %116.5 -> BB124 (if true) | BB125 (if false)
BB117   <- [114]
  prom-           %117.0 = MkArg                    %114.0, valid.charjust[0x55eeedf2f9d0]_p9 (!refl), e96.0
  val?~           %117.1 = CastType                 up %117.0
  prom-           %117.2 = MkArg                    %112.0, valid.charjust[0x55eeedf2f9d0]_p8 (!refl), e96.0
  val?~           %117.3 = CastType                 up %117.2
  fs              %117.4 = FrameState         R     0x55eeee815b50+970: [<blt as.integer>], env=e96.0
  env             e117.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%117.1, x=%117.3, parent=R_BaseNamespace, context 0
  fs              %117.6 = FrameState         R     0x55eeec291d40+69: [%114.1], env=e117.5, next=%117.4
  void                    Deopt              !v    %117.6, Typecheck@0x55eeee44c5d8[Type#51], %114.1   !
BB120   <- [118]
  str-            %120.0 = CallSafeBuiltin    wed   c("left", "right", "bottom", "top", "centre", "center")    <str->
  lgl$#-          %120.1 = IsType                   %118.0 isA val?+
  void                    Branch                   %120.1 -> BB126 (if true) | BB127 (if false)
BB121   <- [118]
  prom-           %121.0 = MkArg                    %118.0, valid.charjust[0x55eeedf2f9d0]_p0 (!refl), e96.0
  val?~           %121.1 = CastType                 up %121.0
  prom-           %121.2 = MkArg                    unboundValue, valid.charjust[0x55eeedf2f9d0]_p1, e96.0
  val?^           %121.3 = CastType                 up %121.2
  fs              %121.4 = FrameState         R     0x55eeee815b50+341: [<blt as.integer>], env=e96.0
  env             e121.5 = (MkEnv)            l     x=%121.1, table=%121.3, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %121.6 = FrameState         R     0x55eeec291d40+9: [%118.0], env=e121.5, next=%121.4
  void                    Deopt              !v    %121.6, CallTarget@0x55eeee44c5d8[Call#6], %118.1
BB122   <- [10]
  void                    Branch                   %10.2 -> BB130 (if true) | BB131 (if false)
BB123   <- [10]
  void                    Nop                !     
  lgl$#-          %123.1 = %10.4
  dr              %123.2 = DeadBranchReached@0x55eeee44c5d8[Test#15]
  goto BB11
BB124   <- [116]
  val+            %124.0 = CallSafeBuiltin    wed   anyNA(%116.2)    <lgl$->
  lgl$#-          %124.1 = IsType                   %124.0 isA lgl$-
  void                    Branch                   %124.1 -> BB134 (if true) | BB135 (if false)
BB125   <- [116]
  fs              %125.0 = FrameState         R     0x55eeee815b50+1018: [], env=e96.0
  void                    Deopt              !v    %125.0, DeadBranchReached@0x55eeee44c5d8[Test#14], %116.5   !
BB126   <- [120]
  val?+           %126.0 = CastType           d     dn %118.0   <(int|str)+>
  val+            %126.1 = CallSafeBuiltin    wed   match(%126.0, %120.0, NA, nil)    <int$->
  lgl$#-          %126.2 = IsType                   %126.1 isA int$-
  void                    Branch                   %126.2 -> BB128 (if true) | BB129 (if false)
BB127   <- [120]
  prom-           %127.0 = MkArg                    %120.0, valid.charjust[0x55eeedf2f9d0]_p1 (!refl), e96.0
  val?~           %127.1 = CastType                 up %127.0
  prom-           %127.2 = MkArg                    %118.0, valid.charjust[0x55eeedf2f9d0]_p0 (!refl), e96.0
  val?~           %127.3 = CastType                 up %127.2
  fs              %127.4 = FrameState         R     0x55eeee815b50+341: [<blt as.integer>], env=e96.0
  env             e127.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%127.1, x=%127.3, parent=R_BaseNamespace, context 0
  fs              %127.6 = FrameState         R     0x55eeec291d40+23: [%118.0, %120.0], env=e127.5, next=%127.4
  void                    Deopt              !v    %127.6, Typecheck@0x55eeec2e4cb0[Type#0], %118.0
BB130   <- [122]
  int-            %130.0 = CastType           d     dn %10.1
  (int|real)$-    %130.1 = CallSafeBuiltin    wed   length(%130.0)    <int$->
  lgl$#-          %130.2 = IsType                   %130.1 isA int$-
  void                    Branch                   %130.2 -> BB132 (if true) | BB133 (if false)
BB131   <- [122]
  void                    Nop                !     
  val?^           %131.1 = %10.1
  dr              %131.2 = Typecheck@0x55eeee44c5d8[Type#58]
  goto BB11
BB11   <- [123, 131]
  val?^           %11.0 = Phi                      %123.1:BB123, %131.1:BB131
  val?^           %11.1 = %11.0
  dr              %11.2 = Phi                      %123.2:BB123, %131.2:BB131
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55eeee815b50+1158: [], env=e96.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB134   <- [124]
  lgl$-           %134.0 = CastType           d     dn %124.0
  lgl$#-          %134.1 = CheckTrueFalse     e     %134.0
  void                    Branch                   %134.1 -> BB94 (if true) | BB93 (if false)
BB135   <- [124]
  fs              %135.0 = FrameState         R     0x55eeee815b50+1109: [%124.0], env=e96.0
  void                    Deopt              !v    %135.0, Typecheck@0x55eeee44c5d8[Type#56], %124.0   !
BB128   <- [126]
  int$-           %128.0 = CastType           d     dn %126.1
  real$-          %128.1 = Sub                d     %128.0, 1, elided   <real$->
  int$-           %128.2 = CallSafeBuiltin    wed   as.integer(%128.1)    <int$->
  val+            %128.3 = Force!<wrapped>    !vr   %0.0,    <str->
  lgl$#-          %128.4 = IsType                   %128.3 isA val?-
  void                    Branch                   %128.4 -> BB136 (if true) | BB137 (if false)
BB129   <- [126]
  prom-           %129.0 = MkArg                    %120.0, valid.charjust[0x55eeedf2f9d0]_p1 (!refl), e96.0
  val?~           %129.1 = CastType                 up %129.0
  prom-           %129.2 = MkArg                    %126.0, valid.charjust[0x55eeedf2f9d0]_p0 (!refl), e96.0
  val?~           %129.3 = CastType                 up %129.2
  fs              %129.4 = FrameState         R     0x55eeee815b50+341: [<blt as.integer>], env=e96.0
  env             e129.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%129.1, x=%129.3, parent=R_BaseNamespace, context 0
  fs              %129.6 = FrameState         R     0x55eeec291d40+69: [%126.1], env=e129.5, next=%129.4
  void                    Deopt              !v    %129.6, Typecheck@0x55eeee44c5d8[Type#16], %126.1
BB132   <- [130]
  int$-           %132.0 = CastType           d     dn %130.1
  lgl$-           %132.1 = Lt                 d     %132.0, 2, elided   <lgl$->
  lgl$#-          %132.2 = CheckTrueFalse     e     %132.1
  void                    Branch                   %132.2 -> BB39 (if true) | BB15 (if false)
BB133   <- [130]
  void                    Nop                !     
  (int|real)$-    %133.1 = %130.1
  dr              %133.2 = Typecheck@0x55eeee44c5d8[Type#59]
  goto BB13
BB94   <- [134]
  (cls|spec|blt)  %94.0 = LdFun              !v    stop, e96.0
  fs              %94.1 = FrameState         R     0x55eeee815b50+1130: [%94.0], env=e96.0
  void                    Deopt              !v    %94.1, DeadCall@0x55eeee44c5d8[Call#25], %94.0   !
BB93   <- [134]
  void                    Nop                !     
  int$-           %93.1 = %116.2
  goto BB10
BB136   <- [128]
  val-            %136.0 = CastType           d     dn %128.3   <str->
  val-            %136.1 = Subassign1_1D      wed   %128.2, %136.0, 1L, elided
  void                    StVar              lW    just, %136.1, e96.0
  val?^ | miss    %136.3 = LdVar              eR    %in%, e96.0
  lgl$#-          %136.4 = Identical                %136.3, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %136.4 -> BB138 (if true) | BB139 (if false)
BB137   <- [128]
  fs              %137.0 = FrameState         R     0x55eeee815b50+389: [%128.2, %128.3], env=e96.0
  void                    Deopt              !v    %137.0, Typecheck@0x55eeee44c5d8[Type#19], %128.3
BB39   <- [132]
  lgl$#-          %39.0 = IsType                   %130.0 isA int$-
  void                    Branch                   %39.0 -> BB142 (if true) | BB143 (if false)
BB15   <- [132]
  void                    Nop                !     
  int-            %15.1 = %130.0
  goto BB16
BB13   <- [133, 143]
  val?^ | miss    %13.0 = Phi                      %133.1:BB133, %143.1:BB143
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %133.2:BB133, %143.2:BB143
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55eeee815b50+1249: [%130.1], env=e96.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB138   <- [136]
  prom-           %138.0 = MkArg                    unboundValue, valid.charjust[0x55eeedf2f9d0]_p2, e96.0
  prom-           %138.1 = MkArg                    unboundValue, valid.charjust[0x55eeedf2f9d0]_p3, e96.0
  val?            %138.2 = StaticCall         !v    %in%[0x55eeee138a70](%138.0, %138.1) e96.0   <lgl$->
  lgl$#-          %138.3 = IsType                   %138.2 isA lgl$-
  void                    Branch                   %138.3 -> BB146 (if true) | BB147 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x55eeee815b50+410: [], env=e96.0
  void                    Deopt              !v    %139.0, CallTarget@0x55eeee44c5d8[Call#7], %136.3
BB142   <- [39]
  int$-           %142.0 = CastType           d     dn %130.0
  int$-           %142.1 = Extract1_1D        wed   %142.0, 1L, elided   <int$->
  real$-          %142.2 = Add                d     %142.1, 1, elided   <real$->
  int$-           %142.3 = AsSwitchIdx              %142.2
  lgl$-           %142.4 = Eq                 d     %142.3, 1L, elided
  lgl$#-          %142.5 = CheckTrueFalse     e     %142.4
  void                    Branch                   %142.5 -> BB50 (if true) | BB42 (if false)
BB143   <- [39]
  void                    Nop                !     
  int-            %143.1 = %130.0
  dr              %143.2 = Typecheck@0x55eeee44c5d8[Type#62]
  goto BB13
BB16   <- [15, 46]
  (int|real)-     %16.0 = Phi                      %46.3:BB46, %15.1:BB15
  (int|real)-     %16.1 = %16.0
  val?^ | miss    %16.2 = LdVar              eR    c, e96.0
  lgl$#-          %16.3 = Identical                <blt c>, %16.2   <true>
  void                    Branch                   %16.3 -> BB140 (if true) | BB141 (if false)
BB146   <- [138]
  lgl$-           %146.0 = CastType           d     dn %138.2
  lgl$-           %146.1 = Not                d     %146.0, elided
  lgl$#-          %146.2 = CheckTrueFalse     e     %146.1
  void                    Branch                   %146.2 -> BB83 (if true) | BB64 (if false)
BB147   <- [138]
  fs              %147.0 = FrameState         R     0x55eeee815b50+447: [%138.2], env=e96.0
  void                    Deopt              !v    %147.0, Typecheck@0x55eeee44c5d8[Type#23], %138.2   !
BB50   <- [142]
  val?^ | miss    %50.0 = LdVar              eR    c, e96.0
  lgl$#-          %50.1 = Identical                <blt c>, %50.0   <true>
  void                    Branch                   %50.1 -> BB156 (if true) | BB157 (if false)
BB42   <- [142]
  lgl$-           %42.0 = Eq                 d     %142.3, 2L, elided
  lgl$#-          %42.1 = CheckTrueFalse     e     %42.0   <false>
  void                    Branch                   %42.1 -> BB145 (if true) | BB144 (if false)
BB140   <- [16]
  (int|real)$-    %140.0 = Extract1_1D        wed   %16.1, 1L, elided   <(int|real)$->
  real$-          %140.1 = Add                d     %140.0, 1, elided   <real$->
  int$-           %140.2 = AsSwitchIdx              %140.1
  lgl$-           %140.3 = Eq                 d     %140.2, 1L, elided
  lgl$#-          %140.4 = CheckTrueFalse     e     %140.3
  void                    Branch                   %140.4 -> BB38 (if true) | BB21 (if false)
BB141   <- [16]
  fs              %141.0 = FrameState         R     0x55eeee815b50+2486: [], env=e96.0
  void                    Deopt              !v    %141.0, DeadBranchReached@0x55eeee44c5d8[Test#35], %16.3   !
BB83   <- [146]
  (cls|spec|blt)  %83.0 = LdFun              !v    stop, e96.0
  fs              %83.1 = FrameState         R     0x55eeee815b50+470: [%83.0], env=e96.0
  void                    Deopt              !v    %83.1, DeadCall@0x55eeee44c5d8[Call#9], %83.0   !
BB64   <- [146]
  val?^ | miss    %64.0 = LdVar              eR    just !upd, e96.0
  val?            %64.1 = Force!             !v    %64.0, e96.0
  val?^ | miss    %64.2 = LdVar              eR    as.integer, e96.0
  lgl$#-          %64.3 = Identical                <blt as.integer>, %64.2   <true>
  void                    Branch                   %64.3 -> BB148 (if true) | BB149 (if false)
BB156   <- [50]
  real-           %156.0 = CallSafeBuiltin    wed   c(0, 4)    <real->
  real-           %156.1 = %156.0
  goto BB46
BB157   <- [50]
  void                    Nop                !     
  lgl$#-          %157.1 = %50.1
  dr              %157.2 = DeadBranchReached@0x55eeee44c5d8[Test#28]
  goto BB40
BB145   <- [42]
  void                    Nop                !     
  lgl$#-          %145.1 = %42.1
  dr              %145.2 = DeadBranchReached@0x55eeee44c5d8[Test#23]
  goto BB40
BB144   <- [42]
  lgl$-           %144.0 = Eq                 d     %142.3, 3L, elided
  lgl$#-          %144.1 = CheckTrueFalse     e     %144.0
  void                    Branch                   %144.1 -> BB49 (if true) | BB43 (if false)
BB38   <- [140]
  void                    Nop                !     
  real$#-         %38.1 = 0
  goto BB23
BB21   <- [140]
  lgl$-           %21.0 = Eq                 d     %140.2, 2L, elided
  lgl$#-          %21.1 = CheckTrueFalse     e     %21.0
  void                    Branch                   %21.1 -> BB37 (if true) | BB22 (if false)
BB148   <- [64]
  val?^ | miss    %148.0 = LdVar              eR    match, e96.0
  lgl$#-          %148.1 = Identical                %148.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %148.1 -> BB150 (if true) | BB151 (if false)
BB149   <- [64]
  void                    Nop                !     
  lgl$#-          %149.1 = %64.3
  dr              %149.2 = DeadBranchReached@0x55eeee44c5d8[Test#6]
  goto BB65
BB46   <- [156, 162, 166, 176, 178]
  real-           %46.0 = Phi                      %178.1:BB178, %176.1:BB176, %166.1:BB166, %162.1:BB162, %156.1:BB156
  real-           %46.1 = %46.0
  void                    StVar              lW    just, %46.1, e96.0
  real-           %46.3 = %46.1
  goto BB16
BB40   <- [145, 157, 163, 165, 167, 177, 179]
  val?^ | miss    %40.0 = Phi                      %145.1:BB145, %157.1:BB157, %163.1:BB163, %165.1:BB165, %167.1:BB167, %177.1:BB177, %179.1:BB179
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %145.2:BB145, %157.2:BB157, %163.2:BB163, %165.2:BB165, %167.2:BB167, %177.2:BB177, %179.2:BB179
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x55eeee815b50+1443: [%142.1], env=e96.0
  void                    Deopt              !v    %40.4, %40.3, %40.1   !
BB49   <- [144]
  val?^ | miss    %49.0 = LdVar              eR    c, e96.0
  lgl$#-          %49.1 = Identical                <blt c>, %49.0   <true>
  void                    Branch                   %49.1 -> BB162 (if true) | BB163 (if false)
BB43   <- [144]
  lgl$-           %43.0 = Eq                 d     %142.3, 4L, elided
  lgl$#-          %43.1 = CheckTrueFalse     e     %43.0
  void                    Branch                   %43.1 -> BB48 (if true) | BB44 (if false)
BB23   <- [37, 38, 174]
  real$#-         %23.0 = Phi                      %174.1:BB174, %37.1:BB37, %38.1:BB38
  real$#-         %23.1 = %23.0
  (int|real)$-    %23.2 = Extract1_1D        wed   %16.1, 2L, elided   <(int|real)$->
  real$-          %23.3 = Add                d     %23.2, 1, elided   <real$->
  int$-           %23.4 = AsSwitchIdx              %23.3
  lgl$-           %23.5 = Eq                 d     %23.4, 1L, elided
  lgl$#-          %23.6 = CheckTrueFalse     e     %23.5   <false>
  void                    Branch                   %23.6 -> BB159 (if true) | BB158 (if false)
BB37   <- [21]
  void                    Nop                !     
  real$#-         %37.1 = 1
  goto BB23
BB22   <- [21]
  lgl$-           %22.0 = Eq                 d     %140.2, 3L, elided
  lgl$#-          %22.1 = CheckTrueFalse     e     %22.0   <false>
  void                    Branch                   %22.1 -> BB155 (if true) | BB154 (if false)
BB150   <- [148]
  val?^ | miss    %150.0 = LdVar              eR    just, e96.0
  val?            %150.1 = Force!<value>      !v    %150.0, e96.0   <str->
  lgl$#-          %150.2 = IsType                   %150.1 isA val?-
  void                    Branch                   %150.2 -> BB152 (if true) | BB153 (if false)
BB151   <- [148]
  void                    Nop                !     
  val?^ | miss    %151.1 = %148.0
  dr              %151.2 = CallTarget@0x55eeee44c5d8[Call#13]
  goto BB65
BB65   <- [149, 151]
  val?^ | miss    %65.0 = Phi                      %149.1:BB149, %151.1:BB151
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %149.2:BB149, %151.2:BB151
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x55eeee815b50+507: [%64.1], env=e96.0
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB162   <- [49]
  real-           %162.0 = CallSafeBuiltin    wed   c(4, 2)    <real->
  real-           %162.1 = %162.0
  goto BB46
BB163   <- [49]
  void                    Nop                !     
  lgl$#-          %163.1 = %49.1
  dr              %163.2 = DeadBranchReached@0x55eeee44c5d8[Test#30]
  goto BB40
BB48   <- [43]
  val?^ | miss    %48.0 = LdVar              eR    c, e96.0
  lgl$#-          %48.1 = Identical                <blt c>, %48.0   <true>
  void                    Branch                   %48.1 -> BB166 (if true) | BB167 (if false)
BB44   <- [43]
  lgl$-           %44.0 = Eq                 d     %142.3, 5L, elided
  lgl$#-          %44.1 = CheckTrueFalse     e     %44.0
  void                    Branch                   %44.1 -> BB47 (if true) | BB45 (if false)
BB159   <- [23]
  void                    Nop                !     
  lgl$#-          %159.1 = %23.6
  dr              %159.2 = DeadBranchReached@0x55eeee44c5d8[Test#74]
  goto BB24
BB158   <- [23]
  lgl$-           %158.0 = Eq                 d     %23.4, 2L, elided
  lgl$#-          %158.1 = CheckTrueFalse     e     %158.0   <false>
  void                    Branch                   %158.1 -> BB173 (if true) | BB172 (if false)
BB155   <- [22]
  void                    Nop                !     
  lgl$#-          %155.1 = %22.1
  dr              %155.2 = DeadBranchReached@0x55eeee44c5d8[Test#65]
  goto BB19
BB154   <- [22]
  lgl$-           %154.0 = Eq                 d     %140.2, 4L, elided
  lgl$#-          %154.1 = CheckTrueFalse     e     %154.0   <false>
  void                    Branch                   %154.1 -> BB161 (if true) | BB160 (if false)
BB152   <- [150]
  val?-           %152.0 = CastType           d     dn %150.1   <str->
  val?            %152.1 = Extract1_1D        wed   %152.0, 2L, elided   <str$->
  (cls|spec|blt)  %152.2 = LdFun              !v    c, <0x55eeeba7d940>, e96.0
  val?            %152.3 = Call               !v    %152.2("left", "right", "bottom", "top", "centre", "center") e96.0   <str->
  lgl$#-          %152.4 = IsType                   %152.3 isA val?-
  lgl$#-          %152.5 = IsType                   %152.1 isA val?+
  void                    Branch                   %152.5 -> BB168 (if true) | BB169 (if false)
BB153   <- [150]
  prom-           %153.0 = MkArg                    unboundValue, valid.charjust[0x55eeedf2f9d0]_p5, e96.0
  val?^           %153.1 = CastType                 up %153.0
  prom-           %153.2 = MkArg                    unboundValue, valid.charjust[0x55eeedf2f9d0]_p4, e96.0
  val?^           %153.3 = CastType                 up %153.2
  fs              %153.4 = FrameState         R     0x55eeee815b50+606: [<blt as.integer>], env=e96.0
  env             e153.5 = (MkEnv)            l     x=%153.3, table=%153.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %153.6 = FrameState         R     0x55eeec291d40+9: [], env=e153.5, next=%153.4
  fs              %153.7 = FrameState         R     0x55eeee224980+5(pr): [%150.1], env=e96.0, next=%153.6
  void                    Deopt              !v    %153.7, Typecheck@0x55eeee44c5d8[Type#29], %150.1   !
BB166   <- [48]
  real-           %166.0 = CallSafeBuiltin    wed   c(4, 3)    <real->
  real-           %166.1 = %166.0
  goto BB46
BB167   <- [48]
  void                    Nop                !     
  lgl$#-          %167.1 = %48.1
  dr              %167.2 = DeadBranchReached@0x55eeee44c5d8[Test#31]
  goto BB40
BB47   <- [44]
  val?^ | miss    %47.0 = LdVar              eR    c, e96.0
  lgl$#-          %47.1 = Identical                <blt c>, %47.0   <true>
  void                    Branch                   %47.1 -> BB176 (if true) | BB177 (if false)
BB45   <- [44]
  lgl$-           %45.0 = Eq                 d     %142.3, 6L, elided
  lgl$#-          %45.1 = CheckTrueFalse     e     %45.0   <true>
  void                    Branch                   %45.1 -> BB164 (if true) | BB165 (if false)
BB24   <- [159, 173, 187]
  val?^ | miss    %24.0 = Phi                      %159.1:BB159, %173.1:BB173, %187.1:BB187
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %159.2:BB159, %173.2:BB173, %187.2:BB187
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x55eeee815b50+3018: [<blt c>, %23.1, %23.2], env=e96.0
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB173   <- [158]
  void                    Nop                !     
  lgl$#-          %173.1 = %158.1
  dr              %173.2 = DeadBranchReached@0x55eeee44c5d8[Test#75]
  goto BB24
BB172   <- [158]
  lgl$-           %172.0 = Eq                 d     %23.4, 3L, elided
  lgl$#-          %172.1 = CheckTrueFalse     e     %172.0
  void                    Branch                   %172.1 -> BB36 (if true) | BB26 (if false)
BB19   <- [155, 161, 175]
  val?^ | miss    %19.0 = Phi                      %155.1:BB155, %161.1:BB161, %175.1:BB175
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %155.2:BB155, %161.2:BB161, %175.2:BB175
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55eeee815b50+2603: [<blt c>, %140.0], env=e96.0
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB161   <- [154]
  void                    Nop                !     
  lgl$#-          %161.1 = %154.1
  dr              %161.2 = DeadBranchReached@0x55eeee44c5d8[Test#66]
  goto BB19
BB160   <- [154]
  lgl$-           %160.0 = Eq                 d     %140.2, 5L, elided
  lgl$#-          %160.1 = CheckTrueFalse     e     %160.0   <true>
  void                    Branch                   %160.1 -> BB174 (if true) | BB175 (if false)
BB168   <- [152]
  val?+           %168.0 = CastType           d     dn %152.1   <(int|str)+>
  void                    Branch                   %152.4 -> BB170 (if true) | BB171 (if false)
BB169   <- [152]
  void                    Nop                !     
  val?            %169.1 = %152.1
  dr              %169.2 = Typecheck@0x55eeec2e4cb0[Type#0]
  goto BB69
BB176   <- [47]
  real-           %176.0 = CallSafeBuiltin    wed   c(4, 4)    <real->
  real-           %176.1 = %176.0
  goto BB46
BB177   <- [47]
  void                    Nop                !     
  lgl$#-          %177.1 = %47.1
  dr              %177.2 = DeadBranchReached@0x55eeee44c5d8[Test#32]
  goto BB40
BB164   <- [45]
  val?^ | miss    %164.0 = LdVar              eR    c, e96.0
  lgl$#-          %164.1 = Identical                <blt c>, %164.0   <true>
  void                    Branch                   %164.1 -> BB178 (if true) | BB179 (if false)
BB165   <- [45]
  void                    Nop                !     
  lgl$#-          %165.1 = %45.1
  dr              %165.2 = DeadBranchReached@0x55eeee44c5d8[Test#27]
  goto BB40
BB36   <- [172]
  void                    Nop                !     
  real$#-         %36.1 = 0
  goto BB28
BB26   <- [172]
  lgl$-           %26.0 = Eq                 d     %23.4, 4L, elided
  lgl$#-          %26.1 = CheckTrueFalse     e     %26.0
  void                    Branch                   %26.1 -> BB35 (if true) | BB27 (if false)
BB174   <- [160]
  void                    Nop                !     
  real$#-         %174.1 = 0.5
  goto BB23
BB175   <- [160]
  void                    Nop                !     
  lgl$#-          %175.1 = %160.1
  dr              %175.2 = DeadBranchReached@0x55eeee44c5d8[Test#67]
  goto BB19
BB170   <- [168]
  val?-           %170.0 = CastType           d     dn %152.3   <str->
  val+            %170.1 = CallSafeBuiltin    wed   match(%168.0, %170.0, NA, nil)    <int$->
  lgl$#-          %170.2 = IsType                   %170.1 isA int$-
  void                    Branch                   %170.2 -> BB180 (if true) | BB181 (if false)
BB171   <- [168]
  void                    Nop                !     
  val?            %171.1 = %152.3
  dr              %171.2 = Typecheck@0x55eeec2e4cb0[Type#1]
  goto BB69
BB69   <- [169, 171]
  val?^ | miss    %69.0 = Phi                      %169.1:BB169, %171.1:BB171
  val?^ | miss    %69.1 = %69.0
  dr              %69.2 = Phi                      %169.2:BB169, %171.2:BB171
  dr              %69.3 = %69.2
  prom-           %69.4 = MkArg                    %152.3, valid.charjust[0x55eeedf2f9d0]_p5 (!refl), e96.0
  val?~           %69.5 = CastType                 up %69.4
  prom-           %69.6 = MkArg                    %152.1, valid.charjust[0x55eeedf2f9d0]_p4 (!refl), e96.0
  val?~           %69.7 = CastType                 up %69.6
  fs              %69.8 = FrameState         R     0x55eeee815b50+606: [<blt as.integer>], env=e96.0
  env             e69.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%69.5, x=%69.7, parent=R_BaseNamespace, context 0
  fs              %69.10 = FrameState         R     0x55eeec291d40+23: [%152.1, %152.3], env=e69.9, next=%69.8
  void                    Deopt              !v    %69.10, %69.3, %69.1   !
BB178   <- [164]
  real-           %178.0 = CallSafeBuiltin    wed   c(4, 4)    <real->
  real-           %178.1 = %178.0
  goto BB46
BB179   <- [164]
  void                    Nop                !     
  lgl$#-          %179.1 = %164.1
  dr              %179.2 = DeadBranchReached@0x55eeee44c5d8[Test#33]
  goto BB40
BB28   <- [35, 36, 186]
  real$#-         %28.0 = Phi                      %186.1:BB186, %35.1:BB35, %36.1:BB36
  real$#-         %28.1 = %28.0
  real-           %28.2 = CallSafeBuiltin    wed   c(%23.1, %28.1)    <real->
  void                    StVar              lW    just, %28.2, e96.0
  val?^ | miss    %28.4 = LdVar              eR    anyNA, e96.0
  lgl$#-          %28.5 = Identical                <blt anyNA>, %28.4   <true>
  void                    Branch                   %28.5 -> BB182 (if true) | BB183 (if false)
BB35   <- [26]
  void                    Nop                !     
  real$#-         %35.1 = 1
  goto BB28
BB27   <- [26]
  lgl$-           %27.0 = Eq                 d     %23.4, 5L, elided
  lgl$#-          %27.1 = CheckTrueFalse     e     %27.0   <true>
  void                    Branch                   %27.1 -> BB186 (if true) | BB187 (if false)
BB180   <- [170]
  int$-           %180.0 = CastType           d     dn %170.1
  real$-          %180.1 = Sub                d     %180.0, 1, elided   <real$->
  int$-           %180.2 = CallSafeBuiltin    wed   as.integer(%180.1)    <int$->
  val?^ | miss    %180.3 = LdVar              eR    just, e96.0
  val?            %180.4 = Force!<value>      !v    %180.3, e96.0   <str->
  lgl$#-          %180.5 = IsType                   %180.4 isA val?-
  void                    Branch                   %180.5 -> BB184 (if true) | BB185 (if false)
BB181   <- [170]
  prom-           %181.0 = MkArg                    %170.0, valid.charjust[0x55eeedf2f9d0]_p5 (!refl), e96.0
  val?~           %181.1 = CastType                 up %181.0
  prom-           %181.2 = MkArg                    %168.0, valid.charjust[0x55eeedf2f9d0]_p4 (!refl), e96.0
  val?~           %181.3 = CastType                 up %181.2
  fs              %181.4 = FrameState         R     0x55eeee815b50+606: [<blt as.integer>], env=e96.0
  env             e181.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%181.1, x=%181.3, parent=R_BaseNamespace, context 0
  fs              %181.6 = FrameState         R     0x55eeec291d40+69: [%170.1], env=e181.5, next=%181.4
  void                    Deopt              !v    %181.6, Typecheck@0x55eeee44c5d8[Type#32], %170.1   !
BB182   <- [28]
  val+            %182.0 = CallSafeBuiltin    wed   anyNA(%28.2)    <lgl$->
  lgl$#-          %182.1 = IsType                   %182.0 isA lgl$-
  void                    Branch                   %182.1 -> BB188 (if true) | BB189 (if false)
BB183   <- [28]
  fs              %183.0 = FrameState         R     0x55eeee815b50+3412: [], env=e96.0
  void                    Deopt              !v    %183.0, DeadBranchReached@0x55eeee44c5d8[Test#80], %28.5   !
BB186   <- [27]
  void                    Nop                !     
  real$#-         %186.1 = 0.5
  goto BB28
BB187   <- [27]
  void                    Nop                !     
  lgl$#-          %187.1 = %27.1
  dr              %187.2 = DeadBranchReached@0x55eeee44c5d8[Test#78]
  goto BB24
BB184   <- [180]
  val?-           %184.0 = CastType           d     dn %180.4   <str->
  val?-           %184.1 = Subassign1_1D      wed   %180.2, %184.0, 2L, elided
  void                    StVar              lW    just, %184.1, e96.0
  val?^ | miss    %184.3 = LdVar              eR    %in%, e96.0
  lgl$#-          %184.4 = Identical                %184.3, function(x, table) <(rir::DispatchTable*)0x55e|...
  void                    Branch                   %184.4 -> BB190 (if true) | BB191 (if false)
BB185   <- [180]
  fs              %185.0 = FrameState         R     0x55eeee815b50+654: [%180.2, %180.4], env=e96.0
  void                    Deopt              !v    %185.0, Typecheck@0x55eeee44c5d8[Type#35], %180.4   !
BB188   <- [182]
  lgl$-           %188.0 = CastType           d     dn %182.0
  lgl$#-          %188.1 = CheckTrueFalse     e     %188.0
  void                    Branch                   %188.1 -> BB34 (if true) | BB33 (if false)
BB189   <- [182]
  fs              %189.0 = FrameState         R     0x55eeee815b50+3503: [%182.0], env=e96.0
  void                    Deopt              !v    %189.0, Typecheck@0x55eeee44c5d8[Type#90], %182.0   !
BB190   <- [184]
  prom-           %190.0 = MkArg                    unboundValue, valid.charjust[0x55eeedf2f9d0]_p6, e96.0
  prom-           %190.1 = MkArg                    unboundValue, valid.charjust[0x55eeedf2f9d0]_p7, e96.0
  val?            %190.2 = StaticCall         !v    %in%[0x55eeee138a70](%190.0, %190.1) e96.0   <lgl$->
  lgl$#-          %190.3 = IsType                   %190.2 isA lgl$-
  void                    Branch                   %190.3 -> BB192 (if true) | BB193 (if false)
BB191   <- [184]
  fs              %191.0 = FrameState         R     0x55eeee815b50+675: [], env=e96.0
  void                    Deopt              !v    %191.0, CallTarget@0x55eeee44c5d8[Call#15], %184.3   !
BB34   <- [188]
  (cls|spec|blt)  %34.0 = LdFun              !v    stop, e96.0
  fs              %34.1 = FrameState         R     0x55eeee815b50+3524: [%34.0], env=e96.0
  void                    Deopt              !v    %34.1, DeadCall@0x55eeee44c5d8[Call#37], %34.0   !
BB33   <- [188]
  void                    Visible            v     
  void                    Return             l     %28.2
BB192   <- [190]
  lgl$-           %192.0 = CastType           d     dn %190.2
  lgl$-           %192.1 = Not                d     %192.0, elided
  lgl$#-          %192.2 = CheckTrueFalse     e     %192.1
  void                    Branch                   %192.2 -> BB82 (if true) | BB79 (if false)
BB193   <- [190]
  void                    Nop                !     
  val?            %193.1 = %190.2
  dr              %193.2 = Typecheck@0x55eeee44c5d8[Type#39]
  goto BB77
BB82   <- [192]
  (cls|spec|blt)  %82.0 = LdFun              !v    stop, e96.0
  fs              %82.1 = FrameState         R     0x55eeee815b50+735: [%82.0], env=e96.0
  void                    Deopt              !v    %82.1, DeadCall@0x55eeee44c5d8[Call#17], %82.0   !
BB79   <- [192]
  val?^ | miss    %79.0 = LdVar              eR    as.integer, e96.0
  lgl$#-          %79.1 = Identical                <blt as.integer>, %79.0   <true>
  void                    Branch                   %79.1 -> BB194 (if true) | BB195 (if false)
BB77   <- [193, 195]
  val?^ | miss    %77.0 = Phi                      %193.1:BB193, %195.1:BB195
  val?^ | miss    %77.1 = %77.0
  dr              %77.2 = Phi                      %193.2:BB193, %195.2:BB195
  dr              %77.3 = %77.2
  fs              %77.4 = FrameState         R     0x55eeee815b50+712: [%190.2], env=e96.0
  void                    Deopt              !v    %77.4, %77.3, %77.1   !
BB194   <- [79]
  val?^ | miss    %194.0 = LdVar              eR    just, e96.0
  val?            %194.1 = Force!<value>      !v    %194.0, e96.0   <str->
  lgl$#-          %194.2 = IsType                   %194.1 isA val?-
  void                    Branch                   %194.2 -> BB196 (if true) | BB197 (if false)
BB195   <- [79]
  void                    Nop                !     
  lgl$#-          %195.1 = %79.1
  dr              %195.2 = DeadBranchReached@0x55eeee44c5d8[Test#10]
  goto BB77
BB196   <- [194]
  val?-           %196.0 = CastType           d     dn %194.1   <str->
  int-            %196.1 = CallSafeBuiltin    wed   as.integer(%196.0)    <int->
  void                    StVar              lW    just, %196.1, e96.0
  int-            %196.3 = %196.1
  goto BB9
BB197   <- [194]
  fs              %197.0 = FrameState         R     0x55eeee815b50+832: [<blt as.integer>, %194.1], env=e96.0
  void                    Deopt              !v    %197.0, Typecheck@0x55eeee44c5d8[Type#41], %194.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1("left", "right", "bottom", "top", "centre", "center") e0.0   <str->
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1(0, 1, 4, 5) e0.0   <real->
  void                    Return             l     %0.2
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 2L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1("left", "right", "bottom", "top", "centre", "center") e0.0   <str->
  void                    Return             l     %0.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 2L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1(2, 3, 4, 5) e0.0   <real->
  void                    Return             l     %0.2
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    just, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str$->
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55eeeba7d940>, e0.0
  val?            %0.2  = Call               !     %0.1("left", "right", "bottom", "top", "centre", "center") e0.0   <str->
  void                    Return             l     %0.2

│ valid.charjust[0x55eeedf2f9d0]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
