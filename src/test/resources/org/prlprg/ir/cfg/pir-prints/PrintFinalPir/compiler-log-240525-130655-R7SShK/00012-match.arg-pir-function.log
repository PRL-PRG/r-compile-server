
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.arg[0x557089c81780]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
match.arg[0x557089c81780]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     arg=%0.1, choices=%0.0, several.ok(miss)=false, parent=R_BaseNamespace, context 1
  lgl$-           %0.3  = Missing            eR    choices, e0.2
  lgl$#-          %0.4  = CheckTrueFalse     e     %0.3
  void                    Branch                   %0.4 -> BB2 (if true) | BB38 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, match.arg[0x557089c81780]_p3, e0.2
  val?            %2.1  = StaticCall         !v    formals[0x557089a650c0](%2.0) e0.2   <list->
  void                    StVar              lW    formal.args, %2.1, e0.2
  val?^ | miss    %2.3  = LdVar              eR    eval, e0.2
  lgl$#-          %2.4  = Identical                %2.3, function(expr, envir=parent.frame(), enclos=if|...
  void                    Branch                   %2.4 -> BB39 (if true) | BB40 (if false)
BB38   <- [0]
  void                    Nop                !     
  goto BB5
BB39   <- [2]
  prom-           %39.0 = MkArg                    unboundValue, match.arg[0x557089c81780]_p5, e0.2
  prom-           %39.1 = MkArg                    unboundValue, match.arg[0x557089c81780]_p11, e0.2
  val?            %39.2 = StaticCall         !v    eval[0x557089a242b0](%39.0, %39.1) { 0 1n } e0.2   <str->
  void                    StVar              lW    choices, %39.2, e0.2
  goto BB5
BB40   <- [2]
  fs              %40.0 = FrameState         R     0x557089739270+63: [], env=e0.2
  void                    Deopt              !v    %40.0, CallTarget@0x5570889dcda0[Call#3], %2.3   !
BB5   <- [38, 39]
  val?^ | miss    %5.0  = LdVar              eR    arg, e0.2
  val?            %5.1  = Force!<lazy>       !v    %5.0, e0.2   <str->
  lgl$-           %5.2  = Is                       %5.1, NULL
  lgl$#-          %5.3  = CheckTrueFalse     e     %5.2
  void                    Branch                   %5.3 -> BB35 (if true) | BB8 (if false)
BB35   <- [5]
  val?^ | miss    %35.0 = LdVar              eR    choices, e0.2
  val?            %35.1 = Force!             !v    %35.0, e0.2   <val?_>
  lgl$#-          %35.2 = IsType                   %35.1 isA val?+
  void                    Branch                   %35.2 -> BB43 (if true) | BB44 (if false)
BB8   <- [5]
  val?^ | miss    %8.0  = LdVar              eR    is.character, e0.2
  lgl$#-          %8.1  = Identical                <blt is.character>, %8.0   <true>
  void                    Branch                   %8.1 -> BB41 (if true) | BB42 (if false)
BB43   <- [35]
  val?+           %43.0 = CastType           d     dn %35.1   <val?_>
  val?            %43.1 = Extract1_1D        wed   %43.0, 1L, elided   <val?_>
  void                    Visible            v     
  val?            %43.3 = %43.1
  goto BB34
BB44   <- [35]
  fs              %44.0 = FrameState         R     0x557089739270+302: [%35.1], env=e0.2
  void                    Deopt              !v    %44.0, Typecheck@0x5570889dcda0[Type#18], %35.1   !
BB41   <- [8]
  val?^ | miss    %41.0 = LdVar              eR    arg, e0.2
  val?            %41.1 = Force!<wrapped>    !v    %41.0, e0.2   <str->
  lgl$#-          %41.2 = CallSafeBuiltin    wed   is.character(%41.1)    <lgl$->
  void                    Branch                   %41.2 -> BB10 (if true) | BB9 (if false)
BB42   <- [8]
  fs              %42.0 = FrameState         R     0x557089739270+131: [%5.1], env=e0.2
  void                    Deopt              !v    %42.0, DeadBranchReached@0x5570889dcda0[Test#1], %8.1   !
BB34   <- [43, 57]
  val?            %34.0 = Phi                      %57.3:BB57, %43.3:BB43
  val?            %34.1 = %34.0
  void                    Return             l     %34.1
BB10   <- [41]
  val?^ | miss    %10.0 = LdVar              eR    several.ok, e0.2
  val?            %10.1 = Force!<lazy>       !v    %10.0, e0.2   <lgl$->
  lgl$#-          %10.2 = IsType                   %10.1 isA lgl$-
  void                    Branch                   %10.2 -> BB45 (if true) | BB46 (if false)
BB9   <- [41]
  (cls|spec|blt)  %9.0  = LdFun              !v    stop, e0.2
  fs              %9.1  = FrameState         R     0x557089739270+260: [%9.0], env=e0.2
  void                    Deopt              !v    %9.1, DeadCall@0x5570889dcda0[Call#10], %9.0   !
BB45   <- [10]
  lgl$-           %45.0 = CastType           d     dn %10.1
  lgl$-           %45.1 = Not                d     %45.0, elided
  lgl$#-          %45.2 = CheckTrueFalse     e     %45.1
  void                    Branch                   %45.2 -> BB21 (if true) | BB13 (if false)
BB46   <- [10]
  void                    Nop                !     
  val?            %46.1 = %10.1
  dr              %46.2 = Typecheck@0x5570889dcda0[Type#20]
  goto BB11
BB21   <- [45]
  val?^ | miss    %21.0 = LdVar              eR    identical, e0.2
  lgl$#-          %21.1 = Identical                %21.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %21.1 -> BB47 (if true) | BB48 (if false)
BB13   <- [45]
  val?^ | miss    %13.0 = LdVar              eR    length, e0.2
  lgl$#-          %13.1 = Identical                <blt length>, %13.0   <@?>
  void                    Branch                   %13.1 -> BB15 (if true) | BB14 (if false)
BB11   <- [46, 48]
  val?^ | miss    %11.0 = Phi                      %46.1:BB46, %48.1:BB48
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %46.2:BB46, %48.2:BB48
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x557089739270+361: [%10.1], env=e0.2
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB47   <- [21]
  prom-           %47.0 = MkArg                    unboundValue, match.arg[0x557089c81780]_p1, e0.2
  prom-           %47.1 = MkArg                    unboundValue, match.arg[0x557089c81780]_p2, e0.2
  ct              %47.2 = PushContext        lCL   %47.0, %47.1, identical(arg, choices), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.2
  val?^           %47.3 = CastType                 up %47.1
  val?^           %47.4 = CastType                 up %47.0
  env             e47.5 = MkEnv              l     x=%47.4, y=%47.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %47.6 = Force!<lazy>       !vL   %47.4, e47.5   <(int|str)>
  val?            %47.7 = Force!<lazy>       !vL   %47.3, e47.5   <(int|str)>
  val?            %47.8 = CallBuiltin        !v    identical(%47.6, %47.7, true, true, true, true, false, true) e47.5
  val?            %47.9 = PopContext         C     %47.8, %47.2   <lgl$->
  lgl$#-          %47.10 = IsType                   %47.9 isA lgl$-
  void                    Branch                   %47.10 -> BB49 (if true) | BB50 (if false)
BB48   <- [21]
  void                    Nop                !     
  val?^ | miss    %48.1 = %21.0
  dr              %48.2 = CallTarget@0x5570889dcda0[Call#13]
  goto BB11
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    arg, e0.2
  val?            %15.1 = Force!             !v    %15.0, e0.2   <val?_>
  lgl$#-          %15.2 = IsType                   %15.1 isA val?+
  void                    Branch                   %15.2 -> BB51 (if true) | BB52 (if false)
BB14   <- [13]
  (cls|spec|blt)  %14.0 = LdFun              !v    length, e0.2
  fs              %14.1 = FrameState         R     0x557089739270+401: [%14.0], env=e0.2
  void                    Deopt              !v    %14.1, DeadCall@0x5570889dcda0[Call#11], %14.0   !
BB49   <- [47]
  lgl$-           %49.0 = CastType           d     dn %47.9
  lgl$#-          %49.1 = CheckTrueFalse     e     %49.0
  void                    Branch                   %49.1 -> BB31 (if true) | BB24 (if false)
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x557089739270+567: [%47.9], env=e0.2
  void                    Deopt              !v    %50.0, Typecheck@0x5570889dcda0[Type#27], %47.9   !
BB51   <- [15]
  val?+           %51.0 = CastType           d     dn %15.1   <val?_>
  real$-          %51.1 = CallSafeBuiltin    wed   length(%51.0)    <val?_>
  lgl$-           %51.2 = Eq                 d     %51.1, 0L, elided   <val?_>
  lgl$#-          %51.3 = CheckTrueFalse     e     %51.2
  void                    Branch                   %51.3 -> BB20 (if true) | BB18 (if false)
BB52   <- [15]
  fs              %52.0 = FrameState         R     0x557089739270+442: [<blt length>, %15.1], env=e0.2
  void                    Deopt              !v    %52.0, Typecheck@0x5570889dcda0[Type#22], %15.1   !
BB31   <- [49]
  val?^ | miss    %31.0 = LdVar              eR    arg, e0.2
  val?            %31.1 = Force!<wrapped>    !v    %31.0, e0.2   <str->
  lgl$#-          %31.2 = IsType                   %31.1 isA val+   <true>
  lgl$#-          %31.3 = IsType                   %31.1 isA val?-
  void                    Branch                   %31.2 -> BB55 (if true) | BB56 (if false)
BB24   <- [49]
  val?^ | miss    %24.0 = LdVar              eR    length, e0.2
  lgl$#-          %24.1 = Identical                <blt length>, %24.0   <@?>
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB20   <- [51]
  (cls|spec|blt)  %20.0 = LdFun              !v    stop, e0.2
  fs              %20.1 = FrameState         R     0x557089739270+497: [%20.0], env=e0.2
  void                    Deopt              !v    %20.1, DeadCall@0x5570889dcda0[Call#12], %20.0   !
BB18   <- [51]
  void                    Nop                !     
  goto BB19
BB55   <- [31]
  void                    Branch                   %31.3 -> BB57 (if true) | BB58 (if false)
BB56   <- [31]
  void                    Nop                !     
  lgl$#-          %56.1 = %31.2
  dr              %56.2 = DeadBranchReached@0x5570889dcda0[Test#4]
  goto BB32
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    arg, e0.2
  val?            %26.1 = Force!             !v    %26.0, e0.2   <val?_>
  lgl$#-          %26.2 = IsType                   %26.1 isA val?+
  void                    Branch                   %26.2 -> BB53 (if true) | BB54 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    length, e0.2
  fs              %25.1 = FrameState         R     0x557089739270+670: [%25.0], env=e0.2
  void                    Deopt              !v    %25.1, DeadCall@0x5570889dcda0[Call#14], %25.0   !
BB19   <- [29, 18]
  (cls|spec|blt)  %19.0 = LdFun              !v    pmatch, e0.2
  fs              %19.1 = FrameState         R     0x557089739270+799: [%19.0], env=e0.2
  void                    Deopt              !v    %19.1, DeadCall@0x5570889dcda0[Call#16], %19.0   !
BB57   <- [55]
  val?-           %57.0 = CastType           d     dn %31.1   <str->
  val?            %57.1 = Extract1_1D        wed   %57.0, 1L, elided   <str$->
  void                    Visible            v     
  val?            %57.3 = %57.1
  goto BB34
BB58   <- [55]
  void                    Nop                !     
  val?            %58.1 = %31.1
  dr              %58.2 = Typecheck@0x5570889dcda0[Type#28]
  goto BB32
BB32   <- [56, 58]
  val?^ | miss    %32.0 = Phi                      %56.1:BB56, %58.1:BB58
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %56.2:BB56, %58.2:BB58
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x557089739270+592: [%31.1], env=e0.2
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB53   <- [26]
  val?+           %53.0 = CastType           d     dn %26.1   <val?_>
  real$-          %53.1 = CallSafeBuiltin    wed   length(%53.0)    <val?_>
  lgl$-           %53.2 = Gt                 d     %53.1, 1L, elided   <val?_>
  lgl$#-          %53.3 = CheckTrueFalse     e     %53.2
  void                    Branch                   %53.3 -> BB30 (if true) | BB29 (if false)
BB54   <- [26]
  fs              %54.0 = FrameState         R     0x557089739270+711: [<blt length>, %26.1], env=e0.2
  void                    Deopt              !v    %54.0, Typecheck@0x5570889dcda0[Type#31], %26.1   !
BB30   <- [53]
  (cls|spec|blt)  %30.0 = LdFun              !v    stop, e0.2
  fs              %30.1 = FrameState         R     0x557089739270+766: [%30.0], env=e0.2
  void                    Deopt              !v    %30.1, DeadCall@0x5570889dcda0[Call#15], %30.0   !
BB29   <- [53]
  void                    Nop                !     
  goto BB19
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    arg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    choices, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sys.function, <0x5570880861b0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x557089c81780]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <cls->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    sys.parent, <0x55708884d590>, e0.0
  val?            %0.2  = Call               !v    %0.1() e0.0   <int$->
  void                    Invisible          v     
  void                    StVar              lW    sysP, %0.2, e0.0
  void                    Return             l     %0.2
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    formal.args, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <list->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  (cls|spec|blt)  %2.0  = LdFun              !v    as.character, <0x5570878b6040>, e0.0
  prom-           %2.1  = MkArg                    unboundValue, match.arg[0x557089c81780]_p6, e0.0
  val?            %2.2  = Call               !v    %2.0(%2.1) e0.0   <str$->
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, match.arg[0x557089c81780]_p8, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.3:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     substitute, <0x5570878a8468>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x557089c81780]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <sym->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    arg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x557089c81780]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     substitute, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x557089c81780]_p10, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    arg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sys.frame, <0x557087e7f110>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x557089c81780]_p12, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sysP, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3

│ match.arg[0x557089c81780]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
