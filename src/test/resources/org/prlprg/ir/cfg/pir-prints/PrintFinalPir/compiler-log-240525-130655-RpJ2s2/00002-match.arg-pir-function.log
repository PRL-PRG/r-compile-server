
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.arg[0x558f3e104360]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
match.arg[0x558f3e104360]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     arg=%0.1, choices=%0.0, several.ok(miss)=false, parent=R_BaseNamespace, context 1
  lgl$-           %0.3  = Missing            eR    choices, e0.2
  lgl$#-          %0.4  = CheckTrueFalse     e     %0.3
  void                    Branch                   %0.4 -> BB2 (if true) | BB63 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, match.arg[0x558f3e104360]_p5, e0.2
  val?            %2.1  = StaticCall         !v    formals[0x558f3e172350](%2.0) e0.2   <list->
  void                    StVar              lW    formal.args, %2.1, e0.2
  val?^ | miss    %2.3  = LdVar              eR    eval, e0.2
  lgl$#-          %2.4  = Identical                %2.3, function(expr, envir=parent.frame(), enclos=if|...
  void                    Branch                   %2.4 -> BB64 (if true) | BB65 (if false)
BB63   <- [0]
  void                    Nop                !     
  goto BB5
BB64   <- [2]
  prom-           %64.0 = MkArg                    unboundValue, match.arg[0x558f3e104360]_p7, e0.2
  prom-           %64.1 = MkArg                    unboundValue, match.arg[0x558f3e104360]_p13, e0.2
  val?            %64.2 = StaticCall         !v    eval[0x558f3e0b5ee0](%64.0, %64.1) { 0 1n } e0.2   <str->
  void                    StVar              lW    choices, %64.2, e0.2
  goto BB5
BB65   <- [2]
  fs              %65.0 = FrameState         R     0x558f3a7ccd40+63: [], env=e0.2
  void                    Deopt              !v    %65.0, CallTarget@0x558f3a9e4da0[Call#3], %2.3   !
BB5   <- [63, 64]
  val?^ | miss    %5.0  = LdVar              eR    arg, e0.2
  val?            %5.1  = Force!<lazy>       !v    %5.0, e0.2   <str->
  lgl$-           %5.2  = Is                       %5.1, NULL
  lgl$#-          %5.3  = CheckTrueFalse     e     %5.2
  void                    Branch                   %5.3 -> BB60 (if true) | BB8 (if false)
BB60   <- [5]
  val?^ | miss    %60.0 = LdVar              eR    choices, e0.2
  val?            %60.1 = Force!             !v    %60.0, e0.2   <val?_>
  lgl$#-          %60.2 = IsType                   %60.1 isA val?+
  void                    Branch                   %60.2 -> BB68 (if true) | BB69 (if false)
BB8   <- [5]
  val?^ | miss    %8.0  = LdVar              eR    is.character, e0.2
  lgl$#-          %8.1  = Identical                <blt is.character>, %8.0   <true>
  void                    Branch                   %8.1 -> BB66 (if true) | BB67 (if false)
BB68   <- [60]
  val?+           %68.0 = CastType           d     dn %60.1   <val?_>
  val?            %68.1 = Extract1_1D        wed   %68.0, 1L, elided   <val?_>
  void                    Visible            v     
  val?            %68.3 = %68.1
  goto BB42
BB69   <- [60]
  fs              %69.0 = FrameState         R     0x558f3a7ccd40+302: [%60.1], env=e0.2
  void                    Deopt              !v    %69.0, Typecheck@0x558f3a9e4da0[Type#18], %60.1   !
BB66   <- [8]
  val?^ | miss    %66.0 = LdVar              eR    arg, e0.2
  val?            %66.1 = Force!<wrapped>    !v    %66.0, e0.2   <str->
  lgl$#-          %66.2 = CallSafeBuiltin    wed   is.character(%66.1)    <lgl$->
  void                    Branch                   %66.2 -> BB10 (if true) | BB9 (if false)
BB67   <- [8]
  fs              %67.0 = FrameState         R     0x558f3a7ccd40+131: [%5.1], env=e0.2
  void                    Deopt              !v    %67.0, DeadBranchReached@0x558f3a9e4da0[Test#1], %8.1   !
BB42   <- [68, 84, 114]
  val?            %42.0 = Phi                      %114.3:BB114, %84.3:BB84, %68.3:BB68
  val?            %42.1 = %42.0
  void                    Return             l     %42.1
BB10   <- [66]
  val?^ | miss    %10.0 = LdVar              eR    several.ok, e0.2
  val?            %10.1 = Force!<lazy>       !v    %10.0, e0.2   <lgl$->
  lgl$#-          %10.2 = IsType                   %10.1 isA lgl$-
  void                    Branch                   %10.2 -> BB70 (if true) | BB71 (if false)
BB9   <- [66]
  (cls|spec|blt)  %9.0  = LdFun              !v    stop, e0.2
  fs              %9.1  = FrameState         R     0x558f3a7ccd40+260: [%9.0], env=e0.2
  void                    Deopt              !v    %9.1, DeadCall@0x558f3a9e4da0[Call#10], %9.0   !
BB70   <- [10]
  lgl$-           %70.0 = CastType           d     dn %10.1
  lgl$-           %70.1 = Not                d     %70.0, elided
  lgl$#-          %70.2 = CheckTrueFalse     e     %70.1
  void                    Branch                   %70.2 -> BB47 (if true) | BB13 (if false)
BB71   <- [10]
  void                    Nop                !     
  val?            %71.1 = %10.1
  dr              %71.2 = Typecheck@0x558f3a9e4da0[Type#20]
  goto BB11
BB47   <- [70]
  val?^ | miss    %47.0 = LdVar              eR    identical, e0.2
  lgl$#-          %47.1 = Identical                %47.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %47.1 -> BB72 (if true) | BB73 (if false)
BB13   <- [70]
  val?^ | miss    %13.0 = LdVar              eR    length, e0.2
  lgl$#-          %13.1 = Identical                <blt length>, %13.0   <@?>
  void                    Branch                   %13.1 -> BB15 (if true) | BB14 (if false)
BB11   <- [71, 73]
  val?^ | miss    %11.0 = Phi                      %71.1:BB71, %73.1:BB73
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %71.2:BB71, %73.2:BB73
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x558f3a7ccd40+361: [%10.1], env=e0.2
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB72   <- [47]
  prom-           %72.0 = MkArg                    unboundValue, match.arg[0x558f3e104360]_p3, e0.2
  prom-           %72.1 = MkArg                    unboundValue, match.arg[0x558f3e104360]_p4, e0.2
  ct              %72.2 = PushContext        lCL   %72.0, %72.1, identical(arg, choices), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.2
  val?^           %72.3 = CastType                 up %72.1
  val?^           %72.4 = CastType                 up %72.0
  env             e72.5 = MkEnv              l     x=%72.4, y=%72.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %72.6 = Force!<lazy>       !vL   %72.4, e72.5   <str->
  val?            %72.7 = Force!<lazy>       !vL   %72.3, e72.5   <str->
  val?            %72.8 = CallBuiltin        !v    identical(%72.6, %72.7, true, true, true, true, false, true) e72.5
  val?            %72.9 = PopContext         C     %72.8, %72.2   <lgl$->
  lgl$#-          %72.10 = IsType                   %72.9 isA lgl$-
  void                    Branch                   %72.10 -> BB74 (if true) | BB75 (if false)
BB73   <- [47]
  void                    Nop                !     
  val?^ | miss    %73.1 = %47.0
  dr              %73.2 = CallTarget@0x558f3a9e4da0[Call#13]
  goto BB11
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    arg, e0.2
  val?            %15.1 = Force!             !v    %15.0, e0.2   <val?_>
  lgl$#-          %15.2 = IsType                   %15.1 isA val?+
  void                    Branch                   %15.2 -> BB76 (if true) | BB77 (if false)
BB14   <- [13]
  (cls|spec|blt)  %14.0 = LdFun              !v    length, e0.2
  fs              %14.1 = FrameState         R     0x558f3a7ccd40+401: [%14.0], env=e0.2
  void                    Deopt              !v    %14.1, DeadCall@0x558f3a9e4da0[Call#11], %14.0   !
BB74   <- [72]
  lgl$-           %74.0 = CastType           d     dn %72.9
  lgl$#-          %74.1 = CheckTrueFalse     e     %74.0
  void                    Branch                   %74.1 -> BB57 (if true) | BB50 (if false)
BB75   <- [72]
  void                    Nop                !     
  val?            %75.1 = %72.9
  dr              %75.2 = Typecheck@0x558f3a9e4da0[Type#27]
  goto BB48
BB76   <- [15]
  val?+           %76.0 = CastType           d     dn %15.1   <val?_>
  real$-          %76.1 = CallSafeBuiltin    wed   length(%76.0)    <val?_>
  lgl$-           %76.2 = Eq                 d     %76.1, 0L, elided   <val?_>
  lgl$#-          %76.3 = CheckTrueFalse     e     %76.2
  void                    Branch                   %76.3 -> BB46 (if true) | BB18 (if false)
BB77   <- [15]
  fs              %77.0 = FrameState         R     0x558f3a7ccd40+442: [<blt length>, %15.1], env=e0.2
  void                    Deopt              !v    %77.0, Typecheck@0x558f3a9e4da0[Type#22], %15.1   !
BB57   <- [74]
  val?^ | miss    %57.0 = LdVar              eR    arg, e0.2
  val?            %57.1 = Force!<wrapped>    !v    %57.0, e0.2   <str->
  lgl$#-          %57.2 = IsType                   %57.1 isA val+   <true>
  lgl$#-          %57.3 = IsType                   %57.1 isA val?-
  void                    Branch                   %57.2 -> BB82 (if true) | BB83 (if false)
BB50   <- [74]
  val?^ | miss    %50.0 = LdVar              eR    length, e0.2
  lgl$#-          %50.1 = Identical                <blt length>, %50.0   <true>
  void                    Branch                   %50.1 -> BB78 (if true) | BB79 (if false)
BB48   <- [75, 79]
  val?^ | miss    %48.0 = Phi                      %75.1:BB75, %79.1:BB79
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %75.2:BB75, %79.2:BB79
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x558f3a7ccd40+567: [%72.9], env=e0.2
  void                    Deopt              !v    %48.4, %48.3, %48.1   !
BB46   <- [76]
  (cls|spec|blt)  %46.0 = LdFun              !v    stop, e0.2
  fs              %46.1 = FrameState         R     0x558f3a7ccd40+497: [%46.0], env=e0.2
  void                    Deopt              !v    %46.1, DeadCall@0x558f3a9e4da0[Call#12], %46.0   !
BB18   <- [76]
  void                    Nop                !     
  goto BB19
BB82   <- [57]
  void                    Branch                   %57.3 -> BB84 (if true) | BB85 (if false)
BB83   <- [57]
  void                    Nop                !     
  lgl$#-          %83.1 = %57.2
  dr              %83.2 = DeadBranchReached@0x558f3a9e4da0[Test#4]
  goto BB58
BB78   <- [50]
  val?^ | miss    %78.0 = LdVar              eR    arg, e0.2
  val?            %78.1 = Force!<wrapped>    !v    %78.0, e0.2   <str$->
  lgl$#-          %78.2 = IsType                   %78.1 isA val?-
  void                    Branch                   %78.2 -> BB80 (if true) | BB81 (if false)
BB79   <- [50]
  void                    Nop                !     
  lgl$#-          %79.1 = %50.1
  dr              %79.2 = DeadBranchReached@0x558f3a9e4da0[Test#5]
  goto BB48
BB19   <- [55, 18]
  val?^ | miss    %19.0 = LdVar              eR    pmatch, e0.2
  lgl$#-          %19.1 = Identical                %19.0, function(x, table, nomatch=NA, duplicates.ok=F|...
  void                    Branch                   %19.1 -> BB88 (if true) | BB89 (if false)
BB84   <- [82]
  val?-           %84.0 = CastType           d     dn %57.1   <str->
  val?            %84.1 = Extract1_1D        wed   %84.0, 1L, elided   <str$->
  void                    Visible            v     
  val?            %84.3 = %84.1
  goto BB42
BB85   <- [82]
  void                    Nop                !     
  val?            %85.1 = %57.1
  dr              %85.2 = Typecheck@0x558f3a9e4da0[Type#28]
  goto BB58
BB58   <- [83, 85]
  val?^ | miss    %58.0 = Phi                      %83.1:BB83, %85.1:BB85
  val?^ | miss    %58.1 = %58.0
  dr              %58.2 = Phi                      %83.2:BB83, %85.2:BB85
  dr              %58.3 = %58.2
  fs              %58.4 = FrameState         R     0x558f3a7ccd40+592: [%57.1], env=e0.2
  void                    Deopt              !v    %58.4, %58.3, %58.1   !
BB80   <- [78]
  val?-           %80.0 = CastType           d     dn %78.1   <str$->
  (int|real)$-    %80.1 = CallSafeBuiltin    wed   length(%80.0)    <int$->
  lgl$#-          %80.2 = IsType                   %80.1 isA int$-
  void                    Branch                   %80.2 -> BB86 (if true) | BB87 (if false)
BB81   <- [78]
  fs              %81.0 = FrameState         R     0x558f3a7ccd40+711: [<blt length>, %78.1], env=e0.2
  void                    Deopt              !v    %81.0, Typecheck@0x558f3a9e4da0[Type#31], %78.1   !
BB88   <- [19]
  val?^ | miss    %88.0 = LdVar              eR    arg, e0.2
  val?            %88.1 = Force!<wrapped>    !v    %88.0, e0.2   <str$->
  lgl$#-          %88.2 = IsType                   %88.1 isA val?-
  void                    Branch                   %88.2 -> BB90 (if true) | BB91 (if false)
BB89   <- [19]
  fs              %89.0 = FrameState         R     0x558f3a7ccd40+794: [], env=e0.2
  void                    Deopt              !v    %89.0, CallTarget@0x558f3a9e4da0[Call#16], %19.0   !
BB86   <- [80]
  int$-           %86.0 = CastType           d     dn %80.1
  lgl$-           %86.1 = Gt                 d     %86.0, 1L, elided   <lgl$->
  lgl$#-          %86.2 = CheckTrueFalse     e     %86.1
  void                    Branch                   %86.2 -> BB56 (if true) | BB55 (if false)
BB87   <- [80]
  fs              %87.0 = FrameState         R     0x558f3a7ccd40+733: [%80.1], env=e0.2
  void                    Deopt              !v    %87.0, Typecheck@0x558f3a9e4da0[Type#32], %80.1   !
BB90   <- [88]
  val?-           %90.0 = CastType           d     dn %88.1   <str->
  val+            %90.1 = CallSafeBuiltin    wed   as.character(%90.0)    <str->
  val?^ | miss    %90.2 = LdVar              eR    choices, e0.2
  val?            %90.3 = Force!<value>      !v    %90.2, e0.2   <str->
  lgl$#-          %90.4 = IsType                   %90.3 isA val?-
  void                    Branch                   %90.4 -> BB92 (if true) | BB93 (if false)
BB91   <- [88]
  prom-           %91.0 = MkArg                    %88.1, match.arg[0x558f3e104360]_p1 (!refl), e0.2
  val?~           %91.1 = CastType                 up %91.0
  prom-           %91.2 = MkArg                    unboundValue, match.arg[0x558f3e104360]_p2, e0.2
  val?^           %91.3 = CastType                 up %91.2
  fs              %91.4 = FrameState         R     0x558f3a7ccd40+857: [], env=e0.2
  env             e91.5 = (MkEnv)            l     x=%91.1, table=%91.3, nomatch=0L, duplicates.ok=true, parent=R_BaseNamespace, context 0
  fs              %91.6 = FrameState         R     0x558f3a3ca820+69: [<blt as.character>, %88.1], env=e91.5, next=%91.4
  void                    Deopt              !v    %91.6, Typecheck@0x558f3a3ca9f0[Type#1], %88.1   !
BB56   <- [86]
  (cls|spec|blt)  %56.0 = LdFun              !v    stop, e0.2
  fs              %56.1 = FrameState         R     0x558f3a7ccd40+766: [%56.0], env=e0.2
  void                    Deopt              !v    %56.1, DeadCall@0x558f3a9e4da0[Call#15], %56.0   !
BB55   <- [86]
  void                    Nop                !     
  goto BB19
BB92   <- [90]
  val?-           %92.0 = CastType           d     dn %90.3   <str->
  val+            %92.1 = CallSafeBuiltin    wed   as.character(%92.0)    <str->
  val+            %92.2 = CallSafeBuiltin    wed   pmatch(%90.1, %92.1, 0L, true)    <int$->
  lgl$#-          %92.3 = IsType                   %92.2 isA int$-
  void                    Branch                   %92.3 -> BB94 (if true) | BB95 (if false)
BB93   <- [90]
  prom-           %93.0 = MkArg                    %90.3, match.arg[0x558f3e104360]_p2 (!refl), e0.2
  val?~           %93.1 = CastType                 up %93.0
  prom-           %93.2 = MkArg                    %90.0, match.arg[0x558f3e104360]_p1 (!refl), e0.2
  val?~           %93.3 = CastType                 up %93.2
  fs              %93.4 = FrameState         R     0x558f3a7ccd40+857: [], env=e0.2
  env             e93.5 = (MkEnv)            l     duplicates.ok=true, nomatch=0L, table=%93.1, x=%93.3, parent=R_BaseNamespace, context 0
  fs              %93.6 = FrameState         R     0x558f3a3ca820+165: [%90.1, <blt as.character>, %90.3], env=e93.5, next=%93.4
  void                    Deopt              !v    %93.6, Typecheck@0x558f3a3ca9f0[Type#4], %90.3   !
BB94   <- [92]
  int$-           %94.0 = CastType           d     dn %92.2
  void                    StVar              lW    i, %94.0, e0.2
  val?^ | miss    %94.2 = LdVar              eR    all, e0.2
  lgl$#-          %94.3 = Identical                <blt all>, %94.2   <true>
  void                    Branch                   %94.3 -> BB96 (if true) | BB97 (if false)
BB95   <- [92]
  prom-           %95.0 = MkArg                    %92.0, match.arg[0x558f3e104360]_p2 (!refl), e0.2
  val?~           %95.1 = CastType                 up %95.0
  prom-           %95.2 = MkArg                    %90.0, match.arg[0x558f3e104360]_p1 (!refl), e0.2
  val?~           %95.3 = CastType                 up %95.2
  fs              %95.4 = FrameState         R     0x558f3a7ccd40+857: [], env=e0.2
  env             e95.5 = (MkEnv)            l     duplicates.ok=true, nomatch=0L, table=%95.1, x=%95.3, parent=R_BaseNamespace, context 0
  fs              %95.6 = FrameState         R     0x558f3a3ca820+233: [%92.2], env=e95.5, next=%95.4
  void                    Deopt              !v    %95.6, Typecheck@0x558f3a9e4da0[Type#36], %92.2   !
BB96   <- [94]
  lgl$-           %96.0 = Eq                 d     %94.0, 0L, elided   <lgl$->
  val?            %96.1 = CallBuiltin        !v    all(%96.0) e0.2   <lgl$->
  lgl$#-          %96.2 = IsType                   %96.1 isA lgl$-
  void                    Branch                   %96.2 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  fs              %97.0 = FrameState         R     0x558f3a7ccd40+871: [], env=e0.2
  void                    Deopt              !v    %97.0, DeadBranchReached@0x558f3a9e4da0[Test#6], %94.3   !
BB98   <- [96]
  lgl$-           %98.0 = CastType           d     dn %96.1
  lgl$#-          %98.1 = CheckTrueFalse     e     %98.0
  void                    Branch                   %98.1 -> BB45 (if true) | BB32 (if false)
BB99   <- [96]
  void                    Nop                !     
  val?            %99.1 = %96.1
  dr              %99.2 = Typecheck@0x558f3a9e4da0[Type#41]
  goto BB30
BB45   <- [98]
  (cls|spec|blt)  %45.0 = LdFun              !v    stop, e0.2
  fs              %45.1 = FrameState         R     0x558f3a7ccd40+995: [%45.0], env=e0.2
  void                    Deopt              !v    %45.1, DeadCall@0x558f3a9e4da0[Call#18], %45.0   !
BB32   <- [98]
  val?^ | miss    %32.0 = LdVar              eR    i, e0.2
  lgl$#-          %32.1 = IsType                   %32.0 isA int$-
  void                    Branch                   %32.1 -> BB100 (if true) | BB101 (if false)
BB30   <- [99, 101]
  val?^ | miss    %30.0 = Phi                      %99.1:BB99, %101.1:BB101
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %99.2:BB99, %101.2:BB101
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x558f3a7ccd40+974: [%96.1], env=e0.2
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB100   <- [32]
  int$-           %100.0 = CastType           d     dn %32.0
  lgl$-           %100.1 = Gt                 d     %100.0, 0L, elided   <lgl$->
  int-            %100.2 = Extract1_1D        wed   %100.0, %100.1, elided   <int$->
  lgl$#-          %100.3 = IsType                   %100.2 isA int$-
  void                    Branch                   %100.3 -> BB102 (if true) | BB103 (if false)
BB101   <- [32]
  void                    Nop                !     
  val?^ | miss    %101.1 = %32.0
  dr              %101.2 = Typecheck@0x558f3a9e4da0[Type#46]
  goto BB30
BB102   <- [100]
  int$-           %102.0 = CastType           d     dn %100.2
  void                    StVar              lW    i, %102.0, e0.2
  val?^ | miss    %102.2 = LdVar              eR    several.ok, e0.2
  val?            %102.3 = Force!<wrapped>    !v    %102.2, e0.2   <lgl$->
  lgl$#-          %102.4 = IsType                   %102.3 isA lgl$-
  void                    Branch                   %102.4 -> BB104 (if true) | BB105 (if false)
BB103   <- [100]
  fs              %103.0 = FrameState         R     0x558f3a7ccd40+1108: [%100.2], env=e0.2
  void                    Deopt              !v    %103.0, Typecheck@0x558f3a9e4da0[Type#51], %100.2   !
BB104   <- [102]
  lgl$-           %104.0 = CastType           d     dn %102.3
  lgl$-           %104.1 = Not                d     %104.0, elided
  lgl$-           %104.2 = AsLogical                %104.1
  lgl$#-          %104.3 = Identical                %104.2, false
  void                    Branch                   %104.3 -> BB44 (if true) | BB37 (if false)
BB105   <- [102]
  void                    Nop                !     
  val?            %105.1 = %102.3
  dr              %105.2 = Typecheck@0x558f3a9e4da0[Type#52]
  goto BB35
BB44   <- [104]
  void                    Nop                !     
  lgl$-           %44.1 = %104.2
  goto BB38
BB37   <- [104]
  val?^ | miss    %37.0 = LdVar              eR    length, e0.2
  lgl$#-          %37.1 = Identical                <blt length>, %37.0   <true>
  void                    Branch                   %37.1 -> BB106 (if true) | BB107 (if false)
BB35   <- [105, 107, 109]
  val?^ | miss    %35.0 = Phi                      %105.1:BB105, %107.1:BB107, %109.1:BB109
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %105.2:BB105, %107.2:BB107, %109.2:BB109
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x558f3a7ccd40+1132: [%102.3], env=e0.2
  void                    Deopt              !v    %35.4, %35.3, %35.1   !
BB38   <- [44, 108]
  lgl$-           %38.0 = Phi                      %108.1:BB108, %44.1:BB44
  lgl$-           %38.1 = %38.0
  lgl$#-          %38.2 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.2 -> BB43 (if true) | BB39 (if false)
BB106   <- [37]
  val?^ | miss    %106.0 = LdVar              eR    i, e0.2
  lgl$#-          %106.1 = IsType                   %106.0 isA int$-
  void                    Branch                   %106.1 -> BB108 (if true) | BB109 (if false)
BB107   <- [37]
  void                    Nop                !     
  lgl$#-          %107.1 = %37.1
  dr              %107.2 = DeadBranchReached@0x558f3a9e4da0[Test#8]
  goto BB35
BB43   <- [38]
  (cls|spec|blt)  %43.0 = LdFun              !v    stop, e0.2
  fs              %43.1 = FrameState         R     0x558f3a7ccd40+1271: [%43.0], env=e0.2
  void                    Deopt              !v    %43.1, DeadCall@0x558f3a9e4da0[Call#23], %43.0   !
BB39   <- [38]
  val?^ | miss    %39.0 = LdVar              eR    choices, e0.2
  val?            %39.1 = Force!<value>      !v    %39.0, e0.2   <str->
  lgl$#-          %39.2 = IsType                   %39.1 isA val+   <true>
  lgl$#-          %39.3 = IsType                   %39.1 isA val?-
  void                    Branch                   %39.2 -> BB110 (if true) | BB111 (if false)
BB108   <- [106]
  void                    Nop                !     
  lgl$#-          %108.1 = false
  goto BB38
BB109   <- [106]
  void                    Nop                !     
  val?^ | miss    %109.1 = %106.0
  dr              %109.2 = Typecheck@0x558f3a9e4da0[Type#54]
  goto BB35
BB110   <- [39]
  val?^ | miss    %110.0 = LdVar              eR    i, e0.2
  lgl$#-          %110.1 = IsType                   %110.0 isA int$-
  void                    Branch                   %110.1 -> BB112 (if true) | BB113 (if false)
BB111   <- [39]
  void                    Nop                !     
  lgl$#-          %111.1 = %39.2
  dr              %111.2 = DeadBranchReached@0x558f3a9e4da0[Test#9]
  goto BB40
BB112   <- [110]
  int$-           %112.0 = CastType           d     dn %110.0
  void                    Branch                   %39.3 -> BB114 (if true) | BB115 (if false)
BB113   <- [110]
  void                    Nop                !     
  val?^ | miss    %113.1 = %110.0
  dr              %113.2 = Typecheck@0x558f3a9e4da0[Type#59]
  goto BB40
BB40   <- [111, 113, 115]
  val?^ | miss    %40.0 = Phi                      %111.1:BB111, %113.1:BB113, %115.1:BB115
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %111.2:BB111, %113.2:BB113, %115.2:BB115
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x558f3a7ccd40+1308: [%39.1], env=e0.2
  void                    Deopt              !v    %40.4, %40.3, %40.1   !
BB114   <- [112]
  val?-           %114.0 = CastType           d     dn %39.1   <str->
  val?            %114.1 = Extract1_1D        wed   %114.0, %112.0, elided   <str$->
  void                    Visible            v     
  val?            %114.3 = %114.1
  goto BB42
BB115   <- [112]
  void                    Nop                !     
  val?            %115.1 = %39.1
  dr              %115.2 = Typecheck@0x558f3a9e4da0[Type#57]
  goto BB40
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    arg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    choices, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    arg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    choices, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sys.function, <0x558f3a57a1b0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x558f3e104360]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <cls->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    sys.parent, <0x558f3ad41590>, e0.0
  val?            %0.2  = Call               !v    %0.1() e0.0   <int$->
  void                    Invisible          v     
  void                    StVar              lW    sysP, %0.2, e0.0
  void                    Return             l     %0.2
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    formal.args, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <list->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  (cls|spec|blt)  %2.0  = LdFun              !v    as.character, <0x558f39daa040>, e0.0
  prom-           %2.1  = MkArg                    unboundValue, match.arg[0x558f3e104360]_p8, e0.0
  val?            %2.2  = Call               !v    %2.0(%2.1) e0.0   <str$->
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, match.arg[0x558f3e104360]_p10, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.3:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <(str|code)->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     substitute, <0x558f39d9c468>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x558f3e104360]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <sym->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    arg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x558f3e104360]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     substitute, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x558f3e104360]_p12, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    arg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sys.frame, <0x558f3a373110>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, match.arg[0x558f3e104360]_p14, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sysP, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3

│ match.arg[0x558f3e104360]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
