
┌──────────────────────────────────────────────────────────────────────────────┐
│ %||%[0x558f3e46af90]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1,SimpleInt1     │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
%||%[0x558f3e46af90]
BB0
  (int|miss)$~-   %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = (MkEnv)            l     L=%0.1, R=%0.0, parent=<env 0x558f3a3ecb50>, context 1
  val?            %0.3  = Force!<lazy>       !vL   %0.1, e0.2   <nil->
  lgl$-           %0.4  = Is                       %0.3, NULL
  lgl$#-          %0.5  = IsType                   %0.3 isA val?-
  (int|miss)$-    %0.6  = Force!<lazy>             %0.0,    <int$->
  void                    Branch                   %0.5 -> BB7 (if true) | BB8 (if false)
BB7   <- [0]
  lgl$#-          %7.0  = IsEnvStub          R     , e0.2
  void                    Branch                   %7.0 -> BB9 (if true) | BB10 (if false)
BB8   <- [0]
  void                    Nop                !     
  val?            %8.1  = %0.3
  dr              %8.2  = Typecheck@0x558f3eaee9f8[Type#0]
  goto BB6
BB9   <- [7]
  lgl$#-          %9.0  = CheckTrueFalse     e     %0.4
  void                    Branch                   %9.0 -> BB5 (if true) | BB3 (if false)
BB10   <- [7]
  void                    Nop                !     
  env             e10.1 = e0.2
  dr              %10.2 = EnvStubMaterialized@0x558f3eaee9f8[Call#unknown]
  goto BB6
BB6   <- [8, 10, 12]
  val?^ | miss    %6.0  = Phi                      %8.1:BB8, e10.1:BB10, %12.1:BB12
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %8.2:BB8, %10.2:BB10, %12.2:BB12
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x558f3e4d4da0+9: [%0.3], env=e0.2
  void                    Deopt              !v    %6.4, %6.3, %6.1   !
BB5   <- [9]
  void                    Visible            v     
  lgl$#-          %5.1  = IsType                   %0.6 isA int$-
  void                    Branch                   %5.1 -> BB11 (if true) | BB12 (if false)
BB3   <- [9]
  void                    Visible            v     
  val?            %3.1  = %0.3
  goto BB4
BB11   <- [5]
  void                    Nop                !     
  (int|miss)$-    %11.1 = %0.6
  goto BB4
BB12   <- [5]
  void                    Nop                !     
  (int|miss)$-    %12.1 = %0.6
  dr              %12.2 = Typecheck@0x558f3eaee9f8[Type#2]
  goto BB6
BB4   <- [3, 11]
  val?            %4.0  = Phi                      %3.1:BB3, %11.1:BB11
  val?            %4.1  = %4.0
  void                    Return             l     %4.1

│ %||%[0x558f3e46af90]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
