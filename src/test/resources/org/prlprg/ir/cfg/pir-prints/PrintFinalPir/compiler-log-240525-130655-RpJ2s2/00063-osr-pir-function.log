
┌──────────────────────────────────────────────────────────────────────────────┐
│ osr[0x558f3b557c60]                                                          │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── Final PIR Version
osr[0x558f3b557c60]
BB0
  env             e0.0  = LdFunctionEnv            
  goto BB2
BB2   <- [340, 346, 0]
  val?^ | miss    %2.0  = LdVar              eR    depth, e0.0
  lgl$#-          %2.1  = IsType                   %2.0 isA int$-
  void                    Branch                   %2.1 -> BB174 (if true) | BB175 (if false)
BB174   <- [2]
  int$-           %174.0 = CastType           d     dn %2.0
  lgl$#-          %174.1 = CheckTrueFalse     e     %174.0
  void                    Branch                   %174.1 -> BB112 (if true) | BB4 (if false)
BB175   <- [2]
  void                    Nop                !     
  val?^ | miss    %175.1 = %2.0
  dr              %175.2 = Typecheck@0x558f3afa1f48[Type#83]
  goto BB173
BB112   <- [174]
  val?^ | miss    %112.0 = LdVar              eR    kk, e0.0
  lgl$#-          %112.1 = IsType                   %112.0 isA int-
  void                    Branch                   %112.1 -> BB176 (if true) | BB177 (if false)
BB4   <- [174]
  void                    Nop                !     
  goto BB5
BB173   <- [175, 177]
  val?^ | miss    %173.0 = Phi                      %175.1:BB175, %177.1:BB177
  val?^ | miss    %173.1 = %173.0
  dr              %173.2 = Phi                      %175.2:BB175, %177.2:BB177
  dr              %173.3 = %173.2
  fs              %173.4 = FrameState         R     0x558f3e6209b0+1886: [], env=e0.0
  void                    Deopt              !v    %173.4, %173.3, %173.1   !
BB176   <- [112]
  int-            %176.0 = CastType           d     dn %112.0
  int-            %176.1 = Extract1_1D        wed   %176.0, %174.0, elided   <int$->
  lgl$#-          %176.2 = IsType                   %176.1 isA int$-
  void                    Branch                   %176.2 -> BB180 (if true) | BB181 (if false)
BB177   <- [112]
  void                    Nop                !     
  val?^ | miss    %177.1 = %112.0
  dr              %177.2 = Typecheck@0x558f3afa1f48[Type#84]
  goto BB173
BB5   <- [172, 82, 4]
  val?^ | miss    %5.0  = LdVar              eR    depth, e0.0
  lgl$#-          %5.1  = IsType                   %5.0 isA int$-
  void                    Branch                   %5.1 -> BB178 (if true) | BB179 (if false)
BB180   <- [176]
  int$-           %180.0 = CastType           d     dn %176.1
  void                    StVar              lW    k, %180.0, e0.0
  val?^ | miss    %180.2 = LdVar              eR    jj, e0.0
  lgl$#-          %180.3 = IsType                   %180.2 isA int-
  void                    Branch                   %180.3 -> BB184 (if true) | BB185 (if false)
BB181   <- [176]
  fs              %181.0 = FrameState         R     0x558f3e6209b0+1966: [%176.1], env=e0.0
  void                    Deopt              !v    %181.0, Typecheck@0x558f3afa1f48[Type#87], %176.1   !
BB178   <- [5]
  int$-           %178.0 = CastType           d     dn %5.0
  lgl$-           %178.1 = Not                d     %178.0, elided
  lgl$#-          %178.2 = CheckTrueFalse     e     %178.1
  void                    Branch                   %178.2 -> BB111 (if true) | BB8 (if false)
BB179   <- [5]
  fs              %179.0 = FrameState         R     0x558f3e6209b0+2855: [], env=e0.0
  void                    Deopt              !v    %179.0, Typecheck@0x558f3afa1f48[Type#130], %5.0   !
BB184   <- [180]
  int-            %184.0 = CastType           d     dn %180.2
  int-            %184.1 = Extract1_1D        wed   %184.0, %174.0, elided   <int$->
  lgl$#-          %184.2 = IsType                   %184.1 isA int$-
  void                    Branch                   %184.2 -> BB188 (if true) | BB189 (if false)
BB185   <- [180]
  fs              %185.0 = FrameState         R     0x558f3e6209b0+1981: [], env=e0.0
  void                    Deopt              !v    %185.0, Typecheck@0x558f3afa1f48[Type#88], %180.2   !
BB111   <- [178]
  val?^ | miss    %111.0 = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %111.2 = Force!<value>      !     %111.0, e0.0   <vec>
  void                    Return             l     %111.2
BB8   <- [178]
  val?^ | miss    %8.0  = LdVar              eR    r, e0.0
  val?            %8.1  = Force!<value>      !v    %8.0, e0.0   <vec>
  val?^ | miss    %8.2  = LdVar              eR    dd !upd, e0.0
  lgl$#-          %8.3  = IsType                   %8.2 isA val?~- | miss
  void                    Branch                   %8.3 -> BB182 (if true) | BB183 (if false)
BB188   <- [184]
  int$-           %188.0 = CastType           d     dn %184.1
  void                    StVar              lW    j, %188.0, e0.0
  val?^ | miss    %188.2 = LdVar              eR    dd, e0.0
  lgl$#-          %188.3 = IsType                   %188.2 isA val?~- | miss
  void                    Branch                   %188.3 -> BB194 (if true) | BB195 (if false)
BB189   <- [184]
  fs              %189.0 = FrameState         R     0x558f3e6209b0+2041: [%184.1], env=e0.0
  void                    Deopt              !v    %189.0, Typecheck@0x558f3afa1f48[Type#91], %184.1   !
BB182   <- [8]
  val?~- | miss   %182.0 = CastType           d     dn %8.2
  val?-           %182.1 = Force!<value>            %182.0,    <vec->
  val?^ | miss    %182.2 = LdVar              eR    depth, e0.0
  lgl$#-          %182.3 = IsType                   %182.2 isA int$-
  void                    Branch                   %182.3 -> BB186 (if true) | BB187 (if false)
BB183   <- [8]
  void                    Nop                !     
  val?^ | miss    %183.1 = %8.2
  dr              %183.2 = Typecheck@0x558f3afa1f48[Type#132]
  goto BB9
BB194   <- [188]
  val?~- | miss   %194.0 = CastType           d     dn %188.2
  val?-           %194.1 = Force!<value>            %194.0,    <vec->
  lgl$#-          %194.2 = IsType                   %194.1 isA val+   <lgl$#->
  void                    Branch                   %194.2 -> BB196 (if true) | BB197 (if false)
BB195   <- [188]
  void                    Nop                !     
  val?^ | miss    %195.1 = %188.2
  dr              %195.2 = Typecheck@0x558f3afa1f48[Type#92]
  goto BB119
BB186   <- [182]
  int$-           %186.0 = CastType           d     dn %182.2
  val?            %186.1 = Subassign2_1D      !v    %8.1, %182.1, %186.0, e0.0
  void                    StVar              lW    dd, %186.1, e0.0
  val?^ | miss    %186.3 = LdVar              eR    r, e0.0
  val?            %186.4 = Force!<value>      !v    %186.3, e0.0   <vec>
  lgl$#-          %186.5 = IsType                   %186.4 isA val+   <lgl$#->
  void                    Branch                   %186.5 -> BB191 (if true) | BB190 (if false)
BB187   <- [182]
  void                    Nop                !     
  val?^ | miss    %187.1 = %182.2
  dr              %187.2 = Typecheck@0x558f3afa1f48[Type#133]
  goto BB9
BB9   <- [183, 187]
  val?^ | miss    %9.0  = Phi                      %183.1:BB183, %187.1:BB187
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %183.2:BB183, %187.2:BB187
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x558f3e6209b0+2900: [%8.1], env=e0.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB196   <- [194]
  val?            %196.0 = Extract2_1D        wed   %194.1, %174.0, elided   <vec>
  void                    StVar              lW    r, %196.0, e0.0
  val?^ | miss    %196.2 = LdVar              eR    unclass, e0.0
  lgl$#-          %196.3 = Identical                <blt unclass>, %196.2   <true>
  void                    Branch                   %196.3 -> BB200 (if true) | BB201 (if false)
BB197   <- [194]
  void                    Nop                !     
  lgl$#-          %197.1 = %194.2
  dr              %197.2 = DeadBranchReached@0x558f3afa1f48[Test#12]
  goto BB119
BB119   <- [195, 197]
  val?^ | miss    %119.0 = Phi                      %195.1:BB195, %197.1:BB197
  val?^ | miss    %119.1 = %119.0
  dr              %119.2 = Phi                      %195.2:BB195, %197.2:BB197
  dr              %119.3 = %119.2
  fs              %119.4 = FrameState         R     0x558f3e6209b0+2056: [], env=e0.0
  void                    Deopt              !v    %119.4, %119.3, %119.1   !
BB191   <- [186]
  fs              %191.0 = FrameState         R     0x558f3e6209b0+2952: [%186.4], env=e0.0
  void                    Deopt              !v    %191.0, DeadBranchReached@0x558f3afa1f48[Test#16], %186.5   !
BB190   <- [186]
  prom-           %190.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p4, e0.0
  val?            %190.1 = Extract2_1D        !v    %186.4, %190.0, e0.0   <(int|vec)>
  void                    StVar              lW    d, %190.1, e0.0
  goto BB13
BB200   <- [196]
  val?^ | miss    %200.0 = LdVar              eR    d, e0.0
  val?            %200.1 = Force!<value>      !v    %200.0, e0.0   <vec>
  val?            %200.2 = CallBuiltin        !v    unclass(%200.1) e0.0   <vec+>
  val?^ | miss    %200.3 = LdVar              eR    r, e0.0
  val?            %200.4 = Force!<value>      !v    %200.3, e0.0   <vec>
  val?^ | miss    %200.5 = LdVar              eR    j, e0.0
  lgl$#-          %200.6 = IsType                   %200.5 isA int$-
  void                    Branch                   %200.6 -> BB202 (if true) | BB203 (if false)
BB201   <- [196]
  fs              %201.0 = FrameState         R     0x558f3e6209b0+2131: [], env=e0.0
  void                    Deopt              !v    %201.0, DeadBranchReached@0x558f3afa1f48[Test#13], %196.3   !
BB13   <- [190, 352]
  val?^ | miss    %13.0 = LdVar              eR    is.leaf, e0.0
  lgl$#-          %13.1 = Identical                %13.0, function(object) <(rir::DispatchTable*)0x558f3|...
  void                    Branch                   %13.1 -> BB192 (if true) | BB193 (if false)
BB202   <- [200]
  int$-           %202.0 = CastType           d     dn %200.5
  val?            %202.1 = Subassign2_1D      !v    %200.2, %200.4, %202.0, e0.0
  void                    StVar              lW    r, %202.1, e0.0
  val?^ | miss    %202.3 = LdVar              eR    j, e0.0
  lgl$#-          %202.4 = IsType                   %202.3 isA int$-
  void                    Branch                   %202.4 -> BB208 (if true) | BB209 (if false)
BB203   <- [200]
  fs              %203.0 = FrameState         R     0x558f3e6209b0+2236: [%200.2, %200.4], env=e0.0
  void                    Deopt              !v    %203.0, Typecheck@0x558f3afa1f48[Type#100], %200.5   !
BB192   <- [13]
  prom-           %192.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p5 (!refl), e0.0
  ct              %192.1 = PushContext        lCL   %192.0, is.leaf(d), function(object) <(rir::DispatchTable*)0x558f3|..., e0.0
  val?^           %192.2 = CastType                 up %192.0
  val?^ | miss    %192.3 = LdVar              eR    is.logical, <env 0x558f3a3ecb50>
  lgl$#-          %192.4 = Identical                <blt is.logical>, %192.3   <true>
  void                    Branch                   %192.4 -> BB198 (if true) | BB199 (if false)
BB193   <- [13]
  fs              %193.0 = FrameState         R     0x558f3e6209b0+183: [], env=e0.0
  void                    Deopt              !v    %193.0, CallTarget@0x558f3afa1f48[Call#3], %13.0   !
BB208   <- [202]
  int$-           %208.0 = CastType           d     dn %202.3
  val?^ | miss    %208.1 = LdVar              eR    k, e0.0
  lgl$#-          %208.2 = IsType                   %208.1 isA int$-
  void                    Branch                   %208.2 -> BB210 (if true) | BB211 (if false)
BB209   <- [202]
  void                    Nop                !     
  val?^ | miss    %209.1 = %202.3
  dr              %209.2 = Typecheck@0x558f3afa1f48[Type#101]
  goto BB125
BB198   <- [192]
  val?^ | miss    %198.0 = LdVar              eR    attr, <env 0x558f3a3ecb50>
  lgl$#-          %198.1 = Identical                <blt attr>, %198.0   <true>
  void                    Branch                   %198.1 -> BB204 (if true) | BB205 (if false)
BB199   <- [192]
  void                    Nop                !     
  lgl$#-          %199.1 = %192.4
  dr              %199.2 = DeadBranchReached@0x558f3af752d8[Test#0]
  goto BB16
BB210   <- [208]
  int$-           %210.0 = CastType           d     dn %208.1
  lgl$-           %210.1 = Lt                 d     %208.0, %210.0, elided   <lgl$->
  lgl$#-          %210.2 = CheckTrueFalse     e     %210.1
  void                    Branch                   %210.2 -> BB172 (if true) | BB127 (if false)
BB211   <- [208]
  void                    Nop                !     
  val?^ | miss    %211.1 = %208.1
  dr              %211.2 = Typecheck@0x558f3afa1f48[Type#102]
  goto BB125
BB125   <- [209, 211, 213]
  val?^ | miss    %125.0 = Phi                      %209.1:BB209, %211.1:BB211, %213.1:BB213
  val?^ | miss    %125.1 = %125.0
  dr              %125.2 = Phi                      %209.2:BB209, %211.2:BB211, %213.2:BB213
  dr              %125.3 = %125.2
  fs              %125.4 = FrameState         R     0x558f3e6209b0+2265: [], env=e0.0
  void                    Deopt              !v    %125.4, %125.3, %125.1   !
BB204   <- [198]
  env             e204.0 = MkEnv              l     object=%192.2, parent=<env 0x558f3a3ecb50>, context 1
  val?            %204.1 = Force!<lazy>       !vr   %192.2, e204.0   <(int|vec)>
  val?            %204.2 = CallBuiltin        !v    attr(%204.1, "leaf") e204.0   <(nil|lgl)->
  void                    StVar              lW    L, %204.2, e204.0
  val+            %204.4 = CallSafeBuiltin    wed   is.logical(%204.2)    <lgl$->
  lgl$#-          %204.5 = IsType                   %204.4 isA lgl$-
  void                    Branch                   %204.5 -> BB206 (if true) | BB207 (if false)
BB205   <- [198]
  void                    Nop                !     
  lgl$#-          %205.1 = %198.1
  dr              %205.2 = DeadBranchReached@0x558f3af752d8[Test#1]
  goto BB16
BB16   <- [199, 205]
  val?^ | miss    %16.0 = Phi                      %199.1:BB199, %205.1:BB205
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %199.2:BB199, %205.2:BB205
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x558f3e6209b0+215: [], env=e0.0
  env             e16.5 = (MkEnv)            l     object=%192.2, parent=<env 0x558f3a3ecb50>, context 1
  fs              %16.6 = FrameState         R     0x558f3ac9a2b0+17: [<blt is.logical>, %192.4], env=e16.5, next=%16.4
  void                    Deopt              !v    %16.6, %16.3, %16.1   !
BB172   <- [210]
  void                    Nop                !     
  goto BB5
BB127   <- [210]
  val?^ | miss    %127.0 = LdVar              eR    depth, e0.0
  lgl$#-          %127.1 = IsType                   %127.0 isA int$-
  void                    Branch                   %127.1 -> BB212 (if true) | BB213 (if false)
BB206   <- [204]
  lgl$-           %206.0 = CastType           d     dn %204.4
  lgl$-           %206.1 = AsLogical                %206.0
  lgl$#-          %206.2 = Identical                %206.1, false
  void                    Branch                   %206.2 -> BB110 (if true) | BB20 (if false)
BB207   <- [204]
  fs              %207.0 = FrameState         R     0x558f3e6209b0+215: [], env=e0.0
  fs              %207.1 = FrameState         R     0x558f3ac9a2b0+195: [%204.4], env=e204.0, next=%207.0
  void                    Deopt              !v    %207.1, Typecheck@0x558f3af752d8[Type#5], %204.4   !
BB212   <- [127]
  int$-           %212.0 = CastType           d     dn %127.0
  int$-           %212.1 = Sub                d     %212.0, 1L, elided   <int$->
  void                    StVar              lW    depth, %212.1, e0.0
  val?^ | miss    %212.3 = LdVar              eR    verbose, e0.0
  lgl$#-          %212.4 = IsType                   %212.3 isA lgl$-
  void                    Branch                   %212.4 -> BB218 (if true) | BB219 (if false)
BB213   <- [127]
  void                    Nop                !     
  val?^ | miss    %213.1 = %127.0
  dr              %213.2 = Typecheck@0x558f3afa1f48[Type#104]
  goto BB125
BB110   <- [206]
  void                    Nop                !     
  lgl$-           %110.1 = %206.1
  goto BB21
BB20   <- [206]
  val             %20.0 = ChkMissing         e     %204.2
  lgl$-           %20.1 = AsLogical          e     %204.2
  lgl$-           %20.2 = LAnd                     %206.1, %20.1
  lgl$-           %20.3 = %20.2
  goto BB21
BB218   <- [212]
  lgl$-           %218.0 = CastType           d     dn %212.3
  lgl$#-          %218.1 = CheckTrueFalse     e     %218.0
  void                    Branch                   %218.1 -> BB171 (if true) | BB130 (if false)
BB219   <- [212]
  void                    Nop                !     
  val?^ | miss    %219.1 = %212.3
  dr              %219.2 = Typecheck@0x558f3afa1f48[Type#106]
  goto BB128
BB21   <- [110, 20]
  lgl$-           %21.0 = Phi                      %20.3:BB20, %110.1:BB110
  lgl$-           %21.1 = %21.0
  val?            %21.2 = PopContext         C     %21.1, %192.1   <lgl$->
  lgl$#-          %21.3 = IsType                   %21.2 isA lgl$-
  void                    Branch                   %21.3 -> BB214 (if true) | BB215 (if false)
BB171   <- [218]
  (cls|spec|blt)  %171.0 = LdFun              !v    cat, e0.0
  fs              %171.1 = FrameState         R     0x558f3e6209b0+2385: [%171.0], env=e0.0
  void                    Deopt              !v    %171.1, DeadCall@0x558f3afa1f48[Call#22], %171.0   !
BB130   <- [218]
  val?^ | miss    %130.0 = LdVar              eR    sum, e0.0
  lgl$#-          %130.1 = Identical                <blt sum>, %130.0   <true>
  void                    Branch                   %130.1 -> BB226 (if true) | BB227 (if false)
BB128   <- [219, 227, 237]
  val?^ | miss    %128.0 = Phi                      %219.1:BB219, %227.1:BB227, %237.1:BB237
  val?^ | miss    %128.1 = %128.0
  dr              %128.2 = Phi                      %219.2:BB219, %227.2:BB227, %237.2:BB237
  dr              %128.3 = %128.2
  fs              %128.4 = FrameState         R     0x558f3e6209b0+2355: [], env=e0.0
  void                    Deopt              !v    %128.4, %128.3, %128.1   !
BB214   <- [21]
  lgl$-           %214.0 = CastType           d     dn %21.2
  lgl$-           %214.1 = Not                d     %214.0, elided
  lgl$#-          %214.2 = CheckTrueFalse     e     %214.1
  void                    Branch                   %214.2 -> BB83 (if true) | BB24 (if false)
BB215   <- [21]
  void                    Nop                !     
  val?            %215.1 = %21.2
  dr              %215.2 = Typecheck@0x558f3afa1f48[Type#4]
  goto BB22
BB226   <- [130]
  val?^ | miss    %226.0 = LdVar              eR    vapply, e0.0
  lgl$#-          %226.1 = Identical                %226.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Branch                   %226.1 -> BB236 (if true) | BB237 (if false)
BB227   <- [130]
  void                    Nop                !     
  lgl$#-          %227.1 = %130.1
  dr              %227.2 = DeadBranchReached@0x558f3afa1f48[Test#14]
  goto BB128
BB83   <- [214]
  val?^ | miss    %83.0 = LdVar              eR    length, e0.0
  lgl$#-          %83.1 = Identical                <blt length>, %83.0   <true>
  void                    Branch                   %83.1 -> BB216 (if true) | BB217 (if false)
BB24   <- [214]
  val?^ | miss    %24.0 = LdVar              eR    depth, e0.0
  lgl$#-          %24.1 = IsType                   %24.0 isA int$-
  void                    Branch                   %24.1 -> BB220 (if true) | BB221 (if false)
BB22   <- [215, 217, 221, 225, 229]
  val?^ | miss    %22.0 = Phi                      %215.1:BB215, %217.1:BB217, %221.1:BB221, %225.1:BB225, %229.1:BB229
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %215.2:BB215, %217.2:BB217, %221.2:BB221, %225.2:BB225, %229.2:BB229
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x558f3e6209b0+215: [%21.2], env=e0.0
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB236   <- [226]
  prom-           %236.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p0 (!refl), e0.0
  prom-           %236.1 = MkArg                    unboundValue, osr[0x558f3b557c60]_p1, e0.0
  ct              %236.2 = PushContext        lCL   %236.0, %236.1, 0, vapply(r, .midDend, 0), function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|..., e0.0
  val?^           %236.3 = CastType                 up %236.1
  val?^           %236.4 = CastType                 up %236.0
  env             e236.5 = MkEnv              l     X=%236.4, FUN=%236.3, FUN.VALUE=0, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  val?^ | miss    %236.6 = LdVar              eR    match.fun, e236.5
  lgl$#-          %236.7 = Identical                %236.6, function(FUN, descend=TRUE) <(rir::DispatchTab|...
  void                    Branch                   %236.7 -> BB238 (if true) | BB239 (if false)
BB237   <- [226]
  void                    Nop                !     
  val?^ | miss    %237.1 = %226.0
  dr              %237.2 = CallTarget@0x558f3afa1f48[Call#26]
  goto BB128
BB216   <- [83]
  val?^ | miss    %216.0 = LdVar              eR    d, e0.0
  val?            %216.1 = Force!<wrapped>    !v    %216.0, e0.0   <vec>
  val?            %216.2 = CallBuiltin        !v    length(%216.1) e0.0   <int$->
  lgl$#-          %216.3 = IsType                   %216.2 isA int$-
  void                    Branch                   %216.3 -> BB222 (if true) | BB223 (if false)
BB217   <- [83]
  void                    Nop                !     
  lgl$#-          %217.1 = %83.1
  dr              %217.2 = DeadBranchReached@0x558f3afa1f48[Test#1]
  goto BB22
BB220   <- [24]
  int$-           %220.0 = CastType           d     dn %24.0
  lgl$#-          %220.1 = CheckTrueFalse     e     %220.0   <lgl$#->
  void                    Branch                   %220.1 -> BB224 (if true) | BB225 (if false)
BB221   <- [24]
  void                    Nop                !     
  val?^ | miss    %221.1 = %24.0
  dr              %221.2 = Typecheck@0x558f3afa1f48[Type#36]
  goto BB22
BB238   <- [236]
  prom-           %238.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p16, e236.5
  val?            %238.1 = StaticCall         !v    match.fun[0x558f3e0c4f70](%238.0) e236.5   <(cls|blt)->
  void                    StVar              lW    FUN, %238.1, e236.5
  val?^ | miss    %238.3 = LdVar              eR    is.vector, e236.5
  lgl$#-          %238.4 = Identical                %238.3, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %238.4 -> BB246 (if true) | BB247 (if false)
BB239   <- [236]
  fs              %239.0 = FrameState         R     0x558f3e6209b0+2515: [<blt sum>], env=e0.0
  env             e239.1 = (MkEnv)            l     X=%236.4, FUN=%236.3, FUN.VALUE=0, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  fs              %239.2 = FrameState         R     0x558f3e12aa00+0: [], env=e239.1, next=%239.0
  void                    Deopt              !v    %239.2, CallTarget@0x558f3e072500[Call#0], %236.6   !
BB222   <- [216]
  int$-           %222.0 = CastType           d     dn %216.2
  void                    StVar              lW    k, %222.0, e0.0
  lgl$-           %222.2 = Lt                 d     %222.0, 1, elided   <lgl$->
  lgl$#-          %222.3 = CheckTrueFalse     e     %222.2
  void                    Branch                   %222.3 -> BB109 (if true) | BB88 (if false)
BB223   <- [216]
  fs              %223.0 = FrameState         R     0x558f3e6209b0+323: [%216.2], env=e0.0
  void                    Deopt              !v    %223.0, Typecheck@0x558f3afa1f48[Type#7], %216.2   !
BB224   <- [220]
  val?^ | miss    %224.0 = LdVar              eR    kk, e0.0
  lgl$#-          %224.1 = IsType                   %224.0 isA int-
  void                    Branch                   %224.1 -> BB228 (if true) | BB229 (if false)
BB225   <- [220]
  void                    Nop                !     
  lgl$#-          %225.1 = %220.1
  dr              %225.2 = DeadBranchReached@0x558f3afa1f48[Test#3]
  goto BB22
BB246   <- [238]
  val?^ | miss    %246.0 = LdVar              eR    X, e236.5
  val?            %246.1 = Force!<lazy>       !v    %246.0, e236.5   <vec>
  lgl$#-          %246.2 = CallSafeBuiltin    wed   is.vector(%246.1, "any")    <lgl$->
  lgl$#-          %246.3 = Not                d     %246.2, elided
  void                    Branch                   %246.2 -> BB170 (if true) | BB137 (if false)
BB247   <- [238]
  fs              %247.0 = FrameState         R     0x558f3e6209b0+2515: [<blt sum>], env=e0.0
  fs              %247.1 = FrameState         R     0x558f3e12aa00+46: [], env=e236.5, next=%247.0
  void                    Deopt              !v    %247.1, CallTarget@0x558f3e072500[Call#1], %238.3   !
BB109   <- [222]
  (cls|spec|blt)  %109.0 = LdFun              !v    stop, e0.0
  fs              %109.1 = FrameState         R     0x558f3e6209b0+379: [%109.0], env=e0.0
  void                    Deopt              !v    %109.1, DeadCall@0x558f3afa1f48[Call#5], %109.0   !
BB88   <- [222]
  val?^ | miss    %88.0 = LdVar              eR    depth, e0.0
  lgl$#-          %88.1 = IsType                   %88.0 isA int$-
  void                    Branch                   %88.1 -> BB234 (if true) | BB235 (if false)
BB228   <- [224]
  int-            %228.0 = CastType           d     dn %224.0
  int-            %228.1 = Extract1_1D        wed   %228.0, %220.0, elided   <int$->
  lgl$#-          %228.2 = IsType                   %228.1 isA int$-
  void                    Branch                   %228.2 -> BB230 (if true) | BB231 (if false)
BB229   <- [224]
  void                    Nop                !     
  val?^ | miss    %229.1 = %224.0
  dr              %229.2 = Typecheck@0x558f3afa1f48[Type#37]
  goto BB22
BB170   <- [246]
  val?^ | miss    %170.0 = LdVar              eR    is.object, e236.5
  lgl$#-          %170.1 = Identical                <blt is.object>, %170.0   <true>
  void                    Branch                   %170.1 -> BB254 (if true) | BB255 (if false)
BB137   <- [246]
  void                    Nop                !     
  lgl$#-          %137.1 = %246.3
  goto BB138
BB234   <- [88]
  int$-           %234.0 = CastType           d     dn %88.0
  int$-           %234.1 = Add                d     %234.0, 1L, elided   <int$->
  void                    StVar              lW    depth, %234.1, e0.0
  val?^ | miss    %234.3 = LdVar              eR    verbose, e0.0
  lgl$#-          %234.4 = IsType                   %234.3 isA lgl$-
  void                    Branch                   %234.4 -> BB242 (if true) | BB243 (if false)
BB235   <- [88]
  fs              %235.0 = FrameState         R     0x558f3e6209b0+337: [], env=e0.0
  void                    Deopt              !v    %235.0, Typecheck@0x558f3afa1f48[Type#10], %88.0   !
BB230   <- [228]
  int$-           %230.0 = CastType           d     dn %228.1
  void                    StVar              lW    k, %230.0, e0.0
  val?^ | miss    %230.2 = LdVar              eR    jj, e0.0
  lgl$#-          %230.3 = IsType                   %230.2 isA int-
  void                    Branch                   %230.3 -> BB232 (if true) | BB233 (if false)
BB231   <- [228]
  fs              %231.0 = FrameState         R     0x558f3e6209b0+1002: [%228.1], env=e0.0
  void                    Deopt              !v    %231.0, Typecheck@0x558f3afa1f48[Type#40], %228.1   !
BB254   <- [170]
  val?^ | miss    %254.0 = LdVar              eR    X, e236.5
  val?            %254.1 = Force!<wrapped>    !v    %254.0, e236.5   <vec$->
  lgl$#-          %254.2 = CallSafeBuiltin    wed   is.object(%254.1)    <lgl$->
  lgl$-           %254.3 = LOr                      %246.3, %254.2
  lgl$-           %254.4 = %254.3
  goto BB138
BB255   <- [170]
  fs              %255.0 = FrameState         R     0x558f3e6209b0+2515: [<blt sum>], env=e0.0
  fs              %255.1 = FrameState         R     0x558f3e12aa00+78: [], env=e236.5, next=%255.0
  prom-           %255.2 = MkArg                    %246.1, osr[0x558f3b557c60]_p17 (!refl), e236.5
  val?~           %255.3 = CastType                 up %255.2
  env             e255.4 = (MkEnv)            l     mode(miss)="any", x=%255.3, parent=R_BaseNamespace, context 0
  fs              %255.5 = FrameState         R     0x558f3e0dd2f0+41: [%246.2], env=e255.4, next=%255.1
  void                    Deopt              !v    %255.5, DeadBranchReached@0x558f3e072500[Test#0], %170.1   !
BB138   <- [137, 254]
  lgl$-           %138.0 = Phi                      %254.4:BB254, %137.1:BB137
  lgl$-           %138.1 = %138.0
  lgl$#-          %138.2 = CheckTrueFalse     e     %138.1
  void                    Branch                   %138.2 -> BB169 (if true) | BB141 (if false)
BB242   <- [234]
  lgl$-           %242.0 = CastType           d     dn %234.3
  lgl$#-          %242.1 = CheckTrueFalse     e     %242.0
  void                    Branch                   %242.1 -> BB108 (if true) | BB91 (if false)
BB243   <- [234]
  void                    Nop                !     
  val?^ | miss    %243.1 = %234.3
  dr              %243.2 = Typecheck@0x558f3afa1f48[Type#12]
  goto BB89
BB232   <- [230]
  int-            %232.0 = CastType           d     dn %230.2
  int-            %232.1 = Extract1_1D        wed   %232.0, %220.0, elided   <int$->
  lgl$#-          %232.2 = IsType                   %232.1 isA int$-
  void                    Branch                   %232.2 -> BB240 (if true) | BB241 (if false)
BB233   <- [230]
  fs              %233.0 = FrameState         R     0x558f3e6209b0+1017: [], env=e0.0
  void                    Deopt              !v    %233.0, Typecheck@0x558f3afa1f48[Type#41], %230.2   !
BB169   <- [138]
  val?^ | miss    %169.0 = LdVar              eR    as.list, e236.5
  lgl$#-          %169.1 = Identical                %169.0, function(x, ...) <(rir::DispatchTable*)0x558f3|...
  void                    Branch                   %169.1 -> BB258 (if true) | BB259 (if false)
BB141   <- [138]
  void                    Nop                !     
  goto BB142
BB108   <- [242]
  (cls|spec|blt)  %108.0 = LdFun              !v    cat, e0.0
  fs              %108.1 = FrameState         R     0x558f3e6209b0+472: [%108.0], env=e0.0
  void                    Deopt              !v    %108.1, DeadCall@0x558f3afa1f48[Call#6], %108.0   !
BB91   <- [242]
  val?^ | miss    %91.0 = LdVar              eR    kk !upd, e0.0
  lgl$#-          %91.1 = IsType                   %91.0 isA int-
  void                    Branch                   %91.1 -> BB252 (if true) | BB253 (if false)
BB89   <- [243, 253]
  val?^ | miss    %89.0 = Phi                      %243.1:BB243, %253.1:BB253
  val?^ | miss    %89.1 = %89.0
  dr              %89.2 = Phi                      %243.2:BB243, %253.2:BB253
  dr              %89.3 = %89.2
  fs              %89.4 = FrameState         R     0x558f3e6209b0+442: [], env=e0.0
  void                    Deopt              !v    %89.4, %89.3, %89.1   !
BB240   <- [232]
  int$-           %240.0 = CastType           d     dn %232.1
  void                    StVar              lW    j, %240.0, e0.0
  val?^ | miss    %240.2 = LdVar              eR    dd, e0.0
  lgl$#-          %240.3 = IsType                   %240.2 isA val?~- | miss
  void                    Branch                   %240.3 -> BB244 (if true) | BB245 (if false)
BB241   <- [232]
  fs              %241.0 = FrameState         R     0x558f3e6209b0+1077: [%232.1], env=e0.0
  void                    Deopt              !v    %241.0, Typecheck@0x558f3afa1f48[Type#44], %232.1   !
BB258   <- [169]
  val?^ | miss    %258.0 = LdVar              eR    X, e236.5
  val?            %258.1 = Force!<wrapped>    !v    %258.0, e236.5   <vec>
  val?            %258.2 = StaticCall         !v    as.list[0x558f3e5a4e60](%258.1) { 0 } e236.5   <vec>
  void                    StVar              lW    X, %258.2, e236.5
  goto BB142
BB259   <- [169]
  fs              %259.0 = FrameState         R     0x558f3e6209b0+2515: [<blt sum>], env=e0.0
  fs              %259.1 = FrameState         R     0x558f3e12aa00+189: [%138.1], env=e236.5, next=%259.0
  void                    Deopt              !v    %259.1, CallTarget@0x558f3e072500[Call#3], %169.0   !
BB142   <- [141, 258]
  (cls|spec|blt)  %142.0 = LdFun              !v    .Internal, <0x558f39d9c698>, e236.5
  prom-           %142.1 = MkArg                    unboundValue, osr[0x558f3b557c60]_p18, e236.5
  val?            %142.2 = Call               !v    %142.0(%142.1) e236.5   <(lgl|real)->
  val?            %142.3 = PopContext         C     %142.2, %236.2   <real->
  lgl$#-          %142.4 = IsType                   %142.3 isA real-
  void                    Branch                   %142.4 -> BB276 (if true) | BB277 (if false)
BB252   <- [91]
  int-            %252.0 = CastType           d     dn %91.0
  int-            %252.1 = Subassign1_1D      wed   %222.0, %252.0, %234.1, elided
  void                    StVar              lW    kk, %252.1, e0.0
  val?^ | miss    %252.3 = LdVar              eR    storage.mode, e0.0
  lgl$#-          %252.4 = Identical                %252.3, function(x) <(rir::DispatchTable*)0x558f3abef9|...
  void                    Branch                   %252.4 -> BB260 (if true) | BB261 (if false)
BB253   <- [91]
  void                    Nop                !     
  val?^ | miss    %253.1 = %91.0
  dr              %253.2 = Typecheck@0x558f3afa1f48[Type#17]
  goto BB89
BB244   <- [240]
  val?~- | miss   %244.0 = CastType           d     dn %240.2
  val?-           %244.1 = Force!<value>            %244.0,    <vec->
  lgl$#-          %244.2 = IsType                   %244.1 isA val+   <lgl$#->
  void                    Branch                   %244.2 -> BB248 (if true) | BB249 (if false)
BB245   <- [240]
  void                    Nop                !     
  val?^ | miss    %245.1 = %240.2
  dr              %245.2 = Typecheck@0x558f3afa1f48[Type#45]
  goto BB31
BB276   <- [142]
  real-           %276.0 = CastType           d     dn %142.3
  real$-          %276.1 = CallSafeBuiltin    wed   sum(%276.0)    <real$->
  void                    StVar              lW    midS, %276.1, e0.0
  val?^ | miss    %276.3 = LdVar              eR    quiet, e0.0
  val?            %276.4 = Force!<wrapped>    !v    %276.3, e0.0   <lgl$->
  lgl$#-          %276.5 = IsType                   %276.4 isA lgl$-
  void                    Branch                   %276.5 -> BB286 (if true) | BB287 (if false)
BB277   <- [142]
  fs              %277.0 = FrameState         R     0x558f3e6209b0+2515: [<blt sum>, %142.3], env=e0.0
  void                    Deopt              !v    %277.0, Typecheck@0x558f3afa1f48[Type#115], %142.3   !
BB260   <- [252]
  prom-           %260.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p10, e0.0
  val?^           %260.1 = CastType                 up %260.0
  env             e260.2 = MkEnv              l     x=%260.1, parent=R_BaseNamespace, context 0
  val?^ | miss    %260.3 = LdVar              eR    typeof, e260.2
  lgl$#-          %260.4 = Identical                %260.3, function(x) <(rir::DispatchTable*)0x558f3c8fc2|...
  void                    Branch                   %260.4 -> BB268 (if true) | BB269 (if false)
BB261   <- [252]
  void                    Nop                !     
  val?^ | miss    %261.1 = %252.3
  dr              %261.2 = CallTarget@0x558f3afa1f48[Call#8]
  goto BB92
BB248   <- [244]
  val?            %248.0 = Extract2_1D        wed   %244.1, %220.0, elided   <vec>
  void                    StVar              lW    r, %248.0, e0.0
  val?^ | miss    %248.2 = LdVar              eR    unclass, e0.0
  lgl$#-          %248.3 = Identical                <blt unclass>, %248.2   <true>
  void                    Branch                   %248.3 -> BB250 (if true) | BB251 (if false)
BB249   <- [244]
  void                    Nop                !     
  lgl$#-          %249.1 = %244.2
  dr              %249.2 = DeadBranchReached@0x558f3afa1f48[Test#6]
  goto BB31
BB31   <- [245, 249]
  val?^ | miss    %31.0 = Phi                      %245.1:BB245, %249.1:BB249
  val?^ | miss    %31.1 = %31.0
  dr              %31.2 = Phi                      %245.2:BB245, %249.2:BB249
  dr              %31.3 = %31.2
  fs              %31.4 = FrameState         R     0x558f3e6209b0+1092: [], env=e0.0
  void                    Deopt              !v    %31.4, %31.3, %31.1   !
BB286   <- [276]
  lgl$-           %286.0 = CastType           d     dn %276.4
  lgl$-           %286.1 = Not                d     %286.0, elided
  lgl$-           %286.2 = AsLogical                %286.1
  lgl$#-          %286.3 = Identical                %286.2, false
  void                    Branch                   %286.3 -> BB168 (if true) | BB147 (if false)
BB287   <- [276]
  fs              %287.0 = FrameState         R     0x558f3e6209b0+2560: [%276.4], env=e0.0
  void                    Deopt              !v    %287.0, Typecheck@0x558f3afa1f48[Type#117], %276.4   !
BB268   <- [260]
  val?            %268.0 = Force!<lazy>       !v    %260.1, e260.2   <int->
  str$-           %268.1 = CallSafeBuiltin    wed   typeof(%268.0)    <str$->
  int$-           %268.2 = Length                   %268.1
  void                    StVar              lW    tx, %268.1, e260.2
  lgl$-           %268.4 = Eq                 d     %268.2, 1L, elided   <true>
  lgl$#-          %268.5 = Identical                %268.4, true
  void                    Branch                   %268.5 -> BB274 (if true) | BB275 (if false)
BB269   <- [260]
  void                    Nop                !     
  val?^ | miss    %269.1 = %260.3
  dr              %269.2 = CallTarget@0x558f3af754e8[Call#0]
  goto BB92
BB92   <- [261, 269]
  val?^ | miss    %92.0 = Phi                      %261.1:BB261, %269.1:BB269
  val?^ | miss    %92.1 = %92.0
  dr              %92.2 = Phi                      %261.2:BB261, %269.2:BB269
  dr              %92.3 = %92.2
  fs              %92.4 = FrameState         R     0x558f3e6209b0+552: [], env=e0.0
  void                    Deopt              !v    %92.4, %92.3, %92.1   !
BB250   <- [248]
  val?^ | miss    %250.0 = LdVar              eR    d, e0.0
  val?            %250.1 = Force!<value>      !v    %250.0, e0.0   <int$>
  val?            %250.2 = CallBuiltin        !v    unclass(%250.1) e0.0   <int$+>
  val?^ | miss    %250.3 = LdVar              eR    r, e0.0
  val?            %250.4 = Force!<value>      !v    %250.3, e0.0   <vec>
  val?^ | miss    %250.5 = LdVar              eR    j, e0.0
  lgl$#-          %250.6 = IsType                   %250.5 isA int$-
  void                    Branch                   %250.6 -> BB256 (if true) | BB257 (if false)
BB251   <- [248]
  fs              %251.0 = FrameState         R     0x558f3e6209b0+1167: [], env=e0.0
  void                    Deopt              !v    %251.0, DeadBranchReached@0x558f3afa1f48[Test#7], %248.3   !
BB168   <- [286]
  void                    Nop                !     
  lgl$-           %168.1 = %286.2
  goto BB152
BB147   <- [286]
  val?^ | miss    %147.0 = LdVar              eR    type, e0.0
  val?            %147.1 = Force!<wrapped>    !v    %147.0, e0.0   <str$->
  lgl$#-          %147.2 = IsType                   %147.1 isA val?-
  void                    Branch                   %147.2 -> BB290 (if true) | BB291 (if false)
BB274   <- [268]
  lgl$-           %274.0 = CallSafeBuiltin    wed   is.na(%268.1) 
  lgl$#-          %274.1 = CheckTrueFalse     e     %274.0   <false>
  void                    Branch                   %274.1 -> BB285 (if true) | BB284 (if false)
BB275   <- [268]
  fs              %275.0 = FrameState         R     0x558f3e6209b0+584: [], env=e0.0
  fs              %275.1 = FrameState         R     0x558f3aa447b0+48: [%268.1], env=e260.2, next=%275.0
  void                    Deopt              !v    %275.1, DeadBranchReached@0x558f3af754e8[Test#1], %268.5   !
BB256   <- [250]
  int$-           %256.0 = CastType           d     dn %250.5
  val?            %256.1 = Subassign2_1D      !v    %250.2, %250.4, %256.0, e0.0
  void                    StVar              lW    r, %256.1, e0.0
  val?^ | miss    %256.3 = LdVar              eR    j, e0.0
  lgl$#-          %256.4 = IsType                   %256.3 isA int$-
  void                    Branch                   %256.4 -> BB262 (if true) | BB263 (if false)
BB257   <- [250]
  fs              %257.0 = FrameState         R     0x558f3e6209b0+1272: [%250.2, %250.4], env=e0.0
  void                    Deopt              !v    %257.0, Typecheck@0x558f3afa1f48[Type#53], %250.5   !
BB152   <- [168, 296]
  lgl$-           %152.0 = Phi                      %296.3:BB296, %168.1:BB168
  lgl$-           %152.1 = %152.0
  lgl$-           %152.2 = AsLogical                %152.1
  lgl$#-          %152.3 = Identical                %152.2, false
  void                    Branch                   %152.3 -> BB167 (if true) | BB155 (if false)
BB290   <- [147]
  val?-           %290.0 = CastType           d     dn %147.1   <str$->
  lgl-            %290.1 = Eq                 wed   %290.0, "hclust", elided   <lgl$->
  lgl$#-          %290.2 = IsType                   %290.1 isA lgl$-
  void                    Branch                   %290.2 -> BB296 (if true) | BB297 (if false)
BB291   <- [147]
  fs              %291.0 = FrameState         R     0x558f3e6209b0+2582: [%286.2, %147.1], env=e0.0
  void                    Deopt              !v    %291.0, Typecheck@0x558f3afa1f48[Type#118], %147.1   !
BB285   <- [274]
  void                    Nop                !     
  lgl$#-          %285.1 = %274.1
  dr              %285.2 = DeadBranchReached@0x558f3af754e8[Test#8]
  goto BB96
BB284   <- [274]
  lgl$-           %284.0 = Eq                 d     %268.1, closure, elided
  lgl$#-          %284.1 = CheckTrueFalse     e     %284.0   <false>
  void                    Branch                   %284.1 -> BB289 (if true) | BB288 (if false)
BB262   <- [256]
  int$-           %262.0 = CastType           d     dn %256.3
  val?^ | miss    %262.1 = LdVar              eR    k, e0.0
  lgl$#-          %262.2 = IsType                   %262.1 isA int$-
  void                    Branch                   %262.2 -> BB264 (if true) | BB265 (if false)
BB263   <- [256]
  void                    Nop                !     
  val?^ | miss    %263.1 = %256.3
  dr              %263.2 = Typecheck@0x558f3afa1f48[Type#54]
  goto BB37
BB167   <- [152]
  void                    Nop                !     
  lgl$-           %167.1 = %152.2
  goto BB156
BB155   <- [152]
  val?^ | miss    %155.0 = LdVar              eR    k, e0.0
  lgl$#-          %155.1 = IsType                   %155.0 isA int$-
  void                    Branch                   %155.1 -> BB302 (if true) | BB303 (if false)
BB296   <- [290]
  lgl$-           %296.0 = CastType           d     dn %290.1
  lgl$-           %296.1 = AsLogical                %296.0
  lgl$-           %296.2 = LAnd                     %286.2, %296.1
  lgl$-           %296.3 = %296.2
  goto BB152
BB297   <- [290]
  fs              %297.0 = FrameState         R     0x558f3e6209b0+2594: [%286.2, %290.1], env=e0.0
  void                    Deopt              !v    %297.0, Typecheck@0x558f3afa1f48[Type#119], %290.1   !
BB96   <- [285, 289, 295, 301, 309, 311]
  val?^ | miss    %96.0 = Phi                      %285.1:BB285, %289.1:BB289, %295.1:BB295, %301.1:BB301, %309.1:BB309, %311.1:BB311
  val?^ | miss    %96.1 = %96.0
  dr              %96.2 = Phi                      %285.2:BB285, %289.2:BB289, %295.2:BB295, %301.2:BB301, %309.2:BB309, %311.2:BB311
  dr              %96.3 = %96.2
  fs              %96.4 = FrameState         R     0x558f3e6209b0+584: [], env=e0.0
  fs              %96.5 = FrameState         R     0x558f3aa447b0+269: [%268.1, %274.0], env=e260.2, next=%96.4
  void                    Deopt              !v    %96.5, %96.3, %96.1   !
BB289   <- [284]
  void                    Nop                !     
  lgl$#-          %289.1 = %284.1
  dr              %289.2 = DeadBranchReached@0x558f3af754e8[Test#9]
  goto BB96
BB288   <- [284]
  lgl$-           %288.0 = Eq                 d     %268.1, builtin, elided
  lgl$#-          %288.1 = CheckTrueFalse     e     %288.0   <false>
  void                    Branch                   %288.1 -> BB295 (if true) | BB294 (if false)
BB264   <- [262]
  int$-           %264.0 = CastType           d     dn %262.1
  lgl$-           %264.1 = Lt                 d     %262.0, %264.0, elided   <lgl$->
  lgl$#-          %264.2 = CheckTrueFalse     e     %264.1
  void                    Branch                   %264.2 -> BB82 (if true) | BB39 (if false)
BB265   <- [262]
  void                    Nop                !     
  val?^ | miss    %265.1 = %262.1
  dr              %265.2 = Typecheck@0x558f3afa1f48[Type#55]
  goto BB37
BB37   <- [263, 265, 267]
  val?^ | miss    %37.0 = Phi                      %263.1:BB263, %265.1:BB265, %267.1:BB267
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %263.2:BB263, %265.2:BB265, %267.2:BB267
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x558f3e6209b0+1301: [], env=e0.0
  void                    Deopt              !v    %37.4, %37.3, %37.1   !
BB156   <- [167, 302]
  lgl$-           %156.0 = Phi                      %302.4:BB302, %167.1:BB167
  lgl$-           %156.1 = %156.0
  lgl$#-          %156.2 = CheckTrueFalse     e     %156.1
  void                    Branch                   %156.2 -> BB166 (if true) | BB159 (if false)
BB302   <- [155]
  int$-           %302.0 = CastType           d     dn %155.0
  lgl$-           %302.1 = Neq                d     %302.0, 2, elided   <lgl$->
  lgl$-           %302.2 = AsLogical                %302.1
  lgl$-           %302.3 = LAnd                     %152.2, %302.2
  lgl$-           %302.4 = %302.3
  goto BB156
BB303   <- [155]
  fs              %303.0 = FrameState         R     0x558f3e6209b0+2601: [%152.1], env=e0.0
  void                    Deopt              !v    %303.0, Typecheck@0x558f3afa1f48[Type#120], %155.0   !
BB295   <- [288]
  void                    Nop                !     
  lgl$#-          %295.1 = %288.1
  dr              %295.2 = DeadBranchReached@0x558f3af754e8[Test#10]
  goto BB96
BB294   <- [288]
  lgl$-           %294.0 = Eq                 d     %268.1, special, elided
  lgl$#-          %294.1 = CheckTrueFalse     e     %294.0   <false>
  void                    Branch                   %294.1 -> BB301 (if true) | BB300 (if false)
BB82   <- [264]
  void                    Nop                !     
  goto BB5
BB39   <- [264]
  val?^ | miss    %39.0 = LdVar              eR    depth, e0.0
  lgl$#-          %39.1 = IsType                   %39.0 isA int$-
  void                    Branch                   %39.1 -> BB266 (if true) | BB267 (if false)
BB166   <- [156]
  (cls|spec|blt)  %166.0 = LdFun              !v    warning, e0.0
  fs              %166.1 = FrameState         R     0x558f3e6209b0+2652: [%166.0], env=e0.0
  void                    Deopt              !v    %166.1, DeadCall@0x558f3afa1f48[Call#27], %166.0   !
BB159   <- [156]
  val?^ | miss    %159.0 = LdVar              eR    .memberDend, e0.0
  lgl$#-          %159.1 = Identical                %159.0, function(x) <(rir::DispatchTable*)0x558f3e17d5|...
  void                    Branch                   %159.1 -> BB318 (if true) | BB319 (if false)
BB301   <- [294]
  void                    Nop                !     
  lgl$#-          %301.1 = %294.1
  dr              %301.2 = DeadBranchReached@0x558f3af754e8[Test#11]
  goto BB96
BB300   <- [294]
  val?^ | miss    %300.0 = LdVar              eR    storage.mode, e0.0
  lgl$#-          %300.1 = Identical                %300.0, function(x) <(rir::DispatchTable*)0x558f3abef9|...
  void                    Branch                   %300.1 -> BB308 (if true) | BB309 (if false)
BB266   <- [39]
  int$-           %266.0 = CastType           d     dn %39.0
  int$-           %266.1 = Sub                d     %266.0, 1L, elided   <int$->
  void                    StVar              lW    depth, %266.1, e0.0
  val?^ | miss    %266.3 = LdVar              eR    verbose, e0.0
  lgl$#-          %266.4 = IsType                   %266.3 isA lgl$-
  void                    Branch                   %266.4 -> BB270 (if true) | BB271 (if false)
BB267   <- [39]
  void                    Nop                !     
  val?^ | miss    %267.1 = %39.0
  dr              %267.2 = Typecheck@0x558f3afa1f48[Type#57]
  goto BB37
BB318   <- [159]
  prom-           %318.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p2, e0.0
  ct              %318.1 = PushContext        lCL   %318.0, .memberDend([[(r, 1L)), function(x) <(rir::DispatchTable*)0x558f3e17d5|..., e0.0
  val?^           %318.2 = CastType                 up %318.0
  env             e318.3 = MkEnv              l     x=%318.2, parent=<env 0x558f3a3ecb50>, context 1
  val?^ | miss    %318.4 = LdVar              eR    %||%, e318.3
  lgl$#-          %318.5 = Identical                %318.4, function(L, R) <(rir::DispatchTable*)0x558f3e1|...
  void                    Branch                   %318.5 -> BB324 (if true) | BB325 (if false)
BB319   <- [159]
  fs              %319.0 = FrameState         R     0x558f3e6209b0+2636: [%156.1], env=e0.0
  void                    Deopt              !v    %319.0, CallTarget@0x558f3afa1f48[Call#28], %159.0   !
BB308   <- [300]
  prom-           %308.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p11, e0.0
  val?^           %308.1 = CastType                 up %308.0
  env             e308.2 = MkEnv              l     x=%308.1, parent=R_BaseNamespace, context 0
  val?^ | miss    %308.3 = LdVar              eR    typeof, e308.2
  lgl$#-          %308.4 = Identical                %308.3, function(x) <(rir::DispatchTable*)0x558f3c8fc2|...
  void                    Branch                   %308.4 -> BB310 (if true) | BB311 (if false)
BB309   <- [300]
  void                    Nop                !     
  val?^ | miss    %309.1 = %300.0
  dr              %309.2 = CallTarget@0x558f3afa1f48[Call#9]
  goto BB96
BB270   <- [266]
  lgl$-           %270.0 = CastType           d     dn %266.3
  lgl$#-          %270.1 = CheckTrueFalse     e     %270.0
  void                    Branch                   %270.1 -> BB81 (if true) | BB42 (if false)
BB271   <- [266]
  void                    Nop                !     
  val?^ | miss    %271.1 = %266.3
  dr              %271.2 = Typecheck@0x558f3afa1f48[Type#59]
  goto BB40
BB324   <- [318]
  prom-           %324.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p23, e318.3
  prom-           %324.1 = MkArg                    unboundValue, osr[0x558f3b557c60]_p25, e318.3
  val?            %324.2 = StaticCall         !v    %||%[0x558f3e0a6810](%324.0, %324.1) e318.3   <int$->
  lgl$#-          %324.3 = IsType                   %324.2 isA int$-
  void                    Branch                   %324.3 -> BB326 (if true) | BB327 (if false)
BB325   <- [318]
  fs              %325.0 = FrameState         R     0x558f3e6209b0+2712: [], env=e0.0
  env             e325.1 = (MkEnv)            l     x=%318.2, parent=<env 0x558f3a3ecb50>, context 1
  fs              %325.2 = FrameState         R     0x558f3e4d4c90+0: [], env=e325.1, next=%325.0
  void                    Deopt              !v    %325.2, CallTarget@0x558f3eaee898[Call#0], %318.4   !
BB310   <- [308]
  val?            %310.0 = Force!<lazy>       !v    %308.1, e308.2   <int->
  str$-           %310.1 = CallSafeBuiltin    wed   typeof(%310.0)    <str$->
  int$-           %310.2 = Length                   %310.1
  void                    StVar              lW    tx, %310.1, e308.2
  lgl$-           %310.4 = Eq                 d     %310.2, 1L, elided   <true>
  lgl$#-          %310.5 = Identical                %310.4, true
  void                    Branch                   %310.5 -> BB316 (if true) | BB317 (if false)
BB311   <- [308]
  void                    Nop                !     
  val?^ | miss    %311.1 = %308.3
  dr              %311.2 = CallTarget@0x558f3af754e8[Call#0]
  goto BB96
BB81   <- [270]
  (cls|spec|blt)  %81.0 = LdFun              !v    cat, e0.0
  fs              %81.1 = FrameState         R     0x558f3e6209b0+1421: [%81.0], env=e0.0
  void                    Deopt              !v    %81.1, DeadCall@0x558f3afa1f48[Call#13], %81.0   !
BB42   <- [270]
  val?^ | miss    %42.0 = LdVar              eR    sum, e0.0
  lgl$#-          %42.1 = Identical                <blt sum>, %42.0   <true>
  void                    Branch                   %42.1 -> BB272 (if true) | BB273 (if false)
BB40   <- [271, 273, 279]
  val?^ | miss    %40.0 = Phi                      %271.1:BB271, %273.1:BB273, %279.1:BB279
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %271.2:BB271, %273.2:BB273, %279.2:BB279
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x558f3e6209b0+1391: [], env=e0.0
  void                    Deopt              !v    %40.4, %40.3, %40.1   !
BB326   <- [324]
  int$-           %326.0 = CastType           d     dn %324.2
  val?            %326.1 = PopContext         C     %326.0, %318.1   <int$->
  lgl$#-          %326.2 = IsType                   %326.1 isA int$-
  void                    Branch                   %326.2 -> BB334 (if true) | BB335 (if false)
BB327   <- [324]
  fs              %327.0 = FrameState         R     0x558f3e6209b0+2712: [], env=e0.0
  fs              %327.1 = FrameState         R     0x558f3e4d4c90+37: [%324.2], env=e318.3, next=%327.0
  void                    Deopt              !v    %327.1, Typecheck@0x558f3eaee898[Type#5], %324.2   !
BB316   <- [310]
  lgl$-           %316.0 = CallSafeBuiltin    wed   is.na(%310.1) 
  lgl$#-          %316.1 = CheckTrueFalse     e     %316.0   <false>
  void                    Branch                   %316.1 -> BB323 (if true) | BB322 (if false)
BB317   <- [310]
  fs              %317.0 = FrameState         R     0x558f3e6209b0+621: [%268.1], env=e0.0
  fs              %317.1 = FrameState         R     0x558f3aa447b0+48: [%310.1], env=e308.2, next=%317.0
  void                    Deopt              !v    %317.1, DeadBranchReached@0x558f3af754e8[Test#1], %310.5   !
BB272   <- [42]
  val?^ | miss    %272.0 = LdVar              eR    vapply, e0.0
  lgl$#-          %272.1 = Identical                %272.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Branch                   %272.1 -> BB278 (if true) | BB279 (if false)
BB273   <- [42]
  void                    Nop                !     
  lgl$#-          %273.1 = %42.1
  dr              %273.2 = DeadBranchReached@0x558f3afa1f48[Test#8]
  goto BB40
BB334   <- [326]
  int$-           %334.0 = CastType           d     dn %326.1
  val?^ | miss    %334.1 = LdVar              eR    midS, e0.0
  lgl$#-          %334.2 = IsType                   %334.1 isA real$-
  void                    Branch                   %334.2 -> BB346 (if true) | BB347 (if false)
BB335   <- [326]
  void                    Nop                !     
  val?            %335.1 = %326.1
  dr              %335.2 = Typecheck@0x558f3afa1f48[Type#124]
  goto BB164
BB323   <- [316]
  void                    Nop                !     
  lgl$#-          %323.1 = %316.1
  dr              %323.2 = DeadBranchReached@0x558f3af754e8[Test#8]
  goto BB100
BB322   <- [316]
  lgl$-           %322.0 = Eq                 d     %310.1, closure, elided
  lgl$#-          %322.1 = CheckTrueFalse     e     %322.0   <false>
  void                    Branch                   %322.1 -> BB333 (if true) | BB332 (if false)
BB278   <- [272]
  prom-           %278.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p6 (!refl), e0.0
  prom-           %278.1 = MkArg                    unboundValue, osr[0x558f3b557c60]_p7, e0.0
  ct              %278.2 = PushContext        lCL   %278.0, %278.1, 0, vapply(r, .midDend, 0), function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|..., e0.0
  val?^           %278.3 = CastType                 up %278.1
  val?^           %278.4 = CastType                 up %278.0
  env             e278.5 = MkEnv              l     X=%278.4, FUN=%278.3, FUN.VALUE=0, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  val?^ | miss    %278.6 = LdVar              eR    match.fun, e278.5
  lgl$#-          %278.7 = Identical                %278.6, function(FUN, descend=TRUE) <(rir::DispatchTab|...
  void                    Branch                   %278.7 -> BB280 (if true) | BB281 (if false)
BB279   <- [272]
  void                    Nop                !     
  val?^ | miss    %279.1 = %272.0
  dr              %279.2 = CallTarget@0x558f3afa1f48[Call#17]
  goto BB40
BB346   <- [334]
  real$-          %346.0 = CastType           d     dn %334.1
  real$-          %346.1 = Add                d     %334.0, %346.0, elided   <real$->
  real$-          %346.2 = Div                d     %346.1, 2, elided   <real$->
  (cls|spec|blt)  %346.3 = LdFun              !v    attr<-, <0x558f39da0e08>, e0.0
  val?^ | miss    %346.4 = LdVar              eR    r, e0.0
  val?            %346.5 = Force!<value>      !v    %346.4, e0.0   <vec>
  val?            %346.6 = NamedCall          !v    %346.3(%346.5, "midpoint", value=%346.2) e0.0   <vec>
  void                    StVar              lW    r, %346.6, e0.0
  val             %346.8 = ChkMissing         e     %346.6
  void                    StVar              lW    d, %346.6, e0.0
  goto BB2
BB347   <- [334]
  void                    Nop                !     
  val?^ | miss    %347.1 = %334.1
  dr              %347.2 = Typecheck@0x558f3afa1f48[Type#125]
  goto BB164
BB164   <- [335, 347]
  val?^ | miss    %164.0 = Phi                      %335.1:BB335, %347.1:BB347
  val?^ | miss    %164.1 = %164.0
  dr              %164.2 = Phi                      %335.2:BB335, %347.2:BB347
  dr              %164.3 = %164.2
  fs              %164.4 = FrameState         R     0x558f3e6209b0+2712: [%326.1], env=e0.0
  void                    Deopt              !v    %164.4, %164.3, %164.1   !
BB100   <- [323, 333, 343, 345]
  val?^ | miss    %100.0 = Phi                      %323.1:BB323, %333.1:BB333, %343.1:BB343, %345.1:BB345
  val?^ | miss    %100.1 = %100.0
  dr              %100.2 = Phi                      %323.2:BB323, %333.2:BB333, %343.2:BB343, %345.2:BB345
  dr              %100.3 = %100.2
  fs              %100.4 = FrameState         R     0x558f3e6209b0+621: [%268.1], env=e0.0
  fs              %100.5 = FrameState         R     0x558f3aa447b0+269: [%310.1, %316.0], env=e308.2, next=%100.4
  void                    Deopt              !v    %100.5, %100.3, %100.1   !
BB333   <- [322]
  void                    Nop                !     
  lgl$#-          %333.1 = %322.1
  dr              %333.2 = DeadBranchReached@0x558f3af754e8[Test#9]
  goto BB100
BB332   <- [322]
  lgl$-           %332.0 = Eq                 d     %310.1, builtin, elided
  lgl$#-          %332.1 = CheckTrueFalse     e     %332.0   <false>
  void                    Branch                   %332.1 -> BB343 (if true) | BB342 (if false)
BB280   <- [278]
  prom-           %280.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p29, e278.5
  val?            %280.1 = StaticCall         !v    match.fun[0x558f3e0c4f70](%280.0) e278.5   <(cls|blt)->
  void                    StVar              lW    FUN, %280.1, e278.5
  val?^ | miss    %280.3 = LdVar              eR    is.vector, e278.5
  lgl$#-          %280.4 = Identical                %280.3, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %280.4 -> BB282 (if true) | BB283 (if false)
BB281   <- [278]
  fs              %281.0 = FrameState         R     0x558f3e6209b0+1551: [<blt sum>], env=e0.0
  env             e281.1 = (MkEnv)            l     X=%278.4, FUN=%278.3, FUN.VALUE=0, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  fs              %281.2 = FrameState         R     0x558f3e12aa00+0: [], env=e281.1, next=%281.0
  void                    Deopt              !v    %281.2, CallTarget@0x558f3e072500[Call#0], %278.6   !
BB343   <- [332]
  void                    Nop                !     
  lgl$#-          %343.1 = %332.1
  dr              %343.2 = DeadBranchReached@0x558f3af754e8[Test#10]
  goto BB100
BB342   <- [332]
  lgl$-           %342.0 = Eq                 d     %310.1, special, elided
  lgl$#-          %342.1 = CheckTrueFalse     e     %342.0   <false>
  void                    Branch                   %342.1 -> BB345 (if true) | BB344 (if false)
BB282   <- [280]
  val?^ | miss    %282.0 = LdVar              eR    X, e278.5
  val?            %282.1 = Force!<lazy>       !v    %282.0, e278.5   <vec>
  lgl$#-          %282.2 = CallSafeBuiltin    wed   is.vector(%282.1, "any")    <lgl$->
  lgl$#-          %282.3 = Not                d     %282.2, elided
  void                    Branch                   %282.2 -> BB80 (if true) | BB49 (if false)
BB283   <- [280]
  fs              %283.0 = FrameState         R     0x558f3e6209b0+1551: [<blt sum>], env=e0.0
  fs              %283.1 = FrameState         R     0x558f3e12aa00+46: [], env=e278.5, next=%283.0
  void                    Deopt              !v    %283.1, CallTarget@0x558f3e072500[Call#1], %280.3   !
BB345   <- [342]
  void                    Nop                !     
  lgl$#-          %345.1 = %342.1
  dr              %345.2 = DeadBranchReached@0x558f3af754e8[Test#11]
  goto BB100
BB344   <- [342]
  lgl$-           %344.0 = Neq                d     %268.1, %310.1, elided   <lgl$->
  lgl$#-          %344.1 = CheckTrueFalse     e     %344.0
  void                    Branch                   %344.1 -> BB107 (if true) | BB102 (if false)
BB80   <- [282]
  val?^ | miss    %80.0 = LdVar              eR    is.object, e278.5
  lgl$#-          %80.1 = Identical                <blt is.object>, %80.0   <true>
  void                    Branch                   %80.1 -> BB292 (if true) | BB293 (if false)
BB49   <- [282]
  void                    Nop                !     
  lgl$#-          %49.1 = %282.3
  goto BB50
BB107   <- [344]
  (cls|spec|blt)  %107.0 = LdFun              !v    storage.mode, e0.0
  fs              %107.1 = FrameState         R     0x558f3e6209b0+648: [%107.0], env=e0.0
  void                    Deopt              !v    %107.1, DeadCall@0x558f3afa1f48[Call#10], %107.0   !
BB102   <- [344]
  val?^ | miss    %102.0 = LdVar              eR    d, e0.0
  val?            %102.1 = Force!<wrapped>    !v    %102.0, e0.0   <vec>
  val?^ | miss    %102.2 = LdVar              eR    dd !upd, e0.0
  lgl$#-          %102.3 = IsType                   %102.2 isA val?~- | miss
  void                    Branch                   %102.3 -> BB348 (if true) | BB349 (if false)
BB292   <- [80]
  val?^ | miss    %292.0 = LdVar              eR    X, e278.5
  val?            %292.1 = Force!<wrapped>    !v    %292.0, e278.5   <vec$->
  lgl$#-          %292.2 = CallSafeBuiltin    wed   is.object(%292.1)    <lgl$->
  lgl$-           %292.3 = LOr                      %282.3, %292.2
  lgl$-           %292.4 = %292.3
  goto BB50
BB293   <- [80]
  fs              %293.0 = FrameState         R     0x558f3e6209b0+1551: [<blt sum>], env=e0.0
  fs              %293.1 = FrameState         R     0x558f3e12aa00+78: [], env=e278.5, next=%293.0
  prom-           %293.2 = MkArg                    %282.1, osr[0x558f3b557c60]_p30 (!refl), e278.5
  val?~           %293.3 = CastType                 up %293.2
  env             e293.4 = (MkEnv)            l     mode(miss)="any", x=%293.3, parent=R_BaseNamespace, context 0
  fs              %293.5 = FrameState         R     0x558f3e0dd2f0+41: [%282.2], env=e293.4, next=%293.1
  void                    Deopt              !v    %293.5, DeadBranchReached@0x558f3e072500[Test#0], %80.1   !
BB50   <- [49, 292]
  lgl$-           %50.0 = Phi                      %292.4:BB292, %49.1:BB49
  lgl$-           %50.1 = %50.0
  lgl$#-          %50.2 = CheckTrueFalse     e     %50.1
  void                    Branch                   %50.2 -> BB79 (if true) | BB53 (if false)
BB348   <- [102]
  val?~- | miss   %348.0 = CastType           d     dn %102.2
  val?-           %348.1 = Force!<value>            %348.0,    <vec->
  val?^ | miss    %348.2 = LdVar              eR    depth, e0.0
  lgl$#-          %348.3 = IsType                   %348.2 isA int$-
  void                    Branch                   %348.3 -> BB350 (if true) | BB351 (if false)
BB349   <- [102]
  void                    Nop                !     
  val?^ | miss    %349.1 = %102.2
  dr              %349.2 = Typecheck@0x558f3afa1f48[Type#28]
  goto BB103
BB79   <- [50]
  val?^ | miss    %79.0 = LdVar              eR    as.list, e278.5
  lgl$#-          %79.1 = Identical                %79.0, function(x, ...) <(rir::DispatchTable*)0x558f3|...
  void                    Branch                   %79.1 -> BB298 (if true) | BB299 (if false)
BB53   <- [50]
  void                    Nop                !     
  goto BB54
BB350   <- [348]
  int$-           %350.0 = CastType           d     dn %348.2
  val?            %350.1 = Subassign2_1D      !v    %102.1, %348.1, %350.0, e0.0
  void                    StVar              lW    dd, %350.1, e0.0
  val?^ | miss    %350.3 = LdVar              eR    d, e0.0
  val?            %350.4 = Force!<wrapped>    !v    %350.3, e0.0   <vec>
  lgl$#-          %350.5 = IsType                   %350.4 isA val+   <lgl$#->
  void                    Branch                   %350.5 -> BB353 (if true) | BB352 (if false)
BB351   <- [348]
  void                    Nop                !     
  val?^ | miss    %351.1 = %348.2
  dr              %351.2 = Typecheck@0x558f3afa1f48[Type#29]
  goto BB103
BB103   <- [349, 351]
  val?^ | miss    %103.0 = Phi                      %349.1:BB349, %351.1:BB351
  val?^ | miss    %103.1 = %103.0
  dr              %103.2 = Phi                      %349.2:BB349, %351.2:BB351
  dr              %103.3 = %103.2
  fs              %103.4 = FrameState         R     0x558f3e6209b0+757: [%102.1], env=e0.0
  void                    Deopt              !v    %103.4, %103.3, %103.1   !
BB298   <- [79]
  val?^ | miss    %298.0 = LdVar              eR    X, e278.5
  val?            %298.1 = Force!<wrapped>    !v    %298.0, e278.5   <vec>
  val?            %298.2 = StaticCall         !v    as.list[0x558f3e5a4e60](%298.1) { 0 } e278.5   <vec>
  void                    StVar              lW    X, %298.2, e278.5
  goto BB54
BB299   <- [79]
  fs              %299.0 = FrameState         R     0x558f3e6209b0+1551: [<blt sum>], env=e0.0
  fs              %299.1 = FrameState         R     0x558f3e12aa00+189: [%50.1], env=e278.5, next=%299.0
  void                    Deopt              !v    %299.1, CallTarget@0x558f3e072500[Call#3], %79.0   !
BB54   <- [53, 298]
  (cls|spec|blt)  %54.0 = LdFun              !v    .Internal, <0x558f39d9c698>, e278.5
  prom-           %54.1 = MkArg                    unboundValue, osr[0x558f3b557c60]_p31, e278.5
  val?            %54.2 = Call               !v    %54.0(%54.1) e278.5   <(lgl|real)->
  val?            %54.3 = PopContext         C     %54.2, %278.2   <real->
  lgl$#-          %54.4 = IsType                   %54.3 isA real-
  void                    Branch                   %54.4 -> BB304 (if true) | BB305 (if false)
BB353   <- [350]
  fs              %353.0 = FrameState         R     0x558f3e6209b0+809: [%350.4], env=e0.0
  void                    Deopt              !v    %353.0, DeadBranchReached@0x558f3afa1f48[Test#2], %350.5   !
BB352   <- [350]
  prom-           %352.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p12, e0.0
  val?            %352.1 = Extract2_1D        !v    %350.4, %352.0, e0.0   <(int|vec)>
  void                    StVar              lW    d, %352.1, e0.0
  goto BB13
BB304   <- [54]
  real-           %304.0 = CastType           d     dn %54.3
  real$-          %304.1 = CallSafeBuiltin    wed   sum(%304.0)    <real$->
  void                    StVar              lW    midS, %304.1, e0.0
  val?^ | miss    %304.3 = LdVar              eR    quiet, e0.0
  val?            %304.4 = Force!<lazy>       !v    %304.3, e0.0   <lgl$->
  lgl$#-          %304.5 = IsType                   %304.4 isA lgl$-
  void                    Branch                   %304.5 -> BB306 (if true) | BB307 (if false)
BB305   <- [54]
  fs              %305.0 = FrameState         R     0x558f3e6209b0+1551: [<blt sum>, %54.3], env=e0.0
  void                    Deopt              !v    %305.0, Typecheck@0x558f3afa1f48[Type#68], %54.3   !
BB306   <- [304]
  lgl$-           %306.0 = CastType           d     dn %304.4
  lgl$-           %306.1 = Not                d     %306.0, elided
  lgl$-           %306.2 = AsLogical                %306.1
  lgl$#-          %306.3 = Identical                %306.2, false
  void                    Branch                   %306.3 -> BB78 (if true) | BB59 (if false)
BB307   <- [304]
  fs              %307.0 = FrameState         R     0x558f3e6209b0+1596: [%304.4], env=e0.0
  void                    Deopt              !v    %307.0, Typecheck@0x558f3afa1f48[Type#70], %304.4   !
BB78   <- [306]
  void                    Nop                !     
  lgl$-           %78.1 = %306.2
  goto BB64
BB59   <- [306]
  val?^ | miss    %59.0 = LdVar              eR    type, e0.0
  val?            %59.1 = Force!<lazy>       !v    %59.0, e0.0   <str$->
  lgl$#-          %59.2 = IsType                   %59.1 isA val?-
  void                    Branch                   %59.2 -> BB312 (if true) | BB313 (if false)
BB64   <- [78, 314]
  lgl$-           %64.0 = Phi                      %314.3:BB314, %78.1:BB78
  lgl$-           %64.1 = %64.0
  lgl$-           %64.2 = AsLogical                %64.1
  lgl$#-          %64.3 = Identical                %64.2, false
  void                    Branch                   %64.3 -> BB77 (if true) | BB67 (if false)
BB312   <- [59]
  val?-           %312.0 = CastType           d     dn %59.1   <str$->
  lgl-            %312.1 = Eq                 wed   %312.0, "hclust", elided   <lgl$->
  lgl$#-          %312.2 = IsType                   %312.1 isA lgl$-
  void                    Branch                   %312.2 -> BB314 (if true) | BB315 (if false)
BB313   <- [59]
  fs              %313.0 = FrameState         R     0x558f3e6209b0+1618: [%306.2, %59.1], env=e0.0
  void                    Deopt              !v    %313.0, Typecheck@0x558f3afa1f48[Type#71], %59.1   !
BB77   <- [64]
  void                    Nop                !     
  lgl$-           %77.1 = %64.2
  goto BB68
BB67   <- [64]
  val?^ | miss    %67.0 = LdVar              eR    k, e0.0
  lgl$#-          %67.1 = IsType                   %67.0 isA int$-
  void                    Branch                   %67.1 -> BB320 (if true) | BB321 (if false)
BB314   <- [312]
  lgl$-           %314.0 = CastType           d     dn %312.1
  lgl$-           %314.1 = AsLogical                %314.0
  lgl$-           %314.2 = LAnd                     %306.2, %314.1
  lgl$-           %314.3 = %314.2
  goto BB64
BB315   <- [312]
  fs              %315.0 = FrameState         R     0x558f3e6209b0+1630: [%306.2, %312.1], env=e0.0
  void                    Deopt              !v    %315.0, Typecheck@0x558f3afa1f48[Type#72], %312.1   !
BB68   <- [77, 320]
  lgl$-           %68.0 = Phi                      %320.4:BB320, %77.1:BB77
  lgl$-           %68.1 = %68.0
  lgl$#-          %68.2 = CheckTrueFalse     e     %68.1
  void                    Branch                   %68.2 -> BB76 (if true) | BB69 (if false)
BB320   <- [67]
  int$-           %320.0 = CastType           d     dn %67.0
  lgl$-           %320.1 = Neq                d     %320.0, 2, elided   <lgl$->
  lgl$-           %320.2 = AsLogical                %320.1
  lgl$-           %320.3 = LAnd                     %64.2, %320.2
  lgl$-           %320.4 = %320.3
  goto BB68
BB321   <- [67]
  void                    Nop                !     
  val?^ | miss    %321.1 = %67.0
  dr              %321.2 = Typecheck@0x558f3afa1f48[Type#73]
  goto BB65
BB76   <- [68]
  (cls|spec|blt)  %76.0 = LdFun              !v    warning, e0.0
  fs              %76.1 = FrameState         R     0x558f3e6209b0+1688: [%76.0], env=e0.0
  void                    Deopt              !v    %76.1, DeadCall@0x558f3afa1f48[Call#18], %76.0   !
BB69   <- [68]
  val?^ | miss    %69.0 = LdVar              eR    .memberDend, e0.0
  lgl$#-          %69.1 = Identical                %69.0, function(x) <(rir::DispatchTable*)0x558f3e17d5|...
  void                    Branch                   %69.1 -> BB328 (if true) | BB329 (if false)
BB65   <- [321, 329]
  val?^ | miss    %65.0 = Phi                      %321.1:BB321, %329.1:BB329
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %321.2:BB321, %329.2:BB329
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x558f3e6209b0+1637: [%64.1], env=e0.0
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB328   <- [69]
  prom-           %328.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p8, e0.0
  ct              %328.1 = PushContext        lCL   %328.0, .memberDend([[(r, 1L)), function(x) <(rir::DispatchTable*)0x558f3e17d5|..., e0.0
  val?^           %328.2 = CastType                 up %328.0
  env             e328.3 = MkEnv              l     x=%328.2, parent=<env 0x558f3a3ecb50>, context 1
  val?^ | miss    %328.4 = LdVar              eR    %||%, e328.3
  lgl$#-          %328.5 = Identical                %328.4, function(L, R) <(rir::DispatchTable*)0x558f3e1|...
  void                    Branch                   %328.5 -> BB330 (if true) | BB331 (if false)
BB329   <- [69]
  void                    Nop                !     
  val?^ | miss    %329.1 = %69.0
  dr              %329.2 = CallTarget@0x558f3afa1f48[Call#19]
  goto BB65
BB330   <- [328]
  prom-           %330.0 = MkArg                    unboundValue, osr[0x558f3b557c60]_p36, e328.3
  prom-           %330.1 = MkArg                    unboundValue, osr[0x558f3b557c60]_p38, e328.3
  val?            %330.2 = StaticCall         !v    %||%[0x558f3e0a6810](%330.0, %330.1) e328.3   <int$->
  lgl$#-          %330.3 = IsType                   %330.2 isA int$-
  void                    Branch                   %330.3 -> BB336 (if true) | BB337 (if false)
BB331   <- [328]
  fs              %331.0 = FrameState         R     0x558f3e6209b0+1748: [], env=e0.0
  env             e331.1 = (MkEnv)            l     x=%328.2, parent=<env 0x558f3a3ecb50>, context 1
  fs              %331.2 = FrameState         R     0x558f3e4d4c90+0: [], env=e331.1, next=%331.0
  void                    Deopt              !v    %331.2, CallTarget@0x558f3eaee898[Call#0], %328.4   !
BB336   <- [330]
  int$-           %336.0 = CastType           d     dn %330.2
  val?            %336.1 = PopContext         C     %336.0, %328.1   <int$->
  lgl$#-          %336.2 = IsType                   %336.1 isA int$-
  void                    Branch                   %336.2 -> BB338 (if true) | BB339 (if false)
BB337   <- [330]
  fs              %337.0 = FrameState         R     0x558f3e6209b0+1748: [], env=e0.0
  fs              %337.1 = FrameState         R     0x558f3e4d4c90+37: [%330.2], env=e328.3, next=%337.0
  void                    Deopt              !v    %337.1, Typecheck@0x558f3eaee898[Type#5], %330.2   !
BB338   <- [336]
  int$-           %338.0 = CastType           d     dn %336.1
  val?^ | miss    %338.1 = LdVar              eR    midS, e0.0
  lgl$#-          %338.2 = IsType                   %338.1 isA real$-
  void                    Branch                   %338.2 -> BB340 (if true) | BB341 (if false)
BB339   <- [336]
  void                    Nop                !     
  val?            %339.1 = %336.1
  dr              %339.2 = Typecheck@0x558f3afa1f48[Type#77]
  goto BB74
BB340   <- [338]
  real$-          %340.0 = CastType           d     dn %338.1
  real$-          %340.1 = Add                d     %338.0, %340.0, elided   <real$->
  real$-          %340.2 = Div                d     %340.1, 2, elided   <real$->
  (cls|spec|blt)  %340.3 = LdFun              !v    attr<-, <0x558f39da0e08>, e0.0
  val?^ | miss    %340.4 = LdVar              eR    r, e0.0
  val?            %340.5 = Force!<value>      !v    %340.4, e0.0   <vec>
  val?            %340.6 = NamedCall          !v    %340.3(%340.5, "midpoint", value=%340.2) e0.0   <vec>
  void                    StVar              lW    r, %340.6, e0.0
  val             %340.8 = ChkMissing         e     %340.6
  void                    StVar              lW    d, %340.6, e0.0
  goto BB2
BB341   <- [338]
  void                    Nop                !     
  val?^ | miss    %341.1 = %338.1
  dr              %341.2 = Typecheck@0x558f3afa1f48[Type#78]
  goto BB74
BB74   <- [339, 341]
  val?^ | miss    %74.0 = Phi                      %339.1:BB339, %341.1:BB341
  val?^ | miss    %74.1 = %74.0
  dr              %74.2 = Phi                      %339.2:BB339, %341.2:BB341
  dr              %74.3 = %74.2
  fs              %74.4 = FrameState         R     0x558f3e6209b0+1748: [%336.1], env=e0.0
  void                    Deopt              !v    %74.4, %74.3, %74.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .midDend, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <vec>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <(int|vec)>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  val?            %0.3  = Add                !v    %0.2, 1L, e0.0   <int$->
  val?^ | miss    %0.4  = LdVar              eR    jj, e0.0
  val?            %0.5  = Force<value>       !v    %0.4, e0.0   <int->
  val?^ | miss    %0.6  = LdVar              eR    depth, e0.0
  val?            %0.7  = Force<value>       !v    %0.6, e0.0   <int$->
  val?            %0.8  = Subassign1_1D      !v    %0.3, %0.5, %0.7, e0.0
  void                    StVar              lW    jj, %0.8, e0.0
  void                    Invisible          v     
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|vec)>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .midDend, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    r, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <vec>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <int$>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    jj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    kk, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    jj, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int->
  val?^ | miss    %0.3  = LdVar              eR    depth, e0.0
  val?            %0.4  = Force<value>       !v    %0.3, e0.0   <int$->
  val?            %0.5  = Subassign1_1D      wed   1L, %0.2, %0.4, e0.0
  void                    StVar              lW    jj, %0.5, e0.0
  void                    Invisible          v     
  void                    Return             l     1L
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, osr[0x558f3b557c60]_p19, e0.0
  prom-           %0.3  = MkArg                    unboundValue, osr[0x558f3b557c60]_p20, e0.0
  prom-           %0.4  = MkArg                    unboundValue, osr[0x558f3b557c60]_p21, e0.0
  prom-           %0.5  = MkArg                    unboundValue, osr[0x558f3b557c60]_p22, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x558f39d9d080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, osr[0x558f3b557c60]_p24, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "x.member") e0.0   <nil->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    %||%, <0x558f3bbd18d8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, osr[0x558f3b557c60]_p26, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2, 1L) e0.0   <int$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x558f39d9d080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, osr[0x558f3b557c60]_p27, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "members") e0.0   <nil->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, osr[0x558f3b557c60]_p32, e0.0
  prom-           %0.3  = MkArg                    unboundValue, osr[0x558f3b557c60]_p33, e0.0
  prom-           %0.4  = MkArg                    unboundValue, osr[0x558f3b557c60]_p34, e0.0
  prom-           %0.5  = MkArg                    unboundValue, osr[0x558f3b557c60]_p35, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x558f39d9d080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, osr[0x558f3b557c60]_p37, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "x.member") e0.0   <nil->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    %||%, <0x558f3bbd18d8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, osr[0x558f3b557c60]_p39, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2, 1L) e0.0   <int$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x558f39d9d080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, osr[0x558f3b557c60]_p40, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "members") e0.0   <nil->
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3

│ osr[0x558f3b557c60]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
