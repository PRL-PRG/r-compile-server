
┌──────────────────────────────────────────────────────────────────────────────┐
│ mkDend[0x558f3cbe3980]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2,SimpleReal0 miss: 1│
│ Properties:                                                                  │
├────── Final PIR Version
mkDend[0x558f3cbe3980]
BB0
  val?~+          %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  (real|miss)$~-  %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     n=%0.2, lab=%0.1, method=%0.0, rGen(miss)=missingArg, parent=R_GlobalEnv, context 1
  cls             %0.4  = MkCls                    mkDend@Prom(0)0, e0.3
  prom-           %0.5  = MkArg                    %0.4, mkDend[0x558f3cbe3980]_p0 (!refl), e0.3
  val?^ | miss    %0.6  = CastType                 up %0.5
  void                    StArg              lW    rGen, %0.6, e0.3
  val?^ | miss    %0.8  = LdVar              eR    stopifnot, R_GlobalEnv
  lgl$#-          %0.9  = Identical                %0.8, function(..., exprs, exprObject, local=TRUE) <|...
  void                    Branch                   %0.9 -> BB21 (if true) | BB22 (if false)
BB21   <- [0]
  prom-           %21.0 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p1, e0.3
  prom-           %21.1 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p3, e0.3
  prom-           %21.2 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p5, e0.3
  prom-           %21.3 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p6, e0.3
  val?            %21.4 = Call               !v    function(..., exprs, exprObject, local=TRUE) <|...(%21.0, %21.1, %21.2, %21.3) e0.3
  val?^ | miss    %21.5 = LdVar              eR    matrix, e0.3
  lgl$#-          %21.6 = Identical                %21.5, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...
  void                    Branch                   %21.6 -> BB23 (if true) | BB24 (if false)
BB22   <- [0]
  fs              %22.0 = FrameState         R     0x558f3e6a4740+0: [], env=e0.3
  void                    Deopt              !v    %22.0, CallTarget@0x558f3b39e650[Call#0], %0.8
BB23   <- [21]
  prom-           %23.0 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p10, e0.3
  prom-           %23.1 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p11, e0.3
  val?^           %23.2 = CastType                 up %23.1
  val?^           %23.3 = CastType                 up %23.0
  (cls|spec|blt)  %23.4 = LdFun              !v    rGen, e0.3
  prom-           %23.5 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p9, e0.3
  val?            %23.6 = Call               !v    %23.4(%23.5) e0.3   <real->
  prom-           %23.7 = MkArg                    %23.6, mkDend[0x558f3cbe3980]_p8 (!refl), e0.3
  val?~           %23.8 = CastType                 up %23.7
  lgl$#-          %23.9 = CallSafeBuiltin    wed   is.object(%23.6)    <lgl$->
  env             e23.10 = MkEnv              l     data=%23.8, nrow=%23.3, ncol=%23.2, byrow(miss)=false, dimnames(miss)=nil, parent=R_BaseNamespace, context 0
  void                    Branch                   %23.9 -> BB19 (if true) | BB7 (if false)
BB24   <- [21]
  fs              %24.0 = FrameState         R     0x558f3e6a4740+47: [%21.4], env=e0.3
  void                    Deopt              !v    %24.0, CallTarget@0x558f3b39e650[Call#4], %21.5   !
BB19   <- [23]
  void                    Nop                !     
  lgl$#-          %19.1 = true
  goto BB8
BB7   <- [23]
  lgl$#-          %7.0  = IsType                   %23.6 isA real-
  void                    Branch                   %7.0 -> BB25 (if true) | BB26 (if false)
BB8   <- [19, 25]
  lgl$#-          %8.0  = Phi                      %19.1:BB19, %25.1:BB25
  lgl$#-          %8.1  = %8.0
  void                    Branch                   %8.1 -> BB18 (if true) | BB9 (if false)
BB25   <- [7]
  void                    Nop                !     
  lgl$#-          %25.1 = false
  goto BB8
BB26   <- [7]
  fs              %26.0 = FrameState         R     0x558f3e6a4740+90: [], env=e0.3
  env             e26.1 = (MkEnv)            l     data=%23.8, nrow=%23.3, ncol=%23.2, byrow(miss)=false, dimnames(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %26.2 = FrameState         R     0x558f3e5fdc80+91: [%23.9], env=e26.1, next=%26.0
  void                    Deopt              !v    %26.2, Typecheck@0x558f3c6ba920[Type#4], %23.6   !
BB18   <- [8]
  fs              %18.0 = FrameState         R     0x558f3e6a4740+90: [], env=e0.3
  (cls|spec|blt)  %18.1 = LdFun              !v    as.vector, R_BaseNamespace
  fs              %18.2 = FrameState         R     0x558f3e5fdc80+218: [%18.1], env=e23.10, next=%18.0
  void                    Deopt              !v    %18.2, DeadCall@0x558f3c6ba920[Call#2], %18.1   !
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    n, e0.3
  val?            %9.1  = Force!<wrapped>    !v    %9.0, e0.3   <real$->
  val?            %9.2  = Force!<lazy>       !vL   %23.2, e23.10   <real$->
  lgl$-           %9.3  = Missing            eR    ncol, e23.10
  val+            %9.4  = CallSafeBuiltin    wed   matrix(%23.6, %9.1, %9.2, false, nil, false, %9.3)    <real_>
  void                    StVar              lW    a, %9.4, e0.3
  val?^ | miss    %9.6  = LdVar              eR    paste0, e0.3
  lgl$#-          %9.7  = Identical                %9.6, function(..., collapse=NULL, recycle0=FALSE) <|...
  void                    Branch                   %9.7 -> BB27 (if true) | BB28 (if false)
BB27   <- [9]
  prom-           %27.0 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p12, e0.3
  prom-           %27.1 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p13, e0.3
  dots-           %27.2 = DotsList           l     %27.0, %27.1
  ct              %27.3 = PushContext        lCL   %27.2, paste0(lab, :(1, n)), function(..., collapse=NULL, recycle0=FALSE) <|..., e0.3
  val?^ | miss    %27.4 = CastType                 up %27.0
  val?^ | miss    %27.5 = CastType                 up %27.1
  env             e27.6 = MkEnv              l     ...=%27.2, collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 1
  val?            %27.7 = Force!             !vL   %27.4, e27.6
  val?            %27.8 = Force!             !vL   %27.5, e27.6
  val+            %27.9 = CallSafeBuiltin    wed   list(%27.7, %27.8)    <vec->
  val?            %27.10 = CallBuiltin        !v    paste0(%27.9, nil, false) e27.6
  val?            %27.11 = PopContext         C     %27.10, %27.3   <str->
  val?^ | miss    %27.12 = LdVar              eR    rownames<-, e0.3
  lgl$#-          %27.13 = Identical                %27.12, function(x, value) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %27.13 -> BB29 (if true) | BB30 (if false)
BB28   <- [9]
  fs              %28.0 = FrameState         R     0x558f3e6a4740+104: [], env=e0.3
  void                    Deopt              !v    %28.0, CallTarget@0x558f3b39e650[Call#6], %9.6   !
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    a, e0.3
  lgl$#-          %29.1 = IsType                   %29.0 isA real_
  void                    Branch                   %29.1 -> BB31 (if true) | BB32 (if false)
BB30   <- [27]
  void                    Nop                !     
  val?^ | miss    %30.1 = %27.12
  dr              %30.2 = CallTarget@0x558f3b39e650[Call#7]
  goto BB12
BB31   <- [29]
  real_           %31.0 = CastType           d     dn %29.0
  val?            %31.1 = StaticCall         !v    rownames<-[0x558f3e074110](%31.0, %27.11) { 0 1n } e0.3
  void                    StVar              lW    a, %31.1, e0.3
  val?^ | miss    %31.3 = LdVar              eR    colnames<-, e0.3
  lgl$#-          %31.4 = Identical                %31.3, function(x, value) <(rir::DispatchTable*)0x558|...
  void                    Branch                   %31.4 -> BB33 (if true) | BB34 (if false)
BB32   <- [29]
  void                    Nop                !     
  val?^ | miss    %32.1 = %29.0
  dr              %32.2 = Typecheck@0x558f3b39e650[Type#20]
  goto BB12
BB12   <- [30, 32]
  val?^ | miss    %12.0 = Phi                      %30.1:BB30, %32.1:BB32
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %30.2:BB30, %32.2:BB32
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x558f3e6a4740+141: [%27.11], env=e0.3
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB33   <- [31]
  val             %33.0 = ChkMissing         e     %31.1
  lgl$#-          %33.1 = IsType                   %33.0 isA real+
  void                    Branch                   %33.1 -> BB35 (if true) | BB36 (if false)
BB34   <- [31]
  void                    Nop                !     
  val?^ | miss    %34.1 = %31.3
  dr              %34.2 = CallTarget@0x558f3b39e650[Call#8]
  goto BB14
BB35   <- [33]
  real+           %35.0 = CastType           d     dn %33.0
  val?            %35.1 = StaticCall         !v    colnames<-[0x558f3a91da10](%35.0, %27.11) { 0 1n } e0.3
  void                    StVar              lW    a, %35.1, e0.3
  (cls|spec|blt)  %35.3 = LdFun              !v    hclust, <0x558f3bc59928>, e0.3
  prom-           %35.4 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p16, e0.3
  prom-           %35.5 = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p19, e0.3
  val?            %35.6 = NamedCall          !v    %35.3(%35.4, method=%35.5) e0.3   <vec>
  void                    StVarSuper         lRW   .HC., %35.6, e0.3
  val?^ | miss    %35.8 = LdVar              eR    as.dendrogram, e0.3
  lgl$#-          %35.9 = Identical                %35.8, function(object, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %35.9 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  val             %36.1 = %33.0
  dr              %36.2 = Typecheck@0x558f3b39e650[Type#22]
  goto BB14
BB14   <- [34, 36]
  val?^ | miss    %14.0 = Phi                      %34.1:BB34, %36.1:BB36
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %34.2:BB34, %36.2:BB36
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x558f3e6a4740+214: [%27.11], env=e0.3
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB37   <- [35]
  val?^ | miss    %37.0 = LdVar              eR    .HC., e0.3
  void                    Visible            v     
  val?            %37.2 = Force!<value>      !     %37.0, e0.3   <vec>
  prom-           %37.3 = MkArg                    %37.2, mkDend[0x558f3cbe3980]_p20 (!refl), e0.3
  val?            %37.4 = StaticCall         !     as.dendrogram[0x558f3e0f7700](%37.3) { 0 } e0.3   <vec>
  void                    Return             l     %37.4
BB38   <- [35]
  fs              %38.0 = FrameState         R     0x558f3e6a4740+343: [], env=e0.3
  void                    Deopt              !v    %38.0, CallTarget@0x558f3b39e650[Call#12], %35.8   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    mkDend@Prom(0)0, e0.0
  void                    Return             l     %0.1
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is.numeric, <0x558f39dac980>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x558f39d9da90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p4, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  void                    Visible            v     
  val?            %0.5  = Eq                 !     %0.3, 1, e0.0   <lgl$->
  void                    Return             l     %0.5
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = Gte                !     %0.2, 1, e0.0   <lgl$->
  void                    Return             l     %0.4
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is.character, <0x558f39dad010>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    lab, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rGen, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p9, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <real$->
  val?^ | miss    %0.3  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.5  = Force<wrapped>     !     %0.3, e0.0   <real$->
  val?            %0.6  = Mul                !     %0.2, %0.5, e0.0   <real$->
  void                    Return             l     %0.6
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    lab, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real$->
  val?            %0.4  = Colon              !     1L, %0.3, e0.0   <int->
  void                    Return             l     %0.4
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.dist, <0x558f39fef758>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p17, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real+>
  (cls|spec|blt)  %0.4  = LdFun              !     t, <0x558f3bc6b758>, e0.0
  prom-           %0.5  = MkArg                    unboundValue, mkDend[0x558f3cbe3980]_p18, e0.0
  val?            %0.6  = Call               !     %0.4(%0.5) e0.0   <real+>
  val?            %0.7  = Add                !     %0.3, %0.6, e0.0   <real+>
  void                    Return             l     %0.7
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    a, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    method, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .HC., e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3

│ mkDend[0x558f3cbe3980]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
