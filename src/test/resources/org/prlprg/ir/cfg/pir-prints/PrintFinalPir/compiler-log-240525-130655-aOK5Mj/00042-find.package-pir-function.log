
┌──────────────────────────────────────────────────────────────────────────────┐
│ find.package[0x55bbe43ad120]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
find.package[0x55bbe43ad120]
BB0
  val?~+          %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     package=%0.2, lib.loc=%0.1, quiet=%0.0, verbose(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %0.4  = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p0, e0.3
  val?^ | miss    %0.5  = CastType                 up %0.4
  void                    StArg              lW    verbose, %0.5, e0.3
  val+            %0.7  = Force!<lazy>       !vr   %0.2,    <str$->
  lgl$-           %0.8  = Is                       %0.7, NULL
  lgl$-           %0.9  = AsLogical                %0.8
  lgl$#-          %0.10 = Identical                %0.9, false
  void                    Branch                   %0.10 -> BB2 (if true) | BB175 (if false)
BB2   <- [0]
  void                    Nop                !     
  lgl$-           %2.1  = %0.9
  goto BB3
BB175   <- [0]
  val+            %175.0 = Force!             !vr   %0.1,    <val?_>
  lgl$-           %175.1 = Is                       %175.0, NULL
  lgl$-           %175.2 = AsLogical                %175.1
  lgl$-           %175.3 = LAnd                     %0.9, %175.2
  lgl$-           %175.4 = %175.3
  goto BB3
BB3   <- [2, 175]
  lgl$-           %3.0  = Phi                      %175.4:BB175, %2.1:BB2
  lgl$-           %3.1  = %3.0
  lgl$-           %3.2  = AsLogical                %3.1
  lgl$#-          %3.3  = Identical                %3.2, false
  void                    Branch                   %3.3 -> BB174 (if true) | BB4 (if false)
BB174   <- [3]
  void                    Nop                !     
  lgl$-           %174.1 = %3.2
  goto BB7
BB4   <- [3]
  val?            %4.0  = Force!             !v    %0.5, e0.3   <val?_>
  lgl$#-          %4.1  = IsType                   %4.0 isA val?+
  void                    Branch                   %4.1 -> BB176 (if true) | BB177 (if false)
BB7   <- [174, 176]
  lgl$-           %7.0  = Phi                      %176.4:BB176, %174.1:BB174
  lgl$-           %7.1  = %7.0
  lgl$#-          %7.2  = CheckTrueFalse     e     %7.1
  void                    Branch                   %7.2 -> BB173 (if true) | BB10 (if false)
BB176   <- [4]
  val?+           %176.0 = CastType           d     dn %4.0   <val?_>
  lgl             %176.1 = Not                wed   %176.0, elided
  lgl$-           %176.2 = AsLogical          e     %176.1
  lgl$-           %176.3 = LAnd                     %3.2, %176.2
  lgl$-           %176.4 = %176.3
  goto BB7
BB177   <- [4]
  fs              %177.0 = FrameState         R     0x55bbe3e83110+63: [%3.2, %4.0], env=e0.3
  void                    Deopt              !v    %177.0, Typecheck@0x55bbe3e75ca0[Type#3], %4.0   !
BB173   <- [7]
  (cls|spec|blt)  %173.0 = LdFun              !v    path.package, e0.3
  fs              %173.1 = FrameState         R     0x55bbe3e83110+87: [%173.0], env=e0.3
  void                    Deopt              !v    %173.1, DeadCall@0x55bbe3e75ca0[Call#1], %173.0   !
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    length, e0.3
  lgl$#-          %10.1 = Identical                <blt length>, %10.0   <true>
  void                    Branch                   %10.1 -> BB178 (if true) | BB179 (if false)
BB178   <- [10]
  val?^ | miss    %178.0 = LdVar              eR    package, e0.3
  val?            %178.1 = Force!<wrapped>    !v    %178.0, e0.3   <str$->
  lgl$#-          %178.2 = IsType                   %178.1 isA val?-
  void                    Branch                   %178.2 -> BB180 (if true) | BB181 (if false)
BB179   <- [10]
  fs              %179.0 = FrameState         R     0x55bbe3e83110+71: [%7.1], env=e0.3
  void                    Deopt              !v    %179.0, DeadBranchReached@0x55bbe3e75ca0[Test#0], %10.1   !
BB180   <- [178]
  val?-           %180.0 = CastType           d     dn %178.1   <str$->
  (int|real)$-    %180.1 = CallSafeBuiltin    wed   length(%180.0)    <int$->
  lgl$#-          %180.2 = IsType                   %180.1 isA int$-
  void                    Branch                   %180.2 -> BB182 (if true) | BB183 (if false)
BB181   <- [178]
  fs              %181.0 = FrameState         R     0x55bbe3e83110+184: [<blt length>, %178.1], env=e0.3
  void                    Deopt              !v    %181.0, Typecheck@0x55bbe3e75ca0[Type#6], %178.1   !
BB182   <- [180]
  int$-           %182.0 = CastType           d     dn %180.1
  lgl$-           %182.1 = Eq                 d     %182.0, 1L, elided   <lgl$->
  lgl$-           %182.2 = AsLogical                %182.1
  lgl$#-          %182.3 = Identical                %182.2, false
  void                    Branch                   %182.3 -> BB172 (if true) | BB15 (if false)
BB183   <- [180]
  void                    Nop                !     
  (int|real)$-    %183.1 = %180.1
  dr              %183.2 = Typecheck@0x55bbe3e75ca0[Type#7]
  goto BB13
BB172   <- [182]
  void                    Nop                !     
  lgl$-           %172.1 = %182.2
  goto BB22
BB15   <- [182]
  val?^ | miss    %15.0 = LdVar              eR    %in%, e0.3
  lgl$#-          %15.1 = Identical                %15.0, function(x, table) <(rir::DispatchTable*)0x55b|...
  void                    Branch                   %15.1 -> BB184 (if true) | BB185 (if false)
BB13   <- [183, 185]
  val?^ | miss    %13.0 = Phi                      %183.1:BB183, %185.1:BB185
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %183.2:BB183, %185.2:BB185
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55bbe3e83110+206: [%180.1], env=e0.3
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB22   <- [172, 200]
  lgl$-           %22.0 = Phi                      %200.4:BB200, %172.1:BB172
  lgl$-           %22.1 = %22.0
  lgl$#-          %22.2 = CheckTrueFalse     e     %22.1
  void                    Branch                   %22.2 -> BB171 (if true) | BB23 (if false)
BB184   <- [15]
  prom-           %184.0 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p1, e0.3
  prom-           %184.1 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p2, e0.3
  val?^           %184.2 = CastType                 up %184.1
  val?^           %184.3 = CastType                 up %184.0
  env             e184.4 = MkEnv              l     x=%184.3, table=%184.2, parent=R_BaseNamespace, context 0
  prom-           %184.5 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p22, e184.4
  val?^           %184.6 = CastType                 up %184.5
  val?^ | miss    %184.7 = LdVar              eR    package, e0.3
  val?            %184.8 = Force!<wrapped>    !v    %184.7, e0.3   <str$->
  prom-           %184.9 = MkArg                    %184.8, find.package[0x55bbe43ad120]_p1 (!refl), e0.3
  val?~           %184.10 = CastType                 up %184.9
  void                    StArg              lW    x, %184.10, e184.4
  prom-           %184.12 = MkArg                    %184.8, find.package[0x55bbe43ad120]_p21 (!refl), e184.4
  val?~           %184.13 = CastType                 up %184.12
  env             e184.14 = (MkEnv)            l     x=%184.13, table=%184.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %184.15 = IsEnvStub          R     , e184.14
  void                    Branch                   %184.15 -> BB188 (if true) | BB189 (if false)
BB185   <- [15]
  void                    Nop                !     
  val?^ | miss    %185.1 = %15.0
  dr              %185.2 = CallTarget@0x55bbe3e75ca0[Call#3]
  goto BB13
BB171   <- [22]
  (cls|spec|blt)  %171.0 = LdFun              !v    file.path, e0.3
  fs              %171.1 = FrameState         R     0x55bbe3e83110+290: [%171.0], env=e0.3
  void                    Deopt              !v    %171.1, DeadCall@0x55bbe3e75ca0[Call#5], %171.0   !
BB23   <- [22]
  val?^ | miss    %23.0 = LdVar              eR    package, e0.3
  val?            %23.1 = Force!<wrapped>    !v    %23.0, e0.3   <str$->
  lgl$-           %23.2 = Is                       %23.1, NULL
  lgl$#-          %23.3 = CheckTrueFalse     e     %23.2
  void                    Branch                   %23.3 -> BB170 (if true) | BB26 (if false)
BB188   <- [184]
  val?            %188.0 = Force!<lazy>       !vL   %184.2, e184.14   <val?->
  prom-           %188.1 = MkArg                    %188.0, find.package[0x55bbe43ad120]_p22 (!refl), e184.4
  val?~           %188.2 = CastType                 up %188.1
  void                    StArg              lWd   table, %188.2, e184.14
  lgl$#-          %188.4 = IsType                   %188.0 isA val?-
  lgl$#-          %188.5 = IsEnvStub          R     , e184.14
  void                    Branch                   %188.5 -> BB194 (if true) | BB195 (if false)
BB189   <- [184]
  fs              %189.0 = FrameState         R     0x55bbe3e83110+267: [%182.2], env=e0.3
  fs              %189.1 = FrameState         R     0x55bbe244d320+54: [], env=e184.4, next=%189.0
  env             e189.2 = (MkEnv)            l     x=%184.13, table=%184.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %189.3 = FrameState         R     0x55bbe2634d40+9: [%184.8], env=e189.2, next=%189.1
  void                    Deopt              !v    %189.3, EnvStubMaterialized@0x55bbe2687cb0[Call#unknown], e184.14   !
BB170   <- [23]
  (cls|spec|blt)  %170.0 = LdFun              !v    .packages, e0.3
  fs              %170.1 = FrameState         R     0x55bbe3e83110+363: [%170.0], env=e0.3
  void                    Deopt              !v    %170.1, DeadCall@0x55bbe3e75ca0[Call#6], %170.0   !
BB26   <- [23]
  val?^ | miss    %26.0 = LdVar              eR    length, e0.3
  lgl$#-          %26.1 = Identical                <blt length>, %26.0   <true>
  void                    Branch                   %26.1 -> BB186 (if true) | BB187 (if false)
BB194   <- [188]
  lgl$#-          %194.0 = IsType                   %184.8 isA val?-
  void                    Branch                   %194.0 -> BB196 (if true) | BB197 (if false)
BB195   <- [188]
  void                    Nop                !     
  env             e195.1 = e184.14
  dr              %195.2 = EnvStubMaterialized@0x55bbe2687cb0[Call#unknown]
  goto BB18
BB186   <- [26]
  val?^ | miss    %186.0 = LdVar              eR    package, e0.3
  val?            %186.1 = Force!<wrapped>    !v    %186.0, e0.3   <str$->
  lgl$#-          %186.2 = IsType                   %186.1 isA val?-
  void                    Branch                   %186.2 -> BB190 (if true) | BB191 (if false)
BB187   <- [26]
  fs              %187.0 = FrameState         R     0x55bbe3e83110+337: [%23.1], env=e0.3
  void                    Deopt              !v    %187.0, DeadBranchReached@0x55bbe3e75ca0[Test#1], %26.1   !
BB196   <- [194]
  val?-           %196.0 = CastType           d     dn %184.8   <(int|str)->
  void                    Branch                   %188.4 -> BB198 (if true) | BB199 (if false)
BB197   <- [194]
  void                    Nop                !     
  val?            %197.1 = %184.8
  dr              %197.2 = Typecheck@0x55bbe2687cb0[Type#0]
  goto BB18
BB18   <- [195, 197, 199]
  val?^ | miss    %18.0 = Phi                      e195.1:BB195, %197.1:BB197, %199.1:BB199
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %195.2:BB195, %197.2:BB197, %199.2:BB199
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55bbe3e83110+267: [%182.2], env=e0.3
  fs              %18.5 = FrameState         R     0x55bbe244d320+54: [], env=e184.4, next=%18.4
  fs              %18.6 = FrameState         R     0x55bbe2634d40+23: [%184.8, %188.0], env=e184.14, next=%18.5
  void                    Deopt              !v    %18.6, %18.3, %18.1   !
BB190   <- [186]
  val?-           %190.0 = CastType           d     dn %186.1   <str$->
  (int|real)$-    %190.1 = CallSafeBuiltin    wed   length(%190.0)    <int$->
  lgl$#-          %190.2 = IsType                   %190.1 isA int$-
  void                    Branch                   %190.2 -> BB192 (if true) | BB193 (if false)
BB191   <- [186]
  fs              %191.0 = FrameState         R     0x55bbe3e83110+468: [<blt length>, %186.1], env=e0.3
  void                    Deopt              !v    %191.0, Typecheck@0x55bbe3e75ca0[Type#18], %186.1   !
BB198   <- [196]
  val?-           %198.0 = CastType           d     dn %188.0
  val+            %198.1 = CallSafeBuiltin    wed   match(%196.0, %198.0, 0L, nil)    <int->
  lgl$#-          %198.2 = IsType                   %198.1 isA int-
  void                    Branch                   %198.2 -> BB200 (if true) | BB201 (if false)
BB199   <- [196]
  void                    Nop                !     
  val?            %199.1 = %188.0
  dr              %199.2 = Typecheck@0x55bbe2687cb0[Type#1]
  goto BB18
BB192   <- [190]
  int$-           %192.0 = CastType           d     dn %190.1
  lgl$-           %192.1 = Not                d     %192.0, elided
  lgl$#-          %192.2 = CheckTrueFalse     e     %192.1
  void                    Branch                   %192.2 -> BB169 (if true) | BB31 (if false)
BB193   <- [190]
  fs              %193.0 = FrameState         R     0x55bbe3e83110+490: [%190.1], env=e0.3
  void                    Deopt              !v    %193.0, Typecheck@0x55bbe3e75ca0[Type#19], %190.1   !
BB200   <- [198]
  int-            %200.0 = CastType           d     dn %198.1
  lgl-            %200.1 = Gt                 wed   %200.0, 0L, elided   <lgl->
  lgl$-           %200.2 = AsLogical                %200.1
  lgl$-           %200.3 = LAnd                     %182.2, %200.2
  lgl$-           %200.4 = %200.3
  goto BB22
BB201   <- [198]
  fs              %201.0 = FrameState         R     0x55bbe3e83110+267: [%182.2], env=e0.3
  fs              %201.1 = FrameState         R     0x55bbe244d320+54: [], env=e184.4, next=%201.0
  fs              %201.2 = FrameState         R     0x55bbe2634d40+69: [%198.1], env=e184.14, next=%201.1
  void                    Deopt              !v    %201.2, Typecheck@0x55bbe347f688[Type#2], %198.1   !
BB169   <- [192]
  (cls|spec|blt)  %169.0 = LdFun              !v    character, e0.3
  fs              %169.1 = FrameState         R     0x55bbe3e83110+512: [%169.0], env=e0.3
  void                    Deopt              !v    %169.1, DeadCall@0x55bbe3e75ca0[Call#8], %169.0   !
BB31   <- [192]
  val?^ | miss    %31.0 = LdVar              eR    lib.loc, e0.3
  val?            %31.1 = Force!<lazy>       !v    %31.0, e0.3   <str->
  lgl$-           %31.2 = Is                       %31.1, NULL
  void                    StVar              lW    use_loaded, %31.2, e0.3
  lgl$#-          %31.4 = CheckTrueFalse     e     %31.2
  void                    Branch                   %31.4 -> BB168 (if true) | BB34 (if false)
BB168   <- [31]
  (cls|spec|blt)  %168.0 = LdFun              !v    .libPaths, e0.3
  fs              %168.1 = FrameState         R     0x55bbe3e83110+586: [%168.0], env=e0.3
  void                    Deopt              !v    %168.1, DeadCall@0x55bbe3e75ca0[Call#9], %168.0   !
BB34   <- [31]
  val?^ | miss    %34.0 = LdVar              eR    character, e0.3
  lgl$#-          %34.1 = Identical                %34.0, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %34.1 -> BB202 (if true) | BB203 (if false)
BB202   <- [34]
  str-            %202.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    bad, %202.0, e0.3
  str-            %202.2 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    out, %202.2, e0.3
  val?^ | miss    %202.4 = LdVar              eR    package, e0.3
  val?            %202.5 = Force!<wrapped>    !v    %202.4, e0.3   <str$->
  val?+           %202.6 = ToForSeq           e     %202.5
  int$-           %202.7 = Length                   %202.6
  int$-           %202.8 = Inc                      0L
  lgl$-           %202.9 = Lt                 d     %202.7, %202.8, elided   <false>
  lgl$#-          %202.10 = Identical                %202.9, true
  void                    Branch                   %202.10 -> BB205 (if true) | BB204 (if false)
BB203   <- [34]
  fs              %203.0 = FrameState         R     0x55bbe3e83110+570: [%31.2], env=e0.3
  void                    Deopt              !v    %203.0, CallTarget@0x55bbe3e75ca0[Call#10], %34.0   !
BB205   <- [202]
  fs              %205.0 = FrameState         R     0x55bbe3e83110+713: [%202.5], env=e0.3
  void                    Deopt              !v    %205.0, DeadBranchReached@0x55bbe3e75ca0[Test#2], %202.10   !
BB204   <- [202]
  val?            %204.0 = Extract2_1D        wed   %202.6, %202.8, elided
  void                    StVar              lW    pkg, %204.0, e0.3
  val?^ | miss    %204.2 = LdVar              eR    file.path, e0.3
  lgl$#-          %204.3 = Identical                %204.2, function(..., fsep=$(.Platform, file.sep)) <(r|...
  void                    Branch                   %204.3 -> BB206 (if true) | BB207 (if false)
BB206   <- [204]
  prom-           %206.0 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p3, e0.3
  prom-           %206.1 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p4 (!refl), e0.3
  dots-           %206.2 = DotsList           l     %206.0, %206.1
  ct              %206.3 = PushContext        lCL   %206.2, file.path(lib.loc, pkg), function(..., fsep=$(.Platform, file.sep)) <(r|..., e0.3
  env             e206.4 = MkEnv              l     ...=%206.2, fsep(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %206.5 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p26, e206.4
  val?^ | miss    %206.6 = CastType                 up %206.5
  void                    StArg              lW    fsep, %206.6, e206.4
  val?^ | miss    %206.8 = CastType                 up %206.0
  val?^ | miss    %206.9 = CastType                 up %206.1
  val?            %206.10 = Force!             !vL   %206.8, e206.4
  val?            %206.11 = Force!             !vrL  %206.9, e206.4
  val+            %206.12 = CallSafeBuiltin    wed   list(%206.10, %206.11)    <vec->
  val?            %206.13 = Force!<lazy>       !vL   %206.6, e206.4   <str$->
  val?            %206.14 = CallBuiltin        !v    file.path(%206.12, %206.13) e206.4
  val?            %206.15 = PopContext         C     %206.14, %206.3   <str->
  void                    StVar              lW    paths, %206.15, e0.3
  lgl$#-          %206.17 = IsType                   %206.15 isA val+   <true>
  val             %206.18 = ChkMissing         e     %206.15
  void                    Branch                   %206.17 -> BB208 (if true) | BB209 (if false)
BB207   <- [204]
  fs              %207.0 = FrameState         R     0x55bbe3e83110+758: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %207.0, CallTarget@0x55bbe3e75ca0[Call#12], %204.2   !
BB208   <- [206]
  val?^ | miss    %208.0 = LdVar              eR    file.exists, e0.3
  lgl$#-          %208.1 = Identical                %208.0, function(...) <(rir::DispatchTable*)0x55bbe3e6|...
  void                    Branch                   %208.1 -> BB210 (if true) | BB211 (if false)
BB209   <- [206]
  void                    Nop                !     
  lgl$#-          %209.1 = %206.17
  dr              %209.2 = DeadBranchReached@0x55bbe3e75ca0[Test#3]
  goto BB39
BB210   <- [208]
  prom-           %210.0 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p5, e0.3
  dots-           %210.1 = DotsList           l     %210.0
  ct              %210.2 = PushContext        lCL   %210.1, file.exists(file.path(paths, "DESCRIPTION")), function(...) <(rir::DispatchTable*)0x55bbe3e6|..., e0.3
  val?^ | miss    %210.3 = CastType                 up %210.0
  env             e210.4 = MkEnv              l     ...=%210.1, parent=R_BaseNamespace, context 1
  val?            %210.5 = Force!             !vL   %210.3, e210.4
  val?            %210.6 = CallBuiltin        !v    c(%210.5) e210.4   <str->
  val?            %210.7 = CallBuiltin        !v    file.exists(%210.6) e210.4
  val?            %210.8 = PopContext         C     %210.7, %210.2   <lgl->
  lgl$#-          %210.9 = IsType                   %210.8 isA lgl-
  lgl$#-          %210.10 = IsType                   %206.15 isA val?-
  void                    Branch                   %210.10 -> BB212 (if true) | BB213 (if false)
BB211   <- [208]
  void                    Nop                !     
  val?^ | miss    %211.1 = %208.0
  dr              %211.2 = CallTarget@0x55bbe3e75ca0[Call#15]
  goto BB39
BB39   <- [209, 211]
  val?^ | miss    %39.0 = Phi                      %209.1:BB209, %211.1:BB211
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %209.2:BB209, %211.2:BB211
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55bbe3e83110+809: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %39.4, %39.3, %39.1   !
BB212   <- [210]
  val?-           %212.0 = CastType           d     dn %206.15   <str->
  void                    Branch                   %210.9 -> BB214 (if true) | BB215 (if false)
BB213   <- [210]
  void                    Nop                !     
  val?            %213.1 = %206.15
  dr              %213.2 = Typecheck@0x55bbe3e75ca0[Type#28]
  goto BB41
BB214   <- [212]
  lgl-            %214.0 = CastType           d     dn %210.8
  val?            %214.1 = Extract1_1D        wed   %212.0, %214.0, elided   <str->
  void                    StVar              lW    paths, %214.1, e0.3
  val?^ | miss    %214.3 = LdVar              eR    use_loaded, e0.3
  lgl$#-          %214.4 = IsType                   %214.3 isA lgl$-
  void                    Branch                   %214.4 -> BB216 (if true) | BB217 (if false)
BB215   <- [212]
  void                    Nop                !     
  val?            %215.1 = %210.8
  dr              %215.2 = Typecheck@0x55bbe3e75ca0[Type#35]
  goto BB41
BB41   <- [213, 215]
  val?^ | miss    %41.0 = Phi                      %213.1:BB213, %215.1:BB215
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %213.2:BB213, %215.2:BB215
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x55bbe3e83110+886: [%202.6, %202.7, %202.8, %206.15, %210.8], env=e0.3
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB216   <- [214]
  lgl$-           %216.0 = CastType           d     dn %214.3
  lgl$-           %216.1 = AsLogical                %216.0
  lgl$#-          %216.2 = Identical                %216.1, false
  void                    Branch                   %216.2 -> BB46 (if true) | BB45 (if false)
BB217   <- [214]
  void                    Nop                !     
  val?^ | miss    %217.1 = %214.3
  dr              %217.2 = Typecheck@0x55bbe3e75ca0[Type#37]
  goto BB43
BB46   <- [216]
  lgl$#-          %46.0 = CheckTrueFalse     e     %216.1
  void                    Branch                   %46.0 -> BB163 (if true) | BB47 (if false)
BB45   <- [216]
  (cls|spec|blt)  %45.0 = LdFun              !v    isNamespaceLoaded, e0.3
  fs              %45.1 = FrameState         R     0x55bbe3e83110+933: [%202.6, %202.7, %202.8, %216.1, %45.0], env=e0.3
  void                    Deopt              !v    %45.1, DeadCall@0x55bbe3e75ca0[Call#17], %45.0   !
BB43   <- [217, 221, 223]
  val?^ | miss    %43.0 = Phi                      %217.1:BB217, %221.1:BB221, %223.1:BB223
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %217.2:BB217, %221.2:BB221, %223.2:BB223
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x55bbe3e83110+907: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB163   <- [46]
  val?^ | miss    %163.0 = LdVar              eR    pkg, e0.3
  val?            %163.1 = Force!             !v    %163.0, e0.3   <val?_>
  lgl$#-          %163.2 = IsType                   %163.1 isA val?+
  void                    Branch                   %163.2 -> BB218 (if true) | BB219 (if false)
BB47   <- [46]
  val?^ | miss    %47.0 = LdVar              eR    length, e0.3
  lgl$#-          %47.1 = Identical                <blt length>, %47.0   <true>
  void                    Branch                   %47.1 -> BB220 (if true) | BB221 (if false)
BB218   <- [163]
  val?+           %218.0 = CastType           d     dn %163.1   <val?_>
  lgl             %218.1 = Eq                 wed   %218.0, "base", elided   <val?_>
  lgl$#-          %218.2 = CheckTrueFalse     we    %218.1
  void                    Branch                   %218.2 -> BB167 (if true) | BB166 (if false)
BB219   <- [163]
  fs              %219.0 = FrameState         R     0x55bbe3e83110+987: [%202.6, %202.7, %202.8, %163.1], env=e0.3
  void                    Deopt              !v    %219.0, Typecheck@0x55bbe3e75ca0[Type#40], %163.1   !
BB220   <- [47]
  val             %220.0 = ChkMissing         e     %214.1
  lgl$#-          %220.1 = IsType                   %220.0 isA val?~- | miss
  void                    Branch                   %220.1 -> BB222 (if true) | BB223 (if false)
BB221   <- [47]
  void                    Nop                !     
  lgl$#-          %221.1 = %47.1
  dr              %221.2 = DeadBranchReached@0x55bbe3e75ca0[Test#5]
  goto BB43
BB167   <- [218]
  (cls|spec|blt)  %167.0 = LdFun              !v    system.file, e0.3
  fs              %167.1 = FrameState         R     0x55bbe3e83110+1062: [%202.6, %202.7, %202.8, %167.0], env=e0.3
  void                    Deopt              !v    %167.1, DeadCall@0x55bbe3e75ca0[Call#20], %167.0   !
BB166   <- [218]
  (cls|spec|blt)  %166.0 = LdFun              !v    .getNamespaceInfo, e0.3
  fs              %166.1 = FrameState         R     0x55bbe3e83110+1015: [%202.6, %202.7, %202.8, %166.0], env=e0.3
  void                    Deopt              !v    %166.1, DeadCall@0x55bbe3e75ca0[Call#18], %166.0   !
BB222   <- [220]
  val-            %222.0 = CastType           d     dn %220.0   <str->
  (int|real)$-    %222.1 = CallSafeBuiltin    wed   length(%222.0)    <int$->
  lgl$#-          %222.2 = IsType                   %222.1 isA int$-
  void                    Branch                   %222.2 -> BB224 (if true) | BB225 (if false)
BB223   <- [220]
  void                    Nop                !     
  val             %223.1 = %220.0
  dr              %223.2 = Typecheck@0x55bbe3e75ca0[Type#52]
  goto BB43
BB224   <- [222]
  int$-           %224.0 = CastType           d     dn %222.1
  lgl$-           %224.1 = AsLogical                %224.0
  lgl$#-          %224.2 = Identical                %224.1, false
  void                    Branch                   %224.2 -> BB162 (if true) | BB50 (if false)
BB225   <- [222]
  void                    Nop                !     
  (int|real)$-    %225.1 = %222.1
  dr              %225.2 = Typecheck@0x55bbe3e75ca0[Type#53]
  goto BB48
BB162   <- [224]
  void                    Nop                !     
  lgl$-           %162.1 = %224.1
  goto BB53
BB50   <- [224]
  val?^ | miss    %50.0 = LdVar              eR    file.exists, e0.3
  lgl$#-          %50.1 = Identical                %50.0, function(...) <(rir::DispatchTable*)0x55bbe3e6|...
  void                    Branch                   %50.1 -> BB226 (if true) | BB227 (if false)
BB48   <- [225, 227]
  val?^ | miss    %48.0 = Phi                      %225.1:BB225, %227.1:BB227
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %225.2:BB225, %227.2:BB227
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x55bbe3e83110+1313: [%202.6, %202.7, %202.8, %222.1], env=e0.3
  void                    Deopt              !v    %48.4, %48.3, %48.1   !
BB53   <- [162, 230]
  lgl$-           %53.0 = Phi                      %230.3:BB230, %162.1:BB162
  lgl$-           %53.1 = %53.0
  lgl$#-          %53.2 = CheckTrueFalse     e     %53.1
  void                    Branch                   %53.2 -> BB157 (if true) | BB56 (if false)
BB226   <- [50]
  prom-           %226.0 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p7, e0.3
  dots-           %226.1 = DotsList           l     %226.0
  ct              %226.2 = PushContext        lCL   %226.1, file.exists(file.path([(paths, 1), "dummy_for_|..., function(...) <(rir::DispatchTable*)0x55bbe3e6|..., e0.3
  val?^ | miss    %226.3 = CastType                 up %226.0
  env             e226.4 = MkEnv              l     ...=%226.1, parent=R_BaseNamespace, context 1
  val?            %226.5 = Force!             !vL   %226.3, e226.4
  val?            %226.6 = CallBuiltin        !v    c(%226.5) e226.4   <str->
  val?            %226.7 = CallBuiltin        !v    file.exists(%226.6) e226.4
  val?            %226.8 = PopContext         C     %226.7, %226.2   <lgl$->
  lgl$#-          %226.9 = IsType                   %226.8 isA lgl$-
  void                    Branch                   %226.9 -> BB230 (if true) | BB231 (if false)
BB227   <- [50]
  void                    Nop                !     
  val?^ | miss    %227.1 = %50.0
  dr              %227.2 = CallTarget@0x55bbe3e75ca0[Call#23]
  goto BB48
BB157   <- [53]
  val?^ | miss    %157.0 = LdVar              eR    c, e0.3
  lgl$#-          %157.1 = Identical                <blt c>, %157.0   <@?>
  void                    Branch                   %157.1 -> BB159 (if true) | BB158 (if false)
BB56   <- [53]
  val?^ | miss    %56.0 = LdVar              eR    length, e0.3
  lgl$#-          %56.1 = Identical                <blt length>, %56.0   <true>
  void                    Branch                   %56.1 -> BB228 (if true) | BB229 (if false)
BB230   <- [226]
  lgl$-           %230.0 = CastType           d     dn %226.8
  lgl$-           %230.1 = AsLogical                %230.0
  lgl$-           %230.2 = LAnd                     %224.1, %230.1
  lgl$-           %230.3 = %230.2
  goto BB53
BB231   <- [226]
  fs              %231.0 = FrameState         R     0x55bbe3e83110+1357: [%202.6, %202.7, %202.8, %224.1, %226.8], env=e0.3
  void                    Deopt              !v    %231.0, Typecheck@0x55bbe3e75ca0[Type#57], %226.8   !
BB159   <- [157]
  val?^ | miss    %159.0 = LdVar              eR    bad, e0.3
  val?            %159.1 = Force!             !v    %159.0, e0.3   <val?_>
  val?^ | miss    %159.2 = LdVar              eR    pkg, e0.3
  val?            %159.3 = Force!             !v    %159.2, e0.3   <val?_>
  lgl$#-          %159.4 = IsType                   %159.3 isA val?+
  lgl$#-          %159.5 = IsType                   %159.1 isA val?+
  void                    Branch                   %159.5 -> BB234 (if true) | BB235 (if false)
BB158   <- [157]
  (cls|spec|blt)  %158.0 = LdFun              !v    c, e0.3
  fs              %158.1 = FrameState         R     0x55bbe3e83110+1403: [%202.6, %202.7, %202.8, %158.0], env=e0.3
  void                    Deopt              !v    %158.1, DeadCall@0x55bbe3e75ca0[Call#25], %158.0   !
BB228   <- [56]
  val?^ | miss    %228.0 = LdVar              eR    paths, e0.3
  lgl$#-          %228.1 = IsType                   %228.0 isA val?~- | miss
  void                    Branch                   %228.1 -> BB232 (if true) | BB233 (if false)
BB229   <- [56]
  void                    Nop                !     
  lgl$#-          %229.1 = %56.1
  dr              %229.2 = DeadBranchReached@0x55bbe3e75ca0[Test#8]
  goto BB54
BB234   <- [159]
  val?+           %234.0 = CastType           d     dn %159.1   <val?_>
  void                    Branch                   %159.4 -> BB236 (if true) | BB237 (if false)
BB235   <- [159]
  void                    Nop                !     
  val?            %235.1 = %159.1
  dr              %235.2 = Typecheck@0x55bbe3e75ca0[Type#60]
  goto BB160
BB232   <- [228]
  val?~- | miss   %232.0 = CastType           d     dn %228.0
  val?-           %232.1 = Force!<value>            %232.0,    <str->
  (int|real)$-    %232.2 = CallSafeBuiltin    wed   length(%232.1)    <int$->
  lgl$#-          %232.3 = IsType                   %232.2 isA int$-
  void                    Branch                   %232.3 -> BB238 (if true) | BB239 (if false)
BB233   <- [228]
  void                    Nop                !     
  val?^ | miss    %233.1 = %228.0
  dr              %233.2 = Typecheck@0x55bbe3e75ca0[Type#64]
  goto BB54
BB54   <- [229, 233]
  val?^ | miss    %54.0 = Phi                      %229.1:BB229, %233.1:BB233
  val?^ | miss    %54.1 = %54.0
  dr              %54.2 = Phi                      %229.2:BB229, %233.2:BB233
  dr              %54.3 = %54.2
  fs              %54.4 = FrameState         R     0x55bbe3e83110+1364: [%202.6, %202.7, %202.8, %53.1], env=e0.3
  void                    Deopt              !v    %54.4, %54.3, %54.1   !
BB236   <- [234]
  val?+           %236.0 = CastType           d     dn %159.3   <val?_>
  val+            %236.1 = CallSafeBuiltin    wed   c(%234.0, %236.0)    <val?_>
  void                    StVar              lW    bad, %236.1, e0.3
  goto BB70
BB237   <- [234]
  void                    Nop                !     
  val?            %237.1 = %159.3
  dr              %237.2 = Typecheck@0x55bbe3e75ca0[Type#61]
  goto BB160
BB160   <- [235, 237]
  val?^ | miss    %160.0 = Phi                      %235.1:BB235, %237.1:BB237
  val?^ | miss    %160.1 = %160.0
  dr              %160.2 = Phi                      %235.2:BB235, %237.2:BB237
  dr              %160.3 = %160.2
  fs              %160.4 = FrameState         R     0x55bbe3e83110+1463: [%202.6, %202.7, %202.8, <blt c>, %159.1, %159.3], env=e0.3
  void                    Deopt              !v    %160.4, %160.3, %160.1   !
BB238   <- [232]
  int$-           %238.0 = CastType           d     dn %232.2
  lgl$#-          %238.1 = CheckTrueFalse     e     %238.0
  void                    Branch                   %238.1 -> BB105 (if true) | BB59 (if false)
BB239   <- [232]
  void                    Nop                !     
  (int|real)$-    %239.1 = %232.2
  dr              %239.2 = Typecheck@0x55bbe3e75ca0[Type#65]
  goto BB57
BB70   <- [236, 258, 266]
  int$-           %70.0 = Inc                      %202.8
  lgl$-           %70.1 = Lt                 d     %202.7, %70.0, elided
  lgl$#-          %70.2 = Identical                %70.1, true
  void                    Branch                   %70.2 -> BB72 (if true) | BB71 (if false)
BB105   <- [238]
  val?^ | miss    %105.0 = LdVar              eR    unique, e0.3
  lgl$#-          %105.1 = Identical                %105.0, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %105.1 -> BB240 (if true) | BB241 (if false)
BB59   <- [238]
  void                    Nop                !     
  goto BB60
BB57   <- [239, 241]
  val?^ | miss    %57.0 = Phi                      %239.1:BB239, %241.1:BB241
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %239.2:BB239, %241.2:BB241
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x55bbe3e83110+1600: [%202.6, %202.7, %202.8, %232.2], env=e0.3
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB72   <- [70]
  val?^ | miss    %72.0 = LdVar              eR    quiet, e0.3
  val?            %72.1 = Force!<value>      !v    %72.0, e0.3   <lgl$->
  lgl$#-          %72.2 = IsType                   %72.1 isA lgl$-
  void                    Branch                   %72.2 -> BB248 (if true) | BB249 (if false)
BB71   <- [70]
  val?            %71.0 = Extract2_1D        wed   %202.6, %70.0, elided
  void                    StVar              lW    pkg, %71.0, e0.3
  (cls|spec|blt)  %71.2 = LdFun              !v    file.path, e0.3
  fs              %71.3 = FrameState         R     0x55bbe3e83110+2921: [%202.6, %202.7, %70.0, %71.2], env=e0.3
  void                    Deopt              !v    %71.3, DeadCall@0x55bbe3e75ca0[Call#52], %71.2   !
BB240   <- [105]
  val?            %240.0 = StaticCall         !v    unique[0x55bbe3f9f350](%232.1) { 0 } e0.3   <str$->
  void                    StVar              lW    paths, %240.0, e0.3
  (cls|spec|blt)  %240.2 = LdFun              !v    $, <0x55bbe1e1fc10>, e0.3
  prom-           %240.3 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p11, e0.3
  prom-           %240.4 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p12, e0.3
  val?            %240.5 = Call               !v    %240.2(%240.3, %240.4) e0.3   <str$->
  void                    StVar              lW    valid_package_version_regexp, %240.5, e0.3
  val?^ | miss    %240.7 = LdVar              eR    lapply, e0.3
  lgl$#-          %240.8 = Identical                %240.7, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %240.8 -> BB246 (if true) | BB247 (if false)
BB241   <- [105]
  void                    Nop                !     
  val?^ | miss    %241.1 = %105.0
  dr              %241.2 = CallTarget@0x55bbe3e75ca0[Call#27]
  goto BB57
BB60   <- [59, 312]
  val?^ | miss    %60.0 = LdVar              eR    length, e0.3
  lgl$#-          %60.1 = Identical                <blt length>, %60.0   <true>
  void                    Branch                   %60.1 -> BB242 (if true) | BB243 (if false)
BB248   <- [72]
  lgl$-           %248.0 = CastType           d     dn %72.1
  lgl$-           %248.1 = Not                d     %248.0, elided
  lgl$-           %248.2 = AsLogical                %248.1
  lgl$#-          %248.3 = Identical                %248.2, false
  void                    Branch                   %248.3 -> BB94 (if true) | BB75 (if false)
BB249   <- [72]
  fs              %249.0 = FrameState         R     0x55bbe3e83110+5064: [%72.1], env=e0.3
  void                    Deopt              !v    %249.0, Typecheck@0x55bbe3e75ca0[Type#256], %72.1   !
BB246   <- [240]
  prom-           %246.0 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p13, e0.3
  cls             %246.1 = MkCls                    find.package@Prom(14)0, e0.3
  prom-           %246.2 = MkArg                    %246.1, find.package[0x55bbe43ad120]_p14 (!refl), e0.3
  ct              %246.3 = PushContext        lCL   %246.0, %246.2, lapply(paths, function(<lst p=R_MissingArg>, {|..., function(X, FUN, ...) <(rir::DispatchTable*)0x|..., e0.3
  cls~            %246.4 = CastType                 up %246.2
  val?^           %246.5 = CastType                 up %246.0
  env             e246.6 = MkEnv              l     X=%246.5, FUN=%246.4, ...(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %246.7 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p29 (!refl), e246.6
  val?            %246.8 = StaticCall         !v    match.fun[0x55bbe4557ab0](%246.7) e246.6   <(cls|blt)->
  void                    StVar              lW    FUN, %246.8, e246.6
  val?^ | miss    %246.10 = LdVar              eR    is.vector, e246.6
  lgl$#-          %246.11 = Identical                %246.10, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %246.11 -> BB252 (if true) | BB253 (if false)
BB247   <- [240]
  fs              %247.0 = FrameState         R     0x55bbe3e83110+1713: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %247.0, CallTarget@0x55bbe3e75ca0[Call#30], %240.7   !
BB242   <- [60]
  val?^ | miss    %242.0 = LdVar              eR    paths, e0.3
  lgl$#-          %242.1 = IsType                   %242.0 isA val?~- | miss
  void                    Branch                   %242.1 -> BB244 (if true) | BB245 (if false)
BB243   <- [60]
  void                    Nop                !     
  lgl$#-          %243.1 = %60.1
  dr              %243.2 = DeadBranchReached@0x55bbe3e75ca0[Test#17]
  goto BB61
BB94   <- [248]
  void                    Nop                !     
  lgl$-           %94.1 = %248.2
  goto BB80
BB75   <- [248]
  val?^ | miss    %75.0 = LdVar              eR    length, e0.3
  lgl$#-          %75.1 = Identical                <blt length>, %75.0   <@?>
  void                    Branch                   %75.1 -> BB77 (if true) | BB76 (if false)
BB252   <- [246]
  val?^ | miss    %252.0 = LdVar              eR    X, e246.6
  val?            %252.1 = Force!<lazy>       !v    %252.0, e246.6   <(str|vec)->
  lgl$#-          %252.2 = CallSafeBuiltin    wed   is.vector(%252.1, "any")    <lgl$->
  lgl$#-          %252.3 = Not                d     %252.2, elided
  void                    Branch                   %252.2 -> BB156 (if true) | BB112 (if false)
BB253   <- [246]
  fs              %253.0 = FrameState         R     0x55bbe3e83110+1750: [%202.6, %202.7, %202.8], env=e0.3
  fs              %253.1 = FrameState         R     0x55bbe287dc40+46: [], env=e246.6, next=%253.0
  void                    Deopt              !v    %253.1, CallTarget@0x55bbe3e69630[Call#1], %246.10   !
BB244   <- [242]
  val?~- | miss   %244.0 = CastType           d     dn %242.0
  val?-           %244.1 = Force!<value>            %244.0,    <str$->
  (int|real)$-    %244.2 = CallSafeBuiltin    wed   length(%244.1)    <int$->
  lgl$#-          %244.3 = IsType                   %244.2 isA int$-
  void                    Branch                   %244.3 -> BB250 (if true) | BB251 (if false)
BB245   <- [242]
  void                    Nop                !     
  val?^ | miss    %245.1 = %242.0
  dr              %245.2 = Typecheck@0x55bbe3e75ca0[Type#115]
  goto BB61
BB61   <- [243, 245]
  val?^ | miss    %61.0 = Phi                      %243.1:BB243, %245.1:BB245
  val?^ | miss    %61.1 = %61.0
  dr              %61.2 = Phi                      %243.2:BB243, %245.2:BB245
  dr              %61.3 = %61.2
  fs              %61.4 = FrameState         R     0x55bbe3e83110+2253: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %61.4, %61.3, %61.1   !
BB80   <- [94, 254]
  lgl$-           %80.0 = Phi                      %254.4:BB254, %94.1:BB94
  lgl$-           %80.1 = %80.0
  lgl$#-          %80.2 = CheckTrueFalse     e     %80.1
  void                    Branch                   %80.2 -> BB85 (if true) | BB81 (if false)
BB77   <- [75]
  val?^ | miss    %77.0 = LdVar              eR    bad, e0.3
  val?            %77.1 = Force!             !v    %77.0, e0.3   <val?_>
  lgl$#-          %77.2 = IsType                   %77.1 isA val?+
  void                    Branch                   %77.2 -> BB254 (if true) | BB255 (if false)
BB76   <- [75]
  (cls|spec|blt)  %76.0 = LdFun              !v    length, e0.3
  fs              %76.1 = FrameState         R     0x55bbe3e83110+5105: [%248.2, %76.0], env=e0.3
  void                    Deopt              !v    %76.1, DeadCall@0x55bbe3e75ca0[Call#92], %76.0   !
BB156   <- [252]
  val?^ | miss    %156.0 = LdVar              eR    is.object, e246.6
  lgl$#-          %156.1 = Identical                <blt is.object>, %156.0   <true>
  void                    Branch                   %156.1 -> BB268 (if true) | BB269 (if false)
BB112   <- [252]
  void                    Nop                !     
  lgl$#-          %112.1 = %252.3
  goto BB113
BB250   <- [244]
  int$-           %250.0 = CastType           d     dn %244.2
  lgl$-           %250.1 = Eq                 d     %250.0, 0L, elided   <lgl$->
  lgl$#-          %250.2 = CheckTrueFalse     e     %250.1
  void                    Branch                   %250.2 -> BB100 (if true) | BB65 (if false)
BB251   <- [244]
  fs              %251.0 = FrameState         R     0x55bbe3e83110+2344: [%202.6, %202.7, %202.8, %244.2], env=e0.3
  void                    Deopt              !v    %251.0, Typecheck@0x55bbe3e75ca0[Type#116], %244.2   !
BB85   <- [80]
  val?^ | miss    %85.0 = LdVar              eR    length, e0.3
  lgl$#-          %85.1 = Identical                <blt length>, %85.0   <@?>
  void                    Branch                   %85.1 -> BB87 (if true) | BB86 (if false)
BB81   <- [80]
  void                    Nop                !     
  goto BB82
BB254   <- [77]
  val?+           %254.0 = CastType           d     dn %77.1   <val?_>
  real$-          %254.1 = CallSafeBuiltin    wed   length(%254.0)    <val?_>
  lgl$-           %254.2 = AsLogical                %254.1
  lgl$-           %254.3 = LAnd                     %248.2, %254.2
  lgl$-           %254.4 = %254.3
  goto BB80
BB255   <- [77]
  fs              %255.0 = FrameState         R     0x55bbe3e83110+5146: [%248.2, <blt length>, %77.1], env=e0.3
  void                    Deopt              !v    %255.0, Typecheck@0x55bbe3e75ca0[Type#258], %77.1   !
BB268   <- [156]
  val?^ | miss    %268.0 = LdVar              eR    X, e246.6
  val?            %268.1 = Force!<wrapped>    !v    %268.0, e246.6   <(str|vec)->
  lgl$#-          %268.2 = CallSafeBuiltin    wed   is.object(%268.1)    <lgl$->
  lgl$-           %268.3 = LOr                      %252.3, %268.2
  lgl$-           %268.4 = %268.3
  goto BB113
BB269   <- [156]
  fs              %269.0 = FrameState         R     0x55bbe3e83110+1750: [%202.6, %202.7, %202.8], env=e0.3
  fs              %269.1 = FrameState         R     0x55bbe287dc40+78: [], env=e246.6, next=%269.0
  prom-           %269.2 = MkArg                    %252.1, find.package[0x55bbe43ad120]_p32 (!refl), e246.6
  val?~           %269.3 = CastType                 up %269.2
  env             e269.4 = (MkEnv)            l     mode(miss)="any", x=%269.3, parent=R_BaseNamespace, context 0
  fs              %269.5 = FrameState         R     0x55bbe3e814f0+41: [%252.2], env=e269.4, next=%269.1
  void                    Deopt              !v    %269.5, DeadBranchReached@0x55bbe3e69630[Test#0], %156.1   !
BB113   <- [112, 268]
  lgl$-           %113.0 = Phi                      %268.4:BB268, %112.1:BB112
  lgl$-           %113.1 = %113.0
  lgl$#-          %113.2 = CheckTrueFalse     e     %113.1
  void                    Branch                   %113.2 -> BB155 (if true) | BB114 (if false)
BB100   <- [250]
  val?^ | miss    %100.0 = LdVar              eR    c, e0.3
  lgl$#-          %100.1 = Identical                <blt c>, %100.0   <@?>
  void                    Branch                   %100.1 -> BB102 (if true) | BB101 (if false)
BB65   <- [250]
  lgl$-           %65.0 = Gt                 d     %250.0, 1L, elided   <lgl$->
  lgl$#-          %65.1 = CheckTrueFalse     e     %65.0
  void                    Branch                   %65.1 -> BB95 (if true) | BB66 (if false)
BB87   <- [85]
  val?^ | miss    %87.0 = LdVar              eR    out, e0.3
  val?            %87.1 = Force!             !v    %87.0, e0.3   <val?_>
  lgl$#-          %87.2 = IsType                   %87.1 isA val?+
  void                    Branch                   %87.2 -> BB270 (if true) | BB271 (if false)
BB86   <- [85]
  (cls|spec|blt)  %86.0 = LdFun              !v    length, e0.3
  fs              %86.1 = FrameState         R     0x55bbe3e83110+5214: [%86.0], env=e0.3
  void                    Deopt              !v    %86.1, DeadCall@0x55bbe3e75ca0[Call#93], %86.0   !
BB82   <- [81, 92]
  val?^ | miss    %82.0 = LdVar              eR    out, e0.3
  lgl$#-          %82.1 = IsType                   %82.0 isA val?~- | miss
  void                    Branch                   %82.1 -> BB260 (if true) | BB261 (if false)
BB155   <- [113]
  fs              %155.0 = FrameState         R     0x55bbe3e83110+1750: [%202.6, %202.7, %202.8], env=e0.3
  (cls|spec|blt)  %155.1 = LdFun              !v    as.list, e246.6
  fs              %155.2 = FrameState         R     0x55bbe287dc40+205: [%155.1], env=e246.6, next=%155.0
  void                    Deopt              !v    %155.2, DeadCall@0x55bbe3e69630[Call#3], %155.1   !
BB114   <- [113]
  val?^ | miss    %114.0 = LdVar              eR    X, e246.6
  val?            %114.1 = Force!<wrapped>    !v    %114.0, e246.6   <(str|vec)->
  (nil|str)-      %114.2 = Names                    %114.1
  int$-           %114.3 = Length                   %114.1
  vec-            %114.4 = CallSafeBuiltin    wed   vector("list", %114.3) 
  val+            %114.5 = SetNames           e     %114.4, %114.2
  int$#-          %114.6 = 0L
  val+            %114.7 = %114.5
  goto BB115
BB102   <- [100]
  val?^ | miss    %102.0 = LdVar              eR    bad, e0.3
  val?            %102.1 = Force!             !v    %102.0, e0.3   <val?_>
  val?^ | miss    %102.2 = LdVar              eR    pkg, e0.3
  val?            %102.3 = Force!             !v    %102.2, e0.3   <val?_>
  lgl$#-          %102.4 = IsType                   %102.3 isA val?+
  lgl$#-          %102.5 = IsType                   %102.1 isA val?+
  void                    Branch                   %102.5 -> BB256 (if true) | BB257 (if false)
BB101   <- [100]
  (cls|spec|blt)  %101.0 = LdFun              !v    c, e0.3
  fs              %101.1 = FrameState         R     0x55bbe3e83110+2400: [%202.6, %202.7, %202.8, %101.0], env=e0.3
  void                    Deopt              !v    %101.1, DeadCall@0x55bbe3e75ca0[Call#44], %101.0   !
BB95   <- [65]
  val?^ | miss    %95.0 = LdVar              eR    verbose, e0.3
  val?            %95.1 = Force!             !v    %95.0, e0.3   <val?_>
  lgl$#-          %95.2 = CheckTrueFalse     we    %95.1
  void                    Branch                   %95.2 -> BB99 (if true) | BB96 (if false)
BB66   <- [65]
  void                    Nop                !     
  goto BB67
BB270   <- [87]
  val?+           %270.0 = CastType           d     dn %87.1   <val?_>
  real$-          %270.1 = CallSafeBuiltin    wed   length(%270.0)    <val?_>
  lgl$-           %270.2 = Eq                 d     %270.1, 0L, elided   <val?_>
  lgl$#-          %270.3 = CheckTrueFalse     e     %270.2
  void                    Branch                   %270.3 -> BB93 (if true) | BB90 (if false)
BB271   <- [87]
  fs              %271.0 = FrameState         R     0x55bbe3e83110+5255: [<blt length>, %87.1], env=e0.3
  void                    Deopt              !v    %271.0, Typecheck@0x55bbe3e75ca0[Type#261], %87.1   !
BB260   <- [82]
  val?~- | miss   %260.0 = CastType           d     dn %82.0
  void                    Visible            v     
  val?-           %260.2 = Force!<value>            %260.0,    <str$->
  void                    Return             l     %260.2
BB261   <- [82]
  fs              %261.0 = FrameState         R     0x55bbe3e83110+5523: [], env=e0.3
  void                    Deopt              !v    %261.0, Typecheck@0x55bbe3e75ca0[Type#275], %82.0   !
BB115   <- [114, 116]
  int$-           %115.0 = Phi                      %114.6:BB114, %116.7:BB116
  int$-           %115.1 = %115.0
  val?            %115.2 = Phi                      %114.7:BB114, %116.8:BB116
  val?            %115.3 = %115.2
  int$-           %115.4 = Inc                      %115.1
  lgl$-           %115.5 = Lt                 d     %114.3, %115.4, elided
  lgl$#-          %115.6 = Identical                %115.5, true
  void                    Branch                   %115.6 -> BB117 (if true) | BB116 (if false)
BB256   <- [102]
  val?+           %256.0 = CastType           d     dn %102.1   <val?_>
  void                    Branch                   %102.4 -> BB258 (if true) | BB259 (if false)
BB257   <- [102]
  void                    Nop                !     
  val?            %257.1 = %102.1
  dr              %257.2 = Typecheck@0x55bbe3e75ca0[Type#120]
  goto BB103
BB99   <- [95]
  (cls|spec|blt)  %99.0 = LdFun              !v    warning, e0.3
  fs              %99.1 = FrameState         R     0x55bbe3e83110+2655: [%202.6, %202.7, %202.8, %99.0], env=e0.3
  void                    Deopt              !v    %99.1, DeadCall@0x55bbe3e75ca0[Call#46], %99.0   !
BB96   <- [95]
  val?^ | miss    %96.0 = LdVar              eR    paths, e0.3
  val?            %96.1 = Force!             !v    %96.0, e0.3   <val?_>
  lgl$#-          %96.2 = IsType                   %96.1 isA val?+
  void                    Branch                   %96.2 -> BB272 (if true) | BB273 (if false)
BB67   <- [66, 272]
  val?^ | miss    %67.0 = LdVar              eR    c, e0.3
  lgl$#-          %67.1 = Identical                <blt c>, %67.0   <true>
  void                    Branch                   %67.1 -> BB262 (if true) | BB263 (if false)
BB93   <- [270]
  (cls|spec|blt)  %93.0 = LdFun              !v    stop, e0.3
  fs              %93.1 = FrameState         R     0x55bbe3e83110+5310: [%93.0], env=e0.3
  void                    Deopt              !v    %93.1, DeadCall@0x55bbe3e75ca0[Call#94], %93.0   !
BB90   <- [270]
  val?^ | miss    %90.0 = LdVar              eR    bad, e0.3
  val?            %90.1 = Force!             !v    %90.0, e0.3   <val?_>
  val?+           %90.2 = ToForSeq           e     %90.1
  int$-           %90.3 = Length                   %90.2
  lgl$-           %90.4 = Lt                 d     %90.3, %202.8, elided   <@?>
  lgl$#-          %90.5 = Identical                %90.4, true
  void                    Branch                   %90.5 -> BB92 (if true) | BB91 (if false)
BB117   <- [115]
  val?            %117.0 = PopContext         C     %115.3, %246.3   <vec$->
  void                    StVar              lW    db, %117.0, e0.3
  val?^ | miss    %117.2 = LdVar              eR    do.call, e0.3
  lgl$#-          %117.3 = Identical                %117.2, function(what, args, quote=FALSE, envir=parent|...
  void                    Branch                   %117.3 -> BB274 (if true) | BB275 (if false)
BB116   <- [115]
  void                    StVar              lW    i, %115.4, e246.6
  (cls|spec|blt)  %116.1 = LdFun              !v    FUN, e246.6
  prom-           %116.2 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p33, e246.6
  (miss|dots)     %116.3 = LdDots             R     , e246.6
  *dots-          %116.4 = ExpandDots               %116.3
  val?            %116.5 = NamedCall          !v    %116.1(%116.2, .xpandDotsTrigger=%116.4) e246.6   <val?>
  val?            %116.6 = SetVecElt          e     %116.5, %115.3, %115.4
  int$-           %116.7 = %115.4
  val?            %116.8 = %116.6
  goto BB115
BB258   <- [256]
  val?+           %258.0 = CastType           d     dn %102.3   <val?_>
  val+            %258.1 = CallSafeBuiltin    wed   c(%256.0, %258.0)    <val?_>
  void                    StVar              lW    bad, %258.1, e0.3
  goto BB70
BB259   <- [256]
  void                    Nop                !     
  val?            %259.1 = %102.3
  dr              %259.2 = Typecheck@0x55bbe3e75ca0[Type#121]
  goto BB103
BB103   <- [257, 259]
  val?^ | miss    %103.0 = Phi                      %257.1:BB257, %259.1:BB259
  val?^ | miss    %103.1 = %103.0
  dr              %103.2 = Phi                      %257.2:BB257, %259.2:BB259
  dr              %103.3 = %103.2
  fs              %103.4 = FrameState         R     0x55bbe3e83110+2460: [%202.6, %202.7, %202.8, <blt c>, %102.1, %102.3], env=e0.3
  void                    Deopt              !v    %103.4, %103.3, %103.1   !
BB272   <- [96]
  val?+           %272.0 = CastType           d     dn %96.1   <val?_>
  val?            %272.1 = Extract1_1D        wed   %272.0, 1L, elided   <val?_>
  void                    StVar              lW    paths, %272.1, e0.3
  goto BB67
BB273   <- [96]
  fs              %273.0 = FrameState         R     0x55bbe3e83110+2705: [%202.6, %202.7, %202.8, %96.1], env=e0.3
  void                    Deopt              !v    %273.0, Typecheck@0x55bbe3e75ca0[Type#134], %96.1   !
BB262   <- [67]
  val?^ | miss    %262.0 = LdVar              eR    out, e0.3
  lgl$#-          %262.1 = IsType                   %262.0 isA val?~- | miss
  void                    Branch                   %262.1 -> BB264 (if true) | BB265 (if false)
BB263   <- [67]
  void                    Nop                !     
  lgl$#-          %263.1 = %67.1
  dr              %263.2 = DeadBranchReached@0x55bbe3e75ca0[Test#21]
  goto BB68
BB92   <- [90]
  void                    Nop                !     
  goto BB82
BB91   <- [90]
  val?            %91.0 = Extract2_1D        wed   %90.2, %202.8, elided
  void                    StVar              lW    pkg, %91.0, e0.3
  (cls|spec|blt)  %91.2 = LdFun              !v    warning, e0.3
  fs              %91.3 = FrameState         R     0x55bbe3e83110+5397: [%90.2, %90.3, %202.8, %91.2], env=e0.3
  void                    Deopt              !v    %91.3, DeadCall@0x55bbe3e75ca0[Call#97], %91.2   !
BB274   <- [117]
  prom-           %274.0 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p15 (!refl), e0.3
  val?            %274.1 = StaticCall         !v    do.call[0x55bbe43a1c80]("rbind", %274.0) e0.3   <str+>
  void                    StVar              lW    db, %274.1, e0.3
  val?^ | miss    %274.3 = LdVar              eR    &, e0.3
  lgl$#-          %274.4 = Identical                <blt &>, %274.3   <true>
  void                    Branch                   %274.4 -> BB276 (if true) | BB277 (if false)
BB275   <- [117]
  fs              %275.0 = FrameState         R     0x55bbe3e83110+1764: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %275.0, CallTarget@0x55bbe3e75ca0[Call#31], %117.2   !
BB264   <- [262]
  val?~- | miss   %264.0 = CastType           d     dn %262.0
  val?-           %264.1 = Force!<value>            %264.0,    <str->
  val?^ | miss    %264.2 = LdVar              eR    paths, e0.3
  lgl$#-          %264.3 = IsType                   %264.2 isA val?~- | miss
  void                    Branch                   %264.3 -> BB266 (if true) | BB267 (if false)
BB265   <- [262]
  void                    Nop                !     
  val?^ | miss    %265.1 = %262.0
  dr              %265.2 = Typecheck@0x55bbe3e75ca0[Type#138]
  goto BB68
BB68   <- [263, 265, 267]
  val?^ | miss    %68.0 = Phi                      %263.1:BB263, %265.1:BB265, %267.1:BB267
  val?^ | miss    %68.1 = %68.0
  dr              %68.2 = Phi                      %263.2:BB263, %265.2:BB265, %267.2:BB267
  dr              %68.3 = %68.2
  fs              %68.4 = FrameState         R     0x55bbe3e83110+2763: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %68.4, %68.3, %68.1   !
BB276   <- [274]
  val?^ | miss    %276.0 = LdVar              eR    apply, e0.3
  lgl$#-          %276.1 = Identical                %276.0, function(X, MARGIN, FUN, ..., simplify=TRUE) <|...
  void                    Branch                   %276.1 -> BB278 (if true) | BB279 (if false)
BB277   <- [274]
  void                    Nop                !     
  lgl$#-          %277.1 = %274.4
  dr              %277.2 = DeadBranchReached@0x55bbe3e75ca0[Test#9]
  goto BB120
BB266   <- [264]
  val?~- | miss   %266.0 = CastType           d     dn %264.2
  val?-           %266.1 = Force!<value>            %266.0,    <str$->
  val+            %266.2 = CallSafeBuiltin    wed   c(%264.1, %266.1)    <str$->
  void                    StVar              lW    out, %266.2, e0.3
  goto BB70
BB267   <- [264]
  void                    Nop                !     
  val?^ | miss    %267.1 = %264.2
  dr              %267.2 = Typecheck@0x55bbe3e75ca0[Type#139]
  goto BB68
BB278   <- [276]
  prom-           %278.0 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p16, e0.3
  prom-           %278.1 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p18, e0.3
  val?            %278.2 = Call               !v    function(X, MARGIN, FUN, ..., simplify=TRUE) <|...(%278.0, 1L, %278.1) e0.3   <lgl$->
  lgl$#-          %278.3 = IsType                   %278.2 isA lgl$-
  void                    Branch                   %278.3 -> BB280 (if true) | BB281 (if false)
BB279   <- [276]
  void                    Nop                !     
  val?^ | miss    %279.1 = %276.0
  dr              %279.2 = CallTarget@0x55bbe3e75ca0[Call#40]
  goto BB120
BB120   <- [277, 279]
  val?^ | miss    %120.0 = Phi                      %277.1:BB277, %279.1:BB279
  val?^ | miss    %120.1 = %120.0
  dr              %120.2 = Phi                      %277.2:BB277, %279.2:BB279
  dr              %120.3 = %120.2
  fs              %120.4 = FrameState         R     0x55bbe3e83110+1815: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %120.4, %120.3, %120.1   !
BB280   <- [278]
  lgl$-           %280.0 = CastType           d     dn %278.2
  val?^ | miss    %280.1 = LdVar              eR    db, e0.3
  lgl$#-          %280.2 = IsType                   %280.1 isA val?~+ | miss
  void                    Branch                   %280.2 -> BB282 (if true) | BB283 (if false)
BB281   <- [278]
  void                    Nop                !     
  val?            %281.1 = %278.2
  dr              %281.2 = Typecheck@0x55bbe3e75ca0[Type#99]
  goto BB122
BB282   <- [280]
  val?~+ | miss   %282.0 = CastType           d     dn %280.1
  val?+           %282.1 = Force!<value>            %282.0,    <str+>
  lgl$#-          %282.2 = IsType                   %282.1 isA val+   <true>
  void                    Branch                   %282.2 -> BB284 (if true) | BB285 (if false)
BB283   <- [280]
  void                    Nop                !     
  val?^ | miss    %283.1 = %280.1
  dr              %283.2 = Typecheck@0x55bbe3e75ca0[Type#100]
  goto BB122
BB122   <- [281, 283, 285]
  val?^ | miss    %122.0 = Phi                      %281.1:BB281, %283.1:BB283, %285.1:BB285
  val?^ | miss    %122.1 = %122.0
  dr              %122.2 = Phi                      %281.2:BB281, %283.2:BB283, %285.2:BB285
  dr              %122.3 = %122.2
  fs              %122.4 = FrameState         R     0x55bbe3e83110+1987: [%202.6, %202.7, %202.8, <blt &>, <blt &>, %278.2], env=e0.3
  void                    Deopt              !v    %122.4, %122.3, %122.1   !
BB284   <- [282]
  val?            %284.0 = Extract1_2D        wed   %282.1, missingArg, "Package", elided   <str$+>
  lgl$#-          %284.1 = IsType                   %284.0 isA val?+
  val?^ | miss    %284.2 = LdVar              eR    pkg, e0.3
  lgl$#-          %284.3 = IsType                   %284.2 isA val?~- | miss
  void                    Branch                   %284.3 -> BB286 (if true) | BB287 (if false)
BB285   <- [282]
  void                    Nop                !     
  lgl$#-          %285.1 = %282.2
  dr              %285.2 = DeadBranchReached@0x55bbe3e75ca0[Test#14]
  goto BB122
BB286   <- [284]
  val?~- | miss   %286.0 = CastType           d     dn %284.2
  val?-           %286.1 = Force!<value>            %286.0,    <str$->
  void                    Branch                   %284.1 -> BB288 (if true) | BB289 (if false)
BB287   <- [284]
  void                    Nop                !     
  val?^ | miss    %287.1 = %284.2
  dr              %287.2 = Typecheck@0x55bbe3e75ca0[Type#102]
  goto BB124
BB288   <- [286]
  val?+           %288.0 = CastType           d     dn %284.0   <str$+>
  lgl             %288.1 = Eq                 wed   %288.0, %286.1, elided   <lgl$+>
  lgl$#-          %288.2 = IsType                   %288.1 isA lgl$+
  void                    Branch                   %288.2 -> BB290 (if true) | BB291 (if false)
BB289   <- [286]
  void                    Nop                !     
  val?            %289.1 = %284.0
  dr              %289.2 = Typecheck@0x55bbe3e75ca0[Type#101]
  goto BB124
BB124   <- [287, 289]
  val?^ | miss    %124.0 = Phi                      %287.1:BB287, %289.1:BB289
  val?^ | miss    %124.1 = %124.0
  dr              %124.2 = Phi                      %287.2:BB287, %289.2:BB289
  dr              %124.3 = %124.2
  fs              %124.4 = FrameState         R     0x55bbe3e83110+2054: [%202.6, %202.7, %202.8, <blt &>, <blt &>, %280.0, %284.0], env=e0.3
  void                    Deopt              !v    %124.4, %124.3, %124.1   !
BB290   <- [288]
  lgl$+           %290.0 = CastType           d     dn %288.1
  val+            %290.1 = CallSafeBuiltin    wed   &(%280.0, %290.0)    <lgl$+>
  val?^ | miss    %290.2 = LdVar              eR    grepl, e0.3
  lgl$#-          %290.3 = Identical                %290.2, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Branch                   %290.3 -> BB292 (if true) | BB293 (if false)
BB291   <- [288]
  fs              %291.0 = FrameState         R     0x55bbe3e83110+2075: [%202.6, %202.7, %202.8, <blt &>, <blt &>, %280.0, %288.1], env=e0.3
  void                    Deopt              !v    %291.0, Typecheck@0x55bbe3e75ca0[Type#103], %288.1   !
BB292   <- [290]
  prom-           %292.0 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p19, e0.3
  prom-           %292.1 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p20, e0.3
  ct              %292.2 = PushContext        lCL   %292.0, %292.1, grepl(valid_package_version_regexp, [(db, R_Mi|..., function(pattern, x, ignore.case=FALSE, perl=F|..., e0.3
  val?^           %292.3 = CastType                 up %292.1
  val?^           %292.4 = CastType                 up %292.0
  env             e292.5 = MkEnv              l     pattern=%292.4, x=%292.3, ignore.case(miss)=false, perl(miss)=false, fixed(miss)=false, useBytes(miss)=false, parent=R_BaseNamespace, context 1
  prom-           %292.6 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p35, e292.5
  ct              %292.7 = PushContext        lCL   %292.6, is.factor(x), function(x) <(rir::DispatchTable*)0x55bbe3eb35|..., e292.5
  val?^           %292.8 = CastType                 up %292.6
  env             e292.9 = MkEnv              l     x=%292.8, parent=R_BaseNamespace, context 1
  prom-           %292.10 = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p36, e292.9
  ct              %292.11 = PushContext        lCL   %292.10, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e292.9
  val?^           %292.12 = CastType                 up %292.10
  env             e292.13 = MkEnv              l     x=%292.12, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %292.14 = Force!<lazy>       !vr   %292.12,    <val?>
  val?            %292.15 = CallBuiltin        !v    inherits(%292.14, "factor", false) e292.13
  val?            %292.16 = PopContext         C     %292.15, %292.11   <lgl$->
  lgl$#-          %292.17 = IsType                   %292.16 isA lgl$-
  void                    Branch                   %292.17 -> BB294 (if true) | BB295 (if false)
BB293   <- [290]
  fs              %293.0 = FrameState         R     0x55bbe3e83110+2098: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  void                    Deopt              !v    %293.0, CallTarget@0x55bbe3e75ca0[Call#42], %290.2   !
BB294   <- [292]
  lgl$-           %294.0 = CastType           d     dn %292.16
  val?            %294.1 = PopContext         C     %294.0, %292.7   <lgl$->
  lgl$#-          %294.2 = IsType                   %294.1 isA lgl$-
  void                    Branch                   %294.2 -> BB296 (if true) | BB297 (if false)
BB295   <- [292]
  fs              %295.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  fs              %295.1 = FrameState         R     0x55bbe3e9f490+32: [], env=e292.5, next=%295.0
  fs              %295.2 = FrameState         R     0x55bbe3eb2a20+37: [%292.16], env=e292.9, next=%295.1
  void                    Deopt              !v    %295.2, Typecheck@0x55bbe32dee58[Type#1], %292.16   !
BB296   <- [294]
  lgl$-           %296.0 = CastType           d     dn %294.1
  lgl$-           %296.1 = AsLogical                %296.0
  lgl$#-          %296.2 = Identical                %296.1, false
  void                    Branch                   %296.2 -> BB137 (if true) | BB134 (if false)
BB297   <- [294]
  void                    Nop                !     
  val?            %297.1 = %294.1
  dr              %297.2 = Typecheck@0x55bbe3ea5d20[Type#1]
  goto BB132
BB137   <- [296]
  lgl$#-          %137.0 = CheckTrueFalse     e     %296.1
  void                    Branch                   %137.0 -> BB154 (if true) | BB138 (if false)
BB134   <- [296]
  val?^ | miss    %134.0 = LdVar              eR    length, e292.5
  lgl$#-          %134.1 = Identical                <blt length>, %134.0   <@?>
  void                    Branch                   %134.1 -> BB136 (if true) | BB135 (if false)
BB132   <- [297, 299]
  val?^ | miss    %132.0 = Phi                      %297.1:BB297, %299.1:BB299
  val?^ | miss    %132.1 = %132.0
  dr              %132.2 = Phi                      %297.2:BB297, %299.2:BB299
  dr              %132.3 = %132.2
  fs              %132.4 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  fs              %132.5 = FrameState         R     0x55bbe3e9f490+32: [%294.1], env=e292.5, next=%132.4
  void                    Deopt              !v    %132.5, %132.3, %132.1   !
BB154   <- [137]
  fs              %154.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  (cls|spec|blt)  %154.1 = LdFun              !v    grepl, e292.5
  fs              %154.2 = FrameState         R     0x55bbe3e9f490+687: [%154.1], env=e292.5, next=%154.0
  void                    Deopt              !v    %154.2, DeadCall@0x55bbe3ea5d20[Call#8], %154.1   !
BB138   <- [137]
  val?^ | miss    %138.0 = LdVar              eR    is.character, e292.5
  lgl$#-          %138.1 = Identical                <blt is.character>, %138.0   <true>
  void                    Branch                   %138.1 -> BB298 (if true) | BB299 (if false)
BB136   <- [134]
  fs              %136.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  (cls|spec|blt)  %136.1 = LdFun              !v    levels, e292.5
  fs              %136.2 = FrameState         R     0x55bbe3e9f490+109: [%296.1, <blt length>, %136.1], env=e292.5, next=%136.0
  void                    Deopt              !v    %136.2, DeadCall@0x55bbe3ea5d20[Call#3], %136.1   !
BB135   <- [134]
  fs              %135.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  (cls|spec|blt)  %135.1 = LdFun              !v    length, e292.5
  fs              %135.2 = FrameState         R     0x55bbe3e9f490+72: [%296.1, %135.1], env=e292.5, next=%135.0
  void                    Deopt              !v    %135.2, DeadCall@0x55bbe3ea5d20[Call#1], %135.1   !
BB298   <- [138]
  val?^ | miss    %298.0 = LdVar              eR    x, e292.5
  val?            %298.1 = Force!<wrapped>    !v    %298.0, e292.5   <str$+>
  lgl$#-          %298.2 = CallSafeBuiltin    wed   is.character(%298.1)    <lgl$->
  void                    Branch                   %298.2 -> BB153 (if true) | BB139 (if false)
BB299   <- [138]
  void                    Nop                !     
  lgl$#-          %299.1 = %138.1
  dr              %299.2 = DeadBranchReached@0x55bbe3ea5d20[Test#2]
  goto BB132
BB153   <- [298]
  void                    Nop                !     
  goto BB144
BB139   <- [298]
  val?^ | miss    %139.0 = LdVar              eR    as.character, e292.5
  lgl$#-          %139.1 = Identical                <blt as.character>, %139.0   <@?>
  void                    Branch                   %139.1 -> BB141 (if true) | BB140 (if false)
BB144   <- [153, 306]
  val?^ | miss    %144.0 = LdVar              eR    as.character, e292.5
  lgl$#-          %144.1 = Identical                <blt as.character>, %144.0   <true>
  void                    Branch                   %144.1 -> BB300 (if true) | BB301 (if false)
BB141   <- [139]
  val?^ | miss    %141.0 = LdVar              eR    x, e292.5
  val?            %141.1 = Force!             !v    %141.0, e292.5   <val?_>
  lgl$#-          %141.2 = IsType                   %141.1 isA val?+
  void                    Branch                   %141.2 -> BB306 (if true) | BB307 (if false)
BB140   <- [139]
  fs              %140.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  (cls|spec|blt)  %140.1 = LdFun              !v    as.character, e292.5
  fs              %140.2 = FrameState         R     0x55bbe3e9f490+409: [%140.1], env=e292.5, next=%140.0
  void                    Deopt              !v    %140.2, DeadCall@0x55bbe3ea5d20[Call#6], %140.1   !
BB300   <- [144]
  val?^ | miss    %300.0 = LdVar              eR    pattern, e292.5
  val?            %300.1 = Force!<lazy>       !v    %300.0, e292.5   <str$->
  lgl$#-          %300.2 = IsType                   %300.1 isA val?-
  void                    Branch                   %300.2 -> BB302 (if true) | BB303 (if false)
BB301   <- [144]
  fs              %301.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  fs              %301.1 = FrameState         R     0x55bbe3e9f490+486: [], env=e292.5, next=%301.0
  void                    Deopt              !v    %301.1, DeadBranchReached@0x55bbe3ea5d20[Test#4], %144.1   !
BB306   <- [141]
  val?+           %306.0 = CastType           d     dn %141.1   <val?_>
  val+            %306.1 = CallSafeBuiltin    wed   as.character(%306.0)    <val?_>
  void                    StVar              lW    x, %306.1, e292.5
  goto BB144
BB307   <- [141]
  fs              %307.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  fs              %307.1 = FrameState         R     0x55bbe3e9f490+450: [<blt as.character>, %141.1], env=e292.5, next=%307.0
  void                    Deopt              !v    %307.1, Typecheck@0x55bbe3ea5d20[Type#15], %141.1   !
BB302   <- [300]
  val?-           %302.0 = CastType           d     dn %300.1   <str$->
  val+            %302.1 = CallSafeBuiltin    wed   as.character(%302.0)    <str$->
  val?^ | miss    %302.2 = LdVar              eR    x, e292.5
  val?            %302.3 = Force!<wrapped>    !v    %302.2, e292.5   <str$+>
  val?^ | miss    %302.4 = LdVar              eR    ignore.case, e292.5
  val?            %302.5 = Force!<lazy>       !v    %302.4, e292.5   <lgl$->
  val?^ | miss    %302.6 = LdVar              eR    perl, e292.5
  val?            %302.7 = Force!<lazy>       !v    %302.6, e292.5   <lgl$->
  val?^ | miss    %302.8 = LdVar              eR    fixed, e292.5
  val?            %302.9 = Force!<lazy>       !v    %302.8, e292.5   <lgl$->
  val?^ | miss    %302.10 = LdVar              eR    useBytes, e292.5
  val?            %302.11 = Force!<lazy>       !v    %302.10, e292.5   <lgl$->
  val?            %302.12 = CallBuiltin        !v    grepl(%302.1, %302.3, %302.5, false, %302.7, %302.9, %302.11, false) e292.5
  val?            %302.13 = PopContext         C     %302.12, %292.2   <lgl$->
  lgl$#-          %302.14 = IsType                   %302.13 isA lgl$-
  void                    Branch                   %302.14 -> BB304 (if true) | BB305 (if false)
BB303   <- [300]
  fs              %303.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1], env=e0.3
  fs              %303.1 = FrameState         R     0x55bbe3e9f490+555: [<blt as.character>, %300.1], env=e292.5, next=%303.0
  void                    Deopt              !v    %303.1, Typecheck@0x55bbe3ea5d20[Type#18], %300.1   !
BB304   <- [302]
  lgl$-           %304.0 = CastType           d     dn %302.13
  val+            %304.1 = CallSafeBuiltin    wed   &(%290.1, %304.0)    <lgl$+>
  void                    StVar              lW    ok, %304.1, e0.3
  lgl$#-          %304.3 = IsType                   %304.1 isA lgl$+
  val?^ | miss    %304.4 = LdVar              eR    paths, e0.3
  lgl$#-          %304.5 = IsType                   %304.4 isA val?~- | miss
  void                    Branch                   %304.5 -> BB308 (if true) | BB309 (if false)
BB305   <- [302]
  fs              %305.0 = FrameState         R     0x55bbe3e83110+2140: [%202.6, %202.7, %202.8, <blt &>, %290.1, %302.13], env=e0.3
  void                    Deopt              !v    %305.0, Typecheck@0x55bbe3e75ca0[Type#108], %302.13   !
BB308   <- [304]
  val?~- | miss   %308.0 = CastType           d     dn %304.4
  val?-           %308.1 = Force!<value>            %308.0,    <str$->
  lgl$#-          %308.2 = IsType                   %308.1 isA val+   <true>
  void                    Branch                   %308.2 -> BB310 (if true) | BB311 (if false)
BB309   <- [304]
  void                    Nop                !     
  val?^ | miss    %309.1 = %304.4
  dr              %309.2 = Typecheck@0x55bbe3e75ca0[Type#110]
  goto BB151
BB310   <- [308]
  void                    Branch                   %304.3 -> BB312 (if true) | BB313 (if false)
BB311   <- [308]
  void                    Nop                !     
  lgl$#-          %311.1 = %308.2
  dr              %311.2 = DeadBranchReached@0x55bbe3e75ca0[Test#16]
  goto BB151
BB151   <- [309, 311, 313]
  val?^ | miss    %151.0 = Phi                      %309.1:BB309, %311.1:BB311, %313.1:BB313
  val?^ | miss    %151.1 = %151.0
  dr              %151.2 = Phi                      %309.2:BB309, %311.2:BB311, %313.2:BB313
  dr              %151.3 = %151.2
  fs              %151.4 = FrameState         R     0x55bbe3e83110+2178: [%202.6, %202.7, %202.8], env=e0.3
  void                    Deopt              !v    %151.4, %151.3, %151.1   !
BB312   <- [310]
  lgl$+           %312.0 = CastType           d     dn %304.1
  val?            %312.1 = Extract1_1D        wed   %308.1, %312.0, elided   <str$->
  void                    StVar              lW    paths, %312.1, e0.3
  goto BB60
BB313   <- [310]
  void                    Nop                !     
  val+            %313.1 = %304.1
  dr              %313.2 = Typecheck@0x55bbe3e75ca0[Type#112]
  goto BB151
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  val?            %0.2  = Call               !     %0.1("verbose") e0.0   <val?_>
  void                    Return             l     %0.2
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55bbe1e20940>, e0.0
  val?            %0.2  = Call               !     %0.1("base", "tools", "utils", "grDevices", "graphics", "stats", "datasets", "methods", "grid", "parallel", "splines", "stats4", "tcltk", "compiler") e0.0   <str->
  void                    Return             l     %0.2
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    lib.loc, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     file.path, <0x55bbe21531e0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "DESCRIPTION") e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    paths, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     file.path, <0x55bbe21531e0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p8, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "dummy_for_check") e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    paths, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str->
  val?            %0.3  = Extract1_1D        !v    %0.2, 1, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .standard_regexps, <0x55bbe2293ef8>, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <vec+>
  void                    Return             l     %0.2
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    valid_package_version, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    paths, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    find.package@Prom(14)0, e0.0
  void                    Return             l     %0.1
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    db, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is.na, <0x55bbe1e350e8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p17, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl+>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    db, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    all, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <blt->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    valid_package_version_regexp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    db, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, "Version", e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55bbe1e1fc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p27, e0.0
  prom-           %0.3  = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p28, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$->
  void                    Return             l     %0.4
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Platform, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    file.sep, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|vec)->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <(str|vec)->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, find.package[0x55bbe43ad120]_p34, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <val?>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3

│ find.package[0x55bbe43ad120]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
