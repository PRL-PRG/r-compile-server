
┌──────────────────────────────────────────────────────────────────────────────┐
│ asNamespace[0x55bbe43bf620]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
asNamespace[0x55bbe43bf620]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     ns=%0.0, base.OK(miss)=true, parent=R_BaseNamespace, context 1
  val?            %0.2  = Force!<lazy>       !v    %0.0, e0.1   <(str|env)+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val?+
  void                    Branch                   %0.3 -> BB33 (if true) | BB34 (if false)
BB33   <- [0]
  val?+           %33.0 = CastType           d     dn %0.2   <(str|env)+>
  lgl$#-          %33.1 = CallSafeBuiltin    wed   is.character(%33.0)    <lgl$->
  void                    Branch                   %33.1 -> BB31 (if true) | BB5 (if false)
BB34   <- [0]
  fs              %34.0 = FrameState         R     0x55bbe43bf250+69: [<blt is.character>, %0.2], env=e0.1
  void                    Deopt              !v    %34.0, Typecheck@0x55bbe312b7a8[Type#1], %0.2   !
BB31   <- [33]
  void                    Nop                !     
  lgl$#-          %31.1 = %33.1
  goto BB6
BB5   <- [33]
  val?^ | miss    %5.0  = LdVar              eR    is.name, e0.1
  lgl$#-          %5.1  = Identical                <blt is.symbol>, %5.0   <true>
  void                    Branch                   %5.1 -> BB35 (if true) | BB36 (if false)
BB6   <- [31, 35]
  lgl$-           %6.0  = Phi                      %35.4:BB35, %31.1:BB31
  lgl$-           %6.1  = %6.0
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB28 (if true) | BB9 (if false)
BB35   <- [5]
  val?^ | miss    %35.0 = LdVar              eR    ns, e0.1
  val?            %35.1 = Force!<wrapped>    !v    %35.0, e0.1   <env->
  lgl$#-          %35.2 = CallSafeBuiltin    wed   is.symbol(%35.1)    <lgl$->
  lgl$-           %35.3 = LOr                      %33.1, %35.2
  lgl$-           %35.4 = %35.3
  goto BB6
BB36   <- [5]
  fs              %36.0 = FrameState         R     0x55bbe43bf250+91: [%33.1], env=e0.1
  void                    Deopt              !v    %36.0, DeadBranchReached@0x55bbe312b7a8[Test#1], %5.1   !
BB28   <- [6]
  val?^ | miss    %28.0 = LdVar              eR    getNamespace, e0.1
  lgl$#-          %28.1 = Identical                %28.0, function(name) <(rir::DispatchTable*)0x55bbe3f|...
  void                    Branch                   %28.1 -> BB37 (if true) | BB38 (if false)
BB9   <- [6]
  void                    Nop                !     
  goto BB10
BB37   <- [28]
  prom-           %37.0 = MkArg                    unboundValue, asNamespace[0x55bbe43bf620]_p3, e0.1
  ct              %37.1 = PushContext        lCL   %37.0, getNamespace(ns), function(name) <(rir::DispatchTable*)0x55bbe3f|..., e0.1
  val?^           %37.2 = CastType                 up %37.0
  env             e37.3 = MkEnv              l     name=%37.2, parent=R_BaseNamespace, context 1
  val?            %37.4 = Force!<lazy>       !vL   %37.2, e37.3   <str$+>
  val?            %37.5 = CallBuiltin        !v    getRegisteredNamespace(%37.4) e37.3   <env->
  lgl$-           %37.6 = Is                       %37.5, NULL
  void                    StVar              lW    ns, %37.5, e37.3
  val             %37.8 = ChkMissing         e     %37.5
  lgl$-           %37.9 = Not                d     %37.6, elided
  lgl$#-          %37.10 = CheckTrueFalse     e     %37.9
  void                    Branch                   %37.10 -> BB30 (if true) | BB29 (if false)
BB38   <- [28]
  fs              %38.0 = FrameState         R     0x55bbe43bf250+201: [%6.1], env=e0.1
  void                    Deopt              !v    %38.0, CallTarget@0x55bbe312b7a8[Call#2], %28.0   !
BB10   <- [9, 30]
  val?^ | miss    %10.0 = LdVar              eR    isNamespace, e0.1
  lgl$#-          %10.1 = Identical                %10.0, function(ns) <(rir::DispatchTable*)0x55bbe432e|...
  void                    Branch                   %10.1 -> BB39 (if true) | BB40 (if false)
BB30   <- [37]
  val?            %30.0 = PopContext         C     %37.5, %37.1   <env->
  void                    StVar              lW    ns, %30.0, e0.1
  goto BB10
BB29   <- [37]
  fs              %29.0 = FrameState         R     0x55bbe43bf250+244: [], env=e0.1
  (cls|spec|blt)  %29.1 = LdFun              !v    loadNamespace, e37.3
  fs              %29.2 = FrameState         R     0x55bbe4111820+67: [%29.1], env=e37.3, next=%29.0
  void                    Deopt              !v    %29.2, DeadCall@0x55bbe3077828[Call#0], %29.1   !
BB39   <- [10]
  prom-           %39.0 = MkArg                    unboundValue, asNamespace[0x55bbe43bf620]_p1, e0.1
  ct              %39.1 = PushContext        lCL   %39.0, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x55bbe432e|..., e0.1
  val?^           %39.2 = CastType                 up %39.0
  env             e39.3 = MkEnv              l     ns=%39.2, parent=R_BaseNamespace, context 1
  val?            %39.4 = Force!<lazy>       !vL   %39.2, e39.3   <env->
  val?            %39.5 = CallBuiltin        !v    isNamespaceEnv(%39.4) e39.3
  val?            %39.6 = PopContext         C     %39.5, %39.1   <lgl$->
  lgl$#-          %39.7 = IsType                   %39.6 isA lgl$-
  void                    Branch                   %39.7 -> BB41 (if true) | BB42 (if false)
BB40   <- [10]
  fs              %40.0 = FrameState         R     0x55bbe43bf250+258: [], env=e0.1
  void                    Deopt              !v    %40.0, CallTarget@0x55bbe312b7a8[Call#3], %10.0   !
BB41   <- [39]
  lgl$-           %41.0 = CastType           d     dn %39.6
  lgl$-           %41.1 = Not                d     %41.0, elided
  lgl$#-          %41.2 = CheckTrueFalse     e     %41.1
  void                    Branch                   %41.2 -> BB27 (if true) | BB15 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x55bbe43bf250+290: [%39.6], env=e0.1
  void                    Deopt              !v    %42.0, Typecheck@0x55bbe312b7a8[Type#9], %39.6   !
BB27   <- [41]
  (cls|spec|blt)  %27.0 = LdFun              !v    stop, e0.1
  fs              %27.1 = FrameState         R     0x55bbe43bf250+435: [%27.0], env=e0.1
  void                    Deopt              !v    %27.1, DeadCall@0x55bbe312b7a8[Call#6], %27.0   !
BB15   <- [41]
  val?^ | miss    %15.0 = LdVar              eR    base.OK, e0.1
  val?            %15.1 = Force!<lazy>       !v    %15.0, e0.1   <lgl$->
  lgl$#-          %15.2 = IsType                   %15.1 isA lgl$-
  void                    Branch                   %15.2 -> BB43 (if true) | BB44 (if false)
BB43   <- [15]
  lgl$-           %43.0 = CastType           d     dn %15.1
  lgl$-           %43.1 = Not                d     %43.0, elided
  lgl$-           %43.2 = AsLogical                %43.1
  lgl$#-          %43.3 = Identical                %43.2, false
  void                    Branch                   %43.3 -> BB26 (if true) | BB18 (if false)
BB44   <- [15]
  void                    Nop                !     
  val?            %44.1 = %15.1
  dr              %44.2 = Typecheck@0x55bbe312b7a8[Type#10]
  goto BB16
BB26   <- [43]
  void                    Nop                !     
  lgl$-           %26.1 = %43.2
  goto BB23
BB18   <- [43]
  val?^ | miss    %18.0 = LdVar              eR    isBaseNamespace, e0.1
  lgl$#-          %18.1 = Identical                %18.0, function(ns) <(rir::DispatchTable*)0x55bbe4784|...
  void                    Branch                   %18.1 -> BB45 (if true) | BB46 (if false)
BB16   <- [44, 46]
  val?^ | miss    %16.0 = Phi                      %44.1:BB44, %46.1:BB46
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %44.2:BB44, %46.2:BB46
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55bbe43bf250+311: [%15.1], env=e0.1
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB23   <- [26, 49]
  lgl$-           %23.0 = Phi                      %49.3:BB49, %26.1:BB26
  lgl$-           %23.1 = %23.0
  lgl$#-          %23.2 = CheckTrueFalse     e     %23.1
  void                    Branch                   %23.2 -> BB25 (if true) | BB24 (if false)
BB45   <- [18]
  prom-           %45.0 = MkArg                    unboundValue, asNamespace[0x55bbe43bf620]_p2, e0.1
  ct              %45.1 = PushContext        lCL   %45.0, isBaseNamespace(ns), function(ns) <(rir::DispatchTable*)0x55bbe4784|..., e0.1
  val?^           %45.2 = CastType                 up %45.0
  env             e45.3 = MkEnv              l     ns=%45.2, parent=R_BaseNamespace, context 1
  prom-           %45.4 = MkArg                    unboundValue, asNamespace[0x55bbe43bf620]_p4, e45.3
  prom-           %45.5 = MkArg                    unboundValue, asNamespace[0x55bbe43bf620]_p5, e45.3
  ct              %45.6 = PushContext        lCL   %45.4, %45.5, identical(ns, .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e45.3
  val?^           %45.7 = CastType                 up %45.5
  val?^           %45.8 = CastType                 up %45.4
  env             e45.9 = MkEnv              l     x=%45.8, y=%45.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %45.10 = Force!<lazy>       !vL   %45.8, e45.9   <val?+>
  val?            %45.11 = Force!<lazy>       !vL   %45.7, e45.9   <val?+>
  val?            %45.12 = CallBuiltin        !v    identical(%45.10, %45.11, true, true, true, true, false, true) e45.9
  val?            %45.13 = PopContext         C     %45.12, %45.6   <lgl$->
  lgl$#-          %45.14 = IsType                   %45.13 isA lgl$-
  void                    Branch                   %45.14 -> BB47 (if true) | BB48 (if false)
BB46   <- [18]
  void                    Nop                !     
  val?^ | miss    %46.1 = %18.0
  dr              %46.2 = CallTarget@0x55bbe312b7a8[Call#4]
  goto BB16
BB25   <- [23]
  (cls|spec|blt)  %25.0 = LdFun              !v    stop, e0.1
  fs              %25.1 = FrameState         R     0x55bbe43bf250+393: [%25.0], env=e0.1
  void                    Deopt              !v    %25.1, DeadCall@0x55bbe312b7a8[Call#5], %25.0   !
BB24   <- [23]
  val?^ | miss    %24.0 = LdVar              eR    ns, e0.1
  void                    Visible            v     
  val?            %24.2 = Force!<wrapped>    !     %24.0, e0.1   <env->
  void                    Return             l     %24.2
BB47   <- [45]
  lgl$-           %47.0 = CastType           d     dn %45.13
  val?            %47.1 = PopContext         C     %47.0, %45.1   <lgl$->
  lgl$#-          %47.2 = IsType                   %47.1 isA lgl$-
  void                    Branch                   %47.2 -> BB49 (if true) | BB50 (if false)
BB48   <- [45]
  fs              %48.0 = FrameState         R     0x55bbe43bf250+356: [%43.2], env=e0.1
  fs              %48.1 = FrameState         R     0x55bbe41f3270+37: [%45.13], env=e45.3, next=%48.0
  void                    Deopt              !v    %48.1, Typecheck@0x55bbe312bbc8[Type#2], %45.13   !
BB49   <- [47]
  lgl$-           %49.0 = CastType           d     dn %47.1
  lgl$-           %49.1 = AsLogical                %49.0
  lgl$-           %49.2 = LAnd                     %43.2, %49.1
  lgl$-           %49.3 = %49.2
  goto BB23
BB50   <- [47]
  fs              %50.0 = FrameState         R     0x55bbe43bf250+356: [%43.2, %47.1], env=e0.1
  void                    Deopt              !v    %50.0, Typecheck@0x55bbe312b7a8[Type#12], %47.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BaseNamespaceEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ asNamespace[0x55bbe43bf620]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
