
┌──────────────────────────────────────────────────────────────────────────────┐
│ lazyLoadDBexec[0x55bbe4ec75d0]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
lazyLoadDBexec[0x55bbe4ec75d0]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     filebase=%0.2, fun=%0.1, filter=%0.0, parent=R_BaseNamespace, context 1
  cls             %0.4  = MkCls                    glue, e0.3
  cls             %0.5  = MkCls                    readRDS, e0.3
  cls             %0.6  = MkCls                    parent.env<-, e0.3
  cls             %0.7  = MkCls                    existsInFrame, e0.3
  cls             %0.8  = MkCls                    list2env, e0.3
  cls             %0.9  = MkCls                    lazyLoadDBexec>environment@125, e0.3
  cls             %0.10 = MkCls                    mkenv, e0.3
  cls             %0.11 = MkCls                    lazyLoadDBexec>envhook@661, e0.3
  void                    StVar              lW    glue, %0.4, e0.3
  void                    StVar              lW    readRDS, %0.5, e0.3
  void                    StVar              lW    parent.env<-, %0.6, e0.3
  void                    StVar              lW    existsInFrame, %0.7, e0.3
  void                    StVar              lW    list2env, %0.8, e0.3
  void                    StVar              lW    environment, %0.9, e0.3
  void                    StVar              lW    mkenv, %0.10, e0.3
  val+            %0.19 = Force!<lazy>       !vr   %0.2,    <str$->
  val+            %0.20 = CallSafeBuiltin    wed   list(%0.19, "rdx")    <vec->
  val+            %0.21 = CallSafeBuiltin    wed   paste(%0.20, ".", nil, false)    <str$->
  void                    StVar              lW    mapfile, %0.21, e0.3
  val+            %0.23 = CallSafeBuiltin    wed   list(%0.19, "rdb")    <vec->
  val+            %0.24 = CallSafeBuiltin    wed   paste(%0.23, ".", nil, false)    <str$->
  void                    StVar              lW    datafile, %0.24, e0.3
  ct              %0.26 = PushContext        lCL   mkenv(), %0.10, e0.3
  env             e0.27 = (MkEnv)            l     parent=e0.3, context 1
  val?            %0.28 = CallBuiltin        !vL   baseenv() e0.27   <env->
  lgl$#-          %0.29 = IsType                   %0.28 isA val?-
  lgl$#-          %0.30 = IsEnvStub          R     , e0.27
  void                    Branch                   %0.30 -> BB24 (if true) | BB25 (if false)
BB24   <- [0]
  void                    Branch                   %0.29 -> BB26 (if true) | BB27 (if false)
BB25   <- [0]
  void                    Nop                !     
  env             e25.1 = e0.27
  dr              %25.2 = EnvStubMaterialized@0x55bbe4297158[Call#unknown]
  goto BB23
BB26   <- [24]
  val?-           %26.0 = CastType           d     dn %0.28   <env->
  val+            %26.1 = CallSafeBuiltin    wed   new.env(true, %26.0, 29L) 
  val?            %26.2 = PopContext         C     %26.1, %0.26   <env->
  void                    StVar              lW    env, %26.2, e0.3
  val?^ | miss    %26.4 = LdVar              eR    readRDS, e0.3
  lgl$#-          %26.5 = Identical                %26.4, %0.5
  void                    Branch                   %26.5 -> BB28 (if true) | BB29 (if false)
BB27   <- [24]
  void                    Nop                !     
  val?            %27.1 = %0.28
  dr              %27.2 = Typecheck@0x55bbe4297158[Type#0]
  goto BB23
BB23   <- [25, 27]
  val?^ | miss    %23.0 = Phi                      e25.1:BB25, %27.1:BB27
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %25.2:BB25, %27.2:BB27
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x55bbe44e1290+338: [], env=e0.3
  fs              %23.5 = FrameState         R     0x55bbe40e40e0+78: [true, %0.28], env=e0.27, next=%23.4
  void                    Deopt              !v    %23.5, %23.3, %23.1   !
BB28   <- [26]
  prom-           %28.0 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p2, e0.3
  val?            %28.1 = StaticCall         !v    readRDS[0x55bbe4fc02d0](%28.0) from %0.5 e0.3   <vec+>
  void                    StVar              lW    map, %28.1, e0.3
  val?^ | miss    %28.3 = LdVar              eR    names, e0.3
  lgl$#-          %28.4 = Identical                <blt names>, %28.3   <true>
  void                    Branch                   %28.4 -> BB30 (if true) | BB31 (if false)
BB29   <- [26]
  fs              %29.0 = FrameState         R     0x55bbe44e1290+352: [], env=e0.3
  void                    Deopt              !v    %29.0, CallTarget@0x55bbe40b8be0[Call#3], %26.4   !
BB30   <- [28]
  (cls|spec|blt)  %30.0 = LdFun              !v    $, <0x55bbe1e1fc10>, e0.3
  prom-           %30.1 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p3, e0.3
  prom-           %30.2 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p4, e0.3
  val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e0.3   <vec+>
  lgl$#-          %30.4 = IsType                   %30.3 isA val?+
  void                    Branch                   %30.4 -> BB32 (if true) | BB33 (if false)
BB31   <- [28]
  fs              %31.0 = FrameState         R     0x55bbe44e1290+398: [], env=e0.3
  void                    Deopt              !v    %31.0, DeadBranchReached@0x55bbe40b8be0[Test#0], %28.4   !
BB32   <- [30]
  val?+           %32.0 = CastType           d     dn %30.3   <vec+>
  val+            %32.1 = CallSafeBuiltin    wed   names(%32.0)    <str->
  void                    StVar              lW    vars, %32.1, e0.3
  (cls|spec|blt)  %32.3 = LdFun              !v    $, <0x55bbe1e1fc10>, e0.3
  prom-           %32.4 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p5, e0.3
  prom-           %32.5 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p6, e0.3
  val?            %32.6 = Call               !v    %32.3(%32.4, %32.5) e0.3   <lgl$->
  lgl$#-          %32.7 = IsType                   %32.6 isA lgl$-
  void                    Branch                   %32.7 -> BB34 (if true) | BB35 (if false)
BB33   <- [30]
  fs              %33.0 = FrameState         R     0x55bbe44e1290+495: [<blt names>, %30.3], env=e0.3
  void                    Deopt              !v    %33.0, Typecheck@0x55bbe40b8be0[Type#12], %30.3   !
BB34   <- [32]
  lgl$-           %34.0 = CastType           d     dn %32.6
  void                    StVar              lW    compressed, %34.0, e0.3
  val?^ | miss    %34.2 = LdVar              eR    list2env, e0.3
  lgl$#-          %34.3 = Identical                %34.2, %0.8
  void                    Branch                   %34.3 -> BB36 (if true) | BB37 (if false)
BB35   <- [32]
  fs              %35.0 = FrameState         R     0x55bbe44e1290+568: [%32.6], env=e0.3
  void                    Deopt              !v    %35.0, Typecheck@0x55bbe40b8be0[Type#16], %32.6   !
BB36   <- [34]
  prom-           %36.0 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p7, e0.3
  prom-           %36.1 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p10, e0.3
  ct              %36.2 = PushContext        lCL   %36.0, %36.1, list2env($(map, references), env), %0.8, e0.3
  val?^           %36.3 = CastType                 up %36.1
  val?^           %36.4 = CastType                 up %36.0
  env             e36.5 = MkEnv              l     x=%36.4, envir=%36.3, parent=e0.3, context 1
  val?            %36.6 = Force!<lazy>       !vL   %36.4, e36.5   <vec+>
  val?            %36.7 = Force!<lazy>       !vL   %36.3, e36.5   <env->
  val?            %36.8 = CallBuiltin        !v    list2env(%36.6, %36.7) e36.5
  val?            %36.9 = PopContext         C     %36.8, %36.2
  val?^ | miss    %36.10 = LdVar              eR    mkenv, e0.3
  lgl$#-          %36.11 = Identical                %36.10, %0.10
  void                    Branch                   %36.11 -> BB38 (if true) | BB39 (if false)
BB37   <- [34]
  fs              %37.0 = FrameState         R     0x55bbe44e1290+582: [], env=e0.3
  void                    Deopt              !v    %37.0, CallTarget@0x55bbe40b8be0[Call#8], %34.2   !
BB38   <- [36]
  ct              %38.0 = PushContext        lCL   mkenv(), %0.10, e0.3
  val?^ | miss    %38.1 = LdVar              eR    baseenv, e0.3
  lgl$#-          %38.2 = Identical                <blt baseenv>, %38.1   <true>
  void                    Branch                   %38.2 -> BB40 (if true) | BB41 (if false)
BB39   <- [36]
  void                    Nop                !     
  val?^ | miss    %39.1 = %36.10
  dr              %39.2 = CallTarget@0x55bbe40b8be0[Call#10]
  goto BB13
BB40   <- [38]
  env             e40.0 = (MkEnv)            l     parent=e0.3, context 1
  val?            %40.1 = CallBuiltin        !vL   baseenv() e40.0   <env->
  lgl$#-          %40.2 = IsType                   %40.1 isA val?-
  lgl$#-          %40.3 = IsEnvStub          R     , e40.0
  void                    Branch                   %40.3 -> BB42 (if true) | BB43 (if false)
BB41   <- [38]
  void                    DropContext        C     
  lgl$#-          %41.1 = %38.2
  dr              %41.2 = DeadBranchReached@0x55bbe4297158[Test#0]
  goto BB13
BB13   <- [39, 41]
  val?^ | miss    %13.0 = Phi                      %39.1:BB39, %41.1:BB41
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %39.2:BB39, %41.2:BB41
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55bbe44e1290+619: [%36.9], env=e0.3
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB42   <- [40]
  void                    Branch                   %40.2 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  void                    Nop                !     
  env             e43.1 = e40.0
  dr              %43.2 = EnvStubMaterialized@0x55bbe4297158[Call#unknown]
  goto BB15
BB44   <- [42]
  val?-           %44.0 = CastType           d     dn %40.1   <env->
  val+            %44.1 = CallSafeBuiltin    wed   new.env(true, %44.0, 29L) 
  val?            %44.2 = PopContext         C     %44.1, %38.0   <env->
  void                    StVar              lW    envenv, %44.2, e0.3
  void                    StVar              lW    envhook, %0.11, e0.3
  lgl$-           %44.5 = Missing            eR    filter, e0.3
  lgl$-           %44.6 = Not                d     %44.5, elided
  lgl$#-          %44.7 = CheckTrueFalse     e     %44.6
  void                    Branch                   %44.7 -> BB18 (if true) | BB17 (if false)
BB45   <- [42]
  void                    Nop                !     
  val?            %45.1 = %40.1
  dr              %45.2 = Typecheck@0x55bbe4297158[Type#0]
  goto BB15
BB15   <- [43, 45]
  val?^ | miss    %15.0 = Phi                      e43.1:BB43, %45.1:BB45
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %43.2:BB43, %45.2:BB45
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55bbe44e1290+647: [], env=e0.3
  fs              %15.5 = FrameState         R     0x55bbe40e40e0+78: [true, %40.1], env=e40.0, next=%15.4
  void                    Deopt              !v    %15.5, %15.3, %15.1   !
BB18   <- [44]
  (cls|spec|blt)  %18.0 = LdFun              !v    filter, e0.3
  prom-           %18.1 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p11, e0.3
  val?            %18.2 = Call               !v    %18.0(%18.1) e0.3   <lgl->
  void                    StVar              lW    use, %18.2, e0.3
  val?^ | miss    %18.4 = LdVar              eR    vars, e0.3
  lgl$#-          %18.5 = IsType                   %18.4 isA val?~- | miss
  void                    Branch                   %18.5 -> BB46 (if true) | BB47 (if false)
BB17   <- [44]
  (cls|spec|blt)  %17.0 = LdFun              !v    $, e0.3
  fs              %17.1 = FrameState         R     0x55bbe44e1290+704: [%17.0], env=e0.3
  void                    Deopt              !v    %17.1, DeadCall@0x55bbe40b8be0[Call#11], %17.0   !
BB46   <- [18]
  val?~- | miss   %46.0 = CastType           d     dn %18.4
  val?-           %46.1 = Force!<value>            %46.0,    <str->
  lgl$#-          %46.2 = IsType                   %46.1 isA val+   <true>
  void                    Branch                   %46.2 -> BB48 (if true) | BB49 (if false)
BB47   <- [18]
  void                    Nop                !     
  val?^ | miss    %47.1 = %18.4
  dr              %47.2 = Typecheck@0x55bbe40b8be0[Type#27]
  goto BB19
BB48   <- [46]
  val             %48.0 = ChkMissing         e     %18.2
  lgl$#-          %48.1 = IsType                   %48.0 isA lgl-
  void                    Branch                   %48.1 -> BB50 (if true) | BB51 (if false)
BB49   <- [46]
  void                    Nop                !     
  lgl$#-          %49.1 = %46.2
  dr              %49.2 = DeadBranchReached@0x55bbe40b8be0[Test#1]
  goto BB19
BB19   <- [47, 49, 51]
  val?^ | miss    %19.0 = Phi                      %47.1:BB47, %49.1:BB49, %51.1:BB51
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %47.2:BB47, %49.2:BB49, %51.2:BB51
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55bbe44e1290+801: [], env=e0.3
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB50   <- [48]
  lgl-            %50.0 = CastType           d     dn %48.0
  val?            %50.1 = Extract1_1D        wed   %46.1, %50.0, elided   <str->
  void                    StVar              lW    vars, %50.1, e0.3
  (cls|spec|blt)  %50.3 = LdFun              !v    $, <0x55bbe1e1fc10>, e0.3
  prom-           %50.4 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p12, e0.3
  prom-           %50.5 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p13, e0.3
  val?            %50.6 = Call               !v    %50.3(%50.4, %50.5) e0.3   <vec+>
  lgl$#-          %50.7 = IsType                   %50.6 isA val+   <true>
  lgl$#-          %50.8 = IsType                   %50.6 isA val?+
  void                    Branch                   %50.7 -> BB52 (if true) | BB53 (if false)
BB51   <- [48]
  void                    Nop                !     
  val             %51.1 = %48.0
  dr              %51.2 = Typecheck@0x55bbe40b8be0[Type#29]
  goto BB19
BB52   <- [50]
  val?^ | miss    %52.0 = LdVar              eR    use, e0.3
  lgl$#-          %52.1 = IsType                   %52.0 isA lgl-
  void                    Branch                   %52.1 -> BB54 (if true) | BB55 (if false)
BB53   <- [50]
  void                    Nop                !     
  lgl$#-          %53.1 = %50.7
  dr              %53.2 = DeadBranchReached@0x55bbe40b8be0[Test#2]
  goto BB21
BB54   <- [52]
  lgl-            %54.0 = CastType           d     dn %52.0
  void                    Branch                   %50.8 -> BB56 (if true) | BB57 (if false)
BB55   <- [52]
  void                    Nop                !     
  val?^ | miss    %55.1 = %52.0
  dr              %55.2 = Typecheck@0x55bbe40b8be0[Type#35]
  goto BB21
BB21   <- [53, 55, 57]
  val?^ | miss    %21.0 = Phi                      %53.1:BB53, %55.1:BB55, %57.1:BB57
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %53.2:BB53, %55.2:BB55, %57.2:BB57
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55bbe44e1290+913: [%50.6], env=e0.3
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB56   <- [54]
  val?+           %56.0 = CastType           d     dn %50.6   <vec+>
  val?            %56.1 = Extract1_1D        wed   %56.0, %54.0, elided   <vec+>
  void                    StVar              lW    vals, %56.1, e0.3
  void                    StVar              lW    use, nil, e0.3
  (cls|spec|blt)  %56.4 = LdFun              !v    fun, e0.3
  prom-           %56.5 = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p14, e0.3
  val?            %56.6 = Call               !v    %56.4(%56.5) e0.3   <nil->
  void                    StVar              lW    res, %56.6, e0.3
  void                    StVar              lW    map, nil, e0.3
  void                    StVar              lW    vars, nil, e0.3
  void                    StVar              lW    vals, nil, e0.3
  void                    StVar              lW    rvars, nil, e0.3
  void                    StVar              lW    mapfile, nil, e0.3
  void                    StVar              lW    readRDS, nil, e0.3
  val             %56.14 = ChkMissing         e     %56.6
  void                    Visible            v     
  void                    Return             l     %56.6
BB57   <- [54]
  void                    Nop                !     
  val?            %57.1 = %50.6
  dr              %57.2 = Typecheck@0x55bbe40b8be0[Type#33]
  goto BB21
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    mapfile, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    map, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    variables, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    map, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    compressed, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55bbe1e1fc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p8, e0.0
  prom-           %0.3  = MkArg                    unboundValue, lazyLoadDBexec[0x55bbe4ec75d0]_p9, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    map, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    references, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    map, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    variables, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     environment, <0x55bbe4ca3708>, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <env->
  void                    Return             l     %0.2

│ lazyLoadDBexec[0x55bbe4ec75d0]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
