
┌──────────────────────────────────────────────────────────────────────────────┐
│ registerS3methods[0x55bbe50625b0]                                            │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2        │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
registerS3methods[0x55bbe50625b0]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     info=%0.2, package=%0.1, env=%0.0, parent=R_BaseNamespace, context 1
  cls             %0.4  = MkCls                    assignWrapped, e0.3
  cls             %0.5  = MkCls                    .registerS3method, e0.3
  cls             %0.6  = MkCls                    registerS3methods>register_S3_method_delayed@4178, e0.3
  cls             %0.7  = MkCls                    registerS3methods>.fmt@3067, e0.3
  val?            %0.8  = Force!<lazy>       !v    %0.2, e0.3   <str_>
  lgl$#-          %0.9  = IsType                   %0.8 isA val?+
  void                    Branch                   %0.9 -> BB153 (if true) | BB154 (if false)
BB153   <- [0]
  val?+           %153.0 = CastType           d     dn %0.8   <str_>
  val+            %153.1 = CallSafeBuiltin    wed   dim(%153.0)    <int->
  (int|real)$-    %153.2 = CallSafeBuiltin    wed   length(%153.1)    <int$->
  lgl$#-          %153.3 = IsType                   %153.2 isA int$-
  void                    Branch                   %153.3 -> BB155 (if true) | BB156 (if false)
BB154   <- [0]
  prom-           %154.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p0, e0.3
  val?^           %154.1 = CastType                 up %154.0
  fs              %154.2 = FrameState         R     0x55bbe424b860+32: [], env=e0.3
  env             e154.3 = (MkEnv)            l     d=unboundValue, x=%154.1, parent=R_BaseNamespace, context 0
  fs              %154.4 = FrameState         R     0x55bbe3f8c270+129: [<blt length>, <blt dim>], env=e154.3, next=%154.2
  fs              %154.5 = FrameState         R     0x55bbe3fc4270+5(pr): [%0.8], env=e0.3, next=%154.4
  void                    Deopt              !v    %154.5, Typecheck@0x55bbe41241e0[Type#0], %0.8   !
BB155   <- [153]
  int$-           %155.0 = CastType           d     dn %153.2
  lgl$#-          %155.1 = CheckTrueFalse     e     %155.0
  void                    Branch                   %155.1 -> BB151 (if true) | BB5 (if false)
BB156   <- [153]
  void                    Nop                !     
  (int|real)$-    %156.1 = %153.2
  dr              %156.2 = Typecheck@0x55bbe30df9b8[Type#5]
  goto BB3
BB151   <- [155]
  lgl$#-          %151.0 = IsType                   %153.1 isA int-
  void                    Branch                   %151.0 -> BB157 (if true) | BB158 (if false)
BB5   <- [155]
  (int|real)$-    %5.0  = CallSafeBuiltin    wed   length(%153.0)    <val?_>
  (int|real)$-    %5.1  = %5.0
  goto BB6
BB3   <- [156, 158]
  val?^ | miss    %3.0  = Phi                      %156.1:BB156, %158.1:BB158
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %156.2:BB156, %158.2:BB158
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbe424b860+32: [], env=e0.3
  prom-           %3.5  = MkArg                    %153.0, registerS3methods[0x55bbe50625b0]_p0 (!refl), e0.3
  val?~           %3.6  = CastType                 up %3.5
  env             e3.7  = (MkEnv)            l     d=%153.1, x=%3.6, parent=R_BaseNamespace, context 0
  fs              %3.8  = FrameState         R     0x55bbe3f8c270+184: [%153.2], env=e3.7, next=%3.4
  void                    Deopt              !v    %3.8, %3.3, %3.1   !
BB157   <- [151]
  int-            %157.0 = CastType           d     dn %153.1
  int$-           %157.1 = Extract1_1D        wed   %157.0, 1L, elided   <int$->
  int$-           %157.2 = %157.1
  goto BB6
BB158   <- [151]
  void                    Nop                !     
  val+            %158.1 = %153.1
  dr              %158.2 = Typecheck@0x55bbe30df9b8[Type#9]
  goto BB3
BB6   <- [5, 157]
  (int|real)$-    %6.0  = Phi                      %5.1:BB5, %157.2:BB157   <int$->
  (int|real)$-    %6.1  = %6.0
  lgl$#-          %6.2  = IsType                   %6.1 isA int$-
  void                    Branch                   %6.2 -> BB159 (if true) | BB160 (if false)
BB159   <- [6]
  int$-           %159.0 = CastType           d     dn %6.1
  void                    StVar              lW    n, %159.0, e0.3
  void                    Visible            v     
  lgl$-           %159.3 = Eq                 vd    %159.0, 0L, elided   <lgl$->
  lgl$#-          %159.4 = CheckTrueFalse     e     %159.3
  void                    Branch                   %159.4 -> BB150 (if true) | BB9 (if false)
BB160   <- [6]
  fs              %160.0 = FrameState         R     0x55bbe424b860+32: [], env=e0.3
  prom-           %160.1 = MkArg                    %153.0, registerS3methods[0x55bbe50625b0]_p0 (!refl), e0.3
  val?~           %160.2 = CastType                 up %160.1
  env             e160.3 = (MkEnv)            l     d=%153.1, x=%160.2, parent=R_BaseNamespace, context 0
  fs              %160.4 = FrameState         R     0x55bbe3f8c270+354: [%6.1], env=e160.3, next=%160.0
  void                    Deopt              !v    %160.4, Typecheck@0x55bbe41241e0[Type#1], %6.1   !
BB150   <- [159]
  void                    Nop                !     
  nil-            %150.1 = nil
  goto BB112
BB9   <- [159]
  void                    StVar              lW    assignWrapped, %0.4, e0.3
  val?^ | miss    %9.1  = LdVar              eR    matrix, e0.3
  lgl$#-          %9.2  = Identical                %9.1, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...
  void                    Branch                   %9.2 -> BB161 (if true) | BB162 (if false)
BB112   <- [150, 329]
  val?            %112.0 = Phi                      %329.5:BB329, %150.1:BB150
  val?            %112.1 = %112.0
  void                    Return             l     %112.1
BB161   <- [9]
  val+            %161.0 = CallSafeBuiltin    wed   matrix(NA, 0, 2, false, nil, false, false)    <str_>
  void                    StVar              lW    overwrite, %161.0, e0.3
  void                    StVar              lW    .registerS3method, %0.5, e0.3
  val?^ | miss    %161.3 = LdVar              eR    paste, e0.3
  lgl$#-          %161.4 = Identical                %161.3, function(..., sep=" ", collapse=NULL, recycle0|...
  void                    Branch                   %161.4 -> BB163 (if true) | BB164 (if false)
BB162   <- [9]
  fs              %162.0 = FrameState         R     0x55bbe424b860+114: [], env=e0.3
  void                    Deopt              !v    %162.0, CallTarget@0x55bbe41241e0[Call#1], %9.1   !
BB163   <- [161]
  prom-           %163.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p1, e0.3
  prom-           %163.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p2, e0.3
  dots-           %163.2 = DotsList           l     %163.0, %163.1
  val?^ | miss    %163.3 = CastType                 up %163.0
  val?^ | miss    %163.4 = CastType                 up %163.1
  env             e163.5 = MkEnv              l     ...=%163.2, sep=".", collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 0
  val?            %163.6 = Force!             !vL   %163.3, e163.5
  val?            %163.7 = Force!             !vL   %163.4, e163.5
  val+            %163.8 = CallSafeBuiltin    wed   list(%163.6, %163.7)    <vec->
  val+            %163.9 = CallSafeBuiltin    wed   paste(%163.8, ".", nil, false)    <str->
  void                    StVar              lW    methname, %163.9, e0.3
  val?^ | miss    %163.11 = LdVar              eR    is.na, e0.3
  lgl$#-          %163.12 = Identical                <blt is.na>, %163.11   <true>
  void                    Branch                   %163.12 -> BB165 (if true) | BB166 (if false)
BB164   <- [161]
  fs              %164.0 = FrameState         R     0x55bbe424b860+195: [], env=e0.3
  void                    Deopt              !v    %164.0, CallTarget@0x55bbe41241e0[Call#2], %161.3   !
BB165   <- [163]
  val?^ | miss    %165.0 = LdVar              eR    info, e0.3
  val?            %165.1 = Force!<wrapped>    !v    %165.0, e0.3   <str_>
  lgl$#-          %165.2 = IsType                   %165.1 isA val+   <true>
  lgl$#-          %165.3 = IsType                   %165.1 isA val?+
  void                    Branch                   %165.2 -> BB167 (if true) | BB168 (if false)
BB166   <- [163]
  fs              %166.0 = FrameState         R     0x55bbe424b860+263: [], env=e0.3
  void                    Deopt              !v    %166.0, DeadBranchReached@0x55bbe41241e0[Test#2], %163.12   !
BB167   <- [165]
  void                    Branch                   %165.3 -> BB169 (if true) | BB170 (if false)
BB168   <- [165]
  void                    Nop                !     
  lgl$#-          %168.1 = %165.2
  dr              %168.2 = DeadBranchReached@0x55bbe41241e0[Test#4]
  goto BB16
BB169   <- [167]
  val?+           %169.0 = CastType           d     dn %165.1   <str_>
  val?            %169.1 = Extract1_2D        wed   %169.0, missingArg, 3, elided   <str->
  lgl$#-          %169.2 = IsType                   %169.1 isA val?-
  void                    Branch                   %169.2 -> BB171 (if true) | BB172 (if false)
BB170   <- [167]
  void                    Nop                !     
  val?            %170.1 = %165.1
  dr              %170.2 = Typecheck@0x55bbe41241e0[Type#12]
  goto BB16
BB16   <- [168, 170]
  val?^ | miss    %16.0 = Phi                      %168.1:BB168, %170.1:BB170
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %168.2:BB168, %170.2:BB170
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55bbe424b860+332: [<blt is.na>, %165.1], env=e0.3
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB171   <- [169]
  val?-           %171.0 = CastType           d     dn %169.1   <str->
  lgl-            %171.1 = CallSafeBuiltin    wed   is.na(%171.0)    <lgl->
  void                    StVar              lW    z, %171.1, e0.3
  val?^ | miss    %171.3 = LdVar              eR    methname, e0.3
  lgl$#-          %171.4 = IsType                   %171.3 isA val?~- | miss
  void                    Branch                   %171.4 -> BB173 (if true) | BB174 (if false)
BB172   <- [169]
  fs              %172.0 = FrameState         R     0x55bbe424b860+385: [<blt is.na>, %169.1], env=e0.3
  void                    Deopt              !v    %172.0, Typecheck@0x55bbe41241e0[Type#13], %169.1   !
BB173   <- [171]
  val?~- | miss   %173.0 = CastType           d     dn %171.3
  val?-           %173.1 = Force!<value>            %173.0,    <str->
  lgl$#-          %173.2 = IsType                   %173.1 isA val+   <true>
  void                    Branch                   %173.2 -> BB175 (if true) | BB176 (if false)
BB174   <- [171]
  void                    Nop                !     
  val?^ | miss    %174.1 = %171.3
  dr              %174.2 = Typecheck@0x55bbe41241e0[Type#15]
  goto BB20
BB175   <- [173]
  val?            %175.0 = Extract1_1D        wed   %173.1, %171.1, elided   <str->
  val?^ | miss    %175.1 = LdVar              eR    info !upd, e0.3
  val?            %175.2 = Force!<wrapped>    !v    %175.1, e0.3   <str_>
  lgl$#-          %175.3 = IsType                   %175.2 isA val?+
  lgl$#-          %175.4 = IsType                   %175.0 isA val?-
  val?^ | miss    %175.5 = LdVar              eR    z, e0.3
  lgl$#-          %175.6 = IsType                   %175.5 isA lgl-
  void                    Branch                   %175.6 -> BB177 (if true) | BB178 (if false)
BB176   <- [173]
  void                    Nop                !     
  lgl$#-          %176.1 = %173.2
  dr              %176.2 = DeadBranchReached@0x55bbe41241e0[Test#5]
  goto BB20
BB20   <- [174, 176]
  val?^ | miss    %20.0 = Phi                      %174.1:BB174, %176.1:BB176
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %174.2:BB174, %176.2:BB176
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x55bbe424b860+422: [], env=e0.3
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB177   <- [175]
  lgl-            %177.0 = CastType           d     dn %175.5
  void                    Branch                   %175.4 -> BB179 (if true) | BB180 (if false)
BB178   <- [175]
  void                    Nop                !     
  val?^ | miss    %178.1 = %175.5
  dr              %178.2 = Typecheck@0x55bbe41241e0[Type#20]
  goto BB22
BB179   <- [177]
  val?-           %179.0 = CastType           d     dn %175.0   <str->
  void                    Branch                   %175.3 -> BB181 (if true) | BB182 (if false)
BB180   <- [177]
  void                    Nop                !     
  val?            %180.1 = %175.0
  dr              %180.2 = Typecheck@0x55bbe41241e0[Type#18]
  goto BB22
BB22   <- [178, 180, 182]
  val?^ | miss    %22.0 = Phi                      %178.1:BB178, %180.1:BB180, %182.1:BB182
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %178.2:BB178, %180.2:BB180, %182.2:BB182
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55bbe424b860+497: [%175.0, %175.2], env=e0.3
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB181   <- [179]
  val?+           %181.0 = CastType           d     dn %175.2   <str_>
  val?+           %181.1 = Subassign1_2D      wed   %179.0, %181.0, %177.0, 3, elided   <str_>
  void                    StVar              lW    info, %181.1, e0.3
  val?^ | miss    %181.3 = LdVar              eR    ncol, e0.3
  lgl$#-          %181.4 = Identical                %181.3, function(x) <(rir::DispatchTable*)0x55bbe42ddf|...
  void                    Branch                   %181.4 -> BB183 (if true) | BB184 (if false)
BB182   <- [179]
  void                    Nop                !     
  val?            %182.1 = %175.2
  dr              %182.2 = Typecheck@0x55bbe41241e0[Type#19]
  goto BB22
BB183   <- [181]
  val+            %183.0 = CallSafeBuiltin    wed   dim(%181.1)    <int->
  val?            %183.1 = Extract1_1D        wed   %183.0, 2L, elided   <int$->
  lgl$#-          %183.2 = IsType                   %183.1 isA int$-
  void                    Branch                   %183.2 -> BB185 (if true) | BB186 (if false)
BB184   <- [181]
  fs              %184.0 = FrameState         R     0x55bbe424b860+532: [], env=e0.3
  void                    Deopt              !v    %184.0, CallTarget@0x55bbe41241e0[Call#4], %181.3   !
BB185   <- [183]
  int$-           %185.0 = CastType           d     dn %183.1
  lgl$-           %185.1 = Eq                 d     %185.0, 3L, elided   <lgl$->
  lgl$#-          %185.2 = CheckTrueFalse     e     %185.1
  void                    Branch                   %185.2 -> BB149 (if true) | BB28 (if false)
BB186   <- [183]
  void                    Nop                !     
  val?            %186.1 = %183.1
  dr              %186.2 = Typecheck@0x55bbe30b3ee8[Type#3]
  goto BB26
BB149   <- [185]
  (cls|spec|blt)  %149.0 = LdFun              !v    cbind, e0.3
  fs              %149.1 = FrameState         R     0x55bbe424b860+597: [%149.0], env=e0.3
  void                    Deopt              !v    %149.1, DeadCall@0x55bbe41241e0[Call#5], %149.0   !
BB28   <- [185]
  val?^ | miss    %28.0 = LdVar              eR    cbind, e0.3
  lgl$#-          %28.1 = Identical                %28.0, function(..., deparse.level=1) <(rir::Dispatch|...
  void                    Branch                   %28.1 -> BB187 (if true) | BB188 (if false)
BB26   <- [186, 188]
  val?^ | miss    %26.0 = Phi                      %186.1:BB186, %188.1:BB188
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %186.2:BB186, %188.2:BB188
  dr              %26.3 = %26.2
  prom-           %26.4 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p3 (!refl), e0.3
  val?^           %26.5 = CastType                 up %26.4
  fs              %26.6 = FrameState         R     0x55bbe424b860+564: [], env=e0.3
  env             e26.7 = (MkEnv)            l     x=%26.5, parent=R_BaseNamespace, context 0
  fs              %26.8 = FrameState         R     0x55bbe45ee540+134: [%183.1], env=e26.7, next=%26.6
  void                    Deopt              !v    %26.8, %26.3, %26.1   !
BB187   <- [28]
  prom-           %187.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p4, e0.3
  prom-           %187.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p7, e0.3
  prom-           %187.2 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p8, e0.3
  dots-           %187.3 = DotsList           l     %187.0, %187.1, %187.2
  ct              %187.4 = PushContext        lCL   %187.3, cbind([(info, R_MissingArg, :(1L, 3L), drop=FA|..., function(..., deparse.level=1) <(rir::Dispatch|..., e0.3
  env             e187.5 = MkEnv              l     ...=%187.3, deparse.level(miss)=1, parent=R_BaseNamespace, context 1
  prom-           %187.6 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p67, e187.5
  val?            %187.7 = Call               !v    <spec .Internal>(%187.6) e187.5   <str+>
  val?            %187.8 = PopContext         C     %187.7, %187.4   <str+>
  void                    StVar              lW    Info, %187.8, e0.3
  val?^ | miss    %187.10 = LdVar              eR    names, e0.3
  lgl$#-          %187.11 = Identical                <blt names>, %187.10   <true>
  void                    Branch                   %187.11 -> BB189 (if true) | BB190 (if false)
BB188   <- [28]
  void                    Nop                !     
  val?^ | miss    %188.1 = %28.0
  dr              %188.2 = CallTarget@0x55bbe41241e0[Call#6]
  goto BB26
BB189   <- [187]
  val?^ | miss    %189.0 = LdVar              eR    env, e0.3
  val?            %189.1 = Force!<lazy>       !v    %189.0, e0.3   <env->
  lgl$#-          %189.2 = IsType                   %189.1 isA val?-
  void                    Branch                   %189.2 -> BB191 (if true) | BB192 (if false)
BB190   <- [187]
  fs              %190.0 = FrameState         R     0x55bbe424b860+699: [], env=e0.3
  void                    Deopt              !v    %190.0, DeadBranchReached@0x55bbe41241e0[Test#7], %187.11   !
BB191   <- [189]
  val?-           %191.0 = CastType           d     dn %189.1   <env->
  val+            %191.1 = CallSafeBuiltin    wed   names(%191.0)    <str->
  void                    StVar              lW    loc, %191.1, e0.3
  val?^ | miss    %191.3 = LdVar              eR    any, e0.3
  lgl$#-          %191.4 = Identical                <blt any>, %191.3   <true>
  void                    Branch                   %191.4 -> BB193 (if true) | BB194 (if false)
BB192   <- [189]
  fs              %192.0 = FrameState         R     0x55bbe424b860+768: [<blt names>, %189.1], env=e0.3
  void                    Deopt              !v    %192.0, Typecheck@0x55bbe41241e0[Type#34], %189.1   !
BB193   <- [191]
  val?^ | miss    %193.0 = LdVar              eR    match, e0.3
  lgl$#-          %193.1 = Identical                %193.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %193.1 -> BB195 (if true) | BB196 (if false)
BB194   <- [191]
  void                    Nop                !     
  lgl$#-          %194.1 = %191.4
  dr              %194.2 = DeadBranchReached@0x55bbe41241e0[Test#8]
  goto BB33
BB195   <- [193]
  val?^ | miss    %195.0 = LdVar              eR    info, e0.3
  val?            %195.1 = Force!<value>      !v    %195.0, e0.3   <str_>
  lgl$#-          %195.2 = IsType                   %195.1 isA val?+
  void                    Branch                   %195.2 -> BB197 (if true) | BB198 (if false)
BB196   <- [193]
  void                    Nop                !     
  val?^ | miss    %196.1 = %193.0
  dr              %196.2 = CallTarget@0x55bbe41241e0[Call#11]
  goto BB33
BB33   <- [194, 196]
  val?^ | miss    %33.0 = Phi                      %194.1:BB194, %196.1:BB196
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %194.2:BB194, %196.2:BB196
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55bbe424b860+804: [], env=e0.3
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB197   <- [195]
  val?+           %197.0 = CastType           d     dn %195.1   <str_>
  val?            %197.1 = Extract1_2D        wed   %197.0, missingArg, 3, elided   <str->
  val?^ | miss    %197.2 = LdVar              eR    loc, e0.3
  val?            %197.3 = Force!<value>      !v    %197.2, e0.3   <str->
  lgl$#-          %197.4 = IsType                   %197.3 isA val?-
  lgl$#-          %197.5 = IsType                   %197.1 isA val?+
  void                    Branch                   %197.5 -> BB199 (if true) | BB200 (if false)
BB198   <- [195]
  prom-           %198.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p10 (!refl), e0.3
  val?^           %198.1 = CastType                 up %198.0
  prom-           %198.2 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p9, e0.3
  val?^           %198.3 = CastType                 up %198.2
  fs              %198.4 = FrameState         R     0x55bbe424b860+918: [<blt any>], env=e0.3
  env             e198.5 = (MkEnv)            l     x=%198.3, table=%198.1, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %198.6 = FrameState         R     0x55bbe2634d40+9: [], env=e198.5, next=%198.4
  fs              %198.7 = FrameState         R     0x55bbe40bb9f0+5(pr): [%195.1], env=e0.3, next=%198.6
  void                    Deopt              !v    %198.7, Typecheck@0x55bbe41241e0[Type#41], %195.1   !
BB199   <- [197]
  val?+           %199.0 = CastType           d     dn %197.1   <(int|str)+>
  void                    Branch                   %197.4 -> BB201 (if true) | BB202 (if false)
BB200   <- [197]
  void                    Nop                !     
  val?            %200.1 = %197.1
  dr              %200.2 = Typecheck@0x55bbe2687cb0[Type#0]
  goto BB37
BB201   <- [199]
  val?-           %201.0 = CastType           d     dn %197.3   <str->
  val+            %201.1 = CallSafeBuiltin    wed   match(%199.0, %201.0, 0L, nil)    <int->
  lgl$#-          %201.2 = IsType                   %201.1 isA int-
  void                    Branch                   %201.2 -> BB203 (if true) | BB204 (if false)
BB202   <- [199]
  void                    Nop                !     
  val?            %202.1 = %197.3
  dr              %202.2 = Typecheck@0x55bbe2687cb0[Type#1]
  goto BB37
BB37   <- [200, 202]
  val?^ | miss    %37.0 = Phi                      %200.1:BB200, %202.1:BB202
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %200.2:BB200, %202.2:BB202
  dr              %37.3 = %37.2
  prom-           %37.4 = MkArg                    %197.3, registerS3methods[0x55bbe50625b0]_p10 (!refl), e0.3
  val?~           %37.5 = CastType                 up %37.4
  prom-           %37.6 = MkArg                    %197.1, registerS3methods[0x55bbe50625b0]_p9 (!refl), e0.3
  val?~           %37.7 = CastType                 up %37.6
  fs              %37.8 = FrameState         R     0x55bbe424b860+918: [<blt any>], env=e0.3
  env             e37.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%37.5, x=%37.7, parent=R_BaseNamespace, context 0
  fs              %37.10 = FrameState         R     0x55bbe2634d40+23: [%197.1, %197.3], env=e37.9, next=%37.8
  void                    Deopt              !v    %37.10, %37.3, %37.1   !
BB203   <- [201]
  int-            %203.0 = CastType           d     dn %201.1
  lgl-            %203.1 = Eq                 wed   %203.0, 0L, elided   <lgl->
  void                    StVar              lW    notex, %203.1, e0.3
  val?            %203.3 = CallBuiltin        !v    any(%203.1) e0.3   <lgl$->
  lgl$#-          %203.4 = IsType                   %203.3 isA lgl$-
  void                    Branch                   %203.4 -> BB205 (if true) | BB206 (if false)
BB204   <- [201]
  prom-           %204.0 = MkArg                    %201.0, registerS3methods[0x55bbe50625b0]_p10 (!refl), e0.3
  val?~           %204.1 = CastType                 up %204.0
  prom-           %204.2 = MkArg                    %199.0, registerS3methods[0x55bbe50625b0]_p9 (!refl), e0.3
  val?~           %204.3 = CastType                 up %204.2
  fs              %204.4 = FrameState         R     0x55bbe424b860+918: [<blt any>], env=e0.3
  env             e204.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%204.1, x=%204.3, parent=R_BaseNamespace, context 0
  fs              %204.6 = FrameState         R     0x55bbe2634d40+69: [%201.1], env=e204.5, next=%204.4
  void                    Deopt              !v    %204.6, Typecheck@0x55bbe41241e0[Type#44], %201.1   !
BB205   <- [203]
  lgl$-           %205.0 = CastType           d     dn %203.3
  lgl$#-          %205.1 = CheckTrueFalse     e     %205.0
  void                    Branch                   %205.1 -> BB148 (if true) | BB43 (if false)
BB206   <- [203]
  void                    Nop                !     
  val?            %206.1 = %203.3
  dr              %206.2 = Typecheck@0x55bbe41241e0[Type#46]
  goto BB41
BB148   <- [205]
  (cls|spec|blt)  %148.0 = LdFun              !v    warning, e0.3
  fs              %148.1 = FrameState         R     0x55bbe424b860+984: [%148.0], env=e0.3
  void                    Deopt              !v    %148.1, DeadCall@0x55bbe41241e0[Call#12], %148.0   !
BB43   <- [205]
  val?^ | miss    %43.0 = LdVar              eR    is.na, e0.3
  lgl$#-          %43.1 = Identical                <blt is.na>, %43.0   <true>
  void                    Branch                   %43.1 -> BB207 (if true) | BB208 (if false)
BB41   <- [206, 208, 210, 212]
  val?^ | miss    %41.0 = Phi                      %206.1:BB206, %208.1:BB208, %210.1:BB210, %212.1:BB212
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %206.2:BB206, %208.2:BB208, %210.2:BB210, %212.2:BB212
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x55bbe424b860+963: [%203.3], env=e0.3
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB207   <- [43]
  val?^ | miss    %207.0 = LdVar              eR    Info, e0.3
  lgl$#-          %207.1 = IsType                   %207.0 isA val?~+ | miss
  void                    Branch                   %207.1 -> BB209 (if true) | BB210 (if false)
BB208   <- [43]
  void                    Nop                !     
  lgl$#-          %208.1 = %43.1
  dr              %208.2 = DeadBranchReached@0x55bbe41241e0[Test#12]
  goto BB41
BB209   <- [207]
  val?~+ | miss   %209.0 = CastType           d     dn %207.0
  val?+           %209.1 = Force!<value>            %209.0,    <str+>
  lgl$#-          %209.2 = IsType                   %209.1 isA val+   <true>
  void                    Branch                   %209.2 -> BB211 (if true) | BB212 (if false)
BB210   <- [207]
  void                    Nop                !     
  val?^ | miss    %210.1 = %207.0
  dr              %210.2 = Typecheck@0x55bbe41241e0[Type#62]
  goto BB41
BB211   <- [209]
  val?            %211.0 = Extract1_2D        wed   %209.1, missingArg, 5L, elided   <str->
  lgl$#-          %211.1 = IsType                   %211.0 isA val?-
  void                    Branch                   %211.1 -> BB213 (if true) | BB214 (if false)
BB212   <- [209]
  void                    Nop                !     
  lgl$#-          %212.1 = %209.2
  dr              %212.2 = DeadBranchReached@0x55bbe41241e0[Test#14]
  goto BB41
BB213   <- [211]
  val?-           %213.0 = CastType           d     dn %211.0   <str->
  lgl-            %213.1 = CallSafeBuiltin    wed   is.na(%213.0)    <lgl->
  void                    StVar              lW    eager, %213.1, e0.3
  (cls|spec|blt)  %213.3 = LdFun              !v    [, <0x55bbe1e1fc80>, e0.3
  prom-           %213.4 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p11, e0.3
  prom-           %213.5 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p12, e0.3
  val?            %213.6 = NamedCall          !v    %213.3(%213.4, %213.5, missingArg, drop=false) e0.3   <str+>
  void                    StVar              lW    delayed, %213.6, e0.3
  (cls|spec|blt)  %213.8 = LdFun              !v    [, <0x55bbe1e1fc80>, e0.3
  prom-           %213.9 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p13, e0.3
  prom-           %213.10 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p14, e0.3
  val?            %213.11 = NamedCall          !v    %213.8(%213.9, %213.10, missingArg, drop=false) e0.3   <str+>
  void                    StVar              lW    Info, %213.11, e0.3
  lgl$#-          %213.13 = IsType                   %213.11 isA val?+
  val?^ | miss    %213.14 = LdVar              eR    %in%, e0.3
  lgl$#-          %213.15 = Identical                %213.14, function(x, table) <(rir::DispatchTable*)0x55b|...
  void                    Branch                   %213.15 -> BB215 (if true) | BB216 (if false)
BB214   <- [211]
  fs              %214.0 = FrameState         R     0x55bbe424b860+1233: [<blt is.na>, %211.0], env=e0.3
  void                    Deopt              !v    %214.0, Typecheck@0x55bbe41241e0[Type#63], %211.0   !
BB215   <- [213]
  prom-           %215.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p15, e0.3
  prom-           %215.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p16, e0.3
  val?^           %215.2 = CastType                 up %215.1
  val?^           %215.3 = CastType                 up %215.0
  env             e215.4 = MkEnv              l     x=%215.3, table=%215.2, parent=R_BaseNamespace, context 0
  prom-           %215.5 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p71, e215.4
  val?^           %215.6 = CastType                 up %215.5
  val             %215.7 = ChkMissing         e     %213.11
  void                    Branch                   %213.13 -> BB217 (if true) | BB218 (if false)
BB216   <- [213]
  void                    Nop                !     
  val?^ | miss    %216.1 = %213.14
  dr              %216.2 = CallTarget@0x55bbe41241e0[Call#22]
  goto BB46
BB217   <- [215]
  val?+           %217.0 = CastType           d     dn %213.11   <str+>
  val?            %217.1 = Extract1_2D        wed   %217.0, missingArg, 1, elided   <str->
  prom-           %217.2 = MkArg                    %217.1, registerS3methods[0x55bbe50625b0]_p15 (!refl), e0.3
  val?~           %217.3 = CastType                 up %217.2
  void                    StArg              lW    x, %217.3, e215.4
  prom-           %217.5 = MkArg                    %217.1, registerS3methods[0x55bbe50625b0]_p70 (!refl), e215.4
  val?~           %217.6 = CastType                 up %217.5
  env             e217.7 = (MkEnv)            l     x=%217.6, table=%215.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %217.8 = IsEnvStub          R     , e217.7
  void                    Branch                   %217.8 -> BB219 (if true) | BB220 (if false)
BB218   <- [215]
  void                    Nop                !     
  val?            %218.1 = %213.11
  dr              %218.2 = Typecheck@0x55bbe41241e0[Type#70]
  goto BB46
BB46   <- [216, 218]
  val?^ | miss    %46.0 = Phi                      %216.1:BB216, %218.1:BB218
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %216.2:BB216, %218.2:BB218
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x55bbe424b860+1424: [], env=e0.3
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
BB219   <- [217]
  val?^ | miss    %219.0 = LdVar              eR    loc, e0.3
  val?            %219.1 = Force!<value>      !vL   %219.0, e217.7   <str->
  prom-           %219.2 = MkArg                    %219.1, registerS3methods[0x55bbe50625b0]_p16 (!refl), e0.3
  val?~           %219.3 = CastType                 up %219.2
  void                    StArg              lW    table, %219.3, e215.4
  prom-           %219.5 = MkArg                    %219.1, registerS3methods[0x55bbe50625b0]_p71 (!refl), e215.4
  val?~           %219.6 = CastType                 up %219.5
  void                    StArg              lWd   table, %219.6, e217.7
  lgl$#-          %219.8 = IsType                   %219.1 isA val?-
  lgl$#-          %219.9 = IsEnvStub          R     , e217.7
  void                    Branch                   %219.9 -> BB221 (if true) | BB222 (if false)
BB220   <- [217]
  fs              %220.0 = FrameState         R     0x55bbe424b860+1461: [], env=e0.3
  fs              %220.1 = FrameState         R     0x55bbe244d320+54: [], env=e215.4, next=%220.0
  prom-           %220.2 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p70 (!refl), e215.4
  val?^           %220.3 = CastType                 up %220.2
  env             e220.4 = (MkEnv)            l     x=%220.3, table=%215.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %220.5 = FrameState         R     0x55bbe2634d40+9: [], env=e220.4, next=%220.1
  fs              %220.6 = FrameState         R     0x55bbe244dbc0+5(pr): [%217.1], env=e215.4, next=%220.5
  void                    Deopt              !v    %220.6, EnvStubMaterialized@0x55bbe2687cb0[Call#unknown], e217.7   !
BB221   <- [219]
  lgl$#-          %221.0 = IsType                   %217.1 isA val?+
  void                    Branch                   %221.0 -> BB223 (if true) | BB224 (if false)
BB222   <- [219]
  void                    Nop                !     
  env             e222.1 = e217.7
  dr              %222.2 = EnvStubMaterialized@0x55bbe2687cb0[Call#unknown]
  goto BB50
BB223   <- [221]
  val?+           %223.0 = CastType           d     dn %217.1   <(int|str)+>
  void                    Branch                   %219.8 -> BB225 (if true) | BB226 (if false)
BB224   <- [221]
  void                    Nop                !     
  val?            %224.1 = %217.1
  dr              %224.2 = Typecheck@0x55bbe2687cb0[Type#0]
  goto BB50
BB50   <- [222, 224, 226]
  val?^ | miss    %50.0 = Phi                      e222.1:BB222, %224.1:BB224, %226.1:BB226
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %222.2:BB222, %224.2:BB224, %226.2:BB226
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55bbe424b860+1461: [], env=e0.3
  fs              %50.5 = FrameState         R     0x55bbe244d320+54: [], env=e215.4, next=%50.4
  fs              %50.6 = FrameState         R     0x55bbe2634d40+23: [%217.1, %219.1], env=e217.7, next=%50.5
  void                    Deopt              !v    %50.6, %50.3, %50.1   !
BB225   <- [223]
  val?-           %225.0 = CastType           d     dn %219.1   <str->
  val+            %225.1 = CallSafeBuiltin    wed   match(%223.0, %225.0, 0L, nil)    <int->
  lgl$#-          %225.2 = IsType                   %225.1 isA int-
  void                    Branch                   %225.2 -> BB227 (if true) | BB228 (if false)
BB226   <- [223]
  void                    Nop                !     
  val?            %226.1 = %219.1
  dr              %226.2 = Typecheck@0x55bbe2687cb0[Type#1]
  goto BB50
BB227   <- [225]
  int-            %227.0 = CastType           d     dn %225.1
  lgl-            %227.1 = Gt                 wed   %227.0, 0L, elided   <lgl->
  void                    StVar              lW    localGeneric, %227.1, e0.3
  void                    StVar              lW    l2, %227.1, e0.3
  val?^ | miss    %227.4 = LdVar              eR    .isMethodsDispatchOn, e0.3
  lgl$#-          %227.5 = Identical                <blt .isMethodsDispatchOn>, %227.4   <true>
  void                    Branch                   %227.5 -> BB229 (if true) | BB230 (if false)
BB228   <- [225]
  fs              %228.0 = FrameState         R     0x55bbe424b860+1461: [], env=e0.3
  fs              %228.1 = FrameState         R     0x55bbe244d320+54: [], env=e215.4, next=%228.0
  fs              %228.2 = FrameState         R     0x55bbe2634d40+69: [%225.1], env=e217.7, next=%228.1
  void                    Deopt              !v    %228.2, Typecheck@0x55bbe347f688[Type#2], %225.1   !
BB229   <- [227]
  val?            %229.0 = CallBuiltin        !v    .isMethodsDispatchOn() e0.3   <lgl$->
  lgl$#-          %229.1 = IsType                   %229.0 isA lgl$-
  void                    Branch                   %229.1 -> BB231 (if true) | BB232 (if false)
BB230   <- [227]
  fs              %230.0 = FrameState         R     0x55bbe424b860+1486: [], env=e0.3
  void                    Deopt              !v    %230.0, DeadBranchReached@0x55bbe41241e0[Test#16], %227.5   !
BB231   <- [229]
  lgl$-           %231.0 = CastType           d     dn %229.0
  lgl$#-          %231.1 = CheckTrueFalse     e     %231.0
  void                    Branch                   %231.1 -> BB126 (if true) | BB58 (if false)
BB232   <- [229]
  void                    Nop                !     
  val?            %232.1 = %229.0
  dr              %232.2 = Typecheck@0x55bbe41241e0[Type#75]
  goto BB56
BB126   <- [231]
  val?^ | miss    %126.0 = LdVar              eR    which, e0.3
  lgl$#-          %126.1 = Identical                %126.0, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %126.1 -> BB233 (if true) | BB234 (if false)
BB58   <- [231]
  void                    Nop                !     
  goto BB59
BB56   <- [232, 234, 238]
  val?^ | miss    %56.0 = Phi                      %232.1:BB232, %234.1:BB234, %238.1:BB238
  val?^ | miss    %56.1 = %56.0
  dr              %56.2 = Phi                      %232.2:BB232, %234.2:BB234, %238.2:BB238
  dr              %56.3 = %56.2
  fs              %56.4 = FrameState         R     0x55bbe424b860+1558: [%229.0], env=e0.3
  void                    Deopt              !v    %56.4, %56.3, %56.1   !
BB233   <- [126]
  val?^ | miss    %233.0 = LdVar              eR    localGeneric, e0.3
  lgl$#-          %233.1 = IsType                   %233.0 isA lgl-
  void                    Branch                   %233.1 -> BB237 (if true) | BB238 (if false)
BB234   <- [126]
  void                    Nop                !     
  val?^ | miss    %234.1 = %126.0
  dr              %234.2 = CallTarget@0x55bbe41241e0[Call#24]
  goto BB56
BB59   <- [58, 144]
  val?^ | miss    %59.0 = LdVar              eR    any, e0.3
  lgl$#-          %59.1 = Identical                <blt any>, %59.0   <true>
  void                    Branch                   %59.1 -> BB235 (if true) | BB236 (if false)
BB237   <- [233]
  lgl-            %237.0 = CastType           d     dn %233.0
  val+            %237.1 = CallSafeBuiltin    wed   which(%237.0)    <int->
  int$-           %237.2 = Length                   %237.1
  int$-           %237.3 = Inc                      0L
  lgl$-           %237.4 = Lt                 d     %237.2, %237.3, elided   <false>
  lgl$#-          %237.5 = Identical                %237.4, true
  void                    Branch                   %237.5 -> BB242 (if true) | BB241 (if false)
BB238   <- [233]
  void                    Nop                !     
  val?^ | miss    %238.1 = %233.0
  dr              %238.2 = Typecheck@0x55bbe41241e0[Type#76]
  goto BB56
BB235   <- [59]
  val?^ | miss    %235.0 = LdVar              eR    localGeneric, e0.3
  lgl$#-          %235.1 = IsType                   %235.0 isA lgl-
  void                    Branch                   %235.1 -> BB239 (if true) | BB240 (if false)
BB236   <- [59]
  void                    Nop                !     
  lgl$#-          %236.1 = %59.1
  dr              %236.2 = DeadBranchReached@0x55bbe41241e0[Test#26]
  goto BB60
BB242   <- [237]
  prom-           %242.0 = MkArg                    %237.0, registerS3methods[0x55bbe50625b0]_p49 (!refl), e0.3
  val?~           %242.1 = CastType                 up %242.0
  fs              %242.2 = FrameState         R     0x55bbe424b860+1606: [], env=e0.3
  env             e242.3 = (MkEnv)            l     wh=unboundValue, d=unboundValue, useNames(miss)=true, arr.ind(miss)=false, x=%242.1, parent=R_BaseNamespace, context 0
  fs              %242.4 = FrameState         R     0x55bbe3e6e710+27: [%237.1], env=e242.3, next=%242.2
  void                    Deopt              !v    %242.4, DeadBranchReached@0x55bbe41241e0[Test#17], %237.5   !
BB241   <- [237]
  val?            %241.0 = Extract2_1D        wed   %237.1, %237.3, elided
  void                    StVar              lW    i, %241.0, e0.3
  val?^ | miss    %241.2 = LdVar              eR    get, e0.3
  lgl$#-          %241.3 = Identical                %241.2, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %241.3 -> BB243 (if true) | BB244 (if false)
BB239   <- [235]
  lgl-            %239.0 = CastType           d     dn %235.0
  val?            %239.1 = CallBuiltin        !v    any(%239.0) e0.3   <lgl$->
  lgl$#-          %239.2 = IsType                   %239.1 isA lgl$-
  void                    Branch                   %239.2 -> BB247 (if true) | BB248 (if false)
BB240   <- [235]
  void                    Nop                !     
  val?^ | miss    %240.1 = %235.0
  dr              %240.2 = Typecheck@0x55bbe41241e0[Type#131]
  goto BB60
BB60   <- [236, 240]
  val?^ | miss    %60.0 = Phi                      %236.1:BB236, %240.1:BB240
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %236.2:BB236, %240.2:BB240
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x55bbe424b860+2174: [], env=e0.3
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB243   <- [241]
  prom-           %243.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p50, e0.3
  prom-           %243.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p52, e0.3
  val?            %243.2 = StaticCall         !v    get[0x55bbe408e2d0](%243.0, missingArg, %243.1) { 0 2n } e0.3   <cls->
  void                    StVar              lW    genfun, %243.2, e0.3
  (cls|spec|blt)  %243.4 = LdFun              !v    ::, <0x55bbe1e20e48>, e0.3
  prom-           %243.5 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p53, e0.3
  prom-           %243.6 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p54, e0.3
  val?            %243.7 = Call               !v    %243.4(%243.5, %243.6) e0.3   <cls->
  (cls|spec|blt)  %243.8 = ChkFunction        e     %243.7
  prom-           %243.9 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p55, e0.3
  val?            %243.10 = Call               !v    %243.8(%243.9, "genericFunction") e0.3   <lgl$->
  lgl$#-          %243.11 = IsType                   %243.10 isA lgl$-
  void                    Branch                   %243.11 -> BB245 (if true) | BB246 (if false)
BB244   <- [241]
  fs              %244.0 = FrameState         R     0x55bbe424b860+1651: [%237.1, %237.2, %237.3], env=e0.3
  void                    Deopt              !v    %244.0, CallTarget@0x55bbe41241e0[Call#25], %241.2   !
BB247   <- [239]
  lgl$-           %247.0 = CastType           d     dn %239.1
  lgl$#-          %247.1 = CheckTrueFalse     e     %247.0
  void                    Branch                   %247.1 -> BB119 (if true) | BB64 (if false)
BB248   <- [239]
  fs              %248.0 = FrameState         R     0x55bbe424b860+2265: [%239.1], env=e0.3
  void                    Deopt              !v    %248.0, Typecheck@0x55bbe41241e0[Type#132], %239.1   !
BB245   <- [243]
  lgl$-           %245.0 = CastType           d     dn %243.10
  lgl$#-          %245.1 = CheckTrueFalse     e     %245.0
  void                    Branch                   %245.1 -> BB145 (if true) | BB133 (if false)
BB246   <- [243]
  fs              %246.0 = FrameState         R     0x55bbe424b860+1785: [%237.1, %237.2, %237.3, %243.10], env=e0.3
  void                    Deopt              !v    %246.0, Typecheck@0x55bbe41241e0[Type#88], %243.10   !
BB119   <- [247]
  (cls|spec|blt)  %119.0 = LdFun              !v    [, <0x55bbe1e1fc80>, e0.3
  prom-           %119.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p47, e0.3
  prom-           %119.2 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p48, e0.3
  val?            %119.3 = NamedCall          !v    %119.0(%119.1, %119.2, missingArg, drop=false) e0.3   <str+>
  void                    StVar              lW    lin, %119.3, e0.3
  val?^ | miss    %119.5 = LdVar              eR    env, e0.3
  val?            %119.6 = Force!<wrapped>    !v    %119.5, e0.3   <env->
  lgl$#-          %119.7 = IsType                   %119.6 isA val+   <true>
  lgl$#-          %119.8 = IsType                   %119.6 isA val?-
  void                    Branch                   %119.7 -> BB257 (if true) | BB258 (if false)
BB64   <- [247]
  void                    Nop                !     
  goto BB65
BB145   <- [245]
  val?^ | miss    %145.0 = LdVar              eR    localGeneric, e0.3
  val?            %145.1 = Force!             !v    %145.0, e0.3   <val?_>
  val?^ | miss    %145.2 = LdVar              eR    i, e0.3
  val?            %145.3 = Force!             !v    %145.2, e0.3   <val?_>
  lgl$#-          %145.4 = IsType                   %145.3 isA val?+
  lgl$#-          %145.5 = IsType                   %145.1 isA val?+
  void                    Branch                   %145.5 -> BB249 (if true) | BB250 (if false)
BB133   <- [245]
  void                    Nop                !     
  int$-           %133.1 = %237.3
  goto BB134
BB257   <- [119]
  void                    Branch                   %119.8 -> BB261 (if true) | BB262 (if false)
BB258   <- [119]
  void                    Nop                !     
  lgl$#-          %258.1 = %119.7
  dr              %258.2 = DeadBranchReached@0x55bbe41241e0[Test#27]
  goto BB120
BB65   <- [64, 273]
  (cls|spec|blt)  %65.0 = LdFun              !v    [, <0x55bbe1e1fc80>, e0.3
  prom-           %65.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p17, e0.3
  prom-           %65.2 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p18, e0.3
  val?            %65.3 = NamedCall          !v    %65.0(%65.1, %65.2, missingArg, drop=false) e0.3   <str+>
  void                    StVar              lW    fin, %65.3, e0.3
  lgl$#-          %65.5 = IsType                   %65.3 isA val?+
  val?^ | miss    %65.6 = LdVar              eR    seq_len, e0.3
  lgl$#-          %65.7 = Identical                <blt seq_len>, %65.6   <true>
  void                    Branch                   %65.7 -> BB259 (if true) | BB260 (if false)
BB249   <- [145]
  val?+           %249.0 = CastType           d     dn %145.1   <val?_>
  void                    Branch                   %145.4 -> BB251 (if true) | BB252 (if false)
BB250   <- [145]
  void                    Nop                !     
  val?            %250.1 = %145.1
  dr              %250.2 = Typecheck@0x55bbe41241e0[Type#89]
  goto BB146
BB134   <- [133, 140]
  int$-           %134.0 = Phi                      %133.1:BB133, %140.1:BB140
  int$-           %134.1 = %134.0
  int$-           %134.2 = Inc                      %134.1
  lgl$-           %134.3 = Lt                 d     %237.2, %134.2, elided
  lgl$#-          %134.4 = Identical                %134.3, true
  void                    Branch                   %134.4 -> BB144 (if true) | BB135 (if false)
BB261   <- [257]
  val?-           %261.0 = CastType           d     dn %119.6   <env->
  val?            %261.1 = Extract2_1D        wed   %261.0, ".__S3MethodsTable__.", elided   <env->
  void                    StVar              lW    S3MethodsTable, %261.1, e0.3
  val             %261.3 = ChkMissing         e     %261.1
  val?^ | miss    %261.4 = LdVar              eR    lin, e0.3
  lgl$#-          %261.5 = IsType                   %261.4 isA val?~+ | miss
  void                    Branch                   %261.5 -> BB263 (if true) | BB264 (if false)
BB262   <- [257]
  void                    Nop                !     
  val?            %262.1 = %119.6
  dr              %262.2 = Typecheck@0x55bbe41241e0[Type#136]
  goto BB120
BB120   <- [258, 262]
  val?^ | miss    %120.0 = Phi                      %258.1:BB258, %262.1:BB262
  val?^ | miss    %120.1 = %120.0
  dr              %120.2 = Phi                      %258.2:BB258, %262.2:BB262
  dr              %120.3 = %120.2
  fs              %120.4 = FrameState         R     0x55bbe424b860+2367: [%119.6], env=e0.3
  void                    Deopt              !v    %120.4, %120.3, %120.1   !
BB259   <- [65]
  val?^ | miss    %259.0 = LdVar              eR    nrow, e0.3
  lgl$#-          %259.1 = Identical                %259.0, function(x) <(rir::DispatchTable*)0x55bbe4286c|...
  void                    Branch                   %259.1 -> BB265 (if true) | BB266 (if false)
BB260   <- [65]
  void                    Nop                !     
  lgl$#-          %260.1 = %65.7
  dr              %260.2 = DeadBranchReached@0x55bbe41241e0[Test#30]
  goto BB66
BB251   <- [249]
  val?+           %251.0 = CastType           d     dn %145.3   <val?_>
  val?+           %251.1 = Subassign1_1D      wed   false, %249.0, %251.0, elided
  void                    StVar              lW    localGeneric, %251.1, e0.3
  (cls|spec|blt)  %251.3 = LdFun              !v    registerS3method, e0.3
  fs              %251.4 = FrameState         R     0x55bbe424b860+1850: [%237.1, %237.2, %237.3, %251.3], env=e0.3
  void                    Deopt              !v    %251.4, DeadCall@0x55bbe41241e0[Call#28], %251.3   !
BB252   <- [249]
  void                    Nop                !     
  val?            %252.1 = %145.3
  dr              %252.2 = Typecheck@0x55bbe41241e0[Type#90]
  goto BB146
BB146   <- [250, 252]
  val?^ | miss    %146.0 = Phi                      %250.1:BB250, %252.1:BB252
  val?^ | miss    %146.1 = %146.0
  dr              %146.2 = Phi                      %250.2:BB250, %252.2:BB252
  dr              %146.3 = %146.2
  fs              %146.4 = FrameState         R     0x55bbe424b860+1830: [%237.1, %237.2, %237.3, false, %145.1, %145.3], env=e0.3
  void                    Deopt              !v    %146.4, %146.3, %146.1   !
BB144   <- [134]
  void                    Nop                !     
  goto BB59
BB135   <- [134]
  val?            %135.0 = Extract2_1D        wed   %237.1, %134.2, elided
  void                    StVar              lW    i, %135.0, e0.3
  val?^ | miss    %135.2 = LdVar              eR    get, e0.3
  lgl$#-          %135.3 = Identical                %135.2, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %135.3 -> BB253 (if true) | BB254 (if false)
BB263   <- [261]
  val?~+ | miss   %263.0 = CastType           d     dn %261.4
  val?+           %263.1 = Force!<value>            %263.0,    <str+>
  lgl$#-          %263.2 = IsType                   %263.1 isA val+   <true>
  void                    Branch                   %263.2 -> BB269 (if true) | BB270 (if false)
BB264   <- [261]
  void                    Nop                !     
  val?^ | miss    %264.1 = %261.4
  dr              %264.2 = Typecheck@0x55bbe41241e0[Type#139]
  goto BB122
BB265   <- [259]
  void                    Branch                   %65.5 -> BB267 (if true) | BB268 (if false)
BB266   <- [259]
  void                    Nop                !     
  val?^ | miss    %266.1 = %259.0
  dr              %266.2 = CallTarget@0x55bbe41241e0[Call#38]
  goto BB66
BB66   <- [260, 266, 268]
  val?^ | miss    %66.0 = Phi                      %260.1:BB260, %266.1:BB266, %268.1:BB268
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %260.2:BB260, %266.2:BB266, %268.2:BB268
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55bbe424b860+2680: [], env=e0.3
  void                    Deopt              !v    %66.4, %66.3, %66.1   !
BB253   <- [135]
  prom-           %253.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p56, e0.3
  prom-           %253.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p58, e0.3
  val?            %253.2 = StaticCall         !v    get[0x55bbe408e2d0](%253.0, missingArg, %253.1) { 0 2n } e0.3   <cls->
  void                    StVar              lW    genfun, %253.2, e0.3
  (cls|spec|blt)  %253.4 = LdFun              !v    ::, <0x55bbe1e20e48>, e0.3
  prom-           %253.5 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p59, e0.3
  prom-           %253.6 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p60, e0.3
  val?            %253.7 = Call               !v    %253.4(%253.5, %253.6) e0.3   <cls->
  (cls|spec|blt)  %253.8 = ChkFunction        e     %253.7
  prom-           %253.9 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p61, e0.3
  val?            %253.10 = Call               !v    %253.8(%253.9, "genericFunction") e0.3   <lgl$->
  lgl$#-          %253.11 = IsType                   %253.10 isA lgl$-
  void                    Branch                   %253.11 -> BB255 (if true) | BB256 (if false)
BB254   <- [135]
  fs              %254.0 = FrameState         R     0x55bbe424b860+1922: [%237.1, %237.2, %134.2], env=e0.3
  void                    Deopt              !v    %254.0, CallTarget@0x55bbe41241e0[Call#29], %135.2   !
BB269   <- [263]
  val?            %269.0 = Extract1_2D        wed   %263.1, missingArg, 4, elided   <str->
  val?^ | miss    %269.1 = LdVar              eR    env, e0.3
  val?            %269.2 = Force!<wrapped>    !v    %269.1, e0.3   <env->
  val?^ | miss    %269.3 = LdVar              eR    lin, e0.3
  lgl$#-          %269.4 = IsType                   %269.3 isA val?~+ | miss
  void                    Branch                   %269.4 -> BB271 (if true) | BB272 (if false)
BB270   <- [263]
  void                    Nop                !     
  lgl$#-          %270.1 = %263.2
  dr              %270.2 = DeadBranchReached@0x55bbe41241e0[Test#28]
  goto BB122
BB122   <- [264, 270]
  val?^ | miss    %122.0 = Phi                      %264.1:BB264, %270.1:BB270
  val?^ | miss    %122.1 = %122.0
  dr              %122.2 = Phi                      %264.2:BB264, %270.2:BB270
  dr              %122.3 = %122.2
  fs              %122.4 = FrameState         R     0x55bbe424b860+2425: [], env=e0.3
  void                    Deopt              !v    %122.4, %122.3, %122.1   !
BB267   <- [265]
  val?+           %267.0 = CastType           d     dn %65.3   <str+>
  val+            %267.1 = CallSafeBuiltin    wed   dim(%267.0)    <int->
  val?            %267.2 = Extract1_1D        wed   %267.1, 1L, elided   <int$->
  lgl$#-          %267.3 = IsType                   %267.2 isA int$-
  void                    Branch                   %267.3 -> BB279 (if true) | BB280 (if false)
BB268   <- [265]
  void                    Nop                !     
  val?            %268.1 = %65.3
  dr              %268.2 = Typecheck@0x55bbe41241e0[Type#146]
  goto BB66
BB255   <- [253]
  lgl$-           %255.0 = CastType           d     dn %253.10
  lgl$#-          %255.1 = CheckTrueFalse     e     %255.0
  void                    Branch                   %255.1 -> BB141 (if true) | BB140 (if false)
BB256   <- [253]
  fs              %256.0 = FrameState         R     0x55bbe424b860+2056: [%237.1, %237.2, %134.2, %253.10], env=e0.3
  void                    Deopt              !v    %256.0, Typecheck@0x55bbe41241e0[Type#114], %253.10   !
BB271   <- [269]
  val?~+ | miss   %271.0 = CastType           d     dn %269.3
  val?+           %271.1 = Force!<value>            %271.0,    <str+>
  lgl$#-          %271.2 = IsType                   %271.1 isA val+   <true>
  void                    Branch                   %271.2 -> BB273 (if true) | BB274 (if false)
BB272   <- [269]
  void                    Nop                !     
  val?^ | miss    %272.1 = %269.3
  dr              %272.2 = Typecheck@0x55bbe41241e0[Type#142]
  goto BB124
BB279   <- [267]
  int$-           %279.0 = CastType           d     dn %267.2
  val+            %279.1 = CallSafeBuiltin    wed   seq_len(%279.0)    <int->
  int$-           %279.2 = Length                   %279.1
  int$-           %279.3 = Inc                      0L
  lgl$-           %279.4 = Lt                 d     %279.2, %279.3, elided   <false>
  lgl$#-          %279.5 = Identical                %279.4, true
  void                    Branch                   %279.5 -> BB282 (if true) | BB281 (if false)
BB280   <- [267]
  prom-           %280.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p19 (!refl), e0.3
  val?^           %280.1 = CastType                 up %280.0
  fs              %280.2 = FrameState         R     0x55bbe424b860+2772: [<blt seq_len>], env=e0.3
  env             e280.3 = (MkEnv)            l     x=%280.1, parent=R_BaseNamespace, context 0
  fs              %280.4 = FrameState         R     0x55bbe43efa70+134: [%267.2], env=e280.3, next=%280.2
  void                    Deopt              !v    %280.4, Typecheck@0x55bbe3077408[Type#3], %267.2   !
BB141   <- [255]
  val?^ | miss    %141.0 = LdVar              eR    localGeneric, e0.3
  val?            %141.1 = Force!             !v    %141.0, e0.3   <val?_>
  val?^ | miss    %141.2 = LdVar              eR    i, e0.3
  val?            %141.3 = Force!             !v    %141.2, e0.3   <val?_>
  lgl$#-          %141.4 = IsType                   %141.3 isA val?+
  lgl$#-          %141.5 = IsType                   %141.1 isA val?+
  void                    Branch                   %141.5 -> BB275 (if true) | BB276 (if false)
BB140   <- [255]
  void                    Nop                !     
  int$-           %140.1 = %134.2
  goto BB134
BB273   <- [271]
  val?            %273.0 = Extract1_2D        wed   %271.1, missingArg, 3, elided   <str->
  val?            %273.1 = CallBuiltin        !v    importIntoEnv(%261.1, %269.0, %269.2, %273.0) e0.3
  goto BB65
BB274   <- [271]
  void                    Nop                !     
  lgl$#-          %274.1 = %271.2
  dr              %274.2 = DeadBranchReached@0x55bbe41241e0[Test#29]
  goto BB124
BB124   <- [272, 274]
  val?^ | miss    %124.0 = Phi                      %272.1:BB272, %274.1:BB274
  val?^ | miss    %124.1 = %124.0
  dr              %124.2 = Phi                      %272.2:BB272, %274.2:BB274
  dr              %124.3 = %124.2
  fs              %124.4 = FrameState         R     0x55bbe424b860+2516: [%261.1, %269.0, %269.2], env=e0.3
  void                    Deopt              !v    %124.4, %124.3, %124.1   !
BB282   <- [279]
  fs              %282.0 = FrameState         R     0x55bbe424b860+2794: [%279.1], env=e0.3
  void                    Deopt              !v    %282.0, DeadBranchReached@0x55bbe41241e0[Test#31], %279.5   !
BB281   <- [279]
  val?            %281.0 = Extract2_1D        wed   %279.1, %279.3, elided
  void                    StVar              lW    i, %281.0, e0.3
  val?^ | miss    %281.2 = LdVar              eR    .registerS3method, e0.3
  lgl$#-          %281.3 = Identical                %281.2, %0.5
  void                    Branch                   %281.3 -> BB283 (if true) | BB284 (if false)
BB275   <- [141]
  val?+           %275.0 = CastType           d     dn %141.1   <val?_>
  void                    Branch                   %141.4 -> BB277 (if true) | BB278 (if false)
BB276   <- [141]
  void                    Nop                !     
  val?            %276.1 = %141.1
  dr              %276.2 = Typecheck@0x55bbe41241e0[Type#115]
  goto BB142
BB283   <- [281]
  prom-           %283.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p20, e0.3
  prom-           %283.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p22, e0.3
  prom-           %283.2 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p24, e0.3
  prom-           %283.3 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p26, e0.3
  prom-           %283.4 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p28, e0.3
  val?            %283.5 = StaticCall         !v    .registerS3method[0x55bbe4ab92d0](%283.0, %283.1, %283.2, %283.3, %283.4) from %0.5 e0.3
  int$-           %283.6 = %279.3
  goto BB74
BB284   <- [281]
  fs              %284.0 = FrameState         R     0x55bbe424b860+2839: [%279.1, %279.2, %279.3], env=e0.3
  void                    Deopt              !v    %284.0, CallTarget@0x55bbe41241e0[Call#39], %281.2   !
BB277   <- [275]
  val?+           %277.0 = CastType           d     dn %141.3   <val?_>
  val?+           %277.1 = Subassign1_1D      wed   false, %275.0, %277.0, elided
  void                    StVar              lW    localGeneric, %277.1, e0.3
  (cls|spec|blt)  %277.3 = LdFun              !v    registerS3method, e0.3
  fs              %277.4 = FrameState         R     0x55bbe424b860+2121: [%237.1, %237.2, %134.2, %277.3], env=e0.3
  void                    Deopt              !v    %277.4, DeadCall@0x55bbe41241e0[Call#32], %277.3   !
BB278   <- [275]
  void                    Nop                !     
  val?            %278.1 = %141.3
  dr              %278.2 = Typecheck@0x55bbe41241e0[Type#116]
  goto BB142
BB142   <- [276, 278]
  val?^ | miss    %142.0 = Phi                      %276.1:BB276, %278.1:BB278
  val?^ | miss    %142.1 = %142.0
  dr              %142.2 = Phi                      %276.2:BB276, %278.2:BB278
  dr              %142.3 = %142.2
  fs              %142.4 = FrameState         R     0x55bbe424b860+2101: [%237.1, %237.2, %134.2, false, %141.1, %141.3], env=e0.3
  void                    Deopt              !v    %142.4, %142.3, %142.1   !
BB74   <- [283, 293]
  int$-           %74.0 = Phi                      %283.6:BB283, %293.6:BB293
  int$-           %74.1 = %74.0
  int$-           %74.2 = Inc                      %74.1
  lgl$-           %74.3 = Lt                 d     %279.2, %74.2, elided
  lgl$#-          %74.4 = Identical                %74.3, true
  void                    Branch                   %74.4 -> BB78 (if true) | BB75 (if false)
BB78   <- [74]
  val?^ | miss    %78.0 = LdVar              eR    package, e0.3
  val?            %78.1 = Force!<lazy>       !v    %78.0, e0.3   <str$->
  lgl$#-          %78.2 = IsType                   %78.1 isA val?-
  void                    Branch                   %78.2 -> BB285 (if true) | BB286 (if false)
BB75   <- [74]
  val?            %75.0 = Extract2_1D        wed   %279.1, %74.2, elided
  void                    StVar              lW    i, %75.0, e0.3
  val?^ | miss    %75.2 = LdVar              eR    .registerS3method, e0.3
  lgl$#-          %75.3 = Identical                %75.2, %0.5
  void                    Branch                   %75.3 -> BB293 (if true) | BB294 (if false)
BB285   <- [78]
  val?-           %285.0 = CastType           d     dn %78.1   <str$->
  lgl-            %285.1 = Neq                wed   %285.0, "MASS", elided   <lgl$->
  lgl$#-          %285.2 = IsType                   %285.1 isA lgl$-
  void                    Branch                   %285.2 -> BB287 (if true) | BB288 (if false)
BB286   <- [78]
  fs              %286.0 = FrameState         R     0x55bbe424b860+2993: [%78.1], env=e0.3
  void                    Deopt              !v    %286.0, Typecheck@0x55bbe41241e0[Type#186], %78.1   !
BB293   <- [75]
  prom-           %293.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p29, e0.3
  prom-           %293.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p31, e0.3
  prom-           %293.2 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p33, e0.3
  prom-           %293.3 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p35, e0.3
  prom-           %293.4 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p37, e0.3
  val?            %293.5 = StaticCall         !v    .registerS3method[0x55bbe4ab92d0](%293.0, %293.1, %293.2, %293.3, %293.4) from %0.5 e0.3
  int$-           %293.6 = %74.2
  goto BB74
BB294   <- [75]
  fs              %294.0 = FrameState         R     0x55bbe424b860+2921: [%279.1, %279.2, %74.2], env=e0.3
  void                    Deopt              !v    %294.0, CallTarget@0x55bbe41241e0[Call#40], %75.2   !
BB287   <- [285]
  lgl$-           %287.0 = CastType           d     dn %285.1
  lgl$-           %287.1 = AsLogical                %287.0
  lgl$#-          %287.2 = Identical                %287.1, false
  void                    Branch                   %287.2 -> BB118 (if true) | BB83 (if false)
BB288   <- [285]
  void                    Nop                !     
  lgl-            %288.1 = %285.1
  dr              %288.2 = Typecheck@0x55bbe41241e0[Type#187]
  goto BB81
BB118   <- [287]
  void                    Nop                !     
  lgl$-           %118.1 = %287.1
  goto BB86
BB83   <- [287]
  val?^ | miss    %83.0 = LdVar              eR    nrow, e0.3
  lgl$#-          %83.1 = Identical                %83.0, function(x) <(rir::DispatchTable*)0x55bbe4286c|...
  void                    Branch                   %83.1 -> BB289 (if true) | BB290 (if false)
BB81   <- [288, 290, 292]
  val?^ | miss    %81.0 = Phi                      %288.1:BB288, %290.1:BB290, %292.1:BB292
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %288.2:BB288, %290.2:BB290, %292.2:BB292
  dr              %81.3 = %81.2
  fs              %81.4 = FrameState         R     0x55bbe424b860+3005: [%285.1], env=e0.3
  void                    Deopt              !v    %81.4, %81.3, %81.1   !
BB86   <- [118, 295]
  lgl$-           %86.0 = Phi                      %295.3:BB295, %118.1:BB118
  lgl$-           %86.1 = %86.0
  lgl$#-          %86.2 = CheckTrueFalse     e     %86.1
  void                    Branch                   %86.2 -> BB117 (if true) | BB87 (if false)
BB289   <- [83]
  val?^ | miss    %289.0 = LdVar              eR    overwrite, e0.3
  lgl$#-          %289.1 = IsType                   %289.0 isA val?~+ | miss
  void                    Branch                   %289.1 -> BB291 (if true) | BB292 (if false)
BB290   <- [83]
  void                    Nop                !     
  val?^ | miss    %290.1 = %83.0
  dr              %290.2 = CallTarget@0x55bbe41241e0[Call#41]
  goto BB81
BB117   <- [86]
  void                    StVar              lW    .fmt, %0.7, e0.3
  (cls|spec|blt)  %117.1 = LdFun              !v    [, e0.3
  fs              %117.2 = FrameState         R     0x55bbe424b860+3097: [%117.1], env=e0.3
  void                    Deopt              !v    %117.2, DeadCall@0x55bbe41241e0[Call#42], %117.1   !
BB87   <- [86]
  void                    StVar              lW    register_S3_method_delayed, %0.6, e0.3
  val?^ | miss    %87.1 = LdVar              eR    nrow, e0.3
  lgl$#-          %87.2 = Identical                %87.1, function(x) <(rir::DispatchTable*)0x55bbe4286c|...
  void                    Branch                   %87.2 -> BB297 (if true) | BB298 (if false)
BB291   <- [289]
  val?~+ | miss   %291.0 = CastType           d     dn %289.0
  val?+           %291.1 = Force!<value>            %291.0,    <str_>
  val+            %291.2 = CallSafeBuiltin    wed   dim(%291.1)    <int->
  val?            %291.3 = Extract1_1D        wed   %291.2, 1L, elided   <int$->
  lgl$#-          %291.4 = IsType                   %291.3 isA int$-
  void                    Branch                   %291.4 -> BB295 (if true) | BB296 (if false)
BB292   <- [289]
  void                    Nop                !     
  val?^ | miss    %292.1 = %289.0
  dr              %292.2 = Typecheck@0x55bbe41241e0[Type#188]
  goto BB81
BB297   <- [87]
  val?^ | miss    %297.0 = LdVar              eR    delayed, e0.3
  lgl$#-          %297.1 = IsType                   %297.0 isA val?~+ | miss
  void                    Branch                   %297.1 -> BB299 (if true) | BB300 (if false)
BB298   <- [87]
  void                    Nop                !     
  val?^ | miss    %298.1 = %87.1
  dr              %298.2 = CallTarget@0x55bbe41241e0[Call#82]
  goto BB88
BB295   <- [291]
  int$-           %295.0 = CastType           d     dn %291.3
  lgl$-           %295.1 = AsLogical                %295.0
  lgl$-           %295.2 = LAnd                     %287.1, %295.1
  lgl$-           %295.3 = %295.2
  goto BB86
BB296   <- [291]
  fs              %296.0 = FrameState         R     0x55bbe424b860+3049: [%287.1], env=e0.3
  prom-           %296.1 = MkArg                    %291.1, registerS3methods[0x55bbe50625b0]_p38 (!refl), e0.3
  val?~           %296.2 = CastType                 up %296.1
  env             e296.3 = (MkEnv)            l     x=%296.2, parent=R_BaseNamespace, context 0
  fs              %296.4 = FrameState         R     0x55bbe43efa70+134: [%291.3], env=e296.3, next=%296.0
  void                    Deopt              !v    %296.4, Typecheck@0x55bbe3077408[Type#3], %291.3   !
BB299   <- [297]
  val?~+ | miss   %299.0 = CastType           d     dn %297.0
  val?+           %299.1 = Force!<value>            %299.0,    <str+>
  val+            %299.2 = CallSafeBuiltin    wed   dim(%299.1)    <int->
  val?            %299.3 = Extract1_1D        wed   %299.2, 1L, elided   <int$->
  lgl$#-          %299.4 = IsType                   %299.3 isA int$-
  void                    Branch                   %299.4 -> BB301 (if true) | BB302 (if false)
BB300   <- [297]
  void                    Nop                !     
  val?^ | miss    %300.1 = %297.0
  dr              %300.2 = Typecheck@0x55bbe41241e0[Type#256]
  goto BB88
BB88   <- [298, 300]
  val?^ | miss    %88.0 = Phi                      %298.1:BB298, %300.1:BB300
  val?^ | miss    %88.1 = %88.0
  dr              %88.2 = Phi                      %298.2:BB298, %300.2:BB300
  dr              %88.3 = %88.2
  fs              %88.4 = FrameState         R     0x55bbe424b860+4203: [], env=e0.3
  void                    Deopt              !v    %88.4, %88.3, %88.1   !
BB301   <- [299]
  int$-           %301.0 = CastType           d     dn %299.3
  lgl$#-          %301.1 = CheckTrueFalse     e     %301.0
  void                    Branch                   %301.1 -> BB114 (if true) | BB92 (if false)
BB302   <- [299]
  void                    Nop                !     
  val?            %302.1 = %299.3
  dr              %302.2 = Typecheck@0x55bbe3077408[Type#3]
  goto BB90
BB114   <- [301]
  val?^ | miss    %114.0 = LdVar              eR    seq_len, e0.3
  lgl$#-          %114.1 = Identical                <blt seq_len>, %114.0   <@?>
  void                    Branch                   %114.1 -> BB116 (if true) | BB115 (if false)
BB92   <- [301]
  val?^ | miss    %92.0 = LdVar              eR    getNamespaceInfo, e0.3
  lgl$#-          %92.1 = Identical                %92.0, function(ns, which) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %92.1 -> BB303 (if true) | BB304 (if false)
BB90   <- [302, 304]
  val?^ | miss    %90.0 = Phi                      %302.1:BB302, %304.1:BB304
  val?^ | miss    %90.1 = %90.0
  dr              %90.2 = Phi                      %302.2:BB302, %304.2:BB304
  dr              %90.3 = %90.2
  fs              %90.4 = FrameState         R     0x55bbe424b860+4235: [], env=e0.3
  prom-           %90.5 = MkArg                    %299.1, registerS3methods[0x55bbe50625b0]_p39 (!refl), e0.3
  val?~           %90.6 = CastType                 up %90.5
  env             e90.7 = (MkEnv)            l     x=%90.6, parent=R_BaseNamespace, context 0
  fs              %90.8 = FrameState         R     0x55bbe43efa70+134: [%299.3], env=e90.7, next=%90.4
  void                    Deopt              !v    %90.8, %90.3, %90.1   !
BB116   <- [114]
  (cls|spec|blt)  %116.0 = LdFun              !v    nrow, e0.3
  fs              %116.1 = FrameState         R     0x55bbe424b860+4316: [<blt seq_len>, %116.0], env=e0.3
  void                    Deopt              !v    %116.1, DeadCall@0x55bbe41241e0[Call#85], %116.0   !
BB115   <- [114]
  (cls|spec|blt)  %115.0 = LdFun              !v    seq_len, e0.3
  fs              %115.1 = FrameState         R     0x55bbe424b860+4279: [%115.0], env=e0.3
  void                    Deopt              !v    %115.1, DeadCall@0x55bbe41241e0[Call#83], %115.0   !
BB303   <- [92]
  prom-           %303.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p40, e0.3
  ct              %303.1 = PushContext        lCL   %303.0, "S3methods", getNamespaceInfo(env, "S3methods"), function(ns, which) <(rir::DispatchTable*)0x55|..., e0.3
  val?^           %303.2 = CastType                 up %303.0
  env             e303.3 = MkEnv              l     ns=%303.2, which="S3methods", parent=R_BaseNamespace, context 1
  val?            %303.4 = Force!<lazy>       !vL   %303.2, e303.3   <env->
  prom-           %303.5 = MkArg                    %303.4, registerS3methods[0x55bbe50625b0]_p75 (!refl), 
  val?            %303.6 = StaticCall         !v    asNamespace[0x55bbe4330cd0](%303.5, false) { 0 1n } e303.3   <env->
  void                    StVar              lW    ns, %303.6, e303.3
  val?^ | miss    %303.8 = LdVar              eR    get, e303.3
  lgl$#-          %303.9 = Identical                %303.8, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Branch                   %303.9 -> BB305 (if true) | BB306 (if false)
BB304   <- [92]
  void                    Nop                !     
  val?^ | miss    %304.1 = %92.0
  dr              %304.2 = CallTarget@0x55bbe41241e0[Call#90]
  goto BB90
BB305   <- [303]
  prom-           %305.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p76, e303.3
  prom-           %305.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p77, e303.3
  val?            %305.2 = StaticCall         !v    get[0x55bbe408e2d0](%305.0, missingArg, %305.1) { 0 2n } e303.3   <(str|env)_>
  val?            %305.3 = PopContext         C     %305.2, %303.1   <str_>
  void                    StVar              lW    nsI, %305.3, e0.3
  lgl$#-          %305.5 = IsType                   %305.3 isA val?+
  val?^ | miss    %305.6 = LdVar              eR    ncol, e0.3
  lgl$#-          %305.7 = Identical                %305.6, function(x) <(rir::DispatchTable*)0x55bbe42ddf|...
  void                    Branch                   %305.7 -> BB307 (if true) | BB308 (if false)
BB306   <- [303]
  fs              %306.0 = FrameState         R     0x55bbe424b860+5216: [], env=e0.3
  fs              %306.1 = FrameState         R     0x55bbe4094210+59: [], env=e303.3, next=%306.0
  void                    Deopt              !v    %306.1, CallTarget@0x55bbe3103eb8[Call#1], %303.8   !
BB307   <- [305]
  void                    Branch                   %305.5 -> BB309 (if true) | BB310 (if false)
BB308   <- [305]
  void                    Nop                !     
  val?^ | miss    %308.1 = %305.6
  dr              %308.2 = CallTarget@0x55bbe41241e0[Call#91]
  goto BB95
BB309   <- [307]
  val?+           %309.0 = CastType           d     dn %305.3   <str_>
  val+            %309.1 = CallSafeBuiltin    wed   dim(%309.0)    <int->
  val?            %309.2 = Extract1_1D        wed   %309.1, 2L, elided   <int$->
  lgl$#-          %309.3 = IsType                   %309.2 isA int$-
  void                    Branch                   %309.3 -> BB311 (if true) | BB312 (if false)
BB310   <- [307]
  void                    Nop                !     
  val?            %310.1 = %305.3
  dr              %310.2 = Typecheck@0x55bbe41241e0[Type#308]
  goto BB95
BB95   <- [308, 310]
  val?^ | miss    %95.0 = Phi                      %308.1:BB308, %310.1:BB310
  val?^ | miss    %95.1 = %95.0
  dr              %95.2 = Phi                      %308.2:BB308, %310.2:BB310
  dr              %95.3 = %95.2
  fs              %95.4 = FrameState         R     0x55bbe424b860+5230: [], env=e0.3
  void                    Deopt              !v    %95.4, %95.3, %95.1   !
BB311   <- [309]
  int$-           %311.0 = CastType           d     dn %309.2
  void                    StVar              lW    p1, %311.0, e0.3
  val?^ | miss    %311.2 = LdVar              eR    info, e0.3
  val?            %311.3 = Force!<value>      !v    %311.2, e0.3   <str_>
  lgl$#-          %311.4 = IsType                   %311.3 isA val?+
  void                    Branch                   %311.4 -> BB313 (if true) | BB314 (if false)
BB312   <- [309]
  prom-           %312.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p41 (!refl), e0.3
  val?^           %312.1 = CastType                 up %312.0
  fs              %312.2 = FrameState         R     0x55bbe424b860+5262: [], env=e0.3
  env             e312.3 = (MkEnv)            l     x=%312.1, parent=R_BaseNamespace, context 0
  fs              %312.4 = FrameState         R     0x55bbe45ee540+134: [%309.2], env=e312.3, next=%312.2
  void                    Deopt              !v    %312.4, Typecheck@0x55bbe30b3ee8[Type#3], %309.2   !
BB313   <- [311]
  val?+           %313.0 = CastType           d     dn %311.3   <str_>
  val+            %313.1 = CallSafeBuiltin    wed   dim(%313.0)    <int->
  val?            %313.2 = Extract1_1D        wed   %313.1, 2L, elided   <int$->
  lgl$#-          %313.3 = IsType                   %313.2 isA int$-
  void                    Branch                   %313.3 -> BB315 (if true) | BB316 (if false)
BB314   <- [311]
  fs              %314.0 = FrameState         R     0x55bbe424b860+5323: [true], env=e0.3
  prom-           %314.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p42, e0.3
  val?^           %314.2 = CastType                 up %314.1
  env             e314.3 = (MkEnv)            l     x=%314.2, parent=R_BaseNamespace, context 0
  fs              %314.4 = FrameState         R     0x55bbe45ee540+69: [<blt dim>], env=e314.3, next=%314.0
  fs              %314.5 = FrameState         R     0x55bbe40b7a00+5(pr): [%311.3], env=e0.3, next=%314.4
  void                    Deopt              !v    %314.5, Typecheck@0x55bbe30b3ee8[Type#1], %311.3   !
BB315   <- [313]
  int$-           %315.0 = CastType           d     dn %313.2
  void                    StVar              lW    p2, %315.0, e0.3
  val?^ | miss    %315.2 = LdVar              eR    p1, e0.3
  lgl$#-          %315.3 = IsType                   %315.2 isA int$-
  void                    Branch                   %315.3 -> BB317 (if true) | BB318 (if false)
BB316   <- [313]
  fs              %316.0 = FrameState         R     0x55bbe424b860+5323: [true], env=e0.3
  prom-           %316.1 = MkArg                    %313.0, registerS3methods[0x55bbe50625b0]_p42 (!refl), e0.3
  val?~           %316.2 = CastType                 up %316.1
  env             e316.3 = (MkEnv)            l     x=%316.2, parent=R_BaseNamespace, context 0
  fs              %316.4 = FrameState         R     0x55bbe45ee540+134: [%313.2], env=e316.3, next=%316.0
  void                    Deopt              !v    %316.4, Typecheck@0x55bbe30b3ee8[Type#3], %313.2   !
BB317   <- [315]
  int$-           %317.0 = CastType           d     dn %315.2
  lgl$-           %317.1 = Neq                d     %317.0, %315.0, elided   <lgl$->
  lgl$-           %317.2 = AsLogical                %317.1
  lgl$-           %317.3 = AsLogical                %317.2
  lgl$#-          %317.4 = CheckTrueFalse     e     %317.3
  void                    Branch                   %317.4 -> BB113 (if true) | BB105 (if false)
BB318   <- [315]
  void                    Nop                !     
  val?^ | miss    %318.1 = %315.2
  dr              %318.2 = Typecheck@0x55bbe41241e0[Type#313]
  goto BB103
BB113   <- [317]
  (cls|spec|blt)  %113.0 = LdFun              !v    stop, e0.3
  fs              %113.1 = FrameState         R     0x55bbe424b860+5406: [%113.0], env=e0.3
  void                    Deopt              !v    %113.1, DeadCall@0x55bbe41241e0[Call#93], %113.0   !
BB105   <- [317]
  val?^ | miss    %105.0 = LdVar              eR    setNamespaceInfo, e0.3
  lgl$#-          %105.1 = Identical                %105.0, function(ns, which, val) <(rir::DispatchTable*|...
  void                    Branch                   %105.1 -> BB319 (if true) | BB320 (if false)
BB103   <- [318, 320]
  val?^ | miss    %103.0 = Phi                      %318.1:BB318, %320.1:BB320
  val?^ | miss    %103.1 = %103.0
  dr              %103.2 = Phi                      %318.2:BB318, %320.2:BB320
  dr              %103.3 = %103.2
  fs              %103.4 = FrameState         R     0x55bbe424b860+5339: [true, %315.0], env=e0.3
  void                    Deopt              !v    %103.4, %103.3, %103.1   !
BB319   <- [105]
  prom-           %319.0 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p43, e0.3
  prom-           %319.1 = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p44, e0.3
  ct              %319.2 = PushContext        lCL   %319.0, "S3methods", %319.1, setNamespaceInfo(env, "S3methods", rbind(info,|..., function(ns, which, val) <(rir::DispatchTable*|..., e0.3
  val?^           %319.3 = CastType                 up %319.1
  val?^           %319.4 = CastType                 up %319.0
  env             e319.5 = MkEnv              l     ns=%319.4, which="S3methods", val=%319.3, parent=R_BaseNamespace, context 1
  val?            %319.6 = Force!<lazy>       !vL   %319.4, e319.5   <env->
  prom-           %319.7 = MkArg                    %319.6, registerS3methods[0x55bbe50625b0]_p78 (!refl), 
  val?            %319.8 = StaticCall         !v    asNamespace[0x55bbe4330cd0](%319.7, false) { 0 1n } e319.5   <env->
  void                    StVar              lW    ns, %319.8, e319.5
  lgl$#-          %319.10 = IsType                   %319.8 isA val+   <true>
  lgl$#-          %319.11 = IsType                   %319.8 isA val?-
  val             %319.12 = ChkMissing         e     %319.8
  void                    Branch                   %319.10 -> BB321 (if true) | BB322 (if false)
BB320   <- [105]
  void                    Nop                !     
  val?^ | miss    %320.1 = %105.0
  dr              %320.2 = CallTarget@0x55bbe41241e0[Call#97]
  goto BB103
BB321   <- [319]
  void                    Branch                   %319.11 -> BB323 (if true) | BB324 (if false)
BB322   <- [319]
  void                    Nop                !     
  lgl$#-          %322.1 = %319.10
  dr              %322.2 = DeadBranchReached@0x55bbe4ee18c0[Test#0]
  goto BB106
BB323   <- [321]
  val?-           %323.0 = CastType           d     dn %319.8   <env->
  val?            %323.1 = Extract2_1D        wed   %323.0, ".__NAMESPACE__.", elided   <env->
  void                    StVar              lW    info, %323.1, e319.5
  val?^ | miss    %323.3 = LdVar              eR    val, e319.5
  val?            %323.4 = Force!<lazy>       !v    %323.3, e319.5   <val?+>
  val?^ | miss    %323.5 = LdVar              eR    info !upd, e319.5
  lgl$#-          %323.6 = IsType                   %323.5 isA val?~- | miss
  void                    Branch                   %323.6 -> BB325 (if true) | BB326 (if false)
BB324   <- [321]
  void                    Nop                !     
  val?            %324.1 = %319.8
  dr              %324.2 = Typecheck@0x55bbe4ee18c0[Type#1]
  goto BB106
BB106   <- [322, 324]
  val?^ | miss    %106.0 = Phi                      %322.1:BB322, %324.1:BB324
  val?^ | miss    %106.1 = %106.0
  dr              %106.2 = Phi                      %322.2:BB322, %324.2:BB324
  dr              %106.3 = %106.2
  fs              %106.4 = FrameState         R     0x55bbe424b860+5489: [], env=e0.3
  fs              %106.5 = FrameState         R     0x55bbe4209f20+59: [], env=e319.5, next=%106.4
  void                    Deopt              !v    %106.5, %106.3, %106.1   !
BB325   <- [323]
  val?~- | miss   %325.0 = CastType           d     dn %323.5
  val?-           %325.1 = Force!<value>            %325.0,    <env->
  val?^ | miss    %325.2 = LdVar              eR    which, e319.5
  val?            %325.3 = Force!<value>      !v    %325.2, e319.5   <str$->
  lgl$#-          %325.4 = IsType                   %325.3 isA val?-
  lgl$#-          %325.5 = IsType                   %323.4 isA val?+
  void                    Branch                   %325.5 -> BB327 (if true) | BB328 (if false)
BB326   <- [323]
  fs              %326.0 = FrameState         R     0x55bbe424b860+5489: [], env=e0.3
  fs              %326.1 = FrameState         R     0x55bbe4209f20+135: [%323.4], env=e319.5, next=%326.0
  void                    Deopt              !v    %326.1, Typecheck@0x55bbe4ee18c0[Type#5], %323.5   !
BB327   <- [325]
  val?+           %327.0 = CastType           d     dn %323.4
  void                    Branch                   %325.4 -> BB329 (if true) | BB330 (if false)
BB328   <- [325]
  void                    Nop                !     
  val?            %328.1 = %323.4
  dr              %328.2 = Typecheck@0x55bbe4ee18c0[Type#4]
  goto BB110
BB329   <- [327]
  val?-           %329.0 = CastType           d     dn %325.3   <str$->
  val?+           %329.1 = Subassign2_1D      wed   %327.0, %325.1, %329.0, elided
  void                    StVar              lW    info, %329.1, e319.5
  void                    Invisible          v     
  val?            %329.4 = PopContext         C     %327.0, %319.2   <str_>
  val?            %329.5 = %329.4
  goto BB112
BB330   <- [327]
  void                    Nop                !     
  val?            %330.1 = %325.3
  dr              %330.2 = Typecheck@0x55bbe4ee18c0[Type#6]
  goto BB110
BB110   <- [328, 330]
  val?^ | miss    %110.0 = Phi                      %328.1:BB328, %330.1:BB330
  val?^ | miss    %110.1 = %110.0
  dr              %110.2 = Phi                      %328.2:BB328, %330.2:BB330
  dr              %110.3 = %110.2
  fs              %110.4 = FrameState         R     0x55bbe424b860+5489: [], env=e0.3
  fs              %110.5 = FrameState         R     0x55bbe4209f20+165: [%323.4, %323.4, %325.1, %325.3], env=e319.5, next=%110.4
  void                    Deopt              !v    %110.5, %110.3, %110.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 1, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 2, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     [, <0x55bbe1e1fc80>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p5, e0.0
  prom-           %0.3  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p6, 
  val?            %0.4  = NamedCall          !     %0.1(%0.2, missingArg, %0.3, drop=false) e0.0   <str_>
  void                    Return             l     %0.4
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  int-            %0.0  = Colon              vd    1L, 3L, elided   <val?_>
  void                    Return             l     %0.0
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 4L, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str_>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 3, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    loc, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eager, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eager, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 1, e0.0   <str->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    loc, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    l2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p21, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 1, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p23, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 2, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p25, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 3, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p27, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 4, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p30, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 1, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <@?>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p32, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 2, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p34, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 3, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fin, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p36, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 4, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    overwrite, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    delayed, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nsI, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rbind, <0x55bbe37ae8e0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p45, e0.0
  prom-           %0.3  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p46, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str_>
  void                    Return             l     %0.4
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nsI, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    localGeneric, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    localGeneric, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl->
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p51, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 1, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    is, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    genfun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Info, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p57, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, %3.1, 1, e0.0   <str$+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    env, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    is, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    genfun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 67:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     cbind, e0.0
  prom-           %0.2  = MkArg                    unboundValue, registerS3methods[0x55bbe50625b0]_p68, e0.0
  (miss|dots)     %0.3  = LdDots             R     , e0.0
  *dots-          %0.4  = ExpandDots               %0.3
  val?            %0.5  = NamedCall          !     %0.1(%0.2, .xpandDotsTrigger=%0.4) e0.0   <val?_>
  void                    Return             l     %0.5
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    deparse.level, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 75:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 76:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    which, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 77:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <env->
  val?            %0.3  = Extract2_1D        !v    %0.2, ".__NAMESPACE__.", e0.0   <env->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 78:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ registerS3methods[0x55bbe50625b0]                                            │
└──────────────────────────────────────────────────────────────────────────────┘
