
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x55bbe4dd5620]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1                     │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x55bbe4dd5620]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  lgl$#-          %0.4  = Identical                %0.0, missingArg
  env             e0.5  = MkEnv              l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=missingArg, parent=<env 0x55bbe2427378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB15 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, getClassDef[0x55bbe4dd5620]_p0, e0.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.5
  goto BB3
BB15   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 15]
  void                    Branch                   %0.4 -> BB14 (if true) | BB4 (if false)
BB14   <- [3]
  prom-           %14.0 = MkArg                    unboundValue, getClassDef[0x55bbe4dd5620]_p2, e0.5
  val?^ | miss    %14.1 = CastType                 up %14.0
  void                    StArg              lW    package, %14.1, e0.5
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [14, 4]
  void                    StArg              lW    inherits, true, e0.5
  val?^ | miss    %5.1  = LdVar              eR    .getClassesFromCache, <env 0x55bbe2427378>
  lgl$#-          %5.2  = Identical                %5.1, function(name) <(rir::DispatchTable*)0x55bbe4e|...
  void                    Branch                   %5.2 -> BB16 (if true) | BB17 (if false)
BB16   <- [5]
  prom-           %16.0 = MkArg                    unboundValue, getClassDef[0x55bbe4dd5620]_p5, e0.5
  ct              %16.1 = PushContext        lCL   %16.0, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x55bbe4e|..., e0.5
  val?^           %16.2 = CastType                 up %16.0
  val?^ | miss    %16.3 = LdVar              eR    .Call, <env 0x55bbe2427378>
  lgl$#-          %16.4 = Identical                <blt .Call>, %16.3   <true>
  void                    Branch                   %16.4 -> BB18 (if true) | BB19 (if false)
BB17   <- [5]
  fs              %17.0 = FrameState         R     0x55bbe43eece0+0: [], env=e0.5
  void                    Deopt              !v    %17.0, CallTarget@0x55bbe44a1f10[Call#3], %5.1
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    C_R_getClassFromCache, <env 0x55bbe2427378>
  env             e18.1 = MkEnv              l     name=%16.2, parent=<env 0x55bbe2427378>, context 1
  val?            %18.2 = Force!<value>      !v    %18.0, e18.1   <vec>
  val?^ | miss    %18.3 = LdVar              eR    name, e18.1
  val?            %18.4 = Force!<lazy>       !v    %18.3, e18.1   <str$+>
  val?^ | miss    %18.5 = LdVar              eR    .classTable, e18.1
  val?            %18.6 = Force!<wrapped>    !v    %18.5, e18.1   <env->
  val?            %18.7 = CallBuiltin        !v    .Call(%18.2, %18.4, %18.6) e18.1   <other>
  val?            %18.8 = PopContext         C     %18.7, %16.1   <other>
  lgl$-           %18.9 = Is                       %18.8, list
  void                    StVar              lW    value, %18.8, e0.5
  val             %18.11 = ChkMissing         e     %18.8   <other>
  lgl$#-          %18.12 = CheckTrueFalse     e     %18.9
  lgl$-           %18.13 = Is                       %18.11, NULL
  void                    Branch                   %18.12 -> BB13 (if true) | BB10 (if false)
BB19   <- [16]
  fs              %19.0 = FrameState         R     0x55bbe43eece0+72: [], env=e0.5
  env             e19.1 = (MkEnv)            l     name=%16.2, parent=<env 0x55bbe2427378>, context 1
  fs              %19.2 = FrameState         R     0x55bbe3fe4040+17: [<blt .Call>, %16.4], env=e19.1, next=%19.0
  void                    Deopt              !v    %19.2, DeadBranchReached@0x55bbe3076dd8[Test#0], %16.4   !
BB13   <- [18]
  (cls|spec|blt)  %13.0 = LdFun              !v    .resolveClassList, e0.5
  fs              %13.1 = FrameState         R     0x55bbe43eece0+121: [%13.0], env=e0.5
  void                    Deopt              !v    %13.1, DeadCall@0x55bbe44a1f10[Call#4], %13.0   !
BB10   <- [18]
  lgl$#-          %10.0 = CheckTrueFalse     e     %18.13
  void                    Branch                   %10.0 -> BB12 (if true) | BB11 (if false)
BB12   <- [10]
  (cls|spec|blt)  %12.0 = LdFun              !v    classMetaName, e0.5
  fs              %12.1 = FrameState         R     0x55bbe43eece0+207: [%12.0], env=e0.5
  void                    Deopt              !v    %12.1, DeadCall@0x55bbe44a1f10[Call#5], %12.0   !
BB11   <- [10]
  void                    Visible            v     
  void                    Return             l     %18.11
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55bbe4dd5620]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55bbe4dd5620]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3

│ getClassDef[0x55bbe4dd5620]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
