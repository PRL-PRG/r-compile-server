
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55bbe4736460]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 3                              │
│ Properties:                                                                  │
├────── Final PIR Version
FUN[0x55bbe4736460]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    is.function, <env 0x55bbe2427378>
  lgl$#-          %0.2  = Identical                <blt is.function>, %0.1   <true>
  void                    Branch                   %0.2 -> BB79 (if true) | BB80 (if false)
BB79   <- [0]
  env             e79.0 = MkEnv              l     f=%0.0, mustFind(miss)=false, where(miss)=missingArg, package(miss)="", parent=<env 0x55bbe2427378>, context 1
  val?            %79.1 = Force!<lazy>       !v    %0.0, e79.0   <str$->
  lgl$#-          %79.2 = IsType                   %79.1 isA val?-
  void                    Branch                   %79.2 -> BB81 (if true) | BB82 (if false)
BB80   <- [0]
  env             e80.0 = (MkEnv)            l     f=%0.0, mustFind(miss)=false, where(miss)=missingArg, package(miss)="", parent=<env 0x55bbe2427378>, context 1
  fs              %80.1 = FrameState         R     0x55bbe4728ee0+0: [], env=e80.0
  void                    Deopt              !v    %80.1, DeadBranchReached@0x55bbe56eec20[Test#0], %0.2
BB81   <- [79]
  val?-           %81.0 = CastType           d     dn %79.1   <str$->
  lgl$#-          %81.1 = CallSafeBuiltin    wed   is.function(%81.0)    <lgl$->
  void                    Branch                   %81.1 -> BB77 (if true) | BB7 (if false)
BB82   <- [79]
  fs              %82.0 = FrameState         R     0x55bbe4728ee0+69: [<blt is.function>, %79.1], env=e79.0
  void                    Deopt              !v    %82.0, Typecheck@0x55bbe56eec20[Type#1], %79.1   !
BB77   <- [81]
  (cls|spec|blt)  %77.0 = LdFun              !v    is, e79.0
  fs              %77.1 = FrameState         R     0x55bbe4728ee0+112: [%77.0], env=e79.0
  void                    Deopt              !v    %77.1, DeadCall@0x55bbe56eec20[Call#1], %77.0   !
BB7   <- [81]
  lgl$-           %7.0  = Missing            eR    where, e79.0
  lgl$#-          %7.1  = CheckTrueFalse     e     %7.0
  void                    Branch                   %7.1 -> BB76 (if true) | BB8 (if false)
BB76   <- [7]
  val?^ | miss    %76.0 = LdVar              eR    .getGeneric, e79.0
  lgl$#-          %76.1 = Identical                %76.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %76.1 -> BB83 (if true) | BB84 (if false)
BB8   <- [7]
  val?^ | miss    %8.0  = LdVar              eR    .getGeneric, e79.0
  lgl$#-          %8.1  = Identical                %8.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Branch                   %8.1 -> BB85 (if true) | BB86 (if false)
BB83   <- [76]
  prom-           %83.0 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p9, e79.0
  prom-           %83.1 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p10, e79.0
  val?            %83.2 = StaticCall         !v    .getGeneric[0x55bbe5c77940](%83.0, missingArg, %83.1) e79.0   <cls>
  val?            %83.3 = %83.2
  goto BB9
BB84   <- [76]
  void                    Nop                !     
  val?^ | miss    %84.1 = %76.0
  dr              %84.2 = CallTarget@0x55bbe56eec20[Call#7]
  goto BB5
BB85   <- [8]
  prom-           %85.0 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p2, e79.0
  prom-           %85.1 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p3, e79.0
  prom-           %85.2 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p4, e79.0
  val?            %85.3 = StaticCall         !v    .getGeneric[0x55bbe5350e00](%85.0, %85.1, %85.2) e79.0   <nil->
  val?            %85.4 = %85.3
  goto BB9
BB86   <- [8]
  void                    Nop                !     
  val?^ | miss    %86.1 = %8.0
  dr              %86.2 = CallTarget@0x55bbe56eec20[Call#6]
  goto BB5
BB9   <- [83, 85]
  val?            %9.0  = Phi                      %85.4:BB85, %83.3:BB83   <(nil|cls)>
  val?            %9.1  = %9.0
  lgl$-           %9.2  = Is                       %9.1, NULL
  lgl$-           %9.3  = AsLogical                %9.2
  lgl$#-          %9.4  = Identical                %9.3, false
  void                    StVar              lW    value, %9.1, e79.0
  val             %9.6  = ChkMissing         e     %9.1
  void                    Branch                   %9.4 -> BB75 (if true) | BB12 (if false)
BB5   <- [84, 86]
  val?^ | miss    %5.0  = Phi                      %84.1:BB84, %86.1:BB86
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %84.2:BB84, %86.2:BB86
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55bbe4728ee0+91: [%81.1], env=e79.0
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB75   <- [9]
  void                    Nop                !     
  lgl$-           %75.1 = %9.3
  goto BB17
BB12   <- [9]
  val?^ | miss    %12.0 = LdVar              eR    baseenv, e79.0
  lgl$#-          %12.1 = Identical                <blt baseenv>, %12.0   <true>
  void                    Branch                   %12.1 -> BB87 (if true) | BB88 (if false)
BB17   <- [75, 93]
  lgl$-           %17.0 = Phi                      %93.7:BB93, %75.1:BB75
  lgl$-           %17.1 = %17.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB46 (if true) | BB20 (if false)
BB87   <- [12]
  val?            %87.0 = CallBuiltin        !v    baseenv() e79.0   <env->
  lgl$#-          %87.1 = IsType                   %87.0 isA val+   <true>
  void                    Branch                   %87.1 -> BB89 (if true) | BB90 (if false)
BB88   <- [12]
  fs              %88.0 = FrameState         R     0x55bbe4728ee0+427: [], env=e79.0
  void                    Deopt              !v    %88.0, DeadBranchReached@0x55bbe56eec20[Test#1], %12.1   !
BB46   <- [17]
  val?^ | miss    %46.0 = LdVar              eR    is.function, e79.0
  lgl$#-          %46.1 = Identical                <blt is.function>, %46.0   <true>
  void                    Branch                   %46.1 -> BB95 (if true) | BB96 (if false)
BB20   <- [17]
  void                    Nop                !     
  goto BB21
BB89   <- [87]
  val?^ | miss    %89.0 = LdVar              eR    f, e79.0
  val?            %89.1 = Force!<wrapped>    !v    %89.0, e79.0   <str$->
  lgl$#-          %89.2 = IsType                   %89.1 isA val?-
  lgl$#-          %89.3 = IsType                   %87.0 isA val?-
  void                    Branch                   %89.3 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x55bbe4728ee0+525: [%9.3, %87.0], env=e79.0
  void                    Deopt              !v    %90.0, DeadBranchReached@0x55bbe56eec20[Test#2], %87.1   !
BB95   <- [46]
  val?^ | miss    %95.0 = LdVar              eR    baseDef, e79.0
  lgl$#-          %95.1 = IsType                   %95.0 isA val?~- | miss
  void                    Branch                   %95.1 -> BB97 (if true) | BB98 (if false)
BB96   <- [46]
  void                    Nop                !     
  lgl$#-          %96.1 = %46.1
  dr              %96.2 = DeadBranchReached@0x55bbe56eec20[Test#3]
  goto BB18
BB21   <- [20, 49, 55, 74]
  val?^ | miss    %21.0 = LdVar              eR    is.function, e79.0
  lgl$#-          %21.1 = Identical                <blt is.function>, %21.0   <true>
  void                    Branch                   %21.1 -> BB99 (if true) | BB100 (if false)
BB91   <- [89]
  val?-           %91.0 = CastType           d     dn %87.0   <env->
  void                    Branch                   %89.2 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  void                    Nop                !     
  val?            %92.1 = %87.0
  dr              %92.2 = Typecheck@0x55bbe56eec20[Type#20]
  goto BB15
BB97   <- [95]
  val?~- | miss   %97.0 = CastType           d     dn %95.0
  val?-           %97.1 = Force!<value>            %97.0,    <blt->
  lgl$#-          %97.2 = CallSafeBuiltin    wed   is.function(%97.1)    <lgl$->
  void                    Branch                   %97.2 -> BB50 (if true) | BB49 (if false)
BB98   <- [95]
  void                    Nop                !     
  val?^ | miss    %98.1 = %95.0
  dr              %98.2 = Typecheck@0x55bbe56eec20[Type#25]
  goto BB18
BB18   <- [96, 98]
  val?^ | miss    %18.0 = Phi                      %96.1:BB96, %98.1:BB98
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %96.2:BB96, %98.2:BB98
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55bbe4728ee0+601: [%17.1], env=e79.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB99   <- [21]
  val?^ | miss    %99.0 = LdVar              eR    value, e79.0
  val?            %99.1 = Force!<value>      !v    %99.0, e79.0   <cls>
  val?            %99.2 = CallBuiltin        !v    is.function(%99.1) e79.0   <lgl$->
  lgl$#-          %99.3 = IsType                   %99.2 isA lgl$-
  void                    Branch                   %99.3 -> BB101 (if true) | BB102 (if false)
BB100   <- [21]
  fs              %100.0 = FrameState         R     0x55bbe4728ee0+882: [], env=e79.0
  void                    Deopt              !v    %100.0, DeadBranchReached@0x55bbe56eec20[Test#4], %21.1   !
BB93   <- [91]
  val?-           %93.0 = CastType           d     dn %89.1   <str$->
  val?            %93.1 = Extract2_1D        wed   %91.0, %93.0, elided   <blt->
  lgl$-           %93.2 = Is                       %93.1, NULL
  void                    StVar              lW    baseDef, %93.1, e79.0
  lgl$-           %93.4 = Not                d     %93.2, elided
  lgl$-           %93.5 = AsLogical                %93.4
  lgl$-           %93.6 = LAnd                     %9.3, %93.5
  lgl$-           %93.7 = %93.6
  goto BB17
BB94   <- [91]
  void                    Nop                !     
  val?            %94.1 = %89.1
  dr              %94.2 = Typecheck@0x55bbe56eec20[Type#22]
  goto BB15
BB15   <- [92, 94]
  val?^ | miss    %15.0 = Phi                      %92.1:BB92, %94.1:BB94
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %92.2:BB92, %94.2:BB94
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55bbe4728ee0+570: [%9.3, %87.0, %89.1], env=e79.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB50   <- [97]
  val?^ | miss    %50.0 = LdVar              eR    genericForBasic, e79.0
  lgl$#-          %50.1 = Identical                %50.0, function(f, where=topenv(parent.frame()), must|...
  void                    Branch                   %50.1 -> BB105 (if true) | BB106 (if false)
BB49   <- [97]
  void                    Nop                !     
  goto BB21
BB101   <- [99]
  lgl$-           %101.0 = CastType           d     dn %99.2
  lgl$#-          %101.1 = CheckTrueFalse     e     %101.0
  void                    Branch                   %101.1 -> BB45 (if true) | BB26 (if false)
BB102   <- [99]
  fs              %102.0 = FrameState         R     0x55bbe4728ee0+973: [%99.2], env=e79.0
  void                    Deopt              !v    %102.0, Typecheck@0x55bbe56eec20[Type#36], %99.2   !
BB105   <- [50]
  prom-           %105.0 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p5, e79.0
  val?            %105.1 = StaticCall         !v    genericForBasic[0x55bbe2526dd0](%105.0, missingArg, false) { 0 2n } e79.0   <cls>
  void                    StVar              lW    value, %105.1, e79.0
  val?^ | miss    %105.3 = LdVar              eR    is, e79.0
  lgl$#-          %105.4 = Identical                %105.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %105.4 -> BB107 (if true) | BB108 (if false)
BB106   <- [50]
  fs              %106.0 = FrameState         R     0x55bbe4728ee0+703: [%97.2], env=e79.0
  void                    Deopt              !v    %106.0, CallTarget@0x55bbe56eec20[Call#10], %50.0   !
BB45   <- [101]
  val?^ | miss    %45.0 = LdVar              eR    value, e79.0
  void                    Visible            v     
  val?            %45.2 = Force!<value>      !     %45.0, e79.0   <cls>
  val?            %45.3 = %45.2
  goto BB41
BB26   <- [101]
  val?^ | miss    %26.0 = LdVar              eR    nzchar, e79.0
  lgl$#-          %26.1 = Identical                <blt nzchar>, %26.0   <@?>
  void                    Branch                   %26.1 -> BB28 (if true) | BB27 (if false)
BB107   <- [105]
  prom-           %107.0 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p6 (!refl), e79.0
  val?            %107.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%107.0, "genericFunction") e79.0   <lgl$->
  lgl$#-          %107.2 = IsType                   %107.1 isA lgl$-
  void                    Branch                   %107.2 -> BB109 (if true) | BB110 (if false)
BB108   <- [105]
  fs              %108.0 = FrameState         R     0x55bbe4728ee0+778: [], env=e79.0
  void                    Deopt              !v    %108.0, CallTarget@0x55bbe56eec20[Call#11], %105.3   !
BB41   <- [45, 40]
  val?            %41.0 = Phi                      %40.2:BB40, %45.3:BB45
  val?            %41.1 = %41.0
  void                    Return             l     %41.1
BB28   <- [26]
  val?^ | miss    %28.0 = LdVar              eR    package, e79.0
  val?            %28.1 = Force!             !v    %28.0, e79.0   <val?_>
  val?            %28.2 = CallBuiltin        !v    nzchar(%28.1) e79.0   <val?_>
  lgl$-           %28.3 = AsLogical          e     %28.2
  lgl$#-          %28.4 = Identical                %28.3, false
  void                    Branch                   %28.4 -> BB32 (if true) | BB29 (if false)
BB27   <- [26]
  (cls|spec|blt)  %27.0 = LdFun              !v    nzchar, e79.0
  fs              %27.1 = FrameState         R     0x55bbe4728ee0+1012: [%27.0], env=e79.0
  void                    Deopt              !v    %27.1, DeadCall@0x55bbe56eec20[Call#14], %27.0   !
BB109   <- [107]
  lgl$-           %109.0 = CastType           d     dn %107.1
  lgl$#-          %109.1 = CheckTrueFalse     e     %109.0
  void                    Branch                   %109.1 -> BB56 (if true) | BB55 (if false)
BB110   <- [107]
  void                    Nop                !     
  val?            %110.1 = %107.1
  dr              %110.2 = Typecheck@0x55bbe56eec20[Type#30]
  goto BB53
BB32   <- [28]
  lgl$#-          %32.0 = CheckTrueFalse     e     %28.3
  void                    Branch                   %32.0 -> BB44 (if true) | BB33 (if false)
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    is.na, e79.0
  lgl$#-          %29.1 = Identical                <blt is.na>, %29.0   <@?>
  void                    Branch                   %29.1 -> BB31 (if true) | BB30 (if false)
BB56   <- [109]
  val?^ | miss    %56.0 = LdVar              eR    .cacheGeneric, e79.0
  lgl$#-          %56.1 = Identical                %56.0, function(name, def) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %56.1 -> BB111 (if true) | BB112 (if false)
BB55   <- [109]
  void                    Nop                !     
  goto BB21
BB53   <- [110, 112]
  val?^ | miss    %53.0 = Phi                      %110.1:BB110, %112.1:BB112
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %110.2:BB110, %112.2:BB112
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x55bbe4728ee0+815: [%107.1], env=e79.0
  void                    Deopt              !v    %53.4, %53.3, %53.1   !
BB44   <- [32]
  (cls|spec|blt)  %44.0 = LdFun              !v    tryCatch, e79.0
  fs              %44.1 = FrameState         R     0x55bbe4728ee0+1229: [%44.0], env=e79.0
  void                    Deopt              !v    %44.1, DeadCall@0x55bbe56eec20[Call#20], %44.0   !
BB33   <- [32]
  val?^ | miss    %33.0 = LdVar              eR    is.function, e79.0
  lgl$#-          %33.1 = Identical                <blt is.function>, %33.0   <@?>
  void                    Branch                   %33.1 -> BB35 (if true) | BB34 (if false)
BB31   <- [29]
  (cls|spec|blt)  %31.0 = LdFun              !v    match, e79.0
  fs              %31.1 = FrameState         R     0x55bbe4728ee0+1152: [%28.3, <blt is.na>, %31.0], env=e79.0
  void                    Deopt              !v    %31.1, DeadCall@0x55bbe56eec20[Call#18], %31.0   !
BB30   <- [29]
  (cls|spec|blt)  %30.0 = LdFun              !v    is.na, e79.0
  fs              %30.1 = FrameState         R     0x55bbe4728ee0+1115: [%28.3, %30.0], env=e79.0
  void                    Deopt              !v    %30.1, DeadCall@0x55bbe56eec20[Call#15], %30.0   !
BB111   <- [56]
  prom-           %111.0 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p7, e79.0
  prom-           %111.1 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p8, e79.0
  ct              %111.2 = PushContext        lCL   %111.0, %111.1, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x55|..., e79.0
  val?^           %111.3 = CastType                 up %111.1
  val?^           %111.4 = CastType                 up %111.0
  val?^ | miss    %111.5 = LdVar              eR    .cacheGenericTable, <env 0x55bbe2427378>
  lgl$#-          %111.6 = Identical                %111.5, function(name, def, table) <(rir::DispatchTabl|...
  void                    Branch                   %111.6 -> BB113 (if true) | BB114 (if false)
BB112   <- [56]
  void                    Nop                !     
  val?^ | miss    %112.1 = %56.0
  dr              %112.2 = CallTarget@0x55bbe56eec20[Call#12]
  goto BB53
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    value, e79.0
  val?            %35.1 = Force!             !v    %35.0, e79.0   <val?_>
  lgl$#-          %35.2 = IsType                   %35.1 isA val?+
  void                    Branch                   %35.2 -> BB103 (if true) | BB104 (if false)
BB34   <- [33]
  (cls|spec|blt)  %34.0 = LdFun              !v    is.function, e79.0
  fs              %34.1 = FrameState         R     0x55bbe4728ee0+1311: [%34.0], env=e79.0
  void                    Deopt              !v    %34.1, DeadCall@0x55bbe56eec20[Call#23], %34.0   !
BB113   <- [111]
  env             e113.0 = MkEnv              l     name=%111.4, def=%111.3, parent=<env 0x55bbe2427378>, context 1
  prom-           %113.1 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p11, e113.0
  prom-           %113.2 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p12, e113.0
  prom-           %113.3 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p13, e113.0
  ct              %113.4 = PushContext        lCL   %113.1, %113.2, %113.3, .cacheGenericTable(name, def, .genericTable), function(name, def, table) <(rir::DispatchTabl|..., e113.0
  val?^           %113.5 = CastType                 up %113.3
  val?^           %113.6 = CastType                 up %113.2
  val?^           %113.7 = CastType                 up %113.1
  env             e113.8 = MkEnv              l     name=%113.7, def=%113.6, table=%113.5, parent=<env 0x55bbe2427378>, context 1
  val?            %113.9 = Force!<lazy>       !vL   %113.6, e113.8   <cls>
  void                    StVar              lW    fdef, %113.9, e113.8
  val?            %113.11 = Force!<lazy>       !vL   %113.5, e113.8   <env->
  lgl$#-          %113.12 = IsType                   %113.11 isA val+   <true>
  void                    Branch                   %113.12 -> BB115 (if true) | BB116 (if false)
BB114   <- [111]
  fs              %114.0 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  env             e114.1 = (MkEnv)            l     name=%111.4, def=%111.3, parent=<env 0x55bbe2427378>, context 1
  fs              %114.2 = FrameState         R     0x55bbe3e02320+0: [], env=e114.1, next=%114.0
  void                    Deopt              !v    %114.2, CallTarget@0x55bbe5aec098[Call#0], %111.5   !
BB103   <- [35]
  val?+           %103.0 = CastType           d     dn %35.1   <val?_>
  lgl$#-          %103.1 = CallSafeBuiltin    wed   is.function(%103.0)    <val?_>
  void                    Branch                   %103.1 -> BB43 (if true) | BB38 (if false)
BB104   <- [35]
  fs              %104.0 = FrameState         R     0x55bbe4728ee0+1352: [<blt is.function>, %35.1], env=e79.0
  void                    Deopt              !v    %104.0, Typecheck@0x55bbe56eec20[Type#55], %35.1   !
BB115   <- [113]
  val?            %115.0 = Force!<lazy>       !vL   %113.7, e113.8   <str$->
  lgl$#-          %115.1 = IsType                   %115.0 isA val?-
  lgl$#-          %115.2 = IsType                   %113.11 isA val?-
  void                    Branch                   %115.2 -> BB117 (if true) | BB118 (if false)
BB116   <- [113]
  fs              %116.0 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  fs              %116.1 = FrameState         R     0x55bbe3e02320+42: [], env=e113.0, next=%116.0
  fs              %116.2 = FrameState         R     0x55bbe48dd680+32: [%113.11], env=e113.8, next=%116.1
  void                    Deopt              !v    %116.2, DeadBranchReached@0x55bbe527e460[Test#0], %113.12   !
BB43   <- [103]
  val?^ | miss    %43.0 = LdVar              eR    value, e79.0
  void                    Visible            v     
  val?            %43.2 = Force!             !     %43.0, e79.0   <val?_>
  val?            %43.3 = %43.2
  goto BB40
BB38   <- [103]
  val?^ | miss    %38.0 = LdVar              eR    mustFind, e79.0
  val?            %38.1 = Force!             !v    %38.0, e79.0   <val?_>
  lgl$#-          %38.2 = CheckTrueFalse     we    %38.1
  void                    Branch                   %38.2 -> BB42 (if true) | BB39 (if false)
BB117   <- [115]
  val?-           %117.0 = CastType           d     dn %113.11   <env->
  void                    Branch                   %115.1 -> BB119 (if true) | BB120 (if false)
BB118   <- [115]
  void                    Nop                !     
  val?            %118.1 = %113.11
  dr              %118.2 = Typecheck@0x55bbe527e460[Type#1]
  goto BB61
BB40   <- [43, 39]
  val?            %40.0 = Phi                      %39.1:BB39, %43.3:BB43
  val?            %40.1 = %40.0
  val?            %40.2 = %40.1
  goto BB41
BB42   <- [38]
  (cls|spec|blt)  %42.0 = LdFun              !v    stop, e79.0
  fs              %42.1 = FrameState         R     0x55bbe4728ee0+1421: [%42.0], env=e79.0
  void                    Deopt              !v    %42.1, DeadCall@0x55bbe56eec20[Call#24], %42.0   !
BB39   <- [38]
  void                    Visible            v     
  nil-            %39.1 = nil
  goto BB40
BB119   <- [117]
  val?-           %119.0 = CastType           d     dn %115.0   <str$->
  val?            %119.1 = Extract2_1D        wed   %117.0, %119.0, elided   <cls>
  lgl$-           %119.2 = Is                       %119.1, NULL
  void                    StVar              lW    prev, %119.1, e113.8
  lgl$-           %119.4 = Not                d     %119.2, elided
  lgl$#-          %119.5 = CheckTrueFalse     e     %119.4
  void                    Branch                   %119.5 -> BB64 (if true) | BB63 (if false)
BB120   <- [117]
  void                    Nop                !     
  val?            %120.1 = %115.0
  dr              %120.2 = Typecheck@0x55bbe527e460[Type#3]
  goto BB61
BB61   <- [118, 120]
  val?^ | miss    %61.0 = Phi                      %118.1:BB118, %120.1:BB120
  val?^ | miss    %61.1 = %61.0
  dr              %61.2 = Phi                      %118.2:BB118, %120.2:BB120
  dr              %61.3 = %61.2
  fs              %61.4 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  fs              %61.5 = FrameState         R     0x55bbe3e02320+42: [], env=e113.0, next=%61.4
  fs              %61.6 = FrameState         R     0x55bbe48dd680+77: [%113.11, %115.0], env=e113.8, next=%61.5
  void                    Deopt              !v    %61.6, %61.3, %61.1   !
BB64   <- [119]
  (cls|spec|blt)  %64.0 = LdFun              !v    @, <0x55bbe1e1fbd8>, <env 0x55bbe2427378>
  prom-           %64.1 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p14, e113.8
  prom-           %64.2 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p15, e113.8
  val?            %64.3 = Call               !v    %64.0(%64.1, %64.2) e113.8   <str$->
  void                    StVar              lW    newpkg, %64.3, e113.8
  val?^ | miss    %64.5 = LdVar              eR    is.function, e113.8
  lgl$#-          %64.6 = Identical                <blt is.function>, %64.5   <true>
  void                    Branch                   %64.6 -> BB121 (if true) | BB122 (if false)
BB63   <- [119]
  fs              %63.0 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  fs              %63.1 = FrameState         R     0x55bbe3e02320+42: [], env=e113.0, next=%63.0
  (cls|spec|blt)  %63.2 = LdFun              !v    .getMethodsTable, <env 0x55bbe2427378>
  fs              %63.3 = FrameState         R     0x55bbe48dd680+1059: [%63.2], env=e113.8, next=%63.1
  void                    Deopt              !v    %63.3, DeadCall@0x55bbe527e460[Call#11], %63.2   !
BB121   <- [64]
  val?^ | miss    %121.0 = LdVar              eR    prev, e113.8
  val?            %121.1 = Force!<value>      !v    %121.0, e113.8   <cls>
  val?            %121.2 = CallBuiltin        !v    is.function(%121.1) e113.8   <lgl$->
  lgl$#-          %121.3 = IsType                   %121.2 isA lgl$-
  void                    Branch                   %121.3 -> BB123 (if true) | BB124 (if false)
BB122   <- [64]
  fs              %122.0 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  fs              %122.1 = FrameState         R     0x55bbe3e02320+42: [], env=e113.0, next=%122.0
  fs              %122.2 = FrameState         R     0x55bbe48dd680+168: [], env=e113.8, next=%122.1
  void                    Deopt              !v    %122.2, DeadBranchReached@0x55bbe527e460[Test#1], %64.6   !
BB123   <- [121]
  lgl$-           %123.0 = CastType           d     dn %121.2
  lgl$#-          %123.1 = CheckTrueFalse     e     %123.0
  void                    Branch                   %123.1 -> BB70 (if true) | BB69 (if false)
BB124   <- [121]
  void                    Nop                !     
  val?            %124.1 = %121.2
  dr              %124.2 = Typecheck@0x55bbe527e460[Type#10]
  goto BB67
BB70   <- [123]
  val?^ | miss    %70.0 = LdVar              eR    identical, e113.8
  lgl$#-          %70.1 = Identical                %70.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %70.1 -> BB125 (if true) | BB126 (if false)
BB69   <- [123]
  fs              %69.0 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  fs              %69.1 = FrameState         R     0x55bbe3e02320+42: [], env=e113.0, next=%69.0
  (cls|spec|blt)  %69.2 = LdFun              !v    match, e113.8
  fs              %69.3 = FrameState         R     0x55bbe48dd680+706: [%69.2], env=e113.8, next=%69.1
  void                    Deopt              !v    %69.3, DeadCall@0x55bbe527e460[Call#7], %69.2   !
BB67   <- [124, 126]
  val?^ | miss    %67.0 = Phi                      %124.1:BB124, %126.1:BB126
  val?^ | miss    %67.1 = %67.0
  dr              %67.2 = Phi                      %124.2:BB124, %126.2:BB126
  dr              %67.3 = %67.2
  fs              %67.4 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  fs              %67.5 = FrameState         R     0x55bbe3e02320+42: [], env=e113.0, next=%67.4
  fs              %67.6 = FrameState         R     0x55bbe48dd680+259: [%121.2], env=e113.8, next=%67.5
  void                    Deopt              !v    %67.6, %67.3, %67.1   !
BB125   <- [70]
  prom-           %125.0 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p16, e113.8
  prom-           %125.1 = MkArg                    unboundValue, FUN[0x55bbe4736460]_p17, e113.8
  ct              %125.2 = PushContext        lCL   %125.0, %125.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e113.8
  val?^           %125.3 = CastType                 up %125.1
  val?^           %125.4 = CastType                 up %125.0
  env             e125.5 = MkEnv              l     x=%125.4, y=%125.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %125.6 = Force!<lazy>       !vL   %125.4, e125.5   <val?>
  val?            %125.7 = Force!<lazy>       !vL   %125.3, e125.5   <val?>
  val?            %125.8 = CallBuiltin        !v    identical(%125.6, %125.7, true, true, true, true, false, true) e125.5
  val?            %125.9 = PopContext         C     %125.8, %125.2   <lgl$->
  lgl$#-          %125.10 = IsType                   %125.9 isA lgl$-
  void                    Branch                   %125.10 -> BB127 (if true) | BB128 (if false)
BB126   <- [70]
  void                    Nop                !     
  val?^ | miss    %126.1 = %70.0
  dr              %126.2 = CallTarget@0x55bbe527e460[Call#2]
  goto BB67
BB127   <- [125]
  lgl$-           %127.0 = CastType           d     dn %125.9
  lgl$#-          %127.1 = CheckTrueFalse     e     %127.0
  void                    Branch                   %127.1 -> BB74 (if true) | BB73 (if false)
BB128   <- [125]
  fs              %128.0 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  fs              %128.1 = FrameState         R     0x55bbe3e02320+42: [], env=e113.0, next=%128.0
  fs              %128.2 = FrameState         R     0x55bbe48dd680+312: [%125.9], env=e113.8, next=%128.1
  void                    Deopt              !v    %128.2, Typecheck@0x55bbe527e460[Type#13], %125.9   !
BB74   <- [127]
  val?^ | miss    %74.0 = LdVar              eR    fdef, e113.8
  val?            %74.1 = Force!<value>      !v    %74.0, e113.8   <cls>
  val?            %74.2 = PopContext         C     %74.1, %113.4   <cls>
  val?            %74.3 = PopContext         C     %74.2, %111.2   <cls>
  void                    StVar              lW    value, %74.3, e79.0
  goto BB21
BB73   <- [127]
  fs              %73.0 = FrameState         R     0x55bbe4728ee0+868: [], env=e79.0
  fs              %73.1 = FrameState         R     0x55bbe3e02320+42: [], env=e113.0, next=%73.0
  (cls|spec|blt)  %73.2 = LdFun              !v    @, e113.8
  fs              %73.3 = FrameState         R     0x55bbe48dd680+348: [%73.2], env=e113.8, next=%73.1
  void                    Deopt              !v    %73.3, DeadCall@0x55bbe527e460[Call#3], %73.2   !
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ FUN[0x55bbe4736460]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
