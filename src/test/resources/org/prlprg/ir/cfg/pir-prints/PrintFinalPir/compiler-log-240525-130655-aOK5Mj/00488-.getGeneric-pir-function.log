
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getGeneric[0x55bbe5c77940]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1                             │
│ Properties:                                                                  │
├────── Final PIR Version
.getGeneric[0x55bbe5c77940]
BB0
  val?^ | miss    %0.0  = LdArg                    2
  val?~ | miss    %0.1  = LdArg                    1
  val?^ | miss    %0.2  = LdArg                    0
  lgl$#-          %0.3  = Identical                %0.1, missingArg
  lgl$#-          %0.4  = Identical                %0.0, missingArg
  env             e0.5  = MkEnv              l     f=%0.2, where=%0.1, package=%0.0, parent=<env 0x55bbe2427378>, context 1
  void                    Branch                   %0.3 -> BB2 (if true) | BB56 (if false)
BB2   <- [0]
  prom-           %2.0  = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p0, e0.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e0.5
  goto BB3
BB56   <- [0]
  void                    Nop                !     
  goto BB3
BB3   <- [2, 56]
  void                    Branch                   %0.4 -> BB55 (if true) | BB4 (if false)
BB55   <- [3]
  void                    StArg              lW    package, "", e0.5
  goto BB5
BB4   <- [3]
  void                    Nop                !     
  goto BB5
BB5   <- [4, 55]
  lgl$-           %5.0  = Missing            eR    where, e0.5
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB52 (if true) | BB8 (if false)
BB52   <- [5]
  val?^ | miss    %52.0 = LdVar              eR    .getGenericFromCache, <env 0x55bbe2427378>
  lgl$#-          %52.1 = Identical                %52.0, function(name, where, pkg="") <(rir::DispatchT|...
  void                    Branch                   %52.1 -> BB57 (if true) | BB58 (if false)
BB8   <- [5]
  void                    Nop                !     
  nil-            %8.1  = nil
  goto BB9
BB57   <- [52]
  prom-           %57.0 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p4, e0.5
  prom-           %57.1 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p5, e0.5
  prom-           %57.2 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p6, e0.5
  ct              %57.3 = PushContext        lCL   %57.0, %57.1, %57.2, .getGenericFromCache(f, where, package), function(name, where, pkg="") <(rir::DispatchT|..., e0.5
  val?^           %57.4 = CastType                 up %57.2
  val?^           %57.5 = CastType                 up %57.1
  val?^           %57.6 = CastType                 up %57.0
  val?^ | miss    %57.7 = LdVar              eR    .getGenericFromCacheTable, <env 0x55bbe2427378>
  lgl$#-          %57.8 = Identical                %57.7, function(name, where, pkg="", table) <(rir::Di|...
  void                    Branch                   %57.8 -> BB59 (if true) | BB60 (if false)
BB58   <- [52]
  fs              %58.0 = FrameState         R     0x55bbe5124820+0: [], env=e0.5
  void                    Deopt              !v    %58.0, CallTarget@0x55bbe3f62980[Call#0], %52.0
BB9   <- [8, 59]
  val?            %9.0  = Phi                      %8.1:BB8, %59.7:BB59   <(nil|cls)>
  val?            %9.1  = %9.0
  lgl$-           %9.2  = Is                       %9.1, NULL
  void                    StVar              lW    value, %9.1, e0.5
  val             %9.4  = ChkMissing         e     %9.1
  lgl$#-          %9.5  = CheckTrueFalse     e     %9.2
  void                    Branch                   %9.5 -> BB14 (if true) | BB12 (if false)
BB59   <- [57]
  env             e59.0 = MkEnv              l     name=%57.6, where=%57.5, pkg=%57.4, parent=<env 0x55bbe2427378>, context 1
  prom-           %59.1 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p7, e59.0
  prom-           %59.2 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p8, e59.0
  prom-           %59.3 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p9, e59.0
  prom-           %59.4 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p10, e59.0
  val?            %59.5 = StaticCall         !v    .getGenericFromCacheTable[0x55bbe4e0a460](%59.1, %59.2, %59.3, %59.4) e59.0   <cls>
  val?            %59.6 = PopContext         C     %59.5, %57.3   <cls>
  val?            %59.7 = %59.6
  goto BB9
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x55bbe5124820+65: [], env=e0.5
  env             e60.1 = (MkEnv)            l     name=%57.6, where=%57.5, pkg=%57.4, parent=<env 0x55bbe2427378>, context 1
  fs              %60.2 = FrameState         R     0x55bbe3f8f630+0: [], env=e60.1, next=%60.0
  void                    Deopt              !v    %60.2, CallTarget@0x55bbe4d6bd20[Call#0], %57.7   !
BB14   <- [9]
  val?^ | miss    %14.0 = LdVar              eR    is.character, e0.5
  lgl$#-          %14.1 = Identical                <blt is.character>, %14.0   <true>
  void                    Branch                   %14.1 -> BB61 (if true) | BB62 (if false)
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB61   <- [14]
  val?^ | miss    %61.0 = LdVar              eR    f, e0.5
  val?            %61.1 = Force!<lazy>       !v    %61.0, e0.5   <str$->
  lgl$#-          %61.2 = CallSafeBuiltin    wed   is.character(%61.1)    <lgl$->
  void                    Branch                   %61.2 -> BB47 (if true) | BB17 (if false)
BB62   <- [14]
  fs              %62.0 = FrameState         R     0x55bbe5124820+79: [], env=e0.5
  void                    Deopt              !v    %62.0, DeadBranchReached@0x55bbe3f62980[Test#0], %14.1   !
BB13   <- [12, 38]
  val?^ | miss    %13.0 = LdVar              eR    value, e0.5
  void                    Visible            v     
  val?            %13.2 = Force!<value>      !     %13.0, e0.5   <(nil|cls)>
  void                    Return             l     %13.2
BB47   <- [61]
  val?^ | miss    %47.0 = LdVar              eR    %in%, e0.5
  lgl$#-          %47.1 = Identical                %47.0, function(x, table) <(rir::DispatchTable*)0x55b|...
  void                    Branch                   %47.1 -> BB63 (if true) | BB64 (if false)
BB17   <- [61]
  void                    Nop                !     
  lgl$#-          %17.1 = %61.2
  goto BB18
BB63   <- [47]
  val?^ | miss    %63.0 = LdVar              eR    f, e0.5
  val?            %63.1 = Force!<wrapped>    !v    %63.0, e0.5   <str$->
  lgl$#-          %63.2 = IsType                   %63.1 isA val?+
  void                    Branch                   %63.2 -> BB65 (if true) | BB66 (if false)
BB64   <- [47]
  fs              %64.0 = FrameState         R     0x55bbe5124820+200: [%61.2], env=e0.5
  void                    Deopt              !v    %64.0, CallTarget@0x55bbe3f62980[Call#2], %47.0   !
BB18   <- [17, 67]
  lgl$-           %18.0 = Phi                      %67.4:BB67, %17.1:BB17
  lgl$-           %18.1 = %18.0
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB46 (if true) | BB19 (if false)
BB65   <- [63]
  val?+           %65.0 = CastType           d     dn %63.1   <(int|str)+>
  val+            %65.1 = CallSafeBuiltin    wed   match(%65.0, "as.double", 0L, nil)    <int->
  lgl$#-          %65.2 = IsType                   %65.1 isA int-
  void                    Branch                   %65.2 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  prom-           %66.0 = MkArg                    %63.1, .getGeneric[0x55bbe5c77940]_p2 (!refl), e0.5
  val?~           %66.1 = CastType                 up %66.0
  env             e66.2 = (MkEnv)            l     x=%66.1, table="as.double", parent=R_BaseNamespace, context 0
  env             e66.3 = MaterializeEnv           , e66.2   <@?>
  prom-           %66.4 = MkArg                    %63.1, .getGeneric[0x55bbe5c77940]_p11 (!refl), e66.3
  val?~           %66.5 = CastType                 up %66.4
  fs              %66.6 = FrameState         R     0x55bbe5124820+249: [%61.2], env=e0.5
  fs              %66.7 = FrameState         R     0x55bbe244d320+54: [], env=e66.3, next=%66.6
  prom-           %66.8 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p12 (!refl), e66.3
  val?^           %66.9 = CastType                 up %66.8
  env             e66.10 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%66.9, x=%66.5, parent=R_BaseNamespace, context -1
  fs              %66.11 = FrameState         R     0x55bbe2634d40+9: [%63.1], env=e66.10, next=%66.7
  void                    Deopt              !v    %66.11, Typecheck@0x55bbe2687cb0[Type#0], %63.1   !
BB46   <- [18]
  void                    StVar              lW    f, "as.numeric", e0.5
  goto BB20
BB19   <- [18]
  void                    Nop                !     
  goto BB20
BB67   <- [65]
  int-            %67.0 = CastType           d     dn %65.1
  lgl-            %67.1 = Gt                 wed   %67.0, 0L, elided   <lgl->
  lgl$-           %67.2 = AsLogical                %67.1
  lgl$-           %67.3 = LAnd                     %61.2, %67.2
  lgl$-           %67.4 = %67.3
  goto BB18
BB68   <- [65]
  prom-           %68.0 = MkArg                    %65.0, .getGeneric[0x55bbe5c77940]_p2 (!refl), e0.5
  val?~           %68.1 = CastType                 up %68.0
  env             e68.2 = (MkEnv)            l     x=%68.1, table="as.double", parent=R_BaseNamespace, context 0
  env             e68.3 = MaterializeEnv           , e68.2   <@?>
  prom-           %68.4 = MkArg                    %65.0, .getGeneric[0x55bbe5c77940]_p11 (!refl), e68.3
  val?~           %68.5 = CastType                 up %68.4
  fs              %68.6 = FrameState         R     0x55bbe5124820+249: [%61.2], env=e0.5
  fs              %68.7 = FrameState         R     0x55bbe244d320+54: [], env=e68.3, next=%68.6
  prom-           %68.8 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p12 (!refl), e68.3
  val?^           %68.9 = CastType                 up %68.8
  env             e68.10 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%68.9, x=%68.5, parent=R_BaseNamespace, context -1
  fs              %68.11 = FrameState         R     0x55bbe2634d40+69: [%65.1], env=e68.10, next=%68.7
  void                    Deopt              !v    %68.11, Typecheck@0x55bbe347f688[Type#2], %65.1   !
BB20   <- [19, 46]
  val?^ | miss    %20.0 = LdVar              eR    is.character, e0.5
  lgl$#-          %20.1 = Identical                <blt is.character>, %20.0   <true>
  void                    Branch                   %20.1 -> BB69 (if true) | BB70 (if false)
BB69   <- [20]
  val?^ | miss    %69.0 = LdVar              eR    f, e0.5
  val?            %69.1 = Force!<wrapped>    !v    %69.0, e0.5   <str$->
  lgl$#-          %69.2 = CallSafeBuiltin    wed   is.character(%69.1)    <lgl$->
  void                    Branch                   %69.2 -> BB43 (if true) | BB25 (if false)
BB70   <- [20]
  fs              %70.0 = FrameState         R     0x55bbe5124820+282: [], env=e0.5
  void                    Deopt              !v    %70.0, DeadBranchReached@0x55bbe3f62980[Test#1], %20.1   !
BB43   <- [69]
  val?^ | miss    %43.0 = LdVar              eR    nzchar, e0.5
  lgl$#-          %43.1 = Identical                <blt nzchar>, %43.0   <true>
  void                    Branch                   %43.1 -> BB71 (if true) | BB72 (if false)
BB25   <- [69]
  void                    Nop                !     
  lgl$#-          %25.1 = %69.2
  goto BB26
BB71   <- [43]
  val?^ | miss    %71.0 = LdVar              eR    f, e0.5
  val?            %71.1 = Force!<wrapped>    !v    %71.0, e0.5   <str$->
  val?            %71.2 = CallBuiltin        !v    nzchar(%71.1) e0.5   <lgl$->
  lgl$#-          %71.3 = IsType                   %71.2 isA lgl$-
  void                    Branch                   %71.3 -> BB73 (if true) | BB74 (if false)
BB72   <- [43]
  fs              %72.0 = FrameState         R     0x55bbe5124820+373: [%69.2], env=e0.5
  void                    Deopt              !v    %72.0, DeadBranchReached@0x55bbe3f62980[Test#2], %43.1   !
BB26   <- [25, 73]
  lgl$-           %26.0 = Phi                      %73.4:BB73, %25.1:BB25
  lgl$-           %26.1 = %26.0
  lgl$#-          %26.2 = CheckTrueFalse     e     %26.1
  void                    Branch                   %26.2 -> BB42 (if true) | BB29 (if false)
BB73   <- [71]
  lgl$-           %73.0 = CastType           d     dn %71.2
  lgl$-           %73.1 = Not                d     %73.0, elided
  lgl$-           %73.2 = AsLogical                %73.1
  lgl$-           %73.3 = LAnd                     %69.2, %73.2
  lgl$-           %73.4 = %73.3
  goto BB26
BB74   <- [71]
  fs              %74.0 = FrameState         R     0x55bbe5124820+476: [%69.2, %71.2], env=e0.5
  void                    Deopt              !v    %74.0, Typecheck@0x55bbe3f62980[Type#16], %71.2   !
BB42   <- [26]
  (cls|spec|blt)  %42.0 = LdFun              !v    message, e0.5
  fs              %42.1 = FrameState         R     0x55bbe5124820+500: [%42.0], env=e0.5
  void                    Deopt              !v    %42.1, DeadCall@0x55bbe3f62980[Call#5], %42.0   !
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    .Call, e0.5
  lgl$#-          %29.1 = Identical                <blt .Call>, %29.0   <true>
  void                    Branch                   %29.1 -> BB75 (if true) | BB76 (if false)
BB75   <- [29]
  val?^ | miss    %75.0 = LdVar              eR    C_R_getGeneric, e0.5
  val?            %75.1 = Force!<value>      !v    %75.0, e0.5   <vec>
  val?^ | miss    %75.2 = LdVar              eR    f, e0.5
  val?            %75.3 = Force!<wrapped>    !v    %75.2, e0.5   <str$->
  val?^ | miss    %75.4 = LdVar              eR    as.environment, e0.5
  lgl$#-          %75.5 = Identical                <blt as.environment>, %75.4   <true>
  void                    Branch                   %75.5 -> BB77 (if true) | BB78 (if false)
BB76   <- [29]
  fs              %76.0 = FrameState         R     0x55bbe5124820+484: [%26.1], env=e0.5
  void                    Deopt              !v    %76.0, DeadBranchReached@0x55bbe3f62980[Test#3], %29.1   !
BB77   <- [75]
  val?^ | miss    %77.0 = LdVar              eR    where, e0.5
  val?            %77.1 = Force!<lazy>       !v    %77.0, e0.5   <env->
  val?            %77.2 = CallBuiltin        !v    as.environment(%77.1) e0.5   <env->
  val?^ | miss    %77.3 = LdVar              eR    package, e0.5
  val?            %77.4 = Force!<lazy>       !v    %77.3, e0.5   <str$->
  val?            %77.5 = CallBuiltin        !v    .Call(%75.1, %75.3, false, %77.2, %77.4) e0.5   <nil->
  lgl$-           %77.6 = Is                       %77.5, NULL
  void                    StVar              lW    value, %77.5, e0.5
  val             %77.8 = ChkMissing         e     %77.5
  lgl$-           %77.9 = Not                d     %77.6, elided
  lgl$-           %77.10 = AsLogical                %77.9
  lgl$#-          %77.11 = Identical                %77.10, false
  void                    Branch                   %77.11 -> BB41 (if true) | BB32 (if false)
BB78   <- [75]
  fs              %78.0 = FrameState         R     0x55bbe5124820+664: [<blt .Call>, %75.1, %75.3], env=e0.5
  void                    Deopt              !v    %78.0, DeadBranchReached@0x55bbe3f62980[Test#4], %75.5   !
BB41   <- [77]
  void                    Nop                !     
  lgl$-           %41.1 = %77.10
  goto BB35
BB32   <- [77]
  val?^ | miss    %32.0 = LdVar              eR    .GlobalEnv, e0.5
  val?            %32.1 = Force!             !v    %32.0, e0.5   <val?_>
  lgl$#-          %32.2 = IsType                   %32.1 isA val+   <@?>
  void                    Branch                   %32.2 -> BB40 (if true) | BB33 (if false)
BB35   <- [41, 34]
  lgl$-           %35.0 = Phi                      %34.8:BB34, %41.1:BB41
  lgl$-           %35.1 = %35.0
  lgl$-           %35.2 = AsLogical                %35.1
  lgl$#-          %35.3 = Identical                %35.2, false
  void                    Branch                   %35.3 -> BB37 (if true) | BB36 (if false)
BB40   <- [32]
  val?^ | miss    %40.0 = LdVar              eR    f, e0.5
  val?            %40.1 = Force!             !v    %40.0, e0.5   <val?_>
  val?            %40.2 = %40.1
  goto BB34
BB33   <- [32]
  prom-           %33.0 = MkArg                    unboundValue, .getGeneric[0x55bbe5c77940]_p3, e0.5
  prom-           %33.1 = %33.0
  goto BB34
BB37   <- [35]
  lgl$#-          %37.0 = CheckTrueFalse     e     %35.2
  void                    Branch                   %37.0 -> BB39 (if true) | BB38 (if false)
BB36   <- [35]
  (cls|spec|blt)  %36.0 = LdFun              !v    identical, e0.5
  fs              %36.1 = FrameState         R     0x55bbe5124820+940: [%35.2, %36.0], env=e0.5
  void                    Deopt              !v    %36.1, DeadCall@0x55bbe3f62980[Call#11], %36.0   !
BB34   <- [33, 40]
  val?            %34.0 = Phi                      %40.2:BB40, %33.1:BB33
  val?            %34.1 = %34.0
  val?            %34.2 = Extract2_1D        !v    %32.1, %34.1, e0.5   <val?_>
  lgl$-           %34.3 = Is                       %34.2, NULL
  void                    StVar              lW    vv, %34.2, e0.5
  lgl$-           %34.5 = Not                d     %34.3, elided
  lgl$-           %34.6 = AsLogical                %34.5
  lgl$-           %34.7 = LAnd                     %77.10, %34.6
  lgl$-           %34.8 = %34.7
  goto BB35
BB39   <- [37]
  (cls|spec|blt)  %39.0 = LdFun              !v    .cacheGeneric, e0.5
  fs              %39.1 = FrameState         R     0x55bbe5124820+995: [%39.0], env=e0.5
  void                    Deopt              !v    %39.1, DeadCall@0x55bbe3f62980[Call#12], %39.0   !
BB38   <- [37]
  void                    Nop                !     
  goto BB13
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .GlobalEnv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    pkg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3

│ .getGeneric[0x55bbe5c77940]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
