
┌──────────────────────────────────────────────────────────────────────────────┐
│ .cacheGenericTable[0x55bbe4f376a0]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  ForceOrd: 1                                                     │
├────── Final PIR Version
.cacheGenericTable[0x55bbe4f376a0]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     name=%0.2, def=%0.1, table=%0.0, parent=<env 0x55bbe2427378>, context 1
  val?            %0.4  = Force!<lazy>       !v    %0.1, e0.3   <cls>
  void                    StVar              lW    fdef, %0.4, e0.3
  val?^ | miss    %0.6  = LdVar              eR    table, e0.3
  val?            %0.7  = Force!<lazy>       !v    %0.6, e0.3   <env->
  lgl$#-          %0.8  = IsType                   %0.7 isA val+   <true>
  void                    Branch                   %0.8 -> BB21 (if true) | BB22 (if false)
BB21   <- [0]
  val?^ | miss    %21.0 = LdVar              eR    name, e0.3
  val?            %21.1 = Force!<lazy>       !v    %21.0, e0.3   <str$->
  lgl$#-          %21.2 = IsType                   %21.1 isA val?-
  lgl$#-          %21.3 = IsType                   %0.7 isA val?-
  void                    Branch                   %21.3 -> BB23 (if true) | BB24 (if false)
BB22   <- [0]
  fs              %22.0 = FrameState         R     0x55bbe48dd680+32: [%0.7], env=e0.3
  void                    Deopt              !v    %22.0, DeadBranchReached@0x55bbe527e460[Test#0], %0.8   !
BB23   <- [21]
  val?-           %23.0 = CastType           d     dn %0.7   <env->
  void                    Branch                   %21.2 -> BB25 (if true) | BB26 (if false)
BB24   <- [21]
  void                    Nop                !     
  val?            %24.1 = %0.7
  dr              %24.2 = Typecheck@0x55bbe527e460[Type#1]
  goto BB3
BB25   <- [23]
  val?-           %25.0 = CastType           d     dn %21.1   <str$->
  val?            %25.1 = Extract2_1D        wed   %23.0, %25.0, elided   <(nil|cls)>
  lgl$-           %25.2 = Is                       %25.1, NULL
  void                    StVar              lW    prev, %25.1, e0.3
  lgl$-           %25.4 = Not                d     %25.2, elided
  lgl$#-          %25.5 = CheckTrueFalse     e     %25.4
  void                    Branch                   %25.5 -> BB9 (if true) | BB7 (if false)
BB26   <- [23]
  void                    Nop                !     
  val?            %26.1 = %21.1
  dr              %26.2 = Typecheck@0x55bbe527e460[Type#3]
  goto BB3
BB3   <- [24, 26]
  val?^ | miss    %3.0  = Phi                      %24.1:BB24, %26.1:BB26
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %24.2:BB24, %26.2:BB26
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbe48dd680+77: [%0.7, %21.1], env=e0.3
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB9   <- [25]
  (cls|spec|blt)  %9.0  = LdFun              !v    @, <0x55bbe1e1fbd8>, e0.3
  prom-           %9.1  = MkArg                    unboundValue, .cacheGenericTable[0x55bbe4f376a0]_p1, e0.3
  prom-           %9.2  = MkArg                    unboundValue, .cacheGenericTable[0x55bbe4f376a0]_p2, e0.3
  val?            %9.3  = Call               !v    %9.0(%9.1, %9.2) e0.3   <str$->
  void                    StVar              lW    newpkg, %9.3, e0.3
  val?^ | miss    %9.5  = LdVar              eR    is.function, e0.3
  lgl$#-          %9.6  = Identical                <blt is.function>, %9.5   <true>
  void                    Branch                   %9.6 -> BB29 (if true) | BB30 (if false)
BB7   <- [25]
  val?^ | miss    %7.0  = LdVar              eR    .getMethodsTable, e0.3
  lgl$#-          %7.1  = Identical                %7.0, function(fdef, env=environment(fdef), check=TR|...
  void                    Branch                   %7.1 -> BB27 (if true) | BB28 (if false)
BB29   <- [9]
  val?^ | miss    %29.0 = LdVar              eR    prev, e0.3
  val?            %29.1 = Force!<value>      !v    %29.0, e0.3   <cls>
  val?            %29.2 = CallBuiltin        !v    is.function(%29.1) e0.3   <lgl$->
  lgl$#-          %29.3 = IsType                   %29.2 isA lgl$-
  void                    Branch                   %29.3 -> BB31 (if true) | BB32 (if false)
BB30   <- [9]
  fs              %30.0 = FrameState         R     0x55bbe48dd680+168: [], env=e0.3
  void                    Deopt              !v    %30.0, DeadBranchReached@0x55bbe527e460[Test#1], %9.6   !
BB27   <- [7]
  prom-           %27.0 = MkArg                    unboundValue, .cacheGenericTable[0x55bbe4f376a0]_p0, e0.3
  val?            %27.1 = StaticCall         !v    .getMethodsTable[0x55bbe461c480](%27.0) e0.3
  val?^ | miss    %27.2 = LdVar              eR    def, e0.3
  val?            %27.3 = Force!<wrapped>    !v    %27.2, e0.3   <cls>
  val?^ | miss    %27.4 = LdVar              eR    table, e0.3
  val?            %27.5 = Force!<wrapped>    !v    %27.4, e0.3   <env->
  val?^ | miss    %27.6 = LdVar              eR    name, e0.3
  val?            %27.7 = Force!<wrapped>    !v    %27.6, e0.3   <str$->
  val?            %27.8 = Subassign2_1D      !v    %27.3, %27.5, %27.7, e0.3
  void                    StVar              lW    table, %27.8, e0.3
  val?^ | miss    %27.10 = LdVar              eR    fdef, e0.3
  void                    Visible            v     
  val?            %27.12 = Force!<value>      !     %27.10, e0.3   <cls>
  val?            %27.13 = %27.12
  goto BB8
BB28   <- [7]
  fs              %28.0 = FrameState         R     0x55bbe48dd680+100: [%25.1], env=e0.3
  void                    Deopt              !v    %28.0, CallTarget@0x55bbe527e460[Call#11], %7.0   !
BB31   <- [29]
  lgl$-           %31.0 = CastType           d     dn %29.2
  lgl$#-          %31.1 = CheckTrueFalse     e     %31.0
  void                    Branch                   %31.1 -> BB15 (if true) | BB14 (if false)
BB32   <- [29]
  void                    Nop                !     
  val?            %32.1 = %29.2
  dr              %32.2 = Typecheck@0x55bbe527e460[Type#10]
  goto BB12
BB8   <- [19, 27]
  val?            %8.0  = Phi                      %27.13:BB27, %19.3:BB19
  val?            %8.1  = %8.0
  void                    Return             l     %8.1
BB15   <- [31]
  val?^ | miss    %15.0 = LdVar              eR    identical, e0.3
  lgl$#-          %15.1 = Identical                %15.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Branch                   %15.1 -> BB33 (if true) | BB34 (if false)
BB14   <- [31]
  (cls|spec|blt)  %14.0 = LdFun              !v    match, e0.3
  fs              %14.1 = FrameState         R     0x55bbe48dd680+706: [%14.0], env=e0.3
  void                    Deopt              !v    %14.1, DeadCall@0x55bbe527e460[Call#7], %14.0   !
BB12   <- [32, 34]
  val?^ | miss    %12.0 = Phi                      %32.1:BB32, %34.1:BB34
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %32.2:BB32, %34.2:BB34
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x55bbe48dd680+259: [%29.2], env=e0.3
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB33   <- [15]
  prom-           %33.0 = MkArg                    unboundValue, .cacheGenericTable[0x55bbe4f376a0]_p3, e0.3
  prom-           %33.1 = MkArg                    unboundValue, .cacheGenericTable[0x55bbe4f376a0]_p4, e0.3
  ct              %33.2 = PushContext        lCL   %33.0, %33.1, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e0.3
  val?^           %33.3 = CastType                 up %33.1
  val?^           %33.4 = CastType                 up %33.0
  env             e33.5 = MkEnv              l     x=%33.4, y=%33.3, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %33.6 = Force!<lazy>       !vL   %33.4, e33.5   <val?>
  val?            %33.7 = Force!<lazy>       !vL   %33.3, e33.5   <val?>
  val?            %33.8 = CallBuiltin        !v    identical(%33.6, %33.7, true, true, true, true, false, true) e33.5
  val?            %33.9 = PopContext         C     %33.8, %33.2   <lgl$->
  lgl$#-          %33.10 = IsType                   %33.9 isA lgl$-
  void                    Branch                   %33.10 -> BB35 (if true) | BB36 (if false)
BB34   <- [15]
  void                    Nop                !     
  val?^ | miss    %34.1 = %15.0
  dr              %34.2 = CallTarget@0x55bbe527e460[Call#2]
  goto BB12
BB35   <- [33]
  lgl$-           %35.0 = CastType           d     dn %33.9
  lgl$#-          %35.1 = CheckTrueFalse     e     %35.0
  void                    Branch                   %35.1 -> BB19 (if true) | BB18 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x55bbe48dd680+312: [%33.9], env=e0.3
  void                    Deopt              !v    %36.0, Typecheck@0x55bbe527e460[Type#13], %33.9   !
BB19   <- [35]
  val?^ | miss    %19.0 = LdVar              eR    fdef, e0.3
  void                    Visible            v     
  val?            %19.2 = Force!<value>      !     %19.0, e0.3   <cls>
  val?            %19.3 = %19.2
  goto BB8
BB18   <- [35]
  (cls|spec|blt)  %18.0 = LdFun              !v    @, e0.3
  fs              %18.1 = FrameState         R     0x55bbe48dd680+348: [%18.0], env=e0.3
  void                    Deopt              !v    %18.1, DeadCall@0x55bbe527e460[Call#3], %18.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    prev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3

│ .cacheGenericTable[0x55bbe4f376a0]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
