
┌──────────────────────────────────────────────────────────────────────────────┐
│ .checkGroupSigLength[0x55bbe506fb20]                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
.checkGroupSigLength[0x55bbe506fb20]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  env             e0.2  = MkEnv              l     gnames=%0.1, generics=%0.0, parent=<env 0x55bbe2427378>, context 1
  val+            %0.3  = Force!<lazy>       !vr   %0.1,    <vec$->
  void                    StVar              lW    funs, %0.3, e0.2
  void                    StVar              lW    recall, false, e0.2
  val?^ | miss    %0.6  = LdVar              eR    seq_along, <env 0x55bbe2427378>
  lgl$#-          %0.7  = Identical                <blt seq_along>, %0.6   <true>
  void                    Branch                   %0.7 -> BB110 (if true) | BB111 (if false)
BB110   <- [0]
  val?            %110.0 = CallBuiltin        !v    seq_along(%0.3) e0.2   <int$->
  lgl$#-          %110.1 = IsType                   %110.0 isA int$-
  void                    Branch                   %110.1 -> BB112 (if true) | BB113 (if false)
BB111   <- [0]
  fs              %111.0 = FrameState         R     0x55bbe20be980+38: [], env=e0.2
  void                    Deopt              !v    %111.0, DeadBranchReached@0x55bbe6265e28[Test#0], %0.7
BB112   <- [110]
  int$-           %112.0 = CastType           d     dn %110.0
  int$-           %112.1 = Inc                      0L
  lgl$-           %112.2 = Lt                 d     1L, %112.1, elided   <false>
  lgl$#-          %112.3 = Identical                %112.2, true
  void                    Branch                   %112.3 -> BB115 (if true) | BB114 (if false)
BB113   <- [110]
  void                    Nop                !     
  val?            %113.1 = %110.0
  dr              %113.2 = Typecheck@0x55bbe6265e28[Type#6]
  goto BB3
BB115   <- [112]
  void                    Nop                !     
  lgl$#-          %115.1 = %112.3
  dr              %115.2 = DeadBranchReached@0x55bbe6265e28[Test#1]
  goto BB3
BB114   <- [112]
  int$-           %114.0 = Extract2_1D        wed   %112.0, %112.1, elided
  void                    StVar              lW    i, %114.0, e0.2
  val?^ | miss    %114.2 = LdVar              eR    gnames, e0.2
  val?            %114.3 = Force!<wrapped>    !v    %114.2, e0.2   <vec$->
  lgl$#-          %114.4 = IsType                   %114.3 isA val+   <true>
  lgl$#-          %114.5 = IsType                   %114.3 isA val?-
  void                    Branch                   %114.4 -> BB116 (if true) | BB117 (if false)
BB3   <- [113, 115]
  val?^ | miss    %3.0  = Phi                      %113.1:BB113, %115.1:BB115
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %113.2:BB113, %115.2:BB115
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbe20be980+129: [%110.0], env=e0.2
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB116   <- [114]
  val?^ | miss    %116.0 = LdVar              eR    i, e0.2
  lgl$#-          %116.1 = IsType                   %116.0 isA int$-
  void                    Branch                   %116.1 -> BB118 (if true) | BB119 (if false)
BB117   <- [114]
  void                    Nop                !     
  lgl$#-          %117.1 = %114.4
  dr              %117.2 = DeadBranchReached@0x55bbe6265e28[Test#2]
  goto BB5
BB118   <- [116]
  int$-           %118.0 = CastType           d     dn %116.0
  void                    Branch                   %114.5 -> BB120 (if true) | BB121 (if false)
BB119   <- [116]
  void                    Nop                !     
  val?^ | miss    %119.1 = %116.0
  dr              %119.2 = Typecheck@0x55bbe6265e28[Type#9]
  goto BB5
BB5   <- [117, 119, 121]
  val?^ | miss    %5.0  = Phi                      %117.1:BB117, %119.1:BB119, %121.1:BB121
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %117.2:BB117, %119.2:BB119, %121.2:BB121
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55bbe20be980+183: [%112.0, 1L, %112.1, %114.3], env=e0.2
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB120   <- [118]
  val?-           %120.0 = CastType           d     dn %114.3   <vec$->
  val?            %120.1 = Extract2_1D        wed   %120.0, %118.0, elided   <str$->
  void                    StVar              lW    what, %120.1, e0.2
  val?^ | miss    %120.3 = LdVar              eR    generics, e0.2
  val?            %120.4 = Force!<lazy>       !v    %120.3, e0.2   <vec$->
  lgl$#-          %120.5 = IsType                   %120.4 isA val+   <true>
  lgl$#-          %120.6 = IsType                   %120.4 isA val?-
  void                    Branch                   %120.5 -> BB122 (if true) | BB123 (if false)
BB121   <- [118]
  void                    Nop                !     
  val?            %121.1 = %114.3
  dr              %121.2 = Typecheck@0x55bbe6265e28[Type#7]
  goto BB5
BB122   <- [120]
  val?^ | miss    %122.0 = LdVar              eR    i, e0.2
  lgl$#-          %122.1 = IsType                   %122.0 isA int$-
  void                    Branch                   %122.1 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  lgl$#-          %123.1 = %120.5
  dr              %123.2 = DeadBranchReached@0x55bbe6265e28[Test#3]
  goto BB7
BB124   <- [122]
  int$-           %124.0 = CastType           d     dn %122.0
  void                    Branch                   %120.6 -> BB126 (if true) | BB127 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?^ | miss    %125.1 = %122.0
  dr              %125.2 = Typecheck@0x55bbe6265e28[Type#13]
  goto BB7
BB7   <- [123, 125, 127]
  val?^ | miss    %7.0  = Phi                      %123.1:BB123, %125.1:BB125, %127.1:BB127
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %123.2:BB123, %125.2:BB125, %127.2:BB127
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55bbe20be980+258: [%112.0, 1L, %112.1, %120.4], env=e0.2
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
BB126   <- [124]
  val?-           %126.0 = CastType           d     dn %120.4   <vec$->
  val?            %126.1 = Extract2_1D        wed   %126.0, %124.0, elided   <cls>
  void                    StVar              lW    fdef, %126.1, e0.2
  val?^ | miss    %126.3 = LdVar              eR    is, e0.2
  lgl$#-          %126.4 = Identical                %126.3, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %126.4 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  void                    Nop                !     
  val?            %127.1 = %120.4
  dr              %127.2 = Typecheck@0x55bbe6265e28[Type#11]
  goto BB7
BB128   <- [126]
  prom-           %128.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p0 (!refl), e0.2
  val?            %128.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%128.0, "groupGenericFunction") e0.2   <lgl$->
  lgl$#-          %128.2 = IsType                   %128.1 isA lgl$-
  void                    Branch                   %128.2 -> BB130 (if true) | BB131 (if false)
BB129   <- [126]
  fs              %129.0 = FrameState         R     0x55bbe20be980+324: [%112.0, 1L, %112.1], env=e0.2
  void                    Deopt              !v    %129.0, CallTarget@0x55bbe6265e28[Call#2], %126.3   !
BB130   <- [128]
  lgl$-           %130.0 = CastType           d     dn %128.1
  lgl$-           %130.1 = Not                d     %130.0, elided
  lgl$#-          %130.2 = CheckTrueFalse     e     %130.1
  void                    Branch                   %130.2 -> BB108 (if true) | BB13 (if false)
BB131   <- [128]
  void                    Nop                !     
  val?            %131.1 = %128.1
  dr              %131.2 = Typecheck@0x55bbe6265e28[Type#16]
  goto BB11
BB108   <- [130]
  (cls|spec|blt)  %108.0 = LdFun              !v    warning, e0.2
  fs              %108.1 = FrameState         R     0x55bbe20be980+383: [%112.0, 1L, %112.1, %108.0], env=e0.2
  void                    Deopt              !v    %108.1, DeadCall@0x55bbe6265e28[Call#3], %108.0   !
BB13   <- [130]
  val?^ | miss    %13.0 = LdVar              eR    length, e0.2
  lgl$#-          %13.1 = Identical                <blt length>, %13.0   <true>
  void                    Branch                   %13.1 -> BB132 (if true) | BB133 (if false)
BB11   <- [131, 133]
  val?^ | miss    %11.0 = Phi                      %131.1:BB131, %133.1:BB133
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %131.2:BB131, %133.2:BB133
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55bbe20be980+361: [%112.0, 1L, %112.1, %128.1], env=e0.2
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB132   <- [13]
  (cls|spec|blt)  %132.0 = LdFun              !v    @, <0x55bbe1e1fbd8>, e0.2
  prom-           %132.1 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p1, e0.2
  prom-           %132.2 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p2, e0.2
  val?            %132.3 = Call               !v    %132.0(%132.1, %132.2) e0.2   <vec->
  lgl$#-          %132.4 = IsType                   %132.3 isA val?-
  void                    Branch                   %132.4 -> BB134 (if true) | BB135 (if false)
BB133   <- [13]
  void                    Nop                !     
  lgl$#-          %133.1 = %13.1
  dr              %133.2 = DeadBranchReached@0x55bbe6265e28[Test#4]
  goto BB11
BB134   <- [132]
  val?-           %134.0 = CastType           d     dn %132.3   <vec->
  (int|real)$-    %134.1 = CallSafeBuiltin    wed   length(%134.0)    <int$->
  lgl$#-          %134.2 = IsType                   %134.1 isA int$-
  void                    Branch                   %134.2 -> BB136 (if true) | BB137 (if false)
BB135   <- [132]
  fs              %135.0 = FrameState         R     0x55bbe20be980+531: [%112.0, 1L, %112.1, <blt length>, %132.3], env=e0.2
  void                    Deopt              !v    %135.0, Typecheck@0x55bbe6265e28[Type#24], %132.3   !
BB136   <- [134]
  int$-           %136.0 = CastType           d     dn %134.1
  lgl$#-          %136.1 = CheckTrueFalse     e     %136.0
  void                    Branch                   %136.1 -> BB101 (if true) | BB18 (if false)
BB137   <- [134]
  void                    Nop                !     
  (int|real)$-    %137.1 = %134.1
  dr              %137.2 = Typecheck@0x55bbe6265e28[Type#25]
  goto BB16
BB101   <- [136]
  (cls|spec|blt)  %101.0 = LdFun              !v    @, <0x55bbe1e1fbd8>, e0.2
  prom-           %101.1 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p26, e0.2
  prom-           %101.2 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p27, e0.2
  val?            %101.3 = Call               !v    %101.0(%101.1, %101.2) e0.2   <vec$->
  val?^ | miss    %101.4 = LdVar              eR    gnames, e0.2
  val?            %101.5 = Force!<wrapped>    !v    %101.4, e0.2   <vec$->
  lgl$#-          %101.6 = IsType                   %101.5 isA val?-
  lgl$#-          %101.7 = IsType                   %101.3 isA val?-
  val?^ | miss    %101.8 = LdVar              eR    i, e0.2
  lgl$#-          %101.9 = IsType                   %101.8 isA int$-
  void                    Branch                   %101.9 -> BB142 (if true) | BB143 (if false)
BB18   <- [136]
  val?^ | miss    %18.0 = LdVar              eR    c, e0.2
  lgl$#-          %18.1 = Identical                <blt c>, %18.0   <true>
  void                    Branch                   %18.1 -> BB138 (if true) | BB139 (if false)
BB16   <- [137, 139, 141, 145]
  val?^ | miss    %16.0 = Phi                      %137.1:BB137, %139.1:BB139, %141.1:BB141, %145.1:BB145
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %137.2:BB137, %139.2:BB139, %141.2:BB141, %145.2:BB145
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55bbe20be980+553: [%112.0, 1L, %112.1, %134.1], env=e0.2
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB142   <- [101]
  int$-           %142.0 = CastType           d     dn %101.8
  void                    Branch                   %101.7 -> BB148 (if true) | BB149 (if false)
BB143   <- [101]
  void                    Nop                !     
  val?^ | miss    %143.1 = %101.8
  dr              %143.2 = Typecheck@0x55bbe6265e28[Type#30]
  goto BB102
BB138   <- [18]
  val?^ | miss    %138.0 = LdVar              eR    funs, e0.2
  lgl$#-          %138.1 = IsType                   %138.0 isA val?~- | miss
  void                    Branch                   %138.1 -> BB140 (if true) | BB141 (if false)
BB139   <- [18]
  void                    Nop                !     
  lgl$#-          %139.1 = %18.1
  dr              %139.2 = DeadBranchReached@0x55bbe6265e28[Test#5]
  goto BB16
BB148   <- [142]
  val?-           %148.0 = CastType           d     dn %101.3   <vec$->
  void                    Branch                   %101.6 -> BB150 (if true) | BB151 (if false)
BB149   <- [142]
  void                    Nop                !     
  val?            %149.1 = %101.3
  dr              %149.2 = Typecheck@0x55bbe6265e28[Type#28]
  goto BB102
BB102   <- [143, 149, 151]
  val?^ | miss    %102.0 = Phi                      %143.1:BB143, %149.1:BB149, %151.1:BB151
  val?^ | miss    %102.1 = %102.0
  dr              %102.2 = Phi                      %143.2:BB143, %149.2:BB149, %151.2:BB151
  dr              %102.3 = %102.2
  fs              %102.4 = FrameState         R     0x55bbe20be980+620: [%112.0, 1L, %112.1, %101.3, %101.5], env=e0.2
  void                    Deopt              !v    %102.4, %102.3, %102.1   !
BB140   <- [138]
  val?~- | miss   %140.0 = CastType           d     dn %138.0
  val?-           %140.1 = Force!<value>            %140.0,    <vec$->
  val?^ | miss    %140.2 = LdVar              eR    getGroupMembers, e0.2
  lgl$#-          %140.3 = Identical                %140.2, function(group, recursive=FALSE, character=TRU|...
  void                    Branch                   %140.3 -> BB144 (if true) | BB145 (if false)
BB141   <- [138]
  void                    Nop                !     
  val?^ | miss    %141.1 = %138.0
  dr              %141.2 = Typecheck@0x55bbe6265e28[Type#41]
  goto BB16
BB150   <- [148]
  val?-           %150.0 = CastType           d     dn %101.5   <vec$->
  val?-           %150.1 = Subassign2_1D      wed   %148.0, %150.0, %142.0, elided
  void                    StVar              lW    gnames, %150.1, e0.2
  val?^ | miss    %150.3 = LdVar              eR    lapply, e0.2
  lgl$#-          %150.4 = Identical                %150.3, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %150.4 -> BB156 (if true) | BB157 (if false)
BB151   <- [148]
  void                    Nop                !     
  val?            %151.1 = %101.5
  dr              %151.2 = Typecheck@0x55bbe6265e28[Type#29]
  goto BB102
BB144   <- [140]
  prom-           %144.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p3, e0.2
  val?            %144.1 = StaticCall         !v    getGroupMembers[0x55bbe6849680](%144.0, true, false) e0.2   <vec->
  lgl$#-          %144.2 = IsType                   %144.1 isA val?-
  void                    Branch                   %144.2 -> BB146 (if true) | BB147 (if false)
BB145   <- [140]
  void                    Nop                !     
  val?^ | miss    %145.1 = %140.2
  dr              %145.2 = CallTarget@0x55bbe6265e28[Call#13]
  goto BB16
BB156   <- [150]
  prom-           %156.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p28, e0.2
  prom-           %156.1 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p31, e0.2
  val?            %156.2 = StaticCall         !v    lapply[0x55bbe2892220](%156.0, %156.1) { 0 1 } e0.2   <vec$->
  val?^ | miss    %156.3 = LdVar              eR    generics, e0.2
  val?            %156.4 = Force!<wrapped>    !v    %156.3, e0.2   <vec$->
  lgl$#-          %156.5 = IsType                   %156.4 isA val?-
  lgl$#-          %156.6 = IsType                   %156.2 isA val?-
  val?^ | miss    %156.7 = LdVar              eR    i, e0.2
  lgl$#-          %156.8 = IsType                   %156.7 isA int$-
  void                    Branch                   %156.8 -> BB166 (if true) | BB167 (if false)
BB157   <- [150]
  fs              %157.0 = FrameState         R     0x55bbe20be980+649: [%112.0, 1L, %112.1], env=e0.2
  void                    Deopt              !v    %157.0, CallTarget@0x55bbe6265e28[Call#9], %150.3   !
BB146   <- [144]
  val?-           %146.0 = CastType           d     dn %144.1   <vec->
  val+            %146.1 = CallSafeBuiltin    wed   c(%140.1, %146.0)    <vec->
  void                    StVar              lW    funs, %146.1, e0.2
  goto BB21
BB147   <- [144]
  fs              %147.0 = FrameState         R     0x55bbe20be980+875: [%112.0, 1L, %112.1, <blt c>, %140.1, %144.1], env=e0.2
  void                    Deopt              !v    %147.0, Typecheck@0x55bbe6265e28[Type#43], %144.1   !
BB166   <- [156]
  int$-           %166.0 = CastType           d     dn %156.7
  void                    Branch                   %156.6 -> BB168 (if true) | BB169 (if false)
BB167   <- [156]
  void                    Nop                !     
  val?^ | miss    %167.1 = %156.7
  dr              %167.2 = Typecheck@0x55bbe6265e28[Type#37]
  goto BB106
BB21   <- [146, 172]
  int$-           %21.0 = Inc                      %112.1
  lgl$-           %21.1 = Lt                 d     1L, %21.0, elided
  lgl$#-          %21.2 = Identical                %21.1, true
  void                    Branch                   %21.2 -> BB31 (if true) | BB24 (if false)
BB168   <- [166]
  val?-           %168.0 = CastType           d     dn %156.2   <vec$->
  void                    Branch                   %156.5 -> BB172 (if true) | BB173 (if false)
BB169   <- [166]
  void                    Nop                !     
  val?            %169.1 = %156.2
  dr              %169.2 = Typecheck@0x55bbe6265e28[Type#35]
  goto BB106
BB106   <- [167, 169, 173]
  val?^ | miss    %106.0 = Phi                      %167.1:BB167, %169.1:BB169, %173.1:BB173
  val?^ | miss    %106.1 = %106.0
  dr              %106.2 = Phi                      %167.2:BB167, %169.2:BB169, %173.2:BB173
  dr              %106.3 = %106.2
  fs              %106.4 = FrameState         R     0x55bbe20be980+700: [%112.0, 1L, %112.1, %156.2, %156.4], env=e0.2
  void                    Deopt              !v    %106.4, %106.3, %106.1   !
BB31   <- [21]
  val?^ | miss    %31.0 = LdVar              eR    recall, e0.2
  lgl$#-          %31.1 = IsType                   %31.0 isA lgl$-
  void                    Branch                   %31.1 -> BB152 (if true) | BB153 (if false)
BB24   <- [21]
  int$-           %24.0 = Extract2_1D        wed   %112.0, %21.0, elided
  void                    StVar              lW    i, %24.0, e0.2
  val?^ | miss    %24.2 = LdVar              eR    gnames, e0.2
  val?            %24.3 = Force!             !v    %24.2, e0.2   <val?_>
  lgl$#-          %24.4 = IsType                   %24.3 isA val+   <@?>
  void                    Branch                   %24.4 -> BB30 (if true) | BB25 (if false)
BB172   <- [168]
  val?-           %172.0 = CastType           d     dn %156.4   <vec$->
  val?-           %172.1 = Subassign2_1D      wed   %168.0, %172.0, %166.0, elided
  void                    StVar              lW    generics, %172.1, e0.2
  void                    StVar              lW    recall, true, e0.2
  goto BB21
BB173   <- [168]
  void                    Nop                !     
  val?            %173.1 = %156.4
  dr              %173.2 = Typecheck@0x55bbe6265e28[Type#36]
  goto BB106
BB152   <- [31]
  lgl$-           %152.0 = CastType           d     dn %31.0
  void                    Visible            v     
  lgl$#-          %152.2 = CheckTrueFalse     e     %152.0
  void                    Branch                   %152.2 -> BB100 (if true) | BB32 (if false)
BB153   <- [31]
  void                    Nop                !     
  val?^ | miss    %153.1 = %31.0
  dr              %153.2 = Typecheck@0x55bbe6265e28[Type#83]
  goto BB22
BB30   <- [24]
  val?^ | miss    %30.0 = LdVar              eR    i, e0.2
  val?            %30.1 = Force!             !v    %30.0, e0.2   <val?_>
  val?            %30.2 = %30.1
  goto BB26
BB25   <- [24]
  prom-           %25.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p5, e0.2
  prom-           %25.1 = %25.0
  goto BB26
BB100   <- [152]
  val?^ | miss    %100.0 = LdVar              eR    Recall, e0.2
  lgl$#-          %100.1 = Identical                %100.0, function(...) <(rir::DispatchTable*)0x55bbe5a1|...
  void                    Branch                   %100.1 -> BB154 (if true) | BB155 (if false)
BB32   <- [152]
  val?^ | miss    %32.0 = LdVar              eR    unique, e0.2
  lgl$#-          %32.1 = Identical                %32.0, function(x, incomparables=FALSE, ...) <(rir::D|...
  void                    Branch                   %32.1 -> BB158 (if true) | BB159 (if false)
BB22   <- [153, 155, 159, 161]
  val?^ | miss    %22.0 = Phi                      %153.1:BB153, %155.1:BB155, %159.1:BB159, %161.1:BB161
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %153.2:BB153, %155.2:BB155, %159.2:BB159, %161.2:BB161
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55bbe20be980+911: [%112.0, 1L, %112.1], env=e0.2
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB26   <- [25, 30]
  val?            %26.0 = Phi                      %30.2:BB30, %25.1:BB25
  val?            %26.1 = %26.0
  val?            %26.2 = Extract2_1D        !v    %24.3, %26.1, e0.2   <val?_>
  void                    StVar              lW    what, %26.2, e0.2
  val?^ | miss    %26.4 = LdVar              eR    generics, e0.2
  val?            %26.5 = Force!             !v    %26.4, e0.2   <val?_>
  lgl$#-          %26.6 = IsType                   %26.5 isA val+   <@?>
  void                    Branch                   %26.6 -> BB29 (if true) | BB27 (if false)
BB154   <- [100]
  prom-           %154.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p22, e0.2
  prom-           %154.1 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p24, e0.2
  dots-           %154.2 = DotsList           l     %154.0, %154.1
  ct              %154.3 = PushContext        lCL   %154.2, Recall(unlist(gnames, FALSE), unlist(generics,|..., function(...) <(rir::DispatchTable*)0x55bbe5a1|..., e0.2
  env             e154.4 = MkEnv              l     ...=%154.2, parent=R_BaseNamespace, context 1
  prom-           %154.5 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p32, e154.4
  val?            %154.6 = Call               !     <spec .Internal>(%154.5) e154.4   <vec->
  val?            %154.7 = PopContext         C     %154.6, %154.3   <vec->
  val?            %154.8 = %154.7
  goto BB87
BB155   <- [100]
  void                    Nop                !     
  val?^ | miss    %155.1 = %100.0
  dr              %155.2 = CallTarget@0x55bbe6265e28[Call#26]
  goto BB22
BB158   <- [32]
  val?^ | miss    %158.0 = LdVar              eR    funs, e0.2
  lgl$#-          %158.1 = IsType                   %158.0 isA val?~- | miss
  void                    Branch                   %158.1 -> BB160 (if true) | BB161 (if false)
BB159   <- [32]
  void                    Nop                !     
  val?^ | miss    %159.1 = %32.0
  dr              %159.2 = CallTarget@0x55bbe6265e28[Call#29]
  goto BB22
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eR    i, e0.2
  val?            %29.1 = Force!             !v    %29.0, e0.2   <val?_>
  val?            %29.2 = %29.1
  goto BB28
BB27   <- [26]
  prom-           %27.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p4, e0.2
  prom-           %27.1 = %27.0
  goto BB28
BB87   <- [154, 216]
  val?            %87.0 = Phi                      %216.3:BB216, %154.8:BB154
  val?            %87.1 = %87.0
  void                    Return             l     %87.1
BB160   <- [158]
  val?~- | miss   %160.0 = CastType           d     dn %158.0
  val?-           %160.1 = Force!<value>            %160.0,    <vec->
  val?            %160.2 = StaticCall         !v    unique[0x55bbe5c7eff0](%160.1) { 0 } e0.2   <vec->
  void                    StVar              lW    funs, %160.2, e0.2
  val?^ | miss    %160.4 = LdVar              eR    lapply, e0.2
  lgl$#-          %160.5 = Identical                %160.4, function(X, FUN, ...) <(rir::DispatchTable*)0x|...
  void                    Branch                   %160.5 -> BB162 (if true) | BB163 (if false)
BB161   <- [158]
  void                    Nop                !     
  val?^ | miss    %161.1 = %158.0
  dr              %161.2 = Typecheck@0x55bbe6265e28[Type#89]
  goto BB22
BB28   <- [27, 29]
  val?            %28.0 = Phi                      %29.2:BB29, %27.1:BB27
  val?            %28.1 = %28.0
  val?            %28.2 = Extract2_1D        !v    %26.5, %28.1, e0.2   <val?_>
  void                    StVar              lW    fdef, %28.2, e0.2
  (cls|spec|blt)  %28.4 = LdFun              !v    is, e0.2
  fs              %28.5 = FrameState         R     0x55bbe20be980+1095: [%112.0, 1L, %21.0, %28.4], env=e0.2
  void                    Deopt              !v    %28.5, DeadCall@0x55bbe6265e28[Call#14], %28.4   !
BB162   <- [160]
  prom-           %162.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p8 (!refl), e0.2
  cls             %162.1 = MkCls                    .checkGroupSigLength@Prom(9)0, e0.2
  prom-           %162.2 = MkArg                    %162.1, .checkGroupSigLength[0x55bbe506fb20]_p9 (!refl), e0.2
  val?            %162.3 = StaticCall         !v    lapply[0x55bbe46fc980](%162.0, %162.2) { 0 1 } e0.2   <vec->
  void                    StVar              lW    fdefs, %162.3, e0.2
  (cls|spec|blt)  %162.5 = LdFun              !v    rep, <0x55bbe1e349b0>, e0.2
  prom-           %162.6 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p10, e0.2
  val?            %162.7 = Call               !v    %162.5(0, %162.6) e0.2   <real->
  void                    StVar              lW    sigs, %162.7, e0.2
  val?^ | miss    %162.9 = LdVar              eR    seq_along, e0.2
  lgl$#-          %162.10 = Identical                <blt seq_along>, %162.9   <true>
  void                    Branch                   %162.10 -> BB164 (if true) | BB165 (if false)
BB163   <- [160]
  fs              %163.0 = FrameState         R     0x55bbe20be980+1801: [], env=e0.2
  void                    Deopt              !v    %163.0, CallTarget@0x55bbe6265e28[Call#30], %160.4   !
BB164   <- [162]
  val             %164.0 = ChkMissing         e     %162.7
  val?            %164.1 = CallBuiltin        !v    seq_along(%162.7) e0.2   <int->
  val?+           %164.2 = ToForSeq           e     %164.1
  int$-           %164.3 = Length                   %164.2
  lgl$-           %164.4 = Lt                 d     %164.3, %112.1, elided   <false>
  lgl$#-          %164.5 = Identical                %164.4, true
  void                    Branch                   %164.5 -> BB171 (if true) | BB170 (if false)
BB165   <- [162]
  fs              %165.0 = FrameState         R     0x55bbe20be980+1903: [], env=e0.2
  void                    Deopt              !v    %165.0, DeadBranchReached@0x55bbe6265e28[Test#10], %162.10   !
BB171   <- [164]
  fs              %171.0 = FrameState         R     0x55bbe20be980+1994: [%164.1], env=e0.2
  void                    Deopt              !v    %171.0, DeadBranchReached@0x55bbe6265e28[Test#11], %164.5   !
BB170   <- [164]
  val?            %170.0 = Extract2_1D        wed   %164.2, %112.1, elided
  void                    StVar              lW    i, %170.0, e0.2
  val?^ | miss    %170.2 = LdVar              eR    funs, e0.2
  lgl$#-          %170.3 = IsType                   %170.2 isA val?~- | miss
  void                    Branch                   %170.3 -> BB174 (if true) | BB175 (if false)
BB174   <- [170]
  val?~- | miss   %174.0 = CastType           d     dn %170.2
  val?-           %174.1 = Force!<value>            %174.0,    <vec->
  lgl$#-          %174.2 = IsType                   %174.1 isA val+   <true>
  void                    Branch                   %174.2 -> BB176 (if true) | BB177 (if false)
BB175   <- [170]
  void                    Nop                !     
  val?^ | miss    %175.1 = %170.2
  dr              %175.2 = Typecheck@0x55bbe6265e28[Type#99]
  goto BB39
BB176   <- [174]
  val             %176.0 = ChkMissing         e     %170.0
  lgl$#-          %176.1 = IsType                   %176.0 isA int$-
  void                    Branch                   %176.1 -> BB178 (if true) | BB179 (if false)
BB177   <- [174]
  void                    Nop                !     
  lgl$#-          %177.1 = %174.2
  dr              %177.2 = DeadBranchReached@0x55bbe6265e28[Test#12]
  goto BB39
BB39   <- [175, 177, 179]
  val?^ | miss    %39.0 = Phi                      %175.1:BB175, %177.1:BB177, %179.1:BB179
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %175.2:BB175, %177.2:BB177, %179.2:BB179
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55bbe20be980+2039: [%164.2, %164.3, %112.1], env=e0.2
  void                    Deopt              !v    %39.4, %39.3, %39.1   !
BB178   <- [176]
  int$-           %178.0 = CastType           d     dn %176.0
  val?            %178.1 = Extract2_1D        wed   %174.1, %178.0, elided   <str$->
  void                    StVar              lW    what, %178.1, e0.2
  val?^ | miss    %178.3 = LdVar              eR    fdefs, e0.2
  lgl$#-          %178.4 = IsType                   %178.3 isA val?~- | miss
  void                    Branch                   %178.4 -> BB180 (if true) | BB181 (if false)
BB179   <- [176]
  void                    Nop                !     
  val             %179.1 = %176.0
  dr              %179.2 = Typecheck@0x55bbe6265e28[Type#101]
  goto BB39
BB180   <- [178]
  val?~- | miss   %180.0 = CastType           d     dn %178.3
  val?-           %180.1 = Force!<value>            %180.0,    <vec->
  lgl$#-          %180.2 = IsType                   %180.1 isA val+   <true>
  void                    Branch                   %180.2 -> BB182 (if true) | BB183 (if false)
BB181   <- [178]
  void                    Nop                !     
  val?^ | miss    %181.1 = %178.3
  dr              %181.2 = Typecheck@0x55bbe6265e28[Type#103]
  goto BB41
BB182   <- [180]
  val?            %182.0 = Extract2_1D        wed   %180.1, %178.0, elided   <cls>
  lgl$-           %182.1 = Is                       %182.0, NULL
  void                    StVar              lW    fdef, %182.0, e0.2
  val             %182.3 = ChkMissing         e     %182.0
  lgl$#-          %182.4 = CheckTrueFalse     e     %182.1
  void                    Branch                   %182.4 -> BB99 (if true) | BB45 (if false)
BB183   <- [180]
  void                    Nop                !     
  lgl$#-          %183.1 = %180.2
  dr              %183.2 = DeadBranchReached@0x55bbe6265e28[Test#13]
  goto BB41
BB41   <- [181, 183]
  val?^ | miss    %41.0 = Phi                      %181.1:BB181, %183.1:BB183
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %181.2:BB181, %183.2:BB183
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x55bbe20be980+2114: [%164.2, %164.3, %112.1], env=e0.2
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB99   <- [182]
  void                    Nop                !     
  int$-           %99.1 = %112.1
  goto BB54
BB45   <- [182]
  val?^ | miss    %45.0 = LdVar              eR    is, e0.2
  lgl$#-          %45.1 = Identical                %45.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %45.1 -> BB186 (if true) | BB187 (if false)
BB54   <- [75, 99, 226, 230]
  int$-           %54.0 = Phi                      %226.3:BB226, %230.3:BB230, %75.1:BB75, %99.1:BB99
  int$-           %54.1 = %54.0
  int$-           %54.2 = Inc                      %54.1
  lgl$-           %54.3 = Lt                 d     %164.3, %54.2, elided
  lgl$#-          %54.4 = Identical                %54.3, true
  void                    Branch                   %54.4 -> BB76 (if true) | BB57 (if false)
BB186   <- [45]
  prom-           %186.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p12 (!refl), e0.2
  val?            %186.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%186.0, "genericFunction") e0.2   <lgl$->
  lgl$#-          %186.2 = IsType                   %186.1 isA lgl$-
  void                    Branch                   %186.2 -> BB196 (if true) | BB197 (if false)
BB187   <- [45]
  fs              %187.0 = FrameState         R     0x55bbe20be980+2189: [%164.2, %164.3, %112.1], env=e0.2
  void                    Deopt              !v    %187.0, CallTarget@0x55bbe6265e28[Call#34], %45.0   !
BB76   <- [54]
  val?^ | miss    %76.0 = LdVar              eR    max, e0.2
  lgl$#-          %76.1 = Identical                <blt max>, %76.0   <true>
  void                    Branch                   %76.1 -> BB184 (if true) | BB185 (if false)
BB57   <- [54]
  val?            %57.0 = Extract2_1D        wed   %164.2, %54.2, elided
  void                    StVar              lW    i, %57.0, e0.2
  val?^ | miss    %57.2 = LdVar              eR    funs, e0.2
  lgl$#-          %57.3 = IsType                   %57.2 isA val?~- | miss
  void                    Branch                   %57.3 -> BB188 (if true) | BB189 (if false)
BB196   <- [186]
  lgl$-           %196.0 = CastType           d     dn %186.1
  lgl$-           %196.1 = Not                d     %196.0, elided
  lgl$#-          %196.2 = CheckTrueFalse     e     %196.1
  void                    Branch                   %196.2 -> BB98 (if true) | BB48 (if false)
BB197   <- [186]
  void                    Nop                !     
  val?            %197.1 = %186.1
  dr              %197.2 = Typecheck@0x55bbe6265e28[Type#109]
  goto BB46
BB184   <- [76]
  val?^ | miss    %184.0 = LdVar              eR    sigs, e0.2
  lgl$#-          %184.1 = IsType                   %184.0 isA real-
  void                    Branch                   %184.1 -> BB194 (if true) | BB195 (if false)
BB185   <- [76]
  void                    Nop                !     
  lgl$#-          %185.1 = %76.1
  dr              %185.2 = DeadBranchReached@0x55bbe6265e28[Test#16]
  goto BB55
BB188   <- [57]
  val?~- | miss   %188.0 = CastType           d     dn %57.2
  val?-           %188.1 = Force!<value>            %188.0,    <vec->
  lgl$#-          %188.2 = IsType                   %188.1 isA val+   <true>
  void                    Branch                   %188.2 -> BB190 (if true) | BB191 (if false)
BB189   <- [57]
  void                    Nop                !     
  val?^ | miss    %189.1 = %57.2
  dr              %189.2 = Typecheck@0x55bbe6265e28[Type#130]
  goto BB58
BB98   <- [196]
  (cls|spec|blt)  %98.0 = LdFun              !v    warning, e0.2
  fs              %98.1 = FrameState         R     0x55bbe20be980+2547: [%164.2, %164.3, %112.1, %98.0], env=e0.2
  void                    Deopt              !v    %98.1, DeadCall@0x55bbe6265e28[Call#39], %98.0   !
BB48   <- [196]
  val?^ | miss    %48.0 = LdVar              eR    environment, e0.2
  lgl$#-          %48.1 = Identical                %48.0, function(fun=NULL) <(rir::DispatchTable*)0x55b|...
  void                    Branch                   %48.1 -> BB198 (if true) | BB199 (if false)
BB46   <- [197, 199]
  val?^ | miss    %46.0 = Phi                      %197.1:BB197, %199.1:BB199
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %197.2:BB197, %199.2:BB199
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x55bbe20be980+2266: [%164.2, %164.3, %112.1, %186.1], env=e0.2
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
BB194   <- [184]
  real-           %194.0 = CastType           d     dn %184.0
  real$-          %194.1 = CallSafeBuiltin    wed   max(%194.0)    <real$->
  void                    StVar              lW    n, %194.1, e0.2
  val?^ | miss    %194.3 = LdVar              eR    &, e0.2
  lgl$#-          %194.4 = Identical                <blt &>, %194.3   <true>
  void                    Branch                   %194.4 -> BB202 (if true) | BB203 (if false)
BB195   <- [184]
  void                    Nop                !     
  val?^ | miss    %195.1 = %184.0
  dr              %195.2 = Typecheck@0x55bbe6265e28[Type#162]
  goto BB55
BB55   <- [185, 195]
  val?^ | miss    %55.0 = Phi                      %185.1:BB185, %195.1:BB195
  val?^ | miss    %55.1 = %55.0
  dr              %55.2 = Phi                      %185.2:BB185, %195.2:BB195
  dr              %55.3 = %55.2
  fs              %55.4 = FrameState         R     0x55bbe20be980+2588: [%164.2, %164.3, %54.1], env=e0.2
  void                    Deopt              !v    %55.4, %55.3, %55.1   !
BB190   <- [188]
  val             %190.0 = ChkMissing         e     %57.0
  lgl$#-          %190.1 = IsType                   %190.0 isA int$-
  void                    Branch                   %190.1 -> BB192 (if true) | BB193 (if false)
BB191   <- [188]
  void                    Nop                !     
  lgl$#-          %191.1 = %188.2
  dr              %191.2 = DeadBranchReached@0x55bbe6265e28[Test#14]
  goto BB58
BB58   <- [189, 191, 193]
  val?^ | miss    %58.0 = Phi                      %189.1:BB189, %191.1:BB191, %193.1:BB193
  val?^ | miss    %58.1 = %58.0
  dr              %58.2 = Phi                      %189.2:BB189, %191.2:BB191, %193.2:BB193
  dr              %58.3 = %58.2
  fs              %58.4 = FrameState         R     0x55bbe20be980+2617: [%164.2, %164.3, %54.2], env=e0.2
  void                    Deopt              !v    %58.4, %58.3, %58.1   !
BB198   <- [48]
  val?^ | miss    %198.0 = LdVar              eR    fdef, e0.2
  val?            %198.1 = Force!<value>      !v    %198.0, e0.2   <cls>
  prom-           %198.2 = MkArg                    %198.1, .checkGroupSigLength[0x55bbe506fb20]_p13 (!refl), 
  val?            %198.3 = StaticCall         !v    environment[0x55bbe563f920](%198.2) e0.2   <env->
  void                    StVar              lW    ev, %198.3, e0.2
  (cls|spec|blt)  %198.5 = LdFun              !v    $, <0x55bbe1e1fc10>, e0.2
  prom-           %198.6 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p14, e0.2
  prom-           %198.7 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p15, e0.2
  val?            %198.8 = Call               !v    %198.5(%198.6, %198.7) e0.2   <int$->
  lgl$-           %198.9 = Is                       %198.8, NULL
  lgl$#-          %198.10 = IsType                   %198.8 isA int$-
  void                    Branch                   %198.10 -> BB210 (if true) | BB211 (if false)
BB199   <- [48]
  void                    Nop                !     
  val?^ | miss    %199.1 = %48.0
  dr              %199.2 = CallTarget@0x55bbe6265e28[Call#35]
  goto BB46
BB202   <- [194]
  lgl-            %202.0 = Lt                 wed   %194.0, %194.1, elided   <lgl->
  lgl-            %202.1 = Gt                 wed   %194.0, 0, elided   <lgl->
  val+            %202.2 = CallSafeBuiltin    wed   &(%202.0, %202.1)    <lgl->
  void                    StVar              lW    reset, %202.2, e0.2
  val?^ | miss    %202.4 = LdVar              eR    any, e0.2
  lgl$#-          %202.5 = Identical                <blt any>, %202.4   <true>
  void                    Branch                   %202.5 -> BB208 (if true) | BB209 (if false)
BB203   <- [194]
  fs              %203.0 = FrameState         R     0x55bbe20be980+3281: [], env=e0.2
  void                    Deopt              !v    %203.0, DeadBranchReached@0x55bbe6265e28[Test#17], %194.4   !
BB192   <- [190]
  int$-           %192.0 = CastType           d     dn %190.0
  val?            %192.1 = Extract2_1D        wed   %188.1, %192.0, elided   <str$->
  void                    StVar              lW    what, %192.1, e0.2
  val?^ | miss    %192.3 = LdVar              eR    fdefs, e0.2
  lgl$#-          %192.4 = IsType                   %192.3 isA val?~- | miss
  void                    Branch                   %192.4 -> BB200 (if true) | BB201 (if false)
BB193   <- [190]
  void                    Nop                !     
  val             %193.1 = %190.0
  dr              %193.2 = Typecheck@0x55bbe6265e28[Type#132]
  goto BB58
BB210   <- [198]
  int$-           %210.0 = CastType           d     dn %198.8
  void                    StVar              lW    sigl, %210.0, e0.2
  lgl$#-          %210.2 = CheckTrueFalse     e     %198.9
  void                    Branch                   %210.2 -> BB97 (if true) | BB53 (if false)
BB211   <- [198]
  fs              %211.0 = FrameState         R     0x55bbe20be980+2361: [%164.2, %164.3, %112.1, %198.8], env=e0.2
  void                    Deopt              !v    %211.0, Typecheck@0x55bbe6265e28[Type#114], %198.8   !
BB208   <- [202]
  val?            %208.0 = CallBuiltin        !v    any(%202.2) e0.2   <lgl$->
  lgl$#-          %208.1 = IsType                   %208.0 isA lgl$-
  void                    Branch                   %208.1 -> BB214 (if true) | BB215 (if false)
BB209   <- [202]
  fs              %209.0 = FrameState         R     0x55bbe20be980+3437: [], env=e0.2
  void                    Deopt              !v    %209.0, DeadBranchReached@0x55bbe6265e28[Test#18], %202.5   !
BB200   <- [192]
  val?~- | miss   %200.0 = CastType           d     dn %192.3
  val?-           %200.1 = Force!<value>            %200.0,    <vec->
  lgl$#-          %200.2 = IsType                   %200.1 isA val+   <true>
  void                    Branch                   %200.2 -> BB204 (if true) | BB205 (if false)
BB201   <- [192]
  void                    Nop                !     
  val?^ | miss    %201.1 = %192.3
  dr              %201.2 = Typecheck@0x55bbe6265e28[Type#134]
  goto BB60
BB97   <- [210]
  (cls|spec|blt)  %97.0 = LdFun              !v    .setupMethodsTables, e0.2
  fs              %97.1 = FrameState         R     0x55bbe20be980+2398: [%164.2, %164.3, %112.1, %97.0], env=e0.2
  void                    Deopt              !v    %97.1, DeadCall@0x55bbe6265e28[Call#37], %97.0   !
BB53   <- [210]
  val?^ | miss    %53.0 = LdVar              eR    sigs !upd, e0.2
  lgl$#-          %53.1 = IsType                   %53.0 isA real-
  void                    Branch                   %53.1 -> BB218 (if true) | BB219 (if false)
BB214   <- [208]
  lgl$-           %214.0 = CastType           d     dn %208.0
  lgl$#-          %214.1 = CheckTrueFalse     e     %214.0
  void                    Branch                   %214.1 -> BB88 (if true) | BB83 (if false)
BB215   <- [208]
  fs              %215.0 = FrameState         R     0x55bbe20be980+3528: [%208.0], env=e0.2
  void                    Deopt              !v    %215.0, Typecheck@0x55bbe6265e28[Type#177], %208.0   !
BB204   <- [200]
  val             %204.0 = ChkMissing         e     %57.0
  lgl$#-          %204.1 = IsType                   %204.0 isA int$-
  void                    Branch                   %204.1 -> BB206 (if true) | BB207 (if false)
BB205   <- [200]
  void                    Nop                !     
  lgl$#-          %205.1 = %200.2
  dr              %205.2 = DeadBranchReached@0x55bbe6265e28[Test#15]
  goto BB60
BB60   <- [201, 205, 207]
  val?^ | miss    %60.0 = Phi                      %201.1:BB201, %205.1:BB205, %207.1:BB207
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %201.2:BB201, %205.2:BB205, %207.2:BB207
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x55bbe20be980+2692: [%164.2, %164.3, %54.2], env=e0.2
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB218   <- [53]
  real-           %218.0 = CastType           d     dn %53.0
  val?^ | miss    %218.1 = LdVar              eR    i, e0.2
  lgl$#-          %218.2 = IsType                   %218.1 isA int$-
  void                    Branch                   %218.2 -> BB226 (if true) | BB227 (if false)
BB219   <- [53]
  void                    Nop                !     
  val?^ | miss    %219.1 = %53.0
  dr              %219.2 = Typecheck@0x55bbe6265e28[Type#119]
  goto BB51
BB88   <- [214]
  val?^ | miss    %88.0 = LdVar              eR    funs, e0.2
  val?            %88.1 = Force!             !v    %88.0, e0.2   <val?_>
  lgl$#-          %88.2 = IsType                   %88.1 isA val+   <@?>
  void                    Branch                   %88.2 -> BB96 (if true) | BB89 (if false)
BB83   <- [214]
  void                    Nop                !     
  goto BB84
BB206   <- [204]
  int$-           %206.0 = CastType           d     dn %204.0
  val?            %206.1 = Extract2_1D        wed   %200.1, %206.0, elided   <cls>
  lgl$-           %206.2 = Is                       %206.1, NULL
  void                    StVar              lW    fdef, %206.1, e0.2
  val             %206.4 = ChkMissing         e     %206.1
  lgl$#-          %206.5 = CheckTrueFalse     e     %206.2
  void                    Branch                   %206.5 -> BB75 (if true) | BB64 (if false)
BB207   <- [204]
  void                    Nop                !     
  val             %207.1 = %204.0
  dr              %207.2 = Typecheck@0x55bbe6265e28[Type#136]
  goto BB60
BB226   <- [218]
  int$-           %226.0 = CastType           d     dn %218.1
  real-           %226.1 = Subassign1_1D      wed   %210.0, %218.0, %226.0, elided
  void                    StVar              lW    sigs, %226.1, e0.2
  int$-           %226.3 = %112.1
  goto BB54
BB227   <- [218]
  void                    Nop                !     
  val?^ | miss    %227.1 = %218.1
  dr              %227.2 = Typecheck@0x55bbe6265e28[Type#120]
  goto BB51
BB51   <- [219, 227]
  val?^ | miss    %51.0 = Phi                      %219.1:BB219, %227.1:BB227
  val?^ | miss    %51.1 = %51.0
  dr              %51.2 = Phi                      %219.2:BB219, %227.2:BB227
  dr              %51.3 = %51.2
  fs              %51.4 = FrameState         R     0x55bbe20be980+2377: [%164.2, %164.3, %112.1, %210.0], env=e0.2
  void                    Deopt              !v    %51.4, %51.3, %51.1   !
BB96   <- [88]
  val?^ | miss    %96.0 = LdVar              eR    reset, e0.2
  val?            %96.1 = Force!             !v    %96.0, e0.2   <val?_>
  val?            %96.2 = %96.1
  goto BB90
BB89   <- [88]
  prom-           %89.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p21, e0.2
  prom-           %89.1 = %89.0
  goto BB90
BB84   <- [83, 94]
  val?^ | miss    %84.0 = LdVar              eR    funs, e0.2
  lgl$#-          %84.1 = IsType                   %84.0 isA val?~- | miss
  void                    Branch                   %84.1 -> BB216 (if true) | BB217 (if false)
BB75   <- [206]
  void                    Nop                !     
  int$-           %75.1 = %54.2
  goto BB54
BB64   <- [206]
  val?^ | miss    %64.0 = LdVar              eR    is, e0.2
  lgl$#-          %64.1 = Identical                %64.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %64.1 -> BB212 (if true) | BB213 (if false)
BB90   <- [89, 96]
  val?            %90.0 = Phi                      %96.2:BB96, %89.1:BB89
  val?            %90.1 = %90.0
  val?            %90.2 = Extract1_1D        !v    %88.1, %90.1, e0.2   <val?_>
  void                    StVar              lW    funs, %90.2, e0.2
  val?^ | miss    %90.4 = LdVar              eR    fdefs, e0.2
  val?            %90.5 = Force!             !v    %90.4, e0.2   <val?_>
  lgl$#-          %90.6 = IsType                   %90.5 isA val+   <@?>
  void                    Branch                   %90.6 -> BB95 (if true) | BB91 (if false)
BB216   <- [84]
  val?~- | miss   %216.0 = CastType           d     dn %84.0
  void                    Visible            v     
  val?-           %216.2 = Force!<value>            %216.0,    <vec->
  val?-           %216.3 = %216.2
  goto BB87
BB217   <- [84]
  fs              %217.0 = FrameState         R     0x55bbe20be980+3863: [], env=e0.2
  void                    Deopt              !v    %217.0, Typecheck@0x55bbe6265e28[Type#191], %84.0   !
BB212   <- [64]
  prom-           %212.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p16 (!refl), e0.2
  val?            %212.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%212.0, "genericFunction") e0.2   <lgl$->
  lgl$#-          %212.2 = IsType                   %212.1 isA lgl$-
  void                    Branch                   %212.2 -> BB220 (if true) | BB221 (if false)
BB213   <- [64]
  fs              %213.0 = FrameState         R     0x55bbe20be980+2767: [%164.2, %164.3, %54.2], env=e0.2
  void                    Deopt              !v    %213.0, CallTarget@0x55bbe6265e28[Call#45], %64.0   !
BB95   <- [90]
  val?^ | miss    %95.0 = LdVar              eR    reset, e0.2
  val?            %95.1 = Force!             !v    %95.0, e0.2   <val?_>
  val?            %95.2 = %95.1
  goto BB92
BB91   <- [90]
  prom-           %91.0 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p20, e0.2
  prom-           %91.1 = %91.0
  goto BB92
BB220   <- [212]
  lgl$-           %220.0 = CastType           d     dn %212.1
  lgl$-           %220.1 = Not                d     %220.0, elided
  lgl$#-          %220.2 = CheckTrueFalse     e     %220.1
  void                    Branch                   %220.2 -> BB74 (if true) | BB67 (if false)
BB221   <- [212]
  void                    Nop                !     
  val?            %221.1 = %212.1
  dr              %221.2 = Typecheck@0x55bbe6265e28[Type#140]
  goto BB65
BB92   <- [91, 95]
  val?            %92.0 = Phi                      %95.2:BB95, %91.1:BB91
  val?            %92.1 = %92.0
  val?            %92.2 = Extract1_1D        !v    %90.5, %92.1, e0.2   <val?_>
  void                    StVar              lW    fdefs, %92.2, e0.2
  val             %92.4 = ChkMissing         e     %92.2
  val?+           %92.5 = ToForSeq           e     %92.2
  int$-           %92.6 = Length                   %92.5
  lgl$-           %92.7 = Lt                 d     %92.6, %112.1, elided   <@?>
  lgl$#-          %92.8 = Identical                %92.7, true
  void                    Branch                   %92.8 -> BB94 (if true) | BB93 (if false)
BB74   <- [220]
  (cls|spec|blt)  %74.0 = LdFun              !v    warning, e0.2
  fs              %74.1 = FrameState         R     0x55bbe20be980+3125: [%164.2, %164.3, %54.2, %74.0], env=e0.2
  void                    Deopt              !v    %74.1, DeadCall@0x55bbe6265e28[Call#50], %74.0   !
BB67   <- [220]
  val?^ | miss    %67.0 = LdVar              eR    environment, e0.2
  lgl$#-          %67.1 = Identical                %67.0, function(fun=NULL) <(rir::DispatchTable*)0x55b|...
  void                    Branch                   %67.1 -> BB222 (if true) | BB223 (if false)
BB65   <- [221, 223]
  val?^ | miss    %65.0 = Phi                      %221.1:BB221, %223.1:BB223
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %221.2:BB221, %223.2:BB223
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x55bbe20be980+2844: [%164.2, %164.3, %54.2, %212.1], env=e0.2
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB94   <- [92]
  void                    Nop                !     
  goto BB84
BB93   <- [92]
  val?            %93.0 = Extract2_1D        wed   %92.5, %112.1, elided
  void                    StVar              lW    fdef, %93.0, e0.2
  (cls|spec|blt)  %93.2 = LdFun              !v    .resetSigLength, e0.2
  fs              %93.3 = FrameState         R     0x55bbe20be980+3753: [%92.5, %92.6, %112.1, %93.2], env=e0.2
  void                    Deopt              !v    %93.3, DeadCall@0x55bbe6265e28[Call#59], %93.2   !
BB222   <- [67]
  val?^ | miss    %222.0 = LdVar              eR    fdef, e0.2
  val?            %222.1 = Force!<value>      !v    %222.0, e0.2   <cls>
  prom-           %222.2 = MkArg                    %222.1, .checkGroupSigLength[0x55bbe506fb20]_p17 (!refl), 
  val?            %222.3 = StaticCall         !v    environment[0x55bbe563f920](%222.2) e0.2   <env->
  void                    StVar              lW    ev, %222.3, e0.2
  (cls|spec|blt)  %222.5 = LdFun              !v    $, <0x55bbe1e1fc10>, e0.2
  prom-           %222.6 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p18, e0.2
  prom-           %222.7 = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p19, e0.2
  val?            %222.8 = Call               !v    %222.5(%222.6, %222.7) e0.2   <real$->
  lgl$-           %222.9 = Is                       %222.8, NULL
  lgl$#-          %222.10 = IsType                   %222.8 isA real$-
  void                    Branch                   %222.10 -> BB224 (if true) | BB225 (if false)
BB223   <- [67]
  void                    Nop                !     
  val?^ | miss    %223.1 = %67.0
  dr              %223.2 = CallTarget@0x55bbe6265e28[Call#46]
  goto BB65
BB224   <- [222]
  real$-          %224.0 = CastType           d     dn %222.8
  void                    StVar              lW    sigl, %224.0, e0.2
  lgl$#-          %224.2 = CheckTrueFalse     e     %222.9
  void                    Branch                   %224.2 -> BB73 (if true) | BB72 (if false)
BB225   <- [222]
  fs              %225.0 = FrameState         R     0x55bbe20be980+2939: [%164.2, %164.3, %54.2, %222.8], env=e0.2
  void                    Deopt              !v    %225.0, Typecheck@0x55bbe6265e28[Type#145], %222.8   !
BB73   <- [224]
  (cls|spec|blt)  %73.0 = LdFun              !v    .setupMethodsTables, e0.2
  fs              %73.1 = FrameState         R     0x55bbe20be980+2976: [%164.2, %164.3, %54.2, %73.0], env=e0.2
  void                    Deopt              !v    %73.1, DeadCall@0x55bbe6265e28[Call#48], %73.0   !
BB72   <- [224]
  val?^ | miss    %72.0 = LdVar              eR    sigs !upd, e0.2
  lgl$#-          %72.1 = IsType                   %72.0 isA real-
  void                    Branch                   %72.1 -> BB228 (if true) | BB229 (if false)
BB228   <- [72]
  real-           %228.0 = CastType           d     dn %72.0
  val?^ | miss    %228.1 = LdVar              eR    i, e0.2
  lgl$#-          %228.2 = IsType                   %228.1 isA int$-
  void                    Branch                   %228.2 -> BB230 (if true) | BB231 (if false)
BB229   <- [72]
  void                    Nop                !     
  val?^ | miss    %229.1 = %72.0
  dr              %229.2 = Typecheck@0x55bbe6265e28[Type#150]
  goto BB70
BB230   <- [228]
  int$-           %230.0 = CastType           d     dn %228.1
  real-           %230.1 = Subassign1_1D      wed   %224.0, %228.0, %230.0, elided
  void                    StVar              lW    sigs, %230.1, e0.2
  int$-           %230.3 = %54.2
  goto BB54
BB231   <- [228]
  void                    Nop                !     
  val?^ | miss    %231.1 = %228.1
  dr              %231.2 = Typecheck@0x55bbe6265e28[Type#151]
  goto BB70
BB70   <- [229, 231]
  val?^ | miss    %70.0 = Phi                      %229.1:BB229, %231.1:BB231
  val?^ | miss    %70.1 = %70.0
  dr              %70.2 = Phi                      %229.2:BB229, %231.2:BB231
  dr              %70.3 = %70.2
  fs              %70.4 = FrameState         R     0x55bbe20be980+2955: [%164.2, %164.3, %54.2, %224.0], env=e0.2
  void                    Deopt              !v    %70.4, %70.3, %70.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    .checkGroupSigLength@Prom(9)0, e0.0
  void                    Return             l     %0.1
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    funs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .SigLength, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ev, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .SigLength, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    reset, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    reset, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     unlist, <0x55bbe2136508>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p23, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, false) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gnames, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     unlist, <0x55bbe2136508>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p25, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, false) e0.0   <vec$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    generics, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec$->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x55bbe1e1fbd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p29, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .checkGroupSigLength[0x55bbe506fb20]_p30, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec$->
  void                    Return             l     %0.4
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    getGeneric, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     Recall, e0.0
  (miss|dots)     %0.2  = LdDots             R     , e0.0
  *dots-          %0.3  = ExpandDots               %0.2
  val?            %0.4  = NamedCall          !     %0.1(.xpandDotsTrigger=%0.3) e0.0   <val?_>
  void                    Return             l     %0.4

│ .checkGroupSigLength[0x55bbe506fb20]                                         │
└──────────────────────────────────────────────────────────────────────────────┘
