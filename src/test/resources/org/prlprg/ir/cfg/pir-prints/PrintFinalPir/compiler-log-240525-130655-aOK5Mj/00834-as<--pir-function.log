
┌──────────────────────────────────────────────────────────────────────────────┐
│ as<-[0x55bbe6918a70]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2│
│ Properties:                                                                  │
├────── Final PIR Version
as<-[0x55bbe6918a70]
BB0
  val?~+          %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  val?~           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    .class1, <env 0x55bbe2427378>
  lgl$#-          %0.4  = Identical                %0.3, function(x) <(rir::DispatchTable*)0x55bbe6063b|...
  void                    Branch                   %0.4 -> BB75 (if true) | BB76 (if false)
BB75   <- [0]
  env             e75.0 = MkEnv              l     object=%0.2, Class=%0.1, value=%0.0, parent=<env 0x55bbe2427378>, context 1
  prom-           %75.1 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p0 (!refl), e75.0
  ct              %75.2 = PushContext        lCL   %75.1, .class1(object), function(x) <(rir::DispatchTable*)0x55bbe6063b|..., e75.0
  val?^           %75.3 = CastType                 up %75.1
  val?^ | miss    %75.4 = LdVar              eR    class, <env 0x55bbe2427378>
  lgl$#-          %75.5 = Identical                <blt class>, %75.4   <true>
  void                    Branch                   %75.5 -> BB77 (if true) | BB78 (if false)
BB76   <- [0]
  env             e76.0 = (MkEnv)            l     object=%0.2, Class=%0.1, value=%0.0, parent=<env 0x55bbe2427378>, context 1
  fs              %76.1 = FrameState         R     0x55bbe49a0340+0: [], env=e76.0
  void                    Deopt              !v    %76.1, CallTarget@0x55bbe3f62bc0[Call#0], %0.3
BB77   <- [75]
  env             e77.0 = MkEnv              l     x=%75.3, parent=<env 0x55bbe2427378>, context 1
  val?            %77.1 = Force!<lazy>       !vr   %75.3,    <(str|cls)>
  val?            %77.2 = CallBuiltin        !v    class(%77.1) e77.0   <str$+>
  void                    StVar              lW    cl, %77.2, e77.0
  lgl$#-          %77.4 = IsType                   %77.2 isA val?+
  val?^ | miss    %77.5 = LdVar              eR    length, e77.0
  lgl$#-          %77.6 = Identical                <blt length>, %77.5   <true>
  void                    Branch                   %77.6 -> BB79 (if true) | BB80 (if false)
BB78   <- [75]
  fs              %78.0 = FrameState         R     0x55bbe49a0340+32: [], env=e75.0
  env             e78.1 = (MkEnv)            l     x=%75.3, parent=<env 0x55bbe2427378>, context 1
  fs              %78.2 = FrameState         R     0x55bbe5cdb5f0+17: [<blt class>, %75.5], env=e78.1, next=%78.0
  void                    Deopt              !v    %78.2, DeadBranchReached@0x55bbe6af2378[Test#0], %75.5   !
BB79   <- [77]
  val             %79.0 = ChkMissing         e     %77.2
  void                    Branch                   %77.4 -> BB81 (if true) | BB82 (if false)
BB80   <- [77]
  void                    Nop                !     
  lgl$#-          %80.1 = %77.6
  dr              %80.2 = DeadBranchReached@0x55bbe6af2378[Test#1]
  goto BB5
BB81   <- [79]
  val?+           %81.0 = CastType           d     dn %77.2   <str$+>
  (int|real)$-    %81.1 = CallSafeBuiltin    wed   length(%81.0)    <int$->
  lgl$#-          %81.2 = IsType                   %81.1 isA int$-
  void                    Branch                   %81.2 -> BB83 (if true) | BB84 (if false)
BB82   <- [79]
  void                    Nop                !     
  val?            %82.1 = %77.2
  dr              %82.2 = Typecheck@0x55bbe6af2378[Type#2]
  goto BB5
BB5   <- [80, 82]
  val?^ | miss    %5.0  = Phi                      %80.1:BB80, %82.1:BB82
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %80.2:BB80, %82.2:BB82
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55bbe49a0340+32: [], env=e75.0
  fs              %5.5  = FrameState         R     0x55bbe5cdb5f0+105: [], env=e77.0, next=%5.4
  void                    Deopt              !v    %5.5, %5.3, %5.1   !
BB83   <- [81]
  int$-           %83.0 = CastType           d     dn %81.1
  lgl$-           %83.1 = Gt                 d     %83.0, 1L, elided   <lgl$->
  lgl$#-          %83.2 = CheckTrueFalse     e     %83.1
  void                    Branch                   %83.2 -> BB73 (if true) | BB9 (if false)
BB84   <- [81]
  fs              %84.0 = FrameState         R     0x55bbe49a0340+32: [], env=e75.0
  fs              %84.1 = FrameState         R     0x55bbe5cdb5f0+196: [%81.1], env=e77.0, next=%84.0
  void                    Deopt              !v    %84.1, Typecheck@0x55bbe6af2378[Type#5], %81.1   !
BB73   <- [83]
  val?            %73.0 = Extract2_1D        wed   %81.0, 1L, elided   <val?_>
  val?            %73.1 = %73.0
  goto BB10
BB9   <- [83]
  void                    Nop                !     
  val?+           %9.1  = %81.0
  goto BB10
BB10   <- [9, 73]
  val?            %10.0 = Phi                      %9.1:BB9, %73.1:BB73
  val?            %10.1 = %10.0
  val?            %10.2 = PopContext         C     %10.1, %75.2   <str$+>
  void                    StVar              lW    thisClass, %10.2, e75.0
  val?^ | miss    %10.4 = LdVar              eR    .identC, e75.0
  lgl$#-          %10.5 = Identical                %10.4, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Branch                   %10.5 -> BB85 (if true) | BB86 (if false)
BB85   <- [10]
  prom-           %85.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p1, e75.0
  prom-           %85.1 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p3, e75.0
  ct              %85.2 = PushContext        lCL   %85.0, %85.1, .identC(.class1(value), Class), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|..., e75.0
  val?^           %85.3 = CastType                 up %85.1
  val?^           %85.4 = CastType                 up %85.0
  val?^ | miss    %85.5 = LdVar              eR    .Call, <env 0x55bbe2427378>
  lgl$#-          %85.6 = Identical                <blt .Call>, %85.5   <true>
  void                    Branch                   %85.6 -> BB87 (if true) | BB88 (if false)
BB86   <- [10]
  fs              %86.0 = FrameState         R     0x55bbe49a0340+46: [], env=e75.0
  void                    Deopt              !v    %86.0, CallTarget@0x55bbe3f62bc0[Call#1], %10.4   !
BB87   <- [85]
  val?^ | miss    %87.0 = LdVar              eR    C_R_identC, <env 0x55bbe2427378>
  env             e87.1 = MkEnv              l     c1=%85.4, c2=%85.3, parent=<env 0x55bbe2427378>, context 1
  val?            %87.2 = Force!<value>      !v    %87.0, e87.1   <vec>
  val?^ | miss    %87.3 = LdVar              eR    c1, e87.1
  val?            %87.4 = Force!<lazy>       !v    %87.3, e87.1   <str$+>
  val?^ | miss    %87.5 = LdVar              eR    c2, e87.1
  val?            %87.6 = Force!<lazy>       !v    %87.5, e87.1   <str$+>
  val?            %87.7 = CallBuiltin        !v    .Call(%87.2, %87.4, %87.6) e87.1   <lgl$->
  lgl$#-          %87.8 = IsType                   %87.7 isA lgl$-
  void                    Branch                   %87.8 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  fs              %88.0 = FrameState         R     0x55bbe49a0340+83: [], env=e75.0
  env             e88.1 = (MkEnv)            l     c1=%85.4, c2=%85.3, parent=<env 0x55bbe2427378>, context 1
  fs              %88.2 = FrameState         R     0x55bbe47ad100+17: [<blt .Call>, %85.6], env=e88.1, next=%88.0
  void                    Deopt              !v    %88.2, DeadBranchReached@0x55bbe3076f38[Test#0], %85.6   !
BB89   <- [87]
  lgl$-           %89.0 = CastType           d     dn %87.7
  val?            %89.1 = PopContext         C     %89.0, %85.2   <lgl$->
  lgl$#-          %89.2 = IsType                   %89.1 isA lgl$-
  void                    Branch                   %89.2 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x55bbe49a0340+83: [], env=e75.0
  fs              %90.1 = FrameState         R     0x55bbe47ad100+129: [%87.7], env=e87.1, next=%90.0
  void                    Deopt              !v    %90.1, Typecheck@0x55bbe3076f38[Type#6], %87.7   !
BB91   <- [89]
  lgl$-           %91.0 = CastType           d     dn %89.1
  lgl$-           %91.1 = Not                d     %91.0, elided
  lgl$#-          %91.2 = CheckTrueFalse     e     %91.1
  void                    Branch                   %91.2 -> BB72 (if true) | BB19 (if false)
BB92   <- [89]
  void                    Nop                !     
  val?            %92.1 = %89.1
  dr              %92.2 = Typecheck@0x55bbe3f62bc0[Type#5]
  goto BB17
BB72   <- [91]
  (cls|spec|blt)  %72.0 = LdFun              !v    as, e75.0
  fs              %72.1 = FrameState         R     0x55bbe49a0340+105: [%72.0], env=e75.0
  void                    Deopt              !v    %72.1, DeadCall@0x55bbe3f62bc0[Call#3], %72.0   !
BB19   <- [91]
  val?^ | miss    %19.0 = LdVar              eR    .classEnv, e75.0
  lgl$#-          %19.1 = Identical                %19.0, function(Class, default=.requirePackage("metho|...
  void                    Branch                   %19.1 -> BB93 (if true) | BB94 (if false)
BB17   <- [92, 94]
  val?^ | miss    %17.0 = Phi                      %92.1:BB92, %94.1:BB94
  val?^ | miss    %17.1 = %17.0
  dr              %17.2 = Phi                      %92.2:BB92, %94.2:BB94
  dr              %17.3 = %17.2
  fs              %17.4 = FrameState         R     0x55bbe49a0340+83: [%89.1], env=e75.0
  void                    Deopt              !v    %17.4, %17.3, %17.1   !
BB93   <- [19]
  prom-           %93.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p4, e75.0
  ct              %93.1 = PushContext        lCL   %93.0, .classEnv(class(object)), function(Class, default=.requirePackage("metho|..., e75.0
  val?^           %93.2 = CastType                 up %93.0
  env             e93.3 = MkEnv              l     Class=%93.2, default(miss)=missingArg, mustFind(miss)=missingArg, parent=<env 0x55bbe2427378>, context 1
  prom-           %93.4 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p25, e93.3
  val?^ | miss    %93.5 = CastType                 up %93.4
  void                    StArg              lW    default, %93.5, e93.3
  void                    StArg              lW    mustFind, true, e93.3
  val?^ | miss    %93.8 = LdVar              eR    is.character, <env 0x55bbe2427378>
  lgl$#-          %93.9 = Identical                <blt is.character>, %93.8   <true>
  void                    Branch                   %93.9 -> BB95 (if true) | BB96 (if false)
BB94   <- [19]
  void                    Nop                !     
  val?^ | miss    %94.1 = %19.0
  dr              %94.2 = CallTarget@0x55bbe3f62bc0[Call#4]
  goto BB17
BB95   <- [93]
  val?            %95.0 = Force!<lazy>       !vL   %93.2, e93.3   <str$+>
  lgl$#-          %95.1 = IsType                   %95.0 isA val?+
  void                    Branch                   %95.1 -> BB97 (if true) | BB98 (if false)
BB96   <- [93]
  fs              %96.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  fs              %96.1 = FrameState         R     0x55bbe2133bd0+0: [], env=e93.3, next=%96.0
  void                    Deopt              !v    %96.1, DeadBranchReached@0x55bbe4f3f560[Test#0], %93.9   !
BB97   <- [95]
  val?+           %97.0 = CastType           d     dn %95.0   <str$+>
  lgl$#-          %97.1 = CallSafeBuiltin    wed   is.character(%97.0)    <lgl$->
  void                    Branch                   %97.1 -> BB27 (if true) | BB26 (if false)
BB98   <- [95]
  fs              %98.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  fs              %98.1 = FrameState         R     0x55bbe2133bd0+69: [<blt is.character>, %95.0], env=e93.3, next=%98.0
  void                    Deopt              !v    %98.1, Typecheck@0x55bbe4f3f560[Type#2], %95.0   !
BB27   <- [97]
  val?^ | miss    %27.0 = LdVar              eR    packageSlot, <env 0x55bbe2427378>
  lgl$#-          %27.1 = Identical                %27.0, function(object) <(rir::DispatchTable*)0x55bbe|...
  void                    Branch                   %27.1 -> BB99 (if true) | BB100 (if false)
BB26   <- [97]
  fs              %26.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  (cls|spec|blt)  %26.1 = LdFun              !v    @, <env 0x55bbe2427378>
  fs              %26.2 = FrameState         R     0x55bbe2133bd0+107: [%26.1], env=e93.3, next=%26.0
  void                    Deopt              !v    %26.2, DeadCall@0x55bbe4f3f560[Call#2], %26.1   !
BB99   <- [27]
  prom-           %99.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p26, e93.3
  ct              %99.1 = PushContext        lCL   %99.0, packageSlot(Class), function(object) <(rir::DispatchTable*)0x55bbe|..., e93.3
  val?^           %99.2 = CastType                 up %99.0
  val?^ | miss    %99.3 = LdVar              eR    attr, <env 0x55bbe2427378>
  lgl$#-          %99.4 = Identical                <blt attr>, %99.3   <true>
  void                    Branch                   %99.4 -> BB101 (if true) | BB102 (if false)
BB100   <- [27]
  fs              %100.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  fs              %100.1 = FrameState         R     0x55bbe2133bd0+91: [%97.1], env=e93.3, next=%100.0
  void                    Deopt              !v    %100.1, CallTarget@0x55bbe4f3f560[Call#3], %27.0   !
BB101   <- [99]
  env             e101.0 = MkEnv              l     object=%99.2, parent=<env 0x55bbe2427378>, context 1
  val?            %101.1 = Force!<lazy>       !vL   %99.2, e101.0   <(str|other)>
  val?            %101.2 = CallBuiltin        !v    attr(%101.1, "package") e101.0   <(nil|str)->
  val?            %101.3 = PopContext         C     %101.2, %99.1   <(nil|str)->
  lgl$-           %101.4 = Is                       %101.3, NULL
  void                    StVar              lW    package, %101.3, e93.3
  val             %101.6 = ChkMissing         e     %101.3
  lgl$#-          %101.7 = CheckTrueFalse     e     %101.4
  void                    Branch                   %101.7 -> BB60 (if true) | BB32 (if false)
BB102   <- [99]
  fs              %102.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  fs              %102.1 = FrameState         R     0x55bbe2133bd0+181: [], env=e93.3, next=%102.0
  env             e102.2 = (MkEnv)            l     object=%99.2, parent=<env 0x55bbe2427378>, context 1
  fs              %102.3 = FrameState         R     0x55bbe44a68d0+17: [<blt attr>, %99.4], env=e102.2, next=%102.1
  void                    Deopt              !v    %102.3, DeadBranchReached@0x55bbe62444d8[Test#0], %99.4   !
BB60   <- [101]
  val?^ | miss    %60.0 = LdVar              eR    default, e93.3
  val?            %60.1 = Force!<lazy>       !v    %60.0, e93.3   <env->
  void                    StVar              lW    value, %60.1, e93.3
  val?^ | miss    %60.3 = LdVar              eR    getClassDef, e93.3
  lgl$#-          %60.4 = Identical                %60.3, function(Class, where=topenv(parent.frame()), |...
  void                    Branch                   %60.4 -> BB105 (if true) | BB106 (if false)
BB32   <- [101]
  val?^ | miss    %32.0 = LdVar              eR    .requirePackage, e93.3
  lgl$#-          %32.1 = Identical                %32.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Branch                   %32.1 -> BB103 (if true) | BB104 (if false)
BB105   <- [60]
  prom-           %105.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p28, e93.3
  prom-           %105.1 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p29, e93.3
  val?            %105.2 = StaticCall         !v    getClassDef[0x55bbe692acc0](%105.0, %105.1, nil) e93.3   <other>
  lgl$-           %105.3 = Is                       %105.2, NULL
  lgl$-           %105.4 = AsLogical                %105.3
  lgl$#-          %105.5 = Identical                %105.4, false
  void                    StVar              lW    def, %105.2, e93.3
  val             %105.7 = ChkMissing         e     %105.2
  lgl$#-          %105.8 = CheckTrueFalse     e     %105.3
  void                    Branch                   %105.8 -> BB71 (if true) | BB63 (if false)
BB106   <- [60]
  fs              %106.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  fs              %106.1 = FrameState         R     0x55bbe2133bd0+285: [], env=e93.3, next=%106.0
  void                    Deopt              !v    %106.1, CallTarget@0x55bbe4f3f560[Call#5], %60.3   !
BB103   <- [32]
  prom-           %103.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p27 (!refl), e93.3
  val?            %103.1 = StaticCall         !v    .requirePackage[0x55bbe4aab8b0](%103.0) e93.3   <env->
  val?            %103.2 = %103.1
  goto BB33
BB104   <- [32]
  fs              %104.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  fs              %104.1 = FrameState         R     0x55bbe2133bd0+195: [], env=e93.3, next=%104.0
  void                    Deopt              !v    %104.1, CallTarget@0x55bbe4f3f560[Call#4], %32.0   !
BB71   <- [105]
  fs              %71.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  val?^ | miss    %71.1 = LdVar              eR    .GlobalEnv, e93.3
  val?            %71.2 = Force!             !v    %71.1, e93.3   <val?_>
  void                    StVar              lW    value, %71.2, e93.3
  (cls|spec|blt)  %71.4 = LdFun              !v    getClassDef, e93.3
  fs              %71.5 = FrameState         R     0x55bbe2133bd0+399: [%71.4], env=e93.3, next=%71.0
  void                    Deopt              !v    %71.5, DeadCall@0x55bbe4f3f560[Call#6], %71.4   !
BB63   <- [105]
  void                    Branch                   %105.5 -> BB70 (if true) | BB64 (if false)
BB33   <- [103, 113]
  val?            %33.0 = Phi                      %103.2:BB103, %113.2:BB113
  val?            %33.1 = %33.0
  val?            %33.2 = PopContext         C     %33.1, %93.1   <env->
  void                    StVar              lW    where, %33.2, e75.0
  val?^ | miss    %33.4 = LdVar              eR    getGeneric, e75.0
  lgl$#-          %33.5 = Identical                %33.4, function(f, mustFind=FALSE, where, package="")|...
  void                    Branch                   %33.5 -> BB107 (if true) | BB108 (if false)
BB70   <- [63]
  void                    Nop                !     
  lgl$-           %70.1 = %105.4
  goto BB65
BB64   <- [63]
  val?^ | miss    %64.0 = LdVar              eR    mustFind, e93.3
  val?            %64.1 = Force!             !v    %64.0, e93.3   <val?_>
  lgl$-           %64.2 = AsLogical          e     %64.1
  lgl$-           %64.3 = LAnd                     %105.4, %64.2
  lgl$-           %64.4 = %64.3
  goto BB65
BB107   <- [33]
  prom-           %107.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p6 (!refl), e75.0
  val?            %107.1 = StaticCall         !v    getGeneric[0x55bbe2848540]("coerce<-", missingArg, %107.0) { 0 2n } e75.0   <cls>
  void                    StVar              lW    coerceFun, %107.1, e75.0
  val?^ | miss    %107.3 = LdVar              eR    getMethodsForDispatch, e75.0
  lgl$#-          %107.4 = Identical                %107.3, function(fdef, inherited=FALSE) <(rir::Dispatc|...
  void                    Branch                   %107.4 -> BB109 (if true) | BB110 (if false)
BB108   <- [33]
  fs              %108.0 = FrameState         R     0x55bbe49a0340+214: [], env=e75.0
  void                    Deopt              !v    %108.0, CallTarget@0x55bbe3f62bc0[Call#6], %33.4   !
BB65   <- [70, 64]
  lgl$-           %65.0 = Phi                      %64.4:BB64, %70.1:BB70
  lgl$-           %65.1 = %65.0
  lgl$#-          %65.2 = CheckTrueFalse     e     %65.1
  void                    Branch                   %65.2 -> BB69 (if true) | BB68 (if false)
BB109   <- [107]
  prom-           %109.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p7 (!refl), e75.0
  val?            %109.1 = StaticCall         !v    getMethodsForDispatch[0x55bbe38969d0](%109.0) e75.0   <env->
  void                    StVar              lW    coerceMethods, %109.1, e75.0
  lgl$-           %109.3 = Is                       %109.1, NULL
  val?^ | miss    %109.4 = LdVar              eR    .quickCoerceSelect, e75.0
  lgl$#-          %109.5 = Identical                %109.4, function(from, to, fdef, methods, where) <(rir|...
  void                    Branch                   %109.5 -> BB111 (if true) | BB112 (if false)
BB110   <- [107]
  fs              %110.0 = FrameState         R     0x55bbe49a0340+273: [], env=e75.0
  void                    Deopt              !v    %110.0, CallTarget@0x55bbe3f62bc0[Call#7], %107.3   !
BB69   <- [65]
  fs              %69.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  (cls|spec|blt)  %69.1 = LdFun              !v    stop, e93.3
  fs              %69.2 = FrameState         R     0x55bbe2133bd0+694: [%69.1], env=e93.3, next=%69.0
  void                    Deopt              !v    %69.2, DeadCall@0x55bbe4f3f560[Call#10], %69.1   !
BB68   <- [65]
  val?^ | miss    %68.0 = LdVar              eR    value, e93.3
  lgl$#-          %68.1 = IsType                   %68.0 isA val?~- | miss
  void                    Branch                   %68.1 -> BB113 (if true) | BB114 (if false)
BB111   <- [109]
  prom-           %111.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p8, e75.0
  prom-           %111.1 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p9, e75.0
  prom-           %111.2 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p10, e75.0
  prom-           %111.3 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p11 (!refl), e75.0
  prom-           %111.4 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p12, e75.0
  ct              %111.5 = PushContext        lCL   %111.0, %111.1, %111.2, %111.3, %111.4, .quickCoerceSelect(thisClass, Class, coerceFun|..., function(from, to, fdef, methods, where) <(rir|..., e75.0
  val?^           %111.6 = CastType                 up %111.4
  val?^           %111.7 = CastType                 up %111.3
  val?^           %111.8 = CastType                 up %111.2
  val?^           %111.9 = CastType                 up %111.1
  val?^           %111.10 = CastType                 up %111.0
  lgl$#-          %111.11 = CheckTrueFalse     e     %109.3
  env             e111.12 = MkEnv              l     from=%111.10, to=%111.9, fdef=%111.8, methods=%111.7, where=%111.6, parent=<env 0x55bbe2427378>, context 1
  void                    Branch                   %111.11 -> BB59 (if true) | BB42 (if false)
BB112   <- [109]
  fs              %112.0 = FrameState         R     0x55bbe49a0340+319: [], env=e75.0
  void                    Deopt              !v    %112.0, CallTarget@0x55bbe3f62bc0[Call#8], %109.4   !
BB113   <- [68]
  val?~- | miss   %113.0 = CastType           d     dn %68.0
  val?-           %113.1 = Force!<value>            %113.0,    <env->
  val?-           %113.2 = %113.1
  goto BB33
BB114   <- [68]
  fs              %114.0 = FrameState         R     0x55bbe49a0340+200: [], env=e75.0
  fs              %114.1 = FrameState         R     0x55bbe2133bd0+678: [%65.1], env=e93.3, next=%114.0
  void                    Deopt              !v    %114.1, Typecheck@0x55bbe4f3f560[Type#34], %68.0   !
BB59   <- [111]
  void                    Nop                !     
  nil-            %59.1 = nil
  goto BB51
BB42   <- [111]
  val?^ | miss    %42.0 = LdVar              eR    is.environment, <env 0x55bbe2427378>
  lgl$#-          %42.1 = Identical                <blt is.environment>, %42.0   <true>
  void                    Branch                   %42.1 -> BB115 (if true) | BB116 (if false)
BB51   <- [59, 50]
  val?            %51.0 = Phi                      %50.2:BB50, %59.1:BB59
  val?            %51.1 = %51.0
  val?            %51.2 = PopContext         C     %51.1, %111.5   <cls>
  lgl$-           %51.3 = Is                       %51.2, NULL
  void                    StVar              lW    asMethod, %51.2, e75.0
  val             %51.5 = ChkMissing         e     %51.2
  lgl$#-          %51.6 = CheckTrueFalse     e     %51.3
  lgl$#-          %51.7 = Identical                %51.5, function(from, to="character", value) <(rir::D|...
  void                    Branch                   %51.6 -> BB55 (if true) | BB54 (if false)
BB115   <- [42]
  lgl$#-          %115.0 = CallSafeBuiltin    wed   is.environment(%109.1)    <lgl$->
  void                    Branch                   %115.0 -> BB46 (if true) | BB45 (if false)
BB116   <- [42]
  fs              %116.0 = FrameState         R     0x55bbe49a0340+371: [], env=e75.0
  env             e116.1 = (MkEnv)            l     from=%111.10, to=%111.9, fdef=%111.8, methods=%111.7, where=%111.6, parent=<env 0x55bbe2427378>, context 1
  fs              %116.2 = FrameState         R     0x55bbe25b6fc0+9: [%109.1], env=e116.1, next=%116.0
  void                    Deopt              !v    %116.2, DeadBranchReached@0x55bbe3fa8af0[Test#0], %42.1   !
BB55   <- [51]
  val?^ | miss    %55.0 = LdVar              eR    c, e75.0
  lgl$#-          %55.1 = Identical                <blt c>, %55.0   <@?>
  void                    Branch                   %55.1 -> BB57 (if true) | BB56 (if false)
BB54   <- [51]
  void                    Branch                   %51.7 -> BB117 (if true) | BB118 (if false)
BB46   <- [115]
  val?^ | miss    %46.0 = LdVar              eR    .findMethodInTable, <env 0x55bbe2427378>
  lgl$#-          %46.1 = Identical                %46.0, function(signature, table, fdef=NULL, expdSig=|...
  void                    Branch                   %46.1 -> BB119 (if true) | BB120 (if false)
BB45   <- [115]
  (cls|spec|blt)  %45.0 = LdFun              !v    @, <env 0x55bbe2427378>
  fs              %45.1 = FrameState         R     0x55bbe49a0340+371: [], env=e75.0
  fs              %45.2 = FrameState         R     0x55bbe25b6fc0+132: [%45.0], env=e111.12, next=%45.1
  void                    Deopt              !v    %45.2, DeadCall@0x55bbe3fa8af0[Call#1], %45.0   !
BB57   <- [55]
  val?^ | miss    %57.0 = LdVar              eR    thisClass, e75.0
  val?            %57.1 = Force!             !v    %57.0, e75.0   <val?_>
  val?^ | miss    %57.2 = LdVar              eR    Class, e75.0
  val?            %57.3 = Force!             !v    %57.2, e75.0   <val?_>
  val?            %57.4 = NamedCall          !v    <blt c>(from=%57.1, to=%57.3) e75.0   <val?_>
  void                    StVar              lW    sig, %57.4, e75.0
  void                    StVar              lW    canCache, true, e75.0
  void                    StVar              lW    inherited, false, e75.0
  (cls|spec|blt)  %57.8 = LdFun              !v    selectMethod, e75.0
  fs              %57.9 = FrameState         R     0x55bbe49a0340+590: [%57.8], env=e75.0
  void                    Deopt              !v    %57.9, DeadCall@0x55bbe3f62bc0[Call#10], %57.8   !
BB56   <- [55]
  (cls|spec|blt)  %56.0 = LdFun              !v    c, e75.0
  fs              %56.1 = FrameState         R     0x55bbe49a0340+443: [%56.0], env=e75.0
  void                    Deopt              !v    %56.1, DeadCall@0x55bbe3f62bc0[Call#9], %56.0   !
BB117   <- [54]
  prom-           %117.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p13, e75.0
  prom-           %117.1 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p14, e75.0
  prom-           %117.2 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p15, e75.0
  ct              %117.3 = PushContext        lCL   %117.0, %117.1, %117.2, asMethod(object, Class, value), function(from, to="character", value) <(rir::D|..., e75.0
  val?^           %117.4 = CastType                 up %117.2
  val?^           %117.5 = CastType                 up %117.1
  val?^           %117.6 = CastType                 up %117.0
  env             e117.7 = MkEnv              l     from=%117.6, to=%117.5, value=%117.4, parent=<env 0x55bbe2427378>, context 1
  (cls|spec|blt)  %117.8 = LdFun              !v    <-, <0x55bbe1e14da8>, <env 0x55bbe2427378>
  prom-           %117.9 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p20, e117.7
  prom-           %117.10 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p23, e117.7
  val?            %117.11 = Call               !v    %117.8(%117.9, %117.10) e117.7
  val?^ | miss    %117.12 = LdVar              eR    from, e117.7
  void                    Visible            v     
  val?            %117.14 = Force!<value>      !     %117.12, e117.7   <str>
  val?            %117.15 = PopContext         C     %117.14, %117.3   <str>
  void                    Return             l     %117.15
BB118   <- [54]
  fs              %118.0 = FrameState         R     0x55bbe49a0340+385: [], env=e75.0
  void                    Deopt              !v    %118.0, CallTarget@0x55bbe3f62bc0[Call#30], %51.5   !
BB119   <- [46]
  prom-           %119.0 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p16, e111.12
  prom-           %119.1 = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p19, e111.12
  val?            %119.2 = StaticCall         !v    .findMethodInTable[0x55bbe4e969b0](%119.0, %119.1) e111.12   <cls>
  void                    StVar              lW    method, %119.2, e111.12
  val?^ | miss    %119.4 = LdVar              eR    is.environment, e111.12
  lgl$#-          %119.5 = Identical                <blt is.environment>, %119.4   <true>
  void                    Branch                   %119.5 -> BB121 (if true) | BB122 (if false)
BB120   <- [46]
  fs              %120.0 = FrameState         R     0x55bbe49a0340+371: [], env=e75.0
  fs              %120.1 = FrameState         R     0x55bbe25b6fc0+116: [%115.0], env=e111.12, next=%120.0
  void                    Deopt              !v    %120.1, CallTarget@0x55bbe3fa8af0[Call#8], %46.0   !
BB121   <- [119]
  val             %121.0 = ChkMissing         e     %119.2
  lgl$#-          %121.1 = CallSafeBuiltin    wed   is.environment(%119.2) 
  void                    Branch                   %121.1 -> BB58 (if true) | BB49 (if false)
BB122   <- [119]
  fs              %122.0 = FrameState         R     0x55bbe49a0340+371: [], env=e75.0
  fs              %122.1 = FrameState         R     0x55bbe25b6fc0+703: [], env=e111.12, next=%122.0
  void                    Deopt              !v    %122.1, DeadBranchReached@0x55bbe3fa8af0[Test#5], %119.5   !
BB58   <- [121]
  void                    Nop                !     
  nil-            %58.1 = nil
  goto BB50
BB49   <- [121]
  void                    Nop                !     
  val?            %49.1 = %119.2
  goto BB50
BB50   <- [58, 49]
  val?            %50.0 = Phi                      %49.1:BB49, %58.1:BB58
  val?            %50.1 = %50.0
  val?            %50.2 = %50.1
  goto BB51
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .class1, <0x55bbe53e2070>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55bbe1e20748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p5, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    coerceFun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    thisClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    coerceFun, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    coerceMethods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55bbe1e20940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p17, e0.0
  prom-           %0.3  = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p18, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str->
  void                    Return             l     %0.4
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    to, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p21, e0.0
  prom-           %0.3  = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p22, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .Data, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as, e0.0
  prom-           %0.2  = MkArg                    unboundValue, as<-[0x55bbe6918a70]_p24, e0.0
  val?            %0.3  = NamedCall          !     %0.1(%0.2, "character", strict=false) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .requirePackage, <0x55bbe2db2768>, e0.0
  val?            %0.2  = Call               !     %0.1("methods") e0.0   <env->
  void                    Return             l     %0.2
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ as<-[0x55bbe6918a70]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
