
┌──────────────────────────────────────────────────────────────────────────────┐
│ .matchSigLength[0x55bbe6bf6d10]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl3,!Obj3                │
│ Properties:                                                                  │
├────── Final PIR Version
.matchSigLength[0x55bbe6bf6d10]
BB0
  val?~+          %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  val?^ | miss    %0.4  = LdVar              eR    .getGenericSigLength, <env 0x55bbe2427378>
  lgl$#-          %0.5  = Identical                %0.4, function(fdef, env=environment(fdef), check=TR|...
  void                    Branch                   %0.5 -> BB61 (if true) | BB62 (if false)
BB61   <- [0]
  env             e61.0 = MkEnv              l     sig=%0.3, fdef=%0.2, fenv=%0.1, reset=%0.0, parent=<env 0x55bbe2427378>, context 1
  prom-           %61.1 = MkArg                    unboundValue, .matchSigLength[0x55bbe6bf6d10]_p0, e61.0
  prom-           %61.2 = MkArg                    unboundValue, .matchSigLength[0x55bbe6bf6d10]_p1, e61.0
  val?            %61.3 = StaticCall         !v    .getGenericSigLength[0x55bbe1f73fe0](%61.1, %61.2, true) e61.0   <int$->
  lgl$#-          %61.4 = IsType                   %61.3 isA int$-
  void                    Branch                   %61.4 -> BB63 (if true) | BB64 (if false)
BB62   <- [0]
  env             e62.0 = (MkEnv)            l     sig=%0.3, fdef=%0.2, fenv=%0.1, reset=%0.0, parent=<env 0x55bbe2427378>, context 1
  fs              %62.1 = FrameState         R     0x55bbe51c7e50+0: [], env=e62.0
  void                    Deopt              !v    %62.1, CallTarget@0x55bbe26003b0[Call#0], %0.4
BB63   <- [61]
  int$-           %63.0 = CastType           d     dn %61.3
  void                    StVar              lW    nargs, %63.0, e61.0
  val?^ | miss    %63.2 = LdVar              eR    length, e61.0
  lgl$#-          %63.3 = Identical                <blt length>, %63.2   <true>
  void                    Branch                   %63.3 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  fs              %64.0 = FrameState         R     0x55bbe51c7e50+42: [%61.3], env=e61.0
  void                    Deopt              !v    %64.0, Typecheck@0x55bbe26003b0[Type#2], %61.3   !
BB65   <- [63]
  val?^ | miss    %65.0 = LdVar              eR    sig, e61.0
  val?            %65.1 = Force!<lazy>       !v    %65.0, e61.0   <str+>
  lgl$#-          %65.2 = IsType                   %65.1 isA val?+
  void                    Branch                   %65.2 -> BB67 (if true) | BB68 (if false)
BB66   <- [63]
  fs              %66.0 = FrameState         R     0x55bbe51c7e50+56: [], env=e61.0
  void                    Deopt              !v    %66.0, DeadBranchReached@0x55bbe26003b0[Test#0], %63.3   !
BB67   <- [65]
  val?+           %67.0 = CastType           d     dn %65.1   <str+>
  (int|real)$-    %67.1 = CallSafeBuiltin    wed   length(%67.0)    <int$->
  lgl$#-          %67.2 = IsType                   %67.1 isA int$-
  void                    Branch                   %67.2 -> BB69 (if true) | BB70 (if false)
BB68   <- [65]
  fs              %68.0 = FrameState         R     0x55bbe51c7e50+125: [<blt length>, %65.1], env=e61.0
  void                    Deopt              !v    %68.0, Typecheck@0x55bbe26003b0[Type#4], %65.1   !
BB69   <- [67]
  int$-           %69.0 = CastType           d     dn %67.1
  void                    StVar              lW    n, %69.0, e61.0
  val?^ | miss    %69.2 = LdVar              eR    packageSlot, e61.0
  lgl$#-          %69.3 = Identical                %69.2, function(object) <(rir::DispatchTable*)0x55bbe|...
  void                    Branch                   %69.3 -> BB71 (if true) | BB72 (if false)
BB70   <- [67]
  fs              %70.0 = FrameState         R     0x55bbe51c7e50+147: [%67.1], env=e61.0
  void                    Deopt              !v    %70.0, Typecheck@0x55bbe26003b0[Type#5], %67.1   !
BB71   <- [69]
  prom-           %71.0 = MkArg                    unboundValue, .matchSigLength[0x55bbe6bf6d10]_p2, e61.0
  ct              %71.1 = PushContext        lCL   %71.0, packageSlot(sig), function(object) <(rir::DispatchTable*)0x55bbe|..., e61.0
  val?^           %71.2 = CastType                 up %71.0
  val?^ | miss    %71.3 = LdVar              eR    attr, <env 0x55bbe2427378>
  lgl$#-          %71.4 = Identical                <blt attr>, %71.3   <true>
  void                    Branch                   %71.4 -> BB73 (if true) | BB74 (if false)
BB72   <- [69]
  fs              %72.0 = FrameState         R     0x55bbe51c7e50+161: [], env=e61.0
  void                    Deopt              !v    %72.0, CallTarget@0x55bbe26003b0[Call#2], %69.2   !
BB73   <- [71]
  env             e73.0 = MkEnv              l     object=%71.2, parent=<env 0x55bbe2427378>, context 1
  val?            %73.1 = Force!<lazy>       !vL   %71.2, e73.0   <(str|other)>
  val?            %73.2 = CallBuiltin        !v    attr(%73.1, "package") e73.0   <(nil|str)->
  val?            %73.3 = PopContext         C     %73.2, %71.1   <nil->
  void                    StVar              lW    pkgs, %73.3, e61.0
  val?^ | miss    %73.5 = LdVar              eR    n, e61.0
  lgl$#-          %73.6 = IsType                   %73.5 isA int$-
  void                    Branch                   %73.6 -> BB75 (if true) | BB76 (if false)
BB74   <- [71]
  fs              %74.0 = FrameState         R     0x55bbe51c7e50+193: [], env=e61.0
  env             e74.1 = (MkEnv)            l     object=%71.2, parent=<env 0x55bbe2427378>, context 1
  fs              %74.2 = FrameState         R     0x55bbe44a68d0+17: [<blt attr>, %71.4], env=e74.1, next=%74.0
  void                    Deopt              !v    %74.2, DeadBranchReached@0x55bbe62444d8[Test#0], %71.4   !
BB75   <- [73]
  int$-           %75.0 = CastType           d     dn %73.5
  val?^ | miss    %75.1 = LdVar              eR    nargs, e61.0
  lgl$#-          %75.2 = IsType                   %75.1 isA int$-
  void                    Branch                   %75.2 -> BB77 (if true) | BB78 (if false)
BB76   <- [73]
  void                    Nop                !     
  val?^ | miss    %76.1 = %73.5
  dr              %76.2 = Typecheck@0x55bbe26003b0[Type#8]
  goto BB15
BB77   <- [75]
  int$-           %77.0 = CastType           d     dn %75.1
  lgl$-           %77.1 = Lt                 d     %75.0, %77.0, elided   <lgl$->
  lgl$#-          %77.2 = CheckTrueFalse     e     %77.1
  void                    Branch                   %77.2 -> BB57 (if true) | BB17 (if false)
BB78   <- [75]
  void                    Nop                !     
  val?^ | miss    %78.1 = %75.1
  dr              %78.2 = Typecheck@0x55bbe26003b0[Type#9]
  goto BB15
BB15   <- [76, 78, 80, 82]
  val?^ | miss    %15.0 = Phi                      %76.1:BB76, %78.1:BB78, %80.1:BB80, %82.1:BB82
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %76.2:BB76, %78.2:BB78, %80.2:BB80, %82.2:BB82
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55bbe51c7e50+207: [], env=e61.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB57   <- [77]
  int$-           %57.0 = Sub                d     %77.0, %75.0, elided   <val?_>
  void                    StVar              lW    more, %57.0, e61.0
  val?^ | miss    %57.2 = LdVar              eR    c, e61.0
  lgl$#-          %57.3 = Identical                <blt c>, %57.2   <@?>
  void                    Branch                   %57.3 -> BB59 (if true) | BB58 (if false)
BB17   <- [77]
  lgl$-           %17.0 = Gt                 d     %75.0, %77.0, elided   <lgl$->
  lgl$#-          %17.1 = CheckTrueFalse     e     %17.0
  void                    Branch                   %17.1 -> BB19 (if true) | BB18 (if false)
BB59   <- [57]
  val             %59.0 = ChkMissing         e     %73.3
  (cls|spec|blt)  %59.1 = LdFun              !v    rep, e61.0
  fs              %59.2 = FrameState         R     0x55bbe51c7e50+1329: [<blt c>, %73.3, %59.1], env=e61.0
  void                    Deopt              !v    %59.2, DeadCall@0x55bbe26003b0[Call#11], %59.1   !
BB58   <- [57]
  (cls|spec|blt)  %58.0 = LdFun              !v    c, e61.0
  fs              %58.1 = FrameState         R     0x55bbe51c7e50+1273: [%58.0], env=e61.0
  void                    Deopt              !v    %58.1, DeadCall@0x55bbe26003b0[Call#9], %58.0   !
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    all, e61.0
  lgl$#-          %19.1 = Identical                <blt all>, %19.0   <@?>
  void                    Branch                   %19.1 -> BB21 (if true) | BB20 (if false)
BB18   <- [17]
  val             %18.0 = ChkMissing         e     %73.3
  lgl$#-          %18.1 = IsType                   %18.0 isA val?~- | miss
  void                    Branch                   %18.1 -> BB79 (if true) | BB80 (if false)
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    sig, e61.0
  val?            %21.1 = Force!             !v    %21.0, e61.0   <val?_>
  lgl$#-          %21.2 = IsType                   %21.1 isA val+   <@?>
  void                    Branch                   %21.2 -> BB52 (if true) | BB22 (if false)
BB20   <- [19]
  (cls|spec|blt)  %20.0 = LdFun              !v    all, e61.0
  fs              %20.1 = FrameState         R     0x55bbe51c7e50+320: [%20.0], env=e61.0
  void                    Deopt              !v    %20.1, DeadCall@0x55bbe26003b0[Call#3], %20.0   !
BB79   <- [18]
  val-            %79.0 = CastType           d     dn %18.0   <nil->
  val?^ | miss    %79.1 = LdVar              eR    packageSlot<-, e61.0
  lgl$#-          %79.2 = Identical                %79.1, function(object, value) <(rir::DispatchTable*)|...
  void                    Branch                   %79.2 -> BB81 (if true) | BB82 (if false)
BB80   <- [18]
  void                    Nop                !     
  val             %80.1 = %18.0
  dr              %80.2 = Typecheck@0x55bbe26003b0[Type#84]
  goto BB15
BB52   <- [21]
  val?^ | miss    %52.0 = LdVar              eR    nargs, e61.0
  val?            %52.1 = Force!             !v    %52.0, e61.0   <val?_>
  lgl$#-          %52.2 = IsType                   %52.1 isA val?+
  void                    Branch                   %52.2 -> BB83 (if true) | BB84 (if false)
BB22   <- [21]
  prom-           %22.0 = MkArg                    unboundValue, .matchSigLength[0x55bbe6bf6d10]_p6, e61.0
  prom-           %22.1 = %22.0
  goto BB23
BB81   <- [79]
  val?^ | miss    %81.0 = LdVar              eR    sig, e61.0
  val?            %81.1 = Force!<wrapped>    !v    %81.0, e61.0   <str+>
  ct              %81.2 = PushContext        lCL   %81.1, %79.0, packageSlot<-(sig, value=pkgs), function(object, value) <(rir::DispatchTable*)|..., e61.0
  env             e81.3 = MkEnv              l     object=%81.1, value=%79.0, parent=<env 0x55bbe2427378>, context 1
  (cls|spec|blt)  %81.4 = LdFun              !v    attr<-, <0x55bbe1e23e08>, <env 0x55bbe2427378>
  val?            %81.5 = NamedCall          !v    %81.4(%81.1, "package", value=%79.0) e81.3   <str+>
  void                    StVar              lW    object, %81.5, e81.3
  val             %81.7 = ChkMissing         e     %81.5
  val?            %81.8 = PopContext         C     %81.5, %81.2   <str+>
  void                    StVar              lW    sig, %81.8, e61.0
  val             %81.10 = ChkMissing         e     %81.8
  void                    Visible            v     
  void                    Return             l     %81.8
BB82   <- [79]
  void                    Nop                !     
  val?^ | miss    %82.1 = %79.1
  dr              %82.2 = CallTarget@0x55bbe26003b0[Call#17]
  goto BB15
BB83   <- [52]
  val?+           %83.0 = CastType           d     dn %52.1   <val?_>
  (real|complex)+ %83.1 = Add                wed   %83.0, 1, elided   <val?_>
  val?^ | miss    %83.2 = LdVar              eR    n, e61.0
  val?            %83.3 = Force!             !v    %83.2, e61.0   <val?_>
  lgl$#-          %83.4 = IsType                   %83.3 isA val?+
  void                    Branch                   %83.4 -> BB85 (if true) | BB86 (if false)
BB84   <- [52]
  fs              %84.0 = FrameState         R     0x55bbe51c7e50+406: [<blt all>, %21.1, %52.1], env=e61.0
  void                    Deopt              !v    %84.0, Typecheck@0x55bbe26003b0[Type#30], %52.1   !
BB23   <- [22, 85]
  (int|real|complex|prom)+ %23.0 = Phi                      %85.2:BB85, %22.1:BB22
  (int|real|complex|prom)+ %23.1 = %23.0
  lgl$#-          %23.2 = IsType                   %21.1 isA val?+
  void                    Branch                   %23.2 -> BB87 (if true) | BB88 (if false)
BB85   <- [83]
  val?+           %85.0 = CastType           d     dn %83.3   <val?_>
  (int|real|complex)+ %85.1 = Colon              wed   %83.1, %85.0, elided   <val?_>
  (int|real|complex)+ %85.2 = %85.1
  goto BB23
BB86   <- [83]
  fs              %86.0 = FrameState         R     0x55bbe51c7e50+433: [<blt all>, %21.1, %83.1, %83.3], env=e61.0
  void                    Deopt              !v    %86.0, Typecheck@0x55bbe26003b0[Type#32], %83.3   !
BB87   <- [23]
  val?+           %87.0 = CastType           d     dn %21.1   <val?_>
  val?            %87.1 = Extract1_1D        wed   %87.0, %23.1, elided   <val?_>
  lgl$#-          %87.2 = IsType                   %87.1 isA val?+
  void                    Branch                   %87.2 -> BB89 (if true) | BB90 (if false)
BB88   <- [23]
  fs              %88.0 = FrameState         R     0x55bbe51c7e50+444: [<blt all>, %21.1, %23.1], env=e61.0
  void                    Deopt              !v    %88.0, Typecheck@0x55bbe26003b0[Type#25], %21.1   !
BB89   <- [87]
  val?+           %89.0 = CastType           d     dn %87.1   <val?_>
  lgl             %89.1 = Eq                 wed   %89.0, "ANY", elided   <val?_>
  val?            %89.2 = CallBuiltin        !v    all(%89.1) e61.0   <val?_>
  lgl$#-          %89.3 = CheckTrueFalse     we    %89.2
  void                    Branch                   %89.3 -> BB51 (if true) | BB28 (if false)
BB90   <- [87]
  fs              %90.0 = FrameState         R     0x55bbe51c7e50+445: [<blt all>, %87.1], env=e61.0
  void                    Deopt              !v    %90.0, Typecheck@0x55bbe26003b0[Type#34], %87.1   !
BB51   <- [89]
  val?^ | miss    %51.0 = LdVar              eR    nargs, e61.0
  val?            %51.1 = Force!             !v    %51.0, e61.0   <val?_>
  (cls|spec|blt)  %51.2 = LdFun              !v    length<-, e61.0
  fs              %51.3 = FrameState         R     0x55bbe51c7e50+1021: [%51.1, %51.2], env=e61.0
  void                    Deopt              !v    %51.3, DeadCall@0x55bbe26003b0[Call#7], %51.2   !
BB28   <- [89]
  val?^ | miss    %28.0 = LdVar              eR    sig, e61.0
  val?            %28.1 = Force!             !v    %28.0, e61.0   <val?_>
  lgl$#-          %28.2 = IsType                   %28.1 isA val+   <@?>
  void                    Branch                   %28.2 -> BB50 (if true) | BB29 (if false)
BB50   <- [28]
  val?^ | miss    %50.0 = LdVar              eR    n, e61.0
  val?            %50.1 = Force!             !v    %50.0, e61.0   <val?_>
  val?            %50.2 = %50.1
  goto BB30
BB29   <- [28]
  prom-           %29.0 = MkArg                    unboundValue, .matchSigLength[0x55bbe6bf6d10]_p5, e61.0
  prom-           %29.1 = %29.0
  goto BB30
BB30   <- [29, 50]
  val?            %30.0 = Phi                      %50.2:BB50, %29.1:BB29
  val?            %30.1 = %30.0
  val?            %30.2 = Extract2_1D        !v    %28.1, %30.1, e61.0   <val?_>
  lgl$#-          %30.3 = IsType                   %30.2 isA val?+
  void                    Branch                   %30.3 -> BB91 (if true) | BB92 (if false)
BB91   <- [30]
  val?+           %91.0 = CastType           d     dn %30.2   <val?_>
  lgl             %91.1 = Eq                 wed   %91.0, "ANY", elided   <val?_>
  lgl$#-          %91.2 = CheckTrueFalse     we    %91.1   <@?>
  void                    Branch                   %91.2 -> BB37 (if true) | BB33 (if false)
BB92   <- [30]
  fs              %92.0 = FrameState         R     0x55bbe51c7e50+551: [%30.2], env=e61.0
  void                    Deopt              !v    %92.0, Typecheck@0x55bbe26003b0[Type#40], %30.2   !
BB37   <- [91]
  val?^ | miss    %37.0 = LdVar              eR    n, e61.0
  val?            %37.1 = Force!             !v    %37.0, e61.0   <val?_>
  lgl$#-          %37.2 = IsType                   %37.1 isA val?+
  void                    Branch                   %37.2 -> BB93 (if true) | BB94 (if false)
BB33   <- [91]
  void                    Nop                !     
  goto BB34
BB93   <- [37]
  val?+           %93.0 = CastType           d     dn %37.1   <val?_>
  (real|complex)+ %93.1 = Sub                wed   %93.0, 1, elided   <val?_>
  void                    StVar              lW    n, %93.1, e61.0
  goto BB40
BB94   <- [37]
  fs              %94.0 = FrameState         R     0x55bbe51c7e50+589: [%37.1], env=e61.0
  void                    Deopt              !v    %94.0, Typecheck@0x55bbe26003b0[Type#42], %37.1   !
BB34   <- [45, 33]
  val?^ | miss    %34.0 = LdVar              eR    reset, e61.0
  val?            %34.1 = Force!             !v    %34.0, e61.0   <val?_>
  lgl$#-          %34.2 = CheckTrueFalse     we    %34.1
  void                    Branch                   %34.2 -> BB36 (if true) | BB35 (if false)
BB40   <- [93, 97]
  val?^ | miss    %40.0 = LdVar              eR    sig, e61.0
  val?            %40.1 = Force!             !v    %40.0, e61.0   <val?_>
  lgl$#-          %40.2 = IsType                   %40.1 isA val+   <@?>
  void                    Branch                   %40.2 -> BB49 (if true) | BB41 (if false)
BB36   <- [34]
  (cls|spec|blt)  %36.0 = LdFun              !v    .resetSigLength, e61.0
  fs              %36.1 = FrameState         R     0x55bbe51c7e50+769: [%36.0], env=e61.0
  void                    Deopt              !v    %36.1, DeadCall@0x55bbe26003b0[Call#4], %36.0   !
BB35   <- [34]
  val?^ | miss    %35.0 = LdVar              eR    n, e61.0
  val?            %35.1 = Force!             !v    %35.0, e61.0   <val?_>
  (cls|spec|blt)  %35.2 = LdFun              !v    length<-, e61.0
  fs              %35.3 = FrameState         R     0x55bbe51c7e50+821: [%35.1, %35.2], env=e61.0
  void                    Deopt              !v    %35.3, DeadCall@0x55bbe26003b0[Call#5], %35.2   !
BB49   <- [40]
  val?^ | miss    %49.0 = LdVar              eR    n, e61.0
  val?            %49.1 = Force!             !v    %49.0, e61.0   <val?_>
  val?            %49.2 = %49.1
  goto BB42
BB41   <- [40]
  prom-           %41.0 = MkArg                    unboundValue, .matchSigLength[0x55bbe6bf6d10]_p4, e61.0
  prom-           %41.1 = %41.0
  goto BB42
BB42   <- [41, 49]
  val?            %42.0 = Phi                      %49.2:BB49, %41.1:BB41
  val?            %42.1 = %42.0
  val?            %42.2 = Extract2_1D        !v    %40.1, %42.1, e61.0   <val?_>
  lgl$#-          %42.3 = IsType                   %42.2 isA val?+
  void                    Branch                   %42.3 -> BB95 (if true) | BB96 (if false)
BB95   <- [42]
  val?+           %95.0 = CastType           d     dn %42.2   <val?_>
  lgl             %95.1 = Eq                 wed   %95.0, "ANY", elided   <val?_>
  lgl$#-          %95.2 = CheckTrueFalse     we    %95.1
  void                    Branch                   %95.2 -> BB46 (if true) | BB45 (if false)
BB96   <- [42]
  fs              %96.0 = FrameState         R     0x55bbe51c7e50+675: [%42.2], env=e61.0
  void                    Deopt              !v    %96.0, Typecheck@0x55bbe26003b0[Type#47], %42.2   !
BB46   <- [95]
  val?^ | miss    %46.0 = LdVar              eR    n, e61.0
  val?            %46.1 = Force!             !v    %46.0, e61.0   <val?_>
  lgl$#-          %46.2 = IsType                   %46.1 isA val?+
  void                    Branch                   %46.2 -> BB97 (if true) | BB98 (if false)
BB45   <- [95]
  void                    Nop                !     
  goto BB34
BB97   <- [46]
  val?+           %97.0 = CastType           d     dn %46.1   <val?_>
  (real|complex)+ %97.1 = Sub                wed   %97.0, 1, elided   <val?_>
  void                    StVar              lW    n, %97.1, e61.0
  goto BB40
BB98   <- [46]
  fs              %98.0 = FrameState         R     0x55bbe51c7e50+708: [%46.1], env=e61.0
  void                    Deopt              !v    %98.0, Typecheck@0x55bbe26003b0[Type#49], %46.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sig, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nargs, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Add                !v    %0.2, 1, e0.0   <val?_>
  val?^ | miss    %0.4  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.6  = Force              !     %0.4, e0.0   <val?_>
  val?            %0.7  = Colon              !     %0.3, %0.6, e0.0   <val?_>
  void                    Return             l     %0.7

│ .matchSigLength[0x55bbe6bf6d10]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
