
┌──────────────────────────────────────────────────────────────────────────────┐
│ cacheGenericsMetaData[0x55bbe51f31e0]                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl5,!Obj0,!Obj2,!Obj3,!Obj5│
│ Properties:                                                                  │
├────── Final PIR Version
cacheGenericsMetaData[0x55bbe51f31e0]
BB0
  val?^           %0.0  = LdArg                    5
  val?^           %0.1  = LdArg                    4
  val?^           %0.2  = LdArg                    3
  val?^           %0.3  = LdArg                    2
  val?^           %0.4  = LdArg                    1
  val?^           %0.5  = LdArg                    0
  val?^ | miss    %0.6  = LdVar              eR    is, <env 0x55bbe2427378>
  lgl$#-          %0.7  = Identical                %0.6, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %0.7 -> BB51 (if true) | BB52 (if false)
BB51   <- [0]
  env             e51.0 = MkEnv              l     f=%0.5, fdef=%0.4, attach=%0.3, where=%0.2, package=%0.1, methods=%0.0, parent=<env 0x55bbe2427378>, context 1
  prom-           %51.1 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p0 (!refl), e51.0
  val?            %51.2 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.1, "genericFunction") e51.0   <lgl$->
  lgl$#-          %51.3 = IsType                   %51.2 isA lgl$-
  void                    Branch                   %51.3 -> BB53 (if true) | BB54 (if false)
BB52   <- [0]
  env             e52.0 = (MkEnv)            l     f=%0.5, fdef=%0.4, attach=%0.3, where=%0.2, package=%0.1, methods=%0.0, parent=<env 0x55bbe2427378>, context 1
  fs              %52.1 = FrameState         R     0x55bbe44279f0+0: [], env=e52.0
  void                    Deopt              !v    %52.1, CallTarget@0x55bbe6d26a80[Call#2], %0.6
BB53   <- [51]
  lgl$-           %53.0 = CastType           d     dn %51.2
  lgl$-           %53.1 = Not                d     %53.0, elided
  lgl$#-          %53.2 = CheckTrueFalse     e     %53.1
  void                    Branch                   %53.2 -> BB49 (if true) | BB5 (if false)
BB54   <- [51]
  void                    Nop                !     
  val?            %54.1 = %51.2
  dr              %54.2 = Typecheck@0x55bbe6d26a80[Type#3]
  goto BB3
BB49   <- [53]
  (cls|spec|blt)  %49.0 = LdFun              !v    warning, e51.0
  fs              %49.1 = FrameState         R     0x55bbe44279f0+59: [%49.0], env=e51.0
  void                    Deopt              !v    %49.1, DeadCall@0x55bbe6d26a80[Call#3], %49.0   !
BB5   <- [53]
  lgl$-           %5.0  = Missing            eR    package, e51.0
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB48 (if true) | BB6 (if false)
BB3   <- [54, 56]
  val?^ | miss    %3.0  = Phi                      %54.1:BB54, %56.1:BB56
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %54.2:BB54, %56.2:BB56
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbe44279f0+37: [%51.2], env=e51.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB48   <- [5]
  (cls|spec|blt)  %48.0 = LdFun              !v    @, e51.0
  fs              %48.1 = FrameState         R     0x55bbe44279f0+129: [%48.0], env=e51.0
  void                    Deopt              !v    %48.1, DeadCall@0x55bbe6d26a80[Call#6], %48.0   !
BB6   <- [5]
  val?^ | miss    %6.0  = LdVar              eR    finalDefaultMethod, e51.0
  lgl$#-          %6.1  = Identical                %6.0, function(method) <(rir::DispatchTable*)0x55bbe|...
  void                    Branch                   %6.1 -> BB55 (if true) | BB56 (if false)
BB55   <- [6]
  prom-           %55.0 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p1, e51.0
  ct              %55.1 = PushContext        lCL   %55.0, finalDefaultMethod(@(fdef, default)), function(method) <(rir::DispatchTable*)0x55bbe|..., e51.0
  val?^           %55.2 = CastType                 up %55.0
  val?^ | miss    %55.3 = LdVar              eR    is.function, <env 0x55bbe2427378>
  lgl$#-          %55.4 = Identical                <blt is.function>, %55.3   <true>
  void                    Branch                   %55.4 -> BB57 (if true) | BB58 (if false)
BB56   <- [6]
  void                    Nop                !     
  val?^ | miss    %56.1 = %6.0
  dr              %56.2 = CallTarget@0x55bbe6d26a80[Call#7]
  goto BB3
BB57   <- [55]
  env             e57.0 = MkEnv              l     method=%55.2, parent=<env 0x55bbe2427378>, context 1
  val?            %57.1 = Force!<lazy>       !vL   %55.2, e57.0   <val?>
  val?            %57.2 = CallBuiltin        !v    is.function(%57.1) e57.0   <lgl$->
  lgl$#-          %57.3 = IsType                   %57.2 isA lgl$-
  void                    Branch                   %57.3 -> BB59 (if true) | BB60 (if false)
BB58   <- [55]
  fs              %58.0 = FrameState         R     0x55bbe44279f0+207: [], env=e51.0
  env             e58.1 = MkEnv              l     method=%55.2, parent=<env 0x55bbe2427378>, context 1
  fs              %58.2 = FrameState         R     0x55bbe5135080+17: [<blt is.function>, %55.4], env=e58.1, next=%58.0
  void                    Deopt              !v    %58.2, DeadBranchReached@0x55bbe56c90c8[Test#0], %55.4   !
BB59   <- [57]
  lgl$-           %59.0 = CastType           d     dn %57.2
  lgl$-           %59.1 = AsLogical                %59.0
  lgl$#-          %59.2 = Identical                %59.1, true
  void                    Branch                   %59.2 -> BB47 (if true) | BB11 (if false)
BB60   <- [57]
  fs              %60.0 = FrameState         R     0x55bbe44279f0+207: [], env=e51.0
  fs              %60.1 = FrameState         R     0x55bbe5135080+91: [%57.2], env=e57.0, next=%60.0
  void                    Deopt              !v    %60.1, Typecheck@0x55bbe56c90c8[Type#2], %57.2   !
BB47   <- [59]
  void                    Nop                !     
  lgl$-           %47.1 = %59.1
  goto BB12
BB11   <- [59]
  val?^ | miss    %11.0 = LdVar              eR    method, e57.0
  val?            %11.1 = Force!<wrapped>    !v    %11.0, e57.0   <nil->
  lgl$-           %11.2 = Is                       %11.1, NULL
  lgl$-           %11.3 = AsLogical                %11.2
  lgl$-           %11.4 = LOr                      %59.1, %11.3
  lgl$-           %11.5 = %11.4
  goto BB12
BB12   <- [47, 11]
  lgl$-           %12.0 = Phi                      %11.5:BB11, %47.1:BB47
  lgl$-           %12.1 = %12.0
  lgl$#-          %12.2 = CheckTrueFalse     e     %12.1
  void                    Branch                   %12.2 -> BB14 (if true) | BB13 (if false)
BB14   <- [12]
  val?^ | miss    %14.0 = LdVar              eR    method, e57.0
  val?            %14.1 = Force!<wrapped>    !v    %14.0, e57.0   <val?>
  val?            %14.2 = PopContext         C     %14.1, %55.1
  void                    StVar              lW    deflt, %14.2, e51.0
  val?^ | miss    %14.4 = LdVar              eR    dispatchIsInternal, e51.0
  lgl$#-          %14.5 = Identical                %14.4, function(fdef) <(rir::DispatchTable*)0x55bbe44|...
  void                    Branch                   %14.5 -> BB61 (if true) | BB62 (if false)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x55bbe44279f0+207: [], env=e51.0
  (cls|spec|blt)  %13.1 = LdFun              !v    is, e57.0
  fs              %13.2 = FrameState         R     0x55bbe5135080+150: [%13.1], env=e57.0, next=%13.0
  void                    Deopt              !v    %13.2, DeadCall@0x55bbe56c90c8[Call#1], %13.1   !
BB61   <- [14]
  prom-           %61.0 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p4, e51.0
  ct              %61.1 = PushContext        lCL   %61.0, dispatchIsInternal(fdef), function(fdef) <(rir::DispatchTable*)0x55bbe44|..., e51.0
  val?^           %61.2 = CastType                 up %61.0
  val?^ | miss    %61.3 = LdVar              eR    is.primitive, <env 0x55bbe2427378>
  lgl$#-          %61.4 = Identical                %61.3, function(x) <(rir::DispatchTable*)0x55bbe632e4|...
  void                    Branch                   %61.4 -> BB63 (if true) | BB64 (if false)
BB62   <- [14]
  fs              %62.0 = FrameState         R     0x55bbe44279f0+221: [], env=e51.0
  void                    Deopt              !v    %62.0, CallTarget@0x55bbe6d26a80[Call#9], %14.4   !
BB63   <- [61]
  env             e63.0 = MkEnv              l     fdef=%61.2, parent=<env 0x55bbe2427378>, context 1
  (cls|spec|blt)  %63.1 = LdFun              !v    @, <0x55bbe1e1fbd8>, <env 0x55bbe2427378>
  prom-           %63.2 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p12, e63.0
  prom-           %63.3 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p13, e63.0
  val?            %63.4 = Call               !v    %63.1(%63.2, %63.3) e63.0   <val?->
  str$-           %63.5 = CallSafeBuiltin    wed   typeof(%63.4)    <str$->
  int$-           %63.6 = Length                   %63.5
  lgl$-           %63.7 = Eq                 d     %63.6, 1L, elided   <true>
  lgl$#-          %63.8 = Identical                %63.7, true
  void                    Branch                   %63.8 -> BB65 (if true) | BB66 (if false)
BB64   <- [61]
  fs              %64.0 = FrameState         R     0x55bbe44279f0+253: [], env=e51.0
  env             e64.1 = (MkEnv)            l     fdef=%61.2, parent=<env 0x55bbe2427378>, context 1
  fs              %64.2 = FrameState         R     0x55bbe46b8e20+0: [], env=e64.1, next=%64.0
  void                    Deopt              !v    %64.2, CallTarget@0x55bbe5fe02e8[Call#0], %61.3   !
BB65   <- [63]
  lgl$-           %65.0 = CallSafeBuiltin    wed   is.na(%63.5) 
  lgl$#-          %65.1 = CheckTrueFalse     e     %65.0   <false>
  void                    Branch                   %65.1 -> BB68 (if true) | BB67 (if false)
BB66   <- [63]
  prom-           %66.0 = MkArg                    %63.4, cacheGenericsMetaData[0x55bbe51f31e0]_p11 (!refl), e63.0
  val?~           %66.1 = CastType                 up %66.0
  env             e66.2 = (MkEnv)            l     x=%66.1, parent=R_BaseNamespace, context 0
  env             e66.3 = MaterializeEnv           , e66.2   <@?>
  fs              %66.4 = FrameState         R     0x55bbe44279f0+253: [], env=e51.0
  fs              %66.5 = FrameState         R     0x55bbe46b8e20+32: [], env=e63.0, next=%66.4
  fs              %66.6 = FrameState         R     0x55bbe3fa9250+32: [], env=e66.3, next=%66.5
  prom-           %66.7 = MkArg                    %63.4, cacheGenericsMetaData[0x55bbe51f31e0]_p14 (!refl), e66.3
  val?~           %66.8 = CastType                 up %66.7
  env             e66.9 = (MkEnv)            l     x=%66.8, parent=R_BaseNamespace, context -1
  fs              %66.10 = FrameState         R     0x55bbe3eeb800+27: [%63.5], env=e66.9, next=%66.6
  void                    Deopt              !v    %66.10, DeadBranchReached@0x55bbe65e81a8[Test#1], %63.8   !
BB68   <- [65]
  void                    Nop                !     
  lgl$#-          %68.1 = %65.1
  dr              %68.2 = DeadBranchReached@0x55bbe65e81a8[Test#7]
  goto BB21
BB67   <- [65]
  lgl$-           %67.0 = Eq                 d     %63.5, special, elided
  lgl$#-          %67.1 = CheckTrueFalse     e     %67.0
  void                    Branch                   %67.1 -> BB46 (if true) | BB23 (if false)
BB21   <- [68, 76]
  val?^ | miss    %21.0 = Phi                      %68.1:BB68, %76.1:BB76
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %68.2:BB68, %76.2:BB76
  dr              %21.3 = %21.2
  prom-           %21.4 = MkArg                    %63.4, cacheGenericsMetaData[0x55bbe51f31e0]_p11 (!refl), e63.0
  val?~           %21.5 = CastType                 up %21.4
  fs              %21.6 = FrameState         R     0x55bbe44279f0+253: [], env=e51.0
  fs              %21.7 = FrameState         R     0x55bbe46b8e20+32: [], env=e63.0, next=%21.6
  env             e21.8 = (MkEnv)            l     x=%21.5, parent=R_BaseNamespace, context 0
  fs              %21.9 = FrameState         R     0x55bbe3fa9250+240: [%63.5, %65.0], env=e21.8, next=%21.7
  void                    Deopt              !v    %21.9, %21.3, %21.1   !
BB46   <- [67]
  void                    Nop                !     
  goto BB45
BB23   <- [67]
  lgl$-           %23.0 = Eq                 d     %63.5, builtin, elided
  lgl$#-          %23.1 = CheckTrueFalse     e     %23.0
  void                    Branch                   %23.1 -> BB44 (if true) | BB24 (if false)
BB45   <- [46, 44]
  void                    Nop                !     
  lgl$#-          %45.1 = true
  goto BB25
BB44   <- [23]
  void                    Nop                !     
  goto BB45
BB24   <- [23]
  void                    Nop                !     
  lgl$#-          %24.1 = false
  goto BB25
BB25   <- [24, 45]
  lgl$#-          %25.0 = Phi                      %24.1:BB24, %45.1:BB45
  lgl$#-          %25.1 = %25.0
  void                    Branch                   %25.1 -> BB43 (if true) | BB26 (if false)
BB43   <- [25]
  void                    Nop                !     
  lgl$#-          %43.1 = %25.1
  goto BB29
BB26   <- [25]
  val?^ | miss    %26.0 = LdVar              eR    is, e63.0
  lgl$#-          %26.1 = Identical                %26.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %26.1 -> BB75 (if true) | BB76 (if false)
BB29   <- [43, 81]
  lgl$-           %29.0 = Phi                      %81.3:BB81, %43.1:BB43
  lgl$-           %29.1 = %29.0
  val?            %29.2 = PopContext         C     %29.1, %61.1   <lgl$->
  lgl$#-          %29.3 = IsType                   %29.2 isA lgl$-
  void                    Branch                   %29.3 -> BB69 (if true) | BB70 (if false)
BB75   <- [26]
  prom-           %75.0 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p15, e63.0
  val?            %75.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%75.0, "internalDispatchMethod") e63.0   <lgl$->
  lgl$#-          %75.2 = IsType                   %75.1 isA lgl$-
  void                    Branch                   %75.2 -> BB81 (if true) | BB82 (if false)
BB76   <- [26]
  void                    Nop                !     
  val?^ | miss    %76.1 = %26.0
  dr              %76.2 = CallTarget@0x55bbe5fe02e8[Call#2]
  goto BB21
BB69   <- [29]
  lgl$-           %69.0 = CastType           d     dn %29.2
  lgl$#-          %69.1 = CheckTrueFalse     e     %69.0
  void                    Branch                   %69.1 -> BB38 (if true) | BB32 (if false)
BB70   <- [29]
  void                    Nop                !     
  val?            %70.1 = %29.2
  dr              %70.2 = Typecheck@0x55bbe6d26a80[Type#15]
  goto BB30
BB81   <- [75]
  lgl$-           %81.0 = CastType           d     dn %75.1
  lgl$-           %81.1 = AsLogical                %81.0
  lgl$-           %81.2 = LOr                      %25.1, %81.1
  lgl$-           %81.3 = %81.2
  goto BB29
BB82   <- [75]
  fs              %82.0 = FrameState         R     0x55bbe44279f0+253: [], env=e51.0
  fs              %82.1 = FrameState         R     0x55bbe46b8e20+81: [%25.1, %75.1], env=e63.0, next=%82.0
  void                    Deopt              !v    %82.1, Typecheck@0x55bbe5fe02e8[Type#7], %75.1   !
BB38   <- [69]
  lgl$-           %38.0 = Missing            eR    methods, e51.0
  lgl$#-          %38.1 = CheckTrueFalse     e     %38.0
  void                    Branch                   %38.1 -> BB42 (if true) | BB39 (if false)
BB32   <- [69]
  val?^ | miss    %32.0 = LdVar              eR    isGroup, e51.0
  lgl$#-          %32.1 = Identical                %32.0, function(f, where=topenv(parent.frame()), fdef|...
  void                    Branch                   %32.1 -> BB71 (if true) | BB72 (if false)
BB30   <- [70, 72, 78]
  val?^ | miss    %30.0 = Phi                      %70.1:BB70, %72.1:BB72, %78.1:BB78
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %70.2:BB70, %72.2:BB72, %78.2:BB78
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55bbe44279f0+253: [%29.2], env=e51.0
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB42   <- [38]
  (cls|spec|blt)  %42.0 = LdFun              !v    setPrimitiveMethods, e51.0
  fs              %42.1 = FrameState         R     0x55bbe44279f0+919: [%42.0], env=e51.0
  void                    Deopt              !v    %42.1, DeadCall@0x55bbe6d26a80[Call#21], %42.0   !
BB39   <- [38]
  val?^ | miss    %39.0 = LdVar              eR    setPrimitiveMethods, e51.0
  lgl$#-          %39.1 = Identical                %39.0, function(f, fdef, code, generic, mlist=get(".M|...
  void                    Branch                   %39.1 -> BB77 (if true) | BB78 (if false)
BB71   <- [32]
  prom-           %71.0 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p5, e51.0
  prom-           %71.1 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p6, e51.0
  val?            %71.2 = StaticCall         !v    isGroup[0x55bbe50a9230](%71.0, missingArg, %71.1) { 0 2n } e51.0   <lgl$->
  lgl$#-          %71.3 = IsType                   %71.2 isA lgl$-
  void                    Branch                   %71.3 -> BB73 (if true) | BB74 (if false)
BB72   <- [32]
  void                    Nop                !     
  val?^ | miss    %72.1 = %32.0
  dr              %72.2 = CallTarget@0x55bbe6d26a80[Call#10]
  goto BB30
BB77   <- [39]
  prom-           %77.0 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p7, e51.0
  prom-           %77.1 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p8, e51.0
  prom-           %77.2 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p9, e51.0
  prom-           %77.3 = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p10, e51.0
  ct              %77.4 = PushContext        lCL   %77.0, %77.1, "set", %77.2, %77.3, setPrimitiveMethods(f, deflt, "set", fdef, met|..., function(f, fdef, code, generic, mlist=get(".M|..., e51.0
  val?^           %77.5 = CastType                 up %77.3
  val?^           %77.6 = CastType                 up %77.2
  val?^           %77.7 = CastType                 up %77.1
  val?^           %77.8 = CastType                 up %77.0
  val?^ | miss    %77.9 = LdVar              eR    .Call, <env 0x55bbe2427378>
  lgl$#-          %77.10 = Identical                <blt .Call>, %77.9   <true>
  void                    Branch                   %77.10 -> BB79 (if true) | BB80 (if false)
BB78   <- [39]
  void                    Nop                !     
  val?^ | miss    %78.1 = %39.0
  dr              %78.2 = CallTarget@0x55bbe6d26a80[Call#20]
  goto BB30
BB73   <- [71]
  lgl$-           %73.0 = CastType           d     dn %71.2
  lgl$#-          %73.1 = CheckTrueFalse     e     %73.0
  void                    Branch                   %73.1 -> BB37 (if true) | BB35 (if false)
BB74   <- [71]
  fs              %74.0 = FrameState         R     0x55bbe44279f0+309: [%71.2], env=e51.0
  void                    Deopt              !v    %74.0, Typecheck@0x55bbe6d26a80[Type#18], %71.2   !
BB79   <- [77]
  val?^ | miss    %79.0 = LdVar              eR    C_R_M_setPrimitiveMethods, <env 0x55bbe2427378>
  env             e79.1 = MkEnv              l     f=%77.8, fdef=%77.7, code="set", generic=%77.6, mlist=%77.5, parent=<env 0x55bbe2427378>, context 1
  val?            %79.2 = Force!<value>      !v    %79.0, e79.1   <vec>
  val?^ | miss    %79.3 = LdVar              eR    f, e79.1
  val?            %79.4 = Force!<lazy>       !v    %79.3, e79.1   <str$->
  val?^ | miss    %79.5 = LdVar              eR    fdef, e79.1
  val?            %79.6 = Force!<lazy>       !v    %79.5, e79.1   <(spec|blt)->
  val?^ | miss    %79.7 = LdVar              eR    code, e79.1
  val?            %79.8 = Force!<value>      !v    %79.7, e79.1   <str$->
  val?^ | miss    %79.9 = LdVar              eR    generic, e79.1
  val?            %79.10 = Force!<lazy>       !v    %79.9, e79.1   <cls>
  val?^ | miss    %79.11 = LdVar              eR    mlist, e79.1
  val?            %79.12 = Force!<lazy>       !v    %79.11, e79.1   <env->
  val?            %79.13 = CallBuiltin        !v    .Call(%79.2, %79.4, %79.6, %79.8, %79.10, %79.12) e79.1   <str$->
  val?            %79.14 = PopContext         C     %79.13, %77.4
  goto BB36
BB80   <- [77]
  fs              %80.0 = FrameState         R     0x55bbe44279f0+908: [], env=e51.0
  env             e80.1 = (MkEnv)            l     f=%77.8, fdef=%77.7, code="set", generic=%77.6, mlist=%77.5, parent=<env 0x55bbe2427378>, context 1
  fs              %80.2 = FrameState         R     0x55bbe4776370+17: [<blt .Call>, %77.10], env=e80.1, next=%80.0
  void                    Deopt              !v    %80.2, DeadBranchReached@0x55bbe4b27940[Test#0], %77.10   !
BB37   <- [73]
  (cls|spec|blt)  %37.0 = LdFun              !v    @, e51.0
  fs              %37.1 = FrameState         R     0x55bbe44279f0+330: [%37.0], env=e51.0
  void                    Deopt              !v    %37.1, DeadCall@0x55bbe6d26a80[Call#11], %37.0   !
BB35   <- [73]
  void                    Nop                !     
  goto BB36
BB36   <- [35, 79]
  void                    Visible            v     
  void                    Return             l     true
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x55bbe1e1fbd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p3, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?->
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    deflt, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(spec|blt)->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    methods, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x55bbe1e1fbd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p12, e0.0
  prom-           %0.3  = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p13, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?->
  void                    Return             l     %0.4
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x55bbe1e1fbd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p16, e0.0
  prom-           %0.3  = MkArg                    unboundValue, cacheGenericsMetaData[0x55bbe51f31e0]_p17, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <nil->
  void                    Return             l     %0.4
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fdef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    default, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ cacheGenericsMetaData[0x55bbe51f31e0]                                        │
└──────────────────────────────────────────────────────────────────────────────┘
