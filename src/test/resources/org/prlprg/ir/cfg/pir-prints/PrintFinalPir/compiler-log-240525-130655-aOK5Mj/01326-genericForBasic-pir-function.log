
┌──────────────────────────────────────────────────────────────────────────────┐
│ genericForBasic[0x55bbe41834b0]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
genericForBasic[0x55bbe41834b0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     f=%0.0, where(miss)=missingArg, mustFind(miss)=missingArg, parent=<env 0x55bbe2427378>, context 1
  prom-           %0.2  = MkArg                    unboundValue, genericForBasic[0x55bbe41834b0]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    where, %0.3, e0.1
  void                    StArg              lW    mustFind, true, e0.1
  val?^ | miss    %0.6  = LdVar              eR    .BasicFunsList, <env 0x55bbe2427378>
  val?            %0.7  = Force!<wrapped>    !v    %0.6, e0.1   <vec+>
  lgl$#-          %0.8  = IsType                   %0.7 isA val+   <true>
  void                    Branch                   %0.8 -> BB27 (if true) | BB28 (if false)
BB27   <- [0]
  val?^ | miss    %27.0 = LdVar              eR    f, e0.1
  val?            %27.1 = Force!<lazy>       !v    %27.0, e0.1   <str$->
  lgl$#-          %27.2 = IsType                   %27.1 isA val?-
  lgl$#-          %27.3 = IsType                   %0.7 isA val?+
  void                    Branch                   %27.3 -> BB29 (if true) | BB30 (if false)
BB28   <- [0]
  fs              %28.0 = FrameState         R     0x55bbe44deca0+9: [%0.7], env=e0.1
  void                    Deopt              !v    %28.0, DeadBranchReached@0x55bbe620a270[Test#0], %0.8   !
BB29   <- [27]
  val?+           %29.0 = CastType           d     dn %0.7   <vec+>
  void                    Branch                   %27.2 -> BB31 (if true) | BB32 (if false)
BB30   <- [27]
  void                    Nop                !     
  val?            %30.1 = %0.7
  dr              %30.2 = Typecheck@0x55bbe620a270[Type#2]
  goto BB3
BB31   <- [29]
  val?-           %31.0 = CastType           d     dn %27.1   <str$->
  val?            %31.1 = Extract2_1D        wed   %29.0, %31.0, elided   <(nil|cls)>
  void                    StVar              lW    ans, %31.1, e0.1
  val?^ | miss    %31.3 = LdVar              eR    mustFind, e0.1
  val?            %31.4 = Force!<lazy>       !v    %31.3, e0.1   <lgl$->
  lgl$-           %31.5 = AsLogical          e     %31.4
  lgl$#-          %31.6 = Identical                %31.5, false
  void                    Branch                   %31.6 -> BB25 (if true) | BB7 (if false)
BB32   <- [29]
  void                    Nop                !     
  val?            %32.1 = %27.1
  dr              %32.2 = Typecheck@0x55bbe620a270[Type#4]
  goto BB3
BB3   <- [30, 32]
  val?^ | miss    %3.0  = Phi                      %30.1:BB30, %32.1:BB32
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %30.2:BB30, %32.2:BB32
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbe44deca0+54: [%0.7, %27.1], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB25   <- [31]
  void                    Nop                !     
  lgl$-           %25.1 = %31.5
  goto BB18
BB7   <- [31]
  val?^ | miss    %7.0  = LdVar              eR    isFALSE, e0.1
  lgl$#-          %7.1  = Identical                %7.0, function(x) <(rir::DispatchTable*)0x55bbe433cf|...
  void                    Branch                   %7.1 -> BB33 (if true) | BB34 (if false)
BB18   <- [25, 17]
  lgl$-           %18.0 = Phi                      %17.4:BB17, %25.1:BB25
  lgl$-           %18.1 = %18.0
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB21 (if true) | BB19 (if false)
BB33   <- [7]
  val?^ | miss    %33.0 = LdVar              eR    ans, e0.1
  lgl$#-          %33.1 = IsType                   %33.0 isA val?~- | miss
  void                    Branch                   %33.1 -> BB35 (if true) | BB36 (if false)
BB34   <- [7]
  void                    Nop                !     
  val?^ | miss    %34.1 = %7.0
  dr              %34.2 = CallTarget@0x55bbe620a270[Call#2]
  goto BB5
BB21   <- [18]
  (cls|spec|blt)  %21.0 = LdFun              !v    stop, e0.1
  prom-           %21.1 = MkArg                    unboundValue, genericForBasic[0x55bbe41834b0]_p4, e0.1
  val?            %21.2 = NamedCall          !v    %21.0(%21.1, domain=na-lgl) e0.1
  goto BB20
BB19   <- [18]
  void                    Nop                !     
  goto BB20
BB35   <- [33]
  val?~- | miss   %35.0 = CastType           d     dn %33.0
  val?-           %35.1 = Force!<value>            %35.0,    <nil->
  val+            %35.2 = CallSafeBuiltin    wed   is.logical(%35.1)    <lgl$->
  lgl$#-          %35.3 = IsType                   %35.2 isA lgl$-
  void                    Branch                   %35.3 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  void                    Nop                !     
  val?^ | miss    %36.1 = %33.0
  dr              %36.2 = Typecheck@0x55bbe620a270[Type#7]
  goto BB5
BB5   <- [34, 36]
  val?^ | miss    %5.0  = Phi                      %34.1:BB34, %36.1:BB36
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %34.2:BB34, %36.2:BB36
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55bbe44deca0+84: [%31.4], env=e0.1
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB20   <- [19, 21]
  val?^ | miss    %20.0 = LdVar              eR    ans, e0.1
  void                    Visible            v     
  val?            %20.2 = Force!<value>      !     %20.0, e0.1   <(nil|cls)>
  void                    Return             l     %20.2
BB37   <- [35]
  lgl$-           %37.0 = CastType           d     dn %35.2
  lgl$-           %37.1 = AsLogical                %37.0
  lgl$#-          %37.2 = Identical                %37.1, false
  void                    Branch                   %37.2 -> BB24 (if true) | BB10 (if false)
BB38   <- [35]
  void                    Nop                !     
  val+            %38.1 = %35.2
  dr              %38.2 = Typecheck@0x55bbe3659718[Type#2]
  goto BB8
BB24   <- [37]
  void                    Nop                !     
  lgl$-           %24.1 = %37.1
  goto BB11
BB10   <- [37]
  lgl$#-          %10.0 = IsType                   %35.1 isA lgl$-
  void                    Branch                   %10.0 -> BB41 (if true) | BB42 (if false)
BB8   <- [38, 40, 42]
  val?^ | miss    %8.0  = Phi                      %38.1:BB38, %40.1:BB40, %42.1:BB42
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %38.2:BB38, %40.2:BB40, %42.2:BB42
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55bbe44deca0+128: [%31.5], env=e0.1
  prom-           %8.5  = MkArg                    %35.1, genericForBasic[0x55bbe41834b0]_p3 (!refl), e0.1
  val?~           %8.6  = CastType                 up %8.5
  env             e8.7  = (MkEnv)            l     x=%8.6, parent=R_BaseNamespace, context 0
  fs              %8.8  = FrameState         R     0x55bbe2bba400+91: [%35.2], env=e8.7, next=%8.4
  void                    Deopt              !v    %8.8, %8.3, %8.1   !
BB11   <- [24, 41]
  lgl$-           %11.0 = Phi                      %41.1:BB41, %24.1:BB24
  lgl$-           %11.1 = %11.0
  lgl$-           %11.2 = AsLogical                %11.1
  lgl$#-          %11.3 = Identical                %11.2, false
  void                    Branch                   %11.3 -> BB23 (if true) | BB12 (if false)
BB41   <- [10]
  lgl$-           %41.0 = AsLogical                %37.1
  lgl$-           %41.1 = %41.0
  goto BB11
BB42   <- [10]
  void                    Nop                !     
  val?-           %42.1 = %35.1
  dr              %42.2 = Typecheck@0x55bbe3659718[Type#4]
  goto BB8
BB23   <- [11]
  void                    Nop                !     
  lgl$-           %23.1 = %11.2
  goto BB13
BB12   <- [11]
  lgl$#-          %12.0 = IsType                   %35.1 isA lgl$-
  void                    Branch                   %12.0 -> BB39 (if true) | BB40 (if false)
BB13   <- [23, 39]
  lgl$-           %13.0 = Phi                      %39.5:BB39, %23.1:BB23
  lgl$-           %13.1 = %13.0
  lgl$-           %13.2 = AsLogical                %13.1
  lgl$#-          %13.3 = Identical                %13.2, false
  void                    Branch                   %13.3 -> BB22 (if true) | BB16 (if false)
BB39   <- [12]
  lgl$-           %39.0 = CastType           d     dn %35.1   <nil->
  lgl$-           %39.1 = CallSafeBuiltin    wed   is.na(%39.0)    <lgl$->
  lgl$-           %39.2 = Not                d     %39.1, elided
  lgl$-           %39.3 = AsLogical                %39.2
  lgl$-           %39.4 = LAnd                     %11.2, %39.3
  lgl$-           %39.5 = %39.4
  goto BB13
BB40   <- [12]
  void                    Nop                !     
  val?-           %40.1 = %35.1
  dr              %40.2 = Typecheck@0x55bbe3659718[Type#8]
  goto BB8
BB22   <- [13]
  void                    Nop                !     
  lgl$-           %22.1 = %13.2
  goto BB17
BB16   <- [13]
  lgl$#-          %16.0 = IsType                   %35.1 isA lgl$-
  void                    Branch                   %16.0 -> BB43 (if true) | BB44 (if false)
BB17   <- [22, 43]
  lgl$-           %17.0 = Phi                      %43.4:BB43, %22.1:BB22
  lgl$-           %17.1 = %17.0
  lgl$-           %17.2 = AsLogical                %17.1
  lgl$-           %17.3 = LAnd                     %31.5, %17.2
  lgl$-           %17.4 = %17.3
  goto BB18
BB43   <- [16]
  lgl$-           %43.0 = CastType           d     dn %35.1   <nil->
  lgl$-           %43.1 = Not                d     %43.0, elided
  lgl$-           %43.2 = AsLogical                %43.1
  lgl$-           %43.3 = LAnd                     %13.2, %43.2
  lgl$-           %43.4 = %43.3
  goto BB17
BB44   <- [16]
  fs              %44.0 = FrameState         R     0x55bbe44deca0+128: [%31.5], env=e0.1
  prom-           %44.1 = MkArg                    %35.1, genericForBasic[0x55bbe41834b0]_p3 (!refl), e0.1
  val?~           %44.2 = CastType                 up %44.1
  env             e44.3 = (MkEnv)            l     x=%44.2, parent=R_BaseNamespace, context 0
  fs              %44.4 = FrameState         R     0x55bbe2bba400+319: [%13.1], env=e44.3, next=%44.0
  void                    Deopt              !v    %44.4, Typecheck@0x55bbe3659718[Type#10], %35.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, genericForBasic[0x55bbe41834b0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     gettextf, e0.0
  prom-           %0.2  = MkArg                    unboundValue, genericForBasic[0x55bbe41834b0]_p5, e0.0
  val?            %0.3  = Call               !     %0.1("methods may not be defined for primitive func|..., %0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sQuote, e0.0
  prom-           %0.2  = MkArg                    unboundValue, genericForBasic[0x55bbe41834b0]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ genericForBasic[0x55bbe41834b0]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
