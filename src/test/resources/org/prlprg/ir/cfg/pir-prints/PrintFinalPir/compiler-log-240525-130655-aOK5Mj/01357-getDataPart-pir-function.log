
┌──────────────────────────────────────────────────────────────────────────────┐
│ getDataPart[0x55bbe80b89b0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj1│
│ Properties:                                                                  │
├────── Final PIR Version
getDataPart[0x55bbe80b89b0]
BB0
  val?~+          %0.0  = LdArg                    1
  val?~           %0.1  = LdArg                    0
  val?            %0.2  = Force<lazy>              %0.1,    <cls>
  val?^ | miss    %0.3  = LdVar              eR    typeof, <env 0x55bbe2427378>
  lgl$#-          %0.4  = Identical                %0.3, function(x) <(rir::DispatchTable*)0x55bbe3eeba|...
  void                    Branch                   %0.4 -> BB73 (if true) | BB74 (if false)
BB73   <- [0]
  str$-           %73.0 = CallSafeBuiltin    wed   typeof(%0.2)    <str$->
  lgl$-           %73.1 = Eq                 d     %73.0, "S4", elided   <lgl$->
  lgl$#-          %73.2 = CheckTrueFalse     e     %73.1
  env             e73.3 = MkEnv              l     object=%0.1, NULL.for.none=%0.0, parent=<env 0x55bbe2427378>, context 1
  void                    Branch                   %73.2 -> BB57 (if true) | BB3 (if false)
BB74   <- [0]
  env             e74.0 = (MkEnv)            l     object=%0.1, NULL.for.none=%0.0, parent=<env 0x55bbe2427378>, context 1
  fs              %74.1 = FrameState         R     0x55bbe6ebe370+0: [], env=e74.0
  void                    Deopt              !v    %74.1, CallTarget@0x55bbe6c627a8[Call#0], %0.3
BB57   <- [73]
  val?^ | miss    %57.0 = LdVar              eR    attr, <env 0x55bbe2427378>
  lgl$#-          %57.1 = Identical                <blt attr>, %57.0   <@?>
  void                    Branch                   %57.1 -> BB59 (if true) | BB58 (if false)
BB3   <- [73]
  (cls|spec|blt)  %3.0  = LdFun              !v    @, <0x55bbe1e1fbd8>, <env 0x55bbe2427378>
  prom-           %3.1  = MkArg                    unboundValue, getDataPart[0x55bbe80b89b0]_p1, e73.3
  prom-           %3.2  = MkArg                    unboundValue, getDataPart[0x55bbe80b89b0]_p4, e73.3
  val?            %3.3  = Call               !v    %3.0(%3.1, %3.2) e73.3   <vec+>
  void                    StVar              lW    temp, %3.3, e73.3
  lgl$#-          %3.5  = IsType                   %3.3 isA val?+
  val?^ | miss    %3.6  = LdVar              eR    length, e73.3
  lgl$#-          %3.7  = Identical                <blt length>, %3.6   <true>
  void                    Branch                   %3.7 -> BB75 (if true) | BB76 (if false)
BB59   <- [57]
  val?            %59.0 = CallBuiltin        !v    attr(%0.2, ".Data") e73.3   <val?_>
  lgl$-           %59.1 = Is                       %59.0, NULL
  void                    StVar              lW    value, %59.0, e73.3
  val             %59.3 = ChkMissing         e     %59.0
  lgl$#-          %59.4 = CheckTrueFalse     e     %59.1
  void                    Branch                   %59.4 -> BB62 (if true) | BB60 (if false)
BB58   <- [57]
  (cls|spec|blt)  %58.0 = LdFun              !v    attr, <env 0x55bbe2427378>
  fs              %58.1 = FrameState         R     0x55bbe6ebe370+88: [%58.0], env=e73.3
  void                    Deopt              !v    %58.1, DeadCall@0x55bbe6c627a8[Call#1], %58.0
BB75   <- [3]
  val             %75.0 = ChkMissing         e     %3.3
  void                    Branch                   %3.5 -> BB77 (if true) | BB78 (if false)
BB76   <- [3]
  void                    Nop                !     
  lgl$#-          %76.1 = %3.7
  dr              %76.2 = DeadBranchReached@0x55bbe6c627a8[Test#2]
  goto BB4
BB62   <- [59]
  val?^ | miss    %62.0 = LdVar              eR    attr, e73.3
  lgl$#-          %62.1 = Identical                <blt attr>, %62.0   <@?>
  void                    Branch                   %62.1 -> BB64 (if true) | BB63 (if false)
BB60   <- [59]
  void                    Nop                !     
  goto BB61
BB77   <- [75]
  val?+           %77.0 = CastType           d     dn %3.3   <vec+>
  (int|real)$-    %77.1 = CallSafeBuiltin    wed   length(%77.0)    <int$->
  lgl$#-          %77.2 = IsType                   %77.1 isA int$-
  void                    Branch                   %77.2 -> BB79 (if true) | BB80 (if false)
BB78   <- [75]
  void                    Nop                !     
  val?            %78.1 = %3.3
  dr              %78.2 = Typecheck@0x55bbe6c627a8[Type#20]
  goto BB4
BB4   <- [76, 78]
  val?^ | miss    %4.0  = Phi                      %76.1:BB76, %78.1:BB78
  val?^ | miss    %4.1  = %4.0
  dr              %4.2  = Phi                      %76.2:BB76, %78.2:BB78
  dr              %4.3  = %4.2
  fs              %4.4  = FrameState         R     0x55bbe6ebe370+534: [], env=e73.3
  void                    Deopt              !v    %4.4, %4.3, %4.1   !
BB64   <- [62]
  val?^ | miss    %64.0 = LdVar              eR    object, e73.3
  val?            %64.1 = Force!             !v    %64.0, e73.3   <val?_>
  val?            %64.2 = CallBuiltin        !v    attr(%64.1, ".xData") e73.3   <val?_>
  lgl$-           %64.3 = Is                       %64.2, NULL
  lgl$-           %64.4 = AsLogical                %64.3
  lgl$#-          %64.5 = Identical                %64.4, false
  void                    StVar              lW    value, %64.2, e73.3
  val             %64.7 = ChkMissing         e     %64.2
  void                    Branch                   %64.5 -> BB71 (if true) | BB65 (if false)
BB63   <- [62]
  (cls|spec|blt)  %63.0 = LdFun              !v    attr, e73.3
  fs              %63.1 = FrameState         R     0x55bbe6ebe370+234: [%63.0], env=e73.3
  void                    Deopt              !v    %63.1, DeadCall@0x55bbe6c627a8[Call#2], %63.0   !
BB61   <- [60, 69]
  (cls|spec|blt)  %61.0 = LdFun              !v    identical, e73.3
  fs              %61.1 = FrameState         R     0x55bbe6ebe370+414: [%61.0], env=e73.3
  void                    Deopt              !v    %61.1, DeadCall@0x55bbe6c627a8[Call#4], %61.0   !
BB79   <- [77]
  int$-           %79.0 = CastType           d     dn %77.1
  lgl$-           %79.1 = Eq                 d     %79.0, 0L, elided   <lgl$->
  lgl$#-          %79.2 = CheckTrueFalse     e     %79.1
  void                    Branch                   %79.2 -> BB56 (if true) | BB8 (if false)
BB80   <- [77]
  void                    Nop                !     
  (int|real)$-    %80.1 = %77.1
  dr              %80.2 = Typecheck@0x55bbe6c627a8[Type#23]
  goto BB6
BB71   <- [64]
  void                    Nop                !     
  lgl$-           %71.1 = %64.4
  goto BB68
BB65   <- [64]
  val?^ | miss    %65.0 = LdVar              eR    NULL.for.none, e73.3
  val?            %65.1 = Force!             !v    %65.0, e73.3   <val?_>
  lgl$#-          %65.2 = IsType                   %65.1 isA val?+
  void                    Branch                   %65.2 -> BB81 (if true) | BB82 (if false)
BB56   <- [79]
  val?^ | miss    %56.0 = LdVar              eR    object, e73.3
  void                    Visible            v     
  val?            %56.2 = Force!             !     %56.0, e73.3   <val?_>
  val?            %56.3 = %56.2
  goto BB43
BB8   <- [79]
  val?^ | miss    %8.0  = LdVar              eR    is.na, e73.3
  lgl$#-          %8.1  = Identical                <blt is.na>, %8.0   <true>
  void                    Branch                   %8.1 -> BB83 (if true) | BB84 (if false)
BB6   <- [80, 84, 86, 88, 90]
  val?^ | miss    %6.0  = Phi                      %80.1:BB80, %84.1:BB84, %86.1:BB86, %88.1:BB88, %90.1:BB90
  val?^ | miss    %6.1  = %6.0
  dr              %6.2  = Phi                      %80.2:BB80, %84.2:BB84, %86.2:BB86, %88.2:BB88, %90.2:BB90
  dr              %6.3  = %6.2
  fs              %6.4  = FrameState         R     0x55bbe6ebe370+625: [%77.1], env=e73.3
  void                    Deopt              !v    %6.4, %6.3, %6.1   !
BB68   <- [71, 81]
  lgl$-           %68.0 = Phi                      %81.4:BB81, %71.1:BB71
  lgl$-           %68.1 = %68.0
  lgl$#-          %68.2 = CheckTrueFalse     e     %68.1
  void                    Branch                   %68.2 -> BB70 (if true) | BB69 (if false)
BB81   <- [65]
  val?+           %81.0 = CastType           d     dn %65.1   <val?_>
  lgl             %81.1 = Not                wed   %81.0, elided
  lgl$-           %81.2 = AsLogical          e     %81.1
  lgl$-           %81.3 = LAnd                     %64.4, %81.2
  lgl$-           %81.4 = %81.3
  goto BB68
BB82   <- [65]
  fs              %82.0 = FrameState         R     0x55bbe6ebe370+357: [%64.4, %65.1], env=e73.3
  void                    Deopt              !v    %82.0, Typecheck@0x55bbe6c627a8[Type#11], %65.1   !
BB43   <- [55, 56, 42]
  val?            %43.0 = Phi                      %42.7:BB42, %55.1:BB55, %56.3:BB56
  val?            %43.1 = %43.0
  void                    Return             l     %43.1
BB83   <- [8]
  val?^ | miss    %83.0 = LdVar              eR    match, e73.3
  lgl$#-          %83.1 = Identical                %83.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %83.1 -> BB85 (if true) | BB86 (if false)
BB84   <- [8]
  void                    Nop                !     
  lgl$#-          %84.1 = %8.1
  dr              %84.2 = DeadBranchReached@0x55bbe6c627a8[Test#3]
  goto BB6
BB70   <- [68]
  (cls|spec|blt)  %70.0 = LdFun              !v    stop, e73.3
  fs              %70.1 = FrameState         R     0x55bbe6ebe370+381: [%70.0], env=e73.3
  void                    Deopt              !v    %70.1, DeadCall@0x55bbe6c627a8[Call#3], %70.0   !
BB69   <- [68]
  void                    Nop                !     
  goto BB61
BB85   <- [83]
  val?^ | miss    %85.0 = LdVar              eR    names, e73.3
  lgl$#-          %85.1 = Identical                %85.0, <blt names>
  void                    Branch                   %85.1 -> BB87 (if true) | BB88 (if false)
BB86   <- [83]
  void                    Nop                !     
  val?^ | miss    %86.1 = %83.0
  dr              %86.2 = CallTarget@0x55bbe6c627a8[Call#12]
  goto BB6
BB87   <- [85]
  lgl$#-          %87.0 = IsType                   %75.0 isA val?~+ | miss
  void                    Branch                   %87.0 -> BB89 (if true) | BB90 (if false)
BB88   <- [85]
  void                    Nop                !     
  val?^ | miss    %88.1 = %85.0
  dr              %88.2 = CallTarget@0x55bbe6c627a8[Call#13]
  goto BB6
BB89   <- [87]
  val+            %89.0 = CastType           d     dn %75.0   <vec+>
  val+            %89.1 = CallSafeBuiltin    wed   names(%89.0)    <str->
  lgl$#-          %89.2 = IsType                   %89.1 isA val?-
  void                    Branch                   %89.2 -> BB91 (if true) | BB92 (if false)
BB90   <- [87]
  void                    Nop                !     
  val             %90.1 = %75.0
  dr              %90.2 = Typecheck@0x55bbe6c627a8[Type#29]
  goto BB6
BB91   <- [89]
  val-            %91.0 = CastType           d     dn %89.1   <str->
  val+            %91.1 = CallSafeBuiltin    wed   match(".Data", %91.0, NA, nil)    <int$->
  lgl$#-          %91.2 = IsType                   %91.1 isA int$-
  void                    Branch                   %91.2 -> BB93 (if true) | BB94 (if false)
BB92   <- [89]
  prom-           %92.0 = MkArg                    unboundValue, getDataPart[0x55bbe80b89b0]_p5, e73.3
  val?^           %92.1 = CastType                 up %92.0
  fs              %92.2 = FrameState         R     0x55bbe6ebe370+765: [<blt is.na>], env=e73.3
  env             e92.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%92.1, x=".Data", parent=R_BaseNamespace, context 0
  fs              %92.4 = FrameState         R     0x55bbe2634d40+23: [".Data"], env=e92.3, next=%92.2
  fs              %92.5 = FrameState         R     0x55bbe43be3e0+32(pr): [%89.1], env=e73.3, next=%92.4
  void                    Deopt              !v    %92.5, Typecheck@0x55bbe2687cb0[Type#1], %89.1   !
BB93   <- [91]
  int$-           %93.0 = CastType           d     dn %91.1
  lgl$-           %93.1 = CallSafeBuiltin    wed   is.na(%93.0)    <lgl$->
  lgl$#-          %93.2 = CheckTrueFalse     e     %93.1
  void                    Branch                   %93.2 -> BB53 (if true) | BB13 (if false)
BB94   <- [91]
  prom-           %94.0 = MkArg                    %91.0, getDataPart[0x55bbe80b89b0]_p5 (!refl), e73.3
  val?~           %94.1 = CastType                 up %94.0
  fs              %94.2 = FrameState         R     0x55bbe6ebe370+765: [<blt is.na>], env=e73.3
  env             e94.3 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%94.1, x=".Data", parent=R_BaseNamespace, context 0
  fs              %94.4 = FrameState         R     0x55bbe2634d40+69: [%91.1], env=e94.3, next=%94.2
  void                    Deopt              !v    %94.4, Typecheck@0x55bbe6c627a8[Type#31], %91.1   !
BB53   <- [93]
  val?^ | miss    %53.0 = LdVar              eR    NULL.for.none, e73.3
  val?            %53.1 = Force!             !v    %53.0, e73.3   <val?_>
  lgl$#-          %53.2 = CheckTrueFalse     we    %53.1
  void                    Branch                   %53.2 -> BB55 (if true) | BB54 (if false)
BB13   <- [93]
  val?            %13.0 = Extract2_1D        wed   %89.0, ".Data", elided   <str$+>
  lgl$-           %13.1 = Is                       %13.0, logical
  lgl$-           %13.2 = Is                       %13.0, integer
  lgl$-           %13.3 = Is                       %13.0, double
  lgl$-           %13.4 = Is                       %13.0, complex
  lgl$-           %13.5 = Is                       %13.0, character   <true>
  lgl$-           %13.6 = Is                       %13.0, raw
  lgl$-           %13.7 = Is                       %13.0, list
  lgl$-           %13.8 = Is                       %13.0, expression
  lgl$-           %13.9 = LOr                      %13.8, %13.7
  lgl$-           %13.10 = LOr                      %13.9, %13.6
  lgl$-           %13.11 = LOr                      %13.10, %13.5
  lgl$-           %13.12 = LOr                      %13.11, %13.4
  lgl$-           %13.13 = LOr                      %13.12, %13.3
  lgl$-           %13.14 = LOr                      %13.13, %13.2
  lgl$-           %13.15 = LOr                      %13.14, %13.1   <true>
  lgl$#-          %13.16 = Identical                %13.15, true
  int$-           %13.17 = Length                   %13.0
  lgl$-           %13.18 = Is                       %13.0, Factor   <false>
  lgl$#-          %13.19 = Identical                %13.18, false
  lgl$#-          %13.20 = Identical                %13.5, true
  void                    StVar              lW    dataPart, %13.0, e73.3
  lgl$#-          %13.22 = IsType                   %13.0 isA val?+
  val             %13.23 = ChkMissing         e     %13.0
  void                    Branch                   %13.16 -> BB95 (if true) | BB96 (if false)
BB55   <- [53]
  void                    Visible            v     
  nil-            %55.1 = nil
  goto BB43
BB54   <- [53]
  (cls|spec|blt)  %54.0 = LdFun              !v    stop, e73.3
  fs              %54.1 = FrameState         R     0x55bbe6ebe370+828: [%54.0], env=e73.3
  void                    Deopt              !v    %54.1, DeadCall@0x55bbe6c627a8[Call#14], %54.0   !
BB95   <- [13]
  lgl$-           %95.0 = Eq                 d     %13.17, 1L, elided   <true>
  lgl$#-          %95.1 = Identical                %95.0, true
  void                    Branch                   %95.1 -> BB97 (if true) | BB98 (if false)
BB96   <- [13]
  void                    Nop                !     
  lgl$#-          %96.1 = %13.16
  dr              %96.2 = DeadBranchReached@0x55bbe6c627a8[Test#5]
  goto BB14
BB97   <- [95]
  void                    Branch                   %13.19 -> BB99 (if true) | BB100 (if false)
BB98   <- [95]
  void                    Nop                !     
  lgl$#-          %98.1 = %95.1
  dr              %98.2 = DeadBranchReached@0x55bbe6c627a8[Test#6]
  goto BB14
BB14   <- [96, 98, 100, 102, 104]
  val?^ | miss    %14.0 = Phi                      %96.1:BB96, %98.1:BB98, %100.1:BB100, %102.1:BB102, %104.1:BB104
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %96.2:BB96, %98.2:BB98, %100.2:BB100, %102.2:BB102, %104.2:BB104
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55bbe6ebe370+948: [], env=e73.3
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB99   <- [97]
  void                    Branch                   %13.20 -> BB101 (if true) | BB102 (if false)
BB100   <- [97]
  void                    Nop                !     
  lgl$#-          %100.1 = %13.19
  dr              %100.2 = DeadBranchReached@0x55bbe6c627a8[Test#7]
  goto BB14
BB101   <- [99]
  void                    Branch                   %13.22 -> BB103 (if true) | BB104 (if false)
BB102   <- [99]
  void                    Nop                !     
  lgl$#-          %102.1 = %13.20
  dr              %102.2 = DeadBranchReached@0x55bbe6c627a8[Test#8]
  goto BB14
BB103   <- [101]
  val?+           %103.0 = CastType           d     dn %13.0   <str$+>
  lgl+            %103.1 = CallSafeBuiltin    wed   is.na(%103.0) 
  lgl$#-          %103.2 = CheckTrueFalse     we    %103.1   <false>
  void                    Branch                   %103.2 -> BB106 (if true) | BB105 (if false)
BB104   <- [101]
  void                    Nop                !     
  val?            %104.1 = %13.0
  dr              %104.2 = Typecheck@0x55bbe6c627a8[Type#39]
  goto BB14
BB106   <- [103]
  fs              %106.0 = FrameState         R     0x55bbe6ebe370+1310: [%103.0, %103.2], env=e73.3
  void                    Deopt              !v    %106.0, DeadBranchReached@0x55bbe6c627a8[Test#20], %103.2   !
BB105   <- [103]
  lgl             %105.0 = Eq                 wed   %103.0, numeric, elided
  lgl$#-          %105.1 = CheckTrueFalse     we    %105.0   <false>
  void                    Branch                   %105.1 -> BB108 (if true) | BB107 (if false)
BB108   <- [105]
  fs              %108.0 = FrameState         R     0x55bbe6ebe370+1334: [%103.0, %105.1], env=e73.3
  void                    Deopt              !v    %108.0, DeadBranchReached@0x55bbe6c627a8[Test#21], %105.1   !
BB107   <- [105]
  lgl             %107.0 = Eq                 wed   %103.0, vector, elided
  lgl$#-          %107.1 = CheckTrueFalse     we    %107.0   <false>
  void                    Branch                   %107.1 -> BB110 (if true) | BB109 (if false)
BB110   <- [107]
  fs              %110.0 = FrameState         R     0x55bbe6ebe370+1352: [%103.0, %107.1], env=e73.3
  void                    Deopt              !v    %110.0, DeadBranchReached@0x55bbe6c627a8[Test#22], %107.1   !
BB109   <- [107]
  lgl             %109.0 = Eq                 wed   %103.0, integer, elided
  lgl$#-          %109.1 = CheckTrueFalse     we    %109.0   <false>
  void                    Branch                   %109.1 -> BB112 (if true) | BB111 (if false)
BB112   <- [109]
  fs              %112.0 = FrameState         R     0x55bbe6ebe370+1370: [%103.0, %109.1], env=e73.3
  void                    Deopt              !v    %112.0, DeadBranchReached@0x55bbe6c627a8[Test#23], %109.1   !
BB111   <- [109]
  lgl             %111.0 = Eq                 wed   %103.0, character, elided
  lgl$#-          %111.1 = CheckTrueFalse     we    %111.0   <false>
  void                    Branch                   %111.1 -> BB114 (if true) | BB113 (if false)
BB114   <- [111]
  fs              %114.0 = FrameState         R     0x55bbe6ebe370+1388: [%103.0, %111.1], env=e73.3
  void                    Deopt              !v    %114.0, DeadBranchReached@0x55bbe6c627a8[Test#24], %111.1   !
BB113   <- [111]
  lgl             %113.0 = Eq                 wed   %103.0, logical, elided
  lgl$#-          %113.1 = CheckTrueFalse     we    %113.0   <false>
  void                    Branch                   %113.1 -> BB116 (if true) | BB115 (if false)
BB116   <- [113]
  fs              %116.0 = FrameState         R     0x55bbe6ebe370+1406: [%103.0, %113.1], env=e73.3
  void                    Deopt              !v    %116.0, DeadBranchReached@0x55bbe6c627a8[Test#25], %113.1   !
BB115   <- [113]
  lgl             %115.0 = Eq                 wed   %103.0, complex, elided
  lgl$#-          %115.1 = CheckTrueFalse     we    %115.0   <false>
  void                    Branch                   %115.1 -> BB118 (if true) | BB117 (if false)
BB118   <- [115]
  fs              %118.0 = FrameState         R     0x55bbe6ebe370+1424: [%103.0, %115.1], env=e73.3
  void                    Deopt              !v    %118.0, DeadBranchReached@0x55bbe6c627a8[Test#26], %115.1   !
BB117   <- [115]
  lgl             %117.0 = Eq                 wed   %103.0, list, elided
  lgl$#-          %117.1 = CheckTrueFalse     we    %117.0   <false>
  void                    Branch                   %117.1 -> BB120 (if true) | BB119 (if false)
BB120   <- [117]
  fs              %120.0 = FrameState         R     0x55bbe6ebe370+1442: [%103.0, %117.1], env=e73.3
  void                    Deopt              !v    %120.0, DeadBranchReached@0x55bbe6c627a8[Test#27], %117.1   !
BB119   <- [117]
  lgl             %119.0 = Eq                 wed   %103.0, matrix, elided
  lgl$#-          %119.1 = CheckTrueFalse     we    %119.0   <false>
  void                    Branch                   %119.1 -> BB122 (if true) | BB121 (if false)
BB122   <- [119]
  fs              %122.0 = FrameState         R     0x55bbe6ebe370+1460: [%103.0, %119.1], env=e73.3
  void                    Deopt              !v    %122.0, DeadBranchReached@0x55bbe6c627a8[Test#28], %119.1   !
BB121   <- [119]
  lgl             %121.0 = Eq                 wed   %103.0, array, elided
  lgl$#-          %121.1 = CheckTrueFalse     we    %121.0   <false>
  void                    Branch                   %121.1 -> BB124 (if true) | BB123 (if false)
BB124   <- [121]
  fs              %124.0 = FrameState         R     0x55bbe6ebe370+1478: [%103.0, %121.1], env=e73.3
  void                    Deopt              !v    %124.0, DeadBranchReached@0x55bbe6c627a8[Test#29], %121.1   !
BB123   <- [121]
  lgl             %123.0 = Eq                 wed   %103.0, ts, elided
  lgl$#-          %123.1 = CheckTrueFalse     we    %123.0   <false>
  void                    Branch                   %123.1 -> BB126 (if true) | BB125 (if false)
BB126   <- [123]
  fs              %126.0 = FrameState         R     0x55bbe6ebe370+1496: [%103.0, %123.1], env=e73.3
  void                    Deopt              !v    %126.0, DeadBranchReached@0x55bbe6c627a8[Test#30], %123.1   !
BB125   <- [123]
  val?^ | miss    %125.0 = LdVar              eR    .BasicClasses, e73.3
  val?            %125.1 = Force!<wrapped>    !v    %125.0, e73.3   <str->
  lgl$#-          %125.2 = IsType                   %125.1 isA val?-
  void                    Branch                   %125.2 -> BB127 (if true) | BB128 (if false)
BB127   <- [125]
  val?-           %127.0 = CastType           d     dn %125.1   <str->
  val+            %127.1 = CallSafeBuiltin    wed   match(%103.0, %127.0, NA, nil)    <int$->
  lgl$#-          %127.2 = IsType                   %127.1 isA int$-
  void                    Branch                   %127.2 -> BB129 (if true) | BB130 (if false)
BB128   <- [125]
  prom-           %128.0 = MkArg                    %103.0, getDataPart[0x55bbe80b89b0]_p7 (!refl), e73.3
  val?~           %128.1 = CastType                 up %128.0
  fs              %128.2 = FrameState         R     0x55bbe6ebe370+2671: [<blt is.na>], env=e73.3
  prom-           %128.3 = MkArg                    unboundValue, getDataPart[0x55bbe80b89b0]_p8, e73.3
  val?^           %128.4 = CastType                 up %128.3
  env             e128.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%128.4, x=%128.1, parent=R_BaseNamespace, context 0
  fs              %128.6 = FrameState         R     0x55bbe2634d40+23: [%103.0], env=e128.5, next=%128.2
  fs              %128.7 = FrameState         R     0x55bbe4069910+5(pr): [%125.1], env=e73.3, next=%128.6
  void                    Deopt              !v    %128.7, Typecheck@0x55bbe2687cb0[Type#1], %125.1   !
BB129   <- [127]
  int$-           %129.0 = CastType           d     dn %127.1
  lgl$-           %129.1 = CallSafeBuiltin    wed   is.na(%129.0)    <lgl$->
  lgl$#-          %129.2 = CheckTrueFalse     e     %129.1
  void                    Branch                   %129.2 -> BB44 (if true) | BB42 (if false)
BB130   <- [127]
  prom-           %130.0 = MkArg                    %103.0, getDataPart[0x55bbe80b89b0]_p7 (!refl), e73.3
  val?~           %130.1 = CastType                 up %130.0
  fs              %130.2 = FrameState         R     0x55bbe6ebe370+2671: [<blt is.na>], env=e73.3
  prom-           %130.3 = MkArg                    %127.0, getDataPart[0x55bbe80b89b0]_p8 (!refl), e73.3
  val?~           %130.4 = CastType                 up %130.3
  env             e130.5 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%130.4, x=%130.1, parent=R_BaseNamespace, context 0
  fs              %130.6 = FrameState         R     0x55bbe2634d40+69: [%127.1], env=e130.5, next=%130.2
  void                    Deopt              !v    %130.6, Typecheck@0x55bbe6c627a8[Type#66], %127.1   !
BB44   <- [129]
  val?^ | miss    %44.0 = LdVar              eR    attributes, e73.3
  lgl$#-          %44.1 = Identical                <blt attributes>, %44.0   <@?>
  void                    Branch                   %44.1 -> BB46 (if true) | BB45 (if false)
BB42   <- [129]
  (cls|spec|blt)  %42.0 = LdFun              !v    attributes<-, <0x55bbe1e20128>, e73.3
  val?^ | miss    %42.1 = LdVar              eR    object, e73.3
  val?            %42.2 = Force!<wrapped>    !v    %42.1, e73.3   <cls>
  val?            %42.3 = NamedCall          !v    %42.0(%42.2, value=nil) e73.3   <cls->
  void                    StVar              lW    object, %42.3, e73.3
  val             %42.5 = ChkMissing         e     %42.3
  void                    Visible            v     
  val?            %42.7 = %42.3
  goto BB43
BB46   <- [44]
  val?^ | miss    %46.0 = LdVar              eR    object, e73.3
  val?            %46.1 = Force!             !v    %46.0, e73.3   <val?_>
  val?            %46.2 = CallBuiltin        !v    attributes(%46.1) e73.3   <val?_>
  void                    StVar              lW    attrVals, %46.2, e73.3
  val?^ | miss    %46.4 = LdVar              eR    names, e73.3
  lgl$#-          %46.5 = Identical                <blt names>, %46.4   <@?>
  void                    Branch                   %46.5 -> BB50 (if true) | BB49 (if false)
BB45   <- [44]
  (cls|spec|blt)  %45.0 = LdFun              !v    attributes, e73.3
  fs              %45.1 = FrameState         R     0x55bbe6ebe370+2817: [%45.0], env=e73.3
  void                    Deopt              !v    %45.1, DeadCall@0x55bbe6c627a8[Call#31], %45.0   !
BB50   <- [46]
  val             %50.0 = ChkMissing         e     %46.2
  lgl$#-          %50.1 = IsType                   %46.2 isA val?+
  void                    Branch                   %50.1 -> BB131 (if true) | BB132 (if false)
BB49   <- [46]
  (cls|spec|blt)  %49.0 = LdFun              !v    names, e73.3
  fs              %49.1 = FrameState         R     0x55bbe6ebe370+2922: [%49.0], env=e73.3
  void                    Deopt              !v    %49.1, DeadCall@0x55bbe6c627a8[Call#32], %49.0   !
BB131   <- [50]
  val?+           %131.0 = CastType           d     dn %46.2   <val?_>
  val+            %131.1 = CallSafeBuiltin    wed   names(%131.0)    <val?_>
  void                    StVar              lW    attrs, %131.1, e73.3
  val?^ | miss    %131.3 = LdVar              eR    is.na, e73.3
  lgl$#-          %131.4 = Identical                <blt is.na>, %131.3   <@?>
  void                    Branch                   %131.4 -> BB52 (if true) | BB51 (if false)
BB132   <- [50]
  fs              %132.0 = FrameState         R     0x55bbe6ebe370+2894: [], env=e73.3
  void                    Deopt              !v    %132.0, Typecheck@0x55bbe6c627a8[Type#72], %46.2   !
BB52   <- [131]
  (cls|spec|blt)  %52.0 = LdFun              !v    match, e73.3
  fs              %52.1 = FrameState         R     0x55bbe6ebe370+3109: [%131.1, <blt is.na>, %52.0], env=e73.3
  void                    Deopt              !v    %52.1, DeadCall@0x55bbe6c627a8[Call#41], %52.0   !
BB51   <- [131]
  (cls|spec|blt)  %51.0 = LdFun              !v    is.na, e73.3
  fs              %51.1 = FrameState         R     0x55bbe6ebe370+3072: [%131.1, %51.0], env=e73.3
  void                    Deopt              !v    %51.1, DeadCall@0x55bbe6c627a8[Call#37], %51.0   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClass, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getDataPart[0x55bbe80b89b0]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getDataPart[0x55bbe80b89b0]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55bbe1e20470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getDataPart[0x55bbe80b89b0]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dataPart, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .BasicClasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3

│ getDataPart[0x55bbe80b89b0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
