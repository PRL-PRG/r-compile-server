
┌──────────────────────────────────────────────────────────────────────────────┐
│ .inheritedArgsExpression[0x55bbe432a420]                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
.inheritedArgsExpression[0x55bbe432a420]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     target=%0.2, defined=%0.1, body=%0.0, parent=<env 0x55bbe2427378>, context 1
  (cls|spec|blt)  %0.4  = LdFun              !v    substitute, <0x55bbe1e1f468>, <env 0x55bbe2427378>
  prom-           %0.5  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p1, e0.3
  val?            %0.6  = Call               !v    %0.4(nil, %0.5) e0.3   <code->
  void                    StVar              lW    expr, %0.6, e0.3
  val?^ | miss    %0.8  = LdVar              eR    names, e0.3
  lgl$#-          %0.9  = Identical                <blt names>, %0.8   <true>
  void                    Branch                   %0.9 -> BB33 (if true) | BB34 (if false)
BB33   <- [0]
  val?^ | miss    %33.0 = LdVar              eR    defined, e0.3
  val?            %33.1 = Force!<lazy>       !v    %33.0, e0.3   <str$>
  val?            %33.2 = CallBuiltin        !v    names(%33.1) e0.3   <str$->
  void                    StVar              lW    args, %33.2, e0.3
  val?^ | miss    %33.4 = LdVar              eR    seq_along, e0.3
  lgl$#-          %33.5 = Identical                <blt seq_along>, %33.4   <true>
  void                    Branch                   %33.5 -> BB35 (if true) | BB36 (if false)
BB34   <- [0]
  fs              %34.0 = FrameState         R     0x55bbe9482090+51: [], env=e0.3
  void                    Deopt              !v    %34.0, DeadBranchReached@0x55bbe6ee50d0[Test#0], %0.9   !
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    defined, e0.3
  val?            %35.1 = Force!<wrapped>    !v    %35.0, e0.3   <str$>
  val?            %35.2 = CallBuiltin        !v    seq_along(%35.1) e0.3   <int$->
  lgl$#-          %35.3 = IsType                   %35.2 isA int$-
  void                    Branch                   %35.3 -> BB37 (if true) | BB38 (if false)
BB36   <- [33]
  fs              %36.0 = FrameState         R     0x55bbe9482090+156: [], env=e0.3
  void                    Deopt              !v    %36.0, DeadBranchReached@0x55bbe6ee50d0[Test#1], %33.5   !
BB37   <- [35]
  int$-           %37.0 = CastType           d     dn %35.2
  int$-           %37.1 = Inc                      0L
  lgl$-           %37.2 = Lt                 d     1L, %37.1, elided   <false>
  lgl$#-          %37.3 = Identical                %37.2, true
  void                    Branch                   %37.3 -> BB40 (if true) | BB39 (if false)
BB38   <- [35]
  void                    Nop                !     
  val?            %38.1 = %35.2
  dr              %38.2 = Typecheck@0x55bbe6ee50d0[Type#7]
  goto BB5
BB40   <- [37]
  void                    Nop                !     
  lgl$#-          %40.1 = %37.3
  dr              %40.2 = DeadBranchReached@0x55bbe6ee50d0[Test#2]
  goto BB5
BB39   <- [37]
  int$-           %39.0 = Extract2_1D        wed   %37.0, %37.1, elided
  void                    StVar              lW    i, %39.0, e0.3
  (cls|spec|blt)  %39.2 = LdFun              !v    extends, <0x55bbe2d626b8>, e0.3
  prom-           %39.3 = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p2, e0.3
  prom-           %39.4 = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p8, e0.3
  val?            %39.5 = NamedCall          !v    %39.2(%39.3, %39.4, fullInfo=true) e0.3   <lgl$->
  lgl$#-          %39.6 = IsType                   %39.5 isA lgl$-
  void                    Branch                   %39.6 -> BB41 (if true) | BB42 (if false)
BB5   <- [38, 40]
  val?^ | miss    %5.0  = Phi                      %38.1:BB38, %40.1:BB40
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %38.2:BB38, %40.2:BB40
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55bbe9482090+247: [%35.2], env=e0.3
  void                    Deopt              !v    %5.4, %5.3, %5.1   !
BB41   <- [39]
  lgl$-           %41.0 = CastType           d     dn %39.5
  void                    StVar              lW    ei, %41.0, e0.3
  val?^ | miss    %41.2 = LdVar              eR    is, e0.3
  lgl$#-          %41.3 = Identical                %41.2, function(object, class2) <(rir::DispatchTable*|...
  void                    Branch                   %41.3 -> BB43 (if true) | BB44 (if false)
BB42   <- [39]
  fs              %42.0 = FrameState         R     0x55bbe9482090+346: [%37.0, 1L, %37.1, %39.5], env=e0.3
  void                    Deopt              !v    %42.0, Typecheck@0x55bbe6ee50d0[Type#25], %39.5   !
BB43   <- [41]
  prom-           %43.0 = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p13 (!refl), e0.3
  val?            %43.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%43.0, "SClassExtension") e0.3   <lgl$->
  lgl$#-          %43.2 = IsType                   %43.1 isA lgl$-
  void                    Branch                   %43.2 -> BB45 (if true) | BB46 (if false)
BB44   <- [41]
  fs              %44.0 = FrameState         R     0x55bbe9482090+360: [%37.0, 1L, %37.1], env=e0.3
  void                    Deopt              !v    %44.0, CallTarget@0x55bbe6ee50d0[Call#9], %41.2   !
BB45   <- [43]
  lgl$-           %45.0 = CastType           d     dn %43.1
  lgl$-           %45.1 = AsLogical                %45.0
  lgl$#-          %45.2 = Identical                %45.1, false
  void                    Branch                   %45.2 -> BB14 (if true) | BB13 (if false)
BB46   <- [43]
  void                    Nop                !     
  val?            %46.1 = %43.1
  dr              %46.2 = Typecheck@0x55bbe6ee50d0[Type#27]
  goto BB11
BB14   <- [45]
  lgl$#-          %14.0 = CheckTrueFalse     e     %45.1
  void                    Branch                   %14.0 -> BB31 (if true) | BB15 (if false)
BB13   <- [45]
  (cls|spec|blt)  %13.0 = LdFun              !v    @, e0.3
  fs              %13.1 = FrameState         R     0x55bbe9482090+414: [%37.0, 1L, %37.1, %45.1, %13.0], env=e0.3
  void                    Deopt              !v    %13.1, DeadCall@0x55bbe6ee50d0[Call#10], %13.0   !
BB11   <- [46, 48, 50]
  val?^ | miss    %11.0 = Phi                      %46.1:BB46, %48.1:BB48, %50.1:BB50
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %46.2:BB46, %48.2:BB48, %50.2:BB50
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55bbe9482090+397: [%37.0, 1L, %37.1, %43.1], env=e0.3
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB31   <- [14]
  (cls|spec|blt)  %31.0 = LdFun              !v    substitute, e0.3
  fs              %31.1 = FrameState         R     0x55bbe9482090+470: [%37.0, 1L, %37.1, %31.0], env=e0.3
  void                    Deopt              !v    %31.1, DeadCall@0x55bbe6ee50d0[Call#11], %31.0   !
BB15   <- [14]
  int$-           %15.0 = Inc                      %37.1
  lgl$-           %15.1 = Lt                 d     1L, %15.0, elided
  lgl$#-          %15.2 = Identical                %15.1, true
  void                    Branch                   %15.2 -> BB17 (if true) | BB16 (if false)
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    length, e0.3
  lgl$#-          %17.1 = Identical                <blt length>, %17.0   <true>
  void                    Branch                   %17.1 -> BB47 (if true) | BB48 (if false)
BB16   <- [15]
  int$-           %16.0 = Extract2_1D        wed   %37.0, %15.0, elided
  void                    StVar              lW    i, %16.0, e0.3
  (cls|spec|blt)  %16.2 = LdFun              !v    extends, e0.3
  fs              %16.3 = FrameState         R     0x55bbe9482090+674: [%37.0, 1L, %15.0, %16.2], env=e0.3
  void                    Deopt              !v    %16.3, DeadCall@0x55bbe6ee50d0[Call#17], %16.2   !
BB47   <- [17]
  val?^ | miss    %47.0 = LdVar              eR    expr, e0.3
  lgl$#-          %47.1 = IsType                   %47.0 isA val?~- | miss
  void                    Branch                   %47.1 -> BB49 (if true) | BB50 (if false)
BB48   <- [17]
  void                    Nop                !     
  lgl$#-          %48.1 = %17.1
  dr              %48.2 = DeadBranchReached@0x55bbe6ee50d0[Test#15]
  goto BB11
BB49   <- [47]
  val?~- | miss   %49.0 = CastType           d     dn %47.0
  val?-           %49.1 = Force!<value>            %49.0,    <code->
  (int|real)$-    %49.2 = CallSafeBuiltin    wed   length(%49.1)    <int$->
  lgl$#-          %49.3 = IsType                   %49.2 isA int$-
  void                    Branch                   %49.3 -> BB51 (if true) | BB52 (if false)
BB50   <- [47]
  void                    Nop                !     
  val?^ | miss    %50.1 = %47.0
  dr              %50.2 = Typecheck@0x55bbe6ee50d0[Type#95]
  goto BB11
BB51   <- [49]
  int$-           %51.0 = CastType           d     dn %49.2
  lgl$-           %51.1 = Gt                 d     %51.0, 1L, elided   <lgl$->
  lgl$#-          %51.2 = CheckTrueFalse     e     %51.1
  void                    Branch                   %51.2 -> BB22 (if true) | BB20 (if false)
BB52   <- [49]
  fs              %52.0 = FrameState         R     0x55bbe9482090+1118: [%49.2], env=e0.3
  void                    Deopt              !v    %52.0, Typecheck@0x55bbe6ee50d0[Type#96], %49.2   !
BB22   <- [51]
  val?^ | miss    %22.0 = LdVar              eR    list, e0.3
  lgl$#-          %22.1 = Identical                <blt list>, %22.0   <@?>
  void                    Branch                   %22.1 -> BB24 (if true) | BB23 (if false)
BB20   <- [51]
  void                    Visible            v     
  nil-            %20.1 = nil
  goto BB21
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    body, e0.3
  val?            %24.1 = Force!             !v    %24.0, e0.3   <val?_>
  val+            %24.2 = CallSafeBuiltin    wed   list(%24.1)    <val?_>
  val?^ | miss    %24.3 = LdVar              eR    expr !upd, e0.3
  val?            %24.4 = Force!             !v    %24.3, e0.3   <val?_>
  val?^ | miss    %24.5 = LdVar              eR    length, e0.3
  lgl$#-          %24.6 = Identical                <blt length>, %24.5   <@?>
  void                    Branch                   %24.6 -> BB26 (if true) | BB25 (if false)
BB23   <- [22]
  (cls|spec|blt)  %23.0 = LdFun              !v    list, e0.3
  fs              %23.1 = FrameState         R     0x55bbe9482090+1180: [%23.0], env=e0.3
  void                    Deopt              !v    %23.1, DeadCall@0x55bbe6ee50d0[Call#31], %23.0   !
BB21   <- [20, 55]
  val?+           %21.0 = Phi                      %20.1:BB20, %55.5:BB55
  val?+           %21.1 = %21.0
  void                    Return             l     %21.1
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    expr, e0.3
  val?            %26.1 = Force!             !v    %26.0, e0.3   <val?_>
  lgl$#-          %26.2 = IsType                   %26.1 isA val?+
  void                    Branch                   %26.2 -> BB53 (if true) | BB54 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    length, e0.3
  fs              %25.1 = FrameState         R     0x55bbe9482090+1291: [%24.2, %24.4, %25.0], env=e0.3
  void                    Deopt              !v    %25.1, DeadCall@0x55bbe6ee50d0[Call#32], %25.0   !
BB53   <- [26]
  val?+           %53.0 = CastType           d     dn %26.1   <val?_>
  (int|real)$-    %53.1 = CallSafeBuiltin    wed   length(%53.0)    <val?_>
  (int|real)$-    %53.2 = Add                d     %53.1, 1L, elided   <val?_>
  lgl$#-          %53.3 = IsType                   %24.4 isA val?+
  void                    Branch                   %53.3 -> BB55 (if true) | BB56 (if false)
BB54   <- [26]
  fs              %54.0 = FrameState         R     0x55bbe9482090+1332: [%24.2, %24.4, <blt length>, %26.1], env=e0.3
  void                    Deopt              !v    %54.0, Typecheck@0x55bbe6ee50d0[Type#103], %26.1   !
BB55   <- [53]
  val?+           %55.0 = CastType           d     dn %24.4   <val?_>
  val?+           %55.1 = Subassign1_1D      wed   %24.2, %55.0, %53.2, elided   <val?_>
  void                    StVar              lW    expr, %55.1, e0.3
  val+            %55.3 = ChkMissing         e     %55.1
  void                    Visible            v     
  val?+           %55.5 = %55.1
  goto BB21
BB56   <- [53]
  fs              %56.0 = FrameState         R     0x55bbe9482090+1354: [%24.2, %24.4, %53.1], env=e0.3
  void                    Deopt              !v    %56.0, Typecheck@0x55bbe6ee50d0[Type#101], %24.4   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, e0.0
  val?            %0.2  = NamedCall          !     %0.1(DUMMY="") e0.0   <val?_>
  void                    Return             l     %0.2
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     setPackageSlot, <0x55bbe7d1e370>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p3, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p5, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$+>
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    target, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str$>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <false>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p4, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    packageSlot, <0x55bbe2db30d0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p6, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <str$->
  lgl$#-          %0.4  = IsType                   %0.3 isA val+   <true>
  void                    Branch                   %0.4 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p7, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.3, %3.1, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    target, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     setPackageSlot, <0x55bbe7d1e370>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p9, e0.0
  prom-           %0.3  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p11, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <str$+>
  void                    Return             l     %0.4
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str$>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <false>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p10, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract2_1D        !v    %0.2, %3.1, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     packageSlot, <0x55bbe2db30d0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .inheritedArgsExpression[0x55bbe432a420]_p12, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    defined, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3

│ .inheritedArgsExpression[0x55bbe432a420]                                     │
└──────────────────────────────────────────────────────────────────────────────┘
