
┌──────────────────────────────────────────────────────────────────────────────┐
│ ifelse[0x55bbe8867d70]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1              │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
ifelse[0x55bbe8867d70]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     test=%0.2, yes=%0.1, no=%0.0, parent=R_BaseNamespace, context 1
  val?            %0.4  = Force!<lazy>       !v    %0.2, e0.3   <lgl->
  lgl$#-          %0.5  = IsType                   %0.4 isA lgl-
  void                    Branch                   %0.5 -> BB102 (if true) | BB103 (if false)
BB102   <- [0]
  val?^ | miss    %102.0 = LdVar              eR    typeof, e0.3
  lgl$#-          %102.1 = Identical                %102.0, function(x) <(rir::DispatchTable*)0x55bbe3eeba|...
  void                    Branch                   %102.1 -> BB104 (if true) | BB105 (if false)
BB103   <- [0]
  void                    Nop                !     
  val?            %103.1 = %0.4
  dr              %103.2 = Typecheck@0x55bbe3ea4df0[Type#1]
  goto BB101
BB104   <- [102]
  val?^ | miss    %104.0 = LdVar              eR    test, e0.3
  val?            %104.1 = Force!<wrapped>    !v    %104.0, e0.3   <lgl->
  str$-           %104.2 = CallSafeBuiltin    wed   typeof(%104.1)    <str$->
  lgl$-           %104.3 = Neq                d     %104.2, "logical", elided   <lgl$->
  lgl$#-          %104.4 = CheckTrueFalse     e     %104.3
  void                    Branch                   %104.4 -> BB100 (if true) | BB5 (if false)
BB105   <- [102]
  void                    Nop                !     
  val?^ | miss    %105.1 = %102.0
  dr              %105.2 = CallTarget@0x55bbe3ea4df0[Call#5]
  goto BB101
BB101   <- [103, 105]
  val?^ | miss    %101.0 = Phi                      %103.1:BB103, %105.1:BB105
  val?^ | miss    %101.1 = %101.0
  dr              %101.2 = Phi                      %103.2:BB103, %105.2:BB105
  dr              %101.3 = %101.2
  fs              %101.4 = FrameState         R     0x55bbe3eedbe0+69: [<blt is.atomic>, %0.4], env=e0.3
  void                    Deopt              !v    %101.4, %101.3, %101.1   !
BB100   <- [104]
  (cls|spec|blt)  %100.0 = LdFun              !v    storage.mode<-, e0.3
  fs              %100.1 = FrameState         R     0x55bbe3eedbe0+470: ["logical", %100.0], env=e0.3
  void                    Deopt              !v    %100.1, DeadCall@0x55bbe3ea4df0[Call#6], %100.0   !
BB5   <- [104]
  val?^ | miss    %5.0  = LdVar              eR    length, e0.3
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <true>
  void                    Branch                   %5.1 -> BB106 (if true) | BB107 (if false)
BB106   <- [5]
  val?^ | miss    %106.0 = LdVar              eR    test, e0.3
  lgl$#-          %106.1 = IsType                   %106.0 isA lgl~-
  void                    Branch                   %106.1 -> BB108 (if true) | BB109 (if false)
BB107   <- [5]
  void                    Nop                !     
  lgl$#-          %107.1 = %5.1
  dr              %107.2 = DeadBranchReached@0x55bbe3ea4df0[Test#3]
  goto BB3
BB108   <- [106]
  lgl~-           %108.0 = CastType           d     dn %106.0
  lgl-            %108.1 = Force!<wrapped>          %108.0,    <lgl->
  (int|real)$-    %108.2 = CallSafeBuiltin    wed   length(%108.1)    <int$->
  lgl$#-          %108.3 = IsType                   %108.2 isA int$-
  void                    Branch                   %108.3 -> BB110 (if true) | BB111 (if false)
BB109   <- [106]
  void                    Nop                !     
  val?^ | miss    %109.1 = %106.0
  dr              %109.2 = Typecheck@0x55bbe3ea4df0[Type#19]
  goto BB3
BB3   <- [107, 109]
  val?^ | miss    %3.0  = Phi                      %107.1:BB107, %109.1:BB109
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %107.2:BB107, %109.2:BB109
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbe3eedbe0+431: [], env=e0.3
  prom-           %3.5  = MkArg                    %104.1, ifelse[0x55bbe8867d70]_p7 (!refl), e0.3
  val?~           %3.6  = CastType                 up %3.5
  env             e3.7  = (MkEnv)            l     x=%3.6, parent=R_BaseNamespace, context 0
  fs              %3.8  = FrameState         R     0x55bbe3eeb800+27: [%104.2], env=e3.7, next=%3.4
  void                    Deopt              !v    %3.8, %3.3, %3.1   !
BB110   <- [108]
  int$-           %110.0 = CastType           d     dn %108.2
  lgl$-           %110.1 = Eq                 d     %110.0, 1, elided   <lgl$->
  lgl$-           %110.2 = AsLogical                %110.1
  lgl$#-          %110.3 = Identical                %110.2, false
  void                    Branch                   %110.3 -> BB99 (if true) | BB8 (if false)
BB111   <- [108]
  fs              %111.0 = FrameState         R     0x55bbe3eedbe0+624: [%108.2], env=e0.3
  void                    Deopt              !v    %111.0, Typecheck@0x55bbe3ea4df0[Type#20], %108.2   !
BB99   <- [110]
  void                    Nop                !     
  lgl$-           %99.1 = %110.2
  goto BB11
BB8   <- [110]
  val?^ | miss    %8.0  = LdVar              eR    attributes, e0.3
  lgl$#-          %8.1  = Identical                <blt attributes>, %8.0   <@?>
  void                    Branch                   %8.1 -> BB10 (if true) | BB9 (if false)
BB11   <- [99, 10]
  lgl$-           %11.0 = Phi                      %10.4:BB10, %99.1:BB99
  lgl$-           %11.1 = %11.0
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB50 (if true) | BB12 (if false)
BB10   <- [8]
  val?            %10.0 = CallBuiltin        !v    attributes(%108.1) e0.3   <val?_>
  lgl$-           %10.1 = Is                       %10.0, NULL
  lgl$-           %10.2 = AsLogical                %10.1
  lgl$-           %10.3 = LAnd                     %110.2, %10.2
  lgl$-           %10.4 = %10.3
  goto BB11
BB9   <- [8]
  (cls|spec|blt)  %9.0  = LdFun              !v    attributes, e0.3
  fs              %9.1  = FrameState         R     0x55bbe3eedbe0+676: [%110.2, %9.0], env=e0.3
  void                    Deopt              !v    %9.1, DeadCall@0x55bbe3ea4df0[Call#8], %9.0   !
BB50   <- [11]
  val?^ | miss    %50.0 = LdVar              eR    is.na, e0.3
  lgl$#-          %50.1 = Identical                <blt is.na>, %50.0   <@?>
  void                    Branch                   %50.1 -> BB52 (if true) | BB51 (if false)
BB12   <- [11]
  void                    Nop                !     
  goto BB13
BB52   <- [50]
  val?^ | miss    %52.0 = LdVar              eR    test, e0.3
  val?            %52.1 = Force!             !v    %52.0, e0.3   <val?_>
  lgl$#-          %52.2 = IsType                   %52.1 isA val?+
  void                    Branch                   %52.2 -> BB118 (if true) | BB119 (if false)
BB51   <- [50]
  (cls|spec|blt)  %51.0 = LdFun              !v    is.na, e0.3
  fs              %51.1 = FrameState         R     0x55bbe3eedbe0+790: [%51.0], env=e0.3
  void                    Deopt              !v    %51.1, DeadCall@0x55bbe3ea4df0[Call#9], %51.0   !
BB13   <- [12, 63]
  val?^ | miss    %13.0 = LdVar              eR    test, e0.3
  val?            %13.1 = Force!<wrapped>    !v    %13.0, e0.3   <lgl->
  void                    StVar              lW    ans, %13.1, e0.3
  val?^ | miss    %13.3 = LdVar              eR    length, e0.3
  lgl$#-          %13.4 = Identical                <blt length>, %13.3   <true>
  void                    Branch                   %13.4 -> BB112 (if true) | BB113 (if false)
BB118   <- [52]
  val?+           %118.0 = CastType           d     dn %52.1   <val?_>
  lgl+            %118.1 = CallSafeBuiltin    wed   is.na(%118.0)    <val?_>
  lgl$#-          %118.2 = CheckTrueFalse     we    %118.1
  void                    Branch                   %118.2 -> BB98 (if true) | BB55 (if false)
BB119   <- [52]
  fs              %119.0 = FrameState         R     0x55bbe3eedbe0+831: [<blt is.na>, %52.1], env=e0.3
  void                    Deopt              !v    %119.0, Typecheck@0x55bbe3ea4df0[Type#26], %52.1   !
BB112   <- [13]
  val             %112.0 = ChkMissing         e     %13.1   <lgl->
  lgl$#-          %112.1 = IsType                   %112.0 isA lgl-
  void                    Branch                   %112.1 -> BB114 (if true) | BB115 (if false)
BB113   <- [13]
  void                    Nop                !     
  lgl$#-          %113.1 = %13.4
  dr              %113.2 = DeadBranchReached@0x55bbe3ea4df0[Test#12]
  goto BB14
BB98   <- [118]
  void                    Visible            v     
  lgl$-           %98.1 = na-lgl
  goto BB36
BB55   <- [118]
  val?^ | miss    %55.0 = LdVar              eR    test, e0.3
  val?            %55.1 = Force!             !v    %55.0, e0.3   <val?_>
  lgl$#-          %55.2 = CheckTrueFalse     we    %55.1
  void                    Branch                   %55.2 -> BB78 (if true) | BB56 (if false)
BB114   <- [112]
  lgl-            %114.0 = CastType           d     dn %112.0
  (int|real)$-    %114.1 = CallSafeBuiltin    wed   length(%114.0)    <int$->
  lgl$#-          %114.2 = IsType                   %114.1 isA int$-
  void                    Branch                   %114.2 -> BB116 (if true) | BB117 (if false)
BB115   <- [112]
  void                    Nop                !     
  val             %115.1 = %112.0
  dr              %115.2 = Typecheck@0x55bbe3ea4df0[Type#61]
  goto BB14
BB14   <- [113, 115]
  val?^ | miss    %14.0 = Phi                      %113.1:BB113, %115.1:BB115
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %113.2:BB113, %115.2:BB115
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55bbe3eedbe0+1776: [], env=e0.3
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB36   <- [98, 75, 95, 162]
  val?            %36.0 = Phi                      %162.3:BB162, %75.3:BB75, %95.3:BB95, %98.1:BB98
  val?            %36.1 = %36.0
  void                    Return             l     %36.1
BB78   <- [55]
  val?^ | miss    %78.0 = LdVar              eR    length, e0.3
  lgl$#-          %78.1 = Identical                <blt length>, %78.0   <@?>
  void                    Branch                   %78.1 -> BB80 (if true) | BB79 (if false)
BB56   <- [55]
  val?^ | miss    %56.0 = LdVar              eR    length, e0.3
  lgl$#-          %56.1 = Identical                <blt length>, %56.0   <@?>
  void                    Branch                   %56.1 -> BB58 (if true) | BB57 (if false)
BB116   <- [114]
  int$-           %116.0 = CastType           d     dn %114.1
  void                    StVar              lW    len, %116.0, e0.3
  val?^ | miss    %116.2 = LdVar              eR    which, e0.3
  lgl$#-          %116.3 = Identical                %116.2, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %116.3 -> BB120 (if true) | BB121 (if false)
BB117   <- [114]
  fs              %117.0 = FrameState         R     0x55bbe3eedbe0+1867: [%114.1], env=e0.3
  void                    Deopt              !v    %117.0, Typecheck@0x55bbe3ea4df0[Type#62], %114.1   !
BB80   <- [78]
  val?^ | miss    %80.0 = LdVar              eR    yes, e0.3
  val?            %80.1 = Force!             !v    %80.0, e0.3   <val?_>
  lgl$#-          %80.2 = IsType                   %80.1 isA val?+
  void                    Branch                   %80.2 -> BB134 (if true) | BB135 (if false)
BB79   <- [78]
  (cls|spec|blt)  %79.0 = LdFun              !v    length, e0.3
  fs              %79.1 = FrameState         R     0x55bbe3eedbe0+1343: [%79.0], env=e0.3
  void                    Deopt              !v    %79.1, DeadCall@0x55bbe3ea4df0[Call#15], %79.0   !
BB58   <- [56]
  val?^ | miss    %58.0 = LdVar              eR    no, e0.3
  val?            %58.1 = Force!             !v    %58.0, e0.3   <val?_>
  lgl$#-          %58.2 = IsType                   %58.1 isA val?+
  void                    Branch                   %58.2 -> BB132 (if true) | BB133 (if false)
BB57   <- [56]
  (cls|spec|blt)  %57.0 = LdFun              !v    length, e0.3
  fs              %57.1 = FrameState         R     0x55bbe3eedbe0+912: [%57.0], env=e0.3
  void                    Deopt              !v    %57.1, DeadCall@0x55bbe3ea4df0[Call#10], %57.0   !
BB120   <- [116]
  val?^ | miss    %120.0 = LdVar              eR    test, e0.3
  val?            %120.1 = Force!<wrapped>    !v    %120.0, e0.3   <lgl->
  val+            %120.2 = CallSafeBuiltin    wed   which(%120.1)    <int->
  void                    StVar              lW    ypos, %120.2, e0.3
  val?^ | miss    %120.4 = LdVar              eR    which, e0.3
  lgl$#-          %120.5 = Identical                %120.4, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %120.5 -> BB122 (if true) | BB123 (if false)
BB121   <- [116]
  fs              %121.0 = FrameState         R     0x55bbe3eedbe0+1881: [], env=e0.3
  void                    Deopt              !v    %121.0, CallTarget@0x55bbe3ea4df0[Call#21], %116.2   !
BB134   <- [80]
  val?+           %134.0 = CastType           d     dn %80.1   <val?_>
  real$-          %134.1 = CallSafeBuiltin    wed   length(%134.0)    <val?_>
  lgl$-           %134.2 = Eq                 d     %134.1, 1, elided   <val?_>
  lgl$#-          %134.3 = CheckTrueFalse     e     %134.2
  void                    Branch                   %134.3 -> BB84 (if true) | BB83 (if false)
BB135   <- [80]
  fs              %135.0 = FrameState         R     0x55bbe3eedbe0+1384: [<blt length>, %80.1], env=e0.3
  void                    Deopt              !v    %135.0, Typecheck@0x55bbe3ea4df0[Type#45], %80.1   !
BB132   <- [58]
  val?+           %132.0 = CastType           d     dn %58.1   <val?_>
  real$-          %132.1 = CallSafeBuiltin    wed   length(%132.0)    <val?_>
  lgl$-           %132.2 = Eq                 d     %132.1, 1, elided   <val?_>
  lgl$#-          %132.3 = CheckTrueFalse     e     %132.2
  void                    Branch                   %132.3 -> BB64 (if true) | BB61 (if false)
BB133   <- [58]
  fs              %133.0 = FrameState         R     0x55bbe3eedbe0+953: [<blt length>, %58.1], env=e0.3
  void                    Deopt              !v    %133.0, Typecheck@0x55bbe3ea4df0[Type#30], %58.1   !
BB122   <- [120]
  val?^ | miss    %122.0 = LdVar              eR    test, e0.3
  lgl$#-          %122.1 = IsType                   %122.0 isA lgl~-
  void                    Branch                   %122.1 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?^ | miss    %123.1 = %120.4
  dr              %123.2 = CallTarget@0x55bbe3ea4df0[Call#22]
  goto BB20
BB84   <- [134]
  val?^ | miss    %84.0 = LdVar              eR    attributes, e0.3
  lgl$#-          %84.1 = Identical                <blt attributes>, %84.0   <@?>
  void                    Branch                   %84.1 -> BB86 (if true) | BB85 (if false)
BB83   <- [134]
  void                    Nop                !     
  goto BB63
BB64   <- [132]
  val?^ | miss    %64.0 = LdVar              eR    attributes, e0.3
  lgl$#-          %64.1 = Identical                <blt attributes>, %64.0   <@?>
  void                    Branch                   %64.1 -> BB66 (if true) | BB65 (if false)
BB61   <- [132]
  void                    Nop                !     
  goto BB62
BB124   <- [122]
  lgl~-           %124.0 = CastType           d     dn %122.0
  lgl-            %124.1 = Force!<wrapped>          %124.0,    <lgl->
  lgl-            %124.2 = Not                wed   %124.1, elided   <lgl->
  val+            %124.3 = CallSafeBuiltin    wed   which(%124.2)    <int->
  void                    StVar              lW    npos, %124.3, e0.3
  val?^ | miss    %124.5 = LdVar              eR    length, e0.3
  lgl$#-          %124.6 = Identical                <blt length>, %124.5   <true>
  void                    Branch                   %124.6 -> BB126 (if true) | BB127 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?^ | miss    %125.1 = %122.0
  dr              %125.2 = Typecheck@0x55bbe3ea4df0[Type#65]
  goto BB20
BB20   <- [123, 125]
  val?^ | miss    %20.0 = Phi                      %123.1:BB123, %125.1:BB125
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %123.2:BB123, %125.2:BB125
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x55bbe3eedbe0+1927: [], env=e0.3
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB86   <- [84]
  val?^ | miss    %86.0 = LdVar              eR    yes, e0.3
  val?            %86.1 = Force!             !v    %86.0, e0.3   <val?_>
  val?            %86.2 = CallBuiltin        !v    attributes(%86.1) e0.3   <val?_>
  lgl$-           %86.3 = Is                       %86.2, NULL
  lgl$-           %86.4 = AsLogical                %86.3
  lgl$#-          %86.5 = Identical                %86.4, true
  void                    StVar              lW    yat, %86.2, e0.3
  val             %86.7 = ChkMissing         e     %86.2
  void                    Branch                   %86.5 -> BB97 (if true) | BB87 (if false)
BB85   <- [84]
  (cls|spec|blt)  %85.0 = LdFun              !v    attributes, e0.3
  fs              %85.1 = FrameState         R     0x55bbe3eedbe0+1462: [%85.0], env=e0.3
  void                    Deopt              !v    %85.1, DeadCall@0x55bbe3ea4df0[Call#16], %85.0   !
BB63   <- [83, 94, 62]
  void                    Nop                !     
  goto BB13
BB66   <- [64]
  val?^ | miss    %66.0 = LdVar              eR    no, e0.3
  val?            %66.1 = Force!             !v    %66.0, e0.3   <val?_>
  val?            %66.2 = CallBuiltin        !v    attributes(%66.1) e0.3   <val?_>
  lgl$-           %66.3 = Is                       %66.2, NULL
  lgl$-           %66.4 = AsLogical                %66.3
  lgl$#-          %66.5 = Identical                %66.4, true
  void                    StVar              lW    nat, %66.2, e0.3
  val             %66.7 = ChkMissing         e     %66.2
  void                    Branch                   %66.5 -> BB77 (if true) | BB67 (if false)
BB65   <- [64]
  (cls|spec|blt)  %65.0 = LdFun              !v    attributes, e0.3
  fs              %65.1 = FrameState         R     0x55bbe3eedbe0+1031: [%65.0], env=e0.3
  void                    Deopt              !v    %65.1, DeadCall@0x55bbe3ea4df0[Call#11], %65.0   !
BB62   <- [61, 74]
  void                    Nop                !     
  goto BB63
BB126   <- [124]
  lgl$#-          %126.0 = IsType                   %120.2 isA int-
  void                    Branch                   %126.0 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  void                    Nop                !     
  lgl$#-          %127.1 = %124.6
  dr              %127.2 = DeadBranchReached@0x55bbe3ea4df0[Test#13]
  goto BB22
BB97   <- [86]
  void                    Nop                !     
  lgl$-           %97.1 = %86.4
  goto BB93
BB87   <- [86]
  val?^ | miss    %87.0 = LdVar              eR    is.function, e0.3
  lgl$#-          %87.1 = Identical                <blt is.function>, %87.0   <@?>
  void                    Branch                   %87.1 -> BB89 (if true) | BB88 (if false)
BB77   <- [66]
  void                    Nop                !     
  lgl$-           %77.1 = %66.4
  goto BB73
BB67   <- [66]
  val?^ | miss    %67.0 = LdVar              eR    is.function, e0.3
  lgl$#-          %67.1 = Identical                <blt is.function>, %67.0   <@?>
  void                    Branch                   %67.1 -> BB69 (if true) | BB68 (if false)
BB128   <- [126]
  int-            %128.0 = CastType           d     dn %120.2
  (int|real)$-    %128.1 = CallSafeBuiltin    wed   length(%128.0)    <int$->
  lgl$#-          %128.2 = IsType                   %128.1 isA int$-
  void                    Branch                   %128.2 -> BB130 (if true) | BB131 (if false)
BB129   <- [126]
  void                    Nop                !     
  val+            %129.1 = %120.2
  dr              %129.2 = Typecheck@0x55bbe3ea4df0[Type#68]
  goto BB22
BB22   <- [127, 129]
  val?^ | miss    %22.0 = Phi                      %127.1:BB127, %129.1:BB129
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %127.2:BB127, %129.2:BB129
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55bbe3eedbe0+1973: [], env=e0.3
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB93   <- [97, 92]
  lgl$-           %93.0 = Phi                      %92.1:BB92, %97.1:BB97
  lgl$-           %93.1 = %93.0
  lgl$#-          %93.2 = CheckTrueFalse     e     %93.1
  void                    Branch                   %93.2 -> BB95 (if true) | BB94 (if false)
BB89   <- [87]
  val?^ | miss    %89.0 = LdVar              eR    yes, e0.3
  val?            %89.1 = Force!             !v    %89.0, e0.3   <val?_>
  lgl$#-          %89.2 = IsType                   %89.1 isA val?+
  void                    Branch                   %89.2 -> BB164 (if true) | BB165 (if false)
BB88   <- [87]
  (cls|spec|blt)  %88.0 = LdFun              !v    is.function, e0.3
  fs              %88.1 = FrameState         R     0x55bbe3eedbe0+1593: [%86.4, %88.0], env=e0.3
  void                    Deopt              !v    %88.1, DeadCall@0x55bbe3ea4df0[Call#17], %88.0   !
BB73   <- [77, 72]
  lgl$-           %73.0 = Phi                      %72.1:BB72, %77.1:BB77
  lgl$-           %73.1 = %73.0
  lgl$#-          %73.2 = CheckTrueFalse     e     %73.1
  void                    Branch                   %73.2 -> BB75 (if true) | BB74 (if false)
BB69   <- [67]
  val?^ | miss    %69.0 = LdVar              eR    no, e0.3
  val?            %69.1 = Force!             !v    %69.0, e0.3   <val?_>
  lgl$#-          %69.2 = IsType                   %69.1 isA val?+
  void                    Branch                   %69.2 -> BB148 (if true) | BB149 (if false)
BB68   <- [67]
  (cls|spec|blt)  %68.0 = LdFun              !v    is.function, e0.3
  fs              %68.1 = FrameState         R     0x55bbe3eedbe0+1162: [%66.4, %68.0], env=e0.3
  void                    Deopt              !v    %68.1, DeadCall@0x55bbe3ea4df0[Call#12], %68.0   !
BB130   <- [128]
  int$-           %130.0 = CastType           d     dn %128.1
  lgl$-           %130.1 = Gt                 d     %130.0, 0L, elided   <lgl$->
  lgl$#-          %130.2 = CheckTrueFalse     e     %130.1
  void                    Branch                   %130.2 -> BB45 (if true) | BB26 (if false)
BB131   <- [128]
  fs              %131.0 = FrameState         R     0x55bbe3eedbe0+2064: [%128.1], env=e0.3
  void                    Deopt              !v    %131.0, Typecheck@0x55bbe3ea4df0[Type#69], %128.1   !
BB95   <- [93]
  val?^ | miss    %95.0 = LdVar              eR    yes, e0.3
  void                    Visible            v     
  val?            %95.2 = Force!             !     %95.0, e0.3   <val?_>
  val?            %95.3 = %95.2
  goto BB36
BB94   <- [93]
  void                    Nop                !     
  goto BB63
BB164   <- [89]
  val?+           %164.0 = CastType           d     dn %89.1   <val?_>
  lgl$#-          %164.1 = CallSafeBuiltin    wed   is.function(%164.0)    <val?_>
  lgl$-           %164.2 = LOr                      %86.4, %164.1
  void                    Branch                   %164.1 -> BB96 (if true) | BB92 (if false)
BB165   <- [89]
  fs              %165.0 = FrameState         R     0x55bbe3eedbe0+1634: [%86.4, <blt is.function>, %89.1], env=e0.3
  void                    Deopt              !v    %165.0, Typecheck@0x55bbe3ea4df0[Type#53], %89.1   !
BB75   <- [73]
  val?^ | miss    %75.0 = LdVar              eR    no, e0.3
  void                    Visible            v     
  val?            %75.2 = Force!             !     %75.0, e0.3   <val?_>
  val?            %75.3 = %75.2
  goto BB36
BB74   <- [73]
  void                    Nop                !     
  goto BB62
BB148   <- [69]
  val?+           %148.0 = CastType           d     dn %69.1   <val?_>
  lgl$#-          %148.1 = CallSafeBuiltin    wed   is.function(%148.0)    <val?_>
  lgl$-           %148.2 = LOr                      %66.4, %148.1
  void                    Branch                   %148.1 -> BB76 (if true) | BB72 (if false)
BB149   <- [69]
  fs              %149.0 = FrameState         R     0x55bbe3eedbe0+1203: [%66.4, <blt is.function>, %69.1], env=e0.3
  void                    Deopt              !v    %149.0, Typecheck@0x55bbe3ea4df0[Type#38], %69.1   !
BB45   <- [130]
  (cls|spec|blt)  %45.0 = LdFun              !v    rep, <0x55bbe1e349b0>, e0.3
  prom-           %45.1 = MkArg                    unboundValue, ifelse[0x55bbe8867d70]_p5, e0.3
  prom-           %45.2 = MkArg                    unboundValue, ifelse[0x55bbe8867d70]_p6, e0.3
  val?            %45.3 = NamedCall          !v    %45.0(%45.1, length.out=%45.2) e0.3   <str->
  lgl$#-          %45.4 = IsType                   %45.3 isA val+   <true>
  lgl$#-          %45.5 = IsType                   %45.3 isA val?-
  void                    Branch                   %45.4 -> BB136 (if true) | BB137 (if false)
BB26   <- [130]
  void                    Nop                !     
  goto BB27
BB96   <- [164]
  (cls|spec|blt)  %96.0 = LdFun              !v    identical, e0.3
  fs              %96.1 = FrameState         R     0x55bbe3eedbe0+1673: [%86.4, %164.1, %96.0], env=e0.3
  void                    Deopt              !v    %96.1, DeadCall@0x55bbe3ea4df0[Call#18], %96.0   !
BB92   <- [164]
  void                    Nop                !     
  lgl$-           %92.1 = %164.2
  goto BB93
BB76   <- [148]
  (cls|spec|blt)  %76.0 = LdFun              !v    identical, e0.3
  fs              %76.1 = FrameState         R     0x55bbe3eedbe0+1242: [%66.4, %148.1, %76.0], env=e0.3
  void                    Deopt              !v    %76.1, DeadCall@0x55bbe3ea4df0[Call#13], %76.0   !
BB72   <- [148]
  void                    Nop                !     
  lgl$-           %72.1 = %148.2
  goto BB73
BB136   <- [45]
  val?^ | miss    %136.0 = LdVar              eR    ypos, e0.3
  lgl$#-          %136.1 = IsType                   %136.0 isA int-
  void                    Branch                   %136.1 -> BB138 (if true) | BB139 (if false)
BB137   <- [45]
  void                    Nop                !     
  lgl$#-          %137.1 = %45.4
  dr              %137.2 = DeadBranchReached@0x55bbe3ea4df0[Test#14]
  goto BB46
BB27   <- [26, 152]
  val?^ | miss    %27.0 = LdVar              eR    length, e0.3
  lgl$#-          %27.1 = Identical                <blt length>, %27.0   <true>
  void                    Branch                   %27.1 -> BB142 (if true) | BB143 (if false)
BB138   <- [136]
  int-            %138.0 = CastType           d     dn %136.0
  void                    Branch                   %45.5 -> BB140 (if true) | BB141 (if false)
BB139   <- [136]
  void                    Nop                !     
  val?^ | miss    %139.1 = %136.0
  dr              %139.2 = Typecheck@0x55bbe3ea4df0[Type#75]
  goto BB46
BB46   <- [137, 139, 141]
  val?^ | miss    %46.0 = Phi                      %137.1:BB137, %139.1:BB139, %141.1:BB141
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %137.2:BB137, %139.2:BB139, %141.2:BB141
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x55bbe3eedbe0+2137: [%45.3], env=e0.3
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
BB142   <- [27]
  val?^ | miss    %142.0 = LdVar              eR    npos, e0.3
  lgl$#-          %142.1 = IsType                   %142.0 isA int-
  void                    Branch                   %142.1 -> BB144 (if true) | BB145 (if false)
BB143   <- [27]
  void                    Nop                !     
  lgl$#-          %143.1 = %27.1
  dr              %143.2 = DeadBranchReached@0x55bbe3ea4df0[Test#15]
  goto BB28
BB140   <- [138]
  val?-           %140.0 = CastType           d     dn %45.3   <str->
  val?            %140.1 = Extract1_1D        wed   %140.0, %138.0, elided   <str->
  lgl$#-          %140.2 = IsType                   %140.1 isA val?-
  val?^ | miss    %140.3 = LdVar              eR    ans !upd, e0.3
  lgl$#-          %140.4 = IsType                   %140.3 isA lgl-
  void                    Branch                   %140.4 -> BB150 (if true) | BB151 (if false)
BB141   <- [138]
  void                    Nop                !     
  val?            %141.1 = %45.3
  dr              %141.2 = Typecheck@0x55bbe3ea4df0[Type#73]
  goto BB46
BB144   <- [142]
  int-            %144.0 = CastType           d     dn %142.0
  (int|real)$-    %144.1 = CallSafeBuiltin    wed   length(%144.0)    <int$->
  lgl$#-          %144.2 = IsType                   %144.1 isA int$-
  void                    Branch                   %144.2 -> BB146 (if true) | BB147 (if false)
BB145   <- [142]
  void                    Nop                !     
  val?^ | miss    %145.1 = %142.0
  dr              %145.2 = Typecheck@0x55bbe3ea4df0[Type#80]
  goto BB28
BB28   <- [143, 145]
  val?^ | miss    %28.0 = Phi                      %143.1:BB143, %145.1:BB145
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %143.2:BB143, %145.2:BB145
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55bbe3eedbe0+2232: [], env=e0.3
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB150   <- [140]
  lgl-            %150.0 = CastType           d     dn %140.3
  void                    Branch                   %140.2 -> BB152 (if true) | BB153 (if false)
BB151   <- [140]
  void                    Nop                !     
  val?^ | miss    %151.1 = %140.3
  dr              %151.2 = Typecheck@0x55bbe3ea4df0[Type#77]
  goto BB48
BB146   <- [144]
  int$-           %146.0 = CastType           d     dn %144.1
  lgl$-           %146.1 = Gt                 d     %146.0, 0L, elided   <lgl$->
  lgl$#-          %146.2 = CheckTrueFalse     e     %146.1
  void                    Branch                   %146.2 -> BB37 (if true) | BB32 (if false)
BB147   <- [144]
  fs              %147.0 = FrameState         R     0x55bbe3eedbe0+2323: [%144.1], env=e0.3
  void                    Deopt              !v    %147.0, Typecheck@0x55bbe3ea4df0[Type#81], %144.1   !
BB152   <- [150]
  val?-           %152.0 = CastType           d     dn %140.1   <str->
  val?-           %152.1 = Subassign1_1D      wed   %152.0, %150.0, %138.0, elided
  void                    StVar              lW    ans, %152.1, e0.3
  goto BB27
BB153   <- [150]
  void                    Nop                !     
  val?            %153.1 = %140.1
  dr              %153.2 = Typecheck@0x55bbe3ea4df0[Type#76]
  goto BB48
BB48   <- [151, 153]
  val?^ | miss    %48.0 = Phi                      %151.1:BB151, %153.1:BB153
  val?^ | miss    %48.1 = %48.0
  dr              %48.2 = Phi                      %151.2:BB151, %153.2:BB153
  dr              %48.3 = %48.2
  fs              %48.4 = FrameState         R     0x55bbe3eedbe0+2188: [%140.1], env=e0.3
  void                    Deopt              !v    %48.4, %48.3, %48.1   !
BB37   <- [146]
  (cls|spec|blt)  %37.0 = LdFun              !v    rep, <0x55bbe1e349b0>, e0.3
  prom-           %37.1 = MkArg                    unboundValue, ifelse[0x55bbe8867d70]_p2, e0.3
  prom-           %37.2 = MkArg                    unboundValue, ifelse[0x55bbe8867d70]_p3, e0.3
  val?            %37.3 = NamedCall          !v    %37.0(%37.1, length.out=%37.2) e0.3   <str>
  lgl$#-          %37.4 = IsType                   %37.3 isA val+
  void                    Branch                   %37.4 -> BB44 (if true) | BB40 (if false)
BB32   <- [146]
  void                    Nop                !     
  goto BB33
BB44   <- [37]
  val?^ | miss    %44.0 = LdVar              eR    npos, e0.3
  lgl$#-          %44.1 = IsType                   %44.0 isA int-
  void                    Branch                   %44.1 -> BB154 (if true) | BB155 (if false)
BB40   <- [37]
  prom-           %40.0 = MkArg                    unboundValue, ifelse[0x55bbe8867d70]_p4, e0.3
  prom-           %40.1 = %40.0
  goto BB41
BB33   <- [32, 160]
  val?^ | miss    %33.0 = LdVar              eR    ans, e0.3
  lgl$#-          %33.1 = IsType                   %33.0 isA val?~- | miss
  void                    Branch                   %33.1 -> BB162 (if true) | BB163 (if false)
BB154   <- [44]
  int-            %154.0 = CastType           d     dn %44.0
  int-            %154.1 = %154.0
  goto BB41
BB155   <- [44]
  fs              %155.0 = FrameState         R     0x55bbe3eedbe0+2396: [%37.3], env=e0.3
  void                    Deopt              !v    %155.0, Typecheck@0x55bbe3ea4df0[Type#87], %44.0   !
BB41   <- [40, 154]
  (int|prom)-     %41.0 = Phi                      %154.1:BB154, %40.1:BB40
  (int|prom)-     %41.1 = %41.0
  val?            %41.2 = Extract1_1D        !v    %37.3, %41.1, e0.3   <str+>
  lgl$#-          %41.3 = IsType                   %41.2 isA val?+
  val?^ | miss    %41.4 = LdVar              eR    ans !upd, e0.3
  lgl$#-          %41.5 = IsType                   %41.4 isA val?~- | miss
  void                    Branch                   %41.5 -> BB156 (if true) | BB157 (if false)
BB162   <- [33]
  val?~- | miss   %162.0 = CastType           d     dn %33.0
  void                    Visible            v     
  val?-           %162.2 = Force!<value>            %162.0,    <str->
  val?-           %162.3 = %162.2
  goto BB36
BB163   <- [33]
  fs              %163.0 = FrameState         R     0x55bbe3eedbe0+2491: [], env=e0.3
  void                    Deopt              !v    %163.0, Typecheck@0x55bbe3ea4df0[Type#91], %33.0   !
BB156   <- [41]
  val?~- | miss   %156.0 = CastType           d     dn %41.4
  val?-           %156.1 = Force!<value>            %156.0,    <(lgl|str)->
  val?^ | miss    %156.2 = LdVar              eR    npos, e0.3
  lgl$#-          %156.3 = IsType                   %156.2 isA int-
  void                    Branch                   %156.3 -> BB158 (if true) | BB159 (if false)
BB157   <- [41]
  void                    Nop                !     
  val?^ | miss    %157.1 = %41.4
  dr              %157.2 = Typecheck@0x55bbe3ea4df0[Type#89]
  goto BB42
BB158   <- [156]
  int-            %158.0 = CastType           d     dn %156.2
  void                    Branch                   %41.3 -> BB160 (if true) | BB161 (if false)
BB159   <- [156]
  void                    Nop                !     
  val?^ | miss    %159.1 = %156.2
  dr              %159.2 = Typecheck@0x55bbe3ea4df0[Type#90]
  goto BB42
BB42   <- [157, 159, 161]
  val?^ | miss    %42.0 = Phi                      %157.1:BB157, %159.1:BB159, %161.1:BB161
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %157.2:BB157, %159.2:BB159, %161.2:BB161
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55bbe3eedbe0+2447: [%41.2], env=e0.3
  void                    Deopt              !v    %42.4, %42.3, %42.1   !
BB160   <- [158]
  val?+           %160.0 = CastType           d     dn %41.2   <str+>
  val?+           %160.1 = Subassign1_1D      wed   %160.0, %156.1, %158.0, elided
  void                    StVar              lW    ans, %160.1, e0.3
  goto BB33
BB161   <- [158]
  void                    Nop                !     
  val?            %161.1 = %41.2
  dr              %161.2 = Typecheck@0x55bbe3ea4df0[Type#88]
  goto BB42
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    no, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    len, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    npos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    yes, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    len, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl->
  void                    Return             l     %0.3

│ ifelse[0x55bbe8867d70]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
