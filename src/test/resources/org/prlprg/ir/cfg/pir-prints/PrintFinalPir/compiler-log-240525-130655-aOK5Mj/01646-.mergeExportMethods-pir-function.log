
┌──────────────────────────────────────────────────────────────────────────────┐
│ .mergeExportMethods[0x55bbe64353e0]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0                      │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
.mergeExportMethods[0x55bbe64353e0]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?            %0.2  = Force!<lazy>             %0.1,    <str+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  lgl$#-          %0.4  = IsType                   %0.2 isA val?+
  void                    Branch                   %0.4 -> BB10 (if true) | BB11 (if false)
BB10   <- [0]
  val?+           %10.0 = CastType           d     dn %0.2   <str+>
  void                    Branch                   %0.3 -> BB12 (if true) | BB13 (if false)
BB11   <- [0]
  void                    Nop                !     
  val?            %11.1 = %0.2
  dr              %11.2 = Typecheck@0x55bbe2ff9988[Type#0]
  goto BB9
BB12   <- [10]
  env             e12.0 = MkEnv              l     new=%0.1, ns=%0.0, parent=R_BaseNamespace, context 1
  prom-           %12.1 = MkArg                    unboundValue, .mergeExportMethods[0x55bbe64353e0]_p0 (!refl), e12.0
  ct              %12.2 = PushContext        lCL   %12.1, ".__M__", startsWith(new, ".__M__"), function(x, prefix) <(rir::DispatchTable*)0x55|..., e12.0
  val?^           %12.3 = CastType                 up %12.1
  env             e12.4 = MkEnv              l     x=%12.3, prefix=".__M__", parent=R_BaseNamespace, context 1
  val?            %12.5 = Force!<lazy>       !vr   %12.3,    <str+>
  val?            %12.6 = CallBuiltin        !v    startsWith(%12.5, ".__M__") e12.4
  val?            %12.7 = PopContext         C     %12.6, %12.2   <lgl->
  lgl$#-          %12.8 = IsType                   %12.7 isA lgl-
  void                    Branch                   %12.8 -> BB14 (if true) | BB15 (if false)
BB13   <- [10]
  void                    Nop                !     
  lgl$#-          %13.1 = %0.3
  dr              %13.2 = DeadBranchReached@0x55bbe2ff9988[Test#0]
  goto BB9
BB9   <- [11, 13]
  val?^ | miss    %9.0  = Phi                      %11.1:BB11, %13.1:BB13
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %11.2:BB11, %13.2:BB13
  dr              %9.3  = %9.2
  env             e9.4  = (MkEnv)            l     new=%0.1, ns=%0.0, parent=R_BaseNamespace, context 1
  fs              %9.5  = FrameState         R     0x55bbe412b1c0+9: [%0.2], env=e9.4
  void                    Deopt              !v    %9.5, %9.3, %9.1
BB14   <- [12]
  lgl-            %14.0 = CastType           d     dn %12.7
  val?            %14.1 = Extract1_1D        wed   %10.0, %14.0, elided   <str+>
  void                    StVar              lW    newMethods, %14.1, e12.0
  val?^ | miss    %14.3 = LdVar              eR    parent.env, e12.0
  lgl$#-          %14.4 = Identical                %14.3, function(env) <(rir::DispatchTable*)0x55bbe42d|...
  void                    Branch                   %14.4 -> BB16 (if true) | BB17 (if false)
BB15   <- [12]
  fs              %15.0 = FrameState         R     0x55bbe412b1c0+82: [%10.0, %12.7], env=e12.0
  void                    Deopt              !v    %15.0, Typecheck@0x55bbe2ff9988[Type#4], %12.7   !
BB16   <- [14]
  val?^ | miss    %16.0 = LdVar              eR    ns, e12.0
  val?            %16.1 = Force!<lazy>       !v    %16.0, e12.0   <env->
  prom-           %16.2 = MkArg                    %16.1, .mergeExportMethods[0x55bbe64353e0]_p1 (!refl), 
  val?            %16.3 = StaticCall         !v    parent.env[0x55bbe5619550](%16.2) e12.0   <env+>
  void                    StVar              lW    nsimports, %16.3, e12.0
  val?^ | miss    %16.5 = LdVar              eR    newMethods, e12.0
  lgl$#-          %16.6 = IsType                   %16.5 isA val?~+ | miss
  void                    Branch                   %16.6 -> BB18 (if true) | BB19 (if false)
BB17   <- [14]
  fs              %17.0 = FrameState         R     0x55bbe412b1c0+103: [], env=e12.0
  void                    Deopt              !v    %17.0, CallTarget@0x55bbe2ff9988[Call#2], %14.3   !
BB18   <- [16]
  val?~+ | miss   %18.0 = CastType           d     dn %16.5
  val?+           %18.1 = Force!<value>            %18.0,    <str+>
  int$-           %18.2 = Length                   %18.1
  int$-           %18.3 = Inc                      0L
  lgl$-           %18.4 = Lt                 d     %18.2, %18.3, elided   <true>
  lgl$#-          %18.5 = Identical                %18.4, true
  void                    Branch                   %18.5 -> BB20 (if true) | BB21 (if false)
BB19   <- [16]
  void                    Nop                !     
  val?^ | miss    %19.1 = %16.5
  dr              %19.2 = Typecheck@0x55bbe2ff9988[Type#8]
  goto BB7
BB20   <- [18]
  void                    Invisible          v     
  void                    Return             l     nil
BB21   <- [18]
  void                    Nop                !     
  lgl$#-          %21.1 = %18.5
  dr              %21.2 = DeadBranchReached@0x55bbe2ff9988[Test#1]
  goto BB7
BB7   <- [19, 21]
  val?^ | miss    %7.0  = Phi                      %19.1:BB19, %21.1:BB21
  val?^ | miss    %7.1  = %7.0
  dr              %7.2  = Phi                      %19.2:BB19, %21.2:BB21
  dr              %7.3  = %7.2
  fs              %7.4  = FrameState         R     0x55bbe412b1c0+149: [], env=e12.0
  void                    Deopt              !v    %7.4, %7.3, %7.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    new, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ns, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ .mergeExportMethods[0x55bbe64353e0]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
