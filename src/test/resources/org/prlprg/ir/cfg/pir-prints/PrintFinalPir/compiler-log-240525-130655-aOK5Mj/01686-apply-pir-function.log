
┌──────────────────────────────────────────────────────────────────────────────┐
│ apply[0x55bbef63aaa0]                                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1,SimpleReal1 miss: 2│
│ Properties:                                                                  │
├────── Final PIR Version
apply[0x55bbef63aaa0]
BB0
  val?^           %0.0  = LdArg                    2
  (real|miss)$~-  %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     X=%0.2, MARGIN=%0.1, FUN=%0.0, ...(miss)=missingArg, simplify(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %0.4  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p1, e0.3
  val?            %0.5  = StaticCall         !v    match.fun[0x55bbefe51aa0](%0.4) e0.3   <(cls|blt)->
  void                    StVar              lW    FUN, %0.5, e0.3
  val?^ | miss    %0.7  = LdVar              eR    isTRUE, e0.3
  lgl$#-          %0.8  = Identical                %0.7, function(x) <(rir::DispatchTable*)0x55bbe3e9b2|...
  void                    Branch                   %0.8 -> BB255 (if true) | BB256 (if false)
BB255   <- [0]
  val?^ | miss    %255.0 = LdVar              eR    simplify, e0.3
  val?            %255.1 = Force!<lazy>       !v    %255.0, e0.3   <lgl$->
  val+            %255.2 = CallSafeBuiltin    wed   is.logical(%255.1)    <lgl$->
  lgl$#-          %255.3 = IsType                   %255.2 isA lgl$-
  void                    Branch                   %255.3 -> BB257 (if true) | BB258 (if false)
BB256   <- [0]
  fs              %256.0 = FrameState         R     0x55bbe3ea69b0+46: [], env=e0.3
  void                    Deopt              !v    %256.0, CallTarget@0x55bbe3ea54e0[Call#1], %0.7   !
BB257   <- [255]
  lgl$-           %257.0 = CastType           d     dn %255.2
  lgl$-           %257.1 = AsLogical                %257.0
  lgl$#-          %257.2 = Identical                %257.1, false
  void                    Branch                   %257.2 -> BB253 (if true) | BB5 (if false)
BB258   <- [255]
  void                    Nop                !     
  val+            %258.1 = %255.2
  dr              %258.2 = Typecheck@0x55bbe33111e8[Type#2]
  goto BB3
BB253   <- [257]
  void                    Nop                !     
  lgl$-           %253.1 = %257.1
  goto BB6
BB5   <- [257]
  lgl$#-          %5.0  = IsType                   %255.1 isA lgl$-
  void                    Branch                   %5.0 -> BB259 (if true) | BB260 (if false)
BB3   <- [258, 260, 262]
  val?^ | miss    %3.0  = Phi                      %258.1:BB258, %260.1:BB260, %262.1:BB262
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %258.2:BB258, %260.2:BB260, %262.2:BB262
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbe3ea69b0+78: [], env=e0.3
  prom-           %3.5  = MkArg                    %255.1, apply[0x55bbef63aaa0]_p2 (!refl), e0.3
  val?~           %3.6  = CastType                 up %3.5
  env             e3.7  = (MkEnv)            l     x=%3.6, parent=R_BaseNamespace, context 0
  fs              %3.8  = FrameState         R     0x55bbe22716d0+91: [%255.2], env=e3.7, next=%3.4
  void                    Deopt              !v    %3.8, %3.3, %3.1   !
BB6   <- [253, 259]
  lgl$-           %6.0  = Phi                      %259.1:BB259, %253.1:BB253
  lgl$-           %6.1  = %6.0
  lgl$-           %6.2  = AsLogical                %6.1
  lgl$#-          %6.3  = Identical                %6.2, false
  void                    Branch                   %6.3 -> BB252 (if true) | BB7 (if false)
BB259   <- [5]
  lgl$-           %259.0 = AsLogical                %257.1
  lgl$-           %259.1 = %259.0
  goto BB6
BB260   <- [5]
  void                    Nop                !     
  val?            %260.1 = %255.1
  dr              %260.2 = Typecheck@0x55bbe33111e8[Type#4]
  goto BB3
BB252   <- [6]
  void                    Nop                !     
  lgl$-           %252.1 = %6.2
  goto BB8
BB7   <- [6]
  lgl$#-          %7.0  = IsType                   %255.1 isA lgl$-
  void                    Branch                   %7.0 -> BB261 (if true) | BB262 (if false)
BB8   <- [252, 261]
  lgl$-           %8.0  = Phi                      %261.5:BB261, %252.1:BB252
  lgl$-           %8.1  = %8.0
  lgl$-           %8.2  = AsLogical                %8.1
  lgl$#-          %8.3  = Identical                %8.2, false
  void                    Branch                   %8.3 -> BB251 (if true) | BB9 (if false)
BB261   <- [7]
  lgl$-           %261.0 = CastType           d     dn %255.1
  lgl$-           %261.1 = CallSafeBuiltin    wed   is.na(%261.0)    <lgl$->
  lgl$-           %261.2 = Not                d     %261.1, elided
  lgl$-           %261.3 = AsLogical                %261.2
  lgl$-           %261.4 = LAnd                     %6.2, %261.3
  lgl$-           %261.5 = %261.4
  goto BB8
BB262   <- [7]
  void                    Nop                !     
  val?            %262.1 = %255.1
  dr              %262.2 = Typecheck@0x55bbe33111e8[Type#8]
  goto BB3
BB251   <- [8]
  void                    Nop                !     
  lgl$-           %251.1 = %8.2
  goto BB10
BB9   <- [8]
  lgl$-           %9.0  = AsLogical          e     %255.1
  lgl$-           %9.1  = LAnd                     %8.2, %9.0
  lgl$-           %9.2  = %9.1
  goto BB10
BB10   <- [251, 9]
  lgl$-           %10.0 = Phi                      %9.2:BB9, %251.1:BB251
  lgl$-           %10.1 = %10.0
  void                    StVar              lW    simplify, %10.1, e0.3
  val?^ | miss    %10.3 = LdVar              eR    length, e0.3
  lgl$#-          %10.4 = Identical                <blt length>, %10.3   <true>
  void                    Branch                   %10.4 -> BB263 (if true) | BB264 (if false)
BB263   <- [10]
  val?^ | miss    %263.0 = LdVar              eR    dim, e0.3
  lgl$#-          %263.1 = Identical                <blt dim>, %263.0   <true>
  void                    Branch                   %263.1 -> BB265 (if true) | BB266 (if false)
BB264   <- [10]
  void                    Nop                !     
  lgl$#-          %264.1 = %10.4
  dr              %264.2 = DeadBranchReached@0x55bbe3ea54e0[Test#0]
  goto BB11
BB265   <- [263]
  val?^ | miss    %265.0 = LdVar              eR    X, e0.3
  val?            %265.1 = Force!<lazy>       !v    %265.0, e0.3   <(lgl|real)+>
  lgl$#-          %265.2 = IsType                   %265.1 isA val?+
  void                    Branch                   %265.2 -> BB267 (if true) | BB268 (if false)
BB266   <- [263]
  void                    Nop                !     
  lgl$#-          %266.1 = %263.1
  dr              %266.2 = DeadBranchReached@0x55bbe3ea54e0[Test#1]
  goto BB11
BB11   <- [264, 266]
  val?^ | miss    %11.0 = Phi                      %264.1:BB264, %266.1:BB266
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %264.2:BB264, %266.2:BB266
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55bbe3ea69b0+92: [], env=e0.3
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB267   <- [265]
  val?+           %267.0 = CastType           d     dn %265.1   <(lgl|real)+>
  val+            %267.1 = CallSafeBuiltin    wed   dim(%267.0)    <int->
  (int|real)$-    %267.2 = CallSafeBuiltin    wed   length(%267.1)    <int$->
  lgl$#-          %267.3 = IsType                   %267.2 isA int$-
  void                    Branch                   %267.3 -> BB269 (if true) | BB270 (if false)
BB268   <- [265]
  fs              %268.0 = FrameState         R     0x55bbe3ea69b0+221: [<blt length>, <blt dim>, %265.1], env=e0.3
  void                    Deopt              !v    %268.0, Typecheck@0x55bbe3ea54e0[Type#7], %265.1   !
BB269   <- [267]
  int$-           %269.0 = CastType           d     dn %267.2
  void                    StVar              lW    dl, %269.0, e0.3
  lgl$-           %269.2 = Not                d     %269.0, elided
  lgl$#-          %269.3 = CheckTrueFalse     e     %269.2
  void                    Branch                   %269.3 -> BB250 (if true) | BB19 (if false)
BB270   <- [267]
  fs              %270.0 = FrameState         R     0x55bbe3ea69b0+265: [%267.2], env=e0.3
  void                    Deopt              !v    %270.0, Typecheck@0x55bbe3ea54e0[Type#9], %267.2   !
BB250   <- [269]
  (cls|spec|blt)  %250.0 = LdFun              !v    stop, e0.3
  fs              %250.1 = FrameState         R     0x55bbe3ea69b0+310: [%250.0], env=e0.3
  void                    Deopt              !v    %250.1, DeadCall@0x55bbe3ea54e0[Call#5], %250.0   !
BB19   <- [269]
  val?^ | miss    %19.0 = LdVar              eR    is.object, e0.3
  lgl$#-          %19.1 = Identical                <blt is.object>, %19.0   <true>
  void                    Branch                   %19.1 -> BB271 (if true) | BB272 (if false)
BB271   <- [19]
  val?^ | miss    %271.0 = LdVar              eR    X, e0.3
  val?            %271.1 = Force!<wrapped>    !v    %271.0, e0.3   <(lgl|real)+>
  lgl$#-          %271.2 = CallSafeBuiltin    wed   is.object(%271.1)    <lgl$->
  void                    Branch                   %271.2 -> BB245 (if true) | BB22 (if false)
BB272   <- [19]
  fs              %272.0 = FrameState         R     0x55bbe3ea69b0+279: [], env=e0.3
  void                    Deopt              !v    %272.0, DeadBranchReached@0x55bbe3ea54e0[Test#2], %19.1   !
BB245   <- [271]
  val?^ | miss    %245.0 = LdVar              eR    dl, e0.3
  val?            %245.1 = Force!             !v    %245.0, e0.3   <val?_>
  lgl$#-          %245.2 = IsType                   %245.1 isA val?+
  void                    Branch                   %245.2 -> BB273 (if true) | BB274 (if false)
BB22   <- [271]
  val?^ | miss    %22.0 = LdVar              eR    dim, e0.3
  lgl$#-          %22.1 = Identical                <blt dim>, %22.0   <true>
  void                    Branch                   %22.1 -> BB275 (if true) | BB276 (if false)
BB273   <- [245]
  val?+           %273.0 = CastType           d     dn %245.1   <val?_>
  lgl             %273.1 = Eq                 wed   %273.0, 2L, elided   <val?_>
  lgl$#-          %273.2 = CheckTrueFalse     we    %273.1
  void                    Branch                   %273.2 -> BB249 (if true) | BB248 (if false)
BB274   <- [245]
  fs              %274.0 = FrameState         R     0x55bbe3ea69b0+454: [%245.1], env=e0.3
  void                    Deopt              !v    %274.0, Typecheck@0x55bbe3ea54e0[Type#14], %245.1   !
BB275   <- [22]
  val?^ | miss    %275.0 = LdVar              eR    X, e0.3
  val?            %275.1 = Force!<wrapped>    !v    %275.0, e0.3   <(lgl|real)+>
  lgl$#-          %275.2 = IsType                   %275.1 isA val?+
  void                    Branch                   %275.2 -> BB277 (if true) | BB278 (if false)
BB276   <- [22]
  fs              %276.0 = FrameState         R     0x55bbe3ea69b0+429: [%271.2], env=e0.3
  void                    Deopt              !v    %276.0, DeadBranchReached@0x55bbe3ea54e0[Test#3], %22.1   !
BB249   <- [273]
  (cls|spec|blt)  %249.0 = LdFun              !v    as.matrix, e0.3
  fs              %249.1 = FrameState         R     0x55bbe3ea69b0+524: [%249.0], env=e0.3
  void                    Deopt              !v    %249.1, DeadCall@0x55bbe3ea54e0[Call#8], %249.0   !
BB248   <- [273]
  (cls|spec|blt)  %248.0 = LdFun              !v    as.array, e0.3
  fs              %248.1 = FrameState         R     0x55bbe3ea69b0+482: [%248.0], env=e0.3
  void                    Deopt              !v    %248.1, DeadCall@0x55bbe3ea54e0[Call#7], %248.0   !
BB277   <- [275]
  val?+           %277.0 = CastType           d     dn %275.1   <(lgl|real)+>
  val+            %277.1 = CallSafeBuiltin    wed   dim(%277.0)    <int->
  void                    StVar              lW    d, %277.1, e0.3
  val?^ | miss    %277.3 = LdVar              eR    dimnames, e0.3
  lgl$#-          %277.4 = Identical                <blt dimnames>, %277.3   <true>
  void                    Branch                   %277.4 -> BB279 (if true) | BB280 (if false)
BB278   <- [275]
  fs              %278.0 = FrameState         R     0x55bbe3ea69b0+634: [<blt dim>, %275.1], env=e0.3
  void                    Deopt              !v    %278.0, Typecheck@0x55bbe3ea54e0[Type#21], %275.1   !
BB279   <- [277]
  val?^ | miss    %279.0 = LdVar              eR    X, e0.3
  val?            %279.1 = Force!<wrapped>    !v    %279.0, e0.3   <(lgl|real)+>
  val?            %279.2 = CallBuiltin        !v    dimnames(%279.1) e0.3   <(nil|vec)->
  void                    StVar              lW    dn, %279.2, e0.3
  val?^ | miss    %279.4 = LdVar              eR    seq_len, e0.3
  lgl$#-          %279.5 = Identical                <blt seq_len>, %279.4   <true>
  void                    Branch                   %279.5 -> BB281 (if true) | BB282 (if false)
BB280   <- [277]
  fs              %280.0 = FrameState         R     0x55bbe3ea69b0+670: [], env=e0.3
  void                    Deopt              !v    %280.0, DeadBranchReached@0x55bbe3ea54e0[Test#4], %277.4   !
BB281   <- [279]
  val?^ | miss    %281.0 = LdVar              eR    dl, e0.3
  lgl$#-          %281.1 = IsType                   %281.0 isA int$-
  void                    Branch                   %281.1 -> BB283 (if true) | BB284 (if false)
BB282   <- [279]
  void                    Nop                !     
  lgl$#-          %282.1 = %279.5
  dr              %282.2 = DeadBranchReached@0x55bbe3ea54e0[Test#5]
  goto BB27
BB283   <- [281]
  int$-           %283.0 = CastType           d     dn %281.0
  val+            %283.1 = CallSafeBuiltin    wed   seq_len(%283.0)    <int->
  void                    StVar              lW    ds, %283.1, e0.3
  val?^ | miss    %283.3 = LdVar              eR    is.character, e0.3
  lgl$#-          %283.4 = Identical                <blt is.character>, %283.3   <true>
  void                    Branch                   %283.4 -> BB285 (if true) | BB286 (if false)
BB284   <- [281]
  void                    Nop                !     
  val?^ | miss    %284.1 = %281.0
  dr              %284.2 = Typecheck@0x55bbe3ea54e0[Type#27]
  goto BB27
BB27   <- [282, 284]
  val?^ | miss    %27.0 = Phi                      %282.1:BB282, %284.1:BB284
  val?^ | miss    %27.1 = %27.0
  dr              %27.2 = Phi                      %282.2:BB282, %284.2:BB284
  dr              %27.3 = %27.2
  fs              %27.4 = FrameState         R     0x55bbe3ea69b0+775: [], env=e0.3
  void                    Deopt              !v    %27.4, %27.3, %27.1   !
BB285   <- [283]
  val?^ | miss    %285.0 = LdVar              eR    MARGIN, e0.3
  val?            %285.1 = Force!<value>      !v    %285.0, e0.3   <(int|real)$->
  lgl$#-          %285.2 = CallSafeBuiltin    wed   is.character(%285.1)    <lgl$->
  void                    Branch                   %285.2 -> BB238 (if true) | BB33 (if false)
BB286   <- [283]
  fs              %286.0 = FrameState         R     0x55bbe3ea69b0+880: [], env=e0.3
  void                    Deopt              !v    %286.0, DeadBranchReached@0x55bbe3ea54e0[Test#6], %283.4   !
BB238   <- [285]
  val?^ | miss    %238.0 = LdVar              eR    names, e0.3
  lgl$#-          %238.1 = Identical                <blt names>, %238.0   <@?>
  void                    Branch                   %238.1 -> BB240 (if true) | BB239 (if false)
BB33   <- [285]
  val?^ | miss    %33.0 = LdVar              eR    d, e0.3
  lgl$#-          %33.1 = IsType                   %33.0 isA int-
  void                    Branch                   %33.1 -> BB287 (if true) | BB288 (if false)
BB240   <- [238]
  val?^ | miss    %240.0 = LdVar              eR    dn, e0.3
  val?            %240.1 = Force!             !v    %240.0, e0.3   <val?_>
  lgl$#-          %240.2 = IsType                   %240.1 isA val?+
  void                    Branch                   %240.2 -> BB291 (if true) | BB292 (if false)
BB239   <- [238]
  (cls|spec|blt)  %239.0 = LdFun              !v    names, e0.3
  fs              %239.1 = FrameState         R     0x55bbe3ea69b0+1015: [%239.0], env=e0.3
  void                    Deopt              !v    %239.1, DeadCall@0x55bbe3ea54e0[Call#13], %239.0   !
BB287   <- [33]
  int-            %287.0 = CastType           d     dn %33.0
  val?^ | miss    %287.1 = LdVar              eR    MARGIN, e0.3
  val?            %287.2 = Force!<value>      !v    %287.1, e0.3   <(int|real)$->
  lgl$#-          %287.3 = IsType                   %287.2 isA val?-
  void                    Branch                   %287.3 -> BB289 (if true) | BB290 (if false)
BB288   <- [33]
  fs              %288.0 = FrameState         R     0x55bbe3ea69b0+971: [%285.2], env=e0.3
  void                    Deopt              !v    %288.0, Typecheck@0x55bbe3ea54e0[Type#41], %33.0   !
BB291   <- [240]
  val?+           %291.0 = CastType           d     dn %240.1   <val?_>
  val+            %291.1 = CallSafeBuiltin    wed   names(%291.0)    <val?_>
  lgl$-           %291.2 = Is                       %291.1, NULL
  void                    StVar              lW    dnn, %291.1, e0.3
  lgl$#-          %291.4 = CheckTrueFalse     e     %291.2
  void                    Branch                   %291.4 -> BB244 (if true) | BB243 (if false)
BB292   <- [240]
  fs              %292.0 = FrameState         R     0x55bbe3ea69b0+1056: [<blt names>, %240.1], env=e0.3
  void                    Deopt              !v    %292.0, Typecheck@0x55bbe3ea54e0[Type#33], %240.1   !
BB289   <- [287]
  val?-           %289.0 = CastType           d     dn %287.2   <(int|real)$->
  (int|real|complex)- %289.1 = Minus              wed   %289.0, elided
  int-            %289.2 = Extract1_1D        wed   %287.0, %289.1, elided   <int$->
  lgl$#-          %289.3 = IsType                   %289.2 isA int$-
  void                    Branch                   %289.3 -> BB293 (if true) | BB294 (if false)
BB290   <- [287]
  fs              %290.0 = FrameState         R     0x55bbe3ea69b0+1388: [%287.0, %287.2], env=e0.3
  void                    Deopt              !v    %290.0, Typecheck@0x55bbe3ea54e0[Type#43], %287.2   !
BB244   <- [291]
  (cls|spec|blt)  %244.0 = LdFun              !v    stop, e0.3
  fs              %244.1 = FrameState         R     0x55bbe3ea69b0+1115: [%244.0], env=e0.3
  void                    Deopt              !v    %244.1, DeadCall@0x55bbe3ea54e0[Call#14], %244.0   !
BB243   <- [291]
  (cls|spec|blt)  %243.0 = LdFun              !v    match, e0.3
  fs              %243.1 = FrameState         R     0x55bbe3ea69b0+1148: [%243.0], env=e0.3
  void                    Deopt              !v    %243.1, DeadCall@0x55bbe3ea54e0[Call#15], %243.0   !
BB293   <- [289]
  int$-           %293.0 = CastType           d     dn %289.2
  void                    StVar              lW    d.call, %293.0, e0.3
  val?^ | miss    %293.2 = LdVar              eR    d, e0.3
  lgl$#-          %293.3 = IsType                   %293.2 isA int-
  void                    Branch                   %293.3 -> BB295 (if true) | BB296 (if false)
BB294   <- [289]
  fs              %294.0 = FrameState         R     0x55bbe3ea69b0+1395: [%289.2], env=e0.3
  void                    Deopt              !v    %294.0, Typecheck@0x55bbe3ea54e0[Type#44], %289.2   !
BB295   <- [293]
  int-            %295.0 = CastType           d     dn %293.2
  val?^ | miss    %295.1 = LdVar              eR    MARGIN, e0.3
  val?            %295.2 = Force!<value>      !v    %295.1, e0.3   <(int|real)$->
  lgl$#-          %295.3 = IsType                   %295.2 isA val?-
  void                    Branch                   %295.3 -> BB297 (if true) | BB298 (if false)
BB296   <- [293]
  fs              %296.0 = FrameState         R     0x55bbe3ea69b0+1410: [], env=e0.3
  void                    Deopt              !v    %296.0, Typecheck@0x55bbe3ea54e0[Type#45], %293.2   !
BB297   <- [295]
  val?-           %297.0 = CastType           d     dn %295.2   <(int|real)$->
  int-            %297.1 = Extract1_1D        wed   %295.0, %297.0, elided   <int$->
  lgl$#-          %297.2 = IsType                   %297.1 isA int$-
  void                    Branch                   %297.2 -> BB299 (if true) | BB300 (if false)
BB298   <- [295]
  fs              %298.0 = FrameState         R     0x55bbe3ea69b0+1464: [%295.0, %295.2], env=e0.3
  void                    Deopt              !v    %298.0, Typecheck@0x55bbe3ea54e0[Type#47], %295.2   !
BB299   <- [297]
  int$-           %299.0 = CastType           d     dn %297.1
  void                    StVar              lW    d.ans, %299.0, e0.3
  val?^ | miss    %299.2 = LdVar              eR    anyNA, e0.3
  lgl$#-          %299.3 = Identical                <blt anyNA>, %299.2   <true>
  void                    Branch                   %299.3 -> BB301 (if true) | BB302 (if false)
BB300   <- [297]
  fs              %300.0 = FrameState         R     0x55bbe3ea69b0+1470: [%297.1], env=e0.3
  void                    Deopt              !v    %300.0, Typecheck@0x55bbe3ea54e0[Type#48], %297.1   !
BB301   <- [299]
  val?^ | miss    %301.0 = LdVar              eR    d.call, e0.3
  lgl$#-          %301.1 = IsType                   %301.0 isA int$-
  void                    Branch                   %301.1 -> BB303 (if true) | BB304 (if false)
BB302   <- [299]
  void                    Nop                !     
  lgl$#-          %302.1 = %299.3
  dr              %302.2 = DeadBranchReached@0x55bbe3ea54e0[Test#11]
  goto BB44
BB303   <- [301]
  int$-           %303.0 = CastType           d     dn %301.0
  val+            %303.1 = CallSafeBuiltin    wed   anyNA(%303.0)    <lgl$->
  lgl$#-          %303.2 = IsType                   %303.1 isA lgl$-
  void                    Branch                   %303.2 -> BB305 (if true) | BB306 (if false)
BB304   <- [301]
  void                    Nop                !     
  val?^ | miss    %304.1 = %301.0
  dr              %304.2 = Typecheck@0x55bbe3ea54e0[Type#50]
  goto BB44
BB44   <- [302, 304]
  val?^ | miss    %44.0 = Phi                      %302.1:BB302, %304.1:BB304
  val?^ | miss    %44.1 = %44.0
  dr              %44.2 = Phi                      %302.2:BB302, %304.2:BB304
  dr              %44.3 = %44.2
  fs              %44.4 = FrameState         R     0x55bbe3ea69b0+1485: [], env=e0.3
  void                    Deopt              !v    %44.4, %44.3, %44.1   !
BB305   <- [303]
  lgl$-           %305.0 = CastType           d     dn %303.1
  lgl$-           %305.1 = AsLogical                %305.0
  lgl$#-          %305.2 = Identical                %305.1, true
  void                    Branch                   %305.2 -> BB237 (if true) | BB48 (if false)
BB306   <- [303]
  fs              %306.0 = FrameState         R     0x55bbe3ea69b0+1576: [%303.1], env=e0.3
  void                    Deopt              !v    %306.0, Typecheck@0x55bbe3ea54e0[Type#51], %303.1   !
BB237   <- [305]
  void                    Nop                !     
  lgl$-           %237.1 = %305.1
  goto BB51
BB48   <- [305]
  val+            %48.0 = CallSafeBuiltin    wed   anyNA(%299.0)    <lgl$->
  lgl$#-          %48.1 = IsType                   %48.0 isA lgl$-
  void                    Branch                   %48.1 -> BB309 (if true) | BB310 (if false)
BB51   <- [237, 309]
  lgl$-           %51.0 = Phi                      %309.3:BB309, %237.1:BB237
  lgl$-           %51.1 = %51.0
  lgl$#-          %51.2 = CheckTrueFalse     e     %51.1
  void                    Branch                   %51.2 -> BB236 (if true) | BB54 (if false)
BB309   <- [48]
  lgl$-           %309.0 = CastType           d     dn %48.0
  lgl$-           %309.1 = AsLogical                %309.0
  lgl$-           %309.2 = LOr                      %305.1, %309.1
  lgl$-           %309.3 = %309.2
  goto BB51
BB310   <- [48]
  fs              %310.0 = FrameState         R     0x55bbe3ea69b0+1679: [%305.1, %48.0], env=e0.3
  void                    Deopt              !v    %310.0, Typecheck@0x55bbe3ea54e0[Type#54], %48.0   !
BB236   <- [51]
  (cls|spec|blt)  %236.0 = LdFun              !v    stop, e0.3
  fs              %236.1 = FrameState         R     0x55bbe3ea69b0+1702: [%236.0], env=e0.3
  void                    Deopt              !v    %236.1, DeadCall@0x55bbe3ea54e0[Call#20], %236.0   !
BB54   <- [51]
  val?^ | miss    %54.0 = LdVar              eR    ds, e0.3
  lgl$#-          %54.1 = IsType                   %54.0 isA int-
  void                    Branch                   %54.1 -> BB307 (if true) | BB308 (if false)
BB307   <- [54]
  int-            %307.0 = CastType           d     dn %54.0
  val?^ | miss    %307.1 = LdVar              eR    MARGIN, e0.3
  val?            %307.2 = Force!<value>      !v    %307.1, e0.3   <(int|real)$->
  lgl$#-          %307.3 = IsType                   %307.2 isA val?-
  void                    Branch                   %307.3 -> BB311 (if true) | BB312 (if false)
BB308   <- [54]
  fs              %308.0 = FrameState         R     0x55bbe3ea69b0+1686: [%51.1], env=e0.3
  void                    Deopt              !v    %308.0, Typecheck@0x55bbe3ea54e0[Type#55], %54.0   !
BB311   <- [307]
  val?-           %311.0 = CastType           d     dn %307.2   <(int|real)$->
  (int|real|complex)- %311.1 = Minus              wed   %311.0, elided
  int-            %311.2 = Extract1_1D        wed   %307.0, %311.1, elided   <int$->
  lgl$#-          %311.3 = IsType                   %311.2 isA int$-
  void                    Branch                   %311.3 -> BB313 (if true) | BB314 (if false)
BB312   <- [307]
  fs              %312.0 = FrameState         R     0x55bbe3ea69b0+1784: [%307.0, %307.2], env=e0.3
  void                    Deopt              !v    %312.0, Typecheck@0x55bbe3ea54e0[Type#57], %307.2   !
BB313   <- [311]
  int$-           %313.0 = CastType           d     dn %311.2
  void                    StVar              lW    s.call, %313.0, e0.3
  val?^ | miss    %313.2 = LdVar              eR    ds, e0.3
  lgl$#-          %313.3 = IsType                   %313.2 isA int-
  void                    Branch                   %313.3 -> BB315 (if true) | BB316 (if false)
BB314   <- [311]
  fs              %314.0 = FrameState         R     0x55bbe3ea69b0+1791: [%311.2], env=e0.3
  void                    Deopt              !v    %314.0, Typecheck@0x55bbe3ea54e0[Type#58], %311.2   !
BB315   <- [313]
  int-            %315.0 = CastType           d     dn %313.2
  val?^ | miss    %315.1 = LdVar              eR    MARGIN, e0.3
  val?            %315.2 = Force!<value>      !v    %315.1, e0.3   <(int|real)$->
  lgl$#-          %315.3 = IsType                   %315.2 isA val?-
  void                    Branch                   %315.3 -> BB317 (if true) | BB318 (if false)
BB316   <- [313]
  fs              %316.0 = FrameState         R     0x55bbe3ea69b0+1806: [], env=e0.3
  void                    Deopt              !v    %316.0, Typecheck@0x55bbe3ea54e0[Type#59], %313.2   !
BB317   <- [315]
  val?-           %317.0 = CastType           d     dn %315.2   <(int|real)$->
  int-            %317.1 = Extract1_1D        wed   %315.0, %317.0, elided   <int$->
  lgl$#-          %317.2 = IsType                   %317.1 isA int$-
  void                    Branch                   %317.2 -> BB319 (if true) | BB320 (if false)
BB318   <- [315]
  fs              %318.0 = FrameState         R     0x55bbe3ea69b0+1860: [%315.0, %315.2], env=e0.3
  void                    Deopt              !v    %318.0, Typecheck@0x55bbe3ea54e0[Type#61], %315.2   !
BB319   <- [317]
  int$-           %319.0 = CastType           d     dn %317.1
  void                    StVar              lW    s.ans, %319.0, e0.3
  val?^ | miss    %319.2 = LdVar              eR    dn, e0.3
  lgl$#-          %319.3 = IsType                   %319.2 isA val?~- | miss
  void                    Branch                   %319.3 -> BB321 (if true) | BB322 (if false)
BB320   <- [317]
  fs              %320.0 = FrameState         R     0x55bbe3ea69b0+1866: [%317.1], env=e0.3
  void                    Deopt              !v    %320.0, Typecheck@0x55bbe3ea54e0[Type#62], %317.1   !
BB321   <- [319]
  val?~- | miss   %321.0 = CastType           d     dn %319.2
  val?-           %321.1 = Force!<value>            %321.0,    <(nil|vec)->
  lgl$#-          %321.2 = IsType                   %321.1 isA val+   <true>
  void                    Branch                   %321.2 -> BB323 (if true) | BB324 (if false)
BB322   <- [319]
  void                    Nop                !     
  val?^ | miss    %322.1 = %319.2
  dr              %322.2 = Typecheck@0x55bbe3ea54e0[Type#63]
  goto BB65
BB323   <- [321]
  val?^ | miss    %323.0 = LdVar              eR    MARGIN, e0.3
  val?            %323.1 = Force!<value>      !v    %323.0, e0.3   <(int|real)$->
  lgl$#-          %323.2 = IsType                   %323.1 isA val?-
  void                    Branch                   %323.2 -> BB325 (if true) | BB326 (if false)
BB324   <- [321]
  void                    Nop                !     
  lgl$#-          %324.1 = %321.2
  dr              %324.2 = DeadBranchReached@0x55bbe3ea54e0[Test#15]
  goto BB65
BB65   <- [322, 324]
  val?^ | miss    %65.0 = Phi                      %322.1:BB322, %324.1:BB324
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %322.2:BB322, %324.2:BB324
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x55bbe3ea69b0+1881: [], env=e0.3
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB325   <- [323]
  val?-           %325.0 = CastType           d     dn %323.1   <(int|real)$->
  (int|real|complex)- %325.1 = Minus              wed   %325.0, elided
  val?            %325.2 = Extract1_1D        wed   %321.1, %325.1, elided   <(nil|vec)->
  void                    StVar              lW    dn.call, %325.2, e0.3
  val?^ | miss    %325.4 = LdVar              eR    dn, e0.3
  lgl$#-          %325.5 = IsType                   %325.4 isA val?~- | miss
  void                    Branch                   %325.5 -> BB327 (if true) | BB328 (if false)
BB326   <- [323]
  fs              %326.0 = FrameState         R     0x55bbe3ea69b0+1935: [%321.1, %323.1], env=e0.3
  void                    Deopt              !v    %326.0, Typecheck@0x55bbe3ea54e0[Type#65], %323.1   !
BB327   <- [325]
  val?~- | miss   %327.0 = CastType           d     dn %325.4
  val?-           %327.1 = Force!<value>            %327.0,    <(nil|vec)->
  lgl$#-          %327.2 = IsType                   %327.1 isA val+   <true>
  void                    Branch                   %327.2 -> BB329 (if true) | BB330 (if false)
BB328   <- [325]
  void                    Nop                !     
  val?^ | miss    %328.1 = %325.4
  dr              %328.2 = Typecheck@0x55bbe3ea54e0[Type#67]
  goto BB69
BB329   <- [327]
  val?^ | miss    %329.0 = LdVar              eR    MARGIN, e0.3
  val?            %329.1 = Force!<value>      !v    %329.0, e0.3   <(int|real)$->
  lgl$#-          %329.2 = IsType                   %329.1 isA val?-
  void                    Branch                   %329.2 -> BB331 (if true) | BB332 (if false)
BB330   <- [327]
  void                    Nop                !     
  lgl$#-          %330.1 = %327.2
  dr              %330.2 = DeadBranchReached@0x55bbe3ea54e0[Test#16]
  goto BB69
BB69   <- [328, 330]
  val?^ | miss    %69.0 = Phi                      %328.1:BB328, %330.1:BB330
  val?^ | miss    %69.1 = %69.0
  dr              %69.2 = Phi                      %328.2:BB328, %330.2:BB330
  dr              %69.3 = %69.2
  fs              %69.4 = FrameState         R     0x55bbe3ea69b0+1957: [], env=e0.3
  void                    Deopt              !v    %69.4, %69.3, %69.1   !
BB331   <- [329]
  val?-           %331.0 = CastType           d     dn %329.1   <(int|real)$->
  val?            %331.1 = Extract1_1D        wed   %327.1, %331.0, elided   <(nil|vec)->
  void                    StVar              lW    dn.ans, %331.1, e0.3
  val?^ | miss    %331.3 = LdVar              eR    prod, e0.3
  lgl$#-          %331.4 = Identical                <blt prod>, %331.3   <true>
  void                    Branch                   %331.4 -> BB333 (if true) | BB334 (if false)
BB332   <- [329]
  fs              %332.0 = FrameState         R     0x55bbe3ea69b0+2011: [%327.1, %329.1], env=e0.3
  void                    Deopt              !v    %332.0, Typecheck@0x55bbe3ea54e0[Type#69], %329.1   !
BB333   <- [331]
  val?^ | miss    %333.0 = LdVar              eR    d.ans, e0.3
  lgl$#-          %333.1 = IsType                   %333.0 isA int$-
  void                    Branch                   %333.1 -> BB335 (if true) | BB336 (if false)
BB334   <- [331]
  void                    Nop                !     
  lgl$#-          %334.1 = %331.4
  dr              %334.2 = DeadBranchReached@0x55bbe3ea54e0[Test#17]
  goto BB73
BB335   <- [333]
  int$-           %335.0 = CastType           d     dn %333.0
  real$-          %335.1 = CallSafeBuiltin    wed   prod(%335.0)    <real$->
  void                    StVar              lW    d2, %335.1, e0.3
  lgl$-           %335.3 = Eq                 d     %335.1, 0L, elided   <lgl$->
  lgl$#-          %335.4 = CheckTrueFalse     e     %335.3
  void                    Branch                   %335.4 -> BB235 (if true) | BB77 (if false)
BB336   <- [333]
  void                    Nop                !     
  val?^ | miss    %336.1 = %333.0
  dr              %336.2 = Typecheck@0x55bbe3ea54e0[Type#72]
  goto BB73
BB73   <- [334, 336]
  val?^ | miss    %73.0 = Phi                      %334.1:BB334, %336.1:BB336
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %334.2:BB334, %336.2:BB336
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x55bbe3ea69b0+2032: [], env=e0.3
  void                    Deopt              !v    %73.4, %73.3, %73.1   !
BB235   <- [335]
  (cls|spec|blt)  %235.0 = LdFun              !v    array, e0.3
  fs              %235.1 = FrameState         R     0x55bbe3ea69b0+2179: [%235.0], env=e0.3
  void                    Deopt              !v    %235.1, DeadCall@0x55bbe3ea54e0[Call#22], %235.0   !
BB77   <- [335]
  val?^ | miss    %77.0 = LdVar              eR    aperm, e0.3
  lgl$#-          %77.1 = Identical                %77.0, function(a, perm, ...) <(rir::DispatchTable*)0|...
  void                    Branch                   %77.1 -> BB337 (if true) | BB338 (if false)
BB337   <- [77]
  prom-           %337.0 = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p4, e0.3
  val?^ | miss    %337.1 = LdVar              eR    X, e0.3
  val?            %337.2 = Force!<wrapped>    !v    %337.1, e0.3   <(lgl|real)+>
  prom-           %337.3 = MkArg                    %337.2, apply[0x55bbef63aaa0]_p3 (!refl), e0.3
  val?            %337.4 = StaticCall         !v    aperm[0x55bbefce3690](%337.3, %337.0) { 0 1 } e0.3   <(lgl|real)+>
  void                    StVar              lW    newX, %337.4, e0.3
  val?^ | miss    %337.6 = LdVar              eR    c, e0.3
  lgl$#-          %337.7 = Identical                <blt c>, %337.6   <true>
  void                    Branch                   %337.7 -> BB339 (if true) | BB340 (if false)
BB338   <- [77]
  fs              %338.0 = FrameState         R     0x55bbe3ea69b0+2137: [], env=e0.3
  void                    Deopt              !v    %338.0, CallTarget@0x55bbe3ea54e0[Call#33], %77.0   !
BB339   <- [337]
  val?^ | miss    %339.0 = LdVar              eR    prod, e0.3
  lgl$#-          %339.1 = Identical                <blt prod>, %339.0   <true>
  void                    Branch                   %339.1 -> BB341 (if true) | BB342 (if false)
BB340   <- [337]
  void                    Nop                !     
  lgl$#-          %340.1 = %337.7
  dr              %340.2 = DeadBranchReached@0x55bbe3ea54e0[Test#23]
  goto BB78
BB341   <- [339]
  val?^ | miss    %341.0 = LdVar              eR    d.call, e0.3
  lgl$#-          %341.1 = IsType                   %341.0 isA int$-
  void                    Branch                   %341.1 -> BB343 (if true) | BB344 (if false)
BB342   <- [339]
  void                    Nop                !     
  lgl$#-          %342.1 = %339.1
  dr              %342.2 = DeadBranchReached@0x55bbe3ea54e0[Test#24]
  goto BB78
BB78   <- [340, 342, 344]
  val?^ | miss    %78.0 = Phi                      %340.1:BB340, %342.1:BB342, %344.1:BB344
  val?^ | miss    %78.1 = %78.0
  dr              %78.2 = Phi                      %340.2:BB340, %342.2:BB342, %344.2:BB344
  dr              %78.3 = %78.2
  fs              %78.4 = FrameState         R     0x55bbe3ea69b0+2690: [], env=e0.3
  void                    Deopt              !v    %78.4, %78.3, %78.1   !
BB343   <- [341]
  int$-           %343.0 = CastType           d     dn %341.0
  real$-          %343.1 = CallSafeBuiltin    wed   prod(%343.0)    <real$->
  val?^ | miss    %343.2 = LdVar              eR    d2, e0.3
  lgl$#-          %343.3 = IsType                   %343.2 isA real$-
  void                    Branch                   %343.3 -> BB345 (if true) | BB346 (if false)
BB344   <- [341]
  void                    Nop                !     
  val?^ | miss    %344.1 = %341.0
  dr              %344.2 = Typecheck@0x55bbe3ea54e0[Type#117]
  goto BB78
BB345   <- [343]
  real$-          %345.0 = CastType           d     dn %343.2
  real-           %345.1 = CallSafeBuiltin    wed   c(%343.1, %345.0)    <real->
  (cls|spec|blt)  %345.2 = LdFun              !v    dim<-, <0x55bbe1e20278>, e0.3
  val?^ | miss    %345.3 = LdVar              eR    newX, e0.3
  lgl$#-          %345.4 = IsType                   %345.3 isA val?~+ | miss
  void                    Branch                   %345.4 -> BB347 (if true) | BB348 (if false)
BB346   <- [343]
  fs              %346.0 = FrameState         R     0x55bbe3ea69b0+2846: [<blt c>, %343.1], env=e0.3
  void                    Deopt              !v    %346.0, Typecheck@0x55bbe3ea54e0[Type#119], %343.2   !
BB347   <- [345]
  val?~+ | miss   %347.0 = CastType           d     dn %345.3
  val?+           %347.1 = Force!<value>            %347.0,    <(lgl|real)+>
  val?            %347.2 = NamedCall          !v    %345.2(%347.1, value=%345.1) e0.3
  void                    StVar              lW    newX, %347.2, e0.3
  val?^ | miss    %347.4 = LdVar              eR    vector, e0.3
  lgl$#-          %347.5 = Identical                %347.4, function(mode="logical", length=0L) <(rir::Dis|...
  void                    Branch                   %347.5 -> BB349 (if true) | BB350 (if false)
BB348   <- [345]
  fs              %348.0 = FrameState         R     0x55bbe3ea69b0+2887: [%345.1], env=e0.3
  void                    Deopt              !v    %348.0, Typecheck@0x55bbe3ea54e0[Type#121], %345.3   !
BB349   <- [347]
  val?^ | miss    %349.0 = LdVar              eR    d2, e0.3
  lgl$#-          %349.1 = IsType                   %349.0 isA real$-
  void                    Branch                   %349.1 -> BB351 (if true) | BB352 (if false)
BB350   <- [347]
  void                    Nop                !     
  val?^ | miss    %350.1 = %347.4
  dr              %350.2 = CallTarget@0x55bbe3ea54e0[Call#39]
  goto BB84
BB351   <- [349]
  real$-          %351.0 = CastType           d     dn %349.0
  vec-            %351.1 = CallSafeBuiltin    wed   vector("list", %351.0)    <vec->
  void                    StVar              lW    ans, %351.1, e0.3
  val?^ | miss    %351.3 = LdVar              eR    length, e0.3
  lgl$#-          %351.4 = Identical                <blt length>, %351.3   <true>
  void                    Branch                   %351.4 -> BB353 (if true) | BB354 (if false)
BB352   <- [349]
  void                    Nop                !     
  val?^ | miss    %352.1 = %349.0
  dr              %352.2 = Typecheck@0x55bbe3ea54e0[Type#122]
  goto BB84
BB84   <- [350, 352]
  val?^ | miss    %84.0 = Phi                      %350.1:BB350, %352.1:BB352
  val?^ | miss    %84.1 = %84.0
  dr              %84.2 = Phi                      %350.2:BB350, %352.2:BB352
  dr              %84.3 = %84.2
  fs              %84.4 = FrameState         R     0x55bbe3ea69b0+2955: [], env=e0.3
  void                    Deopt              !v    %84.4, %84.3, %84.1   !
BB353   <- [351]
  val?^ | miss    %353.0 = LdVar              eR    d.call, e0.3
  lgl$#-          %353.1 = IsType                   %353.0 isA int$-
  void                    Branch                   %353.1 -> BB355 (if true) | BB356 (if false)
BB354   <- [351]
  void                    Nop                !     
  lgl$#-          %354.1 = %351.4
  dr              %354.2 = DeadBranchReached@0x55bbe3ea54e0[Test#25]
  goto BB86
BB355   <- [353]
  val?^ | miss    %355.0 = LdVar              eR    dn.call, e0.3
  lgl$#-          %355.1 = IsType                   %355.0 isA val?~- | miss
  void                    Branch                   %355.1 -> BB357 (if true) | BB358 (if false)
BB356   <- [353]
  void                    Nop                !     
  val?^ | miss    %356.1 = %353.0
  dr              %356.2 = Typecheck@0x55bbe3ea54e0[Type#125]
  goto BB86
BB86   <- [354, 356, 358]
  val?^ | miss    %86.0 = Phi                      %354.1:BB354, %356.1:BB356, %358.1:BB358
  val?^ | miss    %86.1 = %86.0
  dr              %86.2 = Phi                      %354.2:BB354, %356.2:BB356, %358.2:BB358
  dr              %86.3 = %86.2
  fs              %86.4 = FrameState         R     0x55bbe3ea69b0+3006: [], env=e0.3
  void                    Deopt              !v    %86.4, %86.3, %86.1   !
BB357   <- [355]
  val?~- | miss   %357.0 = CastType           d     dn %355.0
  val?-           %357.1 = Force!<value>            %357.0,    <(nil|vec)->
  (int|real)$-    %357.2 = CallSafeBuiltin    wed   length(%357.1)    <int$->
  lgl$#-          %357.3 = IsType                   %357.2 isA int$-
  void                    Branch                   %357.3 -> BB359 (if true) | BB360 (if false)
BB358   <- [355]
  void                    Nop                !     
  val?^ | miss    %358.1 = %355.0
  dr              %358.2 = Typecheck@0x55bbe3ea54e0[Type#173]
  goto BB86
BB359   <- [357]
  int$-           %359.0 = CastType           d     dn %357.2
  lgl$#-          %359.1 = CheckTrueFalse     e     %359.0
  void                    Branch                   %359.1 -> BB232 (if true) | BB90 (if false)
BB360   <- [357]
  void                    Nop                !     
  (int|real)$-    %360.1 = %357.2
  dr              %360.2 = Typecheck@0x55bbe3ea54e0[Type#174]
  goto BB88
BB232   <- [359]
  val?^ | miss    %232.0 = LdVar              eR    c, e0.3
  lgl$#-          %232.1 = Identical                <blt c>, %232.0   <true>
  void                    Branch                   %232.1 -> BB361 (if true) | BB362 (if false)
BB90   <- [359]
  void                    Nop                !     
  goto BB91
BB88   <- [360, 362, 364]
  val?^ | miss    %88.0 = Phi                      %360.1:BB360, %362.1:BB362, %364.1:BB364
  val?^ | miss    %88.1 = %88.0
  dr              %88.2 = Phi                      %360.2:BB360, %362.2:BB362, %364.2:BB364
  dr              %88.3 = %88.2
  fs              %88.4 = FrameState         R     0x55bbe3ea69b0+3751: [%357.2], env=e0.3
  void                    Deopt              !v    %88.4, %88.3, %88.1   !
BB361   <- [232]
  val?^ | miss    %361.0 = LdVar              eR    list, e0.3
  lgl$#-          %361.1 = Identical                <blt list>, %361.0   <true>
  void                    Branch                   %361.1 -> BB363 (if true) | BB364 (if false)
BB362   <- [232]
  void                    Nop                !     
  lgl$#-          %362.1 = %232.1
  dr              %362.2 = DeadBranchReached@0x55bbe3ea54e0[Test#33]
  goto BB88
BB91   <- [90, 365]
  val?^ | miss    %91.0 = LdVar              eR    d2, e0.3
  lgl$#-          %91.1 = IsType                   %91.0 isA real$-
  void                    Branch                   %91.1 -> BB367 (if true) | BB368 (if false)
BB363   <- [361]
  val+            %363.0 = CallSafeBuiltin    wed   list(nil)    <vec$->
  val+            %363.1 = CallSafeBuiltin    wed   c(%357.1, %363.0)    <vec->
  (cls|spec|blt)  %363.2 = LdFun              !v    dimnames<-, <0x55bbe1e20358>, e0.3
  val?^ | miss    %363.3 = LdVar              eR    newX, e0.3
  lgl$#-          %363.4 = IsType                   %363.3 isA val?~+ | miss
  void                    Branch                   %363.4 -> BB365 (if true) | BB366 (if false)
BB364   <- [361]
  void                    Nop                !     
  lgl$#-          %364.1 = %361.1
  dr              %364.2 = DeadBranchReached@0x55bbe3ea54e0[Test#34]
  goto BB88
BB367   <- [91]
  real$-          %367.0 = CastType           d     dn %91.0
  lgl$#-          %367.1 = ColonInputEffects        1L, %367.0   <true>
  void                    Branch                   %367.1 -> BB369 (if true) | BB370 (if false)
BB368   <- [91]
  void                    Nop                !     
  val?^ | miss    %368.1 = %91.0
  dr              %368.2 = Typecheck@0x55bbe3ea54e0[Type#181]
  goto BB92
BB365   <- [363]
  val?~+ | miss   %365.0 = CastType           d     dn %363.3
  val?+           %365.1 = Force!<value>            %365.0,    <(lgl|real)_>
  val?            %365.2 = NamedCall          !v    %363.2(%365.1, value=%363.1) e0.3
  void                    StVar              lW    newX, %365.2, e0.3
  goto BB91
BB366   <- [363]
  fs              %366.0 = FrameState         R     0x55bbe3ea69b0+3956: [%363.1], env=e0.3
  void                    Deopt              !v    %366.0, Typecheck@0x55bbe3ea54e0[Type#180], %363.3   !
BB369   <- [367]
  int$#-          %369.0 = ColonCastRhs       e     1L, %367.0   <int$->
  lgl$#-          %369.1 = Lte                d     1L, %369.0, elided   <true>
  void                    Branch                   %369.1 -> BB371 (if true) | BB372 (if false)
BB370   <- [367]
  void                    Nop                !     
  lgl$#-          %370.1 = %367.1
  dr              %370.2 = DeadBranchReached@0x55bbe3ea54e0[Test#35]
  goto BB92
BB92   <- [368, 370, 372, 374]
  val?^ | miss    %92.0 = Phi                      %368.1:BB368, %370.1:BB370, %372.1:BB372, %374.1:BB374
  val?^ | miss    %92.1 = %92.0
  dr              %92.2 = Phi                      %368.2:BB368, %370.2:BB370, %372.2:BB372, %374.2:BB374
  dr              %92.3 = %92.2
  fs              %92.4 = FrameState         R     0x55bbe3ea69b0+4024: [], env=e0.3
  void                    Deopt              !v    %92.4, %92.3, %92.1   !
BB371   <- [369]
  lgl$#-          %371.0 = Neq                d     %369.0, 1L, elided   <true>
  void                    Branch                   %371.0 -> BB373 (if true) | BB374 (if false)
BB372   <- [369]
  void                    Nop                !     
  lgl$#-          %372.1 = %369.1
  dr              %372.2 = DeadBranchReached@0x55bbe3ea54e0[Test#37]
  goto BB92
BB373   <- [371]
  void                    StVar              lW    i, 1L, e0.3
  val?^ | miss    %373.1 = LdVar              eR    forceAndCall, e0.3
  lgl$#-          %373.2 = Identical                %373.1, <spec forceAndCall>
  void                    Branch                   %373.2 -> BB375 (if true) | BB376 (if false)
BB374   <- [371]
  void                    Nop                !     
  lgl$#-          %374.1 = %371.0
  dr              %374.2 = DeadBranchReached@0x55bbe3ea54e0[Test#38]
  goto BB92
BB375   <- [373]
  val?^ | miss    %375.0 = LdVar              eR    FUN, e0.3
  val?            %375.1 = Force!<value>      !v    %375.0, e0.3   <(cls|blt)->
  prom-           %375.2 = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p31, e0.3
  (miss|dots)     %375.3 = LdDots             R     , e0.3
  *dots-          %375.4 = ExpandDots               %375.3
  val?            %375.5 = NamedCall          !v    <spec forceAndCall>(1, %375.1, %375.2, .xpandDotsTrigger=%375.4) e0.3   <(lgl|real)->
  lgl$-           %375.6 = Is                       %375.5, NULL
  void                    StVar              lW    tmp, %375.5, e0.3
  val             %375.8 = ChkMissing         e     %375.5
  lgl$-           %375.9 = Not                d     %375.6, elided
  lgl$#-          %375.10 = CheckTrueFalse     e     %375.9
  void                    Branch                   %375.10 -> BB231 (if true) | BB98 (if false)
BB376   <- [373]
  fs              %376.0 = FrameState         R     0x55bbe3ea69b0+4175: [1L, %369.0, 2L], env=e0.3
  void                    Deopt              !v    %376.0, CallTarget@0x55bbe3ea54e0[Call#57], %373.1   !
BB231   <- [375]
  val?^ | miss    %231.0 = LdVar              eR    ans !upd, e0.3
  lgl$#-          %231.1 = IsType                   %231.0 isA val?~- | miss
  void                    Branch                   %231.1 -> BB377 (if true) | BB378 (if false)
BB98   <- [375]
  void                    Nop                !     
  int$#-          %98.1 = 2L
  goto BB99
BB377   <- [231]
  val?~- | miss   %377.0 = CastType           d     dn %231.0
  val?-           %377.1 = Force!<value>            %377.0,    <vec->
  val?^ | miss    %377.2 = LdVar              eR    i, e0.3
  lgl$#-          %377.3 = IsType                   %377.2 isA int$-
  void                    Branch                   %377.3 -> BB379 (if true) | BB380 (if false)
BB378   <- [231]
  void                    Nop                !     
  val?^ | miss    %378.1 = %231.0
  dr              %378.2 = Typecheck@0x55bbe3ea54e0[Type#204]
  goto BB96
BB99   <- [98, 229, 381]
  int$#-          %99.0 = Phi                      %98.1:BB98, %229.1:BB229, %381.3:BB381
  int$#-          %99.1 = %99.0
  lgl$#-          %99.2 = Neq                d     %369.0, %99.1, elided
  void                    Branch                   %99.2 -> BB223 (if true) | BB100 (if false)
BB379   <- [377]
  int$-           %379.0 = CastType           d     dn %377.2
  lgl$#-          %379.1 = IsType                   %375.5 isA val?-
  void                    Branch                   %379.1 -> BB381 (if true) | BB382 (if false)
BB380   <- [377]
  void                    Nop                !     
  val?^ | miss    %380.1 = %377.2
  dr              %380.2 = Typecheck@0x55bbe3ea54e0[Type#205]
  goto BB96
BB96   <- [378, 380, 382]
  val?^ | miss    %96.0 = Phi                      %378.1:BB378, %380.1:BB380, %382.1:BB382
  val?^ | miss    %96.1 = %96.0
  dr              %96.2 = Phi                      %378.2:BB378, %380.2:BB380, %382.2:BB382
  dr              %96.3 = %96.2
  fs              %96.4 = FrameState         R     0x55bbe3ea69b0+4267: [1L, %369.0, 2L], env=e0.3
  void                    Deopt              !v    %96.4, %96.3, %96.1   !
BB223   <- [99]
  void                    StVar              lW    i, %99.1, e0.3
  int$#-          %223.1 = Add                d     %99.1, 1L, elided
  val?^ | miss    %223.2 = LdVar              eR    forceAndCall, e0.3
  lgl$#-          %223.3 = Identical                %223.2, <spec forceAndCall>
  void                    Branch                   %223.3 -> BB383 (if true) | BB384 (if false)
BB100   <- [99]
  val?^ | miss    %100.0 = LdVar              eR    simplify, e0.3
  val?            %100.1 = Force!<value>      !v    %100.0, e0.3   <lgl$->
  lgl$#-          %100.2 = IsType                   %100.1 isA lgl$-
  void                    Branch                   %100.2 -> BB385 (if true) | BB386 (if false)
BB381   <- [379]
  val?-           %381.0 = CastType           d     dn %375.5   <(lgl|real)->
  val?-           %381.1 = Subassign2_1D      wed   %381.0, %377.1, %379.0, elided
  void                    StVar              lW    ans, %381.1, e0.3
  int$#-          %381.3 = 2L
  goto BB99
BB382   <- [379]
  void                    Nop                !     
  val?            %382.1 = %375.5
  dr              %382.2 = Typecheck@0x55bbe3ea54e0[Type#201]
  goto BB96
BB383   <- [223]
  val?^ | miss    %383.0 = LdVar              eR    FUN, e0.3
  val?            %383.1 = Force!<value>      !v    %383.0, e0.3   <(cls|blt)->
  prom-           %383.2 = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p33, e0.3
  (miss|dots)     %383.3 = LdDots             R     , e0.3
  *dots-          %383.4 = ExpandDots               %383.3
  val?            %383.5 = NamedCall          !v    <spec forceAndCall>(1, %383.1, %383.2, .xpandDotsTrigger=%383.4) e0.3   <(lgl|real)->
  lgl$-           %383.6 = Is                       %383.5, NULL
  void                    StVar              lW    tmp, %383.5, e0.3
  val             %383.8 = ChkMissing         e     %383.5
  lgl$-           %383.9 = Not                d     %383.6, elided
  lgl$#-          %383.10 = CheckTrueFalse     e     %383.9
  void                    Branch                   %383.10 -> BB230 (if true) | BB228 (if false)
BB384   <- [223]
  fs              %384.0 = FrameState         R     0x55bbe3ea69b0+4374: [1L, %369.0, %223.1], env=e0.3
  void                    Deopt              !v    %384.0, CallTarget@0x55bbe3ea54e0[Call#59], %223.2   !
BB385   <- [100]
  lgl$-           %385.0 = CastType           d     dn %100.1
  lgl$-           %385.1 = Not                d     %385.0, elided
  lgl$-           %385.2 = AsLogical                %385.1
  lgl$#-          %385.3 = Identical                %385.2, true
  void                    Branch                   %385.3 -> BB222 (if true) | BB103 (if false)
BB386   <- [100]
  void                    Nop                !     
  val?            %386.1 = %100.1
  dr              %386.2 = Typecheck@0x55bbe3ea54e0[Type#216]
  goto BB101
BB230   <- [383]
  val?^ | miss    %230.0 = LdVar              eR    ans !upd, e0.3
  lgl$#-          %230.1 = IsType                   %230.0 isA val?~- | miss
  void                    Branch                   %230.1 -> BB395 (if true) | BB396 (if false)
BB228   <- [383]
  void                    Nop                !     
  goto BB229
BB222   <- [385]
  void                    Nop                !     
  lgl$-           %222.1 = %385.2
  goto BB106
BB103   <- [385]
  val?^ | miss    %103.0 = LdVar              eR    is.recursive, e0.3
  lgl$#-          %103.1 = Identical                <blt is.recursive>, %103.0   <true>
  void                    Branch                   %103.1 -> BB387 (if true) | BB388 (if false)
BB101   <- [386, 388, 390, 392]
  val?^ | miss    %101.0 = Phi                      %386.1:BB386, %388.1:BB388, %390.1:BB390, %392.1:BB392
  val?^ | miss    %101.1 = %101.0
  dr              %101.2 = Phi                      %386.2:BB386, %388.2:BB388, %390.2:BB390, %392.2:BB392
  dr              %101.3 = %101.2
  fs              %101.4 = FrameState         R     0x55bbe3ea69b0+4568: [%100.1], env=e0.3
  void                    Deopt              !v    %101.4, %101.3, %101.1   !
BB395   <- [230]
  val?~- | miss   %395.0 = CastType           d     dn %230.0
  val?-           %395.1 = Force!<value>            %395.0,    <vec->
  val?^ | miss    %395.2 = LdVar              eR    i, e0.3
  lgl$#-          %395.3 = IsType                   %395.2 isA int$-
  void                    Branch                   %395.3 -> BB397 (if true) | BB398 (if false)
BB396   <- [230]
  void                    Nop                !     
  val?^ | miss    %396.1 = %230.0
  dr              %396.2 = Typecheck@0x55bbe3ea54e0[Type#214]
  goto BB226
BB229   <- [228, 399]
  void                    Nop                !     
  int$#-          %229.1 = %223.1
  goto BB99
BB106   <- [222, 393]
  lgl$-           %106.0 = Phi                      %393.3:BB393, %222.1:BB222
  lgl$-           %106.1 = %106.0
  void                    StVar              lW    ans.list, %106.1, e0.3
  val?^ | miss    %106.3 = LdVar              eR    length, e0.3
  lgl$#-          %106.4 = Identical                <blt length>, %106.3   <true>
  void                    Branch                   %106.4 -> BB401 (if true) | BB402 (if false)
BB387   <- [103]
  val?^ | miss    %387.0 = LdVar              eR    ans, e0.3
  lgl$#-          %387.1 = IsType                   %387.0 isA val?~- | miss
  void                    Branch                   %387.1 -> BB389 (if true) | BB390 (if false)
BB388   <- [103]
  void                    Nop                !     
  lgl$#-          %388.1 = %103.1
  dr              %388.2 = DeadBranchReached@0x55bbe3ea54e0[Test#41]
  goto BB101
BB397   <- [395]
  int$-           %397.0 = CastType           d     dn %395.2
  lgl$#-          %397.1 = IsType                   %383.5 isA val?-
  void                    Branch                   %397.1 -> BB399 (if true) | BB400 (if false)
BB398   <- [395]
  void                    Nop                !     
  val?^ | miss    %398.1 = %395.2
  dr              %398.2 = Typecheck@0x55bbe3ea54e0[Type#215]
  goto BB226
BB226   <- [396, 398, 400]
  val?^ | miss    %226.0 = Phi                      %396.1:BB396, %398.1:BB398, %400.1:BB400
  val?^ | miss    %226.1 = %226.0
  dr              %226.2 = Phi                      %396.2:BB396, %398.2:BB398, %400.2:BB400
  dr              %226.3 = %226.2
  fs              %226.4 = FrameState         R     0x55bbe3ea69b0+4466: [1L, %369.0, %223.1], env=e0.3
  void                    Deopt              !v    %226.4, %226.3, %226.1   !
BB401   <- [106]
  val?^ | miss    %401.0 = LdVar              eR    ans, e0.3
  lgl$#-          %401.1 = IsType                   %401.0 isA val?~- | miss
  void                    Branch                   %401.1 -> BB403 (if true) | BB404 (if false)
BB402   <- [106]
  void                    Nop                !     
  lgl$#-          %402.1 = %106.4
  dr              %402.2 = DeadBranchReached@0x55bbe3ea54e0[Test#44]
  goto BB107
BB389   <- [387]
  val?~- | miss   %389.0 = CastType           d     dn %387.0
  val?-           %389.1 = Force!<value>            %389.0,    <vec->
  lgl$#-          %389.2 = IsType                   %389.1 isA val+   <true>
  void                    Branch                   %389.2 -> BB391 (if true) | BB392 (if false)
BB390   <- [387]
  void                    Nop                !     
  val?^ | miss    %390.1 = %387.0
  dr              %390.2 = Typecheck@0x55bbe3ea54e0[Type#219]
  goto BB101
BB399   <- [397]
  val?-           %399.0 = CastType           d     dn %383.5   <(lgl|real)->
  val?-           %399.1 = Subassign2_1D      wed   %399.0, %395.1, %397.0, elided
  void                    StVar              lW    ans, %399.1, e0.3
  goto BB229
BB400   <- [397]
  void                    Nop                !     
  val?            %400.1 = %383.5
  dr              %400.2 = Typecheck@0x55bbe3ea54e0[Type#211]
  goto BB226
BB403   <- [401]
  val?~- | miss   %403.0 = CastType           d     dn %401.0
  val?-           %403.1 = Force!<value>            %403.0,    <vec->
  lgl$#-          %403.2 = IsType                   %403.1 isA val+   <true>
  void                    Branch                   %403.2 -> BB405 (if true) | BB406 (if false)
BB404   <- [401]
  void                    Nop                !     
  val?^ | miss    %404.1 = %401.0
  dr              %404.2 = Typecheck@0x55bbe3ea54e0[Type#224]
  goto BB107
BB107   <- [402, 404, 406]
  val?^ | miss    %107.0 = Phi                      %402.1:BB402, %404.1:BB404, %406.1:BB406
  val?^ | miss    %107.1 = %107.0
  dr              %107.2 = Phi                      %402.2:BB402, %404.2:BB404, %406.2:BB406
  dr              %107.3 = %107.2
  fs              %107.4 = FrameState         R     0x55bbe3ea69b0+4732: [], env=e0.3
  void                    Deopt              !v    %107.4, %107.3, %107.1   !
BB391   <- [389]
  val?            %391.0 = Extract2_1D        wed   %389.1, 1L, elided   <(lgl|real)->
  lgl$#-          %391.1 = IsType                   %391.0 isA val?-
  void                    Branch                   %391.1 -> BB393 (if true) | BB394 (if false)
BB392   <- [389]
  void                    Nop                !     
  lgl$#-          %392.1 = %389.2
  dr              %392.2 = DeadBranchReached@0x55bbe3ea54e0[Test#43]
  goto BB101
BB405   <- [403]
  val?            %405.0 = Extract2_1D        wed   %403.1, 1L, elided   <(lgl|real)->
  lgl$#-          %405.1 = IsType                   %405.0 isA val?-
  void                    Branch                   %405.1 -> BB407 (if true) | BB408 (if false)
BB406   <- [403]
  void                    Nop                !     
  lgl$#-          %406.1 = %403.2
  dr              %406.2 = DeadBranchReached@0x55bbe3ea54e0[Test#46]
  goto BB107
BB393   <- [391]
  val?-           %393.0 = CastType           d     dn %391.0   <(lgl|real)->
  lgl$#-          %393.1 = CallSafeBuiltin    wed   is.recursive(%393.0)    <lgl$->
  lgl$-           %393.2 = LOr                      %385.2, %393.1
  lgl$-           %393.3 = %393.2
  goto BB106
BB394   <- [391]
  fs              %394.0 = FrameState         R     0x55bbe3ea69b0+4693: [%385.2, <blt is.recursive>, %391.0], env=e0.3
  void                    Deopt              !v    %394.0, Typecheck@0x55bbe3ea54e0[Type#220], %391.0   !
BB407   <- [405]
  val?-           %407.0 = CastType           d     dn %405.0   <(lgl|real)->
  (int|real)$-    %407.1 = CallSafeBuiltin    wed   length(%407.0)    <int$->
  lgl$#-          %407.2 = IsType                   %407.1 isA int$-
  void                    Branch                   %407.2 -> BB409 (if true) | BB410 (if false)
BB408   <- [405]
  fs              %408.0 = FrameState         R     0x55bbe3ea69b0+4844: [<blt length>, %405.0], env=e0.3
  void                    Deopt              !v    %408.0, Typecheck@0x55bbe3ea54e0[Type#225], %405.0   !
BB409   <- [407]
  int$-           %409.0 = CastType           d     dn %407.1
  void                    StVar              lW    l.ans, %409.0, e0.3
  val?^ | miss    %409.2 = LdVar              eR    names, e0.3
  lgl$#-          %409.3 = Identical                <blt names>, %409.2   <true>
  void                    Branch                   %409.3 -> BB411 (if true) | BB412 (if false)
BB410   <- [407]
  fs              %410.0 = FrameState         R     0x55bbe3ea69b0+4867: [%407.1], env=e0.3
  void                    Deopt              !v    %410.0, Typecheck@0x55bbe3ea54e0[Type#226], %407.1   !
BB411   <- [409]
  val+            %411.0 = CallSafeBuiltin    wed   names(%407.0)    <nil->
  void                    StVar              lW    ans.names, %411.0, e0.3
  lgl$-           %411.2 = Not                d     %106.1, elided
  lgl$#-          %411.3 = CheckTrueFalse     e     %411.2
  void                    Branch                   %411.3 -> BB217 (if true) | BB117 (if false)
BB412   <- [409]
  fs              %412.0 = FrameState         R     0x55bbe3ea69b0+4881: [], env=e0.3
  void                    Deopt              !v    %412.0, DeadBranchReached@0x55bbe3ea54e0[Test#47], %409.3   !
BB217   <- [411]
  val?^ | miss    %217.0 = LdVar              eR    any, e0.3
  lgl$#-          %217.1 = Identical                <blt any>, %217.0   <true>
  void                    Branch                   %217.1 -> BB413 (if true) | BB414 (if false)
BB117   <- [411]
  void                    Nop                !     
  lgl$-           %117.1 = %106.1
  goto BB118
BB413   <- [217]
  val?^ | miss    %413.0 = LdVar              eR    lengths, e0.3
  lgl$#-          %413.1 = Identical                %413.0, function(x, use.names=TRUE) <(rir::DispatchTab|...
  void                    Branch                   %413.1 -> BB417 (if true) | BB418 (if false)
BB414   <- [217]
  void                    Nop                !     
  lgl$#-          %414.1 = %217.1
  dr              %414.2 = DeadBranchReached@0x55bbe3ea54e0[Test#50]
  goto BB115
BB118   <- [117, 443]
  lgl$-           %118.0 = Phi                      %443.2:BB443, %117.1:BB117
  lgl$-           %118.1 = %118.0
  lgl$-           %118.2 = Not                d     %118.1, elided
  lgl$-           %118.3 = AsLogical                %118.2
  lgl$#-          %118.4 = Identical                %118.3, false
  void                    Branch                   %118.4 -> BB216 (if true) | BB121 (if false)
BB417   <- [413]
  prom-           %417.0 = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p30, e0.3
  ct              %417.1 = PushContext        lCL   %417.0, lengths(ans), function(x, use.names=TRUE) <(rir::DispatchTab|..., e0.3
  val?^           %417.2 = CastType                 up %417.0
  env             e417.3 = MkEnv              l     x=%417.2, use.names(miss)=true, parent=R_BaseNamespace, context 1
  val?            %417.4 = Force!<lazy>       !vL   %417.2, e417.3   <vec+>
  val?            %417.5 = CallBuiltin        !v    lengths(%417.4, true) e417.3
  val?            %417.6 = PopContext         C     %417.5, %417.1   <int->
  lgl$#-          %417.7 = IsType                   %417.6 isA int-
  val?^ | miss    %417.8 = LdVar              eR    l.ans, e0.3
  lgl$#-          %417.9 = IsType                   %417.8 isA int$-
  void                    Branch                   %417.9 -> BB421 (if true) | BB422 (if false)
BB418   <- [413]
  void                    Nop                !     
  val?^ | miss    %418.1 = %413.0
  dr              %418.2 = CallTarget@0x55bbe3ea54e0[Call#66]
  goto BB115
BB115   <- [414, 418]
  val?^ | miss    %115.0 = Phi                      %414.1:BB414, %418.1:BB418
  val?^ | miss    %115.1 = %115.0
  dr              %115.2 = Phi                      %414.2:BB414, %418.2:BB418
  dr              %115.3 = %115.2
  fs              %115.4 = FrameState         R     0x55bbe3ea69b0+5030: [], env=e0.3
  void                    Deopt              !v    %115.4, %115.3, %115.1   !
BB216   <- [118]
  void                    Nop                !     
  lgl$-           %216.1 = %118.3
  goto BB124
BB121   <- [118]
  val?^ | miss    %121.0 = LdVar              eR    length, e0.3
  lgl$#-          %121.1 = Identical                <blt length>, %121.0   <true>
  void                    Branch                   %121.1 -> BB415 (if true) | BB416 (if false)
BB421   <- [417]
  int$-           %421.0 = CastType           d     dn %417.8
  void                    Branch                   %417.7 -> BB427 (if true) | BB428 (if false)
BB422   <- [417]
  void                    Nop                !     
  val?^ | miss    %422.1 = %417.8
  dr              %422.2 = Typecheck@0x55bbe3ea54e0[Type#239]
  goto BB218
BB124   <- [216, 425]
  lgl$-           %124.0 = Phi                      %425.3:BB425, %216.1:BB216
  lgl$-           %124.1 = %124.0
  lgl$#-          %124.2 = CheckTrueFalse     e     %124.1
  void                    Branch                   %124.2 -> BB215 (if true) | BB127 (if false)
BB415   <- [121]
  val?^ | miss    %415.0 = LdVar              eR    ans.names, e0.3
  lgl$#-          %415.1 = IsType                   %415.0 isA val?~- | miss
  void                    Branch                   %415.1 -> BB419 (if true) | BB420 (if false)
BB416   <- [121]
  void                    Nop                !     
  lgl$#-          %416.1 = %121.1
  dr              %416.2 = DeadBranchReached@0x55bbe3ea54e0[Test#51]
  goto BB119
BB427   <- [421]
  int-            %427.0 = CastType           d     dn %417.6
  lgl-            %427.1 = Neq                wed   %427.0, %421.0, elided   <lgl->
  val?            %427.2 = CallBuiltin        !v    any(%427.1) e0.3   <lgl$->
  lgl$#-          %427.3 = IsType                   %427.2 isA lgl$-
  void                    Branch                   %427.3 -> BB443 (if true) | BB444 (if false)
BB428   <- [421]
  void                    Nop                !     
  val?            %428.1 = %417.6
  dr              %428.2 = Typecheck@0x55bbe3ea54e0[Type#238]
  goto BB218
BB218   <- [422, 428]
  val?^ | miss    %218.0 = Phi                      %422.1:BB422, %428.1:BB428
  val?^ | miss    %218.1 = %218.0
  dr              %218.2 = Phi                      %422.2:BB422, %428.2:BB428
  dr              %218.3 = %218.2
  fs              %218.4 = FrameState         R     0x55bbe3ea69b0+5148: [<blt any>, %417.6], env=e0.3
  void                    Deopt              !v    %218.4, %218.3, %218.1   !
BB215   <- [124]
  (cls|spec|blt)  %215.0 = LdFun              !v    vapply, e0.3
  fs              %215.1 = FrameState         R     0x55bbe3ea69b0+5340: [%215.0], env=e0.3
  void                    Deopt              !v    %215.1, DeadCall@0x55bbe3ea54e0[Call#68], %215.0   !
BB127   <- [124]
  lgl$#-          %127.0 = CheckTrueFalse     e     %118.1
  void                    Branch                   %127.0 -> BB214 (if true) | BB128 (if false)
BB419   <- [415]
  val?~- | miss   %419.0 = CastType           d     dn %415.0
  val?-           %419.1 = Force!<value>            %419.0,    <nil->
  (int|real)$-    %419.2 = CallSafeBuiltin    wed   length(%419.1)    <int$->
  lgl$#-          %419.3 = IsType                   %419.2 isA int$-
  void                    Branch                   %419.3 -> BB425 (if true) | BB426 (if false)
BB420   <- [415]
  void                    Nop                !     
  val?^ | miss    %420.1 = %415.0
  dr              %420.2 = Typecheck@0x55bbe3ea54e0[Type#244]
  goto BB119
BB119   <- [416, 420]
  val?^ | miss    %119.0 = Phi                      %416.1:BB416, %420.1:BB420
  val?^ | miss    %119.1 = %119.0
  dr              %119.2 = Phi                      %416.2:BB416, %420.2:BB420
  dr              %119.3 = %119.2
  fs              %119.4 = FrameState         R     0x55bbe3ea69b0+5204: [], env=e0.3
  void                    Deopt              !v    %119.4, %119.3, %119.1   !
BB443   <- [427]
  lgl$-           %443.0 = CastType           d     dn %427.2
  void                    StVar              lW    ans.list, %443.0, e0.3
  lgl$-           %443.2 = %443.0
  goto BB118
BB444   <- [427]
  fs              %444.0 = FrameState         R     0x55bbe3ea69b0+5190: [%427.2], env=e0.3
  void                    Deopt              !v    %444.0, Typecheck@0x55bbe3ea54e0[Type#241], %427.2   !
BB214   <- [127]
  val?^ | miss    %214.0 = LdVar              eR    d2, e0.3
  val?            %214.1 = Force!             !v    %214.0, e0.3   <val?_>
  val?            %214.2 = %214.1
  goto BB134
BB128   <- [127]
  val?^ | miss    %128.0 = LdVar              eR    length, e0.3
  lgl$#-          %128.1 = Identical                <blt length>, %128.0   <true>
  void                    Branch                   %128.1 -> BB423 (if true) | BB424 (if false)
BB425   <- [419]
  int$-           %425.0 = CastType           d     dn %419.2
  lgl$-           %425.1 = AsLogical                %425.0
  lgl$-           %425.2 = LAnd                     %118.3, %425.1
  lgl$-           %425.3 = %425.2
  goto BB124
BB426   <- [419]
  fs              %426.0 = FrameState         R     0x55bbe3ea69b0+5317: [%118.3, %419.2], env=e0.3
  void                    Deopt              !v    %426.0, Typecheck@0x55bbe3ea54e0[Type#245], %419.2   !
BB134   <- [214, 455]
  val?            %134.0 = Phi                      %455.1:BB455, %214.2:BB214
  val?            %134.1 = %134.0
  void                    StVar              lW    len.a, %134.1, e0.3
  val?^ | miss    %134.3 = LdVar              eR    length, e0.3
  lgl$#-          %134.4 = Identical                <blt length>, %134.3   <true>
  void                    Branch                   %134.4 -> BB429 (if true) | BB430 (if false)
BB423   <- [128]
  val?^ | miss    %423.0 = LdVar              eR    unlist, e0.3
  lgl$#-          %423.1 = Identical                %423.0, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Branch                   %423.1 -> BB433 (if true) | BB434 (if false)
BB424   <- [128]
  void                    Nop                !     
  lgl$#-          %424.1 = %128.1
  dr              %424.2 = DeadBranchReached@0x55bbe3ea54e0[Test#53]
  goto BB125
BB429   <- [134]
  val?^ | miss    %429.0 = LdVar              eR    MARGIN, e0.3
  val?            %429.1 = Force!<value>      !v    %429.0, e0.3   <(int|real)$->
  lgl$#-          %429.2 = IsType                   %429.1 isA val?-
  void                    Branch                   %429.2 -> BB431 (if true) | BB432 (if false)
BB430   <- [134]
  fs              %430.0 = FrameState         R     0x55bbe3ea69b0+5705: [], env=e0.3
  void                    Deopt              !v    %430.0, DeadBranchReached@0x55bbe3ea54e0[Test#54], %134.4   !
BB433   <- [423]
  prom-           %433.0 = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p17, e0.3
  ct              %433.1 = PushContext        lCL   %433.0, false, unlist(ans, recursive=FALSE), function(x, recursive=TRUE, use.names=TRUE) <(|..., e0.3
  val?^           %433.2 = CastType                 up %433.0
  env             e433.3 = MkEnv              l     x=%433.2, recursive=false, use.names(miss)=true, parent=R_BaseNamespace, context 1
  cls             %433.4 = MkCls                    unlist@127, e433.3
  cls             %433.5 = MkCls                    unlist>URapply@148, e433.3
  val?            %433.6 = Force!<lazy>       !vL   %433.2, e433.3   <vec+>
  val?            %433.7 = CallBuiltin        !v    islistfactor(%433.6, false) e433.3
  lgl$#-          %433.8 = CheckTrueFalse     we    %433.7
  void                    Branch                   %433.8 -> BB210 (if true) | BB129 (if false)
BB434   <- [423]
  void                    Nop                !     
  val?^ | miss    %434.1 = %423.0
  dr              %434.2 = CallTarget@0x55bbe3ea54e0[Call#72]
  goto BB125
BB125   <- [424, 434]
  val?^ | miss    %125.0 = Phi                      %424.1:BB424, %434.1:BB434
  val?^ | miss    %125.1 = %125.0
  dr              %125.2 = Phi                      %424.2:BB424, %434.2:BB434
  dr              %125.3 = %125.2
  fs              %125.4 = FrameState         R     0x55bbe3ea69b0+5324: [%124.1], env=e0.3
  void                    Deopt              !v    %125.4, %125.3, %125.1   !
BB431   <- [429]
  val?-           %431.0 = CastType           d     dn %429.1   <(int|real)$->
  (int|real)$-    %431.1 = CallSafeBuiltin    wed   length(%431.0)    <int$->
  lgl$#-          %431.2 = IsType                   %431.1 isA int$-
  void                    Branch                   %431.2 -> BB435 (if true) | BB436 (if false)
BB432   <- [429]
  fs              %432.0 = FrameState         R     0x55bbe3ea69b0+5774: [<blt length>, %429.1], env=e0.3
  void                    Deopt              !v    %432.0, Typecheck@0x55bbe3ea54e0[Type#259], %429.1   !
BB210   <- [433]
  val?^ | miss    %210.0 = LdVar              eR    recursive, e433.3
  val?            %210.1 = Force!             !v    %210.0, e433.3   <val?_>
  lgl$#-          %210.2 = CheckTrueFalse     we    %210.1
  void                    Branch                   %210.2 -> BB213 (if true) | BB211 (if false)
BB129   <- [433]
  val?^ | miss    %129.0 = LdVar              eR    x, e433.3
  val?            %129.1 = Force!<wrapped>    !v    %129.0, e433.3   <vec+>
  val?^ | miss    %129.2 = LdVar              eR    recursive, e433.3
  val?            %129.3 = Force!<wrapped>    !v    %129.2, e433.3   <lgl$->
  val?^ | miss    %129.4 = LdVar              eR    use.names, e433.3
  val?            %129.5 = Force!<lazy>       !v    %129.4, e433.3   <lgl$->
  val?            %129.6 = CallBuiltin        !v    unlist(%129.1, %129.3, %129.5) e433.3
  val?            %129.7 = PopContext         C     %129.6, %433.1   <(lgl|real)->
  void                    StVar              lW    ans, %129.7, e0.3
  lgl$#-          %129.9 = IsType                   %129.7 isA val?-
  void                    Branch                   %129.9 -> BB441 (if true) | BB442 (if false)
BB435   <- [431]
  int$-           %435.0 = CastType           d     dn %431.1
  lgl$-           %435.1 = Eq                 d     %435.0, 1L, elided   <lgl$->
  lgl$-           %435.2 = AsLogical                %435.1
  lgl$#-          %435.3 = Identical                %435.2, false
  void                    Branch                   %435.3 -> BB209 (if true) | BB141 (if false)
BB436   <- [431]
  void                    Nop                !     
  (int|real)$-    %436.1 = %431.1
  dr              %436.2 = Typecheck@0x55bbe3ea54e0[Type#260]
  goto BB139
BB213   <- [210]
  void                    Nop                !     
  cls             %213.1 = %433.5
  goto BB212
BB211   <- [210]
  void                    Nop                !     
  cls             %211.1 = %433.4
  goto BB212
BB441   <- [129]
  val?-           %441.0 = CastType           d     dn %129.7   <(lgl|real)->
  (int|real)$-    %441.1 = CallSafeBuiltin    wed   length(%441.0)    <int$->
  lgl$#-          %441.2 = IsType                   %441.1 isA int$-
  void                    Branch                   %441.2 -> BB455 (if true) | BB456 (if false)
BB442   <- [129]
  fs              %442.0 = FrameState         R     0x55bbe3ea69b0+5655: [<blt length>, %129.7], env=e0.3
  void                    Deopt              !v    %442.0, Typecheck@0x55bbe3ea54e0[Type#255], %129.7   !
BB209   <- [435]
  void                    Nop                !     
  lgl$-           %209.1 = %435.2
  goto BB142
BB141   <- [435]
  val?^ | miss    %141.0 = LdVar              eR    len.a, e0.3
  lgl$#-          %141.1 = IsType                   %141.0 isA int$-
  void                    Branch                   %141.1 -> BB437 (if true) | BB438 (if false)
BB139   <- [436, 438, 440, 446, 448, 450, 452, 454, 462, 464, 466, 468]
  val?^ | miss    %139.0 = Phi                      %436.1:BB436, %438.1:BB438, %440.1:BB440, %446.1:BB446, %448.1:BB448, %450.1:BB450, %452.1:BB452, %454.1:BB454, %462.1:BB462, %464.1:BB464, %466.1:BB466, %468.1:BB468
  val?^ | miss    %139.1 = %139.0
  dr              %139.2 = Phi                      %436.2:BB436, %438.2:BB438, %440.2:BB440, %446.2:BB446, %448.2:BB448, %450.2:BB450, %452.2:BB452, %454.2:BB454, %462.2:BB462, %464.2:BB464, %466.2:BB466, %468.2:BB468
  dr              %139.3 = %139.2
  fs              %139.4 = FrameState         R     0x55bbe3ea69b0+5796: [%431.1], env=e0.3
  void                    Deopt              !v    %139.4, %139.3, %139.1   !
BB212   <- [213, 211]
  cls             %212.0 = Phi                      %211.1:BB211, %213.1:BB213
  cls             %212.1 = %212.0
  fs              %212.2 = FrameState         R     0x55bbe3ea69b0+5639: [<blt length>], env=e0.3
  void                    StVar              lW    URapply, %212.1, e433.3
  (cls|spec|blt)  %212.4 = LdFun              !v    unique, e433.3
  fs              %212.5 = FrameState         R     0x55bbe3e9e9f0+178: [%212.4], env=e433.3, next=%212.2
  void                    Deopt              !v    %212.5, DeadCall@0x55bbe3e69510[Call#0], %212.4   !
BB455   <- [441]
  void                    Nop                !     
  (int|real)$-    %455.1 = %441.1
  goto BB134
BB456   <- [441]
  fs              %456.0 = FrameState         R     0x55bbe3ea69b0+5672: [%441.1], env=e0.3
  void                    Deopt              !v    %456.0, Typecheck@0x55bbe3ea54e0[Type#256], %441.1   !
BB142   <- [209, 439]
  lgl$-           %142.0 = Phi                      %439.4:BB439, %209.1:BB209
  lgl$-           %142.1 = %142.0
  lgl$#-          %142.2 = CheckTrueFalse     e     %142.1
  void                    Branch                   %142.2 -> BB199 (if true) | BB143 (if false)
BB437   <- [141]
  int$-           %437.0 = CastType           d     dn %141.0
  val?^ | miss    %437.1 = LdVar              eR    d2, e0.3
  lgl$#-          %437.2 = IsType                   %437.1 isA real$-
  void                    Branch                   %437.2 -> BB439 (if true) | BB440 (if false)
BB438   <- [141]
  void                    Nop                !     
  val?^ | miss    %438.1 = %141.0
  dr              %438.2 = Typecheck@0x55bbe3ea54e0[Type#262]
  goto BB139
BB199   <- [142]
  val?^ | miss    %199.0 = LdVar              eR    length, e0.3
  lgl$#-          %199.1 = Identical                <blt length>, %199.0   <true>
  void                    Branch                   %199.1 -> BB445 (if true) | BB446 (if false)
BB143   <- [142]
  val?^ | miss    %143.0 = LdVar              eR    len.a, e0.3
  lgl$#-          %143.1 = IsType                   %143.0 isA int$-
  void                    Branch                   %143.1 -> BB449 (if true) | BB450 (if false)
BB439   <- [437]
  real$-          %439.0 = CastType           d     dn %437.1
  lgl$-           %439.1 = Eq                 d     %437.0, %439.0, elided   <lgl$->
  lgl$-           %439.2 = AsLogical                %439.1
  lgl$-           %439.3 = LAnd                     %435.2, %439.2
  lgl$-           %439.4 = %439.3
  goto BB142
BB440   <- [437]
  void                    Nop                !     
  val?^ | miss    %440.1 = %437.1
  dr              %440.2 = Typecheck@0x55bbe3ea54e0[Type#263]
  goto BB139
BB445   <- [199]
  val?^ | miss    %445.0 = LdVar              eR    dn.ans, e0.3
  lgl$#-          %445.1 = IsType                   %445.0 isA val?~- | miss
  void                    Branch                   %445.1 -> BB447 (if true) | BB448 (if false)
BB446   <- [199]
  void                    Nop                !     
  lgl$#-          %446.1 = %199.1
  dr              %446.2 = DeadBranchReached@0x55bbe3ea54e0[Test#66]
  goto BB139
BB449   <- [143]
  int$-           %449.0 = CastType           d     dn %143.0
  val?^ | miss    %449.1 = LdVar              eR    d2, e0.3
  lgl$#-          %449.2 = IsType                   %449.1 isA real$-
  void                    Branch                   %449.2 -> BB451 (if true) | BB452 (if false)
BB450   <- [143]
  void                    Nop                !     
  val?^ | miss    %450.1 = %143.0
  dr              %450.2 = Typecheck@0x55bbe3ea54e0[Type#265]
  goto BB139
BB447   <- [445]
  val?~- | miss   %447.0 = CastType           d     dn %445.0
  val?-           %447.1 = Force!<value>            %447.0,    <vec$->
  lgl$#-          %447.2 = IsType                   %447.1 isA val+   <true>
  void                    Branch                   %447.2 -> BB453 (if true) | BB454 (if false)
BB448   <- [445]
  void                    Nop                !     
  val?^ | miss    %448.1 = %445.0
  dr              %448.2 = Typecheck@0x55bbe3ea54e0[Type#328]
  goto BB139
BB451   <- [449]
  real$-          %451.0 = CastType           d     dn %449.1
  lgl$-           %451.1 = Eq                 d     %449.0, %451.0, elided   <lgl$->
  lgl$#-          %451.2 = CheckTrueFalse     e     %451.1
  lgl$-           %451.3 = AsLogical                %449.0
  lgl$#-          %451.4 = Identical                %451.3, false
  void                    Branch                   %451.2 -> BB198 (if true) | BB144 (if false)
BB452   <- [449]
  void                    Nop                !     
  val?^ | miss    %452.1 = %449.1
  dr              %452.2 = Typecheck@0x55bbe3ea54e0[Type#266]
  goto BB139
BB453   <- [447]
  val?            %453.0 = Extract2_1D        wed   %447.1, 1L, elided   <(nil|str)->
  lgl$#-          %453.1 = IsType                   %453.0 isA val?-
  void                    Branch                   %453.1 -> BB457 (if true) | BB458 (if false)
BB454   <- [447]
  void                    Nop                !     
  lgl$#-          %454.1 = %447.2
  dr              %454.2 = DeadBranchReached@0x55bbe3ea54e0[Test#68]
  goto BB139
BB198   <- [451]
  (cls|spec|blt)  %198.0 = LdFun              !v    array, e0.3
  fs              %198.1 = FrameState         R     0x55bbe3ea69b0+7093: [%198.0], env=e0.3
  void                    Deopt              !v    %198.1, DeadCall@0x55bbe3ea54e0[Call#89], %198.0   !
BB144   <- [451]
  void                    Branch                   %451.4 -> BB197 (if true) | BB145 (if false)
BB457   <- [453]
  val?-           %457.0 = CastType           d     dn %453.0   <(nil|str)->
  (int|real)$-    %457.1 = CallSafeBuiltin    wed   length(%457.0)    <int$->
  lgl$#-          %457.2 = IsType                   %457.1 isA int$-
  void                    Branch                   %457.2 -> BB459 (if true) | BB460 (if false)
BB458   <- [453]
  fs              %458.0 = FrameState         R     0x55bbe3ea69b0+7252: [<blt length>, %453.0], env=e0.3
  void                    Deopt              !v    %458.0, Typecheck@0x55bbe3ea54e0[Type#329], %453.0   !
BB197   <- [144]
  void                    Nop                !     
  lgl$-           %197.1 = %451.3
  goto BB146
BB145   <- [144]
  real$-          %145.0 = Mod                d     %449.0, %451.0, elided   <real$->
  lgl$-           %145.1 = Eq                 d     %145.0, 0L, elided   <lgl$->
  lgl$-           %145.2 = AsLogical                %145.1
  lgl$-           %145.3 = LAnd                     %451.3, %145.2
  lgl$-           %145.4 = %145.3
  goto BB146
BB459   <- [457]
  int$-           %459.0 = CastType           d     dn %457.1
  lgl$#-          %459.1 = CheckTrueFalse     e     %459.0
  void                    Branch                   %459.1 -> BB208 (if true) | BB204 (if false)
BB460   <- [457]
  fs              %460.0 = FrameState         R     0x55bbe3ea69b0+7275: [%457.1], env=e0.3
  void                    Deopt              !v    %460.0, Typecheck@0x55bbe3ea54e0[Type#330], %457.1   !
BB146   <- [197, 145]
  lgl$-           %146.0 = Phi                      %145.4:BB145, %197.1:BB197
  lgl$-           %146.1 = %146.0
  lgl$#-          %146.2 = CheckTrueFalse     e     %146.1
  void                    Branch                   %146.2 -> BB150 (if true) | BB147 (if false)
BB208   <- [459]
  void                    Nop                !     
  val?-           %208.1 = %457.0
  goto BB205
BB204   <- [459]
  void                    Nop                !     
  nil-            %204.1 = nil
  goto BB205
BB150   <- [146]
  val?^ | miss    %150.0 = LdVar              eR    dn.ans, e0.3
  lgl$#-          %150.1 = IsType                   %150.0 isA val?~- | miss
  void                    Branch                   %150.1 -> BB461 (if true) | BB462 (if false)
BB147   <- [146]
  val?^ | miss    %147.0 = LdVar              eR    ans, e0.3
  void                    Visible            v     
  val?            %147.2 = Force!             !     %147.0, e0.3   <val?_>
  val?            %147.3 = %147.2
  goto BB148
BB205   <- [204, 208]
  val?-           %205.0 = Phi                      %204.1:BB204, %208.1:BB208
  val?-           %205.1 = %205.0
  (cls|spec|blt)  %205.2 = LdFun              !v    names<-, <0x55bbe1e20438>, e0.3
  val?^ | miss    %205.3 = LdVar              eR    ans, e0.3
  lgl$#-          %205.4 = IsType                   %205.3 isA val?~- | miss
  void                    Branch                   %205.4 -> BB473 (if true) | BB474 (if false)
BB461   <- [150]
  val?~- | miss   %461.0 = CastType           d     dn %150.0
  val?-           %461.1 = Force!<value>            %461.0,    <nil->
  lgl$-           %461.2 = Is                       %461.1, NULL
  lgl$#-          %461.3 = CheckTrueFalse     e     %461.2
  void                    Branch                   %461.3 -> BB196 (if true) | BB151 (if false)
BB462   <- [150]
  void                    Nop                !     
  val?^ | miss    %462.1 = %150.0
  dr              %462.2 = Typecheck@0x55bbe3ea54e0[Type#274]
  goto BB139
BB148   <- [147, 509]
  val?            %148.0 = Phi                      %147.3:BB147, %509.1:BB509
  val?            %148.1 = %148.0
  val?            %148.2 = %148.1
  goto BB149
BB473   <- [205]
  val?~- | miss   %473.0 = CastType           d     dn %205.3
  val?-           %473.1 = Force!<value>            %473.0,    <(lgl|real)->
  val?            %473.2 = NamedCall          !v    %205.2(%473.1, value=%205.1) e0.3   <(lgl|real)+>
  void                    StVar              lW    ans, %473.2, e0.3
  val             %473.4 = ChkMissing         e     %473.2
  void                    Visible            v     
  val?            %473.6 = %473.2
  goto BB149
BB474   <- [205]
  fs              %474.0 = FrameState         R     0x55bbe3ea69b0+7355: [%205.1], env=e0.3
  void                    Deopt              !v    %474.0, Typecheck@0x55bbe3ea54e0[Type#333], %205.3   !
BB196   <- [461]
  val?^ | miss    %196.0 = LdVar              eR    vector, e0.3
  lgl$#-          %196.1 = Identical                %196.0, function(mode="logical", length=0L) <(rir::Dis|...
  void                    Branch                   %196.1 -> BB463 (if true) | BB464 (if false)
BB151   <- [461]
  void                    Nop                !     
  goto BB152
BB149   <- [148, 473]
  val?            %149.0 = Phi                      %148.2:BB148, %473.6:BB473
  val?            %149.1 = %149.0
  void                    Return             l     %149.1
BB463   <- [196]
  val?^ | miss    %463.0 = LdVar              eR    length, e0.3
  lgl$#-          %463.1 = Identical                %463.0, <blt length>
  void                    Branch                   %463.1 -> BB465 (if true) | BB466 (if false)
BB464   <- [196]
  void                    Nop                !     
  val?^ | miss    %464.1 = %196.0
  dr              %464.2 = CallTarget@0x55bbe3ea54e0[Call#74]
  goto BB139
BB152   <- [151, 467]
  val?^ | miss    %152.0 = LdVar              eR    list, e0.3
  lgl$#-          %152.1 = Identical                <blt list>, %152.0   <true>
  void                    Branch                   %152.1 -> BB469 (if true) | BB470 (if false)
BB465   <- [463]
  val?^ | miss    %465.0 = LdVar              eR    d.ans, e0.3
  lgl$#-          %465.1 = IsType                   %465.0 isA int$-
  void                    Branch                   %465.1 -> BB467 (if true) | BB468 (if false)
BB466   <- [463]
  void                    Nop                !     
  val?^ | miss    %466.1 = %463.0
  dr              %466.2 = CallTarget@0x55bbe3ea54e0[Call#75]
  goto BB139
BB469   <- [152]
  val?^ | miss    %469.0 = LdVar              eR    ans.names, e0.3
  lgl$#-          %469.1 = IsType                   %469.0 isA val?~- | miss
  void                    Branch                   %469.1 -> BB471 (if true) | BB472 (if false)
BB470   <- [152]
  void                    Nop                !     
  lgl$#-          %470.1 = %152.1
  dr              %470.2 = DeadBranchReached@0x55bbe3ea54e0[Test#55]
  goto BB153
BB467   <- [465]
  vec-            %467.0 = CallSafeBuiltin    wed   vector("list", 1L)    <vec$->
  void                    StVar              lW    dn.ans, %467.0, e0.3
  goto BB152
BB468   <- [465]
  void                    Nop                !     
  val?^ | miss    %468.1 = %465.0
  dr              %468.2 = Typecheck@0x55bbe3ea54e0[Type#275]
  goto BB139
BB471   <- [469]
  val?~- | miss   %471.0 = CastType           d     dn %469.0
  val?-           %471.1 = Force!<value>            %471.0,    <nil->
  val+            %471.2 = CallSafeBuiltin    wed   list(%471.1)    <vec$->
  void                    StVar              lW    dn1, %471.2, e0.3
  val?^ | miss    %471.4 = LdVar              eR    length, e0.3
  lgl$#-          %471.5 = Identical                <blt length>, %471.4   <true>
  void                    Branch                   %471.5 -> BB475 (if true) | BB476 (if false)
BB472   <- [469]
  void                    Nop                !     
  val?^ | miss    %472.1 = %469.0
  dr              %472.2 = Typecheck@0x55bbe3ea54e0[Type#279]
  goto BB153
BB153   <- [470, 472]
  val?^ | miss    %153.0 = Phi                      %470.1:BB470, %472.1:BB472
  val?^ | miss    %153.1 = %153.0
  dr              %153.2 = Phi                      %470.2:BB470, %472.2:BB472
  dr              %153.3 = %153.2
  fs              %153.4 = FrameState         R     0x55bbe3ea69b0+6085: [], env=e0.3
  void                    Deopt              !v    %153.4, %153.3, %153.1   !
BB475   <- [471]
  val?^ | miss    %475.0 = LdVar              eR    dn.call, e0.3
  lgl$#-          %475.1 = IsType                   %475.0 isA val?~- | miss
  void                    Branch                   %475.1 -> BB477 (if true) | BB478 (if false)
BB476   <- [471]
  void                    Nop                !     
  lgl$#-          %476.1 = %471.5
  dr              %476.2 = DeadBranchReached@0x55bbe3ea54e0[Test#56]
  goto BB155
BB477   <- [475]
  val?~- | miss   %477.0 = CastType           d     dn %475.0
  val?-           %477.1 = Force!<value>            %477.0,    <nil->
  (int|real)$-    %477.2 = CallSafeBuiltin    wed   length(%477.1)    <int$->
  lgl$#-          %477.3 = IsType                   %477.2 isA int$-
  void                    Branch                   %477.3 -> BB479 (if true) | BB480 (if false)
BB478   <- [475]
  void                    Nop                !     
  val?^ | miss    %478.1 = %475.0
  dr              %478.2 = Typecheck@0x55bbe3ea54e0[Type#282]
  goto BB155
BB155   <- [476, 478]
  val?^ | miss    %155.0 = Phi                      %476.1:BB476, %478.1:BB478
  val?^ | miss    %155.1 = %155.0
  dr              %155.2 = Phi                      %476.2:BB476, %478.2:BB478
  dr              %155.3 = %155.2
  fs              %155.4 = FrameState         R     0x55bbe3ea69b0+6190: [], env=e0.3
  void                    Deopt              !v    %155.4, %155.3, %155.1   !
BB479   <- [477]
  int$-           %479.0 = CastType           d     dn %477.2
  lgl$-           %479.1 = AsLogical                %479.0
  lgl$#-          %479.2 = Identical                %479.1, false
  void                    Branch                   %479.2 -> BB195 (if true) | BB159 (if false)
BB480   <- [477]
  fs              %480.0 = FrameState         R     0x55bbe3ea69b0+6281: [%477.2], env=e0.3
  void                    Deopt              !v    %480.0, Typecheck@0x55bbe3ea54e0[Type#283], %477.2   !
BB195   <- [479]
  void                    Nop                !     
  lgl$-           %195.1 = %479.1
  goto BB164
BB159   <- [479]
  val?^ | miss    %159.0 = LdVar              eR    names, e0.3
  lgl$#-          %159.1 = Identical                <blt names>, %159.0   <@?>
  void                    Branch                   %159.1 -> BB161 (if true) | BB160 (if false)
BB164   <- [195, 483]
  lgl$-           %164.0 = Phi                      %483.7:BB483, %195.1:BB195
  lgl$-           %164.1 = %164.0
  lgl$-           %164.2 = AsLogical                %164.1
  lgl$#-          %164.3 = Identical                %164.2, false
  void                    Branch                   %164.3 -> BB194 (if true) | BB165 (if false)
BB161   <- [159]
  val?            %161.0 = Extract1_1D        wed   %477.1, 1, elided   <val?_>
  void                    StVar              lW    dn, %161.0, e0.3
  lgl$#-          %161.2 = IsType                   %161.0 isA val?+
  void                    Branch                   %161.2 -> BB483 (if true) | BB484 (if false)
BB160   <- [159]
  (cls|spec|blt)  %160.0 = LdFun              !v    names, e0.3
  fs              %160.1 = FrameState         R     0x55bbe3ea69b0+6321: [%479.1, %160.0], env=e0.3
  void                    Deopt              !v    %160.1, DeadCall@0x55bbe3ea54e0[Call#78], %160.0   !
BB194   <- [164]
  void                    Nop                !     
  lgl$-           %194.1 = %164.2
  goto BB168
BB165   <- [164]
  val?^ | miss    %165.0 = LdVar              eR    nzchar, e0.3
  lgl$#-          %165.1 = Identical                <blt nzchar>, %165.0   <@?>
  void                    Branch                   %165.1 -> BB167 (if true) | BB166 (if false)
BB483   <- [161]
  val?+           %483.0 = CastType           d     dn %161.0   <val?_>
  val+            %483.1 = CallSafeBuiltin    wed   names(%483.0)    <val?_>
  lgl$-           %483.2 = Is                       %483.1, NULL
  void                    StVar              lW    n1, %483.1, e0.3
  lgl$-           %483.4 = Not                d     %483.2, elided
  lgl$-           %483.5 = AsLogical                %483.4
  lgl$-           %483.6 = LAnd                     %479.1, %483.5
  lgl$-           %483.7 = %483.6
  goto BB164
BB484   <- [161]
  fs              %484.0 = FrameState         R     0x55bbe3ea69b0+6422: [%479.1, <blt names>, %161.0], env=e0.3
  void                    Deopt              !v    %484.0, Typecheck@0x55bbe3ea54e0[Type#287], %161.0   !
BB168   <- [194, 167]
  lgl$-           %168.0 = Phi                      %167.5:BB167, %194.1:BB194
  lgl$-           %168.1 = %168.0
  lgl$-           %168.2 = AsLogical                %168.1
  lgl$#-          %168.3 = Identical                %168.2, false
  void                    Branch                   %168.3 -> BB193 (if true) | BB169 (if false)
BB167   <- [165]
  val?^ | miss    %167.0 = LdVar              eR    n1, e0.3
  val?            %167.1 = Force!             !v    %167.0, e0.3   <val?_>
  val?            %167.2 = CallBuiltin        !v    nzchar(%167.1) e0.3   <val?_>
  lgl$-           %167.3 = AsLogical          e     %167.2
  lgl$-           %167.4 = LAnd                     %164.2, %167.3
  lgl$-           %167.5 = %167.4
  goto BB168
BB166   <- [165]
  (cls|spec|blt)  %166.0 = LdFun              !v    nzchar, e0.3
  fs              %166.1 = FrameState         R     0x55bbe3ea69b0+6498: [%164.2, %166.0], env=e0.3
  void                    Deopt              !v    %166.1, DeadCall@0x55bbe3ea54e0[Call#79], %166.0   !
BB193   <- [168]
  void                    Nop                !     
  lgl$-           %193.1 = %168.2
  goto BB180
BB169   <- [168]
  val?^ | miss    %169.0 = LdVar              eR    length, e0.3
  lgl$#-          %169.1 = Identical                <blt length>, %169.0   <@?>
  void                    Branch                   %169.1 -> BB171 (if true) | BB170 (if false)
BB180   <- [193, 493]
  lgl$-           %180.0 = Phi                      %493.5:BB493, %193.1:BB193
  lgl$-           %180.1 = %180.0
  lgl$#-          %180.2 = CheckTrueFalse     e     %180.1
  void                    Branch                   %180.2 -> BB192 (if true) | BB183 (if false)
BB171   <- [169]
  val?^ | miss    %171.0 = LdVar              eR    ans.names, e0.3
  val?            %171.1 = Force!             !v    %171.0, e0.3   <val?_>
  lgl$#-          %171.2 = IsType                   %171.1 isA val?+
  void                    Branch                   %171.2 -> BB481 (if true) | BB482 (if false)
BB170   <- [169]
  (cls|spec|blt)  %170.0 = LdFun              !v    length, e0.3
  fs              %170.1 = FrameState         R     0x55bbe3ea69b0+6603: [%168.2, %170.0], env=e0.3
  void                    Deopt              !v    %170.1, DeadCall@0x55bbe3ea54e0[Call#80], %170.0   !
BB192   <- [180]
  val?^ | miss    %192.0 = LdVar              eR    n1, e0.3
  val?            %192.1 = Force!             !v    %192.0, e0.3   <val?_>
  (cls|spec|blt)  %192.2 = LdFun              !v    names<-, e0.3
  fs              %192.3 = FrameState         R     0x55bbe3ea69b0+6849: [%192.1, %192.2], env=e0.3
  void                    Deopt              !v    %192.3, DeadCall@0x55bbe3ea54e0[Call#82], %192.2   !
BB183   <- [180]
  val?^ | miss    %183.0 = LdVar              eR    c, e0.3
  lgl$#-          %183.1 = Identical                <blt c>, %183.0   <true>
  void                    Branch                   %183.1 -> BB485 (if true) | BB486 (if false)
BB481   <- [171]
  val?+           %481.0 = CastType           d     dn %171.1   <val?_>
  (int|real)$-    %481.1 = CallSafeBuiltin    wed   length(%481.0)    <val?_>
  val?^ | miss    %481.2 = LdVar              eR    length, e0.3
  lgl$#-          %481.3 = Identical                <blt length>, %481.2   <@?>
  void                    Branch                   %481.3 -> BB175 (if true) | BB174 (if false)
BB482   <- [171]
  fs              %482.0 = FrameState         R     0x55bbe3ea69b0+6644: [%168.2, <blt length>, %171.1], env=e0.3
  void                    Deopt              !v    %482.0, Typecheck@0x55bbe3ea54e0[Type#293], %171.1   !
BB485   <- [183]
  val?^ | miss    %485.0 = LdVar              eR    dn1, e0.3
  lgl$#-          %485.1 = IsType                   %485.0 isA val?~- | miss
  void                    Branch                   %485.1 -> BB487 (if true) | BB488 (if false)
BB486   <- [183]
  void                    Nop                !     
  lgl$#-          %486.1 = %183.1
  dr              %486.2 = DeadBranchReached@0x55bbe3ea54e0[Test#65]
  goto BB181
BB175   <- [481]
  val?^ | miss    %175.0 = LdVar              eR    dn, e0.3
  val?            %175.1 = Force!             !v    %175.0, e0.3   <val?_>
  lgl$#-          %175.2 = IsType                   %175.1 isA val?+
  void                    Branch                   %175.2 -> BB489 (if true) | BB490 (if false)
BB174   <- [481]
  (cls|spec|blt)  %174.0 = LdFun              !v    length, e0.3
  fs              %174.1 = FrameState         R     0x55bbe3ea69b0+6699: [%168.2, %481.1, %174.0], env=e0.3
  void                    Deopt              !v    %174.1, DeadCall@0x55bbe3ea54e0[Call#81], %174.0   !
BB487   <- [485]
  val?~- | miss   %487.0 = CastType           d     dn %485.0
  val?-           %487.1 = Force!<value>            %487.0,    <vec$->
  val?^ | miss    %487.2 = LdVar              eR    dn.ans, e0.3
  lgl$#-          %487.3 = IsType                   %487.2 isA val?~- | miss
  void                    Branch                   %487.3 -> BB491 (if true) | BB492 (if false)
BB488   <- [485]
  void                    Nop                !     
  val?^ | miss    %488.1 = %485.0
  dr              %488.2 = Typecheck@0x55bbe3ea54e0[Type#305]
  goto BB181
BB181   <- [486, 488, 492]
  val?^ | miss    %181.0 = Phi                      %486.1:BB486, %488.1:BB488, %492.1:BB492
  val?^ | miss    %181.1 = %181.0
  dr              %181.2 = Phi                      %486.2:BB486, %488.2:BB488, %492.2:BB492
  dr              %181.3 = %181.2
  fs              %181.4 = FrameState         R     0x55bbe3ea69b0+6819: [%180.1], env=e0.3
  void                    Deopt              !v    %181.4, %181.3, %181.1   !
BB489   <- [175]
  val?+           %489.0 = CastType           d     dn %175.1   <val?_>
  val?            %489.1 = Extract2_1D        wed   %489.0, 1, elided   <val?_>
  lgl$#-          %489.2 = IsType                   %489.1 isA val?+
  void                    Branch                   %489.2 -> BB493 (if true) | BB494 (if false)
BB490   <- [175]
  fs              %490.0 = FrameState         R     0x55bbe3ea69b0+6740: [%168.2, %481.1, <blt length>, %175.1], env=e0.3
  void                    Deopt              !v    %490.0, Typecheck@0x55bbe3ea54e0[Type#297], %175.1   !
BB491   <- [487]
  val?~- | miss   %491.0 = CastType           d     dn %487.2
  val?-           %491.1 = Force!<value>            %491.0,    <vec$->
  val+            %491.2 = CallSafeBuiltin    wed   c(%487.1, %491.1)    <vec->
  void                    StVar              lW    dn.ans, %491.2, e0.3
  val?^ | miss    %491.4 = LdVar              eR    array, e0.3
  lgl$#-          %491.5 = Identical                %491.4, function(data=NA, dim=length(data), dimnames=N|...
  void                    Branch                   %491.5 -> BB495 (if true) | BB496 (if false)
BB492   <- [487]
  void                    Nop                !     
  val?^ | miss    %492.1 = %487.2
  dr              %492.2 = Typecheck@0x55bbe3ea54e0[Type#306]
  goto BB181
BB493   <- [489]
  val?+           %493.0 = CastType           d     dn %489.1   <val?_>
  real$-          %493.1 = CallSafeBuiltin    wed   length(%493.0)    <val?_>
  lgl$-           %493.2 = Eq                 d     %481.1, %493.1, elided   <val?_>
  lgl$-           %493.3 = AsLogical                %493.2
  lgl$-           %493.4 = LAnd                     %168.2, %493.3
  lgl$-           %493.5 = %493.4
  goto BB180
BB494   <- [489]
  fs              %494.0 = FrameState         R     0x55bbe3ea69b0+6783: [%168.2, %481.1, <blt length>, %489.1], env=e0.3
  void                    Deopt              !v    %494.0, Typecheck@0x55bbe3ea54e0[Type#298], %489.1   !
BB495   <- [491]
  prom-           %495.0 = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p19, e0.3
  prom-           %495.1 = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p22, e0.3
  val?^           %495.2 = CastType                 up %495.1
  val?^           %495.3 = CastType                 up %495.0
  val?^ | miss    %495.4 = LdVar              eR    ans, e0.3
  lgl$#-          %495.5 = IsType                   %495.4 isA real-
  void                    Branch                   %495.5 -> BB497 (if true) | BB498 (if false)
BB496   <- [491]
  void                    Nop                !     
  val?^ | miss    %496.1 = %491.4
  dr              %496.2 = CallTarget@0x55bbe3ea54e0[Call#84]
  goto BB184
BB497   <- [495]
  real-           %497.0 = CastType           d     dn %495.4
  prom-           %497.1 = MkArg                    %497.0, apply[0x55bbef63aaa0]_p18 (!refl), e0.3
  val?~           %497.2 = CastType                 up %497.1
  env             e497.3 = (MkEnv)            l     data=%497.2, dim=%495.3, dimnames=%495.2, parent=R_BaseNamespace, context 0
  lgl$#-          %497.4 = IsEnvStub          R     , e497.3
  void                    Branch                   %497.4 -> BB499 (if true) | BB500 (if false)
BB498   <- [495]
  void                    Nop                !     
  val?^ | miss    %498.1 = %495.4
  dr              %498.2 = Typecheck@0x55bbe3ea54e0[Type#308]
  goto BB184
BB184   <- [496, 498, 500]
  val?^ | miss    %184.0 = Phi                      %496.1:BB496, %498.1:BB498, e500.1:BB500
  val?^ | miss    %184.1 = %184.0
  dr              %184.2 = Phi                      %496.2:BB496, %498.2:BB498, %500.2:BB500
  dr              %184.3 = %184.2
  fs              %184.4 = FrameState         R     0x55bbe3ea69b0+7036: [], env=e0.3
  void                    Deopt              !v    %184.4, %184.3, %184.1   !
BB499   <- [497]
  (cls|spec|blt)  %499.0 = LdFun              !v    c, <0x55bbe1e20940>, e0.3
  lgl$#-          %499.1 = Identical                %499.0, <blt c>
  void                    Branch                   %499.1 -> BB501 (if true) | BB502 (if false)
BB500   <- [497]
  void                    Nop                !     
  env             e500.1 = e497.3
  dr              %500.2 = EnvStubMaterialized@0x55bbe829c370[Call#unknown]
  goto BB184
BB501   <- [499]
  val?^ | miss    %501.0 = LdVar              eR    len.a, e0.3
  val?            %501.1 = Force!<value>      !v    %501.0, e0.3   <int$->
  val?^ | miss    %501.2 = LdVar              eR    d2, e0.3
  val?            %501.3 = Force!<value>      !v    %501.2, e0.3   <real$->
  val?            %501.4 = IDiv               !v    %501.1, %501.3, e0.3   <real$->
  val?^ | miss    %501.5 = LdVar              eR    d.ans, e0.3
  val?            %501.6 = Force!<value>      !v    %501.5, e0.3   <int$->
  val?            %501.7 = CallBuiltin        !v    c(%501.4, %501.6) e0.3   <real->
  prom-           %501.8 = MkArg                    %501.7, apply[0x55bbef63aaa0]_p19 (!refl), e0.3
  val?~           %501.9 = CastType                 up %501.8
  void                    StArg              lWd   dim, %501.9, e497.3
  lgl$#-          %501.11 = IsType                   %501.7 isA val?-
  void                    Branch                   %501.11 -> BB503 (if true) | BB504 (if false)
BB502   <- [499]
  fs              %502.0 = FrameState         R     0x55bbe3ea69b0+7078: [], env=e0.3
  env             e502.1 = (MkEnv)            l     data=%497.2, dim=%495.3, dimnames=%495.2, parent=R_BaseNamespace, context 0
  fs              %502.2 = FrameState         R     0x55bbe80f1160+69: [<blt is.atomic>, %497.0], env=e502.1, next=%502.0
  void                    Deopt              !v    %502.2, CallTarget@0x55bbe3ea54e0[Call#85], %499.0   !
BB503   <- [501]
  val?-           %503.0 = CastType           d     dn %501.7   <(int|real)->
  lgl$#-          %503.1 = IsEnvStub          R     , e497.3
  void                    Branch                   %503.1 -> BB505 (if true) | BB506 (if false)
BB504   <- [501]
  void                    Nop                !     
  val?            %504.1 = %501.7
  dr              %504.2 = Typecheck@0x55bbe829c370[Type#9]
  goto BB188
BB505   <- [503]
  val?            %505.0 = Force!<lazy>       !vL   %495.2, e497.3   <(nil|vec)->
  lgl$#-          %505.1 = IsType                   %505.0 isA val?-
  void                    Branch                   %505.1 -> BB507 (if true) | BB508 (if false)
BB506   <- [503]
  void                    Nop                !     
  env             e506.1 = e497.3
  dr              %506.2 = EnvStubMaterialized@0x55bbe829c370[Call#unknown]
  goto BB188
BB188   <- [504, 506]
  val?^ | miss    %188.0 = Phi                      %504.1:BB504, e506.1:BB506
  val?^ | miss    %188.1 = %188.0
  dr              %188.2 = Phi                      %504.2:BB504, %506.2:BB506
  dr              %188.3 = %188.2
  fs              %188.4 = FrameState         R     0x55bbe3ea69b0+7078: [], env=e0.3
  fs              %188.5 = FrameState         R     0x55bbe80f1160+236: [%497.0, %501.7], env=e497.3, next=%188.4
  void                    Deopt              !v    %188.5, %188.3, %188.1   !
BB507   <- [505]
  val?-           %507.0 = CastType           d     dn %505.0   <(nil|vec)->
  lgl$#-          %507.1 = IsEnvStub          R     , e497.3
  void                    Branch                   %507.1 -> BB509 (if true) | BB510 (if false)
BB508   <- [505]
  void                    Nop                !     
  val?            %508.1 = %505.0
  dr              %508.2 = Typecheck@0x55bbe829c370[Type#10]
  goto BB190
BB509   <- [507]
  val+            %509.0 = CallSafeBuiltin    vwed  array(%497.0, %503.0, %507.0)    <real_>
  val+            %509.1 = %509.0
  goto BB148
BB510   <- [507]
  void                    Nop                !     
  env             e510.1 = e497.3
  dr              %510.2 = EnvStubMaterialized@0x55bbe829c370[Call#unknown]
  goto BB190
BB190   <- [508, 510]
  val?^ | miss    %190.0 = Phi                      %508.1:BB508, e510.1:BB510
  val?^ | miss    %190.1 = %190.0
  dr              %190.2 = Phi                      %508.2:BB508, %510.2:BB510
  dr              %190.3 = %190.2
  fs              %190.4 = FrameState         R     0x55bbe3ea69b0+7078: [], env=e0.3
  fs              %190.5 = FrameState         R     0x55bbe80f1160+250: [%497.0, %503.0, %505.0], env=e497.3, next=%190.4
  void                    Deopt              !v    %190.5, %190.3, %190.1   !
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simplify, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(lgl|real)+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55bbe1e20940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p5, e0.0
  prom-           %0.3  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p6, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <int->
  void                    Return             l     %0.4
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s.call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s.ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55bbe1e20940>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p20, e0.0
  prom-           %0.3  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p21, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real->
  void                    Return             l     %0.4
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    len.a, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  val?^ | miss    %0.3  = LdVar              eR    d2, e0.0
  void                    Visible            v     
  val?            %0.5  = Force<value>       !     %0.3, e0.0   <real$->
  val?            %0.6  = IDiv               !     %0.2, %0.5, e0.0   <real$->
  void                    Return             l     %0.6
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    d.ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    names, <0x55bbe1e20470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p23, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <nil->
  lgl$-           %0.4  = Is                       %0.3, NULL
  lgl$-           %0.5  = Not                d     %0.4, elided
  lgl$-           %0.6  = AsLogical                %0.5
  lgl$#-          %0.7  = Identical                %0.6, true
  void                    Branch                   %0.7 -> BB2 (if true) | BB7 (if false)
BB2   <- [0]
  void                    Nop                !     
  lgl$-           %2.1  = %0.6
  goto BB3
BB7   <- [0]
  (cls|spec|blt)  %7.0  = LdFun              !v    all, <0x55bbe1e20dd8>, e0.0
  prom-           %7.1  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p24, e0.0
  val?            %7.2  = Call               !v    %7.0(%7.1) e0.0   <lgl$->
  val?            %7.3  = Not                !v    %7.2, e0.0
  lgl$-           %7.4  = AsLogical          e     %7.3
  lgl$-           %7.5  = LOr                      %0.6, %7.4
  lgl$-           %7.6  = %7.5
  goto BB3
BB3   <- [2, 7]
  lgl$-           %3.0  = Phi                      %7.6:BB7, %2.1:BB2
  lgl$-           %3.1  = %3.0
  lgl$#-          %3.2  = CheckTrueFalse     e     %3.1
  void                    Branch                   %3.2 -> BB6 (if true) | BB4 (if false)
BB6   <- [3]
  val?^ | miss    %6.0  = LdVar              eR    dn.ans, e0.0
  void                    Visible            v     
  val?            %6.2  = Force              !     %6.0, e0.0   <val?_>
  val?            %6.3  = %6.2
  goto BB5
BB4   <- [3]
  void                    Invisible          v     
  nil-            %4.1  = nil
  goto BB5
BB5   <- [4, 6]
  val?            %5.0  = Phi                      %4.1:BB4, %6.3:BB6
  val?            %5.1  = %5.0
  void                    Return             l     %5.1
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn.ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, <0x55bbe1f3d9e8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p25, e0.0
  prom-           %0.3  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p26, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3, na-lgl) e0.0   <lgl->
  void                    Return             l     %0.4
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    dn.ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    is.null, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <blt->
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    newX, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <(lgl|real)+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p32, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, missingArg, %3.1, e0.0   <(lgl|real)+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    newX, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real+>
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    i, e0.0
  val?            %2.1  = Force<value>       !v    %2.0, e0.0   <int$->
  val?            %2.2  = %2.1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, apply[0x55bbef63aaa0]_p34, e0.0
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.1:BB4
  val?            %3.1  = %3.0
  val?            %3.2  = Extract1_2D        !v    %0.2, missingArg, %3.1, e0.0   <real+>
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ apply[0x55bbef63aaa0]                                                        │
└──────────────────────────────────────────────────────────────────────────────┘
