
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55bbe8f59e90]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
FUN[0x55bbe8f59e90]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    inherits, <env 0x55bbe479cb88>
  lgl$#-          %0.2  = Identical                %0.1, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %0.2 -> BB145 (if true) | BB146 (if false)
BB145   <- [0]
  env             e145.0 = MkEnv              l     x=%0.0, parent=<env 0x55bbe479cb88>, context 1
  prom-           %145.1 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p0, e145.0
  ct              %145.2 = PushContext        lCL   %145.1, "formula", inherits(x, "formula"), function(x, what, which=FALSE) <(rir::Dispatch|..., e145.0
  val?^           %145.3 = CastType                 up %145.1
  env             e145.4 = MkEnv              l     x=%145.3, what="formula", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %145.5 = Force!<lazy>       !vL   %145.3, e145.4   <val?>
  val?            %145.6 = CallBuiltin        !v    inherits(%145.5, "formula", false) e145.4
  val?            %145.7 = PopContext         C     %145.6, %145.2   <lgl$->
  lgl$#-          %145.8 = IsType                   %145.7 isA lgl$-
  void                    Branch                   %145.8 -> BB147 (if true) | BB148 (if false)
BB146   <- [0]
  env             e146.0 = (MkEnv)            l     x=%0.0, parent=<env 0x55bbe479cb88>, context 1
  fs              %146.1 = FrameState         R     0x55bbe9b03910+0: [], env=e146.0
  void                    Deopt              !v    %146.1, CallTarget@0x55bbee332f08[Call#0], %0.1
BB147   <- [145]
  lgl$-           %147.0 = CastType           d     dn %145.7
  lgl$#-          %147.1 = CheckTrueFalse     e     %147.0
  void                    Branch                   %147.1 -> BB137 (if true) | BB5 (if false)
BB148   <- [145]
  void                    Nop                !     
  val?            %148.1 = %145.7
  dr              %148.2 = Typecheck@0x55bbee332f08[Type#1]
  goto BB3
BB137   <- [147]
  val?^ | miss    %137.0 = LdVar              eR    length, e145.0
  lgl$#-          %137.1 = Identical                <blt length>, %137.0   <true>
  void                    Branch                   %137.1 -> BB149 (if true) | BB150 (if false)
BB5   <- [147]
  val?^ | miss    %5.0  = LdVar              eR    inherits, e145.0
  lgl$#-          %5.1  = Identical                %5.0, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Branch                   %5.1 -> BB151 (if true) | BB152 (if false)
BB3   <- [148, 150, 152]
  val?^ | miss    %3.0  = Phi                      %148.1:BB148, %150.1:BB150, %152.1:BB152
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %148.2:BB148, %150.2:BB150, %152.2:BB152
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbe9b03910+37: [%145.7], env=e145.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB149   <- [137]
  val?^ | miss    %149.0 = LdVar              eR    x, e145.0
  val?            %149.1 = Force!<wrapped>    !v    %149.0, e145.0   <code>
  val?            %149.2 = CallBuiltin        !v    length(%149.1) e145.0   <int$->
  lgl$#-          %149.3 = IsType                   %149.2 isA int$-
  void                    Branch                   %149.3 -> BB155 (if true) | BB156 (if false)
BB150   <- [137]
  void                    Nop                !     
  lgl$#-          %150.1 = %137.1
  dr              %150.2 = DeadBranchReached@0x55bbee332f08[Test#16]
  goto BB3
BB151   <- [5]
  prom-           %151.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p1, e145.0
  ct              %151.1 = PushContext        lCL   %151.0, "call", inherits(x, "call"), function(x, what, which=FALSE) <(rir::Dispatch|..., e145.0
  val?^           %151.2 = CastType                 up %151.0
  env             e151.3 = MkEnv              l     x=%151.2, what="call", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %151.4 = Force!<lazy>       !vL   %151.2, e151.3   <val?>
  val?            %151.5 = CallBuiltin        !v    inherits(%151.4, "call", false) e151.3
  val?            %151.6 = PopContext         C     %151.5, %151.1   <lgl$->
  lgl$#-          %151.7 = IsType                   %151.6 isA lgl$-
  void                    Branch                   %151.7 -> BB153 (if true) | BB154 (if false)
BB152   <- [5]
  void                    Nop                !     
  val?^ | miss    %152.1 = %5.0
  dr              %152.2 = CallTarget@0x55bbee332f08[Call#1]
  goto BB3
BB155   <- [149]
  int$-           %155.0 = CastType           d     dn %149.2
  void                    Visible            v     
  lgl$-           %155.2 = Eq                 vd    %155.0, 3, elided   <lgl$->
  lgl$#-          %155.3 = CheckTrueFalse     e     %155.2
  void                    Branch                   %155.3 -> BB141 (if true) | BB140 (if false)
BB156   <- [149]
  void                    Nop                !     
  val?            %156.1 = %149.2
  dr              %156.2 = Typecheck@0x55bbee332f08[Type#60]
  goto BB138
BB153   <- [151]
  lgl$-           %153.0 = CastType           d     dn %151.6
  lgl$-           %153.1 = AsLogical                %153.0
  lgl$#-          %153.2 = Identical                %153.1, false
  void                    Branch                   %153.2 -> BB136 (if true) | BB8 (if false)
BB154   <- [151]
  fs              %154.0 = FrameState         R     0x55bbe9b03910+85: [%151.6], env=e145.0
  void                    Deopt              !v    %154.0, Typecheck@0x55bbee332f08[Type#3], %151.6   !
BB141   <- [155]
  val?^ | miss    %141.0 = LdVar              eR    c, e145.0
  lgl$#-          %141.1 = Identical                <blt c>, %141.0   <@?>
  void                    Branch                   %141.1 -> BB143 (if true) | BB142 (if false)
BB140   <- [155]
  val?^ | miss    %140.0 = LdVar              eR    terms.inner, e145.0
  lgl$#-          %140.1 = Identical                %140.0, function(x) <(rir::DispatchTable*)0x55bbe67c02|...
  void                    Branch                   %140.1 -> BB157 (if true) | BB158 (if false)
BB138   <- [156, 158]
  val?^ | miss    %138.0 = Phi                      %156.1:BB156, %158.1:BB158
  val?^ | miss    %138.1 = %138.0
  dr              %138.2 = Phi                      %156.2:BB156, %158.2:BB158
  dr              %138.3 = %138.2
  fs              %138.4 = FrameState         R     0x55bbe9b03910+1277: [%149.2], env=e145.0
  void                    Deopt              !v    %138.4, %138.3, %138.1   !
BB136   <- [153]
  void                    Nop                !     
  lgl$-           %136.1 = %153.1
  goto BB27
BB8   <- [153]
  val?^ | miss    %8.0  = LdVar              eR    x, e145.0
  val?            %8.1  = Force!<wrapped>    !v    %8.0, e145.0   <code->
  lgl$#-          %8.2  = IsType                   %8.1 isA val+   <true>
  lgl$#-          %8.3  = IsType                   %8.1 isA val?-
  void                    Branch                   %8.2 -> BB159 (if true) | BB160 (if false)
BB143   <- [141]
  (cls|spec|blt)  %143.0 = LdFun              !v    terms.inner, e145.0
  fs              %143.1 = FrameState         R     0x55bbe9b03910+1412: [<blt c>, %143.0], env=e145.0
  void                    Deopt              !v    %143.1, DeadCall@0x55bbee332f08[Call#21], %143.0   !
BB142   <- [141]
  (cls|spec|blt)  %142.0 = LdFun              !v    c, e145.0
  fs              %142.1 = FrameState         R     0x55bbe9b03910+1370: [%142.0], env=e145.0
  void                    Deopt              !v    %142.1, DeadCall@0x55bbee332f08[Call#18], %142.0   !
BB157   <- [140]
  prom-           %157.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p10, e145.0
  val?            %157.1 = StaticCall         !     FUN[0x55bbe8f59e90](%157.0) e145.0   <str->
  val?            %157.2 = %157.1
  goto BB64
BB158   <- [140]
  void                    Nop                !     
  val?^ | miss    %158.1 = %140.0
  dr              %158.2 = CallTarget@0x55bbee332f08[Call#17]
  goto BB138
BB27   <- [136, 26]
  lgl$-           %27.0 = Phi                      %26.4:BB26, %136.1:BB136
  lgl$-           %27.1 = %27.0
  lgl$#-          %27.2 = CheckTrueFalse     e     %27.1
  void                    Branch                   %27.2 -> BB76 (if true) | BB30 (if false)
BB159   <- [8]
  void                    Branch                   %8.3 -> BB161 (if true) | BB162 (if false)
BB160   <- [8]
  void                    Nop                !     
  lgl$#-          %160.1 = %8.2
  dr              %160.2 = DeadBranchReached@0x55bbee332f08[Test#0]
  goto BB9
BB64   <- [63, 157]
  val?            %64.0 = Phi                      %63.2:BB63, %157.2:BB157
  val?            %64.1 = %64.0
  void                    Return             l     %64.1
BB76   <- [27]
  val?^ | miss    %76.0 = LdVar              eR    x, e145.0
  val?            %76.1 = Force!<wrapped>    !v    %76.0, e145.0   <code->
  lgl$#-          %76.2 = IsType                   %76.1 isA val+   <true>
  lgl$#-          %76.3 = IsType                   %76.1 isA val?-
  void                    Branch                   %76.2 -> BB163 (if true) | BB164 (if false)
BB30   <- [27]
  val?^ | miss    %30.0 = LdVar              eR    deparse, e145.0
  lgl$#-          %30.1 = Identical                %30.0, function(expr, width.cutoff=60L, backtick=%in%|...
  void                    Branch                   %30.1 -> BB167 (if true) | BB168 (if false)
BB161   <- [159]
  val?-           %161.0 = CastType           d     dn %8.1   <code->
  val?            %161.1 = Extract2_1D        wed   %161.0, 1, elided   <sym->
  val?^ | miss    %161.2 = LdVar              eR    as.name, e145.0
  lgl$#-          %161.3 = Identical                %161.2, function(x) <(rir::DispatchTable*)0x55bbe48f22|...
  void                    Branch                   %161.3 -> BB165 (if true) | BB166 (if false)
BB162   <- [159]
  void                    Nop                !     
  val?            %162.1 = %8.1
  dr              %162.2 = Typecheck@0x55bbee332f08[Type#4]
  goto BB9
BB9   <- [160, 162]
  val?^ | miss    %9.0  = Phi                      %160.1:BB160, %162.1:BB162
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %160.2:BB160, %162.2:BB162
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55bbe9b03910+106: [%153.1, %8.1], env=e145.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB163   <- [76]
  void                    Branch                   %76.3 -> BB169 (if true) | BB170 (if false)
BB164   <- [76]
  void                    Nop                !     
  lgl$#-          %164.1 = %76.2
  dr              %164.2 = DeadBranchReached@0x55bbee332f08[Test#2]
  goto BB77
BB167   <- [30]
  prom-           %167.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p2, e145.0
  ct              %167.1 = PushContext        lCL   %167.0, deparse(x), function(expr, width.cutoff=60L, backtick=%in%|..., e145.0
  val?^           %167.2 = CastType                 up %167.0
  env             e167.3 = MkEnv              l     expr=%167.2, width.cutoff(miss)=60L, backtick(miss)=missingArg, control(miss)=missingArg, nlines(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %167.4 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p14, e167.3
  val?^ | miss    %167.5 = CastType                 up %167.4
  void                    StArg              lW    backtick, %167.5, e167.3
  prom-           %167.7 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p18, e167.3
  val?^ | miss    %167.8 = CastType                 up %167.7
  void                    StArg              lW    control, %167.8, e167.3
  prom-           %167.10 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p19 (!refl), 
  val?^ | miss    %167.11 = CastType                 up %167.10
  void                    StArg              lW    nlines, %167.11, e167.3
  val?            %167.13 = Force!<lazy>       !vL   %167.2, e167.3   <(sym|code)->
  val?            %167.14 = Force!<lazy>       !v    %167.5, e167.3   <lgl$->
  val?^ | miss    %167.15 = LdVar              eR    .deparseOpts, e167.3
  lgl$#-          %167.16 = Identical                %167.15, function(control) <(rir::DispatchTable*)0x55bb|...
  void                    Branch                   %167.16 -> BB179 (if true) | BB180 (if false)
BB168   <- [30]
  fs              %168.0 = FrameState         R     0x55bbe9b03910+311: [%27.1], env=e145.0
  void                    Deopt              !v    %168.0, CallTarget@0x55bbee332f08[Call#4], %30.0   !
BB165   <- [161]
  val             %165.0 = CallSafeBuiltin    wed   as.vector("$", "symbol")    <sym->
  lgl$#-          %165.1 = IsType                   %165.0 isA val-
  lgl$#-          %165.2 = IsType                   %161.1 isA val?-
  void                    Branch                   %165.2 -> BB173 (if true) | BB174 (if false)
BB166   <- [161]
  fs              %166.0 = FrameState         R     0x55bbe9b03910+149: [%153.1, %161.1], env=e145.0
  void                    Deopt              !v    %166.0, CallTarget@0x55bbee332f08[Call#2], %161.2   !
BB169   <- [163]
  val?-           %169.0 = CastType           d     dn %76.1   <code->
  val?            %169.1 = Extract2_1D        wed   %169.0, 1, elided   <sym->
  lgl$#-          %169.2 = IsType                   %169.1 isA val?-
  void                    Branch                   %169.2 -> BB171 (if true) | BB172 (if false)
BB170   <- [163]
  void                    Nop                !     
  val?            %170.1 = %76.1
  dr              %170.2 = Typecheck@0x55bbee332f08[Type#14]
  goto BB77
BB77   <- [164, 170]
  val?^ | miss    %77.0 = Phi                      %164.1:BB164, %170.1:BB170
  val?^ | miss    %77.1 = %77.0
  dr              %77.2 = Phi                      %164.2:BB164, %170.2:BB170
  dr              %77.3 = %77.2
  fs              %77.4 = FrameState         R     0x55bbe9b03910+369: [%76.1], env=e145.0
  void                    Deopt              !v    %77.4, %77.3, %77.1   !
BB179   <- [167]
  prom-           %179.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p20, e167.3
  ct              %179.1 = PushContext        lCL   %179.0, .deparseOpts(control), function(control) <(rir::DispatchTable*)0x55bb|..., e167.3
  val?^           %179.2 = CastType                 up %179.0
  env             e179.3 = MkEnv              l     control=%179.2, parent=R_BaseNamespace, context 1
  val?            %179.4 = Force!<lazy>       !vL   %179.2, e179.3   <str->
  lgl$#-          %179.5 = IsType                   %179.4 isA val?-
  void                    Branch                   %179.5 -> BB183 (if true) | BB184 (if false)
BB180   <- [167]
  fs              %180.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %180.1 = FrameState         R     0x55bbe6d63040+37: [%167.13, 60L, %167.14], env=e167.3, next=%180.0
  void                    Deopt              !v    %180.1, CallTarget@0x55bbe94172c0[Call#4], %167.15   !
BB173   <- [165]
  val?-           %173.0 = CastType           d     dn %161.1   <sym->
  void                    Branch                   %165.1 -> BB177 (if true) | BB178 (if false)
BB174   <- [165]
  void                    Nop                !     
  val?            %174.1 = %161.1
  dr              %174.2 = Typecheck@0x55bbee332f08[Type#5]
  goto BB13
BB171   <- [169]
  val?-           %171.0 = CastType           d     dn %169.1   <sym->
  lgl-            %171.1 = Eq                 wed   %171.0, "+", elided   <lgl$->
  lgl$#-          %171.2 = IsType                   %171.1 isA lgl$-
  void                    Branch                   %171.2 -> BB175 (if true) | BB176 (if false)
BB172   <- [169]
  fs              %172.0 = FrameState         R     0x55bbe9b03910+412: [%169.1], env=e145.0
  void                    Deopt              !v    %172.0, Typecheck@0x55bbee332f08[Type#15], %169.1   !
BB183   <- [179]
  val?-           %183.0 = CastType           d     dn %179.4   <str->
  (int|real)$-    %183.1 = CallSafeBuiltin    wed   length(%183.0)    <int$->
  lgl$#-          %183.2 = IsType                   %183.1 isA int$-
  void                    Branch                   %183.2 -> BB185 (if true) | BB186 (if false)
BB184   <- [179]
  fs              %184.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %184.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%184.0
  fs              %184.2 = FrameState         R     0x55bbe2687320+69: [<blt length>, %179.4], env=e179.3, next=%184.1
  void                    Deopt              !v    %184.2, Typecheck@0x55bbe347f1b8[Type#1], %179.4   !
BB177   <- [173]
  val-            %177.0 = CastType           d     dn %165.0   <sym->
  lgl-            %177.1 = Neq                wed   %173.0, %177.0, elided   <lgl$->
  lgl$#-          %177.2 = IsType                   %177.1 isA lgl$-
  void                    Branch                   %177.2 -> BB181 (if true) | BB182 (if false)
BB178   <- [173]
  void                    Nop                !     
  val             %178.1 = %165.0
  dr              %178.2 = Typecheck@0x55bbee332f08[Type#6]
  goto BB13
BB13   <- [174, 178]
  val?^ | miss    %13.0 = Phi                      %174.1:BB174, %178.1:BB178
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %174.2:BB174, %178.2:BB178
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55bbe9b03910+187: [%153.1, %161.1], env=e145.0
  env             e13.5 = (MkEnv)            l     x="$", parent=R_BaseNamespace, context 0
  fs              %13.6 = FrameState         R     0x55bbe42d4910+33: [%165.0], env=e13.5, next=%13.4
  void                    Deopt              !v    %13.6, %13.3, %13.1   !
BB175   <- [171]
  lgl$-           %175.0 = CastType           d     dn %171.1
  lgl$-           %175.1 = AsLogical                %175.0
  lgl$#-          %175.2 = Identical                %175.1, true
  void                    Branch                   %175.2 -> BB134 (if true) | BB83 (if false)
BB176   <- [171]
  fs              %176.0 = FrameState         R     0x55bbe9b03910+425: [%171.1], env=e145.0
  void                    Deopt              !v    %176.0, Typecheck@0x55bbee332f08[Type#16], %171.1   !
BB185   <- [183]
  int$-           %185.0 = CastType           d     dn %183.1
  lgl$-           %185.1 = Not                d     %185.0, elided
  lgl$#-          %185.2 = CheckTrueFalse     e     %185.1
  void                    Branch                   %185.2 -> BB75 (if true) | BB37 (if false)
BB186   <- [183]
  void                    Nop                !     
  (int|real)$-    %186.1 = %183.1
  dr              %186.2 = Typecheck@0x55bbe347f1b8[Type#2]
  goto BB35
BB181   <- [177]
  lgl$-           %181.0 = CastType           d     dn %177.1
  lgl$-           %181.1 = AsLogical                %181.0
  lgl$#-          %181.2 = Identical                %181.1, false
  void                    Branch                   %181.2 -> BB135 (if true) | BB17 (if false)
BB182   <- [177]
  fs              %182.0 = FrameState         R     0x55bbe9b03910+193: [%153.1, %177.1], env=e145.0
  void                    Deopt              !v    %182.0, Typecheck@0x55bbee332f08[Type#7], %177.1   !
BB134   <- [175]
  void                    Nop                !     
  lgl$-           %134.1 = %175.1
  goto BB90
BB83   <- [175]
  val?^ | miss    %83.0 = LdVar              eR    x, e145.0
  val?            %83.1 = Force!<wrapped>    !v    %83.0, e145.0   <code->
  lgl$#-          %83.2 = IsType                   %83.1 isA val+   <true>
  lgl$#-          %83.3 = IsType                   %83.1 isA val?-
  void                    Branch                   %83.2 -> BB193 (if true) | BB194 (if false)
BB75   <- [185]
  void                    Nop                !     
  real$#-         %75.1 = 0
  goto BB60
BB37   <- [185]
  val?^ | miss    %37.0 = LdVar              eR    pmatch, e179.3
  lgl$#-          %37.1 = Identical                %37.0, function(x, table, nomatch=NA, duplicates.ok=F|...
  void                    Branch                   %37.1 -> BB187 (if true) | BB188 (if false)
BB35   <- [186, 188, 190]
  val?^ | miss    %35.0 = Phi                      %186.1:BB186, %188.1:BB188, %190.1:BB190
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %186.2:BB186, %188.2:BB188, %190.2:BB190
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %35.5 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%35.4
  fs              %35.6 = FrameState         R     0x55bbe2687320+91: [%183.1], env=e179.3, next=%35.5
  void                    Deopt              !v    %35.6, %35.3, %35.1   !
BB135   <- [181]
  void                    Nop                !     
  lgl$-           %135.1 = %181.1
  goto BB26
BB17   <- [181]
  val?^ | miss    %17.0 = LdVar              eR    x, e145.0
  val?            %17.1 = Force!<wrapped>    !v    %17.0, e145.0   <code->
  lgl$#-          %17.2 = IsType                   %17.1 isA val+   <true>
  lgl$#-          %17.3 = IsType                   %17.1 isA val?-
  void                    Branch                   %17.2 -> BB211 (if true) | BB212 (if false)
BB90   <- [134, 247]
  lgl$-           %90.0 = Phi                      %247.3:BB247, %134.1:BB134
  lgl$-           %90.1 = %90.0
  lgl$-           %90.2 = AsLogical                %90.1
  lgl$#-          %90.3 = Identical                %90.2, true
  void                    Branch                   %90.3 -> BB133 (if true) | BB91 (if false)
BB193   <- [83]
  void                    Branch                   %83.3 -> BB199 (if true) | BB200 (if false)
BB194   <- [83]
  void                    Nop                !     
  lgl$#-          %194.1 = %83.2
  dr              %194.2 = DeadBranchReached@0x55bbee332f08[Test#3]
  goto BB84
BB60   <- [75, 291]
  real$-          %60.0 = Phi                      %291.4:BB291, %75.1:BB75
  real$-          %60.1 = %60.0
  val?            %60.2 = PopContext         C     %60.1, %179.1   <real$->
  lgl$#-          %60.3 = IsType                   %60.2 isA real$-
  void                    Branch                   %60.3 -> BB191 (if true) | BB192 (if false)
BB187   <- [37]
  val?^ | miss    %187.0 = LdVar              eR    as.character, e179.3
  lgl$#-          %187.1 = Identical                %187.0, <blt as.character>
  void                    Branch                   %187.1 -> BB189 (if true) | BB190 (if false)
BB188   <- [37]
  void                    Nop                !     
  val?^ | miss    %188.1 = %37.0
  dr              %188.2 = CallTarget@0x55bbe347f1b8[Call#1]
  goto BB35
BB26   <- [135, 257]
  lgl$-           %26.0 = Phi                      %257.3:BB257, %135.1:BB135
  lgl$-           %26.1 = %26.0
  lgl$-           %26.2 = AsLogical                %26.1
  lgl$-           %26.3 = LAnd                     %153.1, %26.2
  lgl$-           %26.4 = %26.3
  goto BB27
BB211   <- [17]
  void                    Branch                   %17.3 -> BB219 (if true) | BB220 (if false)
BB212   <- [17]
  void                    Nop                !     
  lgl$#-          %212.1 = %17.2
  dr              %212.2 = DeadBranchReached@0x55bbee332f08[Test#1]
  goto BB18
BB133   <- [90]
  void                    Nop                !     
  lgl$-           %133.1 = %90.2
  goto BB98
BB91   <- [90]
  val?^ | miss    %91.0 = LdVar              eR    x, e145.0
  val?            %91.1 = Force!<wrapped>    !v    %91.0, e145.0   <code->
  lgl$#-          %91.2 = IsType                   %91.1 isA val+   <true>
  lgl$#-          %91.3 = IsType                   %91.1 isA val?-
  void                    Branch                   %91.2 -> BB205 (if true) | BB206 (if false)
BB199   <- [193]
  val?-           %199.0 = CastType           d     dn %83.1   <code->
  val?            %199.1 = Extract2_1D        wed   %199.0, 1, elided   <sym->
  lgl$#-          %199.2 = IsType                   %199.1 isA val?-
  void                    Branch                   %199.2 -> BB225 (if true) | BB226 (if false)
BB200   <- [193]
  void                    Nop                !     
  val?            %200.1 = %83.1
  dr              %200.2 = Typecheck@0x55bbee332f08[Type#17]
  goto BB84
BB84   <- [194, 200]
  val?^ | miss    %84.0 = Phi                      %194.1:BB194, %200.1:BB200
  val?^ | miss    %84.1 = %84.0
  dr              %84.2 = Phi                      %194.2:BB194, %200.2:BB200
  dr              %84.3 = %84.2
  fs              %84.4 = FrameState         R     0x55bbe9b03910+446: [%175.1, %83.1], env=e145.0
  void                    Deopt              !v    %84.4, %84.3, %84.1   !
BB191   <- [60]
  real$-          %191.0 = CastType           d     dn %60.2
  val?^ | miss    %191.1 = LdVar              eR    nlines, e167.3
  val?            %191.2 = Force!<lazy>       !v    %191.1, e167.3   <int$->
  val?            %191.3 = CallBuiltin        !v    deparse(%167.13, 60L, %167.14, %191.0, %191.2) e167.3
  val?            %191.4 = PopContext         C     %191.3, %167.1   <str$->
  void                    Visible            v     
  val?            %191.6 = %191.4
  goto BB63
BB192   <- [60]
  fs              %192.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %192.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14, %60.2], env=e167.3, next=%192.0
  void                    Deopt              !v    %192.1, Typecheck@0x55bbe94172c0[Type#9], %60.2   !
BB189   <- [187]
  val+            %189.0 = CallSafeBuiltin    wed   as.character(%183.0)    <str->
  lgl$#-          %189.1 = IsType                   %189.0 isA val?-
  void                    Branch                   %189.1 -> BB197 (if true) | BB198 (if false)
BB190   <- [187]
  void                    Nop                !     
  val?^ | miss    %190.1 = %187.0
  dr              %190.2 = CallTarget@0x55bbe347f1b8[Call#2]
  goto BB35
BB219   <- [211]
  val?-           %219.0 = CastType           d     dn %17.1   <code->
  val?            %219.1 = Extract2_1D        wed   %219.0, 1, elided   <sym->
  val?^ | miss    %219.2 = LdVar              eR    as.name, e145.0
  lgl$#-          %219.3 = Identical                %219.2, function(x) <(rir::DispatchTable*)0x55bbe48f22|...
  void                    Branch                   %219.3 -> BB231 (if true) | BB232 (if false)
BB220   <- [211]
  void                    Nop                !     
  val?            %220.1 = %17.1
  dr              %220.2 = Typecheck@0x55bbee332f08[Type#8]
  goto BB18
BB18   <- [212, 220]
  val?^ | miss    %18.0 = Phi                      %212.1:BB212, %220.1:BB220
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %212.2:BB212, %220.2:BB220
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55bbe9b03910+214: [%153.1, %181.1, %17.1], env=e145.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB98   <- [133, 217]
  lgl$-           %98.0 = Phi                      %217.3:BB217, %133.1:BB133
  lgl$-           %98.1 = %98.0
  lgl$-           %98.2 = AsLogical                %98.1
  lgl$#-          %98.3 = Identical                %98.2, true
  void                    Branch                   %98.3 -> BB132 (if true) | BB99 (if false)
BB205   <- [91]
  void                    Branch                   %91.3 -> BB207 (if true) | BB208 (if false)
BB206   <- [91]
  void                    Nop                !     
  lgl$#-          %206.1 = %91.2
  dr              %206.2 = DeadBranchReached@0x55bbee332f08[Test#4]
  goto BB92
BB225   <- [199]
  val?-           %225.0 = CastType           d     dn %199.1   <sym->
  lgl-            %225.1 = Eq                 wed   %225.0, "*", elided   <lgl$->
  lgl$#-          %225.2 = IsType                   %225.1 isA lgl$-
  void                    Branch                   %225.2 -> BB247 (if true) | BB248 (if false)
BB226   <- [199]
  fs              %226.0 = FrameState         R     0x55bbe9b03910+489: [%175.1, %199.1], env=e145.0
  void                    Deopt              !v    %226.0, Typecheck@0x55bbee332f08[Type#18], %199.1   !
BB63   <- [119, 191, 275]
  val?            %63.0 = Phi                      %191.6:BB191, %119.2:BB119, %275.2:BB275
  val?            %63.1 = %63.0
  val?            %63.2 = %63.1
  goto BB64
BB197   <- [189]
  val-            %197.0 = CastType           d     dn %189.0   <str->
  val+            %197.1 = CallSafeBuiltin    wed   as.character(%197.0)    <str->
  val?^ | miss    %197.2 = LdVar              eR    ..deparseOpts, e179.3
  val?            %197.3 = Force!<wrapped>    !v    %197.2, e179.3   <str->
  lgl$#-          %197.4 = IsType                   %197.3 isA val?-
  void                    Branch                   %197.4 -> BB213 (if true) | BB214 (if false)
BB198   <- [189]
  prom-           %198.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p23, e179.3
  val?^           %198.1 = CastType                 up %198.0
  fs              %198.2 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %198.3 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%198.2
  fs              %198.4 = FrameState         R     0x55bbe2687320+152: [], env=e179.3, next=%198.3
  prom-           %198.5 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p21, e179.3
  val?^           %198.6 = CastType                 up %198.5
  env             e198.7 = (MkEnv)            l     x=%198.6, table=%198.1, nomatch(miss)=NA, duplicates.ok(miss)=false, parent=R_BaseNamespace, context 0
  fs              %198.8 = FrameState         R     0x55bbe244d820+69: [<blt as.character>], env=e198.7, next=%198.4
  fs              %198.9 = FrameState         R     0x55bbe20b0af0+32(pr): [%189.0], env=e179.3, next=%198.8
  void                    Deopt              !v    %198.9, Typecheck@0x55bbe244d9f0[Type#1], %189.0   !
BB231   <- [219]
  val             %231.0 = CallSafeBuiltin    wed   as.vector("[", "symbol")    <sym->
  lgl$#-          %231.1 = IsType                   %231.0 isA val-
  lgl$#-          %231.2 = IsType                   %219.1 isA val?-
  void                    Branch                   %231.2 -> BB243 (if true) | BB244 (if false)
BB232   <- [219]
  fs              %232.0 = FrameState         R     0x55bbe9b03910+257: [%153.1, %181.1, %219.1], env=e145.0
  void                    Deopt              !v    %232.0, CallTarget@0x55bbee332f08[Call#3], %219.2   !
BB132   <- [98]
  void                    Nop                !     
  lgl$-           %132.1 = %98.2
  goto BB106
BB99   <- [98]
  val?^ | miss    %99.0 = LdVar              eR    x, e145.0
  val?            %99.1 = Force!<wrapped>    !v    %99.0, e145.0   <code->
  lgl$#-          %99.2 = IsType                   %99.1 isA val+   <true>
  lgl$#-          %99.3 = IsType                   %99.1 isA val?-
  void                    Branch                   %99.2 -> BB195 (if true) | BB196 (if false)
BB207   <- [205]
  val?-           %207.0 = CastType           d     dn %91.1   <code->
  val?            %207.1 = Extract2_1D        wed   %207.0, 1, elided   <sym->
  lgl$#-          %207.2 = IsType                   %207.1 isA val?-
  void                    Branch                   %207.2 -> BB209 (if true) | BB210 (if false)
BB208   <- [205]
  void                    Nop                !     
  val?            %208.1 = %91.1
  dr              %208.2 = Typecheck@0x55bbee332f08[Type#20]
  goto BB92
BB92   <- [206, 208]
  val?^ | miss    %92.0 = Phi                      %206.1:BB206, %208.1:BB208
  val?^ | miss    %92.1 = %92.0
  dr              %92.2 = Phi                      %206.2:BB206, %208.2:BB208
  dr              %92.3 = %92.2
  fs              %92.4 = FrameState         R     0x55bbe9b03910+525: [%90.2, %91.1], env=e145.0
  void                    Deopt              !v    %92.4, %92.3, %92.1   !
BB247   <- [225]
  lgl$-           %247.0 = CastType           d     dn %225.1
  lgl$-           %247.1 = AsLogical                %247.0
  lgl$-           %247.2 = LOr                      %175.1, %247.1
  lgl$-           %247.3 = %247.2
  goto BB90
BB248   <- [225]
  fs              %248.0 = FrameState         R     0x55bbe9b03910+502: [%175.1, %225.1], env=e145.0
  void                    Deopt              !v    %248.0, Typecheck@0x55bbee332f08[Type#19], %225.1   !
BB213   <- [197]
  val?-           %213.0 = CastType           d     dn %197.3   <str->
  val+            %213.1 = CallSafeBuiltin    wed   as.character(%213.0)    <str->
  val+            %213.2 = CallSafeBuiltin    wed   pmatch(%197.1, %213.1, NA, false)    <int->
  void                    StVar              lW    opts, %213.2, e179.3
  lgl$#-          %213.4 = IsType                   %213.2 isA int-
  val?^ | miss    %213.5 = LdVar              eR    anyNA, e179.3
  lgl$#-          %213.6 = Identical                <blt anyNA>, %213.5   <true>
  void                    Branch                   %213.6 -> BB215 (if true) | BB216 (if false)
BB214   <- [197]
  prom-           %214.0 = MkArg                    %197.0, FUN[0x55bbe8f59e90]_p21 (!refl), e179.3
  val?~           %214.1 = CastType                 up %214.0
  fs              %214.2 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %214.3 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%214.2
  fs              %214.4 = FrameState         R     0x55bbe2687320+152: [], env=e179.3, next=%214.3
  prom-           %214.5 = MkArg                    %197.3, FUN[0x55bbe8f59e90]_p23 (!refl), e179.3
  val?~           %214.6 = CastType                 up %214.5
  env             e214.7 = (MkEnv)            l     duplicates.ok(miss)=false, nomatch(miss)=NA, table=%214.6, x=%214.1, parent=R_BaseNamespace, context 0
  fs              %214.8 = FrameState         R     0x55bbe244d820+165: [%197.1, <blt as.character>, %197.3], env=e214.7, next=%214.4
  void                    Deopt              !v    %214.8, Typecheck@0x55bbe244d9f0[Type#4], %197.3   !
BB243   <- [231]
  val?-           %243.0 = CastType           d     dn %219.1   <sym->
  void                    Branch                   %231.1 -> BB253 (if true) | BB254 (if false)
BB244   <- [231]
  void                    Nop                !     
  val?            %244.1 = %219.1
  dr              %244.2 = Typecheck@0x55bbee332f08[Type#9]
  goto BB22
BB106   <- [132, 227]
  lgl$-           %106.0 = Phi                      %227.3:BB227, %132.1:BB132
  lgl$-           %106.1 = %106.0
  lgl$#-          %106.2 = CheckTrueFalse     e     %106.1
  void                    Branch                   %106.2 -> BB121 (if true) | BB109 (if false)
BB195   <- [99]
  void                    Branch                   %99.3 -> BB201 (if true) | BB202 (if false)
BB196   <- [99]
  void                    Nop                !     
  lgl$#-          %196.1 = %99.2
  dr              %196.2 = DeadBranchReached@0x55bbee332f08[Test#5]
  goto BB100
BB209   <- [207]
  val?-           %209.0 = CastType           d     dn %207.1   <sym->
  lgl-            %209.1 = Eq                 wed   %209.0, "-", elided   <lgl$->
  lgl$#-          %209.2 = IsType                   %209.1 isA lgl$-
  void                    Branch                   %209.2 -> BB217 (if true) | BB218 (if false)
BB210   <- [207]
  fs              %210.0 = FrameState         R     0x55bbe9b03910+568: [%90.2, %207.1], env=e145.0
  void                    Deopt              !v    %210.0, Typecheck@0x55bbee332f08[Type#21], %207.1   !
BB215   <- [213]
  void                    Branch                   %213.4 -> BB221 (if true) | BB222 (if false)
BB216   <- [213]
  void                    Nop                !     
  lgl$#-          %216.1 = %213.6
  dr              %216.2 = DeadBranchReached@0x55bbe347f1b8[Test#1]
  goto BB42
BB253   <- [243]
  val-            %253.0 = CastType           d     dn %231.0   <sym->
  lgl-            %253.1 = Neq                wed   %243.0, %253.0, elided   <lgl$->
  lgl$#-          %253.2 = IsType                   %253.1 isA lgl$-
  void                    Branch                   %253.2 -> BB257 (if true) | BB258 (if false)
BB254   <- [243]
  void                    Nop                !     
  val             %254.1 = %231.0
  dr              %254.2 = Typecheck@0x55bbee332f08[Type#10]
  goto BB22
BB22   <- [244, 254]
  val?^ | miss    %22.0 = Phi                      %244.1:BB244, %254.1:BB254
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %244.2:BB244, %254.2:BB254
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55bbe9b03910+295: [%153.1, %181.1, %219.1], env=e145.0
  env             e22.5 = (MkEnv)            l     x="[", parent=R_BaseNamespace, context 0
  fs              %22.6 = FrameState         R     0x55bbe42d4910+33: [%231.0], env=e22.5, next=%22.4
  void                    Deopt              !v    %22.6, %22.3, %22.1   !
BB121   <- [106]
  val?^ | miss    %121.0 = LdVar              eR    length, e145.0
  lgl$#-          %121.1 = Identical                <blt length>, %121.0   <true>
  void                    Branch                   %121.1 -> BB229 (if true) | BB230 (if false)
BB109   <- [106]
  val?^ | miss    %109.0 = LdVar              eR    x, e145.0
  val?            %109.1 = Force!<wrapped>    !v    %109.0, e145.0   <code->
  lgl$#-          %109.2 = IsType                   %109.1 isA val+   <true>
  lgl$#-          %109.3 = IsType                   %109.1 isA val?-
  void                    Branch                   %109.2 -> BB239 (if true) | BB240 (if false)
BB201   <- [195]
  val?-           %201.0 = CastType           d     dn %99.1   <code->
  val?            %201.1 = Extract2_1D        wed   %201.0, 1, elided   <sym->
  lgl$#-          %201.2 = IsType                   %201.1 isA val?-
  void                    Branch                   %201.2 -> BB203 (if true) | BB204 (if false)
BB202   <- [195]
  void                    Nop                !     
  val?            %202.1 = %99.1
  dr              %202.2 = Typecheck@0x55bbee332f08[Type#23]
  goto BB100
BB100   <- [196, 202]
  val?^ | miss    %100.0 = Phi                      %196.1:BB196, %202.1:BB202
  val?^ | miss    %100.1 = %100.0
  dr              %100.2 = Phi                      %196.2:BB196, %202.2:BB202
  dr              %100.3 = %100.2
  fs              %100.4 = FrameState         R     0x55bbe9b03910+604: [%98.2, %99.1], env=e145.0
  void                    Deopt              !v    %100.4, %100.3, %100.1   !
BB217   <- [209]
  lgl$-           %217.0 = CastType           d     dn %209.1
  lgl$-           %217.1 = AsLogical                %217.0
  lgl$-           %217.2 = LOr                      %90.2, %217.1
  lgl$-           %217.3 = %217.2
  goto BB98
BB218   <- [209]
  fs              %218.0 = FrameState         R     0x55bbe9b03910+581: [%90.2, %209.1], env=e145.0
  void                    Deopt              !v    %218.0, Typecheck@0x55bbee332f08[Type#22], %209.1   !
BB221   <- [215]
  int-            %221.0 = CastType           d     dn %213.2
  val+            %221.1 = CallSafeBuiltin    wed   anyNA(%221.0)    <lgl$->
  lgl$#-          %221.2 = IsType                   %221.1 isA lgl$-
  void                    Branch                   %221.2 -> BB223 (if true) | BB224 (if false)
BB222   <- [215]
  void                    Nop                !     
  val+            %222.1 = %213.2
  dr              %222.2 = Typecheck@0x55bbe347f1b8[Type#6]
  goto BB42
BB42   <- [216, 222]
  val?^ | miss    %42.0 = Phi                      %216.1:BB216, %222.1:BB222
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %216.2:BB216, %222.2:BB222
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %42.5 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%42.4
  fs              %42.6 = FrameState         R     0x55bbe2687320+166: [], env=e179.3, next=%42.5
  void                    Deopt              !v    %42.6, %42.3, %42.1   !
BB257   <- [253]
  lgl$-           %257.0 = CastType           d     dn %253.1
  lgl$-           %257.1 = AsLogical                %257.0
  lgl$-           %257.2 = LAnd                     %181.1, %257.1
  lgl$-           %257.3 = %257.2
  goto BB26
BB258   <- [253]
  fs              %258.0 = FrameState         R     0x55bbe9b03910+301: [%153.1, %181.1, %253.1], env=e145.0
  void                    Deopt              !v    %258.0, Typecheck@0x55bbee332f08[Type#11], %253.1   !
BB229   <- [121]
  val?^ | miss    %229.0 = LdVar              eR    x, e145.0
  val?            %229.1 = Force!<wrapped>    !v    %229.0, e145.0   <code->
  lgl$#-          %229.2 = IsType                   %229.1 isA val?-
  void                    Branch                   %229.2 -> BB235 (if true) | BB236 (if false)
BB230   <- [121]
  fs              %230.0 = FrameState         R     0x55bbe9b03910+667: [%106.1], env=e145.0
  void                    Deopt              !v    %230.0, DeadBranchReached@0x55bbee332f08[Test#9], %121.1   !
BB239   <- [109]
  void                    Branch                   %109.3 -> BB241 (if true) | BB242 (if false)
BB240   <- [109]
  void                    Nop                !     
  lgl$#-          %240.1 = %109.2
  dr              %240.2 = DeadBranchReached@0x55bbee332f08[Test#6]
  goto BB110
BB203   <- [201]
  val?-           %203.0 = CastType           d     dn %201.1   <sym->
  lgl-            %203.1 = Eq                 wed   %203.0, ":", elided   <lgl$->
  lgl$#-          %203.2 = IsType                   %203.1 isA lgl$-
  void                    Branch                   %203.2 -> BB227 (if true) | BB228 (if false)
BB204   <- [201]
  fs              %204.0 = FrameState         R     0x55bbe9b03910+647: [%98.2, %201.1], env=e145.0
  void                    Deopt              !v    %204.0, Typecheck@0x55bbee332f08[Type#24], %201.1   !
BB223   <- [221]
  lgl$-           %223.0 = CastType           d     dn %221.1
  lgl$#-          %223.1 = CheckTrueFalse     e     %223.0
  void                    Branch                   %223.1 -> BB74 (if true) | BB46 (if false)
BB224   <- [221]
  void                    Nop                !     
  val+            %224.1 = %221.1
  dr              %224.2 = Typecheck@0x55bbe347f1b8[Type#9]
  goto BB44
BB235   <- [229]
  val?-           %235.0 = CastType           d     dn %229.1   <code->
  (int|real)$-    %235.1 = CallSafeBuiltin    wed   length(%235.0)    <int$->
  lgl$#-          %235.2 = IsType                   %235.1 isA int$-
  void                    Branch                   %235.2 -> BB237 (if true) | BB238 (if false)
BB236   <- [229]
  fs              %236.0 = FrameState         R     0x55bbe9b03910+933: [<blt length>, %229.1], env=e145.0
  void                    Deopt              !v    %236.0, Typecheck@0x55bbee332f08[Type#39], %229.1   !
BB241   <- [239]
  val?-           %241.0 = CastType           d     dn %109.1   <code->
  val?            %241.1 = Extract2_1D        wed   %241.0, 1, elided   <sym->
  val?^ | miss    %241.2 = LdVar              eR    as.name, e145.0
  lgl$#-          %241.3 = Identical                %241.2, function(x) <(rir::DispatchTable*)0x55bbe48f22|...
  void                    Branch                   %241.3 -> BB255 (if true) | BB256 (if false)
BB242   <- [239]
  void                    Nop                !     
  val?            %242.1 = %109.1
  dr              %242.2 = Typecheck@0x55bbee332f08[Type#26]
  goto BB110
BB110   <- [240, 242]
  val?^ | miss    %110.0 = Phi                      %240.1:BB240, %242.1:BB242
  val?^ | miss    %110.1 = %110.0
  dr              %110.2 = Phi                      %240.2:BB240, %242.2:BB242
  dr              %110.3 = %110.2
  fs              %110.4 = FrameState         R     0x55bbe9b03910+682: [%109.1], env=e145.0
  void                    Deopt              !v    %110.4, %110.3, %110.1   !
BB227   <- [203]
  lgl$-           %227.0 = CastType           d     dn %203.1
  lgl$-           %227.1 = AsLogical                %227.0
  lgl$-           %227.2 = LOr                      %98.2, %227.1
  lgl$-           %227.3 = %227.2
  goto BB106
BB228   <- [203]
  fs              %228.0 = FrameState         R     0x55bbe9b03910+660: [%98.2, %203.1], env=e145.0
  void                    Deopt              !v    %228.0, Typecheck@0x55bbee332f08[Type#25], %203.1   !
BB74   <- [223]
  fs              %74.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %74.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%74.0
  (cls|spec|blt)  %74.2 = LdFun              !v    stop, e179.3
  fs              %74.3 = FrameState         R     0x55bbe2687320+278: [%74.2], env=e179.3, next=%74.1
  void                    Deopt              !v    %74.3, DeadCall@0x55bbe347f1b8[Call#4], %74.2   !
BB46   <- [223]
  val?^ | miss    %46.0 = LdVar              eR    any, e179.3
  lgl$#-          %46.1 = Identical                <blt any>, %46.0   <true>
  void                    Branch                   %46.1 -> BB233 (if true) | BB234 (if false)
BB44   <- [224, 234]
  val?^ | miss    %44.0 = Phi                      %224.1:BB224, %234.1:BB234
  val?^ | miss    %44.1 = %44.0
  dr              %44.2 = Phi                      %224.2:BB224, %234.2:BB234
  dr              %44.3 = %44.2
  fs              %44.4 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %44.5 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%44.4
  fs              %44.6 = FrameState         R     0x55bbe2687320+257: [%221.1], env=e179.3, next=%44.5
  void                    Deopt              !v    %44.6, %44.3, %44.1   !
BB237   <- [235]
  int$-           %237.0 = CastType           d     dn %235.1
  lgl$-           %237.1 = Eq                 d     %237.0, 3, elided   <lgl$->
  lgl$#-          %237.2 = CheckTrueFalse     e     %237.1
  void                    Branch                   %237.2 -> BB127 (if true) | BB126 (if false)
BB238   <- [235]
  void                    Nop                !     
  (int|real)$-    %238.1 = %235.1
  dr              %238.2 = Typecheck@0x55bbee332f08[Type#40]
  goto BB124
BB255   <- [241]
  val             %255.0 = CallSafeBuiltin    vwed  as.vector("Surv", "symbol")    <sym->
  lgl$#-          %255.1 = IsType                   %255.0 isA val-
  lgl$#-          %255.2 = IsType                   %241.1 isA val?-
  void                    Branch                   %255.2 -> BB263 (if true) | BB264 (if false)
BB256   <- [241]
  fs              %256.0 = FrameState         R     0x55bbe9b03910+725: [%241.1], env=e145.0
  void                    Deopt              !v    %256.0, CallTarget@0x55bbee332f08[Call#5], %241.2   !
BB233   <- [46]
  lgl-            %233.0 = Eq                 wed   %221.0, 1L, elided   <lgl->
  val?            %233.1 = CallBuiltin        !v    any(%233.0) e179.3   <lgl$->
  lgl$#-          %233.2 = IsType                   %233.1 isA lgl$-
  void                    Branch                   %233.2 -> BB245 (if true) | BB246 (if false)
BB234   <- [46]
  void                    Nop                !     
  lgl$#-          %234.1 = %46.1
  dr              %234.2 = DeadBranchReached@0x55bbe347f1b8[Test#3]
  goto BB44
BB127   <- [237]
  val?^ | miss    %127.0 = LdVar              eR    c, e145.0
  lgl$#-          %127.1 = Identical                <blt c>, %127.0   <true>
  void                    Branch                   %127.1 -> BB249 (if true) | BB250 (if false)
BB126   <- [237]
  (cls|spec|blt)  %126.0 = LdFun              !v    terms.inner, e145.0
  fs              %126.1 = FrameState         R     0x55bbe9b03910+983: [%126.0], env=e145.0
  void                    Deopt              !v    %126.1, DeadCall@0x55bbee332f08[Call#10], %126.0   !
BB124   <- [238, 250, 252]
  val?^ | miss    %124.0 = Phi                      %238.1:BB238, %250.1:BB250, %252.1:BB252
  val?^ | miss    %124.1 = %124.0
  dr              %124.2 = Phi                      %238.2:BB238, %250.2:BB250, %252.2:BB252
  dr              %124.3 = %124.2
  fs              %124.4 = FrameState         R     0x55bbe9b03910+955: [%235.1], env=e145.0
  void                    Deopt              !v    %124.4, %124.3, %124.1   !
BB263   <- [255]
  val?-           %263.0 = CastType           d     dn %241.1   <sym->
  void                    Branch                   %255.1 -> BB265 (if true) | BB266 (if false)
BB264   <- [255]
  void                    Nop                !     
  val?            %264.1 = %241.1
  dr              %264.2 = Typecheck@0x55bbee332f08[Type#27]
  goto BB114
BB245   <- [233]
  lgl$-           %245.0 = CastType           d     dn %233.1
  lgl$#-          %245.1 = CheckTrueFalse     e     %245.0
  void                    Branch                   %245.1 -> BB67 (if true) | BB49 (if false)
BB246   <- [233]
  void                    Nop                !     
  val?            %246.1 = %233.1
  dr              %246.2 = Typecheck@0x55bbe347f1b8[Type#28]
  goto BB47
BB249   <- [127]
  val?^ | miss    %249.0 = LdVar              eR    terms.inner, e145.0
  lgl$#-          %249.1 = Identical                %249.0, function(x) <(rir::DispatchTable*)0x55bbe67c02|...
  void                    Branch                   %249.1 -> BB251 (if true) | BB252 (if false)
BB250   <- [127]
  void                    Nop                !     
  lgl$#-          %250.1 = %127.1
  dr              %250.2 = DeadBranchReached@0x55bbee332f08[Test#11]
  goto BB124
BB265   <- [263]
  val-            %265.0 = CastType           d     dn %255.0   <sym->
  lgl-            %265.1 = Eq                 vwed  %263.0, %265.0, elided   <lgl$->
  lgl$#-          %265.2 = IsType                   %265.1 isA lgl$-
  void                    Branch                   %265.2 -> BB271 (if true) | BB272 (if false)
BB266   <- [263]
  void                    Nop                !     
  val             %266.1 = %255.0
  dr              %266.2 = Typecheck@0x55bbee332f08[Type#28]
  goto BB114
BB114   <- [264, 266]
  val?^ | miss    %114.0 = Phi                      %264.1:BB264, %266.1:BB266
  val?^ | miss    %114.1 = %114.0
  dr              %114.2 = Phi                      %264.2:BB264, %266.2:BB266
  dr              %114.3 = %114.2
  fs              %114.4 = FrameState         R     0x55bbe9b03910+763: [%241.1], env=e145.0
  env             e114.5 = (MkEnv)            l     x="Surv", parent=R_BaseNamespace, context 0
  fs              %114.6 = FrameState         R     0x55bbe42d4910+33: [%255.0], env=e114.5, next=%114.4
  void                    Deopt              !v    %114.6, %114.3, %114.1   !
BB67   <- [245]
  val?^ | miss    %67.0 = LdVar              eR    any, e179.3
  lgl$#-          %67.1 = Identical                <blt any>, %67.0   <@?>
  void                    Branch                   %67.1 -> BB69 (if true) | BB68 (if false)
BB49   <- [245]
  val?^ | miss    %49.0 = LdVar              eR    any, e179.3
  lgl$#-          %49.1 = Identical                <blt any>, %49.0   <true>
  void                    Branch                   %49.1 -> BB259 (if true) | BB260 (if false)
BB47   <- [246, 260, 270]
  val?^ | miss    %47.0 = Phi                      %246.1:BB246, %260.1:BB260, %270.1:BB270
  val?^ | miss    %47.1 = %47.0
  dr              %47.2 = Phi                      %246.2:BB246, %260.2:BB260, %270.2:BB270
  dr              %47.3 = %47.2
  fs              %47.4 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %47.5 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%47.4
  fs              %47.6 = FrameState         R     0x55bbe2687320+431: [%233.1], env=e179.3, next=%47.5
  void                    Deopt              !v    %47.6, %47.3, %47.1   !
BB251   <- [249]
  prom-           %251.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p8, e145.0
  val?            %251.1 = StaticCall         !v    FUN[0x55bbe8f59e90](%251.0) e145.0   <str$->
  val?^ | miss    %251.2 = LdVar              eR    terms.inner, e145.0
  lgl$#-          %251.3 = Identical                %251.2, function(x) <(rir::DispatchTable*)0x55bbe67c02|...
  void                    Branch                   %251.3 -> BB261 (if true) | BB262 (if false)
BB252   <- [249]
  void                    Nop                !     
  val?^ | miss    %252.1 = %249.0
  dr              %252.2 = CallTarget@0x55bbee332f08[Call#14]
  goto BB124
BB271   <- [265]
  lgl$-           %271.0 = CastType           d     dn %265.1
  lgl$#-          %271.1 = CheckTrueFalse     e     %271.0
  void                    Branch                   %271.1 -> BB120 (if true) | BB118 (if false)
BB272   <- [265]
  void                    Nop                !     
  lgl-            %272.1 = %265.1
  dr              %272.2 = Typecheck@0x55bbee332f08[Type#29]
  goto BB116
BB69   <- [67]
  val?^ | miss    %69.0 = LdVar              eR    opts, e179.3
  val?            %69.1 = Force!             !v    %69.0, e179.3   <val?_>
  lgl$#-          %69.2 = IsType                   %69.1 isA val?+
  void                    Branch                   %69.2 -> BB267 (if true) | BB268 (if false)
BB68   <- [67]
  fs              %68.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %68.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%68.0
  (cls|spec|blt)  %68.2 = LdFun              !v    any, e179.3
  fs              %68.3 = FrameState         R     0x55bbe2687320+640: [%68.2], env=e179.3, next=%68.1
  void                    Deopt              !v    %68.3, DeadCall@0x55bbe347f1b8[Call#18], %68.2   !
BB259   <- [49]
  val?^ | miss    %259.0 = LdVar              eR    opts, e179.3
  lgl$#-          %259.1 = IsType                   %259.0 isA int-
  void                    Branch                   %259.1 -> BB269 (if true) | BB270 (if false)
BB260   <- [49]
  void                    Nop                !     
  lgl$#-          %260.1 = %49.1
  dr              %260.2 = DeadBranchReached@0x55bbe347f1b8[Test#4]
  goto BB47
BB261   <- [251]
  prom-           %261.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p9, e145.0
  val?            %261.1 = StaticCall         !v    FUN[0x55bbe8f59e90](%261.0) e145.0   <str$->
  lgl$#-          %261.2 = IsType                   %261.1 isA val?-
  lgl$#-          %261.3 = IsType                   %251.1 isA val?-
  void                    Branch                   %261.3 -> BB273 (if true) | BB274 (if false)
BB262   <- [251]
  fs              %262.0 = FrameState         R     0x55bbe9b03910+1117: [<blt c>, %251.1], env=e145.0
  void                    Deopt              !v    %262.0, CallTarget@0x55bbee332f08[Call#15], %251.2   !
BB120   <- [271]
  val?^ | miss    %120.0 = LdVar              eR    unlist, e145.0
  lgl$#-          %120.1 = Identical                %120.0, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Branch                   %120.1 -> BB279 (if true) | BB280 (if false)
BB118   <- [271]
  val?^ | miss    %118.0 = LdVar              eR    terms.inner, e145.0
  lgl$#-          %118.1 = Identical                %118.0, function(x) <(rir::DispatchTable*)0x55bbe67c02|...
  void                    Branch                   %118.1 -> BB277 (if true) | BB278 (if false)
BB116   <- [272, 278, 280]
  val?^ | miss    %116.0 = Phi                      %272.1:BB272, %278.1:BB278, %280.1:BB280
  val?^ | miss    %116.1 = %116.0
  dr              %116.2 = Phi                      %272.2:BB272, %278.2:BB278, %280.2:BB280
  dr              %116.3 = %116.2
  fs              %116.4 = FrameState         R     0x55bbe9b03910+769: [%265.1], env=e145.0
  void                    Deopt              !v    %116.4, %116.3, %116.1   !
BB267   <- [69]
  val?+           %267.0 = CastType           d     dn %69.1   <val?_>
  lgl             %267.1 = Eq                 wed   %267.0, 13L, elided   <val?_>
  val?            %267.2 = CallBuiltin        !v    any(%267.1) e179.3   <val?_>
  lgl$#-          %267.3 = CheckTrueFalse     we    %267.2
  void                    Branch                   %267.3 -> BB73 (if true) | BB72 (if false)
BB268   <- [69]
  fs              %268.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %268.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%268.0
  fs              %268.2 = FrameState         R     0x55bbe2687320+681: [<blt any>, %69.1], env=e179.3, next=%268.1
  void                    Deopt              !v    %268.2, Typecheck@0x55bbe347f1b8[Type#45], %69.1   !
BB269   <- [259]
  int-            %269.0 = CastType           d     dn %259.0
  lgl-            %269.1 = Eq                 wed   %269.0, 13L, elided   <lgl->
  val?            %269.2 = CallBuiltin        !v    any(%269.1) e179.3   <lgl$->
  lgl$#-          %269.3 = IsType                   %269.2 isA lgl$-
  void                    Branch                   %269.3 -> BB281 (if true) | BB282 (if false)
BB270   <- [259]
  void                    Nop                !     
  val?^ | miss    %270.1 = %259.0
  dr              %270.2 = Typecheck@0x55bbe347f1b8[Type#31]
  goto BB47
BB273   <- [261]
  val?-           %273.0 = CastType           d     dn %251.1   <str$->
  void                    Branch                   %261.2 -> BB275 (if true) | BB276 (if false)
BB274   <- [261]
  void                    Nop                !     
  val?            %274.1 = %251.1
  dr              %274.2 = Typecheck@0x55bbee332f08[Type#53]
  goto BB130
BB279   <- [120]
  prom-           %279.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p4, e145.0
  val?            %279.1 = StaticCall         !     unlist[0x55bbe6848fe0](%279.0) e145.0   <val?_>
  val?            %279.2 = %279.1
  goto BB119
BB280   <- [120]
  void                    Nop                !     
  val?^ | miss    %280.1 = %120.0
  dr              %280.2 = CallTarget@0x55bbee332f08[Call#7]
  goto BB116
BB277   <- [118]
  prom-           %277.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p3, e145.0
  val?            %277.1 = StaticCall         !     FUN[0x55bbe8f59e90](%277.0) e145.0   <str$->
  val?            %277.2 = %277.1
  goto BB119
BB278   <- [118]
  void                    Nop                !     
  val?^ | miss    %278.1 = %118.0
  dr              %278.2 = CallTarget@0x55bbee332f08[Call#6]
  goto BB116
BB73   <- [267]
  fs              %73.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %73.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%73.0
  (cls|spec|blt)  %73.2 = LdFun              !v    stop, e179.3
  fs              %73.3 = FrameState         R     0x55bbe2687320+736: [%73.2], env=e179.3, next=%73.1
  void                    Deopt              !v    %73.3, DeadCall@0x55bbe347f1b8[Call#19], %73.2   !
BB72   <- [267]
  fs              %72.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %72.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%72.0
  (cls|spec|blt)  %72.2 = LdFun              !v    unique, e179.3
  fs              %72.3 = FrameState         R     0x55bbe2687320+769: [%72.2], env=e179.3, next=%72.1
  void                    Deopt              !v    %72.3, DeadCall@0x55bbe347f1b8[Call#20], %72.2   !
BB281   <- [269]
  lgl$-           %281.0 = CastType           d     dn %269.2
  lgl$#-          %281.1 = CheckTrueFalse     e     %281.0
  void                    Branch                   %281.1 -> BB66 (if true) | BB52 (if false)
BB282   <- [269]
  void                    Nop                !     
  val?            %282.1 = %269.2
  dr              %282.2 = Typecheck@0x55bbe347f1b8[Type#33]
  goto BB50
BB275   <- [273]
  val?-           %275.0 = CastType           d     dn %261.1   <str$->
  val+            %275.1 = CallSafeBuiltin    vwed  c(%273.0, %275.0)    <str->
  val+            %275.2 = %275.1
  goto BB63
BB276   <- [273]
  void                    Nop                !     
  val?            %276.1 = %261.1
  dr              %276.2 = Typecheck@0x55bbee332f08[Type#56]
  goto BB130
BB130   <- [274, 276]
  val?^ | miss    %130.0 = Phi                      %274.1:BB274, %276.1:BB276
  val?^ | miss    %130.1 = %130.0
  dr              %130.2 = Phi                      %274.2:BB274, %276.2:BB276
  dr              %130.3 = %130.2
  fs              %130.4 = FrameState         R     0x55bbe9b03910+1154: [<blt c>, %251.1, %261.1], env=e145.0
  void                    Deopt              !v    %130.4, %130.3, %130.1   !
BB119   <- [277, 279]
  val?            %119.0 = Phi                      %277.2:BB277, %279.2:BB279
  val?            %119.1 = %119.0
  val?            %119.2 = %119.1
  goto BB63
BB66   <- [281]
  fs              %66.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %66.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%66.0
  (cls|spec|blt)  %66.2 = LdFun              !v    unique, e179.3
  fs              %66.3 = FrameState         R     0x55bbe2687320+566: [%66.2], env=e179.3, next=%66.1
  void                    Deopt              !v    %66.3, DeadCall@0x55bbe347f1b8[Call#16], %66.2   !
BB52   <- [281]
  val?^ | miss    %52.0 = LdVar              eR    %in%, e179.3
  lgl$#-          %52.1 = Identical                %52.0, function(x, table) <(rir::DispatchTable*)0x55b|...
  void                    Branch                   %52.1 -> BB283 (if true) | BB284 (if false)
BB50   <- [282, 284]
  val?^ | miss    %50.0 = Phi                      %282.1:BB282, %284.1:BB284
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %282.2:BB282, %284.2:BB284
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %50.5 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%50.4
  fs              %50.6 = FrameState         R     0x55bbe2687320+545: [%269.2], env=e179.3, next=%50.5
  void                    Deopt              !v    %50.6, %50.3, %50.1   !
BB283   <- [52]
  prom-           %283.0 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p24, e179.3
  ct              %283.1 = PushContext        lCL   10L, %283.0, %in%(10L, opts), function(x, table) <(rir::DispatchTable*)0x55b|..., e179.3
  val?^           %283.2 = CastType                 up %283.0
  env             e283.3 = MkEnv              l     x=10L, table=%283.2, parent=R_BaseNamespace, context 1
  prom-           %283.4 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p25 (!refl), e283.3
  prom-           %283.5 = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p26, e283.3
  ct              %283.6 = PushContext        lCL   %283.4, %283.5, 0L, match(x, table, nomatch=0L), function(x, table, nomatch=NA, incomparables=N|..., e283.3
  val?^           %283.7 = CastType                 up %283.5
  val?^           %283.8 = CastType                 up %283.4
  env             e283.9 = MkEnv              l     x=%283.8, table=%283.7, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context 1
  val?            %283.10 = Force!<lazy>       !vL   %283.7, e283.9   <val?>
  val?            %283.11 = CallBuiltin        !v    match(10L, %283.10, 0L, nil) e283.9
  val?            %283.12 = PopContext         C     %283.11, %283.6   <int->
  lgl$#-          %283.13 = IsType                   %283.12 isA int-
  void                    Branch                   %283.13 -> BB285 (if true) | BB286 (if false)
BB284   <- [52]
  void                    Nop                !     
  val?^ | miss    %284.1 = %52.0
  dr              %284.2 = CallTarget@0x55bbe347f1b8[Call#23]
  goto BB50
BB285   <- [283]
  int-            %285.0 = CastType           d     dn %283.12
  lgl-            %285.1 = Gt                 wed   %285.0, 0L, elided   <lgl->
  val?            %285.2 = PopContext         C     %285.1, %283.1   <lgl$->
  lgl$#-          %285.3 = IsType                   %285.2 isA lgl$-
  void                    Branch                   %285.3 -> BB287 (if true) | BB288 (if false)
BB286   <- [283]
  fs              %286.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %286.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%286.0
  fs              %286.2 = FrameState         R     0x55bbe2687320+847: [], env=e179.3, next=%286.1
  fs              %286.3 = FrameState         R     0x55bbe244d320+54: [%283.12], env=e283.3, next=%286.2
  void                    Deopt              !v    %286.3, Typecheck@0x55bbe347f688[Type#2], %283.12   !
BB287   <- [285]
  lgl$-           %287.0 = CastType           d     dn %285.2
  lgl$-           %287.1 = AsLogical                %287.0
  lgl$#-          %287.2 = Identical                %287.1, false
  void                    Branch                   %287.2 -> BB58 (if true) | BB57 (if false)
BB288   <- [285]
  void                    Nop                !     
  val?            %288.1 = %285.2
  dr              %288.2 = Typecheck@0x55bbe347f1b8[Type#61]
  goto BB55
BB58   <- [287]
  lgl$#-          %58.0 = CheckTrueFalse     e     %287.1
  void                    Branch                   %58.0 -> BB65 (if true) | BB59 (if false)
BB57   <- [287]
  fs              %57.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %57.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%57.0
  (cls|spec|blt)  %57.2 = LdFun              !v    %in%, e179.3
  fs              %57.3 = FrameState         R     0x55bbe2687320+864: [%287.1, %57.2], env=e179.3, next=%57.1
  void                    Deopt              !v    %57.3, DeadCall@0x55bbe347f1b8[Call#24], %57.2   !
BB55   <- [288, 290, 292]
  val?^ | miss    %55.0 = Phi                      %288.1:BB288, %290.1:BB290, %292.1:BB292
  val?^ | miss    %55.1 = %55.0
  dr              %55.2 = Phi                      %288.2:BB288, %290.2:BB290, %292.2:BB292
  dr              %55.3 = %55.2
  fs              %55.4 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %55.5 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%55.4
  fs              %55.6 = FrameState         R     0x55bbe2687320+847: [%285.2], env=e179.3, next=%55.5
  void                    Deopt              !v    %55.6, %55.3, %55.1   !
BB65   <- [58]
  fs              %65.0 = FrameState         R     0x55bbe9b03910+349: [], env=e145.0
  fs              %65.1 = FrameState         R     0x55bbe6d63040+74: [%167.13, 60L, %167.14], env=e167.3, next=%65.0
  (cls|spec|blt)  %65.2 = LdFun              !v    stop, e179.3
  fs              %65.3 = FrameState         R     0x55bbe2687320+919: [%65.2], env=e179.3, next=%65.1
  void                    Deopt              !v    %65.3, DeadCall@0x55bbe347f1b8[Call#25], %65.2   !
BB59   <- [58]
  val?^ | miss    %59.0 = LdVar              eR    sum, e179.3
  lgl$#-          %59.1 = Identical                <blt sum>, %59.0   <true>
  void                    Branch                   %59.1 -> BB289 (if true) | BB290 (if false)
BB289   <- [59]
  val?^ | miss    %289.0 = LdVar              eR    opts, e179.3
  lgl$#-          %289.1 = IsType                   %289.0 isA int-
  void                    Branch                   %289.1 -> BB291 (if true) | BB292 (if false)
BB290   <- [59]
  void                    Nop                !     
  lgl$#-          %290.1 = %59.1
  dr              %290.2 = DeadBranchReached@0x55bbe347f1b8[Test#8]
  goto BB55
BB291   <- [289]
  int-            %291.0 = CastType           d     dn %289.0
  real-           %291.1 = Sub                wed   %291.0, 2, elided   <real->
  real-           %291.2 = Pow                wed   2, %291.1, elided   <real->
  real$-          %291.3 = CallSafeBuiltin    wed   sum(%291.2)    <real$->
  real$-          %291.4 = %291.3
  goto BB60
BB292   <- [289]
  void                    Nop                !     
  val?^ | miss    %292.1 = %289.0
  dr              %292.2 = Typecheck@0x55bbe347f1b8[Type#67]
  goto BB55
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(sym|code)>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <sym->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 2, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     lapply, <0x55bbe1f5f040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p5, e0.0
  prom-           %0.3  = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p7, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  lgl$#-          %0.3  = IsType                   %0.2 isA val+   <true>
  void                    Branch                   %0.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  void                    Nop                !     
  real$#-         %2.1  = -1
  goto BB3
BB4   <- [0]
  prom-           %4.0  = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p6, 
  prom-           %4.1  = %4.0
  goto BB3
BB3   <- [4, 2]
  (real|prom)-    %3.0  = Phi                      %2.1:BB2, %4.1:BB4
  (real|prom)-    %3.1  = %3.0
  val?            %3.2  = Extract1_1D        !v    %0.2, %3.1, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.2
Prom 6:
BB0
  void                    Visible            v     
  void                    Return             l     -1
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    terms.inner, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 2, e0.0   <sym->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code->
  val?            %0.3  = Extract2_1D        !v    %0.2, 3, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <code>
  val?            %0.3  = Extract2_1D        !v    %0.2, 2, e0.0   <code->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     %in%, <0x55bbe2136c40>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p15, e0.0
  prom-           %0.3  = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p17, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <lgl$->
  void                    Return             l     %0.4
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     mode, <0x55bbe2f04140>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(sym|code)->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55bbe1e20940>, e0.0
  val?            %0.2  = Call               !     %0.1("call", "expression", "(", "function") e0.0   <str->
  void                    Return             l     %0.2
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55bbe1e20940>, e0.0
  val?            %0.2  = Call               !     %0.1("keepNA", "keepInteger", "niceNames", "showAttributes") e0.0   <str->
  void                    Return             l     %0.2
Prom 19:
BB0
  void                    Visible            v     
  void                    Return             l     -1L
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    control, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.character, <0x55bbe1e2d040>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55bbe8f59e90]_p22, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    control, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ..deparseOpts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str->
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    opts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3

│ FUN[0x55bbe8f59e90]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
