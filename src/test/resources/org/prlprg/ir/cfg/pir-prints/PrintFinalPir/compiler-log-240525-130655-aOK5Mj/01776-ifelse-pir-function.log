
┌──────────────────────────────────────────────────────────────────────────────┐
│ ifelse[0x55bbe83c1f10]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal1│
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
ifelse[0x55bbe83c1f10]
BB0
  val?^           %0.0  = LdArg                    2
  (real|miss)$~-  %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     test=%0.2, yes=%0.1, no=%0.0, parent=R_BaseNamespace, context 1
  val+            %0.4  = Force!<lazy>       !vr   %0.2,    <lgl+>
  lgl$#-          %0.5  = IsType                   %0.4 isA lgl+
  void                    Branch                   %0.5 -> BB98 (if true) | BB99 (if false)
BB98   <- [0]
  str$-           %98.0 = CallSafeBuiltin    wed   typeof(%0.4)    <str$->
  lgl$-           %98.1 = Neq                d     %98.0, "logical", elided   <lgl$->
  lgl$#-          %98.2 = CheckTrueFalse     e     %98.1
  void                    Branch                   %98.2 -> BB96 (if true) | BB5 (if false)
BB99   <- [0]
  fs              %99.0 = FrameState         R     0x55bbe3eedbe0+69: [<blt is.atomic>, %0.4], env=e0.3
  void                    Deopt              !v    %99.0, Typecheck@0x55bbe3ea4df0[Type#1], %0.4
BB96   <- [98]
  (cls|spec|blt)  %96.0 = LdFun              !v    storage.mode<-, R_BaseNamespace
  fs              %96.1 = FrameState         R     0x55bbe3eedbe0+470: ["logical", %96.0], env=e0.3
  void                    Deopt              !v    %96.1, DeadCall@0x55bbe3ea4df0[Call#6], %96.0
BB5   <- [98]
  lgl$#-          %5.0  = IsType                   %0.2 isA lgl~+
  void                    Branch                   %5.0 -> BB100 (if true) | BB101 (if false)
BB100   <- [5]
  (int|real)$-    %100.0 = CallSafeBuiltin    wed   length(%0.4)    <int$->
  lgl$#-          %100.1 = IsType                   %100.0 isA int$-
  void                    Branch                   %100.1 -> BB102 (if true) | BB103 (if false)
BB101   <- [5]
  fs              %101.0 = FrameState         R     0x55bbe3eedbe0+431: [], env=e0.3
  prom-           %101.1 = MkArg                    %0.4, ifelse[0x55bbe83c1f10]_p7 (!refl), e0.3
  val?~           %101.2 = CastType                 up %101.1
  env             e101.3 = (MkEnv)            l     x=%101.2, parent=R_BaseNamespace, context 0
  fs              %101.4 = FrameState         R     0x55bbe3eeb800+27: [%98.0], env=e101.3, next=%101.0
  void                    Deopt              !v    %101.4, Typecheck@0x55bbe3ea4df0[Type#19], %0.2
BB102   <- [100]
  int$-           %102.0 = CastType           d     dn %100.0
  lgl$-           %102.1 = Eq                 d     %102.0, 1, elided   <lgl$->
  lgl$-           %102.2 = AsLogical                %102.1
  lgl$#-          %102.3 = Identical                %102.2, false
  void                    Branch                   %102.3 -> BB95 (if true) | BB8 (if false)
BB103   <- [100]
  fs              %103.0 = FrameState         R     0x55bbe3eedbe0+624: [%100.0], env=e0.3
  void                    Deopt              !v    %103.0, Typecheck@0x55bbe3ea4df0[Type#20], %100.0
BB95   <- [102]
  void                    Nop                !     
  lgl$-           %95.1 = %102.2
  goto BB9
BB8   <- [102]
  val?            %8.0  = CallBuiltin        !v    attributes(%0.4) e0.3   <nil->
  lgl$-           %8.1  = Is                       %8.0, NULL
  lgl$-           %8.2  = AsLogical                %8.1
  lgl$-           %8.3  = LAnd                     %102.2, %8.2
  lgl$-           %8.4  = %8.3
  goto BB9
BB9   <- [95, 8]
  lgl$-           %9.0  = Phi                      %8.4:BB8, %95.1:BB95
  lgl$-           %9.1  = %9.0
  lgl$#-          %9.2  = CheckTrueFalse     e     %9.1
  void                    Branch                   %9.2 -> BB54 (if true) | BB12 (if false)
BB54   <- [9]
  val?^ | miss    %54.0 = LdVar              eR    is.na, e0.3
  lgl$#-          %54.1 = Identical                <blt is.na>, %54.0   <true>
  void                    Branch                   %54.1 -> BB104 (if true) | BB105 (if false)
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB104   <- [54]
  val?^ | miss    %104.0 = LdVar              eR    test, e0.3
  lgl$#-          %104.1 = IsType                   %104.0 isA lgl$~-
  void                    Branch                   %104.1 -> BB106 (if true) | BB107 (if false)
BB105   <- [54]
  void                    Nop                !     
  lgl$#-          %105.1 = %54.1
  dr              %105.2 = DeadBranchReached@0x55bbe3ea4df0[Test#5]
  goto BB10
BB13   <- [12, 65]
  val?^ | miss    %13.0 = LdVar              eR    test, e0.3
  val?            %13.1 = Force!<wrapped>    !v    %13.0, e0.3   <lgl+>
  void                    StVar              lW    ans, %13.1, e0.3
  val?^ | miss    %13.3 = LdVar              eR    length, e0.3
  lgl$#-          %13.4 = Identical                <blt length>, %13.3   <true>
  void                    Branch                   %13.4 -> BB108 (if true) | BB109 (if false)
BB106   <- [104]
  lgl$~-          %106.0 = CastType           d     dn %104.0
  lgl$-           %106.1 = Force!<wrapped>          %106.0,    <lgl$->
  lgl$-           %106.2 = CallSafeBuiltin    wed   is.na(%106.1)    <lgl$->
  lgl$#-          %106.3 = CheckTrueFalse     e     %106.2
  void                    Branch                   %106.3 -> BB94 (if true) | BB55 (if false)
BB107   <- [104]
  void                    Nop                !     
  val?^ | miss    %107.1 = %104.0
  dr              %107.2 = Typecheck@0x55bbe3ea4df0[Type#26]
  goto BB10
BB10   <- [105, 107]
  val?^ | miss    %10.0 = Phi                      %105.1:BB105, %107.1:BB107
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %105.2:BB105, %107.2:BB107
  dr              %10.3 = %10.2
  fs              %10.4 = FrameState         R     0x55bbe3eedbe0+751: [%9.1], env=e0.3
  void                    Deopt              !v    %10.4, %10.3, %10.1   !
BB108   <- [13]
  val             %108.0 = ChkMissing         e     %13.1   <lgl+>
  lgl$#-          %108.1 = IsType                   %108.0 isA lgl+
  void                    Branch                   %108.1 -> BB114 (if true) | BB115 (if false)
BB109   <- [13]
  void                    Nop                !     
  lgl$#-          %109.1 = %13.4
  dr              %109.2 = DeadBranchReached@0x55bbe3ea4df0[Test#12]
  goto BB14
BB94   <- [106]
  void                    Visible            v     
  lgl$-           %94.1 = na-lgl
  goto BB40
BB55   <- [106]
  lgl$#-          %55.0 = CheckTrueFalse     e     %106.1
  void                    Branch                   %55.0 -> BB80 (if true) | BB58 (if false)
BB114   <- [108]
  lgl+            %114.0 = CastType           d     dn %108.0
  (int|real)$-    %114.1 = CallSafeBuiltin    wed   length(%114.0)    <int$->
  lgl$#-          %114.2 = IsType                   %114.1 isA int$-
  void                    Branch                   %114.2 -> BB116 (if true) | BB117 (if false)
BB115   <- [108]
  void                    Nop                !     
  val             %115.1 = %108.0
  dr              %115.2 = Typecheck@0x55bbe3ea4df0[Type#61]
  goto BB14
BB14   <- [109, 115]
  val?^ | miss    %14.0 = Phi                      %109.1:BB109, %115.1:BB115
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %109.2:BB109, %115.2:BB115
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x55bbe3eedbe0+1776: [], env=e0.3
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB40   <- [94, 77, 91, 164]
  val?            %40.0 = Phi                      %164.3:BB164, %77.3:BB77, %91.3:BB91, %94.1:BB94
  val?            %40.1 = %40.0
  void                    Return             l     %40.1
BB80   <- [55]
  val?^ | miss    %80.0 = LdVar              eR    length, e0.3
  lgl$#-          %80.1 = Identical                <blt length>, %80.0   <true>
  void                    Branch                   %80.1 -> BB110 (if true) | BB111 (if false)
BB58   <- [55]
  val?^ | miss    %58.0 = LdVar              eR    length, e0.3
  lgl$#-          %58.1 = Identical                <blt length>, %58.0   <@?>
  void                    Branch                   %58.1 -> BB60 (if true) | BB59 (if false)
BB116   <- [114]
  int$-           %116.0 = CastType           d     dn %114.1
  void                    StVar              lW    len, %116.0, e0.3
  val?^ | miss    %116.2 = LdVar              eR    which, e0.3
  lgl$#-          %116.3 = Identical                %116.2, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %116.3 -> BB120 (if true) | BB121 (if false)
BB117   <- [114]
  fs              %117.0 = FrameState         R     0x55bbe3eedbe0+1867: [%114.1], env=e0.3
  void                    Deopt              !v    %117.0, Typecheck@0x55bbe3ea4df0[Type#62], %114.1   !
BB110   <- [80]
  val?^ | miss    %110.0 = LdVar              eR    yes, e0.3
  val?            %110.1 = Force!<lazy>       !v    %110.0, e0.3   <real$->
  lgl$#-          %110.2 = IsType                   %110.1 isA real$-
  void                    Branch                   %110.2 -> BB112 (if true) | BB113 (if false)
BB111   <- [80]
  fs              %111.0 = FrameState         R     0x55bbe3eedbe0+879: [%55.0], env=e0.3
  void                    Deopt              !v    %111.0, DeadBranchReached@0x55bbe3ea4df0[Test#9], %80.1   !
BB60   <- [58]
  val?^ | miss    %60.0 = LdVar              eR    no, e0.3
  val?            %60.1 = Force!             !v    %60.0, e0.3   <val?_>
  lgl$#-          %60.2 = IsType                   %60.1 isA val?+
  void                    Branch                   %60.2 -> BB124 (if true) | BB125 (if false)
BB59   <- [58]
  (cls|spec|blt)  %59.0 = LdFun              !v    length, e0.3
  fs              %59.1 = FrameState         R     0x55bbe3eedbe0+912: [%59.0], env=e0.3
  void                    Deopt              !v    %59.1, DeadCall@0x55bbe3ea4df0[Call#10], %59.0   !
BB120   <- [116]
  val?^ | miss    %120.0 = LdVar              eR    test, e0.3
  val?            %120.1 = Force!<wrapped>    !v    %120.0, e0.3   <lgl+>
  val+            %120.2 = CallSafeBuiltin    wed   which(%120.1) 
  lgl$#-          %120.3 = IsType                   %120.2 isA int+
  void                    Branch                   %120.3 -> BB122 (if true) | BB123 (if false)
BB121   <- [116]
  fs              %121.0 = FrameState         R     0x55bbe3eedbe0+1881: [], env=e0.3
  void                    Deopt              !v    %121.0, CallTarget@0x55bbe3ea4df0[Call#21], %116.2   !
BB112   <- [110]
  val?^ | miss    %112.0 = LdVar              eR    attributes, e0.3
  lgl$#-          %112.1 = Identical                <blt attributes>, %112.0   <true>
  void                    Branch                   %112.1 -> BB118 (if true) | BB119 (if false)
BB113   <- [110]
  void                    Nop                !     
  val?            %113.1 = %110.1
  dr              %113.2 = Typecheck@0x55bbe3ea4df0[Type#45]
  goto BB81
BB124   <- [60]
  val?+           %124.0 = CastType           d     dn %60.1   <val?_>
  real$-          %124.1 = CallSafeBuiltin    wed   length(%124.0)    <val?_>
  lgl$-           %124.2 = Eq                 d     %124.1, 1, elided   <val?_>
  lgl$#-          %124.3 = CheckTrueFalse     e     %124.2
  void                    Branch                   %124.3 -> BB66 (if true) | BB63 (if false)
BB125   <- [60]
  fs              %125.0 = FrameState         R     0x55bbe3eedbe0+953: [<blt length>, %60.1], env=e0.3
  void                    Deopt              !v    %125.0, Typecheck@0x55bbe3ea4df0[Type#30], %60.1   !
BB122   <- [120]
  int+            %122.0 = CastType           d     dn %120.2
  void                    StVar              lW    ypos, %122.0, e0.3
  val?^ | miss    %122.2 = LdVar              eR    which, e0.3
  lgl$#-          %122.3 = Identical                %122.2, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Branch                   %122.3 -> BB126 (if true) | BB127 (if false)
BB123   <- [120]
  prom-           %123.0 = MkArg                    %120.1, ifelse[0x55bbe83c1f10]_p0 (!refl), e0.3
  val?~           %123.1 = CastType                 up %123.0
  fs              %123.2 = FrameState         R     0x55bbe3eedbe0+1913: [], env=e0.3
  env             e123.3 = (MkEnv)            l     wh=%120.2, useNames(miss)=true, arr.ind(miss)=false, x=%123.1, parent=R_BaseNamespace, context 0
  fs              %123.4 = FrameState         R     0x55bbe3e6e710+172: [false], env=e123.3, next=%123.2
  void                    Deopt              !v    %123.4, Typecheck@0x55bbe3e78390[Type#5], %120.2   !
BB118   <- [112]
  val?^ | miss    %118.0 = LdVar              eR    yes, e0.3
  val?            %118.1 = Force!<wrapped>    !v    %118.0, e0.3   <real$->
  val?            %118.2 = CallBuiltin        !v    attributes(%118.1) e0.3   <nil->
  lgl$-           %118.3 = Is                       %118.2, NULL
  lgl$-           %118.4 = AsLogical                %118.3
  lgl$#-          %118.5 = Identical                %118.4, true
  void                    StVar              lW    yat, %118.2, e0.3
  val             %118.7 = ChkMissing         e     %118.2
  void                    Branch                   %118.5 -> BB93 (if true) | BB83 (if false)
BB119   <- [112]
  void                    Nop                !     
  lgl$#-          %119.1 = %112.1
  dr              %119.2 = DeadBranchReached@0x55bbe3ea4df0[Test#10]
  goto BB81
BB81   <- [113, 119]
  val?^ | miss    %81.0 = Phi                      %113.1:BB113, %119.1:BB119
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %113.2:BB113, %119.2:BB119
  dr              %81.3 = %81.2
  fs              %81.4 = FrameState         R     0x55bbe3eedbe0+1384: [<blt length>, %110.1], env=e0.3
  void                    Deopt              !v    %81.4, %81.3, %81.1   !
BB66   <- [124]
  val?^ | miss    %66.0 = LdVar              eR    attributes, e0.3
  lgl$#-          %66.1 = Identical                <blt attributes>, %66.0   <@?>
  void                    Branch                   %66.1 -> BB68 (if true) | BB67 (if false)
BB63   <- [124]
  void                    Nop                !     
  goto BB64
BB126   <- [122]
  val?^ | miss    %126.0 = LdVar              eR    test, e0.3
  val?            %126.1 = Force!<wrapped>    !v    %126.0, e0.3   <lgl+>
  val?            %126.2 = Not                !v    %126.1, e0.3   <lgl+>
  val+            %126.3 = CallSafeBuiltin    wed   which(%126.2) 
  lgl$#-          %126.4 = IsType                   %126.3 isA int+
  void                    Branch                   %126.4 -> BB132 (if true) | BB133 (if false)
BB127   <- [122]
  fs              %127.0 = FrameState         R     0x55bbe3eedbe0+1927: [], env=e0.3
  void                    Deopt              !v    %127.0, CallTarget@0x55bbe3ea4df0[Call#22], %122.2   !
BB93   <- [118]
  void                    Nop                !     
  lgl$-           %93.1 = %118.4
  goto BB89
BB83   <- [118]
  val?^ | miss    %83.0 = LdVar              eR    is.function, e0.3
  lgl$#-          %83.1 = Identical                <blt is.function>, %83.0   <@?>
  void                    Branch                   %83.1 -> BB85 (if true) | BB84 (if false)
BB68   <- [66]
  val?^ | miss    %68.0 = LdVar              eR    no, e0.3
  val?            %68.1 = Force!             !v    %68.0, e0.3   <val?_>
  val?            %68.2 = CallBuiltin        !v    attributes(%68.1) e0.3   <val?_>
  lgl$-           %68.3 = Is                       %68.2, NULL
  lgl$-           %68.4 = AsLogical                %68.3
  lgl$#-          %68.5 = Identical                %68.4, true
  void                    StVar              lW    nat, %68.2, e0.3
  val             %68.7 = ChkMissing         e     %68.2
  void                    Branch                   %68.5 -> BB79 (if true) | BB69 (if false)
BB67   <- [66]
  (cls|spec|blt)  %67.0 = LdFun              !v    attributes, e0.3
  fs              %67.1 = FrameState         R     0x55bbe3eedbe0+1031: [%67.0], env=e0.3
  void                    Deopt              !v    %67.1, DeadCall@0x55bbe3ea4df0[Call#11], %67.0   !
BB64   <- [63, 76]
  void                    Nop                !     
  goto BB65
BB132   <- [126]
  int+            %132.0 = CastType           d     dn %126.3
  void                    StVar              lW    npos, %132.0, e0.3
  val?^ | miss    %132.2 = LdVar              eR    length, e0.3
  lgl$#-          %132.3 = Identical                <blt length>, %132.2   <true>
  void                    Branch                   %132.3 -> BB134 (if true) | BB135 (if false)
BB133   <- [126]
  prom-           %133.0 = MkArg                    %126.2, ifelse[0x55bbe83c1f10]_p1 (!refl), e0.3
  val?~           %133.1 = CastType                 up %133.0
  fs              %133.2 = FrameState         R     0x55bbe3eedbe0+1959: [], env=e0.3
  env             e133.3 = (MkEnv)            l     wh=%126.3, useNames(miss)=true, arr.ind(miss)=false, x=%133.1, parent=R_BaseNamespace, context 0
  fs              %133.4 = FrameState         R     0x55bbe3e6e710+172: [false], env=e133.3, next=%133.2
  void                    Deopt              !v    %133.4, Typecheck@0x55bbe3e78390[Type#5], %126.3   !
BB89   <- [93, 88]
  lgl$-           %89.0 = Phi                      %88.1:BB88, %93.1:BB93
  lgl$-           %89.1 = %89.0
  lgl$#-          %89.2 = CheckTrueFalse     e     %89.1
  void                    Branch                   %89.2 -> BB91 (if true) | BB90 (if false)
BB85   <- [83]
  val?^ | miss    %85.0 = LdVar              eR    yes, e0.3
  val?            %85.1 = Force!             !v    %85.0, e0.3   <val?_>
  lgl$#-          %85.2 = IsType                   %85.1 isA val?+
  void                    Branch                   %85.2 -> BB130 (if true) | BB131 (if false)
BB84   <- [83]
  (cls|spec|blt)  %84.0 = LdFun              !v    is.function, e0.3
  fs              %84.1 = FrameState         R     0x55bbe3eedbe0+1593: [%118.4, %84.0], env=e0.3
  void                    Deopt              !v    %84.1, DeadCall@0x55bbe3ea4df0[Call#17], %84.0   !
BB79   <- [68]
  void                    Nop                !     
  lgl$-           %79.1 = %68.4
  goto BB75
BB69   <- [68]
  val?^ | miss    %69.0 = LdVar              eR    is.function, e0.3
  lgl$#-          %69.1 = Identical                <blt is.function>, %69.0   <@?>
  void                    Branch                   %69.1 -> BB71 (if true) | BB70 (if false)
BB65   <- [90, 64]
  void                    Nop                !     
  goto BB13
BB134   <- [132]
  val?^ | miss    %134.0 = LdVar              eR    ypos, e0.3
  lgl$#-          %134.1 = IsType                   %134.0 isA int+
  void                    Branch                   %134.1 -> BB136 (if true) | BB137 (if false)
BB135   <- [132]
  void                    Nop                !     
  lgl$#-          %135.1 = %132.3
  dr              %135.2 = DeadBranchReached@0x55bbe3ea4df0[Test#13]
  goto BB26
BB91   <- [89]
  val?^ | miss    %91.0 = LdVar              eR    yes, e0.3
  void                    Visible            v     
  val?            %91.2 = Force!<wrapped>    !     %91.0, e0.3   <real$->
  val?            %91.3 = %91.2
  goto BB40
BB90   <- [89]
  void                    Nop                !     
  goto BB65
BB130   <- [85]
  val?+           %130.0 = CastType           d     dn %85.1   <val?_>
  lgl$#-          %130.1 = CallSafeBuiltin    wed   is.function(%130.0)    <val?_>
  lgl$-           %130.2 = LOr                      %118.4, %130.1
  void                    Branch                   %130.1 -> BB92 (if true) | BB88 (if false)
BB131   <- [85]
  fs              %131.0 = FrameState         R     0x55bbe3eedbe0+1634: [%118.4, <blt is.function>, %85.1], env=e0.3
  void                    Deopt              !v    %131.0, Typecheck@0x55bbe3ea4df0[Type#53], %85.1   !
BB75   <- [79, 74]
  lgl$-           %75.0 = Phi                      %74.1:BB74, %79.1:BB79
  lgl$-           %75.1 = %75.0
  lgl$#-          %75.2 = CheckTrueFalse     e     %75.1
  void                    Branch                   %75.2 -> BB77 (if true) | BB76 (if false)
BB71   <- [69]
  val?^ | miss    %71.0 = LdVar              eR    no, e0.3
  val?            %71.1 = Force!             !v    %71.0, e0.3   <val?_>
  lgl$#-          %71.2 = IsType                   %71.1 isA val?+
  void                    Branch                   %71.2 -> BB128 (if true) | BB129 (if false)
BB70   <- [69]
  (cls|spec|blt)  %70.0 = LdFun              !v    is.function, e0.3
  fs              %70.1 = FrameState         R     0x55bbe3eedbe0+1162: [%68.4, %70.0], env=e0.3
  void                    Deopt              !v    %70.1, DeadCall@0x55bbe3ea4df0[Call#12], %70.0   !
BB136   <- [134]
  int+            %136.0 = CastType           d     dn %134.0
  (int|real)$-    %136.1 = CallSafeBuiltin    wed   length(%136.0)    <int$->
  lgl$#-          %136.2 = IsType                   %136.1 isA int$-
  void                    Branch                   %136.2 -> BB138 (if true) | BB139 (if false)
BB137   <- [134]
  void                    Nop                !     
  val?^ | miss    %137.1 = %134.0
  dr              %137.2 = Typecheck@0x55bbe3ea4df0[Type#68]
  goto BB26
BB26   <- [135, 137]
  val?^ | miss    %26.0 = Phi                      %135.1:BB135, %137.1:BB137
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %135.2:BB135, %137.2:BB137
  dr              %26.3 = %26.2
  fs              %26.4 = FrameState         R     0x55bbe3eedbe0+1973: [], env=e0.3
  void                    Deopt              !v    %26.4, %26.3, %26.1   !
BB92   <- [130]
  (cls|spec|blt)  %92.0 = LdFun              !v    identical, e0.3
  fs              %92.1 = FrameState         R     0x55bbe3eedbe0+1673: [%118.4, %130.1, %92.0], env=e0.3
  void                    Deopt              !v    %92.1, DeadCall@0x55bbe3ea4df0[Call#18], %92.0   !
BB88   <- [130]
  void                    Nop                !     
  lgl$-           %88.1 = %130.2
  goto BB89
BB77   <- [75]
  val?^ | miss    %77.0 = LdVar              eR    no, e0.3
  void                    Visible            v     
  val?            %77.2 = Force!             !     %77.0, e0.3   <val?_>
  val?            %77.3 = %77.2
  goto BB40
BB76   <- [75]
  void                    Nop                !     
  goto BB64
BB128   <- [71]
  val?+           %128.0 = CastType           d     dn %71.1   <val?_>
  lgl$#-          %128.1 = CallSafeBuiltin    wed   is.function(%128.0)    <val?_>
  lgl$-           %128.2 = LOr                      %68.4, %128.1
  void                    Branch                   %128.1 -> BB78 (if true) | BB74 (if false)
BB129   <- [71]
  fs              %129.0 = FrameState         R     0x55bbe3eedbe0+1203: [%68.4, <blt is.function>, %71.1], env=e0.3
  void                    Deopt              !v    %129.0, Typecheck@0x55bbe3ea4df0[Type#38], %71.1   !
BB138   <- [136]
  int$-           %138.0 = CastType           d     dn %136.1
  lgl$-           %138.1 = Gt                 d     %138.0, 0L, elided   <lgl$->
  lgl$#-          %138.2 = CheckTrueFalse     e     %138.1
  void                    Branch                   %138.2 -> BB49 (if true) | BB30 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x55bbe3eedbe0+2064: [%136.1], env=e0.3
  void                    Deopt              !v    %139.0, Typecheck@0x55bbe3ea4df0[Type#69], %136.1   !
BB78   <- [128]
  (cls|spec|blt)  %78.0 = LdFun              !v    identical, e0.3
  fs              %78.1 = FrameState         R     0x55bbe3eedbe0+1242: [%68.4, %128.1, %78.0], env=e0.3
  void                    Deopt              !v    %78.1, DeadCall@0x55bbe3ea4df0[Call#13], %78.0   !
BB74   <- [128]
  void                    Nop                !     
  lgl$-           %74.1 = %128.2
  goto BB75
BB49   <- [138]
  (cls|spec|blt)  %49.0 = LdFun              !v    rep, <0x55bbe1e349b0>, e0.3
  prom-           %49.1 = MkArg                    unboundValue, ifelse[0x55bbe83c1f10]_p5, e0.3
  prom-           %49.2 = MkArg                    unboundValue, ifelse[0x55bbe83c1f10]_p6, e0.3
  val?            %49.3 = NamedCall          !v    %49.0(%49.1, length.out=%49.2) e0.3   <(int|str)->
  lgl$#-          %49.4 = IsType                   %49.3 isA val+   <true>
  lgl$#-          %49.5 = IsType                   %49.3 isA val?-
  void                    Branch                   %49.4 -> BB140 (if true) | BB141 (if false)
BB30   <- [138]
  void                    Nop                !     
  goto BB31
BB140   <- [49]
  val?^ | miss    %140.0 = LdVar              eR    ypos, e0.3
  lgl$#-          %140.1 = IsType                   %140.0 isA int+
  void                    Branch                   %140.1 -> BB142 (if true) | BB143 (if false)
BB141   <- [49]
  void                    Nop                !     
  lgl$#-          %141.1 = %49.4
  dr              %141.2 = DeadBranchReached@0x55bbe3ea4df0[Test#14]
  goto BB50
BB31   <- [30, 150]
  val?^ | miss    %31.0 = LdVar              eR    length, e0.3
  lgl$#-          %31.1 = Identical                <blt length>, %31.0   <true>
  void                    Branch                   %31.1 -> BB146 (if true) | BB147 (if false)
BB142   <- [140]
  int+            %142.0 = CastType           d     dn %140.0
  void                    Branch                   %49.5 -> BB144 (if true) | BB145 (if false)
BB143   <- [140]
  void                    Nop                !     
  val?^ | miss    %143.1 = %140.0
  dr              %143.2 = Typecheck@0x55bbe3ea4df0[Type#75]
  goto BB50
BB50   <- [141, 143, 145]
  val?^ | miss    %50.0 = Phi                      %141.1:BB141, %143.1:BB143, %145.1:BB145
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %141.2:BB141, %143.2:BB143, %145.2:BB145
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55bbe3eedbe0+2137: [%49.3], env=e0.3
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB146   <- [31]
  val?^ | miss    %146.0 = LdVar              eR    npos, e0.3
  lgl$#-          %146.1 = IsType                   %146.0 isA int+
  void                    Branch                   %146.1 -> BB152 (if true) | BB153 (if false)
BB147   <- [31]
  void                    Nop                !     
  lgl$#-          %147.1 = %31.1
  dr              %147.2 = DeadBranchReached@0x55bbe3ea4df0[Test#15]
  goto BB32
BB144   <- [142]
  val?-           %144.0 = CastType           d     dn %49.3   <(int|str)->
  val?            %144.1 = Extract1_1D        wed   %144.0, %142.0, elided   <(int|str)->
  lgl$#-          %144.2 = IsType                   %144.1 isA val?-
  val?^ | miss    %144.3 = LdVar              eR    ans !upd, e0.3
  lgl$#-          %144.4 = IsType                   %144.3 isA lgl+
  void                    Branch                   %144.4 -> BB148 (if true) | BB149 (if false)
BB145   <- [142]
  void                    Nop                !     
  val?            %145.1 = %49.3
  dr              %145.2 = Typecheck@0x55bbe3ea4df0[Type#73]
  goto BB50
BB152   <- [146]
  int+            %152.0 = CastType           d     dn %146.0
  (int|real)$-    %152.1 = CallSafeBuiltin    wed   length(%152.0)    <int$->
  lgl$#-          %152.2 = IsType                   %152.1 isA int$-
  void                    Branch                   %152.2 -> BB154 (if true) | BB155 (if false)
BB153   <- [146]
  void                    Nop                !     
  val?^ | miss    %153.1 = %146.0
  dr              %153.2 = Typecheck@0x55bbe3ea4df0[Type#80]
  goto BB32
BB32   <- [147, 153]
  val?^ | miss    %32.0 = Phi                      %147.1:BB147, %153.1:BB153
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %147.2:BB147, %153.2:BB153
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x55bbe3eedbe0+2232: [], env=e0.3
  void                    Deopt              !v    %32.4, %32.3, %32.1   !
BB148   <- [144]
  lgl+            %148.0 = CastType           d     dn %144.3
  void                    Branch                   %144.2 -> BB150 (if true) | BB151 (if false)
BB149   <- [144]
  void                    Nop                !     
  val?^ | miss    %149.1 = %144.3
  dr              %149.2 = Typecheck@0x55bbe3ea4df0[Type#77]
  goto BB52
BB154   <- [152]
  int$-           %154.0 = CastType           d     dn %152.1
  lgl$-           %154.1 = Gt                 d     %154.0, 0L, elided   <lgl$->
  lgl$#-          %154.2 = CheckTrueFalse     e     %154.1
  void                    Branch                   %154.2 -> BB41 (if true) | BB36 (if false)
BB155   <- [152]
  fs              %155.0 = FrameState         R     0x55bbe3eedbe0+2323: [%152.1], env=e0.3
  void                    Deopt              !v    %155.0, Typecheck@0x55bbe3ea4df0[Type#81], %152.1   !
BB150   <- [148]
  val?-           %150.0 = CastType           d     dn %144.1   <(int|str)->
  val?+           %150.1 = Subassign1_1D      wed   %150.0, %148.0, %142.0, elided
  void                    StVar              lW    ans, %150.1, e0.3
  goto BB31
BB151   <- [148]
  void                    Nop                !     
  val?            %151.1 = %144.1
  dr              %151.2 = Typecheck@0x55bbe3ea4df0[Type#76]
  goto BB52
BB52   <- [149, 151]
  val?^ | miss    %52.0 = Phi                      %149.1:BB149, %151.1:BB151
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %149.2:BB149, %151.2:BB151
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x55bbe3eedbe0+2188: [%144.1], env=e0.3
  void                    Deopt              !v    %52.4, %52.3, %52.1   !
BB41   <- [154]
  (cls|spec|blt)  %41.0 = LdFun              !v    rep, <0x55bbe1e349b0>, e0.3
  prom-           %41.1 = MkArg                    unboundValue, ifelse[0x55bbe83c1f10]_p2, e0.3
  prom-           %41.2 = MkArg                    unboundValue, ifelse[0x55bbe83c1f10]_p3, e0.3
  val?            %41.3 = NamedCall          !v    %41.0(%41.1, length.out=%41.2) e0.3   <val?>
  lgl$#-          %41.4 = IsType                   %41.3 isA val+
  void                    Branch                   %41.4 -> BB48 (if true) | BB44 (if false)
BB36   <- [154]
  void                    Nop                !     
  goto BB37
BB48   <- [41]
  val?^ | miss    %48.0 = LdVar              eR    npos, e0.3
  lgl$#-          %48.1 = IsType                   %48.0 isA int+
  void                    Branch                   %48.1 -> BB156 (if true) | BB157 (if false)
BB44   <- [41]
  prom-           %44.0 = MkArg                    unboundValue, ifelse[0x55bbe83c1f10]_p4, e0.3
  prom-           %44.1 = %44.0
  goto BB45
BB37   <- [36, 162]
  val?^ | miss    %37.0 = LdVar              eR    ans, e0.3
  lgl$#-          %37.1 = IsType                   %37.0 isA val?~+ | miss
  void                    Branch                   %37.1 -> BB164 (if true) | BB165 (if false)
BB156   <- [48]
  int+            %156.0 = CastType           d     dn %48.0
  int+            %156.1 = %156.0
  goto BB45
BB157   <- [48]
  fs              %157.0 = FrameState         R     0x55bbe3eedbe0+2396: [%41.3], env=e0.3
  void                    Deopt              !v    %157.0, Typecheck@0x55bbe3ea4df0[Type#87], %48.0   !
BB45   <- [44, 156]
  (int|prom)+     %45.0 = Phi                      %156.1:BB156, %44.1:BB44
  (int|prom)+     %45.1 = %45.0
  val?            %45.2 = Extract1_1D        !v    %41.3, %45.1, e0.3   <val?+>
  lgl$#-          %45.3 = IsType                   %45.2 isA val?+
  val?^ | miss    %45.4 = LdVar              eR    ans !upd, e0.3
  lgl$#-          %45.5 = IsType                   %45.4 isA val?~+ | miss
  void                    Branch                   %45.5 -> BB158 (if true) | BB159 (if false)
BB164   <- [37]
  val?~+ | miss   %164.0 = CastType           d     dn %37.0
  void                    Visible            v     
  val?+           %164.2 = Force!<value>            %164.0,    <val?+>
  val?+           %164.3 = %164.2
  goto BB40
BB165   <- [37]
  fs              %165.0 = FrameState         R     0x55bbe3eedbe0+2491: [], env=e0.3
  void                    Deopt              !v    %165.0, Typecheck@0x55bbe3ea4df0[Type#91], %37.0   !
BB158   <- [45]
  val?~+ | miss   %158.0 = CastType           d     dn %45.4
  val?+           %158.1 = Force!<value>            %158.0,    <val?+>
  val?^ | miss    %158.2 = LdVar              eR    npos, e0.3
  lgl$#-          %158.3 = IsType                   %158.2 isA int+
  void                    Branch                   %158.3 -> BB160 (if true) | BB161 (if false)
BB159   <- [45]
  void                    Nop                !     
  val?^ | miss    %159.1 = %45.4
  dr              %159.2 = Typecheck@0x55bbe3ea4df0[Type#89]
  goto BB46
BB160   <- [158]
  int+            %160.0 = CastType           d     dn %158.2
  void                    Branch                   %45.3 -> BB162 (if true) | BB163 (if false)
BB161   <- [158]
  void                    Nop                !     
  val?^ | miss    %161.1 = %158.2
  dr              %161.2 = Typecheck@0x55bbe3ea4df0[Type#90]
  goto BB46
BB46   <- [159, 161, 163]
  val?^ | miss    %46.0 = Phi                      %159.1:BB159, %161.1:BB161, %163.1:BB163
  val?^ | miss    %46.1 = %46.0
  dr              %46.2 = Phi                      %159.2:BB159, %161.2:BB161, %163.2:BB163
  dr              %46.3 = %46.2
  fs              %46.4 = FrameState         R     0x55bbe3eedbe0+2447: [%45.2], env=e0.3
  void                    Deopt              !v    %46.4, %46.3, %46.1   !
BB162   <- [160]
  val?+           %162.0 = CastType           d     dn %45.2
  val?+           %162.1 = Subassign1_1D      wed   %162.0, %158.1, %160.0, elided
  void                    StVar              lW    ans, %162.1, e0.3
  goto BB37
BB163   <- [160]
  void                    Nop                !     
  val?            %163.1 = %45.2
  dr              %163.2 = Typecheck@0x55bbe3ea4df0[Type#88]
  goto BB46
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl+>
  val?            %0.4  = Not                !     %0.3, e0.0
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    no, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    len, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    npos, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    yes, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    len, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    test, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <lgl+>
  void                    Return             l     %0.3

│ ifelse[0x55bbe83c1f10]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
