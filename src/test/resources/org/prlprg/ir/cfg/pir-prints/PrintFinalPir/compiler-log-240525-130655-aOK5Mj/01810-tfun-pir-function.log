
┌──────────────────────────────────────────────────────────────────────────────┐
│ tfun[0x55bbe81c4c70]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
tfun[0x55bbe81c4c70]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     n=%0.2, id=%0.1, power=%0.0, parent=?, context 1
  val?            %0.4  = Force!<lazy>       !v    %0.2, e0.3   <(int|real)$->
  lgl$#-          %0.5  = IsType                   %0.4 isA val?-
  void                    Branch                   %0.5 -> BB52 (if true) | BB53 (if false)
BB52   <- [0]
  val?-           %52.0 = CastType           d     dn %0.4   <(int|real)$->
  lgl-            %52.1 = Eq                 wed   %52.0, 1L, elided   <lgl$->
  lgl$#-          %52.2 = IsType                   %52.1 isA lgl$-
  void                    Branch                   %52.2 -> BB54 (if true) | BB55 (if false)
BB53   <- [0]
  fs              %53.0 = FrameState         R     0x55bbee769ef0+9: [%0.4], env=e0.3
  void                    Deopt              !v    %53.0, Typecheck@0x55bbe20e5750[Type#0], %0.4   !
BB54   <- [52]
  lgl$-           %54.0 = CastType           d     dn %52.1
  lgl$#-          %54.1 = CheckTrueFalse     e     %54.0
  void                    Branch                   %54.1 -> BB50 (if true) | BB5 (if false)
BB55   <- [52]
  fs              %55.0 = FrameState         R     0x55bbee769ef0+21: [%52.1], env=e0.3
  void                    Deopt              !v    %55.0, Typecheck@0x55bbe20e5750[Type#1], %52.1   !
BB50   <- [54]
  val?^ | miss    %50.0 = LdVar              eR    id, e0.3
  void                    Visible            v     
  val?            %50.2 = Force!             !     %50.0, e0.3   <val?_>
  val?            %50.3 = %50.2
  goto BB38
BB5   <- [54]
  val?^ | miss    %5.0  = LdVar              eR    n, e0.3
  val?            %5.1  = Force!<wrapped>    !v    %5.0, e0.3   <(int|real)$->
  lgl$#-          %5.2  = IsType                   %5.1 isA val?-
  void                    Branch                   %5.2 -> BB56 (if true) | BB57 (if false)
BB38   <- [50, 37]
  val?            %38.0 = Phi                      %37.2:BB37, %50.3:BB50
  val?            %38.1 = %38.0
  void                    Return             l     %38.1
BB56   <- [5]
  val?-           %56.0 = CastType           d     dn %5.1   <(int|real)$->
  lgl-            %56.1 = Eq                 wed   %56.0, 2L, elided   <lgl$->
  lgl$#-          %56.2 = IsType                   %56.1 isA lgl$-
  void                    Branch                   %56.2 -> BB58 (if true) | BB59 (if false)
BB57   <- [5]
  fs              %57.0 = FrameState         R     0x55bbee769ef0+41: [%5.1], env=e0.3
  void                    Deopt              !v    %57.0, Typecheck@0x55bbe20e5750[Type#2], %5.1   !
BB58   <- [56]
  lgl$-           %58.0 = CastType           d     dn %56.1
  lgl$#-          %58.1 = CheckTrueFalse     e     %58.0
  void                    Branch                   %58.1 -> BB43 (if true) | BB10 (if false)
BB59   <- [56]
  fs              %59.0 = FrameState         R     0x55bbee769ef0+53: [%56.1], env=e0.3
  void                    Deopt              !v    %59.0, Typecheck@0x55bbe20e5750[Type#3], %56.1   !
BB43   <- [58]
  val?^ | miss    %43.0 = LdVar              eR    c, e0.3
  lgl$#-          %43.1 = Identical                <blt c>, %43.0   <@?>
  void                    Branch                   %43.1 -> BB45 (if true) | BB44 (if false)
BB10   <- [58]
  val?^ | miss    %10.0 = LdVar              eR    n, e0.3
  val?            %10.1 = Force!<wrapped>    !v    %10.0, e0.3   <(int|real)$->
  lgl$#-          %10.2 = IsType                   %10.1 isA val?-
  void                    Branch                   %10.2 -> BB60 (if true) | BB61 (if false)
BB45   <- [43]
  val?^ | miss    %45.0 = LdVar              eR    id, e0.3
  val?            %45.1 = Force!             !v    %45.0, e0.3   <val?_>
  lgl$#-          %45.2 = IsType                   %45.1 isA val?+
  void                    Branch                   %45.2 -> BB68 (if true) | BB69 (if false)
BB44   <- [43]
  (cls|spec|blt)  %44.0 = LdFun              !v    c, e0.3
  fs              %44.1 = FrameState         R     0x55bbee769ef0+755: [%44.0], env=e0.3
  void                    Deopt              !v    %44.1, DeadCall@0x55bbe20e5750[Call#7], %44.0   !
BB60   <- [10]
  val?-           %60.0 = CastType           d     dn %10.1   <(int|real)$->
  lgl-            %60.1 = Eq                 wed   %60.0, 3L, elided   <lgl$->
  lgl$#-          %60.2 = IsType                   %60.1 isA lgl$-
  void                    Branch                   %60.2 -> BB62 (if true) | BB63 (if false)
BB61   <- [10]
  fs              %61.0 = FrameState         R     0x55bbee769ef0+73: [%10.1], env=e0.3
  void                    Deopt              !v    %61.0, Typecheck@0x55bbe20e5750[Type#4], %10.1   !
BB68   <- [45]
  val?+           %68.0 = CastType           d     dn %45.1   <val?_>
  (int|real|complex)+ %68.1 = Mul                wed   2L, %68.0, elided   <val?_>
  (int|real|complex)+ %68.2 = Add                wed   %68.1, 1L, elided   <val?_>
  val?^ | miss    %68.3 = LdVar              eR    id, e0.3
  val?            %68.4 = Force!             !v    %68.3, e0.3   <val?_>
  lgl$#-          %68.5 = IsType                   %68.4 isA val?+
  void                    Branch                   %68.5 -> BB70 (if true) | BB71 (if false)
BB69   <- [45]
  fs              %69.0 = FrameState         R     0x55bbee769ef0+807: [<blt c>, 2L, %45.1], env=e0.3
  void                    Deopt              !v    %69.0, Typecheck@0x55bbe20e5750[Type#80], %45.1   !
BB62   <- [60]
  lgl$-           %62.0 = CastType           d     dn %60.1
  lgl$#-          %62.1 = CheckTrueFalse     e     %62.0
  void                    Branch                   %62.1 -> BB40 (if true) | BB15 (if false)
BB63   <- [60]
  void                    Nop                !     
  lgl-            %63.1 = %60.1
  dr              %63.2 = Typecheck@0x55bbe20e5750[Type#5]
  goto BB13
BB70   <- [68]
  val?+           %70.0 = CastType           d     dn %68.4   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %70.1 = CallSafeBuiltin    vwed  c(%68.2, %70.0)    <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %70.2 = %70.1
  goto BB37
BB71   <- [68]
  fs              %71.0 = FrameState         R     0x55bbee769ef0+839: [<blt c>, %68.2, %68.4], env=e0.3
  void                    Deopt              !v    %71.0, Typecheck@0x55bbe20e5750[Type#83], %68.4   !
BB40   <- [62]
  val?^ | miss    %40.0 = LdVar              eR    c, e0.3
  lgl$#-          %40.1 = Identical                <blt c>, %40.0   <true>
  void                    Branch                   %40.1 -> BB64 (if true) | BB65 (if false)
BB15   <- [62]
  val?^ | miss    %15.0 = LdVar              eR    n, e0.3
  val?            %15.1 = Force!<wrapped>    !v    %15.0, e0.3   <(int|real)$->
  val?^ | miss    %15.2 = LdVar              eR    power, e0.3
  val?            %15.3 = Force!<lazy>       !v    %15.2, e0.3   <(int|real)$->
  lgl$#-          %15.4 = IsType                   %15.3 isA val?-
  void                    Branch                   %15.4 -> BB72 (if true) | BB73 (if false)
BB13   <- [63, 65]
  val?^ | miss    %13.0 = Phi                      %63.1:BB63, %65.1:BB65
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %63.2:BB63, %65.2:BB65
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55bbee769ef0+85: [%60.1], env=e0.3
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB37   <- [36, 70]
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %37.0 = Phi                      %36.2:BB36, %70.2:BB70
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %37.1 = %37.0
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %37.2 = %37.1
  goto BB38
BB64   <- [40]
  val?^ | miss    %64.0 = LdVar              eR    id, e0.3
  val?            %64.1 = Force!<lazy>       !v    %64.0, e0.3   <int$->
  lgl$#-          %64.2 = IsType                   %64.1 isA int$-
  void                    Branch                   %64.2 -> BB66 (if true) | BB67 (if false)
BB65   <- [40]
  void                    Nop                !     
  lgl$#-          %65.1 = %40.1
  dr              %65.2 = DeadBranchReached@0x55bbe20e5750[Test#2]
  goto BB13
BB72   <- [15]
  val?-           %72.0 = CastType           d     dn %15.3   <(int|real)$->
  (int|real|complex)- %72.1 = Mul                wed   %72.0, 2L, elided   <(int|real)$->
  lgl$#-          %72.2 = IsType                   %15.1 isA val?-
  void                    Branch                   %72.2 -> BB76 (if true) | BB77 (if false)
BB73   <- [15]
  fs              %73.0 = FrameState         R     0x55bbee769ef0+119: [%15.1, %15.3], env=e0.3
  void                    Deopt              !v    %73.0, Typecheck@0x55bbe20e5750[Type#7], %15.3   !
BB66   <- [64]
  int$-           %66.0 = CastType           d     dn %64.1
  int$-           %66.1 = Mul                d     2L, %66.0, elided   <int$->
  int$-           %66.2 = Add                d     %66.1, 1L, elided   <int$->
  val?^ | miss    %66.3 = LdVar              eR    id, e0.3
  lgl$#-          %66.4 = IsType                   %66.3 isA int$~-
  void                    Branch                   %66.4 -> BB74 (if true) | BB75 (if false)
BB67   <- [64]
  void                    Nop                !     
  val?            %67.1 = %64.1
  dr              %67.2 = Typecheck@0x55bbe20e5750[Type#68]
  goto BB41
BB76   <- [72]
  val?-           %76.0 = CastType           d     dn %15.1   <(int|real)$->
  lgl-            %76.1 = Eq                 wed   %76.0, %72.1, elided   <lgl$->
  lgl$#-          %76.2 = IsType                   %76.1 isA lgl$-
  void                    Branch                   %76.2 -> BB78 (if true) | BB79 (if false)
BB77   <- [72]
  fs              %77.0 = FrameState         R     0x55bbee769ef0+131: [%15.1, %72.1], env=e0.3
  void                    Deopt              !v    %77.0, Typecheck@0x55bbe20e5750[Type#6], %15.1   !
BB74   <- [66]
  int$~-          %74.0 = CastType           d     dn %66.3
  int$-           %74.1 = Force!<wrapped>          %74.0,    <int$->
  int$-           %74.2 = Mul                d     2L, %74.1, elided   <int$->
  int$-           %74.3 = Add                d     %74.2, 2L, elided   <int$->
  int-            %74.4 = CallSafeBuiltin    vwed  c(%66.2, %74.1, %74.3)    <int->
  int-            %74.5 = %74.4
  goto BB36
BB75   <- [66]
  void                    Nop                !     
  val?^ | miss    %75.1 = %66.3
  dr              %75.2 = Typecheck@0x55bbe20e5750[Type#71]
  goto BB41
BB41   <- [67, 75]
  val?^ | miss    %41.0 = Phi                      %67.1:BB67, %75.1:BB75
  val?^ | miss    %41.1 = %41.0
  dr              %41.2 = Phi                      %67.2:BB67, %75.2:BB75
  dr              %41.3 = %41.2
  fs              %41.4 = FrameState         R     0x55bbee769ef0+625: [<blt c>, 2L, %64.1], env=e0.3
  void                    Deopt              !v    %41.4, %41.3, %41.1   !
BB78   <- [76]
  lgl$-           %78.0 = CastType           d     dn %76.1
  lgl$#-          %78.1 = CheckTrueFalse     e     %78.0
  void                    Branch                   %78.1 -> BB39 (if true) | BB22 (if false)
BB79   <- [76]
  void                    Nop                !     
  lgl-            %79.1 = %76.1
  dr              %79.2 = Typecheck@0x55bbe20e5750[Type#9]
  goto BB20
BB36   <- [74, 98]
  int-            %36.0 = Phi                      %98.2:BB98, %74.5:BB74
  int-            %36.1 = %36.0
  int-            %36.2 = %36.1
  goto BB37
BB39   <- [78]
  val?^ | miss    %39.0 = LdVar              eR    power, e0.3
  val?            %39.1 = Force!             !v    %39.0, e0.3   <val?_>
  val?            %39.2 = %39.1
  goto BB29
BB22   <- [78]
  val?^ | miss    %22.0 = LdVar              eR    min, e0.3
  lgl$#-          %22.1 = Identical                <blt min>, %22.0   <true>
  void                    Branch                   %22.1 -> BB80 (if true) | BB81 (if false)
BB20   <- [79, 81]
  val?^ | miss    %20.0 = Phi                      %79.1:BB79, %81.1:BB81
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %79.2:BB79, %81.2:BB81
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x55bbee769ef0+137: [%76.1], env=e0.3
  void                    Deopt              !v    %20.4, %20.3, %20.1   !
BB29   <- [39, 92]
  val?            %29.0 = Phi                      %92.3:BB92, %39.2:BB39   <(int|real)$->
  val?            %29.1 = %29.0
  void                    StVar              lW    nleft, %29.1, e0.3
  val?^ | miss    %29.3 = LdVar              eR    c, e0.3
  lgl$#-          %29.4 = Identical                <blt c>, %29.3   <true>
  void                    Branch                   %29.4 -> BB82 (if true) | BB83 (if false)
BB80   <- [22]
  val?^ | miss    %80.0 = LdVar              eR    power, e0.3
  val?            %80.1 = Force!<wrapped>    !v    %80.0, e0.3   <(int|real)$->
  lgl$#-          %80.2 = IsType                   %80.1 isA val?-
  void                    Branch                   %80.2 -> BB86 (if true) | BB87 (if false)
BB81   <- [22]
  void                    Nop                !     
  lgl$#-          %81.1 = %22.1
  dr              %81.2 = DeadBranchReached@0x55bbe20e5750[Test#0]
  goto BB20
BB82   <- [29]
  val?^ | miss    %82.0 = LdVar              eR    tfun, e0.3
  (cls|spec|blt)  %82.1 = CastType                 dn %82.0
  val+            %82.2 = CallSafeBuiltin          bodyCode(%82.1) 
  lgl$#-          %82.3 = Identical                %82.2, <(rir::DispatchTable*)0x55bbed9eb530>
  void                    Branch                   %82.3 -> BB84 (if true) | BB85 (if false)
BB83   <- [29]
  void                    Nop                !     
  lgl$#-          %83.1 = %29.4
  dr              %83.2 = DeadBranchReached@0x55bbe20e5750[Test#1]
  goto BB30
BB86   <- [80]
  val?-           %86.0 = CastType           d     dn %80.1   <(int|real)$->
  (int|real|complex)- %86.1 = Sub                wed   %86.0, 1L, elided   <(int|real)$->
  val?^ | miss    %86.2 = LdVar              eR    n, e0.3
  val?            %86.3 = Force!<wrapped>    !v    %86.2, e0.3   <(int|real)$->
  val?^ | miss    %86.4 = LdVar              eR    power, e0.3
  val?            %86.5 = Force!<wrapped>    !v    %86.4, e0.3   <(int|real)$->
  lgl$#-          %86.6 = IsType                   %86.5 isA val?-
  void                    Branch                   %86.6 -> BB88 (if true) | BB89 (if false)
BB87   <- [80]
  fs              %87.0 = FrameState         R     0x55bbee769ef0+222: [<blt min>, %80.1], env=e0.3
  void                    Deopt              !v    %87.0, Typecheck@0x55bbe20e5750[Type#16], %80.1   !
BB84   <- [82]
  val?            %84.0 = Force!             d     %82.0, 
  prom-           %84.1 = MkArg                    unboundValue, tfun[0x55bbe81c4c70]_p1, e0.3
  prom-           %84.2 = MkArg                    unboundValue, tfun[0x55bbe81c4c70]_p2, e0.3
  (cls|spec|blt)  %84.3 = ChkFunction        e     %84.0
  val             %84.4 = ChkMissing         e     %29.1
  prom-           %84.5 = MkArg                    %29.1, tfun[0x55bbe81c4c70]_p0 (!refl), 
  val?            %84.6 = StaticCall         !v    tfun[0x55bbe61758e0](%84.5, %84.1, %84.2) from %84.3 e0.3   <int->
  val?^ | miss    %84.7 = LdVar              eR    id, e0.3
  val?            %84.8 = Force!<wrapped>    !v    %84.7, e0.3   <int$->
  val?^ | miss    %84.9 = LdVar              eR    tfun, e0.3
  (cls|spec|blt)  %84.10 = CastType                 dn %84.9
  val+            %84.11 = CallSafeBuiltin          bodyCode(%84.10) 
  lgl$#-          %84.12 = Identical                %84.11, <(rir::DispatchTable*)0x55bbed9eb530>
  void                    Branch                   %84.12 -> BB90 (if true) | BB91 (if false)
BB85   <- [82]
  void                    Nop                !     
  val+            %85.1 = %82.2
  dr              %85.2 = CallTarget@0x55bbe20e5750[Call#4]
  goto BB30
BB30   <- [83, 85]
  val?^ | miss    %30.0 = Phi                      %83.1:BB83, %85.1:BB85
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %83.2:BB83, %85.2:BB85
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55bbee769ef0+335: [], env=e0.3
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB88   <- [86]
  val?-           %88.0 = CastType           d     dn %86.5   <(int|real)$->
  (int|real|complex)- %88.1 = IDiv               wed   %88.0, 2L, elided   <(int|real)$->
  lgl$#-          %88.2 = IsType                   %86.3 isA val?-
  void                    Branch                   %88.2 -> BB92 (if true) | BB93 (if false)
BB89   <- [86]
  fs              %89.0 = FrameState         R     0x55bbee769ef0+262: [<blt min>, %86.1, %86.3, %86.5], env=e0.3
  void                    Deopt              !v    %89.0, Typecheck@0x55bbe20e5750[Type#19], %86.5   !
BB90   <- [84]
  val?            %90.0 = Force!             d     %84.9, 
  prom-           %90.1 = MkArg                    unboundValue, tfun[0x55bbe81c4c70]_p3, e0.3
  prom-           %90.2 = MkArg                    unboundValue, tfun[0x55bbe81c4c70]_p4, e0.3
  prom-           %90.3 = MkArg                    unboundValue, tfun[0x55bbe81c4c70]_p5, e0.3
  (cls|spec|blt)  %90.4 = ChkFunction        e     %90.0
  val?            %90.5 = StaticCall         !v    tfun[0x55bbe4b7d5e0](%90.1, %90.2, %90.3) from %90.4 e0.3   <int->
  lgl$#-          %90.6 = IsType                   %90.5 isA int-
  lgl$#-          %90.7 = IsType                   %84.6 isA int-
  void                    Branch                   %90.7 -> BB94 (if true) | BB95 (if false)
BB91   <- [84]
  fs              %91.0 = FrameState         R     0x55bbee769ef0+461: [<blt c>, %84.6, %84.8], env=e0.3
  void                    Deopt              !v    %91.0, CallTarget@0x55bbe20e5750[Call#5], %84.11   !
BB92   <- [88]
  val?-           %92.0 = CastType           d     dn %86.3   <(int|real)$->
  (int|real|complex)- %92.1 = Sub                wed   %92.0, %88.1, elided   <(int|real)$->
  (int|real|complex)$- %92.2 = CallSafeBuiltin    wed   min(%86.1, %92.1)    <(int|real)$->
  (int|real|complex)$- %92.3 = %92.2
  goto BB29
BB93   <- [88]
  fs              %93.0 = FrameState         R     0x55bbee769ef0+274: [<blt min>, %86.1, %86.3, %88.1], env=e0.3
  void                    Deopt              !v    %93.0, Typecheck@0x55bbe20e5750[Type#18], %86.3   !
BB94   <- [90]
  int-            %94.0 = CastType           d     dn %84.6
  lgl$#-          %94.1 = IsType                   %84.8 isA int$-
  void                    Branch                   %94.1 -> BB96 (if true) | BB97 (if false)
BB95   <- [90]
  void                    Nop                !     
  val?            %95.1 = %84.6
  dr              %95.2 = Typecheck@0x55bbe20e5750[Type#48]
  goto BB34
BB96   <- [94]
  int$-           %96.0 = CastType           d     dn %84.8
  void                    Branch                   %90.6 -> BB98 (if true) | BB99 (if false)
BB97   <- [94]
  void                    Nop                !     
  val?            %97.1 = %84.8
  dr              %97.2 = Typecheck@0x55bbe20e5750[Type#49]
  goto BB34
BB34   <- [95, 97, 99]
  val?^ | miss    %34.0 = Phi                      %95.1:BB95, %97.1:BB97, %99.1:BB99
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %95.2:BB95, %97.2:BB97, %99.2:BB99
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x55bbee769ef0+508: [<blt c>, %84.6, %84.8, %90.5], env=e0.3
  void                    Deopt              !v    %34.4, %34.3, %34.1   !
BB98   <- [96]
  int-            %98.0 = CastType           d     dn %90.5
  int-            %98.1 = CallSafeBuiltin    vwed  c(%94.0, %96.0, %98.0)    <int->
  int-            %98.2 = %98.1
  goto BB36
BB99   <- [96]
  void                    Nop                !     
  val?            %99.1 = %90.5
  dr              %99.2 = Typecheck@0x55bbe20e5750[Type#59]
  goto BB34
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nleft, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(int|real)$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    id, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <int$->
  val?            %0.3  = Mul                !v    2L, %0.2, e0.0   <int$->
  void                    Visible            v     
  val?            %0.5  = Add                !     %0.3, 1L, e0.0   <int$->
  void                    Return             l     %0.5
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    power, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <(int|real)$->
  void                    Visible            v     
  val?            %0.4  = IDiv               !     %0.2, 2, e0.0   <real$->
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <real$->
  val?^ | miss    %0.3  = LdVar              eR    nleft, e0.0
  val?            %0.4  = Force<value>       !v    %0.3, e0.0   <real$->
  val?            %0.5  = Add                !v    %0.4, 1L, e0.0   <real$->
  void                    Visible            v     
  val?            %0.7  = Sub                !     %0.2, %0.5, e0.0   <real$->
  void                    Return             l     %0.7
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    id, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <int$->
  val?            %0.3  = Mul                !v    2L, %0.2, e0.0   <int$->
  void                    Visible            v     
  val?            %0.5  = Add                !     %0.3, 2L, e0.0   <int$->
  void                    Return             l     %0.5
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    power, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = IDiv               !     %0.2, 2, e0.0   <real$->
  void                    Return             l     %0.4

│ tfun[0x55bbe81c4c70]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
