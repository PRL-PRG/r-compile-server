
┌──────────────────────────────────────────────────────────────────────────────┐
│ tfun[0x55bbe3bbb630]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleReal0    │
│ Properties:                                                                  │
├────── Final PIR Version
tfun[0x55bbe3bbb630]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  (real|miss)$~-  %0.2  = LdArg                    0
  real$-          %0.3  = Force<lazy>              %0.2,    <(int|real)$->
  lgl$-           %0.4  = Eq                 d     %0.3, 1L, elided   <lgl$->
  lgl$#-          %0.5  = CheckTrueFalse     e     %0.4
  env             e0.6  = MkEnv              l     n=%0.2, id=%0.1, power=%0.0, parent=?, context 1
  void                    Branch                   %0.5 -> BB38 (if true) | BB3 (if false)
BB38   <- [0]
  void                    Visible            v     
  val?            %38.1 = Force!             !     %0.1, e0.6   <val?_>
  val?            %38.2 = %38.1
  goto BB26
BB3   <- [0]
  lgl$-           %3.0  = Eq                 d     %0.3, 2L, elided   <lgl$->
  lgl$#-          %3.1  = CheckTrueFalse     e     %3.0
  void                    Branch                   %3.1 -> BB31 (if true) | BB4 (if false)
BB26   <- [38, 25]
  val?            %26.0 = Phi                      %25.2:BB25, %38.2:BB38
  val?            %26.1 = %26.0
  void                    Return             l     %26.1
BB31   <- [3]
  val?^ | miss    %31.0 = LdVar              eR    c, ?
  lgl$#-          %31.1 = Identical                <blt c>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB4   <- [3]
  lgl$-           %4.0  = Eq                 d     %0.3, 3L, elided   <lgl$->
  lgl$#-          %4.1  = CheckTrueFalse     e     %4.0
  void                    Branch                   %4.1 -> BB28 (if true) | BB5 (if false)
BB33   <- [31]
  val?            %33.0 = Force!             !v    %0.1, e0.6   <val?_>
  lgl$#-          %33.1 = IsType                   %33.0 isA val?+
  void                    Branch                   %33.1 -> BB44 (if true) | BB45 (if false)
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    c, ?
  fs              %32.1 = FrameState         R     0x55bbee769ef0+755: [%32.0], env=e0.6
  void                    Deopt              !v    %32.1, DeadCall@0x55bbe20e5750[Call#7], %32.0
BB28   <- [4]
  val?^ | miss    %28.0 = LdVar              eR    c, ?
  lgl$#-          %28.1 = Identical                <blt c>, %28.0   <true>
  void                    Branch                   %28.1 -> BB40 (if true) | BB41 (if false)
BB5   <- [4]
  val?            %5.0  = Force!<lazy>       !v    %0.0, e0.6   <(int|real)$->
  lgl$#-          %5.1  = IsType                   %5.0 isA val?-
  void                    Branch                   %5.1 -> BB46 (if true) | BB47 (if false)
BB44   <- [33]
  val?+           %44.0 = CastType           d     dn %33.0   <val?_>
  (int|real|complex)+ %44.1 = Mul                wed   2L, %44.0, elided   <val?_>
  (int|real|complex)+ %44.2 = Add                wed   %44.1, 1L, elided   <val?_>
  val?^ | miss    %44.3 = LdVar              eR    id, e0.6
  val?            %44.4 = Force!             !v    %44.3, e0.6   <val?_>
  lgl$#-          %44.5 = IsType                   %44.4 isA val?+
  void                    Branch                   %44.5 -> BB50 (if true) | BB51 (if false)
BB45   <- [33]
  fs              %45.0 = FrameState         R     0x55bbee769ef0+807: [<blt c>, 2L, %33.0], env=e0.6
  void                    Deopt              !v    %45.0, Typecheck@0x55bbe20e5750[Type#80], %33.0   !
BB40   <- [28]
  val?            %40.0 = Force!<lazy>       !v    %0.1, e0.6   <int$->
  lgl$#-          %40.1 = IsType                   %40.0 isA int$-
  void                    Branch                   %40.1 -> BB42 (if true) | BB43 (if false)
BB41   <- [28]
  env             e41.0 = (MkEnv)            l     n=%0.2, id=%0.1, power=%0.0, parent=?, context 1
  fs              %41.1 = FrameState         R     0x55bbee769ef0+0: [], env=e41.0
  void                    Deopt              !v    %41.1, DeadBranchReached@0x55bbe20e5750[Test#2], %28.1
BB46   <- [5]
  val?-           %46.0 = CastType           d     dn %5.0   <(int|real)$->
  (int|real|complex)- %46.1 = Mul                wed   %46.0, 2L, elided   <(int|real)$->
  lgl-            %46.2 = Eq                 wed   %0.3, %46.1, elided   <lgl$->
  lgl$#-          %46.3 = IsType                   %46.2 isA lgl$-
  void                    Branch                   %46.3 -> BB52 (if true) | BB53 (if false)
BB47   <- [5]
  fs              %47.0 = FrameState         R     0x55bbee769ef0+119: [%0.3, %5.0], env=e0.6
  void                    Deopt              !v    %47.0, Typecheck@0x55bbe20e5750[Type#7], %5.0   !
BB50   <- [44]
  val?+           %50.0 = CastType           d     dn %44.4   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %50.1 = CallSafeBuiltin    vwed  c(%44.2, %50.0)    <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %50.2 = %50.1
  goto BB25
BB51   <- [44]
  fs              %51.0 = FrameState         R     0x55bbee769ef0+839: [<blt c>, %44.2, %44.4], env=e0.6
  void                    Deopt              !v    %51.0, Typecheck@0x55bbe20e5750[Type#83], %44.4   !
BB42   <- [40]
  int$-           %42.0 = CastType           d     dn %40.0
  int$-           %42.1 = Mul                d     2L, %42.0, elided   <int$->
  int$-           %42.2 = Add                d     %42.1, 1L, elided   <int$->
  val?^ | miss    %42.3 = LdVar              eR    id, e0.6
  lgl$#-          %42.4 = IsType                   %42.3 isA int$~-
  void                    Branch                   %42.4 -> BB48 (if true) | BB49 (if false)
BB43   <- [40]
  void                    Nop                !     
  val?            %43.1 = %40.0
  dr              %43.2 = Typecheck@0x55bbe20e5750[Type#68]
  goto BB29
BB52   <- [46]
  lgl$-           %52.0 = CastType           d     dn %46.2
  lgl$#-          %52.1 = CheckTrueFalse     e     %52.0
  void                    Branch                   %52.1 -> BB27 (if true) | BB10 (if false)
BB53   <- [46]
  void                    Nop                !     
  lgl-            %53.1 = %46.2
  dr              %53.2 = Typecheck@0x55bbe20e5750[Type#9]
  goto BB8
BB25   <- [24, 50]
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %25.0 = Phi                      %24.2:BB24, %50.2:BB50
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %25.1 = %25.0
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %25.2 = %25.1
  goto BB26
BB48   <- [42]
  int$~-          %48.0 = CastType           d     dn %42.3
  int$-           %48.1 = Force!<wrapped>          %48.0,    <int$->
  int$-           %48.2 = Mul                d     2L, %48.1, elided   <int$->
  int$-           %48.3 = Add                d     %48.2, 2L, elided   <int$->
  int-            %48.4 = CallSafeBuiltin    vwed  c(%42.2, %48.1, %48.3)    <int->
  int-            %48.5 = %48.4
  goto BB24
BB49   <- [42]
  void                    Nop                !     
  val?^ | miss    %49.1 = %42.3
  dr              %49.2 = Typecheck@0x55bbe20e5750[Type#71]
  goto BB29
BB29   <- [43, 49]
  val?^ | miss    %29.0 = Phi                      %43.1:BB43, %49.1:BB49
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %43.2:BB43, %49.2:BB49
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x55bbee769ef0+625: [<blt c>, 2L, %40.0], env=e0.6
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
BB27   <- [52]
  val?^ | miss    %27.0 = LdVar              eR    power, e0.6
  val?            %27.1 = Force!             !v    %27.0, e0.6   <val?_>
  val?            %27.2 = %27.1
  goto BB17
BB10   <- [52]
  val?^ | miss    %10.0 = LdVar              eR    min, e0.6
  lgl$#-          %10.1 = Identical                <blt min>, %10.0   <true>
  void                    Branch                   %10.1 -> BB54 (if true) | BB55 (if false)
BB8   <- [53, 55]
  val?^ | miss    %8.0  = Phi                      %53.1:BB53, %55.1:BB55
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %53.2:BB53, %55.2:BB55
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55bbee769ef0+137: [%46.2], env=e0.6
  void                    Deopt              !v    %8.4, %8.3, %8.1   !
BB24   <- [48, 72]
  int-            %24.0 = Phi                      %72.2:BB72, %48.5:BB48
  int-            %24.1 = %24.0
  int-            %24.2 = %24.1
  goto BB25
BB17   <- [27, 68]
  val?            %17.0 = Phi                      %68.3:BB68, %27.2:BB27   <(int|real)$->
  val?            %17.1 = %17.0
  void                    StVar              lW    nleft, %17.1, e0.6
  val?^ | miss    %17.3 = LdVar              eR    c, e0.6
  lgl$#-          %17.4 = Identical                <blt c>, %17.3   <true>
  void                    Branch                   %17.4 -> BB58 (if true) | BB59 (if false)
BB54   <- [10]
  val?^ | miss    %54.0 = LdVar              eR    power, e0.6
  val?            %54.1 = Force!<wrapped>    !v    %54.0, e0.6   <(int|real)$->
  lgl$#-          %54.2 = IsType                   %54.1 isA val?-
  void                    Branch                   %54.2 -> BB56 (if true) | BB57 (if false)
BB55   <- [10]
  void                    Nop                !     
  lgl$#-          %55.1 = %10.1
  dr              %55.2 = DeadBranchReached@0x55bbe20e5750[Test#0]
  goto BB8
BB58   <- [17]
  val?^ | miss    %58.0 = LdVar              eR    tfun, e0.6
  (cls|spec|blt)  %58.1 = CastType                 dn %58.0
  val+            %58.2 = CallSafeBuiltin          bodyCode(%58.1) 
  lgl$#-          %58.3 = Identical                %58.2, <(rir::DispatchTable*)0x55bbed9eb530>
  void                    Branch                   %58.3 -> BB60 (if true) | BB61 (if false)
BB59   <- [17]
  void                    Nop                !     
  lgl$#-          %59.1 = %17.4
  dr              %59.2 = DeadBranchReached@0x55bbe20e5750[Test#1]
  goto BB18
BB56   <- [54]
  val?-           %56.0 = CastType           d     dn %54.1   <(int|real)$->
  (int|real|complex)- %56.1 = Sub                wed   %56.0, 1L, elided   <(int|real)$->
  val?^ | miss    %56.2 = LdVar              eR    n, e0.6
  val?            %56.3 = Force!<wrapped>    !v    %56.2, e0.6   <(int|real)$->
  val?^ | miss    %56.4 = LdVar              eR    power, e0.6
  val?            %56.5 = Force!<wrapped>    !v    %56.4, e0.6   <(int|real)$->
  lgl$#-          %56.6 = IsType                   %56.5 isA val?-
  void                    Branch                   %56.6 -> BB64 (if true) | BB65 (if false)
BB57   <- [54]
  fs              %57.0 = FrameState         R     0x55bbee769ef0+222: [<blt min>, %54.1], env=e0.6
  void                    Deopt              !v    %57.0, Typecheck@0x55bbe20e5750[Type#16], %54.1   !
BB60   <- [58]
  val?            %60.0 = Force!             d     %58.0, 
  prom-           %60.1 = MkArg                    unboundValue, tfun[0x55bbe3bbb630]_p1, e0.6
  prom-           %60.2 = MkArg                    unboundValue, tfun[0x55bbe3bbb630]_p2, e0.6
  (cls|spec|blt)  %60.3 = ChkFunction        e     %60.0
  val             %60.4 = ChkMissing         e     %17.1
  prom-           %60.5 = MkArg                    %17.1, tfun[0x55bbe3bbb630]_p0 (!refl), 
  val?            %60.6 = StaticCall         !v    tfun[0x55bbef559360](%60.5, %60.1, %60.2) from %60.3 e0.6   <int->
  val?^ | miss    %60.7 = LdVar              eR    id, e0.6
  val?            %60.8 = Force!<wrapped>    !v    %60.7, e0.6   <int$->
  val?^ | miss    %60.9 = LdVar              eR    tfun, e0.6
  (cls|spec|blt)  %60.10 = CastType                 dn %60.9
  val+            %60.11 = CallSafeBuiltin          bodyCode(%60.10) 
  lgl$#-          %60.12 = Identical                %60.11, <(rir::DispatchTable*)0x55bbed9eb530>
  void                    Branch                   %60.12 -> BB62 (if true) | BB63 (if false)
BB61   <- [58]
  void                    Nop                !     
  val+            %61.1 = %58.2
  dr              %61.2 = CallTarget@0x55bbe20e5750[Call#4]
  goto BB18
BB18   <- [59, 61]
  val?^ | miss    %18.0 = Phi                      %59.1:BB59, %61.1:BB61
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %59.2:BB59, %61.2:BB61
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55bbee769ef0+335: [], env=e0.6
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB64   <- [56]
  val?-           %64.0 = CastType           d     dn %56.5   <(int|real)$->
  (int|real|complex)- %64.1 = IDiv               wed   %64.0, 2L, elided   <(int|real)$->
  lgl$#-          %64.2 = IsType                   %56.3 isA val?-
  void                    Branch                   %64.2 -> BB68 (if true) | BB69 (if false)
BB65   <- [56]
  fs              %65.0 = FrameState         R     0x55bbee769ef0+262: [<blt min>, %56.1, %56.3, %56.5], env=e0.6
  void                    Deopt              !v    %65.0, Typecheck@0x55bbe20e5750[Type#19], %56.5   !
BB62   <- [60]
  val?            %62.0 = Force!             d     %60.9, 
  prom-           %62.1 = MkArg                    unboundValue, tfun[0x55bbe3bbb630]_p3, e0.6
  prom-           %62.2 = MkArg                    unboundValue, tfun[0x55bbe3bbb630]_p4, e0.6
  prom-           %62.3 = MkArg                    unboundValue, tfun[0x55bbe3bbb630]_p5, e0.6
  (cls|spec|blt)  %62.4 = ChkFunction        e     %62.0
  val?            %62.5 = StaticCall         !v    tfun[0x55bbe2c5b510](%62.1, %62.2, %62.3) from %62.4 e0.6   <int->
  lgl$#-          %62.6 = IsType                   %62.5 isA int-
  lgl$#-          %62.7 = IsType                   %60.6 isA int-
  void                    Branch                   %62.7 -> BB66 (if true) | BB67 (if false)
BB63   <- [60]
  fs              %63.0 = FrameState         R     0x55bbee769ef0+461: [<blt c>, %60.6, %60.8], env=e0.6
  void                    Deopt              !v    %63.0, CallTarget@0x55bbe20e5750[Call#5], %60.11   !
BB68   <- [64]
  val?-           %68.0 = CastType           d     dn %56.3   <(int|real)$->
  (int|real|complex)- %68.1 = Sub                wed   %68.0, %64.1, elided   <(int|real)$->
  (int|real|complex)$- %68.2 = CallSafeBuiltin    wed   min(%56.1, %68.1)    <(int|real)$->
  (int|real|complex)$- %68.3 = %68.2
  goto BB17
BB69   <- [64]
  fs              %69.0 = FrameState         R     0x55bbee769ef0+274: [<blt min>, %56.1, %56.3, %64.1], env=e0.6
  void                    Deopt              !v    %69.0, Typecheck@0x55bbe20e5750[Type#18], %56.3   !
BB66   <- [62]
  int-            %66.0 = CastType           d     dn %60.6
  lgl$#-          %66.1 = IsType                   %60.8 isA int$-
  void                    Branch                   %66.1 -> BB70 (if true) | BB71 (if false)
BB67   <- [62]
  void                    Nop                !     
  val?            %67.1 = %60.6
  dr              %67.2 = Typecheck@0x55bbe20e5750[Type#48]
  goto BB22
BB70   <- [66]
  int$-           %70.0 = CastType           d     dn %60.8
  void                    Branch                   %62.6 -> BB72 (if true) | BB73 (if false)
BB71   <- [66]
  void                    Nop                !     
  val?            %71.1 = %60.8
  dr              %71.2 = Typecheck@0x55bbe20e5750[Type#49]
  goto BB22
BB22   <- [67, 71, 73]
  val?^ | miss    %22.0 = Phi                      %67.1:BB67, %71.1:BB71, %73.1:BB73
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %67.2:BB67, %71.2:BB71, %73.2:BB73
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55bbee769ef0+508: [<blt c>, %60.6, %60.8, %62.5], env=e0.6
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB72   <- [70]
  int-            %72.0 = CastType           d     dn %62.5
  int-            %72.1 = CallSafeBuiltin    vwed  c(%66.0, %70.0, %72.0)    <int->
  int-            %72.2 = %72.1
  goto BB24
BB73   <- [70]
  void                    Nop                !     
  val?            %73.1 = %62.5
  dr              %73.2 = Typecheck@0x55bbe20e5750[Type#59]
  goto BB22
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nleft, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(int|real)$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    id, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <int$->
  val?            %0.3  = Mul                !v    2L, %0.2, e0.0   <int$->
  void                    Visible            v     
  val?            %0.5  = Add                !     %0.3, 1L, e0.0   <int$->
  void                    Return             l     %0.5
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    power, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <(int|real)$->
  void                    Visible            v     
  val?            %0.4  = IDiv               !     %0.2, 2, e0.0   <real$->
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <(int|real)$->
  val?^ | miss    %0.3  = LdVar              eR    nleft, e0.0
  val?            %0.4  = Force<value>       !v    %0.3, e0.0   <real$->
  val?            %0.5  = Add                !v    %0.4, 1L, e0.0   <real$->
  void                    Visible            v     
  val?            %0.7  = Sub                !     %0.2, %0.5, e0.0   <real$->
  void                    Return             l     %0.7
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    id, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <int$->
  val?            %0.3  = Mul                !v    2L, %0.2, e0.0   <int$->
  void                    Visible            v     
  val?            %0.5  = Add                !     %0.3, 2L, e0.0   <int$->
  void                    Return             l     %0.5
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    power, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <real$->
  void                    Visible            v     
  val?            %0.4  = IDiv               !     %0.2, 2, e0.0   <real$->
  void                    Return             l     %0.4

│ tfun[0x55bbe3bbb630]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
