
┌──────────────────────────────────────────────────────────────────────────────┐
│ rowSums[0x55bbe9328040]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
rowSums[0x55bbe9328040]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, na.rm(miss)=false, dims(miss)=1L, parent=R_BaseNamespace, context 1
  prom-           %0.2  = MkArg                    unboundValue, rowSums[0x55bbe9328040]_p2, e0.1
  ct              %0.3  = PushContext        lCL   %0.2, is.data.frame(x), function(x) <(rir::DispatchTable*)0x55bbe515a2|..., e0.1
  val?^           %0.4  = CastType                 up %0.2
  env             e0.5  = MkEnv              l     x=%0.4, parent=R_BaseNamespace, context 1
  prom-           %0.6  = MkArg                    unboundValue, rowSums[0x55bbe9328040]_p4, e0.5
  ct              %0.7  = PushContext        lCL   %0.6, "data.frame", inherits(x, "data.frame"), function(x, what, which=FALSE) <(rir::Dispatch|..., e0.5
  val?^           %0.8  = CastType                 up %0.6
  env             e0.9  = MkEnv              l     x=%0.8, what="data.frame", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %0.10 = Force!<lazy>       !vr   %0.8,    <val?>
  val?            %0.11 = CallBuiltin        !v    inherits(%0.10, "data.frame", false) e0.9
  val?            %0.12 = PopContext         C     %0.11, %0.7   <lgl$->
  lgl$#-          %0.13 = IsType                   %0.12 isA lgl$-
  void                    Branch                   %0.13 -> BB73 (if true) | BB74 (if false)
BB73   <- [0]
  lgl$-           %73.0 = CastType           d     dn %0.12
  val?            %73.1 = PopContext         C     %73.0, %0.3   <lgl$->
  lgl$#-          %73.2 = IsType                   %73.1 isA lgl$-
  void                    Branch                   %73.2 -> BB75 (if true) | BB76 (if false)
BB74   <- [0]
  fs              %74.0 = FrameState         R     0x55bbefea89c0+32: [], env=e0.1
  fs              %74.1 = FrameState         R     0x55bbe63ebc00+37: [%0.12], env=e0.5, next=%74.0
  void                    Deopt              !v    %74.1, Typecheck@0x55bbede44d28[Type#1], %0.12   !
BB75   <- [73]
  lgl$-           %75.0 = CastType           d     dn %73.1
  lgl$#-          %75.1 = CheckTrueFalse     e     %75.0
  void                    Branch                   %75.1 -> BB71 (if true) | BB5 (if false)
BB76   <- [73]
  void                    Nop                !     
  val?            %76.1 = %73.1
  dr              %76.2 = Typecheck@0x55bbeff769e0[Type#1]
  goto BB3
BB71   <- [75]
  (cls|spec|blt)  %71.0 = LdFun              !v    as.matrix, e0.1
  fs              %71.1 = FrameState         R     0x55bbefea89c0+53: [%71.0], env=e0.1
  void                    Deopt              !v    %71.1, DeadCall@0x55bbeff769e0[Call#1], %71.0   !
BB5   <- [75]
  val?^ | miss    %5.0  = LdVar              eR    is.array, e0.1
  lgl$#-          %5.1  = Identical                <blt is.array>, %5.0   <true>
  void                    Branch                   %5.1 -> BB77 (if true) | BB78 (if false)
BB3   <- [76, 78]
  val?^ | miss    %3.0  = Phi                      %76.1:BB76, %78.1:BB78
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %76.2:BB76, %78.2:BB78
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55bbefea89c0+32: [%73.1], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB77   <- [5]
  val?^ | miss    %77.0 = LdVar              eR    x, e0.1
  val?            %77.1 = Force!<wrapped>    !v    %77.0, e0.1   <(lgl|real)+>
  lgl$#-          %77.2 = IsType                   %77.1 isA val?+
  void                    Branch                   %77.2 -> BB79 (if true) | BB80 (if false)
BB78   <- [5]
  void                    Nop                !     
  lgl$#-          %78.1 = %5.1
  dr              %78.2 = DeadBranchReached@0x55bbeff769e0[Test#0]
  goto BB3
BB79   <- [77]
  val?+           %79.0 = CastType           d     dn %77.1   <(lgl|real)+>
  lgl$#-          %79.1 = CallSafeBuiltin    wed   is.array(%79.0)    <lgl$->
  lgl$#-          %79.2 = Not                d     %79.1, elided
  void                    Branch                   %79.1 -> BB66 (if true) | BB10 (if false)
BB80   <- [77]
  fs              %80.0 = FrameState         R     0x55bbefea89c0+163: [<blt is.array>, %77.1], env=e0.1
  void                    Deopt              !v    %80.0, Typecheck@0x55bbeff769e0[Type#5], %77.1   !
BB66   <- [79]
  val?^ | miss    %66.0 = LdVar              eR    length, e0.1
  lgl$#-          %66.1 = Identical                <blt length>, %66.0   <true>
  void                    Branch                   %66.1 -> BB81 (if true) | BB82 (if false)
BB10   <- [79]
  void                    Nop                !     
  lgl$#-          %10.1 = %79.2
  goto BB11
BB81   <- [66]
  val?^ | miss    %81.0 = LdVar              eR    dim, e0.1
  lgl$#-          %81.1 = Identical                <blt dim>, %81.0   <true>
  void                    Branch                   %81.1 -> BB83 (if true) | BB84 (if false)
BB82   <- [66]
  void                    Nop                !     
  lgl$#-          %82.1 = %66.1
  dr              %82.2 = DeadBranchReached@0x55bbeff769e0[Test#1]
  goto BB8
BB11   <- [10, 89]
  lgl$-           %11.0 = Phi                      %89.4:BB89, %10.1:BB10
  lgl$-           %11.1 = %11.0
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB65 (if true) | BB12 (if false)
BB83   <- [81]
  val?^ | miss    %83.0 = LdVar              eR    x, e0.1
  val?            %83.1 = Force!<wrapped>    !v    %83.0, e0.1   <(lgl|real)+>
  lgl$#-          %83.2 = IsType                   %83.1 isA val?+
  void                    Branch                   %83.2 -> BB85 (if true) | BB86 (if false)
BB84   <- [81]
  void                    Nop                !     
  lgl$#-          %84.1 = %81.1
  dr              %84.2 = DeadBranchReached@0x55bbeff769e0[Test#2]
  goto BB8
BB8   <- [82, 84]
  val?^ | miss    %8.0  = Phi                      %82.1:BB82, %84.1:BB84
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %82.2:BB82, %84.2:BB84
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55bbefea89c0+185: [%79.1], env=e0.1
  void                    Deopt              !v    %8.4, %8.3, %8.1   !
BB65   <- [11]
  (cls|spec|blt)  %65.0 = LdFun              !v    stop, e0.1
  fs              %65.1 = FrameState         R     0x55bbefea89c0+417: [%65.0], env=e0.1
  void                    Deopt              !v    %65.1, DeadCall@0x55bbeff769e0[Call#6], %65.0   !
BB12   <- [11]
  val?^ | miss    %12.0 = LdVar              eR    dims, e0.1
  val?            %12.1 = Force!<lazy>       !v    %12.0, e0.1   <int$->
  lgl$#-          %12.2 = IsType                   %12.1 isA int$-
  void                    Branch                   %12.2 -> BB87 (if true) | BB88 (if false)
BB85   <- [83]
  val?+           %85.0 = CastType           d     dn %83.1   <(lgl|real)+>
  val+            %85.1 = CallSafeBuiltin    wed   dim(%85.0)    <int->
  void                    StVar              lW    dn, %85.1, e0.1
  (int|real)$-    %85.3 = CallSafeBuiltin    wed   length(%85.1)    <int$->
  lgl$#-          %85.4 = IsType                   %85.3 isA int$-
  void                    Branch                   %85.4 -> BB89 (if true) | BB90 (if false)
BB86   <- [83]
  fs              %86.0 = FrameState         R     0x55bbefea89c0+327: [%79.2, <blt length>, <blt dim>, %83.1], env=e0.1
  void                    Deopt              !v    %86.0, Typecheck@0x55bbeff769e0[Type#10], %83.1   !
BB87   <- [12]
  int$-           %87.0 = CastType           d     dn %12.1
  lgl$-           %87.1 = Lt                 d     %87.0, 1L, elided   <lgl$->
  lgl$-           %87.2 = AsLogical                %87.1
  lgl$#-          %87.3 = Identical                %87.2, true
  void                    Branch                   %87.3 -> BB64 (if true) | BB15 (if false)
BB88   <- [12]
  fs              %88.0 = FrameState         R     0x55bbefea89c0+454: [%12.1], env=e0.1
  void                    Deopt              !v    %88.0, Typecheck@0x55bbeff769e0[Type#14], %12.1   !
BB89   <- [85]
  int$-           %89.0 = CastType           d     dn %85.3
  lgl$-           %89.1 = Lt                 d     %89.0, 2L, elided   <lgl$->
  lgl$-           %89.2 = AsLogical                %89.1
  lgl$-           %89.3 = LOr                      %79.2, %89.2
  lgl$-           %89.4 = %89.3
  goto BB11
BB90   <- [85]
  fs              %90.0 = FrameState         R     0x55bbefea89c0+382: [%79.2, %85.3], env=e0.1
  void                    Deopt              !v    %90.0, Typecheck@0x55bbeff769e0[Type#12], %85.3   !
BB64   <- [87]
  void                    Nop                !     
  lgl$-           %64.1 = %87.2
  goto BB20
BB15   <- [87]
  val?^ | miss    %15.0 = LdVar              eR    dims, e0.1
  val?            %15.1 = Force!<wrapped>    !v    %15.0, e0.1   <int$->
  val?^ | miss    %15.2 = LdVar              eR    length, e0.1
  lgl$#-          %15.3 = Identical                <blt length>, %15.2   <true>
  void                    Branch                   %15.3 -> BB91 (if true) | BB92 (if false)
BB20   <- [64, 99]
  lgl$-           %20.0 = Phi                      %99.4:BB99, %64.1:BB64
  lgl$-           %20.1 = %20.0
  lgl$#-          %20.2 = CheckTrueFalse     e     %20.1
  void                    Branch                   %20.2 -> BB63 (if true) | BB23 (if false)
BB91   <- [15]
  val?^ | miss    %91.0 = LdVar              eR    dn, e0.1
  lgl$#-          %91.1 = IsType                   %91.0 isA int-
  void                    Branch                   %91.1 -> BB93 (if true) | BB94 (if false)
BB92   <- [15]
  void                    Nop                !     
  lgl$#-          %92.1 = %15.3
  dr              %92.2 = DeadBranchReached@0x55bbeff769e0[Test#3]
  goto BB16
BB63   <- [20]
  (cls|spec|blt)  %63.0 = LdFun              !v    stop, e0.1
  fs              %63.1 = FrameState         R     0x55bbefea89c0+624: [%63.0], env=e0.1
  void                    Deopt              !v    %63.1, DeadCall@0x55bbeff769e0[Call#8], %63.0   !
BB23   <- [20]
  val?^ | miss    %23.0 = LdVar              eR    prod, e0.1
  lgl$#-          %23.1 = Identical                <blt prod>, %23.0   <true>
  void                    Branch                   %23.1 -> BB95 (if true) | BB96 (if false)
BB93   <- [91]
  int-            %93.0 = CastType           d     dn %91.0
  (int|real)$-    %93.1 = CallSafeBuiltin    wed   length(%93.0)    <int$->
  lgl$#-          %93.2 = IsType                   %93.1 isA int$-
  void                    Branch                   %93.2 -> BB97 (if true) | BB98 (if false)
BB94   <- [91]
  void                    Nop                !     
  val?^ | miss    %94.1 = %91.0
  dr              %94.2 = Typecheck@0x55bbeff769e0[Type#18]
  goto BB16
BB16   <- [92, 94]
  val?^ | miss    %16.0 = Phi                      %92.1:BB92, %94.1:BB94
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %92.2:BB92, %94.2:BB94
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55bbefea89c0+487: [%87.2, %15.1], env=e0.1
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB95   <- [23]
  val?^ | miss    %95.0 = LdVar              eR    dn, e0.1
  lgl$#-          %95.1 = IsType                   %95.0 isA int-
  void                    Branch                   %95.1 -> BB101 (if true) | BB102 (if false)
BB96   <- [23]
  void                    Nop                !     
  lgl$#-          %96.1 = %23.1
  dr              %96.2 = DeadBranchReached@0x55bbeff769e0[Test#4]
  goto BB21
BB97   <- [93]
  int$-           %97.0 = CastType           d     dn %93.1
  int$-           %97.1 = Sub                d     %97.0, 1L, elided   <int$->
  lgl$#-          %97.2 = IsType                   %15.1 isA int$-
  void                    Branch                   %97.2 -> BB99 (if true) | BB100 (if false)
BB98   <- [93]
  void                    Nop                !     
  (int|real)$-    %98.1 = %93.1
  dr              %98.2 = Typecheck@0x55bbeff769e0[Type#19]
  goto BB18
BB101   <- [95]
  int-            %101.0 = CastType           d     dn %95.0
  val?^ | miss    %101.1 = LdVar              eR    seq_len, e0.1
  lgl$#-          %101.2 = Identical                <blt seq_len>, %101.1   <true>
  void                    Branch                   %101.2 -> BB103 (if true) | BB104 (if false)
BB102   <- [95]
  void                    Nop                !     
  val?^ | miss    %102.1 = %95.0
  dr              %102.2 = Typecheck@0x55bbeff769e0[Type#28]
  goto BB21
BB21   <- [96, 102, 104]
  val?^ | miss    %21.0 = Phi                      %96.1:BB96, %102.1:BB102, %104.1:BB104
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %96.2:BB96, %102.2:BB102, %104.2:BB104
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55bbefea89c0+608: [%20.1], env=e0.1
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB99   <- [97]
  int$-           %99.0 = CastType           d     dn %15.1
  lgl$-           %99.1 = Gt                 d     %99.0, %97.1, elided   <lgl$->
  lgl$-           %99.2 = AsLogical                %99.1
  lgl$-           %99.3 = LOr                      %87.2, %99.2
  lgl$-           %99.4 = %99.3
  goto BB20
BB100   <- [97]
  void                    Nop                !     
  val?            %100.1 = %15.1
  dr              %100.2 = Typecheck@0x55bbeff769e0[Type#16]
  goto BB18
BB18   <- [98, 100]
  val?^ | miss    %18.0 = Phi                      %98.1:BB98, %100.1:BB100
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %98.2:BB98, %100.2:BB100
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55bbefea89c0+583: [%87.2, %15.1, %93.1], env=e0.1
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB103   <- [101]
  val?^ | miss    %103.0 = LdVar              eR    dims, e0.1
  val?            %103.1 = Force!<wrapped>    !v    %103.0, e0.1   <int$->
  val+            %103.2 = CallSafeBuiltin    wed   seq_len(%103.1)    <int$->
  lgl$#-          %103.3 = IsType                   %103.2 isA int$-
  void                    Branch                   %103.3 -> BB105 (if true) | BB106 (if false)
BB104   <- [101]
  void                    Nop                !     
  lgl$#-          %104.1 = %101.2
  dr              %104.2 = DeadBranchReached@0x55bbeff769e0[Test#7]
  goto BB21
BB105   <- [103]
  int$-           %105.0 = CastType           d     dn %103.2
  void                    StVar              lW    id, %105.0, e0.1
  int$-           %105.2 = Minus              d     %105.0, elided
  int-            %105.3 = Extract1_1D        wed   %101.0, %105.2, elided   <int$->
  lgl$#-          %105.4 = IsType                   %105.3 isA int$-
  void                    Branch                   %105.4 -> BB107 (if true) | BB108 (if false)
BB106   <- [103]
  fs              %106.0 = FrameState         R     0x55bbefea89c0+848: [<blt prod>, %101.0, %103.2], env=e0.1
  void                    Deopt              !v    %106.0, Typecheck@0x55bbeff769e0[Type#33], %103.2   !
BB107   <- [105]
  int$-           %107.0 = CastType           d     dn %105.3
  real$-          %107.1 = CallSafeBuiltin    wed   prod(%107.0)    <real$->
  void                    StVar              lW    p, %107.1, e0.1
  val?^ | miss    %107.3 = LdVar              eR    dn, e0.1
  lgl$#-          %107.4 = IsType                   %107.3 isA int-
  void                    Branch                   %107.4 -> BB109 (if true) | BB110 (if false)
BB108   <- [105]
  fs              %108.0 = FrameState         R     0x55bbefea89c0+867: [<blt prod>, %105.3], env=e0.1
  void                    Deopt              !v    %108.0, Typecheck@0x55bbeff769e0[Type#34], %105.3   !
BB109   <- [107]
  int-            %109.0 = CastType           d     dn %107.3
  int-            %109.1 = Extract1_1D        wed   %109.0, %105.0, elided   <int$->
  lgl$#-          %109.2 = IsType                   %109.1 isA int$-
  void                    Branch                   %109.2 -> BB111 (if true) | BB112 (if false)
BB110   <- [107]
  fs              %110.0 = FrameState         R     0x55bbefea89c0+904: [], env=e0.1
  void                    Deopt              !v    %110.0, Typecheck@0x55bbeff769e0[Type#36], %107.3   !
BB111   <- [109]
  int$-           %111.0 = CastType           d     dn %109.1
  void                    StVar              lW    dn, %111.0, e0.1
  val?^ | miss    %111.2 = LdVar              eR    is.complex, e0.1
  lgl$#-          %111.3 = Identical                <blt is.complex>, %111.2   <true>
  void                    Branch                   %111.3 -> BB113 (if true) | BB114 (if false)
BB112   <- [109]
  fs              %112.0 = FrameState         R     0x55bbefea89c0+964: [%109.1], env=e0.1
  void                    Deopt              !v    %112.0, Typecheck@0x55bbeff769e0[Type#39], %109.1   !
BB113   <- [111]
  val?^ | miss    %113.0 = LdVar              eR    x, e0.1
  val?            %113.1 = Force!<wrapped>    !v    %113.0, e0.1   <(lgl|real)+>
  lgl$#-          %113.2 = CallSafeBuiltin    wed   is.complex(%113.1)    <lgl$->
  void                    Branch                   %113.2 -> BB46 (if true) | BB34 (if false)
BB114   <- [111]
  fs              %114.0 = FrameState         R     0x55bbefea89c0+979: [], env=e0.1
  void                    Deopt              !v    %114.0, DeadBranchReached@0x55bbeff769e0[Test#9], %111.3   !
BB46   <- [113]
  val?^ | miss    %46.0 = LdVar              eR    Re, e0.1
  lgl$#-          %46.1 = Identical                <blt Re>, %46.0   <@?>
  void                    Branch                   %46.1 -> BB48 (if true) | BB47 (if false)
BB34   <- [113]
  val?^ | miss    %34.0 = LdVar              eR    x, e0.1
  val?            %34.1 = Force!<wrapped>    !v    %34.0, e0.1   <(lgl|real)+>
  val?^ | miss    %34.2 = LdVar              eR    prod, e0.1
  lgl$#-          %34.3 = Identical                <blt prod>, %34.2   <true>
  void                    Branch                   %34.3 -> BB115 (if true) | BB116 (if false)
BB48   <- [46]
  val?^ | miss    %48.0 = LdVar              eR    x, e0.1
  val?            %48.1 = Force!             !v    %48.0, e0.1   <val?_>
  lgl$#-          %48.2 = IsType                   %48.1 isA val?+
  void                    Branch                   %48.2 -> BB119 (if true) | BB120 (if false)
BB47   <- [46]
  (cls|spec|blt)  %47.0 = LdFun              !v    Re, e0.1
  fs              %47.1 = FrameState         R     0x55bbefea89c0+1265: [%47.0], env=e0.1
  void                    Deopt              !v    %47.1, DeadCall@0x55bbeff769e0[Call#16], %47.0   !
BB115   <- [34]
  val?^ | miss    %115.0 = LdVar              eR    dn, e0.1
  lgl$#-          %115.1 = IsType                   %115.0 isA int$-
  void                    Branch                   %115.1 -> BB117 (if true) | BB118 (if false)
BB116   <- [34]
  void                    Nop                !     
  lgl$#-          %116.1 = %34.3
  dr              %116.2 = DeadBranchReached@0x55bbeff769e0[Test#10]
  goto BB35
BB119   <- [48]
  val?+           %119.0 = CastType           d     dn %48.1   <val?_>
  val+            %119.1 = CallSafeBuiltin    wed   Re(%119.0)    <val?_>
  val?^ | miss    %119.2 = LdVar              eR    prod, e0.1
  lgl$#-          %119.3 = Identical                <blt prod>, %119.2   <@?>
  void                    Branch                   %119.3 -> BB52 (if true) | BB51 (if false)
BB120   <- [48]
  fs              %120.0 = FrameState         R     0x55bbefea89c0+1306: [<blt Re>, %48.1], env=e0.1
  void                    Deopt              !v    %120.0, Typecheck@0x55bbeff769e0[Type#50], %48.1   !
BB117   <- [115]
  int$-           %117.0 = CastType           d     dn %115.0
  real$-          %117.1 = CallSafeBuiltin    wed   prod(%117.0)    <real$->
  val?^ | miss    %117.2 = LdVar              eR    p, e0.1
  lgl$#-          %117.3 = IsType                   %117.2 isA real$-
  void                    Branch                   %117.3 -> BB123 (if true) | BB124 (if false)
BB118   <- [115]
  void                    Nop                !     
  val?^ | miss    %118.1 = %115.0
  dr              %118.2 = Typecheck@0x55bbeff769e0[Type#45]
  goto BB35
BB35   <- [116, 118]
  val?^ | miss    %35.0 = Phi                      %116.1:BB116, %118.1:BB118
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %116.2:BB116, %118.2:BB118
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x55bbefea89c0+1090: [%34.1], env=e0.1
  void                    Deopt              !v    %35.4, %35.3, %35.1   !
BB52   <- [119]
  val?^ | miss    %52.0 = LdVar              eR    dn, e0.1
  val?            %52.1 = Force!             !v    %52.0, e0.1   <val?_>
  lgl$#-          %52.2 = IsType                   %52.1 isA val?+
  void                    Branch                   %52.2 -> BB121 (if true) | BB122 (if false)
BB51   <- [119]
  (cls|spec|blt)  %51.0 = LdFun              !v    prod, e0.1
  fs              %51.1 = FrameState         R     0x55bbefea89c0+1361: [%119.1, %51.0], env=e0.1
  void                    Deopt              !v    %51.1, DeadCall@0x55bbeff769e0[Call#17], %51.0   !
BB123   <- [117]
  real$-          %123.0 = CastType           d     dn %117.2
  val?^ | miss    %123.1 = LdVar              eR    na.rm, e0.1
  val?            %123.2 = Force!<lazy>       !v    %123.1, e0.1   <lgl$->
  val?            %123.3 = CallBuiltin        !v    rowSums(%34.1, %117.1, %123.0, %123.2) e0.1
  val?            %123.4 = %123.3
  goto BB39
BB124   <- [117]
  fs              %124.0 = FrameState         R     0x55bbefea89c0+1186: [%34.1, %117.1], env=e0.1
  void                    Deopt              !v    %124.0, Typecheck@0x55bbeff769e0[Type#47], %117.2   !
BB121   <- [52]
  val?+           %121.0 = CastType           d     dn %52.1   <val?_>
  (real|complex)$- %121.1 = CallSafeBuiltin    wed   prod(%121.0)    <val?_>
  val?^ | miss    %121.2 = LdVar              eR    p, e0.1
  val?            %121.3 = Force!             !v    %121.2, e0.1   <val?_>
  val?^ | miss    %121.4 = LdVar              eR    na.rm, e0.1
  val?            %121.5 = Force!             !v    %121.4, e0.1   <val?_>
  val?            %121.6 = CallBuiltin        !v    rowSums(%119.1, %121.1, %121.3, %121.5) e0.1
  val?^ | miss    %121.7 = LdVar              eR    Im, e0.1
  lgl$#-          %121.8 = Identical                <blt Im>, %121.7   <@?>
  void                    Branch                   %121.8 -> BB56 (if true) | BB55 (if false)
BB122   <- [52]
  fs              %122.0 = FrameState         R     0x55bbefea89c0+1402: [%119.1, <blt prod>, %52.1], env=e0.1
  void                    Deopt              !v    %122.0, Typecheck@0x55bbeff769e0[Type#53], %52.1   !
BB39   <- [123, 137]
  val?            %39.0 = Phi                      %123.4:BB123, %137.9:BB137
  val?            %39.1 = %39.0
  void                    StVar              lW    z, %39.1, e0.1
  val?^ | miss    %39.3 = LdVar              eR    length, e0.1
  lgl$#-          %39.4 = Identical                <blt length>, %39.3   <true>
  void                    Branch                   %39.4 -> BB125 (if true) | BB126 (if false)
BB56   <- [121]
  val?^ | miss    %56.0 = LdVar              eR    x, e0.1
  val?            %56.1 = Force!             !v    %56.0, e0.1   <val?_>
  lgl$#-          %56.2 = IsType                   %56.1 isA val?+
  void                    Branch                   %56.2 -> BB131 (if true) | BB132 (if false)
BB55   <- [121]
  (cls|spec|blt)  %55.0 = LdFun              !v    Im, e0.1
  fs              %55.1 = FrameState         R     0x55bbefea89c0+1504: [%121.6, , %55.0], env=e0.1
  void                    Deopt              !v    %55.1, DeadCall@0x55bbeff769e0[Call#18], %55.0   !
BB125   <- [39]
  val?^ | miss    %125.0 = LdVar              eR    dn, e0.1
  lgl$#-          %125.1 = IsType                   %125.0 isA int$-
  void                    Branch                   %125.1 -> BB127 (if true) | BB128 (if false)
BB126   <- [39]
  void                    Nop                !     
  lgl$#-          %126.1 = %39.4
  dr              %126.2 = DeadBranchReached@0x55bbeff769e0[Test#15]
  goto BB40
BB131   <- [56]
  val?+           %131.0 = CastType           d     dn %56.1   <val?_>
  val+            %131.1 = CallSafeBuiltin    wed   Im(%131.0)    <val?_>
  val?^ | miss    %131.2 = LdVar              eR    prod, e0.1
  lgl$#-          %131.3 = Identical                <blt prod>, %131.2   <@?>
  void                    Branch                   %131.3 -> BB60 (if true) | BB59 (if false)
BB132   <- [56]
  fs              %132.0 = FrameState         R     0x55bbefea89c0+1545: [%121.6, , <blt Im>, %56.1], env=e0.1
  void                    Deopt              !v    %132.0, Typecheck@0x55bbeff769e0[Type#58], %56.1   !
BB127   <- [125]
  val?^ | miss    %127.0 = LdVar              eR    dimnames, e0.1
  lgl$#-          %127.1 = Identical                <blt dimnames>, %127.0   <true>
  void                    Branch                   %127.1 -> BB129 (if true) | BB130 (if false)
BB128   <- [125]
  void                    Nop                !     
  val?^ | miss    %128.1 = %125.0
  dr              %128.2 = Typecheck@0x55bbeff769e0[Type#68]
  goto BB40
BB40   <- [126, 128, 130]
  val?^ | miss    %40.0 = Phi                      %126.1:BB126, %128.1:BB128, %130.1:BB130
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %126.2:BB126, %128.2:BB128, %130.2:BB130
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x55bbefea89c0+1730: [], env=e0.1
  void                    Deopt              !v    %40.4, %40.3, %40.1   !
BB60   <- [131]
  val?^ | miss    %60.0 = LdVar              eR    dn, e0.1
  val?            %60.1 = Force!             !v    %60.0, e0.1   <val?_>
  lgl$#-          %60.2 = IsType                   %60.1 isA val?+
  void                    Branch                   %60.2 -> BB137 (if true) | BB138 (if false)
BB59   <- [131]
  (cls|spec|blt)  %59.0 = LdFun              !v    prod, e0.1
  fs              %59.1 = FrameState         R     0x55bbefea89c0+1600: [%121.6, , %131.1, %59.0], env=e0.1
  void                    Deopt              !v    %59.1, DeadCall@0x55bbeff769e0[Call#19], %59.0   !
BB129   <- [127]
  val?^ | miss    %129.0 = LdVar              eR    x, e0.1
  val?            %129.1 = Force!<wrapped>    !v    %129.0, e0.1   <(lgl|real)+>
  val?            %129.2 = CallBuiltin        !v    dimnames(%129.1) e0.1   <vec->
  lgl$#-          %129.3 = IsType                   %129.2 isA val+   <true>
  lgl$#-          %129.4 = IsType                   %129.2 isA val?-
  void                    Branch                   %129.3 -> BB133 (if true) | BB134 (if false)
BB130   <- [127]
  void                    Nop                !     
  lgl$#-          %130.1 = %127.1
  dr              %130.2 = DeadBranchReached@0x55bbeff769e0[Test#16]
  goto BB40
BB137   <- [60]
  val?+           %137.0 = CastType           d     dn %60.1   <val?_>
  (real|complex)$- %137.1 = CallSafeBuiltin    wed   prod(%137.0)    <val?_>
  val?^ | miss    %137.2 = LdVar              eR    p, e0.1
  val?            %137.3 = Force!             !v    %137.2, e0.1   <val?_>
  val?^ | miss    %137.4 = LdVar              eR    na.rm, e0.1
  val?            %137.5 = Force!             !v    %137.4, e0.1   <val?_>
  val?            %137.6 = CallBuiltin        !v    rowSums(%131.1, %137.1, %137.3, %137.5) e0.1
  val?            %137.7 = Mul                !v    , %137.6, e0.1   <val?_>
  val?            %137.8 = Add                !v    %121.6, %137.7, e0.1   <val?_>
  val?            %137.9 = %137.8
  goto BB39
BB138   <- [60]
  fs              %138.0 = FrameState         R     0x55bbefea89c0+1641: [%121.6, , %131.1, <blt prod>, %60.1], env=e0.1
  void                    Deopt              !v    %138.0, Typecheck@0x55bbeff769e0[Type#61], %60.1   !
BB133   <- [129]
  void                    Branch                   %129.4 -> BB135 (if true) | BB136 (if false)
BB134   <- [129]
  void                    Nop                !     
  lgl$#-          %134.1 = %129.3
  dr              %134.2 = DeadBranchReached@0x55bbeff769e0[Test#17]
  goto BB42
BB135   <- [133]
  val?-           %135.0 = CastType           d     dn %129.2   <vec->
  val?            %135.1 = Extract2_1D        wed   %135.0, 1L, elided   <(nil|str)->
  (cls|spec|blt)  %135.2 = LdFun              !v    names<-, <0x55bbe1e20438>, e0.1
  val?^ | miss    %135.3 = LdVar              eR    z, e0.1
  lgl$#-          %135.4 = IsType                   %135.3 isA real-
  void                    Branch                   %135.4 -> BB139 (if true) | BB140 (if false)
BB136   <- [133]
  void                    Nop                !     
  val?            %136.1 = %129.2
  dr              %136.2 = Typecheck@0x55bbeff769e0[Type#73]
  goto BB42
BB42   <- [134, 136]
  val?^ | miss    %42.0 = Phi                      %134.1:BB134, %136.1:BB136
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %134.2:BB134, %136.2:BB136
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55bbefea89c0+1935: [%129.2], env=e0.1
  void                    Deopt              !v    %42.4, %42.3, %42.1   !
BB139   <- [135]
  real-           %139.0 = CastType           d     dn %135.3
  val?            %139.1 = NamedCall          !v    %135.2(%139.0, value=%135.1) e0.1   <real+>
  void                    StVar              lW    z, %139.1, e0.1
  val             %139.3 = ChkMissing         e     %139.1
  void                    Visible            v     
  void                    Return             l     %139.1
BB140   <- [135]
  fs              %140.0 = FrameState         R     0x55bbefea89c0+1984: [%135.1], env=e0.1
  void                    Deopt              !v    %140.0, Typecheck@0x55bbeff769e0[Type#75], %135.3   !
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(lgl|real)+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3

│ rowSums[0x55bbe9328040]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
