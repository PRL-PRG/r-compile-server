
┌──────────────────────────────────────────────────────────────────────────────┐
│ coxph.wtest[0x55bbf005f430]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1                       │
│ Properties:                                                                  │
├────── Final PIR Version
coxph.wtest[0x55bbf005f430]
BB0
  val?^           %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    is.matrix, <env 0x55bbe479cb88>
  lgl$#-          %0.4  = Identical                <blt is.matrix>, %0.3   <true>
  void                    Branch                   %0.4 -> BB112 (if true) | BB113 (if false)
BB112   <- [0]
  env             e112.0 = MkEnv              l     var=%0.2, b=%0.1, toler.chol=%0.0, parent=<env 0x55bbe479cb88>, context 1
  val+            %112.1 = Force!<lazy>       !vr   %0.1,    <real+>
  lgl$#-          %112.2 = IsType                   %112.1 isA real+
  void                    Branch                   %112.2 -> BB114 (if true) | BB115 (if false)
BB113   <- [0]
  env             e113.0 = (MkEnv)            l     var=%0.2, b=%0.1, toler.chol=%0.0, parent=<env 0x55bbe479cb88>, context 1
  fs              %113.1 = FrameState         R     0x55bbef3b97c0+0: [], env=e113.0
  void                    Deopt              !v    %113.1, DeadBranchReached@0x55bbef63a870[Test#0], %0.4
BB114   <- [112]
  real+           %114.0 = CastType           d     dn %112.1
  lgl$#-          %114.1 = CallSafeBuiltin    wed   is.matrix(%114.0)    <lgl$->
  void                    Branch                   %114.1 -> BB100 (if true) | BB7 (if false)
BB115   <- [112]
  fs              %115.0 = FrameState         R     0x55bbef3b97c0+69: [<blt is.matrix>, %112.1], env=e112.0
  void                    Deopt              !v    %115.0, Typecheck@0x55bbef63a870[Type#1], %112.1
BB100   <- [114]
  val?^ | miss    %100.0 = LdVar              eR    nrow, <env 0x55bbe479cb88>
  lgl$#-          %100.1 = Identical                %100.0, function(x) <(rir::DispatchTable*)0x55bbe4286c|...
  void                    Branch                   %100.1 -> BB116 (if true) | BB117 (if false)
BB7   <- [114]
  val?^ | miss    %7.0  = LdVar              eR    length, <env 0x55bbe479cb88>
  lgl$#-          %7.1  = Identical                <blt length>, %7.0   <true>
  void                    Branch                   %7.1 -> BB118 (if true) | BB119 (if false)
BB116   <- [100]
  prom-           %116.0 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p19 (!refl), e112.0
  ct              %116.1 = PushContext        lCL   %116.0, nrow(b), function(x) <(rir::DispatchTable*)0x55bbe4286c|..., e112.0
  val?^           %116.2 = CastType                 up %116.0
  env             e116.3 = MkEnv              l     x=%116.2, parent=R_BaseNamespace, context 1
  val?            %116.4 = Force!<lazy>       !vr   %116.2,    <val?>
  val?            %116.5 = CallBuiltin        !v    dim(%116.4) e116.3   <(nil|int)->
  lgl$#-          %116.6 = IsType                   %116.5 isA val+   <true>
  lgl$#-          %116.7 = IsType                   %116.5 isA val?-
  void                    Branch                   %116.6 -> BB120 (if true) | BB121 (if false)
BB117   <- [100]
  void                    Nop                !     
  val?^ | miss    %117.1 = %100.0
  dr              %117.2 = CallTarget@0x55bbef63a870[Call#2]
  goto BB5
BB118   <- [7]
  lgl$#-          %118.0 = IsType                   %0.1 isA real~+
  void                    Branch                   %118.0 -> BB124 (if true) | BB125 (if false)
BB119   <- [7]
  void                    Nop                !     
  lgl$#-          %119.1 = %7.1
  dr              %119.2 = DeadBranchReached@0x55bbef63a870[Test#1]
  goto BB5
BB120   <- [116]
  void                    Branch                   %116.7 -> BB122 (if true) | BB123 (if false)
BB121   <- [116]
  void                    Nop                !     
  lgl$#-          %121.1 = %116.6
  dr              %121.2 = DeadBranchReached@0x55bbe3077408[Test#1]
  goto BB101
BB5   <- [117, 119, 125]
  val?^ | miss    %5.0  = Phi                      %117.1:BB117, %119.1:BB119, %125.1:BB125
  val?^ | miss    %5.1  = %5.0
  dr              %5.2  = Phi                      %117.2:BB117, %119.2:BB119, %125.2:BB125
  dr              %5.3  = %5.2
  fs              %5.4  = FrameState         R     0x55bbef3b97c0+91: [%114.1], env=e112.0
  void                    Deopt              !v    %5.4, %5.3, %5.1
BB124   <- [118]
  (int|real)$-    %124.0 = CallSafeBuiltin    wed   length(%114.0)    <int$->
  lgl$#-          %124.1 = IsType                   %124.0 isA int$-
  void                    Branch                   %124.1 -> BB126 (if true) | BB127 (if false)
BB125   <- [118]
  void                    Nop                !     
  val?^           %125.1 = %0.1
  dr              %125.2 = Typecheck@0x55bbef63a870[Type#4]
  goto BB5
BB122   <- [120]
  val?-           %122.0 = CastType           d     dn %116.5   <(nil|int)->
  val?            %122.1 = Extract1_1D        wed   %122.0, 1L, elided   <(nil|int)->
  val?            %122.2 = PopContext         C     %122.1, %116.1   <int$->
  lgl$#-          %122.3 = IsType                   %122.2 isA int$-
  void                    Branch                   %122.3 -> BB128 (if true) | BB129 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?            %123.1 = %116.5
  dr              %123.2 = Typecheck@0x55bbe3077408[Type#2]
  goto BB101
BB101   <- [121, 123]
  val?^ | miss    %101.0 = Phi                      %121.1:BB121, %123.1:BB123
  val?^ | miss    %101.1 = %101.0
  dr              %101.2 = Phi                      %121.2:BB121, %123.2:BB123
  dr              %101.3 = %101.2
  fs              %101.4 = FrameState         R     0x55bbef3b97c0+259: [], env=e112.0
  fs              %101.5 = FrameState         R     0x55bbe43efa70+91: [%116.5], env=e116.3, next=%101.4
  void                    Deopt              !v    %101.5, %101.3, %101.1   !
BB126   <- [124]
  int$-           %126.0 = CastType           d     dn %124.0
  void                    StVar              lW    nvar, %126.0, e112.0
  void                    StVar              lW    ntest, 1, e112.0
  goto BB10
BB127   <- [124]
  fs              %127.0 = FrameState         R     0x55bbef3b97c0+193: [%124.0], env=e112.0
  void                    Deopt              !v    %127.0, Typecheck@0x55bbef63a870[Type#5], %124.0
BB128   <- [122]
  int$-           %128.0 = CastType           d     dn %122.2
  void                    StVar              lW    nvar, %128.0, e112.0
  val?^ | miss    %128.2 = LdVar              eR    ncol, e112.0
  lgl$#-          %128.3 = Identical                %128.2, function(x) <(rir::DispatchTable*)0x55bbe42ddf|...
  void                    Branch                   %128.3 -> BB134 (if true) | BB135 (if false)
BB129   <- [122]
  fs              %129.0 = FrameState         R     0x55bbef3b97c0+259: [%122.2], env=e112.0
  void                    Deopt              !v    %129.0, Typecheck@0x55bbef63a870[Type#7], %122.2   !
BB10   <- [126, 150]
  val?^ | miss    %10.0 = LdVar              eR    length, e112.0
  lgl$#-          %10.1 = Identical                <blt length>, %10.0   <true>
  void                    Branch                   %10.1 -> BB130 (if true) | BB131 (if false)
BB134   <- [128]
  prom-           %134.0 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p20, e112.0
  ct              %134.1 = PushContext        lCL   %134.0, ncol(b), function(x) <(rir::DispatchTable*)0x55bbe42ddf|..., e112.0
  val?^           %134.2 = CastType                 up %134.0
  env             e134.3 = MkEnv              l     x=%134.2, parent=R_BaseNamespace, context 1
  val?            %134.4 = Force!<lazy>       !vL   %134.2, e134.3   <val?>
  val?            %134.5 = CallBuiltin        !v    dim(%134.4) e134.3   <int->
  lgl$#-          %134.6 = IsType                   %134.5 isA val+   <true>
  lgl$#-          %134.7 = IsType                   %134.5 isA int-
  void                    Branch                   %134.6 -> BB144 (if true) | BB145 (if false)
BB135   <- [128]
  fs              %135.0 = FrameState         R     0x55bbef3b97c0+273: [], env=e112.0
  void                    Deopt              !v    %135.0, CallTarget@0x55bbef63a870[Call#3], %128.2   !
BB130   <- [10]
  val?^ | miss    %130.0 = LdVar              eR    var, e112.0
  val?            %130.1 = Force!<lazy>       !v    %130.0, e112.0   <real+>
  lgl$#-          %130.2 = IsType                   %130.1 isA real+
  void                    Branch                   %130.2 -> BB132 (if true) | BB133 (if false)
BB131   <- [10]
  fs              %131.0 = FrameState         R     0x55bbef3b97c0+319: [], env=e112.0
  void                    Deopt              !v    %131.0, DeadBranchReached@0x55bbef63a870[Test#2], %10.1   !
BB144   <- [134]
  void                    Branch                   %134.7 -> BB146 (if true) | BB147 (if false)
BB145   <- [134]
  void                    Nop                !     
  lgl$#-          %145.1 = %134.6
  dr              %145.2 = DeadBranchReached@0x55bbe30b3ee8[Test#1]
  goto BB107
BB132   <- [130]
  real+           %132.0 = CastType           d     dn %130.1
  (int|real)$-    %132.1 = CallSafeBuiltin    wed   length(%132.0)    <int$->
  lgl$#-          %132.2 = IsType                   %132.1 isA int$-
  void                    Branch                   %132.2 -> BB136 (if true) | BB137 (if false)
BB133   <- [130]
  fs              %133.0 = FrameState         R     0x55bbef3b97c0+388: [<blt length>, %130.1], env=e112.0
  void                    Deopt              !v    %133.0, Typecheck@0x55bbef63a870[Type#11], %130.1   !
BB146   <- [144]
  int-            %146.0 = CastType           d     dn %134.5
  int$-           %146.1 = Extract1_1D        wed   %146.0, 2L, elided   <int$->
  val?            %146.2 = PopContext         C     %146.1, %134.1   <int$->
  lgl$#-          %146.3 = IsType                   %146.2 isA int$-
  void                    Branch                   %146.3 -> BB150 (if true) | BB151 (if false)
BB147   <- [144]
  void                    Nop                !     
  val?            %147.1 = %134.5
  dr              %147.2 = Typecheck@0x55bbe30b3ee8[Type#2]
  goto BB107
BB107   <- [145, 147]
  val?^ | miss    %107.0 = Phi                      %145.1:BB145, %147.1:BB147
  val?^ | miss    %107.1 = %107.0
  dr              %107.2 = Phi                      %145.2:BB145, %147.2:BB147
  dr              %107.3 = %107.2
  fs              %107.4 = FrameState         R     0x55bbef3b97c0+305: [], env=e112.0
  fs              %107.5 = FrameState         R     0x55bbe45ee540+91: [%134.5], env=e134.3, next=%107.4
  void                    Deopt              !v    %107.5, %107.3, %107.1   !
BB136   <- [132]
  int$-           %136.0 = CastType           d     dn %132.1
  lgl$-           %136.1 = Eq                 d     %136.0, 0, elided   <lgl$->
  lgl$#-          %136.2 = CheckTrueFalse     e     %136.1
  void                    Branch                   %136.2 -> BB93 (if true) | BB17 (if false)
BB137   <- [132]
  void                    Nop                !     
  (int|real)$-    %137.1 = %132.1
  dr              %137.2 = Typecheck@0x55bbef63a870[Type#12]
  goto BB15
BB150   <- [146]
  int$-           %150.0 = CastType           d     dn %146.2
  void                    StVar              lW    ntest, %150.0, e112.0
  goto BB10
BB151   <- [146]
  fs              %151.0 = FrameState         R     0x55bbef3b97c0+305: [%146.2], env=e112.0
  void                    Deopt              !v    %151.0, Typecheck@0x55bbef63a870[Type#9], %146.2   !
BB93   <- [136]
  val?^ | miss    %93.0 = LdVar              eR    nvar, e112.0
  val?            %93.1 = Force!             !v    %93.0, e112.0   <val?_>
  lgl$#-          %93.2 = IsType                   %93.1 isA val?+
  void                    Branch                   %93.2 -> BB138 (if true) | BB139 (if false)
BB17   <- [136]
  val?^ | miss    %17.0 = LdVar              eR    length, e112.0
  lgl$#-          %17.1 = Identical                <blt length>, %17.0   <true>
  void                    Branch                   %17.1 -> BB140 (if true) | BB141 (if false)
BB15   <- [137, 141, 143]
  val?^ | miss    %15.0 = Phi                      %137.1:BB137, %141.1:BB141, %143.1:BB143
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %137.2:BB137, %141.2:BB141, %143.2:BB143
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55bbef3b97c0+410: [%132.1], env=e112.0
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB138   <- [93]
  val?+           %138.0 = CastType           d     dn %93.1   <val?_>
  lgl             %138.1 = Eq                 wed   %138.0, 0, elided   <val?_>
  lgl$#-          %138.2 = CheckTrueFalse     we    %138.1
  void                    Branch                   %138.2 -> BB97 (if true) | BB96 (if false)
BB139   <- [93]
  fs              %139.0 = FrameState         R     0x55bbef3b97c0+447: [%93.1], env=e112.0
  void                    Deopt              !v    %139.0, Typecheck@0x55bbef63a870[Type#14], %93.1   !
BB140   <- [17]
  val?^ | miss    %140.0 = LdVar              eR    var, e112.0
  lgl$#-          %140.1 = IsType                   %140.0 isA real~+
  void                    Branch                   %140.1 -> BB142 (if true) | BB143 (if false)
BB141   <- [17]
  void                    Nop                !     
  lgl$#-          %141.1 = %17.1
  dr              %141.2 = DeadBranchReached@0x55bbef63a870[Test#4]
  goto BB15
BB97   <- [138]
  val?^ | miss    %97.0 = LdVar              eR    list, e112.0
  lgl$#-          %97.1 = Identical                <blt list>, %97.0   <@?>
  void                    Branch                   %97.1 -> BB99 (if true) | BB98 (if false)
BB96   <- [138]
  (cls|spec|blt)  %96.0 = LdFun              !v    stop, e112.0
  fs              %96.1 = FrameState         R     0x55bbef3b97c0+475: [%96.0], env=e112.0
  void                    Deopt              !v    %96.1, DeadCall@0x55bbef63a870[Call#5], %96.0   !
BB142   <- [140]
  real~+          %142.0 = CastType           d     dn %140.0
  real+           %142.1 = Force!<wrapped>          %142.0,    <real+>
  (int|real)$-    %142.2 = CallSafeBuiltin    wed   length(%142.1)    <int$->
  lgl$#-          %142.3 = IsType                   %142.2 isA int$-
  void                    Branch                   %142.3 -> BB148 (if true) | BB149 (if false)
BB143   <- [140]
  void                    Nop                !     
  val?^ | miss    %143.1 = %140.0
  dr              %143.2 = Typecheck@0x55bbef63a870[Type#20]
  goto BB15
BB99   <- [97]
  (cls|spec|blt)  %99.0 = LdFun              !v    numeric, e112.0
  fs              %99.1 = FrameState         R     0x55bbef3b97c0+595: [<blt list>, %99.0], env=e112.0
  void                    Deopt              !v    %99.1, DeadCall@0x55bbef63a870[Call#8], %99.0   !
BB98   <- [97]
  (cls|spec|blt)  %98.0 = LdFun              !v    list, e112.0
  fs              %98.1 = FrameState         R     0x55bbef3b97c0+536: [%98.0], env=e112.0
  void                    Deopt              !v    %98.1, DeadCall@0x55bbef63a870[Call#6], %98.0   !
BB148   <- [142]
  int$-           %148.0 = CastType           d     dn %142.2
  lgl$-           %148.1 = Eq                 d     %148.0, 1, elided   <lgl$->
  lgl$#-          %148.2 = CheckTrueFalse     e     %148.1
  void                    Branch                   %148.2 -> BB90 (if true) | BB20 (if false)
BB149   <- [142]
  void                    Nop                !     
  (int|real)$-    %149.1 = %142.2
  dr              %149.2 = Typecheck@0x55bbef63a870[Type#21]
  goto BB18
BB90   <- [148]
  val?^ | miss    %90.0 = LdVar              eR    nvar, e112.0
  lgl$#-          %90.1 = IsType                   %90.0 isA int$-
  void                    Branch                   %90.1 -> BB152 (if true) | BB153 (if false)
BB20   <- [148]
  val?^ | miss    %20.0 = LdVar              eR    is.matrix, e112.0
  lgl$#-          %20.1 = Identical                <blt is.matrix>, %20.0   <true>
  void                    Branch                   %20.1 -> BB158 (if true) | BB159 (if false)
BB18   <- [149, 153, 155, 157, 159, 161]
  val?^ | miss    %18.0 = Phi                      %149.1:BB149, %153.1:BB153, %155.1:BB155, %157.1:BB157, %159.1:BB159, %161.1:BB161
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %149.2:BB149, %153.2:BB153, %155.2:BB155, %157.2:BB157, %159.2:BB159, %161.2:BB161
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x55bbef3b97c0+765: [%142.2], env=e112.0
  void                    Deopt              !v    %18.4, %18.3, %18.1   !
BB152   <- [90]
  int$-           %152.0 = CastType           d     dn %90.0
  lgl$-           %152.1 = Eq                 d     %152.0, 1, elided   <lgl$->
  lgl$#-          %152.2 = CheckTrueFalse     e     %152.1
  void                    Branch                   %152.2 -> BB92 (if true) | BB91 (if false)
BB153   <- [90]
  void                    Nop                !     
  val?^ | miss    %153.1 = %90.0
  dr              %153.2 = Typecheck@0x55bbef63a870[Type#23]
  goto BB18
BB158   <- [20]
  lgl$#-          %158.0 = CallSafeBuiltin    wed   is.matrix(%142.1)    <lgl$->
  lgl$#-          %158.1 = Not                d     %158.0, elided
  void                    Branch                   %158.0 -> BB81 (if true) | BB23 (if false)
BB159   <- [20]
  void                    Nop                !     
  lgl$#-          %159.1 = %20.1
  dr              %159.2 = DeadBranchReached@0x55bbef63a870[Test#6]
  goto BB18
BB92   <- [152]
  val?^ | miss    %92.0 = LdVar              eR    list, e112.0
  lgl$#-          %92.1 = Identical                <blt list>, %92.0   <true>
  void                    Branch                   %92.1 -> BB154 (if true) | BB155 (if false)
BB91   <- [152]
  (cls|spec|blt)  %91.0 = LdFun              !v    stop, e112.0
  fs              %91.1 = FrameState         R     0x55bbef3b97c0+830: [%91.0], env=e112.0
  void                    Deopt              !v    %91.1, DeadCall@0x55bbef63a870[Call#10], %91.0   !
BB81   <- [158]
  val?^ | miss    %81.0 = LdVar              eR    nrow, e112.0
  lgl$#-          %81.1 = Identical                %81.0, function(x) <(rir::DispatchTable*)0x55bbe4286c|...
  void                    Branch                   %81.1 -> BB162 (if true) | BB163 (if false)
BB23   <- [158]
  void                    Nop                !     
  lgl$#-          %23.1 = %158.1
  goto BB24
BB154   <- [92]
  val?^ | miss    %154.0 = LdVar              eR    b, e112.0
  lgl$#-          %154.1 = IsType                   %154.0 isA real$~-
  void                    Branch                   %154.1 -> BB156 (if true) | BB157 (if false)
BB155   <- [92]
  void                    Nop                !     
  lgl$#-          %155.1 = %92.1
  dr              %155.2 = DeadBranchReached@0x55bbef63a870[Test#5]
  goto BB18
BB162   <- [81]
  prom-           %162.0 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p0, e112.0
  ct              %162.1 = PushContext        lCL   %162.0, nrow(var), function(x) <(rir::DispatchTable*)0x55bbe4286c|..., e112.0
  val?^           %162.2 = CastType                 up %162.0
  env             e162.3 = MkEnv              l     x=%162.2, parent=R_BaseNamespace, context 1
  val?            %162.4 = Force!<lazy>       !vL   %162.2, e162.3   <val?>
  val?            %162.5 = CallBuiltin        !v    dim(%162.4) e162.3   <(nil|int)->
  lgl$#-          %162.6 = IsType                   %162.5 isA val+   <true>
  lgl$#-          %162.7 = IsType                   %162.5 isA val?-
  void                    Branch                   %162.6 -> BB164 (if true) | BB165 (if false)
BB163   <- [81]
  fs              %163.0 = FrameState         R     0x55bbef3b97c0+1165: [%158.0], env=e112.0
  void                    Deopt              !v    %163.0, CallTarget@0x55bbef63a870[Call#13], %81.0   !
BB24   <- [23, 194]
  lgl$-           %24.0 = Phi                      %194.4:BB194, %23.1:BB23
  lgl$-           %24.1 = %24.0
  lgl$#-          %24.2 = CheckTrueFalse     e     %24.1
  void                    Branch                   %24.2 -> BB80 (if true) | BB27 (if false)
BB156   <- [154]
  real$~-         %156.0 = CastType           d     dn %154.0
  real$-          %156.1 = Force!<wrapped>          %156.0,    <real$->
  real$-          %156.2 = Mul                d     %156.1, %156.1, elided   <real$->
  lgl$#-          %156.3 = IsType                   %142.0 isA real$~-
  void                    Branch                   %156.3 -> BB160 (if true) | BB161 (if false)
BB157   <- [154]
  void                    Nop                !     
  val?^ | miss    %157.1 = %154.0
  dr              %157.2 = Typecheck@0x55bbef63a870[Type#33]
  goto BB18
BB164   <- [162]
  void                    Branch                   %162.7 -> BB172 (if true) | BB173 (if false)
BB165   <- [162]
  void                    Nop                !     
  lgl$#-          %165.1 = %162.6
  dr              %165.2 = DeadBranchReached@0x55bbe3077408[Test#1]
  goto BB82
BB80   <- [24]
  (cls|spec|blt)  %80.0 = LdFun              !v    stop, e112.0
  fs              %80.1 = FrameState         R     0x55bbef3b97c0+1277: [%80.0], env=e112.0
  void                    Deopt              !v    %80.1, DeadCall@0x55bbef63a870[Call#15], %80.0   !
BB27   <- [24]
  val?^ | miss    %27.0 = LdVar              eR    nrow, e112.0
  lgl$#-          %27.1 = Identical                %27.0, function(x) <(rir::DispatchTable*)0x55bbe4286c|...
  void                    Branch                   %27.1 -> BB166 (if true) | BB167 (if false)
BB160   <- [156]
  real$-          %160.0 = Div                d     %156.2, %142.1, elided   <real$->
  void                    Visible            v     
  real$-          %160.2 = Div                vd    %156.1, %142.1, elided   <real$->
  val?            %160.3 = NamedCall          !     <blt list>(test=%160.0, df=1, solve=%160.2) e112.0   <vec+>
  val?            %160.4 = %160.3
  goto BB69
BB161   <- [156]
  void                    Nop                !     
  real~+          %161.1 = %142.0
  dr              %161.2 = Typecheck@0x55bbef63a870[Type#36]
  goto BB18
BB172   <- [164]
  val?-           %172.0 = CastType           d     dn %162.5   <(nil|int)->
  val?            %172.1 = Extract1_1D        wed   %172.0, 1L, elided   <(nil|int)->
  val?            %172.2 = PopContext         C     %172.1, %162.1   <int$->
  lgl$#-          %172.3 = IsType                   %172.2 isA int$-
  void                    Branch                   %172.3 -> BB178 (if true) | BB179 (if false)
BB173   <- [164]
  void                    Nop                !     
  val?            %173.1 = %162.5
  dr              %173.2 = Typecheck@0x55bbe3077408[Type#2]
  goto BB82
BB82   <- [165, 173]
  val?^ | miss    %82.0 = Phi                      %165.1:BB165, %173.1:BB173
  val?^ | miss    %82.1 = %82.0
  dr              %82.2 = Phi                      %165.2:BB165, %173.2:BB173
  dr              %82.3 = %82.2
  fs              %82.4 = FrameState         R     0x55bbef3b97c0+1210: [%158.1], env=e112.0
  fs              %82.5 = FrameState         R     0x55bbe43efa70+91: [%162.5], env=e162.3, next=%82.4
  void                    Deopt              !v    %82.5, %82.3, %82.1   !
BB166   <- [27]
  prom-           %166.0 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p2, e112.0
  ct              %166.1 = PushContext        lCL   %166.0, nrow(var), function(x) <(rir::DispatchTable*)0x55bbe4286c|..., e112.0
  val?^           %166.2 = CastType                 up %166.0
  env             e166.3 = MkEnv              l     x=%166.2, parent=R_BaseNamespace, context 1
  val?            %166.4 = Force!<lazy>       !vL   %166.2, e166.3   <val?>
  val?            %166.5 = CallBuiltin        !v    dim(%166.4) e166.3   <(nil|int)->
  lgl$#-          %166.6 = IsType                   %166.5 isA val+   <true>
  lgl$#-          %166.7 = IsType                   %166.5 isA val?-
  void                    Branch                   %166.6 -> BB168 (if true) | BB169 (if false)
BB167   <- [27]
  fs              %167.0 = FrameState         R     0x55bbef3b97c0+1261: [%24.1], env=e112.0
  void                    Deopt              !v    %167.0, CallTarget@0x55bbef63a870[Call#16], %27.0   !
BB69   <- [68, 160]
  val?            %69.0 = Phi                      %68.2:BB68, %160.4:BB160
  val?            %69.1 = %69.0
  void                    Return             l     %69.1
BB178   <- [172]
  int$-           %178.0 = CastType           d     dn %172.2
  val?^ | miss    %178.1 = LdVar              eR    ncol, e112.0
  lgl$#-          %178.2 = Identical                %178.1, function(x) <(rir::DispatchTable*)0x55bbe42ddf|...
  void                    Branch                   %178.2 -> BB180 (if true) | BB181 (if false)
BB179   <- [172]
  void                    Nop                !     
  val?            %179.1 = %172.2
  dr              %179.2 = Typecheck@0x55bbef63a870[Type#46]
  goto BB84
BB168   <- [166]
  void                    Branch                   %166.7 -> BB170 (if true) | BB171 (if false)
BB169   <- [166]
  void                    Nop                !     
  lgl$#-          %169.1 = %166.6
  dr              %169.2 = DeadBranchReached@0x55bbe3077408[Test#1]
  goto BB28
BB180   <- [178]
  prom-           %180.0 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p1, e112.0
  ct              %180.1 = PushContext        lCL   %180.0, ncol(var), function(x) <(rir::DispatchTable*)0x55bbe42ddf|..., e112.0
  val?^           %180.2 = CastType                 up %180.0
  env             e180.3 = MkEnv              l     x=%180.2, parent=R_BaseNamespace, context 1
  val?            %180.4 = Force!<lazy>       !vL   %180.2, e180.3   <val?>
  val?            %180.5 = CallBuiltin        !v    dim(%180.4) e180.3   <int->
  lgl$#-          %180.6 = IsType                   %180.5 isA val+   <true>
  lgl$#-          %180.7 = IsType                   %180.5 isA int-
  void                    Branch                   %180.6 -> BB184 (if true) | BB185 (if false)
BB181   <- [178]
  void                    Nop                !     
  val?^ | miss    %181.1 = %178.1
  dr              %181.2 = CallTarget@0x55bbef63a870[Call#14]
  goto BB84
BB84   <- [179, 181]
  val?^ | miss    %84.0 = Phi                      %179.1:BB179, %181.1:BB181
  val?^ | miss    %84.1 = %84.0
  dr              %84.2 = Phi                      %179.2:BB179, %181.2:BB181
  dr              %84.3 = %84.2
  fs              %84.4 = FrameState         R     0x55bbef3b97c0+1210: [%158.1, %172.2], env=e112.0
  void                    Deopt              !v    %84.4, %84.3, %84.1   !
BB170   <- [168]
  val?-           %170.0 = CastType           d     dn %166.5   <(nil|int)->
  val?            %170.1 = Extract1_1D        wed   %170.0, 1L, elided   <(nil|int)->
  val?            %170.2 = PopContext         C     %170.1, %166.1   <int$->
  lgl$#-          %170.3 = IsType                   %170.2 isA int$-
  void                    Branch                   %170.3 -> BB174 (if true) | BB175 (if false)
BB171   <- [168]
  void                    Nop                !     
  val?            %171.1 = %166.5
  dr              %171.2 = Typecheck@0x55bbe3077408[Type#2]
  goto BB28
BB28   <- [169, 171]
  val?^ | miss    %28.0 = Phi                      %169.1:BB169, %171.1:BB171
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %169.2:BB169, %171.2:BB171
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55bbef3b97c0+1337: [], env=e112.0
  fs              %28.5 = FrameState         R     0x55bbe43efa70+91: [%166.5], env=e166.3, next=%28.4
  void                    Deopt              !v    %28.5, %28.3, %28.1   !
BB184   <- [180]
  void                    Branch                   %180.7 -> BB186 (if true) | BB187 (if false)
BB185   <- [180]
  void                    Nop                !     
  lgl$#-          %185.1 = %180.6
  dr              %185.2 = DeadBranchReached@0x55bbe30b3ee8[Test#1]
  goto BB86
BB174   <- [170]
  int$-           %174.0 = CastType           d     dn %170.2
  val?^ | miss    %174.1 = LdVar              eR    nvar, e112.0
  lgl$#-          %174.2 = IsType                   %174.1 isA int$-
  void                    Branch                   %174.2 -> BB176 (if true) | BB177 (if false)
BB175   <- [170]
  void                    Nop                !     
  val?            %175.1 = %170.2
  dr              %175.2 = Typecheck@0x55bbef63a870[Type#51]
  goto BB30
BB186   <- [184]
  int-            %186.0 = CastType           d     dn %180.5
  int$-           %186.1 = Extract1_1D        wed   %186.0, 2L, elided   <int$->
  val?            %186.2 = PopContext         C     %186.1, %180.1   <int$->
  lgl$#-          %186.3 = IsType                   %186.2 isA int$-
  void                    Branch                   %186.3 -> BB194 (if true) | BB195 (if false)
BB187   <- [184]
  void                    Nop                !     
  val?            %187.1 = %180.5
  dr              %187.2 = Typecheck@0x55bbe30b3ee8[Type#2]
  goto BB86
BB86   <- [185, 187]
  val?^ | miss    %86.0 = Phi                      %185.1:BB185, %187.1:BB187
  val?^ | miss    %86.1 = %86.0
  dr              %86.2 = Phi                      %185.2:BB185, %187.2:BB187
  dr              %86.3 = %86.2
  fs              %86.4 = FrameState         R     0x55bbef3b97c0+1247: [%158.1, %178.0], env=e112.0
  fs              %86.5 = FrameState         R     0x55bbe45ee540+91: [%180.5], env=e180.3, next=%86.4
  void                    Deopt              !v    %86.5, %86.3, %86.1   !
BB176   <- [174]
  int$-           %176.0 = CastType           d     dn %174.1
  lgl$-           %176.1 = Neq                d     %174.0, %176.0, elided   <lgl$->
  lgl$#-          %176.2 = CheckTrueFalse     e     %176.1
  void                    Branch                   %176.2 -> BB79 (if true) | BB32 (if false)
BB177   <- [174]
  void                    Nop                !     
  val?^ | miss    %177.1 = %174.1
  dr              %177.2 = Typecheck@0x55bbef63a870[Type#52]
  goto BB30
BB30   <- [175, 177, 183, 189, 191]
  val?^ | miss    %30.0 = Phi                      %175.1:BB175, %177.1:BB177, %183.1:BB183, %189.1:BB189, %191.1:BB191
  val?^ | miss    %30.1 = %30.0
  dr              %30.2 = Phi                      %175.2:BB175, %177.2:BB177, %183.2:BB183, %189.2:BB189, %191.2:BB191
  dr              %30.3 = %30.2
  fs              %30.4 = FrameState         R     0x55bbef3b97c0+1337: [%170.2], env=e112.0
  void                    Deopt              !v    %30.4, %30.3, %30.1   !
BB194   <- [186]
  int$-           %194.0 = CastType           d     dn %186.2
  lgl$-           %194.1 = Neq                d     %178.0, %194.0, elided   <lgl$->
  lgl$-           %194.2 = AsLogical                %194.1
  lgl$-           %194.3 = LOr                      %158.1, %194.2
  lgl$-           %194.4 = %194.3
  goto BB24
BB195   <- [186]
  fs              %195.0 = FrameState         R     0x55bbef3b97c0+1247: [%158.1, %178.0, %186.2], env=e112.0
  void                    Deopt              !v    %195.0, Typecheck@0x55bbef63a870[Type#48], %186.2   !
BB79   <- [176]
  (cls|spec|blt)  %79.0 = LdFun              !v    stop, e112.0
  fs              %79.1 = FrameState         R     0x55bbef3b97c0+1378: [%79.0], env=e112.0
  void                    Deopt              !v    %79.1, DeadCall@0x55bbef63a870[Call#17], %79.0   !
BB32   <- [176]
  val?^ | miss    %32.0 = LdVar              eR    any, e112.0
  lgl$#-          %32.1 = Identical                <blt any>, %32.0   <true>
  void                    Branch                   %32.1 -> BB182 (if true) | BB183 (if false)
BB182   <- [32]
  val?^ | miss    %182.0 = LdVar              eR    is.finite, e112.0
  lgl$#-          %182.1 = Identical                <blt is.finite>, %182.0   <true>
  void                    Branch                   %182.1 -> BB188 (if true) | BB189 (if false)
BB183   <- [32]
  void                    Nop                !     
  lgl$#-          %183.1 = %32.1
  dr              %183.2 = DeadBranchReached@0x55bbef63a870[Test#7]
  goto BB30
BB188   <- [182]
  val?^ | miss    %188.0 = LdVar              eR    b, e112.0
  lgl$#-          %188.1 = IsType                   %188.0 isA real~+
  void                    Branch                   %188.1 -> BB190 (if true) | BB191 (if false)
BB189   <- [182]
  void                    Nop                !     
  lgl$#-          %189.1 = %182.1
  dr              %189.2 = DeadBranchReached@0x55bbef63a870[Test#8]
  goto BB30
BB190   <- [188]
  real~+          %190.0 = CastType           d     dn %188.0
  real+           %190.1 = Force!<wrapped>          %190.0,    <real+>
  lgl+            %190.2 = CallSafeBuiltin    wed   is.finite(%190.1)    <lgl+>
  lgl             %190.3 = Not                wed   %190.2, elided
  val?            %190.4 = CallBuiltin        !v    any(%190.3) e112.0   <lgl$->
  lgl$#-          %190.5 = IsType                   %190.4 isA lgl$-
  void                    Branch                   %190.5 -> BB192 (if true) | BB193 (if false)
BB191   <- [188]
  void                    Nop                !     
  val?^ | miss    %191.1 = %188.0
  dr              %191.2 = Typecheck@0x55bbef63a870[Type#57]
  goto BB30
BB192   <- [190]
  lgl$-           %192.0 = CastType           d     dn %190.4
  lgl$-           %192.1 = AsLogical                %192.0
  lgl$#-          %192.2 = Identical                %192.1, true
  void                    Branch                   %192.2 -> BB78 (if true) | BB35 (if false)
BB193   <- [190]
  void                    Nop                !     
  val?            %193.1 = %190.4
  dr              %193.2 = Typecheck@0x55bbef63a870[Type#59]
  goto BB33
BB78   <- [192]
  void                    Nop                !     
  lgl$-           %78.1 = %192.1
  goto BB38
BB35   <- [192]
  val?^ | miss    %35.0 = LdVar              eR    any, e112.0
  lgl$#-          %35.1 = Identical                <blt any>, %35.0   <true>
  void                    Branch                   %35.1 -> BB196 (if true) | BB197 (if false)
BB33   <- [193, 197, 201, 207]
  val?^ | miss    %33.0 = Phi                      %193.1:BB193, %197.1:BB197, %201.1:BB201, %207.1:BB207
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %193.2:BB193, %197.2:BB197, %201.2:BB201, %207.2:BB207
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55bbef3b97c0+1580: [%190.4], env=e112.0
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB38   <- [78, 210]
  lgl$-           %38.0 = Phi                      %210.3:BB210, %78.1:BB78
  lgl$-           %38.1 = %38.0
  lgl$#-          %38.2 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.2 -> BB77 (if true) | BB41 (if false)
BB196   <- [35]
  val?^ | miss    %196.0 = LdVar              eR    is.finite, e112.0
  lgl$#-          %196.1 = Identical                <blt is.finite>, %196.0   <true>
  void                    Branch                   %196.1 -> BB200 (if true) | BB201 (if false)
BB197   <- [35]
  void                    Nop                !     
  lgl$#-          %197.1 = %35.1
  dr              %197.2 = DeadBranchReached@0x55bbef63a870[Test#9]
  goto BB33
BB77   <- [38]
  (cls|spec|blt)  %77.0 = LdFun              !v    cat, e112.0
  fs              %77.1 = FrameState         R     0x55bbef3b97c0+1789: [%77.0], env=e112.0
  void                    Deopt              !v    %77.1, DeadCall@0x55bbef63a870[Call#24], %77.0   !
BB41   <- [38]
  val?^ | miss    %41.0 = LdVar              eR    .C, e112.0
  lgl$#-          %41.1 = Identical                <blt .C>, %41.0   <true>
  void                    Branch                   %41.1 -> BB198 (if true) | BB199 (if false)
BB200   <- [196]
  val?^ | miss    %200.0 = LdVar              eR    var, e112.0
  lgl$#-          %200.1 = IsType                   %200.0 isA real~+
  void                    Branch                   %200.1 -> BB206 (if true) | BB207 (if false)
BB201   <- [196]
  void                    Nop                !     
  lgl$#-          %201.1 = %196.1
  dr              %201.2 = DeadBranchReached@0x55bbef63a870[Test#10]
  goto BB33
BB198   <- [41]
  val?^ | miss    %198.0 = LdVar              eR    Ccoxph_wtest, e112.0
  val?            %198.1 = Force!<value>      !v    %198.0, e112.0   <vec>
  val?^ | miss    %198.2 = LdVar              eR    as.integer, e112.0
  lgl$#-          %198.3 = Identical                <blt as.integer>, %198.2   <true>
  void                    Branch                   %198.3 -> BB202 (if true) | BB203 (if false)
BB199   <- [41]
  fs              %199.0 = FrameState         R     0x55bbef3b97c0+1773: [%38.1], env=e112.0
  void                    Deopt              !v    %199.0, DeadBranchReached@0x55bbef63a870[Test#11], %41.1   !
BB206   <- [200]
  real~+          %206.0 = CastType           d     dn %200.0
  real+           %206.1 = Force!<wrapped>          %206.0,    <real+>
  lgl+            %206.2 = CallSafeBuiltin    wed   is.finite(%206.1)    <lgl+>
  lgl             %206.3 = Not                wed   %206.2, elided
  val?            %206.4 = CallBuiltin        !v    any(%206.3) e112.0   <lgl$->
  lgl$#-          %206.5 = IsType                   %206.4 isA lgl$-
  void                    Branch                   %206.5 -> BB210 (if true) | BB211 (if false)
BB207   <- [200]
  void                    Nop                !     
  val?^ | miss    %207.1 = %200.0
  dr              %207.2 = Typecheck@0x55bbef63a870[Type#63]
  goto BB33
BB202   <- [198]
  val?^ | miss    %202.0 = LdVar              eR    nvar, e112.0
  lgl$#-          %202.1 = IsType                   %202.0 isA int$-
  void                    Branch                   %202.1 -> BB204 (if true) | BB205 (if false)
BB203   <- [198]
  void                    Nop                !     
  lgl$#-          %203.1 = %198.3
  dr              %203.2 = DeadBranchReached@0x55bbef63a870[Test#12]
  goto BB42
BB210   <- [206]
  lgl$-           %210.0 = CastType           d     dn %206.4
  lgl$-           %210.1 = AsLogical                %210.0
  lgl$-           %210.2 = LOr                      %192.1, %210.1
  lgl$-           %210.3 = %210.2
  goto BB38
BB211   <- [206]
  fs              %211.0 = FrameState         R     0x55bbef3b97c0+1766: [%192.1, %206.4], env=e112.0
  void                    Deopt              !v    %211.0, Typecheck@0x55bbef63a870[Type#65], %206.4   !
BB204   <- [202]
  int$-           %204.0 = CastType           d     dn %202.0
  val?^ | miss    %204.1 = LdVar              eR    ntest, e112.0
  lgl$#-          %204.2 = IsType                   %204.1 isA val?~- | miss
  void                    Branch                   %204.2 -> BB208 (if true) | BB209 (if false)
BB205   <- [202]
  void                    Nop                !     
  val?^ | miss    %205.1 = %202.0
  dr              %205.2 = Typecheck@0x55bbef63a870[Type#85]
  goto BB42
BB42   <- [203, 205, 209]
  val?^ | miss    %42.0 = Phi                      %203.1:BB203, %205.1:BB205, %209.1:BB209
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %203.2:BB203, %205.2:BB205, %209.2:BB209
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55bbef3b97c0+2010: [<blt .C>, %198.1], env=e112.0
  void                    Deopt              !v    %42.4, %42.3, %42.1   !
BB208   <- [204]
  val?~- | miss   %208.0 = CastType           d     dn %204.1
  val?-           %208.1 = Force!<value>            %208.0,    <(int|real)$->
  int-            %208.2 = CallSafeBuiltin    wed   as.integer(%208.1)    <int$->
  lgl$#-          %208.3 = IsType                   %208.2 isA int$-
  void                    Branch                   %208.3 -> BB212 (if true) | BB213 (if false)
BB209   <- [204]
  void                    Nop                !     
  val?^ | miss    %209.1 = %204.1
  dr              %209.2 = Typecheck@0x55bbef63a870[Type#88]
  goto BB42
BB212   <- [208]
  int$-           %212.0 = CastType           d     dn %208.2
  val?^ | miss    %212.1 = LdVar              eR    as.double, e112.0
  lgl$#-          %212.2 = Identical                <blt as.double>, %212.1   <true>
  void                    Branch                   %212.2 -> BB214 (if true) | BB215 (if false)
BB213   <- [208]
  void                    Nop                !     
  int-            %213.1 = %208.2
  dr              %213.2 = Typecheck@0x55bbef63a870[Type#89]
  goto BB44
BB214   <- [212]
  val?^ | miss    %214.0 = LdVar              eR    var, e112.0
  lgl$#-          %214.1 = IsType                   %214.0 isA real~+
  void                    Branch                   %214.1 -> BB216 (if true) | BB217 (if false)
BB215   <- [212]
  void                    Nop                !     
  lgl$#-          %215.1 = %212.2
  dr              %215.2 = DeadBranchReached@0x55bbef63a870[Test#14]
  goto BB44
BB44   <- [213, 215, 217]
  val?^ | miss    %44.0 = Phi                      %213.1:BB213, %215.1:BB215, %217.1:BB217
  val?^ | miss    %44.1 = %44.0
  dr              %44.2 = Phi                      %213.2:BB213, %215.2:BB215, %217.2:BB217
  dr              %44.3 = %44.2
  fs              %44.4 = FrameState         R     0x55bbef3b97c0+2202: [<blt .C>, %198.1, %204.0, %208.2], env=e112.0
  void                    Deopt              !v    %44.4, %44.3, %44.1   !
BB216   <- [214]
  real~+          %216.0 = CastType           d     dn %214.0
  real+           %216.1 = Force!<wrapped>          %216.0,    <real+>
  val+            %216.2 = CallSafeBuiltin    wed   as.double(%216.1)    <real->
  val?^ | miss    %216.3 = LdVar              eR    b, e112.0
  lgl$#-          %216.4 = IsType                   %216.3 isA real~+
  void                    Branch                   %216.4 -> BB218 (if true) | BB219 (if false)
BB217   <- [214]
  void                    Nop                !     
  val?^ | miss    %217.1 = %214.0
  dr              %217.2 = Typecheck@0x55bbef63a870[Type#91]
  goto BB44
BB218   <- [216]
  real~+          %218.0 = CastType           d     dn %216.3
  real+           %218.1 = Force!<wrapped>          %218.0,    <real+>
  val+            %218.2 = CallSafeBuiltin    wed   as.double(%218.1)    <real->
  val?^ | miss    %218.3 = LdVar              eR    double, e112.0
  lgl$#-          %218.4 = Identical                %218.3, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %218.4 -> BB220 (if true) | BB221 (if false)
BB219   <- [216]
  fs              %219.0 = FrameState         R     0x55bbef3b97c0+2298: [<blt .C>, %198.1, %204.0, %212.0, %216.2], env=e112.0
  void                    Deopt              !v    %219.0, Typecheck@0x55bbef63a870[Type#94], %216.3   !
BB220   <- [218]
  (int|real|complex)- %220.0 = Mul                wed   %204.0, %208.1, elided   <(int|real)$->
  real-           %220.1 = CallSafeBuiltin    wed   vector("double", %220.0)    <real->
  val?^ | miss    %220.2 = LdVar              eR    toler.chol, e112.0
  val?            %220.3 = Force!<lazy>       !v    %220.2, e112.0   <real$->
  lgl$#-          %220.4 = IsType                   %220.3 isA real$-
  void                    Branch                   %220.4 -> BB222 (if true) | BB223 (if false)
BB221   <- [218]
  fs              %221.0 = FrameState         R     0x55bbef3b97c0+2394: [<blt .C>, %198.1, %204.0, %212.0, %216.2, %218.2], env=e112.0
  void                    Deopt              !v    %221.0, CallTarget@0x55bbef63a870[Call#38], %218.3   !
BB222   <- [220]
  real$-          %222.0 = CastType           d     dn %220.3
  val+            %222.1 = CallSafeBuiltin    wed   as.double(%222.0)    <real$->
  lgl$#-          %222.2 = IsType                   %222.1 isA real$-
  void                    Branch                   %222.2 -> BB224 (if true) | BB225 (if false)
BB223   <- [220]
  fs              %223.0 = FrameState         R     0x55bbef3b97c0+2505: [<blt .C>, %198.1, %204.0, %212.0, %216.2, %218.2, %220.1, <blt as.double>, %220.3], env=e112.0
  void                    Deopt              !v    %223.0, Typecheck@0x55bbef63a870[Type#101], %220.3   !
BB224   <- [222]
  real$-          %224.0 = CastType           d     dn %222.1
  val?            %224.1 = NamedCall          !v    <blt .C>(%198.1, df=%204.0, %212.0, %216.2, tests=%218.2, solve=%220.1, %224.0) e112.0   <vec+>
  void                    StVar              lW    temp, %224.1, e112.0
  val?^ | miss    %224.3 = LdVar              eR    ntest, e112.0
  lgl$#-          %224.4 = IsType                   %224.3 isA val?~- | miss
  void                    Branch                   %224.4 -> BB226 (if true) | BB227 (if false)
BB225   <- [222]
  fs              %225.0 = FrameState         R     0x55bbef3b97c0+2527: [<blt .C>, %198.1, %204.0, %212.0, %216.2, %218.2, %220.1, %222.1], env=e112.0
  void                    Deopt              !v    %225.0, Typecheck@0x55bbef63a870[Type#102], %222.1   !
BB226   <- [224]
  val?~- | miss   %226.0 = CastType           d     dn %224.3
  val?-           %226.1 = Force!<value>            %226.0,    <(int|real)$->
  lgl-            %226.2 = Eq                 wed   %226.1, 1, elided   <lgl$->
  lgl$#-          %226.3 = IsType                   %226.2 isA lgl$-
  void                    Branch                   %226.3 -> BB228 (if true) | BB229 (if false)
BB227   <- [224]
  fs              %227.0 = FrameState         R     0x55bbef3b97c0+2591: [], env=e112.0
  void                    Deopt              !v    %227.0, Typecheck@0x55bbef63a870[Type#104], %224.3   !
BB228   <- [226]
  lgl$-           %228.0 = CastType           d     dn %226.2
  lgl$#-          %228.1 = CheckTrueFalse     e     %228.0
  void                    Branch                   %228.1 -> BB72 (if true) | BB58 (if false)
BB229   <- [226]
  void                    Nop                !     
  lgl-            %229.1 = %226.2
  dr              %229.2 = Typecheck@0x55bbef63a870[Type#105]
  goto BB56
BB72   <- [228]
  val?^ | miss    %72.0 = LdVar              eR    list, e112.0
  lgl$#-          %72.1 = Identical                <blt list>, %72.0   <true>
  void                    Branch                   %72.1 -> BB230 (if true) | BB231 (if false)
BB58   <- [228]
  val?^ | miss    %58.0 = LdVar              eR    list, e112.0
  lgl$#-          %58.1 = Identical                <blt list>, %58.0   <true>
  void                    Branch                   %58.1 -> BB232 (if true) | BB233 (if false)
BB56   <- [229, 231, 233]
  val?^ | miss    %56.0 = Phi                      %229.1:BB229, %231.1:BB231, %233.1:BB233
  val?^ | miss    %56.1 = %56.0
  dr              %56.2 = Phi                      %229.2:BB229, %231.2:BB231, %233.2:BB233
  dr              %56.3 = %56.2
  fs              %56.4 = FrameState         R     0x55bbef3b97c0+2612: [%226.2], env=e112.0
  void                    Deopt              !v    %56.4, %56.3, %56.1   !
BB230   <- [72]
  (cls|spec|blt)  %230.0 = LdFun              !v    $, <0x55bbe1e1fc10>, e112.0
  prom-           %230.1 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p13, e112.0
  prom-           %230.2 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p14, e112.0
  val?            %230.3 = Call               !v    %230.0(%230.1, %230.2) e112.0   <real->
  lgl$#-          %230.4 = IsType                   %230.3 isA val+   <true>
  lgl$#-          %230.5 = IsType                   %230.3 isA real-
  void                    Branch                   %230.4 -> BB238 (if true) | BB239 (if false)
BB231   <- [72]
  void                    Nop                !     
  lgl$#-          %231.1 = %72.1
  dr              %231.2 = DeadBranchReached@0x55bbef63a870[Test#20]
  goto BB56
BB232   <- [58]
  (cls|spec|blt)  %232.0 = LdFun              !v    $, <0x55bbe1e1fc10>, e112.0
  prom-           %232.1 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p4, e112.0
  prom-           %232.2 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p5, e112.0
  val?            %232.3 = Call               !v    %232.0(%232.1, %232.2) e112.0   <real->
  lgl$#-          %232.4 = IsType                   %232.3 isA val+   <true>
  lgl$#-          %232.5 = IsType                   %232.3 isA real-
  void                    Branch                   %232.4 -> BB234 (if true) | BB235 (if false)
BB233   <- [58]
  void                    Nop                !     
  lgl$#-          %233.1 = %58.1
  dr              %233.2 = DeadBranchReached@0x55bbef63a870[Test#17]
  goto BB56
BB238   <- [230]
  void                    Branch                   %230.5 -> BB240 (if true) | BB241 (if false)
BB239   <- [230]
  void                    Nop                !     
  lgl$#-          %239.1 = %230.4
  dr              %239.2 = DeadBranchReached@0x55bbef63a870[Test#22]
  goto BB73
BB234   <- [232]
  val?^ | miss    %234.0 = LdVar              eR    ntest, e112.0
  lgl$#-          %234.1 = IsType                   %234.0 isA int$-
  void                    Branch                   %234.1 -> BB236 (if true) | BB237 (if false)
BB235   <- [232]
  void                    Nop                !     
  lgl$#-          %235.1 = %232.4
  dr              %235.2 = DeadBranchReached@0x55bbef63a870[Test#19]
  goto BB59
BB240   <- [238]
  real-           %240.0 = CastType           d     dn %230.3
  real$-          %240.1 = Extract1_1D        wed   %240.0, 1, elided   <real$->
  void                    Visible            v     
  (cls|spec|blt)  %240.3 = LdFun              !     $, <0x55bbe1e1fc10>, e112.0
  prom-           %240.4 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p15, e112.0
  prom-           %240.5 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p16, e112.0
  val?            %240.6 = Call               !     %240.3(%240.4, %240.5) e112.0   <int$->
  lgl$#-          %240.7 = IsType                   %240.6 isA int$-
  void                    Branch                   %240.7 -> BB244 (if true) | BB245 (if false)
BB241   <- [238]
  void                    Nop                !     
  val?            %241.1 = %230.3
  dr              %241.2 = Typecheck@0x55bbef63a870[Type#153]
  goto BB73
BB73   <- [239, 241]
  val?^ | miss    %73.0 = Phi                      %239.1:BB239, %241.1:BB241
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %239.2:BB239, %241.2:BB241
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x55bbef3b97c0+3058: [<blt list>, %230.3], env=e112.0
  void                    Deopt              !v    %73.4, %73.3, %73.1   !
BB236   <- [234]
  int$-           %236.0 = CastType           d     dn %234.0
  int-            %236.1 = Colon              d     1L, %236.0, elided   <int->
  void                    Branch                   %232.5 -> BB242 (if true) | BB243 (if false)
BB237   <- [234]
  void                    Nop                !     
  val?^ | miss    %237.1 = %234.0
  dr              %237.2 = Typecheck@0x55bbef63a870[Type#128]
  goto BB59
BB59   <- [235, 237, 243]
  val?^ | miss    %59.0 = Phi                      %235.1:BB235, %237.1:BB237, %243.1:BB243
  val?^ | miss    %59.1 = %59.0
  dr              %59.2 = Phi                      %235.2:BB235, %237.2:BB237, %243.2:BB243
  dr              %59.3 = %59.2
  fs              %59.4 = FrameState         R     0x55bbef3b97c0+2742: [<blt list>, %232.3], env=e112.0
  void                    Deopt              !v    %59.4, %59.3, %59.1   !
BB244   <- [240]
  int$-           %244.0 = CastType           d     dn %240.6
  (cls|spec|blt)  %244.1 = LdFun              !     $, <0x55bbe1e1fc10>, e112.0
  prom-           %244.2 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p17, e112.0
  prom-           %244.3 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p18, e112.0
  val?            %244.4 = Call               !     %244.1(%244.2, %244.3) e112.0   <real->
  val?            %244.5 = NamedCall          !     <blt list>(test=%240.1, df=%244.0, solve=%244.4) e112.0   <vec+>
  val?            %244.6 = %244.5
  goto BB68
BB245   <- [240]
  fs              %245.0 = FrameState         R     0x55bbef3b97c0+3144: [<blt list>, %240.1, %240.6], env=e112.0
  void                    Deopt              !v    %245.0, Typecheck@0x55bbef63a870[Type#157], %240.6   !
BB242   <- [236]
  real-           %242.0 = CastType           d     dn %232.3
  real-           %242.1 = Extract1_1D        wed   %242.0, %236.1, elided   <real->
  (cls|spec|blt)  %242.2 = LdFun              !v    $, <0x55bbe1e1fc10>, e112.0
  prom-           %242.3 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p6, e112.0
  prom-           %242.4 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p7, e112.0
  val?            %242.5 = Call               !v    %242.2(%242.3, %242.4) e112.0   <int$->
  lgl$#-          %242.6 = IsType                   %242.5 isA int$-
  void                    Branch                   %242.6 -> BB246 (if true) | BB247 (if false)
BB243   <- [236]
  void                    Nop                !     
  val?            %243.1 = %232.3
  dr              %243.2 = Typecheck@0x55bbef63a870[Type#125]
  goto BB59
BB68   <- [67, 244]
  val?            %68.0 = Phi                      %67.6:BB67, %244.6:BB244
  val?            %68.1 = %68.0
  val?            %68.2 = %68.1
  goto BB69
BB246   <- [242]
  int$-           %246.0 = CastType           d     dn %242.5
  val?^ | miss    %246.1 = LdVar              eR    matrix, e112.0
  lgl$#-          %246.2 = Identical                %246.1, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...
  void                    Branch                   %246.2 -> BB248 (if true) | BB249 (if false)
BB247   <- [242]
  void                    Nop                !     
  val?            %247.1 = %242.5
  dr              %247.2 = Typecheck@0x55bbef63a870[Type#133]
  goto BB61
BB248   <- [246]
  prom-           %248.0 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p11, e112.0
  prom-           %248.1 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p12, e112.0
  val?^           %248.2 = CastType                 up %248.1
  val?^           %248.3 = CastType                 up %248.0
  (cls|spec|blt)  %248.4 = LdFun              !v    $, <0x55bbe1e1fc10>, e112.0
  prom-           %248.5 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p9, e112.0
  prom-           %248.6 = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p10, e112.0
  val?            %248.7 = Call               !v    %248.4(%248.5, %248.6) e112.0   <real->
  prom-           %248.8 = MkArg                    %248.7, coxph.wtest[0x55bbf005f430]_p8 (!refl), e112.0
  val?~           %248.9 = CastType                 up %248.8
  lgl$#-          %248.10 = CallSafeBuiltin    wed   is.object(%248.7)    <lgl$->
  env             e248.11 = MkEnv              l     data=%248.9, nrow=%248.3, ncol=%248.2, byrow(miss)=false, dimnames(miss)=nil, parent=R_BaseNamespace, context 0
  void                    Branch                   %248.10 -> BB71 (if true) | BB65 (if false)
BB249   <- [246]
  void                    Nop                !     
  val?^ | miss    %249.1 = %246.1
  dr              %249.2 = CallTarget@0x55bbef63a870[Call#47]
  goto BB61
BB61   <- [247, 249]
  val?^ | miss    %61.0 = Phi                      %247.1:BB247, %249.1:BB249
  val?^ | miss    %61.1 = %61.0
  dr              %61.2 = Phi                      %247.2:BB247, %249.2:BB249
  dr              %61.3 = %61.2
  fs              %61.4 = FrameState         R     0x55bbef3b97c0+2848: [<blt list>, %242.1, %242.5], env=e112.0
  void                    Deopt              !v    %61.4, %61.3, %61.1   !
BB71   <- [248]
  void                    Nop                !     
  lgl$#-          %71.1 = %248.10
  goto BB66
BB65   <- [248]
  lgl$#-          %65.0 = IsType                   %248.7 isA val?-
  void                    Branch                   %65.0 -> BB250 (if true) | BB251 (if false)
BB66   <- [71, 250]
  lgl$-           %66.0 = Phi                      %250.4:BB250, %71.1:BB71
  lgl$-           %66.1 = %66.0
  lgl$#-          %66.2 = CheckTrueFalse     e     %66.1
  void                    Branch                   %66.2 -> BB70 (if true) | BB67 (if false)
BB250   <- [65]
  val?-           %250.0 = CastType           d     dn %248.7   <real->
  lgl$#-          %250.1 = CallSafeBuiltin    wed   is.atomic(%250.0)    <lgl$->
  lgl$#-          %250.2 = Not                d     %250.1, elided
  lgl$-           %250.3 = LOr                      %248.10, %250.2
  lgl$-           %250.4 = %250.3
  goto BB66
BB251   <- [65]
  fs              %251.0 = FrameState         R     0x55bbef3b97c0+2895: [<blt list>, %242.1, %246.0], env=e112.0
  env             e251.1 = (MkEnv)            l     data=%248.9, nrow=%248.3, ncol=%248.2, byrow(miss)=false, dimnames(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %251.2 = FrameState         R     0x55bbe4716bb0+91: [%248.10], env=e251.1, next=%251.0
  void                    Deopt              !v    %251.2, Typecheck@0x55bbe48b3800[Type#4], %248.7   !
BB70   <- [66]
  fs              %70.0 = FrameState         R     0x55bbef3b97c0+2895: [<blt list>, %242.1, %246.0], env=e112.0
  (cls|spec|blt)  %70.1 = LdFun              !v    as.vector, R_BaseNamespace
  fs              %70.2 = FrameState         R     0x55bbe4716bb0+218: [%70.1], env=e248.11, next=%70.0
  void                    Deopt              !v    %70.2, DeadCall@0x55bbe48b3800[Call#2], %70.1   !
BB67   <- [66]
  val?            %67.0 = Force!<lazy>       !vL   %248.3, e248.11   <(int|real)$->
  val?            %67.1 = Force!<lazy>       !vL   %248.2, e248.11   <(int|real)$->
  lgl$-           %67.2 = Missing            eR    nrow, e248.11
  lgl$-           %67.3 = Missing            eR    ncol, e248.11
  val+            %67.4 = CallSafeBuiltin    vwed  matrix(%248.7, %67.0, %67.1, false, nil, %67.2, %67.3)    <real_>
  val?            %67.5 = NamedCall          !     <blt list>(test=%242.1, df=%246.0, solve=%67.4) e112.0   <vec+>
  val?            %67.6 = %67.5
  goto BB68
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    var, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    var, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    var, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    tests, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    df, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, <0x55bbe1e1fc10>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p9, e0.0
  prom-           %0.3  = MkArg                    unboundValue, coxph.wtest[0x55bbf005f430]_p10, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <real->
  void                    Return             l     %0.4
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    solve, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    nvar, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ntest, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    tests, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    df, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    solve, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    b, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    b, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real+>
  void                    Return             l     %0.3

│ coxph.wtest[0x55bbf005f430]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
