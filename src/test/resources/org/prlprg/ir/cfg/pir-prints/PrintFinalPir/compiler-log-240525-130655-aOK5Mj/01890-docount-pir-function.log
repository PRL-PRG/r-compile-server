
┌──────────────────────────────────────────────────────────────────────────────┐
│ docount[0x55bbf0004d30]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl4,!Obj1,!Obj2,!Obj3,!Obj4│
│ Properties:                                                                  │
├────── Final PIR Version
docount[0x55bbf0004d30]
BB0
  val?^           %0.0  = LdArg                    4
  val?^           %0.1  = LdArg                    3
  val?^           %0.2  = LdArg                    2
  val?^           %0.3  = LdArg                    1
  val?^           %0.4  = LdArg                    0
  val?^ | miss    %0.5  = LdVar              eR    length, ?
  lgl$#-          %0.6  = Identical                <blt length>, %0.5   <true>
  void                    Branch                   %0.6 -> BB124 (if true) | BB125 (if false)
BB124   <- [0]
  env             e124.0 = MkEnv              l     y=%0.4, risk=%0.3, wts=%0.2, timeopt=%0.1, timefix=%0.0, parent=?, context 1
  val+            %124.1 = Force!<lazy>       !vr   %0.3,    <real->
  lgl$#-          %124.2 = IsType                   %124.1 isA real-
  void                    Branch                   %124.2 -> BB126 (if true) | BB127 (if false)
BB125   <- [0]
  env             e125.0 = (MkEnv)            l     y=%0.4, risk=%0.3, wts=%0.2, timeopt=%0.1, timefix=%0.0, parent=?, context 1
  fs              %125.1 = FrameState         R     0x55bbef55c350+17: [<blt length>, %0.6], env=e125.0
  void                    Deopt              !v    %125.1, DeadBranchReached@0x55bbe939f5c0[Test#0], %0.6
BB126   <- [124]
  real-           %126.0 = CastType           d     dn %124.1
  (int|real)$-    %126.1 = CallSafeBuiltin    wed   length(%126.0)    <int$->
  lgl$#-          %126.2 = IsType                   %126.1 isA int$-
  void                    Branch                   %126.2 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  fs              %127.0 = FrameState         R     0x55bbef55c350+69: [<blt length>, %124.1], env=e124.0
  void                    Deopt              !v    %127.0, Typecheck@0x55bbe939f5c0[Type#1], %124.1
BB128   <- [126]
  int$-           %128.0 = CastType           d     dn %126.1
  void                    StVar              lW    n, %128.0, e124.0
  val?^ | miss    %128.2 = LdVar              eR    sum, ?
  lgl$#-          %128.3 = Identical                <blt sum>, %128.2   <true>
  void                    Branch                   %128.3 -> BB130 (if true) | BB131 (if false)
BB129   <- [126]
  fs              %129.0 = FrameState         R     0x55bbef55c350+91: [%126.1], env=e124.0
  void                    Deopt              !v    %129.0, Typecheck@0x55bbe939f5c0[Type#2], %126.1
BB130   <- [128]
  val?            %130.0 = Force!<lazy>       !vr   %0.4,    <real>
  lgl$#-          %130.1 = IsType                   %130.0 isA val+   <false>
  void                    Branch                   %130.1 -> BB133 (if true) | BB132 (if false)
BB131   <- [128]
  fs              %131.0 = FrameState         R     0x55bbef55c350+105: [], env=e124.0
  void                    Deopt              !v    %131.0, DeadBranchReached@0x55bbe939f5c0[Test#1], %128.3
BB133   <- [130]
  fs              %133.0 = FrameState         R     0x55bbef55c350+174: [<blt sum>, %130.0], env=e124.0
  void                    Deopt              !v    %133.0, DeadBranchReached@0x55bbe939f5c0[Test#3], %130.1
BB132   <- [130]
  prom-           %132.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p0, e124.0
  val?            %132.1 = Extract1_2D        !v    %130.0, missingArg, %132.0, e124.0   <real+>
  lgl$#-          %132.2 = IsType                   %132.1 isA real+
  void                    Branch                   %132.2 -> BB134 (if true) | BB135 (if false)
BB134   <- [132]
  real+           %134.0 = CastType           d     dn %132.1
  real$-          %134.1 = CallSafeBuiltin    wed   sum(%134.0)    <real$->
  lgl$-           %134.2 = Lt                 d     %134.1, 2, elided   <lgl$->
  lgl$#-          %134.3 = CheckTrueFalse     e     %134.2
  void                    Branch                   %134.3 -> BB122 (if true) | BB13 (if false)
BB135   <- [132]
  fs              %135.0 = FrameState         R     0x55bbef55c350+258: [<blt sum>, %132.1], env=e124.0
  void                    Deopt              !v    %135.0, Typecheck@0x55bbe939f5c0[Type#14], %132.1   !
BB122   <- [134]
  void                    StVar              lW    timeopt, "n", e124.0
  goto BB14
BB13   <- [134]
  void                    Nop                !     
  goto BB14
BB14   <- [13, 122]
  val?^ | miss    %14.0 = LdVar              eR    survfit, e124.0
  lgl$#-          %14.1 = Identical                %14.0, function(formula, ...) <(rir::DispatchTable*)0|...
  void                    Branch                   %14.1 -> BB136 (if true) | BB137 (if false)
BB136   <- [14]
  prom-           %136.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p2, e124.0
  prom-           %136.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p4, e124.0
  prom-           %136.2 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p5, e124.0
  dots-           %136.3 = DotsList           l     weights=%136.1, se.fit=false, timefix=%136.2
  val?            %136.4 = StaticCall         !v    survfit[0x55bbe82a8780](%136.0, %136.3) { 0 1n 2n 3n } e124.0   <vec>
  void                    StVar              lW    sfit, %136.4, e124.0
  (cls|spec|blt)  %136.6 = LdFun              !v    $, <0x55bbe1e1fc10>, e124.0
  prom-           %136.7 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p6, e124.0
  prom-           %136.8 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p7, e124.0
  val?            %136.9 = Call               !v    %136.6(%136.7, %136.8) e124.0   <real->
  lgl$#-          %136.10 = IsType                   %136.9 isA val+   <true>
  void                    Branch                   %136.10 -> BB138 (if true) | BB139 (if false)
BB137   <- [14]
  fs              %137.0 = FrameState         R     0x55bbef55c350+324: [], env=e124.0
  void                    Deopt              !v    %137.0, CallTarget@0x55bbe939f5c0[Call#6], %14.0   !
BB138   <- [136]
  (cls|spec|blt)  %138.0 = LdFun              !v    $, <0x55bbe1e1fc10>, e124.0
  prom-           %138.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p8, e124.0
  prom-           %138.2 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p9, e124.0
  val?            %138.3 = Call               !v    %138.0(%138.1, %138.2) e124.0   <real->
  lgl$#-          %138.4 = IsType                   %138.3 isA real-
  void                    Branch                   %138.4 -> BB140 (if true) | BB141 (if false)
BB139   <- [136]
  fs              %139.0 = FrameState         R     0x55bbef55c350+438: [%136.9], env=e124.0
  void                    Deopt              !v    %139.0, DeadBranchReached@0x55bbe939f5c0[Test#4], %136.10   !
BB140   <- [138]
  real-           %140.0 = CastType           d     dn %138.3
  lgl-            %140.1 = Gt                 wed   %140.0, 0, elided   <lgl->
  lgl$#-          %140.2 = IsType                   %136.9 isA real-
  void                    Branch                   %140.2 -> BB142 (if true) | BB143 (if false)
BB141   <- [138]
  fs              %141.0 = FrameState         R     0x55bbef55c350+511: [%136.9, %138.3], env=e124.0
  void                    Deopt              !v    %141.0, Typecheck@0x55bbe939f5c0[Type#31], %138.3   !
BB142   <- [140]
  real-           %142.0 = CastType           d     dn %136.9
  real-           %142.1 = Extract1_1D        wed   %142.0, %140.1, elided   <real->
  void                    StVar              lW    etime, %142.1, e124.0
  (cls|spec|blt)  %142.3 = LdFun              !v    $, <0x55bbe1e1fc10>, e124.0
  prom-           %142.4 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p10, e124.0
  prom-           %142.5 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p11, e124.0
  val?            %142.6 = Call               !v    %142.3(%142.4, %142.5) e124.0   <real->
  lgl$#-          %142.7 = IsType                   %142.6 isA val+   <true>
  void                    Branch                   %142.7 -> BB144 (if true) | BB145 (if false)
BB143   <- [140]
  fs              %143.0 = FrameState         R     0x55bbef55c350+523: [%136.9, %140.1], env=e124.0
  void                    Deopt              !v    %143.0, Typecheck@0x55bbe939f5c0[Type#24], %136.9   !
BB144   <- [142]
  (cls|spec|blt)  %144.0 = LdFun              !v    $, <0x55bbe1e1fc10>, e124.0
  prom-           %144.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p12, e124.0
  prom-           %144.2 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p13, e124.0
  val?            %144.3 = Call               !v    %144.0(%144.1, %144.2) e124.0   <real->
  lgl$#-          %144.4 = IsType                   %144.3 isA real-
  void                    Branch                   %144.4 -> BB146 (if true) | BB147 (if false)
BB145   <- [142]
  fs              %145.0 = FrameState         R     0x55bbef55c350+581: [%142.6], env=e124.0
  void                    Deopt              !v    %145.0, DeadBranchReached@0x55bbe939f5c0[Test#5], %142.7   !
BB146   <- [144]
  real-           %146.0 = CastType           d     dn %144.3
  lgl-            %146.1 = Gt                 wed   %146.0, 0, elided   <lgl->
  lgl$#-          %146.2 = IsType                   %142.6 isA real-
  void                    Branch                   %146.2 -> BB148 (if true) | BB149 (if false)
BB147   <- [144]
  fs              %147.0 = FrameState         R     0x55bbef55c350+654: [%142.6, %144.3], env=e124.0
  void                    Deopt              !v    %147.0, Typecheck@0x55bbe939f5c0[Type#43], %144.3   !
BB148   <- [146]
  real-           %148.0 = CastType           d     dn %142.6
  real-           %148.1 = Extract1_1D        wed   %148.0, %146.1, elided   <real->
  void                    StVar              lW    esurv, %148.1, e124.0
  val?^ | miss    %148.3 = LdVar              eR    length, e124.0
  lgl$#-          %148.4 = Identical                <blt length>, %148.3   <true>
  void                    Branch                   %148.4 -> BB150 (if true) | BB151 (if false)
BB149   <- [146]
  fs              %149.0 = FrameState         R     0x55bbef55c350+666: [%142.6, %146.1], env=e124.0
  void                    Deopt              !v    %149.0, Typecheck@0x55bbe939f5c0[Type#36], %142.6   !
BB150   <- [148]
  val?^ | miss    %150.0 = LdVar              eR    etime, e124.0
  lgl$#-          %150.1 = IsType                   %150.0 isA real-
  void                    Branch                   %150.1 -> BB152 (if true) | BB153 (if false)
BB151   <- [148]
  void                    Nop                !     
  lgl$#-          %151.1 = %148.4
  dr              %151.2 = DeadBranchReached@0x55bbe939f5c0[Test#6]
  goto BB29
BB152   <- [150]
  real-           %152.0 = CastType           d     dn %150.0
  (int|real)$-    %152.1 = CallSafeBuiltin    wed   length(%152.0)    <int$->
  lgl$#-          %152.2 = IsType                   %152.1 isA int$-
  void                    Branch                   %152.2 -> BB154 (if true) | BB155 (if false)
BB153   <- [150]
  void                    Nop                !     
  val?^ | miss    %153.1 = %150.0
  dr              %153.2 = Typecheck@0x55bbe939f5c0[Type#47]
  goto BB29
BB29   <- [151, 153]
  val?^ | miss    %29.0 = Phi                      %151.1:BB151, %153.1:BB153
  val?^ | miss    %29.1 = %29.0
  dr              %29.2 = Phi                      %151.2:BB151, %153.2:BB153
  dr              %29.3 = %29.2
  fs              %29.4 = FrameState         R     0x55bbef55c350+687: [], env=e124.0
  void                    Deopt              !v    %29.4, %29.3, %29.1   !
BB154   <- [152]
  int$-           %154.0 = CastType           d     dn %152.1
  lgl$-           %154.1 = Eq                 d     %154.0, 0, elided   <lgl$->
  lgl$#-          %154.2 = CheckTrueFalse     e     %154.1
  void                    Branch                   %154.2 -> BB119 (if true) | BB33 (if false)
BB155   <- [152]
  void                    Nop                !     
  (int|real)$-    %155.1 = %152.1
  dr              %155.2 = Typecheck@0x55bbe939f5c0[Type#48]
  goto BB31
BB119   <- [154]
  val?^ | miss    %119.0 = LdVar              eR    list, e124.0
  lgl$#-          %119.1 = Identical                <blt list>, %119.0   <@?>
  void                    Branch                   %119.1 -> BB121 (if true) | BB120 (if false)
BB33   <- [154]
  val?^ | miss    %33.0 = LdVar              eR    %in%, e124.0
  lgl$#-          %33.1 = Identical                %33.0, function(x, table) <(rir::DispatchTable*)0x55b|...
  void                    Branch                   %33.1 -> BB156 (if true) | BB157 (if false)
BB31   <- [155, 157]
  val?^ | miss    %31.0 = Phi                      %155.1:BB155, %157.1:BB157
  val?^ | miss    %31.1 = %31.0
  dr              %31.2 = Phi                      %155.2:BB155, %157.2:BB157
  dr              %31.3 = %31.2
  fs              %31.4 = FrameState         R     0x55bbef55c350+778: [%152.1], env=e124.0
  void                    Deopt              !v    %31.4, %31.3, %31.1   !
BB121   <- [119]
  (cls|spec|blt)  %121.0 = LdFun              !v    rep, e124.0
  fs              %121.1 = FrameState         R     0x55bbef55c350+893: [<blt list>, %121.0], env=e124.0
  void                    Deopt              !v    %121.1, DeadCall@0x55bbe939f5c0[Call#18], %121.0   !
BB120   <- [119]
  (cls|spec|blt)  %120.0 = LdFun              !v    list, e124.0
  fs              %120.1 = FrameState         R     0x55bbef55c350+834: [%120.0], env=e124.0
  void                    Deopt              !v    %120.1, DeadCall@0x55bbe939f5c0[Call#15], %120.0   !
BB156   <- [33]
  prom-           %156.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p14, e124.0
  prom-           %156.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p15, e124.0
  ct              %156.2 = PushContext        lCL   %156.0, %156.1, %in%(timeopt, c("S/G", "n/G", "n/G2")), function(x, table) <(rir::DispatchTable*)0x55b|..., e124.0
  val?^           %156.3 = CastType                 up %156.1
  val?^           %156.4 = CastType                 up %156.0
  env             e156.5 = MkEnv              l     x=%156.4, table=%156.3, parent=R_BaseNamespace, context 1
  prom-           %156.6 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p52, e156.5
  prom-           %156.7 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p53, e156.5
  ct              %156.8 = PushContext        lCL   %156.6, %156.7, 0L, match(x, table, nomatch=0L), function(x, table, nomatch=NA, incomparables=N|..., e156.5
  val?^           %156.9 = CastType                 up %156.7
  val?^           %156.10 = CastType                 up %156.6
  env             e156.11 = MkEnv              l     x=%156.10, table=%156.9, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context 1
  val?            %156.12 = Force!<lazy>       !vL   %156.10, e156.11   <val?+>
  val?            %156.13 = Force!<lazy>       !vL   %156.9, e156.11   <val?>
  val?            %156.14 = CallBuiltin        !v    match(%156.12, %156.13, 0L, nil) e156.11
  val?            %156.15 = PopContext         C     %156.14, %156.8   <int->
  lgl$#-          %156.16 = IsType                   %156.15 isA int-
  void                    Branch                   %156.16 -> BB158 (if true) | BB159 (if false)
BB157   <- [33]
  void                    Nop                !     
  val?^ | miss    %157.1 = %33.0
  dr              %157.2 = CallTarget@0x55bbe939f5c0[Call#20]
  goto BB31
BB158   <- [156]
  int-            %158.0 = CastType           d     dn %156.15
  lgl-            %158.1 = Gt                 wed   %158.0, 0L, elided   <lgl->
  val?            %158.2 = PopContext         C     %158.1, %156.2   <lgl$->
  lgl$#-          %158.3 = IsType                   %158.2 isA lgl$-
  void                    Branch                   %158.3 -> BB160 (if true) | BB161 (if false)
BB159   <- [156]
  fs              %159.0 = FrameState         R     0x55bbef55c350+1055: [], env=e124.0
  fs              %159.1 = FrameState         R     0x55bbe244d320+54: [%156.15], env=e156.5, next=%159.0
  void                    Deopt              !v    %159.1, Typecheck@0x55bbe347f688[Type#2], %156.15   !
BB160   <- [158]
  lgl$-           %160.0 = CastType           d     dn %158.2
  lgl$#-          %160.1 = CheckTrueFalse     e     %160.0
  void                    Branch                   %160.1 -> BB112 (if true) | BB38 (if false)
BB161   <- [158]
  fs              %161.0 = FrameState         R     0x55bbef55c350+1055: [%158.2], env=e124.0
  void                    Deopt              !v    %161.0, Typecheck@0x55bbe939f5c0[Type#59], %158.2   !
BB112   <- [160]
  val?^ | miss    %112.0 = LdVar              eR    y, e124.0
  val?            %112.1 = Force!             !v    %112.0, e124.0   <val?_>
  void                    StVar              lW    temp, %112.1, e124.0
  lgl$#-          %112.3 = IsType                   %112.1 isA val+   <@?>
  val             %112.4 = ChkMissing         e     %112.1
  void                    Branch                   %112.3 -> BB118 (if true) | BB115 (if false)
BB38   <- [160]
  (cls|spec|blt)  %38.0 = LdFun              !v    $, <0x55bbe1e1fc10>, e124.0
  prom-           %38.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p16, e124.0
  prom-           %38.2 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p17, e124.0
  val?            %38.3 = Call               !v    %38.0(%38.1, %38.2) e124.0   <real->
  (cls|spec|blt)  %38.4 = LdFun              !v    $, <0x55bbe1e1fc10>, e124.0
  prom-           %38.5 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p18, e124.0
  prom-           %38.6 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p19, e124.0
  val?            %38.7 = Call               !v    %38.4(%38.5, %38.6) e124.0   <real->
  lgl$#-          %38.8 = IsType                   %38.7 isA real-
  lgl$#-          %38.9 = IsType                   %38.3 isA real-
  void                    Branch                   %38.9 -> BB166 (if true) | BB167 (if false)
BB118   <- [112]
  (cls|spec|blt)  %118.0 = LdFun              !v    ncol, e124.0
  fs              %118.1 = FrameState         R     0x55bbef55c350+1171: [1, %112.1, missingArg, %118.0], env=e124.0
  void                    Deopt              !v    %118.1, DeadCall@0x55bbe939f5c0[Call#23], %118.0   !
BB115   <- [112]
  prom-           %115.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p50, e124.0
  lgl$#-          %115.1 = IsType                   %112.1 isA val?+
  void                    Branch                   %115.1 -> BB162 (if true) | BB163 (if false)
BB166   <- [38]
  real-           %166.0 = CastType           d     dn %38.3
  void                    Branch                   %38.8 -> BB168 (if true) | BB169 (if false)
BB167   <- [38]
  void                    Nop                !     
  val?            %167.1 = %38.3
  dr              %167.2 = Typecheck@0x55bbe939f5c0[Type#97]
  goto BB39
BB162   <- [115]
  val?+           %162.0 = CastType           d     dn %112.1   <val?_>
  val?            %162.1 = Extract1_2D        wed   %162.0, missingArg, %115.0, elided   <val?_>
  lgl$#-          %162.2 = IsType                   %162.1 isA val?+
  void                    Branch                   %162.2 -> BB164 (if true) | BB165 (if false)
BB163   <- [115]
  fs              %163.0 = FrameState         R     0x55bbef55c350+1094: [], env=e124.0
  void                    Deopt              !v    %163.0, Typecheck@0x55bbe939f5c0[Type#60], %112.1   !
BB168   <- [166]
  real-           %168.0 = CastType           d     dn %38.7
  real-           %168.1 = Sub                wed   %166.0, %168.0, elided   <real->
  (cls|spec|blt)  %168.2 = LdFun              !v    $, <0x55bbe1e1fc10>, e124.0
  prom-           %168.3 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p20, e124.0
  prom-           %168.4 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p21, e124.0
  val?            %168.5 = Call               !v    %168.2(%168.3, %168.4) e124.0   <real->
  lgl$#-          %168.6 = IsType                   %168.5 isA real-
  void                    Branch                   %168.6 -> BB170 (if true) | BB171 (if false)
BB169   <- [166]
  void                    Nop                !     
  val?            %169.1 = %38.7
  dr              %169.2 = Typecheck@0x55bbe939f5c0[Type#100]
  goto BB39
BB39   <- [167, 169]
  val?^ | miss    %39.0 = Phi                      %167.1:BB167, %169.1:BB169
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %167.2:BB167, %169.2:BB169
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55bbef55c350+1681: [%38.3, %38.7], env=e124.0
  void                    Deopt              !v    %39.4, %39.3, %39.1   !
BB164   <- [162]
  val?+           %164.0 = CastType           d     dn %162.1   <val?_>
  (real|complex)+ %164.1 = Sub                wed   1, %164.0, elided   <val?_>
  (cls|spec|blt)  %164.2 = LdFun              !v    ncol, e124.0
  fs              %164.3 = FrameState         R     0x55bbef55c350+1241: [%164.1, %162.0, missingArg, %164.2], env=e124.0
  void                    Deopt              !v    %164.3, DeadCall@0x55bbe939f5c0[Call#24], %164.2   !
BB165   <- [162]
  fs              %165.0 = FrameState         R     0x55bbef55c350+1204: [1, %162.1], env=e124.0
  void                    Deopt              !v    %165.0, Typecheck@0x55bbe939f5c0[Type#66], %162.1   !
BB170   <- [168]
  real-           %170.0 = CastType           d     dn %168.5
  lgl-            %170.1 = Gt                 wed   %170.0, 0, elided   <lgl->
  real-           %170.2 = Extract1_1D        wed   %168.1, %170.1, elided   <real->
  void                    StVar              lW    npair, %170.2, e124.0
  val?^ | miss    %170.4 = LdVar              eR    ifelse, e124.0
  lgl$#-          %170.5 = Identical                %170.4, function(test, yes, no) <(rir::DispatchTable*)|...
  void                    Branch                   %170.5 -> BB172 (if true) | BB173 (if false)
BB171   <- [168]
  fs              %171.0 = FrameState         R     0x55bbef55c350+1761: [%168.1, %168.5], env=e124.0
  void                    Deopt              !v    %171.0, Typecheck@0x55bbe939f5c0[Type#108], %168.5   !
BB172   <- [170]
  prom-           %172.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p22, e124.0
  prom-           %172.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p23, e124.0
  val?            %172.2 = Call               !v    function(test, yes, no) <(rir::DispatchTable*)|...(%172.0, 0, %172.1) e124.0   <real->
  void                    StVar              lW    temp, %172.2, e124.0
  val?^ | miss    %172.4 = LdVar              eR    timeopt, e124.0
  val?            %172.5 = Force!<wrapped>    !v    %172.4, e124.0   <str$->
  lgl$-           %172.6 = Is                       %172.5, logical
  lgl$-           %172.7 = Is                       %172.5, integer
  lgl$-           %172.8 = Is                       %172.5, double
  lgl$-           %172.9 = Is                       %172.5, complex
  lgl$-           %172.10 = Is                       %172.5, character   <true>
  lgl$-           %172.11 = Is                       %172.5, raw
  lgl$-           %172.12 = Is                       %172.5, list
  lgl$-           %172.13 = Is                       %172.5, expression
  lgl$-           %172.14 = LOr                      %172.13, %172.12
  lgl$-           %172.15 = LOr                      %172.14, %172.11
  lgl$-           %172.16 = LOr                      %172.15, %172.10
  lgl$-           %172.17 = LOr                      %172.16, %172.9
  lgl$-           %172.18 = LOr                      %172.17, %172.8
  lgl$-           %172.19 = LOr                      %172.18, %172.7
  lgl$-           %172.20 = LOr                      %172.19, %172.6   <true>
  lgl$#-          %172.21 = Identical                %172.20, true
  int$-           %172.22 = Length                   %172.5
  lgl$-           %172.23 = Is                       %172.5, Factor   <false>
  lgl$#-          %172.24 = Identical                %172.23, false
  lgl$#-          %172.25 = Identical                %172.10, true
  lgl$#-          %172.26 = IsType                   %172.5 isA val?-
  void                    Branch                   %172.21 -> BB174 (if true) | BB175 (if false)
BB173   <- [170]
  fs              %173.0 = FrameState         R     0x55bbef55c350+1794: [], env=e124.0
  void                    Deopt              !v    %173.0, CallTarget@0x55bbe939f5c0[Call#38], %170.4   !
BB174   <- [172]
  lgl$-           %174.0 = Eq                 d     %172.22, 1L, elided   <true>
  lgl$#-          %174.1 = Identical                %174.0, true
  void                    Branch                   %174.1 -> BB176 (if true) | BB177 (if false)
BB175   <- [172]
  void                    Nop                !     
  lgl$#-          %175.1 = %172.21
  dr              %175.2 = DeadBranchReached@0x55bbe939f5c0[Test#12]
  goto BB45
BB176   <- [174]
  void                    Branch                   %172.24 -> BB178 (if true) | BB179 (if false)
BB177   <- [174]
  void                    Nop                !     
  lgl$#-          %177.1 = %174.1
  dr              %177.2 = DeadBranchReached@0x55bbe939f5c0[Test#13]
  goto BB45
BB45   <- [175, 177, 179, 181, 183]
  val?^ | miss    %45.0 = Phi                      %175.1:BB175, %177.1:BB177, %179.1:BB179, %181.1:BB181, %183.1:BB183
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %175.2:BB175, %177.2:BB177, %179.2:BB179, %181.2:BB181, %183.2:BB183
  dr              %45.3 = %45.2
  fs              %45.4 = FrameState         R     0x55bbef55c350+1859: [%172.5], env=e124.0
  void                    Deopt              !v    %45.4, %45.3, %45.1   !
BB178   <- [176]
  void                    Branch                   %172.25 -> BB180 (if true) | BB181 (if false)
BB179   <- [176]
  void                    Nop                !     
  lgl$#-          %179.1 = %172.24
  dr              %179.2 = DeadBranchReached@0x55bbe939f5c0[Test#14]
  goto BB45
BB180   <- [178]
  void                    Branch                   %172.26 -> BB182 (if true) | BB183 (if false)
BB181   <- [178]
  void                    Nop                !     
  lgl$#-          %181.1 = %172.25
  dr              %181.2 = DeadBranchReached@0x55bbe939f5c0[Test#15]
  goto BB45
BB182   <- [180]
  val?-           %182.0 = CastType           d     dn %172.5   <str$->
  lgl-            %182.1 = CallSafeBuiltin    wed   is.na(%182.0) 
  lgl$#-          %182.2 = CheckTrueFalse     we    %182.1   <false>
  void                    Branch                   %182.2 -> BB185 (if true) | BB184 (if false)
BB183   <- [180]
  void                    Nop                !     
  val?            %183.1 = %172.5
  dr              %183.2 = Typecheck@0x55bbe939f5c0[Type#117]
  goto BB45
BB185   <- [182]
  fs              %185.0 = FrameState         R     0x55bbef55c350+2122: [%182.0, %182.2], env=e124.0
  void                    Deopt              !v    %185.0, DeadBranchReached@0x55bbe939f5c0[Test#22], %182.2   !
BB184   <- [182]
  lgl-            %184.0 = Eq                 wed   %182.0, S, elided
  lgl$#-          %184.1 = CheckTrueFalse     we    %184.0   <false>
  void                    Branch                   %184.1 -> BB187 (if true) | BB186 (if false)
BB187   <- [184]
  fs              %187.0 = FrameState         R     0x55bbef55c350+2146: [%182.0, %184.1], env=e124.0
  void                    Deopt              !v    %187.0, DeadBranchReached@0x55bbe939f5c0[Test#23], %184.1   !
BB186   <- [184]
  lgl-            %186.0 = Eq                 wed   %182.0, S/G, elided
  lgl$#-          %186.1 = CheckTrueFalse     we    %186.0   <false>
  void                    Branch                   %186.1 -> BB189 (if true) | BB188 (if false)
BB189   <- [186]
  fs              %189.0 = FrameState         R     0x55bbef55c350+2164: [%182.0, %186.1], env=e124.0
  void                    Deopt              !v    %189.0, DeadBranchReached@0x55bbe939f5c0[Test#24], %186.1   !
BB188   <- [186]
  lgl-            %188.0 = Eq                 wed   %182.0, n, elided
  lgl$#-          %188.1 = CheckTrueFalse     we    %188.0   <true>
  void                    Branch                   %188.1 -> BB190 (if true) | BB191 (if false)
BB190   <- [188]
  (cls|spec|blt)  %190.0 = LdFun              !v    rep, <0x55bbe1e349b0>, e124.0
  prom-           %190.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p24, e124.0
  val?            %190.2 = Call               !v    %190.0(1, %190.1) e124.0   <real->
  void                    StVar              lW    timewt, %190.2, e124.0
  val?^ | miss    %190.4 = LdVar              eR    ymin, e124.0
  val?            %190.5 = Force!<lazy>       !v    %190.4, e124.0   <nil->
  lgl$-           %190.6 = Is                       %190.5, NULL
  lgl$-           %190.7 = Not                d     %190.6, elided
  lgl$#-          %190.8 = CheckTrueFalse     e     %190.7
  void                    Branch                   %190.8 -> BB107 (if true) | BB55 (if false)
BB191   <- [188]
  fs              %191.0 = FrameState         R     0x55bbef55c350+2182: [%182.0, %188.1], env=e124.0
  void                    Deopt              !v    %191.0, DeadBranchReached@0x55bbe939f5c0[Test#25], %188.1   !
BB107   <- [190]
  val?^ | miss    %107.0 = LdVar              eR    timewt, e124.0
  val?            %107.1 = Force!             !v    %107.0, e124.0   <val?_>
  val?^ | miss    %107.2 = LdVar              eR    etime, e124.0
  val?            %107.3 = Force!             !v    %107.2, e124.0   <val?_>
  val?^ | miss    %107.4 = LdVar              eR    ymin, e124.0
  val?            %107.5 = Force!             !v    %107.4, e124.0   <val?_>
  lgl$#-          %107.6 = IsType                   %107.5 isA val?+
  lgl$#-          %107.7 = IsType                   %107.3 isA val?+
  void                    Branch                   %107.7 -> BB194 (if true) | BB195 (if false)
BB55   <- [190]
  void                    Nop                !     
  goto BB56
BB194   <- [107]
  val?+           %194.0 = CastType           d     dn %107.3   <val?_>
  void                    Branch                   %107.6 -> BB200 (if true) | BB201 (if false)
BB195   <- [107]
  void                    Nop                !     
  val?            %195.1 = %107.3
  dr              %195.2 = Typecheck@0x55bbe939f5c0[Type#143]
  goto BB108
BB56   <- [55, 206]
  val?^ | miss    %56.0 = LdVar              eR    ymax, e124.0
  val?            %56.1 = Force!<lazy>       !v    %56.0, e124.0   <nil->
  lgl$-           %56.2 = Is                       %56.1, NULL
  lgl$-           %56.3 = Not                d     %56.2, elided
  lgl$#-          %56.4 = CheckTrueFalse     e     %56.3
  void                    Branch                   %56.4 -> BB102 (if true) | BB57 (if false)
BB200   <- [194]
  val?+           %200.0 = CastType           d     dn %107.5   <val?_>
  lgl             %200.1 = Lt                 wed   %194.0, %200.0, elided   <val?_>
  lgl$#-          %200.2 = IsType                   %200.1 isA lgl_
  lgl$#-          %200.3 = IsType                   %107.1 isA val?+
  void                    Branch                   %200.3 -> BB204 (if true) | BB205 (if false)
BB201   <- [194]
  void                    Nop                !     
  val?            %201.1 = %107.5
  dr              %201.2 = Typecheck@0x55bbe939f5c0[Type#144]
  goto BB108
BB108   <- [195, 201]
  val?^ | miss    %108.0 = Phi                      %195.1:BB195, %201.1:BB201
  val?^ | miss    %108.1 = %108.0
  dr              %108.2 = Phi                      %195.2:BB195, %201.2:BB201
  dr              %108.3 = %108.2
  fs              %108.4 = FrameState         R     0x55bbef55c350+2776: [0, %107.1, %107.3, %107.5], env=e124.0
  void                    Deopt              !v    %108.4, %108.3, %108.1   !
BB102   <- [56]
  val?^ | miss    %102.0 = LdVar              eR    timewt, e124.0
  val?            %102.1 = Force!             !v    %102.0, e124.0   <val?_>
  val?^ | miss    %102.2 = LdVar              eR    etime, e124.0
  val?            %102.3 = Force!             !v    %102.2, e124.0   <val?_>
  val?^ | miss    %102.4 = LdVar              eR    ymax, e124.0
  val?            %102.5 = Force!             !v    %102.4, e124.0   <val?_>
  lgl$#-          %102.6 = IsType                   %102.5 isA val?+
  lgl$#-          %102.7 = IsType                   %102.3 isA val?+
  void                    Branch                   %102.7 -> BB192 (if true) | BB193 (if false)
BB57   <- [56]
  void                    Nop                !     
  goto BB58
BB204   <- [200]
  val?+           %204.0 = CastType           d     dn %107.1   <val?_>
  void                    Branch                   %200.2 -> BB206 (if true) | BB207 (if false)
BB205   <- [200]
  void                    Nop                !     
  val?            %205.1 = %107.1
  dr              %205.2 = Typecheck@0x55bbe939f5c0[Type#142]
  goto BB110
BB192   <- [102]
  val?+           %192.0 = CastType           d     dn %102.3   <val?_>
  void                    Branch                   %102.6 -> BB198 (if true) | BB199 (if false)
BB193   <- [102]
  void                    Nop                !     
  val?            %193.1 = %102.3
  dr              %193.2 = Typecheck@0x55bbe939f5c0[Type#148]
  goto BB103
BB58   <- [57, 212]
  val?^ | miss    %58.0 = LdVar              eR    ifelse, e124.0
  lgl$#-          %58.1 = Identical                %58.0, function(test, yes, no) <(rir::DispatchTable*)|...
  void                    Branch                   %58.1 -> BB196 (if true) | BB197 (if false)
BB206   <- [204]
  lgl_            %206.0 = CastType           d     dn %200.1
  val?+           %206.1 = Subassign1_1D      wed   0, %204.0, %206.0, elided
  void                    StVar              lW    timewt, %206.1, e124.0
  goto BB56
BB207   <- [204]
  void                    Nop                !     
  lgl             %207.1 = %200.1
  dr              %207.2 = Typecheck@0x55bbe939f5c0[Type#145]
  goto BB110
BB110   <- [205, 207]
  val?^ | miss    %110.0 = Phi                      %205.1:BB205, %207.1:BB207
  val?^ | miss    %110.1 = %110.0
  dr              %110.2 = Phi                      %205.2:BB205, %207.2:BB207
  dr              %110.3 = %110.2
  fs              %110.4 = FrameState         R     0x55bbef55c350+2782: [0, %107.1, %200.1], env=e124.0
  void                    Deopt              !v    %110.4, %110.3, %110.1   !
BB198   <- [192]
  val?+           %198.0 = CastType           d     dn %102.5   <val?_>
  lgl             %198.1 = Gt                 wed   %192.0, %198.0, elided   <val?_>
  lgl$#-          %198.2 = IsType                   %198.1 isA lgl_
  lgl$#-          %198.3 = IsType                   %102.1 isA val?+
  void                    Branch                   %198.3 -> BB210 (if true) | BB211 (if false)
BB199   <- [192]
  void                    Nop                !     
  val?            %199.1 = %102.5
  dr              %199.2 = Typecheck@0x55bbe939f5c0[Type#149]
  goto BB103
BB103   <- [193, 199]
  val?^ | miss    %103.0 = Phi                      %193.1:BB193, %199.1:BB199
  val?^ | miss    %103.1 = %103.0
  dr              %103.2 = Phi                      %193.2:BB193, %199.2:BB199
  dr              %103.3 = %103.2
  fs              %103.4 = FrameState         R     0x55bbef55c350+2871: [0, %102.1, %102.3, %102.5], env=e124.0
  void                    Deopt              !v    %103.4, %103.3, %103.1   !
BB196   <- [58]
  prom-           %196.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p26, e124.0
  prom-           %196.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p28, e124.0
  val?            %196.2 = Call               !v    function(test, yes, no) <(rir::DispatchTable*)|...(%196.0, %196.1, 0) e124.0   <real->
  void                    StVar              lW    timewt, %196.2, e124.0
  val?^ | miss    %196.4 = LdVar              eR    ncol, e124.0
  lgl$#-          %196.5 = Identical                %196.4, function(x) <(rir::DispatchTable*)0x55bbe42ddf|...
  void                    Branch                   %196.5 -> BB202 (if true) | BB203 (if false)
BB197   <- [58]
  fs              %197.0 = FrameState         R     0x55bbef55c350+2892: [], env=e124.0
  void                    Deopt              !v    %197.0, CallTarget@0x55bbe939f5c0[Call#45], %58.0   !
BB210   <- [198]
  val?+           %210.0 = CastType           d     dn %102.1   <val?_>
  void                    Branch                   %198.2 -> BB212 (if true) | BB213 (if false)
BB211   <- [198]
  void                    Nop                !     
  val?            %211.1 = %102.1
  dr              %211.2 = Typecheck@0x55bbe939f5c0[Type#147]
  goto BB105
BB202   <- [196]
  prom-           %202.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p29, e124.0
  ct              %202.1 = PushContext        lCL   %202.0, ncol(y), function(x) <(rir::DispatchTable*)0x55bbe42ddf|..., e124.0
  val?^           %202.2 = CastType                 up %202.0
  env             e202.3 = MkEnv              l     x=%202.2, parent=R_BaseNamespace, context 1
  val?            %202.4 = Force!<lazy>       !vL   %202.2, e202.3   <val?>
  val?            %202.5 = CallBuiltin        !v    dim(%202.4) e202.3   <int->
  lgl$#-          %202.6 = IsType                   %202.5 isA val+   <true>
  lgl$#-          %202.7 = IsType                   %202.5 isA int-
  void                    Branch                   %202.6 -> BB208 (if true) | BB209 (if false)
BB203   <- [196]
  fs              %203.0 = FrameState         R     0x55bbef55c350+2948: [], env=e124.0
  void                    Deopt              !v    %203.0, CallTarget@0x55bbe939f5c0[Call#47], %196.4   !
BB212   <- [210]
  lgl_            %212.0 = CastType           d     dn %198.1
  val?+           %212.1 = Subassign1_1D      wed   0, %210.0, %212.0, elided
  void                    StVar              lW    timewt, %212.1, e124.0
  goto BB58
BB213   <- [210]
  void                    Nop                !     
  lgl             %213.1 = %198.1
  dr              %213.2 = Typecheck@0x55bbe939f5c0[Type#150]
  goto BB105
BB105   <- [211, 213]
  val?^ | miss    %105.0 = Phi                      %211.1:BB211, %213.1:BB213
  val?^ | miss    %105.1 = %105.0
  dr              %105.2 = Phi                      %211.2:BB211, %213.2:BB213
  dr              %105.3 = %105.2
  fs              %105.4 = FrameState         R     0x55bbef55c350+2877: [0, %102.1, %198.1], env=e124.0
  void                    Deopt              !v    %105.4, %105.3, %105.1   !
BB208   <- [202]
  void                    Branch                   %202.7 -> BB214 (if true) | BB215 (if false)
BB209   <- [202]
  void                    Nop                !     
  lgl$#-          %209.1 = %202.6
  dr              %209.2 = DeadBranchReached@0x55bbe30b3ee8[Test#1]
  goto BB63
BB214   <- [208]
  int-            %214.0 = CastType           d     dn %202.5
  int$-           %214.1 = Extract1_1D        wed   %214.0, 2L, elided   <int$->
  val?            %214.2 = PopContext         C     %214.1, %202.1   <int$->
  lgl$#-          %214.3 = IsType                   %214.2 isA int$-
  void                    Branch                   %214.3 -> BB216 (if true) | BB217 (if false)
BB215   <- [208]
  void                    Nop                !     
  val?            %215.1 = %202.5
  dr              %215.2 = Typecheck@0x55bbe30b3ee8[Type#2]
  goto BB63
BB63   <- [209, 215]
  val?^ | miss    %63.0 = Phi                      %209.1:BB209, %215.1:BB215
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %209.2:BB209, %215.2:BB215
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x55bbef55c350+2980: [], env=e124.0
  fs              %63.5 = FrameState         R     0x55bbe45ee540+91: [%202.5], env=e202.3, next=%63.4
  void                    Deopt              !v    %63.5, %63.3, %63.1   !
BB216   <- [214]
  int$-           %216.0 = CastType           d     dn %214.2
  lgl$-           %216.1 = Eq                 d     %216.0, 2, elided   <lgl$->
  lgl$#-          %216.2 = CheckTrueFalse     e     %216.1
  void                    Branch                   %216.2 -> BB68 (if true) | BB67 (if false)
BB217   <- [214]
  void                    Nop                !     
  val?            %217.1 = %214.2
  dr              %217.2 = Typecheck@0x55bbe939f5c0[Type#156]
  goto BB65
BB68   <- [216]
  val?^ | miss    %68.0 = LdVar              eR    order, e124.0
  lgl$#-          %68.1 = Identical                %68.0, function(..., na.last=TRUE, decreasing=FALSE, |...
  void                    Branch                   %68.1 -> BB218 (if true) | BB219 (if false)
BB67   <- [216]
  (cls|spec|blt)  %67.0 = LdFun              !v    order, e124.0
  fs              %67.1 = FrameState         R     0x55bbef55c350+3008: [%67.0], env=e124.0
  void                    Deopt              !v    %67.1, DeadCall@0x55bbe939f5c0[Call#48], %67.0   !
BB65   <- [217, 219]
  val?^ | miss    %65.0 = Phi                      %217.1:BB217, %219.1:BB219
  val?^ | miss    %65.1 = %65.0
  dr              %65.2 = Phi                      %217.2:BB217, %219.2:BB219
  dr              %65.3 = %65.2
  fs              %65.4 = FrameState         R     0x55bbef55c350+2980: [%214.2], env=e124.0
  void                    Deopt              !v    %65.4, %65.3, %65.1   !
BB218   <- [68]
  prom-           %218.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p30, e124.0
  prom-           %218.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p31, e124.0
  prom-           %218.2 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p32, e124.0
  val?            %218.3 = Call               !v    function(..., na.last=TRUE, decreasing=FALSE, |...(%218.0, %218.1, %218.2) e124.0   <int->
  lgl$#-          %218.4 = IsType                   %218.3 isA int-
  void                    Branch                   %218.4 -> BB220 (if true) | BB221 (if false)
BB219   <- [68]
  void                    Nop                !     
  val?^ | miss    %219.1 = %68.0
  dr              %219.2 = CallTarget@0x55bbe939f5c0[Call#50]
  goto BB65
BB220   <- [218]
  int-            %220.0 = CastType           d     dn %218.3
  int-            %220.1 = Sub                wed   %220.0, 1L, elided   <int->
  void                    StVar              lW    sort.stop, %220.1, e124.0
  val?^ | miss    %220.3 = LdVar              eR    match, e124.0
  lgl$#-          %220.4 = Identical                %220.3, function(x, table, nomatch=NA, incomparables=N|...
  void                    Branch                   %220.4 -> BB222 (if true) | BB223 (if false)
BB221   <- [218]
  fs              %221.0 = FrameState         R     0x55bbef55c350+3176: [%218.3], env=e124.0
  void                    Deopt              !v    %221.0, Typecheck@0x55bbe939f5c0[Type#174], %218.3   !
BB222   <- [220]
  prom-           %222.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p33, e124.0
  prom-           %222.1 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p34, e124.0
  ct              %222.2 = PushContext        lCL   %222.0, %222.1, match(risk, sort(unique(risk))), function(x, table, nomatch=NA, incomparables=N|..., e124.0
  val?^           %222.3 = CastType                 up %222.1
  val?^           %222.4 = CastType                 up %222.0
  env             e222.5 = MkEnv              l     x=%222.4, table=%222.3, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 1
  val?            %222.6 = Force!<lazy>       !vL   %222.4, e222.5   <val?+>
  val?            %222.7 = Force!<lazy>       !vL   %222.3, e222.5   <val?>
  val?            %222.8 = CallBuiltin        !v    match(%222.6, %222.7, NA, nil) e222.5
  val?            %222.9 = PopContext         C     %222.8, %222.2   <int->
  void                    StVar              lW    utemp, %222.9, e124.0
  val?^ | miss    %222.11 = LdVar              eR    btree, e124.0
  lgl$#-          %222.12 = Identical                %222.11, function(n) <(rir::DispatchTable*)0x55bbec1c90|...
  void                    Branch                   %222.12 -> BB224 (if true) | BB225 (if false)
BB223   <- [220]
  fs              %223.0 = FrameState         R     0x55bbef55c350+3202: [], env=e124.0
  void                    Deopt              !v    %223.0, CallTarget@0x55bbe939f5c0[Call#51], %220.3   !
BB224   <- [222]
  prom-           %224.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p37, e124.0
  ct              %224.1 = PushContext        lCL   %224.0, btree(max(utemp)), function(n) <(rir::DispatchTable*)0x55bbec1c90|..., e124.0
  val?^           %224.2 = CastType                 up %224.0
  env             e224.3 = MkEnv              l     n=%224.2, parent=<env 0x55bbe479cb88>, context 1
  cls             %224.4 = MkCls                    tfun, e224.3
  void                    StVar              lW    tfun, %224.4, e224.3
  prom-           %224.6 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p57, e224.3
  prom-           %224.7 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p59, e224.3
  val?            %224.8 = StaticCall         !v    tfun[0x55bbe5ada190](%224.6, 0L, %224.7) from %224.4 e224.3   <int->
  val?            %224.9 = PopContext         C     %224.8, %224.1   <int->
  lgl$#-          %224.10 = IsType                   %224.9 isA val+   <true>
  lgl$#-          %224.11 = IsType                   %224.9 isA int-
  void                    Branch                   %224.10 -> BB226 (if true) | BB227 (if false)
BB225   <- [222]
  fs              %225.0 = FrameState         R     0x55bbef55c350+3253: [], env=e124.0
  void                    Deopt              !v    %225.0, CallTarget@0x55bbe939f5c0[Call#54], %222.11   !
BB226   <- [224]
  val?^ | miss    %226.0 = LdVar              eR    utemp, e124.0
  lgl$#-          %226.1 = IsType                   %226.0 isA int-
  void                    Branch                   %226.1 -> BB228 (if true) | BB229 (if false)
BB227   <- [224]
  void                    Nop                !     
  lgl$#-          %227.1 = %224.10
  dr              %227.2 = DeadBranchReached@0x55bbe939f5c0[Test#36]
  goto BB75
BB228   <- [226]
  int-            %228.0 = CastType           d     dn %226.0
  void                    Branch                   %224.11 -> BB230 (if true) | BB231 (if false)
BB229   <- [226]
  void                    Nop                !     
  val?^ | miss    %229.1 = %226.0
  dr              %229.2 = Typecheck@0x55bbe939f5c0[Type#185]
  goto BB75
BB75   <- [227, 229, 231]
  val?^ | miss    %75.0 = Phi                      %227.1:BB227, %229.1:BB229, %231.1:BB231
  val?^ | miss    %75.1 = %75.0
  dr              %75.2 = Phi                      %227.2:BB227, %229.2:BB229, %231.2:BB231
  dr              %75.3 = %75.2
  fs              %75.4 = FrameState         R     0x55bbef55c350+3285: [%224.9], env=e124.0
  void                    Deopt              !v    %75.4, %75.3, %75.1   !
BB230   <- [228]
  int-            %230.0 = CastType           d     dn %224.9
  int-            %230.1 = Extract1_1D        wed   %230.0, %228.0, elided   <int->
  void                    StVar              lW    bindex, %230.1, e124.0
  (cls|spec|blt)  %230.3 = LdFun              !v    storage.mode<-, <0x55bbe1e2cac8>, e124.0
  val?^ | miss    %230.4 = LdVar              eR    y, e124.0
  val?            %230.5 = Force!<wrapped>    !v    %230.4, e124.0   <real>
  val?            %230.6 = NamedCall          !v    %230.3(%230.5, value="double") e124.0
  void                    StVar              lW    y, %230.6, e124.0
  (cls|spec|blt)  %230.8 = LdFun              !v    storage.mode<-, <0x55bbe1e2cac8>, e124.0
  val?^ | miss    %230.9 = LdVar              eR    wts, e124.0
  val?            %230.10 = Force!<wrapped>    !v    %230.9, e124.0   <real->
  val?            %230.11 = NamedCall          !v    %230.8(%230.10, value="double") e124.0
  void                    StVar              lW    wts, %230.11, e124.0
  val?^ | miss    %230.13 = LdVar              eR    ncol, e124.0
  lgl$#-          %230.14 = Identical                %230.13, function(x) <(rir::DispatchTable*)0x55bbe42ddf|...
  void                    Branch                   %230.14 -> BB232 (if true) | BB233 (if false)
BB231   <- [228]
  void                    Nop                !     
  val?            %231.1 = %224.9
  dr              %231.2 = Typecheck@0x55bbe939f5c0[Type#183]
  goto BB75
BB232   <- [230]
  prom-           %232.0 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p41, e124.0
  ct              %232.1 = PushContext        lCL   %232.0, ncol(y), function(x) <(rir::DispatchTable*)0x55bbe42ddf|..., e124.0
  val?^           %232.2 = CastType                 up %232.0
  env             e232.3 = MkEnv              l     x=%232.2, parent=R_BaseNamespace, context 1
  val?            %232.4 = Force!<lazy>       !vL   %232.2, e232.3   <val?>
  val?            %232.5 = CallBuiltin        !v    dim(%232.4) e232.3   <int->
  lgl$#-          %232.6 = IsType                   %232.5 isA val+   <true>
  lgl$#-          %232.7 = IsType                   %232.5 isA int-
  void                    Branch                   %232.6 -> BB234 (if true) | BB235 (if false)
BB233   <- [230]
  fs              %233.0 = FrameState         R     0x55bbef55c350+3499: [], env=e124.0
  void                    Deopt              !v    %233.0, CallTarget@0x55bbe939f5c0[Call#58], %230.13   !
BB234   <- [232]
  void                    Branch                   %232.7 -> BB236 (if true) | BB237 (if false)
BB235   <- [232]
  void                    Nop                !     
  lgl$#-          %235.1 = %232.6
  dr              %235.2 = DeadBranchReached@0x55bbe30b3ee8[Test#1]
  goto BB79
BB236   <- [234]
  int-            %236.0 = CastType           d     dn %232.5
  int$-           %236.1 = Extract1_1D        wed   %236.0, 2L, elided   <int$->
  val?            %236.2 = PopContext         C     %236.1, %232.1   <int$->
  lgl$#-          %236.3 = IsType                   %236.2 isA int$-
  void                    Branch                   %236.3 -> BB238 (if true) | BB239 (if false)
BB237   <- [234]
  void                    Nop                !     
  val?            %237.1 = %232.5
  dr              %237.2 = Typecheck@0x55bbe30b3ee8[Type#2]
  goto BB79
BB79   <- [235, 237]
  val?^ | miss    %79.0 = Phi                      %235.1:BB235, %237.1:BB237
  val?^ | miss    %79.1 = %79.0
  dr              %79.2 = Phi                      %235.2:BB235, %237.2:BB237
  dr              %79.3 = %79.2
  fs              %79.4 = FrameState         R     0x55bbef55c350+3531: [], env=e124.0
  fs              %79.5 = FrameState         R     0x55bbe45ee540+91: [%232.5], env=e232.3, next=%79.4
  void                    Deopt              !v    %79.5, %79.3, %79.1   !
BB238   <- [236]
  int$-           %238.0 = CastType           d     dn %236.2
  lgl$-           %238.1 = Eq                 d     %238.0, 2, elided   <lgl$->
  lgl$#-          %238.2 = CheckTrueFalse     e     %238.1
  void                    Branch                   %238.2 -> BB86 (if true) | BB83 (if false)
BB239   <- [236]
  void                    Nop                !     
  val?            %239.1 = %236.2
  dr              %239.2 = Typecheck@0x55bbe939f5c0[Type#190]
  goto BB81
BB86   <- [238]
  val?^ | miss    %86.0 = LdVar              eR    .Call, e124.0
  lgl$#-          %86.1 = Identical                <blt .Call>, %86.0   <true>
  void                    Branch                   %86.1 -> BB240 (if true) | BB241 (if false)
BB83   <- [238]
  val?^ | miss    %83.0 = LdVar              eR    .Call, e124.0
  lgl$#-          %83.1 = Identical                <blt .Call>, %83.0   <@?>
  void                    Branch                   %83.1 -> BB85 (if true) | BB84 (if false)
BB81   <- [239, 241]
  val?^ | miss    %81.0 = Phi                      %239.1:BB239, %241.1:BB241
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %239.2:BB239, %241.2:BB241
  dr              %81.3 = %81.2
  fs              %81.4 = FrameState         R     0x55bbef55c350+3531: [%236.2], env=e124.0
  void                    Deopt              !v    %81.4, %81.3, %81.1   !
BB240   <- [86]
  val?^ | miss    %240.0 = LdVar              eR    Cconcordance3, e124.0
  val?            %240.1 = Force!<value>      !v    %240.0, e124.0   <vec>
  val?^ | miss    %240.2 = LdVar              eR    y, e124.0
  val?            %240.3 = Force!<value>      !v    %240.2, e124.0   <real>
  val?^ | miss    %240.4 = LdVar              eR    bindex, e124.0
  lgl$#-          %240.5 = IsType                   %240.4 isA int-
  void                    Branch                   %240.5 -> BB242 (if true) | BB243 (if false)
BB241   <- [86]
  void                    Nop                !     
  lgl$#-          %241.1 = %86.1
  dr              %241.2 = DeadBranchReached@0x55bbe939f5c0[Test#38]
  goto BB81
BB85   <- [83]
  val?^ | miss    %85.0 = LdVar              eR    Cconcordance4, e124.0
  val?            %85.1 = Force!             !v    %85.0, e124.0   <val?_>
  val?^ | miss    %85.2 = LdVar              eR    y, e124.0
  val?            %85.3 = Force!             !v    %85.2, e124.0   <val?_>
  val?^ | miss    %85.4 = LdVar              eR    bindex, e124.0
  val?            %85.5 = Force!             !v    %85.4, e124.0   <val?_>
  val?^ | miss    %85.6 = LdVar              eR    wts, e124.0
  val?            %85.7 = Force!             !v    %85.6, e124.0   <val?_>
  (cls|spec|blt)  %85.8 = LdFun              !v    rev, e124.0
  fs              %85.9 = FrameState         R     0x55bbef55c350+3710: [<blt .Call>, %85.1, %85.3, %85.5, %85.7, %85.8], env=e124.0
  void                    Deopt              !v    %85.9, DeadCall@0x55bbe939f5c0[Call#61], %85.8   !
BB84   <- [83]
  (cls|spec|blt)  %84.0 = LdFun              !v    .Call, e124.0
  fs              %84.1 = FrameState         R     0x55bbef55c350+3582: [%84.0], env=e124.0
  void                    Deopt              !v    %84.1, DeadCall@0x55bbe939f5c0[Call#59], %84.0   !
BB242   <- [240]
  int-            %242.0 = CastType           d     dn %240.4
  val?^ | miss    %242.1 = LdVar              eR    wts, e124.0
  val?            %242.2 = Force!<value>      !v    %242.1, e124.0   <real->
  val?^ | miss    %242.3 = LdVar              eR    rev, e124.0
  lgl$#-          %242.4 = Identical                %242.3, function(x) <(rir::DispatchTable*)0x55bbebe923|...
  void                    Branch                   %242.4 -> BB244 (if true) | BB245 (if false)
BB243   <- [240]
  fs              %243.0 = FrameState         R     0x55bbef55c350+3933: [<blt .Call>, %240.1, %240.3], env=e124.0
  void                    Deopt              !v    %243.0, Typecheck@0x55bbe939f5c0[Type#221], %240.4   !
BB244   <- [242]
  val?^ | miss    %244.0 = LdVar              eR    timewt, e124.0
  lgl$#-          %244.1 = IsType                   %244.0 isA real-
  void                    Branch                   %244.1 -> BB246 (if true) | BB247 (if false)
BB245   <- [242]
  void                    Nop                !     
  val?^ | miss    %245.1 = %242.3
  dr              %245.2 = CallTarget@0x55bbe939f5c0[Call#64]
  goto BB89
BB246   <- [244]
  real-           %246.0 = CastType           d     dn %244.0
  ct              %246.1 = PushContext        lCL   %246.0, rev(timewt), function(x) <(rir::DispatchTable*)0x55bbf09e62|..., e124.0
  real$-          %246.2 = CallSafeBuiltin    wed   length(%246.0)    <val?_>
  lgl$#-          %246.3 = CheckTrueFalse     e     %246.2
  env             e246.4 = (MkEnv)            l     x=%246.0, parent=R_BaseNamespace, context 1
  void                    Branch                   %246.3 -> BB99 (if true) | BB91 (if false)
BB247   <- [244]
  void                    Nop                !     
  val?^ | miss    %247.1 = %244.0
  dr              %247.2 = Typecheck@0x55bbe939f5c0[Type#223]
  goto BB89
BB89   <- [245, 247]
  val?^ | miss    %89.0 = Phi                      %245.1:BB245, %247.1:BB247
  val?^ | miss    %89.1 = %89.0
  dr              %89.2 = Phi                      %245.2:BB245, %247.2:BB247
  dr              %89.3 = %89.2
  fs              %89.4 = FrameState         R     0x55bbef55c350+3961: [<blt .Call>, %240.1, %240.3, %242.0, %242.2], env=e124.0
  void                    Deopt              !v    %89.4, %89.3, %89.1   !
BB99   <- [246]
  val?            %99.0 = CallBuiltin        !vL   length(%246.0) e246.4   <val?_>
  lgl$#-          %99.1 = IsType                   %99.0 isA val?+
  lgl$#-          %99.2 = IsEnvStub          R     , e246.4
  void                    Branch                   %99.2 -> BB250 (if true) | BB251 (if false)
BB91   <- [246]
  void                    Nop                !     
  real-           %91.1 = %246.0
  goto BB92
BB250   <- [99]
  void                    Branch                   %99.1 -> BB252 (if true) | BB253 (if false)
BB251   <- [99]
  void                    Nop                !     
  env             e251.1 = e246.4
  dr              %251.2 = EnvStubMaterialized@0x55bbe8ba8218[Call#unknown]
  goto BB100
BB92   <- [91, 252]
  real-           %92.0 = Phi                      %91.1:BB91, %252.3:BB252
  real-           %92.1 = %92.0
  val?            %92.2 = PopContext         C     %92.1, %246.1   <real->
  val?^ | miss    %92.3 = LdVar              eR    sort.stop, e124.0
  lgl$#-          %92.4 = IsType                   %92.3 isA int-
  void                    Branch                   %92.4 -> BB248 (if true) | BB249 (if false)
BB252   <- [250]
  val?+           %252.0 = CastType           d     dn %99.0   <val?_>
  (int|real|complex)+ %252.1 = Colon              wed   %252.0, 1L, elided   <val?_>
  real-           %252.2 = Extract1_1D        wed   %246.0, %252.1, elided   <val?_>
  real-           %252.3 = %252.2
  goto BB92
BB253   <- [250]
  void                    Nop                !     
  val?            %253.1 = %99.0
  dr              %253.2 = Typecheck@0x55bbe8ba8218[Type#10]
  goto BB100
BB100   <- [251, 253]
  val?^ | miss    %100.0 = Phi                      e251.1:BB251, %253.1:BB253
  val?^ | miss    %100.1 = %100.0
  dr              %100.2 = Phi                      %251.2:BB251, %253.2:BB253
  dr              %100.3 = %100.2
  fs              %100.4 = FrameState         R     0x55bbef55c350+3998: [<blt .Call>, %240.1, %240.3, %242.0, %242.2], env=e124.0
  fs              %100.5 = FrameState         R     0x55bbebc8cd80+257: [%246.0, %99.0], env=e246.4, next=%100.4
  void                    Deopt              !v    %100.5, %100.3, %100.1   !
BB248   <- [92]
  int-            %248.0 = CastType           d     dn %92.3
  val?^ | miss    %248.1 = LdVar              eR    ranks, e124.0
  val?            %248.2 = Force!<lazy>       !v    %248.1, e124.0   <lgl$->
  val?            %248.3 = CallBuiltin        !v    .Call(%240.1, %240.3, %242.0, %242.2, %92.2, %248.0, %248.2) e124.0   <vec+>
  void                    StVar              lW    fit, %248.3, e124.0
  (cls|spec|blt)  %248.5 = LdFun              !v    <-, <0x55bbe1e14da8>, e124.0
  prom-           %248.6 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p44, e124.0
  prom-           %248.7 = MkArg                    unboundValue, docount[0x55bbf0004d30]_p48, e124.0
  val?            %248.8 = Call               !v    %248.5(%248.6, %248.7) e124.0
  val?^ | miss    %248.9 = LdVar              eR    ranks, e124.0
  val?            %248.10 = Force!<wrapped>    !v    %248.9, e124.0   <lgl$->
  lgl$#-          %248.11 = CheckTrueFalse     we    %248.10
  void                    Branch                   %248.11 -> BB98 (if true) | BB97 (if false)
BB249   <- [92]
  fs              %249.0 = FrameState         R     0x55bbef55c350+3998: [<blt .Call>, %240.1, %240.3, %242.0, %242.2, %92.2], env=e124.0
  void                    Deopt              !v    %249.0, Typecheck@0x55bbe939f5c0[Type#225], %92.3   !
BB98   <- [248]
  (cls|spec|blt)  %98.0 = LdFun              !v    ncol, e124.0
  fs              %98.1 = FrameState         R     0x55bbef55c350+4130: [%98.0], env=e124.0
  void                    Deopt              !v    %98.1, DeadCall@0x55bbe939f5c0[Call#70], %98.0   !
BB97   <- [248]
  val?^ | miss    %97.0 = LdVar              eR    fit, e124.0
  lgl$#-          %97.1 = IsType                   %97.0 isA val?~+ | miss
  void                    Branch                   %97.1 -> BB254 (if true) | BB255 (if false)
BB254   <- [97]
  val?~+ | miss   %254.0 = CastType           d     dn %97.0
  void                    Visible            v     
  val?+           %254.2 = Force!<value>            %254.0,    <vec+>
  void                    Return             l     %254.2
BB255   <- [97]
  fs              %255.0 = FrameState         R     0x55bbef55c350+4115: [%248.11], env=e124.0
  void                    Deopt              !v    %255.0, Typecheck@0x55bbe939f5c0[Type#273], %97.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     ncol, <0x55bbe2fa7cc0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     ~, <0x55bbe1e20ef0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 1) e0.0   <code>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    wts, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    timefix, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sfit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    time, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sfit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n.event, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sfit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    surv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sfit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n.event, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    timeopt, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, <0x55bbe1e20940>, e0.0
  val?            %0.2  = Call               !     %0.1("S/G", "n/G", "n/G2") e0.0   <str->
  void                    Return             l     %0.2
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sfit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n.risk, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sfit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n.event, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sfit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n.event, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    esurv, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real->
  void                    Visible            v     
  val?            %0.4  = Eq                 !     %0.2, 0, e0.0   <lgl->
  void                    Return             l     %0.4
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    esurv, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <real->
  val?^ | miss    %0.3  = LdVar              eR    npair, e0.0
  void                    Visible            v     
  val?            %0.5  = Force<value>       !     %0.3, e0.0   <real->
  val?            %0.6  = Div                !     %0.2, %0.5, e0.0   <real->
  void                    Return             l     %0.6
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p25, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    npair, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     is.finite, <0x55bbe1e34f98>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p27, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    timewt, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    timewt, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <real>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 1, e0.0   <real+>
  void                    Visible            v     
  val?            %0.5  = Minus              !     %0.3, e0.0
  void                    Return             l     %0.5
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <real>
  val?            %0.3  = Extract1_2D        !v    %0.2, missingArg, 2, e0.0   <real+>
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    risk, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    risk, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     sort, <0x55bbe37a85f8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p35, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     unique, <0x55bbe216d430>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p36, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    risk, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     max, <0x55bbe1e2d580>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p38, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    utemp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     dimnames, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p45, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     $, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p46, e0.0
  prom-           %0.3  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p47, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    fit, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    influence, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     list, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p49, e0.0
  val?            %0.3  = Call               !     %0.1(nil, %0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     c, e0.0
  val?            %0.2  = Call               !     %0.1("concordant", "discordant", "tied.x", "tied.y", "tied.xy") e0.0   <val?_>
  void                    Return             l     %0.2
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     ncol, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p51, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    temp, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.integer, <0x55bbe1e2d008>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p58, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.integer, <0x55bbe1e2d008>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p60, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <int$->
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    floor, <0x55bbe1e25a50>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p61, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <real$->
  void                    Visible            v     
  val?            %0.5  = Pow                !     2, %0.3, e0.0   <real$->
  void                    Return             l     %0.5
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     logb, <0x55bbefd36838>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, docount[0x55bbf0004d30]_p62, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, 2) e0.0   <real$->
  void                    Return             l     %0.3
Prom 62:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    n, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <int$->
  void                    Visible            v     
  val?            %0.4  = Sub                !     %0.2, 1, e0.0   <real$->
  void                    Return             l     %0.4

│ docount[0x55bbf0004d30]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
