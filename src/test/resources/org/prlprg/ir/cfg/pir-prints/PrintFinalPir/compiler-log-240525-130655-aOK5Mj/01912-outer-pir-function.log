
┌──────────────────────────────────────────────────────────────────────────────┐
│ outer[0x55bbf03d8260]                                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2 miss: 1        │
│ Properties:  ForceOrd: 0                                                     │
├────── Final PIR Version
outer[0x55bbf03d8260]
BB0
  val?~+          %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     X=%0.2, Y=%0.1, FUN=%0.0, ...(miss)=missingArg, parent=R_BaseNamespace, context 1
  val?            %0.4  = Force!<lazy>       !v    %0.2, e0.3   <(int|real)->
  lgl$#-          %0.5  = IsType                   %0.4 isA val?-
  void                    Branch                   %0.5 -> BB112 (if true) | BB113 (if false)
BB112   <- [0]
  val?-           %112.0 = CastType           d     dn %0.4   <(int|real)->
  lgl$#-          %112.1 = CallSafeBuiltin    wed   is.array(%112.0)    <lgl$->
  void                    Branch                   %112.1 -> BB104 (if true) | BB5 (if false)
BB113   <- [0]
  fs              %113.0 = FrameState         R     0x55bbeeea3430+69: [<blt is.array>, %0.4], env=e0.3
  void                    Deopt              !v    %113.0, Typecheck@0x55bbe791bd00[Type#1], %0.4   !
BB104   <- [112]
  val?^ | miss    %104.0 = LdVar              eR    dim, e0.3
  lgl$#-          %104.1 = Identical                <blt dim>, %104.0   <@?>
  void                    Branch                   %104.1 -> BB106 (if true) | BB105 (if false)
BB5   <- [112]
  val?^ | miss    %5.0  = LdVar              eR    length, e0.3
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <true>
  void                    Branch                   %5.1 -> BB114 (if true) | BB115 (if false)
BB106   <- [104]
  val?^ | miss    %106.0 = LdVar              eR    X, e0.3
  val?            %106.1 = Force!             !v    %106.0, e0.3   <val?_>
  lgl$#-          %106.2 = IsType                   %106.1 isA val?+
  void                    Branch                   %106.2 -> BB116 (if true) | BB117 (if false)
BB105   <- [104]
  (cls|spec|blt)  %105.0 = LdFun              !v    dim, e0.3
  fs              %105.1 = FrameState         R     0x55bbeeea3430+563: [%105.0], env=e0.3
  void                    Deopt              !v    %105.1, DeadCall@0x55bbe791bd00[Call#6], %105.0   !
BB114   <- [5]
  val?^ | miss    %114.0 = LdVar              eR    X, e0.3
  val?            %114.1 = Force!<wrapped>    !v    %114.0, e0.3   <(int|real)->
  lgl$#-          %114.2 = IsType                   %114.1 isA val?-
  void                    Branch                   %114.2 -> BB118 (if true) | BB119 (if false)
BB115   <- [5]
  fs              %115.0 = FrameState         R     0x55bbeeea3430+91: [%112.1], env=e0.3
  void                    Deopt              !v    %115.0, DeadBranchReached@0x55bbe791bd00[Test#1], %5.1   !
BB116   <- [106]
  val?+           %116.0 = CastType           d     dn %106.1   <val?_>
  val+            %116.1 = CallSafeBuiltin    wed   dim(%116.0)    <val?_>
  void                    StVar              lW    dX, %116.1, e0.3
  val?^ | miss    %116.3 = LdVar              eR    dimnames, e0.3
  lgl$#-          %116.4 = Identical                <blt dimnames>, %116.3   <@?>
  void                    Branch                   %116.4 -> BB110 (if true) | BB109 (if false)
BB117   <- [106]
  fs              %117.0 = FrameState         R     0x55bbeeea3430+604: [<blt dim>, %106.1], env=e0.3
  void                    Deopt              !v    %117.0, Typecheck@0x55bbe791bd00[Type#17], %106.1   !
BB118   <- [114]
  val?-           %118.0 = CastType           d     dn %114.1   <(int|real)->
  (int|real)$-    %118.1 = CallSafeBuiltin    wed   length(%118.0)    <int$->
  lgl$#-          %118.2 = IsType                   %118.1 isA int$-
  void                    Branch                   %118.2 -> BB120 (if true) | BB121 (if false)
BB119   <- [114]
  fs              %119.0 = FrameState         R     0x55bbeeea3430+171: [<blt length>, %114.1], env=e0.3
  void                    Deopt              !v    %119.0, Typecheck@0x55bbe791bd00[Type#4], %114.1   !
BB110   <- [116]
  val?^ | miss    %110.0 = LdVar              eR    X, e0.3
  val?            %110.1 = Force!             !v    %110.0, e0.3   <val?_>
  val?            %110.2 = CallBuiltin        !v    dimnames(%110.1) e0.3   <val?_>
  lgl$-           %110.3 = Is                       %110.2, NULL
  void                    StVar              lW    nx, %110.2, e0.3
  val             %110.5 = ChkMissing         e     %110.2
  void                    StVar              lW    no.nx, %110.3, e0.3
  goto BB16
BB109   <- [116]
  (cls|spec|blt)  %109.0 = LdFun              !v    dimnames, e0.3
  fs              %109.1 = FrameState         R     0x55bbeeea3430+668: [%109.0], env=e0.3
  void                    Deopt              !v    %109.1, DeadCall@0x55bbe791bd00[Call#7], %109.0   !
BB120   <- [118]
  int$-           %120.0 = CastType           d     dn %118.1
  void                    StVar              lW    dX, %120.0, e0.3
  val?^ | miss    %120.2 = LdVar              eR    names, e0.3
  lgl$#-          %120.3 = Identical                <blt names>, %120.2   <true>
  void                    Branch                   %120.3 -> BB124 (if true) | BB125 (if false)
BB121   <- [118]
  fs              %121.0 = FrameState         R     0x55bbeeea3430+193: [%118.1], env=e0.3
  void                    Deopt              !v    %121.0, Typecheck@0x55bbe791bd00[Type#5], %118.1   !
BB16   <- [110, 15]
  val?^ | miss    %16.0 = LdVar              eR    is.array, e0.3
  lgl$#-          %16.1 = Identical                <blt is.array>, %16.0   <true>
  void                    Branch                   %16.1 -> BB122 (if true) | BB123 (if false)
BB124   <- [120]
  val?^ | miss    %124.0 = LdVar              eR    X, e0.3
  val?            %124.1 = Force!<wrapped>    !v    %124.0, e0.3   <(int|real)->
  lgl$#-          %124.2 = IsType                   %124.1 isA val?-
  void                    Branch                   %124.2 -> BB128 (if true) | BB129 (if false)
BB125   <- [120]
  fs              %125.0 = FrameState         R     0x55bbeeea3430+207: [], env=e0.3
  void                    Deopt              !v    %125.0, DeadBranchReached@0x55bbe791bd00[Test#2], %120.3   !
BB122   <- [16]
  val?^ | miss    %122.0 = LdVar              eR    Y, e0.3
  val?            %122.1 = Force!<lazy>       !v    %122.0, e0.3   <(int|real)->
  lgl$#-          %122.2 = IsType                   %122.1 isA val?-
  void                    Branch                   %122.2 -> BB126 (if true) | BB127 (if false)
BB123   <- [16]
  fs              %123.0 = FrameState         R     0x55bbeeea3430+773: [], env=e0.3
  void                    Deopt              !v    %123.0, DeadBranchReached@0x55bbe791bd00[Test#7], %16.1   !
BB128   <- [124]
  val?-           %128.0 = CastType           d     dn %124.1   <(int|real)->
  val+            %128.1 = CallSafeBuiltin    wed   names(%128.0)    <nil->
  lgl$-           %128.2 = Is                       %128.1, NULL
  void                    StVar              lW    no.nx, %128.2, e0.3
  lgl$-           %128.4 = Not                d     %128.2, elided
  lgl$#-          %128.5 = CheckTrueFalse     e     %128.4
  void                    Branch                   %128.5 -> BB97 (if true) | BB14 (if false)
BB129   <- [124]
  fs              %129.0 = FrameState         R     0x55bbeeea3430+276: [<blt names>, %124.1], env=e0.3
  void                    Deopt              !v    %129.0, Typecheck@0x55bbe791bd00[Type#7], %124.1   !
BB126   <- [122]
  val?-           %126.0 = CastType           d     dn %122.1   <(int|real)->
  lgl$#-          %126.1 = CallSafeBuiltin    wed   is.array(%126.0)    <lgl$->
  void                    Branch                   %126.1 -> BB90 (if true) | BB23 (if false)
BB127   <- [122]
  fs              %127.0 = FrameState         R     0x55bbeeea3430+842: [<blt is.array>, %122.1], env=e0.3
  void                    Deopt              !v    %127.0, Typecheck@0x55bbe791bd00[Type#24], %122.1   !
BB97   <- [128]
  val?^ | miss    %97.0 = LdVar              eR    list, e0.3
  lgl$#-          %97.1 = Identical                <blt list>, %97.0   <@?>
  void                    Branch                   %97.1 -> BB99 (if true) | BB98 (if false)
BB14   <- [128]
  void                    Nop                !     
  goto BB15
BB90   <- [126]
  val?^ | miss    %90.0 = LdVar              eR    dim, e0.3
  lgl$#-          %90.1 = Identical                <blt dim>, %90.0   <@?>
  void                    Branch                   %90.1 -> BB92 (if true) | BB91 (if false)
BB23   <- [126]
  val?^ | miss    %23.0 = LdVar              eR    length, e0.3
  lgl$#-          %23.1 = Identical                <blt length>, %23.0   <true>
  void                    Branch                   %23.1 -> BB130 (if true) | BB131 (if false)
BB99   <- [97]
  val?^ | miss    %99.0 = LdVar              eR    names, e0.3
  lgl$#-          %99.1 = Identical                <blt names>, %99.0   <@?>
  void                    Branch                   %99.1 -> BB101 (if true) | BB100 (if false)
BB98   <- [97]
  (cls|spec|blt)  %98.0 = LdFun              !v    list, e0.3
  fs              %98.1 = FrameState         R     0x55bbeeea3430+371: [%98.0], env=e0.3
  void                    Deopt              !v    %98.1, DeadCall@0x55bbe791bd00[Call#3], %98.0   !
BB15   <- [14, 146]
  void                    Nop                !     
  goto BB16
BB92   <- [90]
  val?^ | miss    %92.0 = LdVar              eR    Y, e0.3
  val?            %92.1 = Force!             !v    %92.0, e0.3   <val?_>
  lgl$#-          %92.2 = IsType                   %92.1 isA val?+
  void                    Branch                   %92.2 -> BB138 (if true) | BB139 (if false)
BB91   <- [90]
  (cls|spec|blt)  %91.0 = LdFun              !v    dim, e0.3
  fs              %91.1 = FrameState         R     0x55bbeeea3430+1336: [%91.0], env=e0.3
  void                    Deopt              !v    %91.1, DeadCall@0x55bbe791bd00[Call#14], %91.0   !
BB130   <- [23]
  val?^ | miss    %130.0 = LdVar              eR    Y, e0.3
  val?            %130.1 = Force!<wrapped>    !v    %130.0, e0.3   <(int|real)->
  lgl$#-          %130.2 = IsType                   %130.1 isA val?-
  void                    Branch                   %130.2 -> BB132 (if true) | BB133 (if false)
BB131   <- [23]
  fs              %131.0 = FrameState         R     0x55bbeeea3430+864: [%126.1], env=e0.3
  void                    Deopt              !v    %131.0, DeadBranchReached@0x55bbe791bd00[Test#8], %23.1   !
BB101   <- [99]
  val?^ | miss    %101.0 = LdVar              eR    X, e0.3
  val?            %101.1 = Force!             !v    %101.0, e0.3   <val?_>
  lgl$#-          %101.2 = IsType                   %101.1 isA val?+
  void                    Branch                   %101.2 -> BB146 (if true) | BB147 (if false)
BB100   <- [99]
  (cls|spec|blt)  %100.0 = LdFun              !v    names, e0.3
  fs              %100.1 = FrameState         R     0x55bbeeea3430+431: [<blt list>, %100.0], env=e0.3
  void                    Deopt              !v    %100.1, DeadCall@0x55bbe791bd00[Call#5], %100.0   !
BB138   <- [92]
  val?+           %138.0 = CastType           d     dn %92.1   <val?_>
  val+            %138.1 = CallSafeBuiltin    wed   dim(%138.0)    <val?_>
  void                    StVar              lW    dY, %138.1, e0.3
  val?^ | miss    %138.3 = LdVar              eR    dimnames, e0.3
  lgl$#-          %138.4 = Identical                <blt dimnames>, %138.3   <@?>
  void                    Branch                   %138.4 -> BB96 (if true) | BB95 (if false)
BB139   <- [92]
  fs              %139.0 = FrameState         R     0x55bbeeea3430+1377: [<blt dim>, %92.1], env=e0.3
  void                    Deopt              !v    %139.0, Typecheck@0x55bbe791bd00[Type#40], %92.1   !
BB132   <- [130]
  val?-           %132.0 = CastType           d     dn %130.1   <(int|real)->
  (int|real)$-    %132.1 = CallSafeBuiltin    wed   length(%132.0)    <int$->
  lgl$#-          %132.2 = IsType                   %132.1 isA int$-
  void                    Branch                   %132.2 -> BB134 (if true) | BB135 (if false)
BB133   <- [130]
  fs              %133.0 = FrameState         R     0x55bbeeea3430+944: [<blt length>, %130.1], env=e0.3
  void                    Deopt              !v    %133.0, Typecheck@0x55bbe791bd00[Type#27], %130.1   !
BB146   <- [101]
  val?+           %146.0 = CastType           d     dn %101.1   <val?_>
  val+            %146.1 = CallSafeBuiltin    wed   names(%146.0)    <val?_>
  val+            %146.2 = CallSafeBuiltin    wed   list(%146.1)    <val?_>
  void                    StVar              lW    nx, %146.2, e0.3
  goto BB15
BB147   <- [101]
  fs              %147.0 = FrameState         R     0x55bbeeea3430+472: [<blt list>, <blt names>, %101.1], env=e0.3
  void                    Deopt              !v    %147.0, Typecheck@0x55bbe791bd00[Type#13], %101.1   !
BB96   <- [138]
  val?^ | miss    %96.0 = LdVar              eR    Y, e0.3
  val?            %96.1 = Force!             !v    %96.0, e0.3   <val?_>
  val?            %96.2 = CallBuiltin        !v    dimnames(%96.1) e0.3   <val?_>
  lgl$-           %96.3 = Is                       %96.2, NULL
  void                    StVar              lW    ny, %96.2, e0.3
  val             %96.5 = ChkMissing         e     %96.2
  void                    StVar              lW    no.ny, %96.3, e0.3
  goto BB34
BB95   <- [138]
  (cls|spec|blt)  %95.0 = LdFun              !v    dimnames, e0.3
  fs              %95.1 = FrameState         R     0x55bbeeea3430+1441: [%95.0], env=e0.3
  void                    Deopt              !v    %95.1, DeadCall@0x55bbe791bd00[Call#15], %95.0   !
BB134   <- [132]
  int$-           %134.0 = CastType           d     dn %132.1
  void                    StVar              lW    dY, %134.0, e0.3
  val?^ | miss    %134.2 = LdVar              eR    names, e0.3
  lgl$#-          %134.3 = Identical                <blt names>, %134.2   <true>
  void                    Branch                   %134.3 -> BB136 (if true) | BB137 (if false)
BB135   <- [132]
  fs              %135.0 = FrameState         R     0x55bbeeea3430+966: [%132.1], env=e0.3
  void                    Deopt              !v    %135.0, Typecheck@0x55bbe791bd00[Type#28], %132.1   !
BB34   <- [96, 33]
  val?^ | miss    %34.0 = LdVar              eR    is.character, e0.3
  lgl$#-          %34.1 = Identical                <blt is.character>, %34.0   <true>
  void                    Branch                   %34.1 -> BB142 (if true) | BB143 (if false)
BB136   <- [134]
  val?^ | miss    %136.0 = LdVar              eR    Y, e0.3
  val?            %136.1 = Force!<wrapped>    !v    %136.0, e0.3   <(int|real)->
  lgl$#-          %136.2 = IsType                   %136.1 isA val?-
  void                    Branch                   %136.2 -> BB140 (if true) | BB141 (if false)
BB137   <- [134]
  fs              %137.0 = FrameState         R     0x55bbeeea3430+980: [], env=e0.3
  void                    Deopt              !v    %137.0, DeadBranchReached@0x55bbe791bd00[Test#9], %134.3   !
BB142   <- [34]
  val?^ | miss    %142.0 = LdVar              eR    FUN, e0.3
  val?            %142.1 = Force!<wrapped>    !v    %142.0, e0.3   <str$->
  lgl$#-          %142.2 = CallSafeBuiltin    wed   is.character(%142.1)    <lgl$->
  void                    Branch                   %142.2 -> BB78 (if true) | BB37 (if false)
BB143   <- [34]
  fs              %143.0 = FrameState         R     0x55bbeeea3430+1546: [], env=e0.3
  void                    Deopt              !v    %143.0, DeadBranchReached@0x55bbe791bd00[Test#14], %34.1   !
BB140   <- [136]
  val?-           %140.0 = CastType           d     dn %136.1   <(int|real)->
  val+            %140.1 = CallSafeBuiltin    wed   names(%140.0)    <nil->
  lgl$-           %140.2 = Is                       %140.1, NULL
  void                    StVar              lW    no.ny, %140.2, e0.3
  lgl$-           %140.4 = Not                d     %140.2, elided
  lgl$#-          %140.5 = CheckTrueFalse     e     %140.4
  void                    Branch                   %140.5 -> BB83 (if true) | BB32 (if false)
BB141   <- [136]
  fs              %141.0 = FrameState         R     0x55bbeeea3430+1049: [<blt names>, %136.1], env=e0.3
  void                    Deopt              !v    %141.0, Typecheck@0x55bbe791bd00[Type#30], %136.1   !
BB78   <- [142]
  val?^ | miss    %78.0 = LdVar              eR    FUN, e0.3
  val?            %78.1 = Force!<wrapped>    !v    %78.0, e0.3   <str$->
  lgl$#-          %78.2 = IsType                   %78.1 isA val?-
  void                    Branch                   %78.2 -> BB148 (if true) | BB149 (if false)
BB37   <- [142]
  void                    Nop                !     
  lgl$#-          %37.1 = %142.2
  goto BB38
BB83   <- [140]
  val?^ | miss    %83.0 = LdVar              eR    list, e0.3
  lgl$#-          %83.1 = Identical                <blt list>, %83.0   <@?>
  void                    Branch                   %83.1 -> BB85 (if true) | BB84 (if false)
BB32   <- [140]
  void                    Nop                !     
  goto BB33
BB148   <- [78]
  val?-           %148.0 = CastType           d     dn %78.1   <str$->
  lgl-            %148.1 = Eq                 wed   %148.0, "*", elided   <lgl$->
  lgl$#-          %148.2 = IsType                   %148.1 isA lgl$-
  void                    Branch                   %148.2 -> BB158 (if true) | BB159 (if false)
BB149   <- [78]
  fs              %149.0 = FrameState         R     0x55bbeeea3430+1658: [%142.2, %78.1], env=e0.3
  void                    Deopt              !v    %149.0, Typecheck@0x55bbe791bd00[Type#49], %78.1   !
BB38   <- [37, 158]
  lgl$-           %38.0 = Phi                      %158.3:BB158, %37.1:BB37
  lgl$-           %38.1 = %38.0
  lgl$#-          %38.2 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.2 -> BB69 (if true) | BB41 (if false)
BB85   <- [83]
  val?^ | miss    %85.0 = LdVar              eR    names, e0.3
  lgl$#-          %85.1 = Identical                <blt names>, %85.0   <@?>
  void                    Branch                   %85.1 -> BB87 (if true) | BB86 (if false)
BB84   <- [83]
  (cls|spec|blt)  %84.0 = LdFun              !v    list, e0.3
  fs              %84.1 = FrameState         R     0x55bbeeea3430+1144: [%84.0], env=e0.3
  void                    Deopt              !v    %84.1, DeadCall@0x55bbe791bd00[Call#11], %84.0   !
BB33   <- [32, 144]
  void                    Nop                !     
  goto BB34
BB158   <- [148]
  lgl$-           %158.0 = CastType           d     dn %148.1
  lgl$-           %158.1 = AsLogical                %158.0
  lgl$-           %158.2 = LAnd                     %142.2, %158.1
  lgl$-           %158.3 = %158.2
  goto BB38
BB159   <- [148]
  fs              %159.0 = FrameState         R     0x55bbeeea3430+1670: [%142.2, %148.1], env=e0.3
  void                    Deopt              !v    %159.0, Typecheck@0x55bbe791bd00[Type#50], %148.1   !
BB69   <- [38]
  lgl$-           %69.0 = Missing            eR    ..., e0.3
  lgl$-           %69.1 = Not                d     %69.0, elided
  lgl$#-          %69.2 = CheckTrueFalse     e     %69.1
  void                    Branch                   %69.2 -> BB77 (if true) | BB70 (if false)
BB41   <- [38]
  val?^ | miss    %41.0 = LdVar              eR    match.fun, e0.3
  lgl$#-          %41.1 = Identical                %41.0, function(FUN, descend=TRUE) <(rir::DispatchTab|...
  void                    Branch                   %41.1 -> BB150 (if true) | BB151 (if false)
BB87   <- [85]
  val?^ | miss    %87.0 = LdVar              eR    Y, e0.3
  val?            %87.1 = Force!             !v    %87.0, e0.3   <val?_>
  lgl$#-          %87.2 = IsType                   %87.1 isA val?+
  void                    Branch                   %87.2 -> BB144 (if true) | BB145 (if false)
BB86   <- [85]
  (cls|spec|blt)  %86.0 = LdFun              !v    names, e0.3
  fs              %86.1 = FrameState         R     0x55bbeeea3430+1204: [<blt list>, %86.0], env=e0.3
  void                    Deopt              !v    %86.1, DeadCall@0x55bbe791bd00[Call#13], %86.0   !
BB77   <- [69]
  (cls|spec|blt)  %77.0 = LdFun              !v    stop, e0.3
  fs              %77.1 = FrameState         R     0x55bbeeea3430+2033: [%77.0], env=e0.3
  void                    Deopt              !v    %77.1, DeadCall@0x55bbe791bd00[Call#28], %77.0   !
BB70   <- [69]
  val?^ | miss    %70.0 = LdVar              eR    tcrossprod, e0.3
  lgl$#-          %70.1 = Identical                %70.0, function(x, y=NULL) <(rir::DispatchTable*)0x55|...
  void                    Branch                   %70.1 -> BB156 (if true) | BB157 (if false)
BB150   <- [41]
  prom-           %150.0 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p0, e0.3
  val?            %150.1 = StaticCall         !v    match.fun[0x55bbe3769710](%150.0) e0.3   <blt->
  void                    StVar              lW    FUN, %150.1, e0.3
  (cls|spec|blt)  %150.3 = LdFun              !v    rep, <0x55bbe1e349b0>, e0.3
  prom-           %150.4 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p1, e0.3
  prom-           %150.5 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p2, e0.3
  val?            %150.6 = Call               !v    %150.3(%150.4, %150.5) e0.3   <int->
  void                    StVar              lW    Y, %150.6, e0.3
  val?^ | miss    %150.8 = LdVar              eR    length, e0.3
  lgl$#-          %150.9 = Identical                <blt length>, %150.8   <true>
  void                    Branch                   %150.9 -> BB152 (if true) | BB153 (if false)
BB151   <- [41]
  void                    Nop                !     
  val?^ | miss    %151.1 = %41.0
  dr              %151.2 = CallTarget@0x55bbe791bd00[Call#17]
  goto BB39
BB144   <- [87]
  val?+           %144.0 = CastType           d     dn %87.1   <val?_>
  val+            %144.1 = CallSafeBuiltin    wed   names(%144.0)    <val?_>
  val+            %144.2 = CallSafeBuiltin    wed   list(%144.1)    <val?_>
  void                    StVar              lW    ny, %144.2, e0.3
  goto BB33
BB145   <- [87]
  fs              %145.0 = FrameState         R     0x55bbeeea3430+1245: [<blt list>, <blt names>, %87.1], env=e0.3
  void                    Deopt              !v    %145.0, Typecheck@0x55bbe791bd00[Type#36], %87.1   !
BB156   <- [70]
  val?^ | miss    %156.0 = LdVar              eR    as.vector, e0.3
  lgl$#-          %156.1 = Identical                %156.0, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %156.1 -> BB160 (if true) | BB161 (if false)
BB157   <- [70]
  void                    Nop                !     
  val?^ | miss    %157.1 = %70.0
  dr              %157.2 = CallTarget@0x55bbe791bd00[Call#29]
  goto BB39
BB152   <- [150]
  val?^ | miss    %152.0 = LdVar              eR    X, e0.3
  lgl$#-          %152.1 = IsType                   %152.0 isA int~-
  void                    Branch                   %152.1 -> BB154 (if true) | BB155 (if false)
BB153   <- [150]
  void                    Nop                !     
  lgl$#-          %153.1 = %150.9
  dr              %153.2 = DeadBranchReached@0x55bbe791bd00[Test#15]
  goto BB42
BB39   <- [151, 157, 161]
  val?^ | miss    %39.0 = Phi                      %151.1:BB151, %157.1:BB157, %161.1:BB161
  val?^ | miss    %39.1 = %39.0
  dr              %39.2 = Phi                      %151.2:BB151, %157.2:BB157, %161.2:BB161
  dr              %39.3 = %39.2
  fs              %39.4 = FrameState         R     0x55bbeeea3430+1677: [%38.1], env=e0.3
  void                    Deopt              !v    %39.4, %39.3, %39.1   !
BB160   <- [156]
  val?^ | miss    %160.0 = LdVar              eR    X, e0.3
  val?            %160.1 = Force!<wrapped>    !v    %160.0, e0.3   <real->
  lgl$#-          %160.2 = IsType                   %160.1 isA val?+
  void                    Branch                   %160.2 -> BB164 (if true) | BB165 (if false)
BB161   <- [156]
  void                    Nop                !     
  val?^ | miss    %161.1 = %156.0
  dr              %161.2 = CallTarget@0x55bbe791bd00[Call#30]
  goto BB39
BB154   <- [152]
  int~-           %154.0 = CastType           d     dn %152.0
  int-            %154.1 = Force!<wrapped>          %154.0,    <int->
  (int|real)$-    %154.2 = CallSafeBuiltin    wed   length(%154.1)    <int$->
  lgl$#-          %154.3 = IsType                   %154.2 isA int$-
  void                    Branch                   %154.3 -> BB162 (if true) | BB163 (if false)
BB155   <- [152]
  void                    Nop                !     
  val?^ | miss    %155.1 = %152.0
  dr              %155.2 = Typecheck@0x55bbe791bd00[Type#61]
  goto BB42
BB42   <- [153, 155]
  val?^ | miss    %42.0 = Phi                      %153.1:BB153, %155.1:BB155
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %153.2:BB153, %155.2:BB155
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55bbeeea3430+1780: [], env=e0.3
  void                    Deopt              !v    %42.4, %42.3, %42.1   !
BB164   <- [160]
  val?+           %164.0 = CastType           d     dn %160.1   <real->
  val             %164.1 = CallSafeBuiltin    wed   as.vector(%164.0, "any")    <real->
  val?^ | miss    %164.2 = LdVar              eR    as.vector, e0.3
  lgl$#-          %164.3 = Identical                %164.2, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Branch                   %164.3 -> BB166 (if true) | BB167 (if false)
BB165   <- [160]
  prom-           %165.0 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p17, e0.3
  val?^           %165.1 = CastType                 up %165.0
  prom-           %165.2 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p16, e0.3
  val?^           %165.3 = CastType                 up %165.2
  prom-           %165.4 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p15, e0.3
  val?^           %165.5 = CastType                 up %165.4
  fs              %165.6 = FrameState         R     0x55bbeeea3430+2098: [], env=e0.3
  env             e165.7 = (MkEnv)            l     x=%165.5, y=%165.1, parent=R_BaseNamespace, context 0
  fs              %165.8 = FrameState         R     0x55bbe518a990+9: [], env=e165.7, next=%165.6
  fs              %165.9 = FrameState         R     0x55bbef1bdf60+32(pr): [], env=e0.3, next=%165.8
  env             e165.10 = (MkEnv)            l     mode(miss)="any", x=%165.3, parent=R_BaseNamespace, context 0
  fs              %165.11 = FrameState         R     0x55bbe6ee6040+9: [], env=e165.10, next=%165.9
  fs              %165.12 = FrameState         R     0x55bbef1bd550+5(pr): [%160.1], env=e0.3, next=%165.11
  void                    Deopt              !v    %165.12, Typecheck@0x55bbe5fcc498[Type#0], %160.1   !
BB162   <- [154]
  int$-           %162.0 = CastType           d     dn %154.2
  lgl$#-          %162.1 = CheckTrueFalse     e     %162.0
  void                    Branch                   %162.1 -> BB68 (if true) | BB46 (if false)
BB163   <- [154]
  fs              %163.0 = FrameState         R     0x55bbeeea3430+1871: [%154.2], env=e0.3
  void                    Deopt              !v    %163.0, Typecheck@0x55bbe791bd00[Type#62], %154.2   !
BB166   <- [164]
  prom-           %166.0 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p18, e0.3
  val?            %166.1 = StaticCall         !v    unknown--fromConstant[0x55bbe7ca7580](%166.0) from function(x, mode="any") <(rir::DispatchTable*)|... { 0 } e0.3   <real->
  lgl$#-          %166.2 = IsType                   %166.1 isA real-
  lgl$#-          %166.3 = IsType                   %164.1 isA real-
  void                    Branch                   %166.3 -> BB168 (if true) | BB169 (if false)
BB167   <- [164]
  prom-           %167.0 = MkArg                    %164.1, outer[0x55bbf03d8260]_p15 (!refl), e0.3
  val?~           %167.1 = CastType                 up %167.0
  prom-           %167.2 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p17, e0.3
  val?^           %167.3 = CastType                 up %167.2
  fs              %167.4 = FrameState         R     0x55bbeeea3430+2098: [], env=e0.3
  env             e167.5 = (MkEnv)            l     x=%167.1, y=%167.3, parent=R_BaseNamespace, context 0
  fs              %167.6 = FrameState         R     0x55bbe518a990+9: [%164.1], env=e167.5, next=%167.4
  void                    Deopt              !v    %167.6, CallTarget@0x55bbe791bd00[Call#31], %164.2   !
BB68   <- [162]
  (cls|spec|blt)  %68.0 = LdFun              !v    rep, <0x55bbe1e349b0>, e0.3
  prom-           %68.1 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p10, e0.3
  prom-           %68.2 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p11, e0.3
  val?            %68.3 = NamedCall          !v    %68.0(%68.1, times=%68.2) e0.3   <int->
  void                    StVar              lW    X, %68.3, e0.3
  goto BB47
BB46   <- [162]
  void                    Nop                !     
  goto BB47
BB168   <- [166]
  real-           %168.0 = CastType           d     dn %164.1
  void                    Branch                   %166.2 -> BB170 (if true) | BB171 (if false)
BB169   <- [166]
  void                    Nop                !     
  val             %169.1 = %164.1
  dr              %169.2 = Typecheck@0x55bbe9905d38[Type#0]
  goto BB75
BB47   <- [46, 68]
  (cls|spec|blt)  %47.0 = LdFun              !v    FUN, <0x55bbe1e21ba0>, e0.3
  prom-           %47.1 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p7, e0.3
  prom-           %47.2 = MkArg                    unboundValue, outer[0x55bbf03d8260]_p8, e0.3
  (miss|dots)     %47.3 = LdDots             R     , e0.3
  *dots-          %47.4 = ExpandDots               %47.3
  val?            %47.5 = NamedCall          !v    %47.0(%47.1, %47.2, .xpandDotsTrigger=%47.4) e0.3   <int->
  val?            %47.6 = %47.5
  goto BB48
BB170   <- [168]
  real-           %170.0 = CastType           d     dn %166.1
  val+            %170.1 = CallSafeBuiltin    wed   tcrossprod(%168.0, %170.0)    <real_>
  val+            %170.2 = %170.1
  goto BB48
BB171   <- [168]
  void                    Nop                !     
  val?            %171.1 = %166.1
  dr              %171.2 = Typecheck@0x55bbe9905d38[Type#1]
  goto BB75
BB75   <- [169, 171]
  val?^ | miss    %75.0 = Phi                      %169.1:BB169, %171.1:BB171
  val?^ | miss    %75.1 = %75.0
  dr              %75.2 = Phi                      %169.2:BB169, %171.2:BB171
  dr              %75.3 = %75.2
  prom-           %75.4 = MkArg                    %166.1, outer[0x55bbf03d8260]_p17 (!refl), e0.3
  val?~           %75.5 = CastType                 up %75.4
  prom-           %75.6 = MkArg                    %164.1, outer[0x55bbf03d8260]_p15 (!refl), e0.3
  val?~           %75.7 = CastType                 up %75.6
  fs              %75.8 = FrameState         R     0x55bbeeea3430+2098: [], env=e0.3
  env             e75.9 = (MkEnv)            l     y=%75.5, x=%75.7, parent=R_BaseNamespace, context 0
  fs              %75.10 = FrameState         R     0x55bbe518a990+23: [%164.1, %166.1], env=e75.9, next=%75.8
  void                    Deopt              !v    %75.10, %75.3, %75.1   !
BB48   <- [47, 170]
  val?            %48.0 = Phi                      %47.6:BB47, %170.2:BB170
  val?            %48.1 = %48.0
  void                    StVar              lW    robj, %48.1, e0.3
  val?^ | miss    %48.3 = LdVar              eR    c, e0.3
  lgl$#-          %48.4 = Identical                <blt c>, %48.3   <true>
  void                    Branch                   %48.4 -> BB172 (if true) | BB173 (if false)
BB172   <- [48]
  val?^ | miss    %172.0 = LdVar              eR    dX, e0.3
  lgl$#-          %172.1 = IsType                   %172.0 isA int$-
  void                    Branch                   %172.1 -> BB174 (if true) | BB175 (if false)
BB173   <- [48]
  void                    Nop                !     
  lgl$#-          %173.1 = %48.4
  dr              %173.2 = DeadBranchReached@0x55bbe791bd00[Test#16]
  goto BB49
BB174   <- [172]
  int$-           %174.0 = CastType           d     dn %172.0
  val?^ | miss    %174.1 = LdVar              eR    dY, e0.3
  lgl$#-          %174.2 = IsType                   %174.1 isA int$-
  void                    Branch                   %174.2 -> BB176 (if true) | BB177 (if false)
BB175   <- [172]
  void                    Nop                !     
  val?^ | miss    %175.1 = %172.0
  dr              %175.2 = Typecheck@0x55bbe791bd00[Type#81]
  goto BB49
BB49   <- [173, 175, 177]
  val?^ | miss    %49.0 = Phi                      %173.1:BB173, %175.1:BB175, %177.1:BB177
  val?^ | miss    %49.1 = %49.0
  dr              %49.2 = Phi                      %173.2:BB173, %175.2:BB175, %177.2:BB177
  dr              %49.3 = %49.2
  fs              %49.4 = FrameState         R     0x55bbeeea3430+2112: [], env=e0.3
  void                    Deopt              !v    %49.4, %49.3, %49.1   !
BB176   <- [174]
  int$-           %176.0 = CastType           d     dn %174.1
  int-            %176.1 = CallSafeBuiltin    wed   c(%174.0, %176.0)    <int->
  (cls|spec|blt)  %176.2 = LdFun              !v    dim<-, <0x55bbe1e20278>, e0.3
  val?^ | miss    %176.3 = LdVar              eR    robj, e0.3
  lgl$#-          %176.4 = IsType                   %176.3 isA val?~+ | miss
  void                    Branch                   %176.4 -> BB178 (if true) | BB179 (if false)
BB177   <- [174]
  void                    Nop                !     
  val?^ | miss    %177.1 = %174.1
  dr              %177.2 = Typecheck@0x55bbe791bd00[Type#82]
  goto BB49
BB178   <- [176]
  val?~+ | miss   %178.0 = CastType           d     dn %176.3
  val?+           %178.1 = Force!<value>            %178.0,    <(int|real)_>
  val?            %178.2 = NamedCall          !v    %176.2(%178.1, value=%176.1) e0.3
  void                    StVar              lW    robj, %178.2, e0.3
  val?^ | miss    %178.4 = LdVar              eR    no.nx, e0.3
  lgl$#-          %178.5 = IsType                   %178.4 isA lgl$-
  void                    Branch                   %178.5 -> BB180 (if true) | BB181 (if false)
BB179   <- [176]
  fs              %179.0 = FrameState         R     0x55bbeeea3430+2227: [%176.1], env=e0.3
  void                    Deopt              !v    %179.0, Typecheck@0x55bbe791bd00[Type#84], %176.3   !
BB180   <- [178]
  lgl$-           %180.0 = CastType           d     dn %178.4
  lgl$-           %180.1 = AsLogical                %180.0
  lgl$#-          %180.2 = Identical                %180.1, false
  void                    Branch                   %180.2 -> BB67 (if true) | BB55 (if false)
BB181   <- [178]
  void                    Nop                !     
  val?^ | miss    %181.1 = %178.4
  dr              %181.2 = Typecheck@0x55bbe791bd00[Type#85]
  goto BB53
BB67   <- [180]
  void                    Nop                !     
  lgl$-           %67.1 = %180.1
  goto BB56
BB55   <- [180]
  val?^ | miss    %55.0 = LdVar              eR    no.ny, e0.3
  lgl$#-          %55.1 = IsType                   %55.0 isA lgl$-
  void                    Branch                   %55.1 -> BB182 (if true) | BB183 (if false)
BB53   <- [181, 183, 185]
  val?^ | miss    %53.0 = Phi                      %181.1:BB181, %183.1:BB183, %185.1:BB185
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %181.2:BB181, %183.2:BB183, %185.2:BB185
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x55bbeeea3430+2295: [], env=e0.3
  void                    Deopt              !v    %53.4, %53.3, %53.1   !
BB56   <- [67, 182]
  lgl$-           %56.0 = Phi                      %182.3:BB182, %67.1:BB67
  lgl$-           %56.1 = %56.0
  lgl$-           %56.2 = Not                d     %56.1, elided
  lgl$#-          %56.3 = CheckTrueFalse     e     %56.2
  void                    Branch                   %56.3 -> BB58 (if true) | BB57 (if false)
BB182   <- [55]
  lgl$-           %182.0 = CastType           d     dn %55.0
  lgl$-           %182.1 = AsLogical                %182.0
  lgl$-           %182.2 = LAnd                     %180.1, %182.1
  lgl$-           %182.3 = %182.2
  goto BB56
BB183   <- [55]
  void                    Nop                !     
  val?^ | miss    %183.1 = %55.0
  dr              %183.2 = Typecheck@0x55bbe791bd00[Type#86]
  goto BB53
BB58   <- [56]
  lgl$#-          %58.0 = CheckTrueFalse     e     %180.0
  void                    Branch                   %58.0 -> BB66 (if true) | BB59 (if false)
BB57   <- [56]
  val             %57.0 = ChkMissing         e     %178.2
  lgl$#-          %57.1 = IsType                   %57.0 isA val?~+ | miss
  void                    Branch                   %57.1 -> BB184 (if true) | BB185 (if false)
BB66   <- [58]
  (cls|spec|blt)  %66.0 = LdFun              !v    vector, e0.3
  fs              %66.1 = FrameState         R     0x55bbeeea3430+2451: [%66.0], env=e0.3
  void                    Deopt              !v    %66.1, DeadCall@0x55bbe791bd00[Call#36], %66.0   !
BB59   <- [58]
  val?^ | miss    %59.0 = LdVar              eR    no.ny, e0.3
  val?            %59.1 = Force!             !v    %59.0, e0.3   <val?_>
  lgl$#-          %59.2 = CheckTrueFalse     we    %59.1
  void                    Branch                   %59.2 -> BB65 (if true) | BB60 (if false)
BB184   <- [57]
  val+            %184.0 = CastType           d     dn %57.0   <(int|real)_>
  void                    Visible            v     
  void                    Return             l     %184.0
BB185   <- [57]
  void                    Nop                !     
  val             %185.1 = %57.0
  dr              %185.2 = Typecheck@0x55bbe791bd00[Type#101]
  goto BB53
BB65   <- [59]
  (cls|spec|blt)  %65.0 = LdFun              !v    vector, e0.3
  fs              %65.1 = FrameState         R     0x55bbeeea3430+2395: [%65.0], env=e0.3
  void                    Deopt              !v    %65.1, DeadCall@0x55bbe791bd00[Call#34], %65.0   !
BB60   <- [59]
  val?^ | miss    %60.0 = LdVar              eR    c, e0.3
  lgl$#-          %60.1 = Identical                <blt c>, %60.0   <@?>
  void                    Branch                   %60.1 -> BB62 (if true) | BB61 (if false)
BB62   <- [60]
  val?^ | miss    %62.0 = LdVar              eR    nx, e0.3
  val?            %62.1 = Force!             !v    %62.0, e0.3   <val?_>
  val?^ | miss    %62.2 = LdVar              eR    ny, e0.3
  val?            %62.3 = Force!             !v    %62.2, e0.3   <val?_>
  lgl$#-          %62.4 = IsType                   %62.3 isA val?+
  lgl$#-          %62.5 = IsType                   %62.1 isA val?+
  void                    Branch                   %62.5 -> BB186 (if true) | BB187 (if false)
BB61   <- [60]
  (cls|spec|blt)  %61.0 = LdFun              !v    c, e0.3
  fs              %61.1 = FrameState         R     0x55bbeeea3430+2525: [%61.0], env=e0.3
  void                    Deopt              !v    %61.1, DeadCall@0x55bbe791bd00[Call#38], %61.0   !
BB186   <- [62]
  val?+           %186.0 = CastType           d     dn %62.1   <val?_>
  void                    Branch                   %62.4 -> BB188 (if true) | BB189 (if false)
BB187   <- [62]
  void                    Nop                !     
  val?            %187.1 = %62.1
  dr              %187.2 = Typecheck@0x55bbe791bd00[Type#97]
  goto BB63
BB188   <- [186]
  val?+           %188.0 = CastType           d     dn %62.3   <val?_>
  val+            %188.1 = CallSafeBuiltin    wed   c(%186.0, %188.0)    <val?_>
  (cls|spec|blt)  %188.2 = LdFun              !v    dimnames<-, e0.3
  fs              %188.3 = FrameState         R     0x55bbeeea3430+2617: [%188.1, %188.2], env=e0.3
  void                    Deopt              !v    %188.3, DeadCall@0x55bbe791bd00[Call#39], %188.2   !
BB189   <- [186]
  void                    Nop                !     
  val?            %189.1 = %62.3
  dr              %189.2 = Typecheck@0x55bbe791bd00[Type#98]
  goto BB63
BB63   <- [187, 189]
  val?^ | miss    %63.0 = Phi                      %187.1:BB187, %189.1:BB189
  val?^ | miss    %63.1 = %63.0
  dr              %63.2 = Phi                      %187.2:BB187, %189.2:BB189
  dr              %63.3 = %63.2
  fs              %63.4 = FrameState         R     0x55bbeeea3430+2585: [<blt c>, %62.1, %62.3], env=e0.3
  void                    Deopt              !v    %63.4, %63.3, %63.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     rep.int, e0.0
  prom-           %0.2  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p3, e0.0
  prom-           %0.3  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p5, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <val?_>
  void                    Return             l     %0.4
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p6, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     ceiling, e0.0
  prom-           %0.2  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p12, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     length, e0.0
  prom-           %0.2  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p13, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  (cls|spec|blt)  %0.4  = LdFun              !     length, e0.0
  prom-           %0.5  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p14, e0.0
  val?            %0.6  = Call               !     %0.4(%0.5) e0.0   <val?_>
  val?            %0.7  = Div                !     %0.3, %0.6, e0.0   <val?_>
  void                    Return             l     %0.7
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.vector, <0x55bbe2337550>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as.vector, <0x55bbe2337550>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, outer[0x55bbf03d8260]_p18, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <real->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Y, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <real->
  void                    Return             l     %0.3

│ outer[0x55bbf03d8260]                                                        │
└──────────────────────────────────────────────────────────────────────────────┘
