
┌──────────────────────────────────────────────────────────────────────────────┐
│ unknown--fromOverride[0x56368de3b350]                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0 miss: 3│
│ Properties:                                                                  │
├────── PIR Version After Optimizations
unknown--fromOverride[0x56368de3b350]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  int$~-          %1.2  = LdArg                    0
  env             e1.3  = MkEnv              l     from=%1.2, to=%1.1, by=%1.0, length.out(miss)=nil, along.with(miss)=nil, ...(miss)=missingArg, parent=R_BaseNamespace, context 1
  cls             %1.4  = MkCls                    is.logint, e1.3
  void                    StVar              lW    is.logint, %1.4, e1.3
  val?            %1.6  = CallBuiltin        !v    nargs() e1.3   <int$->
  lgl$#-          %1.7  = IsType                   %1.6 isA int$-
  cp              %1.8  = Checkpoint                -> BB2 (default) | BB347 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.7, %1.8 (Typecheck@0x56368bb729c0[Type#6])
  int$-           %2.1  = CastType           d     dn %1.6
  lgl$-           %2.2  = Eq                 d     %2.1, 1L, elided   <lgl$->
  lgl$-           %2.3  = AsLogical                %2.2
  lgl$#-          %2.4  = Identical                %2.3, false
  void                    StVar              lW    One, %2.2, e1.3
  void                    Branch                   %2.4 -> BB346 (if true) | BB3 (if false)
BB347   <- [1]
  fs              %347.0 = FrameState         R     0x56368c42d1f0+97: [%1.6], env=e1.3
  void                    Deopt              !v    %347.0   !
BB346   <- [2]
  goto BB4
BB3   <- [2]
  lgl$-           %3.0  = Missing            eR    from, e1.3
  lgl$-           %3.1  = Not                d     %3.0, elided
  lgl$-           %3.2  = AsLogical                %3.1
  lgl$-           %3.3  = LAnd                     %2.3, %3.2
  goto BB4
BB4   <- [346, 3]
  lgl$-           %4.0  = Phi                      %3.3:BB3, %2.3:BB346
  lgl$#-          %4.1  = CheckTrueFalse     e     %4.0
  void                    Branch                   %4.1 -> BB341 (if true) | BB5 (if false)
BB341   <- [4]
  val?^ | miss    %341.0 = LdVar              eR    length, e1.3
  lgl$#-          %341.1 = Identical                <blt length>, %341.0   <@?>
  void                    Branch                   %341.1 -> BB343 (if true) | BB342 (if false)
BB5   <- [4]
  lgl$-           %5.0  = Missing            eR    along.with, e1.3
  lgl$-           %5.1  = Not                d     %5.0, elided
  lgl$#-          %5.2  = CheckTrueFalse     e     %5.1
  void                    Branch                   %5.2 -> BB328 (if true) | BB6 (if false)
BB343   <- [341]
  val?^ | miss    %343.0 = LdVar              eR    from, e1.3
  val?            %343.1 = Force!             !v    %343.0, e1.3   <val?_>
  lgl$#-          %343.2 = IsType                   %343.1 isA val?+
  cp              %343.3 = Checkpoint                -> BB345 (default) | BB344 (if assume failed)
BB342   <- [341]
  (cls|spec|blt)  %342.0 = LdFun              !v    length, e1.3
  fs              %342.1 = FrameState         R     0x56368c42d1f0+181: [%342.0], env=e1.3
  void                    Deopt              !v    %342.1, DeadCall@0x56368bb729c0[Call#1], %342.0   !
BB328   <- [5]
  val?^ | miss    %328.0 = LdVar              eR    length, e1.3
  lgl$#-          %328.1 = Identical                <blt length>, %328.0   <@?>
  void                    Branch                   %328.1 -> BB330 (if true) | BB329 (if false)
BB6   <- [5]
  lgl$-           %6.0  = Missing            eR    length.out, e1.3
  lgl$-           %6.1  = Not                d     %6.0, elided
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB319 (if true) | BB7 (if false)
BB345   <- [343]
  void                    Assume             D     %343.2, %343.3 (Typecheck@0x56368bb729c0[Type#9])
  val?+           %345.1 = CastType           d     dn %343.1   <val?_>
  (int|real)$-    %345.2 = CallSafeBuiltin    wed   length(%345.1)    <val?_>
  void                    StVar              lW    lf, %345.2, e1.3
  (cls|spec|blt)  %345.4 = LdFun              !v    mode, e1.3
  fs              %345.5 = FrameState         R     0x56368c42d1f0+263: [%345.4], env=e1.3
  void                    Deopt              !v    %345.5, DeadCall@0x56368bb729c0[Call#2], %345.4   !
BB344   <- [343]
  fs              %344.0 = FrameState         R     0x56368c42d1f0+222: [<blt length>, %343.1], env=e1.3
  void                    Deopt              !v    %344.0   !
BB330   <- [328]
  val?^ | miss    %330.0 = LdVar              eR    along.with, e1.3
  val?            %330.1 = Force!             !v    %330.0, e1.3   <val?_>
  lgl$#-          %330.2 = IsType                   %330.1 isA val?+
  cp              %330.3 = Checkpoint                -> BB332 (default) | BB331 (if assume failed)
BB329   <- [328]
  (cls|spec|blt)  %329.0 = LdFun              !v    length, e1.3
  fs              %329.1 = FrameState         R     0x56368c42d1f0+1217: [%329.0], env=e1.3
  void                    Deopt              !v    %329.1, DeadCall@0x56368bb729c0[Call#13], %329.0   !
BB319   <- [6]
  val?^ | miss    %319.0 = LdVar              eR    length, e1.3
  lgl$#-          %319.1 = Identical                <blt length>, %319.0   <@?>
  void                    Branch                   %319.1 -> BB321 (if true) | BB320 (if false)
BB7   <- [6]
  goto BB8
BB332   <- [330]
  void                    Assume             D     %330.2, %330.3 (Typecheck@0x56368bb729c0[Type#42])
  val?+           %332.1 = CastType           d     dn %330.1   <val?_>
  (int|real)$-    %332.2 = CallSafeBuiltin    wed   length(%332.1)    <val?_>
  void                    StVar              lW    length.out, %332.2, e1.3
  val?^ | miss    %332.4 = LdVar              eR    One, e1.3
  val?            %332.5 = Force!             !v    %332.4, e1.3   <val?_>
  lgl$#-          %332.6 = CheckTrueFalse     we    %332.5
  void                    Branch                   %332.6 -> BB336 (if true) | BB333 (if false)
BB331   <- [330]
  fs              %331.0 = FrameState         R     0x56368c42d1f0+1258: [<blt length>, %330.1], env=e1.3
  void                    Deopt              !v    %331.0   !
BB321   <- [319]
  val?^ | miss    %321.0 = LdVar              eR    length.out, e1.3
  val?            %321.1 = Force!             !v    %321.0, e1.3   <val?_>
  lgl$#-          %321.2 = IsType                   %321.1 isA val?+
  cp              %321.3 = Checkpoint                -> BB323 (default) | BB322 (if assume failed)
BB320   <- [319]
  (cls|spec|blt)  %320.0 = LdFun              !v    length, e1.3
  fs              %320.1 = FrameState         R     0x56368c42d1f0+663: [%320.0], env=e1.3
  void                    Deopt              !v    %320.1, DeadCall@0x56368bb729c0[Call#6], %320.0   !
BB8   <- [7, 335]
  cp              %8.0  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB336   <- [332]
  val?^ | miss    %336.0 = LdVar              eR    length.out, e1.3
  val?            %336.1 = Force!             !v    %336.0, e1.3   <val?_>
  lgl$#-          %336.2 = CheckTrueFalse     we    %336.1
  void                    Branch                   %336.2 -> BB338 (if true) | BB337 (if false)
BB333   <- [332]
  val?^ | miss    %333.0 = LdVar              eR    is.integer, e1.3
  lgl$#-          %333.1 = Identical                <blt is.integer>, %333.0   <@?>
  void                    Branch                   %333.1 -> BB335 (if true) | BB334 (if false)
BB323   <- [321]
  void                    Assume             D     %321.2, %321.3 (Typecheck@0x56368bb729c0[Type#26])
  val?+           %323.1 = CastType           d     dn %321.1   <val?_>
  (int|real)$-    %323.2 = CallSafeBuiltin    wed   length(%323.1)    <val?_>
  void                    StVar              lW    len, %323.2, e1.3
  lgl$-           %323.4 = Not                d     %323.2, elided
  lgl$#-          %323.5 = CheckTrueFalse     e     %323.4
  void                    Branch                   %323.5 -> BB327 (if true) | BB324 (if false)
BB322   <- [321]
  fs              %322.0 = FrameState         R     0x56368c42d1f0+704: [<blt length>, %321.1], env=e1.3
  void                    Deopt              !v    %322.0   !
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    chkDots, e1.3
  lgl$#-          %10.1 = Identical                %10.0, function(..., which.call=-(1), allowed=charact|...
  void                    Assume             D     %10.1, %8.0 (CallTarget@0x56368bb729c0[Call#17])
  (miss|dots)     %10.3 = LdDots             R     , e1.3
  *dots-          %10.4 = ExpandDots               %10.3
  val?            %10.5 = NamedCall          !v    function(..., which.call=-(1), allowed=charact|...(.xpandDotsTrigger=%10.4) e1.3
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x56368c42d1f0+1578: [], env=e1.3
  void                    Deopt              !v    %9.0   !
BB338   <- [336]
  val?^ | miss    %338.0 = LdVar              eR    seq_len, e1.3
  lgl$#-          %338.1 = Identical                <blt seq_len>, %338.0   <@?>
  void                    Branch                   %338.1 -> BB340 (if true) | BB339 (if false)
BB337   <- [336]
  (cls|spec|blt)  %337.0 = LdFun              !v    integer, e1.3
  fs              %337.1 = FrameState         R     0x56368c42d1f0+1344: [%337.0], env=e1.3
  void                    Deopt              !v    %337.1, DeadCall@0x56368bb729c0[Call#14], %337.0   !
BB335   <- [333]
  val?^ | miss    %335.0 = LdVar              eR    length.out, e1.3
  val?            %335.1 = Force!             !v    %335.0, e1.3   <val?_>
  lgl$#-          %335.2 = CallSafeBuiltin    wed   is.integer(%335.1)    <val?_>
  void                    StVar              lW    intn1, %335.2, e1.3
  goto BB8
BB334   <- [333]
  (cls|spec|blt)  %334.0 = LdFun              !v    is.integer, e1.3
  fs              %334.1 = FrameState         R     0x56368c42d1f0+1501: [%334.0], env=e1.3
  void                    Deopt              !v    %334.1, DeadCall@0x56368bb729c0[Call#16], %334.0   !
BB327   <- [323]
  (cls|spec|blt)  %327.0 = LdFun              !v    stop, e1.3
  fs              %327.1 = FrameState         R     0x56368c42d1f0+771: [%327.0], env=e1.3
  void                    Deopt              !v    %327.1, DeadCall@0x56368bb729c0[Call#7], %327.0   !
BB324   <- [323]
  lgl$-           %324.0 = Gt                 d     %323.2, 1L, elided   <val?_>
  lgl$#-          %324.1 = CheckTrueFalse     e     %324.0
  void                    Branch                   %324.1 -> BB326 (if true) | BB325 (if false)
BB12   <- [10]
  lgl$-           %12.0 = Missing            eR    from, e1.3
  lgl$-           %12.1 = Not                d     %12.0, elided
  lgl$-           %12.2 = AsLogical                %12.1
  lgl$#-          %12.3 = Identical                %12.2, false
  void                    Branch                   %12.3 -> BB318 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x56368c42d1f0+1614: [%10.5], env=e1.3
  void                    Deopt              !v    %11.0   !
BB340   <- [338]
  val?^ | miss    %340.0 = LdVar              eR    length.out, e1.3
  val?            %340.1 = Force!             !v    %340.0, e1.3   <val?_>
  val+            %340.2 = CallSafeBuiltin    vwed  seq_len(%340.1)    <val?_>
  goto BB130
BB339   <- [338]
  (cls|spec|blt)  %339.0 = LdFun              !v    seq_len, e1.3
  fs              %339.1 = FrameState         R     0x56368c42d1f0+1404: [%339.0], env=e1.3
  void                    Deopt              !v    %339.1, DeadCall@0x56368bb729c0[Call#15], %339.0   !
BB326   <- [324]
  (cls|spec|blt)  %326.0 = LdFun              !v    warning, e1.3
  fs              %326.1 = FrameState         R     0x56368c42d1f0+841: [%326.0], env=e1.3
  void                    Deopt              !v    %326.1, DeadCall@0x56368bb729c0[Call#8], %326.0   !
BB325   <- [324]
  (cls|spec|blt)  %325.0 = LdFun              !v    is.logint, e1.3
  fs              %325.1 = FrameState         R     0x56368c42d1f0+941: [%325.0], env=e1.3
  void                    Deopt              !v    %325.1, DeadCall@0x56368bb729c0[Call#9], %325.0   !
BB318   <- [12]
  goto BB14
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    length, e1.3
  lgl$#-          %13.1 = Identical                <blt length>, %13.0   <true>
  void                    Assume             D     %13.1, %10.6 (DeadBranchReached@0x56368bb729c0[Test#10])
  val?^ | miss    %13.3 = LdVar              eR    from, e1.3
  lgl$#-          %13.4 = IsType                   %13.3 isA int$~-
  void                    Assume             D     %13.4, %10.6 (Typecheck@0x56368bb729c0[Type#54])
  goto BB14
BB130   <- [288, 260, 278, 340, 129]
  val?            %130.0 = Phi                      %129.0:BB129, %260.2:BB260, %278.2:BB278, %288.2:BB288, %340.2:BB340
  void                    Return             l     %130.0
BB14   <- [318, 13]
  lgl$-           %14.0 = Phi                      false:BB13, %12.2:BB318
  lgl$#-          %14.1 = CheckTrueFalse     e     %14.0
  void                    Branch                   %14.1 -> BB317 (if true) | BB15 (if false)
BB317   <- [14]
  (cls|spec|blt)  %317.0 = LdFun              !v    stop, e1.3
  fs              %317.1 = FrameState         R     0x56368c42d1f0+1755: [%317.0], env=e1.3
  void                    Deopt              !v    %317.1, DeadCall@0x56368bb729c0[Call#19], %317.0   !
BB15   <- [14]
  lgl$-           %15.0 = Missing            eR    to, e1.3
  lgl$-           %15.1 = Not                d     %15.0, elided
  lgl$-           %15.2 = AsLogical                %15.1
  lgl$#-          %15.3 = Identical                %15.2, false
  void                    Branch                   %15.3 -> BB316 (if true) | BB16 (if false)
BB316   <- [15]
  goto BB19
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    length, e1.3
  lgl$#-          %16.1 = Identical                <blt length>, %16.0   <true>
  void                    Assume             D     %16.1, %10.6 (DeadBranchReached@0x56368bb729c0[Test#11])
  val?^ | miss    %16.3 = LdVar              eR    to, e1.3
  val?            %16.4 = Force!<lazy>       !v    %16.3, e1.3   <int$->
  lgl$#-          %16.5 = IsType                   %16.4 isA int$-
  cp              %16.6 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB19   <- [316, 18]
  lgl$-           %19.0 = Phi                      false:BB18, %15.2:BB316
  cp              %19.1 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB18   <- [16]
  void                    Assume             D     %16.5, %16.6 (Typecheck@0x56368bb729c0[Type#58])
  goto BB19
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x56368c42d1f0+1866: [%15.2, <blt length>, %16.4], env=e1.3
  void                    Deopt              !v    %17.0   !
BB21   <- [19]
  lgl$#-          %21.0 = CheckTrueFalse     e     %19.0
  void                    Branch                   %21.0 -> BB315 (if true) | BB22 (if false)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x56368c42d1f0+1907: [%19.0], env=e1.3
  void                    Deopt              !v    %20.0   !
BB315   <- [21]
  (cls|spec|blt)  %315.0 = LdFun              !v    stop, e1.3
  fs              %315.1 = FrameState         R     0x56368c42d1f0+1923: [%315.0], env=e1.3
  void                    Deopt              !v    %315.1, DeadCall@0x56368bb729c0[Call#21], %315.0   !
BB22   <- [21]
  lgl$-           %22.0 = Missing            eR    from, e1.3
  lgl$-           %22.1 = Not                d     %22.0, elided
  lgl$-           %22.2 = AsLogical                %22.1
  lgl$#-          %22.3 = Identical                %22.2, false
  void                    Branch                   %22.3 -> BB314 (if true) | BB23 (if false)
BB314   <- [22]
  goto BB28
BB23   <- [22]
  val?^ | miss    %23.0 = LdVar              eR    is.finite, e1.3
  lgl$#-          %23.1 = Identical                <blt is.finite>, %23.0   <true>
  void                    Assume             D     %23.1, %19.1 (DeadBranchReached@0x56368bb729c0[Test#12])
  val?^ | miss    %23.3 = LdVar              eR    is.character, e1.3
  lgl$#-          %23.4 = Identical                <blt is.character>, %23.3   <true>
  void                    Assume             D     %23.4, %19.1 (DeadBranchReached@0x56368bb729c0[Test#13])
  val?^ | miss    %23.6 = LdVar              eR    from, e1.3
  val?            %23.7 = Force!<wrapped>    !v    %23.6, e1.3   <int$->
  lgl$#-          %23.8 = CallSafeBuiltin    wed   is.character(%23.7)    <lgl$->
  void                    Branch                   %23.8 -> BB309 (if true) | BB24 (if false)
BB28   <- [314, 27]
  lgl$-           %28.0 = Phi                      %27.4:BB27, %22.2:BB314
  cp              %28.1 = Checkpoint                -> BB30 (default) | BB29 (if assume failed)
BB309   <- [23]
  val?^ | miss    %309.0 = LdVar              eR    as.numeric, e1.3
  lgl$#-          %309.1 = Identical                <blt as.double>, %309.0   <@?>
  void                    Branch                   %309.1 -> BB311 (if true) | BB310 (if false)
BB24   <- [23]
  val?^ | miss    %24.0 = LdVar              eR    from, e1.3
  val?            %24.1 = Force!<wrapped>    !v    %24.0, e1.3   <int$->
  goto BB25
BB30   <- [28]
  lgl$#-          %30.0 = CheckTrueFalse     e     %28.0
  void                    Branch                   %30.0 -> BB308 (if true) | BB31 (if false)
BB29   <- [28]
  fs              %29.0 = FrameState         R     0x56368c42d1f0+2278: [%28.0], env=e1.3
  void                    Deopt              !v    %29.0   !
BB311   <- [309]
  val?^ | miss    %311.0 = LdVar              eR    from, e1.3
  val?            %311.1 = Force!             !v    %311.0, e1.3   <val?_>
  lgl$#-          %311.2 = IsType                   %311.1 isA val?+
  cp              %311.3 = Checkpoint                -> BB313 (default) | BB312 (if assume failed)
BB310   <- [309]
  (cls|spec|blt)  %310.0 = LdFun              !v    as.numeric, e1.3
  fs              %310.1 = FrameState         R     0x56368c42d1f0+2174: [%22.2, <blt is.finite>, %310.0], env=e1.3
  void                    Deopt              !v    %310.1, DeadCall@0x56368bb729c0[Call#26], %310.0   !
BB25   <- [24, 313]
  val?            %25.0 = Phi                      %24.1:BB24, %313.2:BB313
  val?            %25.1 = CallBuiltin        !v    is.finite(%25.0) e1.3   <lgl$->
  lgl$#-          %25.2 = IsType                   %25.1 isA lgl$-
  cp              %25.3 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB308   <- [30]
  (cls|spec|blt)  %308.0 = LdFun              !v    stop, e1.3
  fs              %308.1 = FrameState         R     0x56368c42d1f0+2294: [%308.0], env=e1.3
  void                    Deopt              !v    %308.1, DeadCall@0x56368bb729c0[Call#27], %308.0   !
BB31   <- [30]
  lgl$-           %31.0 = Missing            eR    to, e1.3
  lgl$-           %31.1 = Not                d     %31.0, elided
  lgl$-           %31.2 = AsLogical                %31.1
  lgl$#-          %31.3 = Identical                %31.2, false
  void                    Branch                   %31.3 -> BB307 (if true) | BB32 (if false)
BB313   <- [311]
  void                    Assume             D     %311.2, %311.3 (Typecheck@0x56368bb729c0[Type#71])
  val?+           %313.1 = CastType           d     dn %311.1   <val?_>
  val+            %313.2 = CallSafeBuiltin    wed   as.double(%313.1)    <val?_>
  void                    StVar              lW    from, %313.2, e1.3
  goto BB25
BB312   <- [311]
  fs              %312.0 = FrameState         R     0x56368c42d1f0+2215: [%22.2, <blt is.finite>, <blt as.double>, %311.1], env=e1.3
  void                    Deopt              !v    %312.0   !
BB27   <- [25]
  void                    Assume             D     %25.2, %25.3 (Typecheck@0x56368bb729c0[Type#73])
  lgl$-           %27.1 = CastType           d     dn %25.1
  lgl$-           %27.2 = Not                d     %27.1, elided
  lgl$-           %27.3 = AsLogical                %27.2
  lgl$-           %27.4 = LAnd                     %22.2, %27.3
  goto BB28
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x56368c42d1f0+2270: [%22.2, %25.1], env=e1.3
  void                    Deopt              !v    %26.0   !
BB307   <- [31]
  goto BB37
BB32   <- [31]
  val?^ | miss    %32.0 = LdVar              eR    is.finite, e1.3
  lgl$#-          %32.1 = Identical                <blt is.finite>, %32.0   <true>
  void                    Assume             D     %32.1, %28.1 (DeadBranchReached@0x56368bb729c0[Test#15])
  val?^ | miss    %32.3 = LdVar              eR    is.character, e1.3
  lgl$#-          %32.4 = Identical                <blt is.character>, %32.3   <true>
  void                    Assume             D     %32.4, %28.1 (DeadBranchReached@0x56368bb729c0[Test#16])
  val?^ | miss    %32.6 = LdVar              eR    to, e1.3
  val?            %32.7 = Force!<wrapped>    !v    %32.6, e1.3   <int$->
  lgl$#-          %32.8 = CallSafeBuiltin    wed   is.character(%32.7)    <lgl$->
  void                    Branch                   %32.8 -> BB302 (if true) | BB33 (if false)
BB37   <- [307, 36]
  lgl$-           %37.0 = Phi                      %36.4:BB36, %31.2:BB307
  lgl$#-          %37.1 = CheckTrueFalse     e     %37.0
  void                    Branch                   %37.1 -> BB301 (if true) | BB38 (if false)
BB302   <- [32]
  val?^ | miss    %302.0 = LdVar              eR    as.numeric, e1.3
  lgl$#-          %302.1 = Identical                <blt as.double>, %302.0   <@?>
  void                    Branch                   %302.1 -> BB304 (if true) | BB303 (if false)
BB33   <- [32]
  val?^ | miss    %33.0 = LdVar              eR    to, e1.3
  val?            %33.1 = Force!<wrapped>    !v    %33.0, e1.3   <int$->
  goto BB34
BB301   <- [37]
  (cls|spec|blt)  %301.0 = LdFun              !v    stop, e1.3
  fs              %301.1 = FrameState         R     0x56368c42d1f0+2665: [%301.0], env=e1.3
  void                    Deopt              !v    %301.1, DeadCall@0x56368bb729c0[Call#33], %301.0   !
BB38   <- [37]
  val?^ | miss    %38.0 = LdVar              eR    length.out, e1.3
  val?            %38.1 = Force!<lazy>       !v    %38.0, e1.3   <nil->
  lgl$-           %38.2 = Is                       %38.1, NULL
  cp              %38.3 = Checkpoint                -> BB40 (default) | BB39 (if assume failed)
BB304   <- [302]
  val?^ | miss    %304.0 = LdVar              eR    to, e1.3
  val?            %304.1 = Force!             !v    %304.0, e1.3   <val?_>
  lgl$#-          %304.2 = IsType                   %304.1 isA val?+
  cp              %304.3 = Checkpoint                -> BB306 (default) | BB305 (if assume failed)
BB303   <- [302]
  (cls|spec|blt)  %303.0 = LdFun              !v    as.numeric, e1.3
  fs              %303.1 = FrameState         R     0x56368c42d1f0+2545: [%31.2, <blt is.finite>, %303.0], env=e1.3
  void                    Deopt              !v    %303.1, DeadCall@0x56368bb729c0[Call#32], %303.0   !
BB34   <- [33, 306]
  val?            %34.0 = Phi                      %33.1:BB33, %306.2:BB306
  val?            %34.1 = CallBuiltin        !v    is.finite(%34.0) e1.3   <lgl$->
  lgl$#-          %34.2 = IsType                   %34.1 isA lgl$-
  cp              %34.3 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB40   <- [38]
  lgl$#-          %40.0 = CheckTrueFalse     e     %38.2
  void                    Branch                   %40.0 -> BB134 (if true) | BB41 (if false)
BB39   <- [38]
  fs              %39.0 = FrameState         R     0x56368c42d1f0+2702: [%38.1], env=e1.3
  void                    Deopt              !v    %39.0   !
BB306   <- [304]
  void                    Assume             D     %304.2, %304.3 (Typecheck@0x56368bb729c0[Type#84])
  val?+           %306.1 = CastType           d     dn %304.1   <val?_>
  val+            %306.2 = CallSafeBuiltin    wed   as.double(%306.1)    <val?_>
  void                    StVar              lW    to, %306.2, e1.3
  goto BB34
BB305   <- [304]
  fs              %305.0 = FrameState         R     0x56368c42d1f0+2586: [%31.2, <blt is.finite>, <blt as.double>, %304.1], env=e1.3
  void                    Deopt              !v    %305.0   !
BB36   <- [34]
  void                    Assume             D     %34.2, %34.3 (Typecheck@0x56368bb729c0[Type#86])
  lgl$-           %36.1 = CastType           d     dn %34.1
  lgl$-           %36.2 = Not                d     %36.1, elided
  lgl$-           %36.3 = AsLogical                %36.2
  lgl$-           %36.4 = LAnd                     %31.2, %36.3
  goto BB37
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x56368c42d1f0+2641: [%31.2, %34.1], env=e1.3
  void                    Deopt              !v    %35.0   !
BB134   <- [40]
  lgl$-           %134.0 = Missing            eR    by, e1.3
  lgl$#-          %134.1 = CheckTrueFalse     e     %134.0
  void                    Branch                   %134.1 -> BB298 (if true) | BB135 (if false)
BB41   <- [40]
  val?^ | miss    %41.0 = LdVar              eR    is.finite, e1.3
  lgl$#-          %41.1 = Identical                <blt is.finite>, %41.0   <@?>
  void                    Branch                   %41.1 -> BB43 (if true) | BB42 (if false)
BB298   <- [134]
  val?^ | miss    %298.0 = LdVar              eR    from, e1.3
  val?            %298.1 = Force!             !v    %298.0, e1.3   <val?_>
  val?^ | miss    %298.2 = LdVar              eR    to, e1.3
  void                    Visible            v     
  val?            %298.4 = Force!             !     %298.2, e1.3   <val?_>
  lgl$#-          %298.5 = IsType                   %298.4 isA val?+
  lgl$#-          %298.6 = IsType                   %298.1 isA val?+
  cp              %298.7 = Checkpoint                -> BB300 (default) | BB299 (if assume failed)
BB135   <- [134]
  val?^ | miss    %135.0 = LdVar              eR    is.logint, e1.3
  lgl$#-          %135.1 = Identical                %135.0, %1.4
  void                    Assume             D     %135.1, %38.3 (CallTarget@0x56368bb729c0[Call#98])
  val?^ | miss    %135.3 = LdVar              eR    is.integer, e1.3
  lgl$#-          %135.4 = Identical                <blt is.integer>, %135.3   <true>
  void                    Assume             D     %135.4, %38.3 (DeadBranchReached@0x56368ba75918[Test#0])
  val?^ | miss    %135.6 = LdVar              eR    from, e1.3
  val?            %135.7 = Force!<wrapped>    !v    %135.6, e1.3   <int$->
  prom-           %135.8 = MkArg                    %135.7, unknown--fromOverride[0x56368de3b350]_p2 (!refl), e1.3
  val?~           %135.9 = CastType                 up %135.8
  lgl$#-          %135.10 = CallSafeBuiltin    wed   is.integer(%135.7)    <lgl$->
  env             e135.11 = (MkEnv)            l     .=%135.9, parent=e1.3, context 0
  void                    Branch                   %135.10 -> BB297 (if true) | BB136 (if false)
BB43   <- [41]
  val?^ | miss    %43.0 = LdVar              eR    length.out, e1.3
  val?            %43.1 = Force!             !v    %43.0, e1.3   <val?_>
  lgl$#-          %43.2 = IsType                   %43.1 isA val?+
  cp              %43.3 = Checkpoint                -> BB45 (default) | BB44 (if assume failed)
BB42   <- [41]
  (cls|spec|blt)  %42.0 = LdFun              !v    is.finite, e1.3
  fs              %42.1 = FrameState         R     0x56368c42d1f0+2746: [%42.0], env=e1.3
  void                    Deopt              !v    %42.1, DeadCall@0x56368bb729c0[Call#34], %42.0   !
BB300   <- [298]
  void                    Assume             D     %298.6, %298.7 (Typecheck@0x56368bb729c0[Type#475])
  val?+           %300.1 = CastType           d     dn %298.1   <val?_>
  void                    Assume             D     %298.5, %298.7 (Typecheck@0x56368bb729c0[Type#476])
  val?+           %300.3 = CastType           d     dn %298.4   <val?_>
  (int|real|complex)+ %300.4 = Colon              vwed  %300.1, %300.3, elided   <val?_>
  goto BB129
BB299   <- [298]
  fs              %299.0 = FrameState         R     0x56368c42d1f0+9913: [%298.1, %298.4], env=e1.3
  void                    Deopt              !v    %299.0   !
BB297   <- [135]
  goto BB139
BB136   <- [135]
  val?^ | miss    %136.0 = LdVar              eRd   is.logical, e135.11
  lgl$#-          %136.1 = Identical                <blt is.logical>, %136.0   <@?>
  void                    Branch                   %136.1 -> BB138 (if true) | BB137 (if false)
BB45   <- [43]
  void                    Assume             D     %43.2, %43.3 (Typecheck@0x56368bb729c0[Type#89])
  val?+           %45.1 = CastType           d     dn %43.1   <val?_>
  lgl+            %45.2 = CallSafeBuiltin    wed   is.finite(%45.1)    <val?_>
  lgl             %45.3 = Not                wed   %45.2, elided
  lgl$-           %45.4 = AsLogical          e     %45.3
  lgl$#-          %45.5 = Identical                %45.4, true
  void                    Branch                   %45.5 -> BB133 (if true) | BB46 (if false)
BB44   <- [43]
  fs              %44.0 = FrameState         R     0x56368c42d1f0+2787: [<blt is.finite>, %43.1], env=e1.3
  void                    Deopt              !v    %44.0   !
BB129   <- [300, 128, 252]
  val+            %129.0 = Phi                      %128.2:BB128, %252.0:BB252, %300.4:BB300
  goto BB130
BB139   <- [297, 138]
  lgl$-           %139.0 = Phi                      %138.2:BB138, %135.10:BB297
  lgl$-           %139.1 = AsLogical                %139.0
  lgl$#-          %139.2 = Identical                %139.1, false
  cp              %139.3 = Checkpoint                -> BB141 (default) | BB140 (if assume failed)
BB138   <- [136]
  val+            %138.0 = CallSafeBuiltin    wed   is.logical(%135.7)    <val?_>
  lgl$-           %138.1 = AsLogical          e     %138.0
  lgl$-           %138.2 = LOr                      %135.10, %138.1
  goto BB139
BB137   <- [136]
  fs              %137.0 = FrameState         R     0x56368c42d1f0+7221: [], env=e1.3
  env             e137.1 = MaterializeEnv           , e135.11   <@?>
  (cls|spec|blt)  %137.2 = LdFun              !v    is.logical, e137.1
  fs              %137.3 = FrameState         R     0x56368c40f240+131: [%135.10, %137.2], env=e137.1, next=%137.0
  void                    Deopt              !v    %137.3, DeadCall@0x56368ba75918[Call#1], %137.2   !
BB133   <- [45]
  goto BB49
BB46   <- [45]
  val?^ | miss    %46.0 = LdVar              eR    length.out, e1.3
  val?            %46.1 = Force!             !v    %46.0, e1.3   <val?_>
  lgl$#-          %46.2 = IsType                   %46.1 isA val?+
  cp              %46.3 = Checkpoint                -> BB48 (default) | BB47 (if assume failed)
BB141   <- [139]
  void                    Branch                   %139.2 -> BB296 (if true) | BB142 (if false)
BB140   <- [139]
  fs              %140.0 = FrameState         R     0x56368c42d1f0+7221: [], env=e1.3
  fs              %140.1 = FrameState         R     0x56368c40f240+201: [%139.0], env=e135.11, next=%140.0
  void                    Deopt              !v    %140.1   !
BB49   <- [133, 48]
  lgl$-           %49.0 = Phi                      %48.4:BB48, %45.4:BB133
  lgl$#-          %49.1 = CheckTrueFalse     e     %49.0
  void                    Branch                   %49.1 -> BB132 (if true) | BB50 (if false)
BB48   <- [46]
  void                    Assume             D     %46.2, %46.3 (Typecheck@0x56368bb729c0[Type#91])
  val?+           %48.1 = CastType           d     dn %46.1   <val?_>
  lgl             %48.2 = Lt                 wed   %48.1, 0L, elided   <val?_>
  lgl$-           %48.3 = AsLogical          e     %48.2
  lgl$-           %48.4 = LOr                      %45.4, %48.3
  goto BB49
BB47   <- [46]
  fs              %47.0 = FrameState         R     0x56368c42d1f0+2831: [%45.4, %46.1], env=e1.3
  void                    Deopt              !v    %47.0   !
BB296   <- [141]
  goto BB143
BB142   <- [141]
  val?^ | miss    %142.0 = LdVar              eRd   is.object, e135.11
  lgl$#-          %142.1 = Identical                <blt is.object>, %142.0   <true>
  void                    Assume             D     %142.1, %139.3 (DeadBranchReached@0x56368ba75918[Test#2])
  lgl$#-          %142.3 = CallSafeBuiltin    wed   is.object(%135.7)    <lgl$->
  lgl$#-          %142.4 = Not                d     %142.3, elided
  lgl$-           %142.5 = LAnd                     %139.1, %142.4
  goto BB143
BB132   <- [49]
  (cls|spec|blt)  %132.0 = LdFun              !v    stop, e1.3
  fs              %132.1 = FrameState         R     0x56368c42d1f0+7140: [%132.0], env=e1.3
  void                    Deopt              !v    %132.1, DeadCall@0x56368bb729c0[Call#97], %132.0   !
BB50   <- [49]
  val?^ | miss    %50.0 = LdVar              eR    length.out, e1.3
  val?            %50.1 = Force!             !v    %50.0, e1.3   <val?_>
  lgl$#-          %50.2 = IsType                   %50.1 isA val?+
  cp              %50.3 = Checkpoint                -> BB52 (default) | BB51 (if assume failed)
BB143   <- [296, 142]
  lgl$-           %143.0 = Phi                      %142.5:BB142, %139.1:BB296
  lgl$-           %143.1 = AsLogical                %143.0
  lgl$#-          %143.2 = Identical                %143.1, false
  cp              %143.3 = Checkpoint                -> BB145 (default) | BB144 (if assume failed)
BB52   <- [50]
  void                    Assume             D     %50.2, %50.3 (Typecheck@0x56368bb729c0[Type#93])
  val?+           %52.1 = CastType           d     dn %50.1   <val?_>
  lgl             %52.2 = Eq                 wed   %52.1, 0L, elided   <val?_>
  lgl$#-          %52.3 = CheckTrueFalse     we    %52.2
  void                    Branch                   %52.3 -> BB131 (if true) | BB53 (if false)
BB51   <- [50]
  fs              %51.0 = FrameState         R     0x56368c42d1f0+2865: [%50.1], env=e1.3
  void                    Deopt              !v    %51.0   !
BB145   <- [143]
  void                    Branch                   %143.2 -> BB295 (if true) | BB146 (if false)
BB144   <- [143]
  fs              %144.0 = FrameState         R     0x56368c42d1f0+7221: [], env=e1.3
  fs              %144.1 = FrameState         R     0x56368c40f240+308: [%143.0], env=e135.11, next=%144.0
  void                    Deopt              !v    %144.1   !
BB131   <- [52]
  (cls|spec|blt)  %131.0 = LdFun              !v    integer, e1.3
  fs              %131.1 = FrameState         R     0x56368c42d1f0+7103: [%131.0], env=e1.3
  void                    Deopt              !v    %131.1, DeadCall@0x56368bb729c0[Call#96], %131.0   !
BB53   <- [52]
  val?^ | miss    %53.0 = LdVar              eR    One, e1.3
  val?            %53.1 = Force!             !v    %53.0, e1.3   <val?_>
  lgl$#-          %53.2 = CheckTrueFalse     we    %53.1
  void                    Branch                   %53.2 -> BB126 (if true) | BB54 (if false)
BB295   <- [145]
  goto BB155
BB146   <- [145]
  val?^ | miss    %146.0 = LdVar              eR    is.logint, e1.3
  lgl$#-          %146.1 = Identical                %146.0, %1.4
  void                    Assume             D     %146.1, %143.3 (CallTarget@0x56368bb729c0[Call#99])
  val?^ | miss    %146.3 = LdVar              eR    is.integer, e1.3
  lgl$#-          %146.4 = Identical                <blt is.integer>, %146.3   <true>
  void                    Assume             D     %146.4, %143.3 (DeadBranchReached@0x56368ba75918[Test#0])
  val?^ | miss    %146.6 = LdVar              eR    to, e1.3
  val?            %146.7 = Force!<wrapped>    !v    %146.6, e1.3   <int$->
  prom-           %146.8 = MkArg                    %146.7, unknown--fromOverride[0x56368de3b350]_p3 (!refl), e1.3
  val?~           %146.9 = CastType                 up %146.8
  lgl$#-          %146.10 = CallSafeBuiltin    wed   is.integer(%146.7)    <lgl$->
  env             e146.11 = (MkEnv)            l     .=%146.9, parent=e1.3, context 0
  void                    Branch                   %146.10 -> BB294 (if true) | BB147 (if false)
BB126   <- [53]
  val?^ | miss    %126.0 = LdVar              eR    seq_len, e1.3
  lgl$#-          %126.1 = Identical                <blt seq_len>, %126.0   <@?>
  void                    Branch                   %126.1 -> BB128 (if true) | BB127 (if false)
BB54   <- [53]
  lgl$-           %54.0 = Missing            eR    by, e1.3
  lgl$#-          %54.1 = CheckTrueFalse     e     %54.0
  void                    Branch                   %54.1 -> BB60 (if true) | BB55 (if false)
BB155   <- [295, 154]
  lgl$-           %155.0 = Phi                      %154.2:BB154, %143.1:BB295
  void                    StVar              lW    int, %155.0, e1.3
  val?^ | miss    %155.2 = LdVar              eR    to, e1.3
  val?            %155.3 = Force!<wrapped>    !v    %155.2, e1.3   <int$->
  cp              %155.4 = Checkpoint                -> BB157 (default) | BB156 (if assume failed)
BB294   <- [146]
  goto BB150
BB147   <- [146]
  val?^ | miss    %147.0 = LdVar              eRd   is.logical, e146.11
  lgl$#-          %147.1 = Identical                <blt is.logical>, %147.0   <@?>
  void                    Branch                   %147.1 -> BB149 (if true) | BB148 (if false)
BB128   <- [126]
  val?^ | miss    %128.0 = LdVar              eR    length.out, e1.3
  val?            %128.1 = Force!             !v    %128.0, e1.3   <val?_>
  val+            %128.2 = CallSafeBuiltin    vwed  seq_len(%128.1)    <val?_>
  goto BB129
BB127   <- [126]
  (cls|spec|blt)  %127.0 = LdFun              !v    seq_len, e1.3
  fs              %127.1 = FrameState         R     0x56368c42d1f0+7025: [%127.0], env=e1.3
  void                    Deopt              !v    %127.1, DeadCall@0x56368bb729c0[Call#95], %127.0   !
BB60   <- [54]
  lgl$-           %60.0 = Missing            eR    to, e1.3
  lgl$#-          %60.1 = CheckTrueFalse     e     %60.0
  void                    Branch                   %60.1 -> BB62 (if true) | BB61 (if false)
BB55   <- [54]
  lgl$-           %55.0 = Missing            eR    to, e1.3
  lgl$#-          %55.1 = CheckTrueFalse     e     %55.0
  void                    Branch                   %55.1 -> BB59 (if true) | BB56 (if false)
BB157   <- [155]
  val?^ | miss    %157.0 = LdVar              eR    int, e1.3
  lgl$#-          %157.1 = IsType                   %157.0 isA lgl$-
  void                    Assume             D     %157.1, %155.4 (Typecheck@0x56368bb729c0[Type#349])
  lgl$-           %157.3 = CastType           d     dn %157.0
  lgl$#-          %157.4 = CheckTrueFalse     e     %157.3
  void                    Branch                   %157.4 -> BB290 (if true) | BB158 (if false)
BB156   <- [155]
  fs              %156.0 = FrameState         R     0x56368c42d1f0+7290: [%155.3], env=e1.3
  void                    Deopt              !v    %156.0   !
BB150   <- [294, 149]
  lgl$-           %150.0 = Phi                      %149.2:BB149, %146.10:BB294
  lgl$-           %150.1 = AsLogical                %150.0
  lgl$#-          %150.2 = Identical                %150.1, false
  cp              %150.3 = Checkpoint                -> BB152 (default) | BB151 (if assume failed)
BB149   <- [147]
  val+            %149.0 = CallSafeBuiltin    wed   is.logical(%146.7)    <val?_>
  lgl$-           %149.1 = AsLogical          e     %149.0
  lgl$-           %149.2 = LOr                      %146.10, %149.1
  goto BB150
BB148   <- [147]
  fs              %148.0 = FrameState         R     0x56368c42d1f0+7265: [%143.1], env=e1.3
  env             e148.1 = MaterializeEnv           , e146.11   <@?>
  (cls|spec|blt)  %148.2 = LdFun              !v    is.logical, e148.1
  fs              %148.3 = FrameState         R     0x56368c40f240+131: [%146.10, %148.2], env=e148.1, next=%148.0
  void                    Deopt              !v    %148.3, DeadCall@0x56368ba75918[Call#1], %148.2   !
BB62   <- [60]
  val?^ | miss    %62.0 = LdVar              eR    from, e1.3
  val?            %62.1 = Force!             !v    %62.0, e1.3   <val?_>
  val?^ | miss    %62.2 = LdVar              eR    length.out, e1.3
  val?            %62.3 = Force!             !v    %62.2, e1.3   <val?_>
  lgl$#-          %62.4 = IsType                   %62.3 isA val?+
  cp              %62.5 = Checkpoint                -> BB64 (default) | BB63 (if assume failed)
BB61   <- [60]
  (cls|spec|blt)  %61.0 = LdFun              !v    is.logint, e1.3
  fs              %61.1 = FrameState         R     0x56368c42d1f0+5215: [%61.0], env=e1.3
  void                    Deopt              !v    %61.1, DeadCall@0x56368bb729c0[Call#68], %61.0   !
BB59   <- [55]
  (cls|spec|blt)  %59.0 = LdFun              !v    is.logint, e1.3
  fs              %59.1 = FrameState         R     0x56368c42d1f0+4097: [%59.0], env=e1.3
  void                    Deopt              !v    %59.1, DeadCall@0x56368bb729c0[Call#53], %59.0   !
BB56   <- [55]
  lgl$-           %56.0 = Missing            eR    from, e1.3
  lgl$#-          %56.1 = CheckTrueFalse     e     %56.0
  void                    Branch                   %56.1 -> BB58 (if true) | BB57 (if false)
BB290   <- [157]
  val?^ | miss    %290.0 = LdVar              eR    as.double, e1.3
  lgl$#-          %290.1 = Identical                <blt as.double>, %290.0   <true>
  void                    Assume             D     %290.1, %155.4 (DeadBranchReached@0x56368bb729c0[Test#32])
  val?^ | miss    %290.3 = LdVar              eR    from, e1.3
  lgl$#-          %290.4 = IsType                   %290.3 isA int$~-
  void                    Assume             D     %290.4, %155.4 (Typecheck@0x56368bb729c0[Type#352])
  int$~-          %290.6 = CastType           d     dn %290.3
  int$-           %290.7 = Force!<wrapped>          %290.6,    <int$->
  val+            %290.8 = CallSafeBuiltin    wed   as.double(%290.7)    <real$->
  lgl$#-          %290.9 = IsType                   %290.8 isA real$-
  cp              %290.10 = Checkpoint                -> BB292 (default) | BB291 (if assume failed)
BB158   <- [157]
  val?^ | miss    %158.0 = LdVar              eR    from, e1.3
  val?            %158.1 = Force!             !v    %158.0, e1.3   <val?_>
  goto BB159
BB152   <- [150]
  void                    Branch                   %150.2 -> BB293 (if true) | BB153 (if false)
BB151   <- [150]
  fs              %151.0 = FrameState         R     0x56368c42d1f0+7265: [%143.1], env=e1.3
  fs              %151.1 = FrameState         R     0x56368c40f240+201: [%150.0], env=e146.11, next=%151.0
  void                    Deopt              !v    %151.1   !
BB64   <- [62]
  void                    Assume             D     %62.4, %62.5 (Typecheck@0x56368bb729c0[Type#220])
  val?+           %64.1 = CastType           d     dn %62.3   <val?_>
  (real|complex)+ %64.2 = Sub                wed   %64.1, 1, elided   <val?_>
  cp              %64.3 = Checkpoint                -> BB66 (default) | BB65 (if assume failed)
BB63   <- [62]
  fs              %63.0 = FrameState         R     0x56368c42d1f0+5284: [%62.1, %62.3], env=e1.3
  void                    Deopt              !v    %63.0   !
BB58   <- [56]
  (cls|spec|blt)  %58.0 = LdFun              !v    is.logint, e1.3
  fs              %58.1 = FrameState         R     0x56368c42d1f0+2991: [%58.0], env=e1.3
  void                    Deopt              !v    %58.1, DeadCall@0x56368bb729c0[Call#36], %58.0   !
BB57   <- [56]
  (cls|spec|blt)  %57.0 = LdFun              !v    stop, e1.3
  fs              %57.1 = FrameState         R     0x56368c42d1f0+2949: [%57.0], env=e1.3
  void                    Deopt              !v    %57.1, DeadCall@0x56368bb729c0[Call#35], %57.0   !
BB292   <- [290]
  void                    Assume             D     %290.9, %290.10 (Typecheck@0x56368bb729c0[Type#353])
  goto BB159
BB291   <- [290]
  fs              %291.0 = FrameState         R     0x56368c42d1f0+7425: [%155.3, %290.8], env=e1.3
  void                    Deopt              !v    %291.0   !
BB159   <- [158, 292]
  val?            %159.0 = Phi                      %158.1:BB158, %290.8:BB292
  val?            %159.1 = Sub                !v    %155.3, %159.0, e1.3   <real$->
  lgl$#-          %159.2 = IsType                   %159.1 isA real$-
  cp              %159.3 = Checkpoint                -> BB161 (default) | BB160 (if assume failed)
BB293   <- [152]
  goto BB154
BB153   <- [152]
  val?^ | miss    %153.0 = LdVar              eRd   is.object, e146.11
  lgl$#-          %153.1 = Identical                <blt is.object>, %153.0   <true>
  void                    Assume             D     %153.1, %150.3 (DeadBranchReached@0x56368ba75918[Test#2])
  lgl$#-          %153.3 = CallSafeBuiltin    wed   is.object(%146.7)    <lgl$->
  lgl$#-          %153.4 = Not                d     %153.3, elided
  lgl$-           %153.5 = LAnd                     %150.1, %153.4
  goto BB154
BB66   <- [64]
  lgl$#-          %66.0 = IsType                   %62.1 isA val?+
  void                    Assume             D     %66.0, %64.3 (Typecheck@0x56368bb729c0[Type#219])
  val?+           %66.2 = CastType           d     dn %62.1   <val?_>
  (int|real|complex)+ %66.3 = Add                wed   %66.2, %64.2, elided   <val?_>
  void                    StVar              lW    to, %66.3, e1.3
  val?^ | miss    %66.5 = LdVar              eR    intn1, e1.3
  val?            %66.6 = Force!             !v    %66.5, e1.3   <val?_>
  lgl$-           %66.7 = AsLogical          e     %66.6
  lgl$#-          %66.8 = Identical                %66.7, false
  lgl$-           %66.9 = AsLogical                %66.7
  lgl$#-          %66.10 = Identical                %66.9, false
  void                    Branch                   %66.8 -> BB68 (if true) | BB67 (if false)
BB65   <- [64]
  fs              %65.0 = FrameState         R     0x56368c42d1f0+5296: [%62.1, %64.2], env=e1.3
  void                    Deopt              !v    %65.0   !
BB161   <- [159]
  void                    Assume             D     %159.2, %159.3 (Typecheck@0x56368bb729c0[Type#354])
  real$-          %161.1 = CastType           d     dn %159.1
  void                    StVar              lW    del, %161.1, e1.3
  lgl$-           %161.3 = Eq                 d     %161.1, 0, elided   <lgl$->
  lgl$-           %161.4 = AsLogical                %161.3
  lgl$#-          %161.5 = Identical                %161.4, false
  void                    Branch                   %161.5 -> BB289 (if true) | BB162 (if false)
BB160   <- [159]
  fs              %160.0 = FrameState         R     0x56368c42d1f0+7431: [%159.1], env=e1.3
  void                    Deopt              !v    %160.0   !
BB154   <- [293, 153]
  lgl$-           %154.0 = Phi                      %153.5:BB153, %150.1:BB293
  lgl$-           %154.1 = AsLogical                %154.0
  lgl$-           %154.2 = LAnd                     %143.1, %154.1
  goto BB155
BB68   <- [66]
  void                    Branch                   %66.10 -> BB70 (if true) | BB69 (if false)
BB67   <- [66]
  (cls|spec|blt)  %67.0 = LdFun              !v    is.logint, e1.3
  fs              %67.1 = FrameState         R     0x56368c42d1f0+5343: [%66.7, %67.0], env=e1.3
  void                    Deopt              !v    %67.1, DeadCall@0x56368bb729c0[Call#69], %67.0   !
BB289   <- [161]
  goto BB165
BB162   <- [161]
  val?^ | miss    %162.0 = LdVar              eR    to, e1.3
  val?            %162.1 = Force!             !v    %162.0, e1.3   <val?_>
  lgl$#-          %162.2 = IsType                   %162.1 isA val?+
  cp              %162.3 = Checkpoint                -> BB164 (default) | BB163 (if assume failed)
BB70   <- [68]
  void                    StVar              lW    intdel, %66.9, e1.3
  lgl$#-          %70.1 = CheckTrueFalse     e     %66.9
  void                    Branch                   %70.1 -> BB125 (if true) | BB71 (if false)
BB69   <- [68]
  val?^ | miss    %69.0 = LdVar              eR    to, e1.3
  val?            %69.1 = Force!             !v    %69.0, e1.3   <val?_>
  (cls|spec|blt)  %69.2 = LdFun              !v    $, e1.3
  fs              %69.3 = FrameState         R     0x56368c42d1f0+5403: [%66.9, %69.1, %69.2], env=e1.3
  void                    Deopt              !v    %69.3, DeadCall@0x56368bb729c0[Call#70], %69.2   !
BB165   <- [289, 164]
  lgl$-           %165.0 = Phi                      %164.4:BB164, %161.4:BB289
  cp              %165.1 = Checkpoint                -> BB167 (default) | BB166 (if assume failed)
BB164   <- [162]
  void                    Assume             D     %162.2, %162.3 (Typecheck@0x56368bb729c0[Type#357])
  val?+           %164.1 = CastType           d     dn %162.1   <val?_>
  lgl             %164.2 = Eq                 wed   %164.1, 0, elided   <val?_>
  lgl$-           %164.3 = AsLogical          e     %164.2
  lgl$-           %164.4 = LAnd                     %161.4, %164.3
  goto BB165
BB163   <- [162]
  fs              %163.0 = FrameState         R     0x56368c42d1f0+7487: [%161.4, %162.1], env=e1.3
  void                    Deopt              !v    %163.0   !
BB125   <- [70]
  (cls|spec|blt)  %125.0 = LdFun              !v    storage.mode<-, e1.3
  fs              %125.1 = FrameState         R     0x56368c42d1f0+5493: ["integer", %125.0], env=e1.3
  void                    Deopt              !v    %125.1, DeadCall@0x56368bb729c0[Call#71], %125.0   !
BB71   <- [70]
  lgl$-           %71.0 = Missing            eR    from, e1.3
  lgl$#-          %71.1 = CheckTrueFalse     e     %71.0
  void                    Branch                   %71.1 -> BB114 (if true) | BB72 (if false)
BB167   <- [165]
  lgl$#-          %167.0 = CheckTrueFalse     e     %165.0
  void                    Branch                   %167.0 -> BB288 (if true) | BB168 (if false)
BB166   <- [165]
  fs              %166.0 = FrameState         R     0x56368c42d1f0+7506: [%165.0], env=e1.3
  void                    Deopt              !v    %166.0   !
BB114   <- [71]
  val?^ | miss    %114.0 = LdVar              eR    to, e1.3
  val?            %114.1 = Force!             !v    %114.0, e1.3   <val?_>
  val?^ | miss    %114.2 = LdVar              eR    length.out, e1.3
  val?            %114.3 = Force!             !v    %114.2, e1.3   <val?_>
  lgl$#-          %114.4 = IsType                   %114.3 isA val?+
  cp              %114.5 = Checkpoint                -> BB116 (default) | BB115 (if assume failed)
BB72   <- [71]
  goto BB73
BB288   <- [167]
  val?^ | miss    %288.0 = LdVar              eR    to, e1.3
  void                    Visible            v     
  val?            %288.2 = Force!             !     %288.0, e1.3   <val?_>
  goto BB130
BB168   <- [167]
  val?^ | miss    %168.0 = LdVar              eR    length, e1.3
  lgl$#-          %168.1 = Identical                <blt length>, %168.0   <true>
  void                    Assume             D     %168.1, %165.1 (DeadBranchReached@0x56368bb729c0[Test#33])
  val?^ | miss    %168.3 = LdVar              eR    by, e1.3
  val?            %168.4 = Force!<lazy>       !v    %168.3, e1.3   <int$->
  lgl$#-          %168.5 = IsType                   %168.4 isA int$-
  cp              %168.6 = Checkpoint                -> BB170 (default) | BB169 (if assume failed)
BB116   <- [114]
  void                    Assume             D     %114.4, %114.5 (Typecheck@0x56368bb729c0[Type#237])
  val?+           %116.1 = CastType           d     dn %114.3   <val?_>
  (real|complex)+ %116.2 = Sub                wed   %116.1, 1, elided   <val?_>
  cp              %116.3 = Checkpoint                -> BB118 (default) | BB117 (if assume failed)
BB115   <- [114]
  fs              %115.0 = FrameState         R     0x56368c42d1f0+5667: [%114.1, %114.3], env=e1.3
  void                    Deopt              !v    %115.0   !
BB73   <- [119, 123, 72]
  val?^ | miss    %73.0 = LdVar              eR    length.out, e1.3
  val?            %73.1 = Force!             !v    %73.0, e1.3   <val?_>
  lgl$#-          %73.2 = IsType                   %73.1 isA val?+
  cp              %73.3 = Checkpoint                -> BB75 (default) | BB74 (if assume failed)
BB170   <- [168]
  void                    Assume             D     %168.5, %168.6 (Typecheck@0x56368bb729c0[Type#361])
  val?^ | miss    %170.1 = LdVar              eR    is.logint, e1.3
  lgl$#-          %170.2 = Identical                %170.1, %1.4
  void                    Assume             D     %170.2, %168.6 (CallTarget@0x56368bb729c0[Call#103])
  val?^ | miss    %170.4 = LdVar              eR    is.integer, e1.3
  lgl$#-          %170.5 = Identical                <blt is.integer>, %170.4   <true>
  void                    Assume             D     %170.5, %168.6 (DeadBranchReached@0x56368ba75918[Test#0])
  val?^ | miss    %170.7 = LdVar              eR    by, e1.3
  val?            %170.8 = Force!<wrapped>    !v    %170.7, e1.3   <int$->
  prom-           %170.9 = MkArg                    %170.8, unknown--fromOverride[0x56368de3b350]_p4 (!refl), e1.3
  val?~           %170.10 = CastType                 up %170.9
  lgl$#-          %170.11 = CallSafeBuiltin    wed   is.integer(%170.8)    <lgl$->
  env             e170.12 = (MkEnv)            l     .=%170.10, parent=e1.3, context 0
  void                    Branch                   %170.11 -> BB287 (if true) | BB171 (if false)
BB169   <- [168]
  fs              %169.0 = FrameState         R     0x56368c42d1f0+7601: [<blt length>, %168.4], env=e1.3
  void                    Deopt              !v    %169.0   !
BB118   <- [116]
  lgl$#-          %118.0 = IsType                   %114.1 isA val?+
  void                    Assume             D     %118.0, %116.3 (Typecheck@0x56368bb729c0[Type#236])
  val?+           %118.2 = CastType           d     dn %114.1   <val?_>
  (int|real|complex)+ %118.3 = Sub                wed   %118.2, %116.2, elided   <val?_>
  void                    StVar              lW    from, %118.3, e1.3
  val?^ | miss    %118.5 = LdVar              eR    intdel, e1.3
  val?            %118.6 = Force!             !v    %118.5, e1.3   <val?_>
  lgl$#-          %118.7 = CheckTrueFalse     we    %118.6
  void                    Branch                   %118.7 -> BB120 (if true) | BB119 (if false)
BB117   <- [116]
  fs              %117.0 = FrameState         R     0x56368c42d1f0+5679: [%114.1, %116.2], env=e1.3
  void                    Deopt              !v    %117.0   !
BB75   <- [73]
  void                    Assume             D     %73.2, %73.3 (Typecheck@0x56368bb729c0[Type#249])
  val?+           %75.1 = CastType           d     dn %73.1   <val?_>
  lgl             %75.2 = Gt                 wed   %75.1, 2L, elided   <val?_>
  lgl$#-          %75.3 = CheckTrueFalse     we    %75.2
  void                    Branch                   %75.3 -> BB77 (if true) | BB76 (if false)
BB74   <- [73]
  fs              %74.0 = FrameState         R     0x56368c42d1f0+5928: [%73.1], env=e1.3
  void                    Deopt              !v    %74.0   !
BB287   <- [170]
  goto BB174
BB171   <- [170]
  val?^ | miss    %171.0 = LdVar              eRd   is.logical, e170.12
  lgl$#-          %171.1 = Identical                <blt is.logical>, %171.0   <@?>
  void                    Branch                   %171.1 -> BB173 (if true) | BB172 (if false)
BB120   <- [118]
  val?^ | miss    %120.0 = LdVar              eR    intn1, e1.3
  val?            %120.1 = Force!             !v    %120.0, e1.3   <val?_>
  lgl$-           %120.2 = AsLogical          e     %120.1
  lgl$#-          %120.3 = Identical                %120.2, false
  void                    Branch                   %120.3 -> BB122 (if true) | BB121 (if false)
BB119   <- [118]
  goto BB73
BB77   <- [75]
  val?^ | miss    %77.0 = LdVar              eR    from, e1.3
  val?            %77.1 = Force!             !v    %77.0, e1.3   <val?_>
  val?^ | miss    %77.2 = LdVar              eR    to, e1.3
  val?            %77.3 = Force!             !v    %77.2, e1.3   <val?_>
  lgl$#-          %77.4 = IsType                   %77.3 isA val?+
  lgl$#-          %77.5 = IsType                   %77.1 isA val?+
  cp              %77.6 = Checkpoint                -> BB79 (default) | BB78 (if assume failed)
BB76   <- [75]
  (cls|spec|blt)  %76.0 = LdFun              !v    as.vector, e1.3
  fs              %76.1 = FrameState         R     0x56368c42d1f0+5956: [%76.0], env=e1.3
  void                    Deopt              !v    %76.1, DeadCall@0x56368bb729c0[Call#75], %76.0   !
BB174   <- [287, 173]
  lgl$-           %174.0 = Phi                      %173.2:BB173, %170.11:BB287
  lgl$-           %174.1 = AsLogical                %174.0
  lgl$#-          %174.2 = Identical                %174.1, false
  cp              %174.3 = Checkpoint                -> BB176 (default) | BB175 (if assume failed)
BB173   <- [171]
  val+            %173.0 = CallSafeBuiltin    wed   is.logical(%170.8)    <val?_>
  lgl$-           %173.1 = AsLogical          e     %173.0
  lgl$-           %173.2 = LOr                      %170.11, %173.1
  goto BB174
BB172   <- [171]
  fs              %172.0 = FrameState         R     0x56368c42d1f0+7716: [], env=e1.3
  env             e172.1 = MaterializeEnv           , e170.12   <@?>
  (cls|spec|blt)  %172.2 = LdFun              !v    is.logical, e172.1
  fs              %172.3 = FrameState         R     0x56368c40f240+131: [%170.11, %172.2], env=e172.1, next=%172.0
  void                    Deopt              !v    %172.3, DeadCall@0x56368ba75918[Call#1], %172.2   !
BB122   <- [120]
  void                    StVar              lW    intdel, %120.2, e1.3
  lgl$#-          %122.1 = CheckTrueFalse     e     %120.2
  void                    Branch                   %122.1 -> BB124 (if true) | BB123 (if false)
BB121   <- [120]
  val?^ | miss    %121.0 = LdVar              eR    from, e1.3
  val?            %121.1 = Force!             !v    %121.0, e1.3   <val?_>
  (cls|spec|blt)  %121.2 = LdFun              !v    $, e1.3
  fs              %121.3 = FrameState         R     0x56368c42d1f0+5765: [%120.2, %121.1, %121.2], env=e1.3
  void                    Deopt              !v    %121.3, DeadCall@0x56368bb729c0[Call#73], %121.2   !
BB79   <- [77]
  void                    Assume             D     %77.5, %77.6 (Typecheck@0x56368bb729c0[Type#261])
  val?+           %79.1 = CastType           d     dn %77.1   <val?_>
  void                    Assume             D     %77.4, %77.6 (Typecheck@0x56368bb729c0[Type#262])
  val?+           %79.3 = CastType           d     dn %77.3   <val?_>
  lgl             %79.4 = Eq                 wed   %79.1, %79.3, elided   <val?_>
  lgl$#-          %79.5 = CheckTrueFalse     we    %79.4
  void                    Branch                   %79.5 -> BB113 (if true) | BB80 (if false)
BB78   <- [77]
  fs              %78.0 = FrameState         R     0x56368c42d1f0+6150: [%77.1, %77.3], env=e1.3
  void                    Deopt              !v    %78.0   !
BB176   <- [174]
  void                    Branch                   %174.2 -> BB286 (if true) | BB177 (if false)
BB175   <- [174]
  fs              %175.0 = FrameState         R     0x56368c42d1f0+7716: [], env=e1.3
  fs              %175.1 = FrameState         R     0x56368c40f240+201: [%174.0], env=e170.12, next=%175.0
  void                    Deopt              !v    %175.1   !
BB124   <- [122]
  (cls|spec|blt)  %124.0 = LdFun              !v    storage.mode<-, e1.3
  fs              %124.1 = FrameState         R     0x56368c42d1f0+5856: ["integer", %124.0], env=e1.3
  void                    Deopt              !v    %124.1, DeadCall@0x56368bb729c0[Call#74], %124.0   !
BB123   <- [122]
  goto BB73
BB113   <- [79]
  (cls|spec|blt)  %113.0 = LdFun              !v    rep.int, e1.3
  fs              %113.1 = FrameState         R     0x56368c42d1f0+6955: [%113.0], env=e1.3
  void                    Deopt              !v    %113.1, DeadCall@0x56368bb729c0[Call#94], %113.0   !
BB80   <- [79]
  val?^ | miss    %80.0 = LdVar              eR    length.out, e1.3
  val?            %80.1 = Force!             !v    %80.0, e1.3   <val?_>
  lgl$#-          %80.2 = IsType                   %80.1 isA val?+
  cp              %80.3 = Checkpoint                -> BB82 (default) | BB81 (if assume failed)
BB286   <- [176]
  goto BB178
BB177   <- [176]
  val?^ | miss    %177.0 = LdVar              eRd   is.object, e170.12
  lgl$#-          %177.1 = Identical                <blt is.object>, %177.0   <true>
  void                    Assume             D     %177.1, %174.3 (DeadBranchReached@0x56368ba75918[Test#2])
  lgl$#-          %177.3 = CallSafeBuiltin    wed   is.object(%170.8)    <lgl$->
  lgl$#-          %177.4 = Not                d     %177.3, elided
  lgl$-           %177.5 = LAnd                     %174.1, %177.4
  goto BB178
BB82   <- [80]
  void                    Assume             D     %80.2, %80.3 (Typecheck@0x56368bb729c0[Type#264])
  val?+           %82.1 = CastType           d     dn %80.1   <val?_>
  (int|real|complex)+ %82.2 = Sub                wed   %82.1, 1L, elided   <val?_>
  void                    StVar              lW    n1, %82.2, e1.3
  val?^ | miss    %82.4 = LdVar              eR    intdel, e1.3
  val?            %82.5 = Force!             !v    %82.4, e1.3   <val?_>
  lgl$-           %82.6 = AsLogical          e     %82.5
  lgl$#-          %82.7 = Identical                %82.6, false
  void                    Branch                   %82.7 -> BB112 (if true) | BB83 (if false)
BB81   <- [80]
  fs              %81.0 = FrameState         R     0x56368c42d1f0+6176: [%80.1], env=e1.3
  void                    Deopt              !v    %81.0   !
BB178   <- [286, 177]
  lgl$-           %178.0 = Phi                      %177.5:BB177, %174.1:BB286
  cp              %178.1 = Checkpoint                -> BB180 (default) | BB179 (if assume failed)
BB112   <- [82]
  goto BB84
BB83   <- [82]
  val?^ | miss    %83.0 = LdVar              eR    intn1, e1.3
  val?            %83.1 = Force!             !v    %83.0, e1.3   <val?_>
  lgl$-           %83.2 = AsLogical          e     %83.1
  lgl$-           %83.3 = LAnd                     %82.6, %83.2
  goto BB84
BB180   <- [178]
  lgl$-           %180.0 = Not                d     %178.0, elided
  lgl$#-          %180.1 = CheckTrueFalse     e     %180.0
  void                    Branch                   %180.1 -> BB285 (if true) | BB181 (if false)
BB179   <- [178]
  fs              %179.0 = FrameState         R     0x56368c42d1f0+7716: [], env=e1.3
  fs              %179.1 = FrameState         R     0x56368c40f240+308: [%178.0], env=e170.12, next=%179.0
  void                    Deopt              !v    %179.1   !
BB84   <- [112, 83]
  lgl$-           %84.0 = Phi                      %83.3:BB83, %82.6:BB112
  lgl$-           %84.1 = AsLogical                %84.0
  lgl$#-          %84.2 = Identical                %84.1, false
  void                    Branch                   %84.2 -> BB111 (if true) | BB85 (if false)
BB285   <- [180]
  void                    StVar              lW    int, false, e1.3
  goto BB183
BB181   <- [180]
  val?^ | miss    %181.0 = LdVar              eR    int, e1.3
  lgl$#-          %181.1 = IsType                   %181.0 isA lgl$-
  void                    Assume             D     %181.1, %178.1 (Typecheck@0x56368bb729c0[Type#366])
  lgl$-           %181.3 = CastType           d     dn %181.0
  lgl$-           %181.4 = Not                d     %181.3, elided
  lgl$#-          %181.5 = CheckTrueFalse     e     %181.4
  void                    Branch                   %181.5 -> BB284 (if true) | BB182 (if false)
BB111   <- [84]
  goto BB90
BB85   <- [84]
  val?^ | miss    %85.0 = LdVar              eR    from, e1.3
  val?            %85.1 = Force!             !v    %85.0, e1.3   <val?_>
  val?^ | miss    %85.2 = LdVar              eR    n1, e1.3
  val?            %85.3 = Force!             !v    %85.2, e1.3   <val?_>
  lgl$#-          %85.4 = IsType                   %85.3 isA val?+
  lgl$#-          %85.5 = IsType                   %85.1 isA val?+
  cp              %85.6 = Checkpoint                -> BB87 (default) | BB86 (if assume failed)
BB183   <- [285, 182]
  cp              %183.0 = Checkpoint                -> BB185 (default) | BB184 (if assume failed)
BB284   <- [181]
  (cls|spec|blt)  %284.0 = LdFun              !v    storage.mode<-, e1.3
  fs              %284.1 = FrameState         R     0x56368c42d1f0+7765: ["double", %284.0], env=e1.3
  void                    Deopt              !v    %284.1, DeadCall@0x56368bb729c0[Call#104], %284.0   !
BB182   <- [181]
  goto BB183
BB90   <- [111, 89]
  lgl$-           %90.0 = Phi                      %89.7:BB89, %84.1:BB111
  lgl$#-          %90.1 = CheckTrueFalse     e     %90.0
  void                    Branch                   %90.1 -> BB104 (if true) | BB91 (if false)
BB87   <- [85]
  void                    Assume             D     %85.5, %85.6 (Typecheck@0x56368bb729c0[Type#268])
  val?+           %87.1 = CastType           d     dn %85.1   <val?_>
  void                    Assume             D     %85.4, %85.6 (Typecheck@0x56368bb729c0[Type#269])
  val?+           %87.3 = CastType           d     dn %85.3   <val?_>
  (int|real|complex)+ %87.4 = Mod                wed   %87.1, %87.3, elided   <val?_>
  val?^ | miss    %87.5 = LdVar              eR    to, e1.3
  val?            %87.6 = Force!             !v    %87.5, e1.3   <val?_>
  val?^ | miss    %87.7 = LdVar              eR    n1, e1.3
  val?            %87.8 = Force!             !v    %87.7, e1.3   <val?_>
  lgl$#-          %87.9 = IsType                   %87.8 isA val?+
  lgl$#-          %87.10 = IsType                   %87.6 isA val?+
  cp              %87.11 = Checkpoint                -> BB89 (default) | BB88 (if assume failed)
BB86   <- [85]
  fs              %86.0 = FrameState         R     0x56368c42d1f0+6269: [%84.1, %85.1, %85.3], env=e1.3
  void                    Deopt              !v    %86.0   !
BB185   <- [183]
  val?^ | miss    %185.0 = LdVar              eR    is.finite, e1.3
  lgl$#-          %185.1 = Identical                <blt is.finite>, %185.0   <true>
  void                    Assume             D     %185.1, %183.0 (DeadBranchReached@0x56368bb729c0[Test#34])
  val?^ | miss    %185.3 = LdVar              eR    del, e1.3
  lgl$#-          %185.4 = IsType                   %185.3 isA real$-
  void                    Assume             D     %185.4, %183.0 (Typecheck@0x56368bb729c0[Type#369])
  real$-          %185.6 = CastType           d     dn %185.3
  val?            %185.7 = CallBuiltin        !v    is.finite(%185.6) e1.3   <lgl$->
  lgl$#-          %185.8 = IsType                   %185.7 isA lgl$-
  cp              %185.9 = Checkpoint                -> BB187 (default) | BB186 (if assume failed)
BB184   <- [183]
  fs              %184.0 = FrameState         R     0x56368c42d1f0+7848: [], env=e1.3
  void                    Deopt              !v    %184.0   !
BB104   <- [90]
  val?^ | miss    %104.0 = LdVar              eR    to, e1.3
  val?            %104.1 = Force!             !v    %104.0, e1.3   <val?_>
  val?^ | miss    %104.2 = LdVar              eR    n1, e1.3
  val?            %104.3 = Force!             !v    %104.2, e1.3   <val?_>
  lgl$#-          %104.4 = IsType                   %104.3 isA val?+
  lgl$#-          %104.5 = IsType                   %104.1 isA val?+
  cp              %104.6 = Checkpoint                -> BB106 (default) | BB105 (if assume failed)
BB91   <- [90]
  val?^ | miss    %91.0 = LdVar              eR    intdel, e1.3
  val?            %91.1 = Force!             !v    %91.0, e1.3   <val?_>
  lgl$#-          %91.2 = CheckTrueFalse     we    %91.1
  void                    Branch                   %91.2 -> BB103 (if true) | BB92 (if false)
BB89   <- [87]
  void                    Assume             D     %87.10, %87.11 (Typecheck@0x56368bb729c0[Type#271])
  val?+           %89.1 = CastType           d     dn %87.6   <val?_>
  void                    Assume             D     %87.9, %87.11 (Typecheck@0x56368bb729c0[Type#272])
  val?+           %89.3 = CastType           d     dn %87.8   <val?_>
  (int|real|complex)+ %89.4 = Mod                wed   %89.1, %89.3, elided   <val?_>
  lgl             %89.5 = Eq                 wed   %87.4, %89.4, elided   <val?_>
  lgl$-           %89.6 = AsLogical          e     %89.5
  lgl$-           %89.7 = LAnd                     %84.1, %89.6
  goto BB90
BB88   <- [87]
  fs              %88.0 = FrameState         R     0x56368c42d1f0+6303: [%84.1, %87.4, %87.6, %87.8], env=e1.3
  void                    Deopt              !v    %88.0   !
BB187   <- [185]
  void                    Assume             D     %185.8, %185.9 (Typecheck@0x56368bb729c0[Type#370])
  lgl$-           %187.1 = CastType           d     dn %185.7
  void                    StVar              lW    finite.del, %187.1, e1.3
  cp              %187.3 = Checkpoint                -> BB189 (default) | BB188 (if assume failed)
BB186   <- [185]
  fs              %186.0 = FrameState         R     0x56368c42d1f0+7939: [%185.7], env=e1.3
  void                    Deopt              !v    %186.0   !
BB106   <- [104]
  void                    Assume             D     %104.5, %104.6 (Typecheck@0x56368bb729c0[Type#316])
  val?+           %106.1 = CastType           d     dn %104.1   <val?_>
  void                    Assume             D     %104.4, %104.6 (Typecheck@0x56368bb729c0[Type#317])
  val?+           %106.3 = CastType           d     dn %104.3   <val?_>
  (int|real|complex)+ %106.4 = IDiv               wed   %106.1, %106.3, elided   <val?_>
  val?^ | miss    %106.5 = LdVar              eR    from, e1.3
  val?            %106.6 = Force!             !v    %106.5, e1.3   <val?_>
  val?^ | miss    %106.7 = LdVar              eR    n1, e1.3
  val?            %106.8 = Force!             !v    %106.7, e1.3   <val?_>
  lgl$#-          %106.9 = IsType                   %106.8 isA val?+
  lgl$#-          %106.10 = IsType                   %106.6 isA val?+
  cp              %106.11 = Checkpoint                -> BB108 (default) | BB107 (if assume failed)
BB105   <- [104]
  fs              %105.0 = FrameState         R     0x56368c42d1f0+6761: [%104.1, %104.3], env=e1.3
  void                    Deopt              !v    %105.0   !
BB103   <- [91]
  (cls|spec|blt)  %103.0 = LdFun              !v    storage.mode<-, e1.3
  fs              %103.1 = FrameState         R     0x56368c42d1f0+6364: ["double", %103.0], env=e1.3
  void                    Deopt              !v    %103.1, DeadCall@0x56368bb729c0[Call#79], %103.0   !
BB92   <- [91]
  val?^ | miss    %92.0 = LdVar              eR    to, e1.3
  val?            %92.1 = Force!             !v    %92.0, e1.3   <val?_>
  val?^ | miss    %92.2 = LdVar              eR    from, e1.3
  val?            %92.3 = Force!             !v    %92.2, e1.3   <val?_>
  lgl$#-          %92.4 = IsType                   %92.3 isA val?+
  lgl$#-          %92.5 = IsType                   %92.1 isA val?+
  cp              %92.6 = Checkpoint                -> BB94 (default) | BB93 (if assume failed)
BB189   <- [187]
  lgl$#-          %189.0 = CheckTrueFalse     e     %187.1
  void                    Branch                   %189.0 -> BB281 (if true) | BB190 (if false)
BB188   <- [187]
  fs              %188.0 = FrameState         R     0x56368c42d1f0+7955: [%187.1], env=e1.3
  void                    Deopt              !v    %188.0   !
BB108   <- [106]
  void                    Assume             D     %106.10, %106.11 (Typecheck@0x56368bb729c0[Type#319])
  val?+           %108.1 = CastType           d     dn %106.6   <val?_>
  void                    Assume             D     %106.9, %106.11 (Typecheck@0x56368bb729c0[Type#320])
  val?+           %108.3 = CastType           d     dn %106.8   <val?_>
  (int|real|complex)+ %108.4 = IDiv               wed   %108.1, %108.3, elided   <val?_>
  (int|real|complex)+ %108.5 = Sub                wed   %106.4, %108.4, elided   <val?_>
  void                    StVar              lW    by, %108.5, e1.3
  val?^ | miss    %108.7 = LdVar              eR    cumsum, e1.3
  lgl$#-          %108.8 = Identical                <blt cumsum>, %108.7   <@?>
  void                    Branch                   %108.8 -> BB110 (if true) | BB109 (if false)
BB107   <- [106]
  fs              %107.0 = FrameState         R     0x56368c42d1f0+6795: [%106.4, %106.6, %106.8], env=e1.3
  void                    Deopt              !v    %107.0   !
BB94   <- [92]
  void                    Assume             D     %92.5, %92.6 (Typecheck@0x56368bb729c0[Type#277])
  val?+           %94.1 = CastType           d     dn %92.1   <val?_>
  void                    Assume             D     %92.4, %92.6 (Typecheck@0x56368bb729c0[Type#278])
  val?+           %94.3 = CastType           d     dn %92.3   <val?_>
  (int|real|complex)+ %94.4 = Sub                wed   %94.1, %94.3, elided   <val?_>
  void                    StVar              lW    del, %94.4, e1.3
  val?^ | miss    %94.6 = LdVar              eR    is.finite, e1.3
  lgl$#-          %94.7 = Identical                <blt is.finite>, %94.6   <@?>
  void                    Branch                   %94.7 -> BB96 (if true) | BB95 (if false)
BB93   <- [92]
  fs              %93.0 = FrameState         R     0x56368c42d1f0+6450: [%92.1, %92.3], env=e1.3
  void                    Deopt              !v    %93.0   !
BB281   <- [189]
  val?^ | miss    %281.0 = LdVar              eR    del, e1.3
  lgl$#-          %281.1 = IsType                   %281.0 isA real$-
  void                    Assume             D     %281.1, %187.3 (Typecheck@0x56368bb729c0[Type#378])
  real$-          %281.3 = CastType           d     dn %281.0
  val?^ | miss    %281.4 = LdVar              eR    by, e1.3
  val?            %281.5 = Force!<wrapped>    !v    %281.4, e1.3   <int$->
  val?            %281.6 = Div                !v    %281.3, %281.5, e1.3   <real$->
  lgl$#-          %281.7 = IsType                   %281.6 isA real$-
  cp              %281.8 = Checkpoint                -> BB283 (default) | BB282 (if assume failed)
BB190   <- [189]
  val?^ | miss    %190.0 = LdVar              eR    to, e1.3
  val?            %190.1 = Force!             !v    %190.0, e1.3   <val?_>
  val?^ | miss    %190.2 = LdVar              eR    by, e1.3
  val?            %190.3 = Force!             !v    %190.2, e1.3   <val?_>
  lgl$#-          %190.4 = IsType                   %190.3 isA val?+
  lgl$#-          %190.5 = IsType                   %190.1 isA val?+
  cp              %190.6 = Checkpoint                -> BB192 (default) | BB191 (if assume failed)
BB110   <- [108]
  (cls|spec|blt)  %110.0 = LdFun              !v    rep.int, e1.3
  fs              %110.1 = FrameState         R     0x56368c42d1f0+6886: [<blt cumsum>, %110.0], env=e1.3
  void                    Deopt              !v    %110.1, DeadCall@0x56368bb729c0[Call#91], %110.0   !
BB109   <- [108]
  (cls|spec|blt)  %109.0 = LdFun              !v    cumsum, e1.3
  fs              %109.1 = FrameState         R     0x56368c42d1f0+6849: [%109.0], env=e1.3
  void                    Deopt              !v    %109.1, DeadCall@0x56368bb729c0[Call#87], %109.0   !
BB96   <- [94]
  lgl+            %96.0 = CallSafeBuiltin    wed   is.finite(%94.4)    <val?_>
  lgl$#-          %96.1 = CheckTrueFalse     we    %96.0
  void                    Branch                   %96.1 -> BB102 (if true) | BB97 (if false)
BB95   <- [94]
  (cls|spec|blt)  %95.0 = LdFun              !v    is.finite, e1.3
  fs              %95.1 = FrameState         R     0x56368c42d1f0+6498: [%95.0], env=e1.3
  void                    Deopt              !v    %95.1, DeadCall@0x56368bb729c0[Call#80], %95.0   !
BB283   <- [281]
  void                    Assume             D     %281.7, %281.8 (Typecheck@0x56368bb729c0[Type#380])
  goto BB195
BB282   <- [281]
  fs              %282.0 = FrameState         R     0x56368c42d1f0+8069: [%281.6], env=e1.3
  void                    Deopt              !v    %282.0   !
BB192   <- [190]
  void                    Assume             D     %190.5, %190.6 (Typecheck@0x56368bb729c0[Type#371])
  val?+           %192.1 = CastType           d     dn %190.1   <val?_>
  void                    Assume             D     %190.4, %190.6 (Typecheck@0x56368bb729c0[Type#372])
  val?+           %192.3 = CastType           d     dn %190.3   <val?_>
  (int|real|complex)+ %192.4 = Div                wed   %192.1, %192.3, elided   <val?_>
  val?^ | miss    %192.5 = LdVar              eR    from, e1.3
  val?            %192.6 = Force!             !v    %192.5, e1.3   <val?_>
  val?^ | miss    %192.7 = LdVar              eR    by, e1.3
  val?            %192.8 = Force!             !v    %192.7, e1.3   <val?_>
  lgl$#-          %192.9 = IsType                   %192.8 isA val?+
  lgl$#-          %192.10 = IsType                   %192.6 isA val?+
  cp              %192.11 = Checkpoint                -> BB194 (default) | BB193 (if assume failed)
BB191   <- [190]
  fs              %191.0 = FrameState         R     0x56368c42d1f0+7984: [%190.1, %190.3], env=e1.3
  void                    Deopt              !v    %191.0   !
BB102   <- [96]
  (cls|spec|blt)  %102.0 = LdFun              !v    as.vector, e1.3
  fs              %102.1 = FrameState         R     0x56368c42d1f0+6701: [%102.0], env=e1.3
  void                    Deopt              !v    %102.1, DeadCall@0x56368bb729c0[Call#84], %102.0   !
BB97   <- [96]
  val?^ | miss    %97.0 = LdVar              eR    from, e1.3
  val?            %97.1 = Force!             !v    %97.0, e1.3   <val?_>
  lgl$#-          %97.2 = IsType                   %97.1 isA val?+
  cp              %97.3 = Checkpoint                -> BB99 (default) | BB98 (if assume failed)
BB195   <- [283, 194]
  val?            %195.0 = Phi                      %194.5:BB194, %281.6:BB283   <real$->
  lgl$#-          %195.1 = IsType                   %195.0 isA real$-
  cp              %195.2 = Checkpoint                -> BB197 (default) | BB196 (if assume failed)
BB194   <- [192]
  void                    Assume             D     %192.10, %192.11 (Typecheck@0x56368bb729c0[Type#374])
  val?+           %194.1 = CastType           d     dn %192.6   <val?_>
  void                    Assume             D     %192.9, %192.11 (Typecheck@0x56368bb729c0[Type#375])
  val?+           %194.3 = CastType           d     dn %192.8   <val?_>
  (int|real|complex)+ %194.4 = Div                wed   %194.1, %194.3, elided   <val?_>
  (int|real|complex)+ %194.5 = Sub                wed   %192.4, %194.4, elided   <val?_>
  goto BB195
BB193   <- [192]
  fs              %193.0 = FrameState         R     0x56368c42d1f0+8018: [%192.4, %192.6, %192.8], env=e1.3
  void                    Deopt              !v    %193.0   !
BB99   <- [97]
  void                    Assume             D     %97.2, %97.3 (Typecheck@0x56368bb729c0[Type#283])
  val?+           %99.1 = CastType           d     dn %97.1   <val?_>
  (real|complex)+ %99.2 = Div                wed   %99.1, 4, elided   <val?_>
  void                    StVar              lW    from, %99.2, e1.3
  val?^ | miss    %99.4 = LdVar              eR    to, e1.3
  val?            %99.5 = Force!             !v    %99.4, e1.3   <val?_>
  lgl$#-          %99.6 = IsType                   %99.5 isA val?+
  cp              %99.7 = Checkpoint                -> BB101 (default) | BB100 (if assume failed)
BB98   <- [97]
  fs              %98.0 = FrameState         R     0x56368c42d1f0+6581: [%97.1], env=e1.3
  void                    Deopt              !v    %98.0   !
BB197   <- [195]
  void                    Assume             D     %195.1, %195.2 (Typecheck@0x56368bb729c0[Type#382])
  real$-          %197.1 = CastType           d     dn %195.0
  void                    StVar              lW    n, %197.1, e1.3
  cp              %197.3 = Checkpoint                -> BB199 (default) | BB198 (if assume failed)
BB196   <- [195]
  fs              %196.0 = FrameState         R     0x56368c42d1f0+8074: [%195.0], env=e1.3
  void                    Deopt              !v    %196.0   !
BB101   <- [99]
  void                    Assume             D     %99.6, %99.7 (Typecheck@0x56368bb729c0[Type#285])
  val?+           %101.1 = CastType           d     dn %99.5   <val?_>
  (real|complex)+ %101.2 = Div                wed   %101.1, 4, elided   <val?_>
  void                    StVar              lW    to, %101.2, e1.3
  (cls|spec|blt)  %101.4 = LdFun              !v    as.vector, e1.3
  fs              %101.5 = FrameState         R     0x56368c42d1f0+6647: [%101.4], env=e1.3
  void                    Deopt              !v    %101.5, DeadCall@0x56368bb729c0[Call#81], %101.4   !
BB100   <- [99]
  fs              %100.0 = FrameState         R     0x56368c42d1f0+6616: [%99.5], env=e1.3
  void                    Deopt              !v    %100.0   !
BB199   <- [197]
  val?^ | miss    %199.0 = LdVar              eR    is.finite, e1.3
  lgl$#-          %199.1 = Identical                <blt is.finite>, %199.0   <true>
  void                    Assume             D     %199.1, %197.3 (DeadBranchReached@0x56368bb729c0[Test#35])
  lgl$-           %199.3 = CallSafeBuiltin    wed   is.finite(%197.1)    <lgl$->
  lgl$-           %199.4 = Not                d     %199.3, elided
  lgl$#-          %199.5 = CheckTrueFalse     e     %199.4
  void                    Branch                   %199.5 -> BB264 (if true) | BB200 (if false)
BB198   <- [197]
  fs              %198.0 = FrameState         R     0x56368c42d1f0+8083: [], env=e1.3
  void                    Deopt              !v    %198.0   !
BB264   <- [199]
  val?^ | miss    %264.0 = LdVar              eR    is.na, e1.3
  lgl$#-          %264.1 = Identical                <blt is.na>, %264.0   <@?>
  void                    Branch                   %264.1 -> BB266 (if true) | BB265 (if false)
BB200   <- [199]
  lgl$-           %200.0 = Lt                 d     %197.1, 0L, elided   <lgl$->
  lgl$#-          %200.1 = CheckTrueFalse     e     %200.0
  void                    Branch                   %200.1 -> BB263 (if true) | BB201 (if false)
BB266   <- [264]
  val?^ | miss    %266.0 = LdVar              eR    by, e1.3
  val?            %266.1 = Force!             !v    %266.0, e1.3   <val?_>
  lgl$#-          %266.2 = IsType                   %266.1 isA val?+
  cp              %266.3 = Checkpoint                -> BB268 (default) | BB267 (if assume failed)
BB265   <- [264]
  (cls|spec|blt)  %265.0 = LdFun              !v    is.na, e1.3
  fs              %265.1 = FrameState         R     0x56368c42d1f0+8219: [%265.0], env=e1.3
  void                    Deopt              !v    %265.1, DeadCall@0x56368bb729c0[Call#107], %265.0   !
BB263   <- [200]
  (cls|spec|blt)  %263.0 = LdFun              !v    stop, e1.3
  fs              %263.1 = FrameState         R     0x56368c42d1f0+8459: [%263.0], env=e1.3
  void                    Deopt              !v    %263.1, DeadCall@0x56368bb729c0[Call#109], %263.0   !
BB201   <- [200]
  (cls|spec|blt)  %201.0 = LdFun              !v    $, <0x56368a4e1c10>, e1.3
  prom-           %201.1 = MkArg                    unboundValue, unknown--fromOverride[0x56368de3b350]_p5, e1.3
  prom-           %201.2 = MkArg                    unboundValue, unknown--fromOverride[0x56368de3b350]_p6, e1.3
  val?            %201.3 = Call               !v    %201.0(%201.1, %201.2) e1.3   <int$->
  lgl$#-          %201.4 = IsType                   %201.3 isA int$-
  cp              %201.5 = Checkpoint                -> BB203 (default) | BB202 (if assume failed)
BB268   <- [266]
  void                    Assume             D     %266.2, %266.3 (Typecheck@0x56368bb729c0[Type#385])
  val?+           %268.1 = CastType           d     dn %266.1   <val?_>
  lgl+            %268.2 = CallSafeBuiltin    wed   is.na(%268.1)    <val?_>
  lgl             %268.3 = Not                wed   %268.2, elided
  lgl$-           %268.4 = AsLogical          e     %268.3
  lgl$#-          %268.5 = Identical                %268.4, false
  void                    Branch                   %268.5 -> BB280 (if true) | BB269 (if false)
BB267   <- [266]
  fs              %267.0 = FrameState         R     0x56368c42d1f0+8260: [<blt is.na>, %266.1], env=e1.3
  void                    Deopt              !v    %267.0   !
BB203   <- [201]
  void                    Assume             D     %201.4, %201.5 (Typecheck@0x56368bb729c0[Type#397])
  int$-           %203.1 = CastType           d     dn %201.3
  lgl$-           %203.2 = Gt                 d     %197.1, %203.1, elided   <lgl$->
  lgl$#-          %203.3 = CheckTrueFalse     e     %203.2
  void                    Branch                   %203.3 -> BB262 (if true) | BB204 (if false)
BB202   <- [201]
  fs              %202.0 = FrameState         R     0x56368c42d1f0+8538: [%197.1, %201.3], env=e1.3
  void                    Deopt              !v    %202.0   !
BB280   <- [268]
  goto BB272
BB269   <- [268]
  val?^ | miss    %269.0 = LdVar              eR    by, e1.3
  val?            %269.1 = Force!             !v    %269.0, e1.3   <val?_>
  lgl$#-          %269.2 = IsType                   %269.1 isA val?+
  cp              %269.3 = Checkpoint                -> BB271 (default) | BB270 (if assume failed)
BB262   <- [203]
  (cls|spec|blt)  %262.0 = LdFun              !v    stop, e1.3
  fs              %262.1 = FrameState         R     0x56368c42d1f0+8565: [%262.0], env=e1.3
  void                    Deopt              !v    %262.1, DeadCall@0x56368bb729c0[Call#111], %262.0   !
BB204   <- [203]
  val?^ | miss    %204.0 = LdVar              eR    finite.del, e1.3
  lgl$#-          %204.1 = IsType                   %204.0 isA lgl$-
  void                    Assume             D     %204.1, %201.5 (Typecheck@0x56368bb729c0[Type#399])
  lgl$-           %204.3 = CastType           d     dn %204.0
  lgl$-           %204.4 = AsLogical                %204.3
  lgl$#-          %204.5 = Identical                %204.4, false
  void                    Branch                   %204.5 -> BB261 (if true) | BB205 (if false)
BB272   <- [280, 271]
  lgl$-           %272.0 = Phi                      %271.4:BB271, %268.4:BB280
  lgl$-           %272.1 = AsLogical                %272.0
  lgl$#-          %272.2 = Identical                %272.1, false
  void                    Branch                   %272.2 -> BB279 (if true) | BB273 (if false)
BB271   <- [269]
  void                    Assume             D     %269.2, %269.3 (Typecheck@0x56368bb729c0[Type#387])
  val?+           %271.1 = CastType           d     dn %269.1   <val?_>
  lgl             %271.2 = Eq                 wed   %271.1, 0, elided   <val?_>
  lgl$-           %271.3 = AsLogical          e     %271.2
  lgl$-           %271.4 = LAnd                     %268.4, %271.3
  goto BB272
BB270   <- [269]
  fs              %270.0 = FrameState         R     0x56368c42d1f0+8304: [%268.4, %269.1], env=e1.3
  void                    Deopt              !v    %270.0   !
BB261   <- [204]
  goto BB212
BB205   <- [204]
  val?^ | miss    %205.0 = LdVar              eR    abs, e1.3
  lgl$#-          %205.1 = Identical                <blt abs>, %205.0   <true>
  void                    Assume             D     %205.1, %201.5 (DeadBranchReached@0x56368bb729c0[Test#37])
  val?^ | miss    %205.3 = LdVar              eR    del, e1.3
  lgl$#-          %205.4 = IsType                   %205.3 isA real$-
  void                    Assume             D     %205.4, %201.5 (Typecheck@0x56368bb729c0[Type#401])
  real$-          %205.6 = CastType           d     dn %205.3
  val?            %205.7 = CallBuiltin        !v    abs(%205.6) e1.3   <real$->
  lgl$#-          %205.8 = IsType                   %205.7 isA real$-
  cp              %205.9 = Checkpoint                -> BB207 (default) | BB206 (if assume failed)
BB279   <- [272]
  goto BB276
BB273   <- [272]
  val?^ | miss    %273.0 = LdVar              eR    del, e1.3
  val?            %273.1 = Force!             !v    %273.0, e1.3   <val?_>
  lgl$#-          %273.2 = IsType                   %273.1 isA val?+
  cp              %273.3 = Checkpoint                -> BB275 (default) | BB274 (if assume failed)
BB212   <- [261, 211]
  lgl$-           %212.0 = Phi                      %211.5:BB211, %204.4:BB261
  cp              %212.1 = Checkpoint                -> BB214 (default) | BB213 (if assume failed)
BB207   <- [205]
  void                    Assume             D     %205.8, %205.9 (Typecheck@0x56368bb729c0[Type#402])
  real$-          %207.1 = CastType           d     dn %205.7
  val?^ | miss    %207.2 = LdVar              eR    max, e1.3
  lgl$#-          %207.3 = Identical                <blt max>, %207.2   <true>
  void                    Assume             D     %207.3, %205.9 (DeadBranchReached@0x56368bb729c0[Test#38])
  val?^ | miss    %207.5 = LdVar              eR    abs, e1.3
  lgl$#-          %207.6 = Identical                <blt abs>, %207.5   <true>
  void                    Assume             D     %207.6, %205.9 (DeadBranchReached@0x56368bb729c0[Test#39])
  val?^ | miss    %207.8 = LdVar              eR    to, e1.3
  lgl$#-          %207.9 = IsType                   %207.8 isA int$~-
  void                    Assume             D     %207.9, %205.9 (Typecheck@0x56368bb729c0[Type#408])
  int$~-          %207.11 = CastType           d     dn %207.8
  int$-           %207.12 = Force!<wrapped>          %207.11,    <int$->
  int$-           %207.13 = CallSafeBuiltin    wed   abs(%207.12)    <int$->
  cp              %207.14 = Checkpoint                -> BB209 (default) | BB208 (if assume failed)
BB206   <- [205]
  fs              %206.0 = FrameState         R     0x56368c42d1f0+8705: [%204.4, %205.7], env=e1.3
  void                    Deopt              !v    %206.0   !
BB276   <- [279, 275]
  lgl$-           %276.0 = Phi                      %275.4:BB275, %272.1:BB279
  lgl$#-          %276.1 = CheckTrueFalse     e     %276.0
  void                    Branch                   %276.1 -> BB278 (if true) | BB277 (if false)
BB275   <- [273]
  void                    Assume             D     %273.2, %273.3 (Typecheck@0x56368bb729c0[Type#389])
  val?+           %275.1 = CastType           d     dn %273.1   <val?_>
  lgl             %275.2 = Eq                 wed   %275.1, 0, elided   <val?_>
  lgl$-           %275.3 = AsLogical          e     %275.2
  lgl$-           %275.4 = LAnd                     %272.1, %275.3
  goto BB276
BB274   <- [273]
  fs              %274.0 = FrameState         R     0x56368c42d1f0+8339: [%272.1, %273.1], env=e1.3
  void                    Deopt              !v    %274.0   !
BB214   <- [212]
  lgl$#-          %214.0 = CheckTrueFalse     e     %212.0
  void                    Branch                   %214.0 -> BB260 (if true) | BB215 (if false)
BB213   <- [212]
  fs              %213.0 = FrameState         R     0x56368c42d1f0+9057: [%212.0], env=e1.3
  void                    Deopt              !v    %213.0   !
BB209   <- [207]
  val?^ | miss    %209.0 = LdVar              eR    from, e1.3
  lgl$#-          %209.1 = IsType                   %209.0 isA int$~-
  void                    Assume             D     %209.1, %207.14 (Typecheck@0x56368bb729c0[Type#411])
  int$~-          %209.3 = CastType           d     dn %209.0
  int$-           %209.4 = Force!<wrapped>          %209.3,    <int$->
  int$-           %209.5 = CallSafeBuiltin    wed   abs(%209.4)    <int$->
  int$-           %209.6 = CallSafeBuiltin    wed   max(%207.13, %209.5)    <int$->
  real$-          %209.7 = Div                d     %207.1, %209.6, elided   <real$->
  (cls|spec|blt)  %209.8 = LdFun              !v    $, <0x56368a4e1c10>, e1.3
  prom-           %209.9 = MkArg                    unboundValue, unknown--fromOverride[0x56368de3b350]_p7, e1.3
  prom-           %209.10 = MkArg                    unboundValue, unknown--fromOverride[0x56368de3b350]_p8, e1.3
  val?            %209.11 = Call               !v    %209.8(%209.9, %209.10) e1.3   <real$->
  lgl$#-          %209.12 = IsType                   %209.11 isA real$-
  cp              %209.13 = Checkpoint                -> BB211 (default) | BB210 (if assume failed)
BB208   <- [207]
  fs              %208.0 = FrameState         R     0x56368c42d1f0+8866: [%204.4, %207.1, <blt max>, %207.13], env=e1.3
  void                    Deopt              !v    %208.0   !
BB278   <- [276]
  val?^ | miss    %278.0 = LdVar              eR    from, e1.3
  void                    Visible            v     
  val?            %278.2 = Force!             !     %278.0, e1.3   <val?_>
  goto BB130
BB277   <- [276]
  (cls|spec|blt)  %277.0 = LdFun              !v    stop, e1.3
  fs              %277.1 = FrameState         R     0x56368c42d1f0+8389: [%277.0], env=e1.3
  void                    Deopt              !v    %277.1, DeadCall@0x56368bb729c0[Call#108], %277.0   !
BB260   <- [214]
  val?^ | miss    %260.0 = LdVar              eR    from, e1.3
  void                    Visible            v     
  val?            %260.2 = Force!             !     %260.0, e1.3   <val?_>
  goto BB130
BB215   <- [214]
  val?^ | miss    %215.0 = LdVar              eR    int, e1.3
  lgl$#-          %215.1 = IsType                   %215.0 isA lgl$-
  void                    Assume             D     %215.1, %212.1 (Typecheck@0x56368bb729c0[Type#421])
  lgl$-           %215.3 = CastType           d     dn %215.0
  lgl$#-          %215.4 = CheckTrueFalse     e     %215.3
  void                    Branch                   %215.4 -> BB240 (if true) | BB216 (if false)
BB211   <- [209]
  void                    Assume             D     %209.12, %209.13 (Typecheck@0x56368bb729c0[Type#417])
  real$-          %211.1 = CastType           d     dn %209.11
  real$-          %211.2 = Mul                d     100, %211.1, elided   <real$->
  lgl$-           %211.3 = Lt                 d     %209.7, %211.2, elided   <lgl$->
  lgl$-           %211.4 = AsLogical                %211.3
  lgl$-           %211.5 = LAnd                     %204.4, %211.4
  goto BB212
BB210   <- [209]
  fs              %210.0 = FrameState         R     0x56368c42d1f0+9038: [%204.4, %209.7, 100, %209.11], env=e1.3
  void                    Deopt              !v    %210.0   !
BB240   <- [215]
  val?^ | miss    %240.0 = LdVar              eR    as.integer, e1.3
  lgl$#-          %240.1 = Identical                <blt as.integer>, %240.0   <true>
  void                    Assume             D     %240.1, %212.1 (DeadBranchReached@0x56368bb729c0[Test#42])
  val?^ | miss    %240.3 = LdVar              eR    n, e1.3
  lgl$#-          %240.4 = IsType                   %240.3 isA real$-
  void                    Assume             D     %240.4, %212.1 (Typecheck@0x56368bb729c0[Type#452])
  real$-          %240.6 = CastType           d     dn %240.3
  val?            %240.7 = CallBuiltin        !v    as.integer(%240.6) e1.3   <int$->
  lgl$#-          %240.8 = IsType                   %240.7 isA int$-
  cp              %240.9 = Checkpoint                -> BB242 (default) | BB241 (if assume failed)
BB216   <- [215]
  val?^ | miss    %216.0 = LdVar              eR    as.integer, e1.3
  lgl$#-          %216.1 = Identical                <blt as.integer>, %216.0   <@?>
  void                    Branch                   %216.1 -> BB218 (if true) | BB217 (if false)
BB242   <- [240]
  void                    Assume             D     %240.8, %240.9 (Typecheck@0x56368bb729c0[Type#453])
  int$-           %242.1 = CastType           d     dn %240.7
  void                    StVar              lW    n, %242.1, e1.3
  cp              %242.3 = Checkpoint                -> BB244 (default) | BB243 (if assume failed)
BB241   <- [240]
  fs              %241.0 = FrameState         R     0x56368c42d1f0+9643: [%240.7], env=e1.3
  void                    Deopt              !v    %241.0   !
BB218   <- [216]
  val?^ | miss    %218.0 = LdVar              eR    n, e1.3
  val?            %218.1 = Force!             !v    %218.0, e1.3   <val?_>
  lgl$#-          %218.2 = IsType                   %218.1 isA val?+
  cp              %218.3 = Checkpoint                -> BB220 (default) | BB219 (if assume failed)
BB217   <- [216]
  (cls|spec|blt)  %217.0 = LdFun              !v    as.integer, e1.3
  fs              %217.1 = FrameState         R     0x56368c42d1f0+9131: [%217.0], env=e1.3
  void                    Deopt              !v    %217.1, DeadCall@0x56368bb729c0[Call#119], %217.0   !
BB244   <- [242]
  lgl$-           %244.0 = Gte                d     %242.1, 2L, elided   <lgl$->
  lgl$#-          %244.1 = CheckTrueFalse     e     %244.0
  void                    Branch                   %244.1 -> BB253 (if true) | BB245 (if false)
BB243   <- [242]
  fs              %243.0 = FrameState         R     0x56368c42d1f0+9657: [], env=e1.3
  void                    Deopt              !v    %243.0   !
BB220   <- [218]
  void                    Assume             D     %218.2, %218.3 (Typecheck@0x56368bb729c0[Type#424])
  val?+           %220.1 = CastType           d     dn %218.1   <val?_>
  (real|complex)+ %220.2 = Add                wed   %220.1, 1e-10, elided   <val?_>
  int-            %220.3 = CallSafeBuiltin    wed   as.integer(%220.2)    <val?_>
  void                    StVar              lW    n, %220.3, e1.3
  val?^ | miss    %220.5 = LdVar              eR    finite.del, e1.3
  val?            %220.6 = Force!             !v    %220.5, e1.3   <val?_>
  lgl$#-          %220.7 = CheckTrueFalse     we    %220.6
  void                    Branch                   %220.7 -> BB233 (if true) | BB221 (if false)
BB219   <- [218]
  fs              %219.0 = FrameState         R     0x56368c42d1f0+9172: [<blt as.integer>, %218.1], env=e1.3
  void                    Deopt              !v    %219.0   !
BB253   <- [244]
  val?^ | miss    %253.0 = LdVar              eR    cumsum, e1.3
  lgl$#-          %253.1 = Identical                <blt cumsum>, %253.0   <true>
  void                    Assume             D     %253.1, %242.3 (DeadBranchReached@0x56368bb729c0[Test#43])
  val?^ | miss    %253.3 = LdVar              eR    rep.int, e1.3
  lgl$#-          %253.4 = Identical                %253.3, function(x, times) <(rir::DispatchTable*)0x563|...
  void                    Assume             D     %253.4, %242.3 (CallTarget@0x56368bb729c0[Call#127])
  (cls|spec|blt)  %253.6 = LdFun              !v    c, <0x56368a4e2940>, e1.3
  lgl$#-          %253.7 = Identical                %253.6, <blt c>
  void                    Assume             D     %253.7, %242.3 (CallTarget@0x56368bb729c0[Call#128])
  val?^ | miss    %253.9 = LdVar              eR    from, e1.3
  val?            %253.10 = Force!<wrapped>    !v    %253.9, e1.3   <int$->
  val?^ | miss    %253.11 = LdVar              eR    by, e1.3
  val?            %253.12 = Force!<wrapped>    !v    %253.11, e1.3   <int$->
  val?            %253.13 = CallBuiltin        !v    c(%253.10, %253.12) e1.3   <int->
  cp              %253.14 = Checkpoint                -> BB255 (default) | BB254 (if assume failed)
BB245   <- [244]
  val?^ | miss    %245.0 = LdVar              eR    from, e1.3
  val?            %245.1 = Force!             !v    %245.0, e1.3   <val?_>
  val?^ | miss    %245.2 = LdVar              eR    n, e1.3
  val?            %245.3 = Force!             !v    %245.2, e1.3   <val?_>
  lgl$#-          %245.4 = IsType                   %245.3 isA val?+
  cp              %245.5 = Checkpoint                -> BB247 (default) | BB246 (if assume failed)
BB233   <- [220]
  val?^ | miss    %233.0 = LdVar              eR    from, e1.3
  val?            %233.1 = Force!             !v    %233.0, e1.3   <val?_>
  val?^ | miss    %233.2 = LdVar              eR    n, e1.3
  val?            %233.3 = Force!             !v    %233.2, e1.3   <val?_>
  lgl$#-          %233.4 = IsType                   %233.3 isA val?+
  cp              %233.5 = Checkpoint                -> BB235 (default) | BB234 (if assume failed)
BB221   <- [220]
  val?^ | miss    %221.0 = LdVar              eR    from, e1.3
  val?            %221.1 = Force!             !v    %221.0, e1.3   <val?_>
  lgl$#-          %221.2 = IsType                   %221.1 isA val?+
  cp              %221.3 = Checkpoint                -> BB223 (default) | BB222 (if assume failed)
BB255   <- [253]
  (cls|spec|blt)  %255.0 = LdFun              !v    c, <0x56368a4e2940>, e1.3
  lgl$#-          %255.1 = Identical                %255.0, <blt c>
  void                    Assume             D     %255.1, %253.14 (CallTarget@0x56368bb729c0[Call#129])
  val?^ | miss    %255.3 = LdVar              eR    n, e1.3
  val?            %255.4 = Force!<value>      !v    %255.3, e1.3   <int$->
  val?            %255.5 = CallBuiltin        !v    c(1L, %255.4) e1.3   <int->
  lgl$#-          %255.6 = IsType                   %255.5 isA int-
  cp              %255.7 = Checkpoint                -> BB257 (default) | BB256 (if assume failed)
BB254   <- [253]
  prom-           %254.0 = MkArg                    %253.13, unknown--fromOverride[0x56368de3b350]_p9 (!refl), e1.3
  val?~           %254.1 = CastType                 up %254.0
  fs              %254.2 = FrameState         R     0x56368c42d1f0+9858: [<blt cumsum>], env=e1.3
  prom-           %254.3 = MkArg                    unboundValue, unknown--fromOverride[0x56368de3b350]_p12, e1.3
  val?^           %254.4 = CastType                 up %254.3
  env             e254.5 = (MkEnv)            l     x=%254.1, times=%254.4, parent=R_BaseNamespace, context 0
  fs              %254.6 = FrameState         R     0x56368c3714f0+9: [%253.13], env=e254.5, next=%254.2
  void                    Deopt              !v    %254.6   !
BB247   <- [245]
  void                    Assume             D     %245.4, %245.5 (Typecheck@0x56368bb729c0[Type#457])
  val?+           %247.1 = CastType           d     dn %245.3   <val?_>
  (int|real|complex)+ %247.2 = Colon              wed   0L, %247.1, elided   <val?_>
  val?^ | miss    %247.3 = LdVar              eR    by, e1.3
  void                    Visible            v     
  val?            %247.5 = Force!             !     %247.3, e1.3   <val?_>
  lgl$#-          %247.6 = IsType                   %247.5 isA val?+
  cp              %247.7 = Checkpoint                -> BB249 (default) | BB248 (if assume failed)
BB246   <- [245]
  fs              %246.0 = FrameState         R     0x56368c42d1f0+9718: [%245.1, 0L, %245.3], env=e1.3
  void                    Deopt              !v    %246.0   !
BB235   <- [233]
  void                    Assume             D     %233.4, %233.5 (Typecheck@0x56368bb729c0[Type#438])
  val?+           %235.1 = CastType           d     dn %233.3   <val?_>
  (int|real|complex)+ %235.2 = Colon              wed   0L, %235.1, elided   <val?_>
  val?^ | miss    %235.3 = LdVar              eR    by, e1.3
  val?            %235.4 = Force!             !v    %235.3, e1.3   <val?_>
  lgl$#-          %235.5 = IsType                   %235.4 isA val?+
  cp              %235.6 = Checkpoint                -> BB237 (default) | BB236 (if assume failed)
BB234   <- [233]
  fs              %234.0 = FrameState         R     0x56368c42d1f0+9379: [%233.1, 0L, %233.3], env=e1.3
  void                    Deopt              !v    %234.0   !
BB223   <- [221]
  void                    Assume             D     %221.2, %221.3 (Typecheck@0x56368bb729c0[Type#428])
  val?+           %223.1 = CastType           d     dn %221.1   <val?_>
  (real|complex)+ %223.2 = Div                wed   %223.1, 4, elided   <val?_>
  val?^ | miss    %223.3 = LdVar              eR    n, e1.3
  val?            %223.4 = Force!             !v    %223.3, e1.3   <val?_>
  lgl$#-          %223.5 = IsType                   %223.4 isA val?+
  cp              %223.6 = Checkpoint                -> BB225 (default) | BB224 (if assume failed)
BB222   <- [221]
  fs              %222.0 = FrameState         R     0x56368c42d1f0+9249: [%221.1], env=e1.3
  void                    Deopt              !v    %222.0   !
BB257   <- [255]
  lgl$#-          %257.0 = IsType                   %253.13 isA int-
  void                    Assume             D     %257.0, %255.7 (Typecheck@0x56368ba75ff8[Type#0])
  int-            %257.2 = CastType           d     dn %253.13
  void                    Assume             D     %255.6, %255.7 (Typecheck@0x56368ba75ff8[Type#1])
  int-            %257.4 = CastType           d     dn %255.5
  val+            %257.5 = CallSafeBuiltin    wed   rep.int(%257.2, %257.4)    <int->
  lgl$#-          %257.6 = IsType                   %257.5 isA int-
  cp              %257.7 = Checkpoint                -> BB259 (default) | BB258 (if assume failed)
BB256   <- [255]
  prom-           %256.0 = MkArg                    %255.5, unknown--fromOverride[0x56368de3b350]_p12 (!refl), e1.3
  val?~           %256.1 = CastType                 up %256.0
  prom-           %256.2 = MkArg                    %253.13, unknown--fromOverride[0x56368de3b350]_p9 (!refl), e1.3
  val?~           %256.3 = CastType                 up %256.2
  fs              %256.4 = FrameState         R     0x56368c42d1f0+9858: [<blt cumsum>], env=e1.3
  env             e256.5 = (MkEnv)            l     times=%256.1, x=%256.3, parent=R_BaseNamespace, context 0
  fs              %256.6 = FrameState         R     0x56368c3714f0+23: [%253.13, %255.5], env=e256.5, next=%256.4
  void                    Deopt              !v    %256.6   !
BB249   <- [247]
  void                    Assume             D     %247.6, %247.7 (Typecheck@0x56368bb729c0[Type#459])
  val?+           %249.1 = CastType           d     dn %247.5   <val?_>
  (int|real|complex)+ %249.2 = Mul                vwed  %247.2, %249.1, elided   <val?_>
  cp              %249.3 = Checkpoint                -> BB251 (default) | BB250 (if assume failed)
BB248   <- [247]
  fs              %248.0 = FrameState         R     0x56368c42d1f0+9739: [%245.1, %247.2, %247.5], env=e1.3
  void                    Deopt              !v    %248.0   !
BB237   <- [235]
  void                    Assume             D     %235.5, %235.6 (Typecheck@0x56368bb729c0[Type#440])
  val?+           %237.1 = CastType           d     dn %235.4   <val?_>
  (int|real|complex)+ %237.2 = Mul                wed   %235.2, %237.1, elided   <val?_>
  cp              %237.3 = Checkpoint                -> BB239 (default) | BB238 (if assume failed)
BB236   <- [235]
  fs              %236.0 = FrameState         R     0x56368c42d1f0+9400: [%233.1, %235.2, %235.4], env=e1.3
  void                    Deopt              !v    %236.0   !
BB225   <- [223]
  void                    Assume             D     %223.5, %223.6 (Typecheck@0x56368bb729c0[Type#430])
  val?+           %225.1 = CastType           d     dn %223.4   <val?_>
  (int|real|complex)+ %225.2 = Colon              wed   0L, %225.1, elided   <val?_>
  val?^ | miss    %225.3 = LdVar              eR    by, e1.3
  val?            %225.4 = Force!             !v    %225.3, e1.3   <val?_>
  lgl$#-          %225.5 = IsType                   %225.4 isA val?+
  cp              %225.6 = Checkpoint                -> BB227 (default) | BB226 (if assume failed)
BB224   <- [223]
  fs              %224.0 = FrameState         R     0x56368c42d1f0+9281: [%223.2, 0L, %223.4], env=e1.3
  void                    Deopt              !v    %224.0   !
BB259   <- [257]
  void                    Assume             D     %257.6, %257.7 (Typecheck@0x56368bb729c0[Type#473])
  int-            %259.1 = CastType           d     dn %257.5
  val+            %259.2 = CallSafeBuiltin    vwed  cumsum(%259.1)    <int->
  goto BB252
BB258   <- [257]
  prom-           %258.0 = MkArg                    %257.4, unknown--fromOverride[0x56368de3b350]_p12 (!refl), e1.3
  val?~           %258.1 = CastType                 up %258.0
  prom-           %258.2 = MkArg                    %257.2, unknown--fromOverride[0x56368de3b350]_p9 (!refl), e1.3
  val?~           %258.3 = CastType                 up %258.2
  fs              %258.4 = FrameState         R     0x56368c42d1f0+9858: [<blt cumsum>], env=e1.3
  env             e258.5 = (MkEnv)            l     times=%258.1, x=%258.3, parent=R_BaseNamespace, context 0
  fs              %258.6 = FrameState         R     0x56368c3714f0+41: [%257.5], env=e258.5, next=%258.4
  void                    Deopt              !v    %258.6   !
BB251   <- [249]
  lgl$#-          %251.0 = IsType                   %245.1 isA val?+
  void                    Assume             D     %251.0, %249.3 (Typecheck@0x56368bb729c0[Type#456])
  val?+           %251.2 = CastType           d     dn %245.1   <val?_>
  (int|real|complex)+ %251.3 = Add                vwed  %251.2, %249.2, elided   <val?_>
  goto BB252
BB250   <- [249]
  fs              %250.0 = FrameState         R     0x56368c42d1f0+9745: [%245.1, %249.2], env=e1.3
  void                    Deopt              !v    %250.0   !
BB239   <- [237]
  lgl$#-          %239.0 = IsType                   %233.1 isA val?+
  void                    Assume             D     %239.0, %237.3 (Typecheck@0x56368bb729c0[Type#437])
  val?+           %239.2 = CastType           d     dn %233.1   <val?_>
  (int|real|complex)+ %239.3 = Add                wed   %239.2, %237.2, elided   <val?_>
  goto BB228
BB238   <- [237]
  fs              %238.0 = FrameState         R     0x56368c42d1f0+9406: [%233.1, %237.2], env=e1.3
  void                    Deopt              !v    %238.0   !
BB227   <- [225]
  void                    Assume             D     %225.5, %225.6 (Typecheck@0x56368bb729c0[Type#432])
  val?+           %227.1 = CastType           d     dn %225.4   <val?_>
  (real|complex)+ %227.2 = Div                wed   %227.1, 4, elided   <val?_>
  (int|real|complex)+ %227.3 = Mul                wed   %225.2, %227.2, elided   <val?_>
  (int|real|complex)+ %227.4 = Add                wed   %223.2, %227.3, elided   <val?_>
  (real|complex)+ %227.5 = Mul                wed   %227.4, 4, elided   <val?_>
  goto BB228
BB226   <- [225]
  fs              %226.0 = FrameState         R     0x56368c42d1f0+9302: [%223.2, %225.2, %225.4], env=e1.3
  void                    Deopt              !v    %226.0   !
BB252   <- [251, 259]
  val+            %252.0 = Phi                      %251.3:BB251, %259.2:BB259
  goto BB129
BB228   <- [239, 227]
  (int|real|complex)+ %228.0 = Phi                      %227.5:BB227, %239.3:BB239
  void                    StVar              lW    x, %228.0, e1.3
  val?^ | miss    %228.2 = LdVar              eR    by, e1.3
  val?            %228.3 = Force!             !v    %228.2, e1.3   <val?_>
  lgl$#-          %228.4 = IsType                   %228.3 isA val?+
  cp              %228.5 = Checkpoint                -> BB230 (default) | BB229 (if assume failed)
BB230   <- [228]
  void                    Assume             D     %228.4, %228.5 (Typecheck@0x56368bb729c0[Type#443])
  val?+           %230.1 = CastType           d     dn %228.3   <val?_>
  lgl             %230.2 = Gt                 wed   %230.1, 0, elided   <val?_>
  lgl$#-          %230.3 = CheckTrueFalse     we    %230.2
  void                    Branch                   %230.3 -> BB232 (if true) | BB231 (if false)
BB229   <- [228]
  fs              %229.0 = FrameState         R     0x56368c42d1f0+9435: [%228.3], env=e1.3
  void                    Deopt              !v    %229.0   !
BB232   <- [230]
  (cls|spec|blt)  %232.0 = LdFun              !v    pmin, e1.3
  fs              %232.1 = FrameState         R     0x56368c42d1f0+9510: [%232.0], env=e1.3
  void                    Deopt              !v    %232.1, DeadCall@0x56368bb729c0[Call#121], %232.0   !
BB231   <- [230]
  (cls|spec|blt)  %231.0 = LdFun              !v    pmax, e1.3
  fs              %231.1 = FrameState         R     0x56368c42d1f0+9463: [%231.0], env=e1.3
  void                    Deopt              !v    %231.1, DeadCall@0x56368bb729c0[Call#120], %231.0   !
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    from, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    to, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    by, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .Machine, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    integer.max, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .Machine, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    double.eps, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     c, <0x56368a4e2940>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, unknown--fromOverride[0x56368de3b350]_p10, e1.0
  prom-           %1.3  = MkArg                    unboundValue, unknown--fromOverride[0x56368de3b350]_p11, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <int->
  void                    Return             l     %1.4
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    from, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    by, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     c, <0x56368a4e2940>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, unknown--fromOverride[0x56368de3b350]_p13, e1.0
  val?            %1.3  = Call               !     %1.1(1L, %1.2) e1.0   <int->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3

│ unknown--fromOverride[0x56368de3b350]                                        │
└──────────────────────────────────────────────────────────────────────────────┘
