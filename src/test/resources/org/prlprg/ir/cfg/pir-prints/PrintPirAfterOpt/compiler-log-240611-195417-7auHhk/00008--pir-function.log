
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x56368dcb2090]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0     │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
[0x56368dcb2090]
BB0
  goto BB1
BB1   <- [0]
  int$~-          %1.0  = LdArg                    0
  int$-           %1.1  = Force!<lazy>             %1.0,    <int$->
  int$-           %1.2  = Mod                d     %1.1, 2L, elided   <int$->
  int$-           %1.3  = Sub                d     %1.1, %1.2, elided   <int$->
  int$-           %1.4  = Add                d     %1.3, 2L, elided   <int$->
  int-            %1.5  = CallSafeBuiltin    wed   vector("integer", 199L)    <int->
  int-            %1.6  = Subassign1_1D      wed   %1.4, %1.5, 1L, elided
  int$-           %1.7  = Add                d     %1.4, %1.4, elided   <int$->
  lgl$-           %1.8  = Gte                d     %1.7, 1073741824L, elided   <lgl$->
  lgl$#-          %1.9  = CheckTrueFalse     e     %1.8
  env             e1.10 = MkEnv              l     seed=%1.0, KK=100L, LL=37L, MM=1073741824L, KKK=199L, KKL=63L, j=1L, parent=R_BaseNamespace, context 1
  void                    Branch                   %1.9 -> BB2 (if true) | BB117 (if false)
BB2   <- [1]
  int$-           %2.0  = Sub                d     %1.7, 1073741824L, elided   <val?_>
  int$-           %2.1  = Add                d     %2.0, 2L, elided   <val?_>
  goto BB3
BB117   <- [1]
  goto BB3
BB3   <- [117, 2, 115]
  int-            %3.0  = Phi                      %1.6:BB2, %1.6:BB117, %113.2:BB115
  int$-           %3.1  = Phi                      %2.1:BB2, %1.7:BB117, %115.0:BB115
  int$#-          %3.2  = Phi                      2L:BB117, %113.1:BB115, 2L:BB2
  lgl$#-          %3.3  = Neq                d     101L, %3.2, elided
  void                    Branch                   %3.3 -> BB113 (if true) | BB4 (if false)
BB113   <- [3]
  void                    StVar              lW    j, %3.2, e1.10
  int$#-          %113.1 = Add                d     %3.2, 1L, elided
  int-            %113.2 = Subassign1_1D      wed   %3.1, %3.0, %3.2, elided
  int$-           %113.3 = Add                d     %3.1, %3.1, elided   <int$->
  lgl$-           %113.4 = Gte                d     %113.3, 1073741824L, elided   <lgl$->
  lgl$#-          %113.5 = CheckTrueFalse     e     %113.4
  void                    Branch                   %113.5 -> BB116 (if true) | BB114 (if false)
BB4   <- [3]
  int$-           %4.0  = Extract1_1D        wed   %3.0, 2L, elided   <int$->
  int$-           %4.1  = Add                d     %4.0, 1L, elided   <int$->
  int-            %4.2  = Subassign1_1D      wed   %4.1, %3.0, 2L, elided
  void                    StVar              lW    X, %4.2, e1.10
  void                    StVar              lW    ss, %1.1, e1.10
  void                    StVar              lW    T, 69L, e1.10
  goto BB5
BB116   <- [113]
  int$-           %116.0 = Sub                d     %113.3, 1073741824L, elided   <int$->
  int$-           %116.1 = Add                d     %116.0, 2L, elided   <int$->
  goto BB115
BB114   <- [113]
  goto BB115
BB5   <- [4, 53]
  cp              %5.0  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB115   <- [114, 116]
  int$-           %115.0 = Phi                      %116.1:BB116, %113.3:BB114
  goto BB3
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    T, e1.10
  lgl$#-          %7.1  = IsType                   %7.0 isA int$-
  void                    Assume             D     %7.1, %5.0 (Typecheck@0x56368ba762b8[Type#66])
  int$-           %7.3  = CastType           d     dn %7.0
  lgl$-           %7.4  = Gt                 d     %7.3, 0, elided   <lgl$->
  lgl$#-          %7.5  = CheckTrueFalse     e     %7.4
  void                    Branch                   %7.5 -> BB11 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x56368c771a30+1075: [], env=e1.10
  void                    Deopt              !v    %6.0   !
BB11   <- [7]
  val?^ | miss    %11.0 = LdVar              eR    KK, e1.10
  val?            %11.1 = Force!<value>      !v    %11.0, e1.10   <int$->
  lgl$#-          %11.2 = ColonInputEffects  we    %11.1, 2L   <true>
  cp              %11.3 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB8   <- [7]
  val?^ | miss    %8.0  = LdVar              eR    c, e1.10
  lgl$#-          %8.1  = Identical                <blt c>, %8.0   <true>
  void                    Assume             D     %8.1, %5.0 (DeadBranchReached@0x56368ba762b8[Test#44])
  val?^ | miss    %8.3  = LdVar              eR    X, e1.10
  lgl$#-          %8.4  = IsType                   %8.3 isA int-
  void                    Assume             D     %8.4, %5.0 (Typecheck@0x56368ba762b8[Type#358])
  int-            %8.6  = CastType           d     dn %8.3
  val?^ | miss    %8.7  = LdVar              eR    LL, e1.10
  lgl$#-          %8.8  = IsType                   %8.7 isA int$-
  void                    Assume             D     %8.8, %5.0 (Typecheck@0x56368ba762b8[Type#363])
  int$-           %8.10 = CastType           d     dn %8.7
  int$-           %8.11 = Add                d     %8.10, 1L, elided   <int$->
  val?^ | miss    %8.12 = LdVar              eR    KK, e1.10
  lgl$#-          %8.13 = IsType                   %8.12 isA int$-
  void                    Assume             D     %8.13, %5.0 (Typecheck@0x56368ba762b8[Type#365])
  int$-           %8.15 = CastType           d     dn %8.12
  int-            %8.16 = Colon              d     %8.11, %8.15, elided   <int->
  int-            %8.17 = Extract1_1D        wed   %8.6, %8.16, elided   <int->
  int-            %8.18 = Colon              d     1L, %8.10, elided   <int->
  int-            %8.19 = Extract1_1D        wed   %8.6, %8.18, elided   <int->
  int-            %8.20 = CallSafeBuiltin    wed   c(%8.17, %8.19)    <int->
  void                    StVar              lW    rs, %8.20, e1.10
  cp              %8.22 = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB13   <- [11]
  void                    Assume             D     %11.2, %11.3 (DeadBranchReached@0x56368ba762b8[Test#5])
  (int|real)$#-   %13.1 = ColonCastLhs       e     %11.1   <int$->
  (int|real)$#-   %13.2 = ColonCastRhs       e     %13.1, 2L   <int$->
  lgl$#-          %13.3 = Lte                d     %13.1, %13.2, elided   <false>
  void                    AssumeNot          D     %13.3, %11.3 (DeadBranchReached@0x56368ba762b8[Test#7])
  lgl$#-          %13.5 = Neq                d     %13.2, %13.1, elided   <true>
  lgl$#-          %13.6 = IsType                   %13.1 isA int$#-
  lgl$#-          %13.7 = IsType                   %13.2 isA int$#-
  void                    Assume             D     %13.6, %11.3 (Typecheck@0x56368ba762b8[Type#80])
  int$#-          %13.9 = CastType           d     dn %13.1
  void                    Assume             D     %13.7, %11.3 (Typecheck@0x56368ba762b8[Type#81])
  int$#-          %13.11 = CastType           d     dn %13.2
  void                    Assume             D     %13.5, %11.3 (DeadBranchReached@0x56368ba762b8[Test#8])
  void                    StVar              lW    j, %13.9, e1.10
  int$#-          %13.14 = Add                d     %13.9, -1L, elided
  val?^ | miss    %13.15 = LdVar              eR    X !upd, e1.10
  val?            %13.16 = Force!             !v    %13.15, e1.10
  cp              %13.17 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x56368c771a30+1130: [%11.1, 2L, %11.2], env=e1.10
  void                    Deopt              !v    %12.0   !
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    invisible, e1.10
  lgl$#-          %10.1 = Identical                <blt invisible>, %10.0   <true>
  void                    Assume             D     %10.1, %8.22 (DeadBranchReached@0x56368ba762b8[Test#49])
  void                    Invisible          v     
  void                    Return             l     %8.20
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x56368c771a30+4913: [], env=e1.10
  void                    Deopt              !v    %9.0   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    X, e1.10
  lgl$#-          %15.1 = IsType                   %15.0 isA int-
  void                    Assume             D     %15.1, %13.17 (Typecheck@0x56368ba762b8[Type#82])
  int-            %15.3 = CastType           d     dn %15.0
  val?^ | miss    %15.4 = LdVar              eR    j, e1.10
  lgl$#-          %15.5 = IsType                   %15.4 isA int$-
  void                    Assume             D     %15.5, %13.17 (Typecheck@0x56368ba762b8[Type#84])
  int$-           %15.7 = CastType           d     dn %15.4
  int-            %15.8 = Extract1_1D        wed   %15.3, %15.7, elided   <int$->
  lgl$#-          %15.9 = IsType                   %15.8 isA int$-
  cp              %15.10 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x56368c771a30+1267: [-1L, %13.11, %13.14, %13.16], env=e1.10
  void                    Deopt              !v    %14.0   !
BB17   <- [15]
  void                    Assume             D     %15.9, %15.10 (Typecheck@0x56368ba762b8[Type#85])
  int$-           %17.1 = CastType           d     dn %15.8
  int$-           %17.2 = Add                d     %15.7, %15.7, elided   <int$->
  int$-           %17.3 = Sub                d     %17.2, 1L, elided   <int$->
  int-            %17.4 = Subassign1_1D      wed   %17.1, %15.3, %17.3, elided
  void                    StVar              lW    X, %17.4, e1.10
  goto BB18
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x56368c771a30+1329: [-1L, %13.11, %13.14, %15.8], env=e1.10
  void                    Deopt              !v    %16.0   !
BB18   <- [17, 112]
  int-            %18.0 = Phi                      %17.4:BB17, %112.4:BB112
  int$#-          %18.1 = Phi                      %13.14:BB17, %110.1:BB112   <int$->
  cp              %18.2 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB20   <- [18]
  lgl$#-          %20.0 = Neq                d     %13.11, %18.1, elided
  void                    Branch                   %20.0 -> BB110 (if true) | BB21 (if false)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x56368c771a30+1405: [-1L, %13.11, %18.1], env=e1.10
  void                    Deopt              !v    %19.0   !
BB110   <- [20]
  void                    StVar              lW    j, %18.1, e1.10
  int$#-          %110.1 = Add                d     %18.1, -1L, elided
  int-            %110.2 = Extract1_1D        wed   %18.0, %18.1, elided   <int$->
  lgl$#-          %110.3 = IsType                   %110.2 isA int$-
  cp              %110.4 = Checkpoint                -> BB112 (default) | BB111 (if assume failed)
BB21   <- [20]
  val?^ | miss    %21.0 = LdVar              eR    seq, e1.10
  lgl$#-          %21.1 = Identical                %21.0, function(...) <(rir::DispatchTable*)0x56368c73|...
  void                    Assume             D     %21.1, %18.2 (CallTarget@0x56368ba762b8[Call#2])
  prom-           %21.3 = MkArg                    unboundValue, [0x56368dcb2090]_p2, e1.10
  prom-           %21.4 = MkArg                    unboundValue, [0x56368dcb2090]_p3 (!refl), 
  val?^ | miss    %21.5 = LdVar              eR    KKK, e1.10
  val?            %21.6 = Force!<value>      !v    %21.5, e1.10   <int$->
  dots-           %21.7 = DotsList           l     %21.6, %21.3, %21.4
  val?            %21.8 = StaticCall         !v    seq[0x56368af74ba0](%21.7) { 0 1 2 } e1.10   <int->
  cp              %21.9 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB112   <- [110]
  void                    Assume             D     %110.3, %110.4 (Typecheck@0x56368ba762b8[Type#94])
  int$-           %112.1 = CastType           d     dn %110.2
  int$#-          %112.2 = Add                d     %18.1, %18.1, elided   <int$->
  int$#-          %112.3 = Sub                d     %112.2, 1L, elided   <int$->
  int-            %112.4 = Subassign1_1D      wed   %112.1, %18.0, %112.3, elided
  void                    StVar              lW    X, %112.4, e1.10
  goto BB18
BB111   <- [110]
  fs              %111.0 = FrameState         R     0x56368c771a30+1500: [-1L, %13.11, %110.1, %110.2], env=e1.10
  void                    Deopt              !v    %111.0   !
BB23   <- [21]
  val?+           %23.0 = ToForSeq           e     %21.8
  int$-           %23.1 = Length                   %23.0
  int$-           %23.2 = Inc                      0L
  lgl$-           %23.3 = Lt                 d     %23.1, %23.2, elided   <false>
  lgl$#-          %23.4 = Identical                %23.3, true
  void                    AssumeNot          D     %23.4, %21.9 (DeadBranchReached@0x56368ba762b8[Test#11])
  val?            %23.6 = Extract2_1D        wed   %23.0, %23.2, elided
  void                    StVar              lW    j, %23.6, e1.10
  val?^ | miss    %23.8 = LdVar              eR    X !upd, e1.10
  val?            %23.9 = Force!             !v    %23.8, e1.10
  cp              %23.10 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x56368c771a30+1628: [%21.8], env=e1.10
  void                    Deopt              !v    %22.0   !
BB25   <- [23]
  val?^ | miss    %25.0 = LdVar              eR    X, e1.10
  lgl$#-          %25.1 = IsType                   %25.0 isA int-
  void                    Assume             D     %25.1, %23.10 (Typecheck@0x56368ba762b8[Type#104])
  int-            %25.3 = CastType           d     dn %25.0
  val?^ | miss    %25.4 = LdVar              eR    j, e1.10
  lgl$#-          %25.5 = IsType                   %25.4 isA int$-
  void                    Assume             D     %25.5, %23.10 (Typecheck@0x56368ba762b8[Type#106])
  int$-           %25.7 = CastType           d     dn %25.4
  int-            %25.8 = Extract1_1D        wed   %25.3, %25.7, elided   <int$->
  lgl$#-          %25.9 = IsType                   %25.8 isA int$-
  cp              %25.10 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x56368c771a30+1682: [%23.0, %23.1, %23.2, %23.9], env=e1.10
  void                    Deopt              !v    %24.0   !
BB27   <- [25]
  void                    Assume             D     %25.9, %25.10 (Typecheck@0x56368ba762b8[Type#107])
  int$-           %27.1 = CastType           d     dn %25.8
  int$-           %27.2 = Mod                d     %27.1, 2L, elided   <int$->
  int$-           %27.3 = Sub                d     %27.1, %27.2, elided   <int$->
  val?^ | miss    %27.4 = LdVar              eR    KKK, e1.10
  lgl$#-          %27.5 = IsType                   %27.4 isA int$-
  void                    Assume             D     %27.5, %25.10 (Typecheck@0x56368ba762b8[Type#115])
  int$-           %27.7 = CastType           d     dn %27.4
  int$-           %27.8 = Sub                d     %27.7, %25.7, elided   <int$->
  int$-           %27.9 = Add                d     %27.8, 2L, elided   <int$->
  int-            %27.10 = Subassign1_1D      wed   %27.3, %25.3, %27.9, elided
  void                    StVar              lW    X, %27.10, e1.10
  goto BB28
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x56368c771a30+1744: [%23.0, %23.1, %23.2, %25.8], env=e1.10
  void                    Deopt              !v    %26.0   !
BB28   <- [27, 35]
  int-            %28.0 = Phi                      %27.10:BB27, %35.6:BB35
  int$-           %28.1 = Phi                      %23.2:BB27, %28.2:BB35
  int$-           %28.2 = Inc                      %28.1
  lgl$-           %28.3 = Lt                 d     %23.1, %28.2, elided
  lgl$#-          %28.4 = Identical                %28.3, true
  void                    Branch                   %28.4 -> BB36 (if true) | BB29 (if false)
BB36   <- [28]
  val?^ | miss    %36.0 = LdVar              eR    KK, e1.10
  val?            %36.1 = Force!<value>      !v    %36.0, e1.10   <int$->
  lgl$#-          %36.2 = IsType                   %36.1 isA int$-
  cp              %36.3 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB29   <- [28]
  val?            %29.0 = Extract2_1D        wed   %23.0, %28.2, elided   <int$->
  lgl$#-          %29.1 = IsType                   %29.0 isA int$-
  cp              %29.2 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB38   <- [36]
  void                    Assume             D     %36.2, %36.3 (Typecheck@0x56368ba762b8[Type#135])
  int$-           %38.1 = CastType           d     dn %36.1
  int$-           %38.2 = Add                d     %38.1, 1L, elided   <int$->
  lgl$#-          %38.3 = ColonInputEffects        %27.7, %38.2   <true>
  void                    Assume             D     %38.3, %36.3 (DeadBranchReached@0x56368ba762b8[Test#16])
  int$#-          %38.5 = ColonCastLhs       e     %27.7   <int$->
  int$#-          %38.6 = ColonCastRhs       e     %38.5, %38.2   <int$->
  lgl$#-          %38.7 = Lte                d     %38.5, %38.6, elided   <false>
  void                    AssumeNot          D     %38.7, %36.3 (DeadBranchReached@0x56368ba762b8[Test#22])
  lgl$#-          %38.9 = Neq                d     %38.6, %38.5, elided   <true>
  void                    Assume             D     %38.9, %36.3 (DeadBranchReached@0x56368ba762b8[Test#23])
  void                    StVar              lW    j, %38.5, e1.10
  cp              %38.12 = Checkpoint                -> BB40 (default) | BB39 (if assume failed)
BB37   <- [36]
  fs              %37.0 = FrameState         R     0x56368c771a30+2200: [%27.7, %36.1], env=e1.10
  void                    Deopt              !v    %37.0   !
BB31   <- [29]
  void                    Assume             D     %29.1, %29.2 (Typecheck@0x56368ba762b8[Type#121])
  int$-           %31.1 = CastType           d     dn %29.0
  void                    StVar              lW    j, %31.1, e1.10
  int-            %31.3 = Extract1_1D        wed   %28.0, %31.1, elided   <int$->
  lgl$#-          %31.4 = IsType                   %31.3 isA int$-
  cp              %31.5 = Checkpoint                -> BB33 (default) | BB32 (if assume failed)
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x56368c771a30+1925: [%23.0, %23.1, %28.2, %29.0], env=e1.10
  void                    Deopt              !v    %30.0   !
BB40   <- [38]
  int$#-          %40.0 = Add                d     %38.5, -1L, elided
  val?^ | miss    %40.1 = LdVar              eR    X, e1.10
  lgl$#-          %40.2 = IsType                   %40.1 isA int-
  void                    Assume             D     %40.2, %38.12 (Typecheck@0x56368ba762b8[Type#187])
  int-            %40.4 = CastType           d     dn %40.1
  int-            %40.5 = Extract1_1D        wed   %40.4, %38.5, elided   <int$->
  lgl$#-          %40.6 = IsType                   %40.5 isA int$-
  cp              %40.7 = Checkpoint                -> BB42 (default) | BB41 (if assume failed)
BB39   <- [38]
  fs              %39.0 = FrameState         R     0x56368c771a30+2341: [-1L, %38.6, %38.5], env=e1.10
  void                    Deopt              !v    %39.0   !
BB33   <- [31]
  void                    Assume             D     %31.4, %31.5 (Typecheck@0x56368ba762b8[Type#122])
  int$-           %33.1 = CastType           d     dn %31.3
  int-            %33.2 = Extract1_1D        wed   %28.0, %31.1, elided   <int$->
  lgl$#-          %33.3 = IsType                   %33.2 isA int$-
  cp              %33.4 = Checkpoint                -> BB35 (default) | BB34 (if assume failed)
BB32   <- [31]
  fs              %32.0 = FrameState         R     0x56368c771a30+2005: [%23.0, %23.1, %28.2, %31.3], env=e1.10
  void                    Deopt              !v    %32.0   !
BB42   <- [40]
  void                    Assume             D     %40.6, %40.7 (Typecheck@0x56368ba762b8[Type#190])
  int$-           %42.1 = CastType           d     dn %40.5
  int$-           %42.2 = Mod                d     %42.1, 2L, elided   <int$->
  lgl$-           %42.3 = Eq                 d     %42.2, 1L, elided   <lgl$->
  lgl$#-          %42.4 = CheckTrueFalse     e     %42.3
  void                    Branch                   %42.4 -> BB101 (if true) | BB43 (if false)
BB41   <- [40]
  fs              %41.0 = FrameState         R     0x56368c771a30+2408: [-1L, %38.6, %40.0, %40.5], env=e1.10
  void                    Deopt              !v    %41.0   !
BB35   <- [33]
  void                    Assume             D     %33.3, %33.4 (Typecheck@0x56368ba762b8[Type#126])
  int$-           %35.1 = CastType           d     dn %33.2
  int$-           %35.2 = Mod                d     %35.1, 2L, elided   <int$->
  int$-           %35.3 = Sub                d     %33.1, %35.2, elided   <int$->
  int$-           %35.4 = Sub                d     %27.7, %31.1, elided   <int$->
  int$-           %35.5 = Add                d     %35.4, 2L, elided   <int$->
  int-            %35.6 = Subassign1_1D      wed   %35.3, %28.0, %35.5, elided
  void                    StVar              lW    X, %35.6, e1.10
  goto BB28
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x56368c771a30+2071: [%23.0, %23.1, %28.2, %33.1, %33.2], env=e1.10
  void                    Deopt              !v    %34.0   !
BB101   <- [42]
  val?^ | miss    %101.0 = LdVar              eR    KKL, e1.10
  lgl$#-          %101.1 = IsType                   %101.0 isA int$-
  void                    Assume             D     %101.1, %40.7 (Typecheck@0x56368ba762b8[Type#198])
  int$-           %101.3 = CastType           d     dn %101.0
  int$-           %101.4 = Sub                d     %38.5, %101.3, elided   <int$->
  int-            %101.5 = Extract1_1D        wed   %40.4, %101.4, elided   <int$->
  lgl$#-          %101.6 = IsType                   %101.5 isA int$-
  cp              %101.7 = Checkpoint                -> BB103 (default) | BB102 (if assume failed)
BB43   <- [42]
  goto BB44
BB103   <- [101]
  void                    Assume             D     %101.6, %101.7 (Typecheck@0x56368ba762b8[Type#200])
  int$-           %103.1 = CastType           d     dn %101.5
  int$-           %103.2 = Sub                d     %103.1, %42.1, elided   <int$->
  val?^ | miss    %103.3 = LdVar              eR    MM, e1.10
  lgl$#-          %103.4 = IsType                   %103.3 isA int$-
  void                    Assume             D     %103.4, %101.7 (Typecheck@0x56368ba762b8[Type#206])
  int$-           %103.6 = CastType           d     dn %103.3
  int$-           %103.7 = Mod                d     %103.2, %103.6, elided   <int$->
  int-            %103.8 = Subassign1_1D      wed   %103.7, %40.4, %101.4, elided   <int->
  void                    StVar              lW    X, %103.8, e1.10
  val?^ | miss    %103.10 = LdVar              eR    KK, e1.10
  val?            %103.11 = Force!<value>      !v    %103.10, e1.10   <int$->
  lgl$#-          %103.12 = IsType                   %103.11 isA int$-
  cp              %103.13 = Checkpoint                -> BB105 (default) | BB104 (if assume failed)
BB102   <- [101]
  fs              %102.0 = FrameState         R     0x56368c771a30+2540: [-1L, %38.6, %40.0, %101.5], env=e1.10
  void                    Deopt              !v    %102.0   !
BB44   <- [43, 109, 89]
  int$#-          %44.0 = Phi                      %40.0:BB43, %85.0:BB89, %40.0:BB109
  cp              %44.1 = Checkpoint                -> BB46 (default) | BB45 (if assume failed)
BB105   <- [103]
  void                    Assume             D     %103.12, %103.13 (Typecheck@0x56368ba762b8[Type#217])
  int$-           %105.1 = CastType           d     dn %103.11
  int$-           %105.2 = Sub                d     %38.5, %105.1, elided   <int$->
  int-            %105.3 = Extract1_1D        wed   %103.8, %105.2, elided   <int$->
  lgl$#-          %105.4 = IsType                   %105.3 isA int$-
  cp              %105.5 = Checkpoint                -> BB107 (default) | BB106 (if assume failed)
BB104   <- [103]
  fs              %104.0 = FrameState         R     0x56368c771a30+2776: [-1L, %38.6, %40.0, %103.8, %38.5, %103.11], env=e1.10
  void                    Deopt              !v    %104.0   !
BB46   <- [44]
  lgl$#-          %46.0 = Neq                d     %38.6, %44.0, elided
  void                    Branch                   %46.0 -> BB83 (if true) | BB47 (if false)
BB45   <- [44]
  fs              %45.0 = FrameState         R     0x56368c771a30+2945: [-1L, %38.6, %44.0], env=e1.10
  void                    Deopt              !v    %45.0   !
BB107   <- [105]
  void                    Assume             D     %105.4, %105.5 (Typecheck@0x56368ba762b8[Type#219])
  int$-           %107.1 = CastType           d     dn %105.3
  val?^ | miss    %107.2 = LdVar              eR    X, e1.10
  lgl$#-          %107.3 = IsType                   %107.2 isA int-
  void                    Assume             D     %107.3, %105.5 (Typecheck@0x56368ba762b8[Type#220])
  int-            %107.5 = CastType           d     dn %107.2
  val?^ | miss    %107.6 = LdVar              eR    j, e1.10
  lgl$#-          %107.7 = IsType                   %107.6 isA int$-
  void                    Assume             D     %107.7, %105.5 (Typecheck@0x56368ba762b8[Type#222])
  int$-           %107.9 = CastType           d     dn %107.6
  int-            %107.10 = Extract1_1D        wed   %107.5, %107.9, elided   <int$->
  lgl$#-          %107.11 = IsType                   %107.10 isA int$-
  cp              %107.12 = Checkpoint                -> BB109 (default) | BB108 (if assume failed)
BB106   <- [105]
  fs              %106.0 = FrameState         R     0x56368c771a30+2788: [-1L, %38.6, %40.0, %105.3], env=e1.10
  void                    Deopt              !v    %106.0   !
BB83   <- [46]
  void                    StVar              lW    j, %44.0, e1.10
  cp              %83.1 = Checkpoint                -> BB85 (default) | BB84 (if assume failed)
BB47   <- [46]
  val?^ | miss    %47.0 = LdVar              eR    ss, e1.10
  lgl$#-          %47.1 = IsType                   %47.0 isA int$-
  void                    Assume             D     %47.1, %44.1 (Typecheck@0x56368ba762b8[Type#275])
  int$-           %47.3 = CastType           d     dn %47.0
  int$-           %47.4 = Mod                d     %47.3, 2L, elided   <int$->
  lgl$-           %47.5 = Eq                 d     %47.4, 1L, elided   <lgl$->
  lgl$#-          %47.6 = CheckTrueFalse     e     %47.5
  void                    Branch                   %47.6 -> BB55 (if true) | BB48 (if false)
BB109   <- [107]
  void                    Assume             D     %107.11, %107.12 (Typecheck@0x56368ba762b8[Type#223])
  int$-           %109.1 = CastType           d     dn %107.10
  int$-           %109.2 = Sub                d     %107.1, %109.1, elided   <int$->
  val?^ | miss    %109.3 = LdVar              eR    MM, e1.10
  lgl$#-          %109.4 = IsType                   %109.3 isA int$-
  void                    Assume             D     %109.4, %107.12 (Typecheck@0x56368ba762b8[Type#225])
  int$-           %109.6 = CastType           d     dn %109.3
  int$-           %109.7 = Mod                d     %109.2, %109.6, elided   <int$->
  val?^ | miss    %109.8 = LdVar              eR    KK, e1.10
  lgl$#-          %109.9 = IsType                   %109.8 isA int$-
  void                    Assume             D     %109.9, %107.12 (Typecheck@0x56368ba762b8[Type#229])
  int$-           %109.11 = CastType           d     dn %109.8
  int$-           %109.12 = Sub                d     %107.9, %109.11, elided   <int$->
  int-            %109.13 = Subassign1_1D      wed   %109.7, %107.5, %109.12, elided
  void                    StVar              lW    X, %109.13, e1.10
  goto BB44
BB108   <- [107]
  fs              %108.0 = FrameState         R     0x56368c771a30+2854: [-1L, %38.6, %40.0, %107.1, %107.10], env=e1.10
  void                    Deopt              !v    %108.0   !
BB85   <- [83]
  int$#-          %85.0 = Add                d     %44.0, -1L, elided
  val?^ | miss    %85.1 = LdVar              eR    X, e1.10
  lgl$#-          %85.2 = IsType                   %85.1 isA int-
  void                    Assume             D     %85.2, %83.1 (Typecheck@0x56368ba762b8[Type#231])
  int-            %85.4 = CastType           d     dn %85.1
  int-            %85.5 = Extract1_1D        wed   %85.4, %44.0, elided   <int$->
  lgl$#-          %85.6 = IsType                   %85.5 isA int$-
  cp              %85.7 = Checkpoint                -> BB87 (default) | BB86 (if assume failed)
BB84   <- [83]
  fs              %84.0 = FrameState         R     0x56368c771a30+2962: [-1L, %38.6, %44.0], env=e1.10
  void                    Deopt              !v    %84.0   !
BB55   <- [47]
  val?^ | miss    %55.0 = LdVar              eR    KK, e1.10
  val?            %55.1 = Force!<value>      !v    %55.0, e1.10   <int$->
  lgl$#-          %55.2 = ColonInputEffects  we    %55.1, 1L   <true>
  cp              %55.3 = Checkpoint                -> BB57 (default) | BB56 (if assume failed)
BB48   <- [47]
  goto BB49
BB87   <- [85]
  void                    Assume             D     %85.6, %85.7 (Typecheck@0x56368ba762b8[Type#234])
  int$-           %87.1 = CastType           d     dn %85.5
  int$-           %87.2 = Mod                d     %87.1, 2L, elided   <int$->
  lgl$-           %87.3 = Eq                 d     %87.2, 1L, elided   <lgl$->
  lgl$#-          %87.4 = CheckTrueFalse     e     %87.3
  void                    Branch                   %87.4 -> BB90 (if true) | BB88 (if false)
BB86   <- [85]
  fs              %86.0 = FrameState         R     0x56368c771a30+3029: [-1L, %38.6, %85.0, %85.5], env=e1.10
  void                    Deopt              !v    %86.0   !
BB57   <- [55]
  void                    Assume             D     %55.2, %55.3 (DeadBranchReached@0x56368ba762b8[Test#34])
  (int|real)$#-   %57.1 = ColonCastLhs       e     %55.1   <int$->
  (int|real)$#-   %57.2 = ColonCastRhs       e     %57.1, 1L   <int$->
  lgl$#-          %57.3 = Lte                d     %57.1, %57.2, elided   <false>
  void                    AssumeNot          D     %57.3, %55.3 (DeadBranchReached@0x56368ba762b8[Test#36])
  lgl$#-          %57.5 = Neq                d     %57.2, %57.1, elided   <true>
  lgl$#-          %57.6 = IsType                   %57.1 isA int$#-
  lgl$#-          %57.7 = IsType                   %57.2 isA int$#-
  void                    Assume             D     %57.6, %55.3 (Typecheck@0x56368ba762b8[Type#288])
  int$#-          %57.9 = CastType           d     dn %57.1
  void                    Assume             D     %57.7, %55.3 (Typecheck@0x56368ba762b8[Type#289])
  int$#-          %57.11 = CastType           d     dn %57.2
  void                    Assume             D     %57.5, %55.3 (DeadBranchReached@0x56368ba762b8[Test#37])
  void                    StVar              lW    j, %57.9, e1.10
  int$#-          %57.14 = Add                d     %57.9, -1L, elided
  val?^ | miss    %57.15 = LdVar              eR    X !upd, e1.10
  val?            %57.16 = Force!             !v    %57.15, e1.10
  cp              %57.17 = Checkpoint                -> BB59 (default) | BB58 (if assume failed)
BB56   <- [55]
  fs              %56.0 = FrameState         R     0x56368c771a30+3648: [%55.1, 1L, %55.2], env=e1.10
  void                    Deopt              !v    %56.0   !
BB49   <- [48, 72, 79]
  cp              %49.0 = Checkpoint                -> BB51 (default) | BB50 (if assume failed)
BB90   <- [87]
  val?^ | miss    %90.0 = LdVar              eR    KKL, e1.10
  lgl$#-          %90.1 = IsType                   %90.0 isA int$-
  void                    Assume             D     %90.1, %85.7 (Typecheck@0x56368ba762b8[Type#242])
  int$-           %90.3 = CastType           d     dn %90.0
  int$-           %90.4 = Sub                d     %44.0, %90.3, elided   <int$->
  int-            %90.5 = Extract1_1D        wed   %85.4, %90.4, elided   <int$->
  lgl$#-          %90.6 = IsType                   %90.5 isA int$-
  cp              %90.7 = Checkpoint                -> BB92 (default) | BB91 (if assume failed)
BB88   <- [87]
  goto BB89
BB59   <- [57]
  val?^ | miss    %59.0 = LdVar              eR    X, e1.10
  lgl$#-          %59.1 = IsType                   %59.0 isA int-
  void                    Assume             D     %59.1, %57.17 (Typecheck@0x56368ba762b8[Type#290])
  int-            %59.3 = CastType           d     dn %59.0
  val?^ | miss    %59.4 = LdVar              eR    j, e1.10
  lgl$#-          %59.5 = IsType                   %59.4 isA int$-
  void                    Assume             D     %59.5, %57.17 (Typecheck@0x56368ba762b8[Type#292])
  int$-           %59.7 = CastType           d     dn %59.4
  int-            %59.8 = Extract1_1D        wed   %59.3, %59.7, elided   <int$->
  lgl$#-          %59.9 = IsType                   %59.8 isA int$-
  cp              %59.10 = Checkpoint                -> BB61 (default) | BB60 (if assume failed)
BB58   <- [57]
  fs              %58.0 = FrameState         R     0x56368c771a30+3785: [-1L, %57.11, %57.14, %57.16], env=e1.10
  void                    Deopt              !v    %58.0   !
BB51   <- [49]
  val?^ | miss    %51.0 = LdVar              eR    ss, e1.10
  lgl$#-          %51.1 = IsType                   %51.0 isA int$-
  void                    Assume             D     %51.1, %49.0 (Typecheck@0x56368ba762b8[Type#337])
  int$-           %51.3 = CastType           d     dn %51.0
  lgl$#-          %51.4 = CheckTrueFalse     e     %51.3
  void                    Branch                   %51.4 -> BB54 (if true) | BB52 (if false)
BB50   <- [49]
  fs              %50.0 = FrameState         R     0x56368c771a30+4540: [], env=e1.10
  void                    Deopt              !v    %50.0   !
BB92   <- [90]
  void                    Assume             D     %90.6, %90.7 (Typecheck@0x56368ba762b8[Type#244])
  int$-           %92.1 = CastType           d     dn %90.5
  int-            %92.2 = Extract1_1D        wed   %85.4, %44.0, elided   <int$->
  lgl$#-          %92.3 = IsType                   %92.2 isA int$-
  cp              %92.4 = Checkpoint                -> BB94 (default) | BB93 (if assume failed)
BB91   <- [90]
  fs              %91.0 = FrameState         R     0x56368c771a30+3161: [-1L, %38.6, %85.0, %90.5], env=e1.10
  void                    Deopt              !v    %91.0   !
BB89   <- [88, 100]
  goto BB44
BB61   <- [59]
  void                    Assume             D     %59.9, %59.10 (Typecheck@0x56368ba762b8[Type#293])
  int$-           %61.1 = CastType           d     dn %59.8
  int$-           %61.2 = Add                d     %59.7, 1L, elided   <int$->
  int-            %61.3 = Subassign1_1D      wed   %61.1, %59.3, %61.2, elided
  void                    StVar              lW    X, %61.3, e1.10
  goto BB62
BB60   <- [59]
  fs              %60.0 = FrameState         R     0x56368c771a30+3847: [-1L, %57.11, %57.14, %59.8], env=e1.10
  void                    Deopt              !v    %60.0   !
BB54   <- [51]
  int$-           %54.0 = IDiv               d     %51.3, 2L, elided   <int$->
  void                    StVar              lW    ss, %54.0, e1.10
  goto BB53
BB52   <- [51]
  val?^ | miss    %52.0 = LdVar              eR    T, e1.10
  lgl$#-          %52.1 = IsType                   %52.0 isA int$-
  void                    Assume             D     %52.1, %49.0 (Typecheck@0x56368ba762b8[Type#338])
  int$-           %52.3 = CastType           d     dn %52.0
  int$-           %52.4 = Sub                d     %52.3, 1L, elided   <int$->
  void                    StVar              lW    T, %52.4, e1.10
  goto BB53
BB94   <- [92]
  void                    Assume             D     %92.3, %92.4 (Typecheck@0x56368ba762b8[Type#248])
  int$-           %94.1 = CastType           d     dn %92.2
  int$-           %94.2 = Sub                d     %92.1, %94.1, elided   <int$->
  val?^ | miss    %94.3 = LdVar              eR    MM, e1.10
  lgl$#-          %94.4 = IsType                   %94.3 isA int$-
  void                    Assume             D     %94.4, %92.4 (Typecheck@0x56368ba762b8[Type#250])
  int$-           %94.6 = CastType           d     dn %94.3
  int$-           %94.7 = Mod                d     %94.2, %94.6, elided   <int$->
  int$-           %94.8 = Sub                d     %44.0, %90.3, elided   <int$->
  int-            %94.9 = Subassign1_1D      wed   %94.7, %85.4, %94.8, elided   <int->
  void                    StVar              lW    X, %94.9, e1.10
  val?^ | miss    %94.11 = LdVar              eR    KK, e1.10
  val?            %94.12 = Force!<value>      !v    %94.11, e1.10   <int$->
  lgl$#-          %94.13 = IsType                   %94.12 isA int$-
  cp              %94.14 = Checkpoint                -> BB96 (default) | BB95 (if assume failed)
BB93   <- [92]
  fs              %93.0 = FrameState         R     0x56368c771a30+3227: [-1L, %38.6, %85.0, %92.1, %92.2], env=e1.10
  void                    Deopt              !v    %93.0   !
BB62   <- [61, 82]
  int-            %62.0 = Phi                      %61.3:BB61, %82.3:BB82
  int$#-          %62.1 = Phi                      %57.14:BB61, %80.1:BB82   <int$->
  lgl$#-          %62.2 = Neq                d     %57.11, %62.1, elided
  void                    Branch                   %62.2 -> BB80 (if true) | BB63 (if false)
BB53   <- [54, 52]
  goto BB5
BB96   <- [94]
  void                    Assume             D     %94.13, %94.14 (Typecheck@0x56368ba762b8[Type#261])
  int$-           %96.1 = CastType           d     dn %94.12
  int$-           %96.2 = Sub                d     %44.0, %96.1, elided   <int$->
  int-            %96.3 = Extract1_1D        wed   %94.9, %96.2, elided   <int$->
  lgl$#-          %96.4 = IsType                   %96.3 isA int$-
  cp              %96.5 = Checkpoint                -> BB98 (default) | BB97 (if assume failed)
BB95   <- [94]
  fs              %95.0 = FrameState         R     0x56368c771a30+3397: [-1L, %38.6, %85.0, %94.9, %44.0, %94.12], env=e1.10
  void                    Deopt              !v    %95.0   !
BB80   <- [62]
  void                    StVar              lW    j, %62.1, e1.10
  int$#-          %80.1 = Add                d     %62.1, -1L, elided
  int-            %80.2 = Extract1_1D        wed   %62.0, %62.1, elided   <int$->
  lgl$#-          %80.3 = IsType                   %80.2 isA int$-
  cp              %80.4 = Checkpoint                -> BB82 (default) | BB81 (if assume failed)
BB63   <- [62]
  val?^ | miss    %63.0 = LdVar              eR    KK, e1.10
  val?            %63.1 = Force!<value>      !v    %63.0, e1.10   <int$->
  lgl$#-          %63.2 = IsType                   %63.1 isA int$-
  cp              %63.3 = Checkpoint                -> BB65 (default) | BB64 (if assume failed)
BB98   <- [96]
  void                    Assume             D     %96.4, %96.5 (Typecheck@0x56368ba762b8[Type#263])
  int$-           %98.1 = CastType           d     dn %96.3
  val?^ | miss    %98.2 = LdVar              eR    X, e1.10
  lgl$#-          %98.3 = IsType                   %98.2 isA int-
  void                    Assume             D     %98.3, %96.5 (Typecheck@0x56368ba762b8[Type#264])
  int-            %98.5 = CastType           d     dn %98.2
  val?^ | miss    %98.6 = LdVar              eR    j, e1.10
  lgl$#-          %98.7 = IsType                   %98.6 isA int$-
  void                    Assume             D     %98.7, %96.5 (Typecheck@0x56368ba762b8[Type#266])
  int$-           %98.9 = CastType           d     dn %98.6
  int-            %98.10 = Extract1_1D        wed   %98.5, %98.9, elided   <int$->
  lgl$#-          %98.11 = IsType                   %98.10 isA int$-
  cp              %98.12 = Checkpoint                -> BB100 (default) | BB99 (if assume failed)
BB97   <- [96]
  fs              %97.0 = FrameState         R     0x56368c771a30+3409: [-1L, %38.6, %85.0, %96.3], env=e1.10
  void                    Deopt              !v    %97.0   !
BB82   <- [80]
  void                    Assume             D     %80.3, %80.4 (Typecheck@0x56368ba762b8[Type#300])
  int$-           %82.1 = CastType           d     dn %80.2
  int$#-          %82.2 = Add                d     %62.1, 1L, elided   <int$->
  int-            %82.3 = Subassign1_1D      wed   %82.1, %62.0, %82.2, elided
  void                    StVar              lW    X, %82.3, e1.10
  goto BB62
BB81   <- [80]
  fs              %81.0 = FrameState         R     0x56368c771a30+3998: [-1L, %57.11, %80.1, %80.2], env=e1.10
  void                    Deopt              !v    %81.0   !
BB65   <- [63]
  void                    Assume             D     %63.2, %63.3 (Typecheck@0x56368ba762b8[Type#307])
  int$-           %65.1 = CastType           d     dn %63.1
  int$-           %65.2 = Add                d     %65.1, 1L, elided   <int$->
  int-            %65.3 = Extract1_1D        wed   %62.0, %65.2, elided   <int$->
  lgl$#-          %65.4 = IsType                   %65.3 isA int$-
  cp              %65.5 = Checkpoint                -> BB67 (default) | BB66 (if assume failed)
BB64   <- [63]
  fs              %64.0 = FrameState         R     0x56368c771a30+4129: [%62.0, %63.1], env=e1.10
  void                    Deopt              !v    %64.0   !
BB100   <- [98]
  void                    Assume             D     %98.11, %98.12 (Typecheck@0x56368ba762b8[Type#267])
  int$-           %100.1 = CastType           d     dn %98.10
  int$-           %100.2 = Sub                d     %98.1, %100.1, elided   <int$->
  val?^ | miss    %100.3 = LdVar              eR    MM, e1.10
  lgl$#-          %100.4 = IsType                   %100.3 isA int$-
  void                    Assume             D     %100.4, %98.12 (Typecheck@0x56368ba762b8[Type#269])
  int$-           %100.6 = CastType           d     dn %100.3
  int$-           %100.7 = Mod                d     %100.2, %100.6, elided   <int$->
  val?^ | miss    %100.8 = LdVar              eR    KK, e1.10
  lgl$#-          %100.9 = IsType                   %100.8 isA int$-
  void                    Assume             D     %100.9, %98.12 (Typecheck@0x56368ba762b8[Type#273])
  int$-           %100.11 = CastType           d     dn %100.8
  int$-           %100.12 = Sub                d     %98.9, %100.11, elided   <int$->
  int-            %100.13 = Subassign1_1D      wed   %100.7, %98.5, %100.12, elided
  void                    StVar              lW    X, %100.13, e1.10
  goto BB89
BB99   <- [98]
  fs              %99.0 = FrameState         R     0x56368c771a30+3475: [-1L, %38.6, %85.0, %98.1, %98.10], env=e1.10
  void                    Deopt              !v    %99.0   !
BB67   <- [65]
  void                    Assume             D     %65.4, %65.5 (Typecheck@0x56368ba762b8[Type#309])
  int$-           %67.1 = CastType           d     dn %65.3
  val?^ | miss    %67.2 = LdVar              eR    X !upd, e1.10
  lgl$#-          %67.3 = IsType                   %67.2 isA int-
  void                    Assume             D     %67.3, %65.5 (Typecheck@0x56368ba762b8[Type#310])
  int-            %67.5 = CastType           d     dn %67.2
  int-            %67.6 = Subassign1_1D      wed   %67.1, %67.5, 1L, elided   <int->
  void                    StVar              lW    X, %67.6, e1.10
  val?^ | miss    %67.8 = LdVar              eR    KK, e1.10
  val?            %67.9 = Force!<value>      !v    %67.8, e1.10   <int$->
  lgl$#-          %67.10 = IsType                   %67.9 isA int$-
  cp              %67.11 = Checkpoint                -> BB69 (default) | BB68 (if assume failed)
BB66   <- [65]
  fs              %66.0 = FrameState         R     0x56368c771a30+4147: [%65.3], env=e1.10
  void                    Deopt              !v    %66.0   !
BB69   <- [67]
  void                    Assume             D     %67.10, %67.11 (Typecheck@0x56368ba762b8[Type#314])
  int$-           %69.1 = CastType           d     dn %67.9
  int$-           %69.2 = Add                d     %69.1, 1L, elided   <int$->
  int-            %69.3 = Extract1_1D        wed   %67.6, %69.2, elided   <int$->
  lgl$#-          %69.4 = IsType                   %69.3 isA int$-
  cp              %69.5 = Checkpoint                -> BB71 (default) | BB70 (if assume failed)
BB68   <- [67]
  fs              %68.0 = FrameState         R     0x56368c771a30+4237: [%67.6, %67.9], env=e1.10
  void                    Deopt              !v    %68.0   !
BB71   <- [69]
  void                    Assume             D     %69.4, %69.5 (Typecheck@0x56368ba762b8[Type#316])
  int$-           %71.1 = CastType           d     dn %69.3
  int$-           %71.2 = Mod                d     %71.1, 2L, elided   <int$->
  lgl$-           %71.3 = Eq                 d     %71.2, 1L, elided   <lgl$->
  lgl$#-          %71.4 = CheckTrueFalse     e     %71.3
  void                    Branch                   %71.4 -> BB73 (if true) | BB72 (if false)
BB70   <- [69]
  fs              %70.0 = FrameState         R     0x56368c771a30+4255: [%69.3], env=e1.10
  void                    Deopt              !v    %70.0   !
BB73   <- [71]
  val?^ | miss    %73.0 = LdVar              eR    X !upd, e1.10
  val?            %73.1 = Force!             !v    %73.0, e1.10
  cp              %73.2 = Checkpoint                -> BB75 (default) | BB74 (if assume failed)
BB72   <- [71]
  goto BB49
BB75   <- [73]
  val?^ | miss    %75.0 = LdVar              eR    X, e1.10
  lgl$#-          %75.1 = IsType                   %75.0 isA int-
  void                    Assume             D     %75.1, %73.2 (Typecheck@0x56368ba762b8[Type#319])
  int-            %75.3 = CastType           d     dn %75.0
  val?^ | miss    %75.4 = LdVar              eR    LL, e1.10
  lgl$#-          %75.5 = IsType                   %75.4 isA int$-
  void                    Assume             D     %75.5, %73.2 (Typecheck@0x56368ba762b8[Type#322])
  int$-           %75.7 = CastType           d     dn %75.4
  int$-           %75.8 = Add                d     %75.7, 1L, elided   <int$->
  int-            %75.9 = Extract1_1D        wed   %75.3, %75.8, elided   <int$->
  lgl$#-          %75.10 = IsType                   %75.9 isA int$-
  cp              %75.11 = Checkpoint                -> BB77 (default) | BB76 (if assume failed)
BB74   <- [73]
  fs              %74.0 = FrameState         R     0x56368c771a30+4305: [%73.1], env=e1.10
  void                    Deopt              !v    %74.0   !
BB77   <- [75]
  void                    Assume             D     %75.10, %75.11 (Typecheck@0x56368ba762b8[Type#324])
  int$-           %77.1 = CastType           d     dn %75.9
  val?^ | miss    %77.2 = LdVar              eR    KK, e1.10
  lgl$#-          %77.3 = IsType                   %77.2 isA int$-
  void                    Assume             D     %77.3, %75.11 (Typecheck@0x56368ba762b8[Type#328])
  int$-           %77.5 = CastType           d     dn %77.2
  int$-           %77.6 = Add                d     %77.5, 1L, elided   <int$->
  int-            %77.7 = Extract1_1D        wed   %75.3, %77.6, elided   <int$->
  lgl$#-          %77.8 = IsType                   %77.7 isA int$-
  cp              %77.9 = Checkpoint                -> BB79 (default) | BB78 (if assume failed)
BB76   <- [75]
  fs              %76.0 = FrameState         R     0x56368c771a30+4379: [%75.9], env=e1.10
  void                    Deopt              !v    %76.0   !
BB79   <- [77]
  void                    Assume             D     %77.8, %77.9 (Typecheck@0x56368ba762b8[Type#330])
  int$-           %79.1 = CastType           d     dn %77.7
  int$-           %79.2 = Sub                d     %77.1, %79.1, elided   <int$->
  val?^ | miss    %79.3 = LdVar              eR    MM, e1.10
  lgl$#-          %79.4 = IsType                   %79.3 isA int$-
  void                    Assume             D     %79.4, %77.9 (Typecheck@0x56368ba762b8[Type#332])
  int$-           %79.6 = CastType           d     dn %79.3
  int$-           %79.7 = Mod                d     %79.2, %79.6, elided   <int$->
  int-            %79.8 = Subassign1_1D      wed   %79.7, %75.3, %75.8, elided
  void                    StVar              lW    X, %79.8, e1.10
  goto BB49
BB78   <- [77]
  fs              %78.0 = FrameState         R     0x56368c771a30+4457: [%77.1, %77.7], env=e1.10
  void                    Deopt              !v    %78.0   !
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    KKL, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <int$->
  void                    Visible            v     
  val?            %1.4  = Add                !     %1.2, 1L, e1.0   <int$->
  void                    Return             l     %1.4
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  void                    Visible            v     
  void                    Return             l     -2L

│ [0x56368dcb2090]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
