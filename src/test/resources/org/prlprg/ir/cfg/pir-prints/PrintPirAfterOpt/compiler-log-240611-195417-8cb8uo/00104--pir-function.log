
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x55b0cad22c90]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
[0x55b0cad22c90]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB12 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    inherits, <env 0x55b0c92eeb50>
  lgl$#-          %2.1  = Identical                %2.0, function(x, what, which=FALSE) <(rir::Dispatch|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x55b0cab07ed8[Call#0])
  env             e2.3  = MkEnv              l     x=%1.0, parent=<env 0x55b0c92eeb50>, context 1
  prom-           %2.4  = MkArg                    unboundValue, [0x55b0cad22c90]_p0 (!refl), e2.3
  ct              %2.5  = PushContext        lCL   %2.4, "ts", inherits(x, "ts"), function(x, what, which=FALSE) <(rir::Dispatch|..., e2.3
  val?^           %2.6  = CastType                 up %2.4
  env             e2.7  = MkEnv              l     x=%2.6, what="ts", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %2.8  = Force!<lazy>       !vr   %2.6,    <val?>
  val?            %2.9  = CallBuiltin        !     inherits(%2.8, "ts", false) e2.7
  val?            %2.10 = PopContext         C     %2.9, %2.5   <lgl$->
  lgl$#-          %2.11 = IsType                   %2.10 isA lgl$-
  cp              %2.12 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB12   <- [1]
  env             e12.0 = (MkEnv)            l     x=%1.0, parent=<env 0x55b0c92eeb50>, context 1
  fs              %12.1 = FrameState         R     0x55b0c9d48580+0: [], env=e12.0
  void                    Deopt              !v    %12.1
BB4   <- [2]
  void                    Assume             D     %2.11, %2.12 (Typecheck@0x55b0cab07ed8[Type#1])
  lgl$-           %4.1  = CastType           d     dn %2.10
  lgl$-           %4.2  = AsLogical                %4.1
  lgl$#-          %4.3  = Identical                %4.2, false
  void                    Branch                   %4.3 -> BB11 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55b0c9d48580+37: [%2.10], env=e2.3
  void                    Deopt              !v    %3.0   !
BB11   <- [4]
  goto BB10
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    length, e2.3
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <@?>
  void                    Branch                   %5.1 -> BB7 (if true) | BB6 (if false)
BB10   <- [11, 9]
  lgl$-           %10.0 = Phi                      %9.4:BB9, %4.2:BB11
  void                    Return             l     %10.0
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    x, e2.3
  val?            %7.1  = Force!             !v    %7.0, e2.3   <val?_>
  lgl$#-          %7.2  = IsType                   %7.1 isA val?+
  cp              %7.3  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    length, e2.3
  fs              %6.1  = FrameState         R     0x55b0c9d48580+77: [%4.2, %6.0], env=e2.3
  void                    Deopt              !v    %6.1, DeadCall@0x55b0cab07ed8[Call#1], %6.0   !
BB9   <- [7]
  void                    Assume             D     %7.2, %7.3 (Typecheck@0x55b0cab07ed8[Type#3])
  val?+           %9.1  = CastType           d     dn %7.1   <val?_>
  (int|real)$-    %9.2  = CallSafeBuiltin    vwed  length(%9.1)    <val?_>
  lgl$-           %9.3  = AsLogical                %9.2
  lgl$-           %9.4  = LAnd                     %4.2, %9.3
  goto BB10
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x55b0c9d48580+118: [%4.2, <blt length>, %7.1], env=e2.3
  void                    Deopt              !v    %8.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?+>
  void                    Return             l     %1.3

│ [0x55b0cad22c90]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
