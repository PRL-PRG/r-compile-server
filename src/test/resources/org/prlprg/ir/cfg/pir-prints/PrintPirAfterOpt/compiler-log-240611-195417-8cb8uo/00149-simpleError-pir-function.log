
┌──────────────────────────────────────────────────────────────────────────────┐
│ simpleError[0x55b0cbf0b9f0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1                    │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
simpleError[0x55b0cbf0b9f0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  str-            %1.2  = CallSafeBuiltin    wed   c("simpleError", "error", "condition")    <str->
  env             e1.3  = MkEnv              l     message=%1.1, call=%1.0, class=%1.2, parent=R_BaseNamespace, context 1
  prom-           %1.4  = MkArg                    unboundValue, simpleError[0x55b0cbf0b9f0]_p0, e1.3
  prom-           %1.5  = MkArg                    unboundValue, simpleError[0x55b0cbf0b9f0]_p4 (!refl), e1.3
  dots-           %1.6  = DotsList           l     class=%1.5
  ct              %1.7  = PushContext        lCL   %1.4, %1.6, structure(list(message=as.character(message), |..., function(.Data, ...) <(rir::DispatchTable*)0x5|..., e1.3
  val?^           %1.8  = CastType                 up %1.4
  env             e1.9  = MkEnv              l     .Data=%1.8, ...=%1.6, parent=R_BaseNamespace, context 1
  val?            %1.10 = Force!<lazy>       !vr   %1.8,    <val?>
  lgl$-           %1.11 = Is                       %1.10, NULL
  lgl$#-          %1.12 = CheckTrueFalse     e     %1.11
  void                    Branch                   %1.12 -> BB2 (if true) | BB3 (if false)
BB2   <- [1]
  fs              %2.0  = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  (cls|spec|blt)  %2.1  = LdFun              !v    warning, R_BaseNamespace
  fs              %2.2  = FrameState         R     0x55b0cadcdd00+35: [%2.1], env=e1.9, next=%2.0
  void                    Deopt              !v    %2.2, DeadCall@0x55b0ca15de58[Call#0], %2.1   !
BB3   <- [1]
  val?            %3.0  = NamedCall          !v    <blt list>(class=%1.5) e1.9   <vec+>
  void                    StVar              lW    attrib, %3.0, e1.9
  lgl$#-          %3.2  = IsType                   %3.0 isA val?+
  cp              %3.3  = Checkpoint                -> BB4 (default) | BB34 (if assume failed)
BB4   <- [3]
  val?^ | miss    %4.0  = LdVar              eR    length, e1.9
  lgl$#-          %4.1  = Identical                <blt length>, %4.0   <true>
  void                    Assume             D     %4.1, %3.3 (DeadBranchReached@0x55b0ca15de58[Test#0])
  val             %4.3  = ChkMissing         e     %3.0
  void                    Assume             D     %3.2, %3.3 (Typecheck@0x55b0ca15de58[Type#1])
  val?+           %4.5  = CastType           d     dn %3.0   <vec+>
  (int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
  lgl$#-          %4.7  = IsType                   %4.6 isA int$-
  cp              %4.8  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB34   <- [3]
  fs              %34.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %34.1 = FrameState         R     0x55b0cadcdd00+113: [], env=e1.9, next=%34.0
  void                    Deopt              !v    %34.1   !
BB6   <- [4]
  void                    Assume             D     %4.7, %4.8 (Typecheck@0x55b0ca15de58[Type#4])
  int$-           %6.1  = CastType           d     dn %4.6
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB9 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %5.1  = FrameState         R     0x55b0cadcdd00+204: [%4.6], env=e1.9, next=%5.0
  void                    Deopt              !v    %5.1   !
BB9   <- [6]
  val?^ | miss    %9.0  = LdVar              eR    c, e1.9
  lgl$#-          %9.1  = Identical                <blt c>, %9.0   <true>
  void                    Assume             D     %9.1, %4.8 (DeadBranchReached@0x55b0ca15de58[Test#1])
  str-            %9.3  = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %9.3, e1.9
  cp              %9.5  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB7   <- [6]
  goto BB8
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    names, e1.9
  lgl$#-          %11.1 = Identical                <blt names>, %11.0   <true>
  void                    Assume             D     %11.1, %9.5 (DeadBranchReached@0x55b0ca15de58[Test#2])
  val+            %11.3 = CallSafeBuiltin    wed   names(%4.5)    <str->
  void                    StVar              lW    attrnames, %11.3, e1.9
  cp              %11.5 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %10.1 = FrameState         R     0x55b0cadcdd00+361: [], env=e1.9, next=%10.0
  void                    Deopt              !v    %10.1   !
BB8   <- [7, 29]
  val?^ | miss    %8.0  = LdVar              eR    .Data, e1.9
  void                    Visible            v     
  val?            %8.2  = Force!<value>      !     %8.0, e1.9   <val?>
  val?            %8.3  = PopContext         C     %8.2, %1.7   <vec>
  void                    Return             l     %8.3
BB13   <- [11]
  val?^ | miss    %13.0 = LdVar              eR    match, e1.9
  lgl$#-          %13.1 = Identical                %13.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Assume             D     %13.1, %11.5 (CallTarget@0x55b0ca15de58[Call#5])
  val+            %13.3 = CallSafeBuiltin    wed   match(%11.3, %9.3, NA, nil)    <int->
  void                    StVar              lW    m, %13.3, e1.9
  lgl$#-          %13.5 = IsType                   %13.3 isA int-
  cp              %13.6 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %12.1 = FrameState         R     0x55b0cadcdd00+466: [], env=e1.9, next=%12.0
  void                    Deopt              !v    %12.1   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    is.na, e1.9
  lgl$#-          %15.1 = Identical                <blt is.na>, %15.0   <true>
  void                    Assume             D     %15.1, %13.6 (DeadBranchReached@0x55b0ca15de58[Test#3])
  void                    Assume             D     %13.5, %13.6 (Typecheck@0x55b0ca15de58[Type#11])
  int-            %15.4 = CastType           d     dn %13.3
  lgl-            %15.5 = CallSafeBuiltin    wed   is.na(%15.4)    <lgl->
  lgl-            %15.6 = Not                wed   %15.5, elided   <lgl->
  void                    StVar              lW    ok, %15.6, e1.9
  cp              %15.8 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %14.1 = FrameState         R     0x55b0cadcdd00+517: [], env=e1.9, next=%14.0
  void                    Deopt              !v    %14.1   !
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    any, e1.9
  lgl$#-          %17.1 = Identical                <blt any>, %17.0   <true>
  void                    Assume             D     %17.1, %15.8 (DeadBranchReached@0x55b0ca15de58[Test#4])
  val?            %17.3 = CallBuiltin        !v    any(%15.6) e1.9   <lgl$->
  lgl$#-          %17.4 = IsType                   %17.3 isA lgl$-
  cp              %17.5 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %16.1 = FrameState         R     0x55b0cadcdd00+623: [], env=e1.9, next=%16.0
  void                    Deopt              !v    %16.1   !
BB19   <- [17]
  void                    Assume             D     %17.4, %17.5 (Typecheck@0x55b0ca15de58[Type#17])
  lgl$-           %19.1 = CastType           d     dn %17.3
  lgl$#-          %19.2 = CheckTrueFalse     e     %19.1
  void                    Branch                   %19.2 -> BB31 (if true) | BB20 (if false)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %18.1 = FrameState         R     0x55b0cadcdd00+714: [%17.3], env=e1.9, next=%18.0
  void                    Deopt              !v    %18.1   !
BB31   <- [19]
  val?^ | miss    %31.0 = LdVar              eR    c, e1.9
  lgl$#-          %31.1 = Identical                <blt c>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB20   <- [19]
  val?^ | miss    %20.0 = LdVar              eR    any, e1.9
  lgl$#-          %20.1 = Identical                <blt any>, %20.0   <true>
  void                    Assume             D     %20.1, %17.5 (DeadBranchReached@0x55b0ca15de58[Test#10])
  (cls|spec|blt)  %20.3 = LdFun              !v    [[, <0x55b0c8c9ec48>, e1.9
  prom-           %20.4 = MkArg                    unboundValue, simpleError[0x55b0cbf0b9f0]_p5, e1.9
  val?            %20.5 = NamedCall          !v    %20.3(%20.4, "class", exact=true) e1.9   <(nil|str)->
  lgl$#-          %20.6 = IsType                   %20.5 isA val?-
  cp              %20.7 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB33   <- [31]
  fs              %33.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  str-            %33.1 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %33.1, e1.9
  (cls|spec|blt)  %33.3 = LdFun              !v    <-, e1.9
  fs              %33.4 = FrameState         R     0x55b0cadcdd00+876: [%33.3], env=e1.9, next=%33.0
  void                    Deopt              !v    %33.4, DeadCall@0x55b0ca15de58[Call#9], %33.3   !
BB32   <- [31]
  fs              %32.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  (cls|spec|blt)  %32.1 = LdFun              !v    c, e1.9
  fs              %32.2 = FrameState         R     0x55b0cadcdd00+758: [%32.1], env=e1.9, next=%32.0
  void                    Deopt              !v    %32.2, DeadCall@0x55b0ca15de58[Call#8], %32.1   !
BB22   <- [20]
  void                    Assume             D     %20.6, %20.7 (Typecheck@0x55b0ca15de58[Type#38])
  val?-           %22.1 = CastType           d     dn %20.5   <(nil|str)->
  lgl-            %22.2 = Eq                 wed   %22.1, "factor", elided   <lgl->
  val?            %22.3 = CallBuiltin        !v    any(%22.2) e1.9   <lgl$->
  lgl$#-          %22.4 = IsType                   %22.3 isA lgl$-
  cp              %22.5 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %21.1 = FrameState         R     0x55b0cadcdd00+1023: [<blt any>, %20.5], env=e1.9, next=%21.0
  void                    Deopt              !v    %21.1   !
BB24   <- [22]
  void                    Assume             D     %22.4, %22.5 (Typecheck@0x55b0ca15de58[Type#40])
  lgl$-           %24.1 = CastType           d     dn %22.3
  lgl$-           %24.2 = AsLogical                %24.1
  lgl$#-          %24.3 = Identical                %24.2, false
  void                    Branch                   %24.3 -> BB26 (if true) | BB25 (if false)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %23.1 = FrameState         R     0x55b0cadcdd00+1057: [%22.3], env=e1.9, next=%23.0
  void                    Deopt              !v    %23.1   !
BB26   <- [24]
  lgl$#-          %26.0 = CheckTrueFalse     e     %24.2
  void                    Branch                   %26.0 -> BB30 (if true) | BB27 (if false)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  (cls|spec|blt)  %25.1 = LdFun              !v    typeof, e1.9
  fs              %25.2 = FrameState         R     0x55b0cadcdd00+1074: [%24.2, %25.1], env=e1.9, next=%25.0
  void                    Deopt              !v    %25.2, DeadCall@0x55b0ca15de58[Call#14], %25.1   !
BB30   <- [26]
  fs              %30.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  (cls|spec|blt)  %30.1 = LdFun              !v    storage.mode<-, e1.9
  fs              %30.2 = FrameState         R     0x55b0cadcdd00+1142: ["integer", %30.1], env=e1.9, next=%30.0
  void                    Deopt              !v    %30.2, DeadCall@0x55b0ca15de58[Call#15], %30.1   !
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    c, e1.9
  lgl$#-          %27.1 = Identical                <blt c>, %27.0   <true>
  void                    Assume             D     %27.1, %22.5 (DeadBranchReached@0x55b0ca15de58[Test#11])
  val?^ | miss    %27.3 = LdVar              eR    attributes, e1.9
  lgl$#-          %27.4 = Identical                <blt attributes>, %27.3   <true>
  void                    Assume             D     %27.4, %22.5 (DeadBranchReached@0x55b0ca15de58[Test#12])
  val?^ | miss    %27.6 = LdVar              eR    .Data, e1.9
  val?            %27.7 = Force!<wrapped>    !v    %27.6, e1.9   <val?>
  val?            %27.8 = CallBuiltin        !v    attributes(%27.7) e1.9   <(nil|vec)+>
  lgl$#-          %27.9 = IsType                   %27.8 isA val?+
  cp              %27.10 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    attrib, e1.9
  lgl$#-          %29.1 = IsType                   %29.0 isA val?~+ | miss
  void                    Assume             D     %29.1, %27.10 (Typecheck@0x55b0ca15de58[Type#51])
  val?~+ | miss   %29.3 = CastType           d     dn %29.0
  val?+           %29.4 = Force!<value>            %29.3,    <vec+>
  void                    Assume             D     %27.9, %27.10 (Typecheck@0x55b0ca15de58[Type#50])
  val?+           %29.6 = CastType           d     dn %27.8   <(nil|vec)+>
  val+            %29.7 = CallSafeBuiltin    wed   c(%29.6, %29.4)    <vec+>
  (cls|spec|blt)  %29.8 = LdFun              !v    attributes<-, <0x55b0c8c9f128>, e1.9
  val?^ | miss    %29.9 = LdVar              eR    .Data, e1.9
  val?            %29.10 = Force!<wrapped>    !v    %29.9, e1.9   <val?>
  val?            %29.11 = NamedCall          !v    %29.8(%29.10, value=%29.7) e1.9
  void                    StVar              lW    .Data, %29.11, e1.9
  goto BB8
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x55b0cb859560+164: [], env=e1.3
  fs              %28.1 = FrameState         R     0x55b0cadcdd00+1361: [<blt c>, %27.8], env=e1.9, next=%28.0
  void                    Deopt              !v    %28.1   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     list, <0x55b0c8cb35c0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, simpleError[0x55b0cbf0b9f0]_p1, e1.0
  prom-           %1.3  = MkArg                    unboundValue, simpleError[0x55b0cbf0b9f0]_p3, e1.0
  val?            %1.4  = NamedCall          !     %1.1(message=%1.2, call=%1.3) e1.0   <vec+>
  void                    Return             l     %1.4
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x55b0c8cac040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, simpleError[0x55b0cbf0b9f0]_p2, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    message, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    attrib, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ simpleError[0x55b0cbf0b9f0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
