
┌──────────────────────────────────────────────────────────────────────────────┐
│ %in%[0x55b0cb6f7b40]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
%in%[0x55b0cb6f7b40]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  env             e1.2  = MkEnv              l     x=%1.1, table=%1.0, parent=R_BaseNamespace, context 1
  prom-           %1.3  = MkArg                    unboundValue, %in%[0x55b0cb6f7b40]_p0, e1.2
  prom-           %1.4  = MkArg                    unboundValue, %in%[0x55b0cb6f7b40]_p1, e1.2
  ct              %1.5  = PushContext        lCL   %1.3, %1.4, 0L, match(x, table, nomatch=0L), function(x, table, nomatch=NA, incomparables=N|..., e1.2
  val?^           %1.6  = CastType                 up %1.4
  val?^           %1.7  = CastType                 up %1.3
  env             e1.8  = MkEnv              l     x=%1.7, table=%1.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context 1
  val?            %1.9  = Force!<lazy>       !vL   %1.7, e1.8   <val?>
  val?            %1.10 = Force!<lazy>       !vL   %1.6, e1.8   <val?+>
  lgl$#-          %1.11 = IsType                   %1.10 isA val?+
  cp              %1.12 = Checkpoint                -> BB2 (default) | BB5 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.11, %1.12 (Typecheck@0x55b0c8facb30[Type#1])
  val?+           %2.1  = CastType           d     dn %1.10
  val?            %2.2  = CallBuiltin        !v    match(%1.9, %2.1, 0L, nil) e1.8
  val?            %2.3  = PopContext         C     %2.2, %1.5   <int->
  lgl$#-          %2.4  = IsType                   %2.3 isA int-
  cp              %2.5  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB5   <- [1]
  fs              %5.0  = FrameState         R     0x55b0c92cc4e0+54: [], env=e1.2
  fs              %5.1  = FrameState         R     0x55b0c97d4d70+51: [%1.9, %1.10, 0L, nil], env=e1.8, next=%5.0
  void                    Deopt              !v    %5.1   !
BB4   <- [2]
  void                    Visible            v     
  void                    Assume             D     %2.4, %2.5 (Typecheck@0x55b0ca2fe688[Type#2])
  int-            %4.2  = CastType           d     dn %2.3
  lgl-            %4.3  = Gt                 vwed  %4.2, 0L, elided   <lgl->
  void                    Return             l     %4.3
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55b0c92cc4e0+54: [%2.3], env=e1.2
  void                    Deopt              !v    %3.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    table, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?+>
  void                    Return             l     %1.3

│ %in%[0x55b0cb6f7b40]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
