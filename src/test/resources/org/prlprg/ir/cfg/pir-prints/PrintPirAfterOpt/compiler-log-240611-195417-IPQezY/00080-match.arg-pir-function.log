
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.arg[0x55ccaaccb1b0]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1        │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
match.arg[0x55ccaaccb1b0]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  env             e1.2  = MkEnv              l     arg=%1.1, choices=%1.0, several.ok(miss)=false, parent=R_BaseNamespace, context 1
  lgl$-           %1.3  = Missing            eR    choices, e1.2
  lgl$#-          %1.4  = CheckTrueFalse     e     %1.3
  void                    Branch                   %1.4 -> BB2 (if true) | BB63 (if false)
BB2   <- [1]
  prom-           %2.0  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p5, e1.2
  val?            %2.1  = StaticCall         !v    formals[0x55cca8116e30](%2.0) e1.2   <list->
  void                    StVar              lW    formal.args, %2.1, e1.2
  cp              %2.3  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB63   <- [1]
  goto BB5
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    eval, e1.2
  lgl$#-          %4.1  = Identical                %4.0, function(expr, envir=parent.frame(), enclos=if|...
  void                    Assume             D     %4.1, %2.3 (CallTarget@0x55cca9427ef0[Call#3])
  prom-           %4.3  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p7, e1.2
  prom-           %4.4  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p13, e1.2
  val?            %4.5  = StaticCall         !v    eval[0x55ccaa181ee0](%4.3, %4.4) { 0 1n } e1.2   <str->
  void                    StVar              lW    choices, %4.5, e1.2
  goto BB5
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55cca9427750+63: [], env=e1.2
  void                    Deopt              !v    %3.0   !
BB5   <- [63, 4]
  val?^ | miss    %5.0  = LdVar              eR    arg, e1.2
  val?            %5.1  = Force!<lazy>       !v    %5.0, e1.2   <str->
  lgl$-           %5.2  = Is                       %5.1, NULL
  cp              %5.3  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  lgl$#-          %7.0  = CheckTrueFalse     e     %5.2
  void                    Branch                   %7.0 -> BB60 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55cca9427750+131: [%5.1], env=e1.2
  void                    Deopt              !v    %6.0   !
BB60   <- [7]
  val?^ | miss    %60.0 = LdVar              eR    choices, e1.2
  val?            %60.1 = Force!             !v    %60.0, e1.2   <val?_>
  lgl$#-          %60.2 = IsType                   %60.1 isA val?+
  cp              %60.3 = Checkpoint                -> BB62 (default) | BB61 (if assume failed)
BB8   <- [7]
  val?^ | miss    %8.0  = LdVar              eR    is.character, e1.2
  lgl$#-          %8.1  = Identical                <blt is.character>, %8.0   <true>
  void                    Assume             D     %8.1, %5.3 (DeadBranchReached@0x55cca9427ef0[Test#1])
  val?^ | miss    %8.3  = LdVar              eR    arg, e1.2
  val?            %8.4  = Force!<wrapped>    !v    %8.3, e1.2   <str->
  lgl$#-          %8.5  = CallSafeBuiltin    wed   is.character(%8.4)    <lgl$->
  void                    Branch                   %8.5 -> BB10 (if true) | BB9 (if false)
BB62   <- [60]
  void                    Assume             D     %60.2, %60.3 (Typecheck@0x55cca9427ef0[Type#18])
  val?+           %62.1 = CastType           d     dn %60.1   <val?_>
  val?            %62.2 = Extract1_1D        wed   %62.1, 1L, elided   <val?_>
  void                    Visible            v     
  goto BB42
BB61   <- [60]
  fs              %61.0 = FrameState         R     0x55cca9427750+302: [%60.1], env=e1.2
  void                    Deopt              !v    %61.0   !
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    several.ok, e1.2
  val?            %10.1 = Force!<lazy>       !v    %10.0, e1.2   <lgl$->
  lgl$#-          %10.2 = IsType                   %10.1 isA lgl$-
  cp              %10.3 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  (cls|spec|blt)  %9.0  = LdFun              !v    stop, e1.2
  fs              %9.1  = FrameState         R     0x55cca9427750+260: [%9.0], env=e1.2
  void                    Deopt              !v    %9.1, DeadCall@0x55cca9427ef0[Call#10], %9.0   !
BB42   <- [62, 59, 41]
  val?            %42.0 = Phi                      %41.7:BB41, %59.3:BB59, %62.2:BB62
  void                    Return             l     %42.0
BB12   <- [10]
  void                    Assume             D     %10.2, %10.3 (Typecheck@0x55cca9427ef0[Type#20])
  lgl$-           %12.1 = CastType           d     dn %10.1
  lgl$-           %12.2 = Not                d     %12.1, elided
  lgl$#-          %12.3 = CheckTrueFalse     e     %12.2
  void                    Branch                   %12.3 -> BB47 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x55cca9427750+361: [%10.1], env=e1.2
  void                    Deopt              !v    %11.0   !
BB47   <- [12]
  val?^ | miss    %47.0 = LdVar              eR    identical, e1.2
  lgl$#-          %47.1 = Identical                %47.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %47.1, %10.3 (CallTarget@0x55cca9427ef0[Call#13])
  prom-           %47.3 = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p3, e1.2
  prom-           %47.4 = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p4, e1.2
  ct              %47.5 = PushContext        lCL   %47.3, %47.4, identical(arg, choices), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e1.2
  val?^           %47.6 = CastType                 up %47.4
  val?^           %47.7 = CastType                 up %47.3
  env             e47.8 = MkEnv              l     x=%47.7, y=%47.6, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %47.9 = Force!<lazy>       !vL   %47.7, e47.8   <val?>
  val?            %47.10 = Force!<lazy>       !vL   %47.6, e47.8   <val?>
  val?            %47.11 = CallBuiltin        !v    identical(%47.9, %47.10, true, true, true, true, false, true) e47.8
  val?            %47.12 = PopContext         C     %47.11, %47.5   <lgl$->
  lgl$#-          %47.13 = IsType                   %47.12 isA lgl$-
  cp              %47.14 = Checkpoint                -> BB49 (default) | BB48 (if assume failed)
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    length, e1.2
  lgl$#-          %13.1 = Identical                <blt length>, %13.0   <@?>
  void                    Branch                   %13.1 -> BB15 (if true) | BB14 (if false)
BB49   <- [47]
  void                    Assume             D     %47.13, %47.14 (Typecheck@0x55cca9427ef0[Type#27])
  lgl$-           %49.1 = CastType           d     dn %47.12
  lgl$#-          %49.2 = CheckTrueFalse     e     %49.1
  void                    Branch                   %49.2 -> BB57 (if true) | BB50 (if false)
BB48   <- [47]
  fs              %48.0 = FrameState         R     0x55cca9427750+567: [%47.12], env=e1.2
  void                    Deopt              !v    %48.0   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    arg, e1.2
  val?            %15.1 = Force!             !v    %15.0, e1.2   <val?_>
  lgl$#-          %15.2 = IsType                   %15.1 isA val?+
  cp              %15.3 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  (cls|spec|blt)  %14.0 = LdFun              !v    length, e1.2
  fs              %14.1 = FrameState         R     0x55cca9427750+401: [%14.0], env=e1.2
  void                    Deopt              !v    %14.1, DeadCall@0x55cca9427ef0[Call#11], %14.0   !
BB57   <- [49]
  val?^ | miss    %57.0 = LdVar              eR    arg, e1.2
  val?            %57.1 = Force!<wrapped>    !v    %57.0, e1.2   <str->
  lgl$#-          %57.2 = IsType                   %57.1 isA val+   <true>
  lgl$#-          %57.3 = IsType                   %57.1 isA val?-
  cp              %57.4 = Checkpoint                -> BB59 (default) | BB58 (if assume failed)
BB50   <- [49]
  val?^ | miss    %50.0 = LdVar              eR    length, e1.2
  lgl$#-          %50.1 = Identical                <blt length>, %50.0   <true>
  void                    Assume             D     %50.1, %47.14 (DeadBranchReached@0x55cca9427ef0[Test#5])
  val?^ | miss    %50.3 = LdVar              eR    arg, e1.2
  val?            %50.4 = Force!<wrapped>    !v    %50.3, e1.2   <str$->
  lgl$#-          %50.5 = IsType                   %50.4 isA val?-
  cp              %50.6 = Checkpoint                -> BB52 (default) | BB51 (if assume failed)
BB17   <- [15]
  void                    Assume             D     %15.2, %15.3 (Typecheck@0x55cca9427ef0[Type#22])
  val?+           %17.1 = CastType           d     dn %15.1   <val?_>
  (int|real)$-    %17.2 = CallSafeBuiltin    wed   length(%17.1)    <val?_>
  lgl$-           %17.3 = Eq                 d     %17.2, 0L, elided   <val?_>
  lgl$#-          %17.4 = CheckTrueFalse     e     %17.3
  void                    Branch                   %17.4 -> BB46 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x55cca9427750+442: [<blt length>, %15.1], env=e1.2
  void                    Deopt              !v    %16.0   !
BB59   <- [57]
  void                    Assume             D     %57.2, %57.4 (DeadBranchReached@0x55cca9427ef0[Test#4])
  void                    Assume             D     %57.3, %57.4 (Typecheck@0x55cca9427ef0[Type#28])
  val?-           %59.2 = CastType           d     dn %57.1   <str->
  val?            %59.3 = Extract1_1D        wed   %59.2, 1L, elided   <str$->
  void                    Visible            v     
  goto BB42
BB58   <- [57]
  fs              %58.0 = FrameState         R     0x55cca9427750+592: [%57.1], env=e1.2
  void                    Deopt              !v    %58.0   !
BB52   <- [50]
  void                    Assume             D     %50.5, %50.6 (Typecheck@0x55cca9427ef0[Type#31])
  val?-           %52.1 = CastType           d     dn %50.4   <str$->
  (int|real)$-    %52.2 = CallSafeBuiltin    wed   length(%52.1)    <int$->
  lgl$#-          %52.3 = IsType                   %52.2 isA int$-
  cp              %52.4 = Checkpoint                -> BB54 (default) | BB53 (if assume failed)
BB51   <- [50]
  fs              %51.0 = FrameState         R     0x55cca9427750+711: [<blt length>, %50.4], env=e1.2
  void                    Deopt              !v    %51.0   !
BB46   <- [17]
  (cls|spec|blt)  %46.0 = LdFun              !v    stop, e1.2
  fs              %46.1 = FrameState         R     0x55cca9427750+497: [%46.0], env=e1.2
  void                    Deopt              !v    %46.1, DeadCall@0x55cca9427ef0[Call#12], %46.0   !
BB18   <- [17]
  goto BB19
BB54   <- [52]
  void                    Assume             D     %52.3, %52.4 (Typecheck@0x55cca9427ef0[Type#32])
  int$-           %54.1 = CastType           d     dn %52.2
  lgl$-           %54.2 = Gt                 d     %54.1, 1L, elided   <lgl$->
  lgl$#-          %54.3 = CheckTrueFalse     e     %54.2
  void                    Branch                   %54.3 -> BB56 (if true) | BB55 (if false)
BB53   <- [52]
  fs              %53.0 = FrameState         R     0x55cca9427750+733: [%52.2], env=e1.2
  void                    Deopt              !v    %53.0   !
BB19   <- [55, 18]
  cp              %19.0 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB56   <- [54]
  (cls|spec|blt)  %56.0 = LdFun              !v    stop, e1.2
  fs              %56.1 = FrameState         R     0x55cca9427750+766: [%56.0], env=e1.2
  void                    Deopt              !v    %56.1, DeadCall@0x55cca9427ef0[Call#15], %56.0   !
BB55   <- [54]
  goto BB19
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    pmatch, e1.2
  lgl$#-          %21.1 = Identical                %21.0, function(x, table, nomatch=NA, duplicates.ok=F|...
  void                    Assume             D     %21.1, %19.0 (CallTarget@0x55cca9427ef0[Call#16])
  val?^ | miss    %21.3 = LdVar              eR    arg, e1.2
  val?            %21.4 = Force!<wrapped>    !v    %21.3, e1.2   <str$->
  lgl$#-          %21.5 = IsType                   %21.4 isA val?-
  cp              %21.6 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x55cca9427750+794: [], env=e1.2
  void                    Deopt              !v    %20.0   !
BB23   <- [21]
  void                    Assume             D     %21.5, %21.6 (Typecheck@0x55cca772bf20[Type#1])
  val?-           %23.1 = CastType           d     dn %21.4   <str->
  val+            %23.2 = CallSafeBuiltin    wed   as.character(%23.1)    <str->
  val?^ | miss    %23.3 = LdVar              eR    choices, e1.2
  val?            %23.4 = Force!<value>      !v    %23.3, e1.2   <str->
  lgl$#-          %23.5 = IsType                   %23.4 isA val?-
  cp              %23.6 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  prom-           %22.0 = MkArg                    %21.4, match.arg[0x55ccaaccb1b0]_p1 (!refl), e1.2
  val?~           %22.1 = CastType                 up %22.0
  prom-           %22.2 = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p2, e1.2
  val?^           %22.3 = CastType                 up %22.2
  fs              %22.4 = FrameState         R     0x55cca9427750+857: [], env=e1.2
  env             e22.5 = (MkEnv)            l     x=%22.1, table=%22.3, nomatch=0L, duplicates.ok=true, parent=R_BaseNamespace, context 0
  fs              %22.6 = FrameState         R     0x55cca772bd50+69: [<blt as.character>, %21.4], env=e22.5, next=%22.4
  void                    Deopt              !v    %22.6   !
BB25   <- [23]
  void                    Assume             D     %23.5, %23.6 (Typecheck@0x55cca772bf20[Type#4])
  val?-           %25.1 = CastType           d     dn %23.4   <str->
  val+            %25.2 = CallSafeBuiltin    wed   as.character(%25.1)    <str->
  val+            %25.3 = CallSafeBuiltin    wed   pmatch(%23.2, %25.2, 0L, true)    <int$->
  lgl$#-          %25.4 = IsType                   %25.3 isA int$-
  cp              %25.5 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB24   <- [23]
  prom-           %24.0 = MkArg                    %23.4, match.arg[0x55ccaaccb1b0]_p2 (!refl), e1.2
  val?~           %24.1 = CastType                 up %24.0
  prom-           %24.2 = MkArg                    %23.1, match.arg[0x55ccaaccb1b0]_p1 (!refl), e1.2
  val?~           %24.3 = CastType                 up %24.2
  fs              %24.4 = FrameState         R     0x55cca9427750+857: [], env=e1.2
  env             e24.5 = (MkEnv)            l     duplicates.ok=true, nomatch=0L, table=%24.1, x=%24.3, parent=R_BaseNamespace, context 0
  fs              %24.6 = FrameState         R     0x55cca772bd50+165: [%23.2, <blt as.character>, %23.4], env=e24.5, next=%24.4
  void                    Deopt              !v    %24.6   !
BB27   <- [25]
  void                    Assume             D     %25.4, %25.5 (Typecheck@0x55cca9427ef0[Type#36])
  int$-           %27.1 = CastType           d     dn %25.3
  void                    StVar              lW    i, %27.1, e1.2
  cp              %27.3 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB26   <- [25]
  prom-           %26.0 = MkArg                    %25.1, match.arg[0x55ccaaccb1b0]_p2 (!refl), e1.2
  val?~           %26.1 = CastType                 up %26.0
  prom-           %26.2 = MkArg                    %23.1, match.arg[0x55ccaaccb1b0]_p1 (!refl), e1.2
  val?~           %26.3 = CastType                 up %26.2
  fs              %26.4 = FrameState         R     0x55cca9427750+857: [], env=e1.2
  env             e26.5 = (MkEnv)            l     duplicates.ok=true, nomatch=0L, table=%26.1, x=%26.3, parent=R_BaseNamespace, context 0
  fs              %26.6 = FrameState         R     0x55cca772bd50+233: [%25.3], env=e26.5, next=%26.4
  void                    Deopt              !v    %26.6   !
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    all, e1.2
  lgl$#-          %29.1 = Identical                <blt all>, %29.0   <true>
  void                    Assume             D     %29.1, %27.3 (DeadBranchReached@0x55cca9427ef0[Test#6])
  lgl$-           %29.3 = Eq                 d     %27.1, 0L, elided   <lgl$->
  val?            %29.4 = CallBuiltin        !v    all(%29.3) e1.2   <lgl$->
  lgl$#-          %29.5 = IsType                   %29.4 isA lgl$-
  cp              %29.6 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x55cca9427750+871: [], env=e1.2
  void                    Deopt              !v    %28.0   !
BB31   <- [29]
  void                    Assume             D     %29.5, %29.6 (Typecheck@0x55cca9427ef0[Type#41])
  lgl$-           %31.1 = CastType           d     dn %29.4
  lgl$#-          %31.2 = CheckTrueFalse     e     %31.1
  void                    Branch                   %31.2 -> BB45 (if true) | BB32 (if false)
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x55cca9427750+974: [%29.4], env=e1.2
  void                    Deopt              !v    %30.0   !
BB45   <- [31]
  (cls|spec|blt)  %45.0 = LdFun              !v    stop, e1.2
  fs              %45.1 = FrameState         R     0x55cca9427750+995: [%45.0], env=e1.2
  void                    Deopt              !v    %45.1, DeadCall@0x55cca9427ef0[Call#18], %45.0   !
BB32   <- [31]
  val?^ | miss    %32.0 = LdVar              eR    i, e1.2
  lgl$#-          %32.1 = IsType                   %32.0 isA int$-
  void                    Assume             D     %32.1, %29.6 (Typecheck@0x55cca9427ef0[Type#46])
  int$-           %32.3 = CastType           d     dn %32.0
  lgl$-           %32.4 = Gt                 d     %32.3, 0L, elided   <lgl$->
  int-            %32.5 = Extract1_1D        wed   %32.3, %32.4, elided   <int$->
  lgl$#-          %32.6 = IsType                   %32.5 isA int$-
  cp              %32.7 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB34   <- [32]
  void                    Assume             D     %32.6, %32.7 (Typecheck@0x55cca9427ef0[Type#51])
  int$-           %34.1 = CastType           d     dn %32.5
  void                    StVar              lW    i, %34.1, e1.2
  val?^ | miss    %34.3 = LdVar              eR    several.ok, e1.2
  val?            %34.4 = Force!<wrapped>    !v    %34.3, e1.2   <lgl$->
  lgl$#-          %34.5 = IsType                   %34.4 isA lgl$-
  cp              %34.6 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x55cca9427750+1108: [%32.5], env=e1.2
  void                    Deopt              !v    %33.0   !
BB36   <- [34]
  void                    Assume             D     %34.5, %34.6 (Typecheck@0x55cca9427ef0[Type#52])
  lgl$-           %36.1 = CastType           d     dn %34.4
  lgl$-           %36.2 = Not                d     %36.1, elided
  lgl$-           %36.3 = AsLogical                %36.2
  lgl$#-          %36.4 = Identical                %36.3, false
  void                    Branch                   %36.4 -> BB44 (if true) | BB37 (if false)
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x55cca9427750+1132: [%34.4], env=e1.2
  void                    Deopt              !v    %35.0   !
BB44   <- [36]
  goto BB38
BB37   <- [36]
  val?^ | miss    %37.0 = LdVar              eR    length, e1.2
  lgl$#-          %37.1 = Identical                <blt length>, %37.0   <true>
  void                    Assume             D     %37.1, %34.6 (DeadBranchReached@0x55cca9427ef0[Test#8])
  val?^ | miss    %37.3 = LdVar              eR    i, e1.2
  lgl$#-          %37.4 = IsType                   %37.3 isA int$-
  void                    Assume             D     %37.4, %34.6 (Typecheck@0x55cca9427ef0[Type#54])
  goto BB38
BB38   <- [44, 37]
  lgl$-           %38.0 = Phi                      false:BB37, %36.3:BB44
  lgl$#-          %38.1 = CheckTrueFalse     e     %38.0
  void                    Branch                   %38.1 -> BB43 (if true) | BB39 (if false)
BB43   <- [38]
  (cls|spec|blt)  %43.0 = LdFun              !v    stop, e1.2
  fs              %43.1 = FrameState         R     0x55cca9427750+1271: [%43.0], env=e1.2
  void                    Deopt              !v    %43.1, DeadCall@0x55cca9427ef0[Call#23], %43.0   !
BB39   <- [38]
  val?^ | miss    %39.0 = LdVar              eR    choices, e1.2
  val?            %39.1 = Force!<value>      !v    %39.0, e1.2   <str->
  lgl$#-          %39.2 = IsType                   %39.1 isA val+   <true>
  lgl$#-          %39.3 = IsType                   %39.1 isA val?-
  cp              %39.4 = Checkpoint                -> BB41 (default) | BB40 (if assume failed)
BB41   <- [39]
  void                    Assume             D     %39.2, %39.4 (DeadBranchReached@0x55cca9427ef0[Test#9])
  val?^ | miss    %41.1 = LdVar              eR    i, e1.2
  lgl$#-          %41.2 = IsType                   %41.1 isA int$-
  void                    Assume             D     %41.2, %39.4 (Typecheck@0x55cca9427ef0[Type#59])
  int$-           %41.4 = CastType           d     dn %41.1
  void                    Assume             D     %39.3, %39.4 (Typecheck@0x55cca9427ef0[Type#57])
  val?-           %41.6 = CastType           d     dn %39.1   <str->
  val?            %41.7 = Extract1_1D        wed   %41.6, %41.4, elided   <str$->
  void                    Visible            v     
  goto BB42
BB40   <- [39]
  fs              %40.0 = FrameState         R     0x55cca9427750+1308: [%39.1], env=e1.2
  void                    Deopt              !v    %40.0   !
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    arg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    choices, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    arg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    choices, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     sys.function, <0x55cca78db1b0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p6, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <cls->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    sys.parent, <0x55cca80a2590>, e1.0
  val?            %1.2  = Call               !v    %1.1() e1.0   <int$->
  void                    Invisible          v     
  void                    StVar              lW    sysP, %1.2, e1.0
  void                    Return             l     %1.2
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    formal.args, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <list->
  lgl$#-          %1.3  = IsType                   %1.2 isA val+   <true>
  void                    Branch                   %1.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  (cls|spec|blt)  %2.0  = LdFun              !v    as.character, <0x55cca710b040>, e1.0
  prom-           %2.1  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p8, e1.0
  val?            %2.2  = Call               !v    %2.0(%2.1) e1.0   <str$->
  goto BB3
BB4   <- [1]
  prom-           %4.0  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p10, e1.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.0:BB4
  val?            %3.1  = Extract2_1D        !v    %1.2, %3.0, e1.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.1
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     substitute, <0x55cca70fd468>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p9, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <sym->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    arg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p11, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     substitute, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p12, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    arg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     sys.frame, <0x55cca76d4110>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x55ccaaccb1b0]_p14, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <env->
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    sysP, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3

│ match.arg[0x55ccaaccb1b0]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
