
┌──────────────────────────────────────────────────────────────────────────────┐
│ envhook[0x55ccaabb70b0]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
envhook[0x55ccaabb70b0]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    0
  val+            %1.1  = Force<wrapped>           %1.0,    <str$->
  cp              %1.2  = Checkpoint                -> BB2 (default) | BB61 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    existsInFrame, ?
  (cls|spec|blt)  %2.1  = CastType                 dn %2.0
  val+            %2.2  = CallSafeBuiltin          bodyCode(%2.1) 
  lgl$#-          %2.3  = Identical                %2.2, <(rir::DispatchTable*)0x55cca9588390>
  void                    Assume             D     %2.3, %1.2 (CallTarget@0x55cca83022e8[Call#0])
  val?            %2.5  = Force!             d     %2.0, 
  env             e2.6  = MkEnv              l     n=%1.0, parent=?, context 1
  prom-           %2.7  = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p1, e2.6
  (cls|spec|blt)  %2.8  = ChkFunction        e     %2.5
  val?            %2.9  = StaticCall         !v    existsInFrame[0x55ccaad50210](%1.1, %2.7) from %2.8 e2.6   <lgl$->
  lgl$#-          %2.10 = IsType                   %2.9 isA lgl$-
  cp              %2.11 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB61   <- [1]
  env             e61.0 = (MkEnv)            l     n=%1.0, parent=?, context 1
  fs              %61.1 = FrameState         R     0x55cca9715110+0: [], env=e61.0
  void                    Deopt              !v    %61.1
BB4   <- [2]
  void                    Assume             D     %2.10, %2.11 (Typecheck@0x55cca83022e8[Type#2])
  lgl$-           %4.1  = CastType           d     dn %2.9
  lgl$#-          %4.2  = CheckTrueFalse     e     %4.1
  cp              %4.3  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55cca9715110+37: [%2.9], env=e2.6
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Branch                   %4.2 -> BB58 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x55cca9715110+43: [%4.2], env=e2.6
  void                    Deopt              !v    %5.0   !
BB58   <- [6]
  val?^ | miss    %58.0 = LdVar              eR    envenv, e2.6
  lgl$#-          %58.1 = IsType                   %58.0 isA val?~- | miss
  void                    Assume             D     %58.1, %2.11 (Typecheck@0x55cca83022e8[Type#74])
  val?~- | miss   %58.3 = CastType           d     dn %58.0
  val?-           %58.4 = Force!<value>            %58.3,    <env->
  lgl$#-          %58.5 = IsType                   %58.4 isA val+   <true>
  void                    Assume             D     %58.5, %2.11 (DeadBranchReached@0x55cca83022e8[Test#4])
  val?^ | miss    %58.7 = LdVar              eR    n, e2.6
  val?            %58.8 = Force!<wrapped>    !v    %58.7, e2.6   <str$->
  lgl$#-          %58.9 = IsType                   %58.8 isA val?-
  cp              %58.10 = Checkpoint                -> BB60 (default) | BB59 (if assume failed)
BB7   <- [6]
  val?^ | miss    %7.0  = LdVar              eR    mkenv, e2.6
  (cls|spec|blt)  %7.1  = CastType                 dn %7.0
  val+            %7.2  = CallSafeBuiltin          bodyCode(%7.1) 
  lgl$#-          %7.3  = Identical                %7.2, <(rir::DispatchTable*)0x55cca96ac1c0>
  void                    Assume             D     %7.3, %2.11 (CallTarget@0x55cca83022e8[Call#1])
  val?            %7.5  = Force!             d     %7.0, 
  (cls|spec|blt)  %7.6  = ChkFunction        e     %7.5
  env             e7.7  = CallSafeBuiltin          environment(%7.6) 
  ct              %7.8  = PushContext        lCL   mkenv(), %7.6, e2.6
  val?^ | miss    %7.9  = LdVar              eR    baseenv, e7.7
  lgl$#-          %7.10 = Identical                <blt baseenv>, %7.9   <true>
  void                    Assume             D     %7.10, %4.3 (DeadBranchReached@0x55cca8302188[Test#0])
  env             e7.12 = (MkEnv)            l     parent=e7.7, context 1
  val?            %7.13 = CallBuiltin        !vL   baseenv() e7.12   <env->
  lgl$#-          %7.14 = IsType                   %7.13 isA val?-
  cp              %7.15 = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB60   <- [58]
  void                    Assume             D     %58.9, %58.10 (Typecheck@0x55cca83022e8[Type#76])
  val?-           %60.1 = CastType           d     dn %58.8   <str$->
  val?            %60.2 = Extract2_1D        wed   %58.4, %60.1, elided   <env->
  void                    Visible            v     
  goto BB50
BB59   <- [58]
  fs              %59.0 = FrameState         R     0x55cca9715110+1582: [%58.4, %58.8], env=e2.6
  void                    Deopt              !v    %59.0   !
BB9   <- [7]
  lgl$#-          %9.0  = IsEnvStub          R     , e7.12
  void                    Assume             D     %9.0, %7.15 (EnvStubMaterialized@0x55cca8302188[Call#unknown])
  void                    Assume             D     %7.14, %7.15 (Typecheck@0x55cca8302188[Type#0])
  val?-           %9.3  = CastType           d     dn %7.13   <env->
  val+            %9.4  = CallSafeBuiltin    wed   new.env(true, %9.3, 29L) 
  val?            %9.5  = PopContext         C     %9.4, %7.8   <env->
  void                    StVar              lW    e, %9.5, e2.6
  cp              %9.7  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x55cca9715110+75: [], env=e2.6
  fs              %8.1  = FrameState         R     0x55cca9568fa0+78: [true, %7.13], env=e7.12, next=%8.0
  void                    Deopt              !v    %8.1   !
BB50   <- [49, 60]
  val?            %50.0 = Phi                      %49.5:BB49, %60.2:BB60
  void                    Return             l     %50.0
BB11   <- [9]
  val             %11.0 = ChkMissing         e     %9.5
  val?^ | miss    %11.1 = LdVar              eR    envenv !upd, e2.6
  lgl$#-          %11.2 = IsType                   %11.1 isA val?~- | miss
  void                    Assume             D     %11.2, %9.7 (Typecheck@0x55cca83022e8[Type#5])
  val?~- | miss   %11.4 = CastType           d     dn %11.1
  val?-           %11.5 = Force!<value>            %11.4,    <env->
  val?^ | miss    %11.6 = LdVar              eR    n, e2.6
  val?            %11.7 = Force!<wrapped>    !v    %11.6, e2.6   <str$->
  lgl$#-          %11.8 = IsType                   %11.7 isA val?-
  cp              %11.9 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x55cca9715110+89: [], env=e2.6
  void                    Deopt              !v    %10.0   !
BB13   <- [11]
  lgl$#-          %13.0 = IsType                   %9.5 isA val?-
  void                    Assume             D     %13.0, %11.9 (Typecheck@0x55cca83022e8[Type#3])
  val?-           %13.2 = CastType           d     dn %9.5   <env->
  void                    Assume             D     %11.8, %11.9 (Typecheck@0x55cca83022e8[Type#6])
  val?-           %13.4 = CastType           d     dn %11.7   <str$->
  val?+           %13.5 = Subassign2_1D      wed   %13.2, %11.5, %13.4, elided
  void                    StVar              lW    envenv, %13.5, e2.6
  cp              %13.7 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55cca9715110+126: [%9.5, %11.5, %11.7], env=e2.6
  void                    Deopt              !v    %12.0   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    env, e2.6
  lgl$#-          %15.1 = IsType                   %15.0 isA val?~- | miss
  void                    Assume             D     %15.1, %13.7 (Typecheck@0x55cca83022e8[Type#7])
  val?~- | miss   %15.3 = CastType           d     dn %15.0
  val?-           %15.4 = Force!<value>            %15.3,    <env->
  lgl$#-          %15.5 = IsType                   %15.4 isA val+   <true>
  void                    Assume             D     %15.5, %13.7 (DeadBranchReached@0x55cca83022e8[Test#0])
  val?^ | miss    %15.7 = LdVar              eR    n, e2.6
  val?            %15.8 = Force!<wrapped>    !v    %15.7, e2.6   <str$->
  lgl$#-          %15.9 = IsType                   %15.8 isA val?-
  cp              %15.10 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55cca9715110+141: [], env=e2.6
  void                    Deopt              !v    %14.0   !
BB17   <- [15]
  void                    Assume             D     %15.9, %15.10 (Typecheck@0x55cca83022e8[Type#9])
  val?-           %17.1 = CastType           d     dn %15.8   <str$->
  val?            %17.2 = Extract2_1D        wed   %15.4, %17.1, elided   <int->
  lgl$-           %17.3 = Is                       %17.2, list
  void                    StVar              lW    key, %17.2, e2.6
  val             %17.5 = ChkMissing         e     %17.2
  lgl$#-          %17.6 = CheckTrueFalse     e     %17.3
  void                    Branch                   %17.6 -> BB57 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x55cca9715110+195: [%15.4, %15.8], env=e2.6
  void                    Deopt              !v    %16.0   !
BB57   <- [17]
  (cls|spec|blt)  %57.0 = LdFun              !v    $, e2.6
  fs              %57.1 = FrameState         R     0x55cca9715110+265: [%57.0], env=e2.6
  void                    Deopt              !v    %57.1, DeadCall@0x55cca83022e8[Call#2], %57.0   !
BB18   <- [17]
  void                    StVar              lW    ekey, %17.2, e2.6
  cp              %18.1 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB20   <- [18]
  val?^ | miss    %20.0 = LdVar              eR    lazyLoadDBfetch, e2.6
  lgl$#-          %20.1 = Identical                <blt lazyLoadDBfetch>, %20.0   <true>
  void                    Assume             D     %20.1, %18.1 (DeadBranchReached@0x55cca83022e8[Test#1])
  val?^ | miss    %20.3 = LdVar              eR    datafile, e2.6
  lgl$#-          %20.4 = IsType                   %20.3 isA val?~- | miss
  void                    Assume             D     %20.4, %18.1 (Typecheck@0x55cca83022e8[Type#21])
  val?~- | miss   %20.6 = CastType           d     dn %20.3
  val?-           %20.7 = Force!<value>            %20.6,    <str$->
  val?^ | miss    %20.8 = LdVar              eR    compressed, e2.6
  lgl$#-          %20.9 = IsType                   %20.8 isA lgl$-
  void                    Assume             D     %20.9, %18.1 (Typecheck@0x55cca83022e8[Type#22])
  lgl$-           %20.11 = CastType           d     dn %20.8
  val?^ | miss    %20.12 = LdVar              eR    envhook, e2.6
  lgl$#-          %20.13 = IsType                   %20.12 isA val?~- | miss
  void                    Assume             D     %20.13, %18.1 (Typecheck@0x55cca83022e8[Type#23])
  val?~- | miss   %20.15 = CastType           d     dn %20.12
  val?-           %20.16 = Force!<value>            %20.15,    <cls->
  val?            %20.17 = CallBuiltin        !v    lazyLoadDBfetch(%17.2, %20.7, %20.11, %20.16) e2.6   <vec+>
  void                    StVar              lW    data, %20.17, e2.6
  (cls|spec|blt)  %20.19 = LdFun              !v    $, <0x55cca70fdc10>, e2.6
  prom-           %20.20 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p2, e2.6
  prom-           %20.21 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p3, e2.6
  val?            %20.22 = Call               !v    %20.19(%20.20, %20.21) e2.6   <env->
  lgl$-           %20.23 = Is                       %20.22, NULL
  lgl$-           %20.24 = Not                d     %20.23, elided
  lgl$#-          %20.25 = CheckTrueFalse     e     %20.24
  void                    Branch                   %20.25 -> BB56 (if true) | BB21 (if false)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x55cca9715110+311: [], env=e2.6
  void                    Deopt              !v    %19.0   !
BB56   <- [20]
  (cls|spec|blt)  %56.0 = LdFun              !v    $, <0x55cca70fdc10>, e2.6
  prom-           %56.1 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p19, e2.6
  prom-           %56.2 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p20, e2.6
  val?            %56.3 = Call               !v    %56.0(%56.1, %56.2) e2.6   <env->
  goto BB24
BB21   <- [20]
  val?^ | miss    %21.0 = LdVar              eR    emptyenv, e2.6
  lgl$#-          %21.1 = Identical                <blt emptyenv>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB24   <- [56, 23]
  val?            %24.0 = Phi                      %23.0:BB23, %56.3:BB56
  cp              %24.1 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB23   <- [21]
  val?            %23.0 = CallBuiltin        !v    emptyenv() e2.6   <val?_>
  goto BB24
BB22   <- [21]
  (cls|spec|blt)  %22.0 = LdFun              !v    emptyenv, e2.6
  fs              %22.1 = FrameState         R     0x55cca9715110+555: [%22.0], env=e2.6
  void                    Deopt              !v    %22.1, DeadCall@0x55cca83022e8[Call#5], %22.0   !
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    parent.env<-, e2.6
  (cls|spec|blt)  %26.1 = CastType                 dn %26.0
  val+            %26.2 = CallSafeBuiltin          bodyCode(%26.1) 
  lgl$#-          %26.3 = Identical                %26.2, <(rir::DispatchTable*)0x55cca943bf10>
  void                    Assume             D     %26.3, %24.1 (CallTarget@0x55cca83022e8[Call#7])
  val?            %26.5 = Force!             d     %26.0, 
  val?^ | miss    %26.6 = LdVar              eR    e, e2.6
  lgl$#-          %26.7 = IsType                   %26.6 isA val?~- | miss
  void                    Assume             D     %26.7, %24.1 (Typecheck@0x55cca83022e8[Type#32])
  val?~- | miss   %26.9 = CastType           d     dn %26.6
  val?-           %26.10 = Force!<value>            %26.9,    <env->
  (cls|spec|blt)  %26.11 = ChkFunction        e     %26.5
  val?            %26.12 = StaticCall         !v    parent.env<-[0x55ccaa0db630](%26.10, %24.0) from %26.11 { 0 1n } e2.6
  void                    StVar              lW    e, %26.12, e2.6
  cp              %26.14 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x55cca9715110+651: [%24.0], env=e2.6
  void                    Deopt              !v    %25.0   !
BB28   <- [26]
  val?^ | miss    %28.0 = LdVar              eR    list2env, e2.6
  (cls|spec|blt)  %28.1 = CastType                 dn %28.0
  val+            %28.2 = CallSafeBuiltin          bodyCode(%28.1) 
  lgl$#-          %28.3 = Identical                %28.2, <(rir::DispatchTable*)0x55cca94954b0>
  void                    Assume             D     %28.3, %26.14 (CallTarget@0x55cca83022e8[Call#8])
  val?            %28.5 = Force!             d     %28.0, 
  prom-           %28.6 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p5, e2.6
  prom-           %28.7 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p8 (!refl), e2.6
  (cls|spec|blt)  %28.8 = ChkFunction        e     %28.5
  env             e28.9 = CallSafeBuiltin          environment(%28.8) 
  ct              %28.10 = PushContext        lCL   %28.6, %28.7, list2env($(data, bindings), e), %28.8, e2.6
  val?^           %28.11 = CastType                 up %28.7
  val?^           %28.12 = CastType                 up %28.6
  env             e28.13 = MkEnv              l     x=%28.12, envir=%28.11, parent=e28.9, context 1
  val?            %28.14 = Force!<lazy>       !vL   %28.12, e28.13   <vec+>
  val?            %28.15 = Force!<lazy>       !vrL  %28.11, e28.13   <env->
  val?            %28.16 = CallBuiltin        !v    list2env(%28.14, %28.15) e28.13
  val?            %28.17 = PopContext         C     %28.16, %28.10
  (cls|spec|blt)  %28.18 = LdFun              !v    $, <0x55cca70fdc10>, e2.6
  prom-           %28.19 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p9, e2.6
  prom-           %28.20 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p10, e2.6
  val?            %28.21 = Call               !v    %28.18(%28.19, %28.20) e2.6   <nil->
  lgl$-           %28.22 = Is                       %28.21, NULL
  lgl$-           %28.23 = Not                d     %28.22, elided
  lgl$#-          %28.24 = CheckTrueFalse     e     %28.23
  void                    Branch                   %28.24 -> BB55 (if true) | BB29 (if false)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x55cca9715110+719: [], env=e2.6
  void                    Deopt              !v    %27.0   !
BB55   <- [28]
  (cls|spec|blt)  %55.0 = LdFun              !v    $, e2.6
  fs              %55.1 = FrameState         R     0x55cca9715110+821: [%55.0], env=e2.6
  void                    Deopt              !v    %55.1, DeadCall@0x55cca83022e8[Call#11], %55.0   !
BB29   <- [28]
  (cls|spec|blt)  %29.0 = LdFun              !v    $, <0x55cca70fdc10>, e2.6
  prom-           %29.1 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p11, e2.6
  prom-           %29.2 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p12, e2.6
  val?            %29.3 = Call               !v    %29.0(%29.1, %29.2) e2.6   <lgl$->
  lgl$-           %29.4 = Is                       %29.3, NULL
  lgl$#-          %29.5 = IsType                   %29.3 isA lgl$-
  cp              %29.6 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB31   <- [29]
  void                    Assume             D     %29.5, %29.6 (Typecheck@0x55cca83022e8[Type#46])
  lgl$-           %31.1 = Not                d     %29.4, elided
  lgl$-           %31.2 = AsLogical                %31.1
  lgl$#-          %31.3 = Identical                %31.2, false
  void                    Branch                   %31.3 -> BB54 (if true) | BB32 (if false)
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x55cca9715110+963: [%29.3], env=e2.6
  void                    Deopt              !v    %30.0   !
BB54   <- [31]
  goto BB35
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    $, <0x55cca70fdc10>, e2.6
  prom-           %32.1 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p13, e2.6
  prom-           %32.2 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p14, e2.6
  val?            %32.3 = Call               !v    %32.0(%32.1, %32.2) e2.6   <lgl$->
  lgl$#-          %32.4 = IsType                   %32.3 isA lgl$-
  cp              %32.5 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB35   <- [34, 54]
  lgl$-           %35.0 = Phi                      %34.3:BB34, %31.2:BB54
  lgl$#-          %35.1 = CheckTrueFalse     e     %35.0
  void                    Branch                   %35.1 -> BB53 (if true) | BB36 (if false)
BB34   <- [32]
  void                    Assume             D     %32.4, %32.5 (Typecheck@0x55cca83022e8[Type#49])
  lgl$-           %34.1 = CastType           d     dn %32.3
  lgl$-           %34.2 = AsLogical                %34.1
  lgl$-           %34.3 = LAnd                     %31.2, %34.2
  goto BB35
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x55cca9715110+1018: [%31.2, %32.3], env=e2.6
  void                    Deopt              !v    %33.0   !
BB53   <- [35]
  val?^ | miss    %53.0 = LdVar              eR    e, e2.6
  val?            %53.1 = Force!             !v    %53.0, e2.6   <val?_>
  val?            %53.2 = CallBuiltin        !v    setS4Object(%53.1, true, true) e2.6
  goto BB37
BB36   <- [35]
  goto BB37
BB37   <- [36, 53]
  cp              %37.0 = Checkpoint                -> BB39 (default) | BB38 (if assume failed)
BB39   <- [37]
  val?^ | miss    %39.0 = LdVar              eR    key, e2.6
  lgl$#-          %39.1 = IsType                   %39.0 isA int-
  void                    Assume             D     %39.1, %37.0 (Typecheck@0x55cca83022e8[Type#51])
  (cls|spec|blt)  %39.3 = LdFun              !v    $, <0x55cca70fdc10>, e2.6
  prom-           %39.4 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p15, e2.6
  prom-           %39.5 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p16, e2.6
  val?            %39.6 = Call               !v    %39.3(%39.4, %39.5) e2.6   <lgl$->
  lgl$-           %39.7 = Is                       %39.6, NULL
  lgl$#-          %39.8 = IsType                   %39.6 isA lgl$-
  cp              %39.9 = Checkpoint                -> BB41 (default) | BB40 (if assume failed)
BB38   <- [37]
  fs              %38.0 = FrameState         R     0x55cca9715110+1076: [], env=e2.6
  void                    Deopt              !v    %38.0   !
BB41   <- [39]
  void                    Assume             D     %39.8, %39.9 (Typecheck@0x55cca83022e8[Type#68])
  lgl$-           %41.1 = Not                d     %39.7, elided
  lgl$-           %41.2 = AsLogical                %41.1
  lgl$#-          %41.3 = Identical                %41.2, false
  void                    Branch                   %41.3 -> BB52 (if true) | BB42 (if false)
BB40   <- [39]
  fs              %40.0 = FrameState         R     0x55cca9715110+1402: [%39.6], env=e2.6
  void                    Deopt              !v    %40.0   !
BB52   <- [41]
  goto BB45
BB42   <- [41]
  (cls|spec|blt)  %42.0 = LdFun              !v    $, <0x55cca70fdc10>, e2.6
  prom-           %42.1 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p17, e2.6
  prom-           %42.2 = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p18, e2.6
  val?            %42.3 = Call               !v    %42.0(%42.1, %42.2) e2.6   <lgl$->
  lgl$#-          %42.4 = IsType                   %42.3 isA lgl$-
  cp              %42.5 = Checkpoint                -> BB44 (default) | BB43 (if assume failed)
BB45   <- [44, 52]
  lgl$-           %45.0 = Phi                      %44.3:BB44, %41.2:BB52
  lgl$#-          %45.1 = CheckTrueFalse     e     %45.0
  void                    Branch                   %45.1 -> BB51 (if true) | BB46 (if false)
BB44   <- [42]
  void                    Assume             D     %42.4, %42.5 (Typecheck@0x55cca83022e8[Type#71])
  lgl$-           %44.1 = CastType           d     dn %42.3
  lgl$-           %44.2 = AsLogical                %44.1
  lgl$-           %44.3 = LAnd                     %41.2, %44.2
  goto BB45
BB43   <- [42]
  fs              %43.0 = FrameState         R     0x55cca9715110+1457: [%41.2, %42.3], env=e2.6
  void                    Deopt              !v    %43.0   !
BB51   <- [45]
  val?^ | miss    %51.0 = LdVar              eR    e, e2.6
  val?            %51.1 = Force!             !v    %51.0, e2.6   <val?_>
  val?            %51.2 = CallBuiltin        !v    lockEnvironment(%51.1, false) e2.6
  goto BB47
BB46   <- [45]
  goto BB47
BB47   <- [46, 51]
  cp              %47.0 = Checkpoint                -> BB49 (default) | BB48 (if assume failed)
BB49   <- [47]
  val?^ | miss    %49.0 = LdVar              eR    e, e2.6
  lgl$#-          %49.1 = IsType                   %49.0 isA val?~- | miss
  void                    Assume             D     %49.1, %47.0 (Typecheck@0x55cca83022e8[Type#73])
  val?~- | miss   %49.3 = CastType           d     dn %49.0
  void                    Visible            v     
  val?-           %49.5 = Force!<value>            %49.3,    <env->
  goto BB50
BB48   <- [47]
  fs              %48.0 = FrameState         R     0x55cca9715110+1509: [], env=e2.6
  void                    Deopt              !v    %48.0   !
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    envenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    data, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    enclos, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x55cca70fdc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p6, e1.0
  prom-           %1.3  = MkArg                    unboundValue, envhook[0x55ccaabb70b0]_p7, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <vec+>
  void                    Return             l     %1.4
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    data, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    bindings, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    data, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    attributes, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    data, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isS4, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    data, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isS4, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    data, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    locked, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    data, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    locked, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    data, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    enclos, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ envhook[0x55ccaabb70b0]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
