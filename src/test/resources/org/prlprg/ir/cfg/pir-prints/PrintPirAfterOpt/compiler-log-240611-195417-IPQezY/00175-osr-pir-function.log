
┌──────────────────────────────────────────────────────────────────────────────┐
│ osr[0x55ccac57dc70]                                                          │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
osr[0x55ccac57dc70]
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  int-            %1.1  = LdArg                    0
  int$#-          %1.2  = LdArg                    1
  int$#-          %1.3  = LdArg                    2
  cls$#           %1.4  = LdArg                    3   <cls>
  void                    StVar              lW    f, %1.4, e1.0
  cp              %1.6  = Checkpoint                -> BB2 (default) | BB102 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    what, e1.0
  lgl$#-          %2.1  = IsType                   %2.0 isA val?~- | miss
  void                    Assume             D     %2.1, %1.6 (Typecheck@0x55ccaa8e6868[Type#14])
  val?~- | miss   %2.3  = CastType           d     dn %2.0
  val?-           %2.4  = Force!<value>            %2.3,    <str$->
  val?^ | miss    %2.5  = LdVar              eR    all !upd, e1.0
  lgl$#-          %2.6  = IsType                   %2.5 isA val?~- | miss
  void                    Assume             D     %2.6, %1.6 (Typecheck@0x55ccaa8e6868[Type#15])
  val?~- | miss   %2.8  = CastType           d     dn %2.5
  val?-           %2.9  = Force!<value>            %2.8,    <vec->
  val?^ | miss    %2.10 = LdVar              eR    i, e1.0
  lgl$#-          %2.11 = IsType                   %2.10 isA int$-
  void                    Assume             D     %2.11, %1.6 (Typecheck@0x55ccaa8e6868[Type#16])
  int$-           %2.13 = CastType           d     dn %2.10
  val?-           %2.14 = Subassign2_1D      wed   %2.4, %2.9, %2.13, elided
  void                    StVar              lW    all, %2.14, e1.0
  cp              %2.16 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB102   <- [1]
  fs              %102.0 = FrameState         R     0x55cca96739f0+318: [%1.1, %1.2, %1.3], env=e1.0
  void                    Deopt              !v    %102.0   !
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    is, e1.0
  lgl$#-          %4.1  = Identical                %4.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Assume             D     %4.1, %2.16 (CallTarget@0x55ccaa8e6868[Call#4])
  prom-           %4.3  = MkArg                    unboundValue, osr[0x55ccac57dc70]_p0 (!refl), e1.0
  val?            %4.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%4.3, "groupGenericFunction") e1.0   <lgl$->
  lgl$#-          %4.5  = IsType                   %4.4 isA lgl$-
  cp              %4.6  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55cca96739f0+401: [%1.1, %1.2, %1.3], env=e1.0
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.5, %4.6 (Typecheck@0x55ccaa8e6868[Type#18])
  lgl$-           %6.1  = CastType           d     dn %4.4
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB97 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x55cca96739f0+438: [%1.1, %1.2, %1.3, %4.4], env=e1.0
  void                    Deopt              !v    %5.0   !
BB97   <- [6]
  (cls|spec|blt)  %97.0 = LdFun              !v    @, <0x55cca70fdbd8>, e1.0
  prom-           %97.1 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p8, e1.0
  prom-           %97.2 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p9, e1.0
  val?            %97.3 = Call               !v    %97.0(%97.1, %97.2) e1.0   <vec->
  void                    StVar              lW    newMem, %97.3, e1.0
  cp              %97.5 = Checkpoint                -> BB99 (default) | BB98 (if assume failed)
BB7   <- [6]
  goto BB8
BB99   <- [97]
  val?^ | miss    %99.0 = LdVar              eR    c, e1.0
  lgl$#-          %99.1 = Identical                <blt c>, %99.0   <true>
  void                    Assume             D     %99.1, %97.5 (DeadBranchReached@0x55ccaa8e6868[Test#3])
  val?^ | miss    %99.3 = LdVar              eR    all, e1.0
  lgl$#-          %99.4 = IsType                   %99.3 isA val?~- | miss
  void                    Assume             D     %99.4, %97.5 (Typecheck@0x55ccaa8e6868[Type#26])
  val?~- | miss   %99.6 = CastType           d     dn %99.3
  val?-           %99.7 = Force!<value>            %99.6,    <vec->
  val?^ | miss    %99.8 = LdVar              eR    Recall, e1.0
  lgl$#-          %99.9 = Identical                %99.8, function(...) <(rir::DispatchTable*)0x55cca7fe|...
  void                    Assume             D     %99.9, %97.5 (CallTarget@0x55ccaa8e6868[Call#8])
  prom-           %99.11 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p10 (!refl), e1.0
  prom-           %99.12 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p11, e1.0
  dots-           %99.13 = DotsList           l     %99.11, %99.12
  ct              %99.14 = PushContext        lCL   %99.13, Recall(newMem, where), function(...) <(rir::DispatchTable*)0x55cca7fe|..., e1.0
  env             e99.15 = MkEnv              l     ...=%99.13, parent=R_BaseNamespace, context 1
  prom-           %99.16 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p12, e99.15
  val?            %99.17 = Call               !v    <spec .Internal>(%99.16) e99.15   <vec->
  val?            %99.18 = PopContext         C     %99.17, %99.14   <vec->
  lgl$#-          %99.19 = IsType                   %99.18 isA val?-
  cp              %99.20 = Checkpoint                -> BB101 (default) | BB100 (if assume failed)
BB98   <- [97]
  fs              %98.0 = FrameState         R     0x55cca96739f0+505: [%1.1, %1.2, %1.3], env=e1.0
  void                    Deopt              !v    %98.0   !
BB8   <- [7, 101, 65]
  int$-           %8.0  = Phi                      %1.3:BB7, %8.1:BB65, %1.3:BB101
  int$-           %8.1  = Inc                      %8.0
  cp              %8.2  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB101   <- [99]
  void                    Assume             D     %99.19, %99.20 (Typecheck@0x55ccaa8e6868[Type#29])
  val?-           %101.1 = CastType           d     dn %99.18   <vec->
  val+            %101.2 = CallSafeBuiltin    wed   c(%99.7, %101.1)    <vec->
  void                    StVar              lW    all, %101.2, e1.0
  goto BB8
BB100   <- [99]
  fs              %100.0 = FrameState         R     0x55cca96739f0+621: [%1.1, %1.2, %1.3, <blt c>, %99.7, %99.18], env=e1.0
  void                    Deopt              !v    %100.0   !
BB10   <- [8]
  lgl$-           %10.0 = Lt                 d     %1.2, %8.1, elided
  lgl$#-          %10.1 = Identical                %10.0, true
  void                    Branch                   %10.1 -> BB96 (if true) | BB11 (if false)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x55cca96739f0+657: [%1.1, %1.2, %8.0], env=e1.0
  void                    Deopt              !v    %9.0   !
BB96   <- [10]
  val?^ | miss    %96.0 = LdVar              eR    all, e1.0
  lgl$#-          %96.1 = IsType                   %96.0 isA val?~- | miss
  void                    Assume             D     %96.1, %8.2 (Typecheck@0x55ccaa8e6868[Type#56])
  val?~- | miss   %96.3 = CastType           d     dn %96.0
  void                    Visible            v     
  val?-           %96.5 = Force!<value>            %96.3,    <vec->
  void                    Return             l     %96.5
BB11   <- [10]
  int$-           %11.0 = Extract2_1D        wed   %1.1, %8.1, elided
  void                    StVar              lW    i, %11.0, e1.0
  val?^ | miss    %11.2 = LdVar              eR    members, e1.0
  val?            %11.3 = Force!<wrapped>    !v    %11.2, e1.0   <vec->
  lgl$#-          %11.4 = IsType                   %11.3 isA val+   <lgl$#->
  lgl$#-          %11.5 = IsType                   %11.3 isA val?-
  cp              %11.6 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB13   <- [11]
  void                    Assume             D     %11.4, %11.6 (DeadBranchReached@0x55ccaa8e6868[Test#4])
  val?^ | miss    %13.1 = LdVar              eR    i, e1.0
  lgl$#-          %13.2 = IsType                   %13.1 isA int$-
  void                    Assume             D     %13.2, %11.6 (Typecheck@0x55ccaa8e6868[Type#33])
  int$-           %13.4 = CastType           d     dn %13.1
  void                    Assume             D     %11.5, %11.6 (Typecheck@0x55ccaa8e6868[Type#31])
  val?-           %13.6 = CastType           d     dn %11.3   <vec->
  val?            %13.7 = Extract2_1D        wed   %13.6, %13.4, elided   <str$->
  void                    StVar              lW    what, %13.7, e1.0
  cp              %13.9 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55cca96739f0+695: [%1.1, %1.2, %8.1, %11.3], env=e1.0
  void                    Deopt              !v    %12.0   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    getGeneric, e1.0
  lgl$#-          %15.1 = Identical                %15.0, function(f, mustFind=FALSE, where, package="")|...
  void                    Assume             D     %15.1, %13.9 (CallTarget@0x55ccaa8e6868[Call#9])
  prom-           %15.3 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p1 (!refl), e1.0
  prom-           %15.4 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p2, e1.0
  ct              %15.5 = PushContext        lCL   %15.3, false, %15.4, getGeneric(what, FALSE, where), function(f, mustFind=FALSE, where, package="")|..., e1.0
  val?^           %15.6 = CastType                 up %15.4
  val?^           %15.7 = CastType                 up %15.3
  val?^ | miss    %15.8 = LdVar              eR    is.function, <env 0x55cca7705378>
  lgl$#-          %15.9 = Identical                <blt is.function>, %15.8   <true>
  cp              %15.10 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55cca96739f0+761: [%1.1, %1.2, %8.1], env=e1.0
  void                    Deopt              !v    %14.0   !
BB17   <- [15]
  void                    Assume             D     %15.9, %15.10 (DeadBranchReached@0x55ccaa23ff40[Test#0])
  env             e17.1 = MkEnv              l     f=%15.7, mustFind=false, where=%15.6, package(miss)="", parent=<env 0x55cca7705378>, context 1
  val?            %17.2 = Force!<lazy>       !vr   %15.7, e17.1   <(str|cls)>
  val?            %17.3 = CallBuiltin        !v    is.function(%17.2) e17.1   <lgl$->
  lgl$#-          %17.4 = IsType                   %17.3 isA lgl$-
  cp              %17.5 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  env             e16.1 = (MkEnv)            l     f=%15.7, mustFind=false, where=%15.6, package(miss)="", parent=<env 0x55cca7705378>, context 1
  fs              %16.2 = FrameState         R     0x55cca8242db0+17: [<blt is.function>, %15.9], env=e16.1, next=%16.0
  void                    Deopt              !v    %16.2   !
BB19   <- [17]
  void                    Assume             D     %17.4, %17.5 (Typecheck@0x55ccaa23ff40[Type#2])
  lgl$-           %19.1 = CastType           d     dn %17.3
  lgl$#-          %19.2 = CheckTrueFalse     e     %19.1
  void                    Branch                   %19.2 -> BB91 (if true) | BB20 (if false)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %18.1 = FrameState         R     0x55cca8242db0+91: [%17.3], env=e17.1, next=%18.0
  void                    Deopt              !v    %18.1   !
BB91   <- [19]
  val?^ | miss    %91.0 = LdVar              eR    is, e17.1
  lgl$#-          %91.1 = Identical                %91.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Assume             D     %91.1, %17.5 (CallTarget@0x55ccaa23ff40[Call#1])
  prom-           %91.3 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p15, e17.1
  val?            %91.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%91.3, "genericFunction") e17.1   <lgl$->
  lgl$#-          %91.5 = IsType                   %91.4 isA lgl$-
  cp              %91.6 = Checkpoint                -> BB93 (default) | BB92 (if assume failed)
BB20   <- [19]
  lgl$-           %20.0 = Missing            eR    where, e17.1
  lgl$#-          %20.1 = CheckTrueFalse     e     %20.0
  void                    Branch                   %20.1 -> BB90 (if true) | BB21 (if false)
BB93   <- [91]
  void                    Assume             D     %91.5, %91.6 (Typecheck@0x55ccaa23ff40[Type#4])
  lgl$-           %93.1 = CastType           d     dn %91.4
  lgl$#-          %93.2 = CheckTrueFalse     e     %93.1
  void                    Branch                   %93.2 -> BB95 (if true) | BB94 (if false)
BB92   <- [91]
  fs              %92.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %92.1 = FrameState         R     0x55cca8242db0+144: [%91.4], env=e17.1, next=%92.0
  void                    Deopt              !v    %92.1   !
BB90   <- [20]
  val?^ | miss    %90.0 = LdVar              eR    .getGeneric, e17.1
  lgl$#-          %90.1 = Identical                %90.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Assume             D     %90.1, %17.5 (CallTarget@0x55ccaa23ff40[Call#7])
  prom-           %90.3 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p19, e17.1
  prom-           %90.4 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p20, e17.1
  val?            %90.5 = StaticCall         !v    .getGeneric[0x55ccaa2489f0](%90.3, missingArg, %90.4) e17.1   <cls>
  goto BB22
BB21   <- [20]
  val?^ | miss    %21.0 = LdVar              eR    .getGeneric, e17.1
  lgl$#-          %21.1 = Identical                %21.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Assume             D     %21.1, %17.5 (CallTarget@0x55ccaa23ff40[Call#6])
  prom-           %21.3 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p16, e17.1
  prom-           %21.4 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p17, e17.1
  prom-           %21.5 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p18, e17.1
  val?            %21.6 = StaticCall         !v    .getGeneric[0x55ccaa4c7880](%21.3, %21.4, %21.5) e17.1   <(nil|cls)>
  goto BB22
BB95   <- [93]
  val?^ | miss    %95.0 = LdVar              eR    f, e17.1
  val?            %95.1 = Force!<wrapped>    !v    %95.0, e17.1   <cls>
  goto BB55
BB94   <- [93]
  (cls|spec|blt)  %94.0 = LdFun              !v    is.primitive, e17.1
  fs              %94.1 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %94.2 = FrameState         R     0x55cca8242db0+160: [%94.0], env=e17.1, next=%94.1
  void                    Deopt              !v    %94.2, DeadCall@0x55ccaa23ff40[Call#2], %94.0   !
BB22   <- [90, 21]
  val?            %22.0 = Phi                      %21.6:BB21, %90.5:BB90   <(nil|cls)>
  lgl$-           %22.1 = Is                       %22.0, NULL
  lgl$-           %22.2 = AsLogical                %22.1
  lgl$#-          %22.3 = Identical                %22.2, false
  void                    StVar              lW    value, %22.0, e17.1
  cp              %22.5 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB55   <- [95, 54]
  val?            %55.0 = Phi                      %54.0:BB54, %95.1:BB95
  val?            %55.1 = PopContext         C     %55.0, %15.5   <cls>
  lgl$-           %55.2 = Is                       %55.1, NULL
  void                    StVar              lW    f, %55.1, e1.0
  cp              %55.4 = Checkpoint                -> BB57 (default) | BB56 (if assume failed)
BB24   <- [22]
  val             %24.0 = ChkMissing         e     %22.0
  void                    Branch                   %22.3 -> BB89 (if true) | BB25 (if false)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %23.1 = FrameState         R     0x55cca8242db0+427: [], env=e17.1, next=%23.0
  void                    Deopt              !v    %23.1   !
BB57   <- [55]
  val             %57.0 = ChkMissing         e     %55.1
  lgl$-           %57.1 = Not                d     %55.2, elided
  lgl$#-          %57.2 = CheckTrueFalse     e     %57.1
  void                    Branch                   %57.2 -> BB71 (if true) | BB58 (if false)
BB56   <- [55]
  fs              %56.0 = FrameState         R     0x55cca96739f0+817: [%1.1, %1.2, %8.1], env=e1.0
  void                    Deopt              !v    %56.0   !
BB89   <- [24]
  goto BB30
BB25   <- [24]
  val?^ | miss    %25.0 = LdVar              eR    baseenv, e17.1
  lgl$#-          %25.1 = Identical                <blt baseenv>, %25.0   <true>
  void                    Assume             D     %25.1, %22.5 (DeadBranchReached@0x55ccaa23ff40[Test#1])
  val?            %25.3 = CallBuiltin        !v    baseenv() e17.1   <env->
  lgl$#-          %25.4 = IsType                   %25.3 isA val+   <lgl$#->
  cp              %25.5 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB71   <- [57]
  val?^ | miss    %71.0 = LdVar              eR    what, e1.0
  lgl$#-          %71.1 = IsType                   %71.0 isA val?~- | miss
  void                    Assume             D     %71.1, %55.4 (Typecheck@0x55ccaa8e6868[Type#39])
  val?~- | miss   %71.3 = CastType           d     dn %71.0
  val?-           %71.4 = Force!<value>            %71.3,    <str$->
  val?^ | miss    %71.5 = LdVar              eR    all !upd, e1.0
  lgl$#-          %71.6 = IsType                   %71.5 isA val?~- | miss
  void                    Assume             D     %71.6, %55.4 (Typecheck@0x55ccaa8e6868[Type#40])
  val?~- | miss   %71.8 = CastType           d     dn %71.5
  val?-           %71.9 = Force!<value>            %71.8,    <vec->
  val?^ | miss    %71.10 = LdVar              eR    i, e1.0
  lgl$#-          %71.11 = IsType                   %71.10 isA int$-
  void                    Assume             D     %71.11, %55.4 (Typecheck@0x55ccaa8e6868[Type#41])
  int$-           %71.13 = CastType           d     dn %71.10
  val?-           %71.14 = Subassign2_1D      wed   %71.4, %71.9, %71.13, elided
  void                    StVar              lW    all, %71.14, e1.0
  goto BB59
BB58   <- [57]
  goto BB59
BB30   <- [89, 29]
  lgl$-           %30.0 = Phi                      %29.10:BB29, %22.2:BB89
  cp              %30.1 = Checkpoint                -> BB32 (default) | BB31 (if assume failed)
BB27   <- [25]
  void                    Assume             D     %25.4, %25.5 (DeadBranchReached@0x55ccaa23ff40[Test#2])
  val?^ | miss    %27.1 = LdVar              eR    f, e17.1
  val?            %27.2 = Force!<wrapped>    !v    %27.1, e17.1   <str$->
  lgl$#-          %27.3 = IsType                   %27.2 isA val?-
  cp              %27.4 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %26.1 = FrameState         R     0x55cca8242db0+525: [%22.2, %25.3], env=e17.1, next=%26.0
  void                    Deopt              !v    %26.1   !
BB59   <- [58, 71]
  cp              %59.0 = Checkpoint                -> BB61 (default) | BB60 (if assume failed)
BB32   <- [30]
  lgl$#-          %32.0 = CheckTrueFalse     e     %30.0
  void                    Branch                   %32.0 -> BB76 (if true) | BB33 (if false)
BB31   <- [30]
  fs              %31.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %31.1 = FrameState         R     0x55cca8242db0+601: [%30.0], env=e17.1, next=%31.0
  void                    Deopt              !v    %31.1   !
BB29   <- [27]
  lgl$#-          %29.0 = IsType                   %25.3 isA val?-
  void                    Assume             D     %29.0, %27.4 (Typecheck@0x55ccaa23ff40[Type#20])
  val?-           %29.2 = CastType           d     dn %25.3   <env->
  void                    Assume             D     %27.3, %27.4 (Typecheck@0x55ccaa23ff40[Type#22])
  val?-           %29.4 = CastType           d     dn %27.2   <str$->
  val?            %29.5 = Extract2_1D        wed   %29.2, %29.4, elided   <(spec|blt)->
  lgl$-           %29.6 = Is                       %29.5, NULL
  void                    StVar              lW    baseDef, %29.5, e17.1
  lgl$-           %29.8 = Not                d     %29.6, elided
  lgl$-           %29.9 = AsLogical                %29.8
  lgl$-           %29.10 = LAnd                     %22.2, %29.9
  goto BB30
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %28.1 = FrameState         R     0x55cca8242db0+570: [%22.2, %25.3, %27.2], env=e17.1, next=%28.0
  void                    Deopt              !v    %28.1   !
BB61   <- [59]
  val?^ | miss    %61.0 = LdVar              eR    is, e1.0
  lgl$#-          %61.1 = Identical                %61.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Assume             D     %61.1, %59.0 (CallTarget@0x55ccaa8e6868[Call#10])
  prom-           %61.3 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p3 (!refl), e1.0
  val?            %61.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%61.3, "groupGenericFunction") e1.0   <lgl$->
  lgl$#-          %61.5 = IsType                   %61.4 isA lgl$-
  cp              %61.6 = Checkpoint                -> BB63 (default) | BB62 (if assume failed)
BB60   <- [59]
  fs              %60.0 = FrameState         R     0x55cca96739f0+900: [%1.1, %1.2, %8.1], env=e1.0
  void                    Deopt              !v    %60.0   !
BB76   <- [32]
  val?^ | miss    %76.0 = LdVar              eR    is.function, e17.1
  lgl$#-          %76.1 = Identical                <blt is.function>, %76.0   <true>
  void                    Assume             D     %76.1, %30.1 (DeadBranchReached@0x55ccaa23ff40[Test#3])
  val?^ | miss    %76.3 = LdVar              eR    baseDef, e17.1
  lgl$#-          %76.4 = IsType                   %76.3 isA val?~- | miss
  void                    Assume             D     %76.4, %30.1 (Typecheck@0x55ccaa23ff40[Type#25])
  val?~- | miss   %76.6 = CastType           d     dn %76.3
  val?-           %76.7 = Force!<value>            %76.6,    <(spec|blt)->
  lgl$#-          %76.8 = CallSafeBuiltin    wed   is.function(%76.7)    <lgl$->
  cp              %76.9 = Checkpoint                -> BB78 (default) | BB77 (if assume failed)
BB33   <- [32]
  goto BB34
BB63   <- [61]
  void                    Assume             D     %61.5, %61.6 (Typecheck@0x55ccaa8e6868[Type#43])
  lgl$-           %63.1 = CastType           d     dn %61.4
  lgl$#-          %63.2 = CheckTrueFalse     e     %63.1
  void                    Branch                   %63.2 -> BB66 (if true) | BB64 (if false)
BB62   <- [61]
  fs              %62.0 = FrameState         R     0x55cca96739f0+937: [%1.1, %1.2, %8.1, %61.4], env=e1.0
  void                    Deopt              !v    %62.0   !
BB78   <- [76]
  void                    Branch                   %76.8 -> BB80 (if true) | BB79 (if false)
BB77   <- [76]
  fs              %77.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %77.1 = FrameState         R     0x55cca8242db0+703: [%76.8], env=e17.1, next=%77.0
  void                    Deopt              !v    %77.1   !
BB34   <- [33, 79, 85, 88]
  cp              %34.0 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB66   <- [63]
  (cls|spec|blt)  %66.0 = LdFun              !v    @, <0x55cca70fdbd8>, e1.0
  prom-           %66.1 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p4, e1.0
  prom-           %66.2 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p5, e1.0
  val?            %66.3 = Call               !v    %66.0(%66.1, %66.2) e1.0   <vec->
  void                    StVar              lW    newMem, %66.3, e1.0
  cp              %66.5 = Checkpoint                -> BB68 (default) | BB67 (if assume failed)
BB64   <- [63]
  goto BB65
BB80   <- [78]
  val?^ | miss    %80.0 = LdVar              eR    genericForBasic, e17.1
  lgl$#-          %80.1 = Identical                %80.0, function(f, where=topenv(parent.frame()), must|...
  void                    Assume             D     %80.1, %76.9 (CallTarget@0x55ccaa23ff40[Call#10])
  prom-           %80.3 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p21, e17.1
  val?            %80.4 = StaticCall         !v    genericForBasic[0x55cca9673810](%80.3, missingArg, false) { 0 2n } e17.1   <cls>
  void                    StVar              lW    value, %80.4, e17.1
  cp              %80.6 = Checkpoint                -> BB82 (default) | BB81 (if assume failed)
BB79   <- [78]
  goto BB34
BB36   <- [34]
  val?^ | miss    %36.0 = LdVar              eR    is.function, e17.1
  lgl$#-          %36.1 = Identical                <blt is.function>, %36.0   <true>
  void                    Assume             D     %36.1, %34.0 (DeadBranchReached@0x55ccaa23ff40[Test#4])
  val?^ | miss    %36.3 = LdVar              eR    value, e17.1
  val?            %36.4 = Force!<value>      !v    %36.3, e17.1   <cls>
  val?            %36.5 = CallBuiltin        !v    is.function(%36.4) e17.1   <lgl$->
  lgl$#-          %36.6 = IsType                   %36.5 isA lgl$-
  cp              %36.7 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %35.1 = FrameState         R     0x55cca8242db0+882: [], env=e17.1, next=%35.0
  void                    Deopt              !v    %35.1   !
BB68   <- [66]
  val?^ | miss    %68.0 = LdVar              eR    c, e1.0
  lgl$#-          %68.1 = Identical                <blt c>, %68.0   <true>
  void                    Assume             D     %68.1, %66.5 (DeadBranchReached@0x55ccaa8e6868[Test#5])
  val?^ | miss    %68.3 = LdVar              eR    all, e1.0
  lgl$#-          %68.4 = IsType                   %68.3 isA val?~- | miss
  void                    Assume             D     %68.4, %66.5 (Typecheck@0x55ccaa8e6868[Type#51])
  val?~- | miss   %68.6 = CastType           d     dn %68.3
  val?-           %68.7 = Force!<value>            %68.6,    <vec->
  val?^ | miss    %68.8 = LdVar              eR    Recall, e1.0
  lgl$#-          %68.9 = Identical                %68.8, function(...) <(rir::DispatchTable*)0x55cca7fe|...
  void                    Assume             D     %68.9, %66.5 (CallTarget@0x55ccaa8e6868[Call#14])
  prom-           %68.11 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p6 (!refl), e1.0
  prom-           %68.12 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p7, e1.0
  dots-           %68.13 = DotsList           l     %68.11, %68.12
  ct              %68.14 = PushContext        lCL   %68.13, Recall(newMem, where), function(...) <(rir::DispatchTable*)0x55cca7fe|..., e1.0
  env             e68.15 = MkEnv              l     ...=%68.13, parent=R_BaseNamespace, context 1
  prom-           %68.16 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p13, e68.15
  val?            %68.17 = Call               !v    <spec .Internal>(%68.16) e68.15   <vec->
  val?            %68.18 = PopContext         C     %68.17, %68.14   <vec->
  lgl$#-          %68.19 = IsType                   %68.18 isA val?-
  cp              %68.20 = Checkpoint                -> BB70 (default) | BB69 (if assume failed)
BB67   <- [66]
  fs              %67.0 = FrameState         R     0x55cca96739f0+1004: [%1.1, %1.2, %8.1], env=e1.0
  void                    Deopt              !v    %67.0   !
BB65   <- [64, 70]
  goto BB8
BB82   <- [80]
  val?^ | miss    %82.0 = LdVar              eR    is, e17.1
  lgl$#-          %82.1 = Identical                %82.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Assume             D     %82.1, %80.6 (CallTarget@0x55ccaa23ff40[Call#11])
  prom-           %82.3 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p22 (!refl), e17.1
  val?            %82.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%82.3, "genericFunction") e17.1   <lgl$->
  lgl$#-          %82.5 = IsType                   %82.4 isA lgl$-
  cp              %82.6 = Checkpoint                -> BB84 (default) | BB83 (if assume failed)
BB81   <- [80]
  fs              %81.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %81.1 = FrameState         R     0x55cca8242db0+778: [], env=e17.1, next=%81.0
  void                    Deopt              !v    %81.1   !
BB38   <- [36]
  void                    Assume             D     %36.6, %36.7 (Typecheck@0x55ccaa23ff40[Type#36])
  lgl$-           %38.1 = CastType           d     dn %36.5
  lgl$#-          %38.2 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.2 -> BB75 (if true) | BB39 (if false)
BB37   <- [36]
  fs              %37.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %37.1 = FrameState         R     0x55cca8242db0+973: [%36.5], env=e17.1, next=%37.0
  void                    Deopt              !v    %37.1   !
BB70   <- [68]
  void                    Assume             D     %68.19, %68.20 (Typecheck@0x55ccaa8e6868[Type#54])
  val?-           %70.1 = CastType           d     dn %68.18   <vec->
  val+            %70.2 = CallSafeBuiltin    wed   c(%68.7, %70.1)    <vec->
  void                    StVar              lW    all, %70.2, e1.0
  goto BB65
BB69   <- [68]
  fs              %69.0 = FrameState         R     0x55cca96739f0+1120: [%1.1, %1.2, %8.1, <blt c>, %68.7, %68.18], env=e1.0
  void                    Deopt              !v    %69.0   !
BB84   <- [82]
  void                    Assume             D     %82.5, %82.6 (Typecheck@0x55ccaa23ff40[Type#30])
  lgl$-           %84.1 = CastType           d     dn %82.4
  lgl$#-          %84.2 = CheckTrueFalse     e     %84.1
  void                    Branch                   %84.2 -> BB86 (if true) | BB85 (if false)
BB83   <- [82]
  fs              %83.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %83.1 = FrameState         R     0x55cca8242db0+815: [%82.4], env=e17.1, next=%83.0
  void                    Deopt              !v    %83.1   !
BB75   <- [38]
  val?^ | miss    %75.0 = LdVar              eR    value, e17.1
  val?            %75.1 = Force!<value>      !v    %75.0, e17.1   <cls>
  goto BB54
BB39   <- [38]
  val?^ | miss    %39.0 = LdVar              eR    nzchar, e17.1
  lgl$#-          %39.1 = Identical                <blt nzchar>, %39.0   <@?>
  void                    Branch                   %39.1 -> BB41 (if true) | BB40 (if false)
BB86   <- [84]
  val?^ | miss    %86.0 = LdVar              eR    .cacheGeneric, e17.1
  lgl$#-          %86.1 = Identical                %86.0, function(name, def) <(rir::DispatchTable*)0x55|...
  void                    Assume             D     %86.1, %82.6 (CallTarget@0x55ccaa23ff40[Call#12])
  prom-           %86.3 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p23, e17.1
  prom-           %86.4 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p24, e17.1
  ct              %86.5 = PushContext        lCL   %86.3, %86.4, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x55|..., e17.1
  val?^           %86.6 = CastType                 up %86.4
  val?^           %86.7 = CastType                 up %86.3
  cp              %86.8 = Checkpoint                -> BB88 (default) | BB87 (if assume failed)
BB85   <- [84]
  goto BB34
BB54   <- [75, 53]
  val?            %54.0 = Phi                      %53.0:BB53, %75.1:BB75
  goto BB55
BB41   <- [39]
  val?^ | miss    %41.0 = LdVar              eR    package, e17.1
  val?            %41.1 = Force!             !v    %41.0, e17.1   <val?_>
  val?            %41.2 = CallBuiltin        !v    nzchar(%41.1) e17.1   <val?_>
  lgl$-           %41.3 = AsLogical          e     %41.2
  lgl$#-          %41.4 = Identical                %41.3, false
  void                    Branch                   %41.4 -> BB45 (if true) | BB42 (if false)
BB40   <- [39]
  (cls|spec|blt)  %40.0 = LdFun              !v    nzchar, e17.1
  fs              %40.1 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %40.2 = FrameState         R     0x55cca8242db0+1012: [%40.0], env=e17.1, next=%40.1
  void                    Deopt              !v    %40.2, DeadCall@0x55ccaa23ff40[Call#14], %40.0   !
BB88   <- [86]
  val?^ | miss    %88.0 = LdVar              eR    .cacheGenericTable, <env 0x55cca7705378>
  lgl$#-          %88.1 = Identical                %88.0, function(name, def, table) <(rir::DispatchTabl|...
  void                    Assume             D     %88.1, %86.8 (CallTarget@0x55ccaa7edcd8[Call#0])
  env             e88.3 = MkEnv              l     name=%86.7, def=%86.6, parent=<env 0x55cca7705378>, context 1
  prom-           %88.4 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p25, e88.3
  prom-           %88.5 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p26, e88.3
  prom-           %88.6 = MkArg                    unboundValue, osr[0x55ccac57dc70]_p27, e88.3
  val?            %88.7 = StaticCall         !v    .cacheGenericTable[0x55cca7ac4f60](%88.4, %88.5, %88.6) e88.3   <cls>
  val?            %88.8 = PopContext         C     %88.7, %86.5   <cls>
  void                    StVar              lW    value, %88.8, e17.1
  goto BB34
BB87   <- [86]
  fs              %87.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %87.1 = FrameState         R     0x55cca8242db0+868: [], env=e17.1, next=%87.0
  env             e87.2 = (MkEnv)            l     name=%86.7, def=%86.6, parent=<env 0x55cca7705378>, context 1
  fs              %87.3 = FrameState         R     0x55cca94fbcf0+0: [], env=e87.2, next=%87.1
  void                    Deopt              !v    %87.3   !
BB45   <- [41]
  lgl$#-          %45.0 = CheckTrueFalse     e     %41.3
  void                    Branch                   %45.0 -> BB74 (if true) | BB46 (if false)
BB42   <- [41]
  val?^ | miss    %42.0 = LdVar              eR    is.na, e17.1
  lgl$#-          %42.1 = Identical                <blt is.na>, %42.0   <@?>
  void                    Branch                   %42.1 -> BB44 (if true) | BB43 (if false)
BB74   <- [45]
  (cls|spec|blt)  %74.0 = LdFun              !v    tryCatch, e17.1
  fs              %74.1 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %74.2 = FrameState         R     0x55cca8242db0+1229: [%74.0], env=e17.1, next=%74.1
  void                    Deopt              !v    %74.2, DeadCall@0x55ccaa23ff40[Call#20], %74.0   !
BB46   <- [45]
  val?^ | miss    %46.0 = LdVar              eR    is.function, e17.1
  lgl$#-          %46.1 = Identical                <blt is.function>, %46.0   <@?>
  void                    Branch                   %46.1 -> BB48 (if true) | BB47 (if false)
BB44   <- [42]
  (cls|spec|blt)  %44.0 = LdFun              !v    match, e17.1
  fs              %44.1 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %44.2 = FrameState         R     0x55cca8242db0+1152: [%41.3, <blt is.na>, %44.0], env=e17.1, next=%44.1
  void                    Deopt              !v    %44.2, DeadCall@0x55ccaa23ff40[Call#18], %44.0   !
BB43   <- [42]
  (cls|spec|blt)  %43.0 = LdFun              !v    is.na, e17.1
  fs              %43.1 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %43.2 = FrameState         R     0x55cca8242db0+1115: [%41.3, %43.0], env=e17.1, next=%43.1
  void                    Deopt              !v    %43.2, DeadCall@0x55ccaa23ff40[Call#15], %43.0   !
BB48   <- [46]
  val?^ | miss    %48.0 = LdVar              eR    value, e17.1
  val?            %48.1 = Force!             !v    %48.0, e17.1   <val?_>
  lgl$#-          %48.2 = IsType                   %48.1 isA val?+
  cp              %48.3 = Checkpoint                -> BB50 (default) | BB49 (if assume failed)
BB47   <- [46]
  (cls|spec|blt)  %47.0 = LdFun              !v    is.function, e17.1
  fs              %47.1 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %47.2 = FrameState         R     0x55cca8242db0+1311: [%47.0], env=e17.1, next=%47.1
  void                    Deopt              !v    %47.2, DeadCall@0x55ccaa23ff40[Call#23], %47.0   !
BB50   <- [48]
  void                    Assume             D     %48.2, %48.3 (Typecheck@0x55ccaa23ff40[Type#55])
  val?+           %50.1 = CastType           d     dn %48.1   <val?_>
  lgl$#-          %50.2 = CallSafeBuiltin    wed   is.function(%50.1)    <val?_>
  void                    Branch                   %50.2 -> BB73 (if true) | BB51 (if false)
BB49   <- [48]
  fs              %49.0 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %49.1 = FrameState         R     0x55cca8242db0+1352: [<blt is.function>, %48.1], env=e17.1, next=%49.0
  void                    Deopt              !v    %49.1   !
BB73   <- [50]
  val?^ | miss    %73.0 = LdVar              eR    value, e17.1
  val?            %73.1 = Force!             !v    %73.0, e17.1   <val?_>
  goto BB53
BB51   <- [50]
  val?^ | miss    %51.0 = LdVar              eR    mustFind, e17.1
  val?            %51.1 = Force!             !v    %51.0, e17.1   <val?_>
  lgl$#-          %51.2 = CheckTrueFalse     we    %51.1
  void                    Branch                   %51.2 -> BB72 (if true) | BB52 (if false)
BB53   <- [73, 52]
  val?            %53.0 = Phi                      nil:BB52, %73.1:BB73
  goto BB54
BB72   <- [51]
  (cls|spec|blt)  %72.0 = LdFun              !v    stop, e17.1
  fs              %72.1 = FrameState         R     0x55cca96739f0+803: [%1.1, %1.2, %8.1], env=e1.0
  fs              %72.2 = FrameState         R     0x55cca8242db0+1421: [%72.0], env=e17.1, next=%72.1
  void                    Deopt              !v    %72.2, DeadCall@0x55ccaa23ff40[Call#24], %72.0   !
BB52   <- [51]
  goto BB53
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    what, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    groupMembers, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    newMem, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    groupMembers, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    newMem, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     Recall, e1.0
  (miss|dots)     %1.2  = LdDots             R     , e1.0
  *dots-          %1.3  = ExpandDots               %1.2
  val?            %1.4  = NamedCall          !     %1.1(.xpandDotsTrigger=%1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     Recall, e1.0
  (miss|dots)     %1.2  = LdDots             R     , e1.0
  *dots-          %1.3  = ExpandDots               %1.2
  val?            %1.4  = NamedCall          !     %1.1(.xpandDotsTrigger=%1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 21:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 22:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 23:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 24:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 25:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 26:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 27:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .genericTable, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ osr[0x55ccac57dc70]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
