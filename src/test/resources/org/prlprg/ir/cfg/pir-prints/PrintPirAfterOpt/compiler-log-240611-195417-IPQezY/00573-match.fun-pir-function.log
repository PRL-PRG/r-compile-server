
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.fun[0x55ccaab5b630]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
match.fun[0x55ccaab5b630]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     FUN=%1.0, descend(miss)=true, parent=R_BaseNamespace, context 1
  val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <val?->
  lgl$#-          %1.3  = IsType                   %1.2 isA val?-
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB30 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.3, %1.4 (Typecheck@0x55cca85ee218[Type#1])
  val?-           %2.1  = CastType           d     dn %1.2
  lgl$#-          %2.2  = CallSafeBuiltin    wed   is.function(%2.1)    <lgl$->
  cp              %2.3  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB30   <- [1]
  fs              %30.0 = FrameState         R     0x55cca91642b0+69: [<blt is.function>, %1.2], env=e1.1
  void                    Deopt              !v    %30.0   !
BB4   <- [2]
  void                    Branch                   %2.2 -> BB29 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55cca91642b0+91: [%2.2], env=e1.1
  void                    Deopt              !v    %3.0   !
BB29   <- [4]
  val?^ | miss    %29.0 = LdVar              eR    FUN, e1.1
  void                    Visible            v     
  val?            %29.2 = Force!<wrapped>    !     %29.0, e1.1   <(cls|blt)->
  goto BB21
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    is.character, e1.1
  lgl$#-          %5.1  = Identical                <blt is.character>, %5.0   <true>
  void                    Assume             D     %5.1, %2.3 (DeadBranchReached@0x55cca85ee218[Test#1])
  val?^ | miss    %5.3  = LdVar              eR    FUN, e1.1
  val?            %5.4  = Force!<wrapped>    !v    %5.3, e1.1   <str$->
  lgl$#-          %5.5  = CallSafeBuiltin    wed   is.character(%5.4)    <lgl$->
  cp              %5.6  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB21   <- [29, 20]
  val?            %21.0 = Phi                      %20.5:BB20, %29.2:BB29
  void                    Return             l     %21.0
BB7   <- [5]
  void                    Branch                   %5.5 -> BB24 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55cca91642b0+213: [%5.5], env=e1.1
  void                    Deopt              !v    %6.0   !
BB24   <- [7]
  val?^ | miss    %24.0 = LdVar              eR    length, e1.1
  lgl$#-          %24.1 = Identical                <blt length>, %24.0   <true>
  void                    Assume             D     %24.1, %5.6 (DeadBranchReached@0x55cca85ee218[Test#2])
  val?^ | miss    %24.3 = LdVar              eR    FUN, e1.1
  val?            %24.4 = Force!<wrapped>    !v    %24.3, e1.1   <str$->
  lgl$#-          %24.5 = IsType                   %24.4 isA val?-
  cp              %24.6 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB8   <- [7]
  goto BB9
BB26   <- [24]
  void                    Assume             D     %24.5, %24.6 (Typecheck@0x55cca85ee218[Type#8])
  val?-           %26.1 = CastType           d     dn %24.4   <str$->
  (int|real)$-    %26.2 = CallSafeBuiltin    wed   length(%26.1)    <int$->
  lgl$#-          %26.3 = IsType                   %26.2 isA int$-
  cp              %26.4 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x55cca91642b0+294: [%5.5, <blt length>, %24.4], env=e1.1
  void                    Deopt              !v    %25.0   !
BB9   <- [8, 28]
  lgl$-           %9.0  = Phi                      %28.4:BB28, %5.5:BB8
  lgl$-           %9.1  = AsLogical                %9.0
  lgl$#-          %9.2  = Identical                %9.1, true
  void                    Branch                   %9.2 -> BB23 (if true) | BB10 (if false)
BB28   <- [26]
  void                    Assume             D     %26.3, %26.4 (Typecheck@0x55cca85ee218[Type#9])
  int$-           %28.1 = CastType           d     dn %26.2
  lgl$-           %28.2 = Eq                 d     %28.1, 1L, elided   <lgl$->
  lgl$-           %28.3 = AsLogical                %28.2
  lgl$-           %28.4 = LAnd                     %5.5, %28.3
  goto BB9
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x55cca91642b0+316: [%5.5, %26.2], env=e1.1
  void                    Deopt              !v    %27.0   !
BB23   <- [9]
  goto BB13
BB10   <- [9]
  val?^ | miss    %10.0 = LdVar              eR    is.symbol, e1.1
  lgl$#-          %10.1 = Identical                <blt is.symbol>, %10.0   <@?>
  void                    Branch                   %10.1 -> BB12 (if true) | BB11 (if false)
BB13   <- [23, 12]
  lgl$-           %13.0 = Phi                      %12.3:BB12, %9.1:BB23
  cp              %13.1 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    FUN, e1.1
  val?            %12.1 = Force!             !v    %12.0, e1.1   <val?_>
  lgl$#-          %12.2 = CallSafeBuiltin    wed   is.symbol(%12.1)    <val?_>
  lgl$-           %12.3 = LOr                      %9.1, %12.2
  goto BB13
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    is.symbol, e1.1
  fs              %11.1 = FrameState         R     0x55cca91642b0+370: [%9.1, %11.0], env=e1.1
  void                    Deopt              !v    %11.1, DeadCall@0x55cca85ee218[Call#3], %11.0   !
BB15   <- [13]
  lgl$-           %15.0 = Not                d     %13.0, elided
  lgl$#-          %15.1 = CheckTrueFalse     e     %15.0
  void                    Branch                   %15.1 -> BB22 (if true) | BB16 (if false)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55cca91642b0+440: [%13.0], env=e1.1
  void                    Deopt              !v    %14.0   !
BB22   <- [15]
  (cls|spec|blt)  %22.0 = LdFun              !v    eval.parent, e1.1
  fs              %22.1 = FrameState         R     0x55cca91642b0+458: [%22.0], env=e1.1
  void                    Deopt              !v    %22.1, DeadCall@0x55cca85ee218[Call#4], %22.0   !
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    parent.frame, e1.1
  lgl$#-          %16.1 = Identical                %16.0, function(n=1) <(rir::DispatchTable*)0x55cca912|...
  void                    Assume             D     %16.1, %13.1 (CallTarget@0x55cca85ee218[Call#11])
  val?            %16.3 = StaticCall         !v    parent.frame[0x55ccaafbd8a0](2) e1.1   <env->
  void                    StVar              lW    envir, %16.3, e1.1
  val?^ | miss    %16.5 = LdVar              eR    descend, e1.1
  val?            %16.6 = Force!<lazy>       !v    %16.5, e1.1   <lgl$->
  lgl$#-          %16.7 = CheckTrueFalse     we    %16.6
  cp              %16.8 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB18   <- [16]
  void                    Branch                   %16.7 -> BB20 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x55cca91642b0+714: [%16.7], env=e1.1
  void                    Deopt              !v    %17.0   !
BB20   <- [18]
  val?^ | miss    %20.0 = LdVar              eR    get, e1.1
  lgl$#-          %20.1 = Identical                %20.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %20.1, %16.8 (CallTarget@0x55cca85ee218[Call#17])
  prom-           %20.3 = MkArg                    unboundValue, match.fun[0x55ccaab5b630]_p1, e1.1
  prom-           %20.4 = MkArg                    unboundValue, match.fun[0x55ccaab5b630]_p3, e1.1
  val?            %20.5 = StaticCall         !v    get[0x55ccb04d6f60](%20.3, missingArg, %20.4, "function") { 0 3n 2n } e1.1   <blt->
  void                    StVar              lW    FUN, %20.5, e1.1
  val             %20.7 = ChkMissing         e     %20.5
  void                    Visible            v     
  goto BB21
BB19   <- [18]
  (cls|spec|blt)  %19.0 = LdFun              !v    get, e1.1
  fs              %19.1 = FrameState         R     0x55cca91642b0+724: [%19.0], env=e1.1
  void                    Deopt              !v    %19.1, DeadCall@0x55cca85ee218[Call#12], %19.0   !
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x55cca710b040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.fun[0x55ccaab5b630]_p2, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    FUN, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    envir, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ match.fun[0x55ccaab5b630]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
