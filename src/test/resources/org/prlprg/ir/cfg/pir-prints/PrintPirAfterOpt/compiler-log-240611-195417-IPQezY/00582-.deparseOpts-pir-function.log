
┌──────────────────────────────────────────────────────────────────────────────┐
│ .deparseOpts[0x55ccaab5b630]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
.deparseOpts[0x55ccaab5b630]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     control=%1.0, parent=R_BaseNamespace, context 1
  val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <str->
  lgl$#-          %1.3  = IsType                   %1.2 isA val?-
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB40 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.3, %1.4 (Typecheck@0x55cca875d1b8[Type#1])
  val?-           %2.1  = CastType           d     dn %1.2   <str->
  (int|real)$-    %2.2  = CallSafeBuiltin    wed   length(%2.1)    <int$->
  lgl$#-          %2.3  = IsType                   %2.2 isA int$-
  cp              %2.4  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB40   <- [1]
  fs              %40.0 = FrameState         R     0x55cca829c080+69: [<blt length>, %1.2], env=e1.1
  void                    Deopt              !v    %40.0   !
BB4   <- [2]
  void                    Assume             D     %2.3, %2.4 (Typecheck@0x55cca875d1b8[Type#2])
  int$-           %4.1  = CastType           d     dn %2.2
  lgl$-           %4.2  = Not                d     %4.1, elided
  lgl$#-          %4.3  = CheckTrueFalse     e     %4.2
  void                    Branch                   %4.3 -> BB39 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55cca829c080+91: [%2.2], env=e1.1
  void                    Deopt              !v    %3.0   !
BB39   <- [4]
  void                    Visible            v     
  goto BB28
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    pmatch, e1.1
  lgl$#-          %5.1  = Identical                %5.0, function(x, table, nomatch=NA, duplicates.ok=F|...
  void                    Assume             D     %5.1, %2.4 (CallTarget@0x55cca875d1b8[Call#1])
  val?^ | miss    %5.3  = LdVar              eR    as.character, e1.1
  lgl$#-          %5.4  = Identical                %5.3, <blt as.character>
  void                    Assume             D     %5.4, %2.4 (CallTarget@0x55cca875d1b8[Call#2])
  val?^ | miss    %5.6  = LdVar              eR    control, e1.1
  val?            %5.7  = Force!<wrapped>    !v    %5.6, e1.1   <str->
  val?            %5.8  = CallBuiltin        !v    as.character(%5.7) e1.1   <str->
  lgl$#-          %5.9  = IsType                   %5.8 isA val?-
  cp              %5.10 = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB28   <- [39, 27]
  real$-          %28.0 = Phi                      %27.5:BB27, 0:BB39
  void                    Return             l     %28.0
BB7   <- [5]
  void                    Assume             D     %5.9, %5.10 (Typecheck@0x55cca772bf20[Type#1])
  val?-           %7.1  = CastType           d     dn %5.8   <str->
  val+            %7.2  = CallSafeBuiltin    wed   as.character(%7.1)    <str->
  val?^ | miss    %7.3  = LdVar              eR    ..deparseOpts, e1.1
  val?            %7.4  = Force!<wrapped>    !v    %7.3, e1.1   <str->
  lgl$#-          %7.5  = IsType                   %7.4 isA val?-
  cp              %7.6  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55cca829c080+152: [], env=e1.1
  prom-           %6.1  = MkArg                    unboundValue, .deparseOpts[0x55ccaab5b630]_p2, e1.1
  val?^           %6.2  = CastType                 up %6.1
  prom-           %6.3  = MkArg                    unboundValue, .deparseOpts[0x55ccaab5b630]_p0, e1.1
  val?^           %6.4  = CastType                 up %6.3
  env             e6.5  = (MkEnv)            l     x=%6.4, table=%6.2, nomatch(miss)=NA, duplicates.ok(miss)=false, parent=R_BaseNamespace, context 0
  fs              %6.6  = FrameState         R     0x55cca772bd50+69: [<blt as.character>], env=e6.5, next=%6.0
  fs              %6.7  = FrameState         R     0x55cca738eaf0+32(pr): [%5.8], env=e1.1, next=%6.6
  void                    Deopt              !v    %6.7   !
BB9   <- [7]
  void                    Assume             D     %7.5, %7.6 (Typecheck@0x55cca772bf20[Type#4])
  val?-           %9.1  = CastType           d     dn %7.4   <str->
  val+            %9.2  = CallSafeBuiltin    wed   as.character(%9.1)    <str->
  val+            %9.3  = CallSafeBuiltin    wed   pmatch(%7.2, %9.2, NA, false)    <int->
  void                    StVar              lW    opts, %9.3, e1.1
  lgl$#-          %9.5  = IsType                   %9.3 isA int-
  cp              %9.6  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  prom-           %8.0  = MkArg                    %7.1, .deparseOpts[0x55ccaab5b630]_p0 (!refl), e1.1
  val?~           %8.1  = CastType                 up %8.0
  fs              %8.2  = FrameState         R     0x55cca829c080+152: [], env=e1.1
  prom-           %8.3  = MkArg                    %7.4, .deparseOpts[0x55ccaab5b630]_p2 (!refl), e1.1
  val?~           %8.4  = CastType                 up %8.3
  env             e8.5  = (MkEnv)            l     duplicates.ok(miss)=false, nomatch(miss)=NA, table=%8.4, x=%8.1, parent=R_BaseNamespace, context 0
  fs              %8.6  = FrameState         R     0x55cca772bd50+165: [%7.2, <blt as.character>, %7.4], env=e8.5, next=%8.2
  void                    Deopt              !v    %8.6   !
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    anyNA, e1.1
  lgl$#-          %11.1 = Identical                <blt anyNA>, %11.0   <true>
  void                    Assume             D     %11.1, %9.6 (DeadBranchReached@0x55cca875d1b8[Test#1])
  void                    Assume             D     %9.5, %9.6 (Typecheck@0x55cca875d1b8[Type#6])
  int-            %11.4 = CastType           d     dn %9.3
  val+            %11.5 = CallSafeBuiltin    wed   anyNA(%11.4)    <lgl$->
  lgl$#-          %11.6 = IsType                   %11.5 isA lgl$-
  cp              %11.7 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x55cca829c080+166: [], env=e1.1
  void                    Deopt              !v    %10.0   !
BB13   <- [11]
  void                    Assume             D     %11.6, %11.7 (Typecheck@0x55cca875d1b8[Type#9])
  lgl$-           %13.1 = CastType           d     dn %11.5
  lgl$#-          %13.2 = CheckTrueFalse     e     %13.1
  void                    Branch                   %13.2 -> BB38 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55cca829c080+257: [%11.5], env=e1.1
  void                    Deopt              !v    %12.0   !
BB38   <- [13]
  (cls|spec|blt)  %38.0 = LdFun              !v    stop, e1.1
  fs              %38.1 = FrameState         R     0x55cca829c080+278: [%38.0], env=e1.1
  void                    Deopt              !v    %38.1, DeadCall@0x55cca875d1b8[Call#4], %38.0   !
BB14   <- [13]
  val?^ | miss    %14.0 = LdVar              eR    any, e1.1
  lgl$#-          %14.1 = Identical                <blt any>, %14.0   <true>
  void                    Assume             D     %14.1, %11.7 (DeadBranchReached@0x55cca875d1b8[Test#3])
  lgl-            %14.3 = Eq                 wed   %11.4, 1L, elided   <lgl->
  val?            %14.4 = CallBuiltin        !v    any(%14.3) e1.1   <lgl$->
  lgl$#-          %14.5 = IsType                   %14.4 isA lgl$-
  cp              %14.6 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB16   <- [14]
  void                    Assume             D     %14.5, %14.6 (Typecheck@0x55cca875d1b8[Type#28])
  lgl$-           %16.1 = CastType           d     dn %14.4
  lgl$#-          %16.2 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.2 -> BB31 (if true) | BB17 (if false)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x55cca829c080+431: [%14.4], env=e1.1
  void                    Deopt              !v    %15.0   !
BB31   <- [16]
  val?^ | miss    %31.0 = LdVar              eR    any, e1.1
  lgl$#-          %31.1 = Identical                <blt any>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB17   <- [16]
  val?^ | miss    %17.0 = LdVar              eR    any, e1.1
  lgl$#-          %17.1 = Identical                <blt any>, %17.0   <true>
  void                    Assume             D     %17.1, %14.6 (DeadBranchReached@0x55cca875d1b8[Test#4])
  val?^ | miss    %17.3 = LdVar              eR    opts, e1.1
  lgl$#-          %17.4 = IsType                   %17.3 isA int-
  void                    Assume             D     %17.4, %14.6 (Typecheck@0x55cca875d1b8[Type#31])
  int-            %17.6 = CastType           d     dn %17.3
  lgl-            %17.7 = Eq                 wed   %17.6, 13L, elided   <lgl->
  val?            %17.8 = CallBuiltin        !v    any(%17.7) e1.1   <lgl$->
  lgl$#-          %17.9 = IsType                   %17.8 isA lgl$-
  cp              %17.10 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    opts, e1.1
  val?            %33.1 = Force!             !v    %33.0, e1.1   <val?_>
  lgl$#-          %33.2 = IsType                   %33.1 isA val?+
  cp              %33.3 = Checkpoint                -> BB35 (default) | BB34 (if assume failed)
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    any, e1.1
  fs              %32.1 = FrameState         R     0x55cca829c080+640: [%32.0], env=e1.1
  void                    Deopt              !v    %32.1, DeadCall@0x55cca875d1b8[Call#18], %32.0   !
BB19   <- [17]
  void                    Assume             D     %17.9, %17.10 (Typecheck@0x55cca875d1b8[Type#33])
  lgl$-           %19.1 = CastType           d     dn %17.8
  lgl$#-          %19.2 = CheckTrueFalse     e     %19.1
  void                    Branch                   %19.2 -> BB30 (if true) | BB20 (if false)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x55cca829c080+545: [%17.8], env=e1.1
  void                    Deopt              !v    %18.0   !
BB35   <- [33]
  void                    Assume             D     %33.2, %33.3 (Typecheck@0x55cca875d1b8[Type#45])
  val?+           %35.1 = CastType           d     dn %33.1   <val?_>
  lgl             %35.2 = Eq                 wed   %35.1, 13L, elided   <val?_>
  val?            %35.3 = CallBuiltin        !v    any(%35.2) e1.1   <val?_>
  lgl$#-          %35.4 = CheckTrueFalse     we    %35.3
  void                    Branch                   %35.4 -> BB37 (if true) | BB36 (if false)
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x55cca829c080+681: [<blt any>, %33.1], env=e1.1
  void                    Deopt              !v    %34.0   !
BB30   <- [19]
  (cls|spec|blt)  %30.0 = LdFun              !v    unique, e1.1
  fs              %30.1 = FrameState         R     0x55cca829c080+566: [%30.0], env=e1.1
  void                    Deopt              !v    %30.1, DeadCall@0x55cca875d1b8[Call#16], %30.0   !
BB20   <- [19]
  val?^ | miss    %20.0 = LdVar              eR    %in%, e1.1
  lgl$#-          %20.1 = Identical                %20.0, function(x, table) <(rir::DispatchTable*)0x55c|...
  void                    Assume             D     %20.1, %17.10 (CallTarget@0x55cca875d1b8[Call#23])
  val?^ | miss    %20.3 = LdVar              eR    opts, e1.1
  lgl$#-          %20.4 = IsType                   %20.3 isA int-
  void                    Assume             D     %20.4, %17.10 (Typecheck@0x55cca875d1b8[Type#60])
  int-            %20.6 = CastType           d     dn %20.3
  val+            %20.7 = CallSafeBuiltin    wed   match(10L, %20.6, 0L, nil)    <int->
  lgl$#-          %20.8 = IsType                   %20.7 isA int-
  cp              %20.9 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB37   <- [35]
  (cls|spec|blt)  %37.0 = LdFun              !v    stop, e1.1
  fs              %37.1 = FrameState         R     0x55cca829c080+736: [%37.0], env=e1.1
  void                    Deopt              !v    %37.1, DeadCall@0x55cca875d1b8[Call#19], %37.0   !
BB36   <- [35]
  (cls|spec|blt)  %36.0 = LdFun              !v    unique, e1.1
  fs              %36.1 = FrameState         R     0x55cca829c080+769: [%36.0], env=e1.1
  void                    Deopt              !v    %36.1, DeadCall@0x55cca875d1b8[Call#20], %36.0   !
BB22   <- [20]
  void                    Assume             D     %20.8, %20.9 (Typecheck@0x55cca875d688[Type#2])
  int-            %22.1 = CastType           d     dn %20.7
  lgl-            %22.2 = Gt                 wed   %22.1, 0L, elided   <lgl->
  lgl$-           %22.3 = AsLogical                %22.2
  lgl$#-          %22.4 = Identical                %22.3, false
  cp              %22.5 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  prom-           %21.0 = MkArg                    %20.6, .deparseOpts[0x55ccaab5b630]_p3 (!refl), e1.1
  val?~           %21.1 = CastType                 up %21.0
  env             e21.2 = MkEnv              l     x=10L, table=%21.1, parent=R_BaseNamespace, context 0
  prom-           %21.3 = MkArg                    unboundValue, .deparseOpts[0x55ccaab5b630]_p6 (!refl), e21.2
  val?^           %21.4 = CastType                 up %21.3
  fs              %21.5 = FrameState         R     0x55cca829c080+847: [], env=e1.1
  fs              %21.6 = FrameState         R     0x55cca772b4e0+54: [], env=e21.2, next=%21.5
  prom-           %21.7 = MkArg                    %20.6, .deparseOpts[0x55ccaab5b630]_p7 (!refl), e21.2
  val?~           %21.8 = CastType                 up %21.7
  env             e21.9 = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%21.8, x=%21.4, parent=R_BaseNamespace, context -1
  fs              %21.10 = FrameState         R     0x55cca7c33d70+69: [%20.7], env=e21.9, next=%21.6
  void                    Deopt              !v    %21.10   !
BB24   <- [22]
  void                    Branch                   %22.4 -> BB26 (if true) | BB25 (if false)
BB23   <- [22]
  prom-           %23.0 = MkArg                    %20.6, .deparseOpts[0x55ccaab5b630]_p3 (!refl), e1.1
  val?~           %23.1 = CastType                 up %23.0
  fs              %23.2 = FrameState         R     0x55cca829c080+847: [], env=e1.1
  env             e23.3 = (MkEnv)            l     x=10L, table=%23.1, parent=R_BaseNamespace, context 0
  fs              %23.4 = FrameState         R     0x55cca772b4e0+66: [%22.2], env=e23.3, next=%23.2
  void                    Deopt              !v    %23.4   !
BB26   <- [24]
  lgl$#-          %26.0 = CheckTrueFalse     e     %22.3
  void                    Branch                   %26.0 -> BB29 (if true) | BB27 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    %in%, e1.1
  fs              %25.1 = FrameState         R     0x55cca829c080+864: [%22.3, %25.0], env=e1.1
  void                    Deopt              !v    %25.1, DeadCall@0x55cca875d1b8[Call#24], %25.0   !
BB29   <- [26]
  (cls|spec|blt)  %29.0 = LdFun              !v    stop, e1.1
  fs              %29.1 = FrameState         R     0x55cca829c080+919: [%29.0], env=e1.1
  void                    Deopt              !v    %29.1, DeadCall@0x55cca875d1b8[Call#25], %29.0   !
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    sum, e1.1
  lgl$#-          %27.1 = Identical                <blt sum>, %27.0   <true>
  void                    Assume             D     %27.1, %22.5 (DeadBranchReached@0x55cca875d1b8[Test#8])
  real-           %27.3 = Sub                wed   %20.6, 2, elided   <real->
  real-           %27.4 = Pow                wed   2, %27.3, elided   <real->
  real$-          %27.5 = CallSafeBuiltin    vwed  sum(%27.4)    <real$->
  goto BB28
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x55cca710b040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, .deparseOpts[0x55ccaab5b630]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    control, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ..deparseOpts, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    opts, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?+>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    table, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?->
  void                    Return             l     %1.3

│ .deparseOpts[0x55ccaab5b630]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
