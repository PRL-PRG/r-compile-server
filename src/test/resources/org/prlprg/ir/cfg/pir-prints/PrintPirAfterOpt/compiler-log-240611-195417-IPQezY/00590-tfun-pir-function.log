
┌──────────────────────────────────────────────────────────────────────────────┐
│ tfun[0x55ccb0630f90]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0,SimpleReal0           │
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
tfun[0x55ccb0630f90]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  env             e1.3  = MkEnv              l     n=%1.2, id=%1.1, power=%1.0, parent=?, context 1
  real$-          %1.4  = Force!<lazy>       !vr   %1.2,    <(int|real)$->
  lgl$-           %1.5  = Eq                 d     %1.4, 1L, elided   <lgl$->
  lgl$#-          %1.6  = CheckTrueFalse     e     %1.5
  void                    Branch                   %1.6 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  void                    Visible            v     
  val?            %2.1  = Force!<lazy>       !     %1.1, e1.3   <int$->
  goto BB3
BB4   <- [1]
  cp              %4.0  = Checkpoint                -> BB5 (default) | BB39 (if assume failed)
BB3   <- [2, 27]
  val?            %3.0  = Phi                      %27.0:BB27, %2.1:BB2
  void                    Return             l     %3.0
BB5   <- [4]
  lgl$-           %5.0  = Eq                 d     %1.4, 2L, elided   <lgl$->
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB32 (if true) | BB6 (if false)
BB39   <- [4]
  fs              %39.0 = FrameState         R     0x55ccb31f0f60+41: [%1.4], env=e1.3
  void                    Deopt              !v    %39.0
BB32   <- [5]
  val?^ | miss    %32.0 = LdVar              eR    c, ?
  lgl$#-          %32.1 = Identical                <blt c>, %32.0   <@?>
  void                    Branch                   %32.1 -> BB34 (if true) | BB33 (if false)
BB6   <- [5]
  lgl$-           %6.0  = Eq                 d     %1.4, 3L, elided   <lgl$->
  lgl$#-          %6.1  = CheckTrueFalse     e     %6.0
  void                    Branch                   %6.1 -> BB29 (if true) | BB7 (if false)
BB34   <- [32]
  val?            %34.0 = Force!             !v    %1.1, e1.3   <val?_>
  lgl$#-          %34.1 = IsType                   %34.0 isA val?+
  cp              %34.2 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB33   <- [32]
  (cls|spec|blt)  %33.0 = LdFun              !v    c, ?
  fs              %33.1 = FrameState         R     0x55ccb31f0f60+755: [%33.0], env=e1.3
  void                    Deopt              !v    %33.1, DeadCall@0x55ccac39e4a0[Call#7], %33.0
BB29   <- [6]
  val?^ | miss    %29.0 = LdVar              eR    c, ?
  lgl$#-          %29.1 = Identical                <blt c>, %29.0   <true>
  void                    Assume             D     %29.1, %4.0 (DeadBranchReached@0x55ccac39e4a0[Test#2])
  val?            %29.3 = Force!<lazy>       !v    %1.1, e1.3   <int$->
  lgl$#-          %29.4 = IsType                   %29.3 isA int$-
  cp              %29.5 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB7   <- [6]
  val?            %7.0  = Force!<lazy>       !v    %1.0, e1.3   <(int|real)$->
  lgl$#-          %7.1  = IsType                   %7.0 isA val?-
  cp              %7.2  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB36   <- [34]
  void                    Assume             D     %34.1, %34.2 (Typecheck@0x55ccac39e4a0[Type#80])
  val?+           %36.1 = CastType           d     dn %34.0   <val?_>
  (int|real|complex)+ %36.2 = Mul                wed   2L, %36.1, elided   <val?_>
  (int|real|complex)+ %36.3 = Add                wed   %36.2, 1L, elided   <val?_>
  val?^ | miss    %36.4 = LdVar              eR    id, e1.3
  val?            %36.5 = Force!             !v    %36.4, e1.3   <val?_>
  lgl$#-          %36.6 = IsType                   %36.5 isA val?+
  cp              %36.7 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x55ccb31f0f60+807: [<blt c>, 2L, %34.0], env=e1.3
  void                    Deopt              !v    %35.0   !
BB31   <- [29]
  void                    Assume             D     %29.4, %29.5 (Typecheck@0x55ccac39e4a0[Type#68])
  int$-           %31.1 = CastType           d     dn %29.3
  int$-           %31.2 = Mul                d     2L, %31.1, elided   <int$->
  int$-           %31.3 = Add                d     %31.2, 1L, elided   <int$->
  val?^ | miss    %31.4 = LdVar              eR    id, e1.3
  lgl$#-          %31.5 = IsType                   %31.4 isA int$~-
  void                    Assume             D     %31.5, %29.5 (Typecheck@0x55ccac39e4a0[Type#71])
  int$~-          %31.7 = CastType           d     dn %31.4
  int$-           %31.8 = Force!<wrapped>          %31.7,    <int$->
  int$-           %31.9 = Mul                d     2L, %31.8, elided   <int$->
  int$-           %31.10 = Add                d     %31.9, 2L, elided   <int$->
  int-            %31.11 = CallSafeBuiltin    vwed  c(%31.3, %31.8, %31.10)    <int->
  goto BB26
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x55ccb31f0f60+625: [<blt c>, 2L, %29.3], env=e1.3
  void                    Deopt              !v    %30.0   !
BB9   <- [7]
  void                    Assume             D     %7.1, %7.2 (Typecheck@0x55ccac39e4a0[Type#7])
  val?-           %9.1  = CastType           d     dn %7.0   <(int|real)$->
  (int|real|complex)- %9.2  = Mul                wed   %9.1, 2L, elided   <(int|real)$->
  lgl-            %9.3  = Eq                 wed   %1.4, %9.2, elided   <lgl$->
  lgl$#-          %9.4  = IsType                   %9.3 isA lgl$-
  cp              %9.5  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x55ccb31f0f60+119: [%1.4, %7.0], env=e1.3
  void                    Deopt              !v    %8.0   !
BB38   <- [36]
  void                    Assume             D     %36.6, %36.7 (Typecheck@0x55ccac39e4a0[Type#83])
  val?+           %38.1 = CastType           d     dn %36.5   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %38.2 = CallSafeBuiltin    vwed  c(%36.3, %38.1)    <val?_>
  goto BB27
BB37   <- [36]
  fs              %37.0 = FrameState         R     0x55ccb31f0f60+839: [<blt c>, %36.3, %36.5], env=e1.3
  void                    Deopt              !v    %37.0   !
BB26   <- [25, 31]
  int-            %26.0 = Phi                      %25.8:BB25, %31.11:BB31
  goto BB27
BB11   <- [9]
  void                    Assume             D     %9.4, %9.5 (Typecheck@0x55ccac39e4a0[Type#9])
  lgl$-           %11.1 = CastType           d     dn %9.3
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB28 (if true) | BB12 (if false)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x55ccb31f0f60+137: [%9.3], env=e1.3
  void                    Deopt              !v    %10.0   !
BB27   <- [38, 26]
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %27.0 = Phi                      %26.0:BB26, %38.2:BB38
  goto BB3
BB28   <- [11]
  val?^ | miss    %28.0 = LdVar              eR    power, e1.3
  val?            %28.1 = Force!             !v    %28.0, e1.3   <val?_>
  goto BB19
BB12   <- [11]
  val?^ | miss    %12.0 = LdVar              eR    min, e1.3
  lgl$#-          %12.1 = Identical                <blt min>, %12.0   <true>
  void                    Assume             D     %12.1, %9.5 (DeadBranchReached@0x55ccac39e4a0[Test#0])
  val?^ | miss    %12.3 = LdVar              eR    power, e1.3
  val?            %12.4 = Force!<wrapped>    !v    %12.3, e1.3   <(int|real)$->
  lgl$#-          %12.5 = IsType                   %12.4 isA val?-
  cp              %12.6 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB19   <- [28, 18]
  val?            %19.0 = Phi                      %18.4:BB18, %28.1:BB28   <(int|real)$->
  void                    StVar              lW    nleft, %19.0, e1.3
  cp              %19.2 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB14   <- [12]
  void                    Assume             D     %12.5, %12.6 (Typecheck@0x55ccac39e4a0[Type#16])
  val?-           %14.1 = CastType           d     dn %12.4   <(int|real)$->
  (int|real|complex)- %14.2 = Sub                wed   %14.1, 1L, elided   <(int|real)$->
  val?^ | miss    %14.3 = LdVar              eR    n, e1.3
  val?            %14.4 = Force!<wrapped>    !v    %14.3, e1.3   <(int|real)$->
  val?^ | miss    %14.5 = LdVar              eR    power, e1.3
  val?            %14.6 = Force!<wrapped>    !v    %14.5, e1.3   <(int|real)$->
  lgl$#-          %14.7 = IsType                   %14.6 isA val?-
  cp              %14.8 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x55ccb31f0f60+222: [<blt min>, %12.4], env=e1.3
  void                    Deopt              !v    %13.0   !
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    c, e1.3
  lgl$#-          %21.1 = Identical                <blt c>, %21.0   <true>
  void                    Assume             D     %21.1, %19.2 (DeadBranchReached@0x55ccac39e4a0[Test#1])
  val?^ | miss    %21.3 = LdVar              eR    tfun, e1.3
  (cls|spec|blt)  %21.4 = CastType                 dn %21.3
  val+            %21.5 = CallSafeBuiltin          bodyCode(%21.4) 
  lgl$#-          %21.6 = Identical                %21.5, <(rir::DispatchTable*)0x55ccb31f1680>
  void                    Assume             D     %21.6, %19.2 (CallTarget@0x55ccac39e4a0[Call#4])
  val?            %21.8 = Force!             d     %21.3, 
  prom-           %21.9 = MkArg                    unboundValue, tfun[0x55ccb0630f90]_p1, e1.3
  prom-           %21.10 = MkArg                    unboundValue, tfun[0x55ccb0630f90]_p2, e1.3
  (cls|spec|blt)  %21.11 = ChkFunction        e     %21.8
  val             %21.12 = ChkMissing         e     %19.0
  prom-           %21.13 = MkArg                    %19.0, tfun[0x55ccb0630f90]_p0 (!refl), 
  val?            %21.14 = StaticCall         !v    tfun[0x55ccb0572020](%21.13, %21.9, %21.10) from %21.11 e1.3   <int->
  val?^ | miss    %21.15 = LdVar              eR    id, e1.3
  val?            %21.16 = Force!<wrapped>    !v    %21.15, e1.3   <int$->
  cp              %21.17 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x55ccb31f0f60+335: [], env=e1.3
  void                    Deopt              !v    %20.0   !
BB16   <- [14]
  void                    Assume             D     %14.7, %14.8 (Typecheck@0x55ccac39e4a0[Type#19])
  val?-           %16.1 = CastType           d     dn %14.6   <(int|real)$->
  (int|real|complex)- %16.2 = IDiv               wed   %16.1, 2L, elided   <(int|real)$->
  cp              %16.3 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x55ccb31f0f60+262: [<blt min>, %14.2, %14.4, %14.6], env=e1.3
  void                    Deopt              !v    %15.0   !
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    tfun, e1.3
  (cls|spec|blt)  %23.1 = CastType                 dn %23.0
  val+            %23.2 = CallSafeBuiltin          bodyCode(%23.1) 
  lgl$#-          %23.3 = Identical                %23.2, <(rir::DispatchTable*)0x55ccb31f1680>
  void                    Assume             D     %23.3, %21.17 (CallTarget@0x55ccac39e4a0[Call#5])
  val?            %23.5 = Force!             d     %23.0, 
  prom-           %23.6 = MkArg                    unboundValue, tfun[0x55ccb0630f90]_p3, e1.3
  prom-           %23.7 = MkArg                    unboundValue, tfun[0x55ccb0630f90]_p4, e1.3
  prom-           %23.8 = MkArg                    unboundValue, tfun[0x55ccb0630f90]_p5, e1.3
  (cls|spec|blt)  %23.9 = ChkFunction        e     %23.5
  val?            %23.10 = StaticCall         !v    tfun[0x55ccb0a73660](%23.6, %23.7, %23.8) from %23.9 e1.3   <int->
  lgl$#-          %23.11 = IsType                   %23.10 isA int-
  cp              %23.12 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x55ccb31f0f60+461: [<blt c>, %21.14, %21.16], env=e1.3
  void                    Deopt              !v    %22.0   !
BB18   <- [16]
  lgl$#-          %18.0 = IsType                   %14.4 isA val?-
  void                    Assume             D     %18.0, %16.3 (Typecheck@0x55ccac39e4a0[Type#18])
  val?-           %18.2 = CastType           d     dn %14.4   <(int|real)$->
  (int|real|complex)- %18.3 = Sub                wed   %18.2, %16.2, elided   <(int|real)$->
  (int|real|complex)$- %18.4 = CallSafeBuiltin    wed   min(%14.2, %18.3)    <(int|real)$->
  goto BB19
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x55ccb31f0f60+274: [<blt min>, %14.2, %14.4, %16.2], env=e1.3
  void                    Deopt              !v    %17.0   !
BB25   <- [23]
  lgl$#-          %25.0 = IsType                   %21.14 isA int-
  void                    Assume             D     %25.0, %23.12 (Typecheck@0x55ccac39e4a0[Type#48])
  int-            %25.2 = CastType           d     dn %21.14
  lgl$#-          %25.3 = IsType                   %21.16 isA int$-
  void                    Assume             D     %25.3, %23.12 (Typecheck@0x55ccac39e4a0[Type#49])
  int$-           %25.5 = CastType           d     dn %21.16
  void                    Assume             D     %23.11, %23.12 (Typecheck@0x55ccac39e4a0[Type#59])
  int-            %25.7 = CastType           d     dn %23.10
  int-            %25.8 = CallSafeBuiltin    vwed  c(%25.2, %25.5, %25.7)    <int->
  goto BB26
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x55ccb31f0f60+508: [<blt c>, %21.14, %21.16, %23.10], env=e1.3
  void                    Deopt              !v    %24.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    nleft, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <(int|real)$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    id, e1.0
  val?            %1.2  = Force<lazy>        !v    %1.1, e1.0   <int$->
  val?            %1.3  = Mul                !v    2L, %1.2, e1.0   <int$->
  void                    Visible            v     
  val?            %1.5  = Add                !     %1.3, 1L, e1.0   <int$->
  void                    Return             l     %1.5
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    power, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <(int|real)$->
  void                    Visible            v     
  val?            %1.4  = IDiv               !     %1.2, 2, e1.0   <real$->
  void                    Return             l     %1.4
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <real$->
  val?^ | miss    %1.3  = LdVar              eR    nleft, e1.0
  val?            %1.4  = Force<value>       !v    %1.3, e1.0   <real$->
  val?            %1.5  = Add                !v    %1.4, 1L, e1.0   <real$->
  void                    Visible            v     
  val?            %1.7  = Sub                !     %1.2, %1.5, e1.0   <real$->
  void                    Return             l     %1.7
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    id, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <int$->
  val?            %1.3  = Mul                !v    2L, %1.2, e1.0   <int$->
  void                    Visible            v     
  val?            %1.5  = Add                !     %1.3, 2L, e1.0   <int$->
  void                    Return             l     %1.5
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    power, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <real$->
  void                    Visible            v     
  val?            %1.4  = IDiv               !     %1.2, 2, e1.0   <real$->
  void                    Return             l     %1.4

│ tfun[0x55ccb0630f90]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
