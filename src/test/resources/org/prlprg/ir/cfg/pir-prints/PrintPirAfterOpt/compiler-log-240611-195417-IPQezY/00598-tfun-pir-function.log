
┌──────────────────────────────────────────────────────────────────────────────┐
│ tfun[0x55ccab1ec1a0]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
tfun[0x55ccab1ec1a0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?~+          %1.2  = LdArg                    0
  val+            %1.3  = Force!<lazy>             %1.2,    <(int|real)$->
  lgl$#-          %1.4  = IsType                   %1.3 isA val?-
  cp              %1.5  = Checkpoint                -> BB2 (default) | BB45 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.4, %1.5 (Typecheck@0x55ccac39e4a0[Type#0])
  val-            %2.1  = CastType           d     dn %1.3   <(int|real)$->
  lgl-            %2.2  = Eq                 wed   %2.1, 1L, elided   <lgl$->
  lgl$#-          %2.3  = IsType                   %2.2 isA lgl$-
  cp              %2.4  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB45   <- [1]
  env             e45.0 = (MkEnv)            l     n=%1.2, id=%1.1, power=%1.0, parent=?, context 1
  fs              %45.1 = FrameState         R     0x55ccb31f0f60+9: [%1.3], env=e45.0
  void                    Deopt              !v    %45.1
BB4   <- [2]
  void                    Assume             D     %2.3, %2.4 (Typecheck@0x55ccac39e4a0[Type#1])
  lgl$-           %4.1  = CastType           d     dn %2.2
  lgl$#-          %4.2  = CheckTrueFalse     e     %4.1
  env             e4.3  = MkEnv              l     n=%1.2, id=%1.1, power=%1.0, parent=?, context 1
  void                    Branch                   %4.2 -> BB44 (if true) | BB5 (if false)
BB3   <- [2]
  env             e3.0  = (MkEnv)            l     n=%1.2, id=%1.1, power=%1.0, parent=?, context 1
  fs              %3.1  = FrameState         R     0x55ccb31f0f60+21: [%2.2], env=e3.0
  void                    Deopt              !v    %3.1
BB44   <- [4]
  void                    Visible            v     
  val?            %44.1 = Force!<lazy>       !     %1.1, e4.3   <int$->
  goto BB32
BB5   <- [4]
  val-            %5.0  = CastType           d     dn %1.3   <(int|real)$->
  lgl-            %5.1  = Eq                 wed   %5.0, 2L, elided   <lgl$->
  lgl$#-          %5.2  = IsType                   %5.1 isA lgl$-
  cp              %5.3  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB32   <- [44, 31]
  val?            %32.0 = Phi                      %31.0:BB31, %44.1:BB44
  void                    Return             l     %32.0
BB7   <- [5]
  void                    Assume             D     %5.2, %5.3 (Typecheck@0x55ccac39e4a0[Type#3])
  lgl$-           %7.1  = CastType           d     dn %5.1
  lgl$#-          %7.2  = CheckTrueFalse     e     %7.1
  void                    Branch                   %7.2 -> BB37 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55ccb31f0f60+53: [%5.1], env=e4.3
  void                    Deopt              !v    %6.0
BB37   <- [7]
  val?^ | miss    %37.0 = LdVar              eR    c, ?
  lgl$#-          %37.1 = Identical                <blt c>, %37.0   <@?>
  void                    Branch                   %37.1 -> BB39 (if true) | BB38 (if false)
BB8   <- [7]
  lgl-            %8.0  = Eq                 wed   %5.0, 3L, elided   <lgl$->
  lgl$#-          %8.1  = IsType                   %8.0 isA lgl$-
  cp              %8.2  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB39   <- [37]
  val?            %39.0 = Force!             !v    %1.1, e4.3   <val?_>
  lgl$#-          %39.1 = IsType                   %39.0 isA val?+
  cp              %39.2 = Checkpoint                -> BB41 (default) | BB40 (if assume failed)
BB38   <- [37]
  (cls|spec|blt)  %38.0 = LdFun              !v    c, ?
  fs              %38.1 = FrameState         R     0x55ccb31f0f60+755: [%38.0], env=e4.3
  void                    Deopt              !v    %38.1, DeadCall@0x55ccac39e4a0[Call#7], %38.0
BB10   <- [8]
  void                    Assume             D     %8.1, %8.2 (Typecheck@0x55ccac39e4a0[Type#5])
  lgl$-           %10.1 = CastType           d     dn %8.0
  lgl$#-          %10.2 = CheckTrueFalse     e     %10.1
  void                    Branch                   %10.2 -> BB34 (if true) | BB11 (if false)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x55ccb31f0f60+85: [%8.0], env=e4.3
  void                    Deopt              !v    %9.0
BB41   <- [39]
  void                    Assume             D     %39.1, %39.2 (Typecheck@0x55ccac39e4a0[Type#80])
  val?+           %41.1 = CastType           d     dn %39.0   <val?_>
  (int|real|complex)+ %41.2 = Mul                wed   2L, %41.1, elided   <val?_>
  (int|real|complex)+ %41.3 = Add                wed   %41.2, 1L, elided   <val?_>
  val?^ | miss    %41.4 = LdVar              eR    id, e4.3
  val?            %41.5 = Force!             !v    %41.4, e4.3   <val?_>
  lgl$#-          %41.6 = IsType                   %41.5 isA val?+
  cp              %41.7 = Checkpoint                -> BB43 (default) | BB42 (if assume failed)
BB40   <- [39]
  fs              %40.0 = FrameState         R     0x55ccb31f0f60+807: [<blt c>, 2L, %39.0], env=e4.3
  void                    Deopt              !v    %40.0   !
BB34   <- [10]
  val?^ | miss    %34.0 = LdVar              eR    c, ?
  lgl$#-          %34.1 = Identical                <blt c>, %34.0   <true>
  void                    Assume             D     %34.1, %8.2 (DeadBranchReached@0x55ccac39e4a0[Test#2])
  val?            %34.3 = Force!<lazy>       !v    %1.1, e4.3   <int$->
  lgl$#-          %34.4 = IsType                   %34.3 isA int$-
  cp              %34.5 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB11   <- [10]
  val?            %11.0 = Force!<lazy>       !v    %1.0, e4.3   <(int|real)$->
  lgl$#-          %11.1 = IsType                   %11.0 isA val?-
  cp              %11.2 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB43   <- [41]
  void                    Assume             D     %41.6, %41.7 (Typecheck@0x55ccac39e4a0[Type#83])
  val?+           %43.1 = CastType           d     dn %41.5   <val?_>
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %43.2 = CallSafeBuiltin    vwed  c(%41.3, %43.1)    <val?_>
  goto BB31
BB42   <- [41]
  fs              %42.0 = FrameState         R     0x55ccb31f0f60+839: [<blt c>, %41.3, %41.5], env=e4.3
  void                    Deopt              !v    %42.0   !
BB36   <- [34]
  void                    Assume             D     %34.4, %34.5 (Typecheck@0x55ccac39e4a0[Type#68])
  int$-           %36.1 = CastType           d     dn %34.3
  int$-           %36.2 = Mul                d     2L, %36.1, elided   <int$->
  int$-           %36.3 = Add                d     %36.2, 1L, elided   <int$->
  val?^ | miss    %36.4 = LdVar              eR    id, e4.3
  lgl$#-          %36.5 = IsType                   %36.4 isA int$~-
  void                    Assume             D     %36.5, %34.5 (Typecheck@0x55ccac39e4a0[Type#71])
  int$~-          %36.7 = CastType           d     dn %36.4
  int$-           %36.8 = Force!<wrapped>          %36.7,    <int$->
  int$-           %36.9 = Mul                d     2L, %36.8, elided   <int$->
  int$-           %36.10 = Add                d     %36.9, 2L, elided   <int$->
  int-            %36.11 = CallSafeBuiltin    vwed  c(%36.3, %36.8, %36.10)    <int->
  goto BB30
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x55ccb31f0f60+625: [<blt c>, 2L, %34.3], env=e4.3
  void                    Deopt              !v    %35.0   !
BB13   <- [11]
  void                    Assume             D     %11.1, %11.2 (Typecheck@0x55ccac39e4a0[Type#7])
  val?-           %13.1 = CastType           d     dn %11.0   <(int|real)$->
  (int|real|complex)- %13.2 = Mul                wed   %13.1, 2L, elided   <(int|real)$->
  lgl-            %13.3 = Eq                 wed   %5.0, %13.2, elided   <lgl$->
  lgl$#-          %13.4 = IsType                   %13.3 isA lgl$-
  cp              %13.5 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55ccb31f0f60+119: [%1.3, %11.0], env=e4.3
  void                    Deopt              !v    %12.0   !
BB31   <- [43, 30]
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %31.0 = Phi                      %30.0:BB30, %43.2:BB43
  goto BB32
BB30   <- [29, 36]
  int-            %30.0 = Phi                      %29.8:BB29, %36.11:BB36
  goto BB31
BB15   <- [13]
  void                    Assume             D     %13.4, %13.5 (Typecheck@0x55ccac39e4a0[Type#9])
  lgl$-           %15.1 = CastType           d     dn %13.3
  lgl$#-          %15.2 = CheckTrueFalse     e     %15.1
  void                    Branch                   %15.2 -> BB33 (if true) | BB16 (if false)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55ccb31f0f60+137: [%13.3], env=e4.3
  void                    Deopt              !v    %14.0   !
BB33   <- [15]
  val?^ | miss    %33.0 = LdVar              eR    power, e4.3
  val?            %33.1 = Force!             !v    %33.0, e4.3   <val?_>
  goto BB23
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    min, e4.3
  lgl$#-          %16.1 = Identical                <blt min>, %16.0   <true>
  void                    Assume             D     %16.1, %13.5 (DeadBranchReached@0x55ccac39e4a0[Test#0])
  val?^ | miss    %16.3 = LdVar              eR    power, e4.3
  val?            %16.4 = Force!<wrapped>    !v    %16.3, e4.3   <(int|real)$->
  lgl$#-          %16.5 = IsType                   %16.4 isA val?-
  cp              %16.6 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB23   <- [33, 22]
  val?            %23.0 = Phi                      %22.4:BB22, %33.1:BB33   <(int|real)$->
  void                    StVar              lW    nleft, %23.0, e4.3
  cp              %23.2 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB18   <- [16]
  void                    Assume             D     %16.5, %16.6 (Typecheck@0x55ccac39e4a0[Type#16])
  val?-           %18.1 = CastType           d     dn %16.4   <(int|real)$->
  (int|real|complex)- %18.2 = Sub                wed   %18.1, 1L, elided   <(int|real)$->
  val?^ | miss    %18.3 = LdVar              eR    n, e4.3
  val?            %18.4 = Force!<wrapped>    !v    %18.3, e4.3   <(int|real)$->
  val?^ | miss    %18.5 = LdVar              eR    power, e4.3
  val?            %18.6 = Force!<wrapped>    !v    %18.5, e4.3   <(int|real)$->
  lgl$#-          %18.7 = IsType                   %18.6 isA val?-
  cp              %18.8 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x55ccb31f0f60+222: [<blt min>, %16.4], env=e4.3
  void                    Deopt              !v    %17.0   !
BB25   <- [23]
  val?^ | miss    %25.0 = LdVar              eR    c, e4.3
  lgl$#-          %25.1 = Identical                <blt c>, %25.0   <true>
  void                    Assume             D     %25.1, %23.2 (DeadBranchReached@0x55ccac39e4a0[Test#1])
  val?^ | miss    %25.3 = LdVar              eR    tfun, e4.3
  (cls|spec|blt)  %25.4 = CastType                 dn %25.3
  val+            %25.5 = CallSafeBuiltin          bodyCode(%25.4) 
  lgl$#-          %25.6 = Identical                %25.5, <(rir::DispatchTable*)0x55ccb31f1680>
  void                    Assume             D     %25.6, %23.2 (CallTarget@0x55ccac39e4a0[Call#4])
  val?            %25.8 = Force!             d     %25.3, 
  prom-           %25.9 = MkArg                    unboundValue, tfun[0x55ccab1ec1a0]_p1, e4.3
  prom-           %25.10 = MkArg                    unboundValue, tfun[0x55ccab1ec1a0]_p2, e4.3
  (cls|spec|blt)  %25.11 = ChkFunction        e     %25.8
  val             %25.12 = ChkMissing         e     %23.0
  prom-           %25.13 = MkArg                    %23.0, tfun[0x55ccab1ec1a0]_p3 (!refl), 
  val?            %25.14 = StaticCall         !v    tfun[0x55ccaf27a170](%25.13, %25.9, %25.10) from %25.11 e4.3   <int->
  val?^ | miss    %25.15 = LdVar              eR    id, e4.3
  val?            %25.16 = Force!<wrapped>    !v    %25.15, e4.3   <int$->
  cp              %25.17 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x55ccb31f0f60+335: [], env=e4.3
  void                    Deopt              !v    %24.0   !
BB20   <- [18]
  void                    Assume             D     %18.7, %18.8 (Typecheck@0x55ccac39e4a0[Type#19])
  val?-           %20.1 = CastType           d     dn %18.6   <(int|real)$->
  (int|real|complex)- %20.2 = IDiv               wed   %20.1, 2L, elided   <(int|real)$->
  cp              %20.3 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x55ccb31f0f60+262: [<blt min>, %18.2, %18.4, %18.6], env=e4.3
  void                    Deopt              !v    %19.0   !
BB27   <- [25]
  val?^ | miss    %27.0 = LdVar              eR    tfun, e4.3
  (cls|spec|blt)  %27.1 = CastType                 dn %27.0
  val+            %27.2 = CallSafeBuiltin          bodyCode(%27.1) 
  lgl$#-          %27.3 = Identical                %27.2, <(rir::DispatchTable*)0x55ccb31f1680>
  void                    Assume             D     %27.3, %25.17 (CallTarget@0x55ccac39e4a0[Call#5])
  val?            %27.5 = Force!             d     %27.0, 
  prom-           %27.6 = MkArg                    unboundValue, tfun[0x55ccab1ec1a0]_p4, e4.3
  prom-           %27.7 = MkArg                    unboundValue, tfun[0x55ccab1ec1a0]_p5, e4.3
  prom-           %27.8 = MkArg                    unboundValue, tfun[0x55ccab1ec1a0]_p6, e4.3
  (cls|spec|blt)  %27.9 = ChkFunction        e     %27.5
  val?            %27.10 = StaticCall         !v    tfun[0x55cca8f74230](%27.6, %27.7, %27.8) from %27.9 e4.3   <int->
  lgl$#-          %27.11 = IsType                   %27.10 isA int-
  cp              %27.12 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x55ccb31f0f60+461: [<blt c>, %25.14, %25.16], env=e4.3
  void                    Deopt              !v    %26.0   !
BB22   <- [20]
  lgl$#-          %22.0 = IsType                   %18.4 isA val?-
  void                    Assume             D     %22.0, %20.3 (Typecheck@0x55ccac39e4a0[Type#18])
  val?-           %22.2 = CastType           d     dn %18.4   <(int|real)$->
  (int|real|complex)- %22.3 = Sub                wed   %22.2, %20.2, elided   <(int|real)$->
  (int|real|complex)$- %22.4 = CallSafeBuiltin    wed   min(%18.2, %22.3)    <(int|real)$->
  goto BB23
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x55ccb31f0f60+274: [<blt min>, %18.2, %18.4, %20.2], env=e4.3
  void                    Deopt              !v    %21.0   !
BB29   <- [27]
  lgl$#-          %29.0 = IsType                   %25.14 isA int-
  void                    Assume             D     %29.0, %27.12 (Typecheck@0x55ccac39e4a0[Type#48])
  int-            %29.2 = CastType           d     dn %25.14
  lgl$#-          %29.3 = IsType                   %25.16 isA int$-
  void                    Assume             D     %29.3, %27.12 (Typecheck@0x55ccac39e4a0[Type#49])
  int$-           %29.5 = CastType           d     dn %25.16
  void                    Assume             D     %27.11, %27.12 (Typecheck@0x55ccac39e4a0[Type#59])
  int-            %29.7 = CastType           d     dn %27.10
  int-            %29.8 = CallSafeBuiltin    vwed  c(%29.2, %29.5, %29.7)    <int->
  goto BB30
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x55ccb31f0f60+508: [<blt c>, %25.14, %25.16, %27.10], env=e4.3
  void                    Deopt              !v    %28.0   !
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    id, e1.0
  val?            %1.2  = Force<lazy>        !v    %1.1, e1.0   <int$->
  val?            %1.3  = Mul                !v    2L, %1.2, e1.0   <int$->
  void                    Visible            v     
  val?            %1.5  = Add                !     %1.3, 1L, e1.0   <int$->
  void                    Return             l     %1.5
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    power, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <(int|real)$->
  void                    Visible            v     
  val?            %1.4  = IDiv               !     %1.2, 2, e1.0   <real$->
  void                    Return             l     %1.4
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    nleft, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <(int|real)$->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <(int|real)$->
  val?^ | miss    %1.3  = LdVar              eR    nleft, e1.0
  val?            %1.4  = Force<value>       !v    %1.3, e1.0   <(int|real)$->
  val?            %1.5  = Add                !v    %1.4, 1L, e1.0   <(int|real)$->
  void                    Visible            v     
  val?            %1.7  = Sub                !     %1.2, %1.5, e1.0   <(int|real)$->
  void                    Return             l     %1.7
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    id, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <int$->
  val?            %1.3  = Mul                !v    2L, %1.2, e1.0   <int$->
  void                    Visible            v     
  val?            %1.5  = Add                !     %1.3, 2L, e1.0   <int$->
  void                    Return             l     %1.5
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    power, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <(int|real)$->
  void                    Visible            v     
  val?            %1.4  = IDiv               !     %1.2, 2, e1.0   <real$->
  void                    Return             l     %1.4

│ tfun[0x55ccab1ec1a0]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
