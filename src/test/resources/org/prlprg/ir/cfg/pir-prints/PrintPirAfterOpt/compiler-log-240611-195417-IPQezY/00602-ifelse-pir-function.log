
┌──────────────────────────────────────────────────────────────────────────────┐
│ ifelse[0x55ccabd77a80]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl2,!Obj2                       │
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
ifelse[0x55ccabd77a80]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  env             e1.3  = MkEnv              l     test=%1.2, yes=%1.1, no=%1.0, parent=R_BaseNamespace, context 1
  val?            %1.4  = Force!<lazy>       !v    %1.2, e1.3   <lgl+>
  lgl$#-          %1.5  = IsType                   %1.4 isA lgl+
  cp              %1.6  = Checkpoint                -> BB2 (default) | BB93 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.5, %1.6 (Typecheck@0x55cca91d78e0[Type#1])
  val?^ | miss    %2.1  = LdVar              eR    typeof, e1.3
  lgl$#-          %2.2  = Identical                %2.1, function(x) <(rir::DispatchTable*)0x55cca91d0e|...
  void                    Assume             D     %2.2, %1.6 (CallTarget@0x55cca91d78e0[Call#5])
  val?^ | miss    %2.4  = LdVar              eR    test, e1.3
  val?            %2.5  = Force!<wrapped>    !v    %2.4, e1.3   <lgl+>
  str$-           %2.6  = CallSafeBuiltin    wed   typeof(%2.5)    <str$->
  cp              %2.7  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB93   <- [1]
  fs              %93.0 = FrameState         R     0x55cca91d18e0+69: [<blt is.atomic>, %1.4], env=e1.3
  void                    Deopt              !v    %93.0   !
BB4   <- [2]
  lgl$-           %4.0  = Neq                d     %2.6, "logical", elided   <lgl$->
  lgl$#-          %4.1  = CheckTrueFalse     e     %4.0
  void                    Branch                   %4.1 -> BB92 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55cca91d18e0+431: [], env=e1.3
  prom-           %3.1  = MkArg                    %2.5, ifelse[0x55ccabd77a80]_p7 (!refl), e1.3
  val?~           %3.2  = CastType                 up %3.1
  env             e3.3  = (MkEnv)            l     x=%3.2, parent=R_BaseNamespace, context 0
  fs              %3.4  = FrameState         R     0x55cca91cf530+27: [%2.6], env=e3.3, next=%3.0
  void                    Deopt              !v    %3.4   !
BB92   <- [4]
  (cls|spec|blt)  %92.0 = LdFun              !v    storage.mode<-, e1.3
  fs              %92.1 = FrameState         R     0x55cca91d18e0+470: ["logical", %92.0], env=e1.3
  void                    Deopt              !v    %92.1, DeadCall@0x55cca91d78e0[Call#6], %92.0   !
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    length, e1.3
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <true>
  void                    Assume             D     %5.1, %2.7 (DeadBranchReached@0x55cca91d78e0[Test#3])
  val?^ | miss    %5.3  = LdVar              eR    test, e1.3
  lgl$#-          %5.4  = IsType                   %5.3 isA lgl~+
  void                    Assume             D     %5.4, %2.7 (Typecheck@0x55cca91d78e0[Type#19])
  lgl~+           %5.6  = CastType           d     dn %5.3
  lgl+            %5.7  = Force!<wrapped>          %5.6,    <lgl+>
  (int|real)$-    %5.8  = CallSafeBuiltin    wed   length(%5.7)    <int$->
  lgl$#-          %5.9  = IsType                   %5.8 isA int$-
  cp              %5.10 = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  void                    Assume             D     %5.9, %5.10 (Typecheck@0x55cca91d78e0[Type#20])
  int$-           %7.1  = CastType           d     dn %5.8
  lgl$-           %7.2  = Eq                 d     %7.1, 1, elided   <lgl$->
  lgl$-           %7.3  = AsLogical                %7.2
  lgl$#-          %7.4  = Identical                %7.3, false
  void                    Branch                   %7.4 -> BB91 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55cca91d18e0+624: [%5.8], env=e1.3
  void                    Deopt              !v    %6.0   !
BB91   <- [7]
  goto BB9
BB8   <- [7]
  val?^ | miss    %8.0  = LdVar              eR    attributes, e1.3
  lgl$#-          %8.1  = Identical                <blt attributes>, %8.0   <true>
  void                    Assume             D     %8.1, %5.10 (DeadBranchReached@0x55cca91d78e0[Test#4])
  val?            %8.3  = CallBuiltin        !v    attributes(%5.7) e1.3   <nil->
  lgl$-           %8.4  = Is                       %8.3, NULL
  lgl$-           %8.5  = AsLogical                %8.4
  lgl$-           %8.6  = LAnd                     %7.3, %8.5
  goto BB9
BB9   <- [91, 8]
  lgl$-           %9.0  = Phi                      %8.6:BB8, %7.3:BB91
  cp              %9.1  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB11   <- [9]
  lgl$#-          %11.0 = CheckTrueFalse     e     %9.0
  void                    Branch                   %11.0 -> BB50 (if true) | BB12 (if false)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x55cca91d18e0+751: [%9.0], env=e1.3
  void                    Deopt              !v    %10.0   !
BB50   <- [11]
  val?^ | miss    %50.0 = LdVar              eR    is.na, e1.3
  lgl$#-          %50.1 = Identical                <blt is.na>, %50.0   <true>
  void                    Assume             D     %50.1, %9.1 (DeadBranchReached@0x55cca91d78e0[Test#5])
  val?^ | miss    %50.3 = LdVar              eR    test, e1.3
  lgl$#-          %50.4 = IsType                   %50.3 isA lgl$~-
  void                    Assume             D     %50.4, %9.1 (Typecheck@0x55cca91d78e0[Type#26])
  lgl$~-          %50.6 = CastType           d     dn %50.3
  lgl$-           %50.7 = Force!<wrapped>          %50.6,    <lgl$->
  lgl$-           %50.8 = CallSafeBuiltin    wed   is.na(%50.7)    <lgl$->
  lgl$#-          %50.9 = CheckTrueFalse     e     %50.8
  void                    Branch                   %50.9 -> BB90 (if true) | BB51 (if false)
BB12   <- [11]
  goto BB13
BB90   <- [50]
  void                    Visible            v     
  goto BB36
BB51   <- [50]
  lgl$#-          %51.0 = CheckTrueFalse     e     %50.7
  cp              %51.1 = Checkpoint                -> BB53 (default) | BB52 (if assume failed)
BB13   <- [12, 61]
  val?^ | miss    %13.0 = LdVar              eR    test, e1.3
  val?            %13.1 = Force!<wrapped>    !v    %13.0, e1.3   <lgl+>
  void                    StVar              lW    ans, %13.1, e1.3
  cp              %13.3 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB36   <- [90, 73, 87, 35]
  val?            %36.0 = Phi                      %35.5:BB35, %73.2:BB73, %87.2:BB87, na-lgl:BB90
  void                    Return             l     %36.0
BB53   <- [51]
  void                    Branch                   %51.0 -> BB76 (if true) | BB54 (if false)
BB52   <- [51]
  fs              %52.0 = FrameState         R     0x55cca91d18e0+879: [%51.0], env=e1.3
  void                    Deopt              !v    %52.0   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    length, e1.3
  lgl$#-          %15.1 = Identical                <blt length>, %15.0   <true>
  void                    Assume             D     %15.1, %13.3 (DeadBranchReached@0x55cca91d78e0[Test#12])
  val             %15.3 = ChkMissing         e     %13.1   <lgl+>
  lgl$#-          %15.4 = IsType                   %15.3 isA lgl+
  void                    Assume             D     %15.4, %13.3 (Typecheck@0x55cca91d78e0[Type#61])
  lgl+            %15.6 = CastType           d     dn %15.3
  (int|real)$-    %15.7 = CallSafeBuiltin    wed   length(%15.6)    <int$->
  lgl$#-          %15.8 = IsType                   %15.7 isA int$-
  cp              %15.9 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55cca91d18e0+1776: [], env=e1.3
  void                    Deopt              !v    %14.0   !
BB76   <- [53]
  val?^ | miss    %76.0 = LdVar              eR    length, e1.3
  lgl$#-          %76.1 = Identical                <blt length>, %76.0   <true>
  void                    Assume             D     %76.1, %51.1 (DeadBranchReached@0x55cca91d78e0[Test#9])
  val?^ | miss    %76.3 = LdVar              eR    yes, e1.3
  val?            %76.4 = Force!<lazy>       !v    %76.3, e1.3   <real$->
  lgl$#-          %76.5 = IsType                   %76.4 isA real$-
  cp              %76.6 = Checkpoint                -> BB78 (default) | BB77 (if assume failed)
BB54   <- [53]
  val?^ | miss    %54.0 = LdVar              eR    length, e1.3
  lgl$#-          %54.1 = Identical                <blt length>, %54.0   <@?>
  void                    Branch                   %54.1 -> BB56 (if true) | BB55 (if false)
BB17   <- [15]
  void                    Assume             D     %15.8, %15.9 (Typecheck@0x55cca91d78e0[Type#62])
  int$-           %17.1 = CastType           d     dn %15.7
  void                    StVar              lW    len, %17.1, e1.3
  cp              %17.3 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x55cca91d18e0+1867: [%15.7], env=e1.3
  void                    Deopt              !v    %16.0   !
BB78   <- [76]
  void                    Assume             D     %76.5, %76.6 (Typecheck@0x55cca91d78e0[Type#45])
  val?^ | miss    %78.1 = LdVar              eR    attributes, e1.3
  lgl$#-          %78.2 = Identical                <blt attributes>, %78.1   <true>
  void                    Assume             D     %78.2, %76.6 (DeadBranchReached@0x55cca91d78e0[Test#10])
  val?^ | miss    %78.4 = LdVar              eR    yes, e1.3
  val?            %78.5 = Force!<wrapped>    !v    %78.4, e1.3   <real$->
  val?            %78.6 = CallBuiltin        !v    attributes(%78.5) e1.3   <nil->
  lgl$-           %78.7 = Is                       %78.6, NULL
  lgl$-           %78.8 = AsLogical                %78.7
  lgl$#-          %78.9 = Identical                %78.8, true
  void                    StVar              lW    yat, %78.6, e1.3
  val             %78.11 = ChkMissing         e     %78.6
  void                    Branch                   %78.9 -> BB89 (if true) | BB79 (if false)
BB77   <- [76]
  fs              %77.0 = FrameState         R     0x55cca91d18e0+1384: [<blt length>, %76.4], env=e1.3
  void                    Deopt              !v    %77.0   !
BB56   <- [54]
  val?^ | miss    %56.0 = LdVar              eR    no, e1.3
  val?            %56.1 = Force!             !v    %56.0, e1.3   <val?_>
  lgl$#-          %56.2 = IsType                   %56.1 isA val?+
  cp              %56.3 = Checkpoint                -> BB58 (default) | BB57 (if assume failed)
BB55   <- [54]
  (cls|spec|blt)  %55.0 = LdFun              !v    length, e1.3
  fs              %55.1 = FrameState         R     0x55cca91d18e0+912: [%55.0], env=e1.3
  void                    Deopt              !v    %55.1, DeadCall@0x55cca91d78e0[Call#10], %55.0   !
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    which, e1.3
  lgl$#-          %19.1 = Identical                %19.0, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Assume             D     %19.1, %17.3 (CallTarget@0x55cca91d78e0[Call#21])
  val?^ | miss    %19.3 = LdVar              eR    test, e1.3
  val?            %19.4 = Force!<wrapped>    !v    %19.3, e1.3   <lgl+>
  val+            %19.5 = CallSafeBuiltin    wed   which(%19.4)    <int+>
  void                    StVar              lW    ypos, %19.5, e1.3
  cp              %19.7 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x55cca91d18e0+1881: [], env=e1.3
  void                    Deopt              !v    %18.0   !
BB89   <- [78]
  goto BB85
BB79   <- [78]
  val?^ | miss    %79.0 = LdVar              eR    is.function, e1.3
  lgl$#-          %79.1 = Identical                <blt is.function>, %79.0   <@?>
  void                    Branch                   %79.1 -> BB81 (if true) | BB80 (if false)
BB58   <- [56]
  void                    Assume             D     %56.2, %56.3 (Typecheck@0x55cca91d78e0[Type#30])
  val?+           %58.1 = CastType           d     dn %56.1   <val?_>
  (int|real)$-    %58.2 = CallSafeBuiltin    wed   length(%58.1)    <val?_>
  lgl$-           %58.3 = Eq                 d     %58.2, 1, elided   <val?_>
  lgl$#-          %58.4 = CheckTrueFalse     e     %58.3
  void                    Branch                   %58.4 -> BB62 (if true) | BB59 (if false)
BB57   <- [56]
  fs              %57.0 = FrameState         R     0x55cca91d18e0+953: [<blt length>, %56.1], env=e1.3
  void                    Deopt              !v    %57.0   !
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    which, e1.3
  lgl$#-          %21.1 = Identical                %21.0, function(x, arr.ind=FALSE, useNames=TRUE) <(ri|...
  void                    Assume             D     %21.1, %19.7 (CallTarget@0x55cca91d78e0[Call#22])
  val?^ | miss    %21.3 = LdVar              eR    test, e1.3
  lgl$#-          %21.4 = IsType                   %21.3 isA lgl~+
  void                    Assume             D     %21.4, %19.7 (Typecheck@0x55cca91d78e0[Type#65])
  lgl~+           %21.6 = CastType           d     dn %21.3
  lgl+            %21.7 = Force!<wrapped>          %21.6,    <lgl+>
  lgl             %21.8 = Not                wed   %21.7, elided   <lgl+>
  val+            %21.9 = CallSafeBuiltin    wed   which(%21.8)    <int+>
  void                    StVar              lW    npos, %21.9, e1.3
  cp              %21.11 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x55cca91d18e0+1927: [], env=e1.3
  void                    Deopt              !v    %20.0   !
BB85   <- [89, 84]
  lgl$-           %85.0 = Phi                      %83.3:BB84, %78.8:BB89
  lgl$#-          %85.1 = CheckTrueFalse     e     %85.0
  void                    Branch                   %85.1 -> BB87 (if true) | BB86 (if false)
BB81   <- [79]
  val?^ | miss    %81.0 = LdVar              eR    yes, e1.3
  val?            %81.1 = Force!             !v    %81.0, e1.3   <val?_>
  lgl$#-          %81.2 = IsType                   %81.1 isA val?+
  cp              %81.3 = Checkpoint                -> BB83 (default) | BB82 (if assume failed)
BB80   <- [79]
  (cls|spec|blt)  %80.0 = LdFun              !v    is.function, e1.3
  fs              %80.1 = FrameState         R     0x55cca91d18e0+1593: [%78.8, %80.0], env=e1.3
  void                    Deopt              !v    %80.1, DeadCall@0x55cca91d78e0[Call#17], %80.0   !
BB62   <- [58]
  val?^ | miss    %62.0 = LdVar              eR    attributes, e1.3
  lgl$#-          %62.1 = Identical                <blt attributes>, %62.0   <@?>
  void                    Branch                   %62.1 -> BB64 (if true) | BB63 (if false)
BB59   <- [58]
  goto BB60
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    length, e1.3
  lgl$#-          %23.1 = Identical                <blt length>, %23.0   <true>
  void                    Assume             D     %23.1, %21.11 (DeadBranchReached@0x55cca91d78e0[Test#13])
  lgl$#-          %23.3 = IsType                   %19.5 isA int+
  void                    Assume             D     %23.3, %21.11 (Typecheck@0x55cca91d78e0[Type#68])
  int+            %23.5 = CastType           d     dn %19.5
  (int|real)$-    %23.6 = CallSafeBuiltin    wed   length(%23.5)    <int$->
  lgl$#-          %23.7 = IsType                   %23.6 isA int$-
  cp              %23.8 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x55cca91d18e0+1973: [], env=e1.3
  void                    Deopt              !v    %22.0   !
BB87   <- [85]
  val?^ | miss    %87.0 = LdVar              eR    yes, e1.3
  void                    Visible            v     
  val?            %87.2 = Force!<wrapped>    !     %87.0, e1.3   <real$->
  goto BB36
BB86   <- [85]
  goto BB61
BB83   <- [81]
  void                    Assume             D     %81.2, %81.3 (Typecheck@0x55cca91d78e0[Type#53])
  val?+           %83.1 = CastType           d     dn %81.1   <val?_>
  lgl$#-          %83.2 = CallSafeBuiltin    wed   is.function(%83.1)    <val?_>
  lgl$-           %83.3 = LOr                      %78.8, %83.2
  void                    Branch                   %83.2 -> BB88 (if true) | BB84 (if false)
BB82   <- [81]
  fs              %82.0 = FrameState         R     0x55cca91d18e0+1634: [%78.8, <blt is.function>, %81.1], env=e1.3
  void                    Deopt              !v    %82.0   !
BB64   <- [62]
  val?^ | miss    %64.0 = LdVar              eR    no, e1.3
  val?            %64.1 = Force!             !v    %64.0, e1.3   <val?_>
  val?            %64.2 = CallBuiltin        !v    attributes(%64.1) e1.3   <val?_>
  lgl$-           %64.3 = Is                       %64.2, NULL
  lgl$-           %64.4 = AsLogical                %64.3
  lgl$#-          %64.5 = Identical                %64.4, true
  void                    StVar              lW    nat, %64.2, e1.3
  val             %64.7 = ChkMissing         e     %64.2
  void                    Branch                   %64.5 -> BB75 (if true) | BB65 (if false)
BB63   <- [62]
  (cls|spec|blt)  %63.0 = LdFun              !v    attributes, e1.3
  fs              %63.1 = FrameState         R     0x55cca91d18e0+1031: [%63.0], env=e1.3
  void                    Deopt              !v    %63.1, DeadCall@0x55cca91d78e0[Call#11], %63.0   !
BB60   <- [59, 72]
  goto BB61
BB25   <- [23]
  void                    Assume             D     %23.7, %23.8 (Typecheck@0x55cca91d78e0[Type#69])
  int$-           %25.1 = CastType           d     dn %23.6
  lgl$-           %25.2 = Gt                 d     %25.1, 0L, elided   <lgl$->
  lgl$#-          %25.3 = CheckTrueFalse     e     %25.2
  void                    Branch                   %25.3 -> BB45 (if true) | BB26 (if false)
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x55cca91d18e0+2064: [%23.6], env=e1.3
  void                    Deopt              !v    %24.0   !
BB61   <- [86, 60]
  goto BB13
BB88   <- [83]
  (cls|spec|blt)  %88.0 = LdFun              !v    identical, e1.3
  fs              %88.1 = FrameState         R     0x55cca91d18e0+1673: [%78.8, %83.2, %88.0], env=e1.3
  void                    Deopt              !v    %88.1, DeadCall@0x55cca91d78e0[Call#18], %88.0   !
BB84   <- [83]
  goto BB85
BB75   <- [64]
  goto BB71
BB65   <- [64]
  val?^ | miss    %65.0 = LdVar              eR    is.function, e1.3
  lgl$#-          %65.1 = Identical                <blt is.function>, %65.0   <@?>
  void                    Branch                   %65.1 -> BB67 (if true) | BB66 (if false)
BB45   <- [25]
  (cls|spec|blt)  %45.0 = LdFun              !v    rep, <0x55cca71129b0>, e1.3
  prom-           %45.1 = MkArg                    unboundValue, ifelse[0x55ccabd77a80]_p5, e1.3
  prom-           %45.2 = MkArg                    unboundValue, ifelse[0x55ccabd77a80]_p6, e1.3
  val?            %45.3 = NamedCall          !v    %45.0(%45.1, length.out=%45.2) e1.3   <val?->
  lgl$#-          %45.4 = IsType                   %45.3 isA val+   <true>
  lgl$#-          %45.5 = IsType                   %45.3 isA val?-
  cp              %45.6 = Checkpoint                -> BB47 (default) | BB46 (if assume failed)
BB26   <- [25]
  goto BB27
BB71   <- [75, 70]
  lgl$-           %71.0 = Phi                      %69.3:BB70, %64.4:BB75
  lgl$#-          %71.1 = CheckTrueFalse     e     %71.0
  void                    Branch                   %71.1 -> BB73 (if true) | BB72 (if false)
BB67   <- [65]
  val?^ | miss    %67.0 = LdVar              eR    no, e1.3
  val?            %67.1 = Force!             !v    %67.0, e1.3   <val?_>
  lgl$#-          %67.2 = IsType                   %67.1 isA val?+
  cp              %67.3 = Checkpoint                -> BB69 (default) | BB68 (if assume failed)
BB66   <- [65]
  (cls|spec|blt)  %66.0 = LdFun              !v    is.function, e1.3
  fs              %66.1 = FrameState         R     0x55cca91d18e0+1162: [%64.4, %66.0], env=e1.3
  void                    Deopt              !v    %66.1, DeadCall@0x55cca91d78e0[Call#12], %66.0   !
BB47   <- [45]
  void                    Assume             D     %45.4, %45.6 (DeadBranchReached@0x55cca91d78e0[Test#14])
  val?^ | miss    %47.1 = LdVar              eR    ypos, e1.3
  lgl$#-          %47.2 = IsType                   %47.1 isA int+
  void                    Assume             D     %47.2, %45.6 (Typecheck@0x55cca91d78e0[Type#75])
  int+            %47.4 = CastType           d     dn %47.1
  void                    Assume             D     %45.5, %45.6 (Typecheck@0x55cca91d78e0[Type#73])
  val?-           %47.6 = CastType           d     dn %45.3
  val?            %47.7 = Extract1_1D        wed   %47.6, %47.4, elided   <val?->
  lgl$#-          %47.8 = IsType                   %47.7 isA val?-
  cp              %47.9 = Checkpoint                -> BB49 (default) | BB48 (if assume failed)
BB46   <- [45]
  fs              %46.0 = FrameState         R     0x55cca91d18e0+2137: [%45.3], env=e1.3
  void                    Deopt              !v    %46.0   !
BB27   <- [26, 49]
  cp              %27.0 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB73   <- [71]
  val?^ | miss    %73.0 = LdVar              eR    no, e1.3
  void                    Visible            v     
  val?            %73.2 = Force!             !     %73.0, e1.3   <val?_>
  goto BB36
BB72   <- [71]
  goto BB60
BB69   <- [67]
  void                    Assume             D     %67.2, %67.3 (Typecheck@0x55cca91d78e0[Type#38])
  val?+           %69.1 = CastType           d     dn %67.1   <val?_>
  lgl$#-          %69.2 = CallSafeBuiltin    wed   is.function(%69.1)    <val?_>
  lgl$-           %69.3 = LOr                      %64.4, %69.2
  void                    Branch                   %69.2 -> BB74 (if true) | BB70 (if false)
BB68   <- [67]
  fs              %68.0 = FrameState         R     0x55cca91d18e0+1203: [%64.4, <blt is.function>, %67.1], env=e1.3
  void                    Deopt              !v    %68.0   !
BB49   <- [47]
  val?^ | miss    %49.0 = LdVar              eR    ans !upd, e1.3
  lgl$#-          %49.1 = IsType                   %49.0 isA lgl+
  void                    Assume             D     %49.1, %47.9 (Typecheck@0x55cca91d78e0[Type#77])
  lgl+            %49.3 = CastType           d     dn %49.0
  void                    Assume             D     %47.8, %47.9 (Typecheck@0x55cca91d78e0[Type#76])
  val?-           %49.5 = CastType           d     dn %47.7
  val?+           %49.6 = Subassign1_1D      wed   %49.5, %49.3, %47.4, elided
  void                    StVar              lW    ans, %49.6, e1.3
  goto BB27
BB48   <- [47]
  fs              %48.0 = FrameState         R     0x55cca91d18e0+2188: [%47.7], env=e1.3
  void                    Deopt              !v    %48.0   !
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    length, e1.3
  lgl$#-          %29.1 = Identical                <blt length>, %29.0   <true>
  void                    Assume             D     %29.1, %27.0 (DeadBranchReached@0x55cca91d78e0[Test#15])
  val?^ | miss    %29.3 = LdVar              eR    npos, e1.3
  lgl$#-          %29.4 = IsType                   %29.3 isA int+
  void                    Assume             D     %29.4, %27.0 (Typecheck@0x55cca91d78e0[Type#80])
  int+            %29.6 = CastType           d     dn %29.3
  (int|real)$-    %29.7 = CallSafeBuiltin    wed   length(%29.6)    <int$->
  lgl$#-          %29.8 = IsType                   %29.7 isA int$-
  cp              %29.9 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x55cca91d18e0+2232: [], env=e1.3
  void                    Deopt              !v    %28.0   !
BB74   <- [69]
  (cls|spec|blt)  %74.0 = LdFun              !v    identical, e1.3
  fs              %74.1 = FrameState         R     0x55cca91d18e0+1242: [%64.4, %69.2, %74.0], env=e1.3
  void                    Deopt              !v    %74.1, DeadCall@0x55cca91d78e0[Call#13], %74.0   !
BB70   <- [69]
  goto BB71
BB31   <- [29]
  void                    Assume             D     %29.8, %29.9 (Typecheck@0x55cca91d78e0[Type#81])
  int$-           %31.1 = CastType           d     dn %29.7
  lgl$-           %31.2 = Gt                 d     %31.1, 0L, elided   <lgl$->
  lgl$#-          %31.3 = CheckTrueFalse     e     %31.2
  void                    Branch                   %31.3 -> BB37 (if true) | BB32 (if false)
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x55cca91d18e0+2323: [%29.7], env=e1.3
  void                    Deopt              !v    %30.0   !
BB37   <- [31]
  (cls|spec|blt)  %37.0 = LdFun              !v    rep, <0x55cca71129b0>, e1.3
  prom-           %37.1 = MkArg                    unboundValue, ifelse[0x55ccabd77a80]_p2, e1.3
  prom-           %37.2 = MkArg                    unboundValue, ifelse[0x55ccabd77a80]_p3, e1.3
  val?            %37.3 = NamedCall          !v    %37.0(%37.1, length.out=%37.2) e1.3   <val?>
  lgl$#-          %37.4 = IsType                   %37.3 isA val+
  cp              %37.5 = Checkpoint                -> BB39 (default) | BB38 (if assume failed)
BB32   <- [31]
  goto BB33
BB39   <- [37]
  void                    Branch                   %37.4 -> BB44 (if true) | BB40 (if false)
BB38   <- [37]
  fs              %38.0 = FrameState         R     0x55cca91d18e0+2396: [%37.3], env=e1.3
  void                    Deopt              !v    %38.0   !
BB33   <- [32, 43]
  cp              %33.0 = Checkpoint                -> BB35 (default) | BB34 (if assume failed)
BB44   <- [39]
  val?^ | miss    %44.0 = LdVar              eR    npos, e1.3
  lgl$#-          %44.1 = IsType                   %44.0 isA int+
  void                    Assume             D     %44.1, %37.5 (Typecheck@0x55cca91d78e0[Type#87])
  int+            %44.3 = CastType           d     dn %44.0
  goto BB41
BB40   <- [39]
  prom-           %40.0 = MkArg                    unboundValue, ifelse[0x55ccabd77a80]_p4, e1.3
  goto BB41
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    ans, e1.3
  lgl$#-          %35.1 = IsType                   %35.0 isA val?~+ | miss
  void                    Assume             D     %35.1, %33.0 (Typecheck@0x55cca91d78e0[Type#91])
  val?~+ | miss   %35.3 = CastType           d     dn %35.0
  void                    Visible            v     
  val?+           %35.5 = Force!<value>            %35.3,    <val?+>
  goto BB36
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x55cca91d18e0+2491: [], env=e1.3
  void                    Deopt              !v    %34.0   !
BB41   <- [40, 44]
  (int|prom)+     %41.0 = Phi                      %44.3:BB44, %40.0:BB40
  val?            %41.1 = Extract1_1D        !v    %37.3, %41.0, e1.3   <val?+>
  lgl$#-          %41.2 = IsType                   %41.1 isA val?+
  cp              %41.3 = Checkpoint                -> BB43 (default) | BB42 (if assume failed)
BB43   <- [41]
  val?^ | miss    %43.0 = LdVar              eR    ans !upd, e1.3
  lgl$#-          %43.1 = IsType                   %43.0 isA val?~+ | miss
  void                    Assume             D     %43.1, %41.3 (Typecheck@0x55cca91d78e0[Type#89])
  val?~+ | miss   %43.3 = CastType           d     dn %43.0
  val?+           %43.4 = Force!<value>            %43.3,    <val?+>
  val?^ | miss    %43.5 = LdVar              eR    npos, e1.3
  lgl$#-          %43.6 = IsType                   %43.5 isA int+
  void                    Assume             D     %43.6, %41.3 (Typecheck@0x55cca91d78e0[Type#90])
  int+            %43.8 = CastType           d     dn %43.5
  void                    Assume             D     %41.2, %41.3 (Typecheck@0x55cca91d78e0[Type#88])
  val?+           %43.10 = CastType           d     dn %41.1
  val?+           %43.11 = Subassign1_1D      wed   %43.10, %43.4, %43.8, elided
  void                    StVar              lW    ans, %43.11, e1.3
  goto BB33
BB42   <- [41]
  fs              %42.0 = FrameState         R     0x55cca91d18e0+2447: [%41.1], env=e1.3
  void                    Deopt              !v    %42.0   !
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    no, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    len, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    npos, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    yes, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    len, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    test, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <lgl+>
  void                    Return             l     %1.3

│ ifelse[0x55ccabd77a80]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
