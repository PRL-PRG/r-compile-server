
┌──────────────────────────────────────────────────────────────────────────────┐
│ simplify2array[0x55ccb059ba60]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
simplify2array[0x55ccb059ba60]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  env             e1.2  = MkEnv              l     x=%1.1, higher=%1.0, parent=R_BaseNamespace, context 1
  val+            %1.3  = Force!<lazy>       !vr   %1.1,    <vec+>
  (int|real)$-    %1.4  = CallSafeBuiltin    wed   length(%1.3)    <int$->
  lgl$#-          %1.5  = IsType                   %1.4 isA int$-
  cp              %1.6  = Checkpoint                -> BB2 (default) | BB36 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.5, %1.6 (Typecheck@0x55ccab278ed8[Type#2])
  int$-           %2.1  = CastType           d     dn %1.4
  lgl$-           %2.2  = Not                d     %2.1, elided
  lgl$#-          %2.3  = CheckTrueFalse     e     %2.2
  void                    Branch                   %2.3 -> BB35 (if true) | BB3 (if false)
BB36   <- [1]
  fs              %36.0 = FrameState         R     0x55ccac1d94d0+91: [%1.4], env=e1.2
  void                    Deopt              !v    %36.0
BB35   <- [2]
  void                    Visible            v     
  goto BB11
BB3   <- [2]
  prom-           %3.0  = MkArg                    unboundValue, simplify2array[0x55ccb059ba60]_p4 (!refl), e1.2
  val?            %3.1  = StaticCall         !v    unknown--fromConstant[0x55ccad6a23a0](%3.0) from function(x, use.names=TRUE) <(rir::DispatchTab|... { 0 } e1.2   <int+>
  val?            %3.2  = StaticCall         !v    unique[0x55ccb0438090](%3.1) { 0 } e1.2   <int$->
  lgl$#-          %3.3  = IsType                   %3.2 isA int$-
  cp              %3.4  = Checkpoint                -> BB5 (default) | BB4 (if assume failed)
BB11   <- [35, 10]
  val?            %11.0 = Phi                      %10.0:BB10, %1.3:BB35
  void                    Return             l     %11.0
BB5   <- [3]
  void                    Assume             D     %3.3, %3.4 (Typecheck@0x55ccab278ed8[Type#9])
  int$-           %5.1  = CastType           d     dn %3.2
  void                    StVar              lW    common.len, %5.1, e1.2
  cp              %5.3  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB4   <- [3]
  fs              %4.0  = FrameState         R     0x55ccac1d94d0+215: [<blt length>, %3.2], env=e1.2
  void                    Deopt              !v    %4.0   !
BB7   <- [5]
  lgl$-           %7.0  = Eq                 d     %5.1, 1L, elided   <lgl$->
  lgl$#-          %7.1  = CheckTrueFalse     e     %7.0
  void                    Branch                   %7.1 -> BB17 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55ccac1d94d0+231: [<blt length>, %5.1], env=e1.2
  void                    Deopt              !v    %6.0   !
BB17   <- [7]
  val?^ | miss    %17.0 = LdVar              eR    length, e1.2
  lgl$#-          %17.1 = Identical                <blt length>, %17.0   <true>
  void                    Assume             D     %17.1, %5.3 (DeadBranchReached@0x55ccab278ed8[Test#20])
  val?^ | miss    %17.3 = LdVar              eR    x, e1.2
  val?            %17.4 = Force!<wrapped>    !v    %17.3, e1.2   <vec+>
  lgl$#-          %17.5 = IsType                   %17.4 isA val?+
  cp              %17.6 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB8   <- [7]
  lgl$-           %8.0  = Gt                 d     %5.1, 1L, elided   <val?_>
  lgl$#-          %8.1  = CheckTrueFalse     e     %8.0
  void                    Branch                   %8.1 -> BB12 (if true) | BB9 (if false)
BB19   <- [17]
  void                    Assume             D     %17.5, %17.6 (Typecheck@0x55ccab278ed8[Type#113])
  val?+           %19.1 = CastType           d     dn %17.4   <vec+>
  (int|real)$-    %19.2 = CallSafeBuiltin    wed   length(%19.1)    <int$->
  lgl$#-          %19.3 = IsType                   %19.2 isA int$-
  cp              %19.4 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x55ccac1d94d0+2333: [<blt length>, %17.4], env=e1.2
  void                    Deopt              !v    %18.0   !
BB12   <- [8]
  val?^ | miss    %12.0 = LdVar              eR    length, e1.2
  lgl$#-          %12.1 = Identical                <blt length>, %12.0   <@?>
  void                    Branch                   %12.1 -> BB14 (if true) | BB13 (if false)
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    x, e1.2
  void                    Visible            v     
  val?            %9.2  = Force!             !     %9.0, e1.2   <val?_>
  goto BB10
BB21   <- [19]
  void                    Assume             D     %19.3, %19.4 (Typecheck@0x55ccab278ed8[Type#114])
  int$-           %21.1 = CastType           d     dn %19.2
  void                    StVar              lW    n, %21.1, e1.2
  cp              %21.3 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x55ccac1d94d0+2355: [%19.2], env=e1.2
  void                    Deopt              !v    %20.0   !
BB14   <- [12]
  val?^ | miss    %14.0 = LdVar              eR    x, e1.2
  val?            %14.1 = Force!             !v    %14.0, e1.2   <val?_>
  lgl$#-          %14.2 = IsType                   %14.1 isA val?+
  cp              %14.3 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB13   <- [12]
  (cls|spec|blt)  %13.0 = LdFun              !v    length, e1.2
  fs              %13.1 = FrameState         R     0x55ccac1d94d0+402: [%13.0], env=e1.2
  void                    Deopt              !v    %13.1, DeadCall@0x55ccab278ed8[Call#6], %13.0   !
BB10   <- [29, 30, 9]
  val?            %10.0 = Phi                      %9.2:BB9, %29.2:BB29, %30.2:BB30
  goto BB11
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    unlist, e1.2
  lgl$#-          %23.1 = Identical                %23.0, function(x, recursive=TRUE, use.names=TRUE) <(|...
  void                    Assume             D     %23.1, %21.3 (CallTarget@0x55ccab278ed8[Call#40])
  prom-           %23.3 = MkArg                    unboundValue, simplify2array[0x55ccb059ba60]_p5, e1.2
  ct              %23.4 = PushContext        lCL   %23.3, false, unlist(x, recursive=FALSE), function(x, recursive=TRUE, use.names=TRUE) <(|..., e1.2
  val?^           %23.5 = CastType                 up %23.3
  env             e23.6 = MkEnv              l     x=%23.5, recursive=false, use.names(miss)=true, parent=R_BaseNamespace, context 1
  cls             %23.7 = MkCls                    unlist@127, e23.6
  cls             %23.8 = MkCls                    unlist>URapply@148, e23.6
  val?            %23.9 = Force!<lazy>       !vL   %23.5, e23.6   <vec+>
  val?            %23.10 = CallBuiltin        !v    islistfactor(%23.9, false) e23.6
  lgl$#-          %23.11 = CheckTrueFalse     we    %23.10
  void                    Branch                   %23.11 -> BB31 (if true) | BB24 (if false)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x55ccac1d94d0+2369: [], env=e1.2
  void                    Deopt              !v    %22.0   !
BB16   <- [14]
  void                    Assume             D     %14.2, %14.3 (Typecheck@0x55ccab278ed8[Type#19])
  val?+           %16.1 = CastType           d     dn %14.1   <val?_>
  (int|real)$-    %16.2 = CallSafeBuiltin    wed   length(%16.1)    <val?_>
  void                    StVar              lW    n, %16.2, e1.2
  (cls|spec|blt)  %16.4 = LdFun              !v    unlist, e1.2
  fs              %16.5 = FrameState         R     0x55ccac1d94d0+484: [%16.4], env=e1.2
  void                    Deopt              !v    %16.5, DeadCall@0x55ccab278ed8[Call#7], %16.4   !
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x55ccac1d94d0+443: [<blt length>, %14.1], env=e1.2
  void                    Deopt              !v    %15.0   !
BB31   <- [23]
  val?^ | miss    %31.0 = LdVar              eR    recursive, e23.6
  val?            %31.1 = Force!             !v    %31.0, e23.6   <val?_>
  lgl$#-          %31.2 = CheckTrueFalse     we    %31.1
  void                    Branch                   %31.2 -> BB34 (if true) | BB32 (if false)
BB24   <- [23]
  val?^ | miss    %24.0 = LdVar              eR    x, e23.6
  val?            %24.1 = Force!<wrapped>    !v    %24.0, e23.6   <vec+>
  val?^ | miss    %24.2 = LdVar              eR    recursive, e23.6
  val?            %24.3 = Force!<wrapped>    !v    %24.2, e23.6   <lgl$->
  val?^ | miss    %24.4 = LdVar              eR    use.names, e23.6
  val?            %24.5 = Force!<lazy>       !v    %24.4, e23.6   <lgl$->
  val?            %24.6 = CallBuiltin        !v    unlist(%24.1, %24.3, %24.5) e23.6
  val?            %24.7 = PopContext         C     %24.6, %23.4   <val?+>
  void                    StVar              lW    r, %24.7, e1.2
  lgl$#-          %24.9 = IsType                   %24.7 isA val?+
  cp              %24.10 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB34   <- [31]
  goto BB33
BB32   <- [31]
  goto BB33
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    length, e1.2
  lgl$#-          %26.1 = Identical                <blt length>, %26.0   <true>
  void                    Assume             D     %26.1, %24.10 (DeadBranchReached@0x55ccab278ed8[Test#21])
  val             %26.3 = ChkMissing         e     %24.7
  void                    Assume             D     %24.9, %24.10 (Typecheck@0x55ccab278ed8[Type#116])
  val?+           %26.5 = CastType           d     dn %24.7
  (int|real)$-    %26.6 = CallSafeBuiltin    wed   length(%26.5)    <int$->
  lgl$#-          %26.7 = IsType                   %26.6 isA int$-
  cp              %26.8 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x55ccac1d94d0+2428: [], env=e1.2
  void                    Deopt              !v    %25.0   !
BB33   <- [34, 32]
  fs              %33.0 = FrameState         R     0x55ccac1d94d0+2414: [], env=e1.2
  cls             %33.1 = Phi                      %23.7:BB32, %23.8:BB34
  void                    StVar              lW    URapply, %33.1, e23.6
  (cls|spec|blt)  %33.3 = LdFun              !v    unique, e23.6
  fs              %33.4 = FrameState         R     0x55cca9190780+178: [%33.3], env=e23.6, next=%33.0
  void                    Deopt              !v    %33.4, DeadCall@0x55cca916a920[Call#0], %33.3   !
BB28   <- [26]
  void                    Assume             D     %26.7, %26.8 (Typecheck@0x55ccab278ed8[Type#119])
  int$-           %28.1 = CastType           d     dn %26.6
  val?^ | miss    %28.2 = LdVar              eR    n, e1.2
  lgl$#-          %28.3 = IsType                   %28.2 isA int$-
  void                    Assume             D     %28.3, %26.8 (Typecheck@0x55ccab278ed8[Type#120])
  int$-           %28.5 = CastType           d     dn %28.2
  lgl$-           %28.6 = Eq                 d     %28.1, %28.5, elided   <lgl$->
  lgl$#-          %28.7 = CheckTrueFalse     e     %28.6
  void                    Branch                   %28.7 -> BB30 (if true) | BB29 (if false)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x55ccac1d94d0+2519: [%26.6], env=e1.2
  void                    Deopt              !v    %27.0   !
BB30   <- [28]
  lgl$#-          %30.0 = IsType                   %26.3 isA val?~+ | miss
  void                    Assume             D     %30.0, %26.8 (Typecheck@0x55ccab278ed8[Type#123])
  val+            %30.2 = CastType           d     dn %26.3
  void                    Visible            v     
  goto BB10
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    x, e1.2
  void                    Visible            v     
  val?            %29.2 = Force!             !     %29.0, e1.2   <val?_>
  goto BB10
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3

│ simplify2array[0x55ccb059ba60]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
