
┌──────────────────────────────────────────────────────────────────────────────┐
│ rir.compile[0x55abb45144e0]                                                  │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:  Eager                                                           │
├────── PIR Version After Optimizations
rir.compile[0x55abb45144e0]
BB0
  goto BB1
BB1   <- [0]
  int-            %1.0  = Colon              d     1L, 10L, elided   <val?_>
  int$-           %1.1  = Extract1_1D        wed   %1.0, 1, elided   <val?_>
  real$-          %1.2  = Div                d     %1.1, 1, elided   <val?_>
  real$-          %1.3  = Add                d     0, %1.2, elided   <val?_>
  env             e1.4  = MkEnv              l     i=1, x=%1.0, avg=%1.3, parent=R_GlobalEnv, context 1
  goto BB2
BB2   <- [1, 17]
  val?^ | miss    %2.0  = LdVar              eR    i, e1.4
  val?            %2.1  = Force!             !v    %2.0, e1.4   <val?_>
  lgl$#-          %2.2  = IsType                   %2.1 isA val?+
  cp              %2.3  = Checkpoint                -> BB3 (default) | BB19 (if assume failed)
BB3   <- [2]
  void                    Assume             D     %2.2, %2.3 (Typecheck@0x55abb3b414d8[Type#18])
  val?+           %3.1  = CastType           d     dn %2.1   <val?_>
  lgl             %3.2  = Lt                 wed   %3.1, 10, elided   <val?_>
  lgl$#-          %3.3  = CheckTrueFalse     we    %3.2
  void                    Branch                   %3.3 -> BB5 (if true) | BB4 (if false)
BB19   <- [2]
  fs              %19.0 = FrameState         R     0x55abb45202e0+307: [%2.1], env=e1.4
  void                    Deopt              !v    %19.0   !
BB5   <- [3]
  val?^ | miss    %5.0  = LdVar              eR    i, e1.4
  val?            %5.1  = Force!             !v    %5.0, e1.4   <val?_>
  lgl$#-          %5.2  = IsType                   %5.1 isA val?+
  cp              %5.3  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB4   <- [3]
  val?^ | miss    %4.0  = LdVar              eR    avg, e1.4
  void                    Visible            v     
  val?            %4.2  = Force!             !     %4.0, e1.4   <val?_>
  void                    Return             l     %4.2
BB7   <- [5]
  void                    Assume             D     %5.2, %5.3 (Typecheck@0x55abb3b414d8[Type#20])
  val?+           %7.1  = CastType           d     dn %5.1   <val?_>
  (real|complex)+ %7.2  = Add                wed   %7.1, 1, elided   <val?_>
  void                    StVar              lW    i, %7.2, e1.4
  val?^ | miss    %7.4  = LdVar              eR    avg, e1.4
  val?            %7.5  = Force!             !v    %7.4, e1.4   <val?_>
  val?^ | miss    %7.6  = LdVar              eR    i, e1.4
  val?            %7.7  = Force!             !v    %7.6, e1.4   <val?_>
  lgl$#-          %7.8  = IsType                   %7.7 isA val?+
  cp              %7.9  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55abb45202e0+339: [%5.1], env=e1.4
  void                    Deopt              !v    %6.0   !
BB9   <- [7]
  void                    Assume             D     %7.8, %7.9 (Typecheck@0x55abb3b414d8[Type#23])
  val?+           %9.1  = CastType           d     dn %7.7   <val?_>
  (real|complex)+ %9.2  = Sub                wed   %9.1, 1, elided   <val?_>
  cp              %9.3  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x55abb45202e0+388: [%7.5, %7.7], env=e1.4
  void                    Deopt              !v    %8.0   !
BB11   <- [9]
  lgl$#-          %11.0 = IsType                   %7.5 isA val?+
  void                    Assume             D     %11.0, %9.3 (Typecheck@0x55abb3b414d8[Type#22])
  val?+           %11.2 = CastType           d     dn %7.5   <val?_>
  (int|real|complex)+ %11.3 = Mul                wed   %11.2, %9.2, elided   <val?_>
  val?^ | miss    %11.4 = LdVar              eR    i, e1.4
  val?            %11.5 = Force!             !v    %11.4, e1.4   <val?_>
  lgl$#-          %11.6 = IsType                   %11.5 isA val?+
  cp              %11.7 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x55abb45202e0+400: [%7.5, %9.2], env=e1.4
  void                    Deopt              !v    %10.0   !
BB13   <- [11]
  void                    Assume             D     %11.6, %11.7 (Typecheck@0x55abb3b414d8[Type#26])
  val?+           %13.1 = CastType           d     dn %11.5   <val?_>
  (int|real|complex)+ %13.2 = Div                wed   %11.3, %13.1, elided   <val?_>
  val?^ | miss    %13.3 = LdVar              eR    x, e1.4
  val?            %13.4 = Force!             !v    %13.3, e1.4   <val?_>
  lgl$#-          %13.5 = IsType                   %13.4 isA val+   <@?>
  void                    Branch                   %13.5 -> BB18 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55abb45202e0+421: [%11.3, %11.5], env=e1.4
  void                    Deopt              !v    %12.0   !
BB18   <- [13]
  val?^ | miss    %18.0 = LdVar              eR    i, e1.4
  val?            %18.1 = Force!             !v    %18.0, e1.4   <val?_>
  goto BB15
BB14   <- [13]
  prom-           %14.0 = MkArg                    unboundValue, rir.compile[0x55abb45144e0]_p0, e1.4
  goto BB15
BB15   <- [14, 18]
  val?            %15.0 = Phi                      %18.1:BB18, %14.0:BB14
  val?            %15.1 = Extract1_1D        !v    %13.4, %15.0, e1.4   <val?_>
  val?^ | miss    %15.2 = LdVar              eR    i, e1.4
  val?            %15.3 = Force!             !v    %15.2, e1.4   <val?_>
  lgl$#-          %15.4 = IsType                   %15.3 isA val?+
  lgl$#-          %15.5 = IsType                   %15.1 isA val?+
  cp              %15.6 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB17   <- [15]
  void                    Assume             D     %15.5, %15.6 (Typecheck@0x55abb3b414d8[Type#31])
  val?+           %17.1 = CastType           d     dn %15.1   <val?_>
  void                    Assume             D     %15.4, %15.6 (Typecheck@0x55abb3b414d8[Type#32])
  val?+           %17.3 = CastType           d     dn %15.3   <val?_>
  (int|real|complex)+ %17.4 = Div                wed   %17.1, %17.3, elided   <val?_>
  (int|real|complex)+ %17.5 = Add                wed   %13.2, %17.4, elided   <val?_>
  void                    StVar              lW    avg, %17.5, e1.4
  goto BB2
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x55abb45202e0+507: [%13.2, %15.1, %15.3], env=e1.4
  void                    Deopt              !v    %16.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ rir.compile[0x55abb45144e0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
