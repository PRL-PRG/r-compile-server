
┌──────────────────────────────────────────────────────────────────────────────┐
│ rir.compile[0x55abb4669a00]                                                  │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:  Eager                                                           │
├────── PIR Version After Optimizations
rir.compile[0x55abb4669a00]
BB0
  goto BB1
BB1   <- [0]
  int-            %1.0  = Colon              d     1L, 10L, elided   <val?_>
  int-            %1.1  = Colon              d     1L, 10L, elided   <val?_>
  int$-           %1.2  = Extract1_1D        wed   %1.0, 1, elided   <val?_>
  int$-           %1.3  = Extract1_1D        wed   %1.0, 10, elided   <val?_>
  int$-           %1.4  = Add                d     %1.2, %1.3, elided   <val?_>
  int-            %1.5  = Subassign1_1D      wed   %1.4, %1.1, 1, elided
  env             e1.6  = MkEnv              l     i=1, x=%1.0, y=%1.5, p=1, parent=R_GlobalEnv, context 1
  goto BB2
BB2   <- [1, 15]
  val?^ | miss    %2.0  = LdVar              eR    i, e1.6
  val?            %2.1  = Force!             !v    %2.0, e1.6   <val?_>
  lgl$#-          %2.2  = IsType                   %2.1 isA val?+
  cp              %2.3  = Checkpoint                -> BB3 (default) | BB18 (if assume failed)
BB3   <- [2]
  void                    Assume             D     %2.2, %2.3 (Typecheck@0x55abb3b419a8[Type#18])
  val?+           %3.1  = CastType           d     dn %2.1   <val?_>
  lgl             %3.2  = Lt                 wed   %3.1, 10, elided   <val?_>
  lgl$#-          %3.3  = CheckTrueFalse     we    %3.2
  void                    Branch                   %3.3 -> BB5 (if true) | BB4 (if false)
BB18   <- [2]
  fs              %18.0 = FrameState         R     0x55abb4d41940+364: [%2.1], env=e1.6
  void                    Deopt              !v    %18.0   !
BB5   <- [3]
  val?^ | miss    %5.0  = LdVar              eR    i, e1.6
  val?            %5.1  = Force!             !v    %5.0, e1.6   <val?_>
  lgl$#-          %5.2  = IsType                   %5.1 isA val?+
  cp              %5.3  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB4   <- [3]
  val?^ | miss    %4.0  = LdVar              eR    y, e1.6
  void                    Visible            v     
  val?            %4.2  = Force!             !     %4.0, e1.6   <val?_>
  void                    Return             l     %4.2
BB7   <- [5]
  void                    Assume             D     %5.2, %5.3 (Typecheck@0x55abb3b419a8[Type#20])
  val?+           %7.1  = CastType           d     dn %5.1   <val?_>
  (real|complex)+ %7.2  = Add                wed   %7.1, 1, elided   <val?_>
  void                    StVar              lW    i, %7.2, e1.6
  val?^ | miss    %7.4  = LdVar              eR    x, e1.6
  val?            %7.5  = Force!             !v    %7.4, e1.6   <val?_>
  lgl$#-          %7.6  = IsType                   %7.5 isA val+   <@?>
  void                    Branch                   %7.6 -> BB17 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55abb4d41940+396: [%5.1], env=e1.6
  void                    Deopt              !v    %6.0   !
BB17   <- [7]
  val?^ | miss    %17.0 = LdVar              eR    i, e1.6
  val?            %17.1 = Force!             !v    %17.0, e1.6   <val?_>
  goto BB9
BB8   <- [7]
  prom-           %8.0  = MkArg                    unboundValue, rir.compile[0x55abb4669a00]_p1, e1.6
  goto BB9
BB9   <- [8, 17]
  val?            %9.0  = Phi                      %17.1:BB17, %8.0:BB8
  val?            %9.1  = Extract1_1D        !v    %7.5, %9.0, e1.6   <val?_>
  val?^ | miss    %9.2  = LdVar              eR    x, e1.6
  val?            %9.3  = Force!             !v    %9.2, e1.6   <val?_>
  lgl$#-          %9.4  = IsType                   %9.3 isA val+   <@?>
  void                    Branch                   %9.4 -> BB16 (if true) | BB10 (if false)
BB16   <- [9]
  val?^ | miss    %16.0 = LdVar              eR    p, e1.6
  val?            %16.1 = Force!             !v    %16.0, e1.6   <val?_>
  goto BB11
BB10   <- [9]
  prom-           %10.0 = MkArg                    unboundValue, rir.compile[0x55abb4669a00]_p0, e1.6
  goto BB11
BB11   <- [10, 16]
  val?            %11.0 = Phi                      %16.1:BB16, %10.0:BB10
  val?            %11.1 = Extract1_1D        !v    %9.3, %11.0, e1.6   <val?_>
  lgl$#-          %11.2 = IsType                   %11.1 isA val?+
  cp              %11.3 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB13   <- [11]
  lgl$#-          %13.0 = IsType                   %9.1 isA val?+
  void                    Assume             D     %13.0, %11.3 (Typecheck@0x55abb3b419a8[Type#25])
  val?+           %13.2 = CastType           d     dn %9.1   <val?_>
  void                    Assume             D     %11.2, %11.3 (Typecheck@0x55abb3b419a8[Type#29])
  val?+           %13.4 = CastType           d     dn %11.1   <val?_>
  (int|real|complex)+ %13.5 = Add                wed   %13.2, %13.4, elided   <val?_>
  val?^ | miss    %13.6 = LdVar              eR    y !upd, e1.6
  val?            %13.7 = Force!             !v    %13.6, e1.6   <val?_>
  val?^ | miss    %13.8 = LdVar              eR    i, e1.6
  val?            %13.9 = Force!             !v    %13.8, e1.6   <val?_>
  lgl$#-          %13.10 = IsType                   %13.9 isA val?+
  lgl$#-          %13.11 = IsType                   %13.7 isA val?+
  cp              %13.12 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55abb4d41940+548: [%9.1, %11.1], env=e1.6
  void                    Deopt              !v    %12.0   !
BB15   <- [13]
  void                    Assume             D     %13.11, %13.12 (Typecheck@0x55abb3b419a8[Type#31])
  val?+           %15.1 = CastType           d     dn %13.7   <val?_>
  void                    Assume             D     %13.10, %13.12 (Typecheck@0x55abb3b419a8[Type#32])
  val?+           %15.3 = CastType           d     dn %13.9   <val?_>
  val?+           %15.4 = Subassign1_1D      wed   %13.5, %15.1, %15.3, elided
  void                    StVar              lW    y, %15.4, e1.6
  val?^ | miss    %15.6 = LdVar              eR    i, e1.6
  val?            %15.7 = Force!             !v    %15.6, e1.6   <val?_>
  void                    StVar              lW    p, %15.7, e1.6
  goto BB2
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55abb4d41940+583: [%13.5, %13.7, %13.9], env=e1.6
  void                    Deopt              !v    %14.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    p, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ rir.compile[0x55abb4669a00]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
