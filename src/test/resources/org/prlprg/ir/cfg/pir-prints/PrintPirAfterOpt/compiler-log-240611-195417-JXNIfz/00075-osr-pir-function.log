
┌──────────────────────────────────────────────────────────────────────────────┐
│ osr[0x55cbf46fe340]                                                          │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
osr[0x55cbf46fe340]
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  goto BB2
BB2   <- [1, 43, 29]
  cp              %2.0  = Checkpoint                -> BB3 (default) | BB46 (if assume failed)
BB3   <- [2]
  val?^ | miss    %3.0  = LdVar              eR    notDone, e1.0
  lgl$#-          %3.1  = IsType                   %3.0 isA lgl$-
  void                    Assume             D     %3.1, %2.0 (Typecheck@0x55cbf3c29988[Type#43])
  lgl$-           %3.3  = CastType           d     dn %3.0
  lgl$-           %3.4  = AsLogical                %3.3
  lgl$#-          %3.5  = Identical                %3.4, false
  void                    Branch                   %3.5 -> BB45 (if true) | BB4 (if false)
BB46   <- [2]
  fs              %46.0 = FrameState         R     0x55cbf479a230+827: [], env=e1.0
  void                    Deopt              !v    %46.0   !
BB45   <- [3]
  goto BB5
BB4   <- [3]
  val?^ | miss    %4.0  = LdVar              eR    z, e1.0
  lgl$#-          %4.1  = IsType                   %4.0 isA real$-
  void                    Assume             D     %4.1, %2.0 (Typecheck@0x55cbf3c29988[Type#44])
  real$-          %4.3  = CastType           d     dn %4.0
  lgl$-           %4.4  = Lt                 d     %4.3, 50, elided   <lgl$->
  lgl$-           %4.5  = AsLogical                %4.4
  lgl$-           %4.6  = LAnd                     %3.4, %4.5
  goto BB5
BB5   <- [45, 4]
  lgl$-           %5.0  = Phi                      %4.6:BB4, %3.4:BB45
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB37 (if true) | BB6 (if false)
BB37   <- [5]
  val?^ | miss    %37.0 = LdVar              eR    zrzr, e1.0
  lgl$#-          %37.1 = IsType                   %37.0 isA real$-
  void                    Assume             D     %37.1, %2.0 (Typecheck@0x55cbf3c29988[Type#46])
  real$-          %37.3 = CastType           d     dn %37.0
  val?^ | miss    %37.4 = LdVar              eR    zizi, e1.0
  lgl$#-          %37.5 = IsType                   %37.4 isA real$-
  void                    Assume             D     %37.5, %2.0 (Typecheck@0x55cbf3c29988[Type#47])
  real$-          %37.7 = CastType           d     dn %37.4
  real$-          %37.8 = Sub                d     %37.3, %37.7, elided   <real$->
  val?^ | miss    %37.9 = LdVar              eR    cr, e1.0
  lgl$#-          %37.10 = IsType                   %37.9 isA real$-
  void                    Assume             D     %37.10, %2.0 (Typecheck@0x55cbf3c29988[Type#49])
  real$-          %37.12 = CastType           d     dn %37.9
  real$-          %37.13 = Add                d     %37.8, %37.12, elided   <real$->
  void                    StVar              lW    zr, %37.13, e1.0
  cp              %37.15 = Checkpoint                -> BB39 (default) | BB38 (if assume failed)
BB6   <- [5]
  val?^ | miss    %6.0  = LdVar              eR    bitwShiftL, e1.0
  lgl$#-          %6.1  = Identical                %6.0, function(a, n) <(rir::DispatchTable*)0x55cbf46|...
  void                    Assume             D     %6.1, %2.0 (CallTarget@0x55cbf3c29988[Call#0])
  val?^ | miss    %6.3  = LdVar              eR    byteAcc, e1.0
  lgl$#-          %6.4  = IsType                   %6.3 isA real$-
  void                    Assume             D     %6.4, %2.0 (Typecheck@0x55cbf3c29988[Type#69])
  real$-          %6.6  = CastType           d     dn %6.3
  int$-           %6.7  = CallSafeBuiltin    wed   bitwiseShiftL(%6.6, 1)    <int$->
  cp              %6.8  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB39   <- [37]
  real$-          %39.0 = Mul                d     2, %37.13, elided   <real$->
  val?^ | miss    %39.1 = LdVar              eR    zi, e1.0
  lgl$#-          %39.2 = IsType                   %39.1 isA real$-
  void                    Assume             D     %39.2, %37.15 (Typecheck@0x55cbf3c29988[Type#53])
  real$-          %39.4 = CastType           d     dn %39.1
  real$-          %39.5 = Mul                d     %39.0, %39.4, elided   <real$->
  val?^ | miss    %39.6 = LdVar              eR    ci, e1.0
  lgl$#-          %39.7 = IsType                   %39.6 isA real$-
  void                    Assume             D     %39.7, %37.15 (Typecheck@0x55cbf3c29988[Type#55])
  real$-          %39.9 = CastType           d     dn %39.6
  real$-          %39.10 = Add                d     %39.5, %39.9, elided   <real$->
  void                    StVar              lW    zi, %39.10, e1.0
  real$-          %39.12 = Mul                d     %37.13, %37.13, elided   <real$->
  void                    StVar              lW    zrzr, %39.12, e1.0
  real$-          %39.14 = Mul                d     %39.10, %39.10, elided   <real$->
  void                    StVar              lW    zizi, %39.14, e1.0
  real$-          %39.16 = Add                d     %39.12, %39.14, elided   <real$->
  lgl$-           %39.17 = Gt                 d     %39.16, 4, elided   <lgl$->
  lgl$#-          %39.18 = CheckTrueFalse     e     %39.17
  void                    Branch                   %39.18 -> BB44 (if true) | BB40 (if false)
BB38   <- [37]
  fs              %38.0 = FrameState         R     0x55cbf479a230+946: [], env=e1.0
  void                    Deopt              !v    %38.0   !
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    escape, e1.0
  lgl$#-          %8.1  = IsType                   %8.0 isA real$-
  void                    Assume             D     %8.1, %6.8 (Typecheck@0x55cbf3c29988[Type#71])
  real$-          %8.3  = CastType           d     dn %8.0
  real$-          %8.4  = Add                d     %6.7, %8.3, elided   <real$->
  void                    StVar              lW    byteAcc, %8.4, e1.0
  cp              %8.6  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  prom-           %7.0  = MkArg                    %6.6, osr[0x55cbf46fe340]_p0 (!refl), e1.0
  val?~           %7.1  = CastType                 up %7.0
  fs              %7.2  = FrameState         R     0x55cbf479a230+1272: [], env=e1.0
  env             e7.3  = (MkEnv)            l     n=1, a=%7.1, parent=R_BaseNamespace, context 0
  fs              %7.4  = FrameState         R     0x55cbf47d2c10+41: [%6.7], env=e7.3, next=%7.2
  void                    Deopt              !v    %7.4   !
BB44   <- [39]
  void                    StVar              lW    notDone, false, e1.0
  void                    StVar              lW    escape, 1, e1.0
  goto BB41
BB40   <- [39]
  goto BB41
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    bitNum, e1.0
  lgl$#-          %10.1 = IsType                   %10.0 isA real$-
  void                    Assume             D     %10.1, %8.6 (Typecheck@0x55cbf3c29988[Type#73])
  real$-          %10.3 = CastType           d     dn %10.0
  real$-          %10.4 = Add                d     %10.3, 1, elided   <real$->
  void                    StVar              lW    bitNum, %10.4, e1.0
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x55cbf479a230+1306: [], env=e1.0
  void                    Deopt              !v    %9.0   !
BB41   <- [40, 44]
  cp              %41.0 = Checkpoint                -> BB43 (default) | BB42 (if assume failed)
BB12   <- [10]
  lgl$-           %12.0 = Eq                 d     %10.4, 8, elided   <lgl$->
  lgl$#-          %12.1 = CheckTrueFalse     e     %12.0
  void                    Branch                   %12.1 -> BB34 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x55cbf479a230+1341: [], env=e1.0
  void                    Deopt              !v    %11.0   !
BB43   <- [41]
  val?^ | miss    %43.0 = LdVar              eR    z, e1.0
  lgl$#-          %43.1 = IsType                   %43.0 isA real$-
  void                    Assume             D     %43.1, %41.0 (Typecheck@0x55cbf3c29988[Type#67])
  real$-          %43.3 = CastType           d     dn %43.0
  real$-          %43.4 = Add                d     %43.3, 1, elided   <real$->
  void                    StVar              lW    z, %43.4, e1.0
  goto BB2
BB42   <- [41]
  fs              %42.0 = FrameState         R     0x55cbf479a230+1195: [], env=e1.0
  void                    Deopt              !v    %42.0   !
BB34   <- [12]
  val?^ | miss    %34.0 = LdVar              eR    bitwXor, e1.0
  lgl$#-          %34.1 = Identical                %34.0, function(a, b) <(rir::DispatchTable*)0x55cbf48|...
  void                    Assume             D     %34.1, %10.6 (CallTarget@0x55cbf3c29988[Call#3])
  val?^ | miss    %34.3 = LdVar              eR    sum, e1.0
  lgl$#-          %34.4 = IsType                   %34.3 isA val?~- | miss
  void                    Assume             D     %34.4, %10.6 (Typecheck@0x55cbf3c29988[Type#88])
  val?~- | miss   %34.6 = CastType           d     dn %34.3
  val?-           %34.7 = Force!<value>            %34.6,    <(int|real)$->
  int-            %34.8 = CallSafeBuiltin    wed   bitwiseXor(%34.7, %8.4)    <int$->
  lgl$#-          %34.9 = IsType                   %34.8 isA int$-
  cp              %34.10 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    x, e1.0
  lgl$#-          %13.1 = IsType                   %13.0 isA real$-
  void                    Assume             D     %13.1, %10.6 (Typecheck@0x55cbf3c29988[Type#77])
  real$-          %13.3 = CastType           d     dn %13.0
  val?^ | miss    %13.4 = LdVar              eR    size, e1.0
  lgl$#-          %13.5 = IsType                   %13.4 isA real$-
  void                    Assume             D     %13.5, %10.6 (Typecheck@0x55cbf3c29988[Type#78])
  real$-          %13.7 = CastType           d     dn %13.4
  real$-          %13.8 = Sub                d     %13.7, 1, elided   <real$->
  lgl$-           %13.9 = Eq                 d     %13.3, %13.8, elided   <lgl$->
  lgl$#-          %13.10 = CheckTrueFalse     e     %13.9
  void                    Branch                   %13.10 -> BB31 (if true) | BB14 (if false)
BB36   <- [34]
  void                    Assume             D     %34.9, %34.10 (Typecheck@0x55cbf3c29988[Type#90])
  int$-           %36.1 = CastType           d     dn %34.8
  void                    StVar              lW    sum, %36.1, e1.0
  void                    StVar              lW    byteAcc, 0, e1.0
  void                    StVar              lW    bitNum, 0, e1.0
  goto BB16
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x55cbf479a230+1605: [], env=e1.0
  prom-           %35.1 = MkArg                    %8.4, osr[0x55cbf46fe340]_p6 (!refl), e1.0
  val?~           %35.2 = CastType                 up %35.1
  prom-           %35.3 = MkArg                    %34.7, osr[0x55cbf46fe340]_p5 (!refl), e1.0
  val?~           %35.4 = CastType                 up %35.3
  env             e35.5 = (MkEnv)            l     b=%35.2, a=%35.4, parent=R_BaseNamespace, context 0
  fs              %35.6 = FrameState         R     0x55cbf485cf70+41: [%34.8], env=e35.5, next=%35.0
  void                    Deopt              !v    %35.6   !
BB31   <- [13]
  real$-          %31.0 = Sub                d     8, %10.4, elided   <real$->
  int$-           %31.1 = CallSafeBuiltin    wed   bitwiseShiftL(%8.4, %31.0)    <int$->
  void                    StVar              lW    byteAcc, %31.1, e1.0
  cp              %31.3 = Checkpoint                -> BB33 (default) | BB32 (if assume failed)
BB14   <- [13]
  goto BB15
BB16   <- [15, 36]
  cp              %16.0 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    bitwXor, e1.0
  lgl$#-          %33.1 = Identical                %33.0, function(a, b) <(rir::DispatchTable*)0x55cbf48|...
  void                    Assume             D     %33.1, %31.3 (CallTarget@0x55cbf3c29988[Call#2])
  val?^ | miss    %33.3 = LdVar              eR    sum, e1.0
  lgl$#-          %33.4 = IsType                   %33.3 isA int$-
  void                    Assume             D     %33.4, %31.3 (Typecheck@0x55cbf3c29988[Type#85])
  int$-           %33.6 = CastType           d     dn %33.3
  int$-           %33.7 = CallSafeBuiltin    wed   bitwiseXor(%33.6, %31.1)    <int$->
  void                    StVar              lW    sum, %33.7, e1.0
  void                    StVar              lW    byteAcc, 0, e1.0
  void                    StVar              lW    bitNum, 0, e1.0
  goto BB15
BB32   <- [31]
  fs              %32.0 = FrameState         R     0x55cbf479a230+1482: [], env=e1.0
  void                    Deopt              !v    %32.0   !
BB15   <- [14, 33]
  goto BB16
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    x, e1.0
  lgl$#-          %18.1 = IsType                   %18.0 isA real$-
  void                    Assume             D     %18.1, %16.0 (Typecheck@0x55cbf3c29988[Type#91])
  real$-          %18.3 = CastType           d     dn %18.0
  real$-          %18.4 = Add                d     %18.3, 1, elided   <real$->
  void                    StVar              lW    x, %18.4, e1.0
  goto BB19
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x55cbf479a230+1649: [], env=e1.0
  void                    Deopt              !v    %17.0   !
BB19   <- [18, 24]
  real$-          %19.0 = Phi                      %18.4:BB18, 0:BB24
  cp              %19.1 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    size, e1.0
  lgl$#-          %21.1 = IsType                   %21.0 isA real$-
  void                    Assume             D     %21.1, %19.1 (Typecheck@0x55cbf3c29988[Type#10])
  real$-          %21.3 = CastType           d     dn %21.0
  lgl$-           %21.4 = Lt                 d     %19.0, %21.3, elided   <lgl$->
  lgl$#-          %21.5 = CheckTrueFalse     e     %21.4
  void                    Branch                   %21.5 -> BB25 (if true) | BB22 (if false)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x55cbf479a230+206: [], env=e1.0
  void                    Deopt              !v    %20.0   !
BB25   <- [21]
  void                    StVar              lW    zrzr, 0, e1.0
  void                    StVar              lW    zi, 0, e1.0
  void                    StVar              lW    zizi, 0, e1.0
  real$-          %25.3 = Mul                d     2, %19.0, elided   <real$->
  real$-          %25.4 = Div                d     %25.3, %21.3, elided   <real$->
  real$-          %25.5 = Sub                d     %25.4, 1.5, elided   <real$->
  void                    StVar              lW    cr, %25.5, e1.0
  void                    StVar              lW    z, 0, e1.0
  void                    StVar              lW    notDone, true, e1.0
  void                    StVar              lW    escape, 0, e1.0
  real$-          %25.10 = Add                d     0, %25.5, elided   <real$->
  void                    StVar              lW    zr, %25.10, e1.0
  cp              %25.12 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB22   <- [21]
  val?^ | miss    %22.0 = LdVar              eR    y, e1.0
  lgl$#-          %22.1 = IsType                   %22.0 isA real$-
  void                    Assume             D     %22.1, %19.1 (Typecheck@0x55cbf3c29988[Type#93])
  real$-          %22.3 = CastType           d     dn %22.0
  real$-          %22.4 = Add                d     %22.3, 1, elided   <real$->
  void                    StVar              lW    y, %22.4, e1.0
  lgl$-           %22.6 = Lt                 d     %22.4, %21.3, elided   <lgl$->
  lgl$#-          %22.7 = CheckTrueFalse     e     %22.6
  void                    Branch                   %22.7 -> BB24 (if true) | BB23 (if false)
BB27   <- [25]
  real$-          %27.0 = Mul                d     2, %25.10, elided   <real$->
  real$-          %27.1 = Mul                d     %27.0, 0, elided   <real$->
  val?^ | miss    %27.2 = LdVar              eR    ci, e1.0
  lgl$#-          %27.3 = IsType                   %27.2 isA real$-
  void                    Assume             D     %27.3, %25.12 (Typecheck@0x55cbf3c29988[Type#29])
  real$-          %27.5 = CastType           d     dn %27.2
  real$-          %27.6 = Add                d     %27.1, %27.5, elided   <real$->
  void                    StVar              lW    zi, %27.6, e1.0
  real$-          %27.8 = Mul                d     %25.10, %25.10, elided   <real$->
  void                    StVar              lW    zrzr, %27.8, e1.0
  real$-          %27.10 = Mul                d     %27.6, %27.6, elided   <real$->
  void                    StVar              lW    zizi, %27.10, e1.0
  real$-          %27.12 = Add                d     %27.8, %27.10, elided   <real$->
  lgl$-           %27.13 = Gt                 d     %27.12, 4, elided   <lgl$->
  lgl$#-          %27.14 = CheckTrueFalse     e     %27.13
  void                    Branch                   %27.14 -> BB30 (if true) | BB28 (if false)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x55cbf479a230+543: [], env=e1.0
  void                    Deopt              !v    %26.0   !
BB24   <- [22]
  real$-          %24.0 = Mul                d     2, %22.4, elided   <real$->
  real$-          %24.1 = Div                d     %24.0, %21.3, elided   <real$->
  real$-          %24.2 = Sub                d     %24.1, 1, elided   <real$->
  void                    StVar              lW    ci, %24.2, e1.0
  void                    StVar              lW    x, 0, e1.0
  goto BB19
BB23   <- [22]
  val?^ | miss    %23.0 = LdVar              eR    sum, e1.0
  void                    Visible            v     
  val?            %23.2 = Force!             !     %23.0, e1.0   <val?_>
  void                    Return             l     %23.2
BB30   <- [27]
  void                    StVar              lW    notDone, false, e1.0
  void                    StVar              lW    escape, 1, e1.0
  goto BB29
BB28   <- [27]
  goto BB29
BB29   <- [28, 30]
  void                    StVar              lW    z, 1, e1.0
  goto BB2
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    byteAcc, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <real$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    sum, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <(int|real)$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    byteAcc, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <real$->
  void                    Return             l     %1.3

│ osr[0x55cbf46fe340]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
