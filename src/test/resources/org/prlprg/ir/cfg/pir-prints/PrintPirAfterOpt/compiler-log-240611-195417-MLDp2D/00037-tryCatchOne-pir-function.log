
┌──────────────────────────────────────────────────────────────────────────────┐
│ tryCatchOne[0x562e923686f0]                                                  │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
tryCatchOne[0x562e923686f0]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    3
  val?^ | miss    %1.1  = LdArg                    2
  val?^ | miss    %1.2  = LdArg                    1
  val?^ | miss    %1.3  = LdArg                    0
  env             e1.4  = MkEnv              l     expr=%1.3, name=%1.2, parentenv=%1.1, handler=%1.0, parent=?, context 1
  cls             %1.5  = MkCls                    doTryCatch, e1.4
  void                    StVar              lW    doTryCatch, %1.5, e1.4
  prom-           %1.7  = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p0, e1.4
  prom-           %1.8  = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p1, e1.4
  prom-           %1.9  = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p2, e1.4
  prom-           %1.10 = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p3, e1.4
  val?            %1.11 = StaticCall         !v    doTryCatch[0x562e91f5b0b0](%1.7, %1.8, %1.9, %1.10) from %1.5 e1.4   <vec->
  void                    StVar              lW    value, %1.11, e1.4
  lgl$#-          %1.13 = IsType                   %1.11 isA val+   <true>
  lgl$#-          %1.14 = IsType                   %1.11 isA val?-
  cp              %1.15 = Checkpoint                -> BB2 (default) | BB20 (if assume failed)
BB2   <- [1]
  val             %2.0  = ChkMissing         e     %1.11
  void                    Assume             D     %1.13, %1.15 (DeadBranchReached@0x562e91cc9e60[Test#0])
  void                    Assume             D     %1.14, %1.15 (Typecheck@0x562e91cc9e60[Type#4])
  val?-           %2.3  = CastType           d     dn %1.11   <vec->
  val?            %2.4  = Extract2_1D        wed   %2.3, 1L, elided   <(nil|vec)>
  lgl$-           %2.5  = Is                       %2.4, NULL
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB20   <- [1]
  fs              %20.0 = FrameState         R     0x562e91cf9ac0+86: [], env=e1.4
  void                    Deopt              !v    %20.0   !
BB4   <- [2]
  lgl$#-          %4.0  = CheckTrueFalse     e     %2.5
  void                    Branch                   %4.0 -> BB15 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x562e91cf9ac0+138: [%2.4], env=e1.4
  void                    Deopt              !v    %3.0   !
BB15   <- [4]
  val?            %15.0 = CallBuiltin        !v    geterrmessage() e1.4
  void                    StVar              lW    msg, %15.0, e1.4
  cp              %15.2 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    is.character, e1.4
  lgl$#-          %5.1  = Identical                <blt is.character>, %5.0   <true>
  void                    Assume             D     %5.1, %2.6 (DeadBranchReached@0x562e91cc9e60[Test#1])
  lgl$#-          %5.3  = CallSafeBuiltin    wed   is.character(%2.4)    <lgl$->
  void                    Branch                   %5.3 -> BB14 (if true) | BB6 (if false)
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    value, e1.4
  lgl$#-          %17.1 = IsType                   %17.0 isA val?~- | miss
  void                    Assume             D     %17.1, %15.2 (Typecheck@0x562e91cc9e60[Type#21])
  val?~- | miss   %17.3 = CastType           d     dn %17.0
  val?-           %17.4 = Force!<value>            %17.3,    <vec->
  lgl$#-          %17.5 = IsType                   %17.4 isA val+   <true>
  void                    Assume             D     %17.5, %15.2 (DeadBranchReached@0x562e91cc9e60[Test#7])
  val?            %17.7 = Extract2_1D        wed   %17.4, 2L, elided   <code->
  void                    StVar              lW    call, %17.7, e1.4
  cp              %17.9 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x562e91cf9ac0+585: [], env=e1.4
  void                    Deopt              !v    %16.0   !
BB14   <- [5]
  void                    StVar              lW    msg, %2.4, e1.4
  val?            %14.1 = Extract2_1D        wed   %2.3, 2L, elided   <val?_>
  void                    StVar              lW    call, %14.1, e1.4
  (cls|spec|blt)  %14.3 = LdFun              !v    simpleError, e1.4
  fs              %14.4 = FrameState         R     0x562e91cf9ac0+512: [%14.3], env=e1.4
  void                    Deopt              !v    %14.4, DeadCall@0x562e91cc9e60[Call#2], %14.3   !
BB6   <- [5]
  void                    StVar              lW    cond, %2.4, e1.4
  goto BB7
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    simpleError, e1.4
  lgl$#-          %19.1 = Identical                %19.0, function(message, call=NULL) <(rir::DispatchTa|...
  void                    Assume             D     %19.1, %17.9 (CallTarget@0x562e91cc9e60[Call#3])
  prom-           %19.3 = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p5 (!refl), e1.4
  prom-           %19.4 = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p6 (!refl), e1.4
  val?            %19.5 = StaticCall         !v    simpleError[0x562e920acc10](%19.3, %19.4) e1.4   <vec>
  void                    StVar              lW    cond, %19.5, e1.4
  goto BB7
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x562e91cf9ac0+652: [], env=e1.4
  void                    Deopt              !v    %18.0   !
BB7   <- [6, 19]
  cp              %7.0  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB9   <- [7]
  val?^ | miss    %9.0  = LdVar              eR    value, e1.4
  lgl$#-          %9.1  = IsType                   %9.0 isA val?~- | miss
  void                    Assume             D     %9.1, %7.0 (Typecheck@0x562e91cc9e60[Type#26])
  val?~- | miss   %9.3  = CastType           d     dn %9.0
  val?-           %9.4  = Force!<value>            %9.3,    <vec->
  lgl$#-          %9.5  = IsType                   %9.4 isA val+   <true>
  void                    Assume             D     %9.5, %7.0 (DeadBranchReached@0x562e91cc9e60[Test#8])
  val?            %9.7  = Extract2_1D        wed   %9.4, 3L, elided   <cls->
  cp              %9.8  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x562e91cf9ac0+703: [], env=e1.4
  void                    Deopt              !v    %8.0   !
BB11   <- [9]
  void                    Visible            v     
  (cls|spec|blt)  %11.1 = ChkFunction        e     %9.7
  prom-           %11.2 = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p4 (!refl), e1.4
  val+            %11.3 = CallSafeBuiltin          bodyCode(%11.1) 
  lgl$#-          %11.4 = Identical                %11.3, <(rir::DispatchTable*)0x562e91ca8f70>
  env             e11.5 = CallSafeBuiltin          environment(%11.1) 
  val?^           %11.6 = CastType                 up %11.2
  void                    Assume             D     %11.4, %9.8 (CallTarget@0x562e91cc9e60[Call#4])
  ct              %11.8 = PushContext        lCL   %11.2, [[(value, 3L)(cond), %11.1, e1.4
  cp              %11.9 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x562e91cf9ac0+755: [%9.7], env=e1.4
  void                    Deopt              !v    %10.0   !
BB13   <- [11]
  val?^ | miss    %13.0 = LdVar              eR    tryCatch, e11.5
  lgl$#-          %13.1 = Identical                %13.0, function(expr, ..., finally) <(rir::DispatchTa|...
  void                    Assume             D     %13.1, %11.9 (CallTarget@0x562e9139b038[Call#0])
  env             e13.3 = MkEnv              l     warning=%11.6, parent=e11.5, context 1
  prom-           %13.4 = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p7, e13.3
  cls             %13.5 = MkCls                    @Prom(6)0, e13.3
  prom-           %13.6 = MkArg                    %13.5, tryCatchOne[0x562e923686f0]_p13 (!refl), e13.3
  dots-           %13.7 = DotsList           l     error=%13.6
  val?            %13.8 = StaticCall         !     tryCatch[0x562e9212fa70](%13.4, %13.7) { 0 1n } e13.3   <str$->
  val?            %13.9 = PopContext         C     %13.8, %11.8   <str$->
  void                    Return             l     %13.9
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x562e91cf9ac0+789: [], env=e1.4
  env             e12.1 = (MkEnv)            l     warning=%11.6, parent=e11.5, context 1
  fs              %12.2 = FrameState         R     0x562e91cdc120+0: [], env=e12.1, next=%12.0
  void                    Deopt              !v    %12.2   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    expr, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(str|vec)->
  void                    NonLocalReturn     !     %1.3, e1.0
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    parentenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    handler, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    cond, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    msg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     suppressWarnings, <0x562e917c12f0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p8, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0
  (cls|spec|blt)  %1.4  = LdFun              !     paste, <0x562e900a9da8>, e1.0
  prom-           %1.5  = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p11, e1.0
  val?            %1.6  = Call               !     %1.4("warning:", %1.5) e1.0   <str$->
  void                    Return             l     %1.6
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     f, <0x562e91d7cfa0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p9, e1.0
  prom-           %1.3  = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p10, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <vec->
  void                    Return             l     %1.4
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    lhs, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <val?>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    rhs, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <(int|real)>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     conditionMessage, <0x562e91da9338>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, tryCatchOne[0x562e923686f0]_p12, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    warning, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    @Prom(6)0, e1.0
  void                    Return             l     %1.1

│ tryCatchOne[0x562e923686f0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
