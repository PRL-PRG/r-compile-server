
┌──────────────────────────────────────────────────────────────────────────────┐
│ simpleError[0x562e920acc10]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1                    │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
simpleError[0x562e920acc10]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  str-            %1.2  = CallSafeBuiltin    wed   c("simpleError", "error", "condition")    <str->
  env             e1.3  = MkEnv              l     message=%1.1, call=%1.0, class=%1.2, parent=R_BaseNamespace, context 1
  prom-           %1.4  = MkArg                    unboundValue, simpleError[0x562e920acc10]_p0, e1.3
  prom-           %1.5  = MkArg                    unboundValue, simpleError[0x562e920acc10]_p4 (!refl), e1.3
  dots-           %1.6  = DotsList           l     class=%1.5
  ct              %1.7  = PushContext        lCL   %1.4, %1.6, structure(list(message=as.character(message), |..., function(.Data, ...) <(rir::DispatchTable*)0x5|..., e1.3
  val?^           %1.8  = CastType                 up %1.4
  env             e1.9  = MkEnv              l     .Data=%1.8, ...=%1.6, parent=R_BaseNamespace, context 1
  val?            %1.10 = Force!<lazy>       !vr   %1.8,    <vec+>
  lgl$-           %1.11 = Is                       %1.10, NULL
  lgl$#-          %1.12 = CheckTrueFalse     e     %1.11
  void                    Branch                   %1.12 -> BB2 (if true) | BB3 (if false)
BB2   <- [1]
  fs              %2.0  = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  (cls|spec|blt)  %2.1  = LdFun              !v    warning, R_BaseNamespace
  fs              %2.2  = FrameState         R     0x562e91cda630+35: [%2.1], env=e1.9, next=%2.0
  void                    Deopt              !v    %2.2, DeadCall@0x562e91347208[Call#0], %2.1   !
BB3   <- [1]
  val?            %3.0  = NamedCall          !v    <blt list>(class=%1.5) e1.9   <vec$+>
  void                    StVar              lW    attrib, %3.0, e1.9
  lgl$#-          %3.2  = IsType                   %3.0 isA val?+
  cp              %3.3  = Checkpoint                -> BB4 (default) | BB36 (if assume failed)
BB4   <- [3]
  val?^ | miss    %4.0  = LdVar              eR    length, e1.9
  lgl$#-          %4.1  = Identical                <blt length>, %4.0   <true>
  void                    Assume             D     %4.1, %3.3 (DeadBranchReached@0x562e91347208[Test#0])
  val             %4.3  = ChkMissing         e     %3.0
  void                    Assume             D     %3.2, %3.3 (Typecheck@0x562e91347208[Type#1])
  val?+           %4.5  = CastType           d     dn %3.0   <vec$+>
  (int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
  lgl$#-          %4.7  = IsType                   %4.6 isA int$-
  cp              %4.8  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB36   <- [3]
  fs              %36.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %36.1 = FrameState         R     0x562e91cda630+113: [], env=e1.9, next=%36.0
  void                    Deopt              !v    %36.1   !
BB6   <- [4]
  void                    Assume             D     %4.7, %4.8 (Typecheck@0x562e91347208[Type#4])
  int$-           %6.1  = CastType           d     dn %4.6
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB9 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %5.1  = FrameState         R     0x562e91cda630+204: [%4.6], env=e1.9, next=%5.0
  void                    Deopt              !v    %5.1   !
BB9   <- [6]
  val?^ | miss    %9.0  = LdVar              eR    c, e1.9
  lgl$#-          %9.1  = Identical                <blt c>, %9.0   <true>
  void                    Assume             D     %9.1, %4.8 (DeadBranchReached@0x562e91347208[Test#1])
  str-            %9.3  = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %9.3, e1.9
  cp              %9.5  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB7   <- [6]
  goto BB8
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    names, e1.9
  lgl$#-          %11.1 = Identical                <blt names>, %11.0   <true>
  void                    Assume             D     %11.1, %9.5 (DeadBranchReached@0x562e91347208[Test#2])
  val+            %11.3 = CallSafeBuiltin    wed   names(%4.5)    <str$->
  void                    StVar              lW    attrnames, %11.3, e1.9
  cp              %11.5 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %10.1 = FrameState         R     0x562e91cda630+361: [], env=e1.9, next=%10.0
  void                    Deopt              !v    %10.1   !
BB8   <- [7, 31]
  val?^ | miss    %8.0  = LdVar              eR    .Data, e1.9
  void                    Visible            v     
  val?            %8.2  = Force!<value>      !     %8.0, e1.9   <vec>
  val?            %8.3  = PopContext         C     %8.2, %1.7   <vec>
  void                    Return             l     %8.3
BB13   <- [11]
  val?^ | miss    %13.0 = LdVar              eR    match, e1.9
  lgl$#-          %13.1 = Identical                %13.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Assume             D     %13.1, %11.5 (CallTarget@0x562e91347208[Call#5])
  val+            %13.3 = CallSafeBuiltin    wed   match(%11.3, %9.3, NA, nil)    <int$->
  lgl$#-          %13.4 = IsType                   %13.3 isA int$-
  cp              %13.5 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %12.1 = FrameState         R     0x562e91cda630+466: [], env=e1.9, next=%12.0
  void                    Deopt              !v    %12.1   !
BB15   <- [13]
  void                    Assume             D     %13.4, %13.5 (Typecheck@0x562e91347208[Type#11])
  int$-           %15.1 = CastType           d     dn %13.3
  void                    StVar              lW    m, %15.1, e1.9
  cp              %15.3 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  prom-           %14.1 = MkArg                    %9.3, simpleError[0x562e920acc10]_p5 (!refl), e1.9
  val?~           %14.2 = CastType                 up %14.1
  prom-           %14.3 = MkArg                    unboundValue, simpleError[0x562e920acc10]_p6 (!refl), e1.9
  val?^           %14.4 = CastType                 up %14.3
  fs              %14.5 = FrameState         R     0x562e91cda630+503: [], env=e1.9, next=%14.0
  env             e14.6 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%14.2, x=%14.4, parent=R_BaseNamespace, context 0
  fs              %14.7 = FrameState         R     0x562e908e8d70+69: [%13.3], env=e14.6, next=%14.5
  void                    Deopt              !v    %14.7   !
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    is.na, e1.9
  lgl$#-          %17.1 = Identical                <blt is.na>, %17.0   <true>
  void                    Assume             D     %17.1, %15.3 (DeadBranchReached@0x562e91347208[Test#3])
  lgl$-           %17.3 = CallSafeBuiltin    wed   is.na(%15.1)    <lgl$->
  lgl$-           %17.4 = Not                d     %17.3, elided   <lgl$->
  void                    StVar              lW    ok, %17.4, e1.9
  cp              %17.6 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %16.1 = FrameState         R     0x562e91cda630+517: [], env=e1.9, next=%16.0
  void                    Deopt              !v    %16.1   !
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    any, e1.9
  lgl$#-          %19.1 = Identical                <blt any>, %19.0   <true>
  void                    Assume             D     %19.1, %17.6 (DeadBranchReached@0x562e91347208[Test#4])
  val?            %19.3 = CallBuiltin        !v    any(%17.4) e1.9   <lgl$->
  lgl$#-          %19.4 = IsType                   %19.3 isA lgl$-
  cp              %19.5 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %18.1 = FrameState         R     0x562e91cda630+623: [], env=e1.9, next=%18.0
  void                    Deopt              !v    %18.1   !
BB21   <- [19]
  void                    Assume             D     %19.4, %19.5 (Typecheck@0x562e91347208[Type#17])
  lgl$-           %21.1 = CastType           d     dn %19.3
  lgl$#-          %21.2 = CheckTrueFalse     e     %21.1
  void                    Branch                   %21.2 -> BB33 (if true) | BB22 (if false)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %20.1 = FrameState         R     0x562e91cda630+714: [%19.3], env=e1.9, next=%20.0
  void                    Deopt              !v    %20.1   !
BB33   <- [21]
  val?^ | miss    %33.0 = LdVar              eR    c, e1.9
  lgl$#-          %33.1 = Identical                <blt c>, %33.0   <@?>
  void                    Branch                   %33.1 -> BB35 (if true) | BB34 (if false)
BB22   <- [21]
  val?^ | miss    %22.0 = LdVar              eR    any, e1.9
  lgl$#-          %22.1 = Identical                <blt any>, %22.0   <true>
  void                    Assume             D     %22.1, %19.5 (DeadBranchReached@0x562e91347208[Test#10])
  (cls|spec|blt)  %22.3 = LdFun              !v    [[, <0x562e8fdb2c48>, e1.9
  prom-           %22.4 = MkArg                    unboundValue, simpleError[0x562e920acc10]_p7, e1.9
  val?            %22.5 = NamedCall          !v    %22.3(%22.4, "class", exact=true) e1.9   <str->
  lgl$#-          %22.6 = IsType                   %22.5 isA val?-
  cp              %22.7 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB35   <- [33]
  fs              %35.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  str-            %35.1 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %35.1, e1.9
  (cls|spec|blt)  %35.3 = LdFun              !v    <-, e1.9
  fs              %35.4 = FrameState         R     0x562e91cda630+876: [%35.3], env=e1.9, next=%35.0
  void                    Deopt              !v    %35.4, DeadCall@0x562e91347208[Call#9], %35.3   !
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  (cls|spec|blt)  %34.1 = LdFun              !v    c, e1.9
  fs              %34.2 = FrameState         R     0x562e91cda630+758: [%34.1], env=e1.9, next=%34.0
  void                    Deopt              !v    %34.2, DeadCall@0x562e91347208[Call#8], %34.1   !
BB24   <- [22]
  void                    Assume             D     %22.6, %22.7 (Typecheck@0x562e91347208[Type#38])
  val?-           %24.1 = CastType           d     dn %22.5   <str->
  lgl-            %24.2 = Eq                 wed   %24.1, "factor", elided   <lgl->
  val?            %24.3 = CallBuiltin        !v    any(%24.2) e1.9   <lgl$->
  lgl$#-          %24.4 = IsType                   %24.3 isA lgl$-
  cp              %24.5 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %23.1 = FrameState         R     0x562e91cda630+1023: [<blt any>, %22.5], env=e1.9, next=%23.0
  void                    Deopt              !v    %23.1   !
BB26   <- [24]
  void                    Assume             D     %24.4, %24.5 (Typecheck@0x562e91347208[Type#40])
  lgl$-           %26.1 = CastType           d     dn %24.3
  lgl$-           %26.2 = AsLogical                %26.1
  lgl$#-          %26.3 = Identical                %26.2, false
  void                    Branch                   %26.3 -> BB28 (if true) | BB27 (if false)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %25.1 = FrameState         R     0x562e91cda630+1057: [%24.3], env=e1.9, next=%25.0
  void                    Deopt              !v    %25.1   !
BB28   <- [26]
  lgl$#-          %28.0 = CheckTrueFalse     e     %26.2
  void                    Branch                   %28.0 -> BB32 (if true) | BB29 (if false)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  (cls|spec|blt)  %27.1 = LdFun              !v    typeof, e1.9
  fs              %27.2 = FrameState         R     0x562e91cda630+1074: [%26.2, %27.1], env=e1.9, next=%27.0
  void                    Deopt              !v    %27.2, DeadCall@0x562e91347208[Call#14], %27.1   !
BB32   <- [28]
  fs              %32.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  (cls|spec|blt)  %32.1 = LdFun              !v    storage.mode<-, e1.9
  fs              %32.2 = FrameState         R     0x562e91cda630+1142: ["integer", %32.1], env=e1.9, next=%32.0
  void                    Deopt              !v    %32.2, DeadCall@0x562e91347208[Call#15], %32.1   !
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    c, e1.9
  lgl$#-          %29.1 = Identical                <blt c>, %29.0   <true>
  void                    Assume             D     %29.1, %24.5 (DeadBranchReached@0x562e91347208[Test#11])
  val?^ | miss    %29.3 = LdVar              eR    attributes, e1.9
  lgl$#-          %29.4 = Identical                <blt attributes>, %29.3   <true>
  void                    Assume             D     %29.4, %24.5 (DeadBranchReached@0x562e91347208[Test#12])
  val?^ | miss    %29.6 = LdVar              eR    .Data, e1.9
  val?            %29.7 = Force!<wrapped>    !v    %29.6, e1.9   <vec+>
  val?            %29.8 = CallBuiltin        !v    attributes(%29.7) e1.9   <vec$+>
  lgl$#-          %29.9 = IsType                   %29.8 isA val?+
  cp              %29.10 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB31   <- [29]
  val?^ | miss    %31.0 = LdVar              eR    attrib, e1.9
  lgl$#-          %31.1 = IsType                   %31.0 isA val?~+ | miss
  void                    Assume             D     %31.1, %29.10 (Typecheck@0x562e91347208[Type#51])
  val?~+ | miss   %31.3 = CastType           d     dn %31.0
  val?+           %31.4 = Force!<value>            %31.3,    <vec$+>
  void                    Assume             D     %29.9, %29.10 (Typecheck@0x562e91347208[Type#50])
  val?+           %31.6 = CastType           d     dn %29.8   <vec$+>
  val+            %31.7 = CallSafeBuiltin    wed   c(%31.6, %31.4)    <vec+>
  (cls|spec|blt)  %31.8 = LdFun              !v    attributes<-, <0x562e8fdb3128>, e1.9
  val?^ | miss    %31.9 = LdVar              eR    .Data, e1.9
  val?            %31.10 = Force!<wrapped>    !v    %31.9, e1.9   <vec+>
  val?            %31.11 = NamedCall          !v    %31.8(%31.10, value=%31.7) e1.9
  void                    StVar              lW    .Data, %31.11, e1.9
  goto BB8
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x562e91c9ea90+164: [], env=e1.3
  fs              %30.1 = FrameState         R     0x562e91cda630+1361: [<blt c>, %29.8], env=e1.9, next=%30.0
  void                    Deopt              !v    %30.1   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     list, <0x562e8fdc75c0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, simpleError[0x562e920acc10]_p1, e1.0
  prom-           %1.3  = MkArg                    unboundValue, simpleError[0x562e920acc10]_p3, e1.0
  val?            %1.4  = NamedCall          !     %1.1(message=%1.2, call=%1.3) e1.0   <vec+>
  void                    Return             l     %1.4
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x562e8fdc0040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, simpleError[0x562e920acc10]_p2, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    message, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    specials, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    attrnames, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    attrib, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ simpleError[0x562e920acc10]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
