
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGroupMembers[0x5629e4a84030]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getGroupMembers[0x5629e4a84030]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     group=%1.0, recursive(miss)=false, character(miss)=true, parent=<env 0x5629e1bab378>, context 1
  cls             %1.2  = MkCls                    .recMembers, e1.1
  void                    StVar              lW    .recMembers, %1.2, e1.1
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB27 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    getGeneric, <env 0x5629e1bab378>
  lgl$#-          %2.1  = Identical                %2.0, function(f, mustFind=FALSE, where, package="")|...
  void                    Assume             D     %2.1, %1.4 (CallTarget@0x5629e38886e0[Call#0])
  prom-           %2.3  = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p2, e1.1
  val?            %2.4  = StaticCall         !v    getGeneric[0x5629e549eda0](%2.3) e1.1   <cls>
  lgl$-           %2.5  = Is                       %2.4, NULL
  void                    StVar              lW    f, %2.4, e1.1
  cp              %2.7  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB27   <- [1]
  fs              %27.0 = FrameState         R     0x5629e2121500+25: [], env=e1.1
  void                    Deopt              !v    %27.0
BB4   <- [2]
  val             %4.0  = ChkMissing         e     %2.4
  lgl$#-          %4.1  = CheckTrueFalse     e     %2.5
  void                    Branch                   %4.1 -> BB26 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5629e2121500+71: [], env=e1.1
  void                    Deopt              !v    %3.0   !
BB26   <- [4]
  (cls|spec|blt)  %26.0 = LdFun              !v    warning, e1.1
  fs              %26.1 = FrameState         R     0x5629e2121500+570: [%26.0], env=e1.1
  void                    Deopt              !v    %26.1, DeadCall@0x5629e38886e0[Call#10], %26.0   !
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    is, e1.1
  lgl$#-          %5.1  = Identical                %5.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Assume             D     %5.1, %2.7 (CallTarget@0x5629e38886e0[Call#1])
  prom-           %5.3  = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p3 (!refl), e1.1
  val?            %5.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%5.3, "groupGenericFunction") e1.1   <lgl$->
  lgl$#-          %5.5  = IsType                   %5.4 isA lgl$-
  cp              %5.6  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  void                    Assume             D     %5.5, %5.6 (Typecheck@0x5629e38886e0[Type#4])
  lgl$-           %7.1  = CastType           d     dn %5.4
  lgl$-           %7.2  = Not                d     %7.1, elided
  lgl$#-          %7.3  = CheckTrueFalse     e     %7.2
  void                    Branch                   %7.3 -> BB25 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x5629e2121500+133: [%5.4], env=e1.1
  void                    Deopt              !v    %6.0   !
BB25   <- [7]
  (cls|spec|blt)  %25.0 = LdFun              !v    character, e1.1
  fs              %25.1 = FrameState         R     0x5629e2121500+533: [%25.0], env=e1.1
  void                    Deopt              !v    %25.1, DeadCall@0x5629e38886e0[Call#9], %25.0   !
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    @, <0x5629e15a3bd8>, e1.1
  prom-           %8.1  = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p4, e1.1
  prom-           %8.2  = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p5, e1.1
  val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e1.1   <vec->
  void                    StVar              lW    members, %8.3, e1.1
  val?^ | miss    %8.5  = LdVar              eR    recursive, e1.1
  val?            %8.6  = Force!<lazy>       !v    %8.5, e1.1   <lgl$->
  lgl$#-          %8.7  = CheckTrueFalse     we    %8.6
  void                    Branch                   %8.7 -> BB16 (if true) | BB9 (if false)
BB16   <- [8]
  (cls|spec|blt)  %16.0 = LdFun              !v    @, <0x5629e15a3bd8>, e1.1
  prom-           %16.1 = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p8, e1.1
  prom-           %16.2 = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p9, e1.1
  val?            %16.3 = Call               !v    %16.0(%16.1, %16.2) e1.1   <str$->
  void                    StVar              lW    where, %16.3, e1.1
  cp              %16.5 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB9   <- [8]
  goto BB10
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    identical, e1.1
  lgl$#-          %18.1 = Identical                %18.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %18.1, %16.5 (CallTarget@0x5629e38886e0[Call#4])
  prom-           %18.3 = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p10 (!refl), e1.1
  ct              %18.4 = PushContext        lCL   %18.3, "base", identical(where, "base"), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e1.1
  val?^           %18.5 = CastType                 up %18.3
  env             e18.6 = MkEnv              l     x=%18.5, y="base", num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %18.7 = CallBuiltin        !v    identical(%16.3, "base", true, true, true, true, false, true) e18.6
  val?            %18.8 = PopContext         C     %18.7, %18.4   <lgl$->
  lgl$#-          %18.9 = IsType                   %18.8 isA lgl$-
  cp              %18.10 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x5629e2121500+272: [], env=e1.1
  void                    Deopt              !v    %17.0   !
BB10   <- [9, 24]
  val?^ | miss    %10.0 = LdVar              eR    character, e1.1
  void                    Visible            v     
  val?            %10.2 = Force!<lazy>       !     %10.0, e1.1   <lgl$->
  lgl$#-          %10.3 = CheckTrueFalse     we    %10.2
  cp              %10.4 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB20   <- [18]
  void                    Assume             D     %18.9, %18.10 (Typecheck@0x5629e38886e0[Type#13])
  lgl$-           %20.1 = CastType           d     dn %18.8
  lgl$#-          %20.2 = CheckTrueFalse     e     %20.1
  void                    Branch                   %20.2 -> BB22 (if true) | BB21 (if false)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x5629e2121500+309: [%18.8], env=e1.1
  void                    Deopt              !v    %19.0   !
BB12   <- [10]
  void                    Branch                   %10.3 -> BB15 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x5629e2121500+457: [%10.3], env=e1.1
  void                    Deopt              !v    %11.0   !
BB22   <- [20]
  void                    StVar              lW    where, "methods", e1.1
  cp              %22.1 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  (cls|spec|blt)  %21.0 = LdFun              !v    .recMembers, e1.1
  fs              %21.1 = FrameState         R     0x5629e2121500+325: [%21.0], env=e1.1
  void                    Deopt              !v    %21.1, DeadCall@0x5629e38886e0[Call#5], %21.0   !
BB15   <- [12]
  val?^ | miss    %15.0 = LdVar              eR    sapply, e1.1
  lgl$#-          %15.1 = Identical                %15.0, function(X, FUN, ..., simplify=TRUE, USE.NAMES|...
  void                    Assume             D     %15.1, %10.4 (CallTarget@0x5629e38886e0[Call#8])
  prom-           %15.3 = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p6, e1.1
  cls             %15.4 = MkCls                    getGroupMembers@Prom(7)0, e1.1
  prom-           %15.5 = MkArg                    %15.4, getGroupMembers[0x5629e4a84030]_p7 (!refl), e1.1
  val?            %15.6 = StaticCall         !     sapply[0x5629e70376c0](%15.3, %15.5) { 0 1 } e1.1   <str->
  goto BB14
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    members, e1.1
  lgl$#-          %13.1 = IsType                   %13.0 isA val?~- | miss
  void                    Assume             D     %13.1, %10.4 (Typecheck@0x5629e38886e0[Type#22])
  val?~- | miss   %13.3 = CastType           d     dn %13.0
  void                    Visible            v     
  val?-           %13.5 = Force!<value>            %13.3,    <vec->
  goto BB14
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    .recMembers, e1.1
  lgl$#-          %24.1 = Identical                %24.0, %1.2
  void                    Assume             D     %24.1, %22.1 (CallTarget@0x5629e38886e0[Call#7])
  prom-           %24.3 = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p11, e1.1
  prom-           %24.4 = MkArg                    unboundValue, getGroupMembers[0x5629e4a84030]_p12, e1.1
  val?            %24.5 = StaticCall         !v    .recMembers[0x5629e8d2ad20](%24.3, %24.4) from %1.2 e1.1   <vec->
  void                    StVar              lW    members, %24.5, e1.1
  goto BB10
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x5629e2121500+391: [], env=e1.1
  void                    Deopt              !v    %23.0   !
BB14   <- [13, 15]
  val?            %14.0 = Phi                      %13.5:BB13, %15.6:BB15
  void                    Return             l     %14.0
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    group, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    groupMembers, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    members, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    getGroupMembers@Prom(7)0, e1.0
  void                    Return             l     %1.1
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    members, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec->
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .methodsNamespace, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ getGroupMembers[0x5629e4a84030]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
