
┌──────────────────────────────────────────────────────────────────────────────┐
│ .requirePackage[0x5629e50874d0]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
.requirePackage[0x5629e50874d0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     package=%1.0, mustFind(miss)=true, parent=<env 0x5629e1bab378>, context 1
  val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <str$->
  lgl$#-          %1.3  = IsType                   %1.2 isA val?-
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB20 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.3, %1.4 (Typecheck@0x5629e46ceeb8[Type#0])
  val?-           %2.1  = CastType           d     dn %1.2   <str$->
  void                    StVar              lW    value, %2.1, e1.1
  cp              %2.3  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB20   <- [1]
  fs              %20.0 = FrameState         R     0x5629e25af4f0+9: [%1.2], env=e1.1
  void                    Deopt              !v    %20.0   !
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    nzchar, e1.1
  lgl$#-          %4.1  = Identical                <blt nzchar>, %4.0   <true>
  void                    Assume             D     %4.1, %2.3 (DeadBranchReached@0x5629e46ceeb8[Test#0])
  val?^ | miss    %4.3  = LdVar              eR    package, e1.1
  val?            %4.4  = Force!<wrapped>    !v    %4.3, e1.1   <str$->
  val?            %4.5  = CallBuiltin        !v    nzchar(%4.4) e1.1   <lgl$->
  lgl$#-          %4.6  = IsType                   %4.5 isA lgl$-
  cp              %4.7  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5629e25af4f0+23: [], env=e1.1
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.6, %4.7 (Typecheck@0x5629e46ceeb8[Type#3])
  lgl$-           %6.1  = CastType           d     dn %4.5
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB13 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5629e25af4f0+114: [%4.5], env=e1.1
  void                    Deopt              !v    %5.0   !
BB13   <- [6]
  val?^ | miss    %13.0 = LdVar              eR    package, e1.1
  val?            %13.1 = Force!<wrapped>    !v    %13.0, e1.1   <str$->
  val?            %13.2 = CallBuiltin        !v    getNamespaceRegistry() e1.1
  val?            %13.3 = CallBuiltin        !v    exists(%13.1, %13.2, "any", false) e1.1
  lgl$#-          %13.4 = CheckTrueFalse     we    %13.3
  cp              %13.5 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB7   <- [6]
  goto BB8
BB15   <- [13]
  void                    Branch                   %13.4 -> BB17 (if true) | BB16 (if false)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x5629e25af4f0+183: [%13.4], env=e1.1
  void                    Deopt              !v    %14.0   !
BB8   <- [7, 19]
  cp              %8.0  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    getNamespace, e1.1
  lgl$#-          %17.1 = Identical                %17.0, function(name) <(rir::DispatchTable*)0x5629e3b|...
  void                    Assume             D     %17.1, %13.5 (CallTarget@0x5629e46ceeb8[Call#5])
  prom-           %17.3 = MkArg                    unboundValue, .requirePackage[0x5629e50874d0]_p1, e1.1
  ct              %17.4 = PushContext        lCL   %17.3, getNamespace(package), function(name) <(rir::DispatchTable*)0x5629e3b|..., e1.1
  val?^           %17.5 = CastType                 up %17.3
  env             e17.6 = MkEnv              l     name=%17.5, parent=R_BaseNamespace, context 1
  val?            %17.7 = Force!<lazy>       !vL   %17.5, e17.6   <str$+>
  val?            %17.8 = CallBuiltin        !v    getRegisteredNamespace(%17.7) e17.6   <env->
  lgl$-           %17.9 = Is                       %17.8, NULL
  void                    StVar              lW    ns, %17.8, e17.6
  val             %17.11 = ChkMissing         e     %17.8
  lgl$-           %17.12 = Not                d     %17.9, elided
  lgl$#-          %17.13 = CheckTrueFalse     e     %17.12
  void                    Branch                   %17.13 -> BB19 (if true) | BB18 (if false)
BB16   <- [15]
  (cls|spec|blt)  %16.0 = LdFun              !v    identical, e1.1
  fs              %16.1 = FrameState         R     0x5629e25af4f0+193: [%16.0], env=e1.1
  void                    Deopt              !v    %16.1, DeadCall@0x5629e46ceeb8[Call#1], %16.0   !
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    is.environment, e1.1
  lgl$#-          %10.1 = Identical                <blt is.environment>, %10.0   <true>
  void                    Assume             D     %10.1, %8.0 (DeadBranchReached@0x5629e46ceeb8[Test#1])
  val?^ | miss    %10.3 = LdVar              eR    value, e1.1
  lgl$#-          %10.4 = IsType                   %10.3 isA val?~- | miss
  void                    Assume             D     %10.4, %8.0 (Typecheck@0x5629e46ceeb8[Type#15])
  val?~- | miss   %10.6 = CastType           d     dn %10.3
  val?-           %10.7 = Force!<value>            %10.6,    <env->
  lgl$#-          %10.8 = CallSafeBuiltin    wed   is.environment(%10.7)    <lgl$->
  void                    Branch                   %10.8 -> BB12 (if true) | BB11 (if false)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x5629e25af4f0+398: [], env=e1.1
  void                    Deopt              !v    %9.0   !
BB19   <- [17]
  val?            %19.0 = PopContext         C     %17.8, %17.4   <env->
  void                    StVar              lW    value, %19.0, e1.1
  goto BB8
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x5629e25af4f0+384: [], env=e1.1
  (cls|spec|blt)  %18.1 = LdFun              !v    loadNamespace, e17.6
  fs              %18.2 = FrameState         R     0x5629e3d88730+67: [%18.1], env=e17.6, next=%18.0
  void                    Deopt              !v    %18.2, DeadCall@0x5629e3acfe28[Call#0], %18.1   !
BB12   <- [10]
  void                    Visible            v     
  void                    Return             l     %10.7
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    getOption, e1.1
  fs              %11.1 = FrameState         R     0x5629e25af4f0+525: [%11.0], env=e1.1
  void                    Deopt              !v    %11.1, DeadCall@0x5629e46ceeb8[Call#7], %11.0   !
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3

│ .requirePackage[0x5629e50874d0]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
