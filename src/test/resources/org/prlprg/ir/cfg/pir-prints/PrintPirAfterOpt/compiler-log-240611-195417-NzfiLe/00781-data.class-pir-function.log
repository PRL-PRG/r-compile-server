
┌──────────────────────────────────────────────────────────────────────────────┐
│ data.class[0x5629e9080a60]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
data.class[0x5629e9080a60]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     x=%1.0, parent=R_BaseNamespace, context 1
  val+            %1.2  = Force!<lazy>       !vr   %1.0,    <val?_>
  val?            %1.3  = CallBuiltin        !v    oldClass(%1.2) e1.1   <nil->
  void                    StVar              lW    cl, %1.3, e1.1
  lgl$#-          %1.5  = IsType                   %1.3 isA val?-
  cp              %1.6  = Checkpoint                -> BB2 (default) | BB40 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.5, %1.6 (Typecheck@0x5629e893b588[Type#4])
  val?-           %2.1  = CastType           d     dn %1.3   <nil->
  (int|real)$-    %2.2  = CallSafeBuiltin    wed   length(%2.1)    <int$->
  lgl$#-          %2.3  = IsType                   %2.2 isA int$-
  cp              %2.4  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB40   <- [1]
  fs              %40.0 = FrameState         R     0x5629e5b57770+167: [<blt length>, %1.3], env=e1.1
  void                    Deopt              !v    %40.0   !
BB4   <- [2]
  void                    Assume             D     %2.3, %2.4 (Typecheck@0x5629e893b588[Type#5])
  int$-           %4.1  = CastType           d     dn %2.2
  lgl$#-          %4.2  = CheckTrueFalse     e     %4.1
  void                    Branch                   %4.2 -> BB39 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5629e5b57770+184: [%2.2], env=e1.1
  void                    Deopt              !v    %3.0   !
BB39   <- [4]
  val-            %39.0 = ChkMissing         e     %2.1
  val?            %39.1 = Extract1_1D        wed   %2.1, 1L, elided   <val?_>
  void                    Visible            v     
  goto BB30
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    length, e1.1
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <true>
  void                    Assume             D     %5.1, %2.4 (DeadBranchReached@0x5629e893b588[Test#2])
  val?^ | miss    %5.3  = LdVar              eR    dim, e1.1
  lgl$#-          %5.4  = Identical                <blt dim>, %5.3   <true>
  void                    Assume             D     %5.4, %2.4 (DeadBranchReached@0x5629e893b588[Test#3])
  val?^ | miss    %5.6  = LdVar              eR    x, e1.1
  val?            %5.7  = Force!<wrapped>    !v    %5.6, e1.1   <val?_>
  lgl$#-          %5.8  = IsType                   %5.7 isA val?+
  cp              %5.9  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB30   <- [39, 29]
  val?            %30.0 = Phi                      %29.0:BB29, %39.1:BB39
  void                    Return             l     %30.0
BB7   <- [5]
  void                    Assume             D     %5.8, %5.9 (Typecheck@0x5629e893b588[Type#9])
  val?+           %7.1  = CastType           d     dn %5.7   <val?_>
  val+            %7.2  = CallSafeBuiltin    wed   dim(%7.1)    <(nil|int)->
  (int|real)$-    %7.3  = CallSafeBuiltin    wed   length(%7.2)    <int$->
  lgl$#-          %7.4  = IsType                   %7.3 isA int$-
  cp              %7.5  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x5629e5b57770+324: [<blt length>, <blt dim>, %5.7], env=e1.1
  void                    Deopt              !v    %6.0   !
BB9   <- [7]
  void                    Assume             D     %7.4, %7.5 (Typecheck@0x5629e893b588[Type#11])
  int$-           %9.1  = CastType           d     dn %7.3
  void                    StVar              lW    l, %9.1, e1.1
  cp              %9.3  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5629e5b57770+368: [%7.3], env=e1.1
  void                    Deopt              !v    %8.0   !
BB11   <- [9]
  lgl$-           %11.0 = Eq                 d     %9.1, 2L, elided   <lgl$->
  lgl$#-          %11.1 = CheckTrueFalse     e     %11.0
  void                    Branch                   %11.1 -> BB38 (if true) | BB12 (if false)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x5629e5b57770+382: [], env=e1.1
  void                    Deopt              !v    %10.0   !
BB38   <- [11]
  void                    Visible            v     
  goto BB29
BB12   <- [11]
  lgl$#-          %12.0 = CheckTrueFalse     e     %9.1
  void                    Branch                   %12.0 -> BB37 (if true) | BB13 (if false)
BB29   <- [38, 28]
  str$-           %29.0 = Phi                      %28.0:BB28, "matrix":BB38
  goto BB30
BB37   <- [12]
  void                    Visible            v     
  goto BB28
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    mode, e1.1
  lgl$#-          %13.1 = Identical                %13.0, function(x) <(rir::DispatchTable*)0x5629e661cb|...
  void                    Assume             D     %13.1, %9.3 (CallTarget@0x5629e893b588[Call#6])
  val?^ | miss    %13.3 = LdVar              eR    x, e1.1
  val?            %13.4 = Force!<wrapped>    !v    %13.3, e1.1   <val?->
  lgl$#-          %13.5 = IsType                   %13.4 isA val?+
  cp              %13.6 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB28   <- [37, 27]
  str$-           %28.0 = Phi                      %27.0:BB27, "array":BB37
  goto BB29
BB15   <- [13]
  void                    Assume             D     %13.5, %13.6 (Typecheck@0x5629e893b378[Type#1])
  val?+           %15.1 = CastType           d     dn %13.4   <val?->
  lgl$#-          %15.2 = CallSafeBuiltin    wed   is.expression(%15.1)    <lgl$->
  void                    Branch                   %15.2 -> BB36 (if true) | BB16 (if false)
BB14   <- [13]
  prom-           %14.0 = MkArg                    %13.4, data.class[0x5629e9080a60]_p0 (!refl), e1.1
  val?~           %14.1 = CastType                 up %14.0
  fs              %14.2 = FrameState         R     0x5629e5b57770+466: [], env=e1.1
  env             e14.3 = (MkEnv)            l     x=%14.1, parent=R_BaseNamespace, context 0
  fs              %14.4 = FrameState         R     0x5629ea44d2b0+69: [<blt is.expression>, %13.4], env=e14.3, next=%14.2
  void                    Deopt              !v    %14.4   !
BB36   <- [15]
  void                    Visible            v     
  goto BB27
BB16   <- [15]
  lgl$#-          %16.0 = CallSafeBuiltin    wed   is.call(%15.1)    <lgl$->
  void                    Branch                   %16.0 -> BB35 (if true) | BB17 (if false)
BB27   <- [36, 26]
  str$-           %27.0 = Phi                      %26.0:BB26, "expression":BB36
  goto BB28
BB35   <- [16]
  prom-           %35.0 = MkArg                    %15.1, data.class[0x5629e9080a60]_p0 (!refl), e1.1
  val?~           %35.1 = CastType                 up %35.0
  fs              %35.2 = FrameState         R     0x5629e5b57770+466: [], env=e1.1
  (cls|spec|blt)  %35.3 = LdFun              !v    deparse, R_BaseNamespace
  env             e35.4 = (MkEnv)            l     x=%35.1, parent=R_BaseNamespace, context 0
  fs              %35.5 = FrameState         R     0x5629ea44d2b0+226: [%35.3], env=e35.4, next=%35.2
  void                    Deopt              !v    %35.5, DeadCall@0x5629e893b378[Call#2], %35.3   !
BB17   <- [16]
  lgl$#-          %17.0 = CallSafeBuiltin    wed   is.symbol(%15.1)    <lgl$->
  void                    Branch                   %17.0 -> BB34 (if true) | BB18 (if false)
BB34   <- [17]
  void                    Visible            v     
  goto BB26
BB18   <- [17]
  str$-           %18.0 = CallSafeBuiltin    wed   typeof(%15.1)    <str$->
  int$-           %18.1 = Length                   %18.0
  cp              %18.2 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB26   <- [34, 25]
  str$-           %26.0 = Phi                      %25.0:BB25, "name":BB34
  goto BB27
BB20   <- [18]
  lgl$-           %20.0 = Eq                 d     %18.1, 1L, elided   <true>
  lgl$#-          %20.1 = Identical                %20.0, true
  void                    Assume             D     %20.1, %18.2 (DeadBranchReached@0x5629e893b378[Test#14])
  lgl$-           %20.3 = CallSafeBuiltin    wed   is.na(%18.0) 
  cp              %20.4 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB19   <- [18]
  prom-           %19.0 = MkArg                    %15.1, data.class[0x5629e9080a60]_p0 (!refl), e1.1
  val?~           %19.1 = CastType                 up %19.0
  fs              %19.2 = FrameState         R     0x5629e5b57770+466: [], env=e1.1
  env             e19.3 = (MkEnv)            l     tx=%18.0, x=%19.1, parent=R_BaseNamespace, context 0
  fs              %19.4 = FrameState         R     0x5629ea44d2b0+708: [%18.0], env=e19.3, next=%19.2
  void                    Deopt              !v    %19.4   !
BB22   <- [20]
  lgl$#-          %22.0 = CheckTrueFalse     e     %20.3   <false>
  void                    AssumeNot          D     %22.0, %20.4 (DeadBranchReached@0x5629e893b378[Test#23])
  lgl$-           %22.2 = Eq                 d     %18.0, double, elided
  lgl$#-          %22.3 = CheckTrueFalse     e     %22.2
  void                    Branch                   %22.3 -> BB33 (if true) | BB23 (if false)
BB21   <- [20]
  prom-           %21.0 = MkArg                    %15.1, data.class[0x5629e9080a60]_p0 (!refl), e1.1
  val?~           %21.1 = CastType                 up %21.0
  fs              %21.2 = FrameState         R     0x5629e5b57770+466: [], env=e1.1
  env             e21.3 = (MkEnv)            l     tx=%18.0, x=%21.1, parent=R_BaseNamespace, context 0
  fs              %21.4 = FrameState         R     0x5629ea44d2b0+965: [%18.0, %20.3], env=e21.3, next=%21.2
  void                    Deopt              !v    %21.4   !
BB33   <- [22]
  goto BB32
BB23   <- [22]
  lgl$-           %23.0 = Eq                 d     %18.0, integer, elided
  lgl$#-          %23.1 = CheckTrueFalse     e     %23.0
  void                    Branch                   %23.1 -> BB31 (if true) | BB24 (if false)
BB32   <- [33, 31]
  void                    Visible            v     
  goto BB25
BB31   <- [23]
  goto BB32
BB24   <- [23]
  lgl$-           %24.0 = Eq                 d     %18.0, closure, elided
  lgl$#-          %24.1 = CheckTrueFalse     e     %24.0   <false>
  void                    AssumeNot          D     %24.1, %20.4 (DeadBranchReached@0x5629e893b378[Test#26])
  lgl$-           %24.3 = Eq                 d     %18.0, builtin, elided
  lgl$#-          %24.4 = CheckTrueFalse     e     %24.3   <false>
  void                    AssumeNot          D     %24.4, %20.4 (DeadBranchReached@0x5629e893b378[Test#27])
  lgl$-           %24.6 = Eq                 d     %18.0, special, elided
  lgl$#-          %24.7 = CheckTrueFalse     e     %24.6   <false>
  void                    AssumeNot          D     %24.7, %20.4 (DeadBranchReached@0x5629e893b378[Test#28])
  void                    Visible            v     
  goto BB25
BB25   <- [24, 32]
  str$-           %25.0 = Phi                      %18.0:BB24, "numeric":BB32
  goto BB26
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <val?->
  void                    Return             l     %1.3

│ data.class[0x5629e9080a60]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
