
┌──────────────────────────────────────────────────────────────────────────────┐
│ is.primitive[0x56024d504f50]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
is.primitive[0x56024d504f50]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     x=%1.0, parent=R_BaseNamespace, context 1
  val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <cls>
  str$-           %1.3  = CallSafeBuiltin    wed   typeof(%1.2)    <str$->
  int$-           %1.4  = Length                   %1.3
  cp              %1.5  = Checkpoint                -> BB2 (default) | BB5 (if assume failed)
BB2   <- [1]
  lgl$-           %2.0  = Eq                 d     %1.4, 1L, elided   <true>
  lgl$#-          %2.1  = Identical                %2.0, true
  void                    Assume             D     %2.1, %1.5 (DeadBranchReached@0x56024d099e58[Test#1])
  lgl$-           %2.3  = CallSafeBuiltin    wed   is.na(%1.3) 
  cp              %2.4  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB5   <- [1]
  fs              %5.0  = FrameState         R     0x56024d06f610+32: [], env=e1.1
  prom-           %5.1  = MkArg                    %1.2, is.primitive[0x56024d504f50]_p0 (!refl), e1.1
  val?~           %5.2  = CastType                 up %5.1
  env             e5.3  = (MkEnv)            l     x=%5.2, parent=R_BaseNamespace, context 0
  fs              %5.4  = FrameState         R     0x56024c928b40+27: [%1.3], env=e5.3, next=%5.0
  void                    Deopt              !v    %5.4   !
BB4   <- [2]
  lgl$#-          %4.0  = CheckTrueFalse     e     %2.3   <false>
  void                    AssumeNot          D     %4.0, %2.4 (DeadBranchReached@0x56024d099e58[Test#7])
  lgl$-           %4.2  = Eq                 d     %1.3, special, elided
  lgl$#-          %4.3  = CheckTrueFalse     e     %4.2   <false>
  void                    AssumeNot          D     %4.3, %2.4 (DeadBranchReached@0x56024d099e58[Test#8])
  lgl$-           %4.5  = Eq                 d     %1.3, builtin, elided
  lgl$#-          %4.6  = CheckTrueFalse     e     %4.5   <false>
  void                    AssumeNot          D     %4.6, %2.4 (DeadBranchReached@0x56024d099e58[Test#9])
  void                    Visible            v     
  void                    Return             l     false
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x56024d06f610+240: [%1.3, %2.3], env=e1.1
  void                    Deopt              !v    %3.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3

│ is.primitive[0x56024d504f50]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
