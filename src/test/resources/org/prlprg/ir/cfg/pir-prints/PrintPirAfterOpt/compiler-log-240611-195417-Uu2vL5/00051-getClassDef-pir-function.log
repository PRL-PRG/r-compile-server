
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x5604dcde0230]                                                  │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1                     │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getClassDef[0x5604dcde0230]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    2
  val?~ | miss    %1.1  = LdArg                    1
  val?^ | miss    %1.2  = LdArg                    0
  lgl$#-          %1.3  = Identical                %1.1, missingArg
  lgl$#-          %1.4  = Identical                %1.0, missingArg
  env             e1.5  = MkEnv              l     Class=%1.2, where=%1.1, package=%1.0, inherits(miss)=missingArg, parent=<env 0x5604dbc61378>, context 1
  void                    Branch                   %1.3 -> BB2 (if true) | BB43 (if false)
BB2   <- [1]
  prom-           %2.0  = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p0, e1.5
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    where, %2.1, e1.5
  goto BB3
BB43   <- [1]
  goto BB3
BB3   <- [2, 43]
  void                    Branch                   %1.4 -> BB42 (if true) | BB4 (if false)
BB42   <- [3]
  prom-           %42.0 = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p2, e1.5
  val?^ | miss    %42.1 = CastType                 up %42.0
  void                    StArg              lW    package, %42.1, e1.5
  goto BB5
BB4   <- [3]
  goto BB5
BB5   <- [42, 4]
  void                    StArg              lW    inherits, true, e1.5
  cp              %5.1  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    .getClassesFromCache, <env 0x5604dbc61378>
  lgl$#-          %7.1  = Identical                %7.0, function(name) <(rir::DispatchTable*)0x5604dd8|...
  void                    Assume             D     %7.1, %5.1 (CallTarget@0x5604dd708060[Call#3])
  prom-           %7.3  = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p13, e1.5
  ct              %7.4  = PushContext        lCL   %7.3, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x5604dd8|..., e1.5
  val?^           %7.5  = CastType                 up %7.3
  val?^ | miss    %7.6  = LdVar              eR    .Call, <env 0x5604dbc61378>
  lgl$#-          %7.7  = Identical                <blt .Call>, %7.6   <true>
  cp              %7.8  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x5604dd868f60+0: [], env=e1.5
  void                    Deopt              !v    %6.0
BB9   <- [7]
  void                    Assume             D     %7.7, %7.8 (DeadBranchReached@0x5604dca9a958[Test#0])
  val?^ | miss    %9.1  = LdVar              eR    C_R_getClassFromCache, <env 0x5604dbc61378>
  env             e9.2  = MkEnv              l     name=%7.5, parent=<env 0x5604dbc61378>, context 1
  val?            %9.3  = Force!<value>      !v    %9.1, e9.2   <vec>
  val?^ | miss    %9.4  = LdVar              eR    name, e9.2
  val?            %9.5  = Force!<lazy>       !v    %9.4, e9.2   <str$+>
  val?^ | miss    %9.6  = LdVar              eR    .classTable, e9.2
  val?            %9.7  = Force!<wrapped>    !v    %9.6, e9.2   <env->
  val?            %9.8  = CallBuiltin        !v    .Call(%9.3, %9.5, %9.7) e9.2   <other>
  val?            %9.9  = PopContext         C     %9.8, %7.4   <(nil|other)>
  lgl$-           %9.10 = Is                       %9.9, list
  void                    StVar              lW    value, %9.9, e1.5
  cp              %9.12 = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5604dd868f60+72: [], env=e1.5
  env             e8.1  = (MkEnv)            l     name=%7.5, parent=<env 0x5604dbc61378>, context 1
  fs              %8.2  = FrameState         R     0x5604dd86d4a0+17: [<blt .Call>, %7.7], env=e8.1, next=%8.0
  void                    Deopt              !v    %8.2   !
BB11   <- [9]
  val             %11.0 = ChkMissing         e     %9.9   <(nil|other)>
  lgl$#-          %11.1 = CheckTrueFalse     e     %9.10
  lgl$-           %11.2 = Is                       %11.0, NULL
  void                    Branch                   %11.1 -> BB41 (if true) | BB12 (if false)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x5604dd868f60+86: [], env=e1.5
  void                    Deopt              !v    %10.0   !
BB41   <- [11]
  (cls|spec|blt)  %41.0 = LdFun              !v    .resolveClassList, e1.5
  fs              %41.1 = FrameState         R     0x5604dd868f60+121: [%41.0], env=e1.5
  void                    Deopt              !v    %41.1, DeadCall@0x5604dd708060[Call#4], %41.0   !
BB12   <- [11]
  lgl$#-          %12.0 = CheckTrueFalse     e     %11.2
  void                    Branch                   %12.0 -> BB15 (if true) | BB13 (if false)
BB15   <- [12]
  val?^ | miss    %15.0 = LdVar              eR    classMetaName, e1.5
  lgl$#-          %15.1 = Identical                %15.0, function(name) <(rir::DispatchTable*)0x5604dd9|...
  void                    Assume             D     %15.1, %9.12 (CallTarget@0x5604dd708060[Call#5])
  prom-           %15.3 = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p5, e1.5
  ct              %15.4 = PushContext        lCL   %15.3, classMetaName(if(>(length(Class), 1L), [[(Clas|..., function(name) <(rir::DispatchTable*)0x5604dd9|..., e1.5
  val?^           %15.5 = CastType                 up %15.3
  cp              %15.6 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB13   <- [12]
  goto BB14
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    methodsPackageMetaName, <env 0x5604dbc61378>
  lgl$#-          %17.1 = Identical                %17.0, function(prefix, name, package="") <(rir::Disp|...
  void                    Assume             D     %17.1, %15.6 (CallTarget@0x5604de65fc38[Call#0])
  env             e17.3 = MkEnv              l     name=%15.5, parent=<env 0x5604dbc61378>, context 1
  prom-           %17.4 = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p14, e17.3
  ct              %17.5 = PushContext        lCL   "C", %17.4, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|..., e17.3
  val?^           %17.6 = CastType                 up %17.4
  cp              %17.7 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x5604dd868f60+234: [], env=e1.5
  env             e16.1 = (MkEnv)            l     name=%15.5, parent=<env 0x5604dbc61378>, context 1
  fs              %16.2 = FrameState         R     0x5604dcedc6b0+0: [], env=e16.1, next=%16.0
  void                    Deopt              !v    %16.2   !
BB14   <- [13, 36]
  val?^ | miss    %14.0 = LdVar              eR    value, e1.5
  void                    Visible            v     
  val?            %14.2 = Force!<value>      !     %14.0, e1.5   <other>
  void                    Return             l     %14.2
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    .Call, <env 0x5604dbc61378>
  lgl$#-          %19.1 = Identical                <blt .Call>, %19.0   <true>
  void                    Assume             D     %19.1, %17.7 (DeadBranchReached@0x5604de6b03b0[Test#0])
  val?^ | miss    %19.3 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x5604dbc61378>
  env             e19.4 = MkEnv              l     prefix="C", name=%17.6, package(miss)="", parent=<env 0x5604dbc61378>, context 1
  val?            %19.5 = Force!<value>      !v    %19.3, e19.4   <vec>
  val?^ | miss    %19.6 = LdVar              eR    prefix, e19.4
  val?            %19.7 = Force!<value>      !v    %19.6, e19.4   <str$->
  val?^ | miss    %19.8 = LdVar              eR    name, e19.4
  val?            %19.9 = Force!<lazy>       !v    %19.8, e19.4   <str$->
  val?^ | miss    %19.10 = LdVar              eR    package, e19.4
  val?            %19.11 = Force!<lazy>       !v    %19.10, e19.4   <str$->
  val?            %19.12 = CallBuiltin        !v    .Call(%19.5, %19.7, %19.9, %19.11) e19.4   <str$->
  val?            %19.13 = PopContext         C     %19.12, %17.5   <str$->
  val?            %19.14 = PopContext         C     %19.13, %15.4   <str$->
  void                    StVar              lW    cname, %19.14, e1.5
  cp              %19.16 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x5604dd868f60+234: [], env=e1.5
  fs              %18.1 = FrameState         R     0x5604dcedc6b0+37: [], env=e17.3, next=%18.0
  env             e18.2 = (MkEnv)            l     prefix="C", name=%17.6, package(miss)="", parent=<env 0x5604dbc61378>, context 1
  fs              %18.3 = FrameState         R     0x5604dc5bc220+0: [], env=e18.2, next=%18.1
  void                    Deopt              !v    %18.3   !
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    is.character, e1.5
  lgl$#-          %21.1 = Identical                <blt is.character>, %21.0   <true>
  void                    Assume             D     %21.1, %19.16 (DeadBranchReached@0x5604dd708060[Test#1])
  val?^ | miss    %21.3 = LdVar              eR    where, e1.5
  val?            %21.4 = Force!<lazy>       !v    %21.3, e1.5   <env->
  lgl$#-          %21.5 = CallSafeBuiltin    wed   is.character(%21.4)    <lgl$->
  void                    Branch                   %21.5 -> BB40 (if true) | BB22 (if false)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x5604dd868f60+248: [], env=e1.5
  void                    Deopt              !v    %20.0   !
BB40   <- [21]
  val?^ | miss    %40.0 = LdVar              eR    where, e1.5
  val?            %40.1 = Force!             !v    %40.0, e1.5   <val?_>
  void                    StVar              lW    package, %40.1, e1.5
  goto BB23
BB22   <- [21]
  goto BB23
BB23   <- [22, 40]
  cp              %23.0 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB25   <- [23]
  val?^ | miss    %25.0 = LdVar              eR    isTRUE, e1.5
  lgl$#-          %25.1 = Identical                %25.0, function(x) <(rir::DispatchTable*)0x5604dd5185|...
  void                    Assume             D     %25.1, %23.0 (CallTarget@0x5604dd708060[Call#8])
  prom-           %25.3 = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p7, e1.5
  val?            %25.4 = StaticCall         !v    isTRUE[0x5604ddb8f2b0](%25.3) e1.5   <lgl$->
  lgl$#-          %25.5 = IsType                   %25.4 isA lgl$-
  cp              %25.6 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x5604dd868f60+378: [], env=e1.5
  void                    Deopt              !v    %24.0   !
BB27   <- [25]
  void                    Assume             D     %25.5, %25.6 (Typecheck@0x5604dd708060[Type#26])
  lgl$-           %27.1 = CastType           d     dn %25.4
  lgl$#-          %27.2 = CheckTrueFalse     e     %27.1
  void                    Branch                   %27.2 -> BB39 (if true) | BB28 (if false)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x5604dd868f60+410: [%25.4], env=e1.5
  void                    Deopt              !v    %26.0   !
BB39   <- [27]
  val?^ | miss    %39.0 = LdVar              eR    .requirePackage, e1.5
  lgl$#-          %39.1 = Identical                %39.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Assume             D     %39.1, %25.6 (CallTarget@0x5604dd708060[Call#10])
  prom-           %39.3 = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p12, e1.5
  val?            %39.4 = StaticCall         !v    .requirePackage[0x5604ddc361c0](%39.3) e1.5   <env->
  void                    StVar              lW    package, %39.4, e1.5
  goto BB29
BB28   <- [27]
  goto BB29
BB29   <- [28, 39]
  cp              %29.0 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB31   <- [29]
  val?^ | miss    %31.0 = LdVar              eR    is.environment, e1.5
  lgl$#-          %31.1 = Identical                <blt is.environment>, %31.0   <true>
  void                    Assume             D     %31.1, %29.0 (DeadBranchReached@0x5604dd708060[Test#2])
  val?^ | miss    %31.3 = LdVar              eR    package, e1.5
  val?            %31.4 = Force!<value>      !v    %31.3, e1.5   <env->
  lgl$#-          %31.5 = CallSafeBuiltin    wed   is.environment(%31.4)    <lgl$->
  cp              %31.6 = Checkpoint                -> BB33 (default) | BB32 (if assume failed)
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x5604dd868f60+472: [], env=e1.5
  void                    Deopt              !v    %30.0   !
BB33   <- [31]
  void                    Branch                   %31.5 -> BB38 (if true) | BB34 (if false)
BB32   <- [31]
  fs              %32.0 = FrameState         R     0x5604dd868f60+563: [%31.5], env=e1.5
  void                    Deopt              !v    %32.0   !
BB38   <- [33]
  val?^ | miss    %38.0 = LdVar              eR    get0, e1.5
  lgl$#-          %38.1 = Identical                %38.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Assume             D     %38.1, %31.6 (CallTarget@0x5604dd708060[Call#12])
  prom-           %38.3 = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p9, e1.5
  prom-           %38.4 = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p10, e1.5
  prom-           %38.5 = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p11, e1.5
  val?            %38.6 = StaticCall         !v    get0[0x5604ddfbff10](%38.3, %38.4, missingArg, %38.5) { 0 1 3n } e1.5   <other>
  void                    StVar              lW    value, %38.6, e1.5
  goto BB35
BB34   <- [33]
  goto BB35
BB35   <- [34, 38]
  val?^ | miss    %35.0 = LdVar              eR    value, e1.5
  val?            %35.1 = Force!<value>      !v    %35.0, e1.5   <other>
  lgl$-           %35.2 = Is                       %35.1, NULL
  lgl$#-          %35.3 = CheckTrueFalse     e     %35.2
  void                    Branch                   %35.3 -> BB37 (if true) | BB36 (if false)
BB37   <- [35]
  (cls|spec|blt)  %37.0 = LdFun              !v    get0, e1.5
  fs              %37.1 = FrameState         R     0x5604dd868f60+682: [%37.0], env=e1.5
  void                    Deopt              !v    %37.1, DeadCall@0x5604dd708060[Call#13], %37.0   !
BB36   <- [35]
  goto BB14
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     topenv, <0x5604dbe9cc20>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <env->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     parent.frame, <0x5604db76e170>, e1.0
  val?            %1.2  = Call               !     %1.1() e1.0   <env->
  void                    Return             l     %1.2
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     packageSlot, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p3, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    length, <0x5604db65aa90>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p6, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2) e1.0   <int$->
  val?            %1.4  = Gt                 !v    %1.3, 1L, e1.0   <lgl$->
  lgl$#-          %1.5  = CheckTrueFalse     we    %1.4
  void                    Branch                   %1.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    Class, e1.0
  val?            %2.1  = Force              !v    %2.0, e1.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e1.0   <val?_>
  void                    Visible            v     
  goto BB3
BB4   <- [1]
  val?^ | miss    %4.0  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e1.0   <str$->
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.2:BB4, %2.2:BB2
  void                    Return             l     %3.0
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     nzchar, <0x5604db666240>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x5604dcde0230]_p8, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <lgl$->
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    cname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    inherits, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <lgl$->
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3

│ getClassDef[0x5604dcde0230]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
