
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getGenericSigLength[0x5604dc531710]                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl1,NonRefl2,!Obj2       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
.getGenericSigLength[0x5604dc531710]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  val+            %1.3  = Force<value>             %1.0,    <lgl$->
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB14 (if assume failed)
BB2   <- [1]
  void                    Visible            v     
  lgl$-           %2.1  = AsLogical          e     %1.3
  lgl$#-          %2.2  = Identical                %2.1, false
  env             e2.3  = MkEnv              l     fdef=%1.2, env=%1.1, check=%1.0, parent=<env 0x5604dbc61378>, context 1
  void                    Branch                   %2.2 -> BB13 (if true) | BB3 (if false)
BB14   <- [1]
  env             e14.0 = (MkEnv)            l     fdef=%1.2, env=%1.1, check=%1.0, parent=<env 0x5604dbc61378>, context 1
  fs              %14.1 = FrameState         R     0x5604df81dc30+0: [], env=e14.0
  void                    Deopt              !v    %14.1   !
BB13   <- [2]
  goto BB6
BB3   <- [2]
  val?^ | miss    %3.0  = LdVar              eR    exists, <env 0x5604dbc61378>
  lgl$#-          %3.1  = Identical                %3.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %3.1, %1.4 (CallTarget@0x5604dd65e4d0[Call#1])
  prom-           %3.3  = MkArg                    unboundValue, .getGenericSigLength[0x5604dc531710]_p0 (!refl), e2.3
  val?            %3.4  = StaticCall         !     exists[0x5604e1670140](".SigLength", missingArg, %3.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
  lgl$#-          %3.5  = IsType                   %3.4 isA lgl$-
  cp              %3.6  = Checkpoint                -> BB5 (default) | BB4 (if assume failed)
BB6   <- [5, 13]
  lgl$-           %6.0  = Phi                      %5.4:BB5, %2.1:BB13
  cp              %6.1  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [3]
  void                    Assume             D     %3.5, %3.6 (Typecheck@0x5604dd65e4d0[Type#4])
  lgl$-           %5.1  = CastType           d     dn %3.4
  lgl$-           %5.2  = Not                vd    %5.1, elided
  lgl$-           %5.3  = AsLogical                %5.2
  lgl$-           %5.4  = LAnd                     %2.1, %5.3
  goto BB6
BB4   <- [3]
  fs              %4.0  = FrameState         R     0x5604df81dc30+75: [%2.1, %3.4], env=e2.3
  void                    Deopt              !v    %4.0   !
BB8   <- [6]
  lgl$#-          %8.0  = CheckTrueFalse     e     %6.0
  void                    Branch                   %8.0 -> BB12 (if true) | BB9 (if false)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x5604df81dc30+83: [%6.0], env=e2.3
  void                    Deopt              !v    %7.0   !
BB12   <- [8]
  (cls|spec|blt)  %12.0 = LdFun              !v    .setupMethodsTables, e2.3
  fs              %12.1 = FrameState         R     0x5604df81dc30+99: [%12.0], env=e2.3
  void                    Deopt              !v    %12.1, DeadCall@0x5604dd65e4d0[Call#2], %12.0   !
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    get, e2.3
  lgl$#-          %9.1  = Identical                %9.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %9.1, %6.1 (CallTarget@0x5604dd65e4d0[Call#3])
  prom-           %9.3  = MkArg                    unboundValue, .getGenericSigLength[0x5604dc531710]_p1, e2.3
  val?            %9.4  = StaticCall         !     get[0x5604dfbd9a20](".SigLength", missingArg, %9.3) { 0 2n } e2.3   <int$->
  lgl$#-          %9.5  = IsType                   %9.4 isA int$-
  cp              %9.6  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB11   <- [9]
  void                    Assume             D     %9.5, %9.6 (Typecheck@0x5604dd65e4d0[Type#7])
  int$-           %11.1 = CastType           d     dn %9.4
  void                    Return             l     %11.1
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x5604df81dc30+172: [%9.4], env=e2.3
  void                    Deopt              !v    %10.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ .getGenericSigLength[0x5604dc531710]                                         │
└──────────────────────────────────────────────────────────────────────────────┘
