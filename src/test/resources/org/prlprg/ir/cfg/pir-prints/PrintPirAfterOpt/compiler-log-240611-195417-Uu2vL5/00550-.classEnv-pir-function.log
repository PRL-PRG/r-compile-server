
┌──────────────────────────────────────────────────────────────────────────────┐
│ .classEnv[0x5604e2c44280]                                                    │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
.classEnv[0x5604e2c44280]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    2
  val?~ | miss    %1.1  = LdArg                    1
  val?^ | miss    %1.2  = LdArg                    0
  lgl$#-          %1.3  = Identical                %1.1, missingArg
  env             e1.4  = MkEnv              l     Class=%1.2, default=%1.1, mustFind=%1.0, parent=<env 0x5604dbc61378>, context 1
  void                    Branch                   %1.3 -> BB2 (if true) | BB29 (if false)
BB2   <- [1]
  prom-           %2.0  = MkArg                    unboundValue, .classEnv[0x5604e2c44280]_p0, e1.4
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    default, %2.1, e1.4
  goto BB3
BB29   <- [1]
  goto BB3
BB3   <- [2, 29]
  cp              %3.0  = Checkpoint                -> BB5 (default) | BB4 (if assume failed)
BB5   <- [3]
  val?^ | miss    %5.0  = LdVar              eR    is.character, <env 0x5604dbc61378>
  lgl$#-          %5.1  = Identical                <blt is.character>, %5.0   <true>
  void                    Assume             D     %5.1, %3.0 (DeadBranchReached@0x5604dc653810[Test#0])
  val?^           %5.3  = ChkMissing         e     %1.2
  val?            %5.4  = Force!<lazy>       !v    %5.3, e1.4   <(str|other)>
  lgl$#-          %5.5  = CallSafeBuiltin    wed   is.character(%5.4)    <lgl$->
  cp              %5.6  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB4   <- [3]
  fs              %4.0  = FrameState         R     0x5604df094820+0: [], env=e1.4
  void                    Deopt              !v    %4.0
BB7   <- [5]
  void                    Branch                   %5.5 -> BB26 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x5604df094820+91: [%5.5], env=e1.4
  void                    Deopt              !v    %6.0   !
BB26   <- [7]
  val?^ | miss    %26.0 = LdVar              eR    packageSlot, e1.4
  lgl$#-          %26.1 = Identical                %26.0, function(object) <(rir::DispatchTable*)0x5604d|...
  void                    Assume             D     %26.1, %5.6 (CallTarget@0x5604dc653810[Call#3])
  prom-           %26.3 = MkArg                    unboundValue, .classEnv[0x5604e2c44280]_p7, e1.4
  ct              %26.4 = PushContext        lCL   %26.3, packageSlot(Class), function(object) <(rir::DispatchTable*)0x5604d|..., e1.4
  val?^           %26.5 = CastType                 up %26.3
  val?^ | miss    %26.6 = LdVar              eR    attr, <env 0x5604dbc61378>
  lgl$#-          %26.7 = Identical                <blt attr>, %26.6   <true>
  cp              %26.8 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    @, <0x5604db659bd8>, e1.4
  prom-           %8.1  = MkArg                    unboundValue, .classEnv[0x5604e2c44280]_p2, e1.4
  prom-           %8.2  = MkArg                    unboundValue, .classEnv[0x5604e2c44280]_p3, e1.4
  val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e1.4   <str$->
  goto BB9
BB28   <- [26]
  void                    Assume             D     %26.7, %26.8 (DeadBranchReached@0x5604de6b0178[Test#0])
  env             e28.1 = MkEnv              l     object=%26.5, parent=<env 0x5604dbc61378>, context 1
  val?            %28.2 = Force!<lazy>       !vL   %26.5, e28.1   <(str|other)>
  val?            %28.3 = CallBuiltin        !v    attr(%28.2, "package") e28.1   <(nil|str)->
  val?            %28.4 = PopContext         C     %28.3, %26.4   <(nil|str)->
  goto BB9
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x5604df094820+181: [], env=e1.4
  env             e27.1 = (MkEnv)            l     object=%26.5, parent=<env 0x5604dbc61378>, context 1
  fs              %27.2 = FrameState         R     0x5604dd970fb0+17: [<blt attr>, %26.7], env=e27.1, next=%27.0
  void                    Deopt              !v    %27.2   !
BB9   <- [8, 28]
  val?            %9.0  = Phi                      %8.3:BB8, %28.4:BB28   <(nil|str)->
  lgl$-           %9.1  = Is                       %9.0, NULL
  void                    StVar              lW    package, %9.0, e1.4
  cp              %9.3  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB11   <- [9]
  val             %11.0 = ChkMissing         e     %9.0
  void                    Visible            v     
  lgl$#-          %11.2 = CheckTrueFalse     e     %9.1
  void                    Branch                   %11.2 -> BB14 (if true) | BB12 (if false)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x5604df094820+195: [], env=e1.4
  void                    Deopt              !v    %10.0   !
BB14   <- [11]
  val?^ | miss    %14.0 = LdVar              eR    default, e1.4
  val?            %14.1 = Force!<lazy>       !v    %14.0, e1.4   <env->
  void                    StVar              lW    value, %14.1, e1.4
  cp              %14.3 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB12   <- [11]
  val?^ | miss    %12.0 = LdVar              eR    .requirePackage, e1.4
  lgl$#-          %12.1 = Identical                %12.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Assume             D     %12.1, %9.3 (CallTarget@0x5604dc653810[Call#4])
  prom-           %12.3 = MkArg                    unboundValue, .classEnv[0x5604e2c44280]_p4 (!refl), e1.4
  val?            %12.4 = StaticCall         !     .requirePackage[0x5604e35218f0](%12.3) e1.4   <env->
  goto BB13
BB16   <- [14]
  val?^ | miss    %16.0 = LdVar              eR    getClassDef, e1.4
  lgl$#-          %16.1 = Identical                %16.0, function(Class, where=topenv(parent.frame()), |...
  void                    Assume             D     %16.1, %14.3 (CallTarget@0x5604dc653810[Call#5])
  prom-           %16.3 = MkArg                    unboundValue, .classEnv[0x5604e2c44280]_p5, e1.4
  prom-           %16.4 = MkArg                    unboundValue, .classEnv[0x5604e2c44280]_p6, e1.4
  val?            %16.5 = StaticCall         !v    getClassDef[0x5604dfc493d0](%16.3, %16.4, nil) e1.4   <other>
  lgl$-           %16.6 = Is                       %16.5, NULL
  lgl$-           %16.7 = AsLogical                %16.6
  lgl$#-          %16.8 = Identical                %16.7, false
  void                    StVar              lW    def, %16.5, e1.4
  val             %16.10 = ChkMissing         e     %16.5
  lgl$#-          %16.11 = CheckTrueFalse     e     %16.6
  void                    Branch                   %16.11 -> BB25 (if true) | BB17 (if false)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x5604df094820+285: [], env=e1.4
  void                    Deopt              !v    %15.0   !
BB13   <- [22, 12]
  val?            %13.0 = Phi                      %12.4:BB12, %22.5:BB22
  void                    Return             l     %13.0
BB25   <- [16]
  val?^ | miss    %25.0 = LdVar              eR    .GlobalEnv, e1.4
  val?            %25.1 = Force!             !v    %25.0, e1.4   <val?_>
  void                    StVar              lW    value, %25.1, e1.4
  (cls|spec|blt)  %25.3 = LdFun              !v    getClassDef, e1.4
  fs              %25.4 = FrameState         R     0x5604df094820+399: [%25.3], env=e1.4
  void                    Deopt              !v    %25.4, DeadCall@0x5604dc653810[Call#6], %25.3   !
BB17   <- [16]
  void                    Branch                   %16.8 -> BB24 (if true) | BB18 (if false)
BB24   <- [17]
  goto BB19
BB18   <- [17]
  val?^ | miss    %18.0 = LdVar              eR    mustFind, e1.4
  val?            %18.1 = Force!             !v    %18.0, e1.4   <val?_>
  lgl$-           %18.2 = AsLogical          e     %18.1
  lgl$-           %18.3 = LAnd                     %16.7, %18.2
  goto BB19
BB19   <- [24, 18]
  lgl$-           %19.0 = Phi                      %18.3:BB18, %16.7:BB24
  cp              %19.1 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB21   <- [19]
  lgl$#-          %21.0 = CheckTrueFalse     e     %19.0
  void                    Branch                   %21.0 -> BB23 (if true) | BB22 (if false)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x5604df094820+678: [%19.0], env=e1.4
  void                    Deopt              !v    %20.0   !
BB23   <- [21]
  (cls|spec|blt)  %23.0 = LdFun              !v    stop, e1.4
  fs              %23.1 = FrameState         R     0x5604df094820+694: [%23.0], env=e1.4
  void                    Deopt              !v    %23.1, DeadCall@0x5604dc653810[Call#10], %23.0   !
BB22   <- [21]
  val?^ | miss    %22.0 = LdVar              eR    value, e1.4
  lgl$#-          %22.1 = IsType                   %22.0 isA val?~- | miss
  void                    Assume             D     %22.1, %19.1 (Typecheck@0x5604dc653810[Type#34])
  val?~- | miss   %22.3 = CastType           d     dn %22.0
  void                    Visible            v     
  val?-           %22.5 = Force!<value>            %22.3,    <env->
  goto BB13
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     .requirePackage, <0x5604dbe87ab0>, e1.0
  val?            %1.2  = Call               !     %1.1("methods") e1.0   <env->
  void                    Return             l     %1.2
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3

│ .classEnv[0x5604e2c44280]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
