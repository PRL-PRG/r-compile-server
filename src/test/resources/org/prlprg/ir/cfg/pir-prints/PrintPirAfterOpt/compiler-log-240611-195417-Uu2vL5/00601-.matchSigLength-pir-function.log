
┌──────────────────────────────────────────────────────────────────────────────┐
│ .matchSigLength[0x5604e5feae50]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl2,NonRefl3,!Obj3       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
.matchSigLength[0x5604e5feae50]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    3
  val?^           %1.1  = LdArg                    2
  val?^           %1.2  = LdArg                    1
  val?^           %1.3  = LdArg                    0
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB60 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    .getGenericSigLength, <env 0x5604dbc61378>
  lgl$#-          %2.1  = Identical                %2.0, function(fdef, env=environment(fdef), check=TR|...
  void                    Assume             D     %2.1, %1.4 (CallTarget@0x5604dc1a9b60[Call#0])
  env             e2.3  = MkEnv              l     sig=%1.3, fdef=%1.2, fenv=%1.1, reset=%1.0, parent=<env 0x5604dbc61378>, context 1
  prom-           %2.4  = MkArg                    unboundValue, .matchSigLength[0x5604e5feae50]_p0, e2.3
  prom-           %2.5  = MkArg                    unboundValue, .matchSigLength[0x5604e5feae50]_p1 (!refl), e2.3
  val?            %2.6  = StaticCall         !v    .getGenericSigLength[0x5604e64ee8e0](%2.4, %2.5, true) e2.3   <(int|real)$->
  void                    StVar              lW    nargs, %2.6, e2.3
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB60   <- [1]
  env             e60.0 = (MkEnv)            l     sig=%1.3, fdef=%1.2, fenv=%1.1, reset=%1.0, parent=<env 0x5604dbc61378>, context 1
  fs              %60.1 = FrameState         R     0x5604ddb931c0+0: [], env=e60.0
  void                    Deopt              !v    %60.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    length, e2.3
  lgl$#-          %4.1  = Identical                <blt length>, %4.0   <true>
  void                    Assume             D     %4.1, %2.8 (DeadBranchReached@0x5604dc1a9b60[Test#0])
  val?^ | miss    %4.3  = LdVar              eR    sig, e2.3
  val?            %4.4  = Force!<lazy>       !v    %4.3, e2.3   <str>
  val?            %4.5  = CallBuiltin        !v    length(%4.4) e2.3   <int$->
  lgl$#-          %4.6  = IsType                   %4.5 isA int$-
  cp              %4.7  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5604ddb931c0+56: [], env=e2.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.6, %4.7 (Typecheck@0x5604dc1a9b60[Type#5])
  int$-           %6.1  = CastType           d     dn %4.5
  void                    StVar              lW    n, %6.1, e2.3
  cp              %6.3  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5604ddb931c0+147: [%4.5], env=e2.3
  void                    Deopt              !v    %5.0   !
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    packageSlot, e2.3
  lgl$#-          %8.1  = Identical                %8.0, function(object) <(rir::DispatchTable*)0x5604d|...
  void                    Assume             D     %8.1, %6.3 (CallTarget@0x5604dc1a9b60[Call#2])
  prom-           %8.3  = MkArg                    unboundValue, .matchSigLength[0x5604e5feae50]_p2, e2.3
  ct              %8.4  = PushContext        lCL   %8.3, packageSlot(sig), function(object) <(rir::DispatchTable*)0x5604d|..., e2.3
  val?^           %8.5  = CastType                 up %8.3
  val?^ | miss    %8.6  = LdVar              eR    attr, <env 0x5604dbc61378>
  lgl$#-          %8.7  = Identical                <blt attr>, %8.6   <true>
  cp              %8.8  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x5604ddb931c0+161: [], env=e2.3
  void                    Deopt              !v    %7.0   !
BB10   <- [8]
  void                    Assume             D     %8.7, %8.8 (DeadBranchReached@0x5604de6b0178[Test#0])
  env             e10.1 = MkEnv              l     object=%8.5, parent=<env 0x5604dbc61378>, context 1
  val?            %10.2 = Force!<lazy>       !vL   %8.5, e10.1   <(str|other)>
  val?            %10.3 = CallBuiltin        !v    attr(%10.2, "package") e10.1   <(nil|str)->
  val?            %10.4 = PopContext         C     %10.3, %8.4   <(nil|str)->
  void                    StVar              lW    pkgs, %10.4, e2.3
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x5604ddb931c0+193: [], env=e2.3
  env             e9.1  = (MkEnv)            l     object=%8.5, parent=<env 0x5604dbc61378>, context 1
  fs              %9.2  = FrameState         R     0x5604dd970fb0+17: [<blt attr>, %8.7], env=e9.1, next=%9.0
  void                    Deopt              !v    %9.2   !
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    n, e2.3
  lgl$#-          %12.1 = IsType                   %12.0 isA int$-
  void                    Assume             D     %12.1, %10.6 (Typecheck@0x5604dc1a9b60[Type#8])
  int$-           %12.3 = CastType           d     dn %12.0
  val?^ | miss    %12.4 = LdVar              eR    nargs, e2.3
  lgl$#-          %12.5 = IsType                   %12.4 isA val?~- | miss
  void                    Assume             D     %12.5, %10.6 (Typecheck@0x5604dc1a9b60[Type#9])
  val?~- | miss   %12.7 = CastType           d     dn %12.4
  val?-           %12.8 = Force!<value>            %12.7,    <(int|real)$->
  lgl-            %12.9 = Lt                 wed   %12.3, %12.8, elided   <lgl$->
  lgl$#-          %12.10 = IsType                   %12.9 isA lgl$-
  cp              %12.11 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x5604ddb931c0+207: [], env=e2.3
  void                    Deopt              !v    %11.0   !
BB14   <- [12]
  void                    Assume             D     %12.10, %12.11 (Typecheck@0x5604dc1a9b60[Type#10])
  lgl$-           %14.1 = CastType           d     dn %12.9
  lgl$#-          %14.2 = CheckTrueFalse     e     %14.1
  void                    Branch                   %14.2 -> BB57 (if true) | BB15 (if false)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x5604ddb931c0+236: [%12.9], env=e2.3
  void                    Deopt              !v    %13.0   !
BB57   <- [14]
  (int|real|complex)- %57.0 = Sub                wed   %12.8, %12.3, elided   <val?_>
  void                    StVar              lW    more, %57.0, e2.3
  val?^ | miss    %57.2 = LdVar              eR    c, e2.3
  lgl$#-          %57.3 = Identical                <blt c>, %57.2   <@?>
  void                    Branch                   %57.3 -> BB59 (if true) | BB58 (if false)
BB15   <- [14]
  lgl-            %15.0 = Gt                 wed   %12.3, %12.8, elided   <lgl$->
  lgl$#-          %15.1 = IsType                   %15.0 isA lgl$-
  cp              %15.2 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB59   <- [57]
  val             %59.0 = ChkMissing         e     %10.4
  (cls|spec|blt)  %59.1 = LdFun              !v    rep, e2.3
  fs              %59.2 = FrameState         R     0x5604ddb931c0+1329: [<blt c>, %10.4, %59.1], env=e2.3
  void                    Deopt              !v    %59.2, DeadCall@0x5604dc1a9b60[Call#11], %59.1   !
BB58   <- [57]
  (cls|spec|blt)  %58.0 = LdFun              !v    c, e2.3
  fs              %58.1 = FrameState         R     0x5604ddb931c0+1273: [%58.0], env=e2.3
  void                    Deopt              !v    %58.1, DeadCall@0x5604dc1a9b60[Call#9], %58.0   !
BB17   <- [15]
  void                    Assume             D     %15.1, %15.2 (Typecheck@0x5604dc1a9b60[Type#13])
  lgl$-           %17.1 = CastType           d     dn %15.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB19 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x5604ddb931c0+276: [%15.0], env=e2.3
  void                    Deopt              !v    %16.0   !
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    all, e2.3
  lgl$#-          %19.1 = Identical                <blt all>, %19.0   <@?>
  void                    Branch                   %19.1 -> BB21 (if true) | BB20 (if false)
BB18   <- [17]
  val             %18.0 = ChkMissing         e     %10.4
  lgl$#-          %18.1 = IsType                   %18.0 isA val?~- | miss
  void                    Assume             D     %18.1, %15.2 (Typecheck@0x5604dc1a9b60[Type#84])
  val-            %18.3 = CastType           d     dn %18.0   <(nil|str)->
  val?^ | miss    %18.4 = LdVar              eR    packageSlot<-, e2.3
  lgl$#-          %18.5 = Identical                %18.4, function(object, value) <(rir::DispatchTable*)|...
  void                    Assume             D     %18.5, %15.2 (CallTarget@0x5604dc1a9b60[Call#17])
  val?^ | miss    %18.7 = LdVar              eR    sig, e2.3
  val?            %18.8 = Force!<wrapped>    !v    %18.7, e2.3   <str>
  ct              %18.9 = PushContext        lCL   %18.8, %18.3, packageSlot<-(sig, value=pkgs), function(object, value) <(rir::DispatchTable*)|..., e2.3
  env             e18.10 = MkEnv              l     object=%18.8, value=%18.3, parent=<env 0x5604dbc61378>, context 1
  (cls|spec|blt)  %18.11 = LdFun              !v    attr<-, <0x5604db65de08>, <env 0x5604dbc61378>
  val?            %18.12 = NamedCall          !v    %18.11(%18.8, "package", value=%18.3) e18.10   <str>
  void                    StVar              lW    object, %18.12, e18.10
  val             %18.14 = ChkMissing         e     %18.12
  val?            %18.15 = PopContext         C     %18.12, %18.9   <str>
  void                    StVar              lW    sig, %18.15, e2.3
  val             %18.17 = ChkMissing         e     %18.15
  void                    Visible            v     
  void                    Return             l     %18.15
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    sig, e2.3
  val?            %21.1 = Force!             !v    %21.0, e2.3   <val?_>
  lgl$#-          %21.2 = IsType                   %21.1 isA val+   <@?>
  void                    Branch                   %21.2 -> BB52 (if true) | BB22 (if false)
BB20   <- [19]
  (cls|spec|blt)  %20.0 = LdFun              !v    all, e2.3
  fs              %20.1 = FrameState         R     0x5604ddb931c0+320: [%20.0], env=e2.3
  void                    Deopt              !v    %20.1, DeadCall@0x5604dc1a9b60[Call#3], %20.0   !
BB52   <- [21]
  val?^ | miss    %52.0 = LdVar              eR    nargs, e2.3
  val?            %52.1 = Force!             !v    %52.0, e2.3   <val?_>
  lgl$#-          %52.2 = IsType                   %52.1 isA val?+
  cp              %52.3 = Checkpoint                -> BB54 (default) | BB53 (if assume failed)
BB22   <- [21]
  prom-           %22.0 = MkArg                    unboundValue, .matchSigLength[0x5604e5feae50]_p3, e2.3
  goto BB23
BB54   <- [52]
  void                    Assume             D     %52.2, %52.3 (Typecheck@0x5604dc1a9b60[Type#30])
  val?+           %54.1 = CastType           d     dn %52.1   <val?_>
  (real|complex)+ %54.2 = Add                wed   %54.1, 1, elided   <val?_>
  val?^ | miss    %54.3 = LdVar              eR    n, e2.3
  val?            %54.4 = Force!             !v    %54.3, e2.3   <val?_>
  lgl$#-          %54.5 = IsType                   %54.4 isA val?+
  cp              %54.6 = Checkpoint                -> BB56 (default) | BB55 (if assume failed)
BB53   <- [52]
  fs              %53.0 = FrameState         R     0x5604ddb931c0+406: [<blt all>, %21.1, %52.1], env=e2.3
  void                    Deopt              !v    %53.0   !
BB23   <- [56, 22]
  (int|real|complex|prom)+ %23.0 = Phi                      %56.2:BB56, %22.0:BB22
  cp              %23.1 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB56   <- [54]
  void                    Assume             D     %54.5, %54.6 (Typecheck@0x5604dc1a9b60[Type#32])
  val?+           %56.1 = CastType           d     dn %54.4   <val?_>
  (int|real|complex)+ %56.2 = Colon              wed   %54.2, %56.1, elided   <val?_>
  goto BB23
BB55   <- [54]
  fs              %55.0 = FrameState         R     0x5604ddb931c0+433: [<blt all>, %21.1, %54.2, %54.4], env=e2.3
  void                    Deopt              !v    %55.0   !
BB25   <- [23]
  lgl$#-          %25.0 = IsType                   %21.1 isA val?+
  void                    Assume             D     %25.0, %23.1 (Typecheck@0x5604dc1a9b60[Type#25])
  val?+           %25.2 = CastType           d     dn %21.1   <val?_>
  val?            %25.3 = Extract1_1D        wed   %25.2, %23.0, elided   <val?_>
  lgl$#-          %25.4 = IsType                   %25.3 isA val?+
  cp              %25.5 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x5604ddb931c0+444: [<blt all>, %21.1, %23.0], env=e2.3
  void                    Deopt              !v    %24.0   !
BB27   <- [25]
  void                    Assume             D     %25.4, %25.5 (Typecheck@0x5604dc1a9b60[Type#34])
  val?+           %27.1 = CastType           d     dn %25.3   <val?_>
  lgl             %27.2 = Eq                 wed   %27.1, "ANY", elided   <val?_>
  val?            %27.3 = CallBuiltin        !v    all(%27.2) e2.3   <val?_>
  lgl$#-          %27.4 = CheckTrueFalse     we    %27.3
  void                    Branch                   %27.4 -> BB51 (if true) | BB28 (if false)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x5604ddb931c0+445: [<blt all>, %25.3], env=e2.3
  void                    Deopt              !v    %26.0   !
BB51   <- [27]
  val?^ | miss    %51.0 = LdVar              eR    nargs, e2.3
  val?            %51.1 = Force!             !v    %51.0, e2.3   <val?_>
  (cls|spec|blt)  %51.2 = LdFun              !v    length<-, e2.3
  fs              %51.3 = FrameState         R     0x5604ddb931c0+1021: [%51.1, %51.2], env=e2.3
  void                    Deopt              !v    %51.3, DeadCall@0x5604dc1a9b60[Call#7], %51.2   !
BB28   <- [27]
  val?^ | miss    %28.0 = LdVar              eR    sig, e2.3
  val?            %28.1 = Force!             !v    %28.0, e2.3   <val?_>
  lgl$#-          %28.2 = IsType                   %28.1 isA val+   <@?>
  void                    Branch                   %28.2 -> BB50 (if true) | BB29 (if false)
BB50   <- [28]
  val?^ | miss    %50.0 = LdVar              eR    n, e2.3
  val?            %50.1 = Force!             !v    %50.0, e2.3   <val?_>
  goto BB30
BB29   <- [28]
  prom-           %29.0 = MkArg                    unboundValue, .matchSigLength[0x5604e5feae50]_p4, e2.3
  goto BB30
BB30   <- [50, 29]
  val?            %30.0 = Phi                      %50.1:BB50, %29.0:BB29
  val?            %30.1 = Extract2_1D        !v    %28.1, %30.0, e2.3   <val?_>
  lgl$#-          %30.2 = IsType                   %30.1 isA val?+
  cp              %30.3 = Checkpoint                -> BB32 (default) | BB31 (if assume failed)
BB32   <- [30]
  void                    Assume             D     %30.2, %30.3 (Typecheck@0x5604dc1a9b60[Type#40])
  val?+           %32.1 = CastType           d     dn %30.1   <val?_>
  lgl             %32.2 = Eq                 wed   %32.1, "ANY", elided   <val?_>
  lgl$#-          %32.3 = CheckTrueFalse     we    %32.2   <@?>
  void                    Branch                   %32.3 -> BB37 (if true) | BB33 (if false)
BB31   <- [30]
  fs              %31.0 = FrameState         R     0x5604ddb931c0+551: [%30.1], env=e2.3
  void                    Deopt              !v    %31.0   !
BB37   <- [32]
  val?^ | miss    %37.0 = LdVar              eR    n, e2.3
  val?            %37.1 = Force!             !v    %37.0, e2.3   <val?_>
  lgl$#-          %37.2 = IsType                   %37.1 isA val?+
  cp              %37.3 = Checkpoint                -> BB39 (default) | BB38 (if assume failed)
BB33   <- [32]
  goto BB34
BB39   <- [37]
  void                    Assume             D     %37.2, %37.3 (Typecheck@0x5604dc1a9b60[Type#42])
  val?+           %39.1 = CastType           d     dn %37.1   <val?_>
  (real|complex)+ %39.2 = Sub                wed   %39.1, 1, elided   <val?_>
  void                    StVar              lW    n, %39.2, e2.3
  goto BB40
BB38   <- [37]
  fs              %38.0 = FrameState         R     0x5604ddb931c0+589: [%37.1], env=e2.3
  void                    Deopt              !v    %38.0   !
BB34   <- [33, 45]
  val?^ | miss    %34.0 = LdVar              eR    reset, e2.3
  val?            %34.1 = Force!             !v    %34.0, e2.3   <val?_>
  lgl$#-          %34.2 = CheckTrueFalse     we    %34.1
  void                    Branch                   %34.2 -> BB36 (if true) | BB35 (if false)
BB40   <- [39, 48]
  val?^ | miss    %40.0 = LdVar              eR    sig, e2.3
  val?            %40.1 = Force!             !v    %40.0, e2.3   <val?_>
  lgl$#-          %40.2 = IsType                   %40.1 isA val+   <@?>
  void                    Branch                   %40.2 -> BB49 (if true) | BB41 (if false)
BB36   <- [34]
  (cls|spec|blt)  %36.0 = LdFun              !v    .resetSigLength, e2.3
  fs              %36.1 = FrameState         R     0x5604ddb931c0+769: [%36.0], env=e2.3
  void                    Deopt              !v    %36.1, DeadCall@0x5604dc1a9b60[Call#4], %36.0   !
BB35   <- [34]
  val?^ | miss    %35.0 = LdVar              eR    n, e2.3
  val?            %35.1 = Force!             !v    %35.0, e2.3   <val?_>
  (cls|spec|blt)  %35.2 = LdFun              !v    length<-, e2.3
  fs              %35.3 = FrameState         R     0x5604ddb931c0+821: [%35.1, %35.2], env=e2.3
  void                    Deopt              !v    %35.3, DeadCall@0x5604dc1a9b60[Call#5], %35.2   !
BB49   <- [40]
  val?^ | miss    %49.0 = LdVar              eR    n, e2.3
  val?            %49.1 = Force!             !v    %49.0, e2.3   <val?_>
  goto BB42
BB41   <- [40]
  prom-           %41.0 = MkArg                    unboundValue, .matchSigLength[0x5604e5feae50]_p5, e2.3
  goto BB42
BB42   <- [41, 49]
  val?            %42.0 = Phi                      %49.1:BB49, %41.0:BB41
  val?            %42.1 = Extract2_1D        !v    %40.1, %42.0, e2.3   <val?_>
  lgl$#-          %42.2 = IsType                   %42.1 isA val?+
  cp              %42.3 = Checkpoint                -> BB44 (default) | BB43 (if assume failed)
BB44   <- [42]
  void                    Assume             D     %42.2, %42.3 (Typecheck@0x5604dc1a9b60[Type#47])
  val?+           %44.1 = CastType           d     dn %42.1   <val?_>
  lgl             %44.2 = Eq                 wed   %44.1, "ANY", elided   <val?_>
  lgl$#-          %44.3 = CheckTrueFalse     we    %44.2
  void                    Branch                   %44.3 -> BB46 (if true) | BB45 (if false)
BB43   <- [42]
  fs              %43.0 = FrameState         R     0x5604ddb931c0+675: [%42.1], env=e2.3
  void                    Deopt              !v    %43.0   !
BB46   <- [44]
  val?^ | miss    %46.0 = LdVar              eR    n, e2.3
  val?            %46.1 = Force!             !v    %46.0, e2.3   <val?_>
  lgl$#-          %46.2 = IsType                   %46.1 isA val?+
  cp              %46.3 = Checkpoint                -> BB48 (default) | BB47 (if assume failed)
BB45   <- [44]
  goto BB34
BB48   <- [46]
  void                    Assume             D     %46.2, %46.3 (Typecheck@0x5604dc1a9b60[Type#49])
  val?+           %48.1 = CastType           d     dn %46.1   <val?_>
  (real|complex)+ %48.2 = Sub                wed   %48.1, 1, elided   <val?_>
  void                    StVar              lW    n, %48.2, e2.3
  goto BB40
BB47   <- [46]
  fs              %47.0 = FrameState         R     0x5604ddb931c0+708: [%46.1], env=e2.3
  void                    Deopt              !v    %47.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fdef, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    sig, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    nargs, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <val?_>
  val?            %1.3  = Add                !v    %1.2, 1, e1.0   <val?_>
  val?^ | miss    %1.4  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.6  = Force              !     %1.4, e1.0   <val?_>
  val?            %1.7  = Colon              !     %1.3, %1.6, e1.0   <val?_>
  void                    Return             l     %1.7
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ .matchSigLength[0x5604e5feae50]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
