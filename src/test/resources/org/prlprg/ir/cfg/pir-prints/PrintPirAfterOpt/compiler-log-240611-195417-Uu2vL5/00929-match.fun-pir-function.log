
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.fun[0x5604dfe72230]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
match.fun[0x5604dfe72230]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     FUN=%1.0, descend(miss)=true, parent=R_BaseNamespace, context 1
  val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <(cls|blt)>
  val?            %1.3  = CallBuiltin        !v    is.function(%1.2) e1.1   <lgl$->
  lgl$#-          %1.4  = IsType                   %1.3 isA lgl$-
  cp              %1.5  = Checkpoint                -> BB2 (default) | BB21 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.4, %1.5 (Typecheck@0x5604dcc42928[Type#2])
  lgl$-           %2.1  = CastType           d     dn %1.3
  lgl$#-          %2.2  = CheckTrueFalse     e     %2.1
  void                    Branch                   %2.2 -> BB20 (if true) | BB3 (if false)
BB21   <- [1]
  fs              %21.0 = FrameState         R     0x5604dd4feba0+91: [%1.3], env=e1.1
  void                    Deopt              !v    %21.0   !
BB20   <- [2]
  val?^ | miss    %20.0 = LdVar              eR    FUN, e1.1
  void                    Visible            v     
  val?            %20.2 = Force!<wrapped>    !     %20.0, e1.1   <(cls|blt)>
  void                    Return             l     %20.2
BB3   <- [2]
  val?^ | miss    %3.0  = LdVar              eR    is.character, e1.1
  lgl$#-          %3.1  = Identical                <blt is.character>, %3.0   <@?>
  void                    Branch                   %3.1 -> BB5 (if true) | BB4 (if false)
BB5   <- [3]
  val?^ | miss    %5.0  = LdVar              eR    FUN, e1.1
  val?            %5.1  = Force!             !v    %5.0, e1.1   <val?_>
  lgl$#-          %5.2  = CallSafeBuiltin    wed   is.character(%5.1)    <val?_>
  void                    Branch                   %5.2 -> BB15 (if true) | BB6 (if false)
BB4   <- [3]
  (cls|spec|blt)  %4.0  = LdFun              !v    is.character, e1.1
  fs              %4.1  = FrameState         R     0x5604dd4feba0+150: [%4.0], env=e1.1
  void                    Deopt              !v    %4.1, DeadCall@0x5604dcc42928[Call#1], %4.0   !
BB15   <- [5]
  val?^ | miss    %15.0 = LdVar              eR    length, e1.1
  lgl$#-          %15.1 = Identical                <blt length>, %15.0   <@?>
  void                    Branch                   %15.1 -> BB17 (if true) | BB16 (if false)
BB6   <- [5]
  goto BB7
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    FUN, e1.1
  val?            %17.1 = Force!             !v    %17.0, e1.1   <val?_>
  lgl$#-          %17.2 = IsType                   %17.1 isA val?+
  cp              %17.3 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB16   <- [15]
  (cls|spec|blt)  %16.0 = LdFun              !v    length, e1.1
  fs              %16.1 = FrameState         R     0x5604dd4feba0+253: [%5.2, %16.0], env=e1.1
  void                    Deopt              !v    %16.1, DeadCall@0x5604dcc42928[Call#2], %16.0   !
BB7   <- [6, 19]
  lgl$-           %7.0  = Phi                      %19.5:BB19, %5.2:BB6
  lgl$-           %7.1  = AsLogical                %7.0
  lgl$#-          %7.2  = Identical                %7.1, true
  void                    Branch                   %7.2 -> BB14 (if true) | BB8 (if false)
BB19   <- [17]
  void                    Assume             D     %17.2, %17.3 (Typecheck@0x5604dcc42928[Type#8])
  val?+           %19.1 = CastType           d     dn %17.1   <val?_>
  (int|real)$-    %19.2 = CallSafeBuiltin    wed   length(%19.1)    <val?_>
  lgl$-           %19.3 = Eq                 d     %19.2, 1L, elided   <val?_>
  lgl$-           %19.4 = AsLogical                %19.3
  lgl$-           %19.5 = LAnd                     %5.2, %19.4
  goto BB7
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x5604dd4feba0+294: [%5.2, <blt length>, %17.1], env=e1.1
  void                    Deopt              !v    %18.0   !
BB14   <- [7]
  goto BB11
BB8   <- [7]
  val?^ | miss    %8.0  = LdVar              eR    is.symbol, e1.1
  lgl$#-          %8.1  = Identical                <blt is.symbol>, %8.0   <@?>
  void                    Branch                   %8.1 -> BB10 (if true) | BB9 (if false)
BB11   <- [14, 10]
  lgl$-           %11.0 = Phi                      %10.3:BB10, %7.1:BB14
  lgl$-           %11.1 = Not                d     %11.0, elided
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB13 (if true) | BB12 (if false)
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    FUN, e1.1
  val?            %10.1 = Force!             !v    %10.0, e1.1   <val?_>
  lgl$#-          %10.2 = CallSafeBuiltin    wed   is.symbol(%10.1)    <val?_>
  lgl$-           %10.3 = LOr                      %7.1, %10.2
  goto BB11
BB9   <- [8]
  (cls|spec|blt)  %9.0  = LdFun              !v    is.symbol, e1.1
  fs              %9.1  = FrameState         R     0x5604dd4feba0+370: [%7.1, %9.0], env=e1.1
  void                    Deopt              !v    %9.1, DeadCall@0x5604dcc42928[Call#3], %9.0   !
BB13   <- [11]
  (cls|spec|blt)  %13.0 = LdFun              !v    eval.parent, e1.1
  fs              %13.1 = FrameState         R     0x5604dd4feba0+458: [%13.0], env=e1.1
  void                    Deopt              !v    %13.1, DeadCall@0x5604dcc42928[Call#4], %13.0   !
BB12   <- [11]
  (cls|spec|blt)  %12.0 = LdFun              !v    parent.frame, e1.1
  fs              %12.1 = FrameState         R     0x5604dd4feba0+658: [%12.0], env=e1.1
  void                    Deopt              !v    %12.1, DeadCall@0x5604dcc42928[Call#11], %12.0   !

│ match.fun[0x5604dfe72230]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
