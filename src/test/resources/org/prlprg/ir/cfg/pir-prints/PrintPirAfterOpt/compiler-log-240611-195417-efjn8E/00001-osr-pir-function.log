
┌──────────────────────────────────────────────────────────────────────────────┐
│ osr[0x55b1c9e4ee70]                                                          │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:  Eager                                                           │
├────── PIR Version After Optimizations
osr[0x55b1c9e4ee70]
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  goto BB2
BB2   <- [1, 45, 31]
  cp              %2.0  = Checkpoint                -> BB3 (default) | BB48 (if assume failed)
BB3   <- [2]
  val?^ | miss    %3.0  = LdVar              eR    notDone, e1.0
  lgl$#-          %3.1  = IsType                   %3.0 isA lgl$-
  void                    Assume             D     %3.1, %2.0 (Typecheck@0x55b1c94217d8[Type#42])
  lgl$-           %3.3  = CastType           d     dn %3.0
  lgl$-           %3.4  = AsLogical                %3.3
  lgl$#-          %3.5  = Identical                %3.4, false
  void                    Branch                   %3.5 -> BB47 (if true) | BB4 (if false)
BB48   <- [2]
  fs              %48.0 = FrameState         R     0x55b1c82be5d0+834: [], env=e1.0
  void                    Deopt              !v    %48.0   !
BB47   <- [3]
  goto BB5
BB4   <- [3]
  val?^ | miss    %4.0  = LdVar              eR    z, e1.0
  lgl$#-          %4.1  = IsType                   %4.0 isA real$-
  void                    Assume             D     %4.1, %2.0 (Typecheck@0x55b1c94217d8[Type#43])
  real$-          %4.3  = CastType           d     dn %4.0
  lgl$-           %4.4  = Lt                 d     %4.3, 50, elided   <lgl$->
  lgl$-           %4.5  = AsLogical                %4.4
  lgl$-           %4.6  = LAnd                     %3.4, %4.5
  goto BB5
BB5   <- [47, 4]
  lgl$-           %5.0  = Phi                      %4.6:BB4, %3.4:BB47
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB39 (if true) | BB6 (if false)
BB39   <- [5]
  val?^ | miss    %39.0 = LdVar              eR    zrzr, e1.0
  lgl$#-          %39.1 = IsType                   %39.0 isA real$-
  void                    Assume             D     %39.1, %2.0 (Typecheck@0x55b1c94217d8[Type#45])
  real$-          %39.3 = CastType           d     dn %39.0
  val?^ | miss    %39.4 = LdVar              eR    zizi, e1.0
  lgl$#-          %39.5 = IsType                   %39.4 isA real$-
  void                    Assume             D     %39.5, %2.0 (Typecheck@0x55b1c94217d8[Type#46])
  real$-          %39.7 = CastType           d     dn %39.4
  real$-          %39.8 = Sub                d     %39.3, %39.7, elided   <real$->
  val?^ | miss    %39.9 = LdVar              eR    cr, e1.0
  lgl$#-          %39.10 = IsType                   %39.9 isA real$-
  void                    Assume             D     %39.10, %2.0 (Typecheck@0x55b1c94217d8[Type#48])
  real$-          %39.12 = CastType           d     dn %39.9
  real$-          %39.13 = Add                d     %39.8, %39.12, elided   <real$->
  void                    StVar              lW    zr, %39.13, e1.0
  cp              %39.15 = Checkpoint                -> BB41 (default) | BB40 (if assume failed)
BB6   <- [5]
  val?^ | miss    %6.0  = LdVar              eR    bitwShiftL, e1.0
  lgl$#-          %6.1  = Identical                %6.0, function(a, n) <(rir::DispatchTable*)0x55b1c96|...
  void                    Assume             D     %6.1, %2.0 (CallTarget@0x55b1c94217d8[Call#0])
  val?^ | miss    %6.3  = LdVar              eR    byteAcc, e1.0
  lgl$#-          %6.4  = IsType                   %6.3 isA real$-
  void                    Assume             D     %6.4, %2.0 (Typecheck@0x55b1c94217d8[Type#68])
  real$-          %6.6  = CastType           d     dn %6.3
  int$-           %6.7  = CallSafeBuiltin    wed   bitwiseShiftL(%6.6, 1)    <int$->
  cp              %6.8  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB41   <- [39]
  real$-          %41.0 = Mul                d     2, %39.13, elided   <real$->
  val?^ | miss    %41.1 = LdVar              eR    zi, e1.0
  lgl$#-          %41.2 = IsType                   %41.1 isA real$-
  void                    Assume             D     %41.2, %39.15 (Typecheck@0x55b1c94217d8[Type#52])
  real$-          %41.4 = CastType           d     dn %41.1
  real$-          %41.5 = Mul                d     %41.0, %41.4, elided   <real$->
  val?^ | miss    %41.6 = LdVar              eR    ci, e1.0
  lgl$#-          %41.7 = IsType                   %41.6 isA real$-
  void                    Assume             D     %41.7, %39.15 (Typecheck@0x55b1c94217d8[Type#54])
  real$-          %41.9 = CastType           d     dn %41.6
  real$-          %41.10 = Add                d     %41.5, %41.9, elided   <real$->
  void                    StVar              lW    zi, %41.10, e1.0
  real$-          %41.12 = Mul                d     %39.13, %39.13, elided   <real$->
  void                    StVar              lW    zrzr, %41.12, e1.0
  real$-          %41.14 = Mul                d     %41.10, %41.10, elided   <real$->
  void                    StVar              lW    zizi, %41.14, e1.0
  real$-          %41.16 = Add                d     %41.12, %41.14, elided   <real$->
  lgl$-           %41.17 = Gt                 d     %41.16, 4, elided   <lgl$->
  lgl$#-          %41.18 = CheckTrueFalse     e     %41.17
  void                    Branch                   %41.18 -> BB46 (if true) | BB42 (if false)
BB40   <- [39]
  fs              %40.0 = FrameState         R     0x55b1c82be5d0+953: [], env=e1.0
  void                    Deopt              !v    %40.0   !
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    escape, e1.0
  lgl$#-          %8.1  = IsType                   %8.0 isA real$-
  void                    Assume             D     %8.1, %6.8 (Typecheck@0x55b1c94217d8[Type#70])
  real$-          %8.3  = CastType           d     dn %8.0
  real$-          %8.4  = Add                d     %6.7, %8.3, elided   <real$->
  void                    StVar              lW    byteAcc, %8.4, e1.0
  cp              %8.6  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  prom-           %7.0  = MkArg                    %6.6, osr[0x55b1c9e4ee70]_p0 (!refl), e1.0
  val?~           %7.1  = CastType                 up %7.0
  fs              %7.2  = FrameState         R     0x55b1c82be5d0+1279: [], env=e1.0
  env             e7.3  = (MkEnv)            l     n=1, a=%7.1, parent=R_BaseNamespace, context 0
  fs              %7.4  = FrameState         R     0x55b1c8688660+41: [%6.7], env=e7.3, next=%7.2
  void                    Deopt              !v    %7.4   !
BB46   <- [41]
  void                    StVar              lW    notDone, false, e1.0
  void                    StVar              lW    escape, 1, e1.0
  goto BB43
BB42   <- [41]
  goto BB43
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    bitNum, e1.0
  lgl$#-          %10.1 = IsType                   %10.0 isA real$-
  void                    Assume             D     %10.1, %8.6 (Typecheck@0x55b1c94217d8[Type#72])
  real$-          %10.3 = CastType           d     dn %10.0
  real$-          %10.4 = Add                d     %10.3, 1, elided   <real$->
  void                    StVar              lW    bitNum, %10.4, e1.0
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x55b1c82be5d0+1313: [], env=e1.0
  void                    Deopt              !v    %9.0   !
BB43   <- [42, 46]
  cp              %43.0 = Checkpoint                -> BB45 (default) | BB44 (if assume failed)
BB12   <- [10]
  lgl$-           %12.0 = Eq                 d     %10.4, 8, elided   <lgl$->
  lgl$#-          %12.1 = CheckTrueFalse     e     %12.0
  void                    Branch                   %12.1 -> BB36 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x55b1c82be5d0+1348: [], env=e1.0
  void                    Deopt              !v    %11.0   !
BB45   <- [43]
  val?^ | miss    %45.0 = LdVar              eR    z, e1.0
  lgl$#-          %45.1 = IsType                   %45.0 isA real$-
  void                    Assume             D     %45.1, %43.0 (Typecheck@0x55b1c94217d8[Type#66])
  real$-          %45.3 = CastType           d     dn %45.0
  real$-          %45.4 = Add                d     %45.3, 1, elided   <real$->
  void                    StVar              lW    z, %45.4, e1.0
  goto BB2
BB44   <- [43]
  fs              %44.0 = FrameState         R     0x55b1c82be5d0+1202: [], env=e1.0
  void                    Deopt              !v    %44.0   !
BB36   <- [12]
  val?^ | miss    %36.0 = LdVar              eR    bitwXor, e1.0
  lgl$#-          %36.1 = Identical                %36.0, function(a, b) <(rir::DispatchTable*)0x55b1c96|...
  void                    Assume             D     %36.1, %10.6 (CallTarget@0x55b1c94217d8[Call#3])
  val?^ | miss    %36.3 = LdVar              eR    sum, e1.0
  lgl$#-          %36.4 = IsType                   %36.3 isA val?~- | miss
  void                    Assume             D     %36.4, %10.6 (Typecheck@0x55b1c94217d8[Type#87])
  val?~- | miss   %36.6 = CastType           d     dn %36.3
  val?-           %36.7 = Force!<value>            %36.6,    <(int|real)$->
  int-            %36.8 = CallSafeBuiltin    wed   bitwiseXor(%36.7, %8.4)    <int$->
  lgl$#-          %36.9 = IsType                   %36.8 isA int$-
  cp              %36.10 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    x, e1.0
  lgl$#-          %13.1 = IsType                   %13.0 isA real$-
  void                    Assume             D     %13.1, %10.6 (Typecheck@0x55b1c94217d8[Type#76])
  real$-          %13.3 = CastType           d     dn %13.0
  val?^ | miss    %13.4 = LdVar              eR    size, e1.0
  lgl$#-          %13.5 = IsType                   %13.4 isA real$-
  void                    Assume             D     %13.5, %10.6 (Typecheck@0x55b1c94217d8[Type#77])
  real$-          %13.7 = CastType           d     dn %13.4
  real$-          %13.8 = Sub                d     %13.7, 1, elided   <real$->
  lgl$-           %13.9 = Eq                 d     %13.3, %13.8, elided   <lgl$->
  lgl$#-          %13.10 = CheckTrueFalse     e     %13.9
  void                    Branch                   %13.10 -> BB33 (if true) | BB14 (if false)
BB38   <- [36]
  void                    Assume             D     %36.9, %36.10 (Typecheck@0x55b1c94217d8[Type#89])
  int$-           %38.1 = CastType           d     dn %36.8
  void                    StVar              lW    sum, %38.1, e1.0
  void                    StVar              lW    byteAcc, 0, e1.0
  void                    StVar              lW    bitNum, 0, e1.0
  goto BB16
BB37   <- [36]
  fs              %37.0 = FrameState         R     0x55b1c82be5d0+1612: [], env=e1.0
  prom-           %37.1 = MkArg                    %8.4, osr[0x55b1c9e4ee70]_p6 (!refl), e1.0
  val?~           %37.2 = CastType                 up %37.1
  prom-           %37.3 = MkArg                    %36.7, osr[0x55b1c9e4ee70]_p5 (!refl), e1.0
  val?~           %37.4 = CastType                 up %37.3
  env             e37.5 = (MkEnv)            l     b=%37.2, a=%37.4, parent=R_BaseNamespace, context 0
  fs              %37.6 = FrameState         R     0x55b1c851e230+41: [%36.8], env=e37.5, next=%37.0
  void                    Deopt              !v    %37.6   !
BB33   <- [13]
  real$-          %33.0 = Sub                d     8, %10.4, elided   <real$->
  int$-           %33.1 = CallSafeBuiltin    wed   bitwiseShiftL(%8.4, %33.0)    <int$->
  void                    StVar              lW    byteAcc, %33.1, e1.0
  cp              %33.3 = Checkpoint                -> BB35 (default) | BB34 (if assume failed)
BB14   <- [13]
  goto BB15
BB16   <- [15, 38]
  cp              %16.0 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    bitwXor, e1.0
  lgl$#-          %35.1 = Identical                %35.0, function(a, b) <(rir::DispatchTable*)0x55b1c96|...
  void                    Assume             D     %35.1, %33.3 (CallTarget@0x55b1c94217d8[Call#2])
  val?^ | miss    %35.3 = LdVar              eR    sum, e1.0
  lgl$#-          %35.4 = IsType                   %35.3 isA int$-
  void                    Assume             D     %35.4, %33.3 (Typecheck@0x55b1c94217d8[Type#84])
  int$-           %35.6 = CastType           d     dn %35.3
  int$-           %35.7 = CallSafeBuiltin    wed   bitwiseXor(%35.6, %33.1)    <int$->
  void                    StVar              lW    sum, %35.7, e1.0
  void                    StVar              lW    byteAcc, 0, e1.0
  void                    StVar              lW    bitNum, 0, e1.0
  goto BB15
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x55b1c82be5d0+1489: [], env=e1.0
  void                    Deopt              !v    %34.0   !
BB15   <- [14, 35]
  goto BB16
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    x, e1.0
  lgl$#-          %18.1 = IsType                   %18.0 isA real$-
  void                    Assume             D     %18.1, %16.0 (Typecheck@0x55b1c94217d8[Type#90])
  real$-          %18.3 = CastType           d     dn %18.0
  real$-          %18.4 = Add                d     %18.3, 1, elided   <real$->
  void                    StVar              lW    x, %18.4, e1.0
  goto BB19
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x55b1c82be5d0+1656: [], env=e1.0
  void                    Deopt              !v    %17.0   !
BB19   <- [18, 26]
  real$-          %19.0 = Phi                      %18.4:BB18, 0:BB26
  cp              %19.1 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    size, e1.0
  lgl$#-          %21.1 = IsType                   %21.0 isA real$-
  void                    Assume             D     %21.1, %19.1 (Typecheck@0x55b1c94217d8[Type#9])
  real$-          %21.3 = CastType           d     dn %21.0
  lgl$-           %21.4 = Lt                 d     %19.0, %21.3, elided   <lgl$->
  lgl$#-          %21.5 = CheckTrueFalse     e     %21.4
  void                    Branch                   %21.5 -> BB27 (if true) | BB22 (if false)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x55b1c82be5d0+213: [], env=e1.0
  void                    Deopt              !v    %20.0   !
BB27   <- [21]
  void                    StVar              lW    zrzr, 0, e1.0
  void                    StVar              lW    zi, 0, e1.0
  void                    StVar              lW    zizi, 0, e1.0
  real$-          %27.3 = Mul                d     2, %19.0, elided   <real$->
  real$-          %27.4 = Div                d     %27.3, %21.3, elided   <real$->
  real$-          %27.5 = Sub                d     %27.4, 1.5, elided   <real$->
  void                    StVar              lW    cr, %27.5, e1.0
  void                    StVar              lW    z, 0, e1.0
  void                    StVar              lW    notDone, true, e1.0
  void                    StVar              lW    escape, 0, e1.0
  real$-          %27.10 = Add                d     0, %27.5, elided   <real$->
  void                    StVar              lW    zr, %27.10, e1.0
  cp              %27.12 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB22   <- [21]
  val?^ | miss    %22.0 = LdVar              eR    y, e1.0
  lgl$#-          %22.1 = IsType                   %22.0 isA real$-
  void                    Assume             D     %22.1, %19.1 (Typecheck@0x55b1c94217d8[Type#92])
  real$-          %22.3 = CastType           d     dn %22.0
  real$-          %22.4 = Add                d     %22.3, 1, elided   <real$->
  void                    StVar              lW    y, %22.4, e1.0
  cp              %22.6 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB29   <- [27]
  real$-          %29.0 = Mul                d     2, %27.10, elided   <real$->
  real$-          %29.1 = Mul                d     %29.0, 0, elided   <real$->
  val?^ | miss    %29.2 = LdVar              eR    ci, e1.0
  lgl$#-          %29.3 = IsType                   %29.2 isA real$-
  void                    Assume             D     %29.3, %27.12 (Typecheck@0x55b1c94217d8[Type#28])
  real$-          %29.5 = CastType           d     dn %29.2
  real$-          %29.6 = Add                d     %29.1, %29.5, elided   <real$->
  void                    StVar              lW    zi, %29.6, e1.0
  real$-          %29.8 = Mul                d     %27.10, %27.10, elided   <real$->
  void                    StVar              lW    zrzr, %29.8, e1.0
  real$-          %29.10 = Mul                d     %29.6, %29.6, elided   <real$->
  void                    StVar              lW    zizi, %29.10, e1.0
  real$-          %29.12 = Add                d     %29.8, %29.10, elided   <real$->
  lgl$-           %29.13 = Gt                 d     %29.12, 4, elided   <lgl$->
  lgl$#-          %29.14 = CheckTrueFalse     e     %29.13
  void                    Branch                   %29.14 -> BB32 (if true) | BB30 (if false)
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x55b1c82be5d0+550: [], env=e1.0
  void                    Deopt              !v    %28.0   !
BB24   <- [22]
  lgl$-           %24.0 = Lt                 d     %22.4, %21.3, elided   <lgl$->
  lgl$#-          %24.1 = CheckTrueFalse     e     %24.0
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x55b1c82be5d0+1731: [], env=e1.0
  void                    Deopt              !v    %23.0   !
BB32   <- [29]
  void                    StVar              lW    notDone, false, e1.0
  void                    StVar              lW    escape, 1, e1.0
  goto BB31
BB30   <- [29]
  goto BB31
BB26   <- [24]
  real$-          %26.0 = Mul                d     2, %22.4, elided   <real$->
  real$-          %26.1 = Div                d     %26.0, %21.3, elided   <real$->
  real$-          %26.2 = Sub                d     %26.1, 1, elided   <real$->
  void                    StVar              lW    ci, %26.2, e1.0
  void                    StVar              lW    x, 0, e1.0
  goto BB19
BB25   <- [24]
  val?^ | miss    %25.0 = LdVar              eR    sum, e1.0
  lgl$#-          %25.1 = IsType                   %25.0 isA int$-
  void                    Assume             D     %25.1, %22.6 (Typecheck@0x55b1c94217d8[Type#94])
  int$-           %25.3 = CastType           d     dn %25.0
  void                    Visible            v     
  void                    Return             l     %25.3
BB31   <- [30, 32]
  void                    StVar              lW    z, 1, e1.0
  goto BB2
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    byteAcc, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <real$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    sum, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <(int|real)$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    byteAcc, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <real$->
  void                    Return             l     %1.3

│ osr[0x55b1c9e4ee70]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
