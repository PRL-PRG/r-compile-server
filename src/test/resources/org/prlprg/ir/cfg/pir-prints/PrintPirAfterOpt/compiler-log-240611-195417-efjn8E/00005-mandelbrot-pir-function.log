
┌──────────────────────────────────────────────────────────────────────────────┐
│ mandelbrot[0x55b1ca006de0]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  Eager                                                           │
├────── PIR Version After Optimizations
mandelbrot[0x55b1ca006de0]
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = (MkEnv)            l     size=10, sum=0, byteAcc=0, bitNum=0, y=0, ci=unboundValue, x=unboundValue, zr=unboundValue, zrzr=unboundValue, zi=unboundValue, zizi=unboundValue, cr=unboundValue, z=unboundValue, notDone=unboundValue, escape=unboundValue, parent=R_GlobalEnv, context 1
  goto BB2
BB2   <- [1, 5]
  real$#-         %2.0  = Phi                      0:BB1, %4.0:BB5
  real$-          %2.1  = Phi                      0:BB1, %4.1:BB5
  (int|real)$-    %2.2  = Phi                      0:BB1, %4.2:BB5   <int$->
  real$-          %2.3  = Phi                      0:BB1, %5.1:BB5
  lgl$-           %2.4  = Lt                 d     %2.3, 10, elided   <lgl$->
  lgl$#-          %2.5  = CheckTrueFalse     e     %2.4
  void                    Branch                   %2.5 -> BB3 (if true) | BB31 (if false)
BB3   <- [2]
  real$-          %3.0  = Mul                d     2, %2.3, elided   <real$->
  real$-          %3.1  = Div                d     %3.0, 10, elided   <real$->
  real$-          %3.2  = Sub                d     %3.1, 1, elided   <real$->
  void                    StVar              lWd   ci, %3.2, e1.0
  void                    StVar              lWd   x, 0, e1.0
  goto BB4
BB31   <- [2]
  void                    Visible            v     
  void                    Return             l     %2.2
BB4   <- [3, 20]
  real$#-         %4.0  = Phi                      %2.0:BB3, %20.0:BB20
  real$-          %4.1  = Phi                      %2.1:BB3, %20.1:BB20
  (int|real)$-    %4.2  = Phi                      %2.2:BB3, %20.2:BB20   <int$->
  real$-          %4.3  = Phi                      0:BB3, %20.4:BB20
  lgl$-           %4.4  = Lt                 d     %4.3, 10, elided   <lgl$->
  lgl$#-          %4.5  = CheckTrueFalse     e     %4.4
  void                    Branch                   %4.5 -> BB6 (if true) | BB5 (if false)
BB6   <- [4]
  real$-          %6.0  = Mul                d     2, %4.3, elided   <real$->
  real$-          %6.1  = Div                d     %6.0, 10, elided   <real$->
  real$-          %6.2  = Sub                d     %6.1, 1.5, elided   <real$->
  void                    StVar              lWd   cr, %6.2, e1.0
  void                    StVar              lWd   notDone, true, e1.0
  void                    StVar              lWd   escape, 0, e1.0
  real$-          %6.6  = Add                d     0, %6.2, elided   <real$->
  void                    StVar              lWd   zr, %6.6, e1.0
  real$-          %6.8  = Mul                d     2, %6.6, elided   <real$->
  real$-          %6.9  = Mul                d     %6.8, 0, elided   <real$->
  real$-          %6.10 = Add                d     %6.9, %3.2, elided   <real$->
  void                    StVar              lWd   zi, %6.10, e1.0
  real$-          %6.12 = Mul                d     %6.6, %6.6, elided   <real$->
  void                    StVar              lWd   zrzr, %6.12, e1.0
  real$-          %6.14 = Mul                d     %6.10, %6.10, elided   <real$->
  void                    StVar              lWd   zizi, %6.14, e1.0
  real$-          %6.16 = Add                d     %6.12, %6.14, elided   <real$->
  lgl$-           %6.17 = Gt                 d     %6.16, 4, elided   <lgl$->
  lgl$#-          %6.18 = CheckTrueFalse     e     %6.17
  void                    Branch                   %6.18 -> BB30 (if true) | BB7 (if false)
BB5   <- [4]
  real$-          %5.0  = LdVar              eRd   y, e1.0
  real$-          %5.1  = Add                d     %5.0, 1, elided   <real$->
  void                    StVar              lWd   y, %5.1, e1.0
  goto BB2
BB30   <- [6]
  void                    StVar              lWd   notDone, false, e1.0
  void                    StVar              lWd   escape, 1, e1.0
  goto BB8
BB7   <- [6]
  goto BB8
BB8   <- [7, 30]
  real$#-         %8.0  = Phi                      1:BB30, 0:BB7
  lgl$#-          %8.1  = Phi                      false:BB30, true:BB7
  void                    StVar              lWd   z, 1, e1.0
  goto BB9
BB9   <- [8, 27]
  real$#-         %9.0  = Phi                      %8.0:BB8, %27.0:BB27
  real$-          %9.1  = Phi                      %6.10:BB8, %25.5:BB27
  real$-          %9.2  = Phi                      %6.14:BB8, %25.9:BB27
  real$-          %9.3  = Phi                      %6.12:BB8, %25.7:BB27
  real$#-         %9.4  = Phi                      1:BB8, %27.2:BB27
  lgl$#-          %9.5  = Phi                      %8.1:BB8, %27.1:BB27
  void                    Branch                   %9.5 -> BB29 (if true) | BB10 (if false)
BB29   <- [9]
  lgl$#-          %29.0 = Lt                 d     %9.4, 50, elided   <lgl$->
  lgl$-           %29.1 = LAnd                     %9.5, %29.0
  goto BB11
BB10   <- [9]
  goto BB11
BB11   <- [10, 29]
  lgl$-           %11.0 = Phi                      %29.1:BB29, %9.5:BB10
  cp              %11.1 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB13   <- [11]
  lgl$#-          %13.0 = CheckTrueFalse     e     %11.0
  void                    Branch                   %13.0 -> BB25 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55b1c82be5d0+884: [%11.0], env=e1.0
  void                    Deopt              !v    %12.0
BB25   <- [13]
  real$-          %25.0 = Sub                d     %9.3, %9.2, elided   <real$->
  real$-          %25.1 = Add                d     %25.0, %6.2, elided   <real$->
  void                    StVar              lWd   zr, %25.1, e1.0
  real$-          %25.3 = Mul                d     2, %25.1, elided   <real$->
  real$-          %25.4 = Mul                d     %25.3, %9.1, elided   <real$->
  real$-          %25.5 = Add                d     %25.4, %3.2, elided   <real$->
  void                    StVar              lWd   zi, %25.5, e1.0
  real$-          %25.7 = Mul                d     %25.1, %25.1, elided   <real$->
  void                    StVar              lWd   zrzr, %25.7, e1.0
  real$-          %25.9 = Mul                d     %25.5, %25.5, elided   <real$->
  void                    StVar              lWd   zizi, %25.9, e1.0
  real$-          %25.11 = Add                d     %25.7, %25.9, elided   <real$->
  lgl$-           %25.12 = Gt                 d     %25.11, 4, elided   <lgl$->
  lgl$#-          %25.13 = CheckTrueFalse     e     %25.12
  void                    Branch                   %25.13 -> BB28 (if true) | BB26 (if false)
BB14   <- [13]
  val?^ | miss    %14.0 = LdVar              eR    bitwShiftL, R_GlobalEnv
  lgl$#-          %14.1 = Identical                %14.0, function(a, n) <(rir::DispatchTable*)0x55b1c96|...
  void                    Assume             D     %14.1, %11.1 (CallTarget@0x55b1c94217d8[Call#0])
  int$-           %14.3 = CallSafeBuiltin    wed   bitwiseShiftL(%4.1, 1)    <int$->
  real$-          %14.4 = Add                d     %14.3, %9.0, elided   <real$->
  void                    StVar              lWd   byteAcc, %14.4, e1.0
  real$#-         %14.6 = Add                d     %4.0, 1, elided   <real$->
  void                    StVar              lWd   bitNum, %14.6, e1.0
  cp              %14.8 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB28   <- [25]
  void                    StVar              lWd   notDone, false, e1.0
  void                    StVar              lWd   escape, 1, e1.0
  goto BB27
BB26   <- [25]
  goto BB27
BB16   <- [14]
  lgl$#-          %16.0 = Eq                 d     %14.6, 8, elided   <lgl$->
  void                    Branch                   %16.0 -> BB24 (if true) | BB17 (if false)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x55b1c82be5d0+1348: [], env=e1.0
  void                    Deopt              !v    %15.0
BB27   <- [26, 28]
  real$#-         %27.0 = Phi                      1:BB28, %9.0:BB26
  lgl$#-          %27.1 = Phi                      false:BB28, %9.5:BB26
  real$#-         %27.2 = Add                d     %9.4, 1, elided   <real$->
  void                    StVar              lWd   z, %27.2, e1.0
  goto BB9
BB24   <- [16]
  val?^ | miss    %24.0 = LdVar              eR    bitwXor, R_GlobalEnv
  lgl$#-          %24.1 = Identical                %24.0, function(a, b) <(rir::DispatchTable*)0x55b1c96|...
  void                    Assume             D     %24.1, %14.8 (CallTarget@0x55b1c94217d8[Call#3])
  int$-           %24.3 = CallSafeBuiltin    wed   bitwiseXor(%4.2, %14.4)    <int$->
  void                    StVar              lWd   sum, %24.3, e1.0
  void                    StVar              lWd   byteAcc, 0, e1.0
  void                    StVar              lWd   bitNum, 0, e1.0
  goto BB20
BB17   <- [16]
  lgl$-           %17.0 = Eq                 d     %4.3, 9, elided   <lgl$->
  lgl$#-          %17.1 = CheckTrueFalse     e     %17.0
  void                    Branch                   %17.1 -> BB21 (if true) | BB18 (if false)
BB20   <- [19, 24]
  real$#-         %20.0 = Phi                      0:BB24, %19.0:BB19
  real$-          %20.1 = Phi                      0:BB24, %19.1:BB19
  (int|real)$-    %20.2 = Phi                      %24.3:BB24, %19.2:BB19
  real$-          %20.3 = LdVar              eRd   x, e1.0
  real$-          %20.4 = Add                d     %20.3, 1, elided   <real$->
  void                    StVar              lWd   x, %20.4, e1.0
  goto BB4
BB21   <- [17]
  real$#-         %21.0 = Sub                d     8, %14.6, elided   <real$->
  int$-           %21.1 = CallSafeBuiltin    wed   bitwiseShiftL(%14.4, %21.0)    <int$->
  void                    StVar              lWd   byteAcc, %21.1, e1.0
  cp              %21.3 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB18   <- [17]
  goto BB19
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    bitwXor, R_GlobalEnv
  lgl$#-          %23.1 = Identical                %23.0, function(a, b) <(rir::DispatchTable*)0x55b1c96|...
  void                    Assume             D     %23.1, %21.3 (CallTarget@0x55b1c94217d8[Call#2])
  int$-           %23.3 = CallSafeBuiltin    wed   bitwiseXor(%4.2, %21.1)    <int$->
  void                    StVar              lWd   sum, %23.3, e1.0
  void                    StVar              lWd   byteAcc, 0, e1.0
  void                    StVar              lWd   bitNum, 0, e1.0
  goto BB19
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x55b1c82be5d0+1489: [], env=e1.0
  void                    Deopt              !v    %22.0
BB19   <- [18, 23]
  real$#-         %19.0 = Phi                      0:BB23, %14.6:BB18
  real$-          %19.1 = Phi                      0:BB23, %14.4:BB18
  (int|real)$-    %19.2 = Phi                      %23.3:BB23, %4.2:BB18
  goto BB20

│ mandelbrot[0x55b1ca006de0]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
