
┌──────────────────────────────────────────────────────────────────────────────┐
│ asNamespace[0x56554c4822a0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1               │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
asNamespace[0x56554c4822a0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     ns=%1.0, base.OK(miss)=true, parent=R_BaseNamespace, context 1
  val+            %1.2  = Force!<lazy>       !vr   %1.0,    <(str|env)+>
  lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
  void                    Branch                   %1.3 -> BB2 (if true) | BB26 (if false)
BB2   <- [1]
  goto BB3
BB26   <- [1]
  lgl$#-          %26.0 = CallSafeBuiltin    wed   is.symbol(%1.2)    <lgl$->
  lgl$-           %26.1 = LOr                      %1.3, %26.0
  goto BB3
BB3   <- [2, 26]
  lgl$-           %3.0  = Phi                      %26.1:BB26, %1.3:BB2
  lgl$#-          %3.1  = CheckTrueFalse     e     %3.0
  void                    Branch                   %3.1 -> BB23 (if true) | BB4 (if false)
BB23   <- [3]
  prom-           %23.0 = MkArg                    unboundValue, asNamespace[0x56554c4822a0]_p3 (!refl), e1.1
  ct              %23.1 = PushContext        lCL   %23.0, getNamespace(ns), function(name) <(rir::DispatchTable*)0x56554c4|..., e1.1
  val?^           %23.2 = CastType                 up %23.0
  env             e23.3 = MkEnv              l     name=%23.2, parent=R_BaseNamespace, context 1
  val?            %23.4 = Force!<lazy>       !vr   %23.2,    <str$+>
  val?            %23.5 = CallBuiltin        !v    getRegisteredNamespace(%23.4) e23.3   <env->
  lgl$-           %23.6 = Is                       %23.5, NULL
  void                    StVar              lW    ns, %23.5, e23.3
  val             %23.8 = ChkMissing         e     %23.5
  lgl$-           %23.9 = Not                d     %23.6, elided
  lgl$#-          %23.10 = CheckTrueFalse     e     %23.9
  void                    Branch                   %23.10 -> BB25 (if true) | BB24 (if false)
BB4   <- [3]
  goto BB5
BB25   <- [23]
  val?            %25.0 = PopContext         C     %23.5, %23.1   <env->
  void                    StVar              lW    ns, %25.0, e1.1
  goto BB5
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x56554be75230+244: [], env=e1.1
  (cls|spec|blt)  %24.1 = LdFun              !v    loadNamespace, e23.3
  fs              %24.2 = FrameState         R     0x56554c725f40+67: [%24.1], env=e23.3, next=%24.0
  void                    Deopt              !v    %24.2, DeadCall@0x56554c43fa98[Call#0], %24.1   !
BB5   <- [4, 25]
  cp              %5.0  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    isNamespace, e1.1
  lgl$#-          %7.1  = Identical                %7.0, function(ns) <(rir::DispatchTable*)0x56554be74|...
  void                    Assume             D     %7.1, %5.0 (CallTarget@0x56554b292d98[Call#3])
  prom-           %7.3  = MkArg                    unboundValue, asNamespace[0x56554c4822a0]_p1 (!refl), e1.1
  ct              %7.4  = PushContext        lCL   %7.3, isNamespace(ns), function(ns) <(rir::DispatchTable*)0x56554be74|..., e1.1
  val?^           %7.5  = CastType                 up %7.3
  env             e7.6  = MkEnv              l     ns=%7.5, parent=R_BaseNamespace, context 1
  val?            %7.7  = Force!<lazy>       !vrL  %7.5, e7.6   <env->
  val?            %7.8  = CallBuiltin        !v    isNamespaceEnv(%7.7) e7.6
  val?            %7.9  = PopContext         C     %7.8, %7.4   <lgl$->
  lgl$#-          %7.10 = IsType                   %7.9 isA lgl$-
  cp              %7.11 = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x56554be75230+258: [], env=e1.1
  void                    Deopt              !v    %6.0   !
BB9   <- [7]
  void                    Assume             D     %7.10, %7.11 (Typecheck@0x56554b292d98[Type#9])
  lgl$-           %9.1  = CastType           d     dn %7.9
  lgl$-           %9.2  = Not                d     %9.1, elided
  lgl$#-          %9.3  = CheckTrueFalse     e     %9.2
  void                    Branch                   %9.3 -> BB22 (if true) | BB10 (if false)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x56554be75230+290: [%7.9], env=e1.1
  void                    Deopt              !v    %8.0   !
BB22   <- [9]
  (cls|spec|blt)  %22.0 = LdFun              !v    stop, e1.1
  fs              %22.1 = FrameState         R     0x56554be75230+435: [%22.0], env=e1.1
  void                    Deopt              !v    %22.1, DeadCall@0x56554b292d98[Call#6], %22.0   !
BB10   <- [9]
  val?^ | miss    %10.0 = LdVar              eR    base.OK, e1.1
  val?            %10.1 = Force!<lazy>       !v    %10.0, e1.1   <lgl$->
  lgl$#-          %10.2 = IsType                   %10.1 isA lgl$-
  cp              %10.3 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB12   <- [10]
  void                    Assume             D     %10.2, %10.3 (Typecheck@0x56554b292d98[Type#10])
  lgl$-           %12.1 = CastType           d     dn %10.1
  lgl$-           %12.2 = Not                d     %12.1, elided
  lgl$-           %12.3 = AsLogical                %12.2
  lgl$#-          %12.4 = Identical                %12.3, false
  void                    Branch                   %12.4 -> BB21 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x56554be75230+311: [%10.1], env=e1.1
  void                    Deopt              !v    %11.0   !
BB21   <- [12]
  goto BB18
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    isBaseNamespace, e1.1
  lgl$#-          %13.1 = Identical                %13.0, function(ns) <(rir::DispatchTable*)0x56554be83|...
  void                    Assume             D     %13.1, %10.3 (CallTarget@0x56554b292d98[Call#4])
  prom-           %13.3 = MkArg                    unboundValue, asNamespace[0x56554c4822a0]_p2, e1.1
  ct              %13.4 = PushContext        lCL   %13.3, isBaseNamespace(ns), function(ns) <(rir::DispatchTable*)0x56554be83|..., e1.1
  val?^           %13.5 = CastType                 up %13.3
  env             e13.6 = MkEnv              l     ns=%13.5, parent=R_BaseNamespace, context 1
  prom-           %13.7 = MkArg                    unboundValue, asNamespace[0x56554c4822a0]_p4, e13.6
  prom-           %13.8 = MkArg                    unboundValue, asNamespace[0x56554c4822a0]_p5, e13.6
  ct              %13.9 = PushContext        lCL   %13.7, %13.8, identical(ns, .BaseNamespaceEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e13.6
  val?^           %13.10 = CastType                 up %13.8
  val?^           %13.11 = CastType                 up %13.7
  env             e13.12 = MkEnv              l     x=%13.11, y=%13.10, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %13.13 = Force!<lazy>       !vL   %13.11, e13.12   <val?+>
  val?            %13.14 = Force!<lazy>       !vL   %13.10, e13.12   <val?+>
  val?            %13.15 = CallBuiltin        !v    identical(%13.13, %13.14, true, true, true, true, false, true) e13.12
  val?            %13.16 = PopContext         C     %13.15, %13.9   <lgl$->
  lgl$#-          %13.17 = IsType                   %13.16 isA lgl$-
  cp              %13.18 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB18   <- [17, 21]
  lgl$-           %18.0 = Phi                      %17.3:BB17, %12.3:BB21
  lgl$#-          %18.1 = CheckTrueFalse     e     %18.0
  void                    Branch                   %18.1 -> BB20 (if true) | BB19 (if false)
BB15   <- [13]
  void                    Assume             D     %13.17, %13.18 (Typecheck@0x56554b293108[Type#2])
  lgl$-           %15.1 = CastType           d     dn %13.16
  val?            %15.2 = PopContext         C     %15.1, %13.4   <lgl$->
  lgl$#-          %15.3 = IsType                   %15.2 isA lgl$-
  cp              %15.4 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x56554be75230+356: [%12.3], env=e1.1
  fs              %14.1 = FrameState         R     0x56554be7e770+37: [%13.16], env=e13.6, next=%14.0
  void                    Deopt              !v    %14.1   !
BB20   <- [18]
  (cls|spec|blt)  %20.0 = LdFun              !v    stop, e1.1
  fs              %20.1 = FrameState         R     0x56554be75230+393: [%20.0], env=e1.1
  void                    Deopt              !v    %20.1, DeadCall@0x56554b292d98[Call#5], %20.0   !
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    ns, e1.1
  void                    Visible            v     
  val?            %19.2 = Force!<wrapped>    !     %19.0, e1.1   <env->
  void                    Return             l     %19.2
BB17   <- [15]
  void                    Assume             D     %15.3, %15.4 (Typecheck@0x56554b292d98[Type#12])
  lgl$-           %17.1 = CastType           d     dn %15.2
  lgl$-           %17.2 = AsLogical                %17.1
  lgl$-           %17.3 = LAnd                     %12.3, %17.2
  goto BB18
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x56554be75230+356: [%12.3, %15.2], env=e1.1
  void                    Deopt              !v    %16.0   !
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ns, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ns, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ns, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ns, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .BaseNamespaceEnv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ asNamespace[0x56554c4822a0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
