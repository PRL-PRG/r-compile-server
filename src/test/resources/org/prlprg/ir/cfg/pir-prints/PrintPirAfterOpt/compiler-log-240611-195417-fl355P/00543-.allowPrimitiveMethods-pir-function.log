
┌──────────────────────────────────────────────────────────────────────────────┐
│ .allowPrimitiveMethods[0x56554e287440]                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
.allowPrimitiveMethods[0x56554e287440]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     onOff=%1.0, parent=<env 0x56554a41b378>, context 1
  val+            %1.2  = Force!<lazy>       !vr   %1.0,    <lgl$->
  lgl$#-          %1.3  = IsType                   %1.2 isA lgl$-
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB12 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.3, %1.4 (Typecheck@0x56554d968938[Type#0])
  lgl$-           %2.1  = CastType           d     dn %1.2
  lgl$#-          %2.2  = CheckTrueFalse     e     %2.1
  void                    Branch                   %2.2 -> BB11 (if true) | BB3 (if false)
BB12   <- [1]
  fs              %12.0 = FrameState         R     0x56554c1efc30+9: [%1.2], env=e1.1
  void                    Deopt              !v    %12.0
BB11   <- [2]
  goto BB4
BB3   <- [2]
  goto BB4
BB4   <- [3, 11]
  str$#-          %4.0  = Phi                      "CLEAR":BB3, "SET":BB11
  void                    StVar              lW    code, %4.0, e1.1
  cp              %4.2  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB6   <- [4]
  val?^ | miss    %6.0  = LdVar              eR    .Call, <env 0x56554a41b378>
  lgl$#-          %6.1  = Identical                <blt .Call>, %6.0   <true>
  void                    Assume             D     %6.1, %4.2 (DeadBranchReached@0x56554d968938[Test#0])
  val?^ | miss    %6.3  = LdVar              eR    C_R_M_setPrimitiveMethods, <env 0x56554a41b378>
  val?            %6.4  = Force!<value>      !v    %6.3, e1.1   <vec>
  cp              %6.5  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x56554c1efc30+46: [], env=e1.1
  void                    Deopt              !v    %5.0
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    code, e1.1
  lgl$#-          %8.1  = IsType                   %8.0 isA val?~- | miss
  void                    Assume             D     %8.1, %6.5 (Typecheck@0x56554d968938[Type#4])
  val?~- | miss   %8.3  = CastType           d     dn %8.0
  val?-           %8.4  = Force!<value>            %8.3,    <str$->
  val?            %8.5  = CallBuiltin        !     .Call(%6.4, "", nil, %8.4, nil, nil) e1.1   <lgl$->
  lgl$#-          %8.6  = IsType                   %8.5 isA lgl$-
  cp              %8.7  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x56554c1efc30+140: [<blt .Call>, %6.4], env=e1.1
  void                    Deopt              !v    %7.0   !
BB10   <- [8]
  void                    Assume             D     %8.6, %8.7 (Typecheck@0x56554d968938[Type#5])
  lgl$-           %10.1 = CastType           d     dn %8.5
  void                    Return             l     %10.1
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x56554c1efc30+200: [%8.5], env=e1.1
  void                    Deopt              !v    %9.0   !

│ .allowPrimitiveMethods[0x56554e287440]                                       │
└──────────────────────────────────────────────────────────────────────────────┘
