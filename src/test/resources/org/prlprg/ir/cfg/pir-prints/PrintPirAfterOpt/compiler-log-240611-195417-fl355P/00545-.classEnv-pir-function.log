
┌──────────────────────────────────────────────────────────────────────────────┐
│ .classEnv[0x5655507d2700]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
.classEnv[0x5655507d2700]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     Class=%1.0, default(miss)=missingArg, mustFind(miss)=missingArg, parent=<env 0x56554a41b378>, context 1
  prom-           %1.2  = MkArg                    unboundValue, .classEnv[0x5655507d2700]_p0, e1.1
  val?^ | miss    %1.3  = CastType                 up %1.2
  void                    StArg              lW    default, %1.3, e1.1
  void                    StArg              lW    mustFind, true, e1.1
  cp              %1.6  = Checkpoint                -> BB2 (default) | BB26 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    is.character, <env 0x56554a41b378>
  lgl$#-          %2.1  = Identical                <blt is.character>, %2.0   <true>
  void                    Assume             D     %2.1, %1.6 (DeadBranchReached@0x56554c33efa0[Test#0])
  val?            %2.3  = Force!<lazy>       !vr   %1.0,    <(str|other)>
  lgl$#-          %2.4  = CallSafeBuiltin    wed   is.character(%2.3)    <lgl$->
  cp              %2.5  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB26   <- [1]
  fs              %26.0 = FrameState         R     0x56554a7ad230+0: [], env=e1.1
  void                    Deopt              !v    %26.0
BB4   <- [2]
  void                    Branch                   %2.4 -> BB23 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x56554a7ad230+91: [%2.4], env=e1.1
  void                    Deopt              !v    %3.0
BB23   <- [4]
  val?^ | miss    %23.0 = LdVar              eR    packageSlot, <env 0x56554a41b378>
  lgl$#-          %23.1 = Identical                %23.0, function(object) <(rir::DispatchTable*)0x56554|...
  void                    Assume             D     %23.1, %2.5 (CallTarget@0x56554c33efa0[Call#3])
  prom-           %23.3 = MkArg                    unboundValue, .classEnv[0x5655507d2700]_p7 (!refl), e1.1
  ct              %23.4 = PushContext        lCL   %23.3, packageSlot(Class), function(object) <(rir::DispatchTable*)0x56554|..., e1.1
  val?^           %23.5 = CastType                 up %23.3
  val?^ | miss    %23.6 = LdVar              eR    attr, <env 0x56554a41b378>
  lgl$#-          %23.7 = Identical                <blt attr>, %23.6   <true>
  cp              %23.8 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB5   <- [4]
  (cls|spec|blt)  %5.0  = LdFun              !v    @, <0x565549e13bd8>, <env 0x56554a41b378>
  prom-           %5.1  = MkArg                    unboundValue, .classEnv[0x5655507d2700]_p2 (!refl), e1.1
  prom-           %5.2  = MkArg                    unboundValue, .classEnv[0x5655507d2700]_p3, e1.1
  val?            %5.3  = Call               !v    %5.0(%5.1, %5.2) e1.1   <str$->
  goto BB6
BB25   <- [23]
  void                    Assume             D     %23.7, %23.8 (DeadBranchReached@0x56554cf3dce8[Test#0])
  env             e25.1 = MkEnv              l     object=%23.5, parent=<env 0x56554a41b378>, context 1
  val?            %25.2 = Force!<lazy>       !vr   %23.5,    <(str|other)>
  val?            %25.3 = CallBuiltin        !v    attr(%25.2, "package") e25.1   <(nil|str)->
  val?            %25.4 = PopContext         C     %25.3, %23.4   <(nil|str)->
  goto BB6
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x56554a7ad230+181: [], env=e1.1
  env             e24.1 = (MkEnv)            l     object=%23.5, parent=<env 0x56554a41b378>, context 1
  fs              %24.2 = FrameState         R     0x56554c21b3a0+17: [<blt attr>, %23.7], env=e24.1, next=%24.0
  void                    Deopt              !v    %24.2   !
BB6   <- [5, 25]
  val?            %6.0  = Phi                      %5.3:BB5, %25.4:BB25   <(nil|str)->
  lgl$-           %6.1  = Is                       %6.0, NULL
  void                    StVar              lW    package, %6.0, e1.1
  cp              %6.3  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB8   <- [6]
  val             %8.0  = ChkMissing         e     %6.0
  void                    Visible            v     
  lgl$#-          %8.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %8.2 -> BB11 (if true) | BB9 (if false)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x56554a7ad230+195: [], env=e1.1
  void                    Deopt              !v    %7.0   !
BB11   <- [8]
  val?^ | miss    %11.0 = LdVar              eR    default, e1.1
  val?            %11.1 = Force!<lazy>       !v    %11.0, e1.1   <env->
  void                    StVar              lW    value, %11.1, e1.1
  cp              %11.3 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    .requirePackage, e1.1
  lgl$#-          %9.1  = Identical                %9.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Assume             D     %9.1, %6.3 (CallTarget@0x56554c33efa0[Call#4])
  prom-           %9.3  = MkArg                    unboundValue, .classEnv[0x5655507d2700]_p4 (!refl), e1.1
  val?            %9.4  = StaticCall         !     .requirePackage[0x56554e684210](%9.3) e1.1   <env->
  goto BB10
BB13   <- [11]
  val?^ | miss    %13.0 = LdVar              eR    getClassDef, e1.1
  lgl$#-          %13.1 = Identical                %13.0, function(Class, where=topenv(parent.frame()), |...
  void                    Assume             D     %13.1, %11.3 (CallTarget@0x56554c33efa0[Call#5])
  prom-           %13.3 = MkArg                    unboundValue, .classEnv[0x5655507d2700]_p5, e1.1
  prom-           %13.4 = MkArg                    unboundValue, .classEnv[0x5655507d2700]_p6, e1.1
  val?            %13.5 = StaticCall         !v    getClassDef[0x56555090a4c0](%13.3, %13.4, nil) e1.1   <other>
  lgl$-           %13.6 = Is                       %13.5, NULL
  lgl$-           %13.7 = AsLogical                %13.6
  lgl$#-          %13.8 = Identical                %13.7, false
  void                    StVar              lW    def, %13.5, e1.1
  val             %13.10 = ChkMissing         e     %13.5
  lgl$#-          %13.11 = CheckTrueFalse     e     %13.6
  void                    Branch                   %13.11 -> BB22 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x56554a7ad230+285: [], env=e1.1
  void                    Deopt              !v    %12.0   !
BB10   <- [19, 9]
  val?            %10.0 = Phi                      %9.4:BB9, %19.5:BB19
  void                    Return             l     %10.0
BB22   <- [13]
  val?^ | miss    %22.0 = LdVar              eR    .GlobalEnv, e1.1
  val?            %22.1 = Force!             !v    %22.0, e1.1   <val?_>
  void                    StVar              lW    value, %22.1, e1.1
  (cls|spec|blt)  %22.3 = LdFun              !v    getClassDef, e1.1
  fs              %22.4 = FrameState         R     0x56554a7ad230+399: [%22.3], env=e1.1
  void                    Deopt              !v    %22.4, DeadCall@0x56554c33efa0[Call#6], %22.3   !
BB14   <- [13]
  void                    Branch                   %13.8 -> BB21 (if true) | BB15 (if false)
BB21   <- [14]
  goto BB16
BB15   <- [14]
  val?^ | miss    %15.0 = LdVar              eR    mustFind, e1.1
  val?            %15.1 = Force!             !v    %15.0, e1.1   <val?_>
  lgl$-           %15.2 = AsLogical          e     %15.1
  lgl$-           %15.3 = LAnd                     %13.7, %15.2
  goto BB16
BB16   <- [21, 15]
  lgl$-           %16.0 = Phi                      %15.3:BB15, %13.7:BB21
  cp              %16.1 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB18   <- [16]
  lgl$#-          %18.0 = CheckTrueFalse     e     %16.0
  void                    Branch                   %18.0 -> BB20 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x56554a7ad230+678: [%16.0], env=e1.1
  void                    Deopt              !v    %17.0   !
BB20   <- [18]
  (cls|spec|blt)  %20.0 = LdFun              !v    stop, e1.1
  fs              %20.1 = FrameState         R     0x56554a7ad230+694: [%20.0], env=e1.1
  void                    Deopt              !v    %20.1, DeadCall@0x56554c33efa0[Call#10], %20.0   !
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    value, e1.1
  lgl$#-          %19.1 = IsType                   %19.0 isA val?~- | miss
  void                    Assume             D     %19.1, %16.1 (Typecheck@0x56554c33efa0[Type#34])
  val?~- | miss   %19.3 = CastType           d     dn %19.0
  void                    Visible            v     
  val?-           %19.5 = Force!<value>            %19.3,    <env->
  goto BB10
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     .requirePackage, <0x56554a5d9aa8>, e1.0
  val?            %1.2  = Call               !     %1.1("methods") e1.0   <env->
  void                    Return             l     %1.2
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3

│ .classEnv[0x5655507d2700]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
