
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x56554f9d1730]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
FUN[0x56554f9d1730]
BB0
  goto BB1
BB1   <- [0]
  val?~           %1.0  = LdArg                    0
  val?^ | miss    %1.1  = LdVar              eR    is.logical, ?
  lgl$#-          %1.2  = Identical                <blt is.logical>, %1.1   <true>
  val?            %1.3  = Force<wrapped>           %1.0,    <other>
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB20 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.2, %1.4 (DeadBranchReached@0x56554f986af8[Test#0])
  val+            %2.1  = CallSafeBuiltin    wed   is.logical(%1.3)    <lgl$->
  lgl$#-          %2.2  = IsType                   %2.1 isA lgl$-
  cp              %2.3  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB20   <- [1]
  env             e20.0 = (MkEnv)            l     x=%1.0, parent=?, context 1
  fs              %20.1 = FrameState         R     0x56554d6ebd60+17: [<blt is.logical>, %1.2], env=e20.0
  void                    Deopt              !v    %20.1   !
BB4   <- [2]
  void                    Assume             D     %2.2, %2.3 (Typecheck@0x56554f986af8[Type#2])
  lgl$-           %4.1  = CastType           d     dn %2.1
  lgl$-           %4.2  = AsLogical                %4.1
  lgl$#-          %4.3  = Identical                %4.2, false
  env             e4.4  = MkEnv              l     x=%1.0, parent=?, context 1
  void                    Branch                   %4.3 -> BB19 (if true) | BB5 (if false)
BB3   <- [2]
  env             e3.0  = (MkEnv)            l     x=%1.0, parent=?, context 1
  fs              %3.1  = FrameState         R     0x56554d6ebd60+91: [%2.1], env=e3.0
  void                    Deopt              !v    %3.1   !
BB19   <- [4]
  goto BB6
BB5   <- [4]
  lgl$-           %5.0  = AsLogical          e     %1.3
  lgl$-           %5.1  = LAnd                     %4.2, %5.0
  goto BB6
BB6   <- [19, 5]
  lgl$-           %6.0  = Phi                      %5.1:BB5, %4.2:BB19
  void                    Visible            v     
  lgl$-           %6.2  = AsLogical                %6.0
  lgl$#-          %6.3  = Identical                %6.2, true
  void                    Branch                   %6.3 -> BB18 (if true) | BB7 (if false)
BB18   <- [6]
  goto BB10
BB7   <- [6]
  (cls|spec|blt)  %7.0  = LdFun              !     @, <0x565549e13bd8>, ?
  prom-           %7.1  = MkArg                    unboundValue, FUN[0x56554f9d1730]_p0 (!refl), e4.4
  prom-           %7.2  = MkArg                    unboundValue, FUN[0x56554f9d1730]_p1, e4.4
  val?            %7.3  = Call               !     %7.0(%7.1, %7.2) e4.4   <lgl$->
  lgl$#-          %7.4  = IsType                   %7.3 isA lgl$-
  cp              %7.5  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB10   <- [9, 18]
  lgl$-           %10.0 = Phi                      %9.3:BB9, %6.2:BB18
  lgl$-           %10.1 = AsLogical                %10.0
  lgl$#-          %10.2 = Identical                %10.1, true
  cp              %10.3 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [7]
  void                    Assume             D     %7.4, %7.5 (Typecheck@0x56554f986af8[Type#6])
  lgl$-           %9.1  = CastType           d     dn %7.3
  lgl$-           %9.2  = AsLogical                %9.1
  lgl$-           %9.3  = LOr                      %6.2, %9.2
  goto BB10
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x56554d6ebd60+164: [%6.2, %7.3], env=e4.4
  void                    Deopt              !v    %8.0   !
BB12   <- [10]
  void                    Branch                   %10.2 -> BB17 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x56554d6ebd60+171: [%10.0], env=e4.4
  void                    Deopt              !v    %11.0   !
BB17   <- [12]
  goto BB16
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    isTRUE, e4.4
  lgl$#-          %13.1 = Identical                %13.0, function(x) <(rir::DispatchTable*)0x56554bd155|...
  void                    Assume             D     %13.1, %10.3 (CallTarget@0x56554f986af8[Call#2])
  prom-           %13.3 = MkArg                    unboundValue, FUN[0x56554f9d1730]_p2, e4.4
  val?            %13.4 = StaticCall         !     isTRUE[0x56554ddf3270](%13.3) e4.4   <lgl$->
  lgl$#-          %13.5 = IsType                   %13.4 isA lgl$-
  cp              %13.6 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB16   <- [15, 17]
  lgl$-           %16.0 = Phi                      %15.3:BB15, %10.1:BB17
  void                    Return             l     %16.0
BB15   <- [13]
  void                    Assume             D     %13.5, %13.6 (Typecheck@0x56554f986af8[Type#11])
  lgl$-           %15.1 = CastType           d     dn %13.4
  lgl$-           %15.2 = AsLogical                %15.1
  lgl$-           %15.3 = LOr                      %10.1, %15.2
  goto BB16
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x56554d6ebd60+210: [%10.1, %13.4], env=e4.4
  void                    Deopt              !v    %14.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    simple, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     body, <0x56554d10c108>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, FUN[0x56554f9d1730]_p3, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <lgl$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     @, <0x565549e13bd8>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, FUN[0x56554f9d1730]_p4, e1.0
  prom-           %1.3  = MkArg                    unboundValue, FUN[0x56554f9d1730]_p5, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <cls->
  void                    Return             l     %1.4
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    test, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ FUN[0x56554f9d1730]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
