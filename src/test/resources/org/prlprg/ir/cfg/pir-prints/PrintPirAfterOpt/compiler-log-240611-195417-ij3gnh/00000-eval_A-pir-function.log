
┌──────────────────────────────────────────────────────────────────────────────┐
│ eval_A[0x55d280c90d70]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt0,SimpleInt1│
│ Properties:                                                                  │
├────── PIR Version After Optimizations
eval_A[0x55d280c90d70]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  val?^ | miss    %1.2  = LdVar              eR    eval_A_cache, ?
  env             e1.3  = MkEnv              l     i=%1.1, j=%1.0, parent=?, context 1
  val?            %1.4  = Force!<value>      !v    %1.2, e1.3   <real_>
  lgl$#-          %1.5  = IsType                   %1.4 isA val+   <true>
  cp              %1.6  = Checkpoint                -> BB2 (default) | BB15 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.5, %1.6 (DeadBranchReached@0x55d28115c7d8[Test#0])
  val?^ | miss    %2.1  = LdVar              eR    i, e1.3
  val?            %2.2  = Force!<lazy>       !v    %2.1, e1.3   <int$->
  val?^ | miss    %2.3  = LdVar              eR    j, e1.3
  val?            %2.4  = Force!<lazy>       !v    %2.3, e1.3   <int$->
  lgl$#-          %2.5  = IsType                   %2.4 isA int$-
  lgl$#-          %2.6  = IsType                   %2.2 isA int$-
  cp              %2.7  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB15   <- [1]
  fs              %15.0 = FrameState         R     0x55d28018bd50+9: [%1.4], env=e1.3
  void                    Deopt              !v    %15.0   !
BB4   <- [2]
  lgl$#-          %4.0  = IsType                   %1.4 isA real_
  void                    Assume             D     %4.0, %2.7 (Typecheck@0x55d28115c7d8[Type#0])
  real_           %4.2  = CastType           d     dn %1.4
  void                    Assume             D     %2.6, %2.7 (Typecheck@0x55d28115c7d8[Type#3])
  int$-           %4.4  = CastType           d     dn %2.2
  void                    Assume             D     %2.5, %2.7 (Typecheck@0x55d28115c7d8[Type#4])
  int$-           %4.6  = CastType           d     dn %2.4
  real$-          %4.7  = Extract2_2D        wed   %4.2, %4.4, %4.6, elided   <real$->
  lgl$-           %4.8  = Neq                d     %4.7, 0, elided   <lgl$->
  lgl$#-          %4.9  = CheckTrueFalse     e     %4.8
  void                    Branch                   %4.9 -> BB11 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55d28018bd50+73: [%1.4, %2.2, %2.4], env=e1.3
  void                    Deopt              !v    %3.0   !
BB11   <- [4]
  val?^ | miss    %11.0 = LdVar              eR    eval_A_cache, e1.3
  val?            %11.1 = Force!             !v    %11.0, e1.3   <val?_>
  lgl$#-          %11.2 = IsType                   %11.1 isA val+   <@?>
  void                    Branch                   %11.2 -> BB14 (if true) | BB12 (if false)
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    i, e1.3
  val?            %5.1  = Force!<wrapped>    !v    %5.0, e1.3   <int$->
  val?^ | miss    %5.2  = LdVar              eR    j, e1.3
  val?            %5.3  = Force!<wrapped>    !v    %5.2, e1.3   <int$->
  lgl$#-          %5.4  = IsType                   %5.3 isA int$-
  lgl$#-          %5.5  = IsType                   %5.1 isA int$-
  cp              %5.6  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB14   <- [11]
  val?^ | miss    %14.0 = LdVar              eR    i, e1.3
  val?            %14.1 = Force!             !v    %14.0, e1.3   <val?_>
  val?^ | miss    %14.2 = LdVar              eR    j, e1.3
  val?            %14.3 = Force!             !v    %14.2, e1.3   <val?_>
  goto BB13
BB12   <- [11]
  prom-           %12.0 = MkArg                    unboundValue, eval_A[0x55d280c90d70]_p0, e1.3
  prom-           %12.1 = MkArg                    unboundValue, eval_A[0x55d280c90d70]_p1, e1.3
  goto BB13
BB7   <- [5]
  void                    Assume             D     %5.5, %5.6 (Typecheck@0x55d28115c7d8[Type#7])
  int$-           %7.1  = CastType           d     dn %5.1
  void                    Assume             D     %5.4, %5.6 (Typecheck@0x55d28115c7d8[Type#8])
  int$-           %7.3  = CastType           d     dn %5.3
  int$-           %7.4  = Add                d     %7.1, %7.3, elided   <int$->
  real$-          %7.5  = Sub                d     %7.4, 2, elided   <real$->
  val?^ | miss    %7.6  = LdVar              eR    i, e1.3
  lgl$#-          %7.7  = IsType                   %7.6 isA int$~-
  void                    Assume             D     %7.7, %5.6 (Typecheck@0x55d28115c7d8[Type#11])
  int$~-          %7.9  = CastType           d     dn %7.6
  int$-           %7.10 = Force!<wrapped>          %7.9,    <int$->
  val?^ | miss    %7.11 = LdVar              eR    j, e1.3
  lgl$#-          %7.12 = IsType                   %7.11 isA int$~-
  void                    Assume             D     %7.12, %5.6 (Typecheck@0x55d28115c7d8[Type#12])
  int$~-          %7.14 = CastType           d     dn %7.11
  int$-           %7.15 = Force!<wrapped>          %7.14,    <int$->
  int$-           %7.16 = Add                d     %7.10, %7.15, elided   <int$->
  real$-          %7.17 = Sub                d     %7.16, 1, elided   <real$->
  real$-          %7.18 = Mul                d     %7.5, %7.17, elided   <real$->
  real$-          %7.19 = Div                d     %7.18, 2, elided   <real$->
  real$-          %7.20 = Add                d     %7.19, %7.10, elided   <real$->
  real$-          %7.21 = Div                d     1, %7.20, elided   <real$->
  val?^ | miss    %7.22 = LdVar              eR    eval_A_cache, ?   <real_>
  val?            %7.23 = Force!             !v    %7.22, e1.3
  lgl$#-          %7.24 = IsType                   %7.23 isA real_
  cp              %7.25 = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55d28018bd50+132: [1, %5.1, %5.3], env=e1.3
  void                    Deopt              !v    %6.0   !
BB13   <- [12, 14]
  val?            %13.0 = Phi                      %14.3:BB14, %12.1:BB12
  val?            %13.1 = Phi                      %14.1:BB14, %12.0:BB12
  val?            %13.2 = Extract2_2D        !v    %11.1, %13.1, %13.0, e1.3   <val?_>
  void                    Visible            v     
  goto BB10
BB9   <- [7]
  void                    Assume             D     %7.24, %7.25 (Typecheck@0x55d28115c7d8[Type#20])
  real_           %9.1  = CastType           d     dn %7.23
  real_           %9.2  = Subassign2_2D      wed   %7.21, %9.1, %7.10, %7.15, elided
  void                    StVarSuper         lRW   eval_A_cache, %9.2, e1.3
  void                    Invisible          v     
  goto BB10
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x55d28018bd50+288: [%7.21, %7.21, %7.23, %7.10, %7.15], env=e1.3
  void                    Deopt              !v    %8.0   !
BB10   <- [9, 13]
  val?            %10.0 = Phi                      %7.21:BB9, %13.2:BB13
  void                    Return             l     %10.0
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    j, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ eval_A[0x55d280c90d70]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
