
┌──────────────────────────────────────────────────────────────────────────────┐
│ eval_A_times_u[0x55d281b4fd90]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
eval_A_times_u[0x55d281b4fd90]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB31 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    matrix, ?
  lgl$#-          %2.1  = Identical                %2.0, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x55d28115cbf8[Call#0])
  val?^ | miss    %2.3  = LdVar              eR    n, ?
  lgl$#-          %2.4  = IsType                   %2.3 isA int$-
  void                    Assume             D     %2.4, %1.1 (Typecheck@0x55d28115cbf8[Type#0])
  int$-           %2.6  = CastType           d     dn %2.3
  val+            %2.7  = CallSafeBuiltin    wed   matrix(0, %2.6, %2.6, false, nil, false, false)    <real_>
  lgl$#-          %2.8  = ColonInputEffects        1, %2.6   <true>
  cp              %2.9  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB31   <- [1]
  env             e31.0 = (MkEnv)            l     u=%1.0, parent=?, context 1
  fs              %31.1 = FrameState         R     0x55d280b29350+0: [], env=e31.0
  void                    Deopt              !v    %31.1
BB4   <- [2]
  void                    Assume             D     %2.8, %2.9 (DeadBranchReached@0x55d28115cbf8[Test#0])
  int$#-          %4.1  = ColonCastRhs       e     1L, %2.6   <int$->
  lgl$#-          %4.2  = Lte                d     1L, %4.1, elided   <true>
  void                    Assume             D     %4.2, %2.9 (DeadBranchReached@0x55d28115cbf8[Test#4])
  env             e4.4  = MkEnv              l     u=%1.0, eval_A_mat=%2.7, parent=?, context 1
  goto BB5
BB3   <- [2]
  env             e3.0  = (MkEnv)            l     u=%1.0, eval_A_mat=%2.7, parent=?, context 1
  fs              %3.1  = FrameState         R     0x55d280b29350+56: [], env=e3.0
  void                    Deopt              !v    %3.1
BB5   <- [4, 21]
  val+            %5.0  = Phi                      %2.7:BB4, %20.0:BB21
  int$#-          %5.1  = Phi                      1L:BB4, %13.0:BB21
  cp              %5.2  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  lgl$#-          %7.0  = Neq                d     %4.1, %5.1, elided
  void                    Branch                   %7.0 -> BB11 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55d280b29350+178: [1L, %4.1, %5.1], env=e4.4
  void                    Deopt              !v    %6.0
BB11   <- [7]
  void                    StVar              lW    i, %5.1, e4.4
  cp              %11.1 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB8   <- [7]
  val?^ | miss    %8.0  = LdVar              eR    %*%, ?
  lgl$#-          %8.1  = Identical                <blt %*%>, %8.0   <true>
  void                    Assume             D     %8.1, %5.2 (DeadBranchReached@0x55d28115cbf8[Test#8])
  val+            %8.3  = Force!<lazy>       !vr   %1.0,    <real_>
  lgl$#-          %8.4  = IsType                   %8.3 isA real_
  cp              %8.5  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB13   <- [11]
  int$#-          %13.0 = Add                d     %5.1, 1L, elided
  val?^ | miss    %13.1 = LdVar              eR    n, ?
  lgl$#-          %13.2 = IsType                   %13.1 isA int$-
  void                    Assume             D     %13.2, %11.1 (Typecheck@0x55d28115cbf8[Type#32])
  int$-           %13.4 = CastType           d     dn %13.1
  lgl$#-          %13.5 = ColonInputEffects        1, %13.4   <true>
  void                    Assume             D     %13.5, %11.1 (DeadBranchReached@0x55d28115cbf8[Test#5])
  int$#-          %13.7 = ColonCastRhs       e     1L, %13.4   <int$->
  lgl$#-          %13.8 = Lte                d     1L, %13.7, elided   <true>
  void                    Assume             D     %13.8, %11.1 (DeadBranchReached@0x55d28115cbf8[Test#6])
  lgl$#-          %13.10 = Neq                d     %13.7, 1L, elided   <true>
  void                    Assume             D     %13.10, %11.1 (DeadBranchReached@0x55d28115cbf8[Test#7])
  void                    StVar              lW    j, 1L, e4.4
  cp              %13.13 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x55d280b29350+195: [1L, %4.1, %5.1], env=e4.4
  void                    Deopt              !v    %12.0
BB10   <- [8]
  lgl$#-          %10.0 = IsType                   %5.0 isA real_
  void                    Assume             D     %10.0, %8.5 (Typecheck@0x55d28115cbf8[Type#58])
  real_           %10.2 = CastType           d     dn %5.0
  void                    Assume             D     %8.4, %8.5 (Typecheck@0x55d28115cbf8[Type#57])
  real_           %10.4 = CastType           d     dn %8.3
  val+            %10.5 = CallSafeBuiltin    vwed  %*%(%10.4, %10.2)    <real_>
  void                    Return             l     %10.5
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x55d280b29350+659: [<blt %*%>, %8.3], env=e4.4
  void                    Deopt              !v    %9.0
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    eval_A, ?
  (cls|spec|blt)  %15.1 = CastType                 dn %15.0
  val+            %15.2 = CallSafeBuiltin          bodyCode(%15.1) 
  lgl$#-          %15.3 = Identical                %15.2, <(rir::DispatchTable*)0x55d27fe6c460>
  void                    Assume             D     %15.3, %13.13 (CallTarget@0x55d28115cbf8[Call#5])
  val?            %15.5 = Force!             d     %15.0, 
  (cls|spec|blt)  %15.6 = ChkFunction        e     %15.5
  env             e15.7 = CallSafeBuiltin          environment(%15.6) 
  val?^ | miss    %15.8 = LdVar              eR    eval_A_cache, e15.7   <real_>
  lgl$#-          %15.9 = IsType                   %15.8 isA real_
  void                    Assume             D     %15.9, %13.13 (Typecheck@0x55d28115c7d8[Type#0])
  real_           %15.11 = CastType           d     dn %15.8
  prom-           %15.12 = MkArg                    %5.1, eval_A_times_u[0x55d281b4fd90]_p2 (!refl), e4.4
  val?~           %15.13 = CastType                 up %15.12
  prom-           %15.14 = MkArg                    1L, eval_A_times_u[0x55d281b4fd90]_p3 (!refl), e4.4
  val?~           %15.15 = CastType                 up %15.14
  real$-          %15.16 = Extract2_2D        wed   %15.11, %5.1, 1L, elided   <real$->
  lgl$-           %15.17 = Neq                d     %15.16, 0, elided   <lgl$->
  lgl$#-          %15.18 = CheckTrueFalse     e     %15.17
  env             e15.19 = (MkEnv)            l     i=%15.13, j=%15.15, parent=e15.7, context 0
  void                    Branch                   %15.18 -> BB30 (if true) | BB16 (if false)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55d280b29350+346: [1L, %4.1, %13.0, 1L, %13.7, 1L], env=e4.4
  void                    Deopt              !v    %14.0
BB30   <- [15]
  real$-          %30.0 = Extract2_2D        wed   %15.11, %5.1, 1L, elided   <real$->
  goto BB17
BB16   <- [15]
  int$#-          %16.0 = Add                d     %5.1, 1L, elided   <int$->
  real$#-         %16.1 = Sub                d     %16.0, 2, elided   <real$->
  int$#-          %16.2 = Add                d     %5.1, 1L, elided   <int$->
  real$#-         %16.3 = Sub                d     %16.2, 1, elided   <real$->
  real$#-         %16.4 = Mul                d     %16.1, %16.3, elided   <real$->
  real$-          %16.5 = Div                d     %16.4, 2, elided   <real$->
  real$-          %16.6 = Add                d     %16.5, %5.1, elided   <real$->
  real$-          %16.7 = Div                d     1, %16.6, elided   <real$->
  real_           %16.8 = Subassign2_2D      wed   %16.7, %15.11, %5.1, 1L, elided
  void                    StVarSuper         lRW   eval_A_cache, %16.8, e15.19
  goto BB17
BB17   <- [30, 16]
  real$-          %17.0 = Phi                      %16.7:BB16, %30.0:BB30   <real$->
  cp              %17.1 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB19   <- [17]
  val+            %19.0 = LdVar              eR    eval_A_mat !upd, e4.4
  lgl$#-          %19.1 = IsType                   %19.0 isA real_
  void                    Assume             D     %19.1, %17.1 (Typecheck@0x55d28115cbf8[Type#46])
  real_           %19.3 = CastType           d     dn %19.0
  real_           %19.4 = Subassign2_2D      wed   %17.0, %19.3, %5.1, 1L, elided
  void                    StVar              lW    eval_A_mat, %19.4, e4.4
  goto BB20
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x55d280b29350+390: [1L, %4.1, %13.0, 1L, %13.7, 2L], env=e4.4
  fs              %18.1 = FrameState         R     0x55d28018bd50+385: [%17.0], env=e15.19, next=%18.0
  void                    Deopt              !v    %18.1
BB20   <- [19, 28]
  real_           %20.0 = Phi                      %19.4:BB19, %28.2:BB28
  int$#-          %20.1 = Phi                      2L:BB19, %24.0:BB28
  lgl$#-          %20.2 = Neq                d     %13.7, %20.1, elided
  void                    Branch                   %20.2 -> BB22 (if true) | BB21 (if false)
BB22   <- [20]
  void                    StVar              lW    j, %20.1, e4.4
  cp              %22.1 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  goto BB5
BB24   <- [22]
  int$#-          %24.0 = Add                d     %20.1, 1L, elided
  val?^ | miss    %24.1 = LdVar              eR    eval_A, ?
  (cls|spec|blt)  %24.2 = CastType                 dn %24.1
  val+            %24.3 = CallSafeBuiltin          bodyCode(%24.2) 
  lgl$#-          %24.4 = Identical                %24.3, <(rir::DispatchTable*)0x55d27fe6c460>
  void                    Assume             D     %24.4, %22.1 (CallTarget@0x55d28115cbf8[Call#6])
  val?            %24.6 = Force!             d     %24.1, 
  (cls|spec|blt)  %24.7 = ChkFunction        e     %24.6
  env             e24.8 = CallSafeBuiltin          environment(%24.7) 
  val?^ | miss    %24.9 = LdVar              eR    eval_A_cache, e24.8   <real_>
  lgl$#-          %24.10 = IsType                   %24.9 isA real_
  void                    Assume             D     %24.10, %22.1 (Typecheck@0x55d28115c7d8[Type#0])
  real_           %24.12 = CastType           d     dn %24.9
  prom-           %24.13 = MkArg                    %5.1, eval_A_times_u[0x55d281b4fd90]_p4 (!refl), e4.4
  val?~           %24.14 = CastType                 up %24.13
  prom-           %24.15 = MkArg                    %20.1, eval_A_times_u[0x55d281b4fd90]_p5 (!refl), e4.4
  val?~           %24.16 = CastType                 up %24.15
  real$-          %24.17 = Extract2_2D        wed   %24.12, %5.1, %20.1, elided   <real$->
  cp              %24.18 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x55d280b29350+464: [1L, %4.1, %13.0, 1L, %13.7, %20.1], env=e4.4
  void                    Deopt              !v    %23.0
BB26   <- [24]
  lgl$-           %26.0 = Neq                d     %24.17, 0, elided   <lgl$->
  lgl$#-          %26.1 = CheckTrueFalse     e     %26.0
  env             e26.2 = (MkEnv)            l     i=%24.14, j=%24.16, parent=e24.8, context 0
  void                    Branch                   %26.1 -> BB29 (if true) | BB27 (if false)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x55d280b29350+508: [1L, %4.1, %13.0, 1L, %13.7, %24.0], env=e4.4
  env             e25.1 = (MkEnv)            l     i=%24.14, j=%24.16, parent=e24.8, context 0
  fs              %25.2 = FrameState         R     0x55d28018bd50+79: [%24.17], env=e25.1, next=%25.0
  void                    Deopt              !v    %25.2
BB29   <- [26]
  val?^ | miss    %29.0 = LdVar              eRd   eval_A_cache, e26.2
  lgl$#-          %29.1 = IsType                   %29.0 isA real_
  void                    Assume             D     %29.1, %24.18 (Typecheck@0x55d28115c7d8[Type#23])
  real_           %29.3 = CastType           d     dn %29.0
  real$-          %29.4 = Extract2_2D        wed   %29.3, %5.1, %20.1, elided   <real$->
  goto BB28
BB27   <- [26]
  int$#-          %27.0 = Add                d     %5.1, %20.1, elided   <int$->
  real$#-         %27.1 = Sub                d     %27.0, 2, elided   <real$->
  real$#-         %27.2 = Sub                d     %27.0, 1, elided   <real$->
  real$#-         %27.3 = Mul                d     %27.1, %27.2, elided   <real$->
  real$-          %27.4 = Div                d     %27.3, 2, elided   <real$->
  real$-          %27.5 = Add                d     %27.4, %5.1, elided   <real$->
  real$-          %27.6 = Div                d     1, %27.5, elided   <real$->
  real_           %27.7 = Subassign2_2D      wed   %27.6, %24.12, %5.1, %20.1, elided
  void                    StVarSuper         lRW   eval_A_cache, %27.7, e26.2
  goto BB28
BB28   <- [29, 27]
  real$-          %28.0 = Phi                      %27.6:BB27, %29.4:BB29   <real$->
  real_           %28.1 = LdVar              eR    eval_A_mat !upd, e4.4
  real_           %28.2 = Subassign2_2D      wed   %28.0, %28.1, %5.1, %20.1, elided
  void                    StVar              lW    eval_A_mat, %28.2, e4.4
  goto BB20
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    j, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    j, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3

│ eval_A_times_u[0x55d281b4fd90]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
