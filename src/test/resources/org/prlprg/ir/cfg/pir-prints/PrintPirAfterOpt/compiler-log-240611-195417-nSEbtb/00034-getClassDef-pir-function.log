
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x56039728b4d0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 1                              │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getClassDef[0x56039728b4d0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  cp              %1.3  = Checkpoint                -> BB2 (default) | BB28 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    .getClassesFromCache, <env 0x560396017378>
  lgl$#-          %2.1  = Identical                %2.0, function(name) <(rir::DispatchTable*)0x560397c|...
  void                    Assume             D     %2.1, %1.3 (CallTarget@0x560397b02190[Call#3])
  env             e2.3  = MkEnv              l     Class=%1.2, where=%1.1, package=%1.0, inherits(miss)=true, parent=<env 0x560396017378>, context 1
  prom-           %2.4  = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p14, e2.3
  ct              %2.5  = PushContext        lCL   %2.4, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x560397c|..., e2.3
  val?^           %2.6  = CastType                 up %2.4
  val?^ | miss    %2.7  = LdVar              eR    .Call, <env 0x560396017378>
  lgl$#-          %2.8  = Identical                <blt .Call>, %2.7   <true>
  cp              %2.9  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB28   <- [1]
  env             e28.0 = (MkEnv)            l     Class=%1.2, where=%1.1, package=%1.0, inherits(miss)=true, parent=<env 0x560396017378>, context 1
  fs              %28.1 = FrameState         R     0x560397c69090+0: [], env=e28.0
  void                    Deopt              !v    %28.1
BB4   <- [2]
  void                    Assume             D     %2.8, %2.9 (DeadBranchReached@0x560396df94f8[Test#0])
  val?^ | miss    %4.1  = LdVar              eR    C_R_getClassFromCache, <env 0x560396017378>
  env             e4.2  = MkEnv              l     name=%2.6, parent=<env 0x560396017378>, context 1
  val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
  val?^ | miss    %4.4  = LdVar              eR    name, e4.2
  val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$+>
  val?^ | miss    %4.6  = LdVar              eR    .classTable, e4.2
  val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
  val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other>
  val?            %4.9  = PopContext         C     %4.8, %2.5   <other>
  lgl$-           %4.10 = Is                       %4.9, list
  void                    StVar              lW    value, %4.9, e2.3
  val             %4.12 = ChkMissing         e     %4.9
  lgl$#-          %4.13 = CheckTrueFalse     e     %4.10
  void                    Branch                   %4.13 -> BB27 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x560397c69090+72: [], env=e2.3
  env             e3.1  = (MkEnv)            l     name=%2.6, parent=<env 0x560396017378>, context 1
  fs              %3.2  = FrameState         R     0x560397c69840+17: [<blt .Call>, %2.8], env=e3.1, next=%3.0
  void                    Deopt              !v    %3.2   !
BB27   <- [4]
  (cls|spec|blt)  %27.0 = LdFun              !v    .resolveClassList, e2.3
  prom-           %27.1 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p15, e2.3
  prom-           %27.2 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p16, e2.3
  prom-           %27.3 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p17, e2.3
  val?            %27.4 = Call               !v    %27.0(%27.1, %27.2, %27.3) e2.3   <val?_>
  void                    StVar              lW    value, %27.4, e2.3
  goto BB6
BB5   <- [4]
  goto BB6
BB6   <- [5, 27]
  val?            %6.0  = Phi                      %27.4:BB27, %4.9:BB5
  val             %6.1  = ChkMissing         e     %6.0   <other>
  lgl$-           %6.2  = Is                       %6.1, NULL
  lgl$#-          %6.3  = CheckTrueFalse     e     %6.2
  void                    Branch                   %6.3 -> BB9 (if true) | BB7 (if false)
BB9   <- [6]
  (cls|spec|blt)  %9.0  = LdFun              !v    classMetaName, e2.3
  prom-           %9.1  = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p1, e2.3
  val?            %9.2  = Call               !v    %9.0(%9.1) e2.3   <val?_>
  void                    StVar              lW    cname, %9.2, e2.3
  val?^ | miss    %9.4  = LdVar              eR    is.character, e2.3
  lgl$#-          %9.5  = Identical                <blt is.character>, %9.4   <@?>
  void                    Branch                   %9.5 -> BB26 (if true) | BB10 (if false)
BB7   <- [6]
  goto BB8
BB26   <- [9]
  val?^ | miss    %26.0 = LdVar              eR    where, e2.3
  val?            %26.1 = Force!             !v    %26.0, e2.3   <val?_>
  lgl$#-          %26.2 = CallSafeBuiltin    wed   is.character(%26.1) 
  goto BB11
BB10   <- [9]
  val?^ | miss    %10.0 = LdVar              eR    where, e2.3
  val?            %10.1 = Force!             !v    %10.0, e2.3   <val?_>
  lgl$#-          %10.2 = CallSafeBuiltin    wed   is.character(%10.1) 
  goto BB11
BB8   <- [7, 20, 21]
  val?^ | miss    %8.0  = LdVar              eR    value, e2.3
  void                    Visible            v     
  val?            %8.2  = Force!<value>      !     %8.0, e2.3   <other>
  void                    Return             l     %8.2
BB11   <- [26, 10]
  lgl$#-          %11.0 = Phi                      %10.2:BB10, %26.2:BB26   <val?_>
  void                    Branch                   %11.0 -> BB25 (if true) | BB12 (if false)
BB25   <- [11]
  val?^ | miss    %25.0 = LdVar              eR    where, e2.3
  val?            %25.1 = Force!             !v    %25.0, e2.3   <val?_>
  void                    StVar              lW    package, %25.1, e2.3
  goto BB13
BB12   <- [11]
  goto BB13
BB13   <- [12, 25]
  (cls|spec|blt)  %13.0 = LdFun              !v    isTRUE, e2.3
  prom-           %13.1 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p4, e2.3
  val?            %13.2 = Call               !v    %13.0(%13.1) e2.3   <val?_>
  lgl$#-          %13.3 = CheckTrueFalse     we    %13.2
  void                    Branch                   %13.3 -> BB24 (if true) | BB14 (if false)
BB24   <- [13]
  (cls|spec|blt)  %24.0 = LdFun              !v    .requirePackage, e2.3
  prom-           %24.1 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p13, e2.3
  val?            %24.2 = Call               !v    %24.0(%24.1) e2.3   <val?_>
  void                    StVar              lW    package, %24.2, e2.3
  goto BB15
BB14   <- [13]
  goto BB15
BB15   <- [14, 24]
  val?^ | miss    %15.0 = LdVar              eR    is.environment, e2.3
  lgl$#-          %15.1 = Identical                <blt is.environment>, %15.0   <@?>
  void                    Branch                   %15.1 -> BB23 (if true) | BB16 (if false)
BB23   <- [15]
  val?^ | miss    %23.0 = LdVar              eR    package, e2.3
  val?            %23.1 = Force!             !v    %23.0, e2.3   <val?_>
  lgl$#-          %23.2 = CallSafeBuiltin    wed   is.environment(%23.1) 
  goto BB17
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    package, e2.3
  val?            %16.1 = Force!             !v    %16.0, e2.3   <val?_>
  lgl$#-          %16.2 = CallSafeBuiltin    wed   is.environment(%16.1) 
  goto BB17
BB17   <- [23, 16]
  lgl$#-          %17.0 = Phi                      %16.2:BB16, %23.2:BB23   <val?_>
  void                    Branch                   %17.0 -> BB22 (if true) | BB18 (if false)
BB22   <- [17]
  (cls|spec|blt)  %22.0 = LdFun              !v    get0, e2.3
  prom-           %22.1 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p10, e2.3
  prom-           %22.2 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p11, e2.3
  prom-           %22.3 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p12, e2.3
  val?            %22.4 = NamedCall          !v    %22.0(%22.1, %22.2, inherits=%22.3) e2.3   <val?_>
  void                    StVar              lW    value, %22.4, e2.3
  goto BB19
BB18   <- [17]
  goto BB19
BB19   <- [18, 22]
  val?^ | miss    %19.0 = LdVar              eR    value, e2.3
  val?            %19.1 = Force!             !v    %19.0, e2.3   <val?_>
  lgl$-           %19.2 = Is                       %19.1, NULL
  lgl$#-          %19.3 = CheckTrueFalse     e     %19.2
  void                    Branch                   %19.3 -> BB21 (if true) | BB20 (if false)
BB21   <- [19]
  (cls|spec|blt)  %21.0 = LdFun              !v    get0, e2.3
  prom-           %21.1 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p7, e2.3
  prom-           %21.2 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p8, e2.3
  prom-           %21.3 = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p9, e2.3
  val?            %21.4 = NamedCall          !v    %21.0(%21.1, %21.2, inherits=%21.3) e2.3   <val?_>
  void                    StVar              lW    value, %21.4, e2.3
  goto BB8
BB20   <- [19]
  goto BB8
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    length, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p2, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2) e1.0   <val?_>
  val?            %1.4  = Gt                 !v    %1.3, 1L, e1.0   <val?_>
  lgl$#-          %1.5  = CheckTrueFalse     we    %1.4
  void                    Branch                   %1.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    Class, e1.0
  val?            %2.1  = Force              !v    %2.0, e1.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e1.0   <val?_>
  void                    Visible            v     
  goto BB3
BB4   <- [1]
  val?^ | miss    %4.0  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %4.2  = Force              !     %4.0, e1.0   <val?_>
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.2:BB4, %2.2:BB2
  void                    Return             l     %3.0
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     nzchar, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x56039728b4d0]_p5, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    cname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    inherits, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    cname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    inherits, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ getClassDef[0x56039728b4d0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
