
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x56039c5af5d0]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
FUN[0x56039c5af5d0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB19 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    is.character, ?
  lgl$#-          %2.1  = Identical                <blt is.character>, %2.0   <true>
  void                    Assume             D     %2.1, %1.1 (DeadBranchReached@0x560398f6e678[Test#0])
  env             e2.3  = MkEnv              l     x=%1.0, parent=?, context 1
  val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <str$+>
  lgl$#-          %2.5  = IsType                   %2.4 isA val?+
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB19   <- [1]
  env             e19.0 = (MkEnv)            l     x=%1.0, parent=?, context 1
  fs              %19.1 = FrameState         R     0x56039981bf60+0: [], env=e19.0
  void                    Deopt              !v    %19.1   !
BB4   <- [2]
  void                    Assume             D     %2.5, %2.6 (Typecheck@0x560398f6e678[Type#1])
  val?+           %4.1  = CastType           d     dn %2.4   <str$+>
  lgl$#-          %4.2  = CallSafeBuiltin    vwed  is.character(%4.1)    <lgl$->
  cp              %4.3  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x56039981bf60+69: [<blt is.character>, %2.4], env=e2.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Branch                   %4.2 -> BB14 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x56039981bf60+91: [%4.2], env=e2.3
  void                    Deopt              !v    %5.0   !
BB14   <- [6]
  val?^ | miss    %14.0 = LdVar              eR    length, e2.3
  lgl$#-          %14.1 = Identical                <blt length>, %14.0   <true>
  void                    Assume             D     %14.1, %4.3 (DeadBranchReached@0x560398f6e678[Test#1])
  val?^ | miss    %14.3 = LdVar              eR    x, e2.3
  val?            %14.4 = Force!<wrapped>    !v    %14.3, e2.3   <str$+>
  lgl$#-          %14.5 = IsType                   %14.4 isA val?+
  cp              %14.6 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB7   <- [6]
  goto BB8
BB16   <- [14]
  void                    Assume             D     %14.5, %14.6 (Typecheck@0x560398f6e678[Type#4])
  val?+           %16.1 = CastType           d     dn %14.4   <str$+>
  (int|real)$-    %16.2 = CallSafeBuiltin    wed   length(%16.1)    <int$->
  lgl$#-          %16.3 = IsType                   %16.2 isA int$-
  cp              %16.4 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x56039981bf60+172: [%4.2, <blt length>, %14.4], env=e2.3
  void                    Deopt              !v    %15.0   !
BB8   <- [7, 18]
  lgl$-           %8.0  = Phi                      %18.5:BB18, %4.2:BB7
  cp              %8.1  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB18   <- [16]
  void                    Assume             D     %16.3, %16.4 (Typecheck@0x560398f6e678[Type#5])
  int$-           %18.1 = CastType           d     dn %16.2
  void                    Visible            v     
  lgl$-           %18.3 = Eq                 vd    %18.1, 1L, elided   <lgl$->
  lgl$-           %18.4 = AsLogical                %18.3
  lgl$-           %18.5 = LAnd                     %4.2, %18.4
  goto BB8
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x56039981bf60+194: [%4.2, %16.2], env=e2.3
  void                    Deopt              !v    %17.0   !
BB10   <- [8]
  lgl$#-          %10.0 = CheckTrueFalse     e     %8.0
  void                    Branch                   %10.0 -> BB13 (if true) | BB11 (if false)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x56039981bf60+213: [%8.0], env=e2.3
  void                    Deopt              !v    %9.0   !
BB13   <- [10]
  val?^ | miss    %13.0 = LdVar              eR    getGeneric, e2.3
  lgl$#-          %13.1 = Identical                %13.0, function(f, mustFind=FALSE, where, package="")|...
  void                    Assume             D     %13.1, %8.1 (CallTarget@0x560398f6e678[Call#2])
  prom-           %13.3 = MkArg                    unboundValue, FUN[0x56039c5af5d0]_p0, e2.3
  val?            %13.4 = StaticCall         !     getGeneric[0x5603998b4bc0](%13.3) e2.3   <cls>
  goto BB12
BB11   <- [10]
  val?^ | miss    %11.0 = LdVar              eR    x, e2.3
  void                    Visible            v     
  val?            %11.2 = Force!             !     %11.0, e2.3   <val?_>
  goto BB12
BB12   <- [11, 13]
  val?            %12.0 = Phi                      %11.2:BB11, %13.4:BB13
  void                    Return             l     %12.0
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3

│ FUN[0x56039c5af5d0]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
