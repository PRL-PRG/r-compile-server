
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x560399824cb0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getClassDef[0x560399824cb0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  env             e1.2  = MkEnv              l     Class=%1.1, where=%1.0, package(miss)=missingArg, inherits(miss)=missingArg, parent=<env 0x560396017378>, context 1
  prom-           %1.3  = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p0, e1.2
  val?^ | miss    %1.4  = CastType                 up %1.3
  void                    StArg              lW    package, %1.4, e1.2
  void                    StArg              lW    inherits, true, e1.2
  cp              %1.7  = Checkpoint                -> BB2 (default) | BB37 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    .getClassesFromCache, <env 0x560396017378>
  lgl$#-          %2.1  = Identical                %2.0, function(name) <(rir::DispatchTable*)0x560397c|...
  void                    Assume             D     %2.1, %1.7 (CallTarget@0x560397b02190[Call#3])
  prom-           %2.3  = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p11, e1.2
  ct              %2.4  = PushContext        lCL   %2.3, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x560397c|..., e1.2
  val?^           %2.5  = CastType                 up %2.3
  val?^ | miss    %2.6  = LdVar              eR    .Call, <env 0x560396017378>
  lgl$#-          %2.7  = Identical                <blt .Call>, %2.6   <true>
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB37   <- [1]
  fs              %37.0 = FrameState         R     0x560397c69090+0: [], env=e1.2
  void                    Deopt              !v    %37.0
BB4   <- [2]
  void                    Assume             D     %2.7, %2.8 (DeadBranchReached@0x560396df94f8[Test#0])
  val?^ | miss    %4.1  = LdVar              eR    C_R_getClassFromCache, <env 0x560396017378>
  env             e4.2  = MkEnv              l     name=%2.5, parent=<env 0x560396017378>, context 1
  val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
  val?^ | miss    %4.4  = LdVar              eR    name, e4.2
  val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$+>
  val?^ | miss    %4.6  = LdVar              eR    .classTable, e4.2
  val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
  val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other>
  val?            %4.9  = PopContext         C     %4.8, %2.4   <(nil|other)>
  lgl$-           %4.10 = Is                       %4.9, list
  void                    StVar              lW    value, %4.9, e1.2
  cp              %4.12 = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x560397c69090+72: [], env=e1.2
  env             e3.1  = (MkEnv)            l     name=%2.5, parent=<env 0x560396017378>, context 1
  fs              %3.2  = FrameState         R     0x560397c69840+17: [<blt .Call>, %2.7], env=e3.1, next=%3.0
  void                    Deopt              !v    %3.2   !
BB6   <- [4]
  val             %6.0  = ChkMissing         e     %4.9   <(nil|other)>
  lgl$#-          %6.1  = CheckTrueFalse     e     %4.10
  lgl$-           %6.2  = Is                       %6.0, NULL
  void                    Branch                   %6.1 -> BB36 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x560397c69090+86: [], env=e1.2
  void                    Deopt              !v    %5.0   !
BB36   <- [6]
  (cls|spec|blt)  %36.0 = LdFun              !v    .resolveClassList, e1.2
  fs              %36.1 = FrameState         R     0x560397c69090+121: [%36.0], env=e1.2
  void                    Deopt              !v    %36.1, DeadCall@0x560397b02190[Call#4], %36.0   !
BB7   <- [6]
  lgl$#-          %7.0  = CheckTrueFalse     e     %6.2
  void                    Branch                   %7.0 -> BB10 (if true) | BB8 (if false)
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    classMetaName, e1.2
  lgl$#-          %10.1 = Identical                %10.0, function(name) <(rir::DispatchTable*)0x5603965|...
  void                    Assume             D     %10.1, %4.12 (CallTarget@0x560397b02190[Call#5])
  prom-           %10.3 = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p3, e1.2
  ct              %10.4 = PushContext        lCL   %10.3, classMetaName(if(>(length(Class), 1L), [[(Clas|..., function(name) <(rir::DispatchTable*)0x5603965|..., e1.2
  val?^           %10.5 = CastType                 up %10.3
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB8   <- [7]
  goto BB9
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    methodsPackageMetaName, <env 0x560396017378>
  lgl$#-          %12.1 = Identical                %12.0, function(prefix, name, package="") <(rir::Disp|...
  void                    Assume             D     %12.1, %10.6 (CallTarget@0x560398b29078[Call#0])
  env             e12.3 = MkEnv              l     name=%10.5, parent=<env 0x560396017378>, context 1
  prom-           %12.4 = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p12, e12.3
  ct              %12.5 = PushContext        lCL   "C", %12.4, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|..., e12.3
  val?^           %12.6 = CastType                 up %12.4
  cp              %12.7 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x560397c69090+234: [], env=e1.2
  env             e11.1 = (MkEnv)            l     name=%10.5, parent=<env 0x560396017378>, context 1
  fs              %11.2 = FrameState         R     0x5603970761e0+0: [], env=e11.1, next=%11.0
  void                    Deopt              !v    %11.2   !
BB9   <- [8, 31]
  val?^ | miss    %9.0  = LdVar              eR    value, e1.2
  void                    Visible            v     
  val?            %9.2  = Force!<value>      !     %9.0, e1.2   <other>
  void                    Return             l     %9.2
BB14   <- [12]
  val?^ | miss    %14.0 = LdVar              eR    .Call, <env 0x560396017378>
  lgl$#-          %14.1 = Identical                <blt .Call>, %14.0   <true>
  void                    Assume             D     %14.1, %12.7 (DeadBranchReached@0x560397f66b80[Test#0])
  val?^ | miss    %14.3 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x560396017378>
  env             e14.4 = MkEnv              l     prefix="C", name=%12.6, package(miss)="", parent=<env 0x560396017378>, context 1
  val?            %14.5 = Force!<value>      !v    %14.3, e14.4   <vec>
  val?^ | miss    %14.6 = LdVar              eR    prefix, e14.4
  val?            %14.7 = Force!<value>      !v    %14.6, e14.4   <str$->
  val?^ | miss    %14.8 = LdVar              eR    name, e14.4
  val?            %14.9 = Force!<lazy>       !v    %14.8, e14.4   <str$->
  val?^ | miss    %14.10 = LdVar              eR    package, e14.4
  val?            %14.11 = Force!<lazy>       !v    %14.10, e14.4   <str$->
  val?            %14.12 = CallBuiltin        !v    .Call(%14.5, %14.7, %14.9, %14.11) e14.4   <str$->
  val?            %14.13 = PopContext         C     %14.12, %12.5   <str$->
  val?            %14.14 = PopContext         C     %14.13, %10.4   <str$->
  void                    StVar              lW    cname, %14.14, e1.2
  cp              %14.16 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x560397c69090+234: [], env=e1.2
  fs              %13.1 = FrameState         R     0x5603970761e0+37: [], env=e12.3, next=%13.0
  env             e13.2 = (MkEnv)            l     prefix="C", name=%12.6, package(miss)="", parent=<env 0x560396017378>, context 1
  fs              %13.3 = FrameState         R     0x560396d1f080+0: [], env=e13.2, next=%13.1
  void                    Deopt              !v    %13.3   !
BB16   <- [14]
  val?^ | miss    %16.0 = LdVar              eR    is.character, e1.2
  lgl$#-          %16.1 = Identical                <blt is.character>, %16.0   <true>
  void                    Assume             D     %16.1, %14.16 (DeadBranchReached@0x560397b02190[Test#1])
  val?^ | miss    %16.3 = LdVar              eR    where, e1.2
  val?            %16.4 = Force!<lazy>       !v    %16.3, e1.2   <env->
  lgl$#-          %16.5 = CallSafeBuiltin    wed   is.character(%16.4)    <lgl$->
  void                    Branch                   %16.5 -> BB35 (if true) | BB17 (if false)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x560397c69090+248: [], env=e1.2
  void                    Deopt              !v    %15.0   !
BB35   <- [16]
  val?^ | miss    %35.0 = LdVar              eR    where, e1.2
  val?            %35.1 = Force!             !v    %35.0, e1.2   <val?_>
  void                    StVar              lW    package, %35.1, e1.2
  goto BB18
BB17   <- [16]
  goto BB18
BB18   <- [17, 35]
  cp              %18.0 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB20   <- [18]
  val?^ | miss    %20.0 = LdVar              eR    isTRUE, e1.2
  lgl$#-          %20.1 = Identical                %20.0, function(x) <(rir::DispatchTable*)0x5603979176|...
  void                    Assume             D     %20.1, %18.0 (CallTarget@0x560397b02190[Call#8])
  prom-           %20.3 = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p5, e1.2
  val?            %20.4 = StaticCall         !v    isTRUE[0x56039dc39d30](%20.3) e1.2   <lgl$->
  lgl$#-          %20.5 = IsType                   %20.4 isA lgl$-
  cp              %20.6 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x560397c69090+378: [], env=e1.2
  void                    Deopt              !v    %19.0   !
BB22   <- [20]
  void                    Assume             D     %20.5, %20.6 (Typecheck@0x560397b02190[Type#26])
  lgl$-           %22.1 = CastType           d     dn %20.4
  lgl$#-          %22.2 = CheckTrueFalse     e     %22.1
  void                    Branch                   %22.2 -> BB34 (if true) | BB23 (if false)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x560397c69090+410: [%20.4], env=e1.2
  void                    Deopt              !v    %21.0   !
BB34   <- [22]
  val?^ | miss    %34.0 = LdVar              eR    .requirePackage, e1.2
  lgl$#-          %34.1 = Identical                %34.0, function(package, mustFind=TRUE) <(rir::Dispat|...
  void                    Assume             D     %34.1, %20.6 (CallTarget@0x560397b02190[Call#10])
  prom-           %34.3 = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p10, e1.2
  val?            %34.4 = StaticCall         !v    .requirePackage[0x56039965a290](%34.3) e1.2   <env->
  void                    StVar              lW    package, %34.4, e1.2
  goto BB24
BB23   <- [22]
  goto BB24
BB24   <- [23, 34]
  cp              %24.0 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    is.environment, e1.2
  lgl$#-          %26.1 = Identical                <blt is.environment>, %26.0   <true>
  void                    Assume             D     %26.1, %24.0 (DeadBranchReached@0x560397b02190[Test#2])
  val?^ | miss    %26.3 = LdVar              eR    package, e1.2
  val?            %26.4 = Force!<value>      !v    %26.3, e1.2   <env->
  lgl$#-          %26.5 = CallSafeBuiltin    wed   is.environment(%26.4)    <lgl$->
  cp              %26.6 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x560397c69090+472: [], env=e1.2
  void                    Deopt              !v    %25.0   !
BB28   <- [26]
  void                    Branch                   %26.5 -> BB33 (if true) | BB29 (if false)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x560397c69090+563: [%26.5], env=e1.2
  void                    Deopt              !v    %27.0   !
BB33   <- [28]
  val?^ | miss    %33.0 = LdVar              eR    get0, e1.2
  lgl$#-          %33.1 = Identical                %33.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Assume             D     %33.1, %26.6 (CallTarget@0x560397b02190[Call#12])
  prom-           %33.3 = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p7, e1.2
  prom-           %33.4 = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p8, e1.2
  prom-           %33.5 = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p9, e1.2
  val?            %33.6 = StaticCall         !v    get0[0x56039d75fa00](%33.3, %33.4, missingArg, %33.5) { 0 1 3n } e1.2   <other>
  void                    StVar              lW    value, %33.6, e1.2
  goto BB30
BB29   <- [28]
  goto BB30
BB30   <- [29, 33]
  val?^ | miss    %30.0 = LdVar              eR    value, e1.2
  val?            %30.1 = Force!<value>      !v    %30.0, e1.2   <other>
  lgl$-           %30.2 = Is                       %30.1, NULL
  lgl$#-          %30.3 = CheckTrueFalse     e     %30.2
  void                    Branch                   %30.3 -> BB32 (if true) | BB31 (if false)
BB32   <- [30]
  (cls|spec|blt)  %32.0 = LdFun              !v    get0, e1.2
  fs              %32.1 = FrameState         R     0x560397c69090+682: [%32.0], env=e1.2
  void                    Deopt              !v    %32.1, DeadCall@0x560397b02190[Call#13], %32.0   !
BB31   <- [30]
  goto BB9
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     packageSlot, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    length, <0x560395a10a90>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p4, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2) e1.0   <int$->
  val?            %1.4  = Gt                 !v    %1.3, 1L, e1.0   <lgl$->
  lgl$#-          %1.5  = CheckTrueFalse     we    %1.4
  void                    Branch                   %1.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    Class, e1.0
  val?            %2.1  = Force              !v    %2.0, e1.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e1.0   <val?_>
  void                    Visible            v     
  goto BB3
BB4   <- [1]
  val?^ | miss    %4.0  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e1.0   <str$->
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.2:BB4, %2.2:BB2
  void                    Return             l     %3.0
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     nzchar, <0x560395a1c240>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x560399824cb0]_p6, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <lgl$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    cname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    inherits, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <lgl$->
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3

│ getClassDef[0x560399824cb0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
