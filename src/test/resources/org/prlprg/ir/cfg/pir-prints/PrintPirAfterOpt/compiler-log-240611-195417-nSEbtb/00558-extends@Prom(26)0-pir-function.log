
┌──────────────────────────────────────────────────────────────────────────────┐
│ extends@Prom(26)0[0x56039e6963f0]                                            │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
extends@Prom(26)0[0x56039e6963f0]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB10 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    isTRUE, ?
  lgl$#-          %2.1  = Identical                %2.0, function(x) <(rir::DispatchTable*)0x5603979176|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x560398cc4bd8[Call#0])
  val?^ | miss    %2.3  = LdVar              eR    body, ?
  lgl$#-          %2.4  = Identical                %2.3, function(fun=sys.function(sys.parent())) <(rir|...
  void                    Assume             D     %2.4, %1.1 (CallTarget@0x560398cc4bd8[Call#1])
  env             e2.6  = MkEnv              l     obj=%1.0, parent=?, context 1
  (cls|spec|blt)  %2.7  = LdFun              !v    @, <0x560395a0fbd8>, ?
  prom-           %2.8  = MkArg                    unboundValue, extends@Prom(26)0[0x56039e6963f0]_p2, e2.6
  prom-           %2.9  = MkArg                    unboundValue, extends@Prom(26)0[0x56039e6963f0]_p3, e2.6
  val?            %2.10 = Call               !v    %2.7(%2.8, %2.9) e2.6   <cls->
  lgl$#-          %2.11 = CallSafeBuiltin    wed   is.character(%2.10)    <lgl$->
  void                    Branch                   %2.11 -> BB9 (if true) | BB3 (if false)
BB10   <- [1]
  env             e10.0 = (MkEnv)            l     obj=%1.0, parent=?, context 1
  fs              %10.1 = FrameState         R     0x560398cfdd40+0: [], env=e10.0
  void                    Deopt              !v    %10.1
BB9   <- [2]
  prom-           %9.0  = MkArg                    %2.10, extends@Prom(26)0[0x56039e6963f0]_p1 (!refl), e2.6
  val?~           %9.1  = CastType                 up %9.0
  fs              %9.2  = FrameState         R     0x560398cfdd40+32: [], env=e2.6
  prom-           %9.3  = MkArg                    unboundValue, extends@Prom(26)0[0x56039e6963f0]_p0, e2.6
  val?^           %9.4  = CastType                 up %9.3
  env             e9.5  = (MkEnv)            l     fun=%9.1, parent=R_BaseNamespace, context 0
  env             e9.6  = MaterializeEnv           , e9.5   <@?>
  (cls|spec|blt)  %9.7  = LdFun              !v    get, e9.6
  env             e9.8  = (MkEnv)            l     x=%9.4, parent=R_BaseNamespace, context 0
  fs              %9.9  = FrameState         R     0x560395e616d0+69: [<blt is.logical>], env=e9.8, next=%9.2
  fs              %9.10 = FrameState         R     0x560398cfdc30+32(pr): [], env=e2.6, next=%9.9
  fs              %9.11 = FrameState         R     0x560398626c40+112: [%9.7], env=e9.6, next=%9.10
  void                    Deopt              !v    %9.11, DeadCall@0x560398cc4868[Call#3], %9.7   !
BB3   <- [2]
  val+            %3.0  = CallSafeBuiltin    wed   body(%2.10)    <lgl$->
  lgl$#-          %3.1  = IsType                   %3.0 isA lgl$-
  cp              %3.2  = Checkpoint                -> BB5 (default) | BB4 (if assume failed)
BB5   <- [3]
  void                    Assume             D     %3.1, %3.2 (Typecheck@0x560398cc4bd8[Type#3])
  lgl$-           %5.1  = CastType           d     dn %3.0
  lgl$-           %5.2  = AsLogical                %5.1
  lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.1)    <lgl$->
  lgl$-           %5.4  = Not                vd    %5.3, elided
  lgl$-           %5.5  = AsLogical                %5.4
  lgl$-           %5.6  = AsLogical                %5.5
  lgl$-           %5.7  = AsLogical                %5.6
  lgl$#-          %5.8  = Identical                %5.7, false
  lgl$-           %5.9  = LAnd                     %5.7, %5.2
  void                    Branch                   %5.8 -> BB8 (if true) | BB6 (if false)
BB4   <- [3]
  prom-           %4.0  = MkArg                    %2.10, extends@Prom(26)0[0x56039e6963f0]_p1 (!refl), e2.6
  val?~           %4.1  = CastType                 up %4.0
  fs              %4.2  = FrameState         R     0x560398cfdd40+32: [], env=e2.6
  prom-           %4.3  = MkArg                    unboundValue, extends@Prom(26)0[0x56039e6963f0]_p0, e2.6
  val?^           %4.4  = CastType                 up %4.3
  env             e4.5  = (MkEnv)            l     x=%4.4, parent=R_BaseNamespace, context 0
  fs              %4.6  = FrameState         R     0x560395e616d0+69: [<blt is.logical>], env=e4.5, next=%4.2
  fs              %4.7  = FrameState         R     0x560398cfdc30+32(pr): [], env=e2.6, next=%4.6
  env             e4.8  = (MkEnv)            l     fun=%4.1, parent=R_BaseNamespace, context 0
  fs              %4.9  = FrameState         R     0x560398626c40+202: [%3.0], env=e4.8, next=%4.7
  void                    Deopt              !v    %4.9   !
BB8   <- [5]
  goto BB7
BB6   <- [5]
  void                    Visible            v     
  goto BB7
BB7   <- [8, 6]
  lgl$-           %7.0  = Phi                      %5.9:BB6, %5.7:BB8
  void                    Return             l     %7.0
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     body, <0x560398d07be0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, extends@Prom(26)0[0x56039e6963f0]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <lgl$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     @, <0x560395a0fbd8>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, extends@Prom(26)0[0x56039e6963f0]_p2, e1.0
  prom-           %1.3  = MkArg                    unboundValue, extends@Prom(26)0[0x56039e6963f0]_p3, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <cls->
  void                    Return             l     %1.4
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    obj, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    test, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ extends@Prom(26)0[0x56039e6963f0]                                            │
└──────────────────────────────────────────────────────────────────────────────┘
