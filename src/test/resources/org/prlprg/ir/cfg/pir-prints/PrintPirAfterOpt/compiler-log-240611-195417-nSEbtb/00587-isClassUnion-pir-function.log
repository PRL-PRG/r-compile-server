
┌──────────────────────────────────────────────────────────────────────────────┐
│ isClassUnion[0x56039e628b70]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
isClassUnion[0x56039e628b70]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB9 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    is.character, <env 0x560396017378>
  lgl$#-          %2.1  = Identical                <blt is.character>, %2.0   <true>
  void                    Assume             D     %2.1, %1.1 (DeadBranchReached@0x5603987e24d8[Test#0])
  env             e2.3  = MkEnv              l     Class=%1.0, parent=<env 0x560396017378>, context 1
  val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <other>
  lgl$#-          %2.5  = CallSafeBuiltin    vwed  is.character(%2.4)    <lgl$->
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB9   <- [1]
  env             e9.0  = (MkEnv)            l     Class=%1.0, parent=<env 0x560396017378>, context 1
  fs              %9.1  = FrameState         R     0x560399a6b6a0+0: [], env=e9.0
  void                    Deopt              !v    %9.1   !
BB4   <- [2]
  void                    Branch                   %2.5 -> BB8 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x560399a6b6a0+91: [%2.5], env=e2.3
  void                    Deopt              !v    %3.0   !
BB8   <- [4]
  (cls|spec|blt)  %8.0  = LdFun              !v    getClass, e2.3
  fs              %8.1  = FrameState         R     0x560399a6b6a0+112: [%8.0], env=e2.3
  void                    Deopt              !v    %8.1, DeadCall@0x5603987e24d8[Call#1], %8.0   !
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    extends, e2.3
  lgl$#-          %5.1  = Identical                %5.0, function(class1, class2, maybe=TRUE, fullInfo=|...
  void                    Assume             D     %5.1, %2.6 (CallTarget@0x5603987e24d8[Call#2])
  prom-           %5.3  = MkArg                    unboundValue, isClassUnion[0x56039e628b70]_p0, e2.3
  val?            %5.4  = Call               !     function(class1, class2, maybe=TRUE, fullInfo=|...(%5.3, "ClassUnionRepresentation") e2.3   <lgl$->
  lgl$#-          %5.5  = IsType                   %5.4 isA lgl$-
  cp              %5.6  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  void                    Assume             D     %5.5, %5.6 (Typecheck@0x5603987e24d8[Type#7])
  lgl$-           %7.1  = CastType           d     dn %5.4
  void                    Return             l     %7.1
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x560399a6b6a0+195: [%5.4], env=e2.3
  void                    Deopt              !v    %6.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     class, <0x560395a10748>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, isClassUnion[0x56039e628b70]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$+>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <other>
  void                    Return             l     %1.3

│ isClassUnion[0x56039e628b70]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
