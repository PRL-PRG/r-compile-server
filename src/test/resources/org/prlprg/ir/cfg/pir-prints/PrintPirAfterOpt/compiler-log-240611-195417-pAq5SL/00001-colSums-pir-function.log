
┌──────────────────────────────────────────────────────────────────────────────┐
│ colSums[0x55569640db30]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
colSums[0x55569640db30]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     x=%1.0, na.rm(miss)=false, dims(miss)=1L, parent=R_BaseNamespace, context 1
  val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <real_>
  lgl$#-          %1.3  = IsType                   %1.2 isA real_
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB83 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.3, %1.4 (Typecheck@0x555695ac2a10[Type#0])
  real_           %2.1  = CastType           d     dn %1.2
  val+            %2.2  = CallSafeBuiltin    wed   inherits(%2.1, "data.frame", false)    <lgl$->
  lgl$#-          %2.3  = IsType                   %2.2 isA lgl$-
  cp              %2.4  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB83   <- [1]
  prom-           %83.0 = MkArg                    unboundValue, colSums[0x55569640db30]_p2, e1.1
  val?^           %83.1 = CastType                 up %83.0
  env             e83.2 = (MkEnv)            l     x=%83.1, parent=R_BaseNamespace, context 0
  env             e83.3 = MaterializeEnv           , e83.2   <@?>
  fs              %83.4 = FrameState         R     0x55569607b7d0+32: [], env=e1.1
  fs              %83.5 = FrameState         R     0x555696079fb0+37: [], env=e83.3, next=%83.4
  prom-           %83.6 = MkArg                    unboundValue, colSums[0x55569640db30]_p6, e83.3
  val?^           %83.7 = CastType                 up %83.6
  env             e83.8 = (MkEnv)            l     which(miss)=false, what="data.frame", x=%83.7, parent=R_BaseNamespace, context -1
  fs              %83.9 = FrameState         R     0x55569607c2a0+9: [], env=e83.8, next=%83.5
  fs              %83.10 = FrameState         R     0x55569607c400+5(pr): [], env=e83.3, next=%83.9
  fs              %83.11 = FrameState         R     0x555696066a00+5(pr): [%1.2], env=e1.1, next=%83.10
  void                    Deopt              !v    %83.11   !
BB4   <- [2]
  void                    Assume             D     %2.3, %2.4 (Typecheck@0x5556957c97f8[Type#1])
  lgl$-           %4.1  = CastType           d     dn %2.2
  lgl$#-          %4.2  = CheckTrueFalse     e     %4.1
  void                    Branch                   %4.2 -> BB82 (if true) | BB5 (if false)
BB3   <- [2]
  prom-           %3.0  = MkArg                    %2.1, colSums[0x55569640db30]_p2 (!refl), e1.1
  val?~           %3.1  = CastType                 up %3.0
  env             e3.2  = (MkEnv)            l     x=%3.1, parent=R_BaseNamespace, context 0
  env             e3.3  = MaterializeEnv           , e3.2   <@?>
  fs              %3.4  = FrameState         R     0x55569607b7d0+32: [], env=e1.1
  fs              %3.5  = FrameState         R     0x555696079fb0+37: [], env=e3.3, next=%3.4
  prom-           %3.6  = MkArg                    %2.1, colSums[0x55569640db30]_p6 (!refl), e3.3
  val?~           %3.7  = CastType                 up %3.6
  env             e3.8  = (MkEnv)            l     which(miss)=false, what="data.frame", x=%3.7, parent=R_BaseNamespace, context -1
  fs              %3.9  = FrameState         R     0x55569607c2a0+55: [%2.2], env=e3.8, next=%3.5
  void                    Deopt              !v    %3.9   !
BB82   <- [4]
  (cls|spec|blt)  %82.0 = LdFun              !v    as.matrix, e1.1
  fs              %82.1 = FrameState         R     0x55569607b7d0+53: [%82.0], env=e1.1
  void                    Deopt              !v    %82.1, DeadCall@0x555695ac2a10[Call#1], %82.0   !
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    is.array, e1.1
  lgl$#-          %5.1  = Identical                <blt is.array>, %5.0   <true>
  void                    Assume             D     %5.1, %2.4 (DeadBranchReached@0x555695ac2a10[Test#0])
  val?^ | miss    %5.3  = LdVar              eR    x, e1.1
  lgl$#-          %5.4  = IsType                   %5.3 isA real~_
  void                    Assume             D     %5.4, %2.4 (Typecheck@0x555695ac2a10[Type#5])
  real~_          %5.6  = CastType           d     dn %5.3
  real_           %5.7  = Force!<wrapped>          %5.6,    <real_>
  lgl$#-          %5.8  = CallSafeBuiltin    wed   is.array(%5.7)    <lgl$->
  cp              %5.9  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  lgl$#-          %7.0  = Not                d     %5.8, elided
  void                    Branch                   %5.8 -> BB79 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x55569607b7d0+185: [%5.8], env=e1.1
  void                    Deopt              !v    %6.0   !
BB79   <- [7]
  val?^ | miss    %79.0 = LdVar              eR    length, e1.1
  lgl$#-          %79.1 = Identical                <blt length>, %79.0   <true>
  void                    Assume             D     %79.1, %5.9 (DeadBranchReached@0x555695ac2a10[Test#1])
  val?^ | miss    %79.3 = LdVar              eR    dim, e1.1
  lgl$#-          %79.4 = Identical                <blt dim>, %79.3   <true>
  void                    Assume             D     %79.4, %5.9 (DeadBranchReached@0x555695ac2a10[Test#2])
  val+            %79.6 = CallSafeBuiltin    wed   dim(%5.7)    <int->
  void                    StVar              lW    dn, %79.6, e1.1
  (int|real)$-    %79.8 = CallSafeBuiltin    wed   length(%79.6)    <int$->
  lgl$#-          %79.9 = IsType                   %79.8 isA int$-
  cp              %79.10 = Checkpoint                -> BB81 (default) | BB80 (if assume failed)
BB8   <- [7]
  goto BB9
BB81   <- [79]
  void                    Assume             D     %79.9, %79.10 (Typecheck@0x555695ac2a10[Type#12])
  int$-           %81.1 = CastType           d     dn %79.8
  lgl$-           %81.2 = Lt                 d     %81.1, 2L, elided   <lgl$->
  lgl$-           %81.3 = AsLogical                %81.2
  lgl$-           %81.4 = LOr                      %7.0, %81.3
  goto BB9
BB80   <- [79]
  fs              %80.0 = FrameState         R     0x55569607b7d0+382: [%7.0, %79.8], env=e1.1
  void                    Deopt              !v    %80.0   !
BB9   <- [8, 81]
  lgl$-           %9.0  = Phi                      %81.4:BB81, %7.0:BB8
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0
  void                    Branch                   %9.1 -> BB78 (if true) | BB10 (if false)
BB78   <- [9]
  (cls|spec|blt)  %78.0 = LdFun              !v    stop, e1.1
  fs              %78.1 = FrameState         R     0x55569607b7d0+417: [%78.0], env=e1.1
  void                    Deopt              !v    %78.1, DeadCall@0x555695ac2a10[Call#6], %78.0   !
BB10   <- [9]
  val?^ | miss    %10.0 = LdVar              eR    dims, e1.1
  val?            %10.1 = Force!<lazy>       !v    %10.0, e1.1   <int$->
  lgl$#-          %10.2 = IsType                   %10.1 isA int$-
  cp              %10.3 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB12   <- [10]
  void                    Assume             D     %10.2, %10.3 (Typecheck@0x555695ac2a10[Type#14])
  int$-           %12.1 = CastType           d     dn %10.1
  lgl$-           %12.2 = Lt                 d     %12.1, 1L, elided   <lgl$->
  lgl$-           %12.3 = AsLogical                %12.2
  lgl$#-          %12.4 = Identical                %12.3, true
  void                    Branch                   %12.4 -> BB77 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x55569607b7d0+454: [%10.1], env=e1.1
  void                    Deopt              !v    %11.0   !
BB77   <- [12]
  goto BB18
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    dims, e1.1
  val?            %13.1 = Force!<wrapped>    !v    %13.0, e1.1   <int$->
  cp              %13.2 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB18   <- [77, 17]
  lgl$-           %18.0 = Phi                      %17.8:BB17, %12.3:BB77
  cp              %18.1 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    length, e1.1
  lgl$#-          %15.1 = Identical                <blt length>, %15.0   <true>
  void                    Assume             D     %15.1, %13.2 (DeadBranchReached@0x555695ac2a10[Test#3])
  val?^ | miss    %15.3 = LdVar              eR    dn, e1.1
  lgl$#-          %15.4 = IsType                   %15.3 isA int-
  void                    Assume             D     %15.4, %13.2 (Typecheck@0x555695ac2a10[Type#18])
  int-            %15.6 = CastType           d     dn %15.3
  (int|real)$-    %15.7 = CallSafeBuiltin    wed   length(%15.6)    <int$->
  lgl$#-          %15.8 = IsType                   %15.7 isA int$-
  cp              %15.9 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x55569607b7d0+487: [%12.3, %13.1], env=e1.1
  void                    Deopt              !v    %14.0   !
BB20   <- [18]
  lgl$#-          %20.0 = CheckTrueFalse     e     %18.0
  void                    Branch                   %20.0 -> BB76 (if true) | BB21 (if false)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x55569607b7d0+608: [%18.0], env=e1.1
  void                    Deopt              !v    %19.0   !
BB17   <- [15]
  void                    Assume             D     %15.8, %15.9 (Typecheck@0x555695ac2a10[Type#19])
  int$-           %17.1 = CastType           d     dn %15.7
  int$-           %17.2 = Sub                d     %17.1, 1L, elided   <int$->
  lgl$#-          %17.3 = IsType                   %13.1 isA int$-
  void                    Assume             D     %17.3, %15.9 (Typecheck@0x555695ac2a10[Type#16])
  int$-           %17.5 = CastType           d     dn %13.1
  lgl$-           %17.6 = Gt                 d     %17.5, %17.2, elided   <lgl$->
  lgl$-           %17.7 = AsLogical                %17.6
  lgl$-           %17.8 = LOr                      %12.3, %17.7
  goto BB18
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x55569607b7d0+583: [%12.3, %13.1, %15.7], env=e1.1
  void                    Deopt              !v    %16.0   !
BB76   <- [20]
  (cls|spec|blt)  %76.0 = LdFun              !v    stop, e1.1
  fs              %76.1 = FrameState         R     0x55569607b7d0+624: [%76.0], env=e1.1
  void                    Deopt              !v    %76.1, DeadCall@0x555695ac2a10[Call#8], %76.0   !
BB21   <- [20]
  val?^ | miss    %21.0 = LdVar              eR    prod, e1.1
  lgl$#-          %21.1 = Identical                <blt prod>, %21.0   <true>
  void                    Assume             D     %21.1, %18.1 (DeadBranchReached@0x555695ac2a10[Test#4])
  val?^ | miss    %21.3 = LdVar              eR    dn, e1.1
  lgl$#-          %21.4 = IsType                   %21.3 isA int-
  void                    Assume             D     %21.4, %18.1 (Typecheck@0x555695ac2a10[Type#28])
  int-            %21.6 = CastType           d     dn %21.3
  val?^ | miss    %21.7 = LdVar              eR    seq_len, e1.1
  lgl$#-          %21.8 = Identical                <blt seq_len>, %21.7   <true>
  void                    Assume             D     %21.8, %18.1 (DeadBranchReached@0x555695ac2a10[Test#7])
  val?^ | miss    %21.10 = LdVar              eR    dims, e1.1
  val?            %21.11 = Force!<wrapped>    !v    %21.10, e1.1   <int$->
  val+            %21.12 = CallSafeBuiltin    wed   seq_len(%21.11)    <int$->
  lgl$#-          %21.13 = IsType                   %21.12 isA int$-
  cp              %21.14 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB23   <- [21]
  void                    Assume             D     %21.13, %21.14 (Typecheck@0x555695ac2a10[Type#33])
  int$-           %23.1 = CastType           d     dn %21.12
  void                    StVar              lW    id, %23.1, e1.1
  int-            %23.3 = Extract1_1D        wed   %21.6, %23.1, elided   <int$->
  lgl$#-          %23.4 = IsType                   %23.3 isA int$-
  cp              %23.5 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x55569607b7d0+848: [<blt prod>, %21.6, %21.12], env=e1.1
  void                    Deopt              !v    %22.0   !
BB25   <- [23]
  void                    Assume             D     %23.4, %23.5 (Typecheck@0x555695ac2a10[Type#34])
  int$-           %25.1 = CastType           d     dn %23.3
  real$-          %25.2 = CallSafeBuiltin    wed   prod(%25.1)    <real$->
  void                    StVar              lW    n, %25.2, e1.1
  cp              %25.4 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x55569607b7d0+865: [<blt prod>, %23.3], env=e1.1
  void                    Deopt              !v    %24.0   !
BB27   <- [25]
  val?^ | miss    %27.0 = LdVar              eR    dn, e1.1
  lgl$#-          %27.1 = IsType                   %27.0 isA int-
  void                    Assume             D     %27.1, %25.4 (Typecheck@0x555695ac2a10[Type#36])
  int-            %27.3 = CastType           d     dn %27.0
  int$-           %27.4 = Minus              d     %23.1, elided
  int-            %27.5 = Extract1_1D        wed   %27.3, %27.4, elided   <int->
  void                    StVar              lW    dn, %27.5, e1.1
  cp              %27.7 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x55569607b7d0+902: [], env=e1.1
  void                    Deopt              !v    %26.0   !
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    is.complex, e1.1
  lgl$#-          %29.1 = Identical                <blt is.complex>, %29.0   <true>
  void                    Assume             D     %29.1, %27.7 (DeadBranchReached@0x555695ac2a10[Test#9])
  val?^ | miss    %29.3 = LdVar              eR    x, e1.1
  val?            %29.4 = Force!<wrapped>    !v    %29.3, e1.1   <real_>
  lgl$#-          %29.5 = CallSafeBuiltin    wed   is.complex(%29.4)    <lgl$->
  void                    Branch                   %29.5 -> BB55 (if true) | BB30 (if false)
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x55569607b7d0+978: [], env=e1.1
  void                    Deopt              !v    %28.0   !
BB55   <- [29]
  val?^ | miss    %55.0 = LdVar              eR    Re, e1.1
  lgl$#-          %55.1 = Identical                <blt Re>, %55.0   <@?>
  void                    Branch                   %55.1 -> BB57 (if true) | BB56 (if false)
BB30   <- [29]
  val?^ | miss    %30.0 = LdVar              eR    x, e1.1
  val?            %30.1 = Force!<wrapped>    !v    %30.0, e1.1   <real_>
  cp              %30.2 = Checkpoint                -> BB32 (default) | BB31 (if assume failed)
BB57   <- [55]
  val?^ | miss    %57.0 = LdVar              eR    x, e1.1
  val?            %57.1 = Force!             !v    %57.0, e1.1   <val?_>
  lgl$#-          %57.2 = IsType                   %57.1 isA val?+
  cp              %57.3 = Checkpoint                -> BB59 (default) | BB58 (if assume failed)
BB56   <- [55]
  (cls|spec|blt)  %56.0 = LdFun              !v    Re, e1.1
  fs              %56.1 = FrameState         R     0x55569607b7d0+1264: [%56.0], env=e1.1
  void                    Deopt              !v    %56.1, DeadCall@0x555695ac2a10[Call#16], %56.0   !
BB32   <- [30]
  val?^ | miss    %32.0 = LdVar              eR    n, e1.1
  lgl$#-          %32.1 = IsType                   %32.0 isA real$-
  void                    Assume             D     %32.1, %30.2 (Typecheck@0x555695ac2a10[Type#44])
  real$-          %32.3 = CastType           d     dn %32.0
  val?^ | miss    %32.4 = LdVar              eR    prod, e1.1
  lgl$#-          %32.5 = Identical                <blt prod>, %32.4   <true>
  void                    Assume             D     %32.5, %30.2 (DeadBranchReached@0x555695ac2a10[Test#10])
  val?^ | miss    %32.7 = LdVar              eR    dn, e1.1
  lgl$#-          %32.8 = IsType                   %32.7 isA int-
  void                    Assume             D     %32.8, %30.2 (Typecheck@0x555695ac2a10[Type#46])
  int-            %32.10 = CastType           d     dn %32.7
  real$-          %32.11 = CallSafeBuiltin    wed   prod(%32.10)    <real$->
  val?^ | miss    %32.12 = LdVar              eR    na.rm, e1.1
  val?            %32.13 = Force!<lazy>       !v    %32.12, e1.1   <lgl$->
  lgl$#-          %32.14 = IsType                   %32.13 isA lgl$-
  cp              %32.15 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB31   <- [30]
  fs              %31.0 = FrameState         R     0x55569607b7d0+1089: [%30.1], env=e1.1
  void                    Deopt              !v    %31.0   !
BB59   <- [57]
  void                    Assume             D     %57.2, %57.3 (Typecheck@0x555695ac2a10[Type#50])
  val?+           %59.1 = CastType           d     dn %57.1   <val?_>
  val+            %59.2 = CallSafeBuiltin    wed   Re(%59.1)    <val?_>
  val?^ | miss    %59.3 = LdVar              eR    n, e1.1
  val?            %59.4 = Force!             !v    %59.3, e1.1   <val?_>
  val?^ | miss    %59.5 = LdVar              eR    prod, e1.1
  lgl$#-          %59.6 = Identical                <blt prod>, %59.5   <@?>
  void                    Branch                   %59.6 -> BB61 (if true) | BB60 (if false)
BB58   <- [57]
  fs              %58.0 = FrameState         R     0x55569607b7d0+1305: [<blt Re>, %57.1], env=e1.1
  void                    Deopt              !v    %58.0   !
BB34   <- [32]
  lgl$#-          %34.0 = IsType                   %30.1 isA real_
  void                    Assume             D     %34.0, %32.15 (Typecheck@0x555695ac2a10[Type#43])
  real_           %34.2 = CastType           d     dn %30.1
  void                    Assume             D     %32.14, %32.15 (Typecheck@0x555695ac2a10[Type#48])
  lgl$-           %34.4 = CastType           d     dn %32.13
  val+            %34.5 = CallSafeBuiltin    wed   colSums(%34.2, %32.3, %32.11, %34.4) 
  goto BB35
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x55569607b7d0+1213: [%30.1, %32.3, %32.11, %32.13], env=e1.1
  void                    Deopt              !v    %33.0   !
BB61   <- [59]
  val?^ | miss    %61.0 = LdVar              eR    dn, e1.1
  val?            %61.1 = Force!             !v    %61.0, e1.1   <val?_>
  lgl$#-          %61.2 = IsType                   %61.1 isA val?+
  cp              %61.3 = Checkpoint                -> BB63 (default) | BB62 (if assume failed)
BB60   <- [59]
  (cls|spec|blt)  %60.0 = LdFun              !v    prod, e1.1
  fs              %60.1 = FrameState         R     0x55569607b7d0+1374: [%59.2, %59.4, %60.0], env=e1.1
  void                    Deopt              !v    %60.1, DeadCall@0x555695ac2a10[Call#17], %60.0   !
BB35   <- [34, 75]
  val+            %35.0 = Phi                      %34.5:BB34, %75.7:BB75
  void                    StVar              lW    z, %35.0, e1.1
  cp              %35.2 = Checkpoint                -> BB37 (default) | BB36 (if assume failed)
BB63   <- [61]
  void                    Assume             D     %61.2, %61.3 (Typecheck@0x555695ac2a10[Type#54])
  val?+           %63.1 = CastType           d     dn %61.1   <val?_>
  (real|complex)$- %63.2 = CallSafeBuiltin    wed   prod(%63.1)    <val?_>
  val?^ | miss    %63.3 = LdVar              eR    na.rm, e1.1
  val?            %63.4 = Force!             !v    %63.3, e1.1   <val?_>
  lgl$#-          %63.5 = IsType                   %63.4 isA val?+
  cp              %63.6 = Checkpoint                -> BB65 (default) | BB64 (if assume failed)
BB62   <- [61]
  fs              %62.0 = FrameState         R     0x55569607b7d0+1415: [%59.2, %59.4, <blt prod>, %61.1], env=e1.1
  void                    Deopt              !v    %62.0   !
BB37   <- [35]
  val?^ | miss    %37.0 = LdVar              eR    length, e1.1
  lgl$#-          %37.1 = Identical                <blt length>, %37.0   <true>
  void                    Assume             D     %37.1, %35.2 (DeadBranchReached@0x555695ac2a10[Test#15])
  val?^ | miss    %37.3 = LdVar              eR    dn, e1.1
  lgl$#-          %37.4 = IsType                   %37.3 isA int-
  void                    Assume             D     %37.4, %35.2 (Typecheck@0x555695ac2a10[Type#68])
  int-            %37.6 = CastType           d     dn %37.3
  (int|real)$-    %37.7 = CallSafeBuiltin    wed   length(%37.6)    <int$->
  lgl$#-          %37.8 = IsType                   %37.7 isA int$-
  cp              %37.9 = Checkpoint                -> BB39 (default) | BB38 (if assume failed)
BB36   <- [35]
  fs              %36.0 = FrameState         R     0x55569607b7d0+1729: [], env=e1.1
  void                    Deopt              !v    %36.0   !
BB65   <- [63]
  lgl$#-          %65.0 = IsType                   %59.4 isA val?+
  void                    Assume             D     %65.0, %63.6 (Typecheck@0x555695ac2a10[Type#52])
  val?+           %65.2 = CastType           d     dn %59.4   <val?_>
  void                    Assume             D     %63.5, %63.6 (Typecheck@0x555695ac2a10[Type#56])
  val?+           %65.4 = CastType           d     dn %63.4   <val?_>
  val+            %65.5 = CallSafeBuiltin    wed   colSums(%59.2, %65.2, %63.2, %65.4) 
  val?^ | miss    %65.6 = LdVar              eR    Im, e1.1
  lgl$#-          %65.7 = Identical                <blt Im>, %65.6   <@?>
  void                    Branch                   %65.7 -> BB67 (if true) | BB66 (if false)
BB64   <- [63]
  fs              %64.0 = FrameState         R     0x55569607b7d0+1451: [%59.2, %59.4, %63.2, %63.4], env=e1.1
  void                    Deopt              !v    %64.0   !
BB39   <- [37]
  void                    Assume             D     %37.8, %37.9 (Typecheck@0x555695ac2a10[Type#69])
  int$-           %39.1 = CastType           d     dn %37.7
  lgl$-           %39.2 = Gt                 d     %39.1, 1L, elided   <lgl$->
  lgl$#-          %39.3 = CheckTrueFalse     e     %39.2
  void                    Branch                   %39.3 -> BB46 (if true) | BB40 (if false)
BB38   <- [37]
  fs              %38.0 = FrameState         R     0x55569607b7d0+1820: [%37.7], env=e1.1
  void                    Deopt              !v    %38.0   !
BB67   <- [65]
  val?^ | miss    %67.0 = LdVar              eR    x, e1.1
  val?            %67.1 = Force!             !v    %67.0, e1.1   <val?_>
  lgl$#-          %67.2 = IsType                   %67.1 isA val?+
  cp              %67.3 = Checkpoint                -> BB69 (default) | BB68 (if assume failed)
BB66   <- [65]
  (cls|spec|blt)  %66.0 = LdFun              !v    Im, e1.1
  fs              %66.1 = FrameState         R     0x55569607b7d0+1503: [%65.5, , %66.0], env=e1.1
  void                    Deopt              !v    %66.1, DeadCall@0x555695ac2a10[Call#18], %66.0   !
BB46   <- [39]
  (cls|spec|blt)  %46.0 = LdFun              !v    dim<-, <0x5556941e2278>, e1.1
  cp              %46.1 = Checkpoint                -> BB48 (default) | BB47 (if assume failed)
BB40   <- [39]
  val?^ | miss    %40.0 = LdVar              eR    dimnames, e1.1
  lgl$#-          %40.1 = Identical                <blt dimnames>, %40.0   <true>
  void                    Assume             D     %40.1, %37.9 (DeadBranchReached@0x555695ac2a10[Test#16])
  val?^ | miss    %40.3 = LdVar              eR    x, e1.1
  val?            %40.4 = Force!<wrapped>    !v    %40.3, e1.1   <real_>
  val?            %40.5 = CallBuiltin        !v    dimnames(%40.4) e1.1   <nil->
  lgl$#-          %40.6 = IsType                   %40.5 isA val+   <true>
  lgl$#-          %40.7 = IsType                   %40.5 isA val?-
  cp              %40.8 = Checkpoint                -> BB42 (default) | BB41 (if assume failed)
BB69   <- [67]
  void                    Assume             D     %67.2, %67.3 (Typecheck@0x555695ac2a10[Type#58])
  val?+           %69.1 = CastType           d     dn %67.1   <val?_>
  val+            %69.2 = CallSafeBuiltin    wed   Im(%69.1)    <val?_>
  val?^ | miss    %69.3 = LdVar              eR    n, e1.1
  val?            %69.4 = Force!             !v    %69.3, e1.1   <val?_>
  val?^ | miss    %69.5 = LdVar              eR    prod, e1.1
  lgl$#-          %69.6 = Identical                <blt prod>, %69.5   <@?>
  void                    Branch                   %69.6 -> BB71 (if true) | BB70 (if false)
BB68   <- [67]
  fs              %68.0 = FrameState         R     0x55569607b7d0+1544: [%65.5, , <blt Im>, %67.1], env=e1.1
  void                    Deopt              !v    %68.0   !
BB48   <- [46]
  val?^ | miss    %48.0 = LdVar              eR    z, e1.1
  lgl$#-          %48.1 = IsType                   %48.0 isA real-
  void                    Assume             D     %48.1, %46.1 (Typecheck@0x555695ac2a10[Type#81])
  real-           %48.3 = CastType           d     dn %48.0
  val?            %48.4 = NamedCall          !v    %46.0(%48.3, value=%37.6) e1.1
  void                    StVar              lW    z, %48.4, e1.1
  cp              %48.6 = Checkpoint                -> BB50 (default) | BB49 (if assume failed)
BB47   <- [46]
  fs              %47.0 = FrameState         R     0x55569607b7d0+2090: [%37.6], env=e1.1
  void                    Deopt              !v    %47.0   !
BB42   <- [40]
  void                    Assume             D     %40.6, %40.8 (DeadBranchReached@0x555695ac2a10[Test#17])
  val?^ | miss    %42.1 = LdVar              eR    dims, e1.1
  lgl$#-          %42.2 = IsType                   %42.1 isA int$~-
  void                    Assume             D     %42.2, %40.8 (Typecheck@0x555695ac2a10[Type#76])
  int$~-          %42.4 = CastType           d     dn %42.1
  int$-           %42.5 = Force!<wrapped>          %42.4,    <int$->
  int$-           %42.6 = Add                d     %42.5, 1L, elided   <int$->
  void                    Assume             D     %40.7, %40.8 (Typecheck@0x555695ac2a10[Type#73])
  val?-           %42.8 = CastType           d     dn %40.5   <nil->
  val?            %42.9 = Extract2_1D        wed   %42.8, %42.6, elided   <nil->
  (cls|spec|blt)  %42.10 = LdFun              !v    names<-, <0x5556941e2438>, e1.1
  cp              %42.11 = Checkpoint                -> BB44 (default) | BB43 (if assume failed)
BB41   <- [40]
  fs              %41.0 = FrameState         R     0x55569607b7d0+1934: [%40.5], env=e1.1
  void                    Deopt              !v    %41.0   !
BB71   <- [69]
  val?^ | miss    %71.0 = LdVar              eR    dn, e1.1
  val?            %71.1 = Force!             !v    %71.0, e1.1   <val?_>
  lgl$#-          %71.2 = IsType                   %71.1 isA val?+
  cp              %71.3 = Checkpoint                -> BB73 (default) | BB72 (if assume failed)
BB70   <- [69]
  (cls|spec|blt)  %70.0 = LdFun              !v    prod, e1.1
  fs              %70.1 = FrameState         R     0x55569607b7d0+1613: [%65.5, , %69.2, %69.4, %70.0], env=e1.1
  void                    Deopt              !v    %70.1, DeadCall@0x555695ac2a10[Call#19], %70.0   !
BB50   <- [48]
  val?^ | miss    %50.0 = LdVar              eR    dimnames, e1.1
  lgl$#-          %50.1 = Identical                <blt dimnames>, %50.0   <true>
  void                    Assume             D     %50.1, %48.6 (DeadBranchReached@0x555695ac2a10[Test#18])
  val?^ | miss    %50.3 = LdVar              eR    x, e1.1
  val?            %50.4 = Force!<wrapped>    !v    %50.3, e1.1   <real_>
  val?            %50.5 = CallBuiltin        !v    dimnames(%50.4) e1.1   <nil->
  lgl$#-          %50.6 = IsType                   %50.5 isA val+   <true>
  lgl$#-          %50.7 = IsType                   %50.5 isA val?-
  cp              %50.8 = Checkpoint                -> BB52 (default) | BB51 (if assume failed)
BB49   <- [48]
  fs              %49.0 = FrameState         R     0x55569607b7d0+2158: [], env=e1.1
  void                    Deopt              !v    %49.0   !
BB44   <- [42]
  val?^ | miss    %44.0 = LdVar              eR    z, e1.1
  lgl$#-          %44.1 = IsType                   %44.0 isA real-
  void                    Assume             D     %44.1, %42.11 (Typecheck@0x555695ac2a10[Type#79])
  real-           %44.3 = CastType           d     dn %44.0
  val?            %44.4 = NamedCall          !v    %42.10(%44.3, value=%42.9) e1.1
  void                    StVar              lW    z, %44.4, e1.1
  goto BB45
BB43   <- [42]
  fs              %43.0 = FrameState         R     0x55569607b7d0+2003: [%42.9], env=e1.1
  void                    Deopt              !v    %43.0   !
BB73   <- [71]
  void                    Assume             D     %71.2, %71.3 (Typecheck@0x555695ac2a10[Type#62])
  val?+           %73.1 = CastType           d     dn %71.1   <val?_>
  (real|complex)$- %73.2 = CallSafeBuiltin    wed   prod(%73.1)    <val?_>
  val?^ | miss    %73.3 = LdVar              eR    na.rm, e1.1
  val?            %73.4 = Force!             !v    %73.3, e1.1   <val?_>
  lgl$#-          %73.5 = IsType                   %73.4 isA val?+
  cp              %73.6 = Checkpoint                -> BB75 (default) | BB74 (if assume failed)
BB72   <- [71]
  fs              %72.0 = FrameState         R     0x55569607b7d0+1654: [%65.5, , %69.2, %69.4, <blt prod>, %71.1], env=e1.1
  void                    Deopt              !v    %72.0   !
BB52   <- [50]
  void                    Assume             D     %50.6, %50.8 (DeadBranchReached@0x555695ac2a10[Test#19])
  val?^ | miss    %52.1 = LdVar              eR    id, e1.1
  lgl$#-          %52.2 = IsType                   %52.1 isA int$-
  void                    Assume             D     %52.2, %50.8 (Typecheck@0x555695ac2a10[Type#86])
  int$-           %52.4 = CastType           d     dn %52.1
  int$-           %52.5 = Minus              d     %52.4, elided
  void                    Assume             D     %50.7, %50.8 (Typecheck@0x555695ac2a10[Type#84])
  val?-           %52.7 = CastType           d     dn %50.5   <nil->
  val?            %52.8 = Extract1_1D        wed   %52.7, %52.5, elided   <nil->
  (cls|spec|blt)  %52.9 = LdFun              !v    dimnames<-, <0x5556941e2358>, e1.1
  cp              %52.10 = Checkpoint                -> BB54 (default) | BB53 (if assume failed)
BB51   <- [50]
  fs              %51.0 = FrameState         R     0x55569607b7d0+2249: [%50.5], env=e1.1
  void                    Deopt              !v    %51.0   !
BB45   <- [54, 44]
  val?            %45.0 = Phi                      %54.4:BB54, %44.4:BB44
  val             %45.1 = ChkMissing         e     %45.0   <real_>
  void                    Visible            v     
  void                    Return             l     %45.1
BB75   <- [73]
  lgl$#-          %75.0 = IsType                   %69.4 isA val?+
  void                    Assume             D     %75.0, %73.6 (Typecheck@0x555695ac2a10[Type#60])
  val?+           %75.2 = CastType           d     dn %69.4   <val?_>
  void                    Assume             D     %73.5, %73.6 (Typecheck@0x555695ac2a10[Type#64])
  val?+           %75.4 = CastType           d     dn %73.4   <val?_>
  val+            %75.5 = CallSafeBuiltin    wed   colSums(%69.2, %75.2, %73.2, %75.4) 
  complex+        %75.6 = Mul                wed   , %75.5, elided   <val?_>
  (int|real|complex)+ %75.7 = Add                wed   %65.5, %75.6, elided   <val?_>
  goto BB35
BB74   <- [73]
  fs              %74.0 = FrameState         R     0x55569607b7d0+1690: [%65.5, , %69.2, %69.4, %73.2, %73.4], env=e1.1
  void                    Deopt              !v    %74.0   !
BB54   <- [52]
  val?^ | miss    %54.0 = LdVar              eR    z, e1.1
  lgl$#-          %54.1 = IsType                   %54.0 isA real_
  void                    Assume             D     %54.1, %52.10 (Typecheck@0x555695ac2a10[Type#88])
  real_           %54.3 = CastType           d     dn %54.0
  val?            %54.4 = NamedCall          !v    %52.9(%54.3, value=%52.8) e1.1
  void                    StVar              lW    z, %54.4, e1.1
  goto BB45
BB53   <- [52]
  fs              %53.0 = FrameState         R     0x55569607b7d0+2307: [%52.8], env=e1.1
  void                    Deopt              !v    %53.0   !
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <real_>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <real_>
  void                    Return             l     %1.3

│ colSums[0x55569640db30]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
