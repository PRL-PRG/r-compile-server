
┌──────────────────────────────────────────────────────────────────────────────┐
│ advance[0x555697246540]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleReal0    │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
advance[0x555697246540]
BB0
  goto BB1
BB1   <- [0]
  real$~-         %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB64 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    array, R_GlobalEnv
  lgl$#-          %2.1  = Identical                %2.0, function(data=NA, dim=length(data), dimnames=N|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x555695797db8[Call#0])
  val?^ | miss    %2.3  = LdVar              eR    c, R_GlobalEnv
  lgl$#-          %2.4  = Identical                %2.3, <blt c>
  void                    Assume             D     %2.4, %1.1 (CallTarget@0x555695797db8[Call#1])
  val?^ | miss    %2.6  = LdVar              eR    n_bodies, R_GlobalEnv
  lgl$#-          %2.7  = IsType                   %2.6 isA real$-
  void                    Assume             D     %2.7, %1.1 (Typecheck@0x555695797db8[Type#0])
  real$-          %2.9  = CastType           d     dn %2.6
  real-           %2.10 = CallSafeBuiltin    wed   c(%2.9, %2.9, 3)    <real->
  lgl$#-          %2.11 = ColonInputEffects        1, %2.9   <true>
  val+            %2.12 = CallSafeBuiltin    wed   array(na-lgl, %2.10, nil)    <lgl_>
  cp              %2.13 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB64   <- [1]
  env             e64.0 = (MkEnv)            l     dt=%1.0, parent=R_GlobalEnv, context 1
  fs              %64.1 = FrameState         R     0x5556960a5b40+0: [], env=e64.0
  void                    Deopt              !v    %64.1
BB4   <- [2]
  void                    Assume             D     %2.11, %2.13 (DeadBranchReached@0x555695797db8[Test#0])
  int$#-          %4.1  = ColonCastRhs       e     1L, %2.9   <int$->
  lgl$#-          %4.2  = Lte                d     1L, %4.1, elided   <true>
  void                    Assume             D     %4.2, %2.13 (DeadBranchReached@0x555695797db8[Test#10])
  val?^ | miss    %4.4  = LdVar              eR    body_r, R_GlobalEnv
  env             e4.5  = MkEnv              l     dt=%1.0, drr=%2.12, parent=R_GlobalEnv, context 1
  goto BB5
BB3   <- [2]
  env             e3.0  = (MkEnv)            l     dt=%1.0, drr=%2.12, parent=R_GlobalEnv, context 1
  fs              %3.1  = FrameState         R     0x5556960a5b40+50: [], env=e3.0
  void                    Deopt              !v    %3.1
BB5   <- [4, 60]
  val+            %5.0  = Phi                      %2.12:BB4, %59.0:BB60   <(lgl|real)_>
  int$#-          %5.1  = Phi                      1L:BB4, %56.0:BB60
  cp              %5.2  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  lgl$#-          %7.0  = Neq                d     %4.1, %5.1, elided
  void                    Branch                   %7.0 -> BB54 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x5556960a5b40+172: [1L, %4.1, %5.1], env=e4.5
  void                    Deopt              !v    %6.0
BB54   <- [7]
  void                    StVar              lW    i, %5.1, e4.5
  cp              %54.1 = Checkpoint                -> BB56 (default) | BB55 (if assume failed)
BB8   <- [7]
  val?^ | miss    %8.0  = LdVar              eR    sqrt, R_GlobalEnv
  lgl$#-          %8.1  = Identical                <blt sqrt>, %8.0   <true>
  void                    Assume             D     %8.1, %5.2 (DeadBranchReached@0x555695797db8[Test#20])
  val?^ | miss    %8.3  = LdVar              eR    t, R_GlobalEnv
  lgl$#-          %8.4  = Identical                %8.3, function(x) <(rir::DispatchTable*)0x5556953808|...
  void                    Assume             D     %8.4, %5.2 (CallTarget@0x555695797db8[Call#6])
  val?^ | miss    %8.6  = LdVar              eR    colSums, R_GlobalEnv
  lgl$#-          %8.7  = Identical                %8.6, function(x, na.rm=FALSE, dims=1L) <(rir::Dispa|...
  void                    Assume             D     %8.7, %5.2 (CallTarget@0x555695797db8[Call#7])
  prom-           %8.9  = MkArg                    unboundValue, advance[0x555697246540]_p9, e4.5
  val?            %8.10 = Call               !v    function(x, na.rm=FALSE, dims=1L) <(rir::Dispa|...(%8.9) e4.5   <real_>
  prom-           %8.11 = MkArg                    %8.10, advance[0x555697246540]_p3 (!refl), e4.5
  val?            %8.12 = StaticCall         !v    t[0x55569692a110](%8.11) e4.5   <real_>
  lgl$#-          %8.13 = IsType                   %8.12 isA real_
  cp              %8.14 = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB56   <- [54]
  int$#-          %56.0 = Add                d     %5.1, 1L, elided
  lgl$#-          %56.1 = ColonInputEffects        1, %2.9   <true>
  void                    Assume             D     %56.1, %54.1 (DeadBranchReached@0x555695797db8[Test#11])
  int$#-          %56.3 = ColonCastRhs       e     1L, %2.9   <int$->
  lgl$#-          %56.4 = Lte                d     1L, %56.3, elided   <true>
  void                    Assume             D     %56.4, %54.1 (DeadBranchReached@0x555695797db8[Test#14])
  lgl$#-          %56.6 = Neq                d     %56.3, 1L, elided   <true>
  void                    Assume             D     %56.6, %54.1 (DeadBranchReached@0x555695797db8[Test#15])
  void                    StVar              lW    j, 1L, e4.5
  cp              %56.9 = Checkpoint                -> BB58 (default) | BB57 (if assume failed)
BB55   <- [54]
  fs              %55.0 = FrameState         R     0x5556960a5b40+189: [1L, %4.1, %5.1], env=e4.5
  void                    Deopt              !v    %55.0
BB10   <- [8]
  void                    Assume             D     %8.13, %8.14 (Typecheck@0x555695797db8[Type#103])
  real_           %10.1 = CastType           d     dn %8.12
  real_           %10.2 = CallSafeBuiltin    wed   sqrt(%10.1)    <real_>
  void                    StVar              lW    distance, %10.2, e4.5
  val?^ | miss    %10.4 = LdVar              eR    dt, e4.5
  val?            %10.5 = Force!<value>      !v    %10.4, e4.5   <real$->
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x5556960a5b40+913: [<blt sqrt>, %8.12], env=e4.5
  void                    Deopt              !v    %9.0   !
BB58   <- [56]
  lgl$#-          %58.0 = IsType                   %4.4 isA real_
  void                    Assume             D     %58.0, %56.9 (Typecheck@0x555695797db8[Type#68])
  real_           %58.2 = CastType           d     dn %4.4
  real_           %58.3 = Extract1_2D        wed   %58.2, missingArg, %5.1, elided   <real->
  real_           %58.4 = Extract1_2D        wed   %58.2, missingArg, 1L, elided   <real->
  real_           %58.5 = Sub                wed   %58.3, %58.4, elided   <real->
  val+            %58.6 = Subassign1_3D      wed   %58.5, %5.0, %5.1, 1L, missingArg, elided
  void                    StVar              lW    drr, %58.6, e4.5
  goto BB59
BB57   <- [56]
  fs              %57.0 = FrameState         R     0x5556960a5b40+340: [1L, %4.1, %56.0, 1L, %56.3, 1L], env=e4.5
  void                    Deopt              !v    %57.0
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    distance, e4.5
  lgl$#-          %12.1 = IsType                   %12.0 isA real_
  void                    Assume             D     %12.1, %10.6 (Typecheck@0x555695797db8[Type#106])
  real_           %12.3 = CastType           d     dn %12.0
  real_           %12.4 = Mul                wed   %12.3, %12.3, elided   <real_>
  real_           %12.5 = Mul                wed   %12.4, %12.3, elided   <real_>
  cp              %12.6 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x5556960a5b40+958: [%10.5], env=e4.5
  void                    Deopt              !v    %11.0   !
BB59   <- [63, 58]
  val+            %59.0 = Phi                      %58.6:BB58, %63.3:BB63
  int$#-          %59.1 = Phi                      2L:BB58, %61.1:BB63
  lgl$#-          %59.2 = Neq                d     %56.3, %59.1, elided
  void                    Branch                   %59.2 -> BB61 (if true) | BB60 (if false)
BB14   <- [12]
  lgl$#-          %14.0 = IsType                   %10.5 isA real$-
  void                    Assume             D     %14.0, %12.6 (Typecheck@0x555695797db8[Type#105])
  real$-          %14.2 = CastType           d     dn %10.5
  real_           %14.3 = Div                wed   %14.2, %12.5, elided   <real_>
  void                    StVar              lW    mag, %14.3, e4.5
  cp              %14.5 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x5556960a5b40+1012: [%10.5, %12.5], env=e4.5
  void                    Deopt              !v    %13.0   !
BB61   <- [59]
  void                    StVar              lW    j, %59.1, e4.5
  int$#-          %61.1 = Add                d     %59.1, 1L, elided
  real_           %61.2 = Extract1_2D        wed   %58.2, missingArg, %5.1, elided   <real->
  real_           %61.3 = Extract1_2D        wed   %58.2, missingArg, %59.1, elided   <real->
  real_           %61.4 = Sub                wed   %61.2, %61.3, elided   <real->
  cp              %61.5 = Checkpoint                -> BB63 (default) | BB62 (if assume failed)
BB60   <- [59]
  goto BB5
BB16   <- [14]
  val?^ | miss    %16.0 = LdVar              eR    diag<-, e4.5
  lgl$#-          %16.1 = Identical                %16.0, function(x, value) <(rir::DispatchTable*)0x555|...
  void                    Assume             D     %16.1, %14.5 (CallTarget@0x555695797db8[Call#9])
  ct              %16.3 = PushContext        lCL   %14.3, 0, diag<-(mag, value=0), function(x, value) <(rir::DispatchTable*)0x555|..., e4.5
  val+            %16.4 = CallSafeBuiltin    wed   dim(%14.3)    <int->
  (int|real)$-    %16.5 = CallSafeBuiltin    wed   length(%16.4)    <int$->
  lgl$#-          %16.6 = IsType                   %16.5 isA int$-
  cp              %16.7 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x5556960a5b40+1033: [], env=e4.5
  void                    Deopt              !v    %15.0   !
BB63   <- [61]
  lgl$#-          %63.0 = IsType                   %59.0 isA real_
  void                    Assume             D     %63.0, %61.5 (Typecheck@0x555695797db8[Type#89])
  real_           %63.2 = CastType           d     dn %59.0
  real_           %63.3 = Subassign1_3D      wed   %61.4, %63.2, %5.1, %59.1, missingArg, elided
  void                    StVar              lW    drr, %63.3, e4.5
  goto BB59
BB62   <- [61]
  fs              %62.0 = FrameState         R     0x5556960a5b40+739: [1L, %4.1, %56.0, 1L, %56.3, %61.1, %61.4], env=e4.5
  void                    Deopt              !v    %62.0
BB18   <- [16]
  void                    Assume             D     %16.6, %16.7 (Typecheck@0x555695797fc8[Type#5])
  int$-           %18.1 = CastType           d     dn %16.5
  lgl$-           %18.2 = Neq                d     %18.1, 2L, elided   <lgl$->
  lgl$#-          %18.3 = CheckTrueFalse     e     %18.2
  void                    Branch                   %18.3 -> BB53 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x5556960a5b40+1098: [], env=e4.5
  env             e17.1 = (MkEnv)            l     x=%14.3, value=0, dx=%16.4, parent=R_BaseNamespace, context 1
  fs              %17.2 = FrameState         R     0x5556960b5b80+196: [%16.5], env=e17.1, next=%17.0
  void                    Deopt              !v    %17.2   !
BB53   <- [18]
  env             e53.0 = (MkEnv)            l     x=%14.3, value=0, dx=%16.4, parent=R_BaseNamespace, context 1
  (cls|spec|blt)  %53.1 = LdFun              !v    stop, R_BaseNamespace
  fs              %53.2 = FrameState         R     0x5556960a5b40+1098: [], env=e4.5
  fs              %53.3 = FrameState         R     0x5556960b5b80+229: [%53.1], env=e53.0, next=%53.2
  void                    Deopt              !v    %53.3, DeadCall@0x555695797fc8[Call#2], %53.1   !
BB19   <- [18]
  lgl$#-          %19.0 = IsType                   %16.4 isA int-
  void                    Assume             D     %19.0, %16.7 (Typecheck@0x555695797fc8[Type#8])
  int-            %19.2 = CastType           d     dn %16.4
  int$-           %19.3 = CallSafeBuiltin    wed   min(%19.2)    <int$->
  lgl$#-          %19.4 = CheckTrueFalse     e     %19.3
  env             e19.5 = MkEnv              l     x=%14.3, value=0, dx=%19.2, len.i=%19.3, len.v=1L, parent=R_BaseNamespace, context 1
  void                    Branch                   %19.4 -> BB50 (if true) | BB20 (if false)
BB50   <- [19]
  val+            %50.0 = CallSafeBuiltin    wed   seq_len(%19.3)    <int->
  void                    StVar              lW    i, %50.0, e19.5
  prom-           %50.2 = MkArg                    unboundValue, advance[0x555697246540]_p26 (!refl), e19.5
  prom-           %50.3 = MkArg                    unboundValue, advance[0x555697246540]_p27 (!refl), e19.5
  dots-           %50.4 = DotsList           l     %50.2, %50.3
  ct              %50.5 = PushContext        lCL   %50.4, cbind(i, i), function(..., deparse.level=1) <(rir::Dispatch|..., e19.5
  env             e50.6 = MkEnv              l     ...=%50.4, deparse.level(miss)=1, parent=R_BaseNamespace, context 1
  prom-           %50.7 = MkArg                    unboundValue, advance[0x555697246540]_p28, e50.6
  val?            %50.8 = Call               !v    <spec .Internal>(%50.7) e50.6   <int+>
  val?            %50.9 = PopContext         C     %50.8, %50.5   <int+>
  lgl$#-          %50.10 = IsType                   %50.9 isA int+
  cp              %50.11 = Checkpoint                -> BB52 (default) | BB51 (if assume failed)
BB20   <- [19]
  goto BB21
BB52   <- [50]
  void                    Assume             D     %50.10, %50.11 (Typecheck@0x555695797fc8[Type#26])
  int+            %52.1 = CastType           d     dn %50.9
  real_           %52.2 = Subassign1_1D      wed   0, %14.3, %52.1, elided
  void                    StVar              lW    x, %52.2, e19.5
  goto BB21
BB51   <- [50]
  fs              %51.0 = FrameState         R     0x5556960a5b40+1098: [], env=e4.5
  fs              %51.1 = FrameState         R     0x5556960b5b80+775: [0, %14.3, %50.9], env=e19.5, next=%51.0
  void                    Deopt              !v    %51.1   !
BB21   <- [20, 52]
  real_           %21.0 = Phi                      %52.2:BB52, %14.3:BB20
  val?            %21.1 = PopContext         C     %21.0, %16.3
  void                    StVar              lW    mag, %21.1, e4.5
  void                    StVar              lW    d, 1L, e4.5
  val?^ | miss    %21.4 = LdVar              eR    body_v !upd, e4.5
  val?            %21.5 = Force!             !v    %21.4, e4.5
  cp              %21.6 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    body_v, e4.5
  lgl$#-          %23.1 = IsType                   %23.0 isA real_
  void                    Assume             D     %23.1, %21.6 (Typecheck@0x555695797db8[Type#115])
  real_           %23.3 = CastType           d     dn %23.0
  val?^ | miss    %23.4 = LdVar              eR    d, e4.5
  lgl$#-          %23.5 = IsType                   %23.4 isA int$-
  void                    Assume             D     %23.5, %21.6 (Typecheck@0x555695797db8[Type#117])
  int$-           %23.7 = CastType           d     dn %23.4
  real_           %23.8 = Extract1_2D        wed   %23.3, %23.7, missingArg, elided   <real->
  cp              %23.9 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x5556960a5b40+1210: [1L, 4L, 2L, %21.5], env=e4.5
  void                    Deopt              !v    %22.0   !
BB25   <- [23]
  val?^ | miss    %25.0 = LdVar              eR    as.vector, e4.5
  lgl$#-          %25.1 = Identical                %25.0, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Assume             D     %25.1, %23.9 (CallTarget@0x555695797db8[Call#10])
  val?^ | miss    %25.3 = LdVar              eR    %*%, e4.5
  lgl$#-          %25.4 = Identical                %25.3, <blt %*%>
  void                    Assume             D     %25.4, %23.9 (CallTarget@0x555695797db8[Call#11])
  val?^ | miss    %25.6 = LdVar              eR    drr, e4.5
  lgl$#-          %25.7 = IsType                   %25.6 isA real_
  void                    Assume             D     %25.7, %23.9 (Typecheck@0x555695797db8[Type#119])
  real_           %25.9 = CastType           d     dn %25.6
  real_           %25.10 = Extract1_3D        wed   %25.9, missingArg, missingArg, %23.7, elided   <real_>
  val?^ | miss    %25.11 = LdVar              eR    mag, e4.5
  val?            %25.12 = Force!<value>      !v    %25.11, e4.5   <real_>
  val?            %25.13 = Mul                !v    %25.10, %25.12, e4.5   <real_>
  val?^ | miss    %25.14 = LdVar              eR    body_mass, e4.5
  val?            %25.15 = Force!<value>      !v    %25.14, e4.5   <real->
  val?            %25.16 = CallBuiltin        !v    %*%(%25.13, %25.15) e4.5   <real_>
  lgl$#-          %25.17 = IsType                   %25.16 isA real_
  cp              %25.18 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x5556960a5b40+1282: [1L, 4L, 2L, %23.8], env=e4.5
  void                    Deopt              !v    %24.0   !
BB27   <- [25]
  void                    Assume             D     %25.17, %25.18 (Typecheck@0x5556957cb2c8[Type#0])
  real_           %27.1 = CastType           d     dn %25.16
  val             %27.2 = CallSafeBuiltin    wed   as.vector(%27.1, "any")    <real->
  lgl$#-          %27.3 = IsType                   %27.2 isA real-
  cp              %27.4 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x5556960a5b40+1320: [1L, 4L, 2L, %23.8], env=e4.5
  prom-           %26.1 = MkArg                    unboundValue, advance[0x555697246540]_p12, e4.5
  val?^           %26.2 = CastType                 up %26.1
  env             e26.3 = (MkEnv)            l     mode(miss)="any", x=%26.2, parent=R_BaseNamespace, context 0
  fs              %26.4 = FrameState         R     0x555696099020+9: [], env=e26.3, next=%26.0
  fs              %26.5 = FrameState         R     0x5556960a2ef0+37(pr): [%25.16], env=e4.5, next=%26.4
  void                    Deopt              !v    %26.5   !
BB29   <- [27]
  void                    Assume             D     %27.3, %27.4 (Typecheck@0x555695797db8[Type#127])
  real-           %29.1 = CastType           d     dn %27.2
  real_           %29.2 = Sub                wed   %23.8, %29.1, elided   <real->
  cp              %29.3 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB28   <- [27]
  prom-           %28.0 = MkArg                    %27.1, advance[0x555697246540]_p12 (!refl), e4.5
  val?~           %28.1 = CastType                 up %28.0
  fs              %28.2 = FrameState         R     0x5556960a5b40+1320: [1L, 4L, 2L, %23.8], env=e4.5
  env             e28.3 = (MkEnv)            l     mode(miss)="any", x=%28.1, parent=R_BaseNamespace, context 0
  fs              %28.4 = FrameState         R     0x555696099020+41: [%27.2], env=e28.3, next=%28.2
  void                    Deopt              !v    %28.4   !
BB31   <- [29]
  val?^ | miss    %31.0 = LdVar              eR    body_v, R_GlobalEnv   <real_>
  val?^ | miss    %31.1 = LdVar              eR    d, e4.5
  lgl$#-          %31.2 = IsType                   %31.1 isA int$-
  void                    Assume             D     %31.2, %29.3 (Typecheck@0x555695797db8[Type#130])
  int$-           %31.4 = CastType           d     dn %31.1
  lgl$#-          %31.5 = IsType                   %31.0 isA real_
  void                    Assume             D     %31.5, %29.3 (Typecheck@0x555695797db8[Type#129])
  real_           %31.7 = CastType           d     dn %31.0
  real_           %31.8 = Subassign1_2D      wed   %29.2, %31.7, %31.4, missingArg, elided
  void                    StVarSuper         lRW   body_v, %31.8, e4.5
  goto BB32
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x5556960a5b40+1326: [1L, 4L, 2L, %29.2], env=e4.5
  void                    Deopt              !v    %30.0   !
BB32   <- [31, 48]
  int$#-          %32.0 = Phi                      2L:BB31, %36.1:BB48
  cp              %32.1 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB34   <- [32]
  lgl$#-          %34.0 = Neq                d     4L, %32.0, elided
  void                    Branch                   %34.0 -> BB36 (if true) | BB35 (if false)
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x5556960a5b40+1366: [1L, 4L, %32.0], env=e4.5
  void                    Deopt              !v    %33.0   !
BB36   <- [34]
  void                    StVar              lW    d, %32.0, e4.5
  int$#-          %36.1 = Add                d     %32.0, 1L, elided
  val?^ | miss    %36.2 = LdVar              eR    body_v !upd, e4.5
  val?            %36.3 = Force!             !v    %36.2, e4.5
  cp              %36.4 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB35   <- [34]
  val?^ | miss    %35.0 = LdVar              eR    body_r, e4.5
  lgl$#-          %35.1 = IsType                   %35.0 isA real_
  void                    Assume             D     %35.1, %32.1 (Typecheck@0x555695797db8[Type#147])
  real_           %35.3 = CastType           d     dn %35.0
  val?^ | miss    %35.4 = LdVar              eR    dt, e4.5
  lgl$#-          %35.5 = IsType                   %35.4 isA real$-
  void                    Assume             D     %35.5, %32.1 (Typecheck@0x555695797db8[Type#148])
  real$-          %35.7 = CastType           d     dn %35.4
  val?^ | miss    %35.8 = LdVar              eR    body_v, e4.5
  lgl$#-          %35.9 = IsType                   %35.8 isA real_
  void                    Assume             D     %35.9, %32.1 (Typecheck@0x555695797db8[Type#149])
  real_           %35.11 = CastType           d     dn %35.8
  real_           %35.12 = Mul                wed   %35.7, %35.11, elided   <real_>
  real_           %35.13 = Add                wed   %35.3, %35.12, elided   <real_>
  void                    Invisible          v     
  void                    StVarSuper         lRW   body_r, %35.13, e4.5
  void                    Return             l     %35.13
BB38   <- [36]
  val?^ | miss    %38.0 = LdVar              eR    body_v, e4.5
  lgl$#-          %38.1 = IsType                   %38.0 isA real_
  void                    Assume             D     %38.1, %36.4 (Typecheck@0x555695797db8[Type#131])
  real_           %38.3 = CastType           d     dn %38.0
  val?^ | miss    %38.4 = LdVar              eR    d, e4.5
  lgl$#-          %38.5 = IsType                   %38.4 isA int$-
  void                    Assume             D     %38.5, %36.4 (Typecheck@0x555695797db8[Type#133])
  int$-           %38.7 = CastType           d     dn %38.4
  real_           %38.8 = Extract1_2D        wed   %38.3, %38.7, missingArg, elided   <real->
  cp              %38.9 = Checkpoint                -> BB40 (default) | BB39 (if assume failed)
BB37   <- [36]
  fs              %37.0 = FrameState         R     0x5556960a5b40+1399: [1L, 4L, %36.1, %36.3], env=e4.5
  void                    Deopt              !v    %37.0   !
BB40   <- [38]
  val?^ | miss    %40.0 = LdVar              eR    as.vector, e4.5
  lgl$#-          %40.1 = Identical                %40.0, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Assume             D     %40.1, %38.9 (CallTarget@0x555695797db8[Call#12])
  val?^ | miss    %40.3 = LdVar              eR    %*%, e4.5
  lgl$#-          %40.4 = Identical                %40.3, <blt %*%>
  void                    Assume             D     %40.4, %38.9 (CallTarget@0x555695797db8[Call#13])
  val?^ | miss    %40.6 = LdVar              eR    drr, e4.5
  val?            %40.7 = Force!<value>      !v    %40.6, e4.5   <real_>
  lgl$#-          %40.8 = IsType                   %40.7 isA val+   <true>
  void                    Branch                   %40.8 -> BB49 (if true) | BB41 (if false)
BB39   <- [38]
  fs              %39.0 = FrameState         R     0x5556960a5b40+1471: [1L, 4L, %36.1, %38.8], env=e4.5
  void                    Deopt              !v    %39.0   !
BB49   <- [40]
  val?^ | miss    %49.0 = LdVar              eR    d, e4.5
  val?            %49.1 = Force<value>       !v    %49.0, e4.5   <int$->
  goto BB42
BB41   <- [40]
  prom-           %41.0 = MkArg                    unboundValue, advance[0x555697246540]_p18, e4.5
  goto BB42
BB42   <- [49, 41]
  val?            %42.0 = Phi                      %49.1:BB49, %41.0:BB41
  val?            %42.1 = Extract1_3D        !v    %40.7, missingArg, missingArg, %42.0, e4.5   <real_>
  val?^ | miss    %42.2 = LdVar              eR    mag, e4.5
  val?            %42.3 = Force!<value>      !v    %42.2, e4.5   <real_>
  val?            %42.4 = Mul                !v    %42.1, %42.3, e4.5   <real_>
  val?^ | miss    %42.5 = LdVar              eR    body_mass, e4.5
  val?            %42.6 = Force!<value>      !v    %42.5, e4.5   <real->
  val?            %42.7 = CallBuiltin        !v    %*%(%42.4, %42.6) e4.5   <real_>
  lgl$#-          %42.8 = IsType                   %42.7 isA real_
  cp              %42.9 = Checkpoint                -> BB44 (default) | BB43 (if assume failed)
BB44   <- [42]
  void                    Assume             D     %42.8, %42.9 (Typecheck@0x5556957cb2c8[Type#0])
  real_           %44.1 = CastType           d     dn %42.7
  val             %44.2 = CallSafeBuiltin    wed   as.vector(%44.1, "any")    <real->
  lgl$#-          %44.3 = IsType                   %44.2 isA real-
  cp              %44.4 = Checkpoint                -> BB46 (default) | BB45 (if assume failed)
BB43   <- [42]
  prom-           %43.0 = MkArg                    %42.7, advance[0x555697246540]_p16 (!refl), e4.5
  val?~           %43.1 = CastType                 up %43.0
  fs              %43.2 = FrameState         R     0x5556960a5b40+1509: [1L, 4L, %36.1, %38.8], env=e4.5
  env             e43.3 = (MkEnv)            l     mode(miss)="any", x=%43.1, parent=R_BaseNamespace, context 0
  fs              %43.4 = FrameState         R     0x555696099020+9: [%42.7], env=e43.3, next=%43.2
  void                    Deopt              !v    %43.4   !
BB46   <- [44]
  void                    Assume             D     %44.3, %44.4 (Typecheck@0x555695797db8[Type#143])
  real-           %46.1 = CastType           d     dn %44.2
  real_           %46.2 = Sub                wed   %38.8, %46.1, elided   <real->
  cp              %46.3 = Checkpoint                -> BB48 (default) | BB47 (if assume failed)
BB45   <- [44]
  prom-           %45.0 = MkArg                    %44.1, advance[0x555697246540]_p16 (!refl), e4.5
  val?~           %45.1 = CastType                 up %45.0
  fs              %45.2 = FrameState         R     0x5556960a5b40+1509: [1L, 4L, %36.1, %38.8], env=e4.5
  env             e45.3 = (MkEnv)            l     mode(miss)="any", x=%45.1, parent=R_BaseNamespace, context 0
  fs              %45.4 = FrameState         R     0x555696099020+41: [%44.2], env=e45.3, next=%45.2
  void                    Deopt              !v    %45.4   !
BB48   <- [46]
  val?^ | miss    %48.0 = LdVar              eR    body_v, R_GlobalEnv   <real_>
  val?^ | miss    %48.1 = LdVar              eR    d, e4.5
  lgl$#-          %48.2 = IsType                   %48.1 isA int$-
  void                    Assume             D     %48.2, %46.3 (Typecheck@0x555695797db8[Type#146])
  int$-           %48.4 = CastType           d     dn %48.1
  lgl$#-          %48.5 = IsType                   %48.0 isA real_
  void                    Assume             D     %48.5, %46.3 (Typecheck@0x555695797db8[Type#145])
  real_           %48.7 = CastType           d     dn %48.0
  real_           %48.8 = Subassign1_2D      wed   %46.2, %48.7, %48.4, missingArg, elided
  void                    StVarSuper         lRW   body_v, %48.8, e4.5
  goto BB32
BB47   <- [46]
  fs              %47.0 = FrameState         R     0x5556960a5b40+1515: [1L, 4L, %36.1, %46.2], env=e4.5
  void                    Deopt              !v    %47.0   !
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     colSums, <0x55569606d1a8>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, advance[0x555697246540]_p4, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <real_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     aperm, <0x555696080c38>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, advance[0x555697246540]_p5, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <real_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    drr, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <real_>
  val?^ | miss    %1.3  = LdVar              eR    drr, e1.0
  void                    Visible            v     
  val?            %1.5  = Force<value>       !     %1.3, e1.0   <real_>
  val?            %1.6  = Mul                !     %1.2, %1.5, e1.0   <real_>
  void                    Return             l     %1.6
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     aperm, <0x555696080c38>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, advance[0x555697246540]_p10, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <real_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    drr, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <real_>
  val?^ | miss    %1.3  = LdVar              eR    drr, e1.0
  void                    Visible            v     
  val?            %1.5  = Force<value>       !     %1.3, e1.0   <real_>
  val?            %1.6  = Mul                !     %1.2, %1.5, e1.0   <real_>
  void                    Return             l     %1.6
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     %*%, <0x5556941e3708>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, advance[0x555697246540]_p13, e1.0
  prom-           %1.3  = MkArg                    unboundValue, advance[0x555697246540]_p15, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <real_>
  void                    Return             l     %1.4
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    drr, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <real_>
  lgl$#-          %1.3  = IsType                   %1.2 isA val+   <true>
  void                    Branch                   %1.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    d, e1.0
  val?            %2.1  = Force<value>       !v    %2.0, e1.0   <int$->
  goto BB3
BB4   <- [1]
  prom-           %4.0  = MkArg                    unboundValue, advance[0x555697246540]_p14, e1.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.1:BB2, %4.0:BB4
  val?            %3.1  = Extract1_3D        !v    %1.2, missingArg, missingArg, %3.0, e1.0   <real_>
  val?^ | miss    %3.2  = LdVar              eR    mag, e1.0
  val?            %3.3  = Force<value>       !v    %3.2, e1.0   <real_>
  val?            %3.4  = Mul                !v    %3.1, %3.3, e1.0   <real_>
  void                    Visible            v     
  void                    Return             l     %3.4
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    d, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    body_mass, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <real->
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     %*%, <0x5556941e3708>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, advance[0x555697246540]_p17, e1.0
  prom-           %1.3  = MkArg                    unboundValue, advance[0x555697246540]_p19, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <real_>
  void                    Return             l     %1.4
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    drr, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <real_>
  lgl$#-          %1.3  = IsType                   %1.2 isA val+   <true>
  void                    Branch                   %1.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    d, e1.0
  val?            %2.1  = Force<value>       !v    %2.0, e1.0   <int$->
  goto BB3
BB4   <- [1]
  prom-           %4.0  = MkArg                    unboundValue, advance[0x555697246540]_p18, e1.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.1:BB2, %4.0:BB4
  val?            %3.1  = Extract1_3D        !v    %1.2, missingArg, missingArg, %3.0, e1.0   <real_>
  val?^ | miss    %3.2  = LdVar              eR    mag, e1.0
  val?            %3.3  = Force<value>       !v    %3.2, e1.0   <real_>
  val?            %3.4  = Mul                !v    %3.1, %3.3, e1.0   <real_>
  void                    Visible            v     
  void                    Return             l     %3.4
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    d, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    body_mass, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <real->
  void                    Return             l     %1.3
Prom 26:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int->
  void                    Return             l     %1.3
Prom 27:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    i, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int->
  void                    Return             l     %1.3
Prom 28:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     cbind, e1.0
  prom-           %1.2  = MkArg                    unboundValue, advance[0x555697246540]_p29, e1.0
  (miss|dots)     %1.3  = LdDots             R     , e1.0
  *dots-          %1.4  = ExpandDots               %1.3
  val?            %1.5  = NamedCall          !     %1.1(%1.2, .xpandDotsTrigger=%1.4) e1.0   <val?_>
  void                    Return             l     %1.5
Prom 29:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    deparse.level, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ advance[0x555697246540]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
