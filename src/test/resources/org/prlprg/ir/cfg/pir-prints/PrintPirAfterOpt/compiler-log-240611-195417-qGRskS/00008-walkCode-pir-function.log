
┌──────────────────────────────────────────────────────────────────────────────┐
│ walkCode[0x561663547660]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1                       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
walkCode[0x561663547660]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  cp              %1.2  = Checkpoint                -> BB2 (default) | BB28 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    typeof, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %2.1, %1.2 (CallTarget@0x561661f13fe8[Call#1])
  env             e2.3  = MkEnv              l     e=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  val?            %2.4  = Force!<lazy>       !v    %1.1, e2.3   <val?->
  lgl$#-          %2.5  = IsType                   %2.4 isA val?-
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB28   <- [1]
  env             e28.0 = (MkEnv)            l     e=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %28.1 = FrameState         R     0x5616633efb60+0: [], env=e28.0
  void                    Deopt              !v    %28.1
BB4   <- [2]
  void                    Assume             D     %2.5, %2.6 (Typecheck@0x561661f13fe8[Type#1])
  val?-           %4.1  = CastType           d     dn %2.4
  str$-           %4.2  = CallSafeBuiltin    wed   typeof(%4.1)    <str$->
  cp              %4.3  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  prom-           %3.0  = MkArg                    unboundValue, walkCode[0x561663547660]_p0, e2.3
  val?^           %3.1  = CastType                 up %3.0
  fs              %3.2  = FrameState         R     0x5616633efb60+32: [], env=e2.3
  env             e3.3  = (MkEnv)            l     x=%3.1, parent=R_BaseNamespace, context 0
  fs              %3.4  = FrameState         R     0x5616632737c0+9: [], env=e3.3, next=%3.2
  fs              %3.5  = FrameState         R     0x5616633ec1b0+5(pr): [%2.4], env=e2.3, next=%3.4
  void                    Deopt              !v    %3.5   !
BB6   <- [4]
  lgl$-           %6.0  = Eq                 d     %4.2, "language", elided   <lgl$->
  lgl$#-          %6.1  = CheckTrueFalse     e     %6.0
  void                    Branch                   %6.1 -> BB11 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5616633efb60+32: [], env=e2.3
  prom-           %5.1  = MkArg                    %4.1, walkCode[0x561663547660]_p0 (!refl), e2.3
  val?~           %5.2  = CastType                 up %5.1
  env             e5.3  = (MkEnv)            l     x=%5.2, parent=R_BaseNamespace, context 0
  fs              %5.4  = FrameState         R     0x5616632737c0+27: [%4.2], env=e5.3, next=%5.0
  void                    Deopt              !v    %5.4   !
BB11   <- [6]
  val?^ | miss    %11.0 = LdVar              eR    %in%, e2.3
  lgl$#-          %11.1 = Identical                %11.0, function(x, table) <(rir::DispatchTable*)0x561|...
  void                    Assume             D     %11.1, %4.3 (CallTarget@0x561661f13fe8[Call#4])
  prom-           %11.3 = MkArg                    unboundValue, walkCode[0x561663547660]_p5, e2.3
  prom-           %11.4 = MkArg                    unboundValue, walkCode[0x561663547660]_p7, e2.3
  val?^           %11.5 = CastType                 up %11.4
  val?^           %11.6 = CastType                 up %11.3
  env             e11.7 = MkEnv              l     x=%11.6, table=%11.5, parent=R_BaseNamespace, context 0
  prom-           %11.8 = MkArg                    unboundValue, walkCode[0x561663547660]_p20, e11.7
  val?^           %11.9 = CastType                 up %11.8
  val?^ | miss    %11.10 = LdVar              eR    typeof, e2.3
  lgl$#-          %11.11 = Identical                %11.10, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %11.11, %4.3 (CallTarget@0x561661f13fe8[Call#5])
  val?^ | miss    %11.13 = LdVar              eR    e, e2.3
  val?            %11.14 = Force!<wrapped>    !v    %11.13, e2.3   <code->
  lgl$#-          %11.15 = IsType                   %11.14 isA val?-
  cp              %11.16 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB7   <- [6]
  (cls|spec|blt)  %7.0  = LdFun              !v    $, <0x561660cbcc10>, e2.3
  prom-           %7.1  = MkArg                    unboundValue, walkCode[0x561663547660]_p1, e2.3
  prom-           %7.2  = MkArg                    unboundValue, walkCode[0x561663547660]_p2, e2.3
  val?            %7.3  = Call               !v    %7.0(%7.1, %7.2) e2.3   <cls->
  cp              %7.4  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB13   <- [11]
  void                    Assume             D     %11.15, %11.16 (Typecheck@0x561661f13fe8[Type#10])
  val?-           %13.1 = CastType           d     dn %11.14   <code->
  val?            %13.2 = Extract2_1D        wed   %13.1, 1, elided   <sym->
  str$-           %13.3 = CallSafeBuiltin    wed   typeof(%13.2) 
  prom-           %13.4 = MkArg                    %13.3, walkCode[0x561663547660]_p5 (!refl), e2.3
  val?~           %13.5 = CastType                 up %13.4
  void                    StArg              lW    x, %13.5, e11.7
  prom-           %13.7 = MkArg                    %13.3, walkCode[0x561663547660]_p19 (!refl), e11.7
  val?~           %13.8 = CastType                 up %13.7
  cp              %13.9 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  prom-           %12.0 = MkArg                    unboundValue, walkCode[0x561663547660]_p6, e2.3
  val?^           %12.1 = CastType                 up %12.0
  prom-           %12.2 = MkArg                    unboundValue, walkCode[0x561663547660]_p19, e11.7
  val?^           %12.3 = CastType                 up %12.2
  fs              %12.4 = FrameState         R     0x5616633efb60+177: [], env=e2.3
  fs              %12.5 = FrameState         R     0x5616612ea4e0+54: [], env=e11.7, next=%12.4
  env             e12.6 = (MkEnv)            l     x=%12.3, table=%11.9, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %12.7 = FrameState         R     0x5616617f2d70+9: [], env=e12.6, next=%12.5
  fs              %12.8 = FrameState         R     0x5616612eb0f0+5(pr): [], env=e11.7, next=%12.7
  fs              %12.9 = FrameState         R     0x5616633ec780+32(pr): [], env=e2.3, next=%12.8
  env             e12.10 = (MkEnv)            l     x=%12.1, parent=R_BaseNamespace, context 0
  fs              %12.11 = FrameState         R     0x5616632737c0+9: [], env=e12.10, next=%12.9
  fs              %12.12 = FrameState         R     0x5616633ec660+5(pr): [%11.14], env=e2.3, next=%12.11
  void                    Deopt              !v    %12.12   !
BB9   <- [7]
  (cls|spec|blt)  %9.0  = ChkFunction        e     %7.3
  lgl$#-          %9.1  = Identical                %9.0, function(e, w) <(rir::DispatchTable*)0x5616633|...
  void                    Assume             D     %9.1, %7.4 (CallTarget@0x561661f13fe8[Call#3])
  val?^ | miss    %9.3  = LdVar              eR    character, <env 0x5616633c2fd0>
  lgl$#-          %9.4  = Identical                %9.3, function(length=0L) <(rir::DispatchTable*)0x56|...
  void                    Assume             D     %9.4, %7.4 (CallTarget@0x561661f14148[Call#0])
  str-            %9.6  = CallSafeBuiltin    vwed  vector("character", 0)    <str->
  goto BB10
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5616633efb60+92: [%7.3], env=e2.3
  void                    Deopt              !v    %8.0   !
BB15   <- [13]
  env             e15.0 = (MkEnv)            l     x=%13.8, table=%11.9, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %15.1 = IsEnvStub          R     , e15.0
  void                    Assume             D     %15.1, %13.9 (EnvStubMaterialized@0x561660fcab30[Call#unknown])
  val?            %15.3 = Force!<lazy>       !vL   %11.5, e15.0   <val?->
  prom-           %15.4 = MkArg                    %15.3, walkCode[0x561663547660]_p20 (!refl), e11.7
  val?~           %15.5 = CastType                 up %15.4
  void                    StArg              lWd   table, %15.5, e15.0
  lgl$#-          %15.7 = IsType                   %15.3 isA val?-
  cp              %15.8 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x5616633efb60+177: [], env=e2.3
  fs              %14.1 = FrameState         R     0x5616612ea4e0+54: [], env=e11.7, next=%14.0
  env             e14.2 = (MkEnv)            l     x=%13.8, table=%11.9, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %14.3 = FrameState         R     0x5616617f2d70+9: [%13.3], env=e14.2, next=%14.1
  void                    Deopt              !v    %14.3   !
BB10   <- [9, 27, 26]
  val?            %10.0 = Phi                      %9.6:BB9, %26.5:BB26, %27.3:BB27
  void                    Return             l     %10.0
BB17   <- [15]
  lgl$#-          %17.0 = IsEnvStub          R     , e15.0
  void                    Assume             D     %17.0, %15.8 (EnvStubMaterialized@0x561660fcab30[Call#unknown])
  void                    Assume             D     %15.7, %15.8 (Typecheck@0x561660fcab30[Type#1])
  val?-           %17.3 = CastType           d     dn %15.3
  val+            %17.4 = CallSafeBuiltin    wed   match(%13.3, %17.3, 0L, nil)    <int->
  lgl$#-          %17.5 = IsType                   %17.4 isA int-
  cp              %17.6 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x5616633efb60+177: [], env=e2.3
  fs              %16.1 = FrameState         R     0x5616612ea4e0+54: [], env=e11.7, next=%16.0
  fs              %16.2 = FrameState         R     0x5616617f2d70+23: [%13.3, %15.3], env=e15.0, next=%16.1
  void                    Deopt              !v    %16.2   !
BB19   <- [17]
  void                    Assume             D     %17.5, %17.6 (Typecheck@0x56166231c688[Type#2])
  int-            %19.1 = CastType           d     dn %17.4
  lgl-            %19.2 = Gt                 wed   %19.1, 0L, elided   <lgl->
  lgl$#-          %19.3 = CheckTrueFalse     we    %19.2
  void                    Branch                   %19.3 -> BB21 (if true) | BB20 (if false)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x5616633efb60+177: [], env=e2.3
  fs              %18.1 = FrameState         R     0x5616612ea4e0+54: [], env=e11.7, next=%18.0
  fs              %18.2 = FrameState         R     0x5616617f2d70+69: [%17.4], env=e15.0, next=%18.1
  void                    Deopt              !v    %18.2   !
BB21   <- [19]
  (cls|spec|blt)  %21.0 = LdFun              !v    $, <0x561660cbcc10>, e2.3
  prom-           %21.1 = MkArg                    unboundValue, walkCode[0x561663547660]_p8, e2.3
  prom-           %21.2 = MkArg                    unboundValue, walkCode[0x561663547660]_p9, e2.3
  val?            %21.3 = Call               !v    %21.0(%21.1, %21.2) e2.3   <cls->
  cp              %21.4 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB20   <- [19]
  (cls|spec|blt)  %20.0 = LdFun              !v    $, e2.3
  fs              %20.1 = FrameState         R     0x5616633efb60+193: [%20.0], env=e2.3
  void                    Deopt              !v    %20.1, DeadCall@0x561661f13fe8[Call#7], %20.0   !
BB23   <- [21]
  (cls|spec|blt)  %23.0 = ChkFunction        e     %21.3
  prom-           %23.1 = MkArg                    unboundValue, walkCode[0x561663547660]_p10, e2.3
  prom-           %23.2 = MkArg                    unboundValue, walkCode[0x561663547660]_p12, e2.3
  lgl$#-          %23.3 = Identical                %23.0, function(v, w) <(rir::DispatchTable*)0x5616633|...
  void                    Assume             D     %23.3, %21.4 (CallTarget@0x561661f13fe8[Call#10])
  val?            %23.5 = StaticCall         !v    [0x561662fee6e0](%23.1, %23.2) e2.3   <(nil|cls)->
  lgl$-           %23.6 = Is                       %23.5, NULL
  void                    StVar              lW    h, %23.5, e2.3
  val             %23.8 = ChkMissing         e     %23.5
  void                    Visible            v     
  lgl$-           %23.10 = Not                vd    %23.6, elided
  lgl$#-          %23.11 = CheckTrueFalse     e     %23.10
  void                    Branch                   %23.11 -> BB27 (if true) | BB24 (if false)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x5616633efb60+310: [%21.3], env=e2.3
  void                    Deopt              !v    %22.0   !
BB27   <- [23]
  (cls|spec|blt)  %27.0 = LdFun              !     h, <%23.5>, e2.3
  prom-           %27.1 = MkArg                    unboundValue, walkCode[0x561663547660]_p17, e2.3
  prom-           %27.2 = MkArg                    unboundValue, walkCode[0x561663547660]_p18, e2.3
  val?            %27.3 = Call               !     %27.0(%27.1, %27.2) e2.3   <(nil|str)->
  goto BB10
BB24   <- [23]
  (cls|spec|blt)  %24.0 = LdFun              !     $, <0x561660cbcc10>, e2.3
  prom-           %24.1 = MkArg                    unboundValue, walkCode[0x561663547660]_p13, e2.3
  prom-           %24.2 = MkArg                    unboundValue, walkCode[0x561663547660]_p14, e2.3
  val?            %24.3 = Call               !     %24.0(%24.1, %24.2) e2.3   <cls->
  cp              %24.4 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB26   <- [24]
  (cls|spec|blt)  %26.0 = ChkFunction        e     %24.3
  prom-           %26.1 = MkArg                    unboundValue, walkCode[0x561663547660]_p15, e2.3
  prom-           %26.2 = MkArg                    unboundValue, walkCode[0x561663547660]_p16, e2.3
  lgl$#-          %26.3 = Identical                %26.0, function(e, w) <(rir::DispatchTable*)0x5616633|...
  void                    Assume             D     %26.3, %24.4 (CallTarget@0x561661f13fe8[Call#13])
  val?            %26.5 = StaticCall         !     [0x561663450b90](%26.1, %26.2) e2.3   <nil->
  goto BB10
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x5616633efb60+425: [%24.3], env=e2.3
  void                    Deopt              !v    %25.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    leaf, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     typeof, <0x5616632719d0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, walkCode[0x561663547660]_p6, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <code->
  val?            %1.3  = Extract2_1D        !v    %1.2, 1, e1.0   <sym->
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     c, <0x561660cbd940>, e1.0
  val?            %1.2  = Call               !     %1.1("symbol", "character") e1.0   <str->
  void                    Return             l     %1.2
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    handler, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x561660cca040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, walkCode[0x561663547660]_p11, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <code->
  val?            %1.3  = Extract2_1D        !v    %1.2, 1, e1.0   <sym->
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(int|str)+>
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    table, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?->
  void                    Return             l     %1.3

│ walkCode[0x561663547660]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
