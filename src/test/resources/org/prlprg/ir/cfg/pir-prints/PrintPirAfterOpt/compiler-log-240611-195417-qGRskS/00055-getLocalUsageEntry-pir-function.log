
┌──────────────────────────────────────────────────────────────────────────────┐
│ getLocalUsageEntry[0x5616634d17c0]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getLocalUsageEntry[0x5616634d17c0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  cp              %1.2  = Checkpoint                -> BB2 (default) | BB21 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    findOwnerEnv, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Assume             D     %2.1, %1.2 (CallTarget@0x5616634f56b8[Call#0])
  env             e2.3  = MkEnv              l     vn=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  prom-           %2.4  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p0 (!refl), e2.3
  prom-           %2.5  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p1, e2.3
  prom-           %2.6  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p4, e2.3
  prom-           %2.7  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p7, e2.3
  val?            %2.8  = StaticCall         !v    findOwnerEnv[0x5616636405e0](%2.4, %2.5, %2.6, %2.7) { 0 1 2n 3n } e2.3   <env+>
  void                    StVar              lW    env, %2.8, e2.3
  cp              %2.10 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB21   <- [1]
  env             e21.0 = (MkEnv)            l     vn=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %21.1 = FrameState         R     0x56166392add0+0: [], env=e21.0
  void                    Deopt              !v    %21.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    is.baseenv, e2.3
  lgl$#-          %4.1  = Identical                %4.0, function(e) <(rir::DispatchTable*)0x5616634b8b|...
  void                    Assume             D     %4.1, %2.10 (CallTarget@0x5616634f56b8[Call#3])
  prom-           %4.3  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p8 (!refl), e2.3
  ct              %4.4  = PushContext        lCL   %4.3, is.baseenv(env), function(e) <(rir::DispatchTable*)0x5616634b8b|..., e2.3
  val?^           %4.5  = CastType                 up %4.3
  cp              %4.6  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x56166392add0+77: [], env=e2.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  val?^ | miss    %6.0  = LdVar              eR    identical, <env 0x56166328f230>
  lgl$#-          %6.1  = Identical                %6.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %6.1, %4.6 (CallTarget@0x5616610c8e08[Call#0])
  env             e6.3  = MkEnv              l     e=%4.5, parent=<env 0x56166328f230>, context 1
  prom-           %6.4  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p14, e6.3
  prom-           %6.5  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p15, e6.3
  ct              %6.6  = PushContext        lCL   %6.4, %6.5, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e6.3
  val?^           %6.7  = CastType                 up %6.5
  val?^           %6.8  = CastType                 up %6.4
  env             e6.9  = MkEnv              l     x=%6.8, y=%6.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %6.10 = Force!<lazy>       !vL   %6.8, e6.9   <val?+>
  val?            %6.11 = Force!<lazy>       !vL   %6.7, e6.9   <val?+>
  val?            %6.12 = CallBuiltin        !v    identical(%6.10, %6.11, true, true, true, true, false, true) e6.9
  val?            %6.13 = PopContext         C     %6.12, %6.6   <lgl$->
  lgl$#-          %6.14 = IsType                   %6.13 isA lgl$-
  cp              %6.15 = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x56166392add0+109: [], env=e2.3
  env             e5.1  = (MkEnv)            l     e=%4.5, parent=<env 0x56166328f230>, context 1
  fs              %5.2  = FrameState         R     0x5616632d0110+0: [], env=e5.1, next=%5.0
  void                    Deopt              !v    %5.2   !
BB8   <- [6]
  void                    Assume             D     %6.14, %6.15 (Typecheck@0x5616610c8e08[Type#2])
  lgl$-           %8.1  = CastType           d     dn %6.13
  val?            %8.2  = PopContext         C     %8.1, %4.4   <lgl$->
  lgl$#-          %8.3  = IsType                   %8.2 isA lgl$-
  cp              %8.4  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x56166392add0+109: [], env=e2.3
  fs              %7.1  = FrameState         R     0x5616632d0110+37: [%6.13], env=e6.3, next=%7.0
  void                    Deopt              !v    %7.1   !
BB10   <- [8]
  void                    Assume             D     %8.3, %8.4 (Typecheck@0x5616634f56b8[Type#10])
  lgl$-           %10.1 = CastType           d     dn %8.2
  lgl$#-          %10.2 = CheckTrueFalse     e     %10.1
  void                    Branch                   %10.2 -> BB20 (if true) | BB11 (if false)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x56166392add0+109: [%8.2], env=e2.3
  void                    Deopt              !v    %9.0   !
BB20   <- [10]
  (cls|spec|blt)  %20.0 = LdFun              !v    stop, e2.3
  fs              %20.1 = FrameState         R     0x56166392add0+130: [%20.0], env=e2.3
  void                    Deopt              !v    %20.1, DeadCall@0x5616634f56b8[Call#4], %20.0   !
BB11   <- [10]
  val?^ | miss    %11.0 = LdVar              eR    identical, e2.3
  lgl$#-          %11.1 = Identical                %11.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %11.1, %8.4 (CallTarget@0x5616634f56b8[Call#5])
  prom-           %11.3 = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p9, e2.3
  prom-           %11.4 = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p10, e2.3
  ct              %11.5 = PushContext        lCL   %11.3, %11.4, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e2.3
  val?^           %11.6 = CastType                 up %11.4
  val?^           %11.7 = CastType                 up %11.3
  env             e11.8 = MkEnv              l     x=%11.7, y=%11.6, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %11.9 = Force!<lazy>       !vL   %11.7, e11.8   <val?+>
  val?            %11.10 = Force!<lazy>       !vL   %11.6, e11.8   <val?+>
  val?            %11.11 = CallBuiltin        !v    identical(%11.9, %11.10, true, true, true, true, false, true) e11.8
  val?            %11.12 = PopContext         C     %11.11, %11.5   <lgl$->
  lgl$#-          %11.13 = IsType                   %11.12 isA lgl$-
  cp              %11.14 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB13   <- [11]
  void                    Assume             D     %11.13, %11.14 (Typecheck@0x5616634f56b8[Type#14])
  lgl$-           %13.1 = CastType           d     dn %11.12
  lgl$-           %13.2 = Not                d     %13.1, elided
  lgl$#-          %13.3 = CheckTrueFalse     e     %13.2
  void                    Branch                   %13.3 -> BB19 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x56166392add0+195: [%11.12], env=e2.3
  void                    Deopt              !v    %12.0   !
BB19   <- [13]
  (cls|spec|blt)  %19.0 = LdFun              !v    stop, e2.3
  fs              %19.1 = FrameState         R     0x56166392add0+217: [%19.0], env=e2.3
  void                    Deopt              !v    %19.1, DeadCall@0x5616634f56b8[Call#7], %19.0   !
BB14   <- [13]
  val?^ | miss    %14.0 = LdVar              eR    get, e2.3
  lgl$#-          %14.1 = Identical                %14.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %14.1, %11.14 (CallTarget@0x5616634f56b8[Call#8])
  prom-           %14.3 = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p12, e2.3
  prom-           %14.4 = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p13, e2.3
  val?            %14.5 = StaticCall         !v    get[0x561663690cf0](%14.3, missingArg, %14.4, missingArg, false) { 0 2n 4n } e2.3   <env->
  void                    StVar              lW    entry, %14.5, e2.3
  cp              %14.7 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB16   <- [14]
  val?^ | miss    %16.0 = LdVar              eR    is.environment, e2.3
  lgl$#-          %16.1 = Identical                <blt is.environment>, %16.0   <true>
  void                    Assume             D     %16.1, %14.7 (DeadBranchReached@0x5616634f56b8[Test#0])
  val             %16.3 = ChkMissing         e     %14.5
  lgl$#-          %16.4 = CallSafeBuiltin    wed   is.environment(%14.5) 
  void                    Branch                   %16.4 -> BB18 (if true) | BB17 (if false)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x56166392add0+313: [], env=e2.3
  void                    Deopt              !v    %15.0   !
BB18   <- [16]
  void                    Visible            v     
  void                    Return             l     %14.5
BB17   <- [16]
  (cls|spec|blt)  %17.0 = LdFun              !v    stop, e2.3
  fs              %17.1 = FrameState         R     0x56166392add0+426: [%17.0], env=e2.3
  void                    Deopt              !v    %17.1, DeadCall@0x5616634f56b8[Call#10], %17.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x561660cbcc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p2, e1.0
  prom-           %1.3  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p3, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env+>
  void                    Return             l     %1.4
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x561660cbcc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p5, e1.0
  prom-           %1.3  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p6, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env->
  void                    Return             l     %1.4
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    globalenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .BaseEnv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env+>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env+>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     attr, <0x561660cbd080>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getLocalUsageEntry[0x5616634d17c0]_p11, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2, "checkUsageFrame") e1.0   <env+>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env+>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env+>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(lgl|env)+>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .BaseEnv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ getLocalUsageEntry[0x5616634d17c0]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
