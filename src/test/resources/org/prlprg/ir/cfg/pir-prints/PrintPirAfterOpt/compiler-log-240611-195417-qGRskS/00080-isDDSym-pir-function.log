
┌──────────────────────────────────────────────────────────────────────────────┐
│ isDDSym[0x56166303db60]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
isDDSym[0x56166303db60]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  val?^ | miss    %1.1  = LdVar              eR    is.symbol, <env 0x56166328f230>
  lgl$#-          %1.2  = Identical                <blt is.symbol>, %1.1   <true>
  cp              %1.3  = Checkpoint                -> BB2 (default) | BB17 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.2, %1.3 (DeadBranchReached@0x561660ce8228[Test#0])
  env             e2.1  = MkEnv              l     name=%1.0, parent=<env 0x56166328f230>, context 1
  val+            %2.2  = Force!<lazy>       !vr   %1.0,    <(sym|str)->
  lgl$#-          %2.3  = CallSafeBuiltin    wed   is.symbol(%2.2)    <lgl$->
  cp              %2.4  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB17   <- [1]
  env             e17.0 = (MkEnv)            l     name=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %17.1 = FrameState         R     0x561663881f50+17: [<blt is.symbol>, %1.2], env=e17.0
  void                    Deopt              !v    %17.1   !
BB4   <- [2]
  void                    Branch                   %2.3 -> BB16 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x561663881f50+91: [%2.3], env=e2.1
  void                    Deopt              !v    %3.0   !
BB16   <- [4]
  goto BB6
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    is.character, <env 0x56166328f230>
  lgl$#-          %5.1  = Identical                <blt is.character>, %5.0   <true>
  void                    Assume             D     %5.1, %2.4 (DeadBranchReached@0x561660ce8228[Test#1])
  lgl$#-          %5.3  = CallSafeBuiltin    wed   is.character(%2.2)    <lgl$->
  lgl$-           %5.4  = LOr                      %2.3, %5.3
  goto BB6
BB6   <- [16, 5]
  lgl$-           %6.0  = Phi                      %5.4:BB5, %2.3:BB16
  lgl$-           %6.1  = AsLogical                %6.0
  lgl$#-          %6.2  = Identical                %6.1, false
  cp              %6.3  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB8   <- [6]
  void                    Visible            v     
  void                    Branch                   %6.2 -> BB15 (if true) | BB9 (if false)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x561663881f50+201: [%6.0], env=e2.1
  void                    Deopt              !v    %7.0   !
BB15   <- [8]
  goto BB14
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    length, <env 0x56166328f230>
  lgl$#-          %9.1  = Identical                <blt length>, %9.0   <true>
  void                    Assume             D     %9.1, %6.3 (DeadBranchReached@0x561660ce8228[Test#2])
  val?^ | miss    %9.3  = LdVar              eR    grep, <env 0x56166328f230>
  lgl$#-          %9.4  = Identical                %9.3, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Assume             D     %9.4, %6.3 (CallTarget@0x561660ce8228[Call#5])
  prom-           %9.6  = MkArg                    unboundValue, isDDSym[0x56166303db60]_p0, e2.1
  val?            %9.7  = StaticCall         !v    grep[0x561661f2a550]("^\.\.[[:digit:]]+$", %9.6) e2.1   <int->
  lgl$#-          %9.8  = IsType                   %9.7 isA int-
  cp              %9.9  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB14   <- [15, 13]
  lgl$-           %14.0 = Phi                      %13.5:BB13, %6.1:BB15
  void                    Return             l     %14.0
BB11   <- [9]
  void                    Assume             D     %9.8, %9.9 (Typecheck@0x561660ce8228[Type#11])
  int-            %11.1 = CastType           d     dn %9.7
  (int|real)$-    %11.2 = CallSafeBuiltin    wed   length(%11.1)    <int$->
  lgl$#-          %11.3 = IsType                   %11.2 isA int$-
  cp              %11.4 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x561663881f50+306: [%6.1, <blt length>, %9.7], env=e2.1
  void                    Deopt              !v    %10.0   !
BB13   <- [11]
  void                    Assume             D     %11.3, %11.4 (Typecheck@0x561660ce8228[Type#12])
  int$-           %13.1 = CastType           d     dn %11.2
  void                    Visible            v     
  lgl$-           %13.3 = Neq                vd    %13.1, 0, elided   <lgl$->
  lgl$-           %13.4 = AsLogical                %13.3
  lgl$-           %13.5 = LAnd                     %6.1, %13.4
  goto BB14
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x561663881f50+328: [%6.1, %11.2], env=e2.1
  void                    Deopt              !v    %12.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x561660cca040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, isDDSym[0x56166303db60]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <(sym|str)->
  void                    Return             l     %1.3

│ isDDSym[0x56166303db60]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
