
┌──────────────────────────────────────────────────────────────────────────────┐
│ getLocalUsageValue[0x561663e9f750]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2│
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getLocalUsageValue[0x561663e9f750]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?~+          %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  cp              %1.3  = Checkpoint                -> BB2 (default) | BB3 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    get, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %2.1, %1.3 (CallTarget@0x5616634339a0[Call#0])
  env             e2.3  = MkEnv              l     vn=%1.2, which=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  prom-           %2.4  = MkArg                    unboundValue, getLocalUsageValue[0x561663e9f750]_p0 (!refl), e2.3
  prom-           %2.5  = MkArg                    unboundValue, getLocalUsageValue[0x561663e9f750]_p1, e2.3
  val?            %2.6  = StaticCall         !     get[0x5616639fe4b0](%2.4, %2.5, missingArg, missingArg, false) { 0 1 4n } e2.3   <val?>
  void                    Return             l     %2.6
BB3   <- [1]
  env             e3.0  = (MkEnv)            l     vn=%1.2, which=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %3.1  = FrameState         R     0x561663bad400+0: [], env=e3.0
  void                    Deopt              !v    %3.1   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    which, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     getLocalUsageEntry, <0x5616639c2b98>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getLocalUsageValue[0x561663e9f750]_p2, e1.0
  prom-           %1.3  = MkArg                    unboundValue, getLocalUsageValue[0x561663e9f750]_p3, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env->
  void                    Return             l     %1.4
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3

│ getLocalUsageValue[0x561663e9f750]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
