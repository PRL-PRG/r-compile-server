
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x5616635199d0]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1                       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
[0x5616635199d0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  cp              %1.2  = Checkpoint                -> BB2 (default) | BB24 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    exists, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %2.1, %1.2 (CallTarget@0x5616617e48e8[Call#0])
  env             e2.3  = MkEnv              l     v=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  prom-           %2.4  = MkArg                    unboundValue, [0x5616635199d0]_p0, e2.3
  prom-           %2.5  = MkArg                    unboundValue, [0x5616635199d0]_p1, e2.3
  val?            %2.6  = StaticCall         !     exists[0x5616639204c0](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
  lgl$#-          %2.7  = IsType                   %2.6 isA lgl$-
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB24   <- [1]
  env             e24.0 = (MkEnv)            l     v=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %24.1 = FrameState         R     0x561663baa9b0+0: [], env=e24.0
  void                    Deopt              !v    %24.1   !
BB4   <- [2]
  void                    Assume             D     %2.7, %2.8 (Typecheck@0x5616617e48e8[Type#2])
  lgl$-           %4.1  = CastType           d     dn %2.6
  lgl$-           %4.2  = AsLogical                %4.1
  lgl$#-          %4.3  = Identical                %4.2, false
  void                    Branch                   %4.3 -> BB23 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x561663baa9b0+54: [%2.6], env=e2.3
  void                    Deopt              !v    %3.0   !
BB23   <- [4]
  goto BB16
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    isBaseVar, e2.3
  lgl$#-          %5.1  = Identical                %5.0, function(v, env) <(rir::DispatchTable*)0x56166|...
  void                    Assume             D     %5.1, %2.8 (CallTarget@0x5616617e48e8[Call#1])
  prom-           %5.3  = MkArg                    unboundValue, [0x5616635199d0]_p2, e2.3
  prom-           %5.4  = MkArg                    unboundValue, [0x5616635199d0]_p3, e2.3
  val?            %5.5  = StaticCall         !v    isBaseVar[0x5616641c0a40](%5.3, %5.4) e2.3   <lgl$->
  lgl$#-          %5.6  = IsType                   %5.5 isA lgl$-
  cp              %5.7  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB16   <- [23, 15]
  lgl$-           %16.0 = Phi                      %15.2:BB15, %4.2:BB23
  cp              %16.1 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB7   <- [5]
  void                    Assume             D     %5.6, %5.7 (Typecheck@0x5616617e48e8[Type#7])
  lgl$-           %7.1  = CastType           d     dn %5.5
  lgl$-           %7.2  = AsLogical                %7.1
  lgl$#-          %7.3  = Identical                %7.2, true
  lgl$-           %7.4  = AsLogical                %7.2
  lgl$#-          %7.5  = Identical                %7.4, true
  lgl$-           %7.6  = AsLogical                %7.4
  lgl$#-          %7.7  = Identical                %7.6, true
  void                    Branch                   %7.3 -> BB9 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x561663baa9b0+103: [%4.2, %5.5], env=e2.3
  void                    Deopt              !v    %6.0   !
BB18   <- [16]
  lgl$#-          %18.0 = CheckTrueFalse     e     %16.0
  void                    Branch                   %18.0 -> BB21 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x561663baa9b0+248: [%16.0], env=e2.3
  void                    Deopt              !v    %17.0   !
BB9   <- [7]
  void                    Branch                   %7.5 -> BB11 (if true) | BB10 (if false)
BB8   <- [7]
  (cls|spec|blt)  %8.0  = LdFun              !v    isStatsVar, e2.3
  fs              %8.1  = FrameState         R     0x561663baa9b0+120: [%4.2, %7.2, %8.0], env=e2.3
  void                    Deopt              !v    %8.1, DeadCall@0x5616617e48e8[Call#3], %8.0   !
BB21   <- [18]
  val?^ | miss    %21.0 = LdVar              eR    get, e2.3
  lgl$#-          %21.1 = Identical                %21.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %21.1, %16.1 (CallTarget@0x5616617e48e8[Call#7])
  prom-           %21.3 = MkArg                    unboundValue, [0x5616635199d0]_p6, e2.3
  prom-           %21.4 = MkArg                    unboundValue, [0x5616635199d0]_p7, e2.3
  val?            %21.5 = StaticCall         !     get[0x5616634d84b0](%21.3, missingArg, %21.4) { 0 2n } e2.3   <cls->
  goto BB20
BB19   <- [18]
  void                    Invisible          v     
  goto BB20
BB11   <- [9]
  void                    Branch                   %7.7 -> BB22 (if true) | BB12 (if false)
BB10   <- [9]
  (cls|spec|blt)  %10.0 = LdFun              !v    isUtilsVar, e2.3
  fs              %10.1 = FrameState         R     0x561663baa9b0+171: [%4.2, %7.4, %10.0], env=e2.3
  void                    Deopt              !v    %10.1, DeadCall@0x5616617e48e8[Call#5], %10.0   !
BB20   <- [19, 21]
  val?            %20.0 = Phi                      nil:BB19, %21.5:BB21
  void                    Return             l     %20.0
BB22   <- [11]
  goto BB15
BB12   <- [11]
  val?^ | miss    %12.0 = LdVar              eR    v, e2.3
  val?            %12.1 = Force!             !v    %12.0, e2.3   <val?_>
  lgl$#-          %12.2 = IsType                   %12.1 isA val?+
  cp              %12.3 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB15   <- [22, 14]
  lgl$-           %15.0 = Phi                      %14.4:BB14, %7.6:BB22
  lgl$-           %15.1 = AsLogical                %15.0
  lgl$-           %15.2 = LAnd                     %4.2, %15.1
  void                    Visible            v     
  goto BB16
BB14   <- [12]
  void                    Assume             D     %12.2, %12.3 (Typecheck@0x5616617e48e8[Type#18])
  val?+           %14.1 = CastType           d     dn %12.1   <val?_>
  lgl             %14.2 = Eq                 wed   %14.1, "Quote", elided   <val?_>
  lgl$-           %14.3 = AsLogical          e     %14.2
  lgl$-           %14.4 = LOr                      %7.6, %14.3
  goto BB15
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x561663baa9b0+226: [%4.2, %7.6, %12.1], env=e2.3
  void                    Deopt              !v    %13.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    collectUsageHandlers, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x561660cbcc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x5616635199d0]_p4, e1.0
  prom-           %1.3  = MkArg                    unboundValue, [0x5616635199d0]_p5, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env+>
  void                    Return             l     %1.4
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    collectUsageHandlers, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ [0x5616635199d0]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
