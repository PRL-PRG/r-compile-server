
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x561663def3f0]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3│
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
[0x561663def3f0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    3
  val?^           %1.1  = LdArg                    2
  val?^           %1.2  = LdArg                    1
  val?~+          %1.3  = LdArg                    0
  val+            %1.4  = Force<value>             %1.3,    <str$->
  lgl             %1.5  = Eq                 wed   %1.4, "function", elided   <lgl$->
  lgl$#-          %1.6  = IsType                   %1.5 isA lgl$-
  cp              %1.7  = Checkpoint                -> BB2 (default) | BB41 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.6, %1.7 (Typecheck@0x561663444440[Type#1])
  lgl$-           %2.1  = CastType           d     dn %1.5
  lgl$#-          %2.2  = CheckTrueFalse     e     %2.1
  env             e2.3  = MkEnv              l     type=%1.3, n=%1.2, e=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  void                    Branch                   %2.2 -> BB18 (if true) | BB3 (if false)
BB41   <- [1]
  env             e41.0 = (MkEnv)            l     type=%1.3, n=%1.2, e=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %41.1 = FrameState         R     0x56166354afd0+21: [%1.5], env=e41.0
  void                    Deopt              !v    %41.1
BB18   <- [2]
  val?^ | miss    %18.0 = LdVar              eR    exists, <env 0x56166328f230>
  lgl$#-          %18.1 = Identical                %18.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %18.1, %1.7 (CallTarget@0x561663444440[Call#14])
  prom-           %18.3 = MkArg                    unboundValue, [0x561663def3f0]_p4 (!refl), e2.3
  prom-           %18.4 = MkArg                    unboundValue, [0x561663def3f0]_p5, e2.3
  val?            %18.5 = StaticCall         !v    exists[0x56166166aa90](%18.3, missingArg, %18.4, missingArg, "function") { 0 2n 4n } e2.3   <lgl$->
  lgl$#-          %18.6 = IsType                   %18.5 isA lgl$-
  cp              %18.7 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB3   <- [2]
  lgl             %3.0  = Eq                 wed   %1.4, "variable", elided   <lgl$->
  lgl$#-          %3.1  = IsType                   %3.0 isA lgl$-
  cp              %3.2  = Checkpoint                -> BB5 (default) | BB4 (if assume failed)
BB20   <- [18]
  void                    Assume             D     %18.6, %18.7 (Typecheck@0x561663444440[Type#41])
  lgl$-           %20.1 = CastType           d     dn %18.5
  lgl$#-          %20.2 = CheckTrueFalse     e     %20.1
  void                    Branch                   %20.2 -> BB22 (if true) | BB21 (if false)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x56166354afd0+503: [%18.5], env=e2.3
  void                    Deopt              !v    %19.0   !
BB5   <- [3]
  void                    Assume             D     %3.1, %3.2 (Typecheck@0x561663444440[Type#3])
  lgl$-           %5.1  = CastType           d     dn %3.0
  lgl$#-          %5.2  = CheckTrueFalse     e     %5.1
  void                    Branch                   %5.2 -> BB11 (if true) | BB6 (if false)
BB4   <- [3]
  fs              %4.0  = FrameState         R     0x56166354afd0+53: [%3.0], env=e2.3
  void                    Deopt              !v    %4.0
BB22   <- [20]
  val?^ | miss    %22.0 = LdVar              eR    get, e2.3
  lgl$#-          %22.1 = Identical                %22.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %22.1, %18.7 (CallTarget@0x561663444440[Call#22])
  prom-           %22.3 = MkArg                    unboundValue, [0x561663def3f0]_p8, e2.3
  prom-           %22.4 = MkArg                    unboundValue, [0x561663def3f0]_p9, e2.3
  val?            %22.5 = StaticCall         !v    get[0x561663b4ac20](%22.3, missingArg, %22.4, "function") { 0 2n 3n } e2.3   <val?->
  void                    StVar              lW    def, %22.5, e2.3
  cp              %22.7 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  (cls|spec|blt)  %21.0 = LdFun              !v    suppressVar, e2.3
  fs              %21.1 = FrameState         R     0x56166354afd0+519: [%21.0], env=e2.3
  void                    Deopt              !v    %21.1, DeadCall@0x561663444440[Call#16], %21.0   !
BB11   <- [5]
  val?^ | miss    %11.0 = LdVar              eR    exists, <env 0x56166328f230>
  lgl$#-          %11.1 = Identical                %11.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %11.1, %3.2 (CallTarget@0x561663444440[Call#6])
  prom-           %11.3 = MkArg                    unboundValue, [0x561663def3f0]_p0 (!refl), e2.3
  prom-           %11.4 = MkArg                    unboundValue, [0x561663def3f0]_p1, e2.3
  val?            %11.5 = StaticCall         !v    exists[0x561661cee800](%11.3, %11.4) e2.3   <lgl$->
  lgl$#-          %11.6 = IsType                   %11.5 isA lgl$-
  cp              %11.7 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB6   <- [5]
  lgl             %6.0  = Eq                 wed   %1.4, "<<-", elided   <val?_>
  lgl$#-          %6.1  = CheckTrueFalse     we    %6.0
  void                    Branch                   %6.1 -> BB10 (if true) | BB7 (if false)
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    typeof, e2.3
  lgl$#-          %24.1 = Identical                %24.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %24.1, %22.7 (CallTarget@0x561663444440[Call#24])
  val             %24.3 = ChkMissing         e     %22.5
  prom-           %24.4 = MkArg                    %22.5, [0x561663def3f0]_p12 (!refl), 
  val?            %24.5 = StaticCall         !v    typeof[0x561663653770](%24.4) e2.3   <str$->
  lgl$#-          %24.6 = IsType                   %24.5 isA val?-
  cp              %24.7 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x56166354afd0+727: [], env=e2.3
  void                    Deopt              !v    %23.0   !
BB13   <- [11]
  void                    Assume             D     %11.6, %11.7 (Typecheck@0x561663444440[Type#23])
  lgl$-           %13.1 = CastType           d     dn %11.5
  lgl$-           %13.2 = Not                d     %13.1, elided
  lgl$-           %13.3 = AsLogical                %13.2
  lgl$#-          %13.4 = Identical                %13.3, false
  void                    Branch                   %13.4 -> BB15 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x56166354afd0+289: [%11.5], env=e2.3
  void                    Deopt              !v    %12.0   !
BB10   <- [6]
  (cls|spec|blt)  %10.0 = LdFun              !v    exists, <env 0x56166328f230>
  fs              %10.1 = FrameState         R     0x56166354afd0+112: [%10.0], env=e2.3
  void                    Deopt              !v    %10.1, DeadCall@0x561663444440[Call#0], %10.0
BB7   <- [6]
  void                    Invisible          v     
  goto BB8
BB26   <- [24]
  void                    Visible            v     
  void                    Assume             D     %24.6, %24.7 (Typecheck@0x561663444440[Type#61])
  val?-           %26.2 = CastType           d     dn %24.5   <str$->
  lgl-            %26.3 = Eq                 vwed  %26.2, "closure", elided   <lgl$->
  lgl$#-          %26.4 = IsType                   %26.3 isA lgl$-
  cp              %26.5 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x56166354afd0+759: [%24.5], env=e2.3
  void                    Deopt              !v    %25.0   !
BB15   <- [13]
  lgl$#-          %15.0 = CheckTrueFalse     e     %13.3
  void                    Branch                   %15.0 -> BB17 (if true) | BB16 (if false)
BB14   <- [13]
  (cls|spec|blt)  %14.0 = LdFun              !v    suppressVar, e2.3
  fs              %14.1 = FrameState         R     0x56166354afd0+307: [%13.3, %14.0], env=e2.3
  void                    Deopt              !v    %14.1, DeadCall@0x561663444440[Call#8], %14.0   !
BB8   <- [16, 7]
  goto BB9
BB28   <- [26]
  void                    Assume             D     %26.4, %26.5 (Typecheck@0x561663444440[Type#62])
  lgl$-           %28.1 = CastType           d     dn %26.3
  lgl$#-          %28.2 = CheckTrueFalse     e     %28.1
  void                    Branch                   %28.2 -> BB38 (if true) | BB29 (if false)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x56166354afd0+771: [%26.3], env=e2.3
  void                    Deopt              !v    %27.0   !
BB17   <- [15]
  (cls|spec|blt)  %17.0 = LdFun              !v    $, e2.3
  fs              %17.1 = FrameState         R     0x56166354afd0+369: [%17.0], env=e2.3
  void                    Deopt              !v    %17.1, DeadCall@0x561663444440[Call#10], %17.0   !
BB16   <- [15]
  void                    Invisible          v     
  goto BB8
BB9   <- [37, 40, 8]
  val?            %9.0  = Phi                      nil:BB8, %35.8:BB37, %38.7:BB40
  void                    Return             l     %9.0
BB38   <- [28]
  val?^ | miss    %38.0 = LdVar              eR    checkCall, e2.3
  lgl$#-          %38.1 = Identical                %38.0, function(def, call, signal=warning0) <(rir::Di|...
  void                    Assume             D     %38.1, %26.5 (CallTarget@0x561663444440[Call#27])
  prom-           %38.3 = MkArg                    unboundValue, [0x561663def3f0]_p18, e2.3
  prom-           %38.4 = MkArg                    unboundValue, [0x561663def3f0]_p19, e2.3
  cls             %38.5 = MkCls                    @Prom(20)0, e2.3
  prom-           %38.6 = MkArg                    %38.5, [0x561663def3f0]_p20 (!refl), e2.3
  val?            %38.7 = StaticCall         !     checkCall[0x5616612ac5b0](%38.3, %38.4, %38.6) e2.3   <lgl$->
  lgl$#-          %38.8 = IsType                   %38.7 isA lgl$-
  cp              %38.9 = Checkpoint                -> BB40 (default) | BB39 (if assume failed)
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    typeof, e2.3
  lgl$#-          %29.1 = Identical                %29.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %29.1, %26.5 (CallTarget@0x561663444440[Call#25])
  val?^ | miss    %29.3 = LdVar              eR    def, e2.3
  val?            %29.4 = Force!<value>      !v    %29.3, e2.3   <(spec|blt)->
  prom-           %29.5 = MkArg                    %29.4, [0x561663def3f0]_p13 (!refl), 
  val?            %29.6 = StaticCall         !v    typeof[0x561663653770](%29.5) e2.3   <str$->
  lgl$#-          %29.7 = IsType                   %29.6 isA val?-
  cp              %29.8 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB40   <- [38]
  void                    Assume             D     %38.8, %38.9 (Typecheck@0x561663444440[Type#72])
  goto BB9
BB39   <- [38]
  fs              %39.0 = FrameState         R     0x56166354afd0+939: [%38.7], env=e2.3
  void                    Deopt              !v    %39.0   !
BB31   <- [29]
  void                    Visible            v     
  void                    Assume             D     %29.7, %29.8 (Typecheck@0x561663444440[Type#64])
  val?-           %31.2 = CastType           d     dn %29.6   <str$->
  lgl-            %31.3 = Eq                 vwed  %31.2, "builtin", elided   <lgl$->
  lgl$#-          %31.4 = IsType                   %31.3 isA lgl$-
  cp              %31.5 = Checkpoint                -> BB33 (default) | BB32 (if assume failed)
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x56166354afd0+814: [%29.6], env=e2.3
  void                    Deopt              !v    %30.0   !
BB33   <- [31]
  void                    Assume             D     %31.4, %31.5 (Typecheck@0x561663444440[Type#65])
  lgl$-           %33.1 = CastType           d     dn %31.3
  void                    StVar              lW    isBuiltin, %33.1, e2.3
  cp              %33.3 = Checkpoint                -> BB35 (default) | BB34 (if assume failed)
BB32   <- [31]
  fs              %32.0 = FrameState         R     0x56166354afd0+826: [%31.3], env=e2.3
  void                    Deopt              !v    %32.0   !
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    checkPrimopCall, e2.3
  lgl$#-          %35.1 = Identical                %35.0, function(fn, e, isBuiltin, signal=warning0) <(|...
  void                    Assume             D     %35.1, %33.3 (CallTarget@0x561663444440[Call#26])
  prom-           %35.3 = MkArg                    unboundValue, [0x561663def3f0]_p14, e2.3
  prom-           %35.4 = MkArg                    unboundValue, [0x561663def3f0]_p15, e2.3
  prom-           %35.5 = MkArg                    unboundValue, [0x561663def3f0]_p16 (!refl), e2.3
  cls             %35.6 = MkCls                    @Prom(17)0, e2.3
  prom-           %35.7 = MkArg                    %35.6, [0x561663def3f0]_p17 (!refl), e2.3
  val?            %35.8 = StaticCall         !     checkPrimopCall[0x561663b4cc20](%35.3, %35.4, %35.5, %35.7) e2.3   <lgl$->
  lgl$#-          %35.9 = IsType                   %35.8 isA lgl$-
  cp              %35.10 = Checkpoint                -> BB37 (default) | BB36 (if assume failed)
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x56166354afd0+840: [], env=e2.3
  void                    Deopt              !v    %34.0   !
BB37   <- [35]
  void                    Assume             D     %35.9, %35.10 (Typecheck@0x561663444440[Type#69])
  goto BB9
BB36   <- [35]
  fs              %36.0 = FrameState         R     0x56166354afd0+887: [%35.8], env=e2.3
  void                    Deopt              !v    %36.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x561660cbcc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x561663def3f0]_p2, e1.0
  prom-           %1.3  = MkArg                    unboundValue, [0x561663def3f0]_p3, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env->
  void                    Return             l     %1.4
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    globalenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x561660cbcc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x561663def3f0]_p6, e1.0
  prom-           %1.3  = MkArg                    unboundValue, [0x561663def3f0]_p7, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env->
  void                    Return             l     %1.4
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    globalenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x561660cbcc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x561663def3f0]_p10, e1.0
  prom-           %1.3  = MkArg                    unboundValue, [0x561663def3f0]_p11, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env->
  void                    Return             l     %1.4
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    globalenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <val?->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <(spec|blt)->
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isBuiltin, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <lgl$->
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    @Prom(17)0, e1.0
  void                    Return             l     %1.1
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    @Prom(20)0, e1.0
  void                    Return             l     %1.1

│ [0x561663def3f0]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
