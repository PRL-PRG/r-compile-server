
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.arg[0x5616640f0f40]                                                    │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
match.arg[0x5616640f0f40]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     arg=%1.0, choices(miss)=missingArg, several.ok(miss)=false, parent=R_BaseNamespace, context 1
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p5, e1.1
  val?            %1.3  = StaticCall         !v    formals[0x561661c1f1f0](%1.2) e1.1   <list->
  void                    StVar              lW    formal.args, %1.3, e1.1
  cp              %1.5  = Checkpoint                -> BB2 (default) | BB56 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    eval, e1.1
  lgl$#-          %2.1  = Identical                %2.0, function(expr, envir=parent.frame(), enclos=if|...
  void                    Assume             D     %2.1, %1.5 (CallTarget@0x5616632ae130[Call#3])
  prom-           %2.3  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p7, e1.1
  prom-           %2.4  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p13, e1.1
  val?            %2.5  = StaticCall         !v    eval[0x5616645d0190](%2.3, %2.4) { 0 1n } e1.1   <str->
  void                    StVar              lW    choices, %2.5, e1.1
  val?^ | miss    %2.7  = LdVar              eR    arg, e1.1
  val?            %2.8  = Force!<lazy>       !v    %2.7, e1.1   <str->
  lgl$-           %2.9  = Is                       %2.8, NULL
  cp              %2.10 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB56   <- [1]
  fs              %56.0 = FrameState         R     0x5616633068d0+63: [], env=e1.1
  void                    Deopt              !v    %56.0   !
BB4   <- [2]
  lgl$#-          %4.0  = CheckTrueFalse     e     %2.9
  void                    Branch                   %4.0 -> BB53 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5616633068d0+131: [%2.8], env=e1.1
  void                    Deopt              !v    %3.0   !
BB53   <- [4]
  val?^ | miss    %53.0 = LdVar              eR    choices, e1.1
  val?            %53.1 = Force!             !v    %53.0, e1.1   <val?_>
  lgl$#-          %53.2 = IsType                   %53.1 isA val?+
  cp              %53.3 = Checkpoint                -> BB55 (default) | BB54 (if assume failed)
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    is.character, e1.1
  lgl$#-          %5.1  = Identical                <blt is.character>, %5.0   <true>
  void                    Assume             D     %5.1, %2.10 (DeadBranchReached@0x5616632ae130[Test#1])
  val?^ | miss    %5.3  = LdVar              eR    arg, e1.1
  val?            %5.4  = Force!<wrapped>    !v    %5.3, e1.1   <str->
  lgl$#-          %5.5  = CallSafeBuiltin    wed   is.character(%5.4)    <lgl$->
  void                    Branch                   %5.5 -> BB7 (if true) | BB6 (if false)
BB55   <- [53]
  void                    Assume             D     %53.2, %53.3 (Typecheck@0x5616632ae130[Type#18])
  val?+           %55.1 = CastType           d     dn %53.1   <val?_>
  val?            %55.2 = Extract1_1D        wed   %55.1, 1L, elided   <val?_>
  void                    Visible            v     
  goto BB35
BB54   <- [53]
  fs              %54.0 = FrameState         R     0x5616633068d0+302: [%53.1], env=e1.1
  void                    Deopt              !v    %54.0   !
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    several.ok, e1.1
  val?            %7.1  = Force!<lazy>       !v    %7.0, e1.1   <lgl$->
  lgl$#-          %7.2  = IsType                   %7.1 isA lgl$-
  cp              %7.3  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    stop, e1.1
  fs              %6.1  = FrameState         R     0x5616633068d0+260: [%6.0], env=e1.1
  void                    Deopt              !v    %6.1, DeadCall@0x5616632ae130[Call#10], %6.0   !
BB35   <- [55, 52, 34]
  val?            %35.0 = Phi                      %34.7:BB34, %52.3:BB52, %55.2:BB55
  void                    Return             l     %35.0
BB9   <- [7]
  void                    Assume             D     %7.2, %7.3 (Typecheck@0x5616632ae130[Type#20])
  lgl$-           %9.1  = CastType           d     dn %7.1
  lgl$-           %9.2  = Not                d     %9.1, elided
  lgl$#-          %9.3  = CheckTrueFalse     e     %9.2
  void                    Branch                   %9.3 -> BB40 (if true) | BB10 (if false)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5616633068d0+361: [%7.1], env=e1.1
  void                    Deopt              !v    %8.0   !
BB40   <- [9]
  val?^ | miss    %40.0 = LdVar              eR    identical, e1.1
  lgl$#-          %40.1 = Identical                %40.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %40.1, %7.3 (CallTarget@0x5616632ae130[Call#13])
  prom-           %40.3 = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p3, e1.1
  prom-           %40.4 = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p4, e1.1
  ct              %40.5 = PushContext        lCL   %40.3, %40.4, identical(arg, choices), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e1.1
  val?^           %40.6 = CastType                 up %40.4
  val?^           %40.7 = CastType                 up %40.3
  env             e40.8 = MkEnv              l     x=%40.7, y=%40.6, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %40.9 = Force!<lazy>       !vL   %40.7, e40.8   <val?+>
  val?            %40.10 = Force!<lazy>       !vL   %40.6, e40.8   <val?+>
  val?            %40.11 = CallBuiltin        !v    identical(%40.9, %40.10, true, true, true, true, false, true) e40.8
  val?            %40.12 = PopContext         C     %40.11, %40.5   <lgl$->
  lgl$#-          %40.13 = IsType                   %40.12 isA lgl$-
  cp              %40.14 = Checkpoint                -> BB42 (default) | BB41 (if assume failed)
BB10   <- [9]
  val?^ | miss    %10.0 = LdVar              eR    length, e1.1
  lgl$#-          %10.1 = Identical                <blt length>, %10.0   <@?>
  void                    Branch                   %10.1 -> BB12 (if true) | BB11 (if false)
BB42   <- [40]
  void                    Assume             D     %40.13, %40.14 (Typecheck@0x5616632ae130[Type#27])
  lgl$-           %42.1 = CastType           d     dn %40.12
  lgl$#-          %42.2 = CheckTrueFalse     e     %42.1
  void                    Branch                   %42.2 -> BB50 (if true) | BB43 (if false)
BB41   <- [40]
  fs              %41.0 = FrameState         R     0x5616633068d0+567: [%40.12], env=e1.1
  void                    Deopt              !v    %41.0   !
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    arg, e1.1
  val?            %12.1 = Force!             !v    %12.0, e1.1   <val?_>
  lgl$#-          %12.2 = IsType                   %12.1 isA val?+
  cp              %12.3 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    length, e1.1
  fs              %11.1 = FrameState         R     0x5616633068d0+401: [%11.0], env=e1.1
  void                    Deopt              !v    %11.1, DeadCall@0x5616632ae130[Call#11], %11.0   !
BB50   <- [42]
  val?^ | miss    %50.0 = LdVar              eR    arg, e1.1
  val?            %50.1 = Force!<wrapped>    !v    %50.0, e1.1   <str->
  lgl$#-          %50.2 = IsType                   %50.1 isA val+   <true>
  lgl$#-          %50.3 = IsType                   %50.1 isA val?-
  cp              %50.4 = Checkpoint                -> BB52 (default) | BB51 (if assume failed)
BB43   <- [42]
  val?^ | miss    %43.0 = LdVar              eR    length, e1.1
  lgl$#-          %43.1 = Identical                <blt length>, %43.0   <true>
  void                    Assume             D     %43.1, %40.14 (DeadBranchReached@0x5616632ae130[Test#5])
  val?^ | miss    %43.3 = LdVar              eR    arg, e1.1
  val?            %43.4 = Force!<wrapped>    !v    %43.3, e1.1   <str$->
  lgl$#-          %43.5 = IsType                   %43.4 isA val?-
  cp              %43.6 = Checkpoint                -> BB45 (default) | BB44 (if assume failed)
BB14   <- [12]
  void                    Assume             D     %12.2, %12.3 (Typecheck@0x5616632ae130[Type#22])
  val?+           %14.1 = CastType           d     dn %12.1   <val?_>
  (int|real)$-    %14.2 = CallSafeBuiltin    wed   length(%14.1)    <val?_>
  lgl$-           %14.3 = Eq                 d     %14.2, 0L, elided   <val?_>
  lgl$#-          %14.4 = CheckTrueFalse     e     %14.3
  void                    Branch                   %14.4 -> BB39 (if true) | BB15 (if false)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x5616633068d0+442: [<blt length>, %12.1], env=e1.1
  void                    Deopt              !v    %13.0   !
BB52   <- [50]
  void                    Assume             D     %50.2, %50.4 (DeadBranchReached@0x5616632ae130[Test#4])
  void                    Assume             D     %50.3, %50.4 (Typecheck@0x5616632ae130[Type#28])
  val?-           %52.2 = CastType           d     dn %50.1   <str->
  val?            %52.3 = Extract1_1D        wed   %52.2, 1L, elided   <str$->
  void                    Visible            v     
  goto BB35
BB51   <- [50]
  fs              %51.0 = FrameState         R     0x5616633068d0+592: [%50.1], env=e1.1
  void                    Deopt              !v    %51.0   !
BB45   <- [43]
  void                    Assume             D     %43.5, %43.6 (Typecheck@0x5616632ae130[Type#31])
  val?-           %45.1 = CastType           d     dn %43.4   <str$->
  (int|real)$-    %45.2 = CallSafeBuiltin    wed   length(%45.1)    <int$->
  lgl$#-          %45.3 = IsType                   %45.2 isA int$-
  cp              %45.4 = Checkpoint                -> BB47 (default) | BB46 (if assume failed)
BB44   <- [43]
  fs              %44.0 = FrameState         R     0x5616633068d0+711: [<blt length>, %43.4], env=e1.1
  void                    Deopt              !v    %44.0   !
BB39   <- [14]
  (cls|spec|blt)  %39.0 = LdFun              !v    stop, e1.1
  fs              %39.1 = FrameState         R     0x5616633068d0+497: [%39.0], env=e1.1
  void                    Deopt              !v    %39.1, DeadCall@0x5616632ae130[Call#12], %39.0   !
BB15   <- [14]
  goto BB16
BB47   <- [45]
  void                    Assume             D     %45.3, %45.4 (Typecheck@0x5616632ae130[Type#32])
  int$-           %47.1 = CastType           d     dn %45.2
  lgl$-           %47.2 = Gt                 d     %47.1, 1L, elided   <lgl$->
  lgl$#-          %47.3 = CheckTrueFalse     e     %47.2
  void                    Branch                   %47.3 -> BB49 (if true) | BB48 (if false)
BB46   <- [45]
  fs              %46.0 = FrameState         R     0x5616633068d0+733: [%45.2], env=e1.1
  void                    Deopt              !v    %46.0   !
BB16   <- [48, 15]
  cp              %16.0 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB49   <- [47]
  (cls|spec|blt)  %49.0 = LdFun              !v    stop, e1.1
  fs              %49.1 = FrameState         R     0x5616633068d0+766: [%49.0], env=e1.1
  void                    Deopt              !v    %49.1, DeadCall@0x5616632ae130[Call#15], %49.0   !
BB48   <- [47]
  goto BB16
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    pmatch, e1.1
  lgl$#-          %18.1 = Identical                %18.0, function(x, table, nomatch=NA, duplicates.ok=F|...
  void                    Assume             D     %18.1, %16.0 (CallTarget@0x5616632ae130[Call#16])
  prom-           %18.3 = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p2, e1.1
  val?^ | miss    %18.4 = LdVar              eR    arg, e1.1
  val?            %18.5 = Force!<wrapped>    !v    %18.4, e1.1   <str$->
  prom-           %18.6 = MkArg                    %18.5, match.arg[0x5616640f0f40]_p1 (!refl), 
  val?            %18.7 = StaticCall         !v    pmatch[0x561663a3c1d0](%18.6, %18.3, 0L, true) { 0 1 2n 3n } e1.1   <int$->
  lgl$#-          %18.8 = IsType                   %18.7 isA int$-
  cp              %18.9 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x5616633068d0+794: [], env=e1.1
  void                    Deopt              !v    %17.0   !
BB20   <- [18]
  void                    Assume             D     %18.8, %18.9 (Typecheck@0x5616632ae130[Type#36])
  int$-           %20.1 = CastType           d     dn %18.7
  void                    StVar              lW    i, %20.1, e1.1
  cp              %20.3 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x5616633068d0+857: [%18.7], env=e1.1
  void                    Deopt              !v    %19.0   !
BB22   <- [20]
  val?^ | miss    %22.0 = LdVar              eR    all, e1.1
  lgl$#-          %22.1 = Identical                <blt all>, %22.0   <true>
  void                    Assume             D     %22.1, %20.3 (DeadBranchReached@0x5616632ae130[Test#6])
  lgl$-           %22.3 = Eq                 d     %20.1, 0L, elided   <lgl$->
  val?            %22.4 = CallBuiltin        !v    all(%22.3) e1.1   <lgl$->
  lgl$#-          %22.5 = IsType                   %22.4 isA lgl$-
  cp              %22.6 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x5616633068d0+871: [], env=e1.1
  void                    Deopt              !v    %21.0   !
BB24   <- [22]
  void                    Assume             D     %22.5, %22.6 (Typecheck@0x5616632ae130[Type#41])
  lgl$-           %24.1 = CastType           d     dn %22.4
  lgl$#-          %24.2 = CheckTrueFalse     e     %24.1
  void                    Branch                   %24.2 -> BB38 (if true) | BB25 (if false)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x5616633068d0+974: [%22.4], env=e1.1
  void                    Deopt              !v    %23.0   !
BB38   <- [24]
  (cls|spec|blt)  %38.0 = LdFun              !v    stop, e1.1
  fs              %38.1 = FrameState         R     0x5616633068d0+995: [%38.0], env=e1.1
  void                    Deopt              !v    %38.1, DeadCall@0x5616632ae130[Call#18], %38.0   !
BB25   <- [24]
  val?^ | miss    %25.0 = LdVar              eR    i, e1.1
  lgl$#-          %25.1 = IsType                   %25.0 isA int$-
  void                    Assume             D     %25.1, %22.6 (Typecheck@0x5616632ae130[Type#46])
  int$-           %25.3 = CastType           d     dn %25.0
  lgl$-           %25.4 = Gt                 d     %25.3, 0L, elided   <lgl$->
  int-            %25.5 = Extract1_1D        wed   %25.3, %25.4, elided   <int$->
  lgl$#-          %25.6 = IsType                   %25.5 isA int$-
  cp              %25.7 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB27   <- [25]
  void                    Assume             D     %25.6, %25.7 (Typecheck@0x5616632ae130[Type#51])
  int$-           %27.1 = CastType           d     dn %25.5
  void                    StVar              lW    i, %27.1, e1.1
  val?^ | miss    %27.3 = LdVar              eR    several.ok, e1.1
  val?            %27.4 = Force!<wrapped>    !v    %27.3, e1.1   <lgl$->
  lgl$#-          %27.5 = IsType                   %27.4 isA lgl$-
  cp              %27.6 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x5616633068d0+1108: [%25.5], env=e1.1
  void                    Deopt              !v    %26.0   !
BB29   <- [27]
  void                    Assume             D     %27.5, %27.6 (Typecheck@0x5616632ae130[Type#52])
  lgl$-           %29.1 = CastType           d     dn %27.4
  lgl$-           %29.2 = Not                d     %29.1, elided
  lgl$-           %29.3 = AsLogical                %29.2
  lgl$#-          %29.4 = Identical                %29.3, false
  void                    Branch                   %29.4 -> BB37 (if true) | BB30 (if false)
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x5616633068d0+1132: [%27.4], env=e1.1
  void                    Deopt              !v    %28.0   !
BB37   <- [29]
  goto BB31
BB30   <- [29]
  val?^ | miss    %30.0 = LdVar              eR    length, e1.1
  lgl$#-          %30.1 = Identical                <blt length>, %30.0   <true>
  void                    Assume             D     %30.1, %27.6 (DeadBranchReached@0x5616632ae130[Test#8])
  val?^ | miss    %30.3 = LdVar              eR    i, e1.1
  lgl$#-          %30.4 = IsType                   %30.3 isA int$-
  void                    Assume             D     %30.4, %27.6 (Typecheck@0x5616632ae130[Type#54])
  goto BB31
BB31   <- [37, 30]
  lgl$-           %31.0 = Phi                      false:BB30, %29.3:BB37
  lgl$#-          %31.1 = CheckTrueFalse     e     %31.0
  void                    Branch                   %31.1 -> BB36 (if true) | BB32 (if false)
BB36   <- [31]
  (cls|spec|blt)  %36.0 = LdFun              !v    stop, e1.1
  fs              %36.1 = FrameState         R     0x5616633068d0+1271: [%36.0], env=e1.1
  void                    Deopt              !v    %36.1, DeadCall@0x5616632ae130[Call#23], %36.0   !
BB32   <- [31]
  val?^ | miss    %32.0 = LdVar              eR    choices, e1.1
  val?            %32.1 = Force!<value>      !v    %32.0, e1.1   <str->
  lgl$#-          %32.2 = IsType                   %32.1 isA val+   <true>
  lgl$#-          %32.3 = IsType                   %32.1 isA val?-
  cp              %32.4 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB34   <- [32]
  void                    Assume             D     %32.2, %32.4 (DeadBranchReached@0x5616632ae130[Test#9])
  val?^ | miss    %34.1 = LdVar              eR    i, e1.1
  lgl$#-          %34.2 = IsType                   %34.1 isA int$-
  void                    Assume             D     %34.2, %32.4 (Typecheck@0x5616632ae130[Type#59])
  int$-           %34.4 = CastType           d     dn %34.1
  void                    Assume             D     %32.3, %32.4 (Typecheck@0x5616632ae130[Type#57])
  val?-           %34.6 = CastType           d     dn %32.1   <str->
  val?            %34.7 = Extract1_1D        wed   %34.6, %34.4, elided   <str$->
  void                    Visible            v     
  goto BB35
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x5616633068d0+1308: [%32.1], env=e1.1
  void                    Deopt              !v    %33.0   !
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    arg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    choices, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    arg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    choices, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     sys.function, <0x56166149a1b0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p6, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <cls->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    sys.parent, <0x561661c61590>, e1.0
  val?            %1.2  = Call               !v    %1.1() e1.0   <int$->
  void                    Invisible          v     
  void                    StVar              lW    sysP, %1.2, e1.0
  void                    Return             l     %1.2
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    formal.args, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <list->
  lgl$#-          %1.3  = IsType                   %1.2 isA val+   <true>
  void                    Branch                   %1.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  (cls|spec|blt)  %2.0  = LdFun              !v    as.character, <0x561660cca040>, e1.0
  prom-           %2.1  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p8, e1.0
  val?            %2.2  = Call               !v    %2.0(%2.1) e1.0   <str$->
  goto BB3
BB4   <- [1]
  prom-           %4.0  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p10, e1.0
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %2.2:BB2, %4.0:BB4
  val?            %3.1  = Extract2_1D        !v    %1.2, %3.0, e1.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.1
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     substitute, <0x561660cbc468>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p9, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <sym->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    arg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p11, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     substitute, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p12, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    arg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     sys.frame, <0x561661293110>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, match.arg[0x5616640f0f40]_p14, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <env->
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    sysP, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <int$->
  void                    Return             l     %1.3

│ match.arg[0x5616640f0f40]                                                    │
└──────────────────────────────────────────────────────────────────────────────┘
