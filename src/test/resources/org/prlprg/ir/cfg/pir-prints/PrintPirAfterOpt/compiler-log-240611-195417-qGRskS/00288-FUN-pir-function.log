
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x5616635196e0]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
FUN[0x5616635196e0]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    0
  val?^ | miss    %1.1  = LdVar              eR    is.numeric, ?
  lgl$#-          %1.2  = Identical                <blt is.numeric>, %1.1   <true>
  val+            %1.3  = Force<wrapped>           %1.0,    <lgl->
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB26 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.2, %1.4 (DeadBranchReached@0x561663b22b48[Test#0])
  lgl$#-          %2.1  = CallSafeBuiltin    wed   is.numeric(%1.3)    <lgl$->
  cp              %2.2  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB26   <- [1]
  env             e26.0 = (MkEnv)            l     x=%1.0, parent=?, context 1
  fs              %26.1 = FrameState         R     0x561663830180+17: [<blt is.numeric>, %1.2], env=e26.0
  void                    Deopt              !v    %26.1
BB4   <- [2]
  env             e4.0  = MkEnv              l     x=%1.0, parent=?, context 1
  void                    Branch                   %2.1 -> BB25 (if true) | BB5 (if false)
BB3   <- [2]
  env             e3.0  = (MkEnv)            l     x=%1.0, parent=?, context 1
  fs              %3.1  = FrameState         R     0x561663830180+91: [%2.1], env=e3.0
  void                    Deopt              !v    %3.1
BB25   <- [4]
  goto BB10
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    is.factor, ?
  lgl$#-          %5.1  = Identical                %5.0, function(x) <(rir::DispatchTable*)0x5616631243|...
  void                    Assume             D     %5.1, %2.2 (CallTarget@0x561663b22b48[Call#1])
  prom-           %5.3  = MkArg                    unboundValue, FUN[0x5616635196e0]_p0 (!refl), e4.0
  ct              %5.4  = PushContext        lCL   %5.3, is.factor(x), function(x) <(rir::DispatchTable*)0x5616631243|..., e4.0
  val?^           %5.5  = CastType                 up %5.3
  env             e5.6  = MkEnv              l     x=%5.5, parent=R_BaseNamespace, context 1
  prom-           %5.7  = MkArg                    unboundValue, FUN[0x5616635196e0]_p1, e5.6
  ct              %5.8  = PushContext        lCL   %5.7, "factor", inherits(x, "factor"), function(x, what, which=FALSE) <(rir::Dispatch|..., e5.6
  val?^           %5.9  = CastType                 up %5.7
  env             e5.10 = MkEnv              l     x=%5.9, what="factor", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %5.11 = Force!<lazy>       !vr   %5.9,    <val?>
  val?            %5.12 = CallBuiltin        !v    inherits(%5.11, "factor", false) e5.10
  val?            %5.13 = PopContext         C     %5.12, %5.8   <lgl$->
  lgl$#-          %5.14 = IsType                   %5.13 isA lgl$-
  cp              %5.15 = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB10   <- [9, 25]
  lgl$-           %10.0 = Phi                      %9.3:BB9, %2.1:BB25
  lgl$-           %10.1 = AsLogical                %10.0
  lgl$#-          %10.2 = Identical                %10.1, true
  cp              %10.3 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB7   <- [5]
  void                    Assume             D     %5.14, %5.15 (Typecheck@0x561662214f68[Type#1])
  lgl$-           %7.1  = CastType           d     dn %5.13
  val?            %7.2  = PopContext         C     %7.1, %5.4   <lgl$->
  lgl$#-          %7.3  = IsType                   %7.2 isA lgl$-
  cp              %7.4  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x561663830180+135: [%2.1], env=e4.0
  fs              %6.1  = FrameState         R     0x56166307ed30+37: [%5.13], env=e5.6, next=%6.0
  void                    Deopt              !v    %6.1   !
BB12   <- [10]
  void                    Branch                   %10.2 -> BB24 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x561663830180+142: [%10.0], env=e4.0
  void                    Deopt              !v    %11.0   !
BB9   <- [7]
  void                    Assume             D     %7.3, %7.4 (Typecheck@0x561663b22b48[Type#4])
  lgl$-           %9.1  = CastType           d     dn %7.2
  lgl$-           %9.2  = AsLogical                %9.1
  lgl$-           %9.3  = LOr                      %2.1, %9.2
  goto BB10
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x561663830180+135: [%2.1, %7.2], env=e4.0
  void                    Deopt              !v    %8.0   !
BB24   <- [12]
  goto BB16
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    is.logical, e4.0
  lgl$#-          %13.1 = Identical                <blt is.logical>, %13.0   <true>
  void                    Assume             D     %13.1, %10.3 (DeadBranchReached@0x561663b22b48[Test#1])
  val?^ | miss    %13.3 = LdVar              eR    x, e4.0
  val?            %13.4 = Force!<wrapped>    !v    %13.3, e4.0   <lgl->
  val+            %13.5 = CallSafeBuiltin    wed   is.logical(%13.4)    <lgl$->
  lgl$#-          %13.6 = IsType                   %13.5 isA lgl$-
  cp              %13.7 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB16   <- [24, 15]
  lgl$-           %16.0 = Phi                      %15.3:BB15, %10.1:BB24
  lgl$-           %16.1 = AsLogical                %16.0
  lgl$#-          %16.2 = Identical                %16.1, false
  cp              %16.3 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB15   <- [13]
  void                    Assume             D     %13.6, %13.7 (Typecheck@0x561663b22b48[Type#7])
  lgl$-           %15.1 = CastType           d     dn %13.5
  lgl$-           %15.2 = AsLogical                %15.1
  lgl$-           %15.3 = LOr                      %10.1, %15.2
  goto BB16
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x561663830180+240: [%10.1, %13.5], env=e4.0
  void                    Deopt              !v    %14.0   !
BB18   <- [16]
  void                    Visible            v     
  void                    Branch                   %16.2 -> BB23 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x561663830180+247: [%16.0], env=e4.0
  void                    Deopt              !v    %17.0   !
BB23   <- [18]
  goto BB22
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    is.integer, e4.0
  lgl$#-          %19.1 = Identical                <blt is.integer>, %19.0   <true>
  void                    Assume             D     %19.1, %16.3 (DeadBranchReached@0x561663b22b48[Test#2])
  val?^ | miss    %19.3 = LdVar              eR    length, e4.0
  lgl$#-          %19.4 = Identical                <blt length>, %19.3   <true>
  void                    Assume             D     %19.4, %16.3 (DeadBranchReached@0x561663b22b48[Test#3])
  val?^ | miss    %19.6 = LdVar              eR    x, e4.0
  lgl$#-          %19.7 = IsType                   %19.6 isA lgl~-
  void                    Assume             D     %19.7, %16.3 (Typecheck@0x561663b22b48[Type#11])
  lgl~-           %19.9 = CastType           d     dn %19.6
  lgl-            %19.10 = Force!<wrapped>          %19.9,    <lgl->
  (int|real)$-    %19.11 = CallSafeBuiltin    wed   length(%19.10)    <int$->
  lgl$#-          %19.12 = IsType                   %19.11 isA int$-
  cp              %19.13 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB22   <- [23, 21]
  lgl$-           %22.0 = Phi                      %21.1:BB21, %16.1:BB23
  void                    Return             l     %22.0
BB21   <- [19]
  void                    Assume             D     %19.12, %19.13 (Typecheck@0x561663b22b48[Type#12])
  lgl$-           %21.1 = AsLogical                %16.1
  goto BB22
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x561663830180+406: [%16.1, <blt is.integer>, %19.11], env=e4.0
  void                    Deopt              !v    %20.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <lgl->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?+>
  void                    Return             l     %1.3

│ FUN[0x5616635196e0]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
