
┌──────────────────────────────────────────────────────────────────────────────┐
│ withCallingHandlers[0x5616641f0e40]                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1                │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
withCallingHandlers[0x5616641f0e40]
BB0
  goto BB1
BB1   <- [0]
  dots+           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  *dots-          %1.2  = ExpandDots               %1.0
  env             e1.3  = MkEnv              l     expr=%1.1, ...=%1.0, parent=R_BaseNamespace, context 1
  val?            %1.4  = NamedCall          !v    <blt list>(.xpandDotsTrigger=%1.2) e1.3   <vec$+>
  void                    StVar              lW    handlers, %1.4, e1.3
  lgl$#-          %1.6  = IsType                   %1.4 isA val?+
  cp              %1.7  = Checkpoint                -> BB2 (default) | BB16 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    names, e1.3
  lgl$#-          %2.1  = Identical                <blt names>, %2.0   <true>
  void                    Assume             D     %2.1, %1.7 (DeadBranchReached@0x561663aca048[Test#0])
  val             %2.3  = ChkMissing         e     %1.4
  void                    Assume             D     %1.6, %1.7 (Typecheck@0x561663aca048[Type#0])
  val?+           %2.5  = CastType           d     dn %1.4   <vec$+>
  val+            %2.6  = CallSafeBuiltin    wed   names(%2.5)    <str$->
  void                    StVar              lW    classes, %2.6, e1.3
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB16   <- [1]
  fs              %16.0 = FrameState         R     0x561663730550+50: [], env=e1.3
  void                    Deopt              !v    %16.0   !
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    parent.frame, e1.3
  lgl$#-          %4.1  = Identical                %4.0, function(n=1) <(rir::DispatchTable*)0x561662f0|...
  void                    Assume             D     %4.1, %2.8 (CallTarget@0x561663aca048[Call#2])
  val?            %4.3  = StaticCall         !v    parent.frame[0x5616634b39d0]() e1.3   <env->
  void                    StVar              lW    parentenv, %4.3, e1.3
  cp              %4.5  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x561663730550+155: [], env=e1.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  val?^ | miss    %6.0  = LdVar              eR    length, e1.3
  lgl$#-          %6.1  = Identical                <blt length>, %6.0   <true>
  void                    Assume             D     %6.1, %4.5 (DeadBranchReached@0x561663aca048[Test#1])
  val?^ | miss    %6.3  = LdVar              eR    classes, e1.3
  lgl$#-          %6.4  = IsType                   %6.3 isA val?~- | miss
  void                    Assume             D     %6.4, %4.5 (Typecheck@0x561663aca048[Type#6])
  val?~- | miss   %6.6  = CastType           d     dn %6.3
  val?-           %6.7  = Force!<value>            %6.6,    <str$->
  (int|real)$-    %6.8  = CallSafeBuiltin    wed   length(%6.7)    <int$->
  lgl$#-          %6.9  = IsType                   %6.8 isA int$-
  cp              %6.10 = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x561663730550+196: [], env=e1.3
  void                    Deopt              !v    %5.0   !
BB8   <- [6]
  void                    Assume             D     %6.9, %6.10 (Typecheck@0x561663aca048[Type#7])
  int$-           %8.1  = CastType           d     dn %6.8
  val?^ | miss    %8.2  = LdVar              eR    handlers, e1.3
  lgl$#-          %8.3  = IsType                   %8.2 isA val?~+ | miss
  void                    Assume             D     %8.3, %6.10 (Typecheck@0x561663aca048[Type#9])
  val?~+ | miss   %8.5  = CastType           d     dn %8.2
  val?+           %8.6  = Force!<value>            %8.5,    <vec$+>
  (int|real)$-    %8.7  = CallSafeBuiltin    wed   length(%8.6)    <int$->
  lgl$#-          %8.8  = IsType                   %8.7 isA int$-
  cp              %8.9  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x561663730550+287: [%6.8], env=e1.3
  void                    Deopt              !v    %7.0   !
BB10   <- [8]
  void                    Assume             D     %8.8, %8.9 (Typecheck@0x561663aca048[Type#10])
  int$-           %10.1 = CastType           d     dn %8.7
  lgl$-           %10.2 = Neq                d     %8.1, %10.1, elided   <lgl$->
  lgl$#-          %10.3 = CheckTrueFalse     e     %10.2
  void                    Branch                   %10.3 -> BB15 (if true) | BB11 (if false)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x561663730550+383: [%8.1, %8.7], env=e1.3
  void                    Deopt              !v    %9.0   !
BB15   <- [10]
  (cls|spec|blt)  %15.0 = LdFun              !v    stop, e1.3
  val?            %15.1 = Call               !v    %15.0("condition handlers must be specified with a c|...) e1.3
  goto BB12
BB11   <- [10]
  goto BB12
BB12   <- [11, 15]
  cp              %12.0 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB14   <- [12]
  val?^ | miss    %14.0 = LdVar              eR    classes, e1.3
  lgl$#-          %14.1 = IsType                   %14.0 isA val?~- | miss
  void                    Assume             D     %14.1, %12.0 (Typecheck@0x561663aca048[Type#12])
  val?~- | miss   %14.3 = CastType           d     dn %14.0
  val?-           %14.4 = Force!<value>            %14.3,    <str$->
  val?^ | miss    %14.5 = LdVar              eR    handlers, e1.3
  lgl$#-          %14.6 = IsType                   %14.5 isA val?~+ | miss
  void                    Assume             D     %14.6, %12.0 (Typecheck@0x561663aca048[Type#13])
  val?~+ | miss   %14.8 = CastType           d     dn %14.5
  val?+           %14.9 = Force!<value>            %14.8,    <vec$+>
  val?^ | miss    %14.10 = LdVar              eR    parentenv, e1.3
  lgl$#-          %14.11 = IsType                   %14.10 isA val?~- | miss
  void                    Assume             D     %14.11, %12.0 (Typecheck@0x561663aca048[Type#14])
  val?~- | miss   %14.13 = CastType           d     dn %14.10
  val?-           %14.14 = Force!<value>            %14.13,    <env->
  val?            %14.15 = CallBuiltin        !v    .addCondHands(%14.4, %14.9, %14.14, nil, true) e1.3
  val?^ | miss    %14.16 = LdVar              eR    expr, e1.3
  void                    Visible            v     
  val?            %14.18 = Force!<lazy>       !     %14.16, e1.3   <code->
  void                    Return             l     %14.18
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x561663730550+438: [], env=e1.3
  void                    Deopt              !v    %13.0   !

│ withCallingHandlers[0x5616641f0e40]                                          │
└──────────────────────────────────────────────────────────────────────────────┘
