
┌──────────────────────────────────────────────────────────────────────────────┐
│ assign[0x561661e4de40]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 3                              │
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
assign[0x561661e4de40]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  env             e1.3  = MkEnv              l     x=%1.2, value=%1.1, pos=%1.0, envir(miss)=missingArg, inherits(miss)=missingArg, immediate(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %1.4  = MkArg                    unboundValue, assign[0x561661e4de40]_p0, e1.3
  val?^ | miss    %1.5  = CastType                 up %1.4
  void                    StArg              lW    envir, %1.5, e1.3
  void                    StArg              lW    inherits, false, e1.3
  void                    StArg              lW    immediate, true, e1.3
  val?            %1.9  = Force!<lazy>       !v    %1.2, e1.3   <str$->
  lgl$#-          %1.10 = IsType                   %1.9 isA val?-
  cp              %1.11 = Checkpoint                -> BB2 (default) | BB3 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.10, %1.11 (Typecheck@0x561663402950[Type#2])
  val?-           %2.1  = CastType           d     dn %1.9   <str$->
  val?^ | miss    %2.2  = LdVar              eR    value, e1.3
  val?            %2.3  = Force!<lazy>       !v    %2.2, e1.3   <val?>
  val?^ | miss    %2.4  = LdVar              eR    envir, e1.3
  val?            %2.5  = Force!<lazy>       !v    %2.4, e1.3   <env+>
  val?^ | miss    %2.6  = LdVar              eR    inherits, e1.3
  val?            %2.7  = Force!<lazy>       !v    %2.6, e1.3   <lgl$->
  val?            %2.8  = CallBuiltin        !     assign(%2.1, %2.3, %2.5, %2.7) e1.3
  void                    Return             l     %2.8
BB3   <- [1]
  fs              %3.0  = FrameState         R     0x5616633f8790+9: [%1.9], env=e1.3
  void                    Deopt              !v    %3.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.environment, <0x561660cc9b70>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, assign[0x561661e4de40]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <env->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    pos, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ assign[0x561661e4de40]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
