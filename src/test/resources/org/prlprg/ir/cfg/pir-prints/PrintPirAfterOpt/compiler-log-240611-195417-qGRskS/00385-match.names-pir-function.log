
┌──────────────────────────────────────────────────────────────────────────────┐
│ match.names[0x5616634d17c0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
match.names[0x5616634d17c0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  cp              %1.2  = Checkpoint                -> BB2 (default) | BB21 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    identical, ?
  lgl$#-          %2.1  = Identical                %2.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %2.1, %1.2 (CallTarget@0x5616639e00b8[Call#0])
  env             e2.3  = MkEnv              l     clabs=%1.1, nmi=%1.0, parent=?, context 1
  prom-           %2.4  = MkArg                    unboundValue, match.names[0x5616634d17c0]_p0 (!refl), e2.3
  prom-           %2.5  = MkArg                    unboundValue, match.names[0x5616634d17c0]_p1, e2.3
  ct              %2.6  = PushContext        lCL   %2.4, %2.5, identical(clabs, nmi), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e2.3
  val?^           %2.7  = CastType                 up %2.5
  val?^           %2.8  = CastType                 up %2.4
  env             e2.9  = MkEnv              l     x=%2.8, y=%2.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %2.10 = Force!<lazy>       !vr   %2.8,    <val?+>
  val?            %2.11 = Force!<lazy>       !vL   %2.7, e2.9   <val?+>
  val?            %2.12 = CallBuiltin        !v    identical(%2.10, %2.11, true, true, true, true, false, true) e2.9
  val?            %2.13 = PopContext         C     %2.12, %2.6   <lgl$->
  lgl$#-          %2.14 = IsType                   %2.13 isA lgl$-
  cp              %2.15 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB21   <- [1]
  env             e21.0 = (MkEnv)            l     clabs=%1.1, nmi=%1.0, parent=?, context 1
  fs              %21.1 = FrameState         R     0x5616638029f0+0: [], env=e21.0
  void                    Deopt              !v    %21.1
BB4   <- [2]
  void                    Assume             D     %2.14, %2.15 (Typecheck@0x5616639e00b8[Type#2])
  lgl$-           %4.1  = CastType           d     dn %2.13
  lgl$#-          %4.2  = CheckTrueFalse     e     %4.1
  void                    Branch                   %4.2 -> BB20 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5616638029f0+37: [%2.13], env=e2.3
  void                    Deopt              !v    %3.0   !
BB20   <- [4]
  void                    Visible            v     
  void                    Return             l     nil
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    length, e2.3
  lgl$#-          %5.1  = Identical                <blt length>, %5.0   <@?>
  void                    Branch                   %5.1 -> BB7 (if true) | BB6 (if false)
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    nmi, e2.3
  val?            %7.1  = Force!             !v    %7.0, e2.3   <val?_>
  lgl$#-          %7.2  = IsType                   %7.1 isA val?+
  cp              %7.3  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  (cls|spec|blt)  %6.0  = LdFun              !v    length, e2.3
  fs              %6.1  = FrameState         R     0x5616638029f0+76: [%6.0], env=e2.3
  void                    Deopt              !v    %6.1, DeadCall@0x5616639e00b8[Call#1], %6.0   !
BB9   <- [7]
  void                    Assume             D     %7.2, %7.3 (Typecheck@0x5616639e00b8[Type#4])
  val?+           %9.1  = CastType           d     dn %7.1   <val?_>
  (int|real)$-    %9.2  = CallSafeBuiltin    wed   length(%9.1)    <val?_>
  val?^ | miss    %9.3  = LdVar              eR    length, e2.3
  lgl$#-          %9.4  = Identical                <blt length>, %9.3   <@?>
  void                    Branch                   %9.4 -> BB11 (if true) | BB10 (if false)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5616638029f0+117: [<blt length>, %7.1], env=e2.3
  void                    Deopt              !v    %8.0   !
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    clabs, e2.3
  val?            %11.1 = Force!             !v    %11.0, e2.3   <val?_>
  lgl$#-          %11.2 = IsType                   %11.1 isA val?+
  cp              %11.3 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  (cls|spec|blt)  %10.0 = LdFun              !v    length, e2.3
  fs              %10.1 = FrameState         R     0x5616638029f0+172: [%9.2, %10.0], env=e2.3
  void                    Deopt              !v    %10.1, DeadCall@0x5616639e00b8[Call#2], %10.0   !
BB13   <- [11]
  void                    Assume             D     %11.2, %11.3 (Typecheck@0x5616639e00b8[Type#7])
  val?+           %13.1 = CastType           d     dn %11.1   <val?_>
  (int|real)$-    %13.2 = CallSafeBuiltin    wed   length(%13.1)    <val?_>
  lgl$-           %13.3 = Eq                 d     %9.2, %13.2, elided   <val?_>
  lgl$-           %13.4 = AsLogical                %13.3
  lgl$#-          %13.5 = Identical                %13.4, false
  void                    Branch                   %13.5 -> BB17 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x5616638029f0+213: [%9.2, <blt length>, %11.1], env=e2.3
  void                    Deopt              !v    %12.0   !
BB17   <- [13]
  lgl$#-          %17.0 = CheckTrueFalse     e     %13.4
  void                    Branch                   %17.0 -> BB19 (if true) | BB18 (if false)
BB14   <- [13]
  val?^ | miss    %14.0 = LdVar              eR    all, e2.3
  lgl$#-          %14.1 = Identical                <blt all>, %14.0   <@?>
  void                    Branch                   %14.1 -> BB16 (if true) | BB15 (if false)
BB19   <- [17]
  (cls|spec|blt)  %19.0 = LdFun              !v    pmatch, e2.3
  fs              %19.1 = FrameState         R     0x5616638029f0+432: [%19.0], env=e2.3
  void                    Deopt              !v    %19.1, DeadCall@0x5616639e00b8[Call#7], %19.0   !
BB18   <- [17]
  (cls|spec|blt)  %18.0 = LdFun              !v    stop, e2.3
  fs              %18.1 = FrameState         R     0x5616638029f0+390: [%18.0], env=e2.3
  void                    Deopt              !v    %18.1, DeadCall@0x5616639e00b8[Call#6], %18.0   !
BB16   <- [14]
  (cls|spec|blt)  %16.0 = LdFun              !v    %in%, e2.3
  fs              %16.1 = FrameState         R     0x5616638029f0+318: [%13.4, <blt all>, %16.0], env=e2.3
  void                    Deopt              !v    %16.1, DeadCall@0x5616639e00b8[Call#5], %16.0   !
BB15   <- [14]
  (cls|spec|blt)  %15.0 = LdFun              !v    all, e2.3
  fs              %15.1 = FrameState         R     0x5616638029f0+281: [%13.4, %15.0], env=e2.3
  void                    Deopt              !v    %15.1, DeadCall@0x5616639e00b8[Call#3], %15.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    clabs, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    nmi, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str->
  void                    Return             l     %1.3

│ match.names[0x5616634d17c0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
