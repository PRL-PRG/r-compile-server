
┌──────────────────────────────────────────────────────────────────────────────┐
│ getAssignedVar[0x5616617f0a60]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── PIR Version After Optimizations
getAssignedVar[0x5616617f0a60]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     e=%1.0, parent=<env 0x56166328f230>, context 1
  val+            %1.2  = Force!<lazy>       !vr   %1.0,    <code->
  val?            %1.3  = Extract2_1D        wed   %1.2, 2, elided   <(sym|code)->
  void                    StVar              lW    v, %1.3, e1.1
  cp              %1.5  = Checkpoint                -> BB2 (default) | BB45 (if assume failed)
BB2   <- [1]
  lgl$-           %2.0  = Missing            eR    v, e1.1
  lgl$#-          %2.1  = CheckTrueFalse     e     %2.0
  void                    Branch                   %2.1 -> BB44 (if true) | BB3 (if false)
BB45   <- [1]
  fs              %45.0 = FrameState         R     0x561663405070+67: [], env=e1.1
  void                    Deopt              !v    %45.0
BB44   <- [2]
  (cls|spec|blt)  %44.0 = LdFun              !v    stop0, <env 0x56166328f230>
  fs              %44.1 = FrameState         R     0x561663405070+1085: [%44.0], env=e1.1
  void                    Deopt              !v    %44.1, DeadCall@0x561661f15068[Call#25], %44.0
BB3   <- [2]
  val?^ | miss    %3.0  = LdVar              eR    %in%, <env 0x56166328f230>
  lgl$#-          %3.1  = Identical                %3.0, function(x, table) <(rir::DispatchTable*)0x561|...
  void                    Assume             D     %3.1, %1.5 (CallTarget@0x561661f15068[Call#0])
  prom-           %3.3  = MkArg                    unboundValue, getAssignedVar[0x5616617f0a60]_p0, e1.1
  prom-           %3.4  = MkArg                    unboundValue, getAssignedVar[0x5616617f0a60]_p2, e1.1
  val?^           %3.5  = CastType                 up %3.4
  val?^           %3.6  = CastType                 up %3.3
  env             e3.7  = MkEnv              l     x=%3.6, table=%3.5, parent=R_BaseNamespace, context 0
  prom-           %3.8  = MkArg                    unboundValue, getAssignedVar[0x5616617f0a60]_p7, e3.7
  val?^           %3.9  = CastType                 up %3.8
  val?^ | miss    %3.10 = LdVar              eR    typeof, <env 0x56166328f230>
  lgl$#-          %3.11 = Identical                %3.10, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %3.11, %1.5 (CallTarget@0x561661f15068[Call#1])
  val             %3.13 = ChkMissing         e     %1.3
  prom-           %3.14 = MkArg                    %1.3, getAssignedVar[0x5616617f0a60]_p1 (!refl), 
  val?            %3.15 = StaticCall         !v    typeof[0x5616636f99a0](%3.14) from function(x) <(rir::DispatchTable*)0x5616632751|... { 0 } e1.1   <str$->
  prom-           %3.16 = MkArg                    %3.15, getAssignedVar[0x5616617f0a60]_p0 (!refl), e1.1
  val?~           %3.17 = CastType                 up %3.16
  void                    StArg              lW    x, %3.17, e3.7
  prom-           %3.19 = MkArg                    %3.15, getAssignedVar[0x5616617f0a60]_p6 (!refl), e3.7
  val?~           %3.20 = CastType                 up %3.19
  env             e3.21 = (MkEnv)            l     x=%3.20, table=%3.9, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  val?            %3.22 = Force<lazy>        !vL   %3.5, e3.21   <val?->
  prom-           %3.23 = MkArg                    %3.22, getAssignedVar[0x5616617f0a60]_p7 (!refl), e3.7
  val?~           %3.24 = CastType                 up %3.23
  void                    StArg              lWd   table, %3.24, e3.21
  lgl$#-          %3.26 = IsType                   %3.22 isA val?-
  lgl$#-          %3.27 = IsType                   %3.15 isA val?+
  cp              %3.28 = Checkpoint                -> BB5 (default) | BB4 (if assume failed)
BB5   <- [3]
  lgl$#-          %5.0  = IsEnvStub          R     , e3.21
  void                    Assume             D     %5.0, %3.28 (EnvStubMaterialized@0x561660fcab30[Call#unknown])
  void                    Assume             D     %3.27, %3.28 (Typecheck@0x561660fcab30[Type#0])
  val?+           %5.3  = CastType           d     dn %3.15   <(int|str)+>
  void                    Assume             D     %3.26, %3.28 (Typecheck@0x561660fcab30[Type#1])
  val?-           %5.5  = CastType           d     dn %3.22
  val+            %5.6  = CallSafeBuiltin    wed   match(%5.3, %5.5, 0L, nil)    <int->
  lgl$#-          %5.7  = IsType                   %5.6 isA int-
  cp              %5.8  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB4   <- [3]
  fs              %4.0  = FrameState         R     0x561663405070+116: [], env=e1.1
  fs              %4.1  = FrameState         R     0x5616612ea4e0+54: [], env=e3.7, next=%4.0
  fs              %4.2  = FrameState         R     0x5616617f2d70+23: [%3.15, %3.22], env=e3.21, next=%4.1
  void                    Deopt              !v    %4.2   !
BB7   <- [5]
  void                    Assume             D     %5.7, %5.8 (Typecheck@0x56166231c688[Type#2])
  int-            %7.1  = CastType           d     dn %5.6
  lgl-            %7.2  = Gt                 wed   %7.1, 0L, elided   <lgl->
  lgl$#-          %7.3  = CheckTrueFalse     we    %7.2
  cp              %7.4  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x561663405070+116: [], env=e1.1
  fs              %6.1  = FrameState         R     0x5616612ea4e0+54: [], env=e3.7, next=%6.0
  fs              %6.2  = FrameState         R     0x5616617f2d70+69: [%5.6], env=e3.21, next=%6.1
  void                    Deopt              !v    %6.2   !
BB9   <- [7]
  void                    Branch                   %7.3 -> BB43 (if true) | BB10 (if false)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x561663405070+122: [%7.3], env=e1.1
  void                    Deopt              !v    %8.0   !
BB43   <- [9]
  val?^ | miss    %43.0 = LdVar              eR    as.character, e1.1
  lgl$#-          %43.1 = Identical                <blt as.character>, %43.0   <true>
  void                    Assume             D     %43.1, %7.4 (DeadBranchReached@0x561661f15068[Test#7])
  val?^ | miss    %43.3 = LdVar              eR    v, e1.1
  lgl$#-          %43.4 = IsType                   %43.3 isA val?~- | miss
  void                    Assume             D     %43.4, %7.4 (Typecheck@0x561661f15068[Type#46])
  val?~- | miss   %43.6 = CastType           d     dn %43.3
  val?-           %43.7 = Force!<value>            %43.6,    <sym->
  val+            %43.8 = CallSafeBuiltin    vwed  as.character(%43.7)    <str$->
  goto BB32
BB10   <- [9]
  val?^ | miss    %10.0 = LdVar              eR    typeof, e1.1
  lgl$#-          %10.1 = Identical                %10.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %10.1, %7.4 (CallTarget@0x561661f15068[Call#3])
  val?^ | miss    %10.3 = LdVar              eR    v, e1.1
  val?            %10.4 = Force!<value>      !v    %10.3, e1.1   <code->
  prom-           %10.5 = MkArg                    %10.4, getAssignedVar[0x5616617f0a60]_p3 (!refl), 
  val?            %10.6 = StaticCall         !v    typeof[0x5616636f99a0](%10.5) e1.1   <str$->
  lgl$#-          %10.7 = IsType                   %10.6 isA val?-
  cp              %10.8 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB32   <- [43, 31]
  val+            %32.0 = Phi                      %31.8:BB31, %43.8:BB43
  void                    Return             l     %32.0
BB12   <- [10]
  void                    Assume             D     %10.7, %10.8 (Typecheck@0x561661f15068[Type#7])
  val?-           %12.1 = CastType           d     dn %10.6   <str$->
  lgl-            %12.2 = Eq                 wed   %12.1, "language", elided   <lgl$->
  lgl$#-          %12.3 = IsType                   %12.2 isA lgl$-
  cp              %12.4 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x561663405070+159: [%10.6], env=e1.1
  void                    Deopt              !v    %11.0   !
BB14   <- [12]
  void                    Assume             D     %12.3, %12.4 (Typecheck@0x561661f15068[Type#8])
  lgl$-           %14.1 = CastType           d     dn %12.2
  lgl$#-          %14.2 = CheckTrueFalse     e     %14.1   <true>
  void                    Assume             D     %14.2, %12.4 (DeadBranchReached@0x561661f15068[Test#1])
  val?^ | miss    %14.4 = LdVar              eR    length, e1.1
  lgl$#-          %14.5 = Identical                <blt length>, %14.4   <true>
  void                    Assume             D     %14.5, %12.4 (DeadBranchReached@0x561661f15068[Test#2])
  val?^ | miss    %14.7 = LdVar              eR    v, e1.1
  lgl$#-          %14.8 = IsType                   %14.7 isA val?~- | miss
  void                    Assume             D     %14.8, %12.4 (Typecheck@0x561661f15068[Type#10])
  val?~- | miss   %14.10 = CastType           d     dn %14.7
  val?-           %14.11 = Force!<value>            %14.10,    <code->
  (int|real)$-    %14.12 = CallSafeBuiltin    wed   length(%14.11)    <int$->
  lgl$#-          %14.13 = IsType                   %14.12 isA int$-
  cp              %14.14 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x561663405070+171: [%12.2], env=e1.1
  void                    Deopt              !v    %13.0   !
BB16   <- [14]
  void                    Assume             D     %14.13, %14.14 (Typecheck@0x561661f15068[Type#11])
  int$-           %16.1 = CastType           d     dn %14.12
  lgl$-           %16.2 = Lt                 d     %16.1, 2, elided   <lgl$->
  lgl$#-          %16.3 = CheckTrueFalse     e     %16.2
  void                    Branch                   %16.3 -> BB42 (if true) | BB17 (if false)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x561663405070+278: [%14.12], env=e1.1
  void                    Deopt              !v    %15.0   !
BB42   <- [16]
  (cls|spec|blt)  %42.0 = LdFun              !v    stop0, e1.1
  fs              %42.1 = FrameState         R     0x561663405070+311: [%42.0], env=e1.1
  void                    Deopt              !v    %42.1, DeadCall@0x561661f15068[Call#5], %42.0   !
BB17   <- [16]
  lgl$#-          %17.0 = IsType                   %14.11 isA val+   <true>
  void                    Assume             D     %17.0, %14.14 (DeadBranchReached@0x561661f15068[Test#3])
  val?            %17.2 = Extract2_1D        wed   %14.11, 2, elided   <(sym|code)->
  void                    StVar              lW    v, %17.2, e1.1
  lgl$-           %17.4 = Missing            eR    v, e1.1
  lgl$#-          %17.5 = CheckTrueFalse     e     %17.4
  void                    Branch                   %17.5 -> BB41 (if true) | BB18 (if false)
BB41   <- [17]
  (cls|spec|blt)  %41.0 = LdFun              !v    stop0, e1.1
  fs              %41.1 = FrameState         R     0x561663405070+428: [%41.0], env=e1.1
  void                    Deopt              !v    %41.1, DeadCall@0x561661f15068[Call#8], %41.0   !
BB18   <- [17]
  goto BB19
BB19   <- [18, 38]
  val?            %19.0 = Phi                      %17.2:BB18, %37.2:BB38
  cp              %19.1 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    typeof, e1.1
  lgl$#-          %21.1 = Identical                %21.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %21.1, %19.1 (CallTarget@0x561661f15068[Call#11])
  val             %21.3 = ChkMissing         e     %19.0   <(sym|code)->
  val?            %21.4 = StaticCall         !v    typeof[0x5616636f99a0](%21.3) e1.1   <str$->
  lgl$#-          %21.5 = IsType                   %21.4 isA val?-
  cp              %21.6 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x561663405070+456: [], env=e1.1
  void                    Deopt              !v    %20.0   !
BB23   <- [21]
  void                    Assume             D     %21.5, %21.6 (Typecheck@0x561661f15068[Type#22])
  val?-           %23.1 = CastType           d     dn %21.4   <str$->
  lgl-            %23.2 = Eq                 wed   %23.1, "language", elided   <lgl$->
  lgl$#-          %23.3 = IsType                   %23.2 isA lgl$-
  cp              %23.4 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x561663405070+488: [%21.4], env=e1.1
  void                    Deopt              !v    %22.0   !
BB25   <- [23]
  void                    Assume             D     %23.3, %23.4 (Typecheck@0x561661f15068[Type#23])
  lgl$-           %25.1 = CastType           d     dn %23.2
  lgl$#-          %25.2 = CheckTrueFalse     e     %25.1
  void                    Branch                   %25.2 -> BB34 (if true) | BB26 (if false)
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x561663405070+500: [%23.2], env=e1.1
  void                    Deopt              !v    %24.0   !
BB34   <- [25]
  val?^ | miss    %34.0 = LdVar              eR    length, e1.1
  lgl$#-          %34.1 = Identical                <blt length>, %34.0   <true>
  void                    Assume             D     %34.1, %23.4 (DeadBranchReached@0x561661f15068[Test#4])
  val?^ | miss    %34.3 = LdVar              eR    v, e1.1
  lgl$#-          %34.4 = IsType                   %34.3 isA val?~- | miss
  void                    Assume             D     %34.4, %23.4 (Typecheck@0x561661f15068[Type#25])
  val?~- | miss   %34.6 = CastType           d     dn %34.3
  val?-           %34.7 = Force!<value>            %34.6,    <code->
  (int|real)$-    %34.8 = CallSafeBuiltin    wed   length(%34.7)    <int$->
  lgl$#-          %34.9 = IsType                   %34.8 isA int$-
  cp              %34.10 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB26   <- [25]
  val?^ | miss    %26.0 = LdVar              eR    typeof, e1.1
  lgl$#-          %26.1 = Identical                %26.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %26.1, %23.4 (CallTarget@0x561661f15068[Call#19])
  val?^ | miss    %26.3 = LdVar              eR    v, e1.1
  val?            %26.4 = Force!<value>      !v    %26.3, e1.1   <sym->
  prom-           %26.5 = MkArg                    %26.4, getAssignedVar[0x5616617f0a60]_p5 (!refl), 
  val?            %26.6 = StaticCall         !v    typeof[0x5616636f99a0](%26.5) e1.1   <str$->
  lgl$#-          %26.7 = IsType                   %26.6 isA val?-
  cp              %26.8 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB36   <- [34]
  void                    Assume             D     %34.9, %34.10 (Typecheck@0x561661f15068[Type#26])
  int$-           %36.1 = CastType           d     dn %34.8
  lgl$-           %36.2 = Lt                 d     %36.1, 2, elided   <lgl$->
  lgl$#-          %36.3 = CheckTrueFalse     e     %36.2
  void                    Branch                   %36.3 -> BB40 (if true) | BB37 (if false)
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x561663405070+602: [%34.8], env=e1.1
  void                    Deopt              !v    %35.0   !
BB28   <- [26]
  void                    Assume             D     %26.7, %26.8 (Typecheck@0x561661f15068[Type#37])
  val?-           %28.1 = CastType           d     dn %26.6   <str$->
  lgl-            %28.2 = Neq                wed   %28.1, "symbol", elided   <lgl$->
  lgl$#-          %28.3 = IsType                   %28.2 isA lgl$-
  cp              %28.4 = Checkpoint                -> BB30 (default) | BB29 (if assume failed)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x561663405070+817: [%26.6], env=e1.1
  void                    Deopt              !v    %27.0   !
BB40   <- [36]
  (cls|spec|blt)  %40.0 = LdFun              !v    stop0, e1.1
  fs              %40.1 = FrameState         R     0x561663405070+635: [%40.0], env=e1.1
  void                    Deopt              !v    %40.1, DeadCall@0x561661f15068[Call#13], %40.0   !
BB37   <- [36]
  lgl$#-          %37.0 = IsType                   %34.7 isA val+   <true>
  void                    Assume             D     %37.0, %34.10 (DeadBranchReached@0x561661f15068[Test#5])
  val?            %37.2 = Extract2_1D        wed   %34.7, 2, elided   <sym->
  void                    StVar              lW    v, %37.2, e1.1
  lgl$-           %37.4 = Missing            eR    v, e1.1
  lgl$#-          %37.5 = CheckTrueFalse     e     %37.4
  void                    Branch                   %37.5 -> BB39 (if true) | BB38 (if false)
BB30   <- [28]
  void                    Assume             D     %28.3, %28.4 (Typecheck@0x561661f15068[Type#38])
  lgl$-           %30.1 = CastType           d     dn %28.2
  lgl$#-          %30.2 = CheckTrueFalse     e     %30.1
  void                    Branch                   %30.2 -> BB33 (if true) | BB31 (if false)
BB29   <- [28]
  fs              %29.0 = FrameState         R     0x561663405070+829: [%28.2], env=e1.1
  void                    Deopt              !v    %29.0   !
BB39   <- [37]
  (cls|spec|blt)  %39.0 = LdFun              !v    stop0, e1.1
  fs              %39.1 = FrameState         R     0x561663405070+752: [%39.0], env=e1.1
  void                    Deopt              !v    %39.1, DeadCall@0x561661f15068[Call#16], %39.0   !
BB38   <- [37]
  goto BB19
BB33   <- [30]
  (cls|spec|blt)  %33.0 = LdFun              !v    stop0, e1.1
  fs              %33.1 = FrameState         R     0x561663405070+850: [%33.0], env=e1.1
  void                    Deopt              !v    %33.1, DeadCall@0x561661f15068[Call#20], %33.0   !
BB31   <- [30]
  val?^ | miss    %31.0 = LdVar              eR    as.character, e1.1
  lgl$#-          %31.1 = Identical                <blt as.character>, %31.0   <true>
  void                    Assume             D     %31.1, %28.4 (DeadBranchReached@0x561661f15068[Test#6])
  val?^ | miss    %31.3 = LdVar              eR    v, e1.1
  lgl$#-          %31.4 = IsType                   %31.3 isA val?~- | miss
  void                    Assume             D     %31.4, %28.4 (Typecheck@0x561661f15068[Type#43])
  val?~- | miss   %31.6 = CastType           d     dn %31.3
  val?-           %31.7 = Force!<value>            %31.6,    <sym->
  val+            %31.8 = CallSafeBuiltin    vwed  as.character(%31.7)    <str$->
  goto BB32
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     typeof, <0x5616632719d0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getAssignedVar[0x5616617f0a60]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <(sym|code)->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     c, <0x561660cbd940>, e1.0
  val?            %1.2  = Call               !     %1.1("symbol", "character") e1.0   <str->
  void                    Return             l     %1.2
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <sym->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(int|str)+>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    table, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?->
  void                    Return             l     %1.3

│ getAssignedVar[0x5616617f0a60]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
