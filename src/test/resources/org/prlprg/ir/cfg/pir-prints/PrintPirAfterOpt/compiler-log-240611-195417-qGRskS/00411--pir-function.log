
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x5616642fd1a0]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1        │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
[0x5616642fd1a0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  cp              %1.2  = Checkpoint                -> BB2 (default) | BB50 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    typeof, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %2.1, %1.2 (CallTarget@0x561663ac9808[Call#0])
  env             e2.3  = MkEnv              l     v=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  val+            %2.4  = Force!<lazy>       !vr   %1.1,    <val?->
  val?            %2.5  = StaticCall         !vL   typeof[0x561660f8a360](%2.4) e2.3   <str$->
  lgl$#-          %2.6  = IsType                   %2.5 isA val?-
  cp              %2.7  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB50   <- [1]
  env             e50.0 = (MkEnv)            l     v=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %50.1 = FrameState         R     0x56166344fa70+0: [], env=e50.0
  void                    Deopt              !v    %50.1
BB4   <- [2]
  void                    Assume             D     %2.6, %2.7 (Typecheck@0x561663ac9808[Type#1])
  val?-           %4.1  = CastType           d     dn %2.5   <str$->
  lgl-            %4.2  = Eq                 wed   %4.1, "symbol", elided   <lgl$->
  lgl$#-          %4.3  = IsType                   %4.2 isA lgl$-
  cp              %4.4  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x56166344fa70+32: [%2.5], env=e2.3
  void                    Deopt              !v    %3.0
BB6   <- [4]
  void                    Assume             D     %4.3, %4.4 (Typecheck@0x561663ac9808[Type#2])
  lgl$-           %6.1  = CastType           d     dn %4.2
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB9 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x56166344fa70+44: [%4.2], env=e2.3
  void                    Deopt              !v    %5.0
BB9   <- [6]
  val?^ | miss    %9.0  = LdVar              eR    as.character, <env 0x56166328f230>
  lgl$#-          %9.1  = Identical                <blt as.character>, %9.0   <true>
  void                    Assume             D     %9.1, %4.4 (DeadBranchReached@0x561663ac9808[Test#0])
  lgl$#-          %9.3  = IsType                   %2.4 isA val?-
  void                    Assume             D     %9.3, %4.4 (Typecheck@0x561663ac9808[Type#4])
  val-            %9.5  = CastType           d     dn %2.4   <sym->
  val+            %9.6  = CallSafeBuiltin    wed   as.character(%9.5)    <str$->
  void                    StVar              lW    vn, %9.6, e2.3
  lgl-            %9.8  = Eq                 wed   %9.5, "...", elided   <lgl$->
  lgl$#-          %9.9  = IsType                   %9.8 isA lgl$-
  cp              %9.10 = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB7   <- [6]
  void                    Invisible          v     
  goto BB8
BB11   <- [9]
  void                    Assume             D     %9.9, %9.10 (Typecheck@0x561663ac9808[Type#7])
  lgl$-           %11.1 = CastType           d     dn %9.8
  lgl$#-          %11.2 = CheckTrueFalse     e     %11.1
  void                    Branch                   %11.2 -> BB49 (if true) | BB12 (if false)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x56166344fa70+192: [%9.8], env=e2.3
  void                    Deopt              !v    %10.0
BB8   <- [7, 39]
  val?            %8.0  = Phi                      nil:BB7, %39.0:BB39
  void                    Return             l     %8.0
BB49   <- [11]
  (cls|spec|blt)  %49.0 = LdFun              !v    $, <env 0x56166328f230>
  fs              %49.1 = FrameState         R     0x56166344fa70+853: [%49.0], env=e2.3
  void                    Deopt              !v    %49.1, DeadCall@0x561663ac9808[Call#18], %49.0
BB12   <- [11]
  val?^ | miss    %12.0 = LdVar              eR    isDDSym, <env 0x56166328f230>
  lgl$#-          %12.1 = Identical                %12.0, function(name) <(rir::DispatchTable*)0x5616634|...
  void                    Assume             D     %12.1, %9.10 (CallTarget@0x561663ac9808[Call#2])
  prom-           %12.3 = MkArg                    unboundValue, [0x5616642fd1a0]_p1 (!refl), e2.3
  ct              %12.4 = PushContext        lCL   %12.3, isDDSym(v), function(name) <(rir::DispatchTable*)0x5616634|..., e2.3
  val?^           %12.5 = CastType                 up %12.3
  val?^ | miss    %12.6 = LdVar              eR    is.symbol, <env 0x56166328f230>
  lgl$#-          %12.7 = Identical                <blt is.symbol>, %12.6   <true>
  cp              %12.8 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB14   <- [12]
  void                    Assume             D     %12.7, %12.8 (DeadBranchReached@0x561660ce8228[Test#0])
  env             e14.1 = MkEnv              l     name=%12.5, parent=<env 0x56166328f230>, context 1
  val?            %14.2 = Force!<lazy>       !vrL  %12.5, e14.1   <(sym|str)->
  lgl$#-          %14.3 = CallSafeBuiltin    wed   is.symbol(%14.2)    <lgl$->
  cp              %14.4 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x56166344fa70+235: [], env=e2.3
  env             e13.1 = (MkEnv)            l     name=%12.5, parent=<env 0x56166328f230>, context 1
  fs              %13.2 = FrameState         R     0x561663881f50+17: [<blt is.symbol>, %12.7], env=e13.1, next=%13.0
  void                    Deopt              !v    %13.2   !
BB16   <- [14]
  void                    Branch                   %14.3 -> BB48 (if true) | BB17 (if false)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x56166344fa70+235: [], env=e2.3
  fs              %15.1 = FrameState         R     0x561663881f50+91: [%14.3], env=e14.1, next=%15.0
  void                    Deopt              !v    %15.1   !
BB48   <- [16]
  goto BB18
BB17   <- [16]
  val?^ | miss    %17.0 = LdVar              eR    is.character, <env 0x56166328f230>
  lgl$#-          %17.1 = Identical                <blt is.character>, %17.0   <true>
  void                    Assume             D     %17.1, %14.4 (DeadBranchReached@0x561660ce8228[Test#1])
  lgl$#-          %17.3 = CallSafeBuiltin    wed   is.character(%14.2)    <lgl$->
  lgl$-           %17.4 = LOr                      %14.3, %17.3
  goto BB18
BB18   <- [48, 17]
  lgl$-           %18.0 = Phi                      %17.4:BB17, %14.3:BB48
  lgl$-           %18.1 = AsLogical                %18.0
  lgl$#-          %18.2 = Identical                %18.1, false
  cp              %18.3 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB20   <- [18]
  void                    Visible            v     
  void                    Branch                   %18.2 -> BB47 (if true) | BB21 (if false)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x56166344fa70+235: [], env=e2.3
  fs              %19.1 = FrameState         R     0x561663881f50+201: [%18.0], env=e14.1, next=%19.0
  void                    Deopt              !v    %19.1   !
BB47   <- [20]
  goto BB26
BB21   <- [20]
  val?^ | miss    %21.0 = LdVar              eR    length, <env 0x56166328f230>
  lgl$#-          %21.1 = Identical                <blt length>, %21.0   <true>
  void                    Assume             D     %21.1, %18.3 (DeadBranchReached@0x561660ce8228[Test#2])
  val?^ | miss    %21.3 = LdVar              eR    grep, <env 0x56166328f230>
  lgl$#-          %21.4 = Identical                %21.3, function(pattern, x, ignore.case=FALSE, perl=F|...
  void                    Assume             D     %21.4, %18.3 (CallTarget@0x561660ce8228[Call#5])
  prom-           %21.6 = MkArg                    unboundValue, [0x5616642fd1a0]_p18, e14.1
  val?            %21.7 = StaticCall         !v    grep[0x561661c1f1f0]("^\.\.[[:digit:]]+$", %21.6) e14.1   <int->
  lgl$#-          %21.8 = IsType                   %21.7 isA int-
  cp              %21.9 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB26   <- [47, 25]
  lgl$-           %26.0 = Phi                      %25.5:BB25, %18.1:BB47
  val?            %26.1 = PopContext         C     %26.0, %12.4   <lgl$->
  lgl$#-          %26.2 = IsType                   %26.1 isA lgl$-
  cp              %26.3 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB23   <- [21]
  void                    Assume             D     %21.8, %21.9 (Typecheck@0x561660ce8228[Type#11])
  int-            %23.1 = CastType           d     dn %21.7
  (int|real)$-    %23.2 = CallSafeBuiltin    wed   length(%23.1)    <int$->
  lgl$#-          %23.3 = IsType                   %23.2 isA int$-
  cp              %23.4 = Checkpoint                -> BB25 (default) | BB24 (if assume failed)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x56166344fa70+235: [], env=e2.3
  fs              %22.1 = FrameState         R     0x561663881f50+306: [%18.1, <blt length>, %21.7], env=e14.1, next=%22.0
  void                    Deopt              !v    %22.1   !
BB28   <- [26]
  void                    Assume             D     %26.2, %26.3 (Typecheck@0x561663ac9808[Type#9])
  lgl$-           %28.1 = CastType           d     dn %26.1
  lgl$#-          %28.2 = CheckTrueFalse     e     %28.1
  void                    Branch                   %28.2 -> BB46 (if true) | BB29 (if false)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x56166344fa70+235: [%26.1], env=e2.3
  void                    Deopt              !v    %27.0   !
BB25   <- [23]
  void                    Assume             D     %23.3, %23.4 (Typecheck@0x561660ce8228[Type#12])
  int$-           %25.1 = CastType           d     dn %23.2
  void                    Visible            v     
  lgl$-           %25.3 = Neq                vd    %25.1, 0, elided   <lgl$->
  lgl$-           %25.4 = AsLogical                %25.3
  lgl$-           %25.5 = LAnd                     %18.1, %25.4
  goto BB26
BB24   <- [23]
  fs              %24.0 = FrameState         R     0x56166344fa70+235: [], env=e2.3
  fs              %24.1 = FrameState         R     0x561663881f50+328: [%18.1, %23.2], env=e14.1, next=%24.0
  void                    Deopt              !v    %24.1   !
BB46   <- [28]
  (cls|spec|blt)  %46.0 = LdFun              !v    $, e2.3
  fs              %46.1 = FrameState         R     0x56166344fa70+587: [%46.0], env=e2.3
  void                    Deopt              !v    %46.1, DeadCall@0x561663ac9808[Call#11], %46.0   !
BB29   <- [28]
  (cls|spec|blt)  %29.0 = LdFun              !     $, <0x561660cbcc10>, e2.3
  prom-           %29.1 = MkArg                    unboundValue, [0x5616642fd1a0]_p2, e2.3
  prom-           %29.2 = MkArg                    unboundValue, [0x5616642fd1a0]_p3, e2.3
  val?            %29.3 = Call               !     %29.0(%29.1, %29.2) e2.3   <cls->
  cp              %29.4 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB31   <- [29]
  (cls|spec|blt)  %31.0 = ChkFunction        e     %29.3
  prom-           %31.1 = MkArg                    unboundValue, [0x5616642fd1a0]_p4, e2.3
  prom-           %31.2 = MkArg                    unboundValue, [0x5616642fd1a0]_p5, e2.3
  lgl$#-          %31.3 = Identical                %31.0, function(v, w) <(rir::DispatchTable*)0x5616636|...
  void                    Assume             D     %31.3, %29.4 (CallTarget@0x561663ac9808[Call#4])
  val?            %31.5 = StaticCall         !     [0x561660cb0480](%31.1, %31.2) e2.3   <lgl$->
  lgl$#-          %31.6 = IsType                   %31.5 isA lgl$-
  cp              %31.7 = Checkpoint                -> BB33 (default) | BB32 (if assume failed)
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x56166344fa70+283: [%29.3], env=e2.3
  void                    Deopt              !v    %30.0   !
BB33   <- [31]
  void                    Assume             D     %31.6, %31.7 (Typecheck@0x561663ac9808[Type#15])
  lgl$-           %33.1 = CastType           d     dn %31.5
  lgl$#-          %33.2 = CheckTrueFalse     e     %33.1
  void                    Branch                   %33.2 -> BB43 (if true) | BB34 (if false)
BB32   <- [31]
  fs              %32.0 = FrameState         R     0x56166344fa70+321: [%31.5], env=e2.3
  void                    Deopt              !v    %32.0   !
BB43   <- [33]
  (cls|spec|blt)  %43.0 = LdFun              !     $, <0x561660cbcc10>, e2.3
  prom-           %43.1 = MkArg                    unboundValue, [0x5616642fd1a0]_p13, e2.3
  prom-           %43.2 = MkArg                    unboundValue, [0x5616642fd1a0]_p14, e2.3
  val?            %43.3 = Call               !     %43.0(%43.1, %43.2) e2.3   <cls->
  cp              %43.4 = Checkpoint                -> BB45 (default) | BB44 (if assume failed)
BB34   <- [33]
  val?^ | miss    %34.0 = LdVar              eR    %in%, e2.3
  lgl$#-          %34.1 = Identical                %34.0, function(x, table) <(rir::DispatchTable*)0x561|...
  void                    Assume             D     %34.1, %31.7 (CallTarget@0x561663ac9808[Call#5])
  prom-           %34.3 = MkArg                    unboundValue, [0x5616642fd1a0]_p7, e2.3
  val?^ | miss    %34.4 = LdVar              eR    vn, e2.3
  void                    Visible            v     
  val?            %34.6 = Force!<value>      !     %34.4, e2.3   <str$->
  prom-           %34.7 = MkArg                    %34.6, [0x5616642fd1a0]_p6 (!refl), 
  val?            %34.8 = StaticCall         !     %in%[0x561664db3130](%34.7, %34.3) e2.3   <lgl$->
  lgl$#-          %34.9 = IsType                   %34.8 isA lgl$-
  cp              %34.10 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB45   <- [43]
  (cls|spec|blt)  %45.0 = ChkFunction        e     %43.3
  prom-           %45.1 = MkArg                    unboundValue, [0x5616642fd1a0]_p15, e2.3
  prom-           %45.2 = MkArg                    unboundValue, [0x5616642fd1a0]_p16, e2.3
  prom-           %45.3 = MkArg                    unboundValue, [0x5616642fd1a0]_p17, e2.3
  lgl$#-          %45.4 = Identical                %45.0, function(type, n, e, w) <(rir::DispatchTable*)|...
  void                    Assume             D     %45.4, %43.4 (CallTarget@0x561663ac9808[Call#10])
  val?            %45.6 = StaticCall         !     [0x561664a7d720]("variable", %45.1, %45.2, %45.3) e2.3   <vec>
  goto BB39
BB44   <- [43]
  fs              %44.0 = FrameState         R     0x56166344fa70+524: [%43.3], env=e2.3
  void                    Deopt              !v    %44.0   !
BB36   <- [34]
  void                    Assume             D     %34.9, %34.10 (Typecheck@0x561663ac9808[Type#18])
  lgl$-           %36.1 = CastType           d     dn %34.8
  lgl$-           %36.2 = Not                vd    %36.1, elided
  lgl$#-          %36.3 = CheckTrueFalse     e     %36.2
  void                    Branch                   %36.3 -> BB40 (if true) | BB37 (if false)
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x56166344fa70+369: [%34.8], env=e2.3
  void                    Deopt              !v    %35.0   !
BB39   <- [45, 38]
  val?            %39.0 = Phi                      %38.0:BB38, %45.6:BB45
  goto BB8
BB40   <- [36]
  (cls|spec|blt)  %40.0 = LdFun              !     $, <0x561660cbcc10>, e2.3
  prom-           %40.1 = MkArg                    unboundValue, [0x5616642fd1a0]_p8, e2.3
  prom-           %40.2 = MkArg                    unboundValue, [0x5616642fd1a0]_p9, e2.3
  val?            %40.3 = Call               !     %40.0(%40.1, %40.2) e2.3   <cls->
  cp              %40.4 = Checkpoint                -> BB42 (default) | BB41 (if assume failed)
BB37   <- [36]
  void                    Invisible          v     
  goto BB38
BB42   <- [40]
  (cls|spec|blt)  %42.0 = ChkFunction        e     %40.3
  prom-           %42.1 = MkArg                    unboundValue, [0x5616642fd1a0]_p10, e2.3
  prom-           %42.2 = MkArg                    unboundValue, [0x5616642fd1a0]_p11, e2.3
  prom-           %42.3 = MkArg                    unboundValue, [0x5616642fd1a0]_p12, e2.3
  lgl$#-          %42.4 = Identical                %42.0, function(type, n, e, w) <(rir::DispatchTable*)|...
  void                    Assume             D     %42.4, %40.4 (CallTarget@0x561663ac9808[Call#8])
  val?            %42.6 = StaticCall         !     [0x5616640f0f40]("variable", %42.1, %42.2, %42.3) e2.3   <nil->
  goto BB38
BB41   <- [40]
  fs              %41.0 = FrameState         R     0x56166344fa70+429: [%40.3], env=e2.3
  void                    Deopt              !v    %41.0   !
BB38   <- [37, 42]
  val?            %38.0 = Phi                      nil:BB37, %42.6:BB42
  goto BB39
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <sym->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isLocal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     c, <0x561660cbd940>, e1.0
  val?            %1.2  = Call               !     %1.1("*tmp*", "*tmpv*") e1.0   <str->
  void                    Return             l     %1.2
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    enterGlobal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    enterLocal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    v, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x561660cca040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x5616642fd1a0]_p19, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <(sym|str)->
  void                    Return             l     %1.3

│ [0x5616642fd1a0]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
