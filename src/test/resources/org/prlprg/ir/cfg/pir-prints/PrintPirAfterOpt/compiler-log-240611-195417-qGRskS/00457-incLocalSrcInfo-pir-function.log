
┌──────────────────────────────────────────────────────────────────────────────┐
│ incLocalSrcInfo[0x5616645b53a0]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
incLocalSrcInfo[0x5616645b53a0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  cp              %1.2  = Checkpoint                -> BB2 (default) | BB42 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    getLocalUsageEntry, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(vn, w) <(rir::DispatchTable*)0x561663|...
  void                    Assume             D     %2.1, %1.2 (CallTarget@0x5616634f54a8[Call#0])
  env             e2.3  = MkEnv              l     vn=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  prom-           %2.4  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p0, e2.3
  prom-           %2.5  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p1, e2.3
  ct              %2.6  = PushContext        lCL   %2.4, %2.5, getLocalUsageEntry(vn, w), function(vn, w) <(rir::DispatchTable*)0x561663|..., e2.3
  val?^           %2.7  = CastType                 up %2.5
  val?^           %2.8  = CastType                 up %2.4
  cp              %2.9  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB42   <- [1]
  env             e42.0 = (MkEnv)            l     vn=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %42.1 = FrameState         R     0x561663462710+0: [], env=e42.0
  void                    Deopt              !v    %42.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    findOwnerEnv, <env 0x56166328f230>
  lgl$#-          %4.1  = Identical                %4.0, function(v, env, stop=NA, default=NA) <(rir::D|...
  void                    Assume             D     %4.1, %2.9 (CallTarget@0x5616634f56b8[Call#0])
  env             e4.3  = MkEnv              l     vn=%2.8, w=%2.7, parent=<env 0x56166328f230>, context 1
  prom-           %4.4  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p14, e4.3
  prom-           %4.5  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p15, e4.3
  prom-           %4.6  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p18, e4.3
  prom-           %4.7  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p21, e4.3
  val?            %4.8  = StaticCall         !v    findOwnerEnv[0x5616635ff2d0](%4.4, %4.5, %4.6, %4.7) { 0 1 2n 3n } e4.3   <env+>
  void                    StVar              lW    env, %4.8, e4.3
  cp              %4.10 = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x561663462710+37: [], env=e2.3
  env             e3.1  = (MkEnv)            l     vn=%2.8, w=%2.7, parent=<env 0x56166328f230>, context 1
  fs              %3.2  = FrameState         R     0x56166392add0+0: [], env=e3.1, next=%3.0
  void                    Deopt              !v    %3.2   !
BB6   <- [4]
  val?^ | miss    %6.0  = LdVar              eR    is.baseenv, e4.3
  lgl$#-          %6.1  = Identical                %6.0, function(e) <(rir::DispatchTable*)0x5616634b8b|...
  void                    Assume             D     %6.1, %4.10 (CallTarget@0x5616634f56b8[Call#3])
  prom-           %6.3  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p22 (!refl), e4.3
  ct              %6.4  = PushContext        lCL   %6.3, is.baseenv(env), function(e) <(rir::DispatchTable*)0x5616634b8b|..., e4.3
  val?^           %6.5  = CastType                 up %6.3
  cp              %6.6  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x561663462710+37: [], env=e2.3
  fs              %5.1  = FrameState         R     0x56166392add0+77: [], env=e4.3, next=%5.0
  void                    Deopt              !v    %5.1   !
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    identical, <env 0x56166328f230>
  lgl$#-          %8.1  = Identical                %8.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %8.1, %6.6 (CallTarget@0x5616610c8e08[Call#0])
  env             e8.3  = MkEnv              l     e=%6.5, parent=<env 0x56166328f230>, context 1
  prom-           %8.4  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p31, e8.3
  prom-           %8.5  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p32, e8.3
  ct              %8.6  = PushContext        lCL   %8.4, %8.5, identical(e, .BaseEnv), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e8.3
  val?^           %8.7  = CastType                 up %8.5
  val?^           %8.8  = CastType                 up %8.4
  env             e8.9  = MkEnv              l     x=%8.8, y=%8.7, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %8.10 = Force!<lazy>       !vL   %8.8, e8.9   <val?+>
  val?            %8.11 = Force!<lazy>       !vL   %8.7, e8.9   <val?+>
  val?            %8.12 = CallBuiltin        !v    identical(%8.10, %8.11, true, true, true, true, false, true) e8.9
  val?            %8.13 = PopContext         C     %8.12, %8.6   <lgl$->
  lgl$#-          %8.14 = IsType                   %8.13 isA lgl$-
  cp              %8.15 = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x561663462710+37: [], env=e2.3
  fs              %7.1  = FrameState         R     0x56166392add0+109: [], env=e4.3, next=%7.0
  env             e7.2  = (MkEnv)            l     e=%6.5, parent=<env 0x56166328f230>, context 1
  fs              %7.3  = FrameState         R     0x5616632d0110+0: [], env=e7.2, next=%7.1
  void                    Deopt              !v    %7.3   !
BB10   <- [8]
  void                    Assume             D     %8.14, %8.15 (Typecheck@0x5616610c8e08[Type#2])
  lgl$-           %10.1 = CastType           d     dn %8.13
  val?            %10.2 = PopContext         C     %10.1, %6.4   <lgl$->
  lgl$#-          %10.3 = IsType                   %10.2 isA lgl$-
  cp              %10.4 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x561663462710+37: [], env=e2.3
  fs              %9.1  = FrameState         R     0x56166392add0+109: [], env=e4.3, next=%9.0
  fs              %9.2  = FrameState         R     0x5616632d0110+37: [%8.13], env=e8.3, next=%9.1
  void                    Deopt              !v    %9.2   !
BB12   <- [10]
  void                    Assume             D     %10.3, %10.4 (Typecheck@0x5616634f56b8[Type#10])
  lgl$-           %12.1 = CastType           d     dn %10.2
  lgl$#-          %12.2 = CheckTrueFalse     e     %12.1
  void                    Branch                   %12.2 -> BB41 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x561663462710+37: [], env=e2.3
  fs              %11.1 = FrameState         R     0x56166392add0+109: [%10.2], env=e4.3, next=%11.0
  void                    Deopt              !v    %11.1   !
BB41   <- [12]
  fs              %41.0 = FrameState         R     0x561663462710+37: [], env=e2.3
  (cls|spec|blt)  %41.1 = LdFun              !v    stop, e4.3
  fs              %41.2 = FrameState         R     0x56166392add0+130: [%41.1], env=e4.3, next=%41.0
  void                    Deopt              !v    %41.2, DeadCall@0x5616634f56b8[Call#4], %41.1   !
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    identical, e4.3
  lgl$#-          %13.1 = Identical                %13.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %13.1, %10.4 (CallTarget@0x5616634f56b8[Call#5])
  prom-           %13.3 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p23, e4.3
  prom-           %13.4 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p24, e4.3
  ct              %13.5 = PushContext        lCL   %13.3, %13.4, identical(env, attr(env, "checkUsageFrame")), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e4.3
  val?^           %13.6 = CastType                 up %13.4
  val?^           %13.7 = CastType                 up %13.3
  env             e13.8 = MkEnv              l     x=%13.7, y=%13.6, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %13.9 = Force!<lazy>       !vL   %13.7, e13.8   <val?+>
  val?            %13.10 = Force!<lazy>       !vL   %13.6, e13.8   <val?+>
  val?            %13.11 = CallBuiltin        !v    identical(%13.9, %13.10, true, true, true, true, false, true) e13.8
  val?            %13.12 = PopContext         C     %13.11, %13.5   <lgl$->
  lgl$#-          %13.13 = IsType                   %13.12 isA lgl$-
  cp              %13.14 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB15   <- [13]
  void                    Assume             D     %13.13, %13.14 (Typecheck@0x5616634f56b8[Type#14])
  lgl$-           %15.1 = CastType           d     dn %13.12
  lgl$-           %15.2 = Not                d     %15.1, elided
  lgl$#-          %15.3 = CheckTrueFalse     e     %15.2
  void                    Branch                   %15.3 -> BB40 (if true) | BB16 (if false)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x561663462710+37: [], env=e2.3
  fs              %14.1 = FrameState         R     0x56166392add0+195: [%13.12], env=e4.3, next=%14.0
  void                    Deopt              !v    %14.1   !
BB40   <- [15]
  fs              %40.0 = FrameState         R     0x561663462710+37: [], env=e2.3
  (cls|spec|blt)  %40.1 = LdFun              !v    stop, e4.3
  fs              %40.2 = FrameState         R     0x56166392add0+217: [%40.1], env=e4.3, next=%40.0
  void                    Deopt              !v    %40.2, DeadCall@0x5616634f56b8[Call#7], %40.1   !
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    get, e4.3
  lgl$#-          %16.1 = Identical                %16.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %16.1, %13.14 (CallTarget@0x5616634f56b8[Call#8])
  prom-           %16.3 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p26, e4.3
  prom-           %16.4 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p27, e4.3
  val?            %16.5 = StaticCall         !v    get[0x561661815900](%16.3, missingArg, %16.4, missingArg, false) { 0 2n 4n } e4.3   <env->
  void                    StVar              lW    entry, %16.5, e4.3
  cp              %16.7 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    is.environment, e4.3
  lgl$#-          %18.1 = Identical                <blt is.environment>, %18.0   <true>
  void                    Assume             D     %18.1, %16.7 (DeadBranchReached@0x5616634f56b8[Test#0])
  val             %18.3 = ChkMissing         e     %16.5
  lgl$#-          %18.4 = CallSafeBuiltin    wed   is.environment(%16.5) 
  void                    Branch                   %18.4 -> BB20 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x561663462710+37: [], env=e2.3
  fs              %17.1 = FrameState         R     0x56166392add0+313: [], env=e4.3, next=%17.0
  void                    Deopt              !v    %17.1   !
BB20   <- [18]
  val?            %20.0 = PopContext         C     %16.5, %2.6   <env->
  void                    StVar              lW    entry, %20.0, e2.3
  cp              %20.2 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x561663462710+37: [], env=e2.3
  (cls|spec|blt)  %19.1 = LdFun              !v    stop, e4.3
  fs              %19.2 = FrameState         R     0x56166392add0+426: [%19.1], env=e4.3, next=%19.0
  void                    Deopt              !v    %19.2, DeadCall@0x5616634f56b8[Call#10], %19.1   !
BB22   <- [20]
  val?^ | miss    %22.0 = LdVar              eR    get, e2.3
  lgl$#-          %22.1 = Identical                %22.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %22.1, %20.2 (CallTarget@0x5616634f54a8[Call#1])
  prom-           %22.3 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p2 (!refl), e2.3
  val?            %22.4 = StaticCall         !v    get[0x5616645f5b80]("srcinfo", %22.3, missingArg, missingArg, false) { 0 1 4n } e2.3   <(nil|vec)>
  void                    StVar              lW    value, %22.4, e2.3
  cp              %22.6 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x561663462710+51: [], env=e2.3
  void                    Deopt              !v    %21.0   !
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    list, e2.3
  lgl$#-          %24.1 = Identical                <blt list>, %24.0   <true>
  void                    Assume             D     %24.1, %22.6 (DeadBranchReached@0x5616634f54a8[Test#0])
  (cls|spec|blt)  %24.3 = LdFun              !v    $, <0x561660cbcc10>, e2.3
  prom-           %24.4 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p3, e2.3
  prom-           %24.5 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p4, e2.3
  val?            %24.6 = Call               !v    %24.3(%24.4, %24.5) e2.3   <nil->
  lgl$-           %24.7 = Is                       %24.6, NULL
  lgl$#-          %24.8 = CheckTrueFalse     e     %24.7
  void                    Branch                   %24.8 -> BB26 (if true) | BB25 (if false)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x561663462710+119: [], env=e2.3
  void                    Deopt              !v    %23.0   !
BB26   <- [24]
  (cls|spec|blt)  %26.0 = LdFun              !v    $, <0x561660cbcc10>, e2.3
  prom-           %26.1 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p5, e2.3
  prom-           %26.2 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p6, e2.3
  val?            %26.3 = Call               !v    %26.0(%26.1, %26.2) e2.3   <nil->
  lgl$-           %26.4 = Is                       %26.3, NULL
  lgl$#-          %26.5 = CheckTrueFalse     e     %26.4
  void                    Branch                   %26.5 -> BB28 (if true) | BB27 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    $, e2.3
  fs              %25.1 = FrameState         R     0x561663462710+259: [<blt list>, %25.0], env=e2.3
  void                    Deopt              !v    %25.1, DeadCall@0x5616634f54a8[Call#10], %25.0   !
BB28   <- [26]
  (cls|spec|blt)  %28.0 = LdFun              !v    $, <0x561660cbcc10>, e2.3
  prom-           %28.1 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p7, e2.3
  prom-           %28.2 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p8, e2.3
  val?            %28.3 = Call               !v    %28.0(%28.1, %28.2) e2.3   <nil->
  lgl$-           %28.4 = Is                       %28.3, NULL
  lgl$#-          %28.5 = CheckTrueFalse     e     %28.4
  void                    Branch                   %28.5 -> BB30 (if true) | BB29 (if false)
BB27   <- [26]
  (cls|spec|blt)  %27.0 = LdFun              !v    $, e2.3
  fs              %27.1 = FrameState         R     0x561663462710+365: [<blt list>, NA, %27.0], env=e2.3
  void                    Deopt              !v    %27.1, DeadCall@0x5616634f54a8[Call#12], %27.0   !
BB30   <- [28]
  val?            %30.0 = NamedCall          !v    <blt list>(srcfile=NA, frow=NA, lrow=NA) e2.3   <vec+>
  void                    StVar              lW    new, %30.0, e2.3
  cp              %30.2 = Checkpoint                -> BB32 (default) | BB31 (if assume failed)
BB29   <- [28]
  (cls|spec|blt)  %29.0 = LdFun              !v    $, e2.3
  fs              %29.1 = FrameState         R     0x561663462710+471: [<blt list>, NA, NA, %29.0], env=e2.3
  void                    Deopt              !v    %29.1, DeadCall@0x5616634f54a8[Call#14], %29.0   !
BB32   <- [30]
  val?^ | miss    %32.0 = LdVar              eR    as.data.frame, e2.3
  lgl$#-          %32.1 = Identical                %32.0, function(x, row.names=NULL, optional=FALSE, ..|...
  void                    Assume             D     %32.1, %30.2 (CallTarget@0x5616634f54a8[Call#15])
  prom-           %32.3 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p9 (!refl), e2.3
  dots-           %32.4 = DotsList           l     stringsAsFactors=false
  val?            %32.5 = StaticCall         !v    as.data.frame[0x56166101c9d0](%32.3, missingArg, missingArg, %32.4) { 0 3n } e2.3   <vec>
  void                    StVar              lW    new, %32.5, e2.3
  val?^ | miss    %32.7 = LdVar              eR    value, e2.3
  val?            %32.8 = Force!<value>      !v    %32.7, e2.3   <(nil|vec)>
  lgl$-           %32.9 = Is                       %32.8, NULL
  cp              %32.10 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB31   <- [30]
  fs              %31.0 = FrameState         R     0x561663462710+562: [], env=e2.3
  void                    Deopt              !v    %31.0   !
BB34   <- [32]
  lgl$#-          %34.0 = CheckTrueFalse     e     %32.9
  void                    Branch                   %34.0 -> BB39 (if true) | BB35 (if false)
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x561663462710+630: [%32.8], env=e2.3
  void                    Deopt              !v    %33.0   !
BB39   <- [34]
  val?^ | miss    %39.0 = LdVar              eR    new, e2.3
  void                    Visible            v     
  val?            %39.2 = Force!<value>      !     %39.0, e2.3   <vec>
  void                    StVar              lW    value, %39.2, e2.3
  goto BB36
BB35   <- [34]
  val?^ | miss    %35.0 = LdVar              eR    rbind, e2.3
  lgl$#-          %35.1 = Identical                %35.0, function(..., deparse.level=1) <(rir::Dispatch|...
  void                    Assume             D     %35.1, %32.10 (CallTarget@0x5616634f54a8[Call#16])
  prom-           %35.3 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p10, e2.3
  prom-           %35.4 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p11, e2.3
  dots-           %35.5 = DotsList           l     %35.3, %35.4
  ct              %35.6 = PushContext        lCL   %35.5, rbind(value, new), function(..., deparse.level=1) <(rir::Dispatch|..., e2.3
  void                    Visible            v     
  env             e35.8 = MkEnv              l     ...=%35.5, deparse.level(miss)=1, parent=R_BaseNamespace, context 1
  prom-           %35.9 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p29, e35.8
  val?            %35.10 = Call               !     <spec .Internal>(%35.9) e35.8   <vec>
  val?            %35.11 = PopContext         C     %35.10, %35.6   <vec>
  void                    StVar              lW    value, %35.11, e2.3
  goto BB36
BB36   <- [39, 35]
  cp              %36.0 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB38   <- [36]
  val?^ | miss    %38.0 = LdVar              eR    assign, e2.3
  lgl$#-          %38.1 = Identical                %38.0, function(x, value, pos=-(1), envir=as.environm|...
  void                    Assume             D     %38.1, %36.0 (CallTarget@0x5616634f54a8[Call#17])
  prom-           %38.3 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p12, e2.3
  prom-           %38.4 = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p13, e2.3
  val?            %38.5 = StaticCall         !     assign[0x5616638dc1c0]("srcinfo", %38.3, %38.4) e2.3   <vec>
  void                    Return             l     %38.5
BB37   <- [36]
  fs              %37.0 = FrameState         R     0x561663462710+725: [], env=e2.3
  void                    Deopt              !v    %37.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    entry, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    srcfile, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    frow, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    lrow, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    new, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    new, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    entry, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x561660cbcc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p16, e1.0
  prom-           %1.3  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p17, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env+>
  void                    Return             l     %1.4
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, <0x561660cbcc10>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p19, e1.0
  prom-           %1.3  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p20, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <env->
  void                    Return             l     %1.4
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    globalenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 21:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .BaseEnv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 22:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env+>
  void                    Return             l     %1.3
Prom 23:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env+>
  void                    Return             l     %1.3
Prom 24:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     attr, <0x561660cbd080>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p25, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2, "checkUsageFrame") e1.0   <env+>
  void                    Return             l     %1.3
Prom 25:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env+>
  void                    Return             l     %1.3
Prom 26:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    vn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 27:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <env+>
  void                    Return             l     %1.3
Prom 29:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     rbind, e1.0
  prom-           %1.2  = MkArg                    unboundValue, incLocalSrcInfo[0x5616645b53a0]_p30, e1.0
  (miss|dots)     %1.3  = LdDots             R     , e1.0
  *dots-          %1.4  = ExpandDots               %1.3
  val?            %1.5  = NamedCall          !     %1.1(%1.2, .xpandDotsTrigger=%1.4) e1.0   <val?_>
  void                    Return             l     %1.5
Prom 30:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    deparse.level, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 31:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(lgl|env)+>
  void                    Return             l     %1.3
Prom 32:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .BaseEnv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ incLocalSrcInfo[0x5616645b53a0]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
