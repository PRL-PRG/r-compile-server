
┌──────────────────────────────────────────────────────────────────────────────┐
│ makeAssgnFcn[0x561664289300]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
makeAssgnFcn[0x561664289300]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB11 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    typeof, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x56166231b768[Call#0])
  env             e2.3  = MkEnv              l     fun=%1.0, parent=<env 0x56166328f230>, context 1
  val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <sym->
  prom-           %2.5  = MkArg                    %2.4, makeAssgnFcn[0x561664289300]_p0 (!refl), 
  val?            %2.6  = StaticCall         !v    typeof[0x561663fc0d10](%2.5) e2.3   <str$->
  lgl$#-          %2.7  = IsType                   %2.6 isA val?-
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB11   <- [1]
  env             e11.0 = (MkEnv)            l     fun=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %11.1 = FrameState         R     0x5616642de6e0+0: [], env=e11.0
  void                    Deopt              !v    %11.1
BB4   <- [2]
  void                    Assume             D     %2.7, %2.8 (Typecheck@0x56166231b768[Type#1])
  val?-           %4.1  = CastType           d     dn %2.6   <str$->
  lgl-            %4.2  = Eq                 wed   %4.1, "symbol", elided   <lgl$->
  lgl$#-          %4.3  = IsType                   %4.2 isA lgl$-
  cp              %4.4  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5616642de6e0+32: [%2.6], env=e2.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.3, %4.4 (Typecheck@0x56166231b768[Type#2])
  lgl$-           %6.1  = CastType           d     dn %4.2
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB8 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5616642de6e0+44: [%4.2], env=e2.3
  void                    Deopt              !v    %5.0   !
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    as.name, e2.3
  lgl$#-          %8.1  = Identical                %8.0, function(x) <(rir::DispatchTable*)0x56166328f3|...
  void                    Assume             D     %8.1, %4.4 (CallTarget@0x56166231b768[Call#15])
  val?^ | miss    %8.3  = LdVar              eR    paste0, e2.3
  lgl$#-          %8.4  = Identical                %8.3, function(..., collapse=NULL, recycle0=FALSE) <|...
  void                    Assume             D     %8.4, %4.4 (CallTarget@0x56166231b768[Call#16])
  prom-           %8.6  = MkArg                    unboundValue, makeAssgnFcn[0x561664289300]_p2, e2.3
  dots-           %8.7  = DotsList           l     %8.6, "<-"
  ct              %8.8  = PushContext        lCL   %8.7, paste0(as.character(fun), "<-"), function(..., collapse=NULL, recycle0=FALSE) <|..., e2.3
  val?^ | miss    %8.9  = CastType                 up %8.6
  env             e8.10 = MkEnv              l     ...=%8.7, collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 1
  val?            %8.11 = Force!             !vL   %8.9, e8.10
  val+            %8.12 = CallSafeBuiltin    wed   list(%8.11, "<-")    <vec->
  val?            %8.13 = CallBuiltin        !v    paste0(%8.12, nil, false) e8.10
  val?            %8.14 = PopContext         C     %8.13, %8.8   <str$->
  lgl$#-          %8.15 = IsType                   %8.14 isA val?-
  cp              %8.16 = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  (cls|spec|blt)  %7.0  = LdFun              !v    getRversion, e2.3
  fs              %7.1  = FrameState         R     0x5616642de6e0+60: [%7.0], env=e2.3
  void                    Deopt              !v    %7.1, DeadCall@0x56166231b768[Call#1], %7.0   !
BB10   <- [8]
  void                    Assume             D     %8.15, %8.16 (Typecheck@0x561662078288[Type#0])
  val?-           %10.1 = CastType           d     dn %8.14   <str$->
  val             %10.2 = CallSafeBuiltin    vwed  as.vector(%10.1, "symbol")    <sym->
  void                    Return             l     %10.2
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x5616642de6e0+623: [], env=e2.3
  prom-           %9.1  = MkArg                    unboundValue, makeAssgnFcn[0x561664289300]_p1, e2.3
  val?^           %9.2  = CastType                 up %9.1
  env             e9.3  = (MkEnv)            l     x=%9.2, parent=R_BaseNamespace, context 0
  fs              %9.4  = FrameState         R     0x56166328f2a0+9: [], env=e9.3, next=%9.0
  fs              %9.5  = FrameState         R     0x5616636d35d0+37(pr): [%8.14], env=e2.3, next=%9.4
  void                    Deopt              !v    %9.5   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fun, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <sym->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     paste0, <0x561660e063c8>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, makeAssgnFcn[0x561664289300]_p2, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2, "<-") e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x561660cca040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, makeAssgnFcn[0x561664289300]_p3, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fun, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <sym->
  void                    Return             l     %1.3

│ makeAssgnFcn[0x561664289300]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
