
┌──────────────────────────────────────────────────────────────────────────────┐
│ evalseq[0x561663af72a0]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
evalseq[0x561663af72a0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB16 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    typeof, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x561662375008[Call#0])
  env             e2.3  = MkEnv              l     e=%1.0, parent=<env 0x56166328f230>, context 1
  val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <(sym|code)->
  prom-           %2.5  = MkArg                    %2.4, evalseq[0x561663af72a0]_p0 (!refl), 
  val?            %2.6  = StaticCall         !v    typeof[0x5616613d1a00](%2.5) e2.3   <str$->
  lgl$#-          %2.7  = IsType                   %2.6 isA val?-
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB16   <- [1]
  env             e16.0 = (MkEnv)            l     e=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %16.1 = FrameState         R     0x561663159d30+0: [], env=e16.0
  void                    Deopt              !v    %16.1
BB4   <- [2]
  void                    Assume             D     %2.7, %2.8 (Typecheck@0x561662375008[Type#1])
  val?-           %4.1  = CastType           d     dn %2.6   <str$->
  lgl-            %4.2  = Eq                 wed   %4.1, "language", elided   <lgl$->
  lgl$#-          %4.3  = IsType                   %4.2 isA lgl$-
  cp              %4.4  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x561663159d30+32: [%2.6], env=e2.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.3, %4.4 (Typecheck@0x561662375008[Type#2])
  lgl$-           %6.1  = CastType           d     dn %4.2
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB9 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x561663159d30+44: [%4.2], env=e2.3
  void                    Deopt              !v    %5.0   !
BB9   <- [6]
  val?^ | miss    %9.0  = LdVar              eR    evalseq, e2.3
  lgl$#-          %9.1  = Identical                %9.0, function(e) <(rir::DispatchTable*)0x5616621266|...
  void                    Assume             D     %9.1, %4.4 (CallTarget@0x561662375008[Call#2])
  prom-           %9.3  = MkArg                    unboundValue, evalseq[0x561663af72a0]_p1, e2.3
  val?            %9.4  = StaticCall         !v    evalseq[0x561663af72a0](%9.3) e2.3   <vec$->
  void                    StVar              lW    v, %9.4, e2.3
  cp              %9.6  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB7   <- [6]
  val?^ | miss    %7.0  = LdVar              eR    list, e2.3
  lgl$#-          %7.1  = Identical                <blt list>, %7.0   <true>
  void                    Assume             D     %7.1, %4.4 (DeadBranchReached@0x561662375008[Test#0])
  val?^ | miss    %7.3  = LdVar              eR    e, e2.3
  val?            %7.4  = Force!<wrapped>    !v    %7.3, e2.3   <sym->
  val+            %7.5  = CallSafeBuiltin    vwed  list(%7.4)    <vec$->
  goto BB8
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    as.name, e2.3
  lgl$#-          %11.1 = Identical                %11.0, function(x) <(rir::DispatchTable*)0x56166328f3|...
  void                    Assume             D     %11.1, %9.6 (CallTarget@0x561662375008[Call#3])
  val             %11.3 = CallSafeBuiltin    wed   as.vector("*tmp*", "symbol")    <sym->
  val?^ | miss    %11.4 = LdVar              eR    e !upd, e2.3
  val?            %11.5 = Force!<wrapped>    !v    %11.4, e2.3   <code->
  lgl$#-          %11.6 = IsType                   %11.5 isA val?-
  lgl$#-          %11.7 = IsType                   %11.3 isA val-
  cp              %11.8 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x561663159d30+202: [], env=e2.3
  void                    Deopt              !v    %10.0   !
BB8   <- [7, 15]
  val+            %8.0  = Phi                      %7.5:BB7, %15.13:BB15
  void                    Return             l     %8.0
BB13   <- [11]
  void                    Assume             D     %11.7, %11.8 (Typecheck@0x561662375008[Type#9])
  val-            %13.1 = CastType           d     dn %11.3   <sym->
  void                    Assume             D     %11.6, %11.8 (Typecheck@0x561662375008[Type#10])
  val?-           %13.3 = CastType           d     dn %11.5   <code->
  val?-           %13.4 = Subassign2_1D      wed   %13.1, %13.3, 2, elided   <code->
  void                    StVar              lW    e, %13.4, e2.3
  cp              %13.6 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x561663159d30+248: [%11.3, %11.5], env=e2.3
  void                    Deopt              !v    %12.0   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    c, e2.3
  lgl$#-          %15.1 = Identical                <blt c>, %15.0   <true>
  void                    Assume             D     %15.1, %13.6 (DeadBranchReached@0x561662375008[Test#2])
  val?^ | miss    %15.3 = LdVar              eR    v, e2.3
  lgl$#-          %15.4 = IsType                   %15.3 isA val?~- | miss
  void                    Assume             D     %15.4, %13.6 (Typecheck@0x561662375008[Type#14])
  val?~- | miss   %15.6 = CastType           d     dn %15.3
  val?-           %15.7 = Force!<value>            %15.6,    <vec$->
  val?^ | miss    %15.8 = LdVar              eR    list, e2.3
  lgl$#-          %15.9 = Identical                <blt list>, %15.8   <true>
  void                    Assume             D     %15.9, %13.6 (DeadBranchReached@0x561662375008[Test#3])
  val-            %15.11 = ChkMissing         e     %13.4
  val+            %15.12 = CallSafeBuiltin    wed   list(%13.4)    <vec$->
  val+            %15.13 = CallSafeBuiltin    vwed  c(%15.7, %15.12)    <vec->
  goto BB8
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x561663159d30+269: [], env=e2.3
  void                    Deopt              !v    %14.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(sym|code)->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <code->
  val?            %1.3  = Extract2_1D        !v    %1.2, 2, e1.0   <sym->
  void                    Visible            v     
  void                    Return             l     %1.3

│ evalseq[0x561663af72a0]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
