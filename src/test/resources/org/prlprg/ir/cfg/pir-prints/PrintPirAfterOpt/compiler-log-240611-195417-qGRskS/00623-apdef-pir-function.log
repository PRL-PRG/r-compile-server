
┌──────────────────────────────────────────────────────────────────────────────┐
│ apdef[0x561661704080]                                                        │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
apdef[0x561661704080]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB74 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    as.name, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(x) <(rir::DispatchTable*)0x56166328f3|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x56166233ea88[Call#0])
  val             %2.3  = CallSafeBuiltin    wed   as.vector("*tmp*", "symbol")    <sym->
  val             %2.4  = CallSafeBuiltin    wed   as.vector("*tmpv*", "symbol")    <sym->
  cp              %2.5  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB74   <- [1]
  env             e74.0 = (MkEnv)            l     e=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %74.1 = FrameState         R     0x561663698650+0: [], env=e74.0
  void                    Deopt              !v    %74.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    typeof, <env 0x56166328f230>
  lgl$#-          %4.1  = Identical                %4.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %4.1, %2.5 (CallTarget@0x56166233ea88[Call#2])
  env             e4.3  = MkEnv              l     e=%1.0, v=nil, tmp=%2.3, tmpv=%2.4, parent=<env 0x56166328f230>, context 1
  val?            %4.4  = Force!<lazy>       !v    %1.0, e4.3   <code->
  prom-           %4.5  = MkArg                    %4.4, apdef[0x561661704080]_p0 (!refl), 
  val?            %4.6  = StaticCall         !v    typeof[0x5616613d1a00](%4.5) e4.3   <str$->
  lgl$#-          %4.7  = IsType                   %4.6 isA val?-
  cp              %4.8  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  env             e3.0  = (MkEnv)            l     e=%1.0, v=nil, tmp=%2.3, parent=<env 0x56166328f230>, context 1
  fs              %3.1  = FrameState         R     0x561663698650+93: [], env=e3.0
  env             e3.2  = (MkEnv)            l     x="*tmpv*", parent=R_BaseNamespace, context 0
  fs              %3.3  = FrameState         R     0x56166328f2a0+33: [%2.4], env=e3.2, next=%3.1
  void                    Deopt              !v    %3.3
BB6   <- [4]
  void                    Assume             D     %4.7, %4.8 (Typecheck@0x56166233ea88[Type#3])
  val?-           %6.1  = CastType           d     dn %4.6   <str$->
  lgl-            %6.2  = Eq                 wed   %6.1, "language", elided   <lgl$->
  lgl$#-          %6.3  = IsType                   %6.2 isA lgl$-
  cp              %6.4  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x561663698650+139: [%4.6], env=e4.3
  void                    Deopt              !v    %5.0   !
BB8   <- [6]
  void                    Assume             D     %6.3, %6.4 (Typecheck@0x56166233ea88[Type#4])
  lgl$-           %8.1  = CastType           d     dn %6.2
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <true>
  void                    Assume             D     %8.2, %6.4 (DeadBranchReached@0x56166233ea88[Test#0])
  val?^ | miss    %8.4  = LdVar              eR    e, e4.3
  val?            %8.5  = Force!<wrapped>    !v    %8.4, e4.3   <code->
  void                    StVar              lW    ef, %8.5, e4.3
  cp              %8.7  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x561663698650+151: [%6.2], env=e4.3
  void                    Deopt              !v    %7.0   !
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    makeAssgnFcn, e4.3
  lgl$#-          %10.1 = Identical                %10.0, function(fun) <(rir::DispatchTable*)0x5616636d|...
  void                    Assume             D     %10.1, %8.7 (CallTarget@0x56166233ea88[Call#3])
  prom-           %10.3 = MkArg                    unboundValue, apdef[0x561661704080]_p1, e4.3
  ct              %10.4 = PushContext        lCL   %10.3, makeAssgnFcn([[(e, 1)), function(fun) <(rir::DispatchTable*)0x5616636d|..., e4.3
  val?^           %10.5 = CastType                 up %10.3
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x561663698650+190: [], env=e4.3
  void                    Deopt              !v    %9.0   !
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    typeof, <env 0x56166328f230>
  lgl$#-          %12.1 = Identical                %12.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %12.1, %10.6 (CallTarget@0x56166231b768[Call#0])
  env             e12.3 = MkEnv              l     fun=%10.5, parent=<env 0x56166328f230>, context 1
  val?            %12.4 = Force!<lazy>       !vL   %10.5, e12.3   <sym->
  prom-           %12.5 = MkArg                    %12.4, apdef[0x561661704080]_p14 (!refl), 
  val?            %12.6 = StaticCall         !v    typeof[0x5616613d1a00](%12.5) e12.3   <str$->
  lgl$#-          %12.7 = IsType                   %12.6 isA val?-
  cp              %12.8 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x561663698650+222: [], env=e4.3
  env             e11.1 = (MkEnv)            l     fun=%10.5, parent=<env 0x56166328f230>, context 1
  fs              %11.2 = FrameState         R     0x5616642de6e0+0: [], env=e11.1, next=%11.0
  void                    Deopt              !v    %11.2   !
BB14   <- [12]
  void                    Assume             D     %12.7, %12.8 (Typecheck@0x56166231b768[Type#1])
  val?-           %14.1 = CastType           d     dn %12.6   <str$->
  lgl-            %14.2 = Eq                 wed   %14.1, "symbol", elided   <lgl$->
  lgl$#-          %14.3 = IsType                   %14.2 isA lgl$-
  cp              %14.4 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x561663698650+222: [], env=e4.3
  fs              %13.1 = FrameState         R     0x5616642de6e0+32: [%12.6], env=e12.3, next=%13.0
  void                    Deopt              !v    %13.1   !
BB16   <- [14]
  void                    Assume             D     %14.3, %14.4 (Typecheck@0x56166231b768[Type#2])
  lgl$-           %16.1 = CastType           d     dn %14.2
  lgl$#-          %16.2 = CheckTrueFalse     e     %16.1
  void                    Branch                   %16.2 -> BB18 (if true) | BB17 (if false)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x561663698650+222: [], env=e4.3
  fs              %15.1 = FrameState         R     0x5616642de6e0+44: [%14.2], env=e12.3, next=%15.0
  void                    Deopt              !v    %15.1   !
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    as.name, e12.3
  lgl$#-          %18.1 = Identical                %18.0, function(x) <(rir::DispatchTable*)0x56166328f3|...
  void                    Assume             D     %18.1, %14.4 (CallTarget@0x56166231b768[Call#15])
  val?^ | miss    %18.3 = LdVar              eR    paste0, e12.3
  lgl$#-          %18.4 = Identical                %18.3, function(..., collapse=NULL, recycle0=FALSE) <|...
  void                    Assume             D     %18.4, %14.4 (CallTarget@0x56166231b768[Call#16])
  prom-           %18.6 = MkArg                    unboundValue, apdef[0x561661704080]_p16, e12.3
  dots-           %18.7 = DotsList           l     %18.6, "<-"
  ct              %18.8 = PushContext        lCL   %18.7, paste0(as.character(fun), "<-"), function(..., collapse=NULL, recycle0=FALSE) <|..., e12.3
  val?^ | miss    %18.9 = CastType                 up %18.6
  env             e18.10 = MkEnv              l     ...=%18.7, collapse(miss)=nil, recycle0(miss)=false, parent=R_BaseNamespace, context 1
  val?            %18.11 = Force!             !vL   %18.9, e18.10
  val+            %18.12 = CallSafeBuiltin    wed   list(%18.11, "<-")    <vec->
  val?            %18.13 = CallBuiltin        !v    paste0(%18.12, nil, false) e18.10
  val?            %18.14 = PopContext         C     %18.13, %18.8   <str$->
  lgl$#-          %18.15 = IsType                   %18.14 isA val?-
  cp              %18.16 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x561663698650+222: [], env=e4.3
  (cls|spec|blt)  %17.1 = LdFun              !v    getRversion, e12.3
  fs              %17.2 = FrameState         R     0x5616642de6e0+60: [%17.1], env=e12.3, next=%17.0
  void                    Deopt              !v    %17.2, DeadCall@0x56166231b768[Call#1], %17.1   !
BB20   <- [18]
  void                    Assume             D     %18.15, %18.16 (Typecheck@0x561662078288[Type#0])
  val?-           %20.1 = CastType           d     dn %18.14   <str$->
  val             %20.2 = CallSafeBuiltin    wed   as.vector(%20.1, "symbol")    <sym->
  val?            %20.3 = PopContext         C     %20.2, %10.4   <sym->
  lgl$#-          %20.4 = IsType                   %20.3 isA val?-
  cp              %20.5 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x561663698650+222: [], env=e4.3
  fs              %19.1 = FrameState         R     0x5616642de6e0+623: [], env=e12.3, next=%19.0
  prom-           %19.2 = MkArg                    unboundValue, apdef[0x561661704080]_p15, e12.3
  val?^           %19.3 = CastType                 up %19.2
  env             e19.4 = (MkEnv)            l     x=%19.3, parent=R_BaseNamespace, context 0
  fs              %19.5 = FrameState         R     0x56166328f2a0+9: [], env=e19.4, next=%19.1
  fs              %19.6 = FrameState         R     0x5616636d35d0+37(pr): [%18.14], env=e12.3, next=%19.5
  void                    Deopt              !v    %19.6   !
BB22   <- [20]
  val?^ | miss    %22.0 = LdVar              eR    ef !upd, e4.3
  lgl$#-          %22.1 = IsType                   %22.0 isA val?~- | miss
  void                    Assume             D     %22.1, %20.5 (Typecheck@0x56166233ea88[Type#9])
  val?~- | miss   %22.3 = CastType           d     dn %22.0
  val?-           %22.4 = Force!<value>            %22.3,    <code->
  void                    Assume             D     %20.4, %20.5 (Typecheck@0x56166233ea88[Type#8])
  val?-           %22.6 = CastType           d     dn %20.3   <sym->
  val?-           %22.7 = Subassign2_1D      wed   %22.6, %22.4, 1, elided
  void                    StVar              lW    ef, %22.7, e4.3
  cp              %22.9 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x561663698650+222: [%20.3], env=e4.3
  void                    Deopt              !v    %21.0   !
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    typeof, e4.3
  lgl$#-          %24.1 = Identical                %24.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %24.1, %22.9 (CallTarget@0x56166233ea88[Call#4])
  prom-           %24.3 = MkArg                    unboundValue, apdef[0x561661704080]_p2, e4.3
  val?            %24.4 = StaticCall         !v    typeof[0x56166304e1a0](%24.3) e4.3   <str$->
  lgl$#-          %24.5 = IsType                   %24.4 isA val?-
  cp              %24.6 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x561663698650+257: [], env=e4.3
  void                    Deopt              !v    %23.0   !
BB26   <- [24]
  void                    Assume             D     %24.5, %24.6 (Typecheck@0x56166233ea88[Type#12])
  val?-           %26.1 = CastType           d     dn %24.4   <str$->
  lgl-            %26.2 = Eq                 wed   %26.1, "language", elided   <lgl$->
  lgl$#-          %26.3 = IsType                   %26.2 isA lgl$-
  cp              %26.4 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x561663698650+289: [%24.4], env=e4.3
  void                    Deopt              !v    %25.0   !
BB28   <- [26]
  void                    Assume             D     %26.3, %26.4 (Typecheck@0x56166233ea88[Type#13])
  lgl$-           %28.1 = CastType           d     dn %26.2
  lgl$#-          %28.2 = CheckTrueFalse     e     %28.1
  void                    Branch                   %28.2 -> BB71 (if true) | BB29 (if false)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x561663698650+301: [%26.2], env=e4.3
  void                    Deopt              !v    %27.0   !
BB71   <- [28]
  val?^ | miss    %71.0 = LdVar              eR    tmp, e4.3
  val?            %71.1 = Force!<value>      !v    %71.0, e4.3   <sym->
  lgl$#-          %71.2 = IsType                   %71.1 isA val?-
  cp              %71.3 = Checkpoint                -> BB73 (default) | BB72 (if assume failed)
BB29   <- [28]
  goto BB30
BB73   <- [71]
  val?^ | miss    %73.0 = LdVar              eR    ef !upd, e4.3
  lgl$#-          %73.1 = IsType                   %73.0 isA val?~- | miss
  void                    Assume             D     %73.1, %71.3 (Typecheck@0x56166233ea88[Type#15])
  val?~- | miss   %73.3 = CastType           d     dn %73.0
  val?-           %73.4 = Force!<value>            %73.3,    <code->
  void                    Assume             D     %71.2, %71.3 (Typecheck@0x56166233ea88[Type#14])
  val?-           %73.6 = CastType           d     dn %71.1   <sym->
  val?-           %73.7 = Subassign2_1D      wed   %73.6, %73.4, 2, elided
  void                    StVar              lW    ef, %73.7, e4.3
  goto BB30
BB72   <- [71]
  fs              %72.0 = FrameState         R     0x561663698650+326: [%71.1], env=e4.3
  void                    Deopt              !v    %72.0   !
BB30   <- [29, 73]
  (cls|spec|blt)  %30.0 = LdFun              !v    <-, <0x561660cb1da8>, e4.3
  prom-           %30.1 = MkArg                    unboundValue, apdef[0x561661704080]_p3, e4.3
  prom-           %30.2 = MkArg                    unboundValue, apdef[0x561661704080]_p6, e4.3
  val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e4.3
  cp              %30.4 = Checkpoint                -> BB32 (default) | BB31 (if assume failed)
BB32   <- [30]
  val?^ | miss    %32.0 = LdVar              eR    c, e4.3
  lgl$#-          %32.1 = Identical                <blt c>, %32.0   <true>
  void                    Assume             D     %32.1, %30.4 (DeadBranchReached@0x56166233ea88[Test#3])
  val?^ | miss    %32.3 = LdVar              eR    v, e4.3
  val?            %32.4 = Force!<value>      !v    %32.3, e4.3   <nil->
  cp              %32.5 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB31   <- [30]
  fs              %31.0 = FrameState         R     0x561663698650+398: [%30.3], env=e4.3
  void                    Deopt              !v    %31.0   !
BB34   <- [32]
  val?^ | miss    %34.0 = LdVar              eR    list, e4.3
  lgl$#-          %34.1 = Identical                <blt list>, %34.0   <true>
  void                    Assume             D     %34.1, %32.5 (DeadBranchReached@0x56166233ea88[Test#4])
  val?^ | miss    %34.3 = LdVar              eR    ef, e4.3
  lgl$#-          %34.4 = IsType                   %34.3 isA val?~- | miss
  void                    Assume             D     %34.4, %32.5 (Typecheck@0x56166233ea88[Type#25])
  val?~- | miss   %34.6 = CastType           d     dn %34.3
  val?-           %34.7 = Force!<value>            %34.6,    <code->
  val+            %34.8 = CallSafeBuiltin    wed   list(%34.7)    <vec$->
  cp              %34.9 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x561663698650+473: [<blt c>, %32.4], env=e4.3
  void                    Deopt              !v    %33.0   !
BB36   <- [34]
  lgl$#-          %36.0 = IsType                   %32.4 isA val?-
  void                    Assume             D     %36.0, %34.9 (Typecheck@0x56166233ea88[Type#23])
  val?-           %36.2 = CastType           d     dn %32.4   <nil->
  val+            %36.3 = CallSafeBuiltin    wed   c(%36.2, %34.8)    <vec$->
  void                    StVar              lW    v, %36.3, e4.3
  val?^ | miss    %36.5 = LdVar              eR    e, e4.3
  val?            %36.6 = Force!<wrapped>    !v    %36.5, e4.3   <code->
  lgl$#-          %36.7 = IsType                   %36.6 isA val+   <true>
  lgl$#-          %36.8 = IsType                   %36.6 isA val?-
  cp              %36.9 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x561663698650+569: [<blt c>, %32.4, %34.8], env=e4.3
  void                    Deopt              !v    %35.0   !
BB38   <- [36]
  void                    Assume             D     %36.7, %36.9 (DeadBranchReached@0x56166233ea88[Test#5])
  void                    Assume             D     %36.8, %36.9 (Typecheck@0x56166233ea88[Type#28])
  val?-           %38.2 = CastType           d     dn %36.6   <code->
  val?            %38.3 = Extract2_1D        wed   %38.2, 2, elided   <(sym|code)->
  void                    StVar              lW    e, %38.3, e4.3
  goto BB39
BB37   <- [36]
  fs              %37.0 = FrameState         R     0x561663698650+614: [%36.6], env=e4.3
  void                    Deopt              !v    %37.0   !
BB39   <- [38, 67]
  val?            %39.0 = Phi                      %38.3:BB38, %67.3:BB67
  cp              %39.1 = Checkpoint                -> BB41 (default) | BB40 (if assume failed)
BB41   <- [39]
  val?^ | miss    %41.0 = LdVar              eR    typeof, e4.3
  lgl$#-          %41.1 = Identical                %41.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %41.1, %39.1 (CallTarget@0x56166233ea88[Call#10])
  val             %41.3 = ChkMissing         e     %39.0   <(sym|code)->
  val?            %41.4 = StaticCall         !v    typeof[0x5616613d1a00](%41.3) e4.3   <str$->
  lgl$#-          %41.5 = IsType                   %41.4 isA val?-
  cp              %41.6 = Checkpoint                -> BB43 (default) | BB42 (if assume failed)
BB40   <- [39]
  fs              %40.0 = FrameState         R     0x561663698650+672: [], env=e4.3
  void                    Deopt              !v    %40.0   !
BB43   <- [41]
  void                    Assume             D     %41.5, %41.6 (Typecheck@0x56166233ea88[Type#31])
  val?-           %43.1 = CastType           d     dn %41.4   <str$->
  lgl-            %43.2 = Eq                 wed   %43.1, "language", elided   <lgl$->
  lgl$#-          %43.3 = IsType                   %43.2 isA lgl$-
  cp              %43.4 = Checkpoint                -> BB45 (default) | BB44 (if assume failed)
BB42   <- [41]
  fs              %42.0 = FrameState         R     0x561663698650+704: [%41.4], env=e4.3
  void                    Deopt              !v    %42.0   !
BB45   <- [43]
  void                    Assume             D     %43.3, %43.4 (Typecheck@0x56166233ea88[Type#32])
  lgl$-           %45.1 = CastType           d     dn %43.2
  lgl$#-          %45.2 = CheckTrueFalse     e     %45.1
  void                    Branch                   %45.2 -> BB47 (if true) | BB46 (if false)
BB44   <- [43]
  fs              %44.0 = FrameState         R     0x561663698650+716: [%43.2], env=e4.3
  void                    Deopt              !v    %44.0   !
BB47   <- [45]
  val?^ | miss    %47.0 = LdVar              eR    e, e4.3
  val?            %47.1 = Force!<value>      !v    %47.0, e4.3   <code->
  void                    StVar              lW    ef, %47.1, e4.3
  cp              %47.3 = Checkpoint                -> BB49 (default) | BB48 (if assume failed)
BB46   <- [45]
  val?^ | miss    %46.0 = LdVar              eR    v, e4.3
  void                    Visible            v     
  val?            %46.2 = Force!<value>      !     %46.0, e4.3   <vec->
  void                    Return             l     %46.2
BB49   <- [47]
  val?^ | miss    %49.0 = LdVar              eR    makeAssgnFcn, e4.3
  lgl$#-          %49.1 = Identical                %49.0, function(fun) <(rir::DispatchTable*)0x5616636d|...
  void                    Assume             D     %49.1, %47.3 (CallTarget@0x56166233ea88[Call#11])
  prom-           %49.3 = MkArg                    unboundValue, apdef[0x561661704080]_p8, e4.3
  val?            %49.4 = StaticCall         !v    makeAssgnFcn[0x561662732bc0](%49.3) e4.3   <sym->
  lgl$#-          %49.5 = IsType                   %49.4 isA val?-
  cp              %49.6 = Checkpoint                -> BB51 (default) | BB50 (if assume failed)
BB48   <- [47]
  fs              %48.0 = FrameState         R     0x561663698650+750: [], env=e4.3
  void                    Deopt              !v    %48.0   !
BB51   <- [49]
  val?^ | miss    %51.0 = LdVar              eR    ef !upd, e4.3
  lgl$#-          %51.1 = IsType                   %51.0 isA val?~- | miss
  void                    Assume             D     %51.1, %49.6 (Typecheck@0x56166233ea88[Type#37])
  val?~- | miss   %51.3 = CastType           d     dn %51.0
  val?-           %51.4 = Force!<value>            %51.3,    <code->
  void                    Assume             D     %49.5, %49.6 (Typecheck@0x56166233ea88[Type#36])
  val?-           %51.6 = CastType           d     dn %49.4   <sym->
  val?-           %51.7 = Subassign2_1D      wed   %51.6, %51.4, 1, elided
  void                    StVar              lW    ef, %51.7, e4.3
  cp              %51.9 = Checkpoint                -> BB53 (default) | BB52 (if assume failed)
BB50   <- [49]
  fs              %50.0 = FrameState         R     0x561663698650+782: [%49.4], env=e4.3
  void                    Deopt              !v    %50.0   !
BB53   <- [51]
  val?^ | miss    %53.0 = LdVar              eR    typeof, e4.3
  lgl$#-          %53.1 = Identical                %53.0, function(x) <(rir::DispatchTable*)0x5616632751|...
  void                    Assume             D     %53.1, %51.9 (CallTarget@0x56166233ea88[Call#12])
  prom-           %53.3 = MkArg                    unboundValue, apdef[0x561661704080]_p9, e4.3
  val?            %53.4 = StaticCall         !v    typeof[0x56166304e1a0](%53.3) e4.3   <str$->
  lgl$#-          %53.5 = IsType                   %53.4 isA val?-
  cp              %53.6 = Checkpoint                -> BB55 (default) | BB54 (if assume failed)
BB52   <- [51]
  fs              %52.0 = FrameState         R     0x561663698650+817: [], env=e4.3
  void                    Deopt              !v    %52.0   !
BB55   <- [53]
  void                    Assume             D     %53.5, %53.6 (Typecheck@0x56166233ea88[Type#40])
  val?-           %55.1 = CastType           d     dn %53.4   <str$->
  lgl-            %55.2 = Eq                 wed   %55.1, "language", elided   <lgl$->
  lgl$#-          %55.3 = IsType                   %55.2 isA lgl$-
  cp              %55.4 = Checkpoint                -> BB57 (default) | BB56 (if assume failed)
BB54   <- [53]
  fs              %54.0 = FrameState         R     0x561663698650+849: [%53.4], env=e4.3
  void                    Deopt              !v    %54.0   !
BB57   <- [55]
  void                    Assume             D     %55.3, %55.4 (Typecheck@0x56166233ea88[Type#41])
  lgl$-           %57.1 = CastType           d     dn %55.2
  lgl$#-          %57.2 = CheckTrueFalse     e     %57.1
  void                    Branch                   %57.2 -> BB68 (if true) | BB58 (if false)
BB56   <- [55]
  fs              %56.0 = FrameState         R     0x561663698650+861: [%55.2], env=e4.3
  void                    Deopt              !v    %56.0   !
BB68   <- [57]
  val?^ | miss    %68.0 = LdVar              eR    tmp, e4.3
  val?            %68.1 = Force!             !v    %68.0, e4.3   <val?_>
  val?^ | miss    %68.2 = LdVar              eR    ef !upd, e4.3
  val?            %68.3 = Force!             !v    %68.2, e4.3   <val?_>
  lgl$#-          %68.4 = IsType                   %68.3 isA val?+
  lgl$#-          %68.5 = IsType                   %68.1 isA val?+
  cp              %68.6 = Checkpoint                -> BB70 (default) | BB69 (if assume failed)
BB58   <- [57]
  goto BB59
BB70   <- [68]
  void                    Assume             D     %68.5, %68.6 (Typecheck@0x56166233ea88[Type#42])
  val?+           %70.1 = CastType           d     dn %68.1   <val?_>
  void                    Assume             D     %68.4, %68.6 (Typecheck@0x56166233ea88[Type#43])
  val?+           %70.3 = CastType           d     dn %68.3   <val?_>
  val?+           %70.4 = Subassign2_1D      wed   %70.1, %70.3, 2, elided
  void                    StVar              lW    ef, %70.4, e4.3
  goto BB59
BB69   <- [68]
  fs              %69.0 = FrameState         R     0x561663698650+900: [%68.1, %68.3], env=e4.3
  void                    Deopt              !v    %69.0   !
BB59   <- [58, 70]
  (cls|spec|blt)  %59.0 = LdFun              !v    <-, <0x561660cb1da8>, e4.3
  prom-           %59.1 = MkArg                    unboundValue, apdef[0x561661704080]_p10, e4.3
  prom-           %59.2 = MkArg                    unboundValue, apdef[0x561661704080]_p13, e4.3
  val?            %59.3 = Call               !v    %59.0(%59.1, %59.2) e4.3
  cp              %59.4 = Checkpoint                -> BB61 (default) | BB60 (if assume failed)
BB61   <- [59]
  val?^ | miss    %61.0 = LdVar              eR    c, e4.3
  lgl$#-          %61.1 = Identical                <blt c>, %61.0   <true>
  void                    Assume             D     %61.1, %59.4 (DeadBranchReached@0x56166233ea88[Test#8])
  val?^ | miss    %61.3 = LdVar              eR    v, e4.3
  val?            %61.4 = Force!<value>      !v    %61.3, e4.3   <vec$->
  cp              %61.5 = Checkpoint                -> BB63 (default) | BB62 (if assume failed)
BB60   <- [59]
  fs              %60.0 = FrameState         R     0x561663698650+958: [%59.3], env=e4.3
  void                    Deopt              !v    %60.0   !
BB63   <- [61]
  val?^ | miss    %63.0 = LdVar              eR    list, e4.3
  lgl$#-          %63.1 = Identical                <blt list>, %63.0   <true>
  void                    Assume             D     %63.1, %61.5 (DeadBranchReached@0x56166233ea88[Test#9])
  val?^ | miss    %63.3 = LdVar              eR    ef, e4.3
  lgl$#-          %63.4 = IsType                   %63.3 isA val?~- | miss
  void                    Assume             D     %63.4, %61.5 (Typecheck@0x56166233ea88[Type#53])
  val?~- | miss   %63.6 = CastType           d     dn %63.3
  val?-           %63.7 = Force!<value>            %63.6,    <code->
  val+            %63.8 = CallSafeBuiltin    wed   list(%63.7)    <vec$->
  cp              %63.9 = Checkpoint                -> BB65 (default) | BB64 (if assume failed)
BB62   <- [61]
  fs              %62.0 = FrameState         R     0x561663698650+1033: [<blt c>, %61.4], env=e4.3
  void                    Deopt              !v    %62.0   !
BB65   <- [63]
  lgl$#-          %65.0 = IsType                   %61.4 isA val?-
  void                    Assume             D     %65.0, %63.9 (Typecheck@0x56166233ea88[Type#51])
  val?-           %65.2 = CastType           d     dn %61.4   <vec$->
  val+            %65.3 = CallSafeBuiltin    wed   c(%65.2, %63.8)    <vec->
  void                    StVar              lW    v, %65.3, e4.3
  val?^ | miss    %65.5 = LdVar              eR    e, e4.3
  val?            %65.6 = Force!<value>      !v    %65.5, e4.3   <code->
  lgl$#-          %65.7 = IsType                   %65.6 isA val+   <true>
  lgl$#-          %65.8 = IsType                   %65.6 isA val?-
  cp              %65.9 = Checkpoint                -> BB67 (default) | BB66 (if assume failed)
BB64   <- [63]
  fs              %64.0 = FrameState         R     0x561663698650+1129: [<blt c>, %61.4, %63.8], env=e4.3
  void                    Deopt              !v    %64.0   !
BB67   <- [65]
  void                    Assume             D     %65.7, %65.9 (DeadBranchReached@0x56166233ea88[Test#10])
  void                    Assume             D     %65.8, %65.9 (Typecheck@0x56166233ea88[Type#56])
  val?-           %67.2 = CastType           d     dn %65.6   <code->
  val?            %67.3 = Extract2_1D        wed   %67.2, 2, elided   <sym->
  void                    StVar              lW    e, %67.3, e4.3
  goto BB39
BB66   <- [65]
  fs              %66.0 = FrameState         R     0x561663698650+1174: [%65.6], env=e4.3
  void                    Deopt              !v    %66.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  val?            %1.2  = Force<wrapped>     !v    %1.1, e1.0   <code->
  val?            %1.3  = Extract2_1D        !v    %1.2, 1, e1.0   <sym->
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ef, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <code->
  val?            %1.3  = Extract2_1D        !v    %1.2, 2, e1.0   <(sym|code)->
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, e1.0
  prom-           %1.2  = MkArg                    unboundValue, apdef[0x561661704080]_p4, e1.0
  prom-           %1.3  = MkArg                    unboundValue, apdef[0x561661704080]_p5, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ef, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    tmpv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <code->
  val?            %1.3  = Extract2_1D        !v    %1.2, 1, e1.0   <sym->
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ef, e1.0
  val?            %1.2  = Force<value>       !v    %1.1, e1.0   <code->
  val?            %1.3  = Extract2_1D        !v    %1.2, 2, e1.0   <sym->
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     $, e1.0
  prom-           %1.2  = MkArg                    unboundValue, apdef[0x561661704080]_p11, e1.0
  prom-           %1.3  = MkArg                    unboundValue, apdef[0x561661704080]_p12, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ef, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    tmpv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fun, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <sym->
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     paste0, <0x561660e063c8>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, apdef[0x561661704080]_p16, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2, "<-") e1.0   <str$->
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x561660cca040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, apdef[0x561661704080]_p17, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fun, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <sym->
  void                    Return             l     %1.3

│ apdef[0x561661704080]                                                        │
└──────────────────────────────────────────────────────────────────────────────┘
