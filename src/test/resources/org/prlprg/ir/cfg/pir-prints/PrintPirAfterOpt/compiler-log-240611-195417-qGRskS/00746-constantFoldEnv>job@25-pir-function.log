
┌──────────────────────────────────────────────────────────────────────────────┐
│ constantFoldEnv>job@25[0x561662eef1c0]                                       │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
constantFoldEnv>job@25[0x561662eef1c0]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     exit=%1.0, parent=?, context 1
  cls             %1.2  = MkCls                    , e1.1
  void                    StVar              lW    doExit, %1.2, e1.1
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB5 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    makeConstantFolder, ?
  lgl$#-          %2.1  = Identical                %2.0, function(..., leaf=foldLeaf, handler=function(|...
  void                    Assume             D     %2.1, %1.4 (CallTarget@0x5616638a6f88[Call#0])
  prom-           %2.3  = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p0, e1.1
  prom-           %2.4  = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p1 (!refl), e1.1
  ct              %2.5  = PushContext        lCL   missingArg, missingArg, missingArg, missingArg, %2.4, %2.3, makeConstantFolder(isLocal=isLocal, exit=doExit), function(..., leaf=foldLeaf, handler=function(|..., e1.1
  val?^           %2.6  = CastType                 up %2.3
  val?^           %2.7  = CastType                 up %2.4
  env             e2.8  = MkEnv              l     ...(miss)=missingArg, leaf(miss)=missingArg, handler(miss)=missingArg, call(miss)=missingArg, exit=%2.7, isLocal=%2.6, foldable(miss)=missingArg, isConstant(miss)=missingArg, signal(miss)=missingArg, parent=<env 0x56166328f230>, context 1
  prom-           %2.9  = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p4, e2.8
  val?^ | miss    %2.10 = CastType                 up %2.9
  void                    StArg              lW    leaf, %2.10, e2.8
  cls             %2.12 = MkCls                    makeConstantFolder@Prom(1)0, e2.8
  prom-           %2.13 = MkArg                    %2.12, constantFoldEnv>job@25[0x561662eef1c0]_p6 (!refl), e2.8
  val?^ | miss    %2.14 = CastType                 up %2.13
  void                    StArg              lW    handler, %2.14, e2.8
  cls             %2.16 = MkCls                    makeConstantFolder@Prom(2)0, e2.8
  prom-           %2.17 = MkArg                    %2.16, constantFoldEnv>job@25[0x561662eef1c0]_p5 (!refl), e2.8
  val?^ | miss    %2.18 = CastType                 up %2.17
  void                    StArg              lW    call, %2.18, e2.8
  prom-           %2.20 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p8, e2.8
  val?^ | miss    %2.21 = CastType                 up %2.20
  void                    StArg              lW    foldable, %2.21, e2.8
  prom-           %2.23 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p9, e2.8
  val?^ | miss    %2.24 = CastType                 up %2.23
  void                    StArg              lW    isConstant, %2.24, e2.8
  cls             %2.26 = MkCls                    makeConstantFolder@Prom(7)0, e2.8
  prom-           %2.27 = MkArg                    %2.26, constantFoldEnv>job@25[0x561662eef1c0]_p11 (!refl), e2.8
  val?^ | miss    %2.28 = CastType                 up %2.27
  void                    StArg              lW    signal, %2.28, e2.8
  (cls|spec|blt)  %2.30 = LdFun              !     list, <0x561660cd15c0>, <env 0x56166328f230>
  prom-           %2.31 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p12 (!refl), e2.8
  prom-           %2.32 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p13 (!refl), e2.8
  prom-           %2.33 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p14, e2.8
  prom-           %2.34 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p15, e2.8
  prom-           %2.35 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p16, e2.8
  prom-           %2.36 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p17, e2.8
  prom-           %2.37 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p18, e2.8
  prom-           %2.38 = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p19 (!refl), e2.8
  val?            %2.39 = NamedCall          !     %2.30(handler=%2.31, call=%2.32, exit=%2.33, leaf=%2.34, isLocal=%2.35, foldable=%2.36, isConstant=%2.37, signal=%2.38) e2.8   <vec+>
  val?            %2.40 = PopContext         C     %2.39, %2.5   <vec+>
  void                    StVar              lW    w, %2.40, e1.1
  cp              %2.42 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB5   <- [1]
  fs              %5.0  = FrameState         R     0x561663817bd0+25: [], env=e1.1
  void                    Deopt              !v    %5.0
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    walkCode, e1.1
  lgl$#-          %4.1  = Identical                %4.0, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Assume             D     %4.1, %2.42 (CallTarget@0x5616638a6f88[Call#1])
  prom-           %4.3  = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p2, e1.1
  prom-           %4.4  = MkArg                    unboundValue, constantFoldEnv>job@25[0x561662eef1c0]_p3 (!refl), e1.1
  val?            %4.5  = StaticCall         !     walkCode[0x561663695850](%4.3, %4.4) e1.1   <val?_>
  void                    Return             l     %4.5
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x561663817bd0+84: [], env=e1.1
  void                    Deopt              !v    %3.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isLocal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    doExit, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(sym|code)->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    foldLeaf, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    makeConstantFolder@Prom(2)0, e1.0
  void                    Return             l     %1.1
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    makeConstantFolder@Prom(1)0, e1.0
  void                    Return             l     %1.1
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isFoldable, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isConstantValue, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    makeConstantFolder@Prom(7)0, e1.0
  void                    Return             l     %1.1
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    handler, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    exit, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    leaf, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isLocal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isFoldable, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isConstant, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    signal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3

│ constantFoldEnv>job@25[0x561662eef1c0]                                       │
└──────────────────────────────────────────────────────────────────────────────┘
