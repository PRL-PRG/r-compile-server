
┌──────────────────────────────────────────────────────────────────────────────┐
│ exitFolder[0x56166442db80]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
exitFolder[0x56166442db80]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  env             e1.2  = MkEnv              l     e=%1.1, w=%1.0, parent=<env 0x56166328f230>, context 1
  (cls|spec|blt)  %1.3  = LdFun              !v    $, <0x561660cbcc10>, <env 0x56166328f230>
  prom-           %1.4  = MkArg                    unboundValue, exitFolder[0x56166442db80]_p0, e1.2
  prom-           %1.5  = MkArg                    unboundValue, exitFolder[0x56166442db80]_p1, e1.2
  val?            %1.6  = Call               !v    %1.3(%1.4, %1.5) e1.2   <cls->
  cp              %1.7  = Checkpoint                -> BB2 (default) | BB7 (if assume failed)
BB2   <- [1]
  (cls|spec|blt)  %2.0  = ChkFunction        e     %1.6
  prom-           %2.1  = MkArg                    unboundValue, exitFolder[0x56166442db80]_p2, e1.2
  prom-           %2.2  = MkArg                    unboundValue, exitFolder[0x56166442db80]_p3, e1.2
  val+            %2.3  = CallSafeBuiltin          bodyCode(%2.0) 
  lgl$#-          %2.4  = Identical                %2.3, <(rir::DispatchTable*)0x5616634bf6f0>
  void                    Assume             D     %2.4, %1.7 (CallTarget@0x56166374a0e8[Call#1])
  env             e2.6  = CallSafeBuiltin          environment(%2.0) 
  val?^           %2.7  = CastType                 up %2.2
  val?^           %2.8  = CastType                 up %2.1
  val?^ | miss    %2.9  = LdVar              eR    exit, e2.6
  (cls|spec|blt)  %2.10 = CastType                 dn %2.9
  val+            %2.11 = CallSafeBuiltin          bodyCode(%2.10) 
  lgl$#-          %2.12 = Identical                %2.11, <(rir::DispatchTable*)0x561663699cd0>
  void                    Assume             D     %2.12, %1.7 (CallTarget@0x5616638a70e8[Call#0])
  val?            %2.14 = Force!             d     %2.9, 
  env             e2.15 = MkEnv              l     e=%2.8, w=%2.7, parent=e2.6, context 0
  prom-           %2.16 = MkArg                    unboundValue, exitFolder[0x56166442db80]_p4, e2.15
  (cls|spec|blt)  %2.17 = ChkFunction        e     %2.14
  env             e2.18 = CallSafeBuiltin          environment(%2.17) 
  val?^           %2.19 = CastType                 up %2.16
  val?^ | miss    %2.20 = LdVar              eR    fail, e2.6
  env             e2.21 = (MkEnv)            l     v=%2.19, parent=e2.18, context -1
  val?            %2.22 = Force!<lazy>       !vL   %2.20, e2.21   <nil->
  cp              %2.23 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB7   <- [1]
  fs              %7.0  = FrameState         R     0x56166350f2b0+37: [%1.6], env=e1.2
  void                    Deopt              !v    %7.0   !
BB4   <- [2]
  lgl$#-          %4.0  = IsEnvStub          R     , e2.21
  void                    Assume             D     %4.0, %2.23 (EnvStubMaterialized@0x5616638a6958[Call#unknown])
  prom-           %4.2  = MkArg                    %2.22, exitFolder[0x56166442db80]_p4 (!refl), e2.15
  val?~           %4.3  = CastType                 up %4.2
  void                    StArg              lWd   v, %4.3, e2.21
  void                    StVarSuper         lRW   value, %2.22, e2.21
  val?^ | miss    %4.6  = LdVar              eRd   throw, e2.18
  val?            %4.7  = Force!             !vL   %4.6, e2.21   <val?_>
  cp              %4.8  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x56166350f2b0+75: [], env=e1.2
  fs              %3.1  = FrameState         R     0x5616636046d0+32: [], env=e2.15, next=%3.0
  fs              %3.2  = FrameState         R     0x56166383ccf0+9: [], env=e2.21, next=%3.1
  fs              %3.3  = FrameState         R     0x5616634bf600+5(pr): [%2.22], env=e2.15, next=%3.2
  void                    Deopt              !v    %3.3   !
BB6   <- [4]
  lgl$#-          %6.0  = IsEnvStub          R     , e2.21
  void                    Assume             D     %6.0, %4.8 (EnvStubMaterialized@0x5616638a6958[Call#unknown])
  (cls|spec|blt)  %6.2  = LdFun              !v    stop0, e1.2
  fs              %6.3  = FrameState         R     0x56166350f2b0+81: [%6.2], env=e1.2
  void                    Deopt              !v    %6.3, DeadCall@0x56166374a0e8[Call#2], %6.2   !
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x56166350f2b0+75: [], env=e1.2
  fs              %5.1  = FrameState         R     0x5616636046d0+32: [], env=e2.15, next=%5.0
  fs              %5.2  = FrameState         R     0x56166383ccf0+28: [%4.7], env=e2.21, next=%5.1
  void                    Deopt              !v    %5.2   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    exit, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fail, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <nil->
  void                    Return             l     %1.3

│ exitFolder[0x56166442db80]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
