
┌──────────────────────────────────────────────────────────────────────────────┐
│ callCC[0x561663af13d0]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
callCC[0x561663af13d0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  void                    Visible            v     
  env             e1.2  = MkEnv              l     fun=%1.0, value=nil, parent=R_BaseNamespace, context 1
  prom-           %1.3  = MkArg                    unboundValue, callCC[0x561663af13d0]_p0, e1.2
  val?            %1.4  = StaticCall         !     delayedAssign[0x561664828430]("throw", %1.3) e1.2
  cls             %1.5  = MkCls                    callCC@Prom(1)0, e1.2
  cp              %1.6  = Checkpoint                -> BB2 (default) | BB7 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    fun, e1.2
  (cls|spec|blt)  %2.1  = CastType                 dn %2.0
  val+            %2.2  = CallSafeBuiltin          bodyCode(%2.1) 
  lgl$#-          %2.3  = Identical                %2.2, <(rir::DispatchTable*)0x561663455cf0>
  void                    Assume             D     %2.3, %1.6 (CallTarget@0x5616638a67f8[Call#1])
  val?            %2.5  = Force!             d     %2.0, 
  prom-           %2.6  = MkArg                    %1.5, callCC[0x561663af13d0]_p1 (!refl), e1.2
  (cls|spec|blt)  %2.7  = ChkFunction        e     %2.5
  env             e2.8  = CallSafeBuiltin          environment(%2.7) 
  ct              %2.9  = PushContext        lCL   %2.6, fun(function(<lst v=R_MissingArg>, {(<<-(value|..., %2.7, e1.2
  cls~            %2.10 = CastType                 up %2.6
  env             e2.11 = MkEnv              l     exit=%2.10, parent=e2.8, context 1
  cls             %2.12 = MkCls                    , e2.11
  void                    StVar              lW    doExit, %2.12, e2.11
  cp              %2.14 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB7   <- [1]
  fs              %7.0  = FrameState         R     0x561663612ec0+52: [%1.4], env=e1.2
  void                    Deopt              !v    %7.0   !
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    makeConstantFolder, e2.8
  lgl$#-          %4.1  = Identical                %4.0, function(..., leaf=foldLeaf, handler=function(|...
  void                    Assume             D     %4.1, %2.14 (CallTarget@0x5616638a6f88[Call#0])
  prom-           %4.3  = MkArg                    unboundValue, callCC[0x561663af13d0]_p2, e2.11
  prom-           %4.4  = MkArg                    unboundValue, callCC[0x561663af13d0]_p3 (!refl), e2.11
  ct              %4.5  = PushContext        lCL   missingArg, missingArg, missingArg, missingArg, %4.4, %4.3, makeConstantFolder(isLocal=isLocal, exit=doExit), function(..., leaf=foldLeaf, handler=function(|..., e2.11
  val?^           %4.6  = CastType                 up %4.3
  val?^           %4.7  = CastType                 up %4.4
  env             e4.8  = MkEnv              l     ...(miss)=missingArg, leaf(miss)=missingArg, handler(miss)=missingArg, call(miss)=missingArg, exit=%4.7, isLocal=%4.6, foldable(miss)=missingArg, isConstant(miss)=missingArg, signal(miss)=missingArg, parent=<env 0x56166328f230>, context 1
  prom-           %4.9  = MkArg                    unboundValue, callCC[0x561663af13d0]_p6, e4.8
  val?^ | miss    %4.10 = CastType                 up %4.9
  void                    StArg              lW    leaf, %4.10, e4.8
  cls             %4.12 = MkCls                    makeConstantFolder@Prom(1)0, e4.8
  prom-           %4.13 = MkArg                    %4.12, callCC[0x561663af13d0]_p8 (!refl), e4.8
  val?^ | miss    %4.14 = CastType                 up %4.13
  void                    StArg              lW    handler, %4.14, e4.8
  cls             %4.16 = MkCls                    makeConstantFolder@Prom(2)0, e4.8
  prom-           %4.17 = MkArg                    %4.16, callCC[0x561663af13d0]_p7 (!refl), e4.8
  val?^ | miss    %4.18 = CastType                 up %4.17
  void                    StArg              lW    call, %4.18, e4.8
  prom-           %4.20 = MkArg                    unboundValue, callCC[0x561663af13d0]_p10, e4.8
  val?^ | miss    %4.21 = CastType                 up %4.20
  void                    StArg              lW    foldable, %4.21, e4.8
  prom-           %4.23 = MkArg                    unboundValue, callCC[0x561663af13d0]_p11, e4.8
  val?^ | miss    %4.24 = CastType                 up %4.23
  void                    StArg              lW    isConstant, %4.24, e4.8
  cls             %4.26 = MkCls                    makeConstantFolder@Prom(7)0, e4.8
  prom-           %4.27 = MkArg                    %4.26, callCC[0x561663af13d0]_p13 (!refl), e4.8
  val?^ | miss    %4.28 = CastType                 up %4.27
  void                    StArg              lW    signal, %4.28, e4.8
  (cls|spec|blt)  %4.30 = LdFun              !     list, <0x561660cd15c0>, <env 0x56166328f230>
  prom-           %4.31 = MkArg                    unboundValue, callCC[0x561663af13d0]_p14 (!refl), e4.8
  prom-           %4.32 = MkArg                    unboundValue, callCC[0x561663af13d0]_p15 (!refl), e4.8
  prom-           %4.33 = MkArg                    unboundValue, callCC[0x561663af13d0]_p16, e4.8
  prom-           %4.34 = MkArg                    unboundValue, callCC[0x561663af13d0]_p17, e4.8
  prom-           %4.35 = MkArg                    unboundValue, callCC[0x561663af13d0]_p18, e4.8
  prom-           %4.36 = MkArg                    unboundValue, callCC[0x561663af13d0]_p19, e4.8
  prom-           %4.37 = MkArg                    unboundValue, callCC[0x561663af13d0]_p20, e4.8
  prom-           %4.38 = MkArg                    unboundValue, callCC[0x561663af13d0]_p21 (!refl), e4.8
  val?            %4.39 = NamedCall          !     %4.30(handler=%4.31, call=%4.32, exit=%4.33, leaf=%4.34, isLocal=%4.35, foldable=%4.36, isConstant=%4.37, signal=%4.38) e4.8   <vec+>
  val?            %4.40 = PopContext         C     %4.39, %4.5   <vec+>
  void                    StVar              lW    w, %4.40, e2.11
  cp              %4.42 = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x561663612ec0+85: [], env=e1.2
  fs              %3.1  = FrameState         R     0x561663817bd0+25: [], env=e2.11, next=%3.0
  void                    Deopt              !v    %3.1   !
BB6   <- [4]
  val?^ | miss    %6.0  = LdVar              eR    walkCode, e2.11
  lgl$#-          %6.1  = Identical                %6.0, function(e, w=makeCodeWalker()) <(rir::Dispatc|...
  void                    Assume             D     %6.1, %4.42 (CallTarget@0x5616638a6f88[Call#1])
  prom-           %6.3  = MkArg                    unboundValue, callCC[0x561663af13d0]_p4, e2.11
  prom-           %6.4  = MkArg                    unboundValue, callCC[0x561663af13d0]_p5 (!refl), e2.11
  val?            %6.5  = StaticCall         !     walkCode[0x5616644384f0](%6.3, %6.4) e2.11   <val?_>
  val?            %6.6  = PopContext         C     %6.5, %2.9   <val?_>
  void                    Return             l     %6.6
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x561663612ec0+85: [], env=e1.2
  fs              %5.1  = FrameState         R     0x561663817bd0+84: [], env=e2.11, next=%5.0
  void                    Deopt              !v    %5.1   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    NonLocalReturn     !     %1.3, e1.0
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    callCC@Prom(1)0, e1.0
  void                    Return             l     %1.1
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isLocal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    doExit, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(sym|code)->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    foldLeaf, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    makeConstantFolder@Prom(2)0, e1.0
  void                    Return             l     %1.1
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    makeConstantFolder@Prom(1)0, e1.0
  void                    Return             l     %1.1
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isFoldable, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isConstantValue, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  cls             %1.1  = MkCls                    makeConstantFolder@Prom(7)0, e1.0
  void                    Return             l     %1.1
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    handler, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    exit, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    leaf, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isLocal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isFoldable, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    isConstant, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 21:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    signal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3

│ callCC[0x561663af13d0]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
