
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkPrimopCall[0x5616638604b0]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl2,NonRefl3             │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
checkPrimopCall[0x5616638604b0]
BB0
  goto BB1
BB1   <- [0]
  val?~           %1.0  = LdArg                    3
  val?^           %1.1  = LdArg                    2
  val?^           %1.2  = LdArg                    1
  val?^           %1.3  = LdArg                    0
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB88 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    anyMissing, <env 0x56166328f230>
  lgl$#-          %2.1  = Identical                %2.0, function(args) <(rir::DispatchTable*)0x5616634|...
  void                    Assume             D     %2.1, %1.4 (CallTarget@0x56166361e200[Call#0])
  env             e2.3  = MkEnv              l     fn=%1.3, e=%1.2, isBuiltin=%1.1, signal=%1.0, parent=<env 0x56166328f230>, context 1
  prom-           %2.4  = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p0, e2.3
  val?^           %2.5  = CastType                 up %2.4
  val?^ | miss    %2.6  = LdVar              eR    length, <env 0x56166328f230>
  lgl$#-          %2.7  = Identical                <blt length>, %2.6   <true>
  void                    Assume             D     %2.7, %1.4 (DeadBranchReached@0x561660fdb3e8[Test#0])
  val?            %2.9  = Force!<lazy>       !v    %1.2, e2.3   <code->
  lgl$#-          %2.10 = IsType                   %2.9 isA val?-
  cp              %2.11 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB88   <- [1]
  env             e88.0 = (MkEnv)            l     fn=%1.3, e=%1.2, isBuiltin=%1.1, signal=%1.0, parent=<env 0x56166328f230>, context 1
  fs              %88.1 = FrameState         R     0x5616631575b0+0: [], env=e88.0
  void                    Deopt              !v    %88.1
BB4   <- [2]
  void                    Assume             D     %2.10, %2.11 (Typecheck@0x56166361e200[Type#1])
  val?-           %4.1  = CastType           d     dn %2.9   <code->
  lgl$#-          %4.2  = IsType                   %4.1 isA val+   <true>
  env             e4.3  = (MkEnv)            l     args=%2.5, i=unboundValue, a=unboundValue, parent=<env 0x56166328f230>, context 0
  void                    Branch                   %4.2 -> BB87 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5616631575b0+32: [], env=e2.3
  env             e3.1  = (MkEnv)            l     args=%2.5, i=unboundValue, a=unboundValue, parent=<env 0x56166328f230>, context 0
  fs              %3.2  = FrameState         R     0x5616636fdc30+76: [1, <blt length>], env=e3.1, next=%3.0
  fs              %3.3  = FrameState         R     0x561663697fe0+5(pr): [%2.9], env=e2.3, next=%3.2
  void                    Deopt              !v    %3.3   !
BB87   <- [4]
  goto BB6
BB5   <- [4]
  prom-           %5.0  = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p2 (!refl), 
  goto BB6
BB6   <- [5, 87]
  (real|prom)-    %6.0  = Phi                      -1:BB87, %5.0:BB5
  val?            %6.1  = Extract1_1D        wed   %4.1, %6.0, elided   <code->
  prom-           %6.2  = MkArg                    %6.1, checkPrimopCall[0x5616638604b0]_p3 (!refl), e2.3
  val?~           %6.3  = CastType                 up %6.2
  void                    StArg              lWd   args, %6.3, e4.3
  lgl$#-          %6.5  = IsType                   %6.1 isA val?-
  cp              %6.6  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB8   <- [6]
  void                    Assume             D     %6.5, %6.6 (Typecheck@0x561660fdb3e8[Type#1])
  val?-           %8.1  = CastType           d     dn %6.1   <code->
  (int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
  lgl$#-          %8.3  = IsType                   %8.2 isA int$-
  cp              %8.4  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x5616631575b0+32: [], env=e2.3
  fs              %7.1  = FrameState         R     0x5616636fdc30+76: [1, <blt length>, %6.1], env=e4.3, next=%7.0
  void                    Deopt              !v    %7.1   !
BB10   <- [8]
  void                    Assume             D     %8.3, %8.4 (Typecheck@0x561660fdb3e8[Type#2])
  int$-           %10.1 = CastType           d     dn %8.2
  lgl$#-          %10.2 = ColonInputEffects        1, %10.1   <true>
  void                    Assume             D     %10.2, %8.4 (DeadBranchReached@0x561660fdb3e8[Test#1])
  int$#-          %10.4 = ColonCastRhs       e     1L, %10.1   <int$->
  lgl$#-          %10.5 = Lte                d     1L, %10.4, elided
  void                    Branch                   %10.5 -> BB86 (if true) | BB11 (if false)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x5616631575b0+32: [], env=e2.3
  fs              %9.1  = FrameState         R     0x5616636fdc30+98: [1, %8.2], env=e4.3, next=%9.0
  void                    Deopt              !v    %9.1   !
BB86   <- [10]
  goto BB12
BB11   <- [10]
  goto BB12
BB12   <- [86, 11]
  int$#-          %12.0 = Phi                      1L:BB86, -1L:BB11
  lgl$#-          %12.1 = Neq                d     %10.4, 1L, elided   <true>
  void                    Assume             D     %12.1, %8.4 (DeadBranchReached@0x561660fdb3e8[Test#4])
  void                    StVar              lWd   i, 1L, e4.3
  cp              %12.4 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB14   <- [12]
  int$-           %14.0 = Add                d     1L, %12.0, elided
  lgl$#-          %14.1 = IsType                   %8.1 isA val+   <true>
  void                    Assume             D     %14.1, %12.4 (DeadBranchReached@0x561660fdb3e8[Test#5])
  val?            %14.3 = Extract2_1D        wed   %8.1, 1L, elided   <val?->
  void                    StVar              lWd   a, %14.3, e4.3
  lgl$-           %14.5 = Missing            eR    a, e4.3
  lgl$#-          %14.6 = CheckTrueFalse     e     %14.5
  void                    Branch                   %14.6 -> BB85 (if true) | BB15 (if false)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x5616631575b0+32: [], env=e2.3
  fs              %13.1 = FrameState         R     0x5616636fdc30+226: [%12.0, %10.4, 1L], env=e4.3, next=%13.0
  void                    Deopt              !v    %13.1   !
BB85   <- [14]
  void                    Visible            v     
  goto BB20
BB15   <- [14]
  goto BB16
BB20   <- [85, 84, 19]
  lgl$#-          %20.0 = Phi                      true:BB19, false:BB84, true:BB85
  void                    Branch                   %20.0 -> BB74 (if true) | BB21 (if false)
BB16   <- [15, 18]
  int$-           %16.0 = Phi                      %14.0:BB15, %17.0:BB18
  lgl$-           %16.1 = Neq                d     %10.4, %16.0, elided
  lgl$#-          %16.2 = Identical                %16.1, false
  void                    Branch                   %16.2 -> BB84 (if true) | BB17 (if false)
BB74   <- [20]
  val?^ | miss    %74.0 = LdVar              eR    isBuiltin, e2.3
  void                    Visible            v     
  val?            %74.2 = Force!<lazy>       !     %74.0, e2.3   <lgl$->
  cp              %74.3 = Checkpoint                -> BB76 (default) | BB75 (if assume failed)
BB21   <- [20]
  goto BB22
BB84   <- [16]
  void                    Visible            v     
  goto BB20
BB17   <- [16]
  int$-           %17.0 = Add                d     %16.0, %12.0, elided
  val?            %17.1 = Extract2_1D        wed   %8.1, %16.0, elided   <val?->
  void                    StVar              lWd   a, %17.1, e4.3
  lgl$-           %17.3 = Missing            eR    a, e4.3
  lgl$#-          %17.4 = CheckTrueFalse     e     %17.3
  void                    Branch                   %17.4 -> BB19 (if true) | BB18 (if false)
BB76   <- [74]
  lgl$-           %76.0 = AsLogical          e     %74.2
  lgl$#-          %76.1 = Identical                %76.0, true
  void                    Branch                   %76.1 -> BB83 (if true) | BB77 (if false)
BB75   <- [74]
  fs              %75.0 = FrameState         R     0x5616631575b0+57: [%74.2], env=e2.3
  void                    Deopt              !v    %75.0   !
BB22   <- [21, 81]
  cp              %22.0 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB19   <- [17]
  void                    Visible            v     
  goto BB20
BB18   <- [17]
  goto BB16
BB83   <- [76]
  goto BB80
BB77   <- [76]
  val?^ | miss    %77.0 = LdVar              eR    %in%, e2.3
  lgl$#-          %77.1 = Identical                %77.0, function(x, table) <(rir::DispatchTable*)0x561|...
  void                    Assume             D     %77.1, %74.3 (CallTarget@0x56166361e200[Call#1])
  prom-           %77.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p6, e2.3
  val?^ | miss    %77.4 = LdVar              eR    fn, e2.3
  void                    Visible            v     
  val?            %77.6 = Force!<lazy>       !     %77.4, e2.3   <str$->
  prom-           %77.7 = MkArg                    %77.6, checkPrimopCall[0x5616638604b0]_p5 (!refl), 
  val?            %77.8 = StaticCall         !     %in%[0x5616642cdd90](%77.7, %77.3) e2.3   <lgl$->
  lgl$#-          %77.9 = IsType                   %77.8 isA lgl$-
  cp              %77.10 = Checkpoint                -> BB79 (default) | BB78 (if assume failed)
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    exists, e2.3
  lgl$#-          %24.1 = Identical                %24.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %24.1, %22.0 (CallTarget@0x56166361e200[Call#5])
  val?            %24.3 = StaticCall         !     exists[0x5616620b1890](".GenericArgsEnv") e2.3   <lgl$->
  lgl$#-          %24.4 = IsType                   %24.3 isA lgl$-
  cp              %24.5 = Checkpoint                -> BB26 (default) | BB25 (if assume failed)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x5616631575b0+157: [], env=e2.3
  void                    Deopt              !v    %23.0   !
BB80   <- [83, 79]
  lgl$-           %80.0 = Phi                      %79.3:BB79, %76.0:BB83
  lgl$#-          %80.1 = CheckTrueFalse     e     %80.0
  void                    Branch                   %80.1 -> BB82 (if true) | BB81 (if false)
BB79   <- [77]
  void                    Assume             D     %77.9, %77.10 (Typecheck@0x56166361e200[Type#7])
  lgl$-           %79.1 = CastType           d     dn %77.8
  lgl$-           %79.2 = AsLogical                %79.1
  lgl$-           %79.3 = LOr                      %76.0, %79.2
  goto BB80
BB78   <- [77]
  fs              %78.0 = FrameState         R     0x5616631575b0+106: [%76.0, %77.8], env=e2.3
  void                    Deopt              !v    %78.0   !
BB26   <- [24]
  void                    Assume             D     %24.4, %24.5 (Typecheck@0x56166361e200[Type#11])
  lgl$-           %26.1 = CastType           d     dn %24.3
  lgl$-           %26.2 = AsLogical                %26.1
  lgl$#-          %26.3 = Identical                %26.2, false
  void                    Branch                   %26.3 -> BB73 (if true) | BB27 (if false)
BB25   <- [24]
  fs              %25.0 = FrameState         R     0x5616631575b0+189: [%24.3], env=e2.3
  void                    Deopt              !v    %25.0   !
BB82   <- [80]
  (cls|spec|blt)  %82.0 = LdFun              !v    signal, e2.3
  fs              %82.1 = FrameState         R     0x5616631575b0+129: [%82.0], env=e2.3
  void                    Deopt              !v    %82.1, DeadCall@0x56166361e200[Call#2], %82.0   !
BB81   <- [80]
  goto BB22
BB73   <- [26]
  goto BB30
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    exists, e2.3
  lgl$#-          %27.1 = Identical                %27.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %27.1, %24.5 (CallTarget@0x56166361e200[Call#6])
  prom-           %27.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p7, e2.3
  prom-           %27.4 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p8, e2.3
  val?            %27.5 = StaticCall         !     exists[0x561663890f60](%27.3, %27.4) e2.3   <lgl$->
  lgl$#-          %27.6 = IsType                   %27.5 isA lgl$-
  cp              %27.7 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB30   <- [73, 29]
  lgl$-           %30.0 = Phi                      %29.3:BB29, %26.2:BB73
  cp              %30.1 = Checkpoint                -> BB32 (default) | BB31 (if assume failed)
BB29   <- [27]
  void                    Assume             D     %27.6, %27.7 (Typecheck@0x56166361e200[Type#14])
  lgl$-           %29.1 = CastType           d     dn %27.5
  lgl$-           %29.2 = AsLogical                %29.1
  lgl$-           %29.3 = LAnd                     %26.2, %29.2
  goto BB30
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x5616631575b0+238: [%26.2, %27.5], env=e2.3
  void                    Deopt              !v    %28.0   !
BB32   <- [30]
  lgl$#-          %32.0 = CheckTrueFalse     e     %30.0
  void                    Branch                   %32.0 -> BB68 (if true) | BB33 (if false)
BB31   <- [30]
  fs              %31.0 = FrameState         R     0x5616631575b0+245: [%30.0], env=e2.3
  void                    Deopt              !v    %31.0   !
BB68   <- [32]
  val?^ | miss    %68.0 = LdVar              eR    get, e2.3
  lgl$#-          %68.1 = Identical                %68.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %68.1, %30.1 (CallTarget@0x56166361e200[Call#22])
  prom-           %68.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p9, e2.3
  prom-           %68.4 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p10, e2.3
  val?            %68.5 = StaticCall         !     get[0x56166136bcd0](%68.3, missingArg, %68.4) { 0 2n } e2.3   <cls->
  void                    StVar              lW    def, %68.5, e2.3
  cp              %68.7 = Checkpoint                -> BB70 (default) | BB69 (if assume failed)
BB33   <- [32]
  val?^ | miss    %33.0 = LdVar              eR    exists, e2.3
  lgl$#-          %33.1 = Identical                %33.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %33.1, %30.1 (CallTarget@0x56166361e200[Call#8])
  val?            %33.3 = StaticCall         !     exists[0x5616620b1890](".ArgsEnv") e2.3   <lgl$->
  lgl$#-          %33.4 = IsType                   %33.3 isA lgl$-
  cp              %33.5 = Checkpoint                -> BB35 (default) | BB34 (if assume failed)
BB70   <- [68]
  val?^ | miss    %70.0 = LdVar              eR    checkCall, e2.3
  lgl$#-          %70.1 = Identical                %70.0, function(def, call, signal=warning0) <(rir::Di|...
  void                    Assume             D     %70.1, %68.7 (CallTarget@0x56166361e200[Call#24])
  prom-           %70.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p11 (!refl), e2.3
  prom-           %70.4 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p12, e2.3
  prom-           %70.5 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p13, e2.3
  val?            %70.6 = StaticCall         !     checkCall[0x56166336c870](%70.3, %70.4, %70.5) e2.3   <lgl$->
  lgl$#-          %70.7 = IsType                   %70.6 isA lgl$-
  cp              %70.8 = Checkpoint                -> BB72 (default) | BB71 (if assume failed)
BB69   <- [68]
  fs              %69.0 = FrameState         R     0x5616631575b0+923: [], env=e2.3
  void                    Deopt              !v    %69.0   !
BB35   <- [33]
  void                    Assume             D     %33.4, %33.5 (Typecheck@0x56166361e200[Type#15])
  lgl$-           %35.1 = CastType           d     dn %33.3
  lgl$-           %35.2 = AsLogical                %35.1
  lgl$#-          %35.3 = Identical                %35.2, false
  void                    Branch                   %35.3 -> BB67 (if true) | BB36 (if false)
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x5616631575b0+283: [%33.3], env=e2.3
  void                    Deopt              !v    %34.0   !
BB72   <- [70]
  void                    Assume             D     %70.7, %70.8 (Typecheck@0x56166361e200[Type#53])
  goto BB48
BB71   <- [70]
  fs              %71.0 = FrameState         R     0x5616631575b0+965: [%70.6], env=e2.3
  void                    Deopt              !v    %71.0   !
BB67   <- [35]
  goto BB39
BB36   <- [35]
  val?^ | miss    %36.0 = LdVar              eR    exists, e2.3
  lgl$#-          %36.1 = Identical                %36.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %36.1, %33.5 (CallTarget@0x56166361e200[Call#9])
  prom-           %36.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p14, e2.3
  prom-           %36.4 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p15, e2.3
  val?            %36.5 = StaticCall         !     exists[0x561663890f60](%36.3, %36.4) e2.3   <lgl$->
  lgl$#-          %36.6 = IsType                   %36.5 isA lgl$-
  cp              %36.7 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB48   <- [72, 47]
  val?            %48.0 = Phi                      %47.0:BB47, %70.6:BB72
  void                    Return             l     %48.0
BB39   <- [67, 38]
  lgl$-           %39.0 = Phi                      %38.3:BB38, %35.2:BB67
  cp              %39.1 = Checkpoint                -> BB41 (default) | BB40 (if assume failed)
BB38   <- [36]
  void                    Assume             D     %36.6, %36.7 (Typecheck@0x56166361e200[Type#18])
  lgl$-           %38.1 = CastType           d     dn %36.5
  lgl$-           %38.2 = AsLogical                %38.1
  lgl$-           %38.3 = LAnd                     %35.2, %38.2
  goto BB39
BB37   <- [36]
  fs              %37.0 = FrameState         R     0x5616631575b0+332: [%35.2, %36.5], env=e2.3
  void                    Deopt              !v    %37.0   !
BB41   <- [39]
  lgl$#-          %41.0 = CheckTrueFalse     e     %39.0
  void                    Branch                   %41.0 -> BB62 (if true) | BB42 (if false)
BB40   <- [39]
  fs              %40.0 = FrameState         R     0x5616631575b0+339: [%39.0], env=e2.3
  void                    Deopt              !v    %40.0   !
BB62   <- [41]
  val?^ | miss    %62.0 = LdVar              eR    get, e2.3
  lgl$#-          %62.1 = Identical                %62.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %62.1, %39.1 (CallTarget@0x56166361e200[Call#19])
  prom-           %62.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p16, e2.3
  prom-           %62.4 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p17, e2.3
  val?            %62.5 = StaticCall         !     get[0x56166136bcd0](%62.3, missingArg, %62.4) { 0 2n } e2.3   <cls->
  void                    StVar              lW    def, %62.5, e2.3
  cp              %62.7 = Checkpoint                -> BB64 (default) | BB63 (if assume failed)
BB42   <- [41]
  val?^ | miss    %42.0 = LdVar              eR    exists, e2.3
  lgl$#-          %42.1 = Identical                %42.0, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %42.1, %39.1 (CallTarget@0x56166361e200[Call#11])
  prom-           %42.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p18, e2.3
  prom-           %42.4 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p19, e2.3
  val?            %42.5 = StaticCall         !v    exists[0x561664a97e30](%42.3, missingArg, %42.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
  lgl$#-          %42.6 = IsType                   %42.5 isA lgl$-
  cp              %42.7 = Checkpoint                -> BB44 (default) | BB43 (if assume failed)
BB64   <- [62]
  val?^ | miss    %64.0 = LdVar              eR    checkCall, e2.3
  lgl$#-          %64.1 = Identical                %64.0, function(def, call, signal=warning0) <(rir::Di|...
  void                    Assume             D     %64.1, %62.7 (CallTarget@0x56166361e200[Call#21])
  prom-           %64.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p20 (!refl), e2.3
  prom-           %64.4 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p21, e2.3
  prom-           %64.5 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p22, e2.3
  val?            %64.6 = StaticCall         !     checkCall[0x56166336c870](%64.3, %64.4, %64.5) e2.3   <lgl$->
  lgl$#-          %64.7 = IsType                   %64.6 isA lgl$-
  cp              %64.8 = Checkpoint                -> BB66 (default) | BB65 (if assume failed)
BB63   <- [62]
  fs              %63.0 = FrameState         R     0x5616631575b0+812: [], env=e2.3
  void                    Deopt              !v    %63.0   !
BB44   <- [42]
  void                    Assume             D     %42.6, %42.7 (Typecheck@0x56166361e200[Type#21])
  lgl$-           %44.1 = CastType           d     dn %42.5
  lgl$#-          %44.2 = CheckTrueFalse     e     %44.1
  void                    Branch                   %44.2 -> BB49 (if true) | BB45 (if false)
BB43   <- [42]
  fs              %43.0 = FrameState         R     0x5616631575b0+399: [%42.5], env=e2.3
  void                    Deopt              !v    %43.0   !
BB66   <- [64]
  void                    Assume             D     %64.7, %64.8 (Typecheck@0x56166361e200[Type#46])
  goto BB47
BB65   <- [64]
  fs              %65.0 = FrameState         R     0x5616631575b0+854: [%64.6], env=e2.3
  void                    Deopt              !v    %65.0   !
BB49   <- [44]
  val?^ | miss    %49.0 = LdVar              eR    get, e2.3
  lgl$#-          %49.1 = Identical                %49.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %49.1, %42.7 (CallTarget@0x56166361e200[Call#12])
  prom-           %49.3 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p23, e2.3
  prom-           %49.4 = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p24, e2.3
  val?            %49.5 = StaticCall         !v    get[0x56166136bcd0](%49.3, missingArg, %49.4) { 0 2n } e2.3   <real$->
  lgl$#-          %49.6 = IsType                   %49.5 isA real$-
  cp              %49.7 = Checkpoint                -> BB51 (default) | BB50 (if assume failed)
BB45   <- [44]
  void                    Visible            v     
  goto BB46
BB47   <- [66, 46]
  val?            %47.0 = Phi                      true:BB46, %64.6:BB66
  goto BB48
BB51   <- [49]
  void                    Assume             D     %49.6, %49.7 (Typecheck@0x56166361e200[Type#24])
  real$-          %51.1 = CastType           d     dn %49.5
  void                    StVar              lW    argc, %51.1, e2.3
  cp              %51.3 = Checkpoint                -> BB53 (default) | BB52 (if assume failed)
BB50   <- [49]
  fs              %50.0 = FrameState         R     0x5616631575b0+466: [%49.5], env=e2.3
  void                    Deopt              !v    %50.0   !
BB46   <- [45, 60]
  goto BB47
BB53   <- [51]
  val?^ | miss    %53.0 = LdVar              eR    any, e2.3
  lgl$#-          %53.1 = Identical                <blt any>, %53.0   <true>
  void                    Assume             D     %53.1, %51.3 (DeadBranchReached@0x56166361e200[Test#1])
  val?^ | miss    %53.3 = LdVar              eR    length, e2.3
  lgl$#-          %53.4 = Identical                <blt length>, %53.3   <true>
  void                    Assume             D     %53.4, %51.3 (DeadBranchReached@0x56166361e200[Test#2])
  val?^ | miss    %53.6 = LdVar              eR    e, e2.3
  val?            %53.7 = Force!<wrapped>    !v    %53.6, e2.3   <code->
  lgl$#-          %53.8 = IsType                   %53.7 isA val?-
  cp              %53.9 = Checkpoint                -> BB55 (default) | BB54 (if assume failed)
BB52   <- [51]
  fs              %52.0 = FrameState         R     0x5616631575b0+480: [], env=e2.3
  void                    Deopt              !v    %52.0   !
BB55   <- [53]
  void                    Assume             D     %53.8, %53.9 (Typecheck@0x56166361e200[Type#32])
  val?-           %55.1 = CastType           d     dn %53.7   <code->
  (int|real)$-    %55.2 = CallSafeBuiltin    wed   length(%55.1)    <int$->
  lgl$#-          %55.3 = IsType                   %55.2 isA int$-
  cp              %55.4 = Checkpoint                -> BB57 (default) | BB56 (if assume failed)
BB54   <- [53]
  fs              %54.0 = FrameState         R     0x5616631575b0+623: [<blt any>, %51.1, <blt length>, %53.7], env=e2.3
  void                    Deopt              !v    %54.0   !
BB57   <- [55]
  void                    Assume             D     %55.3, %55.4 (Typecheck@0x56166361e200[Type#33])
  int$-           %57.1 = CastType           d     dn %55.2
  real$-          %57.2 = Sub                d     %57.1, 1, elided   <real$->
  lgl$-           %57.3 = Eq                 d     %51.1, %57.2, elided   <lgl$->
  val?            %57.4 = CallBuiltin        !v    any(%57.3) e2.3   <lgl$->
  lgl$#-          %57.5 = IsType                   %57.4 isA lgl$-
  cp              %57.6 = Checkpoint                -> BB59 (default) | BB58 (if assume failed)
BB56   <- [55]
  fs              %56.0 = FrameState         R     0x5616631575b0+645: [<blt any>, %51.1, %55.2], env=e2.3
  void                    Deopt              !v    %56.0   !
BB59   <- [57]
  void                    Assume             D     %57.5, %57.6 (Typecheck@0x56166361e200[Type#36])
  lgl$-           %59.1 = CastType           d     dn %57.4
  lgl$-           %59.2 = Not                d     %59.1, elided
  lgl$#-          %59.3 = CheckTrueFalse     e     %59.2
  void                    Branch                   %59.3 -> BB61 (if true) | BB60 (if false)
BB58   <- [57]
  fs              %58.0 = FrameState         R     0x5616631575b0+686: [%57.4], env=e2.3
  void                    Deopt              !v    %58.0   !
BB61   <- [59]
  (cls|spec|blt)  %61.0 = LdFun              !v    signal, e2.3
  fs              %61.1 = FrameState         R     0x5616631575b0+714: [%61.0], env=e2.3
  void                    Deopt              !v    %61.1, DeadCall@0x56166361e200[Call#16], %61.0   !
BB60   <- [59]
  void                    Visible            v     
  goto BB46
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  val?            %1.2  = Force<lazy>        !v    %1.1, e1.0   <code->
  lgl$#-          %1.3  = IsType                   %1.2 isA val+   <true>
  void                    Branch                   %1.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  goto BB3
BB4   <- [1]
  prom-           %4.0  = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p1, 
  goto BB3
BB3   <- [2, 4]
  (real|prom)-    %3.0  = Phi                      -1:BB2, %4.0:BB4
  val?            %3.1  = Extract1_1D        !v    %1.2, %3.0, e1.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.1
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  void                    Visible            v     
  void                    Return             l     -1
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  void                    Visible            v     
  void                    Return             l     -1
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  val?            %1.2  = Force<lazy>        !v    %1.1, e1.0   <code->
  lgl$#-          %1.3  = IsType                   %1.2 isA val+   <true>
  void                    Branch                   %1.3 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  goto BB3
BB4   <- [1]
  prom-           %4.0  = MkArg                    unboundValue, checkPrimopCall[0x5616638604b0]_p4, 
  goto BB3
BB3   <- [2, 4]
  (real|prom)-    %3.0  = Phi                      -1:BB2, %4.0:BB4
  val?            %3.1  = Extract1_1D        !v    %1.2, %3.0, e1.0   <code->
  void                    Visible            v     
  void                    Return             l     %3.1
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  void                    Visible            v     
  void                    Return             l     -1
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    noMissingAllowed, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     get, <0x561661be2e78>, e1.0
  val?            %1.2  = Call               !     %1.1(".GenericArgsEnv") e1.0   <env->
  void                    Return             l     %1.2
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     get, <0x561661be2e78>, e1.0
  val?            %1.2  = Call               !     %1.1(".GenericArgsEnv") e1.0   <env->
  void                    Return             l     %1.2
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    signal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     get, <0x561661be2e78>, e1.0
  val?            %1.2  = Call               !     %1.1(".ArgsEnv") e1.0   <env->
  void                    Return             l     %1.2
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     get, <0x561661be2e78>, e1.0
  val?            %1.2  = Call               !     %1.1(".ArgsEnv") e1.0   <env->
  void                    Return             l     %1.2
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    primopArgCounts, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 21:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 22:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    signal, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 23:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fn, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 24:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    primopArgCounts, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ checkPrimopCall[0x5616638604b0]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
