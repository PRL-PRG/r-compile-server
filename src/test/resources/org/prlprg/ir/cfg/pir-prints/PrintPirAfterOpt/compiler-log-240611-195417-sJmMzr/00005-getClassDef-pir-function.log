
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x55fdab331620]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1               │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getClassDef[0x55fdab331620]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  cp              %1.3  = Checkpoint                -> BB2 (default) | BB29 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    .getClassesFromCache, <env 0x55fda942b378>
  lgl$#-          %2.1  = Identical                %2.0, function(name) <(rir::DispatchTable*)0x55fdaad|...
  void                    Assume             D     %2.1, %1.3 (CallTarget@0x55fdaad86a30[Call#3])
  env             e2.3  = MkEnv              l     Class=%1.2, where=%1.1, package=%1.0, inherits(miss)=true, parent=<env 0x55fda942b378>, context 1
  prom-           %2.4  = MkArg                    unboundValue, getClassDef[0x55fdab331620]_p8 (!refl), e2.3
  ct              %2.5  = PushContext        lCL   %2.4, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x55fdaad|..., e2.3
  val?^           %2.6  = CastType                 up %2.4
  val?^ | miss    %2.7  = LdVar              eR    .Call, <env 0x55fda942b378>
  lgl$#-          %2.8  = Identical                <blt .Call>, %2.7   <true>
  cp              %2.9  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB29   <- [1]
  env             e29.0 = (MkEnv)            l     Class=%1.2, where=%1.1, package=%1.0, inherits(miss)=true, parent=<env 0x55fda942b378>, context 1
  fs              %29.1 = FrameState         R     0x55fda913e920+0: [], env=e29.0
  void                    Deopt              !v    %29.1
BB4   <- [2]
  void                    Assume             D     %2.8, %2.9 (DeadBranchReached@0x55fdaa35df98[Test#0])
  val?^ | miss    %4.1  = LdVar              eR    C_R_getClassFromCache, <env 0x55fda942b378>
  env             e4.2  = MkEnv              l     name=%2.6, parent=<env 0x55fda942b378>, context 1
  val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
  val?^ | miss    %4.4  = LdVar              eR    name, e4.2
  val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$+>
  val?^ | miss    %4.6  = LdVar              eR    .classTable, e4.2
  val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
  val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other>
  val?            %4.9  = PopContext         C     %4.8, %2.5   <(nil|other)>
  lgl$-           %4.10 = Is                       %4.9, list
  void                    StVar              lW    value, %4.9, e2.3
  cp              %4.12 = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55fda913e920+72: [], env=e2.3
  env             e3.1  = (MkEnv)            l     name=%2.6, parent=<env 0x55fda942b378>, context 1
  fs              %3.2  = FrameState         R     0x55fdaad90c80+17: [<blt .Call>, %2.8], env=e3.1, next=%3.0
  void                    Deopt              !v    %3.2   !
BB6   <- [4]
  val             %6.0  = ChkMissing         e     %4.9   <(nil|other)>
  lgl$#-          %6.1  = CheckTrueFalse     e     %4.10
  lgl$-           %6.2  = Is                       %6.0, NULL
  void                    Branch                   %6.1 -> BB28 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x55fda913e920+86: [], env=e2.3
  void                    Deopt              !v    %5.0   !
BB28   <- [6]
  (cls|spec|blt)  %28.0 = LdFun              !v    .resolveClassList, e2.3
  fs              %28.1 = FrameState         R     0x55fda913e920+121: [%28.0], env=e2.3
  void                    Deopt              !v    %28.1, DeadCall@0x55fdaad86a30[Call#4], %28.0   !
BB7   <- [6]
  lgl$#-          %7.0  = CheckTrueFalse     e     %6.2
  void                    Branch                   %7.0 -> BB10 (if true) | BB8 (if false)
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    classMetaName, e2.3
  lgl$#-          %10.1 = Identical                %10.0, function(name) <(rir::DispatchTable*)0x55fdab2|...
  void                    Assume             D     %10.1, %4.12 (CallTarget@0x55fdaad86a30[Call#5])
  prom-           %10.3 = MkArg                    unboundValue, getClassDef[0x55fdab331620]_p1, e2.3
  val?            %10.4 = StaticCall         !v    classMetaName[0x55fdab59f610](%10.3) e2.3   <str$->
  void                    StVar              lW    cname, %10.4, e2.3
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB8   <- [7]
  goto BB9
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    is.character, e2.3
  lgl$#-          %12.1 = Identical                <blt is.character>, %12.0   <true>
  void                    Assume             D     %12.1, %10.6 (DeadBranchReached@0x55fdaad86a30[Test#1])
  val?^ | miss    %12.3 = LdVar              eR    where, e2.3
  val?            %12.4 = Force!<lazy>       !v    %12.3, e2.3   <env->
  lgl$#-          %12.5 = CallSafeBuiltin    wed   is.character(%12.4)    <lgl$->
  void                    Branch                   %12.5 -> BB27 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x55fda913e920+248: [], env=e2.3
  void                    Deopt              !v    %11.0   !
BB9   <- [8, 23, 24]
  val?^ | miss    %9.0  = LdVar              eR    value, e2.3
  void                    Visible            v     
  val?            %9.2  = Force!<value>      !     %9.0, e2.3   <(nil|other)>
  void                    Return             l     %9.2
BB27   <- [12]
  val?^ | miss    %27.0 = LdVar              eR    where, e2.3
  val?            %27.1 = Force!             !v    %27.0, e2.3   <val?_>
  void                    StVar              lW    package, %27.1, e2.3
  goto BB14
BB13   <- [12]
  goto BB14
BB14   <- [13, 27]
  cp              %14.0 = Checkpoint                -> BB16 (default) | BB15 (if assume failed)
BB16   <- [14]
  val?^ | miss    %16.0 = LdVar              eR    isTRUE, e2.3
  lgl$#-          %16.1 = Identical                %16.0, function(x) <(rir::DispatchTable*)0x55fdaadf58|...
  void                    Assume             D     %16.1, %14.0 (CallTarget@0x55fdaad86a30[Call#8])
  prom-           %16.3 = MkArg                    unboundValue, getClassDef[0x55fdab331620]_p3, e2.3
  val?            %16.4 = StaticCall         !v    isTRUE[0x55fdab0cfbd0](%16.3) e2.3   <lgl$->
  lgl$#-          %16.5 = IsType                   %16.4 isA lgl$-
  cp              %16.6 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB15   <- [14]
  fs              %15.0 = FrameState         R     0x55fda913e920+378: [], env=e2.3
  void                    Deopt              !v    %15.0   !
BB18   <- [16]
  void                    Assume             D     %16.5, %16.6 (Typecheck@0x55fdaad86a30[Type#26])
  lgl$-           %18.1 = CastType           d     dn %16.4
  lgl$#-          %18.2 = CheckTrueFalse     e     %18.1
  void                    Branch                   %18.2 -> BB26 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x55fda913e920+410: [%16.4], env=e2.3
  void                    Deopt              !v    %17.0   !
BB26   <- [18]
  (cls|spec|blt)  %26.0 = LdFun              !v    .requirePackage, e2.3
  fs              %26.1 = FrameState         R     0x55fda913e920+431: [%26.0], env=e2.3
  void                    Deopt              !v    %26.1, DeadCall@0x55fdaad86a30[Call#10], %26.0   !
BB19   <- [18]
  val?^ | miss    %19.0 = LdVar              eR    is.environment, e2.3
  lgl$#-          %19.1 = Identical                <blt is.environment>, %19.0   <true>
  void                    Assume             D     %19.1, %16.6 (DeadBranchReached@0x55fdaad86a30[Test#2])
  val?^ | miss    %19.3 = LdVar              eR    package, e2.3
  val?            %19.4 = Force!<wrapped>    !v    %19.3, e2.3   <nil->
  lgl$#-          %19.5 = CallSafeBuiltin    wed   is.environment(%19.4)    <lgl$->
  cp              %19.6 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB21   <- [19]
  void                    Branch                   %19.5 -> BB25 (if true) | BB22 (if false)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x55fda913e920+563: [%19.5], env=e2.3
  void                    Deopt              !v    %20.0   !
BB25   <- [21]
  (cls|spec|blt)  %25.0 = LdFun              !v    get0, e2.3
  fs              %25.1 = FrameState         R     0x55fda913e920+584: [%25.0], env=e2.3
  void                    Deopt              !v    %25.1, DeadCall@0x55fdaad86a30[Call#12], %25.0   !
BB22   <- [21]
  val?^ | miss    %22.0 = LdVar              eR    value, e2.3
  lgl$#-          %22.1 = IsType                   %22.0 isA val?~- | miss
  void                    Assume             D     %22.1, %19.6 (Typecheck@0x55fdaad86a30[Type#36])
  val?~- | miss   %22.3 = CastType           d     dn %22.0
  val?-           %22.4 = Force!<value>            %22.3,    <nil->
  lgl$-           %22.5 = Is                       %22.4, NULL
  lgl$#-          %22.6 = CheckTrueFalse     e     %22.5
  void                    Branch                   %22.6 -> BB24 (if true) | BB23 (if false)
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    get0, e2.3
  lgl$#-          %24.1 = Identical                %24.0, function(x, envir=pos.to.env(-(1L)), mode="any|...
  void                    Assume             D     %24.1, %19.6 (CallTarget@0x55fdaad86a30[Call#13])
  prom-           %24.3 = MkArg                    unboundValue, getClassDef[0x55fdab331620]_p5, e2.3
  prom-           %24.4 = MkArg                    unboundValue, getClassDef[0x55fdab331620]_p6, e2.3
  prom-           %24.5 = MkArg                    unboundValue, getClassDef[0x55fdab331620]_p7, e2.3
  val?            %24.6 = StaticCall         !v    get0[0x55fdab0b00a0](%24.3, %24.4, missingArg, %24.5) { 0 1 3n } e2.3   <nil->
  void                    StVar              lW    value, %24.6, e2.3
  goto BB9
BB23   <- [22]
  goto BB9
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    length, <0x55fda8e24a90>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x55fdab331620]_p2, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2) e1.0   <int$->
  val?            %1.4  = Gt                 !v    %1.3, 1L, e1.0   <lgl$->
  lgl$#-          %1.5  = CheckTrueFalse     we    %1.4
  void                    Branch                   %1.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    Class, e1.0
  val?            %2.1  = Force              !v    %2.0, e1.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e1.0   <val?_>
  void                    Visible            v     
  goto BB3
BB4   <- [1]
  val?^ | miss    %4.0  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e1.0   <str$->
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.2:BB4, %2.2:BB2
  void                    Return             l     %3.0
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     nzchar, <0x55fda8e30240>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClassDef[0x55fdab331620]_p4, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <lgl->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <nil->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    cname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    inherits, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <lgl$->
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3

│ getClassDef[0x55fdab331620]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
