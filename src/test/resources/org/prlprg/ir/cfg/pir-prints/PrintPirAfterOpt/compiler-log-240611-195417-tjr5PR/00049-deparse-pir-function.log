
┌──────────────────────────────────────────────────────────────────────────────┐
│ deparse[0x5571d2860460]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1 miss: 2│
│ Properties:  Eager, ForceOrd: 0 1 2                                          │
├────── PIR Version After Optimizations
deparse[0x5571d2860460]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  int$~-          %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  env             e1.3  = MkEnv              l     expr=%1.2, width.cutoff=%1.1, backtick=%1.0, control(miss)=missingArg, nlines(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %1.4  = MkArg                    unboundValue, deparse[0x5571d2860460]_p0, e1.3
  val?^ | miss    %1.5  = CastType                 up %1.4
  void                    StArg              lW    control, %1.5, e1.3
  prom-           %1.7  = MkArg                    unboundValue, deparse[0x5571d2860460]_p1 (!refl), 
  val?^ | miss    %1.8  = CastType                 up %1.7
  void                    StArg              lW    nlines, %1.8, e1.3
  val+            %1.10 = Force!<lazy>       !vr   %1.2,    <val?->
  int$-           %1.11 = Force!<lazy>             %1.1,    <int$->
  val?            %1.12 = Force!<lazy>       !v    %1.0, e1.3   <lgl$->
  cp              %1.13 = Checkpoint                -> BB2 (default) | BB5 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    .deparseOpts, e1.3
  lgl$#-          %2.1  = Identical                %2.0, function(control) <(rir::DispatchTable*)0x5571|...
  void                    Assume             D     %2.1, %1.13 (CallTarget@0x5571d1fc7eb0[Call#4])
  val?^ | miss    %2.3  = LdVar              eR    control, e1.3
  val?            %2.4  = Force!<lazy>       !v    %2.3, e1.3   <str->
  prom-           %2.5  = MkArg                    %2.4, deparse[0x5571d2860460]_p2 (!refl), 
  val?            %2.6  = StaticCall         !v    .deparseOpts[0x5571d31f73f0](%2.5) e1.3   <real$->
  lgl$#-          %2.7  = IsType                   %2.6 isA real$-
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB5   <- [1]
  fs              %5.0  = FrameState         R     0x5571d216d120+37: [%1.10, %1.11, %1.12], env=e1.3
  void                    Deopt              !v    %5.0   !
BB4   <- [2]
  void                    Assume             D     %2.7, %2.8 (Typecheck@0x5571d1fc7eb0[Type#9])
  real$-          %4.1  = CastType           d     dn %2.6
  val?^ | miss    %4.2  = LdVar              eR    nlines, e1.3
  val?            %4.3  = Force!<lazy>       !v    %4.2, e1.3   <int$->
  val?            %4.4  = CallBuiltin        !     deparse(%1.10, %1.11, %1.12, %4.1, %4.3) e1.3
  void                    Return             l     %4.4
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5571d216d120+74: [%1.10, %1.11, %1.12, %2.6], env=e1.3
  void                    Deopt              !v    %3.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     c, <0x5571d0e1a940>, e1.0
  val?            %1.2  = Call               !     %1.1("keepNA", "keepInteger", "niceNames", "showAttributes") e1.0   <str->
  void                    Return             l     %1.2
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  void                    Visible            v     
  void                    Return             l     -1L
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    control, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str->
  void                    Return             l     %1.3

│ deparse[0x5571d2860460]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
