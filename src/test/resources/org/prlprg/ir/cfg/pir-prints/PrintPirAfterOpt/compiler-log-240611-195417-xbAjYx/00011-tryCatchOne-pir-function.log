
┌──────────────────────────────────────────────────────────────────────────────┐
│ tryCatchOne[0x559891404440]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
tryCatchOne[0x559891404440]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    3
  val?^           %1.1  = LdArg                    2
  val?^           %1.2  = LdArg                    1
  val?^           %1.3  = LdArg                    0
  env             e1.4  = MkEnv              l     expr=%1.3, name=%1.2, parentenv=%1.1, handler=%1.0, parent=?, context 1
  cls             %1.5  = MkCls                    doTryCatch, e1.4
  void                    StVar              lW    doTryCatch, %1.5, e1.4
  prom-           %1.7  = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p0, e1.4
  prom-           %1.8  = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p1, e1.4
  prom-           %1.9  = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p2, e1.4
  prom-           %1.10 = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p3, e1.4
  val?            %1.11 = StaticCall         !v    doTryCatch[0x55989139bda0](%1.7, %1.8, %1.9, %1.10) from %1.5 e1.4   <vec->
  void                    StVar              lW    value, %1.11, e1.4
  lgl$#-          %1.13 = IsType                   %1.11 isA val+   <true>
  lgl$#-          %1.14 = IsType                   %1.11 isA val?-
  cp              %1.15 = Checkpoint                -> BB2 (default) | BB53 (if assume failed)
BB2   <- [1]
  val             %2.0  = ChkMissing         e     %1.11
  void                    Assume             D     %1.13, %1.15 (DeadBranchReached@0x5598911c1b60[Test#0])
  void                    Assume             D     %1.14, %1.15 (Typecheck@0x5598911c1b60[Type#4])
  val?-           %2.3  = CastType           d     dn %1.11   <vec->
  val?            %2.4  = Extract2_1D        wed   %2.3, 1L, elided   <nil->
  lgl$-           %2.5  = Is                       %2.4, NULL
  lgl$#-          %2.6  = CheckTrueFalse     e     %2.5
  void                    Branch                   %2.6 -> BB13 (if true) | BB3 (if false)
BB53   <- [1]
  fs              %53.0 = FrameState         R     0x5598911b39f0+86: [], env=e1.4
  void                    Deopt              !v    %53.0   !
BB13   <- [2]
  val?            %13.0 = CallBuiltin        !v    geterrmessage() e1.4
  void                    StVar              lW    msg, %13.0, e1.4
  cp              %13.2 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB3   <- [2]
  val?^ | miss    %3.0  = LdVar              eR    is.character, e1.4
  lgl$#-          %3.1  = Identical                <blt is.character>, %3.0   <@?>
  void                    Branch                   %3.1 -> BB5 (if true) | BB4 (if false)
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    value, e1.4
  lgl$#-          %15.1 = IsType                   %15.0 isA val?~- | miss
  void                    Assume             D     %15.1, %13.2 (Typecheck@0x5598911c1b60[Type#21])
  val?~- | miss   %15.3 = CastType           d     dn %15.0
  val?-           %15.4 = Force!<value>            %15.3,    <vec->
  lgl$#-          %15.5 = IsType                   %15.4 isA val+   <true>
  void                    Assume             D     %15.5, %13.2 (DeadBranchReached@0x5598911c1b60[Test#7])
  val?            %15.7 = Extract2_1D        wed   %15.4, 2L, elided   <code->
  void                    StVar              lW    call, %15.7, e1.4
  cp              %15.9 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x5598911b39f0+585: [], env=e1.4
  void                    Deopt              !v    %14.0   !
BB5   <- [3]
  lgl$#-          %5.0  = CallSafeBuiltin    wed   is.character(%2.4)    <val?_>
  void                    Branch                   %5.0 -> BB12 (if true) | BB6 (if false)
BB4   <- [3]
  (cls|spec|blt)  %4.0  = LdFun              !v    is.character, e1.4
  fs              %4.1  = FrameState         R     0x5598911b39f0+183: [%4.0], env=e1.4
  void                    Deopt              !v    %4.1, DeadCall@0x5598911c1b60[Call#1], %4.0   !
BB17   <- [15]
  val?^ | miss    %17.0 = LdVar              eR    simpleError, e1.4
  lgl$#-          %17.1 = Identical                %17.0, function(message, call=NULL) <(rir::DispatchTa|...
  void                    Assume             D     %17.1, %15.9 (CallTarget@0x5598911c1b60[Call#3])
  prom-           %17.3 = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p5 (!refl), e1.4
  prom-           %17.4 = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p6 (!refl), e1.4
  ct              %17.5 = PushContext        lCL   %17.3, %17.4, simpleError(msg, call), function(message, call=NULL) <(rir::DispatchTa|..., e1.4
  val?^           %17.6 = CastType                 up %17.4
  val?^           %17.7 = CastType                 up %17.3
  str-            %17.8 = CallSafeBuiltin    wed   c("simpleError", "error", "condition")    <str->
  env             e17.9 = MkEnv              l     message=%17.7, call=%17.6, class=%17.8, parent=R_BaseNamespace, context 1
  prom-           %17.10 = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p7, e17.9
  prom-           %17.11 = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p11 (!refl), e17.9
  dots-           %17.12 = DotsList           l     class=%17.11
  ct              %17.13 = PushContext        lCL   %17.10, %17.12, structure(list(message=as.character(message), |..., function(.Data, ...) <(rir::DispatchTable*)0x5|..., e17.9
  val?^           %17.14 = CastType                 up %17.10
  env             e17.15 = MkEnv              l     .Data=%17.14, ...=%17.12, parent=R_BaseNamespace, context 1
  val?            %17.16 = Force!<lazy>       !vL   %17.14, e17.15   <vec+>
  lgl$-           %17.17 = Is                       %17.16, NULL
  lgl$#-          %17.18 = CheckTrueFalse     e     %17.17
  void                    Branch                   %17.18 -> BB52 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x5598911b39f0+652: [], env=e1.4
  void                    Deopt              !v    %16.0   !
BB12   <- [5]
  void                    StVar              lW    msg, %2.4, e1.4
  val?            %12.1 = Extract2_1D        wed   %2.3, 2L, elided   <val?_>
  void                    StVar              lW    call, %12.1, e1.4
  (cls|spec|blt)  %12.3 = LdFun              !v    simpleError, e1.4
  fs              %12.4 = FrameState         R     0x5598911b39f0+512: [%12.3], env=e1.4
  void                    Deopt              !v    %12.4, DeadCall@0x5598911c1b60[Call#2], %12.3   !
BB6   <- [5]
  void                    StVar              lW    cond, %2.4, e1.4
  goto BB7
BB52   <- [17]
  fs              %52.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %52.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%52.0
  (cls|spec|blt)  %52.2 = LdFun              !v    warning, R_BaseNamespace
  fs              %52.3 = FrameState         R     0x5598911c99a0+35: [%52.2], env=e17.15, next=%52.1
  void                    Deopt              !v    %52.3, DeadCall@0x559890915168[Call#0], %52.2   !
BB18   <- [17]
  val?            %18.0 = NamedCall          !v    <blt list>(class=%17.11) e17.15   <vec$+>
  void                    StVar              lW    attrib, %18.0, e17.15
  lgl$#-          %18.2 = IsType                   %18.0 isA val?+
  cp              %18.3 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB7   <- [6, 24]
  cp              %7.0  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB20   <- [18]
  val?^ | miss    %20.0 = LdVar              eR    length, e17.15
  lgl$#-          %20.1 = Identical                <blt length>, %20.0   <true>
  void                    Assume             D     %20.1, %18.3 (DeadBranchReached@0x559890915168[Test#0])
  val             %20.3 = ChkMissing         e     %18.0
  void                    Assume             D     %18.2, %18.3 (Typecheck@0x559890915168[Type#1])
  val?+           %20.5 = CastType           d     dn %18.0   <vec$+>
  (int|real)$-    %20.6 = CallSafeBuiltin    wed   length(%20.5)    <int$->
  lgl$#-          %20.7 = IsType                   %20.6 isA int$-
  cp              %20.8 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %19.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%19.0
  fs              %19.2 = FrameState         R     0x5598911c99a0+113: [], env=e17.15, next=%19.1
  void                    Deopt              !v    %19.2   !
BB9   <- [7]
  val?^ | miss    %9.0  = LdVar              eR    value, e1.4
  lgl$#-          %9.1  = IsType                   %9.0 isA val?~- | miss
  void                    Assume             D     %9.1, %7.0 (Typecheck@0x5598911c1b60[Type#26])
  val?~- | miss   %9.3  = CastType           d     dn %9.0
  val?-           %9.4  = Force!<value>            %9.3,    <vec->
  lgl$#-          %9.5  = IsType                   %9.4 isA val+   <true>
  void                    Assume             D     %9.5, %7.0 (DeadBranchReached@0x5598911c1b60[Test#8])
  val?            %9.7  = Extract2_1D        wed   %9.4, 3L, elided   <cls->
  cp              %9.8  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5598911b39f0+703: [], env=e1.4
  void                    Deopt              !v    %8.0   !
BB22   <- [20]
  void                    Assume             D     %20.7, %20.8 (Typecheck@0x559890915168[Type#4])
  int$-           %22.1 = CastType           d     dn %20.6
  lgl$#-          %22.2 = CheckTrueFalse     e     %22.1
  void                    Branch                   %22.2 -> BB25 (if true) | BB23 (if false)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %21.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%21.0
  fs              %21.2 = FrameState         R     0x5598911c99a0+204: [%20.6], env=e17.15, next=%21.1
  void                    Deopt              !v    %21.2   !
BB11   <- [9]
  (cls|spec|blt)  %11.0 = ChkFunction        e     %9.7
  prom-           %11.1 = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p4 (!refl), e1.4
  val+            %11.2 = CallSafeBuiltin          bodyCode(%11.0) 
  lgl$#-          %11.3 = Identical                %11.2, <(rir::DispatchTable*)0x55988fb15620>
  env             e11.4 = CallSafeBuiltin          environment(%11.0) 
  val?^           %11.5 = CastType                 up %11.1
  void                    Assume             D     %11.3, %9.8 (CallTarget@0x5598911c1b60[Call#4])
  void                    Invisible          v     
  env             e11.8 = (MkEnv)            l     e=%11.5, parent=e11.4, context 0
  void                    StVarSuper         lRW   threw, true, e11.8
  void                    Return             l     true
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x5598911b39f0+755: [%9.7], env=e1.4
  void                    Deopt              !v    %10.0   !
BB25   <- [22]
  val?^ | miss    %25.0 = LdVar              eR    c, e17.15
  lgl$#-          %25.1 = Identical                <blt c>, %25.0   <true>
  void                    Assume             D     %25.1, %20.8 (DeadBranchReached@0x559890915168[Test#1])
  str-            %25.3 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
  void                    StVar              lW    specials, %25.3, e17.15
  cp              %25.5 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB23   <- [22]
  goto BB24
BB27   <- [25]
  val?^ | miss    %27.0 = LdVar              eR    names, e17.15
  lgl$#-          %27.1 = Identical                <blt names>, %27.0   <true>
  void                    Assume             D     %27.1, %25.5 (DeadBranchReached@0x559890915168[Test#2])
  val+            %27.3 = CallSafeBuiltin    wed   names(%20.5)    <str$->
  void                    StVar              lW    attrnames, %27.3, e17.15
  cp              %27.5 = Checkpoint                -> BB29 (default) | BB28 (if assume failed)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %26.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%26.0
  fs              %26.2 = FrameState         R     0x5598911c99a0+361: [], env=e17.15, next=%26.1
  void                    Deopt              !v    %26.2   !
BB24   <- [23, 47]
  val?^ | miss    %24.0 = LdVar              eR    .Data, e17.15
  val?            %24.1 = Force!<value>      !v    %24.0, e17.15   <vec>
  val?            %24.2 = PopContext         C     %24.1, %17.13   <vec>
  val?            %24.3 = PopContext         C     %24.2, %17.5   <vec>
  void                    StVar              lW    cond, %24.3, e1.4
  goto BB7
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    match, e17.15
  lgl$#-          %29.1 = Identical                %29.0, function(x, table, nomatch=NA, incomparables=N|...
  void                    Assume             D     %29.1, %27.5 (CallTarget@0x559890915168[Call#5])
  val+            %29.3 = CallSafeBuiltin    wed   match(%27.3, %25.3, NA, nil)    <int$->
  lgl$#-          %29.4 = IsType                   %29.3 isA int$-
  cp              %29.5 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB28   <- [27]
  fs              %28.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %28.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%28.0
  fs              %28.2 = FrameState         R     0x5598911c99a0+466: [], env=e17.15, next=%28.1
  void                    Deopt              !v    %28.2   !
BB31   <- [29]
  void                    Assume             D     %29.4, %29.5 (Typecheck@0x559890915168[Type#11])
  int$-           %31.1 = CastType           d     dn %29.3
  void                    StVar              lW    m, %31.1, e17.15
  cp              %31.3 = Checkpoint                -> BB33 (default) | BB32 (if assume failed)
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %30.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%30.0
  prom-           %30.2 = MkArg                    %25.3, tryCatchOne[0x559891404440]_p13 (!refl), e17.15
  val?~           %30.3 = CastType                 up %30.2
  prom-           %30.4 = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p12 (!refl), e17.15
  val?^           %30.5 = CastType                 up %30.4
  fs              %30.6 = FrameState         R     0x5598911c99a0+503: [], env=e17.15, next=%30.1
  env             e30.7 = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%30.3, x=%30.5, parent=R_BaseNamespace, context 0
  fs              %30.8 = FrameState         R     0x55988fe61d70+69: [%29.3], env=e30.7, next=%30.6
  void                    Deopt              !v    %30.8   !
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    is.na, e17.15
  lgl$#-          %33.1 = Identical                <blt is.na>, %33.0   <true>
  void                    Assume             D     %33.1, %31.3 (DeadBranchReached@0x559890915168[Test#3])
  lgl$-           %33.3 = CallSafeBuiltin    wed   is.na(%31.1)    <lgl$->
  lgl$-           %33.4 = Not                d     %33.3, elided   <lgl$->
  void                    StVar              lW    ok, %33.4, e17.15
  cp              %33.6 = Checkpoint                -> BB35 (default) | BB34 (if assume failed)
BB32   <- [31]
  fs              %32.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %32.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%32.0
  fs              %32.2 = FrameState         R     0x5598911c99a0+517: [], env=e17.15, next=%32.1
  void                    Deopt              !v    %32.2   !
BB35   <- [33]
  val?^ | miss    %35.0 = LdVar              eR    any, e17.15
  lgl$#-          %35.1 = Identical                <blt any>, %35.0   <true>
  void                    Assume             D     %35.1, %33.6 (DeadBranchReached@0x559890915168[Test#4])
  val?            %35.3 = CallBuiltin        !v    any(%33.4) e17.15   <lgl$->
  lgl$#-          %35.4 = IsType                   %35.3 isA lgl$-
  cp              %35.5 = Checkpoint                -> BB37 (default) | BB36 (if assume failed)
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %34.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%34.0
  fs              %34.2 = FrameState         R     0x5598911c99a0+623: [], env=e17.15, next=%34.1
  void                    Deopt              !v    %34.2   !
BB37   <- [35]
  void                    Assume             D     %35.4, %35.5 (Typecheck@0x559890915168[Type#17])
  lgl$-           %37.1 = CastType           d     dn %35.3
  lgl$#-          %37.2 = CheckTrueFalse     e     %37.1
  void                    Branch                   %37.2 -> BB49 (if true) | BB38 (if false)
BB36   <- [35]
  fs              %36.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %36.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%36.0
  fs              %36.2 = FrameState         R     0x5598911c99a0+714: [%35.3], env=e17.15, next=%36.1
  void                    Deopt              !v    %36.2   !
BB49   <- [37]
  val?^ | miss    %49.0 = LdVar              eR    c, e17.15
  lgl$#-          %49.1 = Identical                <blt c>, %49.0   <@?>
  void                    Branch                   %49.1 -> BB51 (if true) | BB50 (if false)
BB38   <- [37]
  val?^ | miss    %38.0 = LdVar              eR    any, e17.15
  lgl$#-          %38.1 = Identical                <blt any>, %38.0   <true>
  void                    Assume             D     %38.1, %35.5 (DeadBranchReached@0x559890915168[Test#10])
  (cls|spec|blt)  %38.3 = LdFun              !v    [[, <0x55988f32bc48>, e17.15
  prom-           %38.4 = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p16, e17.15
  val?            %38.5 = NamedCall          !v    %38.3(%38.4, "class", exact=true) e17.15   <str->
  lgl$#-          %38.6 = IsType                   %38.5 isA val?-
  cp              %38.7 = Checkpoint                -> BB40 (default) | BB39 (if assume failed)
BB51   <- [49]
  fs              %51.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %51.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%51.0
  str-            %51.2 = CallSafeBuiltin    wed   c("dim", "dimnames", "names", "tsp", "levels")    <val?_>
  void                    StVar              lW    replace, %51.2, e17.15
  (cls|spec|blt)  %51.4 = LdFun              !v    <-, e17.15
  fs              %51.5 = FrameState         R     0x5598911c99a0+876: [%51.4], env=e17.15, next=%51.1
  void                    Deopt              !v    %51.5, DeadCall@0x559890915168[Call#9], %51.4   !
BB50   <- [49]
  fs              %50.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %50.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%50.0
  (cls|spec|blt)  %50.2 = LdFun              !v    c, e17.15
  fs              %50.3 = FrameState         R     0x5598911c99a0+758: [%50.2], env=e17.15, next=%50.1
  void                    Deopt              !v    %50.3, DeadCall@0x559890915168[Call#8], %50.2   !
BB40   <- [38]
  void                    Assume             D     %38.6, %38.7 (Typecheck@0x559890915168[Type#38])
  val?-           %40.1 = CastType           d     dn %38.5   <str->
  lgl-            %40.2 = Eq                 wed   %40.1, "factor", elided   <lgl->
  val?            %40.3 = CallBuiltin        !v    any(%40.2) e17.15   <lgl$->
  lgl$#-          %40.4 = IsType                   %40.3 isA lgl$-
  cp              %40.5 = Checkpoint                -> BB42 (default) | BB41 (if assume failed)
BB39   <- [38]
  fs              %39.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %39.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%39.0
  fs              %39.2 = FrameState         R     0x5598911c99a0+1023: [<blt any>, %38.5], env=e17.15, next=%39.1
  void                    Deopt              !v    %39.2   !
BB42   <- [40]
  void                    Assume             D     %40.4, %40.5 (Typecheck@0x559890915168[Type#40])
  lgl$-           %42.1 = CastType           d     dn %40.3
  lgl$-           %42.2 = AsLogical                %42.1
  lgl$#-          %42.3 = Identical                %42.2, false
  void                    Branch                   %42.3 -> BB44 (if true) | BB43 (if false)
BB41   <- [40]
  fs              %41.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %41.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%41.0
  fs              %41.2 = FrameState         R     0x5598911c99a0+1057: [%40.3], env=e17.15, next=%41.1
  void                    Deopt              !v    %41.2   !
BB44   <- [42]
  lgl$#-          %44.0 = CheckTrueFalse     e     %42.2
  void                    Branch                   %44.0 -> BB48 (if true) | BB45 (if false)
BB43   <- [42]
  fs              %43.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %43.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%43.0
  (cls|spec|blt)  %43.2 = LdFun              !v    typeof, e17.15
  fs              %43.3 = FrameState         R     0x5598911c99a0+1074: [%42.2, %43.2], env=e17.15, next=%43.1
  void                    Deopt              !v    %43.3, DeadCall@0x559890915168[Call#14], %43.2   !
BB48   <- [44]
  fs              %48.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %48.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%48.0
  (cls|spec|blt)  %48.2 = LdFun              !v    storage.mode<-, e17.15
  fs              %48.3 = FrameState         R     0x5598911c99a0+1142: ["integer", %48.2], env=e17.15, next=%48.1
  void                    Deopt              !v    %48.3, DeadCall@0x559890915168[Call#15], %48.2   !
BB45   <- [44]
  val?^ | miss    %45.0 = LdVar              eR    c, e17.15
  lgl$#-          %45.1 = Identical                <blt c>, %45.0   <true>
  void                    Assume             D     %45.1, %40.5 (DeadBranchReached@0x559890915168[Test#11])
  val?^ | miss    %45.3 = LdVar              eR    attributes, e17.15
  lgl$#-          %45.4 = Identical                <blt attributes>, %45.3   <true>
  void                    Assume             D     %45.4, %40.5 (DeadBranchReached@0x559890915168[Test#12])
  val?^ | miss    %45.6 = LdVar              eR    .Data, e17.15
  val?            %45.7 = Force!<wrapped>    !v    %45.6, e17.15   <vec+>
  val?            %45.8 = CallBuiltin        !v    attributes(%45.7) e17.15   <vec$+>
  lgl$#-          %45.9 = IsType                   %45.8 isA val?+
  cp              %45.10 = Checkpoint                -> BB47 (default) | BB46 (if assume failed)
BB47   <- [45]
  val?^ | miss    %47.0 = LdVar              eR    attrib, e17.15
  lgl$#-          %47.1 = IsType                   %47.0 isA val?~+ | miss
  void                    Assume             D     %47.1, %45.10 (Typecheck@0x559890915168[Type#51])
  val?~+ | miss   %47.3 = CastType           d     dn %47.0
  val?+           %47.4 = Force!<value>            %47.3,    <vec$+>
  void                    Assume             D     %45.9, %45.10 (Typecheck@0x559890915168[Type#50])
  val?+           %47.6 = CastType           d     dn %45.8   <vec$+>
  val+            %47.7 = CallSafeBuiltin    wed   c(%47.6, %47.4)    <vec+>
  (cls|spec|blt)  %47.8 = LdFun              !v    attributes<-, <0x55988f32c128>, e17.15
  val?^ | miss    %47.9 = LdVar              eR    .Data, e17.15
  val?            %47.10 = Force!<wrapped>    !v    %47.9, e17.15   <vec+>
  val?            %47.11 = NamedCall          !v    %47.8(%47.10, value=%47.7) e17.15
  void                    StVar              lW    .Data, %47.11, e17.15
  goto BB24
BB46   <- [45]
  fs              %46.0 = FrameState         R     0x5598911b39f0+689: [], env=e1.4
  fs              %46.1 = FrameState         R     0x5598911c5930+164: [], env=e17.9, next=%46.0
  fs              %46.2 = FrameState         R     0x5598911c99a0+1361: [<blt c>, %45.8], env=e17.15, next=%46.1
  void                    Deopt              !v    %46.2   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    expr, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    NonLocalReturn     !     %1.3, e1.0
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    parentenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    handler, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    cond, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    msg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     list, <0x55988f3405c0>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p8, e1.0
  prom-           %1.3  = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p10, e1.0
  val?            %1.4  = NamedCall          !     %1.1(message=%1.2, call=%1.3) e1.0   <vec+>
  void                    Return             l     %1.4
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.character, <0x55988f339040>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, tryCatchOne[0x559891404440]_p9, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    message, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <code->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    attrnames, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    specials, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    attrib, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ tryCatchOne[0x559891404440]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
