
┌──────────────────────────────────────────────────────────────────────────────┐
│ [0x5558d55f0e30]                                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
[0x5558d55f0e30]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  val?^ | miss    %1.2  = LdVar              eR    class, <env 0x5558d398c378>
  lgl$#-          %1.3  = Identical                <blt class>, %1.2   <true>
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB91 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.3, %1.4 (DeadBranchReached@0x5558d47c5278[Test#0])
  env             e2.1  = MkEnv              l     object=%1.1, class2=%1.0, parent=<env 0x5558d398c378>, context 1
  val+            %2.2  = Force!<lazy>       !vr   %1.1,    <cls->
  val?            %2.3  = CallBuiltin        !v    class(%2.2) e2.1   <str$->
  void                    StVar              lW    class1, %2.3, e2.1
  lgl$#-          %2.5  = IsType                   %2.3 isA val?-
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB91   <- [1]
  env             e91.0 = (MkEnv)            l     object=%1.1, class2=%1.0, parent=<env 0x5558d398c378>, context 1
  fs              %91.1 = FrameState         R     0x5558d5594420+17: [<blt class>, %1.3], env=e91.0
  void                    Deopt              !v    %91.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    length, e2.1
  lgl$#-          %4.1  = Identical                <blt length>, %4.0   <true>
  void                    Assume             D     %4.1, %2.6 (DeadBranchReached@0x5558d47c5278[Test#1])
  val             %4.3  = ChkMissing         e     %2.3
  void                    Assume             D     %2.5, %2.6 (Typecheck@0x5558d47c5278[Type#2])
  val?-           %4.5  = CastType           d     dn %2.3   <str$->
  (int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
  lgl$#-          %4.7  = IsType                   %4.6 isA int$-
  cp              %4.8  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5558d5594420+105: [], env=e2.1
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.7, %4.8 (Typecheck@0x5558d47c5278[Type#5])
  int$-           %6.1  = CastType           d     dn %4.6
  lgl$-           %6.2  = Gt                 d     %6.1, 1L, elided   <lgl$->
  void                    StVar              lW    S3Case, %6.2, e2.1
  lgl$#-          %6.4  = CheckTrueFalse     e     %6.2
  void                    Branch                   %6.4 -> BB90 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5558d5594420+196: [%4.6], env=e2.1
  void                    Deopt              !v    %5.0   !
BB90   <- [6]
  val?            %90.0 = Extract2_1D        wed   %4.5, 1L, elided   <val?_>
  void                    StVar              lW    class1, %90.0, e2.1
  goto BB8
BB7   <- [6]
  goto BB8
BB8   <- [7, 90]
  cp              %8.0  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB10   <- [8]
  lgl$-           %10.0 = Missing            eR    class2, e2.1
  lgl$#-          %10.1 = CheckTrueFalse     e     %10.0
  void                    Branch                   %10.1 -> BB89 (if true) | BB11 (if false)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x5558d5594420+314: [], env=e2.1
  void                    Deopt              !v    %9.0   !
BB89   <- [10]
  (cls|spec|blt)  %89.0 = LdFun              !v    extends, e2.1
  fs              %89.1 = FrameState         R     0x5558d5594420+336: [%89.0], env=e2.1
  void                    Deopt              !v    %89.1, DeadCall@0x5558d47c5278[Call#2], %89.0   !
BB11   <- [10]
  val?^ | miss    %11.0 = LdVar              eR    getClassDef, e2.1
  lgl$#-          %11.1 = Identical                %11.0, function(Class, where=topenv(parent.frame()), |...
  void                    Assume             D     %11.1, %8.0 (CallTarget@0x5558d47c5278[Call#3])
  prom-           %11.3 = MkArg                    unboundValue, [0x5558d55f0e30]_p0 (!refl), e2.1
  val?            %11.4 = StaticCall         !v    getClassDef[0x5558d574c1b0](%11.3) e2.1   <other>
  void                    StVar              lW    class1Def, %11.4, e2.1
  void                    StVar              lW    class2Def, nil, e2.1
  cp              %11.7 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB13   <- [11]
  val?^ | miss    %13.0 = LdVar              eR    is.character, e2.1
  lgl$#-          %13.1 = Identical                <blt is.character>, %13.0   <true>
  void                    Assume             D     %13.1, %11.7 (DeadBranchReached@0x5558d47c5278[Test#3])
  val?^ | miss    %13.3 = LdVar              eR    class2, e2.1
  val?            %13.4 = Force!<value>      !v    %13.3, e2.1   <str$->
  lgl$#-          %13.5 = CallSafeBuiltin    wed   is.character(%13.4)    <lgl$->
  void                    Branch                   %13.5 -> BB15 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x5558d5594420+430: [], env=e2.1
  void                    Deopt              !v    %12.0   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    class1Def, e2.1
  val?            %15.1 = Force!<value>      !v    %15.0, e2.1   <other>
  lgl$-           %15.2 = Is                       %15.1, NULL
  cp              %15.3 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  val?^ | miss    %14.0 = LdVar              eR    class2, e2.1
  val?            %14.1 = Force!             !v    %14.0, e2.1   <val?_>
  void                    StVar              lW    class2Def, %14.1, e2.1
  (cls|spec|blt)  %14.3 = LdFun              !v    @, e2.1
  fs              %14.4 = FrameState         R     0x5558d5594420+566: [%14.3], env=e2.1
  void                    Deopt              !v    %14.4, DeadCall@0x5558d47c5278[Call#5], %14.3   !
BB17   <- [15]
  lgl$#-          %17.0 = CheckTrueFalse     e     %15.2
  void                    Branch                   %17.0 -> BB88 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x5558d5594420+621: [%15.1], env=e2.1
  void                    Deopt              !v    %16.0   !
BB88   <- [17]
  (cls|spec|blt)  %88.0 = LdFun              !v    inherits, e2.1
  fs              %88.1 = FrameState         R     0x5558d5594420+647: [%88.0], env=e2.1
  void                    Deopt              !v    %88.1, DeadCall@0x5558d47c5278[Call#6], %88.0   !
BB18   <- [17]
  val?^ | miss    %18.0 = LdVar              eR    class2Def, e2.1
  lgl$#-          %18.1 = IsType                   %18.0 isA val?~- | miss
  void                    Assume             D     %18.1, %15.3 (Typecheck@0x5558d47c5278[Type#25])
  val?~- | miss   %18.3 = CastType           d     dn %18.0
  val?-           %18.4 = Force!<value>            %18.3,    <nil->
  lgl$-           %18.5 = Is                       %18.4, NULL
  lgl$#-          %18.6 = CheckTrueFalse     e     %18.5
  void                    Branch                   %18.6 -> BB87 (if true) | BB19 (if false)
BB87   <- [18]
  val?^ | miss    %87.0 = LdVar              eR    getClassDef, e2.1
  lgl$#-          %87.1 = Identical                %87.0, function(Class, where=topenv(parent.frame()), |...
  void                    Assume             D     %87.1, %15.3 (CallTarget@0x5558d47c5278[Call#7])
  prom-           %87.3 = MkArg                    unboundValue, [0x5558d55f0e30]_p10, e2.1
  prom-           %87.4 = MkArg                    unboundValue, [0x5558d55f0e30]_p11, e2.1
  prom-           %87.5 = MkArg                    unboundValue, [0x5558d55f0e30]_p13, e2.1
  val?            %87.6 = StaticCall         !v    getClassDef[0x5558d562ca30](%87.3, %87.4, %87.5) e2.1   <other>
  void                    StVar              lW    class2Def, %87.6, e2.1
  goto BB20
BB19   <- [18]
  goto BB20
BB20   <- [19, 87]
  cp              %20.0 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB22   <- [20]
  val?^ | miss    %22.0 = LdVar              eR    S3Case, e2.1
  lgl$#-          %22.1 = IsType                   %22.0 isA lgl$-
  void                    Assume             D     %22.1, %20.0 (Typecheck@0x5558d47c5278[Type#36])
  lgl$-           %22.3 = CastType           d     dn %22.0
  lgl$-           %22.4 = AsLogical                %22.3
  lgl$#-          %22.5 = Identical                %22.4, true
  void                    Branch                   %22.5 -> BB86 (if true) | BB23 (if false)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x5558d5594420+771: [], env=e2.1
  void                    Deopt              !v    %21.0   !
BB86   <- [22]
  goto BB26
BB23   <- [22]
  val?^ | miss    %23.0 = LdVar              eR    is.object, e2.1
  lgl$#-          %23.1 = Identical                <blt is.object>, %23.0   <true>
  void                    Assume             D     %23.1, %20.0 (DeadBranchReached@0x5558d47c5278[Test#4])
  val?^ | miss    %23.3 = LdVar              eR    object, e2.1
  val?            %23.4 = Force!<wrapped>    !v    %23.3, e2.1   <cls->
  lgl$#-          %23.5 = CallSafeBuiltin    wed   is.object(%23.4)    <lgl$->
  void                    Branch                   %23.5 -> BB83 (if true) | BB24 (if false)
BB26   <- [86, 25]
  lgl$-           %26.0 = Phi                      %25.2:BB25, %22.4:BB86
  lgl$-           %26.1 = AsLogical                %26.0
  lgl$#-          %26.2 = Identical                %26.1, false
  void                    StVar              lW    S3Case, %26.0, e2.1
  void                    Branch                   %26.2 -> BB82 (if true) | BB27 (if false)
BB83   <- [23]
  val?^ | miss    %83.0 = LdVar              eR    isS4, e2.1
  lgl$#-          %83.1 = Identical                <blt isS4>, %83.0   <@?>
  void                    Branch                   %83.1 -> BB85 (if true) | BB84 (if false)
BB24   <- [23]
  goto BB25
BB82   <- [26]
  goto BB32
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    class2Def, e2.1
  val?            %27.1 = Force!             !v    %27.0, e2.1   <val?_>
  lgl$-           %27.2 = Is                       %27.1, NULL
  lgl$-           %27.3 = AsLogical                %27.2
  lgl$#-          %27.4 = Identical                %27.3, true
  lgl$-           %27.5 = AsLogical                %27.3
  lgl$#-          %27.6 = Identical                %27.5, true
  lgl$-           %27.7 = AsLogical                %27.5
  lgl$-           %27.8 = LAnd                     %26.1, %27.7
  void                    Branch                   %27.4 -> BB29 (if true) | BB28 (if false)
BB85   <- [83]
  val?^ | miss    %85.0 = LdVar              eR    object, e2.1
  val?            %85.1 = Force!             !v    %85.0, e2.1   <val?_>
  lgl$#-          %85.2 = CallSafeBuiltin    wed   isS4(%85.1)    <val?_>
  lgl$#-          %85.3 = Not                d     %85.2, elided
  lgl$-           %85.4 = LAnd                     %23.5, %85.3
  goto BB25
BB84   <- [83]
  (cls|spec|blt)  %84.0 = LdFun              !v    isS4, e2.1
  fs              %84.1 = FrameState         R     0x5558d5594420+923: [%22.4, %23.5, %84.0], env=e2.1
  void                    Deopt              !v    %84.1, DeadCall@0x5558d47c5278[Call#14], %84.0   !
BB25   <- [24, 85]
  lgl$-           %25.0 = Phi                      %85.4:BB85, %23.5:BB24
  lgl$-           %25.1 = AsLogical                %25.0
  lgl$-           %25.2 = LOr                      %22.4, %25.1
  goto BB26
BB32   <- [82, 31]
  lgl$-           %32.0 = Phi                      %27.8:BB31, %26.1:BB82
  void                    StVar              lW    S3Case, %32.0, e2.1
  cp              %32.2 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB29   <- [27]
  void                    Branch                   %27.6 -> BB31 (if true) | BB30 (if false)
BB28   <- [27]
  (cls|spec|blt)  %28.0 = LdFun              !v    %in%, e2.1
  fs              %28.1 = FrameState         R     0x5558d5594420+1058: [%26.1, %27.3, %28.0], env=e2.1
  void                    Deopt              !v    %28.1, DeadCall@0x5558d47c5278[Call#15], %28.0   !
BB34   <- [32]
  lgl$#-          %34.0 = CheckTrueFalse     e     %32.0
  void                    Branch                   %34.0 -> BB81 (if true) | BB35 (if false)
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x5558d5594420+1160: [], env=e2.1
  void                    Deopt              !v    %33.0   !
BB31   <- [29]
  goto BB32
BB30   <- [29]
  (cls|spec|blt)  %30.0 = LdFun              !v    extends, e2.1
  fs              %30.1 = FrameState         R     0x5558d5594420+1109: [%26.1, %27.5, %30.0], env=e2.1
  void                    Deopt              !v    %30.1, DeadCall@0x5558d47c5278[Call#16], %30.0   !
BB81   <- [34]
  (cls|spec|blt)  %81.0 = LdFun              !v    inherits, e2.1
  fs              %81.1 = FrameState         R     0x5558d5594420+2067: [%81.0], env=e2.1
  void                    Deopt              !v    %81.1, DeadCall@0x5558d47c5278[Call#43], %81.0   !
BB35   <- [34]
  val?^ | miss    %35.0 = LdVar              eR    .identC, e2.1
  lgl$#-          %35.1 = Identical                %35.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Assume             D     %35.1, %32.2 (CallTarget@0x5558d47c5278[Call#17])
  prom-           %35.3 = MkArg                    unboundValue, [0x5558d55f0e30]_p1, e2.1
  prom-           %35.4 = MkArg                    unboundValue, [0x5558d55f0e30]_p2, e2.1
  ct              %35.5 = PushContext        lCL   %35.3, %35.4, .identC(class1, class2), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|..., e2.1
  val?^           %35.6 = CastType                 up %35.4
  val?^           %35.7 = CastType                 up %35.3
  val?^ | miss    %35.8 = LdVar              eR    .Call, <env 0x5558d398c378>
  lgl$#-          %35.9 = Identical                <blt .Call>, %35.8   <true>
  cp              %35.10 = Checkpoint                -> BB37 (default) | BB36 (if assume failed)
BB37   <- [35]
  void                    Assume             D     %35.9, %35.10 (DeadBranchReached@0x5558d47c5d78[Test#0])
  val?^ | miss    %37.1 = LdVar              eR    C_R_identC, <env 0x5558d398c378>
  env             e37.2 = MkEnv              l     c1=%35.7, c2=%35.6, parent=<env 0x5558d398c378>, context 1
  val?            %37.3 = Force!<value>      !v    %37.1, e37.2   <vec>
  val?^ | miss    %37.4 = LdVar              eR    c1, e37.2
  val?            %37.5 = Force!<lazy>       !v    %37.4, e37.2   <str$+>
  val?^ | miss    %37.6 = LdVar              eR    c2, e37.2
  val?            %37.7 = Force!<lazy>       !v    %37.6, e37.2   <str$->
  val?            %37.8 = CallBuiltin        !v    .Call(%37.3, %37.5, %37.7) e37.2   <lgl$->
  lgl$#-          %37.9 = IsType                   %37.8 isA lgl$-
  cp              %37.10 = Checkpoint                -> BB39 (default) | BB38 (if assume failed)
BB36   <- [35]
  fs              %36.0 = FrameState         R     0x5558d5594420+1217: [], env=e2.1
  env             e36.1 = (MkEnv)            l     c1=%35.7, c2=%35.6, parent=<env 0x5558d398c378>, context 1
  fs              %36.2 = FrameState         R     0x5558d5598d00+17: [<blt .Call>, %35.9], env=e36.1, next=%36.0
  void                    Deopt              !v    %36.2   !
BB39   <- [37]
  void                    Assume             D     %37.9, %37.10 (Typecheck@0x5558d47c5d78[Type#6])
  lgl$-           %39.1 = CastType           d     dn %37.8
  val?            %39.2 = PopContext         C     %39.1, %35.5   <lgl$->
  lgl$#-          %39.3 = IsType                   %39.2 isA lgl$-
  cp              %39.4 = Checkpoint                -> BB41 (default) | BB40 (if assume failed)
BB38   <- [37]
  fs              %38.0 = FrameState         R     0x5558d5594420+1217: [], env=e2.1
  fs              %38.1 = FrameState         R     0x5558d5598d00+129: [%37.8], env=e37.2, next=%38.0
  void                    Deopt              !v    %38.1   !
BB41   <- [39]
  void                    Assume             D     %39.3, %39.4 (Typecheck@0x5558d47c5278[Type#53])
  lgl$-           %41.1 = CastType           d     dn %39.2
  lgl$-           %41.2 = AsLogical                %41.1
  lgl$#-          %41.3 = Identical                %41.2, true
  void                    Branch                   %41.3 -> BB80 (if true) | BB42 (if false)
BB40   <- [39]
  fs              %40.0 = FrameState         R     0x5558d5594420+1217: [%39.2], env=e2.1
  void                    Deopt              !v    %40.0   !
BB80   <- [41]
  goto BB49
BB42   <- [41]
  val?^ | miss    %42.0 = LdVar              eR    .identC, e2.1
  lgl$#-          %42.1 = Identical                %42.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Assume             D     %42.1, %39.4 (CallTarget@0x5558d47c5278[Call#18])
  prom-           %42.3 = MkArg                    unboundValue, [0x5558d55f0e30]_p3, e2.1
  ct              %42.4 = PushContext        lCL   %42.3, "ANY", .identC(class2, "ANY"), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|..., e2.1
  val?^           %42.5 = CastType                 up %42.3
  val?^ | miss    %42.6 = LdVar              eR    .Call, <env 0x5558d398c378>
  lgl$#-          %42.7 = Identical                <blt .Call>, %42.6   <true>
  cp              %42.8 = Checkpoint                -> BB44 (default) | BB43 (if assume failed)
BB49   <- [48, 80]
  lgl$-           %49.0 = Phi                      %48.3:BB48, %41.2:BB80
  lgl$#-          %49.1 = CheckTrueFalse     e     %49.0
  void                    Branch                   %49.1 -> BB79 (if true) | BB50 (if false)
BB44   <- [42]
  void                    Assume             D     %42.7, %42.8 (DeadBranchReached@0x5558d47c5d78[Test#0])
  val?^ | miss    %44.1 = LdVar              eR    C_R_identC, <env 0x5558d398c378>
  env             e44.2 = MkEnv              l     c1=%42.5, c2="ANY", parent=<env 0x5558d398c378>, context 1
  val?            %44.3 = Force!<value>      !v    %44.1, e44.2   <vec>
  val?^ | miss    %44.4 = LdVar              eR    c1, e44.2
  val?            %44.5 = Force!<lazy>       !v    %44.4, e44.2   <str$+>
  val?^ | miss    %44.6 = LdVar              eR    c2, e44.2
  val?            %44.7 = Force!<lazy>       !v    %44.6, e44.2   <str$->
  val?            %44.8 = CallBuiltin        !v    .Call(%44.3, %44.5, %44.7) e44.2   <lgl$->
  lgl$#-          %44.9 = IsType                   %44.8 isA lgl$-
  cp              %44.10 = Checkpoint                -> BB46 (default) | BB45 (if assume failed)
BB43   <- [42]
  fs              %43.0 = FrameState         R     0x5558d5594420+1266: [%41.2], env=e2.1
  env             e43.1 = (MkEnv)            l     c1=%42.5, c2="ANY", parent=<env 0x5558d398c378>, context 1
  fs              %43.2 = FrameState         R     0x5558d5598d00+17: [<blt .Call>, %42.7], env=e43.1, next=%43.0
  void                    Deopt              !v    %43.2   !
BB79   <- [49]
  void                    Visible            v     
  goto BB73
BB50   <- [49]
  (cls|spec|blt)  %50.0 = LdFun              !v    @, <0x5558d3384bd8>, e2.1
  prom-           %50.1 = MkArg                    unboundValue, [0x5558d55f0e30]_p4, e2.1
  prom-           %50.2 = MkArg                    unboundValue, [0x5558d55f0e30]_p5, e2.1
  val?            %50.3 = Call               !v    %50.0(%50.1, %50.2) e2.1   <vec+>
  lgl$#-          %50.4 = IsType                   %50.3 isA val+   <true>
  cp              %50.5 = Checkpoint                -> BB52 (default) | BB51 (if assume failed)
BB46   <- [44]
  void                    Assume             D     %44.9, %44.10 (Typecheck@0x5558d47c5d78[Type#6])
  lgl$-           %46.1 = CastType           d     dn %44.8
  val?            %46.2 = PopContext         C     %46.1, %42.4   <lgl$->
  lgl$#-          %46.3 = IsType                   %46.2 isA lgl$-
  cp              %46.4 = Checkpoint                -> BB48 (default) | BB47 (if assume failed)
BB45   <- [44]
  fs              %45.0 = FrameState         R     0x5558d5594420+1266: [%41.2], env=e2.1
  fs              %45.1 = FrameState         R     0x5558d5598d00+129: [%44.8], env=e44.2, next=%45.0
  void                    Deopt              !v    %45.1   !
BB73   <- [79, 72]
  lgl$-           %73.0 = Phi                      %72.0:BB72, true:BB79
  void                    Return             l     %73.0
BB52   <- [50]
  void                    Assume             D     %50.4, %50.5 (DeadBranchReached@0x5558d47c5278[Test#6])
  val?^ | miss    %52.1 = LdVar              eR    class2, e2.1
  val?            %52.2 = Force!<value>      !v    %52.1, e2.1   <str$->
  lgl$#-          %52.3 = IsType                   %52.2 isA val?-
  cp              %52.4 = Checkpoint                -> BB54 (default) | BB53 (if assume failed)
BB51   <- [50]
  fs              %51.0 = FrameState         R     0x5558d5594420+1316: [%50.3], env=e2.1
  void                    Deopt              !v    %51.0   !
BB48   <- [46]
  void                    Assume             D     %46.3, %46.4 (Typecheck@0x5558d47c5278[Type#55])
  lgl$-           %48.1 = CastType           d     dn %46.2
  lgl$-           %48.2 = AsLogical                %48.1
  lgl$-           %48.3 = LOr                      %41.2, %48.2
  goto BB49
BB47   <- [46]
  fs              %47.0 = FrameState         R     0x5558d5594420+1266: [%41.2, %46.2], env=e2.1
  void                    Deopt              !v    %47.0   !
BB54   <- [52]
  lgl$#-          %54.0 = IsType                   %50.3 isA val?+
  void                    Assume             D     %54.0, %52.4 (Typecheck@0x5558d47c5278[Type#58])
  val?+           %54.2 = CastType           d     dn %50.3   <vec+>
  void                    Assume             D     %52.3, %52.4 (Typecheck@0x5558d47c5278[Type#60])
  val?-           %54.4 = CastType           d     dn %52.2   <str$->
  val?            %54.5 = Extract2_1D        wed   %54.2, %54.4, elided   <nil->
  lgl$-           %54.6 = Is                       %54.5, NULL
  void                    StVar              lW    contained, %54.5, e2.1
  lgl$-           %54.8 = Not                d     %54.6, elided
  lgl$#-          %54.9 = CheckTrueFalse     e     %54.8
  void                    Branch                   %54.9 -> BB78 (if true) | BB55 (if false)
BB53   <- [52]
  fs              %53.0 = FrameState         R     0x5558d5594420+1361: [%50.3, %52.2], env=e2.1
  void                    Deopt              !v    %53.0   !
BB78   <- [54]
  (cls|spec|blt)  %78.0 = LdFun              !v    @, e2.1
  fs              %78.1 = FrameState         R     0x5558d5594420+1925: [%78.0], env=e2.1
  void                    Deopt              !v    %78.1, DeadCall@0x5558d47c5278[Call#40], %78.0   !
BB55   <- [54]
  val?^ | miss    %55.0 = LdVar              eR    class2Def, e2.1
  val?            %55.1 = Force!<value>      !v    %55.0, e2.1   <other>
  lgl$-           %55.2 = Is                       %55.1, NULL
  cp              %55.3 = Checkpoint                -> BB57 (default) | BB56 (if assume failed)
BB57   <- [55]
  lgl$#-          %57.0 = CheckTrueFalse     e     %55.2
  void                    Branch                   %57.0 -> BB77 (if true) | BB58 (if false)
BB56   <- [55]
  fs              %56.0 = FrameState         R     0x5558d5594420+1405: [%55.1], env=e2.1
  void                    Deopt              !v    %56.0   !
BB77   <- [57]
  void                    Visible            v     
  goto BB72
BB58   <- [57]
  val?^ | miss    %58.0 = LdVar              eR    .identC, e2.1
  lgl$#-          %58.1 = Identical                %58.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Assume             D     %58.1, %55.3 (CallTarget@0x5558d47c5278[Call#20])
  prom-           %58.3 = MkArg                    unboundValue, [0x5558d55f0e30]_p6, e2.1
  ct              %58.4 = PushContext        lCL   %58.3, "classRepresentation", .identC(class(class2Def), "classRepresentation"), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|..., e2.1
  val?^           %58.5 = CastType                 up %58.3
  val?^ | miss    %58.6 = LdVar              eR    .Call, <env 0x5558d398c378>
  lgl$#-          %58.7 = Identical                <blt .Call>, %58.6   <true>
  cp              %58.8 = Checkpoint                -> BB60 (default) | BB59 (if assume failed)
BB72   <- [77, 71]
  lgl$-           %72.0 = Phi                      %69.14:BB71, false:BB77
  goto BB73
BB60   <- [58]
  void                    Assume             D     %58.7, %58.8 (DeadBranchReached@0x5558d47c5d78[Test#0])
  val?^ | miss    %60.1 = LdVar              eR    C_R_identC, <env 0x5558d398c378>
  env             e60.2 = MkEnv              l     c1=%58.5, c2="classRepresentation", parent=<env 0x5558d398c378>, context 1
  val?            %60.3 = Force!<value>      !v    %60.1, e60.2   <vec>
  val?^ | miss    %60.4 = LdVar              eR    c1, e60.2
  val?            %60.5 = Force!<lazy>       !v    %60.4, e60.2   <str$+>
  val?^ | miss    %60.6 = LdVar              eR    c2, e60.2
  val?            %60.7 = Force!<lazy>       !v    %60.6, e60.2   <str$->
  val?            %60.8 = CallBuiltin        !v    .Call(%60.3, %60.5, %60.7) e60.2   <lgl$->
  lgl$#-          %60.9 = IsType                   %60.8 isA lgl$-
  cp              %60.10 = Checkpoint                -> BB62 (default) | BB61 (if assume failed)
BB59   <- [58]
  fs              %59.0 = FrameState         R     0x5558d5594420+1458: [], env=e2.1
  env             e59.1 = (MkEnv)            l     c1=%58.5, c2="classRepresentation", parent=<env 0x5558d398c378>, context 1
  fs              %59.2 = FrameState         R     0x5558d5598d00+17: [<blt .Call>, %58.7], env=e59.1, next=%59.0
  void                    Deopt              !v    %59.2   !
BB62   <- [60]
  void                    Assume             D     %60.9, %60.10 (Typecheck@0x5558d47c5d78[Type#6])
  lgl$-           %62.1 = CastType           d     dn %60.8
  val?            %62.2 = PopContext         C     %62.1, %58.4   <lgl$->
  lgl$#-          %62.3 = IsType                   %62.2 isA lgl$-
  cp              %62.4 = Checkpoint                -> BB64 (default) | BB63 (if assume failed)
BB61   <- [60]
  fs              %61.0 = FrameState         R     0x5558d5594420+1458: [], env=e2.1
  fs              %61.1 = FrameState         R     0x5558d5598d00+129: [%60.8], env=e60.2, next=%61.0
  void                    Deopt              !v    %61.1   !
BB64   <- [62]
  void                    Assume             D     %62.3, %62.4 (Typecheck@0x5558d47c5278[Type#65])
  lgl$-           %64.1 = CastType           d     dn %62.2
  lgl$-           %64.2 = Not                d     %64.1, elided
  lgl$-           %64.3 = AsLogical                %64.2
  lgl$#-          %64.4 = Identical                %64.3, false
  void                    Branch                   %64.4 -> BB66 (if true) | BB65 (if false)
BB63   <- [62]
  fs              %63.0 = FrameState         R     0x5558d5594420+1458: [%62.2], env=e2.1
  void                    Deopt              !v    %63.0   !
BB66   <- [64]
  lgl$#-          %66.0 = CheckTrueFalse     e     %64.3
  void                    Branch                   %66.0 -> BB74 (if true) | BB67 (if false)
BB65   <- [64]
  (cls|spec|blt)  %65.0 = LdFun              !v    isClassUnion, e2.1
  fs              %65.1 = FrameState         R     0x5558d5594420+1476: [%64.3, %65.0], env=e2.1
  void                    Deopt              !v    %65.1, DeadCall@0x5558d47c5278[Call#22], %65.0   !
BB74   <- [66]
  val?^ | miss    %74.0 = LdVar              eR    any, e2.1
  lgl$#-          %74.1 = Identical                <blt any>, %74.0   <@?>
  void                    Branch                   %74.1 -> BB76 (if true) | BB75 (if false)
BB67   <- [66]
  (cls|spec|blt)  %67.0 = LdFun              !v    @, <0x5558d3384bd8>, e2.1
  prom-           %67.1 = MkArg                    unboundValue, [0x5558d55f0e30]_p8, e2.1
  prom-           %67.2 = MkArg                    unboundValue, [0x5558d55f0e30]_p9, e2.1
  val?            %67.3 = Call               !v    %67.0(%67.1, %67.2) e2.1   <vec+>
  lgl$#-          %67.4 = IsType                   %67.3 isA val+   <true>
  lgl$#-          %67.5 = IsType                   %67.3 isA val?+
  cp              %67.6 = Checkpoint                -> BB69 (default) | BB68 (if assume failed)
BB76   <- [74]
  (cls|spec|blt)  %76.0 = LdFun              !v    %in%, e2.1
  fs              %76.1 = FrameState         R     0x5558d5594420+1845: [<blt any>, %76.0], env=e2.1
  void                    Deopt              !v    %76.1, DeadCall@0x5558d47c5278[Call#34], %76.0   !
BB75   <- [74]
  (cls|spec|blt)  %75.0 = LdFun              !v    any, e2.1
  fs              %75.1 = FrameState         R     0x5558d5594420+1808: [%75.0], env=e2.1
  void                    Deopt              !v    %75.1, DeadCall@0x5558d47c5278[Call#27], %75.0   !
BB69   <- [67]
  void                    Assume             D     %67.4, %67.6 (DeadBranchReached@0x5558d47c5278[Test#7])
  val?^ | miss    %69.1 = LdVar              eR    class1, e2.1
  lgl$#-          %69.2 = IsType                   %69.1 isA val?~- | miss
  void                    Assume             D     %69.2, %67.6 (Typecheck@0x5558d47c5278[Type#72])
  val?~- | miss   %69.4 = CastType           d     dn %69.1
  val?-           %69.5 = Force!<value>            %69.4,    <str$->
  void                    Assume             D     %67.5, %67.6 (Typecheck@0x5558d47c5278[Type#70])
  val?+           %69.7 = CastType           d     dn %67.3   <vec+>
  val?            %69.8 = Extract2_1D        wed   %69.7, %69.5, elided   <nil->
  lgl$-           %69.9 = Is                       %69.8, NULL
  void                    StVar              lW    ext, %69.8, e2.1
  val             %69.11 = ChkMissing         e     %69.8
  void                    Visible            v     
  lgl$-           %69.13 = Not                vd    %69.9, elided
  lgl$-           %69.14 = AsLogical                %69.13
  lgl$#-          %69.15 = Identical                %69.14, false
  void                    Branch                   %69.15 -> BB71 (if true) | BB70 (if false)
BB68   <- [67]
  fs              %68.0 = FrameState         R     0x5558d5594420+1553: [%67.3], env=e2.1
  void                    Deopt              !v    %68.0   !
BB71   <- [69]
  goto BB72
BB70   <- [69]
  (cls|spec|blt)  %70.0 = LdFun              !v    @, e2.1
  fs              %70.1 = FrameState         R     0x5558d5594420+1651: [%69.14, %70.0], env=e2.1
  void                    Deopt              !v    %70.1, DeadCall@0x5558d47c5278[Call#24], %70.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    contains, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     class, <0x5558d3385748>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x5558d55f0e30]_p7, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$+>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <other>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    subclasses, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     .classDefEnv, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x5558d55f0e30]_p12, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    packageSlot, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x5558d55f0e30]_p14, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2) e1.0   <val?_>
  void                    Invisible          v     
  void                    StVar              lW    package, %1.3, e1.0
  lgl$-           %1.6  = Is                       %1.3, NULL
  lgl$-           %1.7  = Not                vd    %1.6, elided
  lgl$#-          %1.8  = CheckTrueFalse     e     %1.7
  void                    Branch                   %1.8 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %2.2  = Force              !     %2.0, e1.0   <val?_>
  goto BB3
BB4   <- [1]
  (cls|spec|blt)  %4.0  = LdFun              !     getPackageName, e1.0
  prom-           %4.1  = MkArg                    unboundValue, [0x5558d55f0e30]_p15, e1.0
  val?            %4.2  = Call               !     %4.0(%4.1) e1.0   <val?_>
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.2:BB4, %2.2:BB2
  void                    Return             l     %3.0
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     topenv, e1.0
  prom-           %1.2  = MkArg                    unboundValue, [0x5558d55f0e30]_p16, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     parent.frame, e1.0
  val?            %1.2  = Call               !     %1.1() e1.0   <val?_>
  void                    Return             l     %1.2

│ [0x5558d55f0e30]                                                             │
└──────────────────────────────────────────────────────────────────────────────┘
