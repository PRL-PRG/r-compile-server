
┌──────────────────────────────────────────────────────────────────────────────┐
│ get0[0x5558d3a76100]                                                         │
│ Context: CorrOrd,!TMany,Argmatch;Eager2,NonRefl2 miss: 1                     │
│ Properties:  ForceOrd: 0                                                     │
├────── PIR Version After Optimizations
get0[0x5558d3a76100]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    3
  val?~ | miss    %1.1  = LdArg                    2
  val?^ | miss    %1.2  = LdArg                    1
  val?^ | miss    %1.3  = LdArg                    0
  lgl$#-          %1.4  = Identical                %1.2, missingArg
  lgl$#-          %1.5  = Identical                %1.1, missingArg
  env             e1.6  = MkEnv              l     x=%1.3, envir=%1.2, mode=%1.1, inherits=%1.0, ifnotfound(miss)=missingArg, parent=R_BaseNamespace, context 1
  void                    Branch                   %1.4 -> BB2 (if true) | BB12 (if false)
BB2   <- [1]
  prom-           %2.0  = MkArg                    unboundValue, get0[0x5558d3a76100]_p0, e1.6
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    envir, %2.1, e1.6
  goto BB3
BB12   <- [1]
  goto BB3
BB3   <- [2, 12]
  void                    Branch                   %1.5 -> BB11 (if true) | BB4 (if false)
BB11   <- [3]
  void                    StArg              lW    mode, "any", e1.6
  goto BB5
BB4   <- [3]
  goto BB5
BB5   <- [4, 11]
  lgl$#-          %5.0  = Identical                %1.0, missingArg
  void                    Branch                   %5.0 -> BB10 (if true) | BB6 (if false)
BB10   <- [5]
  void                    StArg              lW    inherits, true, e1.6
  goto BB7
BB6   <- [5]
  goto BB7
BB7   <- [6, 10]
  void                    StArg              lW    ifnotfound, nil, e1.6
  val?^           %7.1  = ChkMissing         e     %1.3
  val?            %7.2  = Force!<lazy>       !v    %7.1, e1.6   <str$+>
  lgl$#-          %7.3  = IsType                   %7.2 isA val?+
  cp              %7.4  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB9   <- [7]
  void                    Assume             D     %7.3, %7.4 (Typecheck@0x5558d5369f40[Type#1])
  val?+           %9.1  = CastType           d     dn %7.2   <str$+>
  val?^ | miss    %9.2  = LdVar              eR    envir, e1.6
  val?            %9.3  = Force!<lazy>       !v    %9.2, e1.6   <env+>
  val?^ | miss    %9.4  = LdVar              eR    mode, e1.6
  val?            %9.5  = Force!<lazy>       !v    %9.4, e1.6   <str$->
  val?^ | miss    %9.6  = LdVar              eR    inherits, e1.6
  val?            %9.7  = Force!<lazy>       !v    %9.6, e1.6   <lgl$->
  val?^ | miss    %9.8  = LdVar              eR    ifnotfound, e1.6
  val?            %9.9  = Force!<lazy>       !v    %9.8, e1.6   <(nil|vec)+>
  val?            %9.10 = CallBuiltin        !     get0(%9.1, %9.3, %9.5, %9.7, %9.9) e1.6
  void                    Return             l     %9.10
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5558d5348f20+9: [%7.2], env=e1.6
  void                    Deopt              !v    %8.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     pos.to.env, e1.0
  prom-           %1.2  = MkArg                    unboundValue, get0[0x5558d3a76100]_p1, 
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  void                    Visible            v     
  void                    Return             l     -1L

│ get0[0x5558d3a76100]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
