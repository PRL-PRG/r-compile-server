
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGeneric[0x5558d6bccd30]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1│
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getGeneric[0x5558d6bccd30]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?~+          %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  cp              %1.3  = Checkpoint                -> BB2 (default) | BB65 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    is.function, <env 0x5558d398c378>
  lgl$#-          %2.1  = Identical                <blt is.function>, %2.0   <true>
  void                    Assume             D     %2.1, %1.3 (DeadBranchReached@0x5558d5a0c180[Test#0])
  env             e2.3  = MkEnv              l     f=%1.2, mustFind=%1.1, where=%1.0, package(miss)="", parent=<env 0x5558d398c378>, context 1
  val+            %2.4  = Force!<lazy>       !vr   %1.2,    <(str|cls)>
  lgl$#-          %2.5  = CallSafeBuiltin    wed   is.function(%2.4)    <lgl$->
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB65   <- [1]
  env             e65.0 = (MkEnv)            l     f=%1.2, mustFind=%1.1, where=%1.0, package(miss)="", parent=<env 0x5558d398c378>, context 1
  fs              %65.1 = FrameState         R     0x5558d6686750+0: [], env=e65.0
  void                    Deopt              !v    %65.1
BB4   <- [2]
  void                    Branch                   %2.5 -> BB60 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5558d6686750+91: [%2.5], env=e2.3
  void                    Deopt              !v    %3.0
BB60   <- [4]
  val?^ | miss    %60.0 = LdVar              eR    is, <env 0x5558d398c378>
  lgl$#-          %60.1 = Identical                %60.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Assume             D     %60.1, %2.6 (CallTarget@0x5558d5a0c180[Call#1])
  prom-           %60.3 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p10 (!refl), e2.3
  val?            %60.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%60.3, "genericFunction") e2.3   <lgl$->
  lgl$#-          %60.5 = IsType                   %60.4 isA lgl$-
  cp              %60.6 = Checkpoint                -> BB62 (default) | BB61 (if assume failed)
BB5   <- [4]
  lgl$-           %5.0  = Missing            eR    where, e2.3
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB59 (if true) | BB6 (if false)
BB62   <- [60]
  void                    Assume             D     %60.5, %60.6 (Typecheck@0x5558d5a0c180[Type#4])
  lgl$-           %62.1 = CastType           d     dn %60.4
  lgl$#-          %62.2 = CheckTrueFalse     e     %62.1
  void                    Branch                   %62.2 -> BB64 (if true) | BB63 (if false)
BB61   <- [60]
  fs              %61.0 = FrameState         R     0x5558d6686750+144: [%60.4], env=e2.3
  void                    Deopt              !v    %61.0   !
BB59   <- [5]
  val?^ | miss    %59.0 = LdVar              eR    .getGeneric, <env 0x5558d398c378>
  lgl$#-          %59.1 = Identical                %59.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Assume             D     %59.1, %2.6 (CallTarget@0x5558d5a0c180[Call#7])
  prom-           %59.3 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p8 (!refl), e2.3
  prom-           %59.4 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p9 (!refl), e2.3
  val?            %59.5 = StaticCall         !v    .getGeneric[0x5558d5a70570](%59.3, missingArg, %59.4) e2.3   <cls>
  goto BB7
BB6   <- [5]
  val?^ | miss    %6.0  = LdVar              eR    .getGeneric, <env 0x5558d398c378>
  lgl$#-          %6.1  = Identical                %6.0, function(f, where=.GlobalEnv, package="") <(ri|...
  void                    Assume             D     %6.1, %2.6 (CallTarget@0x5558d5a0c180[Call#6])
  prom-           %6.3  = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p1 (!refl), e2.3
  prom-           %6.4  = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p2 (!refl), e2.3
  prom-           %6.5  = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p3 (!refl), e2.3
  val?            %6.6  = StaticCall         !v    .getGeneric[0x5558d70e75f0](%6.3, %6.4, %6.5) e2.3   <(nil|cls)>
  goto BB7
BB64   <- [62]
  val?^ | miss    %64.0 = LdVar              eR    f, e2.3
  void                    Visible            v     
  val?            %64.2 = Force!<wrapped>    !     %64.0, e2.3   <cls>
  goto BB40
BB63   <- [62]
  (cls|spec|blt)  %63.0 = LdFun              !v    is.primitive, e2.3
  fs              %63.1 = FrameState         R     0x5558d6686750+160: [%63.0], env=e2.3
  void                    Deopt              !v    %63.1, DeadCall@0x5558d5a0c180[Call#2], %63.0   !
BB7   <- [59, 6]
  val?            %7.0  = Phi                      %6.6:BB6, %59.5:BB59   <(nil|cls)>
  lgl$-           %7.1  = Is                       %7.0, NULL
  lgl$-           %7.2  = AsLogical                %7.1
  lgl$#-          %7.3  = Identical                %7.2, false
  void                    StVar              lW    value, %7.0, e2.3
  cp              %7.5  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB40   <- [64, 39]
  val?            %40.0 = Phi                      %39.0:BB39, %64.2:BB64
  void                    Return             l     %40.0
BB9   <- [7]
  val             %9.0  = ChkMissing         e     %7.0
  void                    Branch                   %7.3 -> BB58 (if true) | BB10 (if false)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5558d6686750+427: [], env=e2.3
  void                    Deopt              !v    %8.0   !
BB58   <- [9]
  goto BB15
BB10   <- [9]
  val?^ | miss    %10.0 = LdVar              eR    baseenv, e2.3
  lgl$#-          %10.1 = Identical                <blt baseenv>, %10.0   <true>
  void                    Assume             D     %10.1, %7.5 (DeadBranchReached@0x5558d5a0c180[Test#1])
  val?            %10.3 = CallBuiltin        !v    baseenv() e2.3   <env->
  lgl$#-          %10.4 = IsType                   %10.3 isA val+   <true>
  cp              %10.5 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB15   <- [58, 14]
  lgl$-           %15.0 = Phi                      %14.10:BB14, %7.2:BB58
  cp              %15.1 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB12   <- [10]
  void                    Assume             D     %10.4, %10.5 (DeadBranchReached@0x5558d5a0c180[Test#2])
  val?^ | miss    %12.1 = LdVar              eR    f, e2.3
  val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.3   <str$->
  lgl$#-          %12.3 = IsType                   %12.2 isA val?-
  cp              %12.4 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x5558d6686750+525: [%7.2, %10.3], env=e2.3
  void                    Deopt              !v    %11.0   !
BB17   <- [15]
  lgl$#-          %17.0 = CheckTrueFalse     e     %15.0
  void                    Branch                   %17.0 -> BB45 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x5558d6686750+601: [%15.0], env=e2.3
  void                    Deopt              !v    %16.0   !
BB14   <- [12]
  lgl$#-          %14.0 = IsType                   %10.3 isA val?-
  void                    Assume             D     %14.0, %12.4 (Typecheck@0x5558d5a0c180[Type#20])
  val?-           %14.2 = CastType           d     dn %10.3   <env->
  void                    Assume             D     %12.3, %12.4 (Typecheck@0x5558d5a0c180[Type#22])
  val?-           %14.4 = CastType           d     dn %12.2   <str$->
  val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <(spec|blt)->
  lgl$-           %14.6 = Is                       %14.5, NULL
  void                    StVar              lW    baseDef, %14.5, e2.3
  lgl$-           %14.8 = Not                d     %14.6, elided
  lgl$-           %14.9 = AsLogical                %14.8
  lgl$-           %14.10 = LAnd                     %7.2, %14.9
  goto BB15
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x5558d6686750+570: [%7.2, %10.3, %12.2], env=e2.3
  void                    Deopt              !v    %13.0   !
BB45   <- [17]
  val?^ | miss    %45.0 = LdVar              eR    is.function, e2.3
  lgl$#-          %45.1 = Identical                <blt is.function>, %45.0   <true>
  void                    Assume             D     %45.1, %15.1 (DeadBranchReached@0x5558d5a0c180[Test#3])
  val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.3
  lgl$#-          %45.4 = IsType                   %45.3 isA val?~- | miss
  void                    Assume             D     %45.4, %15.1 (Typecheck@0x5558d5a0c180[Type#25])
  val?~- | miss   %45.6 = CastType           d     dn %45.3
  val?-           %45.7 = Force!<value>            %45.6,    <(spec|blt)->
  lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
  cp              %45.9 = Checkpoint                -> BB47 (default) | BB46 (if assume failed)
BB18   <- [17]
  goto BB19
BB47   <- [45]
  void                    Branch                   %45.8 -> BB49 (if true) | BB48 (if false)
BB46   <- [45]
  fs              %46.0 = FrameState         R     0x5558d6686750+703: [%45.8], env=e2.3
  void                    Deopt              !v    %46.0   !
BB19   <- [18, 48, 54, 57]
  cp              %19.0 = Checkpoint                -> BB21 (default) | BB20 (if assume failed)
BB49   <- [47]
  val?^ | miss    %49.0 = LdVar              eR    genericForBasic, e2.3
  lgl$#-          %49.1 = Identical                %49.0, function(f, where=topenv(parent.frame()), must|...
  void                    Assume             D     %49.1, %45.9 (CallTarget@0x5558d5a0c180[Call#10])
  prom-           %49.3 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p4, e2.3
  val?            %49.4 = StaticCall         !v    genericForBasic[0x5558d5849a10](%49.3, missingArg, false) { 0 2n } e2.3   <cls>
  void                    StVar              lW    value, %49.4, e2.3
  cp              %49.6 = Checkpoint                -> BB51 (default) | BB50 (if assume failed)
BB48   <- [47]
  goto BB19
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    is.function, e2.3
  lgl$#-          %21.1 = Identical                <blt is.function>, %21.0   <true>
  void                    Assume             D     %21.1, %19.0 (DeadBranchReached@0x5558d5a0c180[Test#4])
  val?^ | miss    %21.3 = LdVar              eR    value, e2.3
  val?            %21.4 = Force!<value>      !v    %21.3, e2.3   <cls>
  val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.3   <lgl$->
  lgl$#-          %21.6 = IsType                   %21.5 isA lgl$-
  cp              %21.7 = Checkpoint                -> BB23 (default) | BB22 (if assume failed)
BB20   <- [19]
  fs              %20.0 = FrameState         R     0x5558d6686750+882: [], env=e2.3
  void                    Deopt              !v    %20.0   !
BB51   <- [49]
  val?^ | miss    %51.0 = LdVar              eR    is, e2.3
  lgl$#-          %51.1 = Identical                %51.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Assume             D     %51.1, %49.6 (CallTarget@0x5558d5a0c180[Call#11])
  prom-           %51.3 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p5 (!refl), e2.3
  val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.3   <lgl$->
  lgl$#-          %51.5 = IsType                   %51.4 isA lgl$-
  cp              %51.6 = Checkpoint                -> BB53 (default) | BB52 (if assume failed)
BB50   <- [49]
  fs              %50.0 = FrameState         R     0x5558d6686750+778: [], env=e2.3
  void                    Deopt              !v    %50.0   !
BB23   <- [21]
  void                    Assume             D     %21.6, %21.7 (Typecheck@0x5558d5a0c180[Type#36])
  lgl$-           %23.1 = CastType           d     dn %21.5
  lgl$#-          %23.2 = CheckTrueFalse     e     %23.1
  void                    Branch                   %23.2 -> BB44 (if true) | BB24 (if false)
BB22   <- [21]
  fs              %22.0 = FrameState         R     0x5558d6686750+973: [%21.5], env=e2.3
  void                    Deopt              !v    %22.0   !
BB53   <- [51]
  void                    Assume             D     %51.5, %51.6 (Typecheck@0x5558d5a0c180[Type#30])
  lgl$-           %53.1 = CastType           d     dn %51.4
  lgl$#-          %53.2 = CheckTrueFalse     e     %53.1
  void                    Branch                   %53.2 -> BB55 (if true) | BB54 (if false)
BB52   <- [51]
  fs              %52.0 = FrameState         R     0x5558d6686750+815: [%51.4], env=e2.3
  void                    Deopt              !v    %52.0   !
BB44   <- [23]
  val?^ | miss    %44.0 = LdVar              eR    value, e2.3
  void                    Visible            v     
  val?            %44.2 = Force!<value>      !     %44.0, e2.3   <cls>
  goto BB39
BB24   <- [23]
  val?^ | miss    %24.0 = LdVar              eR    nzchar, e2.3
  lgl$#-          %24.1 = Identical                <blt nzchar>, %24.0   <@?>
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB55   <- [53]
  val?^ | miss    %55.0 = LdVar              eR    .cacheGeneric, e2.3
  lgl$#-          %55.1 = Identical                %55.0, function(name, def) <(rir::DispatchTable*)0x55|...
  void                    Assume             D     %55.1, %51.6 (CallTarget@0x5558d5a0c180[Call#12])
  prom-           %55.3 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p6, e2.3
  prom-           %55.4 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p7, e2.3
  ct              %55.5 = PushContext        lCL   %55.3, %55.4, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x55|..., e2.3
  val?^           %55.6 = CastType                 up %55.4
  val?^           %55.7 = CastType                 up %55.3
  cp              %55.8 = Checkpoint                -> BB57 (default) | BB56 (if assume failed)
BB54   <- [53]
  goto BB19
BB39   <- [44, 38]
  val?            %39.0 = Phi                      %38.0:BB38, %44.2:BB44
  goto BB40
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    package, e2.3
  val?            %26.1 = Force!             !v    %26.0, e2.3   <val?_>
  val?            %26.2 = CallBuiltin        !v    nzchar(%26.1) e2.3   <val?_>
  lgl$-           %26.3 = AsLogical          e     %26.2
  lgl$#-          %26.4 = Identical                %26.3, false
  void                    Branch                   %26.4 -> BB30 (if true) | BB27 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    nzchar, e2.3
  fs              %25.1 = FrameState         R     0x5558d6686750+1012: [%25.0], env=e2.3
  void                    Deopt              !v    %25.1, DeadCall@0x5558d5a0c180[Call#14], %25.0   !
BB57   <- [55]
  val?^ | miss    %57.0 = LdVar              eR    .cacheGenericTable, <env 0x5558d398c378>
  lgl$#-          %57.1 = Identical                %57.0, function(name, def, table) <(rir::DispatchTabl|...
  void                    Assume             D     %57.1, %55.8 (CallTarget@0x5558d5abcf88[Call#0])
  env             e57.3 = MkEnv              l     name=%55.7, def=%55.6, parent=<env 0x5558d398c378>, context 1
  prom-           %57.4 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p11, e57.3
  prom-           %57.5 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p12, e57.3
  prom-           %57.6 = MkArg                    unboundValue, getGeneric[0x5558d6bccd30]_p13, e57.3
  val?            %57.7 = StaticCall         !v    .cacheGenericTable[0x5558d6cebc50](%57.4, %57.5, %57.6) e57.3   <cls>
  val?            %57.8 = PopContext         C     %57.7, %55.5   <cls>
  void                    StVar              lW    value, %57.8, e2.3
  goto BB19
BB56   <- [55]
  fs              %56.0 = FrameState         R     0x5558d6686750+868: [], env=e2.3
  env             e56.1 = (MkEnv)            l     name=%55.7, def=%55.6, parent=<env 0x5558d398c378>, context 1
  fs              %56.2 = FrameState         R     0x5558d6ab1b70+0: [], env=e56.1, next=%56.0
  void                    Deopt              !v    %56.2   !
BB30   <- [26]
  lgl$#-          %30.0 = CheckTrueFalse     e     %26.3
  void                    Branch                   %30.0 -> BB43 (if true) | BB31 (if false)
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    is.na, e2.3
  lgl$#-          %27.1 = Identical                <blt is.na>, %27.0   <@?>
  void                    Branch                   %27.1 -> BB29 (if true) | BB28 (if false)
BB43   <- [30]
  (cls|spec|blt)  %43.0 = LdFun              !v    tryCatch, e2.3
  fs              %43.1 = FrameState         R     0x5558d6686750+1229: [%43.0], env=e2.3
  void                    Deopt              !v    %43.1, DeadCall@0x5558d5a0c180[Call#20], %43.0   !
BB31   <- [30]
  val?^ | miss    %31.0 = LdVar              eR    is.function, e2.3
  lgl$#-          %31.1 = Identical                <blt is.function>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB29   <- [27]
  (cls|spec|blt)  %29.0 = LdFun              !v    match, e2.3
  fs              %29.1 = FrameState         R     0x5558d6686750+1152: [%26.3, <blt is.na>, %29.0], env=e2.3
  void                    Deopt              !v    %29.1, DeadCall@0x5558d5a0c180[Call#18], %29.0   !
BB28   <- [27]
  (cls|spec|blt)  %28.0 = LdFun              !v    is.na, e2.3
  fs              %28.1 = FrameState         R     0x5558d6686750+1115: [%26.3, %28.0], env=e2.3
  void                    Deopt              !v    %28.1, DeadCall@0x5558d5a0c180[Call#15], %28.0   !
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    value, e2.3
  val?            %33.1 = Force!             !v    %33.0, e2.3   <val?_>
  lgl$#-          %33.2 = IsType                   %33.1 isA val?+
  cp              %33.3 = Checkpoint                -> BB35 (default) | BB34 (if assume failed)
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    is.function, e2.3
  fs              %32.1 = FrameState         R     0x5558d6686750+1311: [%32.0], env=e2.3
  void                    Deopt              !v    %32.1, DeadCall@0x5558d5a0c180[Call#23], %32.0   !
BB35   <- [33]
  void                    Assume             D     %33.2, %33.3 (Typecheck@0x5558d5a0c180[Type#55])
  val?+           %35.1 = CastType           d     dn %33.1   <val?_>
  lgl$#-          %35.2 = CallSafeBuiltin    wed   is.function(%35.1)    <val?_>
  void                    Branch                   %35.2 -> BB42 (if true) | BB36 (if false)
BB34   <- [33]
  fs              %34.0 = FrameState         R     0x5558d6686750+1352: [<blt is.function>, %33.1], env=e2.3
  void                    Deopt              !v    %34.0   !
BB42   <- [35]
  val?^ | miss    %42.0 = LdVar              eR    value, e2.3
  void                    Visible            v     
  val?            %42.2 = Force!             !     %42.0, e2.3   <val?_>
  goto BB38
BB36   <- [35]
  val?^ | miss    %36.0 = LdVar              eR    mustFind, e2.3
  val?            %36.1 = Force!             !v    %36.0, e2.3   <val?_>
  lgl$#-          %36.2 = CheckTrueFalse     we    %36.1
  void                    Branch                   %36.2 -> BB41 (if true) | BB37 (if false)
BB38   <- [42, 37]
  val?            %38.0 = Phi                      nil:BB37, %42.2:BB42
  goto BB39
BB41   <- [36]
  (cls|spec|blt)  %41.0 = LdFun              !v    stop, e2.3
  fs              %41.1 = FrameState         R     0x5558d6686750+1421: [%41.0], env=e2.3
  void                    Deopt              !v    %41.1, DeadCall@0x5558d5a0c180[Call#24], %41.0   !
BB37   <- [36]
  void                    Visible            v     
  goto BB38
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    f, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .genericTable, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ getGeneric[0x5558d6bccd30]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
