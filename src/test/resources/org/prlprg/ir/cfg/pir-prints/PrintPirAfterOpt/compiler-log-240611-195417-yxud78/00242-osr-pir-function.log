
┌──────────────────────────────────────────────────────────────────────────────┐
│ osr[0x5558d52e1150]                                                          │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
osr[0x5558d52e1150]
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  str-            %1.1  = LdArg                    0
  int$#-          %1.2  = LdArg                    1
  int$#-          %1.3  = LdArg                    2
  goto BB2
BB2   <- [1, 10]
  int$-           %2.0  = Phi                      %1.3:BB1, %2.1:BB10
  int$-           %2.1  = Inc                      %2.0
  lgl$-           %2.2  = Lt                 d     %1.2, %2.1, elided
  lgl$#-          %2.3  = Identical                %2.2, true
  void                    Branch                   %2.3 -> BB3 (if true) | BB4 (if false)
BB3   <- [2]
  void                    Visible            v     
  void                    Return             l     nil
BB4   <- [2]
  str$-           %4.0  = Extract2_1D        wed   %1.1, %2.1, elided
  void                    StVar              lW    d, %4.0, e1.0
  cp              %4.2  = Checkpoint                -> BB5 (default) | BB12 (if assume failed)
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    allTable, e1.0
  lgl$#-          %5.1  = IsType                   %5.0 isA val?~- | miss
  void                    Assume             D     %5.1, %4.2 (Typecheck@0x5558d6a838a8[Type#39])
  val?~- | miss   %5.3  = CastType           d     dn %5.0
  val?-           %5.4  = Force!<value>            %5.3,    <env->
  lgl$#-          %5.5  = IsType                   %5.4 isA val+   <lgl$#->
  void                    Assume             D     %5.5, %4.2 (DeadBranchReached@0x5558d6a838a8[Test#5])
  val?            %5.7  = Extract2_1D        wed   %5.4, %4.0, elided   <val?>
  void                    StVar              lW    m, %5.7, e1.0
  cp              %5.9  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB12   <- [4]
  fs              %12.0 = FrameState         R     0x5558d6f756b0+946: [%1.1, %1.2, %2.1], env=e1.0
  void                    Deopt              !v    %12.0   !
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    is, e1.0
  lgl$#-          %7.1  = Identical                %7.0, function(object, class2) <(rir::DispatchTable*|...
  void                    Assume             D     %7.1, %5.9 (CallTarget@0x5558d6a838a8[Call#15])
  prom-           %7.3  = MkArg                    unboundValue, osr[0x5558d52e1150]_p0 (!refl), e1.0
  val?            %7.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%7.3, "MethodWithNext") e1.0   <lgl$->
  lgl$#-          %7.5  = IsType                   %7.4 isA lgl$-
  cp              %7.6  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x5558d6f756b0+1021: [%1.1, %1.2, %2.1], env=e1.0
  void                    Deopt              !v    %6.0   !
BB9   <- [7]
  void                    Assume             D     %7.5, %7.6 (Typecheck@0x5558d6a838a8[Type#44])
  lgl$-           %9.1  = CastType           d     dn %7.4
  lgl$#-          %9.2  = CheckTrueFalse     e     %9.1
  void                    Branch                   %9.2 -> BB11 (if true) | BB10 (if false)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5558d6f756b0+1058: [%1.1, %1.2, %2.1, %7.4], env=e1.0
  void                    Deopt              !v    %8.0   !
BB11   <- [9]
  (cls|spec|blt)  %11.0 = LdFun              !v    as, e1.0
  fs              %11.1 = FrameState         R     0x5558d6f756b0+1079: [%1.1, %1.2, %2.1, %11.0], env=e1.0
  void                    Deopt              !v    %11.1, DeadCall@0x5558d6a838a8[Call#16], %11.0   !
BB10   <- [9]
  goto BB2
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    m, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <val?>
  void                    Return             l     %1.3

│ osr[0x5558d52e1150]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
