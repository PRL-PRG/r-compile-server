
┌──────────────────────────────────────────────────────────────────────────────┐
│ remove[0x5558d77c5830]                                                       │
│ Context: CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2 miss: 1     │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
remove[0x5558d77c5830]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    3
  val?~ | miss    %1.1  = LdArg                    2
  val?^ | miss    %1.2  = LdArg                    1
  (miss|dots)     %1.3  = LdArg                    0
  lgl$#-          %1.4  = Identical                %1.2, missingArg
  lgl$#-          %1.5  = Identical                %1.1, missingArg
  env             e1.6  = MkEnv              l     ...=%1.3, list=%1.2, pos=%1.1, envir=%1.0, inherits(miss)=missingArg, parent=R_BaseNamespace, context 1
  void                    Branch                   %1.4 -> BB2 (if true) | BB45 (if false)
BB2   <- [1]
  prom-           %2.0  = MkArg                    unboundValue, remove[0x5558d77c5830]_p0, e1.6
  val?^ | miss    %2.1  = CastType                 up %2.0
  void                    StArg              lW    list, %2.1, e1.6
  goto BB3
BB45   <- [1]
  goto BB3
BB3   <- [2, 45]
  void                    Branch                   %1.5 -> BB44 (if true) | BB4 (if false)
BB44   <- [3]
  prom-           %44.0 = MkArg                    unboundValue, remove[0x5558d77c5830]_p1 (!refl), 
  val?^ | miss    %44.1 = CastType                 up %44.0
  void                    StArg              lW    pos, %44.1, e1.6
  goto BB5
BB4   <- [3]
  goto BB5
BB5   <- [44, 4]
  lgl$#-          %5.0  = Identical                %1.0, missingArg
  void                    Branch                   %5.0 -> BB43 (if true) | BB6 (if false)
BB43   <- [5]
  prom-           %43.0 = MkArg                    unboundValue, remove[0x5558d77c5830]_p2, e1.6
  val?^ | miss    %43.1 = CastType                 up %43.0
  void                    StArg              lW    envir, %43.1, e1.6
  goto BB7
BB6   <- [5]
  goto BB7
BB7   <- [43, 6]
  void                    StArg              lW    inherits, false, e1.6
  prom-           %7.1  = MkArg                    unboundValue, remove[0x5558d77c5830]_p5, e1.6
  *dots-          %7.2  = ExpandDots               %1.3
  val?            %7.3  = NamedCall          !v    <spec $>(%7.1, .xpandDotsTrigger=%7.2) e1.6   <nil->
  void                    StVar              lW    dots, %7.3, e1.6
  lgl$#-          %7.5  = IsType                   %7.3 isA val?-
  cp              %7.6  = Checkpoint                -> BB9 (default) | BB8 (if assume failed)
BB9   <- [7]
  val?^ | miss    %9.0  = LdVar              eR    length, e1.6
  lgl$#-          %9.1  = Identical                <blt length>, %9.0   <true>
  void                    Assume             D     %9.1, %7.6 (DeadBranchReached@0x5558d47ccdc0[Test#0])
  val             %9.3  = ChkMissing         e     %7.3
  void                    Assume             D     %7.5, %7.6 (Typecheck@0x5558d47ccdc0[Type#4])
  val?-           %9.5  = CastType           d     dn %7.3   <nil->
  (int|real)$-    %9.6  = CallSafeBuiltin    wed   length(%9.5)    <int$->
  lgl$#-          %9.7  = IsType                   %9.6 isA int$-
  cp              %9.8  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  fs              %8.0  = FrameState         R     0x5558d606e660+59: [], env=e1.6
  void                    Deopt              !v    %8.0   !
BB11   <- [9]
  void                    Assume             D     %9.7, %9.8 (Typecheck@0x5558d47ccdc0[Type#7])
  int$-           %11.1 = CastType           d     dn %9.6
  lgl$-           %11.2 = AsLogical                %11.1
  lgl$#-          %11.3 = Identical                %11.2, false
  void                    Branch                   %11.3 -> BB15 (if true) | BB12 (if false)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x5558d606e660+150: [%9.6], env=e1.6
  void                    Deopt              !v    %10.0   !
BB15   <- [11]
  lgl$#-          %15.0 = CheckTrueFalse     e     %11.2
  void                    Branch                   %15.0 -> BB42 (if true) | BB16 (if false)
BB12   <- [11]
  val?^ | miss    %12.0 = LdVar              eR    all, e1.6
  lgl$#-          %12.1 = Identical                <blt all>, %12.0   <@?>
  void                    Branch                   %12.1 -> BB14 (if true) | BB13 (if false)
BB42   <- [15]
  (cls|spec|blt)  %42.0 = LdFun              !v    stop, e1.6
  fs              %42.1 = FrameState         R     0x5558d606e660+331: [%42.0], env=e1.6
  void                    Deopt              !v    %42.1, DeadCall@0x5558d47ccdc0[Call#8], %42.0   !
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    vapply, e1.6
  lgl$#-          %16.1 = Identical                %16.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...
  void                    Assume             D     %16.1, %9.8 (CallTarget@0x5558d47ccdc0[Call#9])
  prom-           %16.3 = MkArg                    unboundValue, remove[0x5558d77c5830]_p6 (!refl), e1.6
  prom-           %16.4 = MkArg                    unboundValue, remove[0x5558d77c5830]_p7, e1.6
  ct              %16.5 = PushContext        lCL   %16.3, %16.4, "", vapply(dots, as.character, ""), function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|..., e1.6
  val?^           %16.6 = CastType                 up %16.4
  val?^           %16.7 = CastType                 up %16.3
  env             e16.8 = MkEnv              l     X=%16.7, FUN=%16.6, FUN.VALUE="", ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %16.9 = MkArg                    unboundValue, remove[0x5558d77c5830]_p13, e16.8
  val?            %16.10 = StaticCall         !v    match.fun[0x5558d54e60d0](%16.9) e16.8   <(cls|blt)->
  void                    StVar              lW    FUN, %16.10, e16.8
  cp              %16.12 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB14   <- [12]
  (cls|spec|blt)  %14.0 = LdFun              !v    vapply, e1.6
  fs              %14.1 = FrameState         R     0x5558d606e660+227: [%11.2, <blt all>, %14.0], env=e1.6
  void                    Deopt              !v    %14.1, DeadCall@0x5558d47ccdc0[Call#7], %14.0   !
BB13   <- [12]
  (cls|spec|blt)  %13.0 = LdFun              !v    all, e1.6
  fs              %13.1 = FrameState         R     0x5558d606e660+190: [%11.2, %13.0], env=e1.6
  void                    Deopt              !v    %13.1, DeadCall@0x5558d47ccdc0[Call#5], %13.0   !
BB18   <- [16]
  val?^ | miss    %18.0 = LdVar              eR    is.vector, e16.8
  lgl$#-          %18.1 = Identical                %18.0, function(x, mode="any") <(rir::DispatchTable*)|...
  void                    Assume             D     %18.1, %16.12 (CallTarget@0x5558d5289c70[Call#1])
  val?^ | miss    %18.3 = LdVar              eR    X, e16.8
  val?            %18.4 = Force!<lazy>       !v    %18.3, e16.8   <val?>
  lgl$#-          %18.5 = CallSafeBuiltin    wed   is.vector(%18.4, "any")    <lgl$->
  cp              %18.6 = Checkpoint                -> BB20 (default) | BB19 (if assume failed)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x5558d606e660+401: [], env=e1.6
  fs              %17.1 = FrameState         R     0x5558d34a2000+46: [], env=e16.8, next=%17.0
  void                    Deopt              !v    %17.1   !
BB20   <- [18]
  lgl$#-          %20.0 = Not                d     %18.5, elided
  void                    Branch                   %18.5 -> BB41 (if true) | BB21 (if false)
BB19   <- [18]
  fs              %19.0 = FrameState         R     0x5558d606e660+401: [], env=e1.6
  fs              %19.1 = FrameState         R     0x5558d34a2000+78: [], env=e16.8, next=%19.0
  prom-           %19.2 = MkArg                    %18.4, remove[0x5558d77c5830]_p14 (!refl), e16.8
  val?~           %19.3 = CastType                 up %19.2
  env             e19.4 = (MkEnv)            l     mode(miss)="any", x=%19.3, parent=R_BaseNamespace, context 0
  fs              %19.5 = FrameState         R     0x5558d522c4a0+41: [%18.5], env=e19.4, next=%19.1
  void                    Deopt              !v    %19.5   !
BB41   <- [20]
  val?^ | miss    %41.0 = LdVar              eR    is.object, e16.8
  lgl$#-          %41.1 = Identical                <blt is.object>, %41.0   <true>
  void                    Assume             D     %41.1, %18.6 (DeadBranchReached@0x5558d5289c70[Test#0])
  val?^ | miss    %41.3 = LdVar              eR    X, e16.8
  val?            %41.4 = Force!<wrapped>    !v    %41.3, e16.8   <val?+>
  lgl$#-          %41.5 = CallSafeBuiltin    wed   is.object(%41.4)    <lgl$->
  lgl$-           %41.6 = LOr                      %20.0, %41.5
  goto BB22
BB21   <- [20]
  goto BB22
BB22   <- [21, 41]
  lgl$-           %22.0 = Phi                      %41.6:BB41, %20.0:BB21
  cp              %22.1 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB24   <- [22]
  lgl$#-          %24.0 = CheckTrueFalse     e     %22.0
  void                    Branch                   %24.0 -> BB40 (if true) | BB25 (if false)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x5558d606e660+401: [], env=e1.6
  fs              %23.1 = FrameState         R     0x5558d34a2000+189: [%22.0], env=e16.8, next=%23.0
  void                    Deopt              !v    %23.1   !
BB40   <- [24]
  val?^ | miss    %40.0 = LdVar              eR    as.list, e16.8
  lgl$#-          %40.1 = Identical                %40.0, function(x, ...) <(rir::DispatchTable*)0x5558d|...
  void                    Assume             D     %40.1, %22.1 (CallTarget@0x5558d5289c70[Call#3])
  val?^ | miss    %40.3 = LdVar              eR    X, e16.8
  val?            %40.4 = Force!<wrapped>    !v    %40.3, e16.8   <vec>
  val?            %40.5 = StaticCall         !v    as.list[0x5558d67681e0](%40.4) { 0 } e16.8   <vec>
  void                    StVar              lW    X, %40.5, e16.8
  goto BB26
BB25   <- [24]
  goto BB26
BB26   <- [25, 40]
  (cls|spec|blt)  %26.0 = LdFun              !v    .Internal, <0x5558d3384698>, e16.8
  prom-           %26.1 = MkArg                    unboundValue, remove[0x5558d77c5830]_p15, e16.8
  val?            %26.2 = Call               !v    %26.0(%26.1) e16.8   <val?+>
  val?            %26.3 = PopContext         C     %26.2, %16.5   <str->
  void                    StVar              lW    names, %26.3, e1.6
  lgl$#-          %26.5 = IsType                   %26.3 isA val?-
  cp              %26.6 = Checkpoint                -> BB28 (default) | BB27 (if assume failed)
BB28   <- [26]
  val?^ | miss    %28.0 = LdVar              eR    length, e1.6
  lgl$#-          %28.1 = Identical                <blt length>, %28.0   <true>
  void                    Assume             D     %28.1, %26.6 (DeadBranchReached@0x5558d47ccdc0[Test#2])
  val             %28.3 = ChkMissing         e     %26.3
  void                    Assume             D     %26.5, %26.6 (Typecheck@0x5558d47ccdc0[Type#15])
  val?-           %28.5 = CastType           d     dn %26.3   <str->
  (int|real)$-    %28.6 = CallSafeBuiltin    wed   length(%28.5)    <int$->
  lgl$#-          %28.7 = IsType                   %28.6 isA int$-
  cp              %28.8 = Checkpoint                -> BB30 (default) | BB29 (if assume failed)
BB27   <- [26]
  fs              %27.0 = FrameState         R     0x5558d606e660+415: [], env=e1.6
  void                    Deopt              !v    %27.0   !
BB30   <- [28]
  void                    Assume             D     %28.7, %28.8 (Typecheck@0x5558d47ccdc0[Type#18])
  int$-           %30.1 = CastType           d     dn %28.6
  lgl$-           %30.2 = Eq                 d     %30.1, 0L, elided   <lgl$->
  lgl$#-          %30.3 = CheckTrueFalse     e     %30.2
  void                    Branch                   %30.3 -> BB39 (if true) | BB31 (if false)
BB29   <- [28]
  fs              %29.0 = FrameState         R     0x5558d606e660+506: [%28.6], env=e1.6
  void                    Deopt              !v    %29.0   !
BB39   <- [30]
  val?^ | miss    %39.0 = LdVar              eR    character, e1.6
  lgl$#-          %39.1 = Identical                %39.0, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Assume             D     %39.1, %28.8 (CallTarget@0x5558d47ccdc0[Call#11])
  str-            %39.3 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    names, %39.3, e1.6
  goto BB32
BB31   <- [30]
  goto BB32
BB32   <- [31, 39]
  cp              %32.0 = Checkpoint                -> BB34 (default) | BB33 (if assume failed)
BB34   <- [32]
  val?^ | miss    %34.0 = LdVar              eR    .Primitive, e1.6
  lgl$#-          %34.1 = Identical                <blt .Primitive>, %34.0   <true>
  void                    Assume             D     %34.1, %32.0 (DeadBranchReached@0x5558d47ccdc0[Test#3])
  val?            %34.3 = CallBuiltin        !v    .Primitive("c") e1.6   <blt->
  cp              %34.4 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB33   <- [32]
  fs              %33.0 = FrameState         R     0x5558d606e660+575: [], env=e1.6
  void                    Deopt              !v    %33.0   !
BB36   <- [34]
  (cls|spec|blt)  %36.0 = ChkFunction        e     %34.3
  lgl$#-          %36.1 = Identical                %36.0, <blt c>
  void                    Assume             D     %36.1, %34.4 (CallTarget@0x5558d47ccdc0[Call#13])
  val?^ | miss    %36.3 = LdVar              eR    list, e1.6
  val?            %36.4 = Force!<lazy>       !v    %36.3, e1.6   <str->
  lgl$#-          %36.5 = IsType                   %36.4 isA val?-
  cp              %36.6 = Checkpoint                -> BB38 (default) | BB37 (if assume failed)
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x5558d606e660+658: [%34.3], env=e1.6
  void                    Deopt              !v    %35.0   !
BB38   <- [36]
  val?^ | miss    %38.0 = LdVar              eR    names, e1.6
  lgl$#-          %38.1 = IsType                   %38.0 isA val?~- | miss
  void                    Assume             D     %38.1, %36.6 (Typecheck@0x5558d47ccdc0[Type#23])
  val?~- | miss   %38.3 = CastType           d     dn %38.0
  val?-           %38.4 = Force!<value>            %38.3,    <str->
  void                    Assume             D     %36.5, %36.6 (Typecheck@0x5558d47ccdc0[Type#22])
  val?-           %38.6 = CastType           d     dn %36.4   <str->
  val+            %38.7 = CallSafeBuiltin    wed   c(%38.6, %38.4)    <str->
  void                    StVar              lW    list, %38.7, e1.6
  val?^ | miss    %38.9 = LdVar              eR    envir, e1.6
  val?            %38.10 = Force!<lazy>       !v    %38.9, e1.6   <env->
  val?^ | miss    %38.11 = LdVar              eR    inherits, e1.6
  val?            %38.12 = Force!<lazy>       !v    %38.11, e1.6   <lgl$->
  val?            %38.13 = CallBuiltin        !     remove(%38.7, %38.10, %38.12) e1.6
  void                    Return             l     %38.13
BB37   <- [36]
  prom-           %37.0 = MkArg                    %36.4, remove[0x5558d77c5830]_p8 (!refl), e1.6
  prom-           %37.1 = MkArg                    unboundValue, remove[0x5558d77c5830]_p9, e1.6
  fs              %37.2 = FrameState         R     0x5558d606e660+679: [%36.0, %37.0, %37.1], env=e1.6
  void                    Deopt              !v    %37.2   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     character, e1.0
  val?            %1.2  = Call               !     %1.1() e1.0   <val?_>
  void                    Return             l     %1.2
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  void                    Visible            v     
  void                    Return             l     -1
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     as.environment, e1.0
  prom-           %1.2  = MkArg                    unboundValue, remove[0x5558d77c5830]_p3, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    pos, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     match.call, e1.0
  val?            %1.2  = NamedCall          !     %1.1(expand.dots=false) e1.0   <val?_>
  void                    Return             l     %1.2
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    dots, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <nil->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    as.character, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <blt->
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    list, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    names, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    FUN, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(cls|blt)->
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    X, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     vapply, e1.0
  prom-           %1.2  = MkArg                    unboundValue, remove[0x5558d77c5830]_p16, e1.0
  prom-           %1.3  = MkArg                    unboundValue, remove[0x5558d77c5830]_p17, e1.0
  prom-           %1.4  = MkArg                    unboundValue, remove[0x5558d77c5830]_p18, e1.0
  prom-           %1.5  = MkArg                    unboundValue, remove[0x5558d77c5830]_p19, e1.0
  val?            %1.6  = Call               !     %1.1(%1.2, %1.3, %1.4, %1.5) e1.0   <val?_>
  void                    Return             l     %1.6
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    X, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    FUN, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    FUN.VALUE, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    USE.NAMES, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ remove[0x5558d77c5830]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
