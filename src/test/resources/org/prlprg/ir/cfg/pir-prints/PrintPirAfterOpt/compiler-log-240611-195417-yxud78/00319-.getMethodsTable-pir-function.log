
┌──────────────────────────────────────────────────────────────────────────────┐
│ .getMethodsTable[0x5558d56224a0]                                             │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 3                              │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
.getMethodsTable[0x5558d56224a0]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     fdef=%1.0, env(miss)=missingArg, check(miss)=missingArg, inherited(miss)=missingArg, parent=<env 0x5558d398c378>, context 1
  prom-           %1.2  = MkArg                    unboundValue, .getMethodsTable[0x5558d56224a0]_p0, e1.1
  val?^ | miss    %1.3  = CastType                 up %1.2
  void                    StArg              lW    env, %1.3, e1.1
  void                    StArg              lW    check, true, e1.1
  void                    StArg              lW    inherited, false, e1.1
  void                    StVar              lW    name, ".MTable", e1.1
  cp              %1.8  = Checkpoint                -> BB2 (default) | BB7 (if assume failed)
BB2   <- [1]
  void                    Visible            v     
  val?^ | miss    %2.1  = LdVar              eR    exists, <env 0x5558d398c378>
  lgl$#-          %2.2  = Identical                %2.1, function(x, where=-(1), envir=if(missing(frame|...
  void                    Assume             D     %2.2, %1.8 (CallTarget@0x5558d48b9eb0[Call#1])
  prom-           %2.4  = MkArg                    unboundValue, .getMethodsTable[0x5558d56224a0]_p4 (!refl), e1.1
  prom-           %2.5  = MkArg                    unboundValue, .getMethodsTable[0x5558d56224a0]_p5, e1.1
  val?            %2.6  = StaticCall         !     exists[0x5558d7cb5540](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e1.1   <lgl$->
  lgl$#-          %2.7  = IsType                   %2.6 isA lgl$-
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB7   <- [1]
  fs              %7.0  = FrameState         R     0x5558d673ade0+46: [], env=e1.1
  void                    Deopt              !v    %7.0
BB4   <- [2]
  void                    Assume             D     %2.7, %2.8 (Typecheck@0x5558d48b9eb0[Type#6])
  lgl$-           %4.1  = CastType           d     dn %2.6
  lgl$-           %4.2  = Not                vd    %4.1, elided
  lgl$-           %4.3  = AsLogical                %4.2
  lgl$-           %4.4  = AsLogical                %4.3
  lgl$#-          %4.5  = CheckTrueFalse     e     %4.4
  void                    Branch                   %4.5 -> BB6 (if true) | BB5 (if false)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5558d673ade0+121: [true, %2.6], env=e1.1
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  (cls|spec|blt)  %6.0  = LdFun              !v    .setupMethodsTables, e1.1
  fs              %6.1  = FrameState         R     0x5558d673ade0+145: [%6.0], env=e1.1
  void                    Deopt              !v    %6.1, DeadCall@0x5558d48b9eb0[Call#2], %6.0   !
BB5   <- [4]
  val?^ | miss    %5.0  = LdVar              eR    get, e1.1
  lgl$#-          %5.1  = Identical                %5.0, function(x, pos=-(1L), envir=as.environment(po|...
  void                    Assume             D     %5.1, %2.8 (CallTarget@0x5558d48b9eb0[Call#5])
  prom-           %5.3  = MkArg                    unboundValue, .getMethodsTable[0x5558d56224a0]_p6, e1.1
  prom-           %5.4  = MkArg                    unboundValue, .getMethodsTable[0x5558d56224a0]_p7, e1.1
  val?            %5.5  = StaticCall         !     get[0x5558d7118070](%5.3, missingArg, %5.4) { 0 2n } e1.1   <env->
  void                    Return             l     %5.5
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     environment, <0x5558d372bb68>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, .getMethodsTable[0x5558d56224a0]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <env->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fdef, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    name, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    env, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <env->
  void                    Return             l     %1.3

│ .getMethodsTable[0x5558d56224a0]                                             │
└──────────────────────────────────────────────────────────────────────────────┘
