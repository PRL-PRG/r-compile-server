
┌──────────────────────────────────────────────────────────────────────────────┐
│ .cacheGenericTable[0x5558d7601490]                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:  ForceOrd: 1                                                     │
├────── PIR Version After Optimizations
.cacheGenericTable[0x5558d7601490]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    2
  val?^           %1.1  = LdArg                    1
  val?^           %1.2  = LdArg                    0
  env             e1.3  = MkEnv              l     name=%1.2, def=%1.1, table=%1.0, parent=<env 0x5558d398c378>, context 1
  val?            %1.4  = Force!<lazy>       !v    %1.1, e1.3   <cls>
  void                    StVar              lW    fdef, %1.4, e1.3
  val?^ | miss    %1.6  = LdVar              eR    table, e1.3
  val?            %1.7  = Force!<lazy>       !v    %1.6, e1.3   <env->
  lgl$#-          %1.8  = IsType                   %1.7 isA val+   <true>
  cp              %1.9  = Checkpoint                -> BB2 (default) | BB20 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.8, %1.9 (DeadBranchReached@0x5558d42ec500[Test#0])
  val?^ | miss    %2.1  = LdVar              eR    name, e1.3
  val?            %2.2  = Force!<lazy>       !v    %2.1, e1.3   <str$->
  lgl$#-          %2.3  = IsType                   %2.2 isA val?-
  cp              %2.4  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB20   <- [1]
  fs              %20.0 = FrameState         R     0x5558d41dc450+32: [%1.7], env=e1.3
  void                    Deopt              !v    %20.0   !
BB4   <- [2]
  lgl$#-          %4.0  = IsType                   %1.7 isA val?-
  void                    Assume             D     %4.0, %2.4 (Typecheck@0x5558d42ec500[Type#1])
  val?-           %4.2  = CastType           d     dn %1.7   <env->
  void                    Assume             D     %2.3, %2.4 (Typecheck@0x5558d42ec500[Type#3])
  val?-           %4.4  = CastType           d     dn %2.2   <str$->
  val?            %4.5  = Extract2_1D        wed   %4.2, %4.4, elided   <(nil|cls)>
  lgl$-           %4.6  = Is                       %4.5, NULL
  void                    StVar              lW    prev, %4.5, e1.3
  cp              %4.8  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5558d41dc450+77: [%1.7, %2.2], env=e1.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  lgl$-           %6.0  = Not                d     %4.6, elided
  lgl$#-          %6.1  = CheckTrueFalse     e     %6.0
  void                    Branch                   %6.1 -> BB9 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5558d41dc450+100: [%4.5], env=e1.3
  void                    Deopt              !v    %5.0   !
BB9   <- [6]
  (cls|spec|blt)  %9.0  = LdFun              !v    @, <0x5558d3384bd8>, e1.3
  prom-           %9.1  = MkArg                    unboundValue, .cacheGenericTable[0x5558d7601490]_p1, e1.3
  prom-           %9.2  = MkArg                    unboundValue, .cacheGenericTable[0x5558d7601490]_p2, e1.3
  val?            %9.3  = Call               !v    %9.0(%9.1, %9.2) e1.3   <str$->
  void                    StVar              lW    newpkg, %9.3, e1.3
  cp              %9.5  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB7   <- [6]
  val?^ | miss    %7.0  = LdVar              eR    .getMethodsTable, e1.3
  lgl$#-          %7.1  = Identical                %7.0, function(fdef, env=environment(fdef), check=TR|...
  void                    Assume             D     %7.1, %4.8 (CallTarget@0x5558d42ec500[Call#11])
  prom-           %7.3  = MkArg                    unboundValue, .cacheGenericTable[0x5558d7601490]_p0, e1.3
  val?            %7.4  = StaticCall         !v    .getMethodsTable[0x5558d3ed3c80](%7.3) e1.3
  val?^ | miss    %7.5  = LdVar              eR    def, e1.3
  val?            %7.6  = Force!<wrapped>    !v    %7.5, e1.3   <cls>
  val?^ | miss    %7.7  = LdVar              eR    table !upd, e1.3
  val?            %7.8  = Force!<wrapped>    !v    %7.7, e1.3   <env->
  val?^ | miss    %7.9  = LdVar              eR    name, e1.3
  val?            %7.10 = Force!<wrapped>    !v    %7.9, e1.3   <str$->
  val?            %7.11 = Subassign2_1D      !v    %7.6, %7.8, %7.10, e1.3
  void                    StVar              lW    table, %7.11, e1.3
  val?^ | miss    %7.13 = LdVar              eR    fdef, e1.3
  void                    Visible            v     
  val?            %7.15 = Force!<value>      !     %7.13, e1.3   <cls>
  goto BB8
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    is.function, e1.3
  lgl$#-          %11.1 = Identical                <blt is.function>, %11.0   <true>
  void                    Assume             D     %11.1, %9.5 (DeadBranchReached@0x5558d42ec500[Test#1])
  val?^ | miss    %11.3 = LdVar              eR    prev, e1.3
  val?            %11.4 = Force!<value>      !v    %11.3, e1.3   <cls>
  val?            %11.5 = CallBuiltin        !v    is.function(%11.4) e1.3   <lgl$->
  lgl$#-          %11.6 = IsType                   %11.5 isA lgl$-
  cp              %11.7 = Checkpoint                -> BB13 (default) | BB12 (if assume failed)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x5558d41dc450+168: [], env=e1.3
  void                    Deopt              !v    %10.0   !
BB8   <- [19, 7]
  val?            %8.0  = Phi                      %7.15:BB7, %19.2:BB19
  void                    Return             l     %8.0
BB13   <- [11]
  void                    Assume             D     %11.6, %11.7 (Typecheck@0x5558d42ec500[Type#10])
  lgl$-           %13.1 = CastType           d     dn %11.5
  lgl$#-          %13.2 = CheckTrueFalse     e     %13.1
  void                    Branch                   %13.2 -> BB15 (if true) | BB14 (if false)
BB12   <- [11]
  fs              %12.0 = FrameState         R     0x5558d41dc450+259: [%11.5], env=e1.3
  void                    Deopt              !v    %12.0   !
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    identical, e1.3
  lgl$#-          %15.1 = Identical                %15.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %15.1, %11.7 (CallTarget@0x5558d42ec500[Call#2])
  prom-           %15.3 = MkArg                    unboundValue, .cacheGenericTable[0x5558d7601490]_p3, e1.3
  prom-           %15.4 = MkArg                    unboundValue, .cacheGenericTable[0x5558d7601490]_p4, e1.3
  ct              %15.5 = PushContext        lCL   %15.3, %15.4, identical(prev, def), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e1.3
  val?^           %15.6 = CastType                 up %15.4
  val?^           %15.7 = CastType                 up %15.3
  env             e15.8 = MkEnv              l     x=%15.7, y=%15.6, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %15.9 = Force!<lazy>       !vL   %15.7, e15.8   <val?>
  val?            %15.10 = Force!<lazy>       !vL   %15.6, e15.8   <val?>
  val?            %15.11 = CallBuiltin        !v    identical(%15.9, %15.10, true, true, true, true, false, true) e15.8
  val?            %15.12 = PopContext         C     %15.11, %15.5   <lgl$->
  lgl$#-          %15.13 = IsType                   %15.12 isA lgl$-
  cp              %15.14 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB14   <- [13]
  (cls|spec|blt)  %14.0 = LdFun              !v    match, e1.3
  fs              %14.1 = FrameState         R     0x5558d41dc450+706: [%14.0], env=e1.3
  void                    Deopt              !v    %14.1, DeadCall@0x5558d42ec500[Call#7], %14.0   !
BB17   <- [15]
  void                    Assume             D     %15.13, %15.14 (Typecheck@0x5558d42ec500[Type#13])
  lgl$-           %17.1 = CastType           d     dn %15.12
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB19 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x5558d41dc450+312: [%15.12], env=e1.3
  void                    Deopt              !v    %16.0   !
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    fdef, e1.3
  void                    Visible            v     
  val?            %19.2 = Force!<value>      !     %19.0, e1.3   <cls>
  goto BB8
BB18   <- [17]
  (cls|spec|blt)  %18.0 = LdFun              !v    @, e1.3
  fs              %18.1 = FrameState         R     0x5558d41dc450+348: [%18.0], env=e1.3
  void                    Deopt              !v    %18.1, DeadCall@0x5558d42ec500[Call#3], %18.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fdef, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    prev, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <cls>
  void                    Return             l     %1.3

│ .cacheGenericTable[0x5558d7601490]                                           │
└──────────────────────────────────────────────────────────────────────────────┘
