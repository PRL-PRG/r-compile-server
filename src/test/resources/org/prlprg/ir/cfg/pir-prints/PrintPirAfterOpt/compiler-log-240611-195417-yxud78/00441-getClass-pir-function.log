
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClass[0x5558d95152f0]                                                     │
│ Context: CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1                    │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
getClass[0x5558d95152f0]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    2
  val?~ | miss    %1.1  = LdArg                    1
  val?^ | miss    %1.2  = LdArg                    0
  lgl$#-          %1.3  = Identical                %1.1, missingArg
  lgl$#-          %1.4  = Identical                %1.0, missingArg
  env             e1.5  = MkEnv              l     Class=%1.2, .Force=%1.1, where=%1.0, parent=<env 0x5558d398c378>, context 1
  void                    Branch                   %1.3 -> BB2 (if true) | BB15 (if false)
BB2   <- [1]
  void                    StArg              lW    .Force, false, e1.5
  goto BB3
BB15   <- [1]
  goto BB3
BB3   <- [2, 15]
  void                    Branch                   %1.4 -> BB14 (if true) | BB4 (if false)
BB14   <- [3]
  prom-           %14.0 = MkArg                    unboundValue, getClass[0x5558d95152f0]_p2, e1.5
  val?^ | miss    %14.1 = CastType                 up %14.0
  void                    StArg              lW    where, %14.1, e1.5
  goto BB5
BB4   <- [3]
  goto BB5
BB5   <- [4, 14]
  cp              %5.0  = Checkpoint                -> BB7 (default) | BB6 (if assume failed)
BB7   <- [5]
  val?^ | miss    %7.0  = LdVar              eR    getClassDef, <env 0x5558d398c378>
  lgl$#-          %7.1  = Identical                %7.0, function(Class, where=topenv(parent.frame()), |...
  void                    Assume             D     %7.1, %5.0 (CallTarget@0x5558d57f7570[Call#3])
  prom-           %7.3  = MkArg                    unboundValue, getClass[0x5558d95152f0]_p0 (!refl), e1.5
  prom-           %7.4  = MkArg                    unboundValue, getClass[0x5558d95152f0]_p1, e1.5
  val?            %7.5  = StaticCall         !v    getClassDef[0x5558d9065f10](%7.3, %7.4) e1.5   <other>
  lgl$-           %7.6  = Is                       %7.5, NULL
  void                    StVar              lW    value, %7.5, e1.5
  val             %7.8  = ChkMissing         e     %7.5
  lgl$#-          %7.9  = CheckTrueFalse     e     %7.6
  void                    Branch                   %7.9 -> BB9 (if true) | BB8 (if false)
BB6   <- [5]
  fs              %6.0  = FrameState         R     0x5558d5e7a840+0: [], env=e1.5
  void                    Deopt              !v    %6.0
BB9   <- [7]
  val?^ | miss    %9.0  = LdVar              eR    .Force, e1.5
  val?            %9.1  = Force!             !v    %9.0, e1.5   <val?_>
  lgl$#-          %9.2  = IsType                   %9.1 isA val?+
  cp              %9.3  = Checkpoint                -> BB11 (default) | BB10 (if assume failed)
BB8   <- [7]
  void                    Visible            v     
  void                    Return             l     %7.5
BB11   <- [9]
  void                    Assume             D     %9.2, %9.3 (Typecheck@0x5558d57f7570[Type#8])
  val?+           %11.1 = CastType           d     dn %9.1   <val?_>
  lgl             %11.2 = Not                wed   %11.1, elided
  lgl$#-          %11.3 = CheckTrueFalse     we    %11.2
  void                    Branch                   %11.3 -> BB13 (if true) | BB12 (if false)
BB10   <- [9]
  fs              %10.0 = FrameState         R     0x5558d5e7a840+90: [%9.1], env=e1.5
  void                    Deopt              !v    %10.0   !
BB13   <- [11]
  (cls|spec|blt)  %13.0 = LdFun              !v    stop, e1.5
  fs              %13.1 = FrameState         R     0x5558d5e7a840+189: [%13.0], env=e1.5
  void                    Deopt              !v    %13.1, DeadCall@0x5558d57f7570[Call#5], %13.0   !
BB12   <- [11]
  (cls|spec|blt)  %12.0 = LdFun              !v    makeClassRepresentation, e1.5
  fs              %12.1 = FrameState         R     0x5558d5e7a840+107: [%12.0], env=e1.5
  void                    Deopt              !v    %12.1, DeadCall@0x5558d57f7570[Call#4], %12.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    where, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     .classEnv, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClass[0x5558d95152f0]_p3, e1.0
  prom-           %1.3  = MkArg                    unboundValue, getClass[0x5558d95152f0]_p4, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3, false) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    Class, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     topenv, e1.0
  prom-           %1.2  = MkArg                    unboundValue, getClass[0x5558d95152f0]_p5, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     parent.frame, e1.0
  val?            %1.2  = Call               !     %1.1() e1.0   <val?_>
  void                    Return             l     %1.2

│ getClass[0x5558d95152f0]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
