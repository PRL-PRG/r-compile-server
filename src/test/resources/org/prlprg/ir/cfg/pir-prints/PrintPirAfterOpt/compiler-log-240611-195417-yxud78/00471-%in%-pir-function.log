
┌──────────────────────────────────────────────────────────────────────────────┐
│ %in%[0x5558d71e58c0]                                                         │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 │
│ Properties:  Eager, ForceOrd: 0 1                                            │
├────── PIR Version After Optimizations
%in%[0x5558d71e58c0]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  env             e1.2  = (MkEnv)            l     x=%1.1, table=%1.0, parent=R_BaseNamespace, context 1
  val+            %1.3  = Force!<lazy>       !vr   %1.1,    <(int|str)+>
  val+            %1.4  = Force<lazy>              %1.0,    <val?->
  lgl$#-          %1.5  = IsType                   %1.4 isA val?-
  cp              %1.6  = Checkpoint                -> BB2 (default) | BB5 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.5, %1.6 (Typecheck@0x5558d3692b30[Type#1])
  val-            %2.1  = CastType           d     dn %1.4
  val+            %2.2  = CallSafeBuiltin    wed   match(%1.3, %2.1, 0L, nil)    <int->
  lgl$#-          %2.3  = IsType                   %2.2 isA int-
  cp              %2.4  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB5   <- [1]
  env             e5.0  = MaterializeEnv           , e1.2   <@?>
  prom-           %5.1  = MkArg                    unboundValue, %in%[0x5558d71e58c0]_p1 (!refl), e5.0
  val?^           %5.2  = CastType                 up %5.1
  prom-           %5.3  = MkArg                    %1.3, %in%[0x5558d71e58c0]_p0 (!refl), e5.0
  val?~           %5.4  = CastType                 up %5.3
  fs              %5.5  = FrameState         R     0x5558d39b24e0+54: [], env=e5.0
  env             e5.6  = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%5.2, x=%5.4, parent=R_BaseNamespace, context 0
  fs              %5.7  = FrameState         R     0x5558d3ebad70+23: [%1.3, %1.4], env=e5.6, next=%5.5
  void                    Deopt              !v    %5.7
BB4   <- [2]
  void                    Visible            v     
  void                    Assume             D     %2.3, %2.4 (Typecheck@0x5558d49e4688[Type#2])
  int-            %4.2  = CastType           d     dn %2.2
  lgl-            %4.3  = Gt                 vwed  %4.2, 0L, elided   <lgl->
  void                    Return             l     %4.3
BB3   <- [2]
  env             e3.0  = MaterializeEnv           , e1.2   <@?>
  prom-           %3.1  = MkArg                    unboundValue, %in%[0x5558d71e58c0]_p1 (!refl), e3.0
  val?^           %3.2  = CastType                 up %3.1
  prom-           %3.3  = MkArg                    %1.3, %in%[0x5558d71e58c0]_p0 (!refl), e3.0
  val?~           %3.4  = CastType                 up %3.3
  fs              %3.5  = FrameState         R     0x5558d39b24e0+54: [], env=e3.0
  env             e3.6  = (MkEnv)            l     incomparables(miss)=nil, nomatch=0L, table=%3.2, x=%3.4, parent=R_BaseNamespace, context 0
  fs              %3.7  = FrameState         R     0x5558d3ebad70+69: [%2.2], env=e3.6, next=%3.5
  void                    Deopt              !v    %3.7
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <(int|str)+>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    table, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <val?->
  void                    Return             l     %1.3

│ %in%[0x5558d71e58c0]                                                         │
└──────────────────────────────────────────────────────────────────────────────┘
