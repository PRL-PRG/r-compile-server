
┌──────────────────────────────────────────────────────────────────────────────┐
│ initialize[0x5558db16ba80]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1                     │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
initialize[0x5558db16ba80]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB13 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    standardGeneric, <env 0x5558d3f397a8>
  lgl$#-          %2.1  = Identical                <blt standardGeneric>, %2.0   <true>
  void                    Assume             D     %2.1, %1.1 (DeadBranchReached@0x5558d6b6f2a8[Test#0])
  env             e2.3  = MkEnv              l     .Object=%1.0, ...(miss)=missingArg, parent=<env 0x5558d3f397a8>, context 1
  val?            %2.4  = CallBuiltin        !v    standardGeneric("initialize") e2.3   <(str|cls)>
  void                    StVar              lW    value, %2.4, e2.3
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB13   <- [1]
  env             e13.0 = (MkEnv)            l     .Object=%1.0, ...(miss)=missingArg, parent=<env 0x5558d3f397a8>, context 1
  fs              %13.1 = FrameState         R     0x5558d6b40140+0: [], env=e13.0
  void                    Deopt              !v    %13.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    identical, e2.3
  lgl$#-          %4.1  = Identical                %4.0, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...
  void                    Assume             D     %4.1, %2.6 (CallTarget@0x5558d6b6f2a8[Call#1])
  prom-           %4.3  = MkArg                    unboundValue, initialize[0x5558db16ba80]_p0, e2.3
  prom-           %4.4  = MkArg                    unboundValue, initialize[0x5558db16ba80]_p2, e2.3
  ct              %4.5  = PushContext        lCL   %4.3, %4.4, identical(class(value), class(.Object)), function(x, y, num.eq=TRUE, single.NA=TRUE, at|..., e2.3
  val?^           %4.6  = CastType                 up %4.4
  val?^           %4.7  = CastType                 up %4.3
  env             e4.8  = MkEnv              l     x=%4.7, y=%4.6, num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %4.9  = Force!<lazy>       !vL   %4.7, e4.8   <val?>
  val?            %4.10 = Force!<lazy>       !vL   %4.6, e4.8   <val?>
  val?            %4.11 = CallBuiltin        !v    identical(%4.9, %4.10, true, true, true, true, false, true) e4.8
  val?            %4.12 = PopContext         C     %4.11, %4.5   <lgl$->
  lgl$#-          %4.13 = IsType                   %4.12 isA lgl$-
  cp              %4.14 = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5558d6b40140+97: [], env=e2.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.13, %4.14 (Typecheck@0x5558d6b6f2a8[Type#5])
  lgl$-           %6.1  = CastType           d     dn %4.12
  lgl$-           %6.2  = Not                d     %6.1, elided
  lgl$#-          %6.3  = CheckTrueFalse     e     %6.2
  void                    Branch                   %6.3 -> BB8 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5558d6b40140+134: [%4.12], env=e2.3
  void                    Deopt              !v    %5.0   !
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    class, e2.3
  lgl$#-          %8.1  = Identical                <blt class>, %8.0   <@?>
  void                    Branch                   %8.1 -> BB10 (if true) | BB9 (if false)
BB7   <- [6]
  val?^ | miss    %7.0  = LdVar              eR    value, e2.3
  void                    Visible            v     
  val?            %7.2  = Force!<value>      !     %7.0, e2.3   <(str|cls)>
  void                    Return             l     %7.2
BB10   <- [8]
  val?^ | miss    %10.0 = LdVar              eR    value, e2.3
  val?            %10.1 = Force!             !v    %10.0, e2.3   <val?_>
  val?            %10.2 = CallBuiltin        !v    class(%10.1) e2.3   <val?_>
  void                    StVar              lW    cv, %10.2, e2.3
  val?^ | miss    %10.4 = LdVar              eR    class, e2.3
  lgl$#-          %10.5 = Identical                <blt class>, %10.4   <@?>
  void                    Branch                   %10.5 -> BB12 (if true) | BB11 (if false)
BB9   <- [8]
  (cls|spec|blt)  %9.0  = LdFun              !v    class, e2.3
  fs              %9.1  = FrameState         R     0x5558d6b40140+179: [%9.0], env=e2.3
  void                    Deopt              !v    %9.1, DeadCall@0x5558d6b6f2a8[Call#4], %9.0   !
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    .Object, e2.3
  val?            %12.1 = Force!             !v    %12.0, e2.3   <val?_>
  val?            %12.2 = CallBuiltin        !v    class(%12.1) e2.3   <val?_>
  void                    StVar              lW    co, %12.2, e2.3
  (cls|spec|blt)  %12.4 = LdFun              !v    .identC, e2.3
  fs              %12.5 = FrameState         R     0x5558d6b40140+366: [%12.4], env=e2.3
  void                    Deopt              !v    %12.5, DeadCall@0x5558d6b6f2a8[Call#6], %12.4   !
BB11   <- [10]
  (cls|spec|blt)  %11.0 = LdFun              !v    class, e2.3
  fs              %11.1 = FrameState         R     0x5558d6b40140+284: [%11.0], env=e2.3
  void                    Deopt              !v    %11.1, DeadCall@0x5558d6b6f2a8[Call#5], %11.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     class, <0x5558d3385748>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, initialize[0x5558db16ba80]_p1, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$+>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    value, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <(str|cls)>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     class, <0x5558d3385748>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, initialize[0x5558db16ba80]_p3, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$+>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .Object, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <(str|cls)>
  void                    Return             l     %1.3

│ initialize[0x5558db16ba80]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
