
┌──────────────────────────────────────────────────────────────────────────────┐
│ try@Prom(3)0[0x5558daaf20a0]                                                 │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
try@Prom(3)0[0x5558daaf20a0]
BB0
  goto BB1
BB1   <- [0]
  val?^ | miss    %1.0  = LdArg                    0
  env             e1.1  = MkEnv              l     e=%1.0, parent=?, context 1
  (cls|spec|blt)  %1.2  = LdFun              !v    conditionCall, ?
  prom-           %1.3  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p0, e1.1
  val?            %1.4  = Call               !v    %1.2(%1.3) e1.1   <val?_>
  lgl$-           %1.5  = Is                       %1.4, NULL
  void                    StVar              lW    call, %1.4, e1.1
  val             %1.7  = ChkMissing         e     %1.4
  lgl$-           %1.8  = Not                d     %1.5, elided
  lgl$#-          %1.9  = CheckTrueFalse     e     %1.8
  void                    Branch                   %1.9 -> BB2 (if true) | BB42 (if false)
BB2   <- [1]
  (cls|spec|blt)  %2.0  = LdFun              !v    identical, e1.1
  prom-           %2.1  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p12, e1.1
  val?            %2.2  = Call               !v    %2.0(%2.1, doTryCatch) e1.1   <val?_>
  lgl$#-          %2.3  = CheckTrueFalse     we    %2.2
  void                    Branch                   %2.3 -> BB41 (if true) | BB3 (if false)
BB42   <- [1]
  void                    StVar              lW    prefix, "Error : ", e1.1
  goto BB20
BB41   <- [2]
  (cls|spec|blt)  %41.0 = LdFun              !v    sys.call, e1.1
  prom-           %41.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p24 (!refl), 
  val?            %41.2 = Call               !v    %41.0(%41.1) e1.1   <val?_>
  void                    StVar              lW    call, %41.2, e1.1
  goto BB4
BB3   <- [2]
  goto BB4
BB20   <- [19, 42, 34]
  (cls|spec|blt)  %20.0 = LdFun              !v    paste0, e1.1
  prom-           %20.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p1, e1.1
  prom-           %20.2 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p2, e1.1
  val?            %20.3 = Call               !v    %20.0(%20.1, %20.2, "
") e1.1   <val?_>
  void                    StVar              lW    msg, %20.3, e1.1
  lgl$#-          %20.5 = IsType                   %20.3 isA val?+
  cp              %20.6 = Checkpoint                -> BB22 (default) | BB21 (if assume failed)
BB4   <- [3, 41]
  (cls|spec|blt)  %4.0  = LdFun              !v    deparse, e1.1
  prom-           %4.1  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p14, e1.1
  val?            %4.2  = Call               !v    %4.0(%4.1) e1.1   <val?_>
  lgl$#-          %4.3  = IsType                   %4.2 isA val?+
  cp              %4.4  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB22   <- [20]
  val             %22.0 = ChkMissing         e     %20.3
  void                    Assume             D     %20.5, %20.6 (Typecheck@0x5558d47f21d8[Type#41])
  val?+           %22.2 = CastType           d     dn %20.3   <val?_>
  val?            %22.3 = Extract1_1D        wed   %22.2, 1L, elided   <val?_>
  val?            %22.4 = CallBuiltin        !v    seterrmessage(%22.3) e1.1
  val?^ | miss    %22.5 = LdVar              eR    silent, e1.1
  void                    Visible            v     
  val?            %22.7 = Force!             !     %22.5, e1.1   <val?_>
  lgl$#-          %22.8 = IsType                   %22.7 isA val?+
  cp              %22.9 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB21   <- [20]
  fs              %21.0 = FrameState         R     0x5558d542a120+960: [], env=e1.1
  void                    Deopt              !v    %21.0   !
BB6   <- [4]
  void                    Assume             D     %4.3, %4.4 (Typecheck@0x5558d47f21d8[Type#8])
  val?+           %6.1  = CastType           d     dn %4.2   <val?_>
  val?            %6.2  = Extract1_1D        wed   %6.1, 1L, elided   <val?_>
  void                    StVar              lW    dcall, %6.2, e1.1
  (cls|spec|blt)  %6.4  = LdFun              !v    paste, e1.1
  prom-           %6.5  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p15, e1.1
  val?            %6.6  = Call               !v    %6.4("Error in", %6.5, ": ") e1.1   <val?_>
  void                    StVar              lW    prefix, %6.6, e1.1
  void                    StVar              lW    LONG, 75L, e1.1
  (cls|spec|blt)  %6.9  = LdFun              !v    strsplit, e1.1
  prom-           %6.10 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p16, e1.1
  val?            %6.11 = Call               !v    %6.9(%6.10, "
") e1.1   <val?_>
  lgl$#-          %6.12 = IsType                   %6.11 isA val?+
  cp              %6.13 = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5558d542a120+223: [%4.2], env=e1.1
  void                    Deopt              !v    %5.0   !
BB24   <- [22]
  void                    Assume             D     %22.8, %22.9 (Typecheck@0x5558d47f21d8[Type#44])
  val?+           %24.1 = CastType           d     dn %22.7   <val?_>
  lgl             %24.2 = Not                vwed  %24.1, elided
  lgl$-           %24.3 = AsLogical          e     %24.2
  lgl$#-          %24.4 = Identical                %24.3, false
  void                    Branch                   %24.4 -> BB33 (if true) | BB25 (if false)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x5558d542a120+1041: [%22.7], env=e1.1
  void                    Deopt              !v    %23.0   !
BB8   <- [6]
  void                    Assume             D     %6.12, %6.13 (Typecheck@0x5558d47f21d8[Type#14])
  val?+           %8.1  = CastType           d     dn %6.11   <val?_>
  val?            %8.2  = Extract2_1D        wed   %8.1, 1L, elided   <val?_>
  void                    StVar              lW    sm, %8.2, e1.1
  (cls|spec|blt)  %8.4  = LdFun              !v    nchar, e1.1
  prom-           %8.5  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p18, e1.1
  val?            %8.6  = NamedCall          !v    %8.4(%8.5, type="w") e1.1   <val?_>
  lgl$#-          %8.7  = IsType                   %8.6 isA val?+
  cp              %8.8  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x5558d542a120+389: [%6.11], env=e1.1
  void                    Deopt              !v    %7.0   !
BB33   <- [24]
  goto BB26
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !     isTRUE, e1.1
  prom-           %25.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p4, e1.1
  val?            %25.2 = Call               !     %25.0(%25.1) e1.1   <val?_>
  lgl$-           %25.3 = AsLogical          e     %25.2
  lgl$-           %25.4 = LAnd                     %24.3, %25.3
  goto BB26
BB10   <- [8]
  void                    Assume             D     %8.7, %8.8 (Typecheck@0x5558d47f21d8[Type#17])
  val?+           %10.1 = CastType           d     dn %8.6   <val?_>
  (int|real|complex)+ %10.2 = Add                wed   14L, %10.1, elided   <val?_>
  (cls|spec|blt)  %10.3 = LdFun              !v    nchar, e1.1
  prom-           %10.4 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p19, e1.1
  val?            %10.5 = NamedCall          !v    %10.3(%10.4, type="w") e1.1   <val?_>
  lgl$#-          %10.6 = IsType                   %10.5 isA val?+
  cp              %10.7 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x5558d542a120+498: [14L, %8.6], env=e1.1
  void                    Deopt              !v    %9.0   !
BB26   <- [33, 25]
  lgl$-           %26.0 = Phi                      %25.4:BB25, %24.3:BB33
  lgl$#-          %26.1 = CheckTrueFalse     e     %26.0
  void                    Branch                   %26.1 -> BB32 (if true) | BB27 (if false)
BB12   <- [10]
  void                    Assume             D     %10.6, %10.7 (Typecheck@0x5558d47f21d8[Type#21])
  val?+           %12.1 = CastType           d     dn %10.5   <val?_>
  (int|real|complex)+ %12.2 = Add                wed   %10.2, %12.1, elided   <val?_>
  void                    StVar              lW    w, %12.2, e1.1
  val?^ | miss    %12.4 = LdVar              eR    is.na, e1.1
  lgl$#-          %12.5 = Identical                <blt is.na>, %12.4   <@?>
  void                    Branch                   %12.5 -> BB40 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x5558d542a120+554: [%10.2, %10.5], env=e1.1
  void                    Deopt              !v    %11.0   !
BB32   <- [26]
  (cls|spec|blt)  %32.0 = LdFun              !v    cat, e1.1
  prom-           %32.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p10, e1.1
  prom-           %32.2 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p11, e1.1
  val?            %32.3 = NamedCall          !v    %32.0(%32.1, file=%32.2) e1.1
  val?            %32.4 = CallBuiltin        !     printDeferredWarnings() e1.1
  goto BB28
BB27   <- [26]
  goto BB28
BB40   <- [12]
  lgl+            %40.0 = CallSafeBuiltin    wed   is.na(%12.2) 
  goto BB14
BB13   <- [12]
  (cls|spec|blt)  %13.0 = LdFun              !v    is.na, e1.1
  prom-           %13.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p20, e1.1
  val?            %13.2 = Call               !v    %13.0(%13.1) e1.1
  goto BB14
BB28   <- [27, 32]
  val?^ | miss    %28.0 = LdVar              eR    invisible, e1.1
  lgl$#-          %28.1 = Identical                <blt invisible>, %28.0   <@?>
  void                    Branch                   %28.1 -> BB31 (if true) | BB29 (if false)
BB14   <- [13, 40]
  val?            %14.0 = Phi                      %13.2:BB13, %40.0:BB40   <val?_>
  lgl$#-          %14.1 = CheckTrueFalse     we    %14.0
  void                    Branch                   %14.1 -> BB35 (if true) | BB15 (if false)
BB31   <- [28]
  (cls|spec|blt)  %31.0 = LdFun              !v    structure, e1.1
  prom-           %31.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p8, e1.1
  prom-           %31.2 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p9, e1.1
  val?            %31.3 = NamedCall          !v    %31.0(%31.1, class="try-error", condition=%31.2) e1.1   <val?_>
  void                    Invisible          v     
  goto BB30
BB29   <- [28]
  (cls|spec|blt)  %29.0 = LdFun              !     invisible, e1.1
  prom-           %29.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p5, e1.1
  val?            %29.2 = Call               !     %29.0(%29.1) e1.1
  goto BB30
BB35   <- [14]
  (cls|spec|blt)  %35.0 = LdFun              !v    nchar, e1.1
  prom-           %35.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p22, e1.1
  val?            %35.2 = NamedCall          !v    %35.0(%35.1, type="b") e1.1   <val?_>
  lgl$#-          %35.3 = IsType                   %35.2 isA val?+
  cp              %35.4 = Checkpoint                -> BB37 (default) | BB36 (if assume failed)
BB15   <- [14]
  goto BB16
BB30   <- [29, 31]
  val?            %30.0 = Phi                      %29.2:BB29, %31.3:BB31   <val?_>
  void                    Return             l     %30.0
BB37   <- [35]
  void                    Assume             D     %35.3, %35.4 (Typecheck@0x5558d47f21d8[Type#27])
  val?+           %37.1 = CastType           d     dn %35.2   <val?_>
  (int|real|complex)+ %37.2 = Add                wed   14L, %37.1, elided   <val?_>
  (cls|spec|blt)  %37.3 = LdFun              !v    nchar, e1.1
  prom-           %37.4 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p23, e1.1
  val?            %37.5 = NamedCall          !v    %37.3(%37.4, type="b") e1.1   <val?_>
  lgl$#-          %37.6 = IsType                   %37.5 isA val?+
  cp              %37.7 = Checkpoint                -> BB39 (default) | BB38 (if assume failed)
BB36   <- [35]
  fs              %36.0 = FrameState         R     0x5558d542a120+732: [14L, %35.2], env=e1.1
  void                    Deopt              !v    %36.0   !
BB16   <- [15, 39]
  val?^ | miss    %16.0 = LdVar              eR    w, e1.1
  val?            %16.1 = Force!             !v    %16.0, e1.1   <val?_>
  val?^ | miss    %16.2 = LdVar              eR    LONG, e1.1
  val?            %16.3 = Force!             !v    %16.2, e1.1   <val?_>
  lgl$#-          %16.4 = IsType                   %16.3 isA val?+
  lgl$#-          %16.5 = IsType                   %16.1 isA val?+
  cp              %16.6 = Checkpoint                -> BB18 (default) | BB17 (if assume failed)
BB39   <- [37]
  void                    Assume             D     %37.6, %37.7 (Typecheck@0x5558d47f21d8[Type#31])
  val?+           %39.1 = CastType           d     dn %37.5   <val?_>
  (int|real|complex)+ %39.2 = Add                wed   %37.2, %39.1, elided   <val?_>
  void                    StVar              lW    w, %39.2, e1.1
  goto BB16
BB38   <- [37]
  fs              %38.0 = FrameState         R     0x5558d542a120+788: [%37.2, %37.5], env=e1.1
  void                    Deopt              !v    %38.0   !
BB18   <- [16]
  void                    Assume             D     %16.5, %16.6 (Typecheck@0x5558d47f21d8[Type#33])
  val?+           %18.1 = CastType           d     dn %16.1   <val?_>
  void                    Assume             D     %16.4, %16.6 (Typecheck@0x5558d47f21d8[Type#34])
  val?+           %18.3 = CastType           d     dn %16.3   <val?_>
  lgl             %18.4 = Gt                 wed   %18.1, %18.3, elided   <val?_>
  lgl$#-          %18.5 = CheckTrueFalse     we    %18.4
  void                    Branch                   %18.5 -> BB34 (if true) | BB19 (if false)
BB17   <- [16]
  fs              %17.0 = FrameState         R     0x5558d542a120+831: [%16.1, %16.3], env=e1.1
  void                    Deopt              !v    %17.0   !
BB34   <- [18]
  (cls|spec|blt)  %34.0 = LdFun              !v    paste0, e1.1
  prom-           %34.1 = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p21, e1.1
  val?            %34.2 = Call               !v    %34.0(%34.1, "
  ") e1.1   <val?_>
  void                    StVar              lW    prefix, %34.2, e1.1
  goto BB20
BB19   <- [18]
  goto BB20
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    prefix, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     conditionMessage, e1.0
  prom-           %1.2  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p3, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     getOption, e1.0
  val?            %1.2  = Call               !     %1.1("show.error.messages") e1.0   <val?_>
  void                    Return             l     %1.2
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     structure, e1.0
  prom-           %1.2  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p6, e1.0
  prom-           %1.3  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p7, e1.0
  val?            %1.4  = NamedCall          !     %1.1(%1.2, class="try-error", condition=%1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    msg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    msg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    msg, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    outFile, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <val?_>
  val?            %1.3  = Extract2_1D        !v    %1.2, 1L, e1.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    call, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    dcall, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     conditionMessage, e1.0
  prom-           %1.2  = MkArg                    unboundValue, try@Prom(3)0[0x5558daaf20a0]_p17, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    e, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    dcall, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 19:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    sm, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <val?_>
  val?            %1.3  = Extract1_1D        !v    %1.2, 1L, e1.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    w, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 21:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    prefix, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 22:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    dcall, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 23:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    sm, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <val?_>
  val?            %1.3  = Extract1_1D        !v    %1.2, 1L, e1.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %1.3
Prom 24:
BB0
  goto BB1
BB1   <- [0]
  void                    Visible            v     
  void                    Return             l     -4L

│ try@Prom(3)0[0x5558daaf20a0]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
