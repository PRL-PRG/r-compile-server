
┌──────────────────────────────────────────────────────────────────────────────┐
│ .matchSigLength[0x5558db3bbc20]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl2,NonRefl3,!Obj3       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
.matchSigLength[0x5558db3bbc20]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    3
  val?^           %1.1  = LdArg                    2
  val?^           %1.2  = LdArg                    1
  val?^           %1.3  = LdArg                    0
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB44 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    .getGenericSigLength, <env 0x5558d398c378>
  lgl$#-          %2.1  = Identical                %2.0, function(fdef, env=environment(fdef), check=TR|...
  void                    Assume             D     %2.1, %1.4 (CallTarget@0x5558d6b1f100[Call#0])
  env             e2.3  = MkEnv              l     sig=%1.3, fdef=%1.2, fenv=%1.1, reset=%1.0, parent=<env 0x5558d398c378>, context 1
  prom-           %2.4  = MkArg                    unboundValue, .matchSigLength[0x5558db3bbc20]_p0, e2.3
  prom-           %2.5  = MkArg                    unboundValue, .matchSigLength[0x5558db3bbc20]_p1 (!refl), e2.3
  val?            %2.6  = StaticCall         !v    .getGenericSigLength[0x5558ddc56d50](%2.4, %2.5, true) e2.3   <(int|real)$->
  void                    StVar              lW    nargs, %2.6, e2.3
  cp              %2.8  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB44   <- [1]
  env             e44.0 = (MkEnv)            l     sig=%1.3, fdef=%1.2, fenv=%1.1, reset=%1.0, parent=<env 0x5558d398c378>, context 1
  fs              %44.1 = FrameState         R     0x5558d788ff30+0: [], env=e44.0
  void                    Deopt              !v    %44.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    length, e2.3
  lgl$#-          %4.1  = Identical                <blt length>, %4.0   <true>
  void                    Assume             D     %4.1, %2.8 (DeadBranchReached@0x5558d6b1f100[Test#0])
  val?^ | miss    %4.3  = LdVar              eR    sig, e2.3
  val?            %4.4  = Force!<lazy>       !v    %4.3, e2.3   <str>
  val?            %4.5  = CallBuiltin        !v    length(%4.4) e2.3   <int$->
  lgl$#-          %4.6  = IsType                   %4.5 isA int$-
  cp              %4.7  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5558d788ff30+56: [], env=e2.3
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.6, %4.7 (Typecheck@0x5558d6b1f100[Type#5])
  int$-           %6.1  = CastType           d     dn %4.5
  void                    StVar              lW    n, %6.1, e2.3
  cp              %6.3  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5558d788ff30+147: [%4.5], env=e2.3
  void                    Deopt              !v    %5.0   !
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    packageSlot, e2.3
  lgl$#-          %8.1  = Identical                %8.0, function(object) <(rir::DispatchTable*)0x5558d|...
  void                    Assume             D     %8.1, %6.3 (CallTarget@0x5558d6b1f100[Call#2])
  prom-           %8.3  = MkArg                    unboundValue, .matchSigLength[0x5558db3bbc20]_p2, e2.3
  ct              %8.4  = PushContext        lCL   %8.3, packageSlot(sig), function(object) <(rir::DispatchTable*)0x5558d|..., e2.3
  val?^           %8.5  = CastType                 up %8.3
  val?^ | miss    %8.6  = LdVar              eR    attr, <env 0x5558d398c378>
  lgl$#-          %8.7  = Identical                <blt attr>, %8.6   <true>
  cp              %8.8  = Checkpoint                -> BB10 (default) | BB9 (if assume failed)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x5558d788ff30+161: [], env=e2.3
  void                    Deopt              !v    %7.0   !
BB10   <- [8]
  void                    Assume             D     %8.7, %8.8 (DeadBranchReached@0x5558d63db7c8[Test#0])
  env             e10.1 = MkEnv              l     object=%8.5, parent=<env 0x5558d398c378>, context 1
  val?            %10.2 = Force!<lazy>       !vL   %8.5, e10.1   <(str|other)>
  val?            %10.3 = CallBuiltin        !v    attr(%10.2, "package") e10.1   <(nil|str)->
  val?            %10.4 = PopContext         C     %10.3, %8.4   <(nil|str)->
  void                    StVar              lW    pkgs, %10.4, e2.3
  cp              %10.6 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB9   <- [8]
  fs              %9.0  = FrameState         R     0x5558d788ff30+193: [], env=e2.3
  env             e9.1  = (MkEnv)            l     object=%8.5, parent=<env 0x5558d398c378>, context 1
  fs              %9.2  = FrameState         R     0x5558d582f630+17: [<blt attr>, %8.7], env=e9.1, next=%9.0
  void                    Deopt              !v    %9.2   !
BB12   <- [10]
  val?^ | miss    %12.0 = LdVar              eR    n, e2.3
  lgl$#-          %12.1 = IsType                   %12.0 isA int$-
  void                    Assume             D     %12.1, %10.6 (Typecheck@0x5558d6b1f100[Type#8])
  int$-           %12.3 = CastType           d     dn %12.0   <>
  val?^ | miss    %12.4 = LdVar              eR    nargs, e2.3
  lgl$#-          %12.5 = IsType                   %12.4 isA val?~- | miss
  void                    Assume             D     %12.5, %10.6 (Typecheck@0x5558d6b1f100[Type#9])
  val?~- | miss   %12.7 = CastType           d     dn %12.4
  val?-           %12.8 = Force!<value>            %12.7,    <(int|real)$->
  lgl-            %12.9 = Lt                 wed   %12.3, %12.8, elided   <lgl$->
  lgl$#-          %12.10 = IsType                   %12.9 isA lgl$-
  cp              %12.11 = Checkpoint                -> BB14 (default) | BB13 (if assume failed)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x5558d788ff30+207: [], env=e2.3
  void                    Deopt              !v    %11.0   !
BB14   <- [12]
  void                    Assume             D     %12.10, %12.11 (Typecheck@0x5558d6b1f100[Type#10])
  lgl$-           %14.1 = CastType           d     dn %12.9
  lgl$#-          %14.2 = CheckTrueFalse     e     %14.1
  void                    Branch                   %14.2 -> BB41 (if true) | BB15 (if false)
BB13   <- [12]
  fs              %13.0 = FrameState         R     0x5558d788ff30+236: [%12.9], env=e2.3
  void                    Deopt              !v    %13.0   !
BB41   <- [14]
  (int|real|complex)- %41.0 = Sub                wed   %12.8, %12.3, elided   <>
  void                    StVar              lW    more, %41.0, e2.3
  val?^ | miss    %41.2 = LdVar              eR    c, e2.3
  lgl$#-          %41.3 = Identical                <blt c>, %41.2   <@?>
  void                    Branch                   %41.3 -> BB43 (if true) | BB42 (if false)
BB15   <- [14]
  lgl-            %15.0 = Gt                 wed   %12.3, %12.8, elided   <lgl$->
  lgl$#-          %15.1 = IsType                   %15.0 isA lgl$-
  cp              %15.2 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB43   <- [41]
  val             %43.0 = ChkMissing         e     %10.4
  (cls|spec|blt)  %43.1 = LdFun              !v    rep, e2.3
  fs              %43.2 = FrameState         R     0x5558d788ff30+1329: [<blt c>, %10.4, %43.1], env=e2.3
  void                    Deopt              !v    %43.2, DeadCall@0x5558d6b1f100[Call#11], %43.1   !
BB42   <- [41]
  (cls|spec|blt)  %42.0 = LdFun              !v    c, e2.3
  fs              %42.1 = FrameState         R     0x5558d788ff30+1273: [%42.0], env=e2.3
  void                    Deopt              !v    %42.1, DeadCall@0x5558d6b1f100[Call#9], %42.0   !
BB17   <- [15]
  void                    Assume             D     %15.1, %15.2 (Typecheck@0x5558d6b1f100[Type#13])
  lgl$-           %17.1 = CastType           d     dn %15.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB19 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x5558d788ff30+276: [%15.0], env=e2.3
  void                    Deopt              !v    %16.0   !
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    all, e2.3
  lgl$#-          %19.1 = Identical                <blt all>, %19.0   <@?>
  void                    Branch                   %19.1 -> BB21 (if true) | BB20 (if false)
BB18   <- [17]
  val             %18.0 = ChkMissing         e     %10.4
  lgl$#-          %18.1 = IsType                   %18.0 isA val?~- | miss
  void                    Assume             D     %18.1, %15.2 (Typecheck@0x5558d6b1f100[Type#84])
  val-            %18.3 = CastType           d     dn %18.0   <(nil|str)->
  val?^ | miss    %18.4 = LdVar              eR    packageSlot<-, e2.3
  lgl$#-          %18.5 = Identical                %18.4, function(object, value) <(rir::DispatchTable*)|...
  void                    Assume             D     %18.5, %15.2 (CallTarget@0x5558d6b1f100[Call#17])
  val?^ | miss    %18.7 = LdVar              eR    sig, e2.3
  val?            %18.8 = Force!<wrapped>    !v    %18.7, e2.3   <str>
  ct              %18.9 = PushContext        lCL   %18.8, %18.3, packageSlot<-(sig, value=pkgs), function(object, value) <(rir::DispatchTable*)|..., e2.3
  env             e18.10 = MkEnv              l     object=%18.8, value=%18.3, parent=<env 0x5558d398c378>, context 1
  (cls|spec|blt)  %18.11 = LdFun              !v    attr<-, <0x5558d3388e08>, <env 0x5558d398c378>
  val?            %18.12 = NamedCall          !v    %18.11(%18.8, "package", value=%18.3) e18.10   <str>
  void                    StVar              lW    object, %18.12, e18.10
  val             %18.14 = ChkMissing         e     %18.12
  val?            %18.15 = PopContext         C     %18.12, %18.9   <str>
  void                    StVar              lW    sig, %18.15, e2.3
  val             %18.17 = ChkMissing         e     %18.15
  void                    Visible            v     
  void                    Return             l     %18.15
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    sig, e2.3
  val?            %21.1 = Force!             !v    %21.0, e2.3   <>
  lgl$#-          %21.2 = IsType                   %21.1 isA val+   <@?>
  void                    Branch                   %21.2 -> BB40 (if true) | BB22 (if false)
BB20   <- [19]
  (cls|spec|blt)  %20.0 = LdFun              !v    all, e2.3
  fs              %20.1 = FrameState         R     0x5558d788ff30+320: [%20.0], env=e2.3
  void                    Deopt              !v    %20.1, DeadCall@0x5558d6b1f100[Call#3], %20.0   !
BB40   <- [21]
  val?^ | miss    %40.0 = LdVar              eR    nargs, e2.3
  val?            %40.1 = Force!             !v    %40.0, e2.3   <>
  val?            %40.2 = Add                !v    %40.1, 1, e2.3   <>
  val?^ | miss    %40.3 = LdVar              eR    n, e2.3
  val?            %40.4 = Force!             !v    %40.3, e2.3   <>
  val?            %40.5 = Colon              !v    %40.2, %40.4, e2.3   <>
  goto BB23
BB22   <- [21]
  prom-           %22.0 = MkArg                    unboundValue, .matchSigLength[0x5558db3bbc20]_p3, e2.3
  goto BB23
BB23   <- [40, 22]
  val?            %23.0 = Phi                      %40.5:BB40, %22.0:BB22
  val?            %23.1 = Extract1_1D        !v    %21.1, %23.0, e2.3   <>
  val?            %23.2 = Eq                 !v    %23.1, "ANY", e2.3   <>
  val?            %23.3 = CallBuiltin        !v    all(%23.2) e2.3   <>
  lgl$#-          %23.4 = CheckTrueFalse     we    %23.3
  void                    Branch                   %23.4 -> BB39 (if true) | BB24 (if false)
BB39   <- [23]
  val?^ | miss    %39.0 = LdVar              eR    nargs, e2.3
  val?            %39.1 = Force!             !v    %39.0, e2.3   <>
  (cls|spec|blt)  %39.2 = LdFun              !v    length<-, e2.3
  fs              %39.3 = FrameState         R     0x5558d788ff30+1021: [%39.1, %39.2], env=e2.3
  void                    Deopt              !v    %39.3, DeadCall@0x5558d6b1f100[Call#7], %39.2   !
BB24   <- [23]
  val?^ | miss    %24.0 = LdVar              eR    sig, e2.3
  val?            %24.1 = Force!             !v    %24.0, e2.3   <>
  lgl$#-          %24.2 = IsType                   %24.1 isA val+   <@?>
  void                    Branch                   %24.2 -> BB38 (if true) | BB25 (if false)
BB38   <- [24]
  val?^ | miss    %38.0 = LdVar              eR    n, e2.3
  val?            %38.1 = Force!             !v    %38.0, e2.3   <>
  goto BB26
BB25   <- [24]
  prom-           %25.0 = MkArg                    unboundValue, .matchSigLength[0x5558db3bbc20]_p4, e2.3
  goto BB26
BB26   <- [38, 25]
  val?            %26.0 = Phi                      %38.1:BB38, %25.0:BB25
  val?            %26.1 = Extract2_1D        !v    %24.1, %26.0, e2.3   <>
  val?            %26.2 = Eq                 !v    %26.1, "ANY", e2.3   <>
  lgl$#-          %26.3 = CheckTrueFalse     we    %26.2   <@?>
  void                    Branch                   %26.3 -> BB31 (if true) | BB27 (if false)
BB31   <- [26]
  val?^ | miss    %31.0 = LdVar              eR    n, e2.3
  val?            %31.1 = Force!             !v    %31.0, e2.3   <>
  val?            %31.2 = Sub                !v    %31.1, 1, e2.3   <>
  void                    StVar              lW    n, %31.2, e2.3
  goto BB32
BB27   <- [26]
  goto BB28
BB32   <- [31, 36]
  val?^ | miss    %32.0 = LdVar              eR    sig, e2.3
  val?            %32.1 = Force!             !v    %32.0, e2.3   <>
  lgl$#-          %32.2 = IsType                   %32.1 isA val+   <@?>
  void                    Branch                   %32.2 -> BB37 (if true) | BB33 (if false)
BB28   <- [27, 35]
  val?^ | miss    %28.0 = LdVar              eR    reset, e2.3
  val?            %28.1 = Force!             !v    %28.0, e2.3   <>
  lgl$#-          %28.2 = CheckTrueFalse     we    %28.1
  void                    Branch                   %28.2 -> BB30 (if true) | BB29 (if false)
BB37   <- [32]
  val?^ | miss    %37.0 = LdVar              eR    n, e2.3
  val?            %37.1 = Force!             !v    %37.0, e2.3   <>
  goto BB34
BB33   <- [32]
  prom-           %33.0 = MkArg                    unboundValue, .matchSigLength[0x5558db3bbc20]_p5, e2.3
  goto BB34
BB30   <- [28]
  (cls|spec|blt)  %30.0 = LdFun              !v    .resetSigLength, e2.3
  fs              %30.1 = FrameState         R     0x5558d788ff30+769: [%30.0], env=e2.3
  void                    Deopt              !v    %30.1, DeadCall@0x5558d6b1f100[Call#4], %30.0   !
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    n, e2.3
  val?            %29.1 = Force!             !v    %29.0, e2.3   <>
  (cls|spec|blt)  %29.2 = LdFun              !v    length<-, e2.3
  fs              %29.3 = FrameState         R     0x5558d788ff30+821: [%29.1, %29.2], env=e2.3
  void                    Deopt              !v    %29.3, DeadCall@0x5558d6b1f100[Call#5], %29.2   !
BB34   <- [37, 33]
  val?            %34.0 = Phi                      %37.1:BB37, %33.0:BB33
  val?            %34.1 = Extract2_1D        !v    %32.1, %34.0, e2.3   <>
  val?            %34.2 = Eq                 !v    %34.1, "ANY", e2.3   <>
  lgl$#-          %34.3 = CheckTrueFalse     we    %34.2
  void                    Branch                   %34.3 -> BB36 (if true) | BB35 (if false)
BB36   <- [34]
  val?^ | miss    %36.0 = LdVar              eR    n, e2.3
  val?            %36.1 = Force!             !v    %36.0, e2.3   <>
  val?            %36.2 = Sub                !v    %36.1, 1, e2.3   <>
  void                    StVar              lW    n, %36.2, e2.3
  goto BB32
BB35   <- [34]
  goto BB28
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fdef, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fenv, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <env->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    sig, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    nargs, e1.0
  val?            %1.2  = Force              !v    %1.1, e1.0   <>
  val?            %1.3  = Add                !v    %1.2, 1, e1.0   <>
  val?^ | miss    %1.4  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.6  = Force              !     %1.4, e1.0   <>
  val?            %1.7  = Colon              !     %1.3, %1.6, e1.0   <>
  void                    Return             l     %1.7
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    n, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <>
  void                    Return             l     %1.3

│ .matchSigLength[0x5558db3bbc20]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
