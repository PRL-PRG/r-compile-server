
┌──────────────────────────────────────────────────────────────────────────────┐
│ is[0x5558dec12a40]                                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1       │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
is[0x5558dec12a40]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    1
  val?^           %1.1  = LdArg                    0
  val?^ | miss    %1.2  = LdVar              eR    class, <env 0x5558d398c378>
  lgl$#-          %1.3  = Identical                <blt class>, %1.2   <true>
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB106 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.3, %1.4 (DeadBranchReached@0x5558d47c5278[Test#0])
  env             e2.1  = MkEnv              l     object=%1.1, class2=%1.0, parent=<env 0x5558d398c378>, context 1
  val?            %2.2  = Force!<lazy>       !vr   %1.1,    <val?>
  val?            %2.3  = CallBuiltin        !v    class(%2.2) e2.1   <str+>
  void                    StVar              lW    class1, %2.3, e2.1
  lgl$#-          %2.5  = IsType                   %2.3 isA val?+
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB106   <- [1]
  env             e106.0 = (MkEnv)            l     object=%1.1, class2=%1.0, parent=<env 0x5558d398c378>, context 1
  fs              %106.1 = FrameState         R     0x5558d5594420+17: [<blt class>, %1.3], env=e106.0
  void                    Deopt              !v    %106.1
BB4   <- [2]
  val?^ | miss    %4.0  = LdVar              eR    length, e2.1
  lgl$#-          %4.1  = Identical                <blt length>, %4.0   <true>
  void                    Assume             D     %4.1, %2.6 (DeadBranchReached@0x5558d47c5278[Test#1])
  val             %4.3  = ChkMissing         e     %2.3
  void                    Assume             D     %2.5, %2.6 (Typecheck@0x5558d47c5278[Type#2])
  val?+           %4.5  = CastType           d     dn %2.3   <str+>
  (int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
  lgl$#-          %4.7  = IsType                   %4.6 isA int$-
  cp              %4.8  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x5558d5594420+105: [], env=e2.1
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.7, %4.8 (Typecheck@0x5558d47c5278[Type#5])
  int$-           %6.1  = CastType           d     dn %4.6
  lgl$-           %6.2  = Gt                 d     %6.1, 1L, elided   <lgl$->
  void                    StVar              lW    S3Case, %6.2, e2.1
  cp              %6.4  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5558d5594420+196: [%4.6], env=e2.1
  void                    Deopt              !v    %5.0   !
BB8   <- [6]
  lgl$#-          %8.0  = CheckTrueFalse     e     %6.2
  void                    Branch                   %8.0 -> BB105 (if true) | BB9 (if false)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x5558d5594420+222: [], env=e2.1
  void                    Deopt              !v    %7.0   !
BB105   <- [8]
  lgl$#-          %105.0 = IsType                   %4.5 isA val+   <true>
  void                    Assume             D     %105.0, %6.4 (DeadBranchReached@0x5558d47c5278[Test#2])
  lgl$#-          %105.2 = IsType                   %4.5 isA val?-
  void                    Assume             D     %105.2, %6.4 (Typecheck@0x5558d47c5278[Type#8])
  val?-           %105.4 = CastType           d     dn %4.5   <str->
  val?            %105.5 = Extract2_1D        wed   %105.4, 1L, elided   <str$->
  void                    StVar              lW    class1, %105.5, e2.1
  goto BB10
BB9   <- [8]
  goto BB10
BB10   <- [9, 105]
  cp              %10.0 = Checkpoint                -> BB12 (default) | BB11 (if assume failed)
BB12   <- [10]
  lgl$-           %12.0 = Missing            eR    class2, e2.1
  void                    Visible            v     
  lgl$#-          %12.2 = CheckTrueFalse     e     %12.0
  void                    Branch                   %12.2 -> BB104 (if true) | BB13 (if false)
BB11   <- [10]
  fs              %11.0 = FrameState         R     0x5558d5594420+314: [], env=e2.1
  void                    Deopt              !v    %11.0   !
BB104   <- [12]
  (cls|spec|blt)  %104.0 = LdFun              !     extends, e2.1
  prom-           %104.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p58, e2.1
  val?            %104.2 = Call               !     %104.0(%104.1) e2.1   <val?_>
  goto BB79
BB13   <- [12]
  val?^ | miss    %13.0 = LdVar              eR    getClassDef, e2.1
  lgl$#-          %13.1 = Identical                %13.0, function(Class, where=topenv(parent.frame()), |...
  void                    Assume             D     %13.1, %10.0 (CallTarget@0x5558d47c5278[Call#3])
  prom-           %13.3 = MkArg                    unboundValue, is[0x5558dec12a40]_p0 (!refl), e2.1
  val?            %13.4 = StaticCall         !v    getClassDef[0x5558d9625e40](%13.3) e2.1   <other>
  void                    StVar              lW    class1Def, %13.4, e2.1
  void                    StVar              lW    class2Def, nil, e2.1
  cp              %13.7 = Checkpoint                -> BB15 (default) | BB14 (if assume failed)
BB79   <- [104, 102, 78]
  val?            %79.0 = Phi                      %78.0:BB78, %102.3:BB102, %104.2:BB104
  void                    Return             l     %79.0
BB15   <- [13]
  val?^ | miss    %15.0 = LdVar              eR    is.character, e2.1
  lgl$#-          %15.1 = Identical                <blt is.character>, %15.0   <true>
  void                    Assume             D     %15.1, %13.7 (DeadBranchReached@0x5558d47c5278[Test#3])
  val?^ | miss    %15.3 = LdVar              eR    class2, e2.1
  val?            %15.4 = Force!<lazy>       !v    %15.3, e2.1   <str$+>
  lgl$#-          %15.5 = CallSafeBuiltin    wed   is.character(%15.4)    <lgl$->
  void                    Branch                   %15.5 -> BB103 (if true) | BB16 (if false)
BB14   <- [13]
  fs              %14.0 = FrameState         R     0x5558d5594420+430: [], env=e2.1
  void                    Deopt              !v    %14.0   !
BB103   <- [15]
  goto BB17
BB16   <- [15]
  val?^ | miss    %16.0 = LdVar              eR    class2, e2.1
  val?            %16.1 = Force!             !v    %16.0, e2.1   <val?_>
  void                    StVar              lW    class2Def, %16.1, e2.1
  (cls|spec|blt)  %16.3 = LdFun              !v    @, e2.1
  prom-           %16.4 = MkArg                    unboundValue, is[0x5558dec12a40]_p56, e2.1
  prom-           %16.5 = MkArg                    unboundValue, is[0x5558dec12a40]_p57, e2.1
  val?            %16.6 = Call               !v    %16.3(%16.4, %16.5) e2.1   <val?_>
  void                    StVar              lW    class2, %16.6, e2.1
  goto BB17
BB17   <- [103, 16]
  val?^ | miss    %17.0 = LdVar              eR    class1Def, e2.1
  void                    Visible            v     
  val?            %17.2 = Force!<value>      !     %17.0, e2.1   <other>
  lgl$-           %17.3 = Is                       %17.2, NULL
  cp              %17.4 = Checkpoint                -> BB19 (default) | BB18 (if assume failed)
BB19   <- [17]
  lgl$#-          %19.0 = CheckTrueFalse     e     %17.3
  void                    Branch                   %19.0 -> BB102 (if true) | BB20 (if false)
BB18   <- [17]
  fs              %18.0 = FrameState         R     0x5558d5594420+621: [%17.2], env=e2.1
  void                    Deopt              !v    %18.0   !
BB102   <- [19]
  (cls|spec|blt)  %102.0 = LdFun              !     inherits, e2.1
  prom-           %102.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p54, e2.1
  prom-           %102.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p55, e2.1
  val?            %102.3 = Call               !     %102.0(%102.1, %102.2) e2.1   <val?_>
  goto BB79
BB20   <- [19]
  val?^ | miss    %20.0 = LdVar              eR    class2Def, e2.1
  lgl$#-          %20.1 = IsType                   %20.0 isA val?~- | miss
  void                    Assume             D     %20.1, %17.4 (Typecheck@0x5558d47c5278[Type#25])
  val?~- | miss   %20.3 = CastType           d     dn %20.0
  val?-           %20.4 = Force!<value>            %20.3,    <nil->
  lgl$-           %20.5 = Is                       %20.4, NULL
  lgl$#-          %20.6 = CheckTrueFalse     e     %20.5
  void                    Branch                   %20.6 -> BB101 (if true) | BB21 (if false)
BB101   <- [20]
  val?^ | miss    %101.0 = LdVar              eR    getClassDef, e2.1
  lgl$#-          %101.1 = Identical                %101.0, function(Class, where=topenv(parent.frame()), |...
  void                    Assume             D     %101.1, %17.4 (CallTarget@0x5558d47c5278[Call#7])
  prom-           %101.3 = MkArg                    unboundValue, is[0x5558dec12a40]_p47, e2.1
  prom-           %101.4 = MkArg                    unboundValue, is[0x5558dec12a40]_p48, e2.1
  prom-           %101.5 = MkArg                    unboundValue, is[0x5558dec12a40]_p50, e2.1
  val?            %101.6 = StaticCall         !v    getClassDef[0x5558d595a780](%101.3, %101.4, %101.5) e2.1   <other>
  void                    StVar              lW    class2Def, %101.6, e2.1
  goto BB22
BB21   <- [20]
  goto BB22
BB22   <- [21, 101]
  cp              %22.0 = Checkpoint                -> BB24 (default) | BB23 (if assume failed)
BB24   <- [22]
  val?^ | miss    %24.0 = LdVar              eR    S3Case, e2.1
  lgl$#-          %24.1 = IsType                   %24.0 isA lgl$-
  void                    Assume             D     %24.1, %22.0 (Typecheck@0x5558d47c5278[Type#36])
  lgl$-           %24.3 = CastType           d     dn %24.0
  lgl$-           %24.4 = AsLogical                %24.3
  lgl$#-          %24.5 = Identical                %24.4, true
  void                    Branch                   %24.5 -> BB100 (if true) | BB25 (if false)
BB23   <- [22]
  fs              %23.0 = FrameState         R     0x5558d5594420+771: [], env=e2.1
  void                    Deopt              !v    %23.0   !
BB100   <- [24]
  goto BB30
BB25   <- [24]
  val?^ | miss    %25.0 = LdVar              eR    is.object, e2.1
  lgl$#-          %25.1 = Identical                <blt is.object>, %25.0   <true>
  void                    Assume             D     %25.1, %22.0 (DeadBranchReached@0x5558d47c5278[Test#4])
  val?^ | miss    %25.3 = LdVar              eR    object, e2.1
  val?            %25.4 = Force!<wrapped>    !v    %25.3, e2.1   <val?>
  lgl$#-          %25.5 = CallSafeBuiltin    wed   is.object(%25.4)    <lgl$->
  cp              %25.6 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB30   <- [100, 29]
  lgl$-           %30.0 = Phi                      %29.2:BB29, %24.4:BB100
  lgl$-           %30.1 = AsLogical                %30.0
  lgl$#-          %30.2 = Identical                %30.1, false
  void                    StVar              lW    S3Case, %30.0, e2.1
  void                    Branch                   %30.2 -> BB98 (if true) | BB31 (if false)
BB27   <- [25]
  void                    Branch                   %25.5 -> BB99 (if true) | BB28 (if false)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x5558d5594420+883: [%24.4, %25.5], env=e2.1
  void                    Deopt              !v    %26.0   !
BB98   <- [30]
  goto BB44
BB31   <- [30]
  val?^ | miss    %31.0 = LdVar              eR    class2Def, e2.1
  val?            %31.1 = Force!<value>      !v    %31.0, e2.1   <other>
  lgl$-           %31.2 = Is                       %31.1, NULL
  lgl$-           %31.3 = AsLogical                %31.2
  lgl$#-          %31.4 = Identical                %31.3, true
  cp              %31.5 = Checkpoint                -> BB33 (default) | BB32 (if assume failed)
BB99   <- [27]
  val?^ | miss    %99.0 = LdVar              eR    isS4, e2.1
  lgl$#-          %99.1 = Identical                <blt isS4>, %99.0   <true>
  void                    Assume             D     %99.1, %25.6 (DeadBranchReached@0x5558d47c5278[Test#5])
  val?^ | miss    %99.3 = LdVar              eR    object, e2.1
  val?            %99.4 = Force!<wrapped>    !v    %99.3, e2.1   <(cls|other)>
  lgl$#-          %99.5 = CallSafeBuiltin    wed   isS4(%99.4)    <lgl$->
  lgl$#-          %99.6 = Not                d     %99.5, elided
  lgl$-           %99.7 = LAnd                     %25.5, %99.6
  goto BB29
BB28   <- [27]
  goto BB29
BB44   <- [98, 43]
  lgl$-           %44.0 = Phi                      %43.2:BB43, %30.1:BB98
  void                    StVar              lW    S3Case, %44.0, e2.1
  cp              %44.2 = Checkpoint                -> BB46 (default) | BB45 (if assume failed)
BB33   <- [31]
  void                    Branch                   %31.4 -> BB97 (if true) | BB34 (if false)
BB32   <- [31]
  fs              %32.0 = FrameState         R     0x5558d5594420+1036: [%30.1, %31.1], env=e2.1
  void                    Deopt              !v    %32.0   !
BB29   <- [28, 99]
  lgl$-           %29.0 = Phi                      %99.7:BB99, %25.5:BB28
  lgl$-           %29.1 = AsLogical                %29.0
  lgl$-           %29.2 = LOr                      %24.4, %29.1
  goto BB30
BB46   <- [44]
  void                    Visible            v     
  lgl$#-          %46.1 = CheckTrueFalse     e     %44.0
  void                    Branch                   %46.1 -> BB95 (if true) | BB47 (if false)
BB45   <- [44]
  fs              %45.0 = FrameState         R     0x5558d5594420+1160: [], env=e2.1
  void                    Deopt              !v    %45.0   !
BB97   <- [33]
  goto BB37
BB34   <- [33]
  val?^ | miss    %34.0 = LdVar              eR    %in%, e2.1
  lgl$#-          %34.1 = Identical                %34.0, function(x, table) <(rir::DispatchTable*)0x555|...
  void                    Assume             D     %34.1, %31.5 (CallTarget@0x5558d47c5278[Call#15])
  prom-           %34.3 = MkArg                    unboundValue, is[0x5558dec12a40]_p2, e2.1
  val?^ | miss    %34.4 = LdVar              eR    class2, e2.1
  val?            %34.5 = Force!<wrapped>    !v    %34.4, e2.1   <str$->
  prom-           %34.6 = MkArg                    %34.5, is[0x5558dec12a40]_p1 (!refl), 
  val?            %34.7 = StaticCall         !v    %in%[0x5558ddcd11f0](%34.6, %34.3) e2.1   <lgl$->
  lgl$#-          %34.8 = IsType                   %34.7 isA lgl$-
  cp              %34.9 = Checkpoint                -> BB36 (default) | BB35 (if assume failed)
BB95   <- [46]
  (cls|spec|blt)  %95.0 = LdFun              !     inherits, e2.1
  prom-           %95.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p45, e2.1
  prom-           %95.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p46, e2.1
  val?            %95.3 = Call               !     %95.0(%95.1, %95.2) e2.1   <val?_>
  goto BB78
BB47   <- [46]
  val?^ | miss    %47.0 = LdVar              eR    .identC, e2.1
  lgl$#-          %47.1 = Identical                %47.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Assume             D     %47.1, %44.2 (CallTarget@0x5558d47c5278[Call#17])
  prom-           %47.3 = MkArg                    unboundValue, is[0x5558dec12a40]_p4, e2.1
  prom-           %47.4 = MkArg                    unboundValue, is[0x5558dec12a40]_p5, e2.1
  val?            %47.5 = StaticCall         !v    .identC[0x5558d7989540](%47.3, %47.4) e2.1   <lgl$->
  lgl$#-          %47.6 = IsType                   %47.5 isA lgl$-
  cp              %47.7 = Checkpoint                -> BB49 (default) | BB48 (if assume failed)
BB37   <- [36, 97]
  lgl$-           %37.0 = Phi                      %36.3:BB36, %31.3:BB97
  lgl$-           %37.1 = AsLogical                %37.0
  lgl$#-          %37.2 = Identical                %37.1, true
  cp              %37.3 = Checkpoint                -> BB39 (default) | BB38 (if assume failed)
BB36   <- [34]
  void                    Assume             D     %34.8, %34.9 (Typecheck@0x5558d47c5278[Type#47])
  lgl$-           %36.1 = CastType           d     dn %34.7
  lgl$-           %36.2 = AsLogical                %36.1
  lgl$-           %36.3 = LOr                      %31.3, %36.2
  goto BB37
BB35   <- [34]
  fs              %35.0 = FrameState         R     0x5558d5594420+1090: [%30.1, %31.3, %34.7], env=e2.1
  void                    Deopt              !v    %35.0   !
BB78   <- [95, 77]
  val?            %78.0 = Phi                      %77.0:BB77, %95.3:BB95
  goto BB79
BB49   <- [47]
  void                    Assume             D     %47.6, %47.7 (Typecheck@0x5558d47c5278[Type#53])
  lgl$-           %49.1 = CastType           d     dn %47.5
  lgl$-           %49.2 = AsLogical                %49.1
  lgl$#-          %49.3 = Identical                %49.2, true
  void                    Branch                   %49.3 -> BB94 (if true) | BB50 (if false)
BB48   <- [47]
  fs              %48.0 = FrameState         R     0x5558d5594420+1217: [%47.5], env=e2.1
  void                    Deopt              !v    %48.0   !
BB39   <- [37]
  void                    Branch                   %37.2 -> BB96 (if true) | BB40 (if false)
BB38   <- [37]
  fs              %38.0 = FrameState         R     0x5558d5594420+1097: [%30.1, %37.0], env=e2.1
  void                    Deopt              !v    %38.0   !
BB94   <- [49]
  goto BB53
BB50   <- [49]
  val?^ | miss    %50.0 = LdVar              eR    .identC, e2.1
  lgl$#-          %50.1 = Identical                %50.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Assume             D     %50.1, %47.7 (CallTarget@0x5558d47c5278[Call#18])
  prom-           %50.3 = MkArg                    unboundValue, is[0x5558dec12a40]_p6, e2.1
  val?            %50.4 = StaticCall         !v    .identC[0x5558de864970](%50.3, "ANY") e2.1   <lgl$->
  lgl$#-          %50.5 = IsType                   %50.4 isA lgl$-
  cp              %50.6 = Checkpoint                -> BB52 (default) | BB51 (if assume failed)
BB96   <- [39]
  goto BB43
BB40   <- [39]
  val?^ | miss    %40.0 = LdVar              eR    extends, e2.1
  lgl$#-          %40.1 = Identical                %40.0, function(class1, class2, maybe=TRUE, fullInfo=|...
  void                    Assume             D     %40.1, %37.3 (CallTarget@0x5558d47c5278[Call#16])
  prom-           %40.3 = MkArg                    unboundValue, is[0x5558dec12a40]_p3, e2.1
  val?            %40.4 = Call               !v    function(class1, class2, maybe=TRUE, fullInfo=|...(%40.3, "oldClass") e2.1   <lgl$->
  lgl$#-          %40.5 = IsType                   %40.4 isA lgl$-
  cp              %40.6 = Checkpoint                -> BB42 (default) | BB41 (if assume failed)
BB53   <- [52, 94]
  lgl$-           %53.0 = Phi                      %52.3:BB52, %49.2:BB94
  lgl$#-          %53.1 = CheckTrueFalse     e     %53.0
  void                    Branch                   %53.1 -> BB93 (if true) | BB54 (if false)
BB52   <- [50]
  void                    Assume             D     %50.5, %50.6 (Typecheck@0x5558d47c5278[Type#55])
  lgl$-           %52.1 = CastType           d     dn %50.4
  lgl$-           %52.2 = AsLogical                %52.1
  lgl$-           %52.3 = LOr                      %49.2, %52.2
  goto BB53
BB51   <- [50]
  fs              %51.0 = FrameState         R     0x5558d5594420+1266: [%49.2, %50.4], env=e2.1
  void                    Deopt              !v    %51.0   !
BB43   <- [42, 96]
  lgl$-           %43.0 = Phi                      %42.3:BB42, %37.1:BB96
  lgl$-           %43.1 = AsLogical                %43.0
  lgl$-           %43.2 = LAnd                     %30.1, %43.1
  goto BB44
BB42   <- [40]
  void                    Assume             D     %40.5, %40.6 (Typecheck@0x5558d47c5278[Type#49])
  lgl$-           %42.1 = CastType           d     dn %40.4
  lgl$-           %42.2 = AsLogical                %42.1
  lgl$-           %42.3 = LOr                      %37.1, %42.2
  goto BB43
BB41   <- [40]
  fs              %41.0 = FrameState         R     0x5558d5594420+1141: [%30.1, %37.1, %40.4], env=e2.1
  void                    Deopt              !v    %41.0   !
BB93   <- [53]
  void                    Visible            v     
  goto BB77
BB54   <- [53]
  (cls|spec|blt)  %54.0 = LdFun              !v    @, <0x5558d3384bd8>, e2.1
  prom-           %54.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p7, e2.1
  prom-           %54.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p8, e2.1
  val?            %54.3 = Call               !v    %54.0(%54.1, %54.2) e2.1   <vec+>
  lgl$#-          %54.4 = IsType                   %54.3 isA val+   <true>
  cp              %54.5 = Checkpoint                -> BB56 (default) | BB55 (if assume failed)
BB77   <- [93, 76]
  val?            %77.0 = Phi                      %76.0:BB76, true:BB93
  goto BB78
BB56   <- [54]
  void                    Assume             D     %54.4, %54.5 (DeadBranchReached@0x5558d47c5278[Test#6])
  val?^ | miss    %56.1 = LdVar              eR    class2, e2.1
  val?            %56.2 = Force!<wrapped>    !v    %56.1, e2.1   <str$+>
  lgl$#-          %56.3 = IsType                   %56.2 isA val?+
  cp              %56.4 = Checkpoint                -> BB58 (default) | BB57 (if assume failed)
BB55   <- [54]
  fs              %55.0 = FrameState         R     0x5558d5594420+1316: [%54.3], env=e2.1
  void                    Deopt              !v    %55.0   !
BB58   <- [56]
  lgl$#-          %58.0 = IsType                   %54.3 isA val?+
  void                    Assume             D     %58.0, %56.4 (Typecheck@0x5558d47c5278[Type#58])
  val?+           %58.2 = CastType           d     dn %54.3   <vec+>
  void                    Assume             D     %56.3, %56.4 (Typecheck@0x5558d47c5278[Type#60])
  val?+           %58.4 = CastType           d     dn %56.2   <str$+>
  val?            %58.5 = Extract2_1D        wed   %58.2, %58.4, elided   <(nil|other)>
  lgl$-           %58.6 = Is                       %58.5, NULL
  void                    Invisible          v     
  void                    StVar              lW    contained, %58.5, e2.1
  lgl$-           %58.9 = Not                vd    %58.6, elided
  lgl$#-          %58.10 = CheckTrueFalse     e     %58.9
  void                    Branch                   %58.10 -> BB88 (if true) | BB59 (if false)
BB57   <- [56]
  fs              %57.0 = FrameState         R     0x5558d5594420+1361: [%54.3, %56.2], env=e2.1
  void                    Deopt              !v    %57.0   !
BB88   <- [58]
  (cls|spec|blt)  %88.0 = LdFun              !     @, <0x5558d3384bd8>, e2.1
  prom-           %88.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p40, e2.1
  prom-           %88.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p41, e2.1
  val?            %88.3 = Call               !     %88.0(%88.1, %88.2) e2.1   <lgl$->
  lgl$#-          %88.4 = IsType                   %88.3 isA lgl$-
  cp              %88.5 = Checkpoint                -> BB90 (default) | BB89 (if assume failed)
BB59   <- [58]
  val?^ | miss    %59.0 = LdVar              eR    class2Def, e2.1
  val?            %59.1 = Force!<value>      !v    %59.0, e2.1   <other>
  lgl$-           %59.2 = Is                       %59.1, NULL
  cp              %59.3 = Checkpoint                -> BB61 (default) | BB60 (if assume failed)
BB90   <- [88]
  void                    Assume             D     %88.4, %88.5 (Typecheck@0x5558d47c5278[Type#108])
  lgl$-           %90.1 = CastType           d     dn %88.3
  lgl$-           %90.2 = AsLogical                %90.1
  lgl$#-          %90.3 = Identical                %90.2, true
  void                    Branch                   %90.3 -> BB92 (if true) | BB91 (if false)
BB89   <- [88]
  fs              %89.0 = FrameState         R     0x5558d5594420+1957: [%88.3], env=e2.1
  void                    Deopt              !v    %89.0   !
BB61   <- [59]
  lgl$#-          %61.0 = CheckTrueFalse     e     %59.2
  void                    Branch                   %61.0 -> BB87 (if true) | BB62 (if false)
BB60   <- [59]
  fs              %60.0 = FrameState         R     0x5558d5594420+1405: [%59.1], env=e2.1
  void                    Deopt              !v    %60.0   !
BB92   <- [90]
  goto BB76
BB91   <- [90]
  (cls|spec|blt)  %91.0 = LdFun              !     @, e2.1
  prom-           %91.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p42, e2.1
  prom-           %91.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p43, e2.1
  val?            %91.3 = Call               !     %91.0(%91.1, %91.2) e2.1   <val?_>
  (cls|spec|blt)  %91.4 = ChkFunction        e     %91.3
  prom-           %91.5 = MkArg                    unboundValue, is[0x5558dec12a40]_p44, e2.1
  val?            %91.6 = Call               !     %91.4(%91.5) e2.1   <val?_>
  lgl$-           %91.7 = AsLogical          e     %91.6
  lgl$-           %91.8 = LOr                      %90.2, %91.7
  goto BB76
BB87   <- [61]
  void                    Visible            v     
  goto BB75
BB62   <- [61]
  val?^ | miss    %62.0 = LdVar              eR    .identC, e2.1
  lgl$#-          %62.1 = Identical                %62.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...
  void                    Assume             D     %62.1, %59.3 (CallTarget@0x5558d47c5278[Call#20])
  prom-           %62.3 = MkArg                    unboundValue, is[0x5558dec12a40]_p9, e2.1
  val?            %62.4 = StaticCall         !v    .identC[0x5558de864970](%62.3, "classRepresentation") e2.1   <lgl$->
  lgl$#-          %62.5 = IsType                   %62.4 isA lgl$-
  cp              %62.6 = Checkpoint                -> BB64 (default) | BB63 (if assume failed)
BB76   <- [92, 91, 75]
  val?            %76.0 = Phi                      %75.0:BB75, %91.8:BB91, %90.2:BB92
  goto BB77
BB75   <- [87, 74]
  val?            %75.0 = Phi                      %74.0:BB74, false:BB87
  goto BB76
BB64   <- [62]
  void                    Assume             D     %62.5, %62.6 (Typecheck@0x5558d47c5278[Type#65])
  lgl$-           %64.1 = CastType           d     dn %62.4
  lgl$-           %64.2 = Not                d     %64.1, elided
  lgl$-           %64.3 = AsLogical                %64.2
  lgl$#-          %64.4 = Identical                %64.3, false
  void                    Branch                   %64.4 -> BB86 (if true) | BB65 (if false)
BB63   <- [62]
  fs              %63.0 = FrameState         R     0x5558d5594420+1458: [%62.4], env=e2.1
  void                    Deopt              !v    %63.0   !
BB86   <- [64]
  goto BB66
BB65   <- [64]
  (cls|spec|blt)  %65.0 = LdFun              !v    isClassUnion, e2.1
  prom-           %65.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p11, e2.1
  val?            %65.2 = Call               !v    %65.0(%65.1) e2.1   <val?_>
  lgl$-           %65.3 = AsLogical          e     %65.2
  lgl$-           %65.4 = LAnd                     %64.3, %65.3
  goto BB66
BB66   <- [86, 65]
  lgl$-           %66.0 = Phi                      %65.4:BB65, %64.3:BB86
  lgl$#-          %66.1 = CheckTrueFalse     e     %66.0
  void                    Branch                   %66.1 -> BB82 (if true) | BB67 (if false)
BB82   <- [66]
  val?^ | miss    %82.0 = LdVar              eR    any, e2.1
  lgl$#-          %82.1 = Identical                <blt any>, %82.0   <@?>
  void                    Branch                   %82.1 -> BB85 (if true) | BB83 (if false)
BB67   <- [66]
  (cls|spec|blt)  %67.0 = LdFun              !v    @, <0x5558d3384bd8>, e2.1
  prom-           %67.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p12, e2.1
  prom-           %67.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p13, e2.1
  val?            %67.3 = Call               !v    %67.0(%67.1, %67.2) e2.1   <vec+>
  lgl$#-          %67.4 = IsType                   %67.3 isA val+   <true>
  lgl$#-          %67.5 = IsType                   %67.3 isA val?+
  cp              %67.6 = Checkpoint                -> BB69 (default) | BB68 (if assume failed)
BB85   <- [82]
  (cls|spec|blt)  %85.0 = LdFun              !v    %in%, e2.1
  prom-           %85.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p30, e2.1
  prom-           %85.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p36, e2.1
  val?            %85.3 = Call               !v    %85.0(%85.1, %85.2) e2.1   <val?_>
  val?            %85.4 = CallBuiltin        !     any(%85.3) e2.1
  goto BB84
BB83   <- [82]
  (cls|spec|blt)  %83.0 = LdFun              !v    %in%, e2.1
  prom-           %83.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p20, e2.1
  prom-           %83.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p26, e2.1
  val?            %83.3 = Call               !v    %83.0(%83.1, %83.2) e2.1   <val?_>
  val?            %83.4 = CallBuiltin        !     any(%83.3) e2.1
  goto BB84
BB69   <- [67]
  void                    Assume             D     %67.4, %67.6 (DeadBranchReached@0x5558d47c5278[Test#7])
  val?^ | miss    %69.1 = LdVar              eR    class1, e2.1
  lgl$#-          %69.2 = IsType                   %69.1 isA val?~+ | miss
  void                    Assume             D     %69.2, %67.6 (Typecheck@0x5558d47c5278[Type#72])
  val?~+ | miss   %69.4 = CastType           d     dn %69.1
  val?+           %69.5 = Force!<value>            %69.4,    <str$+>
  void                    Assume             D     %67.5, %67.6 (Typecheck@0x5558d47c5278[Type#70])
  val?+           %69.7 = CastType           d     dn %67.3   <vec+>
  val?            %69.8 = Extract2_1D        wed   %69.7, %69.5, elided   <nil->
  lgl$-           %69.9 = Is                       %69.8, NULL
  void                    StVar              lW    ext, %69.8, e2.1
  val             %69.11 = ChkMissing         e     %69.8
  void                    Visible            v     
  lgl$-           %69.13 = Not                vd    %69.9, elided
  lgl$-           %69.14 = AsLogical                %69.13
  lgl$#-          %69.15 = Identical                %69.14, false
  void                    Branch                   %69.15 -> BB81 (if true) | BB70 (if false)
BB68   <- [67]
  fs              %68.0 = FrameState         R     0x5558d5594420+1553: [%67.3], env=e2.1
  void                    Deopt              !v    %68.0   !
BB84   <- [83, 85]
  val?            %84.0 = Phi                      %83.4:BB83, %85.4:BB85   <val?_>
  goto BB74
BB81   <- [69]
  goto BB73
BB70   <- [69]
  (cls|spec|blt)  %70.0 = LdFun              !v    @, e2.1
  prom-           %70.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p14, e2.1
  prom-           %70.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p15, e2.1
  val?            %70.3 = Call               !v    %70.0(%70.1, %70.2) e2.1   <val?_>
  lgl$-           %70.4 = AsLogical          e     %70.3
  lgl$#-          %70.5 = Identical                %70.4, true
  void                    Branch                   %70.5 -> BB80 (if true) | BB71 (if false)
BB74   <- [84, 73]
  val?            %74.0 = Phi                      %73.0:BB73, %84.0:BB84
  goto BB75
BB73   <- [81, 72]
  lgl$-           %73.0 = Phi                      %72.2:BB72, %69.14:BB81
  goto BB74
BB80   <- [70]
  goto BB72
BB71   <- [70]
  (cls|spec|blt)  %71.0 = LdFun              !v    @, e2.1
  prom-           %71.1 = MkArg                    unboundValue, is[0x5558dec12a40]_p16, e2.1
  prom-           %71.2 = MkArg                    unboundValue, is[0x5558dec12a40]_p17, e2.1
  val?            %71.3 = Call               !v    %71.0(%71.1, %71.2) e2.1   <val?_>
  (cls|spec|blt)  %71.4 = ChkFunction        e     %71.3
  prom-           %71.5 = MkArg                    unboundValue, is[0x5558dec12a40]_p18, e2.1
  val?            %71.6 = Call               !v    %71.4(%71.5) e2.1   <val?_>
  lgl$-           %71.7 = AsLogical          e     %71.6
  lgl$-           %71.8 = LOr                      %70.4, %71.7
  goto BB72
BB72   <- [80, 71]
  lgl$-           %72.0 = Phi                      %71.8:BB71, %70.4:BB80
  lgl$-           %72.1 = AsLogical                %72.0
  lgl$-           %72.2 = LAnd                     %69.14, %72.1
  void                    Visible            v     
  goto BB73
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    .BasicClasses, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str->
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <other>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 5:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 6:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 7:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 8:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    contains, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 9:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     class, <0x5558d3385748>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p10, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <str$+>
  void                    Return             l     %1.3
Prom 10:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <other>
  void                    Return             l     %1.3
Prom 11:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 12:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 13:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    subclasses, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 14:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ext, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 15:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    simple, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 16:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    ext, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 17:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    test, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 18:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    object, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 20:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     c, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p21, e1.0
  prom-           %1.3  = MkArg                    unboundValue, is[0x5558dec12a40]_p22, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 21:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 22:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     names, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p23, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 23:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     @, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p24, e1.0
  prom-           %1.3  = MkArg                    unboundValue, is[0x5558dec12a40]_p25, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 24:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 25:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    contains, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 26:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     names, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p27, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 27:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     @, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p28, e1.0
  prom-           %1.3  = MkArg                    unboundValue, is[0x5558dec12a40]_p29, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 28:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 29:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    subclasses, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 30:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     c, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p31, e1.0
  prom-           %1.3  = MkArg                    unboundValue, is[0x5558dec12a40]_p32, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 31:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 32:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     names, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p33, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 33:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     @, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p34, e1.0
  prom-           %1.3  = MkArg                    unboundValue, is[0x5558dec12a40]_p35, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 34:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 35:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    contains, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 36:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     names, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p37, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 37:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     @, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p38, e1.0
  prom-           %1.3  = MkArg                    unboundValue, is[0x5558dec12a40]_p39, e1.0
  val?            %1.4  = Call               !     %1.1(%1.2, %1.3) e1.0   <val?_>
  void                    Return             l     %1.4
Prom 38:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 39:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    subclasses, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 40:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    contained, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 41:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    simple, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 42:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    contained, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 43:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    test, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 44:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    object, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 45:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    object, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 46:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 47:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <str$+>
  void                    Return             l     %1.3
Prom 48:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     .classDefEnv, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p49, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 49:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 50:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !v    packageSlot, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p51, e1.0
  val?            %1.3  = Call               !v    %1.1(%1.2) e1.0   <val?_>
  void                    Invisible          v     
  void                    StVar              lW    package, %1.3, e1.0
  lgl$-           %1.6  = Is                       %1.3, NULL
  lgl$-           %1.7  = Not                vd    %1.6, elided
  lgl$#-          %1.8  = CheckTrueFalse     e     %1.7
  void                    Branch                   %1.8 -> BB2 (if true) | BB4 (if false)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    package, e1.0
  void                    Visible            v     
  val?            %2.2  = Force              !     %2.0, e1.0   <val?_>
  goto BB3
BB4   <- [1]
  (cls|spec|blt)  %4.0  = LdFun              !     getPackageName, e1.0
  prom-           %4.1  = MkArg                    unboundValue, is[0x5558dec12a40]_p52, e1.0
  val?            %4.2  = Call               !     %4.0(%4.1) e1.0   <val?_>
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.2:BB4, %2.2:BB2
  void                    Return             l     %3.0
Prom 51:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 52:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     topenv, e1.0
  prom-           %1.2  = MkArg                    unboundValue, is[0x5558dec12a40]_p53, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <val?_>
  void                    Return             l     %1.3
Prom 53:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     parent.frame, e1.0
  val?            %1.2  = Call               !     %1.1() e1.0   <val?_>
  void                    Return             l     %1.2
Prom 54:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    object, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 55:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 56:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class2Def, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 57:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    className, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 58:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    class1, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ is[0x5558dec12a40]                                                           │
└──────────────────────────────────────────────────────────────────────────────┘
