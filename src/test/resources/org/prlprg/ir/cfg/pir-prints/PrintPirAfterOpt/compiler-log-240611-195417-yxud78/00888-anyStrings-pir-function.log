
┌──────────────────────────────────────────────────────────────────────────────┐
│ anyStrings[0x5558d3652300]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
anyStrings[0x5558d3652300]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB13 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    isTRUE, ?
  lgl$#-          %2.1  = Identical                %2.0, function(x) <(rir::DispatchTable*)0x5558d52435|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x5558dda467c8[Call#0])
  env             e2.3  = MkEnv              l     x=%1.0, parent=?, context 1
  val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <lgl$->
  lgl$#-          %2.5  = IsType                   %2.4 isA lgl$-
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB13   <- [1]
  env             e13.0 = (MkEnv)            l     x=%1.0, parent=?, context 1
  fs              %13.1 = FrameState         R     0x5558db3632d0+0: [], env=e13.0
  void                    Deopt              !v    %13.1
BB4   <- [2]
  void                    Assume             D     %2.5, %2.6 (Typecheck@0x5558dda467c8[Type#0])
  lgl$-           %4.1  = CastType           d     dn %2.4
  lgl$-           %4.2  = CallSafeBuiltin    wed   is.na(%4.1)    <lgl$->
  cp              %4.3  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  prom-           %3.0  = MkArg                    unboundValue, anyStrings[0x5558d3652300]_p0, e2.3
  val?^           %3.1  = CastType                 up %3.0
  fs              %3.2  = FrameState         R     0x5558db3632d0+32: [], env=e2.3
  env             e3.3  = (MkEnv)            l     x=%3.1, parent=R_BaseNamespace, context 0
  fs              %3.4  = FrameState         R     0x5558d37d66d0+69: [<blt is.logical>], env=e3.3, next=%3.2
  fs              %3.5  = FrameState         R     0x5558dad3f460+5(pr): [%2.4], env=e2.3, next=%3.4
  void                    Deopt              !v    %3.5   !
BB6   <- [4]
  lgl$-           %6.0  = Not                d     %4.2, elided
  lgl$-           %6.1  = AsLogical                %6.0
  lgl$-           %6.2  = AsLogical                %6.1
  lgl$-           %6.3  = AsLogical                %6.2
  lgl$#-          %6.4  = Identical                %6.3, false
  void                    Branch                   %6.4 -> BB12 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x5558db3632d0+32: [], env=e2.3
  prom-           %5.1  = MkArg                    %4.1, anyStrings[0x5558d3652300]_p0 (!refl), e2.3
  val?~           %5.2  = CastType                 up %5.1
  env             e5.3  = (MkEnv)            l     x=%5.2, parent=R_BaseNamespace, context 0
  fs              %5.4  = FrameState         R     0x5558d37d66d0+311: [true, %4.2], env=e5.3, next=%5.0
  void                    Deopt              !v    %5.4   !
BB12   <- [6]
  goto BB8
BB7   <- [6]
  lgl$-           %7.0  = AsLogical                %4.1
  lgl$-           %7.1  = LAnd                     %6.3, %7.0
  goto BB8
BB8   <- [12, 7]
  lgl$-           %8.0  = Phi                      %7.1:BB7, %6.3:BB12
  lgl$#-          %8.1  = CheckTrueFalse     e     %8.0
  void                    Branch                   %8.1 -> BB11 (if true) | BB9 (if false)
BB11   <- [8]
  val?^ | miss    %11.0 = LdVar              eR    character, e2.3
  lgl$#-          %11.1 = Identical                %11.0, function(length=0L) <(rir::DispatchTable*)0x55|...
  void                    Assume             D     %11.1, %4.3 (CallTarget@0x5558dda467c8[Call#1])
  str-            %11.3 = CallSafeBuiltin    vwed  vector("character", 0L)    <str->
  goto BB10
BB9   <- [8]
  val?^ | miss    %9.0  = LdVar              eR    x, e2.3
  void                    Visible            v     
  val?            %9.2  = Force!             !     %9.0, e2.3   <val?_>
  goto BB10
BB10   <- [9, 11]
  val?            %10.0 = Phi                      %9.2:BB9, %11.3:BB11
  void                    Return             l     %10.0
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    x, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <lgl$->
  void                    Return             l     %1.3

│ anyStrings[0x5558d3652300]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
