
┌──────────────────────────────────────────────────────────────────────────────┐
│ checkNA[0x55c18de639a0]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
checkNA[0x55c18de639a0]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    0
  val?^ | miss    %1.1  = LdVar              eR    is.na, ?
  lgl$#-          %1.2  = Identical                <blt is.na>, %1.1   <true>
  val+            %1.3  = Force<value>             %1.0,    <str$->
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB34 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.2, %1.4 (DeadBranchReached@0x55c18d8fc128[Test#0])
  val?^ | miss    %2.1  = LdVar              eR    match, ?
  lgl$#-          %2.2  = Identical                %2.1, function(x, table, nomatch=NA, incomparables=N|...
  void                    Assume             D     %2.2, %1.4 (CallTarget@0x55c18d8fc128[Call#3])
  val?^ | miss    %2.4  = LdVar              eR    names, ?
  lgl$#-          %2.5  = Identical                %2.4, <blt names>
  void                    Assume             D     %2.5, %1.4 (CallTarget@0x55c18d8fc128[Call#4])
  val?^ | miss    %2.7  = LdVar              eR    gpars, ?
  env             e2.8  = MkEnv              l     gparname=%1.0, parent=?, context 1
  val?            %2.9  = Force!<wrapped>    !v    %2.7, e2.8   <vec+>
  val?            %2.10 = CallBuiltin        !v    names(%2.9) e2.8   <(nil|str)->
  lgl$#-          %2.11 = IsType                   %2.10 isA val?-
  cp              %2.12 = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB34   <- [1]
  env             e34.0 = (MkEnv)            l     gparname=%1.0, parent=?, context 1
  fs              %34.1 = FrameState         R     0x55c18d5a8710+17: [<blt is.na>, %1.2], env=e34.0
  void                    Deopt              !v    %34.1
BB4   <- [2]
  void                    Assume             D     %2.11, %2.12 (Typecheck@0x55c18b1f2b30[Type#1])
  val?-           %4.1  = CastType           d     dn %2.10   <(nil|str)->
  val+            %4.2  = CallSafeBuiltin    wed   match(%1.3, %4.1, NA, nil)    <int$->
  lgl$#-          %4.3  = IsType                   %4.2 isA int$-
  cp              %4.4  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55c18d5a8710+97: [<blt is.na>], env=e2.8
  prom-           %3.1  = MkArg                    unboundValue, checkNA[0x55c18de639a0]_p1, e2.8
  val?^           %3.2  = CastType                 up %3.1
  prom-           %3.3  = MkArg                    %1.3, checkNA[0x55c18de639a0]_p0 (!refl), e2.8
  val?~           %3.4  = CastType                 up %3.3
  env             e3.5  = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%3.2, x=%3.4, parent=R_BaseNamespace, context 0
  fs              %3.6  = FrameState         R     0x55c18ba1ad70+23: [%1.3], env=e3.5, next=%3.0
  fs              %3.7  = FrameState         R     0x55c18d573740+32(pr): [%2.10], env=e2.8, next=%3.6
  void                    Deopt              !v    %3.7   !
BB6   <- [4]
  void                    Assume             D     %4.3, %4.4 (Typecheck@0x55c18d8fc128[Type#7])
  int$-           %6.1  = CastType           d     dn %4.2
  lgl$-           %6.2  = CallSafeBuiltin    wed   is.na(%6.1)    <lgl$->
  lgl$-           %6.3  = Not                d     %6.2, elided
  lgl$#-          %6.4  = CheckTrueFalse     e     %6.3
  void                    Branch                   %6.4 -> BB9 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x55c18d5a8710+97: [<blt is.na>], env=e2.8
  prom-           %5.1  = MkArg                    unboundValue, checkNA[0x55c18de639a0]_p1, e2.8
  val?^           %5.2  = CastType                 up %5.1
  prom-           %5.3  = MkArg                    %1.3, checkNA[0x55c18de639a0]_p0 (!refl), e2.8
  val?~           %5.4  = CastType                 up %5.3
  env             e5.5  = (MkEnv)            l     incomparables(miss)=nil, nomatch(miss)=NA, table=%5.2, x=%5.4, parent=R_BaseNamespace, context 0
  fs              %5.6  = FrameState         R     0x55c18ba1ad70+69: [%4.2], env=e5.5, next=%5.0
  void                    Deopt              !v    %5.6   !
BB9   <- [6]
  val?^ | miss    %9.0  = LdVar              eR    any, e2.8
  lgl$#-          %9.1  = Identical                <blt any>, %9.0   <@?>
  void                    Branch                   %9.1 -> BB11 (if true) | BB10 (if false)
BB7   <- [6]
  void                    Invisible          v     
  goto BB8
BB11   <- [9]
  val?^ | miss    %11.0 = LdVar              eR    is.na, e2.8
  lgl$#-          %11.1 = Identical                <blt is.na>, %11.0   <@?>
  void                    Branch                   %11.1 -> BB13 (if true) | BB12 (if false)
BB10   <- [9]
  (cls|spec|blt)  %10.0 = LdFun              !v    any, e2.8
  fs              %10.1 = FrameState         R     0x55c18d5a8710+170: [%10.0], env=e2.8
  void                    Deopt              !v    %10.1, DeadCall@0x55c18d8fc128[Call#5], %10.0   !
BB8   <- [7, 18, 31]
  void                    Return             l     nil
BB13   <- [11]
  val?^ | miss    %13.0 = LdVar              eR    gpars, e2.8
  val?            %13.1 = Force!             !v    %13.0, e2.8   <val?_>
  lgl$#-          %13.2 = IsType                   %13.1 isA val+   <@?>
  void                    Branch                   %13.2 -> BB33 (if true) | BB14 (if false)
BB12   <- [11]
  (cls|spec|blt)  %12.0 = LdFun              !v    is.na, e2.8
  fs              %12.1 = FrameState         R     0x55c18d5a8710+230: [<blt any>, %12.0], env=e2.8
  void                    Deopt              !v    %12.1, DeadCall@0x55c18d8fc128[Call#7], %12.0   !
BB33   <- [13]
  val?^ | miss    %33.0 = LdVar              eR    gparname, e2.8
  val?            %33.1 = Force!             !v    %33.0, e2.8   <val?_>
  goto BB15
BB14   <- [13]
  prom-           %14.0 = MkArg                    unboundValue, checkNA[0x55c18de639a0]_p4, e2.8
  goto BB15
BB15   <- [14, 33]
  val?            %15.0 = Phi                      %33.1:BB33, %14.0:BB14
  val?            %15.1 = Extract2_1D        !v    %13.1, %15.0, e2.8   <val?_>
  lgl$#-          %15.2 = IsType                   %15.1 isA val?+
  cp              %15.3 = Checkpoint                -> BB17 (default) | BB16 (if assume failed)
BB17   <- [15]
  void                    Assume             D     %15.2, %15.3 (Typecheck@0x55c18d8fc128[Type#21])
  val?+           %17.1 = CastType           d     dn %15.1   <val?_>
  lgl+            %17.2 = CallSafeBuiltin    wed   is.na(%17.1)    <val?_>
  val?            %17.3 = CallBuiltin        !v    any(%17.2) e2.8   <val?_>
  lgl$#-          %17.4 = CheckTrueFalse     we    %17.3
  void                    Branch                   %17.4 -> BB19 (if true) | BB18 (if false)
BB16   <- [15]
  fs              %16.0 = FrameState         R     0x55c18d5a8710+322: [<blt any>, <blt is.na>, %15.1], env=e2.8
  void                    Deopt              !v    %16.0   !
BB19   <- [17]
  val?^ | miss    %19.0 = LdVar              eR    all, e2.8
  lgl$#-          %19.1 = Identical                <blt all>, %19.0   <@?>
  void                    Branch                   %19.1 -> BB21 (if true) | BB20 (if false)
BB18   <- [17]
  void                    Invisible          v     
  goto BB8
BB21   <- [19]
  val?^ | miss    %21.0 = LdVar              eR    is.na, e2.8
  lgl$#-          %21.1 = Identical                <blt is.na>, %21.0   <@?>
  void                    Branch                   %21.1 -> BB23 (if true) | BB22 (if false)
BB20   <- [19]
  (cls|spec|blt)  %20.0 = LdFun              !v    all, e2.8
  fs              %20.1 = FrameState         R     0x55c18d5a8710+417: [%20.0], env=e2.8
  void                    Deopt              !v    %20.1, DeadCall@0x55c18d8fc128[Call#8], %20.0   !
BB23   <- [21]
  val?^ | miss    %23.0 = LdVar              eR    gpars, e2.8
  val?            %23.1 = Force!             !v    %23.0, e2.8   <val?_>
  lgl$#-          %23.2 = IsType                   %23.1 isA val+   <@?>
  void                    Branch                   %23.2 -> BB32 (if true) | BB24 (if false)
BB22   <- [21]
  (cls|spec|blt)  %22.0 = LdFun              !v    is.na, e2.8
  fs              %22.1 = FrameState         R     0x55c18d5a8710+477: [<blt all>, %22.0], env=e2.8
  void                    Deopt              !v    %22.1, DeadCall@0x55c18d8fc128[Call#10], %22.0   !
BB32   <- [23]
  val?^ | miss    %32.0 = LdVar              eR    gparname, e2.8
  val?            %32.1 = Force!             !v    %32.0, e2.8   <val?_>
  goto BB25
BB24   <- [23]
  prom-           %24.0 = MkArg                    unboundValue, checkNA[0x55c18de639a0]_p3, e2.8
  goto BB25
BB25   <- [24, 32]
  val?            %25.0 = Phi                      %32.1:BB32, %24.0:BB24
  val?            %25.1 = Extract2_1D        !v    %23.1, %25.0, e2.8   <val?_>
  lgl$#-          %25.2 = IsType                   %25.1 isA val?+
  cp              %25.3 = Checkpoint                -> BB27 (default) | BB26 (if assume failed)
BB27   <- [25]
  void                    Assume             D     %25.2, %25.3 (Typecheck@0x55c18d8fc128[Type#36])
  val?+           %27.1 = CastType           d     dn %25.1   <val?_>
  lgl+            %27.2 = CallSafeBuiltin    wed   is.na(%27.1)    <val?_>
  val?            %27.3 = CallBuiltin        !v    all(%27.2) e2.8   <val?_>
  lgl$#-          %27.4 = CheckTrueFalse     we    %27.3
  void                    Branch                   %27.4 -> BB29 (if true) | BB28 (if false)
BB26   <- [25]
  fs              %26.0 = FrameState         R     0x55c18d5a8710+569: [<blt all>, <blt is.na>, %25.1], env=e2.8
  void                    Deopt              !v    %26.0   !
BB29   <- [27]
  val?^ | miss    %29.0 = LdVar              eR    gpars, ?   <val?_>
  val?^ | miss    %29.1 = LdVar              eR    gparname, e2.8
  val?            %29.2 = Force!             !v    %29.1, e2.8   <val?_>
  val?            %29.3 = Force!             !v    %29.0, e2.8
  lgl$#-          %29.4 = IsType                   %29.3 isA val?+
  lgl$#-          %29.5 = IsType                   %29.2 isA val?+
  cp              %29.6 = Checkpoint                -> BB31 (default) | BB30 (if assume failed)
BB28   <- [27]
  (cls|spec|blt)  %28.0 = LdFun              !v    stop, e2.8
  fs              %28.1 = FrameState         R     0x55c18d5a8710+630: [%28.0], env=e2.8
  void                    Deopt              !v    %28.1, DeadCall@0x55c18d8fc128[Call#11], %28.0   !
BB31   <- [29]
  void                    Assume             D     %29.4, %29.6 (Typecheck@0x55c18d8fc128[Type#42])
  val?+           %31.1 = CastType           d     dn %29.3
  void                    Assume             D     %29.5, %29.6 (Typecheck@0x55c18d8fc128[Type#43])
  val?+           %31.3 = CastType           d     dn %29.2   <val?_>
  val?+           %31.4 = Subassign2_1D      wed   nil, %31.1, %31.3, elided
  void                    StVarSuper         lRW   gpars, %31.4, e2.8
  void                    Invisible          v     
  goto BB8
BB30   <- [29]
  fs              %30.0 = FrameState         R     0x55c18d5a8710+711: [nil, nil, %29.3, %29.2], env=e2.8
  void                    Deopt              !v    %30.0   !
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    gparname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <str$->
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     names, <0x55c18aee5470>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, checkNA[0x55c18de639a0]_p2, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <(nil|str)->
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    gpars, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<wrapped>     !     %1.1, e1.0   <vec+>
  void                    Return             l     %1.3
Prom 3:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    gparname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3
Prom 4:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    gparname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force              !     %1.1, e1.0   <val?_>
  void                    Return             l     %1.3

│ checkNA[0x55c18de639a0]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
