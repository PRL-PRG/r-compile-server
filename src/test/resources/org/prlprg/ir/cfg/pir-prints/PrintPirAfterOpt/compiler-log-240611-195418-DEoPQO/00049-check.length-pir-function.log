
┌──────────────────────────────────────────────────────────────────────────────┐
│ check.length[0x55c18d6a8220]                                                 │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0                │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
check.length[0x55c18d6a8220]
BB0
  goto BB1
BB1   <- [0]
  val?~+          %1.0  = LdArg                    0
  val?^ | miss    %1.1  = LdVar              eR    length, ?
  lgl$#-          %1.2  = Identical                <blt length>, %1.1   <true>
  val+            %1.3  = Force!<value>            %1.0,    <str$->
  cp              %1.4  = Checkpoint                -> BB2 (default) | BB11 (if assume failed)
BB2   <- [1]
  void                    Assume             D     %1.2, %1.4 (DeadBranchReached@0x55c18d8fc338[Test#0])
  val?^ | miss    %2.1  = LdVar              eR    gpars, ?
  env             e2.2  = (MkEnv)            l     gparname=%1.0, parent=?, context 1
  val?            %2.3  = Force!<wrapped>    !vr   %2.1,    <vec+>
  lgl$#-          %2.4  = IsType                   %2.3 isA val+   <true>
  lgl$#-          %2.5  = IsType                   %2.3 isA val?+
  cp              %2.6  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB11   <- [1]
  env             e11.0 = (MkEnv)            l     gparname=%1.0, parent=?, context 1
  fs              %11.1 = FrameState         R     0x55c18dbfd750+17: [<blt length>, %1.2], env=e11.0
  void                    Deopt              !v    %11.1   !
BB4   <- [2]
  void                    Assume             D     %2.4, %2.6 (DeadBranchReached@0x55c18d8fc338[Test#2])
  lgl$#-          %4.1  = IsType                   %1.3 isA val?-
  void                    Assume             D     %2.5, %2.6 (Typecheck@0x55c18d8fc338[Type#4])
  val?+           %4.3  = CastType           d     dn %2.3   <vec+>
  void                    Assume             D     %4.1, %2.6 (Typecheck@0x55c18d8fc338[Type#6])
  val-            %4.5  = CastType           d     dn %1.3   <str$->
  val?            %4.6  = Extract2_1D        wed   %4.3, %4.5, elided   <str$->
  lgl$#-          %4.7  = IsType                   %4.6 isA val?-
  cp              %4.8  = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55c18dbfd750+69: [<blt length>, %2.3], env=e2.2
  void                    Deopt              !v    %3.0   !
BB6   <- [4]
  void                    Assume             D     %4.7, %4.8 (Typecheck@0x55c18d8fc338[Type#7])
  val?-           %6.1  = CastType           d     dn %4.6   <str$->
  (int|real)$-    %6.2  = CallSafeBuiltin    wed   length(%6.1)    <int$->
  lgl$#-          %6.3  = IsType                   %6.2 isA int$-
  cp              %6.4  = Checkpoint                -> BB8 (default) | BB7 (if assume failed)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x55c18dbfd750+120: [<blt length>, %4.6], env=e2.2
  void                    Deopt              !v    %5.0   !
BB8   <- [6]
  void                    Assume             D     %6.3, %6.4 (Typecheck@0x55c18d8fc338[Type#8])
  int$-           %8.1  = CastType           d     dn %6.2
  lgl$-           %8.2  = Eq                 d     %8.1, 0, elided   <lgl$->
  lgl$#-          %8.3  = CheckTrueFalse     e     %8.2
  void                    Branch                   %8.3 -> BB10 (if true) | BB9 (if false)
BB7   <- [6]
  fs              %7.0  = FrameState         R     0x55c18dbfd750+143: [%6.2], env=e2.2
  void                    Deopt              !v    %7.0   !
BB10   <- [8]
  env             e10.0 = MaterializeEnv           , e2.2   <@?>
  (cls|spec|blt)  %10.1 = LdFun              !v    stop, e10.0
  fs              %10.2 = FrameState         R     0x55c18dbfd750+182: [%10.1], env=e10.0
  void                    Deopt              !v    %10.2, DeadCall@0x55c18d8fc338[Call#1], %10.1   !
BB9   <- [8]
  void                    Invisible          v     
  void                    Return             l     nil

│ check.length[0x55c18d6a8220]                                                 │
└──────────────────────────────────────────────────────────────────────────────┘
