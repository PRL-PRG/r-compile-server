
┌──────────────────────────────────────────────────────────────────────────────┐
│ record[0x55c18b88b690]                                                       │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── PIR Version After Optimizations
record[0x55c18b88b690]
BB0
  goto BB1
BB1   <- [0]
  val?^           %1.0  = LdArg                    0
  cp              %1.1  = Checkpoint                -> BB2 (default) | BB10 (if assume failed)
BB2   <- [1]
  val?^ | miss    %2.0  = LdVar              eR    grid.Call, <env 0x55c18d083160>
  lgl$#-          %2.1  = Identical                %2.0, function(fnname, ...) <(rir::DispatchTable*)0x|...
  void                    Assume             D     %2.1, %1.1 (CallTarget@0x55c18dd45708[Call#0])
  env             e2.3  = MkEnv              l     x=%1.0, parent=<env 0x55c18d083160>, context 1
  prom-           %2.4  = MkArg                    unboundValue, record[0x55c18b88b690]_p0, e2.3
  ct              %2.5  = PushContext        lCL   %2.4, grid.Call(C_getDLon), function(fnname, ...) <(rir::DispatchTable*)0x|..., e2.3
  val?^           %2.6  = CastType                 up %2.4
  val?^ | miss    %2.7  = LdVar              eR    .Call, <env 0x55c18d083160>
  lgl$#-          %2.8  = Identical                <blt .Call>, %2.7   <true>
  cp              %2.9  = Checkpoint                -> BB4 (default) | BB3 (if assume failed)
BB10   <- [1]
  env             e10.0 = (MkEnv)            l     x=%1.0, parent=<env 0x55c18d083160>, context 1
  fs              %10.1 = FrameState         R     0x55c18da758c0+0: [], env=e10.0
  void                    Deopt              !v    %10.1   !
BB4   <- [2]
  void                    Assume             D     %2.8, %2.9 (DeadBranchReached@0x55c18d858418[Test#0])
  val?^ | miss    %4.1  = LdVar              eR    C_gridDirty, <env 0x55c18d083160>
  env             e4.2  = MkEnv              l     fnname=%2.6, ...(miss)=missingArg, parent=<env 0x55c18d083160>, context 1
  val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
  val?            %4.4  = CallBuiltin        !     .Call(%4.3) e4.2
  (cls|spec|blt)  %4.5  = LdFun              !     .Call, <0x55c18aef8d38>, e4.2
  prom-           %4.6  = MkArg                    unboundValue, record[0x55c18b88b690]_p1, e4.2
  (miss|dots)     %4.7  = LdDots             R     , e4.2
  *dots-          %4.8  = ExpandDots               %4.7
  val?            %4.9  = NamedCall          !     %4.5(%4.6, .xpandDotsTrigger=%4.8) e4.2   <val?>
  val?            %4.10 = PopContext         C     %4.9, %2.5   <lgl$->
  lgl$#-          %4.11 = IsType                   %4.10 isA lgl$-
  cp              %4.12 = Checkpoint                -> BB6 (default) | BB5 (if assume failed)
BB3   <- [2]
  fs              %3.0  = FrameState         R     0x55c18da758c0+32: [], env=e2.3
  env             e3.1  = (MkEnv)            l     fnname=%2.6, ...(miss)=missingArg, parent=<env 0x55c18d083160>, context 1
  fs              %3.2  = FrameState         R     0x55c18d505260+17: [<blt .Call>, %2.8], env=e3.1, next=%3.0
  void                    Deopt              !v    %3.2   !
BB6   <- [4]
  void                    Assume             D     %4.11, %4.12 (Typecheck@0x55c18dd45708[Type#1])
  lgl$-           %6.1  = CastType           d     dn %4.10
  lgl$#-          %6.2  = CheckTrueFalse     e     %6.1
  void                    Branch                   %6.2 -> BB9 (if true) | BB7 (if false)
BB5   <- [4]
  fs              %5.0  = FrameState         R     0x55c18da758c0+32: [%4.10], env=e2.3
  void                    Deopt              !v    %5.0   !
BB9   <- [6]
  (cls|spec|blt)  %9.0  = LdFun              !     UseMethod, <0x55c18aefe520>, e2.3
  val?            %9.1  = Call               !     %9.0("record") e2.3   <val?_>
  goto BB8
BB7   <- [6]
  void                    Invisible          v     
  goto BB8
BB8   <- [7, 9]
  val?            %8.0  = Phi                      nil:BB7, %9.1:BB9
  void                    Return             l     %8.0
Prom 0:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    C_getDLon, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<value>       !     %1.1, e1.0   <vec>
  void                    Return             l     %1.3
Prom 1:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  (cls|spec|blt)  %1.1  = LdFun              !     dontCheck, <0x55c18dc2d4c8>, e1.0
  prom-           %1.2  = MkArg                    unboundValue, record[0x55c18b88b690]_p2, e1.0
  val?            %1.3  = Call               !     %1.1(%1.2) e1.0   <vec>
  void                    Return             l     %1.3
Prom 2:
BB0
  goto BB1
BB1   <- [0]
  env             e1.0  = LdFunctionEnv            
  val?^ | miss    %1.1  = LdVar              eR    fnname, e1.0
  void                    Visible            v     
  val?            %1.3  = Force<lazy>        !     %1.1, e1.0   <vec>
  void                    Return             l     %1.3

│ record[0x55c18b88b690]                                                       │
└──────────────────────────────────────────────────────────────────────────────┘
