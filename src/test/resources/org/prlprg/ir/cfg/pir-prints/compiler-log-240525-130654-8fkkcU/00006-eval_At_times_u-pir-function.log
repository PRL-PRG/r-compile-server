
┌──────────────────────────────────────────────────────────────────────────────┐
│ eval_At_times_u[0x561299d53ee0]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
eval_At_times_u[0x561299d53ee0]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    matrix, ?
  lgl$#-          %0.2  = Identical                %0.1, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...>
  void                    Branch                   %0.2 -> BB56 (if true) | BB57 (if false)
BB56   <- [0]
  val?^ | miss    %56.0 = LdVar              eR    n, ?
  lgl$#-          %56.1 = IsType                   %56.0 isA int$-
  void                    Branch                   %56.1 -> BB58 (if true) | BB59 (if false)
BB57   <- [0]
  void                    Nop                !     
  val?^ | miss    %57.1 = %0.1
  dr              %57.2 = CallTarget@0x561299428eb8[Call#0]
  goto BB55
BB58   <- [56]
  int$-           %58.0 = CastType           d     dn %56.0
  val+            %58.1 = CallSafeBuiltin    wed   matrix(0, %58.0, %58.0, false, nil, false, false)    <real_>
  lgl$#-          %58.2 = ColonInputEffects        1, %58.0   <true>
  void                    Branch                   %58.2 -> BB60 (if true) | BB61 (if false)
BB59   <- [56]
  void                    Nop                !     
  val?^ | miss    %59.1 = %56.0
  dr              %59.2 = Typecheck@0x561299428eb8[Type#0]
  goto BB55
BB55   <- [57, 59]
  val?^ | miss    %55.0 = Phi                      %57.1:BB57, %59.1:BB59
  val?^ | miss    %55.1 = %55.0
  dr              %55.2 = Phi                      %57.2:BB57, %59.2:BB59
  dr              %55.3 = %55.2
  env             e55.4 = (MkEnv)            l     u=%0.0, parent=?, context 1
  fs              %55.5 = FrameState         R     0x561298611960+0: [], env=e55.4
  void                    Deopt              !v    %55.5, %55.3, %55.1
BB60   <- [58]
  int$#-          %60.0 = ColonCastRhs       e     1L, %58.0   <int$->
  lgl$#-          %60.1 = Lte                d     1L, %60.0, elided   <true>
  void                    Branch                   %60.1 -> BB62 (if true) | BB63 (if false)
BB61   <- [58]
  void                    Nop                !     
  lgl$#-          %61.1 = %58.2
  dr              %61.2 = DeadBranchReached@0x561299428eb8[Test#0]
  goto BB3
BB62   <- [60]
  env             e62.0 = MkEnv              l     u=%0.0, eval_A_mat=%58.1, parent=?, context 1
  int$#-          %62.1 = 1L
  goto BB5
BB63   <- [60]
  void                    Nop                !     
  lgl$#-          %63.1 = %60.1
  dr              %63.2 = DeadBranchReached@0x561299428eb8[Test#4]
  goto BB3
BB3   <- [61, 63]
  val?^ | miss    %3.0  = Phi                      %61.1:BB61, %63.1:BB63
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %61.2:BB61, %63.2:BB63
  dr              %3.3  = %3.2
  env             e3.4  = (MkEnv)            l     u=%0.0, eval_A_mat=%58.1, parent=?, context 1
  fs              %3.5  = FrameState         R     0x561298611960+56: [], env=e3.4
  void                    Deopt              !v    %3.5, %3.3, %3.1
BB5   <- [31, 62]
  int$#-          %5.0  = Phi                      %62.1:BB62, %31.1:BB31
  int$#-          %5.1  = %5.0
  lgl$#-          %5.2  = Neq                d     %60.0, %5.1, elided
  void                    Branch                   %5.2 -> BB13 (if true) | BB8 (if false)
BB13   <- [5]
  void                    StVar              lW    i, %5.1, e62.0
  int$#-          %13.1 = Add                d     %5.1, 1L, elided
  val?^ | miss    %13.2 = LdVar              eR    n, e62.0
  lgl$#-          %13.3 = IsType                   %13.2 isA int$-
  void                    Branch                   %13.3 -> BB66 (if true) | BB67 (if false)
BB8   <- [5]
  val?^ | miss    %8.0  = LdVar              eR    %*%, e62.0
  lgl$#-          %8.1  = Identical                <blt %*%>, %8.0   <true>
  void                    Branch                   %8.1 -> BB64 (if true) | BB65 (if false)
BB66   <- [13]
  int$-           %66.0 = CastType           d     dn %13.2
  lgl$#-          %66.1 = ColonInputEffects        1, %66.0   <true>
  void                    Branch                   %66.1 -> BB68 (if true) | BB69 (if false)
BB67   <- [13]
  void                    Nop                !     
  val?^ | miss    %67.1 = %13.2
  dr              %67.2 = Typecheck@0x561299428eb8[Type#32]
  goto BB14
BB64   <- [8]
  val?^ | miss    %64.0 = LdVar              eR    u, e62.0
  val?            %64.1 = Force!<lazy>       !v    %64.0, e62.0   <real_>
  val?^ | miss    %64.2 = LdVar              eR    t, e62.0
  lgl$#-          %64.3 = Identical                %64.2, function(x) <(rir::DispatchTable*)0x561299de7b|...>
  void                    Branch                   %64.3 -> BB70 (if true) | BB71 (if false)
BB65   <- [8]
  fs              %65.0 = FrameState         R     0x561298611960+178: [1L, %60.0, %5.1], env=e62.0
  void                    Deopt              !v    %65.0, DeadBranchReached@0x561299428eb8[Test#8], %8.1   !
BB68   <- [66]
  int$#-          %68.0 = ColonCastRhs       e     1L, %66.0   <int$->
  lgl$#-          %68.1 = Lte                d     1L, %68.0, elided   <true>
  void                    Branch                   %68.1 -> BB72 (if true) | BB73 (if false)
BB69   <- [66]
  void                    Nop                !     
  lgl$#-          %69.1 = %66.1
  dr              %69.2 = DeadBranchReached@0x561299428eb8[Test#5]
  goto BB14
BB14   <- [67, 69, 73, 77]
  val?^ | miss    %14.0 = Phi                      %67.1:BB67, %69.1:BB69, %73.1:BB73, %77.1:BB77
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %67.2:BB67, %69.2:BB69, %73.2:BB73, %77.2:BB77
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x561298611960+195: [1L, %60.0, %5.1], env=e62.0
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB70   <- [64]
  val?^ | miss    %70.0 = LdVar              eR    eval_A_mat, e62.0
  lgl$#-          %70.1 = IsType                   %70.0 isA real_
  void                    Branch                   %70.1 -> BB74 (if true) | BB75 (if false)
BB71   <- [64]
  void                    Nop                !     
  val?^ | miss    %71.1 = %64.2
  dr              %71.2 = CallTarget@0x561299428eb8[Call#9]
  goto BB9
BB72   <- [68]
  lgl$#-          %72.0 = Neq                d     %68.0, 1L, elided   <true>
  void                    Branch                   %72.0 -> BB76 (if true) | BB77 (if false)
BB73   <- [68]
  void                    Nop                !     
  lgl$#-          %73.1 = %68.1
  dr              %73.2 = DeadBranchReached@0x561299428eb8[Test#6]
  goto BB14
BB74   <- [70]
  real_           %74.0 = CastType           d     dn %70.0
  prom-           %74.1 = MkArg                    %74.0, eval_At_times_u[0x561299d53ee0]_p6 (!refl), e62.0
  val?            %74.2 = StaticCall         !v    t[0x561299db1410](%74.1) e62.0   <real_>
  lgl$#-          %74.3 = IsType                   %74.2 isA real_
  lgl$#-          %74.4 = IsType                   %64.1 isA real_
  void                    Branch                   %74.4 -> BB78 (if true) | BB79 (if false)
BB75   <- [70]
  void                    Nop                !     
  val?^ | miss    %75.1 = %70.0
  dr              %75.2 = Typecheck@0x561299428eb8[Type#59]
  goto BB9
BB9   <- [71, 75]
  val?^ | miss    %9.0  = Phi                      %71.1:BB71, %75.1:BB75
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %71.2:BB71, %75.2:BB75
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x561298611960+659: [<blt %*%>, %64.1], env=e62.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB76   <- [72]
  void                    StVar              lW    j, 1L, e62.0
  val?^ | miss    %76.1 = LdVar              eR    eval_A, e62.0
  (cls|spec|blt)  %76.2 = CastType                 dn %76.1
  val+            %76.3 = CallSafeBuiltin          bodyCode(%76.2) 
  lgl$#-          %76.4 = Identical                %76.3, <(rir::DispatchTable*)0x5612982c46b0>
  void                    Branch                   %76.4 -> BB82 (if true) | BB83 (if false)
BB77   <- [72]
  void                    Nop                !     
  lgl$#-          %77.1 = %72.0
  dr              %77.2 = DeadBranchReached@0x561299428eb8[Test#7]
  goto BB14
BB78   <- [74]
  real_           %78.0 = CastType           d     dn %64.1
  void                    Branch                   %74.3 -> BB80 (if true) | BB81 (if false)
BB79   <- [74]
  void                    Nop                !     
  val?            %79.1 = %64.1
  dr              %79.2 = Typecheck@0x561299428eb8[Type#58]
  goto BB11
BB82   <- [76]
  val?            %82.0 = Force!             d     %76.1, 
  prom-           %82.1 = MkArg                    unboundValue, eval_At_times_u[0x561299d53ee0]_p2 (!refl), e62.0
  prom-           %82.2 = MkArg                    unboundValue, eval_At_times_u[0x561299d53ee0]_p3 (!refl), e62.0
  (cls|spec|blt)  %82.3 = ChkFunction        e     %82.0
  env             e82.4 = CallSafeBuiltin          environment(%82.3) 
  ct              %82.5 = PushContext        lCL   %82.1, %82.2, eval_A(i, j), %82.3, e62.0
  val?^           %82.6 = CastType                 up %82.2
  val?^           %82.7 = CastType                 up %82.1
  val?^ | miss    %82.8 = LdVar              eR    eval_A_cache, e82.4
  env             e82.9 = MkEnv              l     i=%82.7, j=%82.6, parent=e82.4, context 1
  val?            %82.10 = Force!<value>      !v    %82.8, e82.9   <real_>
  lgl$#-          %82.11 = IsType                   %82.10 isA val+   <true>
  void                    Branch                   %82.11 -> BB84 (if true) | BB85 (if false)
BB83   <- [76]
  fs              %83.0 = FrameState         R     0x561298611960+346: [1L, %60.0, %13.1, 1L, %68.0, 1L], env=e62.0
  void                    Deopt              !v    %83.0, CallTarget@0x561299428eb8[Call#5], %76.3   !
BB80   <- [78]
  real_           %80.0 = CastType           d     dn %74.2
  val+            %80.1 = CallSafeBuiltin    vwed  %*%(%78.0, %80.0)    <real_>
  void                    Return             l     %80.1
BB81   <- [78]
  void                    Nop                !     
  val?            %81.1 = %74.2
  dr              %81.2 = Typecheck@0x561299428eb8[Type#60]
  goto BB11
BB11   <- [79, 81]
  val?^ | miss    %11.0 = Phi                      %79.1:BB79, %81.1:BB81
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %79.2:BB79, %81.2:BB81
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x561298611960+696: [<blt %*%>, %64.1, %74.2], env=e62.0
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB84   <- [82]
  val?^ | miss    %84.0 = LdVar              eR    i, e82.9
  val?            %84.1 = Force!<lazy>       !v    %84.0, e82.9   <int$->
  val?^ | miss    %84.2 = LdVar              eR    j, e82.9
  val?            %84.3 = Force!<lazy>       !v    %84.2, e82.9   <int$->
  lgl$#-          %84.4 = IsType                   %84.3 isA int$-
  lgl$#-          %84.5 = IsType                   %84.1 isA int$-
  lgl$#-          %84.6 = IsType                   %82.10 isA real_
  void                    Branch                   %84.6 -> BB86 (if true) | BB87 (if false)
BB85   <- [82]
  fs              %85.0 = FrameState         R     0x561298611960+390: [1L, %60.0, %13.1, 1L, %68.0, 2L], env=e62.0
  fs              %85.1 = FrameState         R     0x561299824080+9: [%82.10], env=e82.9, next=%85.0
  void                    Deopt              !v    %85.1, DeadBranchReached@0x561299428728[Test#0], %82.11   !
BB86   <- [84]
  real_           %86.0 = CastType           d     dn %82.10
  void                    Branch                   %84.5 -> BB88 (if true) | BB89 (if false)
BB87   <- [84]
  void                    Nop                !     
  val?            %87.1 = %82.10
  dr              %87.2 = Typecheck@0x561299428728[Type#0]
  goto BB20
BB88   <- [86]
  int$-           %88.0 = CastType           d     dn %84.1
  void                    Branch                   %84.4 -> BB90 (if true) | BB91 (if false)
BB89   <- [86]
  void                    Nop                !     
  val?            %89.1 = %84.1
  dr              %89.2 = Typecheck@0x561299428728[Type#3]
  goto BB20
BB20   <- [87, 89, 91]
  val?^ | miss    %20.0 = Phi                      %87.1:BB87, %89.1:BB89, %91.1:BB91
  val?^ | miss    %20.1 = %20.0
  dr              %20.2 = Phi                      %87.2:BB87, %89.2:BB89, %91.2:BB91
  dr              %20.3 = %20.2
  fs              %20.4 = FrameState         R     0x561298611960+390: [1L, %60.0, %13.1, 1L, %68.0, 2L], env=e62.0
  fs              %20.5 = FrameState         R     0x561299824080+73: [%82.10, %84.1, %84.3], env=e82.9, next=%20.4
  void                    Deopt              !v    %20.5, %20.3, %20.1   !
BB90   <- [88]
  int$-           %90.0 = CastType           d     dn %84.3
  real$-          %90.1 = Extract2_2D        wed   %86.0, %88.0, %90.0, elided   <real$->
  lgl$-           %90.2 = Neq                d     %90.1, 0, elided   <lgl$->
  lgl$#-          %90.3 = CheckTrueFalse     e     %90.2
  void                    Branch                   %90.3 -> BB51 (if true) | BB22 (if false)
BB91   <- [88]
  void                    Nop                !     
  val?            %91.1 = %84.3
  dr              %91.2 = Typecheck@0x561299428728[Type#4]
  goto BB20
BB51   <- [90]
  val?^ | miss    %51.0 = LdVar              eR    eval_A_cache, e82.9
  val?            %51.1 = Force!             !v    %51.0, e82.9   <val?_>
  lgl$#-          %51.2 = IsType                   %51.1 isA val+   <@?>
  void                    Branch                   %51.2 -> BB54 (if true) | BB52 (if false)
BB22   <- [90]
  val?^ | miss    %22.0 = LdVar              eR    i, e82.9
  val?            %22.1 = Force!<wrapped>    !v    %22.0, e82.9   <int$->
  val?^ | miss    %22.2 = LdVar              eR    j, e82.9
  val?            %22.3 = Force!<wrapped>    !v    %22.2, e82.9   <int$->
  lgl$#-          %22.4 = IsType                   %22.3 isA int$-
  lgl$#-          %22.5 = IsType                   %22.1 isA int$-
  void                    Branch                   %22.5 -> BB92 (if true) | BB93 (if false)
BB54   <- [51]
  val?^ | miss    %54.0 = LdVar              eR    i, e82.9
  val?            %54.1 = Force!             !v    %54.0, e82.9   <val?_>
  val?^ | miss    %54.2 = LdVar              eR    j, e82.9
  val?            %54.3 = Force!             !v    %54.2, e82.9   <val?_>
  val?            %54.4 = %54.3
  val?            %54.5 = %54.1
  goto BB53
BB52   <- [51]
  prom-           %52.0 = MkArg                    unboundValue, eval_At_times_u[0x561299d53ee0]_p10, e82.9
  prom-           %52.1 = MkArg                    unboundValue, eval_At_times_u[0x561299d53ee0]_p11, e82.9
  prom-           %52.2 = %52.1
  prom-           %52.3 = %52.0
  goto BB53
BB92   <- [22]
  int$-           %92.0 = CastType           d     dn %22.1
  void                    Branch                   %22.4 -> BB96 (if true) | BB97 (if false)
BB93   <- [22]
  void                    Nop                !     
  val?            %93.1 = %22.1
  dr              %93.2 = Typecheck@0x561299428728[Type#7]
  goto BB23
BB53   <- [52, 54]
  val?            %53.0 = Phi                      %54.4:BB54, %52.2:BB52
  val?            %53.1 = %53.0
  val?            %53.2 = Phi                      %54.5:BB54, %52.3:BB52
  val?            %53.3 = %53.2
  val?            %53.4 = Extract2_2D        !v    %51.1, %53.3, %53.1, e82.9   <val?_>
  val?            %53.5 = %53.4
  goto BB27
BB96   <- [92]
  int$-           %96.0 = CastType           d     dn %22.3
  int$-           %96.1 = Add                d     %92.0, %96.0, elided   <int$->
  real$-          %96.2 = Sub                d     %96.1, 2, elided   <real$->
  val?^ | miss    %96.3 = LdVar              eR    i, e82.9
  lgl$#-          %96.4 = IsType                   %96.3 isA int$~-
  void                    Branch                   %96.4 -> BB102 (if true) | BB103 (if false)
BB97   <- [92]
  void                    Nop                !     
  val?            %97.1 = %22.3
  dr              %97.2 = Typecheck@0x561299428728[Type#8]
  goto BB23
BB23   <- [93, 97, 103, 107]
  val?^ | miss    %23.0 = Phi                      %93.1:BB93, %97.1:BB97, %103.1:BB103, %107.1:BB107
  val?^ | miss    %23.1 = %23.0
  dr              %23.2 = Phi                      %93.2:BB93, %97.2:BB97, %103.2:BB103, %107.2:BB107
  dr              %23.3 = %23.2
  fs              %23.4 = FrameState         R     0x561298611960+390: [1L, %60.0, %13.1, 1L, %68.0, 2L], env=e62.0
  fs              %23.5 = FrameState         R     0x561299824080+132: [1, %22.1, %22.3], env=e82.9, next=%23.4
  void                    Deopt              !v    %23.5, %23.3, %23.1   !
BB27   <- [53, 108]
  val?            %27.0 = Phi                      %108.3:BB108, %53.5:BB53
  val?            %27.1 = %27.0
  val?            %27.2 = PopContext         C     %27.1, %82.5   <real$->
  lgl$#-          %27.3 = IsType                   %27.2 isA real$-
  void                    Branch                   %27.3 -> BB94 (if true) | BB95 (if false)
BB102   <- [96]
  int$~-          %102.0 = CastType           d     dn %96.3
  int$-           %102.1 = Force!<wrapped>          %102.0,    <int$->
  val?^ | miss    %102.2 = LdVar              eR    j, e82.9
  lgl$#-          %102.3 = IsType                   %102.2 isA int$~-
  void                    Branch                   %102.3 -> BB106 (if true) | BB107 (if false)
BB103   <- [96]
  void                    Nop                !     
  val?^ | miss    %103.1 = %96.3
  dr              %103.2 = Typecheck@0x561299428728[Type#11]
  goto BB23
BB94   <- [27]
  real$-          %94.0 = CastType           d     dn %27.2
  val?^ | miss    %94.1 = LdVar              eR    eval_A_mat !upd, e62.0
  lgl$#-          %94.2 = IsType                   %94.1 isA real_
  void                    Branch                   %94.2 -> BB98 (if true) | BB99 (if false)
BB95   <- [27]
  void                    Nop                !     
  val?            %95.1 = %27.2
  dr              %95.2 = Typecheck@0x561299428eb8[Type#45]
  goto BB28
BB106   <- [102]
  int$~-          %106.0 = CastType           d     dn %102.2
  int$-           %106.1 = Force!<wrapped>          %106.0,    <int$->
  int$-           %106.2 = Add                d     %102.1, %106.1, elided   <int$->
  real$-          %106.3 = Sub                d     %106.2, 1, elided   <real$->
  real$-          %106.4 = Mul                d     %96.2, %106.3, elided   <real$->
  real$-          %106.5 = Div                d     %106.4, 2, elided   <real$->
  real$-          %106.6 = Add                d     %106.5, %102.1, elided   <real$->
  real$-          %106.7 = Div                d     1, %106.6, elided   <real$->
  val?^ | miss    %106.8 = LdVar              eR    eval_A_cache, e82.4   <real_>
  val?            %106.9 = Force!             !v    %106.8, e82.9
  lgl$#-          %106.10 = IsType                   %106.9 isA real_
  void                    Branch                   %106.10 -> BB108 (if true) | BB109 (if false)
BB107   <- [102]
  void                    Nop                !     
  val?^ | miss    %107.1 = %102.2
  dr              %107.2 = Typecheck@0x561299428728[Type#12]
  goto BB23
BB98   <- [94]
  real_           %98.0 = CastType           d     dn %94.1
  val?^ | miss    %98.1 = LdVar              eR    i, e62.0
  lgl$#-          %98.2 = IsType                   %98.1 isA int$-
  void                    Branch                   %98.2 -> BB100 (if true) | BB101 (if false)
BB99   <- [94]
  void                    Nop                !     
  val?^ | miss    %99.1 = %94.1
  dr              %99.2 = Typecheck@0x561299428eb8[Type#46]
  goto BB28
BB28   <- [95, 99, 101, 105]
  val?^ | miss    %28.0 = Phi                      %95.1:BB95, %99.1:BB99, %101.1:BB101, %105.1:BB105
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %95.2:BB95, %99.2:BB99, %101.2:BB101, %105.2:BB105
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x561298611960+390: [1L, %60.0, %13.1, 1L, %68.0, 2L, %27.2], env=e62.0
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB108   <- [106]
  real_           %108.0 = CastType           d     dn %106.9
  real_           %108.1 = Subassign2_2D      wed   %106.7, %108.0, %102.1, %106.1, elided
  void                    StVarSuper         lRW   eval_A_cache, %108.1, e82.9
  real$-          %108.3 = %106.7
  goto BB27
BB109   <- [106]
  fs              %109.0 = FrameState         R     0x561298611960+390: [1L, %60.0, %13.1, 1L, %68.0, 2L], env=e62.0
  fs              %109.1 = FrameState         R     0x561299824080+288: [%106.7, %106.7, %106.9, %102.1, %106.1], env=e82.9, next=%109.0
  void                    Deopt              !v    %109.1, Typecheck@0x561299428728[Type#20], %106.9   !
BB100   <- [98]
  int$-           %100.0 = CastType           d     dn %98.1
  val?^ | miss    %100.1 = LdVar              eR    j, e62.0
  lgl$#-          %100.2 = IsType                   %100.1 isA int$-
  void                    Branch                   %100.2 -> BB104 (if true) | BB105 (if false)
BB101   <- [98]
  void                    Nop                !     
  val?^ | miss    %101.1 = %98.1
  dr              %101.2 = Typecheck@0x561299428eb8[Type#47]
  goto BB28
BB104   <- [100]
  int$-           %104.0 = CastType           d     dn %100.1
  real_           %104.1 = Subassign2_2D      wed   %94.0, %98.0, %100.0, %104.0, elided
  void                    StVar              lW    eval_A_mat, %104.1, e62.0
  int$#-          %104.3 = 2L
  goto BB30
BB105   <- [100]
  void                    Nop                !     
  val?^ | miss    %105.1 = %100.1
  dr              %105.2 = Typecheck@0x561299428eb8[Type#48]
  goto BB28
BB30   <- [104, 136]
  int$#-          %30.0 = Phi                      %104.3:BB104, %136.3:BB136
  int$#-          %30.1 = %30.0
  lgl$#-          %30.2 = Neq                d     %68.0, %30.1, elided
  void                    Branch                   %30.2 -> BB32 (if true) | BB31 (if false)
BB32   <- [30]
  void                    StVar              lW    j, %30.1, e62.0
  int$#-          %32.1 = Add                d     %30.1, 1L, elided
  val?^ | miss    %32.2 = LdVar              eR    eval_A, e62.0
  (cls|spec|blt)  %32.3 = CastType                 dn %32.2
  val+            %32.4 = CallSafeBuiltin          bodyCode(%32.3) 
  lgl$#-          %32.5 = Identical                %32.4, <(rir::DispatchTable*)0x5612982c46b0>
  void                    Branch                   %32.5 -> BB110 (if true) | BB111 (if false)
BB31   <- [30]
  void                    Nop                !     
  int$#-          %31.1 = %13.1
  goto BB5
BB110   <- [32]
  val?            %110.0 = Force!             d     %32.2, 
  prom-           %110.1 = MkArg                    unboundValue, eval_At_times_u[0x561299d53ee0]_p4, e62.0
  prom-           %110.2 = MkArg                    unboundValue, eval_At_times_u[0x561299d53ee0]_p5 (!refl), e62.0
  (cls|spec|blt)  %110.3 = ChkFunction        e     %110.0
  env             e110.4 = CallSafeBuiltin          environment(%110.3) 
  ct              %110.5 = PushContext        lCL   %110.1, %110.2, eval_A(i, j), %110.3, e62.0
  val?^           %110.6 = CastType                 up %110.2
  val?^           %110.7 = CastType                 up %110.1
  val?^ | miss    %110.8 = LdVar              eR    eval_A_cache, e110.4
  env             e110.9 = MkEnv              l     i=%110.7, j=%110.6, parent=e110.4, context 1
  val?            %110.10 = Force!<value>      !v    %110.8, e110.9   <real_>
  lgl$#-          %110.11 = IsType                   %110.10 isA val+   <true>
  void                    Branch                   %110.11 -> BB112 (if true) | BB113 (if false)
BB111   <- [32]
  fs              %111.0 = FrameState         R     0x561298611960+464: [1L, %60.0, %13.1, 1L, %68.0, %30.1], env=e62.0
  void                    Deopt              !v    %111.0, CallTarget@0x561299428eb8[Call#6], %32.4   !
BB112   <- [110]
  val?^ | miss    %112.0 = LdVar              eR    i, e110.9
  val?            %112.1 = Force!<lazy>       !v    %112.0, e110.9   <int$->
  val?^ | miss    %112.2 = LdVar              eR    j, e110.9
  val?            %112.3 = Force!<lazy>       !v    %112.2, e110.9   <int$->
  lgl$#-          %112.4 = IsType                   %112.3 isA int$-
  lgl$#-          %112.5 = IsType                   %112.1 isA int$-
  lgl$#-          %112.6 = IsType                   %110.10 isA real_
  void                    Branch                   %112.6 -> BB114 (if true) | BB115 (if false)
BB113   <- [110]
  fs              %113.0 = FrameState         R     0x561298611960+508: [1L, %60.0, %13.1, 1L, %68.0, %32.1], env=e62.0
  fs              %113.1 = FrameState         R     0x561299824080+9: [%110.10], env=e110.9, next=%113.0
  void                    Deopt              !v    %113.1, DeadBranchReached@0x561299428728[Test#0], %110.11   !
BB114   <- [112]
  real_           %114.0 = CastType           d     dn %110.10
  void                    Branch                   %112.5 -> BB116 (if true) | BB117 (if false)
BB115   <- [112]
  void                    Nop                !     
  val?            %115.1 = %110.10
  dr              %115.2 = Typecheck@0x561299428728[Type#0]
  goto BB37
BB116   <- [114]
  int$-           %116.0 = CastType           d     dn %112.1
  void                    Branch                   %112.4 -> BB118 (if true) | BB119 (if false)
BB117   <- [114]
  void                    Nop                !     
  val?            %117.1 = %112.1
  dr              %117.2 = Typecheck@0x561299428728[Type#3]
  goto BB37
BB37   <- [115, 117, 119]
  val?^ | miss    %37.0 = Phi                      %115.1:BB115, %117.1:BB117, %119.1:BB119
  val?^ | miss    %37.1 = %37.0
  dr              %37.2 = Phi                      %115.2:BB115, %117.2:BB117, %119.2:BB119
  dr              %37.3 = %37.2
  fs              %37.4 = FrameState         R     0x561298611960+508: [1L, %60.0, %13.1, 1L, %68.0, %32.1], env=e62.0
  fs              %37.5 = FrameState         R     0x561299824080+73: [%110.10, %112.1, %112.3], env=e110.9, next=%37.4
  void                    Deopt              !v    %37.5, %37.3, %37.1   !
BB118   <- [116]
  int$-           %118.0 = CastType           d     dn %112.3
  real$-          %118.1 = Extract2_2D        wed   %114.0, %116.0, %118.0, elided   <real$->
  lgl$-           %118.2 = Neq                d     %118.1, 0, elided   <lgl$->
  lgl$#-          %118.3 = CheckTrueFalse     e     %118.2
  void                    Branch                   %118.3 -> BB47 (if true) | BB39 (if false)
BB119   <- [116]
  void                    Nop                !     
  val?            %119.1 = %112.3
  dr              %119.2 = Typecheck@0x561299428728[Type#4]
  goto BB37
BB47   <- [118]
  val?^ | miss    %47.0 = LdVar              eR    eval_A_cache, e110.9
  val?            %47.1 = Force!             !v    %47.0, e110.9   <val?_>
  lgl$#-          %47.2 = IsType                   %47.1 isA val+   <@?>
  void                    Branch                   %47.2 -> BB50 (if true) | BB48 (if false)
BB39   <- [118]
  val?^ | miss    %39.0 = LdVar              eR    i, e110.9
  val?            %39.1 = Force!<wrapped>    !v    %39.0, e110.9   <int$->
  val?^ | miss    %39.2 = LdVar              eR    j, e110.9
  val?            %39.3 = Force!<wrapped>    !v    %39.2, e110.9   <int$->
  lgl$#-          %39.4 = IsType                   %39.3 isA int$-
  lgl$#-          %39.5 = IsType                   %39.1 isA int$-
  void                    Branch                   %39.5 -> BB120 (if true) | BB121 (if false)
BB50   <- [47]
  val?^ | miss    %50.0 = LdVar              eR    i, e110.9
  val?            %50.1 = Force!             !v    %50.0, e110.9   <val?_>
  val?^ | miss    %50.2 = LdVar              eR    j, e110.9
  val?            %50.3 = Force!             !v    %50.2, e110.9   <val?_>
  val?            %50.4 = %50.3
  val?            %50.5 = %50.1
  goto BB49
BB48   <- [47]
  prom-           %48.0 = MkArg                    unboundValue, eval_At_times_u[0x561299d53ee0]_p12, e110.9
  prom-           %48.1 = MkArg                    unboundValue, eval_At_times_u[0x561299d53ee0]_p13, e110.9
  prom-           %48.2 = %48.1
  prom-           %48.3 = %48.0
  goto BB49
BB120   <- [39]
  int$-           %120.0 = CastType           d     dn %39.1
  void                    Branch                   %39.4 -> BB122 (if true) | BB123 (if false)
BB121   <- [39]
  void                    Nop                !     
  val?            %121.1 = %39.1
  dr              %121.2 = Typecheck@0x561299428728[Type#7]
  goto BB40
BB49   <- [48, 50]
  val?            %49.0 = Phi                      %50.4:BB50, %48.2:BB48
  val?            %49.1 = %49.0
  val?            %49.2 = Phi                      %50.5:BB50, %48.3:BB48
  val?            %49.3 = %49.2
  val?            %49.4 = Extract2_2D        !v    %47.1, %49.3, %49.1, e110.9   <val?_>
  val?            %49.5 = %49.4
  goto BB44
BB122   <- [120]
  int$-           %122.0 = CastType           d     dn %39.3
  int$-           %122.1 = Add                d     %120.0, %122.0, elided   <int$->
  real$-          %122.2 = Sub                d     %122.1, 2, elided   <real$->
  val?^ | miss    %122.3 = LdVar              eR    i, e110.9
  lgl$#-          %122.4 = IsType                   %122.3 isA int$~-
  void                    Branch                   %122.4 -> BB124 (if true) | BB125 (if false)
BB123   <- [120]
  void                    Nop                !     
  val?            %123.1 = %39.3
  dr              %123.2 = Typecheck@0x561299428728[Type#8]
  goto BB40
BB40   <- [121, 123, 125, 127]
  val?^ | miss    %40.0 = Phi                      %121.1:BB121, %123.1:BB123, %125.1:BB125, %127.1:BB127
  val?^ | miss    %40.1 = %40.0
  dr              %40.2 = Phi                      %121.2:BB121, %123.2:BB123, %125.2:BB125, %127.2:BB127
  dr              %40.3 = %40.2
  fs              %40.4 = FrameState         R     0x561298611960+508: [1L, %60.0, %13.1, 1L, %68.0, %32.1], env=e62.0
  fs              %40.5 = FrameState         R     0x561299824080+132: [1, %39.1, %39.3], env=e110.9, next=%40.4
  void                    Deopt              !v    %40.5, %40.3, %40.1   !
BB44   <- [49, 128]
  val?            %44.0 = Phi                      %128.3:BB128, %49.5:BB49
  val?            %44.1 = %44.0
  val?            %44.2 = PopContext         C     %44.1, %110.5   <real$->
  lgl$#-          %44.3 = IsType                   %44.2 isA real$-
  void                    Branch                   %44.3 -> BB130 (if true) | BB131 (if false)
BB124   <- [122]
  int$~-          %124.0 = CastType           d     dn %122.3
  int$-           %124.1 = Force!<wrapped>          %124.0,    <int$->
  val?^ | miss    %124.2 = LdVar              eR    j, e110.9
  lgl$#-          %124.3 = IsType                   %124.2 isA int$~-
  void                    Branch                   %124.3 -> BB126 (if true) | BB127 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?^ | miss    %125.1 = %122.3
  dr              %125.2 = Typecheck@0x561299428728[Type#11]
  goto BB40
BB130   <- [44]
  real$-          %130.0 = CastType           d     dn %44.2
  val?^ | miss    %130.1 = LdVar              eR    eval_A_mat !upd, e62.0
  lgl$#-          %130.2 = IsType                   %130.1 isA real_
  void                    Branch                   %130.2 -> BB132 (if true) | BB133 (if false)
BB131   <- [44]
  void                    Nop                !     
  val?            %131.1 = %44.2
  dr              %131.2 = Typecheck@0x561299428eb8[Type#51]
  goto BB45
BB126   <- [124]
  int$~-          %126.0 = CastType           d     dn %124.2
  int$-           %126.1 = Force!<wrapped>          %126.0,    <int$->
  int$-           %126.2 = Add                d     %124.1, %126.1, elided   <int$->
  real$-          %126.3 = Sub                d     %126.2, 1, elided   <real$->
  real$-          %126.4 = Mul                d     %122.2, %126.3, elided   <real$->
  real$-          %126.5 = Div                d     %126.4, 2, elided   <real$->
  real$-          %126.6 = Add                d     %126.5, %124.1, elided   <real$->
  real$-          %126.7 = Div                d     1, %126.6, elided   <real$->
  val?^ | miss    %126.8 = LdVar              eR    eval_A_cache, e110.4   <real_>
  val?            %126.9 = Force!             !v    %126.8, e110.9
  lgl$#-          %126.10 = IsType                   %126.9 isA real_
  void                    Branch                   %126.10 -> BB128 (if true) | BB129 (if false)
BB127   <- [124]
  void                    Nop                !     
  val?^ | miss    %127.1 = %124.2
  dr              %127.2 = Typecheck@0x561299428728[Type#12]
  goto BB40
BB132   <- [130]
  real_           %132.0 = CastType           d     dn %130.1
  val?^ | miss    %132.1 = LdVar              eR    i, e62.0
  lgl$#-          %132.2 = IsType                   %132.1 isA int$-
  void                    Branch                   %132.2 -> BB134 (if true) | BB135 (if false)
BB133   <- [130]
  void                    Nop                !     
  val?^ | miss    %133.1 = %130.1
  dr              %133.2 = Typecheck@0x561299428eb8[Type#52]
  goto BB45
BB45   <- [131, 133, 135, 137]
  val?^ | miss    %45.0 = Phi                      %131.1:BB131, %133.1:BB133, %135.1:BB135, %137.1:BB137
  val?^ | miss    %45.1 = %45.0
  dr              %45.2 = Phi                      %131.2:BB131, %133.2:BB133, %135.2:BB135, %137.2:BB137
  dr              %45.3 = %45.2
  fs              %45.4 = FrameState         R     0x561298611960+508: [1L, %60.0, %13.1, 1L, %68.0, %32.1, %44.2], env=e62.0
  void                    Deopt              !v    %45.4, %45.3, %45.1   !
BB128   <- [126]
  real_           %128.0 = CastType           d     dn %126.9
  real_           %128.1 = Subassign2_2D      wed   %126.7, %128.0, %124.1, %126.1, elided
  void                    StVarSuper         lRW   eval_A_cache, %128.1, e110.9
  real$-          %128.3 = %126.7
  goto BB44
BB129   <- [126]
  fs              %129.0 = FrameState         R     0x561298611960+508: [1L, %60.0, %13.1, 1L, %68.0, %32.1], env=e62.0
  fs              %129.1 = FrameState         R     0x561299824080+288: [%126.7, %126.7, %126.9, %124.1, %126.1], env=e110.9, next=%129.0
  void                    Deopt              !v    %129.1, Typecheck@0x561299428728[Type#20], %126.9   !
BB134   <- [132]
  int$-           %134.0 = CastType           d     dn %132.1
  val?^ | miss    %134.1 = LdVar              eR    j, e62.0
  lgl$#-          %134.2 = IsType                   %134.1 isA int$-
  void                    Branch                   %134.2 -> BB136 (if true) | BB137 (if false)
BB135   <- [132]
  void                    Nop                !     
  val?^ | miss    %135.1 = %132.1
  dr              %135.2 = Typecheck@0x561299428eb8[Type#53]
  goto BB45
BB136   <- [134]
  int$-           %136.0 = CastType           d     dn %134.1
  real_           %136.1 = Subassign2_2D      wed   %130.0, %132.0, %134.0, %136.0, elided
  void                    StVar              lW    eval_A_mat, %136.1, e62.0
  int$#-          %136.3 = %32.1
  goto BB30
BB137   <- [134]
  void                    Nop                !     
  val?^ | miss    %137.1 = %134.1
  dr              %137.2 = Typecheck@0x561299428eb8[Type#54]
  goto BB45
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    eval_A_mat, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ eval_At_times_u[0x561299d53ee0]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
