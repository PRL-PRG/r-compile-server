
┌──────────────────────────────────────────────────────────────────────────────┐
│ eval_A_times_u[0x561299db8990]                                               │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0                       │
│ Properties:                                                                  │
├────── Final PIR Version
eval_A_times_u[0x561299db8990]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    matrix, ?
  lgl$#-          %0.2  = Identical                %0.1, function(data=NA, nrow=1, ncol=1, byrow=FALSE,|...>
  void                    Branch                   %0.2 -> BB54 (if true) | BB55 (if false)
BB54   <- [0]
  val?^ | miss    %54.0 = LdVar              eR    n, ?
  lgl$#-          %54.1 = IsType                   %54.0 isA int$-
  void                    Branch                   %54.1 -> BB56 (if true) | BB57 (if false)
BB55   <- [0]
  void                    Nop                !     
  val?^ | miss    %55.1 = %0.1
  dr              %55.2 = CallTarget@0x5612994289e8[Call#0]
  goto BB53
BB56   <- [54]
  int$-           %56.0 = CastType           d     dn %54.0
  val+            %56.1 = CallSafeBuiltin    wed   matrix(0, %56.0, %56.0, false, nil, false, false)    <real_>
  lgl$#-          %56.2 = ColonInputEffects        1, %56.0   <true>
  void                    Branch                   %56.2 -> BB58 (if true) | BB59 (if false)
BB57   <- [54]
  void                    Nop                !     
  val?^ | miss    %57.1 = %54.0
  dr              %57.2 = Typecheck@0x5612994289e8[Type#0]
  goto BB53
BB53   <- [55, 57]
  val?^ | miss    %53.0 = Phi                      %55.1:BB55, %57.1:BB57
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %55.2:BB55, %57.2:BB57
  dr              %53.3 = %53.2
  env             e53.4 = (MkEnv)            l     u=%0.0, parent=?, context 1
  fs              %53.5 = FrameState         R     0x561298df5350+0: [], env=e53.4
  void                    Deopt              !v    %53.5, %53.3, %53.1
BB58   <- [56]
  int$#-          %58.0 = ColonCastRhs       e     1L, %56.0   <int$->
  lgl$#-          %58.1 = Lte                d     1L, %58.0, elided   <true>
  void                    Branch                   %58.1 -> BB60 (if true) | BB61 (if false)
BB59   <- [56]
  void                    Nop                !     
  lgl$#-          %59.1 = %56.2
  dr              %59.2 = DeadBranchReached@0x5612994289e8[Test#0]
  goto BB3
BB60   <- [58]
  env             e60.0 = MkEnv              l     u=%0.0, eval_A_mat=%56.1, parent=?, context 1
  int$#-          %60.1 = 1L
  goto BB5
BB61   <- [58]
  void                    Nop                !     
  lgl$#-          %61.1 = %58.1
  dr              %61.2 = DeadBranchReached@0x5612994289e8[Test#4]
  goto BB3
BB3   <- [59, 61]
  val?^ | miss    %3.0  = Phi                      %59.1:BB59, %61.1:BB61
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %59.2:BB59, %61.2:BB61
  dr              %3.3  = %3.2
  env             e3.4  = (MkEnv)            l     u=%0.0, eval_A_mat=%56.1, parent=?, context 1
  fs              %3.5  = FrameState         R     0x561298df5350+56: [], env=e3.4
  void                    Deopt              !v    %3.5, %3.3, %3.1
BB5   <- [29, 60]
  int$#-          %5.0  = Phi                      %60.1:BB60, %29.1:BB29
  int$#-          %5.1  = %5.0
  lgl$#-          %5.2  = Neq                d     %58.0, %5.1, elided
  void                    Branch                   %5.2 -> BB11 (if true) | BB8 (if false)
BB11   <- [5]
  void                    StVar              lW    i, %5.1, e60.0
  int$#-          %11.1 = Add                d     %5.1, 1L, elided
  val?^ | miss    %11.2 = LdVar              eR    n, e60.0
  lgl$#-          %11.3 = IsType                   %11.2 isA int$-
  void                    Branch                   %11.3 -> BB64 (if true) | BB65 (if false)
BB8   <- [5]
  val?^ | miss    %8.0  = LdVar              eR    %*%, e60.0
  lgl$#-          %8.1  = Identical                <blt %*%>, %8.0   <true>
  void                    Branch                   %8.1 -> BB62 (if true) | BB63 (if false)
BB64   <- [11]
  int$-           %64.0 = CastType           d     dn %11.2
  lgl$#-          %64.1 = ColonInputEffects        1, %64.0   <true>
  void                    Branch                   %64.1 -> BB66 (if true) | BB67 (if false)
BB65   <- [11]
  void                    Nop                !     
  val?^ | miss    %65.1 = %11.2
  dr              %65.2 = Typecheck@0x5612994289e8[Type#32]
  goto BB12
BB62   <- [8]
  val?^ | miss    %62.0 = LdVar              eR    u, e60.0
  val?            %62.1 = Force!<lazy>       !v    %62.0, e60.0   <real_>
  lgl$#-          %62.2 = IsType                   %62.1 isA real_
  val?^ | miss    %62.3 = LdVar              eR    eval_A_mat, e60.0
  lgl$#-          %62.4 = IsType                   %62.3 isA real_
  void                    Branch                   %62.4 -> BB68 (if true) | BB69 (if false)
BB63   <- [8]
  fs              %63.0 = FrameState         R     0x561298df5350+178: [1L, %58.0, %5.1], env=e60.0
  void                    Deopt              !v    %63.0, DeadBranchReached@0x5612994289e8[Test#8], %8.1   !
BB66   <- [64]
  int$#-          %66.0 = ColonCastRhs       e     1L, %64.0   <int$->
  lgl$#-          %66.1 = Lte                d     1L, %66.0, elided   <true>
  void                    Branch                   %66.1 -> BB70 (if true) | BB71 (if false)
BB67   <- [64]
  void                    Nop                !     
  lgl$#-          %67.1 = %64.1
  dr              %67.2 = DeadBranchReached@0x5612994289e8[Test#5]
  goto BB12
BB12   <- [65, 67, 71, 75]
  val?^ | miss    %12.0 = Phi                      %65.1:BB65, %67.1:BB67, %71.1:BB71, %75.1:BB75
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %65.2:BB65, %67.2:BB67, %71.2:BB71, %75.2:BB75
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x561298df5350+195: [1L, %58.0, %5.1], env=e60.0
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB68   <- [62]
  real_           %68.0 = CastType           d     dn %62.3
  void                    Branch                   %62.2 -> BB72 (if true) | BB73 (if false)
BB69   <- [62]
  void                    Nop                !     
  val?^ | miss    %69.1 = %62.3
  dr              %69.2 = Typecheck@0x5612994289e8[Type#58]
  goto BB9
BB70   <- [66]
  lgl$#-          %70.0 = Neq                d     %66.0, 1L, elided   <true>
  void                    Branch                   %70.0 -> BB74 (if true) | BB75 (if false)
BB71   <- [66]
  void                    Nop                !     
  lgl$#-          %71.1 = %66.1
  dr              %71.2 = DeadBranchReached@0x5612994289e8[Test#6]
  goto BB12
BB72   <- [68]
  real_           %72.0 = CastType           d     dn %62.1
  val+            %72.1 = CallSafeBuiltin    vwed  %*%(%72.0, %68.0)    <real_>
  void                    Return             l     %72.1
BB73   <- [68]
  void                    Nop                !     
  val?            %73.1 = %62.1
  dr              %73.2 = Typecheck@0x5612994289e8[Type#57]
  goto BB9
BB9   <- [69, 73]
  val?^ | miss    %9.0  = Phi                      %69.1:BB69, %73.1:BB73
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %69.2:BB69, %73.2:BB73
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x561298df5350+659: [<blt %*%>, %62.1], env=e60.0
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB74   <- [70]
  void                    StVar              lW    j, 1L, e60.0
  val?^ | miss    %74.1 = LdVar              eR    eval_A, e60.0
  (cls|spec|blt)  %74.2 = CastType                 dn %74.1
  val+            %74.3 = CallSafeBuiltin          bodyCode(%74.2) 
  lgl$#-          %74.4 = Identical                %74.3, <(rir::DispatchTable*)0x5612982c46b0>
  void                    Branch                   %74.4 -> BB76 (if true) | BB77 (if false)
BB75   <- [70]
  void                    Nop                !     
  lgl$#-          %75.1 = %70.0
  dr              %75.2 = DeadBranchReached@0x5612994289e8[Test#7]
  goto BB12
BB76   <- [74]
  val?            %76.0 = Force!             d     %74.1, 
  prom-           %76.1 = MkArg                    unboundValue, eval_A_times_u[0x561299db8990]_p2 (!refl), e60.0
  prom-           %76.2 = MkArg                    unboundValue, eval_A_times_u[0x561299db8990]_p3 (!refl), e60.0
  (cls|spec|blt)  %76.3 = ChkFunction        e     %76.0
  env             e76.4 = CallSafeBuiltin          environment(%76.3) 
  ct              %76.5 = PushContext        lCL   %76.1, %76.2, eval_A(i, j), %76.3, e60.0
  val?^           %76.6 = CastType                 up %76.2
  val?^           %76.7 = CastType                 up %76.1
  val?^ | miss    %76.8 = LdVar              eR    eval_A_cache, e76.4
  env             e76.9 = MkEnv              l     i=%76.7, j=%76.6, parent=e76.4, context 1
  val?            %76.10 = Force!<value>      !v    %76.8, e76.9   <real_>
  lgl$#-          %76.11 = IsType                   %76.10 isA val+   <true>
  void                    Branch                   %76.11 -> BB78 (if true) | BB79 (if false)
BB77   <- [74]
  fs              %77.0 = FrameState         R     0x561298df5350+346: [1L, %58.0, %11.1, 1L, %66.0, 1L], env=e60.0
  void                    Deopt              !v    %77.0, CallTarget@0x5612994289e8[Call#5], %74.3   !
BB78   <- [76]
  val?^ | miss    %78.0 = LdVar              eR    i, e76.9
  val?            %78.1 = Force!<lazy>       !v    %78.0, e76.9   <int$->
  val?^ | miss    %78.2 = LdVar              eR    j, e76.9
  val?            %78.3 = Force!<lazy>       !v    %78.2, e76.9   <int$->
  lgl$#-          %78.4 = IsType                   %78.3 isA int$-
  lgl$#-          %78.5 = IsType                   %78.1 isA int$-
  lgl$#-          %78.6 = IsType                   %76.10 isA real_
  void                    Branch                   %78.6 -> BB80 (if true) | BB81 (if false)
BB79   <- [76]
  fs              %79.0 = FrameState         R     0x561298df5350+390: [1L, %58.0, %11.1, 1L, %66.0, 2L], env=e60.0
  fs              %79.1 = FrameState         R     0x561299824080+9: [%76.10], env=e76.9, next=%79.0
  void                    Deopt              !v    %79.1, DeadBranchReached@0x561299428728[Test#0], %76.11   !
BB80   <- [78]
  real_           %80.0 = CastType           d     dn %76.10
  void                    Branch                   %78.5 -> BB82 (if true) | BB83 (if false)
BB81   <- [78]
  void                    Nop                !     
  val?            %81.1 = %76.10
  dr              %81.2 = Typecheck@0x561299428728[Type#0]
  goto BB18
BB82   <- [80]
  int$-           %82.0 = CastType           d     dn %78.1
  void                    Branch                   %78.4 -> BB84 (if true) | BB85 (if false)
BB83   <- [80]
  void                    Nop                !     
  val?            %83.1 = %78.1
  dr              %83.2 = Typecheck@0x561299428728[Type#3]
  goto BB18
BB18   <- [81, 83, 85]
  val?^ | miss    %18.0 = Phi                      %81.1:BB81, %83.1:BB83, %85.1:BB85
  val?^ | miss    %18.1 = %18.0
  dr              %18.2 = Phi                      %81.2:BB81, %83.2:BB83, %85.2:BB85
  dr              %18.3 = %18.2
  fs              %18.4 = FrameState         R     0x561298df5350+390: [1L, %58.0, %11.1, 1L, %66.0, 2L], env=e60.0
  fs              %18.5 = FrameState         R     0x561299824080+73: [%76.10, %78.1, %78.3], env=e76.9, next=%18.4
  void                    Deopt              !v    %18.5, %18.3, %18.1   !
BB84   <- [82]
  int$-           %84.0 = CastType           d     dn %78.3
  real$-          %84.1 = Extract2_2D        wed   %80.0, %82.0, %84.0, elided   <real$->
  lgl$-           %84.2 = Neq                d     %84.1, 0, elided   <lgl$->
  lgl$#-          %84.3 = CheckTrueFalse     e     %84.2
  void                    Branch                   %84.3 -> BB49 (if true) | BB20 (if false)
BB85   <- [82]
  void                    Nop                !     
  val?            %85.1 = %78.3
  dr              %85.2 = Typecheck@0x561299428728[Type#4]
  goto BB18
BB49   <- [84]
  val?^ | miss    %49.0 = LdVar              eR    eval_A_cache, e76.9
  val?            %49.1 = Force!             !v    %49.0, e76.9   <val?_>
  lgl$#-          %49.2 = IsType                   %49.1 isA val+   <@?>
  void                    Branch                   %49.2 -> BB52 (if true) | BB50 (if false)
BB20   <- [84]
  val?^ | miss    %20.0 = LdVar              eR    i, e76.9
  val?            %20.1 = Force!<wrapped>    !v    %20.0, e76.9   <int$->
  val?^ | miss    %20.2 = LdVar              eR    j, e76.9
  val?            %20.3 = Force!<wrapped>    !v    %20.2, e76.9   <int$->
  lgl$#-          %20.4 = IsType                   %20.3 isA int$-
  lgl$#-          %20.5 = IsType                   %20.1 isA int$-
  void                    Branch                   %20.5 -> BB90 (if true) | BB91 (if false)
BB52   <- [49]
  val?^ | miss    %52.0 = LdVar              eR    i, e76.9
  val?            %52.1 = Force!             !v    %52.0, e76.9   <val?_>
  val?^ | miss    %52.2 = LdVar              eR    j, e76.9
  val?            %52.3 = Force!             !v    %52.2, e76.9   <val?_>
  val?            %52.4 = %52.3
  val?            %52.5 = %52.1
  goto BB51
BB50   <- [49]
  prom-           %50.0 = MkArg                    unboundValue, eval_A_times_u[0x561299db8990]_p8, e76.9
  prom-           %50.1 = MkArg                    unboundValue, eval_A_times_u[0x561299db8990]_p9, e76.9
  prom-           %50.2 = %50.1
  prom-           %50.3 = %50.0
  goto BB51
BB90   <- [20]
  int$-           %90.0 = CastType           d     dn %20.1
  void                    Branch                   %20.4 -> BB94 (if true) | BB95 (if false)
BB91   <- [20]
  void                    Nop                !     
  val?            %91.1 = %20.1
  dr              %91.2 = Typecheck@0x561299428728[Type#7]
  goto BB21
BB51   <- [50, 52]
  val?            %51.0 = Phi                      %52.4:BB52, %50.2:BB50
  val?            %51.1 = %51.0
  val?            %51.2 = Phi                      %52.5:BB52, %50.3:BB50
  val?            %51.3 = %51.2
  val?            %51.4 = Extract2_2D        !v    %49.1, %51.3, %51.1, e76.9   <val?_>
  val?            %51.5 = %51.4
  goto BB25
BB94   <- [90]
  int$-           %94.0 = CastType           d     dn %20.3
  int$-           %94.1 = Add                d     %90.0, %94.0, elided   <int$->
  real$-          %94.2 = Sub                d     %94.1, 2, elided   <real$->
  val?^ | miss    %94.3 = LdVar              eR    i, e76.9
  lgl$#-          %94.4 = IsType                   %94.3 isA int$~-
  void                    Branch                   %94.4 -> BB98 (if true) | BB99 (if false)
BB95   <- [90]
  void                    Nop                !     
  val?            %95.1 = %20.3
  dr              %95.2 = Typecheck@0x561299428728[Type#8]
  goto BB21
BB21   <- [91, 95, 99, 103]
  val?^ | miss    %21.0 = Phi                      %91.1:BB91, %95.1:BB95, %99.1:BB99, %103.1:BB103
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %91.2:BB91, %95.2:BB95, %99.2:BB99, %103.2:BB103
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x561298df5350+390: [1L, %58.0, %11.1, 1L, %66.0, 2L], env=e60.0
  fs              %21.5 = FrameState         R     0x561299824080+132: [1, %20.1, %20.3], env=e76.9, next=%21.4
  void                    Deopt              !v    %21.5, %21.3, %21.1   !
BB25   <- [51, 104]
  val?            %25.0 = Phi                      %104.3:BB104, %51.5:BB51
  val?            %25.1 = %25.0
  val?            %25.2 = PopContext         C     %25.1, %76.5   <real$->
  lgl$#-          %25.3 = IsType                   %25.2 isA real$-
  void                    Branch                   %25.3 -> BB86 (if true) | BB87 (if false)
BB98   <- [94]
  int$~-          %98.0 = CastType           d     dn %94.3
  int$-           %98.1 = Force!<wrapped>          %98.0,    <int$->
  val?^ | miss    %98.2 = LdVar              eR    j, e76.9
  lgl$#-          %98.3 = IsType                   %98.2 isA int$~-
  void                    Branch                   %98.3 -> BB102 (if true) | BB103 (if false)
BB99   <- [94]
  void                    Nop                !     
  val?^ | miss    %99.1 = %94.3
  dr              %99.2 = Typecheck@0x561299428728[Type#11]
  goto BB21
BB86   <- [25]
  real$-          %86.0 = CastType           d     dn %25.2
  val?^ | miss    %86.1 = LdVar              eR    eval_A_mat !upd, e60.0
  lgl$#-          %86.2 = IsType                   %86.1 isA real_
  void                    Branch                   %86.2 -> BB88 (if true) | BB89 (if false)
BB87   <- [25]
  void                    Nop                !     
  val?            %87.1 = %25.2
  dr              %87.2 = Typecheck@0x5612994289e8[Type#45]
  goto BB26
BB102   <- [98]
  int$~-          %102.0 = CastType           d     dn %98.2
  int$-           %102.1 = Force!<wrapped>          %102.0,    <int$->
  int$-           %102.2 = Add                d     %98.1, %102.1, elided   <int$->
  real$-          %102.3 = Sub                d     %102.2, 1, elided   <real$->
  real$-          %102.4 = Mul                d     %94.2, %102.3, elided   <real$->
  real$-          %102.5 = Div                d     %102.4, 2, elided   <real$->
  real$-          %102.6 = Add                d     %102.5, %98.1, elided   <real$->
  real$-          %102.7 = Div                d     1, %102.6, elided   <real$->
  val?^ | miss    %102.8 = LdVar              eR    eval_A_cache, e76.4   <real_>
  val?            %102.9 = Force!             !v    %102.8, e76.9
  lgl$#-          %102.10 = IsType                   %102.9 isA real_
  void                    Branch                   %102.10 -> BB104 (if true) | BB105 (if false)
BB103   <- [98]
  void                    Nop                !     
  val?^ | miss    %103.1 = %98.2
  dr              %103.2 = Typecheck@0x561299428728[Type#12]
  goto BB21
BB88   <- [86]
  real_           %88.0 = CastType           d     dn %86.1
  val?^ | miss    %88.1 = LdVar              eR    i, e60.0
  lgl$#-          %88.2 = IsType                   %88.1 isA int$-
  void                    Branch                   %88.2 -> BB92 (if true) | BB93 (if false)
BB89   <- [86]
  void                    Nop                !     
  val?^ | miss    %89.1 = %86.1
  dr              %89.2 = Typecheck@0x5612994289e8[Type#46]
  goto BB26
BB26   <- [87, 89, 93, 97]
  val?^ | miss    %26.0 = Phi                      %87.1:BB87, %89.1:BB89, %93.1:BB93, %97.1:BB97
  val?^ | miss    %26.1 = %26.0
  dr              %26.2 = Phi                      %87.2:BB87, %89.2:BB89, %93.2:BB93, %97.2:BB97
  dr              %26.3 = %26.2
  fs              %26.4 = FrameState         R     0x561298df5350+390: [1L, %58.0, %11.1, 1L, %66.0, 2L, %25.2], env=e60.0
  void                    Deopt              !v    %26.4, %26.3, %26.1   !
BB104   <- [102]
  real_           %104.0 = CastType           d     dn %102.9
  real_           %104.1 = Subassign2_2D      wed   %102.7, %104.0, %98.1, %102.1, elided
  void                    StVarSuper         lRW   eval_A_cache, %104.1, e76.9
  real$-          %104.3 = %102.7
  goto BB25
BB105   <- [102]
  fs              %105.0 = FrameState         R     0x561298df5350+390: [1L, %58.0, %11.1, 1L, %66.0, 2L], env=e60.0
  fs              %105.1 = FrameState         R     0x561299824080+288: [%102.7, %102.7, %102.9, %98.1, %102.1], env=e76.9, next=%105.0
  void                    Deopt              !v    %105.1, Typecheck@0x561299428728[Type#20], %102.9   !
BB92   <- [88]
  int$-           %92.0 = CastType           d     dn %88.1
  val?^ | miss    %92.1 = LdVar              eR    j, e60.0
  lgl$#-          %92.2 = IsType                   %92.1 isA int$-
  void                    Branch                   %92.2 -> BB96 (if true) | BB97 (if false)
BB93   <- [88]
  void                    Nop                !     
  val?^ | miss    %93.1 = %88.1
  dr              %93.2 = Typecheck@0x5612994289e8[Type#47]
  goto BB26
BB96   <- [92]
  int$-           %96.0 = CastType           d     dn %92.1
  real_           %96.1 = Subassign2_2D      wed   %86.0, %88.0, %92.0, %96.0, elided
  void                    StVar              lW    eval_A_mat, %96.1, e60.0
  int$#-          %96.3 = 2L
  goto BB28
BB97   <- [92]
  void                    Nop                !     
  val?^ | miss    %97.1 = %92.1
  dr              %97.2 = Typecheck@0x5612994289e8[Type#48]
  goto BB26
BB28   <- [96, 130]
  int$#-          %28.0 = Phi                      %96.3:BB96, %130.3:BB130
  int$#-          %28.1 = %28.0
  lgl$#-          %28.2 = Neq                d     %66.0, %28.1, elided
  void                    Branch                   %28.2 -> BB30 (if true) | BB29 (if false)
BB30   <- [28]
  void                    StVar              lW    j, %28.1, e60.0
  int$#-          %30.1 = Add                d     %28.1, 1L, elided
  val?^ | miss    %30.2 = LdVar              eR    eval_A, e60.0
  (cls|spec|blt)  %30.3 = CastType                 dn %30.2
  val+            %30.4 = CallSafeBuiltin          bodyCode(%30.3) 
  lgl$#-          %30.5 = Identical                %30.4, <(rir::DispatchTable*)0x5612982c46b0>
  void                    Branch                   %30.5 -> BB100 (if true) | BB101 (if false)
BB29   <- [28]
  void                    Nop                !     
  int$#-          %29.1 = %11.1
  goto BB5
BB100   <- [30]
  val?            %100.0 = Force!             d     %30.2, 
  prom-           %100.1 = MkArg                    unboundValue, eval_A_times_u[0x561299db8990]_p4, e60.0
  prom-           %100.2 = MkArg                    unboundValue, eval_A_times_u[0x561299db8990]_p5 (!refl), e60.0
  (cls|spec|blt)  %100.3 = ChkFunction        e     %100.0
  env             e100.4 = CallSafeBuiltin          environment(%100.3) 
  ct              %100.5 = PushContext        lCL   %100.1, %100.2, eval_A(i, j), %100.3, e60.0
  val?^           %100.6 = CastType                 up %100.2
  val?^           %100.7 = CastType                 up %100.1
  val?^ | miss    %100.8 = LdVar              eR    eval_A_cache, e100.4
  env             e100.9 = MkEnv              l     i=%100.7, j=%100.6, parent=e100.4, context 1
  val?            %100.10 = Force!<value>      !v    %100.8, e100.9   <real_>
  lgl$#-          %100.11 = IsType                   %100.10 isA val+   <true>
  void                    Branch                   %100.11 -> BB106 (if true) | BB107 (if false)
BB101   <- [30]
  fs              %101.0 = FrameState         R     0x561298df5350+464: [1L, %58.0, %11.1, 1L, %66.0, %28.1], env=e60.0
  void                    Deopt              !v    %101.0, CallTarget@0x5612994289e8[Call#6], %30.4   !
BB106   <- [100]
  val?^ | miss    %106.0 = LdVar              eR    i, e100.9
  val?            %106.1 = Force!<lazy>       !v    %106.0, e100.9   <int$->
  val?^ | miss    %106.2 = LdVar              eR    j, e100.9
  val?            %106.3 = Force!<lazy>       !v    %106.2, e100.9   <int$->
  lgl$#-          %106.4 = IsType                   %106.3 isA int$-
  lgl$#-          %106.5 = IsType                   %106.1 isA int$-
  lgl$#-          %106.6 = IsType                   %100.10 isA real_
  void                    Branch                   %106.6 -> BB108 (if true) | BB109 (if false)
BB107   <- [100]
  fs              %107.0 = FrameState         R     0x561298df5350+508: [1L, %58.0, %11.1, 1L, %66.0, %30.1], env=e60.0
  fs              %107.1 = FrameState         R     0x561299824080+9: [%100.10], env=e100.9, next=%107.0
  void                    Deopt              !v    %107.1, DeadBranchReached@0x561299428728[Test#0], %100.11   !
BB108   <- [106]
  real_           %108.0 = CastType           d     dn %100.10
  void                    Branch                   %106.5 -> BB110 (if true) | BB111 (if false)
BB109   <- [106]
  void                    Nop                !     
  val?            %109.1 = %100.10
  dr              %109.2 = Typecheck@0x561299428728[Type#0]
  goto BB35
BB110   <- [108]
  int$-           %110.0 = CastType           d     dn %106.1
  void                    Branch                   %106.4 -> BB112 (if true) | BB113 (if false)
BB111   <- [108]
  void                    Nop                !     
  val?            %111.1 = %106.1
  dr              %111.2 = Typecheck@0x561299428728[Type#3]
  goto BB35
BB35   <- [109, 111, 113]
  val?^ | miss    %35.0 = Phi                      %109.1:BB109, %111.1:BB111, %113.1:BB113
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %109.2:BB109, %111.2:BB111, %113.2:BB113
  dr              %35.3 = %35.2
  fs              %35.4 = FrameState         R     0x561298df5350+508: [1L, %58.0, %11.1, 1L, %66.0, %30.1], env=e60.0
  fs              %35.5 = FrameState         R     0x561299824080+73: [%100.10, %106.1, %106.3], env=e100.9, next=%35.4
  void                    Deopt              !v    %35.5, %35.3, %35.1   !
BB112   <- [110]
  int$-           %112.0 = CastType           d     dn %106.3
  real$-          %112.1 = Extract2_2D        wed   %108.0, %110.0, %112.0, elided   <real$->
  lgl$-           %112.2 = Neq                d     %112.1, 0, elided   <lgl$->
  lgl$#-          %112.3 = CheckTrueFalse     e     %112.2
  void                    Branch                   %112.3 -> BB45 (if true) | BB37 (if false)
BB113   <- [110]
  void                    Nop                !     
  val?            %113.1 = %106.3
  dr              %113.2 = Typecheck@0x561299428728[Type#4]
  goto BB35
BB45   <- [112]
  val?^ | miss    %45.0 = LdVar              eR    eval_A_cache, e100.9
  val?            %45.1 = Force!             !v    %45.0, e100.9   <val?_>
  lgl$#-          %45.2 = IsType                   %45.1 isA val+   <@?>
  void                    Branch                   %45.2 -> BB48 (if true) | BB46 (if false)
BB37   <- [112]
  val?^ | miss    %37.0 = LdVar              eR    i, e100.9
  val?            %37.1 = Force!<wrapped>    !v    %37.0, e100.9   <int$->
  val?^ | miss    %37.2 = LdVar              eR    j, e100.9
  val?            %37.3 = Force!<wrapped>    !v    %37.2, e100.9   <int$->
  lgl$#-          %37.4 = IsType                   %37.3 isA int$-
  lgl$#-          %37.5 = IsType                   %37.1 isA int$-
  void                    Branch                   %37.5 -> BB114 (if true) | BB115 (if false)
BB48   <- [45]
  val?^ | miss    %48.0 = LdVar              eR    i, e100.9
  val?            %48.1 = Force!             !v    %48.0, e100.9   <val?_>
  val?^ | miss    %48.2 = LdVar              eR    j, e100.9
  val?            %48.3 = Force!             !v    %48.2, e100.9   <val?_>
  val?            %48.4 = %48.3
  val?            %48.5 = %48.1
  goto BB47
BB46   <- [45]
  prom-           %46.0 = MkArg                    unboundValue, eval_A_times_u[0x561299db8990]_p10, e100.9
  prom-           %46.1 = MkArg                    unboundValue, eval_A_times_u[0x561299db8990]_p11, e100.9
  prom-           %46.2 = %46.1
  prom-           %46.3 = %46.0
  goto BB47
BB114   <- [37]
  int$-           %114.0 = CastType           d     dn %37.1
  void                    Branch                   %37.4 -> BB116 (if true) | BB117 (if false)
BB115   <- [37]
  void                    Nop                !     
  val?            %115.1 = %37.1
  dr              %115.2 = Typecheck@0x561299428728[Type#7]
  goto BB38
BB47   <- [46, 48]
  val?            %47.0 = Phi                      %48.4:BB48, %46.2:BB46
  val?            %47.1 = %47.0
  val?            %47.2 = Phi                      %48.5:BB48, %46.3:BB46
  val?            %47.3 = %47.2
  val?            %47.4 = Extract2_2D        !v    %45.1, %47.3, %47.1, e100.9   <val?_>
  val?            %47.5 = %47.4
  goto BB42
BB116   <- [114]
  int$-           %116.0 = CastType           d     dn %37.3
  int$-           %116.1 = Add                d     %114.0, %116.0, elided   <int$->
  real$-          %116.2 = Sub                d     %116.1, 2, elided   <real$->
  val?^ | miss    %116.3 = LdVar              eR    i, e100.9
  lgl$#-          %116.4 = IsType                   %116.3 isA int$~-
  void                    Branch                   %116.4 -> BB118 (if true) | BB119 (if false)
BB117   <- [114]
  void                    Nop                !     
  val?            %117.1 = %37.3
  dr              %117.2 = Typecheck@0x561299428728[Type#8]
  goto BB38
BB38   <- [115, 117, 119, 121]
  val?^ | miss    %38.0 = Phi                      %115.1:BB115, %117.1:BB117, %119.1:BB119, %121.1:BB121
  val?^ | miss    %38.1 = %38.0
  dr              %38.2 = Phi                      %115.2:BB115, %117.2:BB117, %119.2:BB119, %121.2:BB121
  dr              %38.3 = %38.2
  fs              %38.4 = FrameState         R     0x561298df5350+508: [1L, %58.0, %11.1, 1L, %66.0, %30.1], env=e60.0
  fs              %38.5 = FrameState         R     0x561299824080+132: [1, %37.1, %37.3], env=e100.9, next=%38.4
  void                    Deopt              !v    %38.5, %38.3, %38.1   !
BB42   <- [47, 126]
  val?            %42.0 = Phi                      %126.3:BB126, %47.5:BB47
  val?            %42.1 = %42.0
  val?            %42.2 = PopContext         C     %42.1, %100.5   <real$->
  lgl$#-          %42.3 = IsType                   %42.2 isA real$-
  void                    Branch                   %42.3 -> BB122 (if true) | BB123 (if false)
BB118   <- [116]
  int$~-          %118.0 = CastType           d     dn %116.3
  int$-           %118.1 = Force!<wrapped>          %118.0,    <int$->
  val?^ | miss    %118.2 = LdVar              eR    j, e100.9
  lgl$#-          %118.3 = IsType                   %118.2 isA int$~-
  void                    Branch                   %118.3 -> BB120 (if true) | BB121 (if false)
BB119   <- [116]
  void                    Nop                !     
  val?^ | miss    %119.1 = %116.3
  dr              %119.2 = Typecheck@0x561299428728[Type#11]
  goto BB38
BB122   <- [42]
  real$-          %122.0 = CastType           d     dn %42.2
  val?^ | miss    %122.1 = LdVar              eR    eval_A_mat !upd, e60.0
  lgl$#-          %122.2 = IsType                   %122.1 isA real_
  void                    Branch                   %122.2 -> BB124 (if true) | BB125 (if false)
BB123   <- [42]
  void                    Nop                !     
  val?            %123.1 = %42.2
  dr              %123.2 = Typecheck@0x5612994289e8[Type#51]
  goto BB43
BB120   <- [118]
  int$~-          %120.0 = CastType           d     dn %118.2
  int$-           %120.1 = Force!<wrapped>          %120.0,    <int$->
  int$-           %120.2 = Add                d     %118.1, %120.1, elided   <int$->
  real$-          %120.3 = Sub                d     %120.2, 1, elided   <real$->
  real$-          %120.4 = Mul                d     %116.2, %120.3, elided   <real$->
  real$-          %120.5 = Div                d     %120.4, 2, elided   <real$->
  real$-          %120.6 = Add                d     %120.5, %118.1, elided   <real$->
  real$-          %120.7 = Div                d     1, %120.6, elided   <real$->
  val?^ | miss    %120.8 = LdVar              eR    eval_A_cache, e100.4   <real_>
  val?            %120.9 = Force!             !v    %120.8, e100.9
  lgl$#-          %120.10 = IsType                   %120.9 isA real_
  void                    Branch                   %120.10 -> BB126 (if true) | BB127 (if false)
BB121   <- [118]
  void                    Nop                !     
  val?^ | miss    %121.1 = %118.2
  dr              %121.2 = Typecheck@0x561299428728[Type#12]
  goto BB38
BB124   <- [122]
  real_           %124.0 = CastType           d     dn %122.1
  val?^ | miss    %124.1 = LdVar              eR    i, e60.0
  lgl$#-          %124.2 = IsType                   %124.1 isA int$-
  void                    Branch                   %124.2 -> BB128 (if true) | BB129 (if false)
BB125   <- [122]
  void                    Nop                !     
  val?^ | miss    %125.1 = %122.1
  dr              %125.2 = Typecheck@0x5612994289e8[Type#52]
  goto BB43
BB43   <- [123, 125, 129, 131]
  val?^ | miss    %43.0 = Phi                      %123.1:BB123, %125.1:BB125, %129.1:BB129, %131.1:BB131
  val?^ | miss    %43.1 = %43.0
  dr              %43.2 = Phi                      %123.2:BB123, %125.2:BB125, %129.2:BB129, %131.2:BB131
  dr              %43.3 = %43.2
  fs              %43.4 = FrameState         R     0x561298df5350+508: [1L, %58.0, %11.1, 1L, %66.0, %30.1, %42.2], env=e60.0
  void                    Deopt              !v    %43.4, %43.3, %43.1   !
BB126   <- [120]
  real_           %126.0 = CastType           d     dn %120.9
  real_           %126.1 = Subassign2_2D      wed   %120.7, %126.0, %118.1, %120.1, elided
  void                    StVarSuper         lRW   eval_A_cache, %126.1, e100.9
  real$-          %126.3 = %120.7
  goto BB42
BB127   <- [120]
  fs              %127.0 = FrameState         R     0x561298df5350+508: [1L, %58.0, %11.1, 1L, %66.0, %30.1], env=e60.0
  fs              %127.1 = FrameState         R     0x561299824080+288: [%120.7, %120.7, %120.9, %118.1, %120.1], env=e100.9, next=%127.0
  void                    Deopt              !v    %127.1, Typecheck@0x561299428728[Type#20], %120.9   !
BB128   <- [124]
  int$-           %128.0 = CastType           d     dn %124.1
  val?^ | miss    %128.1 = LdVar              eR    j, e60.0
  lgl$#-          %128.2 = IsType                   %128.1 isA int$-
  void                    Branch                   %128.2 -> BB130 (if true) | BB131 (if false)
BB129   <- [124]
  void                    Nop                !     
  val?^ | miss    %129.1 = %124.1
  dr              %129.2 = Typecheck@0x5612994289e8[Type#53]
  goto BB43
BB130   <- [128]
  int$-           %130.0 = CastType           d     dn %128.1
  real_           %130.1 = Subassign2_2D      wed   %122.0, %124.0, %128.0, %130.0, elided
  void                    StVar              lW    eval_A_mat, %130.1, e60.0
  int$#-          %130.3 = %30.1
  goto BB28
BB131   <- [128]
  void                    Nop                !     
  val?^ | miss    %131.1 = %128.1
  dr              %131.2 = Typecheck@0x5612994289e8[Type#54]
  goto BB43
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ eval_A_times_u[0x561299db8990]                                               │
└──────────────────────────────────────────────────────────────────────────────┘
