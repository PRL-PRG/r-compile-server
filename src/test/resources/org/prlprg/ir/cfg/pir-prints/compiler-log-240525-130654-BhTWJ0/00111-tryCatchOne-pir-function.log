
┌──────────────────────────────────────────────────────────────────────────────┐
│ tryCatchOne[0x55c7c4351590]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl2,!Obj2                       │
│ Properties:                                                                  │
├────── Final PIR Version
tryCatchOne[0x55c7c4351590]
BB0
  val?^           %0.0  = LdArg                    3
  val?^           %0.1  = LdArg                    2
  val?^           %0.2  = LdArg                    1
  val?^           %0.3  = LdArg                    0
  env             e0.4  = MkEnv              l     expr=%0.3, name=%0.2, parentenv=%0.1, handler=%0.0, parent=?, context 1
  cls             %0.5  = MkCls                    doTryCatch, e0.4
  void                    StVar              lW    doTryCatch, %0.5, e0.4
  prom-           %0.7  = MkArg                    unboundValue, tryCatchOne[0x55c7c4351590]_p0, e0.4
  prom-           %0.8  = MkArg                    unboundValue, tryCatchOne[0x55c7c4351590]_p1, e0.4
  prom-           %0.9  = MkArg                    unboundValue, tryCatchOne[0x55c7c4351590]_p2 (!refl), e0.4
  prom-           %0.10 = MkArg                    unboundValue, tryCatchOne[0x55c7c4351590]_p3, e0.4
  val?            %0.11 = StaticCall         !v    doTryCatch[0x55c7c4368690](%0.7, %0.8, %0.9, %0.10) from %0.5 e0.4   <vec->
  void                    StVar              lW    value, %0.11, e0.4
  lgl$#-          %0.13 = IsType                   %0.11 isA val+   <true>
  lgl$#-          %0.14 = IsType                   %0.11 isA val?-
  val             %0.15 = ChkMissing         e     %0.11
  void                    Branch                   %0.13 -> BB17 (if true) | BB18 (if false)
BB17   <- [0]
  void                    Branch                   %0.14 -> BB19 (if true) | BB20 (if false)
BB18   <- [0]
  void                    Nop                !     
  lgl$#-          %18.1 = %0.13
  dr              %18.2 = DeadBranchReached@0x55c7c4462f70[Test#0]
  goto BB16
BB19   <- [17]
  val?-           %19.0 = CastType           d     dn %0.11   <vec->
  val?            %19.1 = Extract2_1D        wed   %19.0, 1L, elided   <(nil|vec)>
  lgl$-           %19.2 = Is                       %19.1, NULL
  lgl$#-          %19.3 = CheckTrueFalse     e     %19.2
  void                    Branch                   %19.3 -> BB11 (if true) | BB5 (if false)
BB20   <- [17]
  void                    Nop                !     
  val?            %20.1 = %0.11
  dr              %20.2 = Typecheck@0x55c7c4462f70[Type#4]
  goto BB16
BB16   <- [18, 20]
  val?^ | miss    %16.0 = Phi                      %18.1:BB18, %20.1:BB20
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %18.2:BB18, %20.2:BB20
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55c7c4318da0+86: [], env=e0.4
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB11   <- [19]
  val?            %11.0 = CallBuiltin        !v    geterrmessage() e0.4
  void                    StVar              lW    msg, %11.0, e0.4
  val?^ | miss    %11.2 = LdVar              eR    value, e0.4
  lgl$#-          %11.3 = IsType                   %11.2 isA val?~- | miss
  void                    Branch                   %11.3 -> BB23 (if true) | BB24 (if false)
BB5   <- [19]
  val?^ | miss    %5.0  = LdVar              eR    is.character, e0.4
  lgl$#-          %5.1  = Identical                <blt is.character>, %5.0   <true>
  void                    Branch                   %5.1 -> BB21 (if true) | BB22 (if false)
BB23   <- [11]
  val?~- | miss   %23.0 = CastType           d     dn %11.2
  val?-           %23.1 = Force!<value>            %23.0,    <vec->
  lgl$#-          %23.2 = IsType                   %23.1 isA val+   <true>
  void                    Branch                   %23.2 -> BB25 (if true) | BB26 (if false)
BB24   <- [11]
  void                    Nop                !     
  val?^ | miss    %24.1 = %11.2
  dr              %24.2 = Typecheck@0x55c7c4462f70[Type#21]
  goto BB12
BB21   <- [5]
  lgl$#-          %21.0 = CallSafeBuiltin    wed   is.character(%19.1)    <lgl$->
  void                    Branch                   %21.0 -> BB10 (if true) | BB6 (if false)
BB22   <- [5]
  fs              %22.0 = FrameState         R     0x55c7c4318da0+138: [%19.1], env=e0.4
  void                    Deopt              !v    %22.0, DeadBranchReached@0x55c7c4462f70[Test#1], %5.1   !
BB25   <- [23]
  val?            %25.0 = Extract2_1D        wed   %23.1, 2L, elided   <code->
  void                    StVar              lW    call, %25.0, e0.4
  val?^ | miss    %25.2 = LdVar              eR    simpleError, e0.4
  lgl$#-          %25.3 = Identical                %25.2, function(message, call=NULL) <(rir::DispatchTa|...>
  void                    Branch                   %25.3 -> BB31 (if true) | BB32 (if false)
BB26   <- [23]
  void                    Nop                !     
  lgl$#-          %26.1 = %23.2
  dr              %26.2 = DeadBranchReached@0x55c7c4462f70[Test#7]
  goto BB12
BB12   <- [24, 26]
  val?^ | miss    %12.0 = Phi                      %24.1:BB24, %26.1:BB26
  val?^ | miss    %12.1 = %12.0
  dr              %12.2 = Phi                      %24.2:BB24, %26.2:BB26
  dr              %12.3 = %12.2
  fs              %12.4 = FrameState         R     0x55c7c4318da0+585: [], env=e0.4
  void                    Deopt              !v    %12.4, %12.3, %12.1   !
BB10   <- [21]
  void                    StVar              lW    msg, %19.1, e0.4
  val?            %10.1 = Extract2_1D        wed   %19.0, 2L, elided   <val?_>
  void                    StVar              lW    call, %10.1, e0.4
  (cls|spec|blt)  %10.3 = LdFun              !v    simpleError, e0.4
  fs              %10.4 = FrameState         R     0x55c7c4318da0+512: [%10.3], env=e0.4
  void                    Deopt              !v    %10.4, DeadCall@0x55c7c4462f70[Call#2], %10.3   !
BB6   <- [21]
  void                    StVar              lW    cond, %19.1, e0.4
  goto BB7
BB31   <- [25]
  prom-           %31.0 = MkArg                    unboundValue, tryCatchOne[0x55c7c4351590]_p5 (!refl), e0.4
  prom-           %31.1 = MkArg                    unboundValue, tryCatchOne[0x55c7c4351590]_p6 (!refl), e0.4
  val?            %31.2 = StaticCall         !v    simpleError[0x55c7c454e920](%31.0, %31.1) e0.4   <vec>
  void                    StVar              lW    cond, %31.2, e0.4
  goto BB7
BB32   <- [25]
  fs              %32.0 = FrameState         R     0x55c7c4318da0+652: [], env=e0.4
  void                    Deopt              !v    %32.0, CallTarget@0x55c7c4462f70[Call#3], %25.2   !
BB7   <- [6, 31]
  val?^ | miss    %7.0  = LdVar              eR    value, e0.4
  lgl$#-          %7.1  = IsType                   %7.0 isA val?~- | miss
  void                    Branch                   %7.1 -> BB27 (if true) | BB28 (if false)
BB27   <- [7]
  val?~- | miss   %27.0 = CastType           d     dn %7.0
  val?-           %27.1 = Force!<value>            %27.0,    <vec->
  lgl$#-          %27.2 = IsType                   %27.1 isA val+   <true>
  void                    Branch                   %27.2 -> BB29 (if true) | BB30 (if false)
BB28   <- [7]
  void                    Nop                !     
  val?^ | miss    %28.1 = %7.0
  dr              %28.2 = Typecheck@0x55c7c4462f70[Type#26]
  goto BB8
BB29   <- [27]
  val?            %29.0 = Extract2_1D        wed   %27.1, 3L, elided   <cls->
  (cls|spec|blt)  %29.1 = ChkFunction        e     %29.0
  void                    Visible            v     
  prom-           %29.3 = MkArg                    unboundValue, tryCatchOne[0x55c7c4351590]_p4 (!refl), e0.4
  val?            %29.4 = Call               !     %29.1(%29.3) e0.4   <str$->
  void                    Return             l     %29.4
BB30   <- [27]
  void                    Nop                !     
  lgl$#-          %30.1 = %27.2
  dr              %30.2 = DeadBranchReached@0x55c7c4462f70[Test#8]
  goto BB8
BB8   <- [28, 30]
  val?^ | miss    %8.0  = Phi                      %28.1:BB28, %30.1:BB30
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %28.2:BB28, %30.2:BB30
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x55c7c4318da0+703: [], env=e0.4
  void                    Deopt              !v    %8.4, %8.3, %8.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(str|vec)->
  void                    NonLocalReturn     !     %0.3, e0.0
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    parentenv, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    handler, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cond, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    msg, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    call, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <code->
  void                    Return             l     %0.3

│ tryCatchOne[0x55c7c4351590]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
