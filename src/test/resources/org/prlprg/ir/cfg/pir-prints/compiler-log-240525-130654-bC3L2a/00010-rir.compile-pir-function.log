
┌──────────────────────────────────────────────────────────────────────────────┐
│ rir.compile[0x55c698f0ba60]                                                  │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:                                                                  │
├────── Final PIR Version
rir.compile[0x55c698f0ba60]
BB0
  val?^ | miss    %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     gpars=%0.0, parent=R_GlobalEnv, context 1
  cls             %0.2  = MkCls                    rir.compile>check.length@0, e0.1
  cls             %0.3  = MkCls                    rir.compile>numnotnull@25, e0.1
  void                    StVar              lW    check.length, %0.2, e0.1
  void                    StVar              lW    numnotnull, %0.3, e0.1
  ct              %0.6  = PushContext        lCL   "a", numnotnull("a"), %0.3, e0.1
  env             e0.7  = MkEnv              l     gparname="a", parent=e0.1, context 1
  (cls|spec|blt)  %0.8  = LdFun              !     match, R_GlobalEnv
  prom-           %0.9  = MkArg                    unboundValue, rir.compile[0x55c698f0ba60]_p0 (!refl), e0.7
  prom-           %0.10 = MkArg                    unboundValue, rir.compile[0x55c698f0ba60]_p1, e0.7
  val?            %0.11 = Call               !     %0.8(%0.9, %0.10) e0.7   <val?_>
  lgl$#-          %0.12 = CheckTrueFalse     we    %0.11
  void                    Branch                   %0.12 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  (cls|spec|blt)  %2.0  = LdFun              !     check.length, e0.7
  prom-           %2.1  = MkArg                    unboundValue, rir.compile[0x55c698f0ba60]_p3, e0.7
  val?            %2.2  = Call               !     %2.0(%2.1) e0.7   <val?_>
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  void                    Invisible          v     
  nil-            %4.1  = nil
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.1:BB4, %2.3:BB2
  val?            %3.1  = %3.0
  val?            %3.2  = PopContext         C     %3.1, %0.6   <val?_>
  void                    Return             l     %3.2
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, e0.0
  prom-           %0.2  = MkArg                    unboundValue, rir.compile[0x55c698f0ba60]_p2, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gpars, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    gparname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ rir.compile[0x55c698f0ba60]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
