
┌──────────────────────────────────────────────────────────────────────────────┐
│ t1[0x55fae8ee04c0]                                                           │
│ Context: CorrOrd,!TMany                                                      │
│ Properties:  Eager, ForceOrd: 0                                              │
├────── Final PIR Version
t1[0x55fae8ee04c0]
BB0
  val?^ | miss    %0.0  = LdArg                    0
  val?^           %0.1  = ChkMissing         e     %0.0
  env             e0.2  = MkEnv              l     x=%0.0, s="", parent=R_GlobalEnv, context 1
  val?            %0.3  = Force!             !v    %0.1, e0.2   <val?_>
  lgl$#-          %0.4  = ColonInputEffects  we    1, %0.3   <@?>
  void                    Branch                   %0.4 -> BB5 (if true) | BB3 (if false)
BB5   <- [0]
  int$#-          %5.0  = ColonCastRhs       e     1L, %0.3   <val?_>
  lgl$#-          %5.1  = Lte                d     1L, %5.0, elided   <@?>
  void                    Branch                   %5.1 -> BB14 (if true) | BB6 (if false)
BB3   <- [0]
  lgl$#-          %3.0  = IsType                   %0.3 isA val?+
  void                    Branch                   %3.0 -> BB16 (if true) | BB17 (if false)
BB14   <- [5]
  void                    Nop                !     
  int$#-          %14.1 = 1L
  goto BB7
BB6   <- [5]
  void                    Nop                !     
  int$#-          %6.1  = -1L
  goto BB7
BB16   <- [3]
  val?+           %16.0 = CastType           d     dn %0.3   <val?_>
  (int|real|complex)+ %16.1 = Colon              wed   1L, %16.0, elided
  (cls|spec|blt)  %16.2 = LdFun              !v    for, e0.2
  prom-           %16.3 = MkArg                    %16.1, t1[0x55fae8ee04c0]_p0 (!refl), e0.2
  prom-           %16.4 = MkArg                    unboundValue, t1[0x55fae8ee04c0]_p1, e0.2
  val?            %16.5 = Call               !v    %16.2(%16.3, %16.4) e0.2
  goto BB4
BB17   <- [3]
  fs              %17.0 = FrameState         R     0x55fae8f6f1a0+38: [1, %0.3, %0.4], env=e0.2
  void                    Deopt              !v    %17.0, Typecheck@0x55fae84c77b8[Type#0], %0.3   !
BB7   <- [14, 6]
  int$#-          %7.0  = Phi                      %14.1:BB14, %6.1:BB6
  int$#-          %7.1  = %7.0
  lgl$#-          %7.2  = Neq                d     %5.0, 1L, elided   <@?>
  void                    Branch                   %7.2 -> BB10 (if true) | BB8 (if false)
BB4   <- [9, 16]
  val?^ | miss    %4.0  = LdVar              eR    s, e0.2
  void                    Visible            v     
  val?            %4.2  = Force!             !     %4.0, e0.2   <val?_>
  void                    Return             l     %4.2
BB10   <- [7]
  void                    StVar              lW    i, 1L, e0.2
  int$-           %10.1 = Add                d     1L, %7.1, elided
  (cls|spec|blt)  %10.2 = LdFun              !v    cat, e0.2
  prom-           %10.3 = MkArg                    unboundValue, t1[0x55fae8ee04c0]_p4, e0.2
  prom-           %10.4 = MkArg                    unboundValue, t1[0x55fae8ee04c0]_p5, e0.2
  val?            %10.5 = Call               !v    %10.2(%10.3, " ", %10.4) e0.2   <val?_>
  void                    StVar              lW    s, %10.5, e0.2
  int$-           %10.7 = %10.1
  goto BB11
BB8   <- [7]
  void                    Nop                !     
  goto BB9
BB11   <- [10, 12]
  int$-           %11.0 = Phi                      %10.7:BB10, %12.7:BB12
  int$-           %11.1 = %11.0
  lgl$-           %11.2 = Neq                d     %5.0, %11.1, elided
  lgl$#-          %11.3 = Identical                %11.2, false
  void                    Branch                   %11.3 -> BB13 (if true) | BB12 (if false)
BB9   <- [13, 8]
  void                    Nop                !     
  goto BB4
BB13   <- [11]
  void                    Nop                !     
  goto BB9
BB12   <- [11]
  void                    StVar              lW    i, %11.1, e0.2
  int$-           %12.1 = Add                d     %11.1, %7.1, elided
  (cls|spec|blt)  %12.2 = LdFun              !v    cat, e0.2
  prom-           %12.3 = MkArg                    unboundValue, t1[0x55fae8ee04c0]_p6, e0.2
  prom-           %12.4 = MkArg                    unboundValue, t1[0x55fae8ee04c0]_p7, e0.2
  val?            %12.5 = Call               !v    %12.2(%12.3, " ", %12.4) e0.2   <val?_>
  void                    StVar              lW    s, %12.5, e0.2
  int$-           %12.7 = %12.1
  goto BB11
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  val?            %0.4  = Colon              !     1L, %0.3, e0.0   <val?_>
  void                    Return             l     %0.4
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    cat, e0.0
  prom-           %0.2  = MkArg                    unboundValue, t1[0x55fae8ee04c0]_p2, e0.0
  prom-           %0.3  = MkArg                    unboundValue, t1[0x55fae8ee04c0]_p3, e0.0
  val?            %0.4  = Call               !v    %0.1(%0.2, " ", %0.3) e0.0   <val?_>
  void                    Invisible          v     
  void                    StVar              lW    s, %0.4, e0.0
  void                    Return             l     %0.4
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    s, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ t1[0x55fae8ee04c0]                                                           │
└──────────────────────────────────────────────────────────────────────────────┘
