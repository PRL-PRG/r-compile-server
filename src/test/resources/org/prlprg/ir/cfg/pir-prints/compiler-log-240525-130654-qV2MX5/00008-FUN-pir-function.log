
┌──────────────────────────────────────────────────────────────────────────────┐
│ FUN[0x55de2a537da0]                                                          │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
FUN[0x55de2a537da0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     x=%0.0, parent=R_BaseNamespace, context 1
  prom-           %0.2  = MkArg                    unboundValue, FUN[0x55de2a537da0]_p0, e0.1
  ct              %0.3  = PushContext        lCL   %0.2, is.numeric_version(x), function(x) <(rir::DispatchTable*)0x55de2a44e4|...>, e0.1
  val?^           %0.4  = CastType                 up %0.2
  env             e0.5  = MkEnv              l     x=%0.4, parent=R_BaseNamespace, context 1
  prom-           %0.6  = MkArg                    unboundValue, FUN[0x55de2a537da0]_p1, e0.5
  ct              %0.7  = PushContext        lCL   %0.6, "numeric_version", inherits(x, "numeric_version"), function(x, what, which=FALSE) <(rir::Dispatch|...>, e0.5
  val?^           %0.8  = CastType                 up %0.6
  env             e0.9  = MkEnv              l     x=%0.8, what="numeric_version", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %0.10 = Force!<lazy>       !vr   %0.8,    <val?>
  val?            %0.11 = CallBuiltin        !v    inherits(%0.10, "numeric_version", false) e0.9
  val?            %0.12 = PopContext         C     %0.11, %0.7   <lgl$->
  lgl$#-          %0.13 = IsType                   %0.12 isA lgl$-
  void                    Branch                   %0.13 -> BB8 (if true) | BB9 (if false)
BB8   <- [0]
  lgl$-           %8.0  = CastType           d     dn %0.12
  val?            %8.1  = PopContext         C     %8.0, %0.3   <lgl$->
  lgl$#-          %8.2  = IsType                   %8.1 isA lgl$-
  void                    Branch                   %8.2 -> BB10 (if true) | BB11 (if false)
BB9   <- [0]
  fs              %9.0  = FrameState         R     0x55de2a425d80+32: [], env=e0.1
  fs              %9.1  = FrameState         R     0x55de2a44ac90+37: [%0.12], env=e0.5, next=%9.0
  void                    Deopt              !v    %9.1, Typecheck@0x55de29ad18a8[Type#1], %0.12   !
BB10   <- [8]
  lgl$-           %10.0 = CastType           d     dn %8.1
  lgl$#-          %10.1 = CheckTrueFalse     e     %10.0
  void                    Branch                   %10.1 -> BB6 (if true) | BB5 (if false)
BB11   <- [8]
  fs              %11.0 = FrameState         R     0x55de2a425d80+32: [%8.1], env=e0.1
  void                    Deopt              !v    %11.0, Typecheck@0x55de29aa70c8[Type#1], %8.1   !
BB6   <- [10]
  val?^ | miss    %6.0  = LdVar              eR    x, e0.1
  void                    Visible            v     
  val?            %6.2  = Force!<wrapped>    !     %6.0, e0.1   <vec$>
  void                    Return             l     %6.2
BB5   <- [10]
  (cls|spec|blt)  %5.0  = LdFun              !v    is.package_version, e0.1
  fs              %5.1  = FrameState         R     0x55de2a425d80+48: [%5.0], env=e0.1
  void                    Deopt              !v    %5.1, DeadCall@0x55de29aa70c8[Call#1], %5.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec$>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3

│ FUN[0x55de2a537da0]                                                          │
└──────────────────────────────────────────────────────────────────────────────┘
