
┌──────────────────────────────────────────────────────────────────────────────┐
│ is[0x55de2bccc8a0]                                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1       │
│ Properties:                                                                  │
├────── Final PIR Version
is[0x55de2bccc8a0]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    class, <env 0x55de28b56378>
  lgl$#-          %0.3  = Identical                <blt class>, %0.2   <true>
  void                    Branch                   %0.3 -> BB97 (if true) | BB98 (if false)
BB97   <- [0]
  env             e97.0 = MkEnv              l     object=%0.1, class2=%0.0, parent=<env 0x55de28b56378>, context 1
  val?            %97.1 = Force!<lazy>       !vr   %0.1,    <cls>
  val?            %97.2 = CallBuiltin        !v    class(%97.1) e97.0   <str$+>
  void                    StVar              lW    class1, %97.2, e97.0
  lgl$#-          %97.4 = IsType                   %97.2 isA val?+
  val?^ | miss    %97.5 = LdVar              eR    length, e97.0
  lgl$#-          %97.6 = Identical                <blt length>, %97.5   <true>
  void                    Branch                   %97.6 -> BB99 (if true) | BB100 (if false)
BB98   <- [0]
  env             e98.0 = (MkEnv)            l     object=%0.1, class2=%0.0, parent=<env 0x55de28b56378>, context 1
  fs              %98.1 = FrameState         R     0x55de2a8988e0+17: [<blt class>, %0.3], env=e98.0
  void                    Deopt              !v    %98.1, DeadBranchReached@0x55de298329e8[Test#0], %0.3
BB99   <- [97]
  val             %99.0 = ChkMissing         e     %97.2
  void                    Branch                   %97.4 -> BB101 (if true) | BB102 (if false)
BB100   <- [97]
  void                    Nop                !     
  lgl$#-          %100.1 = %97.6
  dr              %100.2 = DeadBranchReached@0x55de298329e8[Test#1]
  goto BB3
BB101   <- [99]
  val?+           %101.0 = CastType           d     dn %97.2   <str$+>
  (int|real)$-    %101.1 = CallSafeBuiltin    wed   length(%101.0)    <int$->
  lgl$#-          %101.2 = IsType                   %101.1 isA int$-
  void                    Branch                   %101.2 -> BB103 (if true) | BB104 (if false)
BB102   <- [99]
  void                    Nop                !     
  val?            %102.1 = %97.2
  dr              %102.2 = Typecheck@0x55de298329e8[Type#2]
  goto BB3
BB3   <- [100, 102]
  val?^ | miss    %3.0  = Phi                      %100.1:BB100, %102.1:BB102
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %100.2:BB100, %102.2:BB102
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55de2a8988e0+105: [], env=e97.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB103   <- [101]
  int$-           %103.0 = CastType           d     dn %101.1
  lgl$-           %103.1 = Gt                 d     %103.0, 1L, elided   <lgl$->
  void                    StVar              lW    S3Case, %103.1, e97.0
  lgl$#-          %103.3 = CheckTrueFalse     e     %103.1
  void                    Branch                   %103.3 -> BB95 (if true) | BB7 (if false)
BB104   <- [101]
  fs              %104.0 = FrameState         R     0x55de2a8988e0+196: [%101.1], env=e97.0
  void                    Deopt              !v    %104.0, Typecheck@0x55de298329e8[Type#5], %101.1   !
BB95   <- [103]
  val?            %95.0 = Extract2_1D        wed   %101.0, 1L, elided   <val?_>
  void                    StVar              lW    class1, %95.0, e97.0
  goto BB8
BB7   <- [103]
  void                    Nop                !     
  goto BB8
BB8   <- [7, 95]
  lgl$-           %8.0  = Missing            eR    class2, e97.0
  lgl$#-          %8.1  = CheckTrueFalse     e     %8.0
  void                    Branch                   %8.1 -> BB94 (if true) | BB11 (if false)
BB94   <- [8]
  (cls|spec|blt)  %94.0 = LdFun              !v    extends, e97.0
  fs              %94.1 = FrameState         R     0x55de2a8988e0+336: [%94.0], env=e97.0
  void                    Deopt              !v    %94.1, DeadCall@0x55de298329e8[Call#2], %94.0   !
BB11   <- [8]
  val?^ | miss    %11.0 = LdVar              eR    getClassDef, e97.0
  lgl$#-          %11.1 = Identical                %11.0, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %11.1 -> BB105 (if true) | BB106 (if false)
BB105   <- [11]
  prom-           %105.0 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p0 (!refl), e97.0
  val?            %105.1 = StaticCall         !v    getClassDef[0x55de2a47f180](%105.0) e97.0   <other>
  void                    StVar              lW    class1Def, %105.1, e97.0
  void                    StVar              lW    class2Def, nil, e97.0
  val?^ | miss    %105.4 = LdVar              eR    is.character, e97.0
  lgl$#-          %105.5 = Identical                <blt is.character>, %105.4   <true>
  void                    Branch                   %105.5 -> BB107 (if true) | BB108 (if false)
BB106   <- [11]
  fs              %106.0 = FrameState         R     0x55de2a8988e0+314: [], env=e97.0
  void                    Deopt              !v    %106.0, CallTarget@0x55de298329e8[Call#3], %11.0   !
BB107   <- [105]
  val?^ | miss    %107.0 = LdVar              eR    class2, e97.0
  val?            %107.1 = Force!<value>      !v    %107.0, e97.0   <str$->
  lgl$#-          %107.2 = CallSafeBuiltin    wed   is.character(%107.1)    <lgl$->
  void                    Branch                   %107.2 -> BB15 (if true) | BB14 (if false)
BB108   <- [105]
  fs              %108.0 = FrameState         R     0x55de2a8988e0+430: [], env=e97.0
  void                    Deopt              !v    %108.0, DeadBranchReached@0x55de298329e8[Test#3], %105.5   !
BB15   <- [107]
  val?^ | miss    %15.0 = LdVar              eR    class1Def, e97.0
  val?            %15.1 = Force!<value>      !v    %15.0, e97.0   <other>
  lgl$-           %15.2 = Is                       %15.1, NULL
  lgl$#-          %15.3 = CheckTrueFalse     e     %15.2
  void                    Branch                   %15.3 -> BB93 (if true) | BB18 (if false)
BB14   <- [107]
  val?^ | miss    %14.0 = LdVar              eR    class2, e97.0
  val?            %14.1 = Force!             !v    %14.0, e97.0   <val?_>
  void                    StVar              lW    class2Def, %14.1, e97.0
  (cls|spec|blt)  %14.3 = LdFun              !v    @, e97.0
  fs              %14.4 = FrameState         R     0x55de2a8988e0+566: [%14.3], env=e97.0
  void                    Deopt              !v    %14.4, DeadCall@0x55de298329e8[Call#5], %14.3   !
BB93   <- [15]
  (cls|spec|blt)  %93.0 = LdFun              !v    inherits, e97.0
  fs              %93.1 = FrameState         R     0x55de2a8988e0+647: [%93.0], env=e97.0
  void                    Deopt              !v    %93.1, DeadCall@0x55de298329e8[Call#6], %93.0   !
BB18   <- [15]
  val?^ | miss    %18.0 = LdVar              eR    class2Def, e97.0
  lgl$#-          %18.1 = IsType                   %18.0 isA val?~- | miss
  void                    Branch                   %18.1 -> BB109 (if true) | BB110 (if false)
BB109   <- [18]
  val?~- | miss   %109.0 = CastType           d     dn %18.0
  val?-           %109.1 = Force!<value>            %109.0,    <nil->
  lgl$-           %109.2 = Is                       %109.1, NULL
  lgl$#-          %109.3 = CheckTrueFalse     e     %109.2
  void                    Branch                   %109.3 -> BB92 (if true) | BB19 (if false)
BB110   <- [18]
  void                    Nop                !     
  val?^ | miss    %110.1 = %18.0
  dr              %110.2 = Typecheck@0x55de298329e8[Type#25]
  goto BB16
BB92   <- [109]
  val?^ | miss    %92.0 = LdVar              eR    getClassDef, e97.0
  lgl$#-          %92.1 = Identical                %92.0, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %92.1 -> BB111 (if true) | BB112 (if false)
BB19   <- [109]
  void                    Nop                !     
  goto BB20
BB16   <- [110, 112]
  val?^ | miss    %16.0 = Phi                      %110.1:BB110, %112.1:BB112
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %110.2:BB110, %112.2:BB112
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55de2a8988e0+621: [%15.1], env=e97.0
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB111   <- [92]
  prom-           %111.0 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p12, e97.0
  prom-           %111.1 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p13, e97.0
  prom-           %111.2 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p15, e97.0
  val?            %111.3 = StaticCall         !v    getClassDef[0x55de2a4b98e0](%111.0, %111.1, %111.2) e97.0   <other>
  void                    StVar              lW    class2Def, %111.3, e97.0
  goto BB20
BB112   <- [92]
  void                    Nop                !     
  val?^ | miss    %112.1 = %92.0
  dr              %112.2 = CallTarget@0x55de298329e8[Call#7]
  goto BB16
BB20   <- [19, 111]
  val?^ | miss    %20.0 = LdVar              eR    S3Case, e97.0
  lgl$#-          %20.1 = IsType                   %20.0 isA lgl$-
  void                    Branch                   %20.1 -> BB113 (if true) | BB114 (if false)
BB113   <- [20]
  lgl$-           %113.0 = CastType           d     dn %20.0
  lgl$-           %113.1 = AsLogical                %113.0
  lgl$#-          %113.2 = Identical                %113.1, true
  void                    Branch                   %113.2 -> BB91 (if true) | BB23 (if false)
BB114   <- [20]
  void                    Nop                !     
  val?^ | miss    %114.1 = %20.0
  dr              %114.2 = Typecheck@0x55de298329e8[Type#36]
  goto BB21
BB91   <- [113]
  void                    Nop                !     
  lgl$-           %91.1 = %113.1
  goto BB28
BB23   <- [113]
  val?^ | miss    %23.0 = LdVar              eR    is.object, e97.0
  lgl$#-          %23.1 = Identical                <blt is.object>, %23.0   <true>
  void                    Branch                   %23.1 -> BB115 (if true) | BB116 (if false)
BB21   <- [114, 116]
  val?^ | miss    %21.0 = Phi                      %114.1:BB114, %116.1:BB116
  val?^ | miss    %21.1 = %21.0
  dr              %21.2 = Phi                      %114.2:BB114, %116.2:BB116
  dr              %21.3 = %21.2
  fs              %21.4 = FrameState         R     0x55de2a8988e0+771: [], env=e97.0
  void                    Deopt              !v    %21.4, %21.3, %21.1   !
BB28   <- [91, 27]
  lgl$-           %28.0 = Phi                      %27.4:BB27, %91.1:BB91
  lgl$-           %28.1 = %28.0
  lgl$-           %28.2 = AsLogical                %28.1
  lgl$#-          %28.3 = Identical                %28.2, false
  void                    StVar              lW    S3Case, %28.1, e97.0
  void                    Branch                   %28.3 -> BB89 (if true) | BB29 (if false)
BB115   <- [23]
  val?^ | miss    %115.0 = LdVar              eR    object, e97.0
  val?            %115.1 = Force!<wrapped>    !v    %115.0, e97.0   <cls>
  lgl$#-          %115.2 = CallSafeBuiltin    wed   is.object(%115.1)    <lgl$->
  void                    Branch                   %115.2 -> BB90 (if true) | BB26 (if false)
BB116   <- [23]
  void                    Nop                !     
  lgl$#-          %116.1 = %23.1
  dr              %116.2 = DeadBranchReached@0x55de298329e8[Test#4]
  goto BB21
BB89   <- [28]
  void                    Nop                !     
  lgl$-           %89.1 = %28.2
  goto BB34
BB29   <- [28]
  val?^ | miss    %29.0 = LdVar              eR    class2Def, e97.0
  val?            %29.1 = Force!             !v    %29.0, e97.0   <val?_>
  lgl$-           %29.2 = Is                       %29.1, NULL
  lgl$-           %29.3 = AsLogical                %29.2
  lgl$#-          %29.4 = Identical                %29.3, true
  lgl$-           %29.5 = AsLogical                %29.3
  lgl$#-          %29.6 = Identical                %29.5, true
  lgl$-           %29.7 = AsLogical                %29.5
  lgl$-           %29.8 = LAnd                     %28.2, %29.7
  void                    Branch                   %29.4 -> BB31 (if true) | BB30 (if false)
BB90   <- [115]
  val?^ | miss    %90.0 = LdVar              eR    isS4, e97.0
  lgl$#-          %90.1 = Identical                <blt isS4>, %90.0   <true>
  void                    Branch                   %90.1 -> BB117 (if true) | BB118 (if false)
BB26   <- [115]
  void                    Nop                !     
  lgl$#-          %26.1 = %115.2
  goto BB27
BB34   <- [89, 33]
  lgl$-           %34.0 = Phi                      %33.1:BB33, %89.1:BB89
  lgl$-           %34.1 = %34.0
  void                    StVar              lW    S3Case, %34.1, e97.0
  lgl$#-          %34.3 = CheckTrueFalse     e     %34.1
  void                    Branch                   %34.3 -> BB88 (if true) | BB37 (if false)
BB31   <- [29]
  void                    Branch                   %29.6 -> BB33 (if true) | BB32 (if false)
BB30   <- [29]
  (cls|spec|blt)  %30.0 = LdFun              !v    %in%, e97.0
  fs              %30.1 = FrameState         R     0x55de2a8988e0+1058: [%28.2, %29.3, %30.0], env=e97.0
  void                    Deopt              !v    %30.1, DeadCall@0x55de298329e8[Call#15], %30.0   !
BB117   <- [90]
  val?^ | miss    %117.0 = LdVar              eR    object, e97.0
  val?            %117.1 = Force!<wrapped>    !v    %117.0, e97.0   <cls>
  lgl$#-          %117.2 = CallSafeBuiltin    wed   isS4(%117.1)    <lgl$->
  lgl$#-          %117.3 = Not                d     %117.2, elided
  lgl$-           %117.4 = LAnd                     %115.2, %117.3
  lgl$-           %117.5 = %117.4
  goto BB27
BB118   <- [90]
  fs              %118.0 = FrameState         R     0x55de2a8988e0+883: [%113.1, %115.2], env=e97.0
  void                    Deopt              !v    %118.0, DeadBranchReached@0x55de298329e8[Test#5], %90.1   !
BB27   <- [26, 117]
  lgl$-           %27.0 = Phi                      %117.5:BB117, %26.1:BB26
  lgl$-           %27.1 = %27.0
  lgl$-           %27.2 = AsLogical                %27.1
  lgl$-           %27.3 = LOr                      %113.1, %27.2
  lgl$-           %27.4 = %27.3
  goto BB28
BB88   <- [34]
  (cls|spec|blt)  %88.0 = LdFun              !v    inherits, e97.0
  fs              %88.1 = FrameState         R     0x55de2a8988e0+2067: [%88.0], env=e97.0
  void                    Deopt              !v    %88.1, DeadCall@0x55de298329e8[Call#43], %88.0   !
BB37   <- [34]
  val?^ | miss    %37.0 = LdVar              eR    .identC, e97.0
  lgl$#-          %37.1 = Identical                %37.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>
  void                    Branch                   %37.1 -> BB119 (if true) | BB120 (if false)
BB33   <- [31]
  void                    Nop                !     
  lgl$-           %33.1 = %29.8
  goto BB34
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    extends, e97.0
  fs              %32.1 = FrameState         R     0x55de2a8988e0+1109: [%28.2, %29.5, %32.0], env=e97.0
  void                    Deopt              !v    %32.1, DeadCall@0x55de298329e8[Call#16], %32.0   !
BB119   <- [37]
  prom-           %119.0 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p1, e97.0
  prom-           %119.1 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p2, e97.0
  ct              %119.2 = PushContext        lCL   %119.0, %119.1, .identC(class1, class2), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>, e97.0
  val?^           %119.3 = CastType                 up %119.1
  val?^           %119.4 = CastType                 up %119.0
  val?^ | miss    %119.5 = LdVar              eR    .Call, <env 0x55de28b56378>
  lgl$#-          %119.6 = Identical                <blt .Call>, %119.5   <true>
  void                    Branch                   %119.6 -> BB121 (if true) | BB122 (if false)
BB120   <- [37]
  fs              %120.0 = FrameState         R     0x55de2a8988e0+1160: [], env=e97.0
  void                    Deopt              !v    %120.0, CallTarget@0x55de298329e8[Call#17], %37.0   !
BB121   <- [119]
  val?^ | miss    %121.0 = LdVar              eR    C_R_identC, <env 0x55de28b56378>
  env             e121.1 = MkEnv              l     c1=%119.4, c2=%119.3, parent=<env 0x55de28b56378>, context 1
  val?            %121.2 = Force!<value>      !v    %121.0, e121.1   <vec>
  val?^ | miss    %121.3 = LdVar              eR    c1, e121.1
  val?            %121.4 = Force!<lazy>       !v    %121.3, e121.1   <str$+>
  val?^ | miss    %121.5 = LdVar              eR    c2, e121.1
  val?            %121.6 = Force!<lazy>       !v    %121.5, e121.1   <str$->
  val?            %121.7 = CallBuiltin        !v    .Call(%121.2, %121.4, %121.6) e121.1   <lgl$->
  lgl$#-          %121.8 = IsType                   %121.7 isA lgl$-
  void                    Branch                   %121.8 -> BB123 (if true) | BB124 (if false)
BB122   <- [119]
  fs              %122.0 = FrameState         R     0x55de2a8988e0+1217: [], env=e97.0
  env             e122.1 = (MkEnv)            l     c1=%119.4, c2=%119.3, parent=<env 0x55de28b56378>, context 1
  fs              %122.2 = FrameState         R     0x55de2a7e7f60+17: [<blt .Call>, %119.6], env=e122.1, next=%122.0
  void                    Deopt              !v    %122.2, DeadBranchReached@0x55de29833018[Test#0], %119.6   !
BB123   <- [121]
  lgl$-           %123.0 = CastType           d     dn %121.7
  val?            %123.1 = PopContext         C     %123.0, %119.2   <lgl$->
  lgl$#-          %123.2 = IsType                   %123.1 isA lgl$-
  void                    Branch                   %123.2 -> BB125 (if true) | BB126 (if false)
BB124   <- [121]
  fs              %124.0 = FrameState         R     0x55de2a8988e0+1217: [], env=e97.0
  fs              %124.1 = FrameState         R     0x55de2a7e7f60+129: [%121.7], env=e121.1, next=%124.0
  void                    Deopt              !v    %124.1, Typecheck@0x55de29833018[Type#6], %121.7   !
BB125   <- [123]
  lgl$-           %125.0 = CastType           d     dn %123.1
  lgl$-           %125.1 = AsLogical                %125.0
  lgl$#-          %125.2 = Identical                %125.1, true
  void                    Branch                   %125.2 -> BB87 (if true) | BB44 (if false)
BB126   <- [123]
  void                    Nop                !     
  val?            %126.1 = %123.1
  dr              %126.2 = Typecheck@0x55de298329e8[Type#53]
  goto BB42
BB87   <- [125]
  void                    Nop                !     
  lgl$-           %87.1 = %125.1
  goto BB51
BB44   <- [125]
  val?^ | miss    %44.0 = LdVar              eR    .identC, e97.0
  lgl$#-          %44.1 = Identical                %44.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>
  void                    Branch                   %44.1 -> BB127 (if true) | BB128 (if false)
BB42   <- [126, 128]
  val?^ | miss    %42.0 = Phi                      %126.1:BB126, %128.1:BB128
  val?^ | miss    %42.1 = %42.0
  dr              %42.2 = Phi                      %126.2:BB126, %128.2:BB128
  dr              %42.3 = %42.2
  fs              %42.4 = FrameState         R     0x55de2a8988e0+1217: [%123.1], env=e97.0
  void                    Deopt              !v    %42.4, %42.3, %42.1   !
BB51   <- [87, 137]
  lgl$-           %51.0 = Phi                      %137.3:BB137, %87.1:BB87
  lgl$-           %51.1 = %51.0
  lgl$#-          %51.2 = CheckTrueFalse     e     %51.1
  void                    Branch                   %51.2 -> BB86 (if true) | BB52 (if false)
BB127   <- [44]
  prom-           %127.0 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p3, e97.0
  ct              %127.1 = PushContext        lCL   %127.0, "ANY", .identC(class2, "ANY"), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>, e97.0
  val?^           %127.2 = CastType                 up %127.0
  val?^ | miss    %127.3 = LdVar              eR    .Call, <env 0x55de28b56378>
  lgl$#-          %127.4 = Identical                <blt .Call>, %127.3   <true>
  void                    Branch                   %127.4 -> BB131 (if true) | BB132 (if false)
BB128   <- [44]
  void                    Nop                !     
  val?^ | miss    %128.1 = %44.0
  dr              %128.2 = CallTarget@0x55de298329e8[Call#18]
  goto BB42
BB86   <- [51]
  void                    Visible            v     
  lgl$#-          %86.1 = true
  goto BB76
BB52   <- [51]
  (cls|spec|blt)  %52.0 = LdFun              !v    @, <0x55de2854ebd8>, e97.0
  prom-           %52.1 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p4, e97.0
  prom-           %52.2 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p5, e97.0
  val?            %52.3 = Call               !v    %52.0(%52.1, %52.2) e97.0   <vec+>
  lgl$#-          %52.4 = IsType                   %52.3 isA val+   <true>
  void                    Branch                   %52.4 -> BB129 (if true) | BB130 (if false)
BB131   <- [127]
  val?^ | miss    %131.0 = LdVar              eR    C_R_identC, <env 0x55de28b56378>
  env             e131.1 = MkEnv              l     c1=%127.2, c2="ANY", parent=<env 0x55de28b56378>, context 1
  val?            %131.2 = Force!<value>      !v    %131.0, e131.1   <vec>
  val?^ | miss    %131.3 = LdVar              eR    c1, e131.1
  val?            %131.4 = Force!<lazy>       !v    %131.3, e131.1   <str$+>
  val?^ | miss    %131.5 = LdVar              eR    c2, e131.1
  val?            %131.6 = Force!<lazy>       !v    %131.5, e131.1   <str$->
  val?            %131.7 = CallBuiltin        !v    .Call(%131.2, %131.4, %131.6) e131.1   <lgl$->
  lgl$#-          %131.8 = IsType                   %131.7 isA lgl$-
  void                    Branch                   %131.8 -> BB133 (if true) | BB134 (if false)
BB132   <- [127]
  fs              %132.0 = FrameState         R     0x55de2a8988e0+1266: [%125.1], env=e97.0
  env             e132.1 = (MkEnv)            l     c1=%127.2, c2="ANY", parent=<env 0x55de28b56378>, context 1
  fs              %132.2 = FrameState         R     0x55de2a7e7f60+17: [<blt .Call>, %127.4], env=e132.1, next=%132.0
  void                    Deopt              !v    %132.2, DeadBranchReached@0x55de29833018[Test#0], %127.4   !
BB76   <- [86, 75]
  lgl$-           %76.0 = Phi                      %75.2:BB75, %86.1:BB86
  lgl$-           %76.1 = %76.0
  void                    Return             l     %76.1
BB129   <- [52]
  val?^ | miss    %129.0 = LdVar              eR    class2, e97.0
  val?            %129.1 = Force!<value>      !v    %129.0, e97.0   <str$->
  lgl$#-          %129.2 = IsType                   %129.1 isA val?-
  lgl$#-          %129.3 = IsType                   %52.3 isA val?+
  void                    Branch                   %129.3 -> BB135 (if true) | BB136 (if false)
BB130   <- [52]
  fs              %130.0 = FrameState         R     0x55de2a8988e0+1316: [%52.3], env=e97.0
  void                    Deopt              !v    %130.0, DeadBranchReached@0x55de298329e8[Test#6], %52.4   !
BB133   <- [131]
  lgl$-           %133.0 = CastType           d     dn %131.7
  val?            %133.1 = PopContext         C     %133.0, %127.1   <lgl$->
  lgl$#-          %133.2 = IsType                   %133.1 isA lgl$-
  void                    Branch                   %133.2 -> BB137 (if true) | BB138 (if false)
BB134   <- [131]
  fs              %134.0 = FrameState         R     0x55de2a8988e0+1266: [%125.1], env=e97.0
  fs              %134.1 = FrameState         R     0x55de2a7e7f60+129: [%131.7], env=e131.1, next=%134.0
  void                    Deopt              !v    %134.1, Typecheck@0x55de29833018[Type#6], %131.7   !
BB135   <- [129]
  val?+           %135.0 = CastType           d     dn %52.3   <vec+>
  void                    Branch                   %129.2 -> BB139 (if true) | BB140 (if false)
BB136   <- [129]
  void                    Nop                !     
  val?            %136.1 = %52.3
  dr              %136.2 = Typecheck@0x55de298329e8[Type#58]
  goto BB55
BB137   <- [133]
  lgl$-           %137.0 = CastType           d     dn %133.1
  lgl$-           %137.1 = AsLogical                %137.0
  lgl$-           %137.2 = LOr                      %125.1, %137.1
  lgl$-           %137.3 = %137.2
  goto BB51
BB138   <- [133]
  fs              %138.0 = FrameState         R     0x55de2a8988e0+1266: [%125.1, %133.1], env=e97.0
  void                    Deopt              !v    %138.0, Typecheck@0x55de298329e8[Type#55], %133.1   !
BB139   <- [135]
  val?-           %139.0 = CastType           d     dn %129.1   <str$->
  val?            %139.1 = Extract2_1D        wed   %135.0, %139.0, elided   <(nil|other)>
  lgl$-           %139.2 = Is                       %139.1, NULL
  void                    Invisible          v     
  void                    StVar              lW    contained, %139.1, e97.0
  lgl$-           %139.5 = Not                vd    %139.2, elided
  lgl$#-          %139.6 = CheckTrueFalse     e     %139.5
  void                    Branch                   %139.6 -> BB81 (if true) | BB57 (if false)
BB140   <- [135]
  void                    Nop                !     
  val?            %140.1 = %129.1
  dr              %140.2 = Typecheck@0x55de298329e8[Type#60]
  goto BB55
BB55   <- [136, 140]
  val?^ | miss    %55.0 = Phi                      %136.1:BB136, %140.1:BB140
  val?^ | miss    %55.1 = %55.0
  dr              %55.2 = Phi                      %136.2:BB136, %140.2:BB140
  dr              %55.3 = %55.2
  fs              %55.4 = FrameState         R     0x55de2a8988e0+1361: [%52.3, %129.1], env=e97.0
  void                    Deopt              !v    %55.4, %55.3, %55.1   !
BB81   <- [139]
  (cls|spec|blt)  %81.0 = LdFun              !     @, <0x55de2854ebd8>, e97.0
  prom-           %81.1 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p10, e97.0
  prom-           %81.2 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p11, e97.0
  val?            %81.3 = Call               !     %81.0(%81.1, %81.2) e97.0   <lgl$->
  lgl$#-          %81.4 = IsType                   %81.3 isA lgl$-
  void                    Branch                   %81.4 -> BB145 (if true) | BB146 (if false)
BB57   <- [139]
  val?^ | miss    %57.0 = LdVar              eR    class2Def, e97.0
  val?            %57.1 = Force!<value>      !v    %57.0, e97.0   <other>
  lgl$-           %57.2 = Is                       %57.1, NULL
  lgl$#-          %57.3 = CheckTrueFalse     e     %57.2
  void                    Branch                   %57.3 -> BB80 (if true) | BB60 (if false)
BB145   <- [81]
  lgl$-           %145.0 = CastType           d     dn %81.3
  lgl$-           %145.1 = AsLogical                %145.0
  lgl$#-          %145.2 = Identical                %145.1, true
  void                    Branch                   %145.2 -> BB85 (if true) | BB84 (if false)
BB146   <- [81]
  fs              %146.0 = FrameState         R     0x55de2a8988e0+1957: [%81.3], env=e97.0
  void                    Deopt              !v    %146.0, Typecheck@0x55de298329e8[Type#108], %81.3   !
BB80   <- [57]
  void                    Visible            v     
  lgl$#-          %80.1 = false
  goto BB74
BB60   <- [57]
  val?^ | miss    %60.0 = LdVar              eR    .identC, e97.0
  lgl$#-          %60.1 = Identical                %60.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>
  void                    Branch                   %60.1 -> BB141 (if true) | BB142 (if false)
BB85   <- [145]
  void                    Nop                !     
  lgl$-           %85.1 = %145.1
  goto BB75
BB84   <- [145]
  (cls|spec|blt)  %84.0 = LdFun              !v    @, e97.0
  fs              %84.1 = FrameState         R     0x55de2a8988e0+1974: [%145.1, %84.0], env=e97.0
  void                    Deopt              !v    %84.1, DeadCall@0x55de298329e8[Call#41], %84.0   !
BB74   <- [80, 73]
  lgl$-           %74.0 = Phi                      %73.1:BB73, %80.1:BB80
  lgl$-           %74.1 = %74.0
  lgl$-           %74.2 = %74.1
  goto BB75
BB141   <- [60]
  prom-           %141.0 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p6, e97.0
  ct              %141.1 = PushContext        lCL   %141.0, "classRepresentation", .identC(class(class2Def), "classRepresentation"), function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>, e97.0
  val?^           %141.2 = CastType                 up %141.0
  val?^ | miss    %141.3 = LdVar              eR    .Call, <env 0x55de28b56378>
  lgl$#-          %141.4 = Identical                <blt .Call>, %141.3   <true>
  void                    Branch                   %141.4 -> BB143 (if true) | BB144 (if false)
BB142   <- [60]
  fs              %142.0 = FrameState         R     0x55de2a8988e0+1405: [%57.1], env=e97.0
  void                    Deopt              !v    %142.0, CallTarget@0x55de298329e8[Call#20], %60.0   !
BB75   <- [85, 74]
  lgl$-           %75.0 = Phi                      %74.2:BB74, %85.1:BB85
  lgl$-           %75.1 = %75.0
  lgl$-           %75.2 = %75.1
  goto BB76
BB143   <- [141]
  val?^ | miss    %143.0 = LdVar              eR    C_R_identC, <env 0x55de28b56378>
  env             e143.1 = MkEnv              l     c1=%141.2, c2="classRepresentation", parent=<env 0x55de28b56378>, context 1
  val?            %143.2 = Force!<value>      !v    %143.0, e143.1   <vec>
  val?^ | miss    %143.3 = LdVar              eR    c1, e143.1
  val?            %143.4 = Force!<lazy>       !v    %143.3, e143.1   <str$+>
  val?^ | miss    %143.5 = LdVar              eR    c2, e143.1
  val?            %143.6 = Force!<lazy>       !v    %143.5, e143.1   <str$->
  val?            %143.7 = CallBuiltin        !v    .Call(%143.2, %143.4, %143.6) e143.1   <lgl$->
  lgl$#-          %143.8 = IsType                   %143.7 isA lgl$-
  void                    Branch                   %143.8 -> BB147 (if true) | BB148 (if false)
BB144   <- [141]
  fs              %144.0 = FrameState         R     0x55de2a8988e0+1458: [], env=e97.0
  env             e144.1 = (MkEnv)            l     c1=%141.2, c2="classRepresentation", parent=<env 0x55de28b56378>, context 1
  fs              %144.2 = FrameState         R     0x55de2a7e7f60+17: [<blt .Call>, %141.4], env=e144.1, next=%144.0
  void                    Deopt              !v    %144.2, DeadBranchReached@0x55de29833018[Test#0], %141.4   !
BB147   <- [143]
  lgl$-           %147.0 = CastType           d     dn %143.7
  val?            %147.1 = PopContext         C     %147.0, %141.1   <lgl$->
  lgl$#-          %147.2 = IsType                   %147.1 isA lgl$-
  void                    Branch                   %147.2 -> BB149 (if true) | BB150 (if false)
BB148   <- [143]
  fs              %148.0 = FrameState         R     0x55de2a8988e0+1458: [], env=e97.0
  fs              %148.1 = FrameState         R     0x55de2a7e7f60+129: [%143.7], env=e143.1, next=%148.0
  void                    Deopt              !v    %148.1, Typecheck@0x55de29833018[Type#6], %143.7   !
BB149   <- [147]
  lgl$-           %149.0 = CastType           d     dn %147.1
  lgl$-           %149.1 = Not                d     %149.0, elided
  lgl$-           %149.2 = AsLogical                %149.1
  lgl$#-          %149.3 = Identical                %149.2, false
  void                    Branch                   %149.3 -> BB68 (if true) | BB67 (if false)
BB150   <- [147]
  fs              %150.0 = FrameState         R     0x55de2a8988e0+1458: [%147.1], env=e97.0
  void                    Deopt              !v    %150.0, Typecheck@0x55de298329e8[Type#65], %147.1   !
BB68   <- [149]
  lgl$#-          %68.0 = CheckTrueFalse     e     %149.2
  void                    Branch                   %68.0 -> BB77 (if true) | BB69 (if false)
BB67   <- [149]
  (cls|spec|blt)  %67.0 = LdFun              !v    isClassUnion, e97.0
  fs              %67.1 = FrameState         R     0x55de2a8988e0+1476: [%149.2, %67.0], env=e97.0
  void                    Deopt              !v    %67.1, DeadCall@0x55de298329e8[Call#22], %67.0   !
BB77   <- [68]
  val?^ | miss    %77.0 = LdVar              eR    any, e97.0
  lgl$#-          %77.1 = Identical                <blt any>, %77.0   <@?>
  void                    Branch                   %77.1 -> BB79 (if true) | BB78 (if false)
BB69   <- [68]
  (cls|spec|blt)  %69.0 = LdFun              !v    @, <0x55de2854ebd8>, e97.0
  prom-           %69.1 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p8, e97.0
  prom-           %69.2 = MkArg                    unboundValue, is[0x55de2bccc8a0]_p9, e97.0
  val?            %69.3 = Call               !v    %69.0(%69.1, %69.2) e97.0   <vec+>
  lgl$#-          %69.4 = IsType                   %69.3 isA val+   <true>
  lgl$#-          %69.5 = IsType                   %69.3 isA val?+
  void                    Branch                   %69.4 -> BB151 (if true) | BB152 (if false)
BB79   <- [77]
  (cls|spec|blt)  %79.0 = LdFun              !v    %in%, e97.0
  fs              %79.1 = FrameState         R     0x55de2a8988e0+1845: [<blt any>, %79.0], env=e97.0
  void                    Deopt              !v    %79.1, DeadCall@0x55de298329e8[Call#34], %79.0   !
BB78   <- [77]
  (cls|spec|blt)  %78.0 = LdFun              !v    any, e97.0
  fs              %78.1 = FrameState         R     0x55de2a8988e0+1808: [%78.0], env=e97.0
  void                    Deopt              !v    %78.1, DeadCall@0x55de298329e8[Call#27], %78.0   !
BB151   <- [69]
  val?^ | miss    %151.0 = LdVar              eR    class1, e97.0
  lgl$#-          %151.1 = IsType                   %151.0 isA val?~- | miss
  void                    Branch                   %151.1 -> BB153 (if true) | BB154 (if false)
BB152   <- [69]
  void                    Nop                !     
  lgl$#-          %152.1 = %69.4
  dr              %152.2 = DeadBranchReached@0x55de298329e8[Test#7]
  goto BB70
BB153   <- [151]
  val?~- | miss   %153.0 = CastType           d     dn %151.0
  val?-           %153.1 = Force!<value>            %153.0,    <str$->
  void                    Branch                   %69.5 -> BB155 (if true) | BB156 (if false)
BB154   <- [151]
  void                    Nop                !     
  val?^ | miss    %154.1 = %151.0
  dr              %154.2 = Typecheck@0x55de298329e8[Type#72]
  goto BB70
BB70   <- [152, 154, 156]
  val?^ | miss    %70.0 = Phi                      %152.1:BB152, %154.1:BB154, %156.1:BB156
  val?^ | miss    %70.1 = %70.0
  dr              %70.2 = Phi                      %152.2:BB152, %154.2:BB154, %156.2:BB156
  dr              %70.3 = %70.2
  fs              %70.4 = FrameState         R     0x55de2a8988e0+1553: [%69.3], env=e97.0
  void                    Deopt              !v    %70.4, %70.3, %70.1   !
BB155   <- [153]
  val?+           %155.0 = CastType           d     dn %69.3   <vec+>
  val?            %155.1 = Extract2_1D        wed   %155.0, %153.1, elided   <nil->
  lgl$-           %155.2 = Is                       %155.1, NULL
  void                    StVar              lW    ext, %155.1, e97.0
  val             %155.4 = ChkMissing         e     %155.1
  void                    Visible            v     
  lgl$-           %155.6 = Not                vd    %155.2, elided
  lgl$-           %155.7 = AsLogical                %155.6
  lgl$#-          %155.8 = Identical                %155.7, false
  void                    Branch                   %155.8 -> BB73 (if true) | BB72 (if false)
BB156   <- [153]
  void                    Nop                !     
  val?            %156.1 = %69.3
  dr              %156.2 = Typecheck@0x55de298329e8[Type#70]
  goto BB70
BB73   <- [155]
  void                    Nop                !     
  lgl$-           %73.1 = %155.7
  goto BB74
BB72   <- [155]
  (cls|spec|blt)  %72.0 = LdFun              !v    @, e97.0
  fs              %72.1 = FrameState         R     0x55de2a8988e0+1651: [%155.7, %72.0], env=e97.0
  void                    Deopt              !v    %72.1, DeadCall@0x55de298329e8[Call#24], %72.0   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55de2854f748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is[0x55de2bccc8a0]_p7, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contained, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .classDefEnv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is[0x55de2bccc8a0]_p14, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1Def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    packageSlot, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is[0x55de2bccc8a0]_p16, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <val?_>
  void                    Invisible          v     
  void                    StVar              lW    package, %0.3, e0.0
  lgl$-           %0.6  = Is                       %0.3, NULL
  lgl$-           %0.7  = Not                vd    %0.6, elided
  lgl$#-          %0.8  = CheckTrueFalse     e     %0.7
  void                    Branch                   %0.8 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %2.2  = Force              !     %2.0, e0.0   <val?_>
  val?            %2.3  = %2.2
  goto BB3
BB4   <- [0]
  (cls|spec|blt)  %4.0  = LdFun              !     getPackageName, e0.0
  prom-           %4.1  = MkArg                    unboundValue, is[0x55de2bccc8a0]_p17, e0.0
  val?            %4.2  = Call               !     %4.0(%4.1) e0.0   <val?_>
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [2, 4]
  val?            %3.0  = Phi                      %4.3:BB4, %2.3:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, is[0x55de2bccc8a0]_p18, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2

│ is[0x55de2bccc8a0]                                                           │
└──────────────────────────────────────────────────────────────────────────────┘
