
┌──────────────────────────────────────────────────────────────────────────────┐
│ getClassDef[0x55de2a968140]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
getClassDef[0x55de2a968140]
BB0
  val?~+          %0.0  = LdArg                    2
  val?^           %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    .getClassesFromCache, <env 0x55de28b56378>
  lgl$#-          %0.4  = Identical                %0.3, function(name) <(rir::DispatchTable*)0x55de2b1|...>
  void                    Branch                   %0.4 -> BB36 (if true) | BB37 (if false)
BB36   <- [0]
  env             e36.0 = MkEnv              l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=true, parent=<env 0x55de28b56378>, context 1
  prom-           %36.1 = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p9, e36.0
  ct              %36.2 = PushContext        lCL   %36.1, .getClassesFromCache(Class), function(name) <(rir::DispatchTable*)0x55de2b1|...>, e36.0
  val?^           %36.3 = CastType                 up %36.1
  val?^ | miss    %36.4 = LdVar              eR    .Call, <env 0x55de28b56378>
  lgl$#-          %36.5 = Identical                <blt .Call>, %36.4   <true>
  void                    Branch                   %36.5 -> BB38 (if true) | BB39 (if false)
BB37   <- [0]
  void                    Nop                !     
  val?^ | miss    %37.1 = %0.3
  dr              %37.2 = CallTarget@0x55de2aba2040[Call#3]
  goto BB35
BB38   <- [36]
  val?^ | miss    %38.0 = LdVar              eR    C_R_getClassFromCache, <env 0x55de28b56378>
  env             e38.1 = MkEnv              l     name=%36.3, parent=<env 0x55de28b56378>, context 1
  val?            %38.2 = Force!<value>      !v    %38.0, e38.1   <vec>
  val?^ | miss    %38.3 = LdVar              eR    name, e38.1
  val?            %38.4 = Force!<lazy>       !v    %38.3, e38.1   <str$+>
  val?^ | miss    %38.5 = LdVar              eR    .classTable, e38.1
  val?            %38.6 = Force!<wrapped>    !v    %38.5, e38.1   <env->
  val?            %38.7 = CallBuiltin        !v    .Call(%38.2, %38.4, %38.6) e38.1   <other>
  val?            %38.8 = PopContext         C     %38.7, %36.2   <other>
  lgl$-           %38.9 = Is                       %38.8, list
  void                    StVar              lW    value, %38.8, e36.0
  val             %38.11 = ChkMissing         e     %38.8   <other>
  lgl$#-          %38.12 = CheckTrueFalse     e     %38.9
  lgl$-           %38.13 = Is                       %38.11, NULL
  void                    Branch                   %38.12 -> BB34 (if true) | BB5 (if false)
BB39   <- [36]
  void                    DropContext        C     
  lgl$#-          %39.1 = %36.5
  dr              %39.2 = DeadBranchReached@0x55de29832d58[Test#0]
  goto BB35
BB35   <- [37, 39]
  val?^ | miss    %35.0 = Phi                      %37.1:BB37, %39.1:BB39
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %37.2:BB37, %39.2:BB39
  dr              %35.3 = %35.2
  env             e35.4 = (MkEnv)            l     Class=%0.2, where=%0.1, package=%0.0, inherits(miss)=true, parent=<env 0x55de28b56378>, context 1
  fs              %35.5 = FrameState         R     0x55de2a5ecad0+0: [], env=e35.4
  void                    Deopt              !v    %35.5, %35.3, %35.1
BB34   <- [38]
  (cls|spec|blt)  %34.0 = LdFun              !v    .resolveClassList, e36.0
  fs              %34.1 = FrameState         R     0x55de2a5ecad0+121: [%34.0], env=e36.0
  void                    Deopt              !v    %34.1, DeadCall@0x55de2aba2040[Call#4], %34.0   !
BB5   <- [38]
  lgl$#-          %5.0  = CheckTrueFalse     e     %38.13
  void                    Branch                   %5.0 -> BB8 (if true) | BB6 (if false)
BB8   <- [5]
  val?^ | miss    %8.0  = LdVar              eR    classMetaName, e36.0
  lgl$#-          %8.1  = Identical                %8.0, function(name) <(rir::DispatchTable*)0x55de29d|...>
  void                    Branch                   %8.1 -> BB40 (if true) | BB41 (if false)
BB6   <- [5]
  void                    Nop                !     
  goto BB7
BB40   <- [8]
  prom-           %40.0 = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p1, e36.0
  ct              %40.1 = PushContext        lCL   %40.0, classMetaName(if(>(length(Class), 1L), [[(Clas|...>, function(name) <(rir::DispatchTable*)0x55de29d|...>, e36.0
  val?^           %40.2 = CastType                 up %40.0
  val?^ | miss    %40.3 = LdVar              eR    methodsPackageMetaName, <env 0x55de28b56378>
  lgl$#-          %40.4 = Identical                %40.3, function(prefix, name, package="") <(rir::Disp|...>
  void                    Branch                   %40.4 -> BB42 (if true) | BB43 (if false)
BB41   <- [8]
  fs              %41.0 = FrameState         R     0x55de2a5ecad0+86: [], env=e36.0
  void                    Deopt              !v    %41.0, CallTarget@0x55de2aba2040[Call#5], %8.0   !
BB7   <- [6, 29]
  val?^ | miss    %7.0  = LdVar              eR    value, e36.0
  void                    Visible            v     
  val?            %7.2  = Force!<value>      !     %7.0, e36.0   <other>
  void                    Return             l     %7.2
BB42   <- [40]
  env             e42.0 = MkEnv              l     name=%40.2, parent=<env 0x55de28b56378>, context 1
  prom-           %42.1 = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p10, e42.0
  ct              %42.2 = PushContext        lCL   "C", %42.1, methodsPackageMetaName("C", name), function(prefix, name, package="") <(rir::Disp|...>, e42.0
  val?^           %42.3 = CastType                 up %42.1
  val?^ | miss    %42.4 = LdVar              eR    .Call, <env 0x55de28b56378>
  lgl$#-          %42.5 = Identical                <blt .Call>, %42.4   <true>
  void                    Branch                   %42.5 -> BB44 (if true) | BB45 (if false)
BB43   <- [40]
  fs              %43.0 = FrameState         R     0x55de2a5ecad0+234: [], env=e36.0
  env             e43.1 = (MkEnv)            l     name=%40.2, parent=<env 0x55de28b56378>, context 1
  fs              %43.2 = FrameState         R     0x55de2b4a0d80+0: [], env=e43.1, next=%43.0
  void                    Deopt              !v    %43.2, CallTarget@0x55de2b591bf8[Call#0], %40.3   !
BB44   <- [42]
  val?^ | miss    %44.0 = LdVar              eR    C_R_methodsPackageMetaName, <env 0x55de28b56378>
  env             e44.1 = MkEnv              l     prefix="C", name=%42.3, package(miss)="", parent=<env 0x55de28b56378>, context 1
  val?            %44.2 = Force!<value>      !v    %44.0, e44.1   <vec>
  val?^ | miss    %44.3 = LdVar              eR    prefix, e44.1
  val?            %44.4 = Force!<value>      !v    %44.3, e44.1   <str$->
  val?^ | miss    %44.5 = LdVar              eR    name, e44.1
  val?            %44.6 = Force!<lazy>       !v    %44.5, e44.1   <str$->
  val?^ | miss    %44.7 = LdVar              eR    package, e44.1
  val?            %44.8 = Force!<lazy>       !v    %44.7, e44.1   <str$->
  val?            %44.9 = CallBuiltin        !v    .Call(%44.2, %44.4, %44.6, %44.8) e44.1   <str$->
  val?            %44.10 = PopContext         C     %44.9, %42.2   <str$->
  val?            %44.11 = PopContext         C     %44.10, %40.1   <str$->
  void                    StVar              lW    cname, %44.11, e36.0
  val?^ | miss    %44.13 = LdVar              eR    is.character, e36.0
  lgl$#-          %44.14 = Identical                <blt is.character>, %44.13   <true>
  void                    Branch                   %44.14 -> BB46 (if true) | BB47 (if false)
BB45   <- [42]
  fs              %45.0 = FrameState         R     0x55de2a5ecad0+234: [], env=e36.0
  fs              %45.1 = FrameState         R     0x55de2b4a0d80+37: [], env=e42.0, next=%45.0
  env             e45.2 = (MkEnv)            l     prefix="C", name=%42.3, package(miss)="", parent=<env 0x55de28b56378>, context 1
  fs              %45.3 = FrameState         R     0x55de2bd88ed0+0: [], env=e45.2, next=%45.1
  void                    Deopt              !v    %45.3, DeadBranchReached@0x55de2b9c1e50[Test#0], %42.5   !
BB46   <- [44]
  val?^ | miss    %46.0 = LdVar              eR    where, e36.0
  val?            %46.1 = Force!<lazy>       !v    %46.0, e36.0   <env->
  lgl$#-          %46.2 = CallSafeBuiltin    wed   is.character(%46.1)    <lgl$->
  void                    Branch                   %46.2 -> BB33 (if true) | BB15 (if false)
BB47   <- [44]
  fs              %47.0 = FrameState         R     0x55de2a5ecad0+248: [], env=e36.0
  void                    Deopt              !v    %47.0, DeadBranchReached@0x55de2aba2040[Test#1], %44.14   !
BB33   <- [46]
  val?^ | miss    %33.0 = LdVar              eR    where, e36.0
  val?            %33.1 = Force!             !v    %33.0, e36.0   <val?_>
  void                    StVar              lW    package, %33.1, e36.0
  goto BB16
BB15   <- [46]
  void                    Nop                !     
  goto BB16
BB16   <- [15, 33]
  val?^ | miss    %16.0 = LdVar              eR    isTRUE, e36.0
  lgl$#-          %16.1 = Identical                %16.0, function(x) <(rir::DispatchTable*)0x55de2a40ca|...>
  void                    Branch                   %16.1 -> BB48 (if true) | BB49 (if false)
BB48   <- [16]
  prom-           %48.0 = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p3, e36.0
  val?            %48.1 = StaticCall         !v    isTRUE[0x55de2af3dca0](%48.0) e36.0   <lgl$->
  lgl$#-          %48.2 = IsType                   %48.1 isA lgl$-
  void                    Branch                   %48.2 -> BB50 (if true) | BB51 (if false)
BB49   <- [16]
  fs              %49.0 = FrameState         R     0x55de2a5ecad0+378: [], env=e36.0
  void                    Deopt              !v    %49.0, CallTarget@0x55de2aba2040[Call#8], %16.0   !
BB50   <- [48]
  lgl$-           %50.0 = CastType           d     dn %48.1
  lgl$#-          %50.1 = CheckTrueFalse     e     %50.0
  void                    Branch                   %50.1 -> BB32 (if true) | BB21 (if false)
BB51   <- [48]
  void                    Nop                !     
  val?            %51.1 = %48.1
  dr              %51.2 = Typecheck@0x55de2aba2040[Type#26]
  goto BB19
BB32   <- [50]
  val?^ | miss    %32.0 = LdVar              eR    .requirePackage, e36.0
  lgl$#-          %32.1 = Identical                %32.0, function(package, mustFind=TRUE) <(rir::Dispat|...>
  void                    Branch                   %32.1 -> BB52 (if true) | BB53 (if false)
BB21   <- [50]
  void                    Nop                !     
  goto BB22
BB19   <- [51, 53]
  val?^ | miss    %19.0 = Phi                      %51.1:BB51, %53.1:BB53
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %51.2:BB51, %53.2:BB53
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55de2a5ecad0+410: [%48.1], env=e36.0
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB52   <- [32]
  prom-           %52.0 = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p8, e36.0
  val?            %52.1 = StaticCall         !v    .requirePackage[0x55de2944efa0](%52.0) e36.0   <env->
  void                    StVar              lW    package, %52.1, e36.0
  goto BB22
BB53   <- [32]
  void                    Nop                !     
  val?^ | miss    %53.1 = %32.0
  dr              %53.2 = CallTarget@0x55de2aba2040[Call#10]
  goto BB19
BB22   <- [21, 52]
  val?^ | miss    %22.0 = LdVar              eR    is.environment, e36.0
  lgl$#-          %22.1 = Identical                <blt is.environment>, %22.0   <true>
  void                    Branch                   %22.1 -> BB54 (if true) | BB55 (if false)
BB54   <- [22]
  val?^ | miss    %54.0 = LdVar              eR    package, e36.0
  val?            %54.1 = Force!<value>      !v    %54.0, e36.0   <env->
  lgl$#-          %54.2 = CallSafeBuiltin    wed   is.environment(%54.1)    <lgl$->
  void                    Branch                   %54.2 -> BB31 (if true) | BB27 (if false)
BB55   <- [22]
  fs              %55.0 = FrameState         R     0x55de2a5ecad0+472: [], env=e36.0
  void                    Deopt              !v    %55.0, DeadBranchReached@0x55de2aba2040[Test#2], %22.1   !
BB31   <- [54]
  val?^ | miss    %31.0 = LdVar              eR    get0, e36.0
  lgl$#-          %31.1 = Identical                %31.0, function(x, envir=pos.to.env(-(1L)), mode="any|...>
  void                    Branch                   %31.1 -> BB56 (if true) | BB57 (if false)
BB27   <- [54]
  void                    Nop                !     
  goto BB28
BB56   <- [31]
  prom-           %56.0 = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p5, e36.0
  prom-           %56.1 = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p6, e36.0
  prom-           %56.2 = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p7, e36.0
  val?            %56.3 = StaticCall         !v    get0[0x55de2b8cc5f0](%56.0, %56.1, missingArg, %56.2) { 0 1 3n } e36.0   <other>
  void                    StVar              lW    value, %56.3, e36.0
  goto BB28
BB57   <- [31]
  fs              %57.0 = FrameState         R     0x55de2a5ecad0+563: [%54.2], env=e36.0
  void                    Deopt              !v    %57.0, CallTarget@0x55de2aba2040[Call#12], %31.0   !
BB28   <- [27, 56]
  val?^ | miss    %28.0 = LdVar              eR    value, e36.0
  val?            %28.1 = Force!<value>      !v    %28.0, e36.0   <other>
  lgl$-           %28.2 = Is                       %28.1, NULL
  lgl$#-          %28.3 = CheckTrueFalse     e     %28.2
  void                    Branch                   %28.3 -> BB30 (if true) | BB29 (if false)
BB30   <- [28]
  (cls|spec|blt)  %30.0 = LdFun              !v    get0, e36.0
  fs              %30.1 = FrameState         R     0x55de2a5ecad0+682: [%30.0], env=e36.0
  void                    Deopt              !v    %30.1, DeadCall@0x55de2aba2040[Call#13], %30.0   !
BB29   <- [28]
  void                    Nop                !     
  goto BB7
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    length, <0x55de2854fa90>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p2, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2) e0.0   <int$->
  val?            %0.4  = Gt                 !v    %0.3, 1L, e0.0   <lgl$->
  lgl$#-          %0.5  = CheckTrueFalse     we    %0.4
  void                    Branch                   %0.5 -> BB2 (if true) | BB4 (if false)
BB2   <- [0]
  val?^ | miss    %2.0  = LdVar              eR    Class, e0.0
  val?            %2.1  = Force              !v    %2.0, e0.0   <val?_>
  val?            %2.2  = Extract2_1D        !v    %2.1, 1L, e0.0   <val?_>
  void                    Visible            v     
  val?            %2.4  = %2.2
  goto BB3
BB4   <- [0]
  val?^ | miss    %4.0  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %4.2  = Force<wrapped>     !     %4.0, e0.0   <str$->
  val?            %4.3  = %4.2
  goto BB3
BB3   <- [4, 2]
  val?            %3.0  = Phi                      %4.3:BB4, %2.4:BB2
  val?            %3.1  = %3.0
  void                    Return             l     %3.1
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     nzchar, <0x55de2855b240>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getClassDef[0x55de2a968140]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    cname, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    inherits, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3

│ getClassDef[0x55de2a968140]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
