
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGeneric[0x55de2ba50290]                                                   │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1        │
│ Properties:                                                                  │
├────── Final PIR Version
getGeneric[0x55de2ba50290]
BB0
  val?^           %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  val?^ | miss    %0.3  = LdVar              eR    is.function, <env 0x55de28b56378>
  lgl$#-          %0.4  = Identical                <blt is.function>, %0.3   <true>
  void                    Branch                   %0.4 -> BB66 (if true) | BB67 (if false)
BB66   <- [0]
  env             e66.0 = MkEnv              l     f=%0.2, mustFind=%0.1, where=%0.0, package(miss)="", parent=<env 0x55de28b56378>, context 1
  val?            %66.1 = Force!<lazy>       !v    %0.2, e66.0   <(str|cls)>
  val?            %66.2 = CallBuiltin        !v    is.function(%66.1) e66.0   <lgl$->
  lgl$#-          %66.3 = IsType                   %66.2 isA lgl$-
  void                    Branch                   %66.3 -> BB68 (if true) | BB69 (if false)
BB67   <- [0]
  env             e67.0 = (MkEnv)            l     f=%0.2, mustFind=%0.1, where=%0.0, package(miss)="", parent=<env 0x55de28b56378>, context 1
  fs              %67.1 = FrameState         R     0x55de2aa8f4a0+0: [], env=e67.0
  void                    Deopt              !v    %67.1, DeadBranchReached@0x55de2b187e70[Test#0], %0.4
BB68   <- [66]
  lgl$-           %68.0 = CastType           d     dn %66.2
  lgl$#-          %68.1 = CheckTrueFalse     e     %68.0
  void                    Branch                   %68.1 -> BB60 (if true) | BB5 (if false)
BB69   <- [66]
  void                    Nop                !     
  val?            %69.1 = %66.2
  dr              %69.2 = Typecheck@0x55de2b187e70[Type#2]
  goto BB3
BB60   <- [68]
  val?^ | miss    %60.0 = LdVar              eR    is, e66.0
  lgl$#-          %60.1 = Identical                %60.0, function(object, class2) <(rir::DispatchTable*|...>
  void                    Branch                   %60.1 -> BB70 (if true) | BB71 (if false)
BB5   <- [68]
  lgl$-           %5.0  = Missing            eR    where, e66.0
  lgl$#-          %5.1  = CheckTrueFalse     e     %5.0
  void                    Branch                   %5.1 -> BB59 (if true) | BB6 (if false)
BB3   <- [69, 71, 73, 75]
  val?^ | miss    %3.0  = Phi                      %69.1:BB69, %71.1:BB71, %73.1:BB73, %75.1:BB75
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %69.2:BB69, %71.2:BB71, %73.2:BB73, %75.2:BB75
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55de2aa8f4a0+91: [%66.2], env=e66.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB70   <- [60]
  prom-           %70.0 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p10, e66.0
  val?            %70.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...>(%70.0, "genericFunction") e66.0   <lgl$->
  lgl$#-          %70.2 = IsType                   %70.1 isA lgl$-
  void                    Branch                   %70.2 -> BB76 (if true) | BB77 (if false)
BB71   <- [60]
  void                    Nop                !     
  val?^ | miss    %71.1 = %60.0
  dr              %71.2 = CallTarget@0x55de2b187e70[Call#1]
  goto BB3
BB59   <- [5]
  val?^ | miss    %59.0 = LdVar              eR    .getGeneric, e66.0
  lgl$#-          %59.1 = Identical                %59.0, function(f, where=.GlobalEnv, package="") <(ri|...>
  void                    Branch                   %59.1 -> BB72 (if true) | BB73 (if false)
BB6   <- [5]
  val?^ | miss    %6.0  = LdVar              eR    .getGeneric, e66.0
  lgl$#-          %6.1  = Identical                %6.0, function(f, where=.GlobalEnv, package="") <(ri|...>
  void                    Branch                   %6.1 -> BB74 (if true) | BB75 (if false)
BB76   <- [70]
  lgl$-           %76.0 = CastType           d     dn %70.1
  lgl$#-          %76.1 = CheckTrueFalse     e     %76.0
  void                    Branch                   %76.1 -> BB64 (if true) | BB63 (if false)
BB77   <- [70]
  fs              %77.0 = FrameState         R     0x55de2aa8f4a0+144: [%70.1], env=e66.0
  void                    Deopt              !v    %77.0, Typecheck@0x55de2b187e70[Type#4], %70.1   !
BB72   <- [59]
  prom-           %72.0 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p8, e66.0
  prom-           %72.1 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p9, e66.0
  val?            %72.2 = StaticCall         !v    .getGeneric[0x55de2a51b930](%72.0, missingArg, %72.1) e66.0   <cls>
  val?            %72.3 = %72.2
  goto BB7
BB73   <- [59]
  void                    Nop                !     
  val?^ | miss    %73.1 = %59.0
  dr              %73.2 = CallTarget@0x55de2b187e70[Call#7]
  goto BB3
BB74   <- [6]
  prom-           %74.0 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p1, e66.0
  prom-           %74.1 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p2, e66.0
  prom-           %74.2 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p3, e66.0
  val?            %74.3 = StaticCall         !v    .getGeneric[0x55de2b57f230](%74.0, %74.1, %74.2) e66.0   <(nil|cls)>
  val?            %74.4 = %74.3
  goto BB7
BB75   <- [6]
  void                    Nop                !     
  val?^ | miss    %75.1 = %6.0
  dr              %75.2 = CallTarget@0x55de2b187e70[Call#6]
  goto BB3
BB64   <- [76]
  val?^ | miss    %64.0 = LdVar              eR    f, e66.0
  void                    Visible            v     
  val?            %64.2 = Force!<wrapped>    !     %64.0, e66.0   <cls>
  val?            %64.3 = %64.2
  goto BB40
BB63   <- [76]
  (cls|spec|blt)  %63.0 = LdFun              !v    is.primitive, e66.0
  fs              %63.1 = FrameState         R     0x55de2aa8f4a0+160: [%63.0], env=e66.0
  void                    Deopt              !v    %63.1, DeadCall@0x55de2b187e70[Call#2], %63.0   !
BB7   <- [72, 74]
  val?            %7.0  = Phi                      %74.4:BB74, %72.3:BB72   <(nil|cls)>
  val?            %7.1  = %7.0
  lgl$-           %7.2  = Is                       %7.1, NULL
  lgl$-           %7.3  = AsLogical                %7.2
  lgl$#-          %7.4  = Identical                %7.3, false
  void                    StVar              lW    value, %7.1, e66.0
  val             %7.6  = ChkMissing         e     %7.1
  void                    Branch                   %7.4 -> BB58 (if true) | BB10 (if false)
BB40   <- [64, 39]
  val?            %40.0 = Phi                      %39.2:BB39, %64.3:BB64
  val?            %40.1 = %40.0
  void                    Return             l     %40.1
BB58   <- [7]
  void                    Nop                !     
  lgl$-           %58.1 = %7.3
  goto BB15
BB10   <- [7]
  val?^ | miss    %10.0 = LdVar              eR    baseenv, e66.0
  lgl$#-          %10.1 = Identical                <blt baseenv>, %10.0   <true>
  void                    Branch                   %10.1 -> BB78 (if true) | BB79 (if false)
BB15   <- [58, 88]
  lgl$-           %15.0 = Phi                      %88.7:BB88, %58.1:BB58
  lgl$-           %15.1 = %15.0
  lgl$#-          %15.2 = CheckTrueFalse     e     %15.1
  void                    Branch                   %15.2 -> BB45 (if true) | BB18 (if false)
BB78   <- [10]
  val?            %78.0 = CallBuiltin        !v    baseenv() e66.0   <env->
  lgl$#-          %78.1 = IsType                   %78.0 isA val+   <true>
  void                    Branch                   %78.1 -> BB80 (if true) | BB81 (if false)
BB79   <- [10]
  fs              %79.0 = FrameState         R     0x55de2aa8f4a0+427: [], env=e66.0
  void                    Deopt              !v    %79.0, DeadBranchReached@0x55de2b187e70[Test#1], %10.1   !
BB45   <- [15]
  val?^ | miss    %45.0 = LdVar              eR    is.function, e66.0
  lgl$#-          %45.1 = Identical                <blt is.function>, %45.0   <true>
  void                    Branch                   %45.1 -> BB84 (if true) | BB85 (if false)
BB18   <- [15]
  void                    Nop                !     
  goto BB19
BB80   <- [78]
  val?^ | miss    %80.0 = LdVar              eR    f, e66.0
  val?            %80.1 = Force!<wrapped>    !v    %80.0, e66.0   <str$->
  lgl$#-          %80.2 = IsType                   %80.1 isA val?-
  lgl$#-          %80.3 = IsType                   %78.0 isA val?-
  void                    Branch                   %80.3 -> BB82 (if true) | BB83 (if false)
BB81   <- [78]
  fs              %81.0 = FrameState         R     0x55de2aa8f4a0+525: [%7.3, %78.0], env=e66.0
  void                    Deopt              !v    %81.0, DeadBranchReached@0x55de2b187e70[Test#2], %78.1   !
BB84   <- [45]
  val?^ | miss    %84.0 = LdVar              eR    baseDef, e66.0
  lgl$#-          %84.1 = IsType                   %84.0 isA val?~- | miss
  void                    Branch                   %84.1 -> BB86 (if true) | BB87 (if false)
BB85   <- [45]
  void                    Nop                !     
  lgl$#-          %85.1 = %45.1
  dr              %85.2 = DeadBranchReached@0x55de2b187e70[Test#3]
  goto BB16
BB19   <- [18, 48, 54, 102]
  val?^ | miss    %19.0 = LdVar              eR    is.function, e66.0
  lgl$#-          %19.1 = Identical                <blt is.function>, %19.0   <true>
  void                    Branch                   %19.1 -> BB92 (if true) | BB93 (if false)
BB82   <- [80]
  val?-           %82.0 = CastType           d     dn %78.0   <env->
  void                    Branch                   %80.2 -> BB88 (if true) | BB89 (if false)
BB83   <- [80]
  void                    Nop                !     
  val?            %83.1 = %78.0
  dr              %83.2 = Typecheck@0x55de2b187e70[Type#20]
  goto BB13
BB86   <- [84]
  val?~- | miss   %86.0 = CastType           d     dn %84.0
  val?-           %86.1 = Force!<value>            %86.0,    <blt->
  lgl$#-          %86.2 = CallSafeBuiltin    wed   is.function(%86.1)    <lgl$->
  void                    Branch                   %86.2 -> BB49 (if true) | BB48 (if false)
BB87   <- [84]
  void                    Nop                !     
  val?^ | miss    %87.1 = %84.0
  dr              %87.2 = Typecheck@0x55de2b187e70[Type#25]
  goto BB16
BB16   <- [85, 87]
  val?^ | miss    %16.0 = Phi                      %85.1:BB85, %87.1:BB87
  val?^ | miss    %16.1 = %16.0
  dr              %16.2 = Phi                      %85.2:BB85, %87.2:BB87
  dr              %16.3 = %16.2
  fs              %16.4 = FrameState         R     0x55de2aa8f4a0+601: [%15.1], env=e66.0
  void                    Deopt              !v    %16.4, %16.3, %16.1   !
BB92   <- [19]
  val?^ | miss    %92.0 = LdVar              eR    value, e66.0
  val?            %92.1 = Force!<value>      !v    %92.0, e66.0   <cls>
  val?            %92.2 = CallBuiltin        !v    is.function(%92.1) e66.0   <lgl$->
  lgl$#-          %92.3 = IsType                   %92.2 isA lgl$-
  void                    Branch                   %92.3 -> BB94 (if true) | BB95 (if false)
BB93   <- [19]
  fs              %93.0 = FrameState         R     0x55de2aa8f4a0+882: [], env=e66.0
  void                    Deopt              !v    %93.0, DeadBranchReached@0x55de2b187e70[Test#4], %19.1   !
BB88   <- [82]
  val?-           %88.0 = CastType           d     dn %80.1   <str$->
  val?            %88.1 = Extract2_1D        wed   %82.0, %88.0, elided   <blt->
  lgl$-           %88.2 = Is                       %88.1, NULL
  void                    StVar              lW    baseDef, %88.1, e66.0
  lgl$-           %88.4 = Not                d     %88.2, elided
  lgl$-           %88.5 = AsLogical                %88.4
  lgl$-           %88.6 = LAnd                     %7.3, %88.5
  lgl$-           %88.7 = %88.6
  goto BB15
BB89   <- [82]
  void                    Nop                !     
  val?            %89.1 = %80.1
  dr              %89.2 = Typecheck@0x55de2b187e70[Type#22]
  goto BB13
BB13   <- [83, 89]
  val?^ | miss    %13.0 = Phi                      %83.1:BB83, %89.1:BB89
  val?^ | miss    %13.1 = %13.0
  dr              %13.2 = Phi                      %83.2:BB83, %89.2:BB89
  dr              %13.3 = %13.2
  fs              %13.4 = FrameState         R     0x55de2aa8f4a0+570: [%7.3, %78.0, %80.1], env=e66.0
  void                    Deopt              !v    %13.4, %13.3, %13.1   !
BB49   <- [86]
  val?^ | miss    %49.0 = LdVar              eR    genericForBasic, e66.0
  lgl$#-          %49.1 = Identical                %49.0, function(f, where=topenv(parent.frame()), must|...>
  void                    Branch                   %49.1 -> BB90 (if true) | BB91 (if false)
BB48   <- [86]
  void                    Nop                !     
  goto BB19
BB94   <- [92]
  lgl$-           %94.0 = CastType           d     dn %92.2
  lgl$#-          %94.1 = CheckTrueFalse     e     %94.0
  void                    Branch                   %94.1 -> BB44 (if true) | BB24 (if false)
BB95   <- [92]
  fs              %95.0 = FrameState         R     0x55de2aa8f4a0+973: [%92.2], env=e66.0
  void                    Deopt              !v    %95.0, Typecheck@0x55de2b187e70[Type#36], %92.2   !
BB90   <- [49]
  prom-           %90.0 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p4, e66.0
  val?            %90.1 = StaticCall         !v    genericForBasic[0x55de285400b0](%90.0, missingArg, false) { 0 2n } e66.0   <cls>
  void                    StVar              lW    value, %90.1, e66.0
  val?^ | miss    %90.3 = LdVar              eR    is, e66.0
  lgl$#-          %90.4 = Identical                %90.3, function(object, class2) <(rir::DispatchTable*|...>
  void                    Branch                   %90.4 -> BB96 (if true) | BB97 (if false)
BB91   <- [49]
  fs              %91.0 = FrameState         R     0x55de2aa8f4a0+703: [%86.2], env=e66.0
  void                    Deopt              !v    %91.0, CallTarget@0x55de2b187e70[Call#10], %49.0   !
BB44   <- [94]
  val?^ | miss    %44.0 = LdVar              eR    value, e66.0
  void                    Visible            v     
  val?            %44.2 = Force!<value>      !     %44.0, e66.0   <cls>
  val?            %44.3 = %44.2
  goto BB39
BB24   <- [94]
  val?^ | miss    %24.0 = LdVar              eR    nzchar, e66.0
  lgl$#-          %24.1 = Identical                <blt nzchar>, %24.0   <@?>
  void                    Branch                   %24.1 -> BB26 (if true) | BB25 (if false)
BB96   <- [90]
  prom-           %96.0 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p5 (!refl), e66.0
  val?            %96.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...>(%96.0, "genericFunction") e66.0   <lgl$->
  lgl$#-          %96.2 = IsType                   %96.1 isA lgl$-
  void                    Branch                   %96.2 -> BB98 (if true) | BB99 (if false)
BB97   <- [90]
  fs              %97.0 = FrameState         R     0x55de2aa8f4a0+778: [], env=e66.0
  void                    Deopt              !v    %97.0, CallTarget@0x55de2b187e70[Call#11], %90.3   !
BB39   <- [44, 38]
  val?            %39.0 = Phi                      %38.2:BB38, %44.3:BB44
  val?            %39.1 = %39.0
  val?            %39.2 = %39.1
  goto BB40
BB26   <- [24]
  val?^ | miss    %26.0 = LdVar              eR    package, e66.0
  val?            %26.1 = Force!             !v    %26.0, e66.0   <val?_>
  val?            %26.2 = CallBuiltin        !v    nzchar(%26.1) e66.0   <val?_>
  lgl$-           %26.3 = AsLogical          e     %26.2
  lgl$#-          %26.4 = Identical                %26.3, false
  void                    Branch                   %26.4 -> BB30 (if true) | BB27 (if false)
BB25   <- [24]
  (cls|spec|blt)  %25.0 = LdFun              !v    nzchar, e66.0
  fs              %25.1 = FrameState         R     0x55de2aa8f4a0+1012: [%25.0], env=e66.0
  void                    Deopt              !v    %25.1, DeadCall@0x55de2b187e70[Call#14], %25.0   !
BB98   <- [96]
  lgl$-           %98.0 = CastType           d     dn %96.1
  lgl$#-          %98.1 = CheckTrueFalse     e     %98.0
  void                    Branch                   %98.1 -> BB55 (if true) | BB54 (if false)
BB99   <- [96]
  void                    Nop                !     
  val?            %99.1 = %96.1
  dr              %99.2 = Typecheck@0x55de2b187e70[Type#30]
  goto BB52
BB30   <- [26]
  lgl$#-          %30.0 = CheckTrueFalse     e     %26.3
  void                    Branch                   %30.0 -> BB43 (if true) | BB31 (if false)
BB27   <- [26]
  val?^ | miss    %27.0 = LdVar              eR    is.na, e66.0
  lgl$#-          %27.1 = Identical                <blt is.na>, %27.0   <@?>
  void                    Branch                   %27.1 -> BB29 (if true) | BB28 (if false)
BB55   <- [98]
  val?^ | miss    %55.0 = LdVar              eR    .cacheGeneric, e66.0
  lgl$#-          %55.1 = Identical                %55.0, function(name, def) <(rir::DispatchTable*)0x55|...>
  void                    Branch                   %55.1 -> BB100 (if true) | BB101 (if false)
BB54   <- [98]
  void                    Nop                !     
  goto BB19
BB52   <- [99, 101]
  val?^ | miss    %52.0 = Phi                      %99.1:BB99, %101.1:BB101
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %99.2:BB99, %101.2:BB101
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x55de2aa8f4a0+815: [%96.1], env=e66.0
  void                    Deopt              !v    %52.4, %52.3, %52.1   !
BB43   <- [30]
  (cls|spec|blt)  %43.0 = LdFun              !v    tryCatch, e66.0
  fs              %43.1 = FrameState         R     0x55de2aa8f4a0+1229: [%43.0], env=e66.0
  void                    Deopt              !v    %43.1, DeadCall@0x55de2b187e70[Call#20], %43.0   !
BB31   <- [30]
  val?^ | miss    %31.0 = LdVar              eR    is.function, e66.0
  lgl$#-          %31.1 = Identical                <blt is.function>, %31.0   <@?>
  void                    Branch                   %31.1 -> BB33 (if true) | BB32 (if false)
BB29   <- [27]
  (cls|spec|blt)  %29.0 = LdFun              !v    match, e66.0
  fs              %29.1 = FrameState         R     0x55de2aa8f4a0+1152: [%26.3, <blt is.na>, %29.0], env=e66.0
  void                    Deopt              !v    %29.1, DeadCall@0x55de2b187e70[Call#18], %29.0   !
BB28   <- [27]
  (cls|spec|blt)  %28.0 = LdFun              !v    is.na, e66.0
  fs              %28.1 = FrameState         R     0x55de2aa8f4a0+1115: [%26.3, %28.0], env=e66.0
  void                    Deopt              !v    %28.1, DeadCall@0x55de2b187e70[Call#15], %28.0   !
BB100   <- [55]
  prom-           %100.0 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p6, e66.0
  prom-           %100.1 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p7, e66.0
  ct              %100.2 = PushContext        lCL   %100.0, %100.1, .cacheGeneric(f, value), function(name, def) <(rir::DispatchTable*)0x55|...>, e66.0
  val?^           %100.3 = CastType                 up %100.1
  val?^           %100.4 = CastType                 up %100.0
  val?^ | miss    %100.5 = LdVar              eR    .cacheGenericTable, <env 0x55de28b56378>
  lgl$#-          %100.6 = Identical                %100.5, function(name, def, table) <(rir::DispatchTabl|...>
  void                    Branch                   %100.6 -> BB102 (if true) | BB103 (if false)
BB101   <- [55]
  void                    Nop                !     
  val?^ | miss    %101.1 = %55.0
  dr              %101.2 = CallTarget@0x55de2b187e70[Call#12]
  goto BB52
BB33   <- [31]
  val?^ | miss    %33.0 = LdVar              eR    value, e66.0
  val?            %33.1 = Force!             !v    %33.0, e66.0   <val?_>
  lgl$#-          %33.2 = IsType                   %33.1 isA val?+
  void                    Branch                   %33.2 -> BB104 (if true) | BB105 (if false)
BB32   <- [31]
  (cls|spec|blt)  %32.0 = LdFun              !v    is.function, e66.0
  fs              %32.1 = FrameState         R     0x55de2aa8f4a0+1311: [%32.0], env=e66.0
  void                    Deopt              !v    %32.1, DeadCall@0x55de2b187e70[Call#23], %32.0   !
BB102   <- [100]
  env             e102.0 = MkEnv              l     name=%100.4, def=%100.3, parent=<env 0x55de28b56378>, context 1
  prom-           %102.1 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p11, e102.0
  prom-           %102.2 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p12, e102.0
  prom-           %102.3 = MkArg                    unboundValue, getGeneric[0x55de2ba50290]_p13, e102.0
  val?            %102.4 = StaticCall         !v    .cacheGenericTable[0x55de28d2f330](%102.1, %102.2, %102.3) e102.0   <cls>
  val?            %102.5 = PopContext         C     %102.4, %100.2   <cls>
  void                    StVar              lW    value, %102.5, e66.0
  goto BB19
BB103   <- [100]
  fs              %103.0 = FrameState         R     0x55de2aa8f4a0+868: [], env=e66.0
  env             e103.1 = (MkEnv)            l     name=%100.4, def=%100.3, parent=<env 0x55de28b56378>, context 1
  fs              %103.2 = FrameState         R     0x55de2b0b39a0+0: [], env=e103.1, next=%103.0
  void                    Deopt              !v    %103.2, CallTarget@0x55de2b70b9e8[Call#0], %100.5   !
BB104   <- [33]
  val?+           %104.0 = CastType           d     dn %33.1   <val?_>
  lgl$#-          %104.1 = CallSafeBuiltin    wed   is.function(%104.0)    <val?_>
  void                    Branch                   %104.1 -> BB42 (if true) | BB36 (if false)
BB105   <- [33]
  fs              %105.0 = FrameState         R     0x55de2aa8f4a0+1352: [<blt is.function>, %33.1], env=e66.0
  void                    Deopt              !v    %105.0, Typecheck@0x55de2b187e70[Type#55], %33.1   !
BB42   <- [104]
  val?^ | miss    %42.0 = LdVar              eR    value, e66.0
  void                    Visible            v     
  val?            %42.2 = Force!             !     %42.0, e66.0   <val?_>
  val?            %42.3 = %42.2
  goto BB38
BB36   <- [104]
  val?^ | miss    %36.0 = LdVar              eR    mustFind, e66.0
  val?            %36.1 = Force!             !v    %36.0, e66.0   <val?_>
  lgl$#-          %36.2 = CheckTrueFalse     we    %36.1
  void                    Branch                   %36.2 -> BB41 (if true) | BB37 (if false)
BB38   <- [42, 37]
  val?            %38.0 = Phi                      %37.1:BB37, %42.3:BB42
  val?            %38.1 = %38.0
  val?            %38.2 = %38.1
  goto BB39
BB41   <- [36]
  (cls|spec|blt)  %41.0 = LdFun              !v    stop, e66.0
  fs              %41.1 = FrameState         R     0x55de2aa8f4a0+1421: [%41.0], env=e66.0
  void                    Deopt              !v    %41.1, DeadCall@0x55de2b187e70[Call#24], %41.0   !
BB37   <- [36]
  void                    Visible            v     
  nil-            %37.1 = nil
  goto BB38
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <env->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    name, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    def, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .genericTable, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ getGeneric[0x55de2ba50290]                                                   │
└──────────────────────────────────────────────────────────────────────────────┘
