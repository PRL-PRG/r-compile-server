
┌──────────────────────────────────────────────────────────────────────────────┐
│ genericForBasic[0x55de2e0ec5b0]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch miss: 2                              │
│ Properties:                                                                  │
├────── Final PIR Version
genericForBasic[0x55de2e0ec5b0]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     f=%0.0, where(miss)=missingArg, mustFind(miss)=missingArg, parent=<env 0x55de28b56378>, context 1
  prom-           %0.2  = MkArg                    unboundValue, genericForBasic[0x55de2e0ec5b0]_p0, e0.1
  val?^ | miss    %0.3  = CastType                 up %0.2
  void                    StArg              lW    where, %0.3, e0.1
  void                    StArg              lW    mustFind, true, e0.1
  val?^ | miss    %0.6  = LdVar              eR    .BasicFunsList, <env 0x55de28b56378>
  val?            %0.7  = Force!<wrapped>    !v    %0.6, e0.1   <vec+>
  lgl$#-          %0.8  = IsType                   %0.7 isA val+   <true>
  void                    Branch                   %0.8 -> BB15 (if true) | BB16 (if false)
BB15   <- [0]
  val?^ | miss    %15.0 = LdVar              eR    f, e0.1
  val?            %15.1 = Force!<lazy>       !v    %15.0, e0.1   <str$->
  lgl$#-          %15.2 = IsType                   %15.1 isA val?-
  lgl$#-          %15.3 = IsType                   %0.7 isA val?+
  void                    Branch                   %15.3 -> BB17 (if true) | BB18 (if false)
BB16   <- [0]
  fs              %16.0 = FrameState         R     0x55de2ccd4b80+9: [%0.7], env=e0.1
  void                    Deopt              !v    %16.0, DeadBranchReached@0x55de2b1cf2e0[Test#0], %0.8   !
BB17   <- [15]
  val?+           %17.0 = CastType           d     dn %0.7   <vec+>
  void                    Branch                   %15.2 -> BB19 (if true) | BB20 (if false)
BB18   <- [15]
  void                    Nop                !     
  val?            %18.1 = %0.7
  dr              %18.2 = Typecheck@0x55de2b1cf2e0[Type#2]
  goto BB3
BB19   <- [17]
  val?-           %19.0 = CastType           d     dn %15.1   <str$->
  val?            %19.1 = Extract2_1D        wed   %17.0, %19.0, elided   <(nil|cls)>
  void                    StVar              lW    ans, %19.1, e0.1
  val?^ | miss    %19.3 = LdVar              eR    mustFind, e0.1
  val?            %19.4 = Force!<lazy>       !v    %19.3, e0.1   <lgl$->
  lgl$-           %19.5 = AsLogical          e     %19.4
  lgl$#-          %19.6 = Identical                %19.5, false
  void                    Branch                   %19.6 -> BB13 (if true) | BB7 (if false)
BB20   <- [17]
  void                    Nop                !     
  val?            %20.1 = %15.1
  dr              %20.2 = Typecheck@0x55de2b1cf2e0[Type#4]
  goto BB3
BB3   <- [18, 20]
  val?^ | miss    %3.0  = Phi                      %18.1:BB18, %20.1:BB20
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %18.2:BB18, %20.2:BB20
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55de2ccd4b80+54: [%0.7, %15.1], env=e0.1
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB13   <- [19]
  void                    Nop                !     
  lgl$-           %13.1 = %19.5
  goto BB10
BB7   <- [19]
  val?^ | miss    %7.0  = LdVar              eR    isFALSE, e0.1
  lgl$#-          %7.1  = Identical                %7.0, function(x) <(rir::DispatchTable*)0x55de2b7a37|...>
  void                    Branch                   %7.1 -> BB21 (if true) | BB22 (if false)
BB10   <- [13, 23]
  lgl$-           %10.0 = Phi                      %23.3:BB23, %13.1:BB13
  lgl$-           %10.1 = %10.0
  lgl$#-          %10.2 = CheckTrueFalse     e     %10.1
  void                    Branch                   %10.2 -> BB12 (if true) | BB11 (if false)
BB21   <- [7]
  val?^ | miss    %21.0 = LdVar              eR    ans, e0.1
  val?            %21.1 = Force!<value>      !v    %21.0, e0.1   <nil->
  prom-           %21.2 = MkArg                    %21.1, genericForBasic[0x55de2e0ec5b0]_p3 (!refl), 
  val?            %21.3 = StaticCall         !v    isFALSE[0x55de2f681a20](%21.2) e0.1   <lgl$->
  lgl$#-          %21.4 = IsType                   %21.3 isA lgl$-
  void                    Branch                   %21.4 -> BB23 (if true) | BB24 (if false)
BB22   <- [7]
  fs              %22.0 = FrameState         R     0x55de2ccd4b80+84: [%19.4], env=e0.1
  void                    Deopt              !v    %22.0, CallTarget@0x55de2b1cf2e0[Call#2], %7.0   !
BB12   <- [10]
  (cls|spec|blt)  %12.0 = LdFun              !v    stop, e0.1
  fs              %12.1 = FrameState         R     0x55de2ccd4b80+151: [%12.0], env=e0.1
  void                    Deopt              !v    %12.1, DeadCall@0x55de2b1cf2e0[Call#3], %12.0   !
BB11   <- [10]
  val?^ | miss    %11.0 = LdVar              eR    ans, e0.1
  void                    Visible            v     
  val?            %11.2 = Force!<value>      !     %11.0, e0.1   <(nil|cls)>
  void                    Return             l     %11.2
BB23   <- [21]
  lgl$-           %23.0 = CastType           d     dn %21.3
  lgl$-           %23.1 = AsLogical                %23.0
  lgl$-           %23.2 = LAnd                     %19.5, %23.1
  lgl$-           %23.3 = %23.2
  goto BB10
BB24   <- [21]
  fs              %24.0 = FrameState         R     0x55de2ccd4b80+128: [%19.5, %21.3], env=e0.1
  void                    Deopt              !v    %24.0, Typecheck@0x55de2b1cf2e0[Type#8], %21.3   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     topenv, e0.0
  prom-           %0.2  = MkArg                    unboundValue, genericForBasic[0x55de2e0ec5b0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     parent.frame, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ans, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <nil->
  void                    Return             l     %0.3

│ genericForBasic[0x55de2e0ec5b0]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
