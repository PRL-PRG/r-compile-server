
┌──────────────────────────────────────────────────────────────────────────────┐
│ getGroupMembers[0x55de2e63c430]                                              │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2│
│ Properties:                                                                  │
├────── Final PIR Version
getGroupMembers[0x55de2e63c430]
BB0
  val?~+          %0.0  = LdArg                    2
  val?~+          %0.1  = LdArg                    1
  val?^           %0.2  = LdArg                    0
  env             e0.3  = MkEnv              l     group=%0.2, recursive=%0.1, character=%0.0, parent=<env 0x55de28b56378>, context 1
  cls             %0.4  = MkCls                    .recMembers, e0.3
  void                    StVar              lW    .recMembers, %0.4, e0.3
  val?^ | miss    %0.6  = LdVar              eR    getGeneric, <env 0x55de28b56378>
  lgl$#-          %0.7  = Identical                %0.6, function(f, mustFind=FALSE, where, package="")|...>
  void                    Branch                   %0.7 -> BB28 (if true) | BB29 (if false)
BB28   <- [0]
  prom-           %28.0 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p0 (!refl), e0.3
  val?            %28.1 = StaticCall         !v    getGeneric[0x55de2beeb3c0](%28.0) e0.3   <cls>
  lgl$-           %28.2 = Is                       %28.1, NULL
  void                    StVar              lW    f, %28.1, e0.3
  val             %28.4 = ChkMissing         e     %28.1
  lgl$#-          %28.5 = CheckTrueFalse     e     %28.2
  void                    Branch                   %28.5 -> BB26 (if true) | BB5 (if false)
BB29   <- [0]
  fs              %29.0 = FrameState         R     0x55de289aa0a0+25: [], env=e0.3
  void                    Deopt              !v    %29.0, CallTarget@0x55de28541e00[Call#0], %0.6
BB26   <- [28]
  (cls|spec|blt)  %26.0 = LdFun              !v    warning, e0.3
  fs              %26.1 = FrameState         R     0x55de289aa0a0+570: [%26.0], env=e0.3
  void                    Deopt              !v    %26.1, DeadCall@0x55de28541e00[Call#10], %26.0   !
BB5   <- [28]
  val?^ | miss    %5.0  = LdVar              eR    is, e0.3
  lgl$#-          %5.1  = Identical                %5.0, function(object, class2) <(rir::DispatchTable*|...>
  void                    Branch                   %5.1 -> BB30 (if true) | BB31 (if false)
BB30   <- [5]
  prom-           %30.0 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p1 (!refl), e0.3
  val?            %30.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...>(%30.0, "groupGenericFunction") e0.3   <lgl$->
  lgl$#-          %30.2 = IsType                   %30.1 isA lgl$-
  void                    Branch                   %30.2 -> BB32 (if true) | BB33 (if false)
BB31   <- [5]
  fs              %31.0 = FrameState         R     0x55de289aa0a0+71: [], env=e0.3
  void                    Deopt              !v    %31.0, CallTarget@0x55de28541e00[Call#1], %5.0   !
BB32   <- [30]
  lgl$-           %32.0 = CastType           d     dn %30.1
  lgl$-           %32.1 = Not                d     %32.0, elided
  lgl$#-          %32.2 = CheckTrueFalse     e     %32.1
  void                    Branch                   %32.2 -> BB25 (if true) | BB8 (if false)
BB33   <- [30]
  fs              %33.0 = FrameState         R     0x55de289aa0a0+133: [%30.1], env=e0.3
  void                    Deopt              !v    %33.0, Typecheck@0x55de28541e00[Type#4], %30.1   !
BB25   <- [32]
  (cls|spec|blt)  %25.0 = LdFun              !v    character, e0.3
  fs              %25.1 = FrameState         R     0x55de289aa0a0+533: [%25.0], env=e0.3
  void                    Deopt              !v    %25.1, DeadCall@0x55de28541e00[Call#9], %25.0   !
BB8   <- [32]
  (cls|spec|blt)  %8.0  = LdFun              !v    @, <0x55de2854ebd8>, e0.3
  prom-           %8.1  = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p2, e0.3
  prom-           %8.2  = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p3, e0.3
  val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e0.3   <vec->
  void                    StVar              lW    members, %8.3, e0.3
  val?^ | miss    %8.5  = LdVar              eR    recursive, e0.3
  val?            %8.6  = Force!<lazy>       !v    %8.5, e0.3   <lgl$->
  lgl$#-          %8.7  = CheckTrueFalse     we    %8.6
  void                    Branch                   %8.7 -> BB16 (if true) | BB9 (if false)
BB16   <- [8]
  (cls|spec|blt)  %16.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.3
  prom-           %16.1 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p6, e0.3
  prom-           %16.2 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p7, e0.3
  val?            %16.3 = Call               !v    %16.0(%16.1, %16.2) e0.3   <str$->
  void                    StVar              lW    where, %16.3, e0.3
  val?^ | miss    %16.5 = LdVar              eR    identical, e0.3
  lgl$#-          %16.6 = Identical                %16.5, function(x, y, num.eq=TRUE, single.NA=TRUE, at|...>
  void                    Branch                   %16.6 -> BB34 (if true) | BB35 (if false)
BB9   <- [8]
  void                    Nop                !     
  goto BB10
BB34   <- [16]
  prom-           %34.0 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p8 (!refl), e0.3
  ct              %34.1 = PushContext        lCL   %34.0, "base", identical(where, "base"), function(x, y, num.eq=TRUE, single.NA=TRUE, at|...>, e0.3
  val?^           %34.2 = CastType                 up %34.0
  env             e34.3 = MkEnv              l     x=%34.2, y="base", num.eq(miss)=true, single.NA(miss)=true, attrib.as.set(miss)=true, ignore.bytecode(miss)=true, ignore.environment(miss)=false, ignore.srcref(miss)=true, parent=R_BaseNamespace, context 1
  val?            %34.4 = CallBuiltin        !v    identical(%16.3, "base", true, true, true, true, false, true) e34.3
  val?            %34.5 = PopContext         C     %34.4, %34.1   <lgl$->
  lgl$#-          %34.6 = IsType                   %34.5 isA lgl$-
  void                    Branch                   %34.6 -> BB36 (if true) | BB37 (if false)
BB35   <- [16]
  fs              %35.0 = FrameState         R     0x55de289aa0a0+272: [], env=e0.3
  void                    Deopt              !v    %35.0, CallTarget@0x55de28541e00[Call#4], %16.5   !
BB10   <- [9, 42, 44]
  val?^ | miss    %10.0 = LdVar              eR    character, e0.3
  void                    Visible            v     
  val?            %10.2 = Force!<lazy>       !     %10.0, e0.3   <lgl$->
  lgl$#-          %10.3 = CheckTrueFalse     we    %10.2
  void                    Branch                   %10.3 -> BB15 (if true) | BB13 (if false)
BB36   <- [34]
  lgl$-           %36.0 = CastType           d     dn %34.5
  lgl$#-          %36.1 = CheckTrueFalse     e     %36.0
  void                    Branch                   %36.1 -> BB22 (if true) | BB21 (if false)
BB37   <- [34]
  void                    Nop                !     
  val?            %37.1 = %34.5
  dr              %37.2 = Typecheck@0x55de28541e00[Type#13]
  goto BB19
BB15   <- [10]
  val?^ | miss    %15.0 = LdVar              eR    sapply, e0.3
  lgl$#-          %15.1 = Identical                %15.0, function(X, FUN, ..., simplify=TRUE, USE.NAMES|...>
  void                    Branch                   %15.1 -> BB38 (if true) | BB39 (if false)
BB13   <- [10]
  val?^ | miss    %13.0 = LdVar              eR    members, e0.3
  lgl$#-          %13.1 = IsType                   %13.0 isA val?~- | miss
  void                    Branch                   %13.1 -> BB40 (if true) | BB41 (if false)
BB22   <- [36]
  void                    StVar              lW    where, "methods", e0.3
  val?^ | miss    %22.1 = LdVar              eR    .recMembers, e0.3
  lgl$#-          %22.2 = Identical                %22.1, %0.4
  void                    Branch                   %22.2 -> BB44 (if true) | BB45 (if false)
BB21   <- [36]
  val?^ | miss    %21.0 = LdVar              eR    .recMembers, e0.3
  lgl$#-          %21.1 = Identical                %21.0, %0.4
  void                    Branch                   %21.1 -> BB42 (if true) | BB43 (if false)
BB19   <- [37, 43]
  val?^ | miss    %19.0 = Phi                      %37.1:BB37, %43.1:BB43
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %37.2:BB37, %43.2:BB43
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55de289aa0a0+309: [%34.5], env=e0.3
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB38   <- [15]
  prom-           %38.0 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p4, e0.3
  cls             %38.1 = MkCls                    getGroupMembers@Prom(5)0, e0.3
  prom-           %38.2 = MkArg                    %38.1, getGroupMembers[0x55de2e63c430]_p5 (!refl), e0.3
  val?            %38.3 = StaticCall         !     sapply[0x55de290b12e0](%38.0, %38.2) { 0 1 } e0.3   <str->
  val?            %38.4 = %38.3
  goto BB14
BB39   <- [15]
  void                    Nop                !     
  val?^ | miss    %39.1 = %15.0
  dr              %39.2 = CallTarget@0x55de28541e00[Call#8]
  goto BB11
BB40   <- [13]
  val?~- | miss   %40.0 = CastType           d     dn %13.0
  void                    Visible            v     
  val?-           %40.2 = Force!<value>            %40.0,    <vec->
  val?-           %40.3 = %40.2
  goto BB14
BB41   <- [13]
  void                    Nop                !     
  val?^ | miss    %41.1 = %13.0
  dr              %41.2 = Typecheck@0x55de28541e00[Type#22]
  goto BB11
BB44   <- [22]
  prom-           %44.0 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p12, e0.3
  prom-           %44.1 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p13, e0.3
  val?            %44.2 = StaticCall         !v    .recMembers[0x55de2b3ffb70](%44.0, %44.1) from %0.4 e0.3   <vec->
  void                    StVar              lW    members, %44.2, e0.3
  goto BB10
BB45   <- [22]
  fs              %45.0 = FrameState         R     0x55de289aa0a0+391: [], env=e0.3
  void                    Deopt              !v    %45.0, CallTarget@0x55de28541e00[Call#7], %22.1   !
BB42   <- [21]
  prom-           %42.0 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p9, e0.3
  prom-           %42.1 = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p10, e0.3
  val?            %42.2 = StaticCall         !v    .recMembers[0x55de2b3ffb70](%42.0, %42.1) from %0.4 e0.3   <vec->
  void                    StVar              lW    members, %42.2, e0.3
  goto BB10
BB43   <- [21]
  void                    Nop                !     
  val?^ | miss    %43.1 = %21.0
  dr              %43.2 = CallTarget@0x55de28541e00[Call#5]
  goto BB19
BB14   <- [38, 40]
  val?            %14.0 = Phi                      %40.3:BB40, %38.4:BB38
  val?            %14.1 = %14.0
  void                    Return             l     %14.1
BB11   <- [39, 41]
  val?^ | miss    %11.0 = Phi                      %39.1:BB39, %41.1:BB41
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %39.2:BB39, %41.2:BB41
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55de289aa0a0+457: [%10.3], env=e0.3
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    group, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <cls>
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    groupMembers, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    members, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    getGroupMembers@Prom(5)0, e0.0
  void                    Return             l     %0.1
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    f, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    package, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    members, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .requirePackage, <0x55de28b50ba0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, getGroupMembers[0x55de2e63c430]_p11, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <env->
  void                    Return             l     %0.3
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    members, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    .methodsNamespace, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <env->
  void                    Return             l     %0.3

│ getGroupMembers[0x55de2e63c430]                                              │
└──────────────────────────────────────────────────────────────────────────────┘
